
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/dir
        UUID: FC737056-3B3F-5DD6-B590-8853A61B3ECD
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0x1e298[ (123544 bytes)
        ; File offset : [0; 123544[ (123544 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0x70 ; 'p'
0000000000000019         db  0x52 ; 'R'
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0x58 ; 'X'
0000000000000029         db  0x81 ; '.'
000000000000002a         db  0x09 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0x98 ; '.'
00000000000000d1         db  0xe2 ; '.'
00000000000000d2         db  0x01 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0x98 ; '.'
00000000000000d9         db  0xe2 ; '.'
00000000000000da         db  0x01 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0x50 ; 'P'
00000000000000f1         db  0xf0 ; '.'
00000000000000f2         db  0x01 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0x50 ; 'P'
00000000000000f9         db  0xf0 ; '.'
00000000000000fa         db  0x21 ; '!'
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0x50 ; 'P'                                         ; DATA XREF=main+4337, main+4371, print_name_with_quoting+775, strmode+116, filevercmp+443, filevercmp+754, human_readable+924, quotearg_free+87, same_nameat.part.0+51, same_nameat.part.0+108, rpl_fflush+18
0000000000000101         db  0xf0 ; '.'
0000000000000102         db  0x21 ; '!'
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0x18 ; '.'
0000000000000109         db  0x12 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0x08 ; '.'                                         ; DATA XREF=print_name_with_quoting+862
0000000000000111         db  0x25 ; '%'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'                                         ; DATA XREF=main+665
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'                                         ; DATA XREF=print_name_with_quoting+964
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0x98 ; '.'
0000000000000129         db  0xfa ; '.'
000000000000012a         db  0x01 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0x98 ; '.'                                         ; DATA XREF=print_name_with_quoting+917
0000000000000131         db  0xfa ; '.'
0000000000000132         db  0x21 ; '!'
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0x98 ; '.'                                         ; DATA XREF=same_nameat.part.0+17, same_nameat.part.0+198
0000000000000139         db  0xfa ; '.'
000000000000013a         db  0x21 ; '!'
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'                                         ; DATA XREF=print_name_with_quoting+1084
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'                                         ; DATA XREF=print_name_with_quoting+833
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'                                         ; DATA XREF=print_name_with_quoting+1053
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'                                         ; DATA XREF=sub_112b0+411, sub_112b0+482, sub_11d69+3
000000000000016e         db  0x00 ; '.'                                         ; DATA XREF=sub_112b0+445, sub_11d69+37, sub_11d69+68
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'                                         ; DATA XREF=sub_112b0+352, sub_112b0+502, sub_11d69+89
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'                                         ; DATA XREF=human_options+440
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'                                         ; DATA XREF=gobble_file.constprop.52+74, sub_112b0+332, sub_112b0+467, sub_11d69+53
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0xdc ; '.'
0000000000000199         db  0xad ; '.'
000000000000019a         db  0x01 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0xdc ; '.'
00000000000001a1         db  0xad ; '.'
00000000000001a2         db  0x01 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0xdc ; '.'
00000000000001a9         db  0xad ; '.'
00000000000001aa         db  0x01 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0x74 ; 't'
00000000000001b1         db  0x08 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0x74 ; 't'
00000000000001b9         db  0x08 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'                                         ; DATA XREF=print_name_with_quoting+928, print_file_name_and_frills+330, print_long_format+2057, length_of_file_name_and_frills+282, gobble_file.constprop.52+591, print_dir+1081, strmode+304, human_options+288, human_options+293, human_options+385, xstrtoul+573
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'                                         ; DATA XREF=print_name_with_quoting+883, print_name_with_quoting+888
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0x50 ; 'P'
0000000000000209         db  0xf0 ; '.'
000000000000020a         db  0x01 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0x50 ; 'P'
0000000000000211         db  0xf0 ; '.'
0000000000000212         db  0x21 ; '!'
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0x50 ; 'P'
0000000000000219         db  0xf0 ; '.'
000000000000021a         db  0x21 ; '!'
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0xb0 ; '.'
0000000000000221         db  0x0f ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0xb0 ; '.'
0000000000000229         db  0x0f ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0xfc ; '.'
0000000000000285         db  0x73 ; 's'
0000000000000286         db  0x70 ; 'p'
0000000000000287         db  0x56 ; 'V'                                         ; DATA XREF=human_readable+189
0000000000000288         db  0x3b ; ';'
0000000000000289         db  0x3f ; '?'
000000000000028a         db  0x5d ; ']'
000000000000028b         db  0xd6 ; '.'
000000000000028c         db  0xb5 ; '.'
000000000000028d         db  0x90 ; '.'
000000000000028e         db  0x88 ; '.'
000000000000028f         db  0x53 ; 'S'
0000000000000290         db  0xa6 ; '.'
0000000000000291         db  0x1b ; '.'
0000000000000292         db  0x3e ; '>'
0000000000000293         db  0xcd ; '.'
0000000000000294         db  0xb1 ; '.'
0000000000000295         db  0x66 ; 'f'
0000000000000296         db  0x05 ; '.'
0000000000000297         db  0x83 ; '.'


        ; Section .gnu.hash
        ; Range: [0x298; 0x300[ (104 bytes)
        ; File offset : [664; 768[ (104 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x6c ; 'l'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x02 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x07 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x26 ; '&'                                         ; DATA XREF=print_file_name_and_frills+8, print_file_name_and_frills+307, length_of_file_name_and_frills+5, length_of_file_name_and_frills+201
00000000000002a9         db  0xa1 ; '.'
00000000000002aa         db  0x48 ; 'H'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0x12 ; '.'
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0xae ; '.'
00000000000002af         db  0x16 ; '.'
00000000000002b0         db  0x20 ; ' '
00000000000002b1         db  0xd0 ; '.'
00000000000002b2         db  0x10 ; '.'
00000000000002b3         db  0x12 ; '.'
00000000000002b4         db  0x20 ; ' '
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x90 ; '.'
00000000000002b8         db  0x6c ; 'l'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x71 ; 'q'
00000000000002bd         db  0x00 ; '.'
00000000000002be         db  0x00 ; '.'
00000000000002bf         db  0x00 ; '.'
00000000000002c0         db  0x78 ; 'x'
00000000000002c1         db  0x00 ; '.'
00000000000002c2         db  0x00 ; '.'
00000000000002c3         db  0x00 ; '.'
00000000000002c4         db  0xb6 ; '.'
00000000000002c5         db  0xfa ; '.'
00000000000002c6         db  0x01 ; '.'
00000000000002c7         db  0xeb ; '.'
00000000000002c8         db  0x8c ; '.'
00000000000002c9         db  0xc7 ; '.'
00000000000002ca         db  0xe0 ; '.'
00000000000002cb         db  0x60 ; '`'
00000000000002cc         db  0x28 ; '('
00000000000002cd         db  0x1d ; '.'
00000000000002ce         db  0x8c ; '.'
00000000000002cf         db  0x1c ; '.'
00000000000002d0         db  0x7e ; '~'
00000000000002d1         db  0x6a ; 'j'
00000000000002d2         db  0x9a ; '.'
00000000000002d3         db  0x75 ; 'u'
00000000000002d4         db  0x03 ; '.'
00000000000002d5         db  0x3e ; '>'
00000000000002d6         db  0x7f ; '.'
00000000000002d7         db  0x5b ; '['
00000000000002d8         db  0xbc ; '.'
00000000000002d9         db  0x50 ; 'P'
00000000000002da         db  0x76 ; 'v'
00000000000002db         db  0x9e ; '.'
00000000000002dc         db  0x4e ; 'N'
00000000000002dd         db  0x8e ; '.'
00000000000002de         db  0xfd ; '.'
00000000000002df         db  0x7f ; '.'
00000000000002e0         db  0x96 ; '.'
00000000000002e1         db  0xa0 ; '.'
00000000000002e2         db  0x89 ; '.'
00000000000002e3         db  0x97 ; '.'
00000000000002e4         db  0x92 ; '.'
00000000000002e5         db  0x98 ; '.'
00000000000002e6         db  0x3c ; '<'
00000000000002e7         db  0xad ; '.'
00000000000002e8         db  0xce ; '.'
00000000000002e9         db  0x2c ; ','
00000000000002ea         db  0x63 ; 'c'
00000000000002eb         db  0x72 ; 'r'
00000000000002ec         db  0xe4 ; '.'
00000000000002ed         db  0x62 ; 'b'
00000000000002ee         db  0x41 ; 'A'
00000000000002ef         db  0xf5 ; '.'
00000000000002f0         db  0x39 ; '9'
00000000000002f1         db  0xf2 ; '.'
00000000000002f2         db  0x8b ; '.'
00000000000002f3         db  0x1c ; '.'
00000000000002f4         db  0x32 ; '2'
00000000000002f5         db  0xc4 ; '.'
00000000000002f6         db  0xf7 ; '.'
00000000000002f7         db  0x12 ; '.'
00000000000002f8         db  0xb2 ; '.'
00000000000002f9         db  0xa2 ; '.'
00000000000002fa         db  0xf7 ; '.'
00000000000002fb         db  0x12 ; '.'
00000000000002fc         db  0x4d ; 'M'
00000000000002fd         db  0x3e ; '>'
00000000000002fe         db  0xa5 ; '.'
00000000000002ff         db  0x0b ; '.'


        ; Section .dynsym
        ; Range: [0x300; 0xe88[ (2952 bytes)
        ; File offset : [768; 3720[ (2952 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x00 ; '.'
0000000000000311         db  0x00 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x00 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x98 ; '.'
0000000000000319         db  0x03 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x12 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0x00 ; '.'
0000000000000329         db  0x00 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x00 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x55 ; 'U'
0000000000000331         db  0x02 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x12 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0x00 ; '.'
0000000000000341         db  0x00 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x00 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0xbb ; '.'                                         ; DATA XREF=print_dir+16, print_dir+200
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x12 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0x00 ; '.'
0000000000000359         db  0x00 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x00 ; '.'
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0xbb ; '.'
0000000000000361         db  0x02 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x12 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0x00 ; '.'
0000000000000371         db  0x00 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x00 ; '.'
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x1f ; '.'                                         ; DATA XREF=gobble_file.constprop.52+22
0000000000000379         db  0x02 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x12 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0x00 ; '.'
0000000000000389         db  0x00 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x00 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0xab ; '.'
0000000000000391         db  0x04 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x12 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0x00 ; '.'
00000000000003a1         db  0x00 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x00 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0xf2 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x12 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0x00 ; '.'
00000000000003b9         db  0x00 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x00 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x93 ; '.'
00000000000003c1         db  0x01 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x12 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0x00 ; '.'
00000000000003d1         db  0x00 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x00 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x51 ; 'Q'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x12 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0x00 ; '.'                                         ; DATA XREF=xstrtoul+420, xstrtoumax+420
00000000000003e9         db  0x00 ; '.'                                         ; DATA XREF=print_long_format+1541, print_long_format+2364
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x00 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x29 ; ')'
00000000000003f1         db  0x05 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x20 ; ' '
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'                                         ; DATA XREF=sub_553f+50
0000000000000400         db  0x00 ; '.'                                         ; DATA XREF=main+4264, print_name_with_quoting+792, strmode+235, human_readable+80, human_options+458, __strftime_internal+1020, xstrtoul+437, xstrtoul+806, xstrtoul+878, xstrtoumax+437, xstrtoumax+806
0000000000000401         db  0x00 ; '.'                                         ; DATA XREF=areadlink_with_size+4, areadlink_with_size+46
0000000000000402         db  0x00 ; '.'
0000000000000403         db  0x00 ; '.'                                         ; DATA XREF=main+6492
0000000000000404         db  0x00 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'
0000000000000407         db  0x00 ; '.'
0000000000000408         db  0x34 ; '4'
0000000000000409         db  0x01 ; '.'
000000000000040a         db  0x00 ; '.'
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x12 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0x00 ; '.'
0000000000000419         db  0x00 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x00 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0xf8 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x12 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0x00 ; '.'
0000000000000431         db  0x00 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x00 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x12 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x12 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0x00 ; '.'
0000000000000449         db  0x00 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x00 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x4f ; 'O'
0000000000000451         db  0x03 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x12 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0x00 ; '.'
0000000000000461         db  0x00 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x00 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x57 ; 'W'
0000000000000469         db  0x01 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x12 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x00 ; '.'
0000000000000479         db  0x00 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x00 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x1e ; '.'
0000000000000481         db  0x03 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x12 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0x00 ; '.'
0000000000000491         db  0x00 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x00 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x61 ; 'a'
0000000000000499         db  0x03 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x12 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x00 ; '.'
00000000000004a9         db  0x00 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x00 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0xe5 ; '.'
00000000000004b1         db  0x01 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x12 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0x00 ; '.'
00000000000004c1         db  0x00 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x00 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x88 ; '.'                                         ; DATA XREF=__strftime_internal+19, __strftime_internal+233
00000000000004c9         db  0x01 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x12 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x00 ; '.'
00000000000004d9         db  0x00 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x00 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0xb2 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x12 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0x00 ; '.'
00000000000004f1         db  0x00 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x00 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0xca ; '.'
00000000000004f9         db  0x02 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x12 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0x00 ; '.'
0000000000000509         db  0x00 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x00 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x41 ; 'A'
0000000000000511         db  0x03 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x12 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0x00 ; '.'
0000000000000521         db  0x00 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x00 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0xb5 ; '.'
0000000000000529         db  0x01 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x12 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0x00 ; '.'
0000000000000539         db  0x00 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x00 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x1d ; '.'
0000000000000541         db  0x04 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x12 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0x00 ; '.'
0000000000000551         db  0x00 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x00 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x02 ; '.'
0000000000000559         db  0x02 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x12 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0x00 ; '.'
0000000000000569         db  0x00 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x00 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x3f ; '?'
0000000000000571         db  0x02 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x12 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0x00 ; '.'
0000000000000581         db  0x00 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x00 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x8a ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x12 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0x00 ; '.'
0000000000000599         db  0x00 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x00 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x19 ; '.'
00000000000005a1         db  0x04 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x12 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0x00 ; '.'
00000000000005b1         db  0x00 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x00 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x78 ; 'x'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x12 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0x00 ; '.'
00000000000005c9         db  0x00 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x00 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x40 ; '@'
00000000000005d1         db  0x01 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x12 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0x00 ; '.'
00000000000005e1         db  0x00 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x00 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x6e ; 'n'
00000000000005e9         db  0x01 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x12 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x00 ; '.'
00000000000005f9         db  0x00 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x00 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0xd8 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x12 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x00 ; '.'
0000000000000611         db  0x00 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x00 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0xc7 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x12 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0x00 ; '.'
0000000000000629         db  0x00 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x00 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0xd3 ; '.'
0000000000000631         db  0x02 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x12 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x00 ; '.'                                         ; DATA XREF=main+6523
0000000000000641         db  0x00 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x00 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x49 ; 'I'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x12 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x00 ; '.'                                         ; DATA XREF=abformat_init+12, abformat_init+383
0000000000000659         db  0x00 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x00 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x5a ; 'Z'
0000000000000661         db  0x03 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x12 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x00 ; '.'
0000000000000671         db  0x00 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x00 ; '.'                                         ; DATA XREF=main+6554
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x9c ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x12 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0x00 ; '.'
0000000000000689         db  0x00 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x00 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x28 ; '('
0000000000000691         db  0x04 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x12 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x00 ; '.'
00000000000006a1         db  0x00 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x00 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x7b ; '{'
00000000000006a9         db  0x04 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x12 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x00 ; '.'
00000000000006b9         db  0x00 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x00 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x84 ; '.'
00000000000006c1         db  0x04 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x12 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x00 ; '.'
00000000000006d1         db  0x00 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x00 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x60 ; '`'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x12 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0x00 ; '.'
00000000000006e9         db  0x00 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x00 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x19 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x12 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x00 ; '.'
0000000000000701         db  0x00 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x00 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0xf5 ; '.'
0000000000000709         db  0x01 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x12 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x00 ; '.'
0000000000000719         db  0x00 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x00 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x26 ; '&'
0000000000000721         db  0x01 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x12 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x00 ; '.'
0000000000000731         db  0x00 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x00 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x8f ; '.'
0000000000000739         db  0x04 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x12 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0x00 ; '.'
0000000000000749         db  0x00 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x00 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x2f ; '/'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x12 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0x00 ; '.'
0000000000000761         db  0x00 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x00 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x81 ; '.'
0000000000000769         db  0x01 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x12 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0x00 ; '.'
0000000000000779         db  0x00 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x00 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x92 ; '.'
0000000000000781         db  0x02 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x12 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x00 ; '.'
0000000000000791         db  0x00 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x00 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x10 ; '.'
0000000000000799         db  0x03 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x12 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0x00 ; '.'
00000000000007a9         db  0x00 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x00 ; '.'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0xfe ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x12 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x00 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0x00 ; '.'
00000000000007c1         db  0x00 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x00 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x93 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x12 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x00 ; '.'
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x00 ; '.'
00000000000007d9         db  0x00 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x00 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x54 ; 'T'
00000000000007e1         db  0x04 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x12 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x00 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0x00 ; '.'
00000000000007f1         db  0x00 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x00 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x00 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0xa4 ; '.'
00000000000007f9         db  0x01 ; '.'
00000000000007fa         db  0x00 ; '.'
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x12 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x00 ; '.'                                         ; DATA XREF=print_name_with_quoting+752, strmode+166
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x00 ; '.'
0000000000000809         db  0x00 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x00 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x00 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0xbc ; '.'
0000000000000811         db  0x01 ; '.'
0000000000000812         db  0x00 ; '.'
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x12 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x00 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0x00 ; '.'
0000000000000821         db  0x00 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x00 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x00 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0xb0 ; '.'
0000000000000829         db  0x04 ; '.'
000000000000082a         db  0x00 ; '.'
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x12 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x00 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x00 ; '.'
0000000000000839         db  0x00 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x00 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x00 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0x67 ; 'g'
0000000000000841         db  0x01 ; '.'
0000000000000842         db  0x00 ; '.'
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x12 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x00 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0x00 ; '.'
0000000000000851         db  0x00 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x00 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x00 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0x43 ; 'C'
0000000000000859         db  0x04 ; '.'
000000000000085a         db  0x00 ; '.'
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x12 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x00 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0x00 ; '.'
0000000000000869         db  0x00 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x00 ; '.'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x00 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0xab ; '.'
0000000000000871         db  0x00 ; '.'
0000000000000872         db  0x00 ; '.'
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x12 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x00 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0x00 ; '.'
0000000000000881         db  0x00 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x00 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x00 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0x66 ; 'f'
0000000000000889         db  0x04 ; '.'
000000000000088a         db  0x00 ; '.'
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x12 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x00 ; '.'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x00 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0x00 ; '.'
0000000000000899         db  0x00 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x00 ; '.'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x00 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0x5e ; '^'
00000000000008a1         db  0x01 ; '.'
00000000000008a2         db  0x00 ; '.'
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x12 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x00 ; '.'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x00 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x00 ; '.'
00000000000008b0         db  0x00 ; '.'
00000000000008b1         db  0x00 ; '.'
00000000000008b2         db  0x00 ; '.'
00000000000008b3         db  0x00 ; '.'
00000000000008b4         db  0x00 ; '.'
00000000000008b5         db  0x00 ; '.'
00000000000008b6         db  0x00 ; '.'
00000000000008b7         db  0x00 ; '.'
00000000000008b8         db  0x28 ; '('
00000000000008b9         db  0x03 ; '.'
00000000000008ba         db  0x00 ; '.'
00000000000008bb         db  0x00 ; '.'
00000000000008bc         db  0x12 ; '.'
00000000000008bd         db  0x00 ; '.'
00000000000008be         db  0x00 ; '.'
00000000000008bf         db  0x00 ; '.'
00000000000008c0         db  0x00 ; '.'
00000000000008c1         db  0x00 ; '.'
00000000000008c2         db  0x00 ; '.'
00000000000008c3         db  0x00 ; '.'
00000000000008c4         db  0x00 ; '.'
00000000000008c5         db  0x00 ; '.'
00000000000008c6         db  0x00 ; '.'
00000000000008c7         db  0x00 ; '.'
00000000000008c8         db  0x00 ; '.'
00000000000008c9         db  0x00 ; '.'
00000000000008ca         db  0x00 ; '.'
00000000000008cb         db  0x00 ; '.'
00000000000008cc         db  0x00 ; '.'
00000000000008cd         db  0x00 ; '.'
00000000000008ce         db  0x00 ; '.'
00000000000008cf         db  0x00 ; '.'
00000000000008d0         db  0x75 ; 'u'
00000000000008d1         db  0x01 ; '.'
00000000000008d2         db  0x00 ; '.'
00000000000008d3         db  0x00 ; '.'
00000000000008d4         db  0x12 ; '.'
00000000000008d5         db  0x00 ; '.'
00000000000008d6         db  0x00 ; '.'
00000000000008d7         db  0x00 ; '.'
00000000000008d8         db  0x00 ; '.'
00000000000008d9         db  0x00 ; '.'
00000000000008da         db  0x00 ; '.'
00000000000008db         db  0x00 ; '.'
00000000000008dc         db  0x00 ; '.'
00000000000008dd         db  0x00 ; '.'
00000000000008de         db  0x00 ; '.'
00000000000008df         db  0x00 ; '.'
00000000000008e0         db  0x00 ; '.'
00000000000008e1         db  0x00 ; '.'
00000000000008e2         db  0x00 ; '.'
00000000000008e3         db  0x00 ; '.'
00000000000008e4         db  0x00 ; '.'
00000000000008e5         db  0x00 ; '.'
00000000000008e6         db  0x00 ; '.'
00000000000008e7         db  0x00 ; '.'
00000000000008e8         db  0x45 ; 'E'
00000000000008e9         db  0x05 ; '.'
00000000000008ea         db  0x00 ; '.'
00000000000008eb         db  0x00 ; '.'
00000000000008ec         db  0x20 ; ' '
00000000000008ed         db  0x00 ; '.'
00000000000008ee         db  0x00 ; '.'
00000000000008ef         db  0x00 ; '.'
00000000000008f0         db  0x00 ; '.'
00000000000008f1         db  0x00 ; '.'
00000000000008f2         db  0x00 ; '.'
00000000000008f3         db  0x00 ; '.'
00000000000008f4         db  0x00 ; '.'
00000000000008f5         db  0x00 ; '.'
00000000000008f6         db  0x00 ; '.'
00000000000008f7         db  0x00 ; '.'
00000000000008f8         db  0x00 ; '.'
00000000000008f9         db  0x00 ; '.'
00000000000008fa         db  0x00 ; '.'
00000000000008fb         db  0x00 ; '.'
00000000000008fc         db  0x00 ; '.'
00000000000008fd         db  0x00 ; '.'
00000000000008fe         db  0x00 ; '.'
00000000000008ff         db  0x00 ; '.'
0000000000000900         db  0xfb ; '.'
0000000000000901         db  0x01 ; '.'
0000000000000902         db  0x00 ; '.'
0000000000000903         db  0x00 ; '.'
0000000000000904         db  0x12 ; '.'
0000000000000905         db  0x00 ; '.'
0000000000000906         db  0x00 ; '.'
0000000000000907         db  0x00 ; '.'
0000000000000908         db  0x00 ; '.'
0000000000000909         db  0x00 ; '.'
000000000000090a         db  0x00 ; '.'
000000000000090b         db  0x00 ; '.'
000000000000090c         db  0x00 ; '.'
000000000000090d         db  0x00 ; '.'
000000000000090e         db  0x00 ; '.'
000000000000090f         db  0x00 ; '.'
0000000000000910         db  0x00 ; '.'
0000000000000911         db  0x00 ; '.'
0000000000000912         db  0x00 ; '.'
0000000000000913         db  0x00 ; '.'
0000000000000914         db  0x00 ; '.'
0000000000000915         db  0x00 ; '.'
0000000000000916         db  0x00 ; '.'
0000000000000917         db  0x00 ; '.'
0000000000000918         db  0xdc ; '.'
0000000000000919         db  0x01 ; '.'
000000000000091a         db  0x00 ; '.'
000000000000091b         db  0x00 ; '.'
000000000000091c         db  0x12 ; '.'
000000000000091d         db  0x00 ; '.'
000000000000091e         db  0x00 ; '.'
000000000000091f         db  0x00 ; '.'
0000000000000920         db  0x00 ; '.'
0000000000000921         db  0x00 ; '.'
0000000000000922         db  0x00 ; '.'
0000000000000923         db  0x00 ; '.'
0000000000000924         db  0x00 ; '.'
0000000000000925         db  0x00 ; '.'
0000000000000926         db  0x00 ; '.'
0000000000000927         db  0x00 ; '.'
0000000000000928         db  0x00 ; '.'
0000000000000929         db  0x00 ; '.'
000000000000092a         db  0x00 ; '.'
000000000000092b         db  0x00 ; '.'
000000000000092c         db  0x00 ; '.'
000000000000092d         db  0x00 ; '.'
000000000000092e         db  0x00 ; '.'
000000000000092f         db  0x00 ; '.'
0000000000000930         db  0x2d ; '-'
0000000000000931         db  0x02 ; '.'
0000000000000932         db  0x00 ; '.'
0000000000000933         db  0x00 ; '.'
0000000000000934         db  0x12 ; '.'
0000000000000935         db  0x00 ; '.'
0000000000000936         db  0x00 ; '.'
0000000000000937         db  0x00 ; '.'
0000000000000938         db  0x00 ; '.'
0000000000000939         db  0x00 ; '.'
000000000000093a         db  0x00 ; '.'
000000000000093b         db  0x00 ; '.'
000000000000093c         db  0x00 ; '.'
000000000000093d         db  0x00 ; '.'
000000000000093e         db  0x00 ; '.'
000000000000093f         db  0x00 ; '.'
0000000000000940         db  0x00 ; '.'
0000000000000941         db  0x00 ; '.'
0000000000000942         db  0x00 ; '.'
0000000000000943         db  0x00 ; '.'
0000000000000944         db  0x00 ; '.'
0000000000000945         db  0x00 ; '.'
0000000000000946         db  0x00 ; '.'
0000000000000947         db  0x00 ; '.'
0000000000000948         db  0xe8 ; '.'
0000000000000949         db  0x02 ; '.'
000000000000094a         db  0x00 ; '.'
000000000000094b         db  0x00 ; '.'
000000000000094c         db  0x12 ; '.'
000000000000094d         db  0x00 ; '.'
000000000000094e         db  0x00 ; '.'
000000000000094f         db  0x00 ; '.'
0000000000000950         db  0x00 ; '.'
0000000000000951         db  0x00 ; '.'
0000000000000952         db  0x00 ; '.'
0000000000000953         db  0x00 ; '.'
0000000000000954         db  0x00 ; '.'
0000000000000955         db  0x00 ; '.'
0000000000000956         db  0x00 ; '.'
0000000000000957         db  0x00 ; '.'
0000000000000958         db  0x00 ; '.'
0000000000000959         db  0x00 ; '.'
000000000000095a         db  0x00 ; '.'
000000000000095b         db  0x00 ; '.'
000000000000095c         db  0x00 ; '.'
000000000000095d         db  0x00 ; '.'
000000000000095e         db  0x00 ; '.'
000000000000095f         db  0x00 ; '.'
0000000000000960         db  0x4a ; 'J'
0000000000000961         db  0x04 ; '.'
0000000000000962         db  0x00 ; '.'
0000000000000963         db  0x00 ; '.'
0000000000000964         db  0x12 ; '.'
0000000000000965         db  0x00 ; '.'
0000000000000966         db  0x00 ; '.'
0000000000000967         db  0x00 ; '.'
0000000000000968         db  0x00 ; '.'
0000000000000969         db  0x00 ; '.'
000000000000096a         db  0x00 ; '.'
000000000000096b         db  0x00 ; '.'
000000000000096c         db  0x00 ; '.'
000000000000096d         db  0x00 ; '.'
000000000000096e         db  0x00 ; '.'
000000000000096f         db  0x00 ; '.'
0000000000000970         db  0x00 ; '.'
0000000000000971         db  0x00 ; '.'
0000000000000972         db  0x00 ; '.'
0000000000000973         db  0x00 ; '.'
0000000000000974         db  0x00 ; '.'
0000000000000975         db  0x00 ; '.'
0000000000000976         db  0x00 ; '.'
0000000000000977         db  0x00 ; '.'
0000000000000978         db  0xfa ; '.'
0000000000000979         db  0x03 ; '.'
000000000000097a         db  0x00 ; '.'
000000000000097b         db  0x00 ; '.'
000000000000097c         db  0x12 ; '.'
000000000000097d         db  0x00 ; '.'
000000000000097e         db  0x00 ; '.'
000000000000097f         db  0x00 ; '.'
0000000000000980         db  0x00 ; '.'
0000000000000981         db  0x00 ; '.'
0000000000000982         db  0x00 ; '.'
0000000000000983         db  0x00 ; '.'
0000000000000984         db  0x00 ; '.'
0000000000000985         db  0x00 ; '.'
0000000000000986         db  0x00 ; '.'
0000000000000987         db  0x00 ; '.'
0000000000000988         db  0x00 ; '.'
0000000000000989         db  0x00 ; '.'
000000000000098a         db  0x00 ; '.'
000000000000098b         db  0x00 ; '.'
000000000000098c         db  0x00 ; '.'
000000000000098d         db  0x00 ; '.'
000000000000098e         db  0x00 ; '.'
000000000000098f         db  0x00 ; '.'
0000000000000990         db  0x37 ; '7'
0000000000000991         db  0x00 ; '.'
0000000000000992         db  0x00 ; '.'
0000000000000993         db  0x00 ; '.'
0000000000000994         db  0x12 ; '.'
0000000000000995         db  0x00 ; '.'
0000000000000996         db  0x00 ; '.'
0000000000000997         db  0x00 ; '.'
0000000000000998         db  0x00 ; '.'
0000000000000999         db  0x00 ; '.'
000000000000099a         db  0x00 ; '.'
000000000000099b         db  0x00 ; '.'
000000000000099c         db  0x00 ; '.'
000000000000099d         db  0x00 ; '.'
000000000000099e         db  0x00 ; '.'
000000000000099f         db  0x00 ; '.'
00000000000009a0         db  0x00 ; '.'
00000000000009a1         db  0x00 ; '.'
00000000000009a2         db  0x00 ; '.'
00000000000009a3         db  0x00 ; '.'
00000000000009a4         db  0x00 ; '.'
00000000000009a5         db  0x00 ; '.'
00000000000009a6         db  0x00 ; '.'
00000000000009a7         db  0x00 ; '.'
00000000000009a8         db  0x8a ; '.'
00000000000009a9         db  0x02 ; '.'
00000000000009aa         db  0x00 ; '.'
00000000000009ab         db  0x00 ; '.'
00000000000009ac         db  0x12 ; '.'
00000000000009ad         db  0x00 ; '.'
00000000000009ae         db  0x00 ; '.'
00000000000009af         db  0x00 ; '.'
00000000000009b0         db  0x00 ; '.'
00000000000009b1         db  0x00 ; '.'
00000000000009b2         db  0x00 ; '.'
00000000000009b3         db  0x00 ; '.'
00000000000009b4         db  0x00 ; '.'
00000000000009b5         db  0x00 ; '.'
00000000000009b6         db  0x00 ; '.'
00000000000009b7         db  0x00 ; '.'
00000000000009b8         db  0x00 ; '.'
00000000000009b9         db  0x00 ; '.'
00000000000009ba         db  0x00 ; '.'
00000000000009bb         db  0x00 ; '.'
00000000000009bc         db  0x00 ; '.'
00000000000009bd         db  0x00 ; '.'
00000000000009be         db  0x00 ; '.'
00000000000009bf         db  0x00 ; '.'
00000000000009c0         db  0x11 ; '.'
00000000000009c1         db  0x02 ; '.'
00000000000009c2         db  0x00 ; '.'
00000000000009c3         db  0x00 ; '.'
00000000000009c4         db  0x12 ; '.'
00000000000009c5         db  0x00 ; '.'
00000000000009c6         db  0x00 ; '.'
00000000000009c7         db  0x00 ; '.'
00000000000009c8         db  0x00 ; '.'
00000000000009c9         db  0x00 ; '.'
00000000000009ca         db  0x00 ; '.'
00000000000009cb         db  0x00 ; '.'
00000000000009cc         db  0x00 ; '.'
00000000000009cd         db  0x00 ; '.'
00000000000009ce         db  0x00 ; '.'
00000000000009cf         db  0x00 ; '.'
00000000000009d0         db  0x00 ; '.'
00000000000009d1         db  0x00 ; '.'
00000000000009d2         db  0x00 ; '.'
00000000000009d3         db  0x00 ; '.'
00000000000009d4         db  0x00 ; '.'
00000000000009d5         db  0x00 ; '.'
00000000000009d6         db  0x00 ; '.'
00000000000009d7         db  0x00 ; '.'
00000000000009d8         db  0x0b ; '.'
00000000000009d9         db  0x00 ; '.'
00000000000009da         db  0x00 ; '.'
00000000000009db         db  0x00 ; '.'
00000000000009dc         db  0x12 ; '.'
00000000000009dd         db  0x00 ; '.'
00000000000009de         db  0x00 ; '.'
00000000000009df         db  0x00 ; '.'
00000000000009e0         db  0x00 ; '.'
00000000000009e1         db  0x00 ; '.'
00000000000009e2         db  0x00 ; '.'
00000000000009e3         db  0x00 ; '.'
00000000000009e4         db  0x00 ; '.'
00000000000009e5         db  0x00 ; '.'
00000000000009e6         db  0x00 ; '.'
00000000000009e7         db  0x00 ; '.'
00000000000009e8         db  0x00 ; '.'
00000000000009e9         db  0x00 ; '.'
00000000000009ea         db  0x00 ; '.'
00000000000009eb         db  0x00 ; '.'
00000000000009ec         db  0x00 ; '.'
00000000000009ed         db  0x00 ; '.'
00000000000009ee         db  0x00 ; '.'
00000000000009ef         db  0x00 ; '.'
00000000000009f0         db  0x33 ; '3'
00000000000009f1         db  0x02 ; '.'
00000000000009f2         db  0x00 ; '.'
00000000000009f3         db  0x00 ; '.'
00000000000009f4         db  0x12 ; '.'
00000000000009f5         db  0x00 ; '.'
00000000000009f6         db  0x00 ; '.'
00000000000009f7         db  0x00 ; '.'
00000000000009f8         db  0x00 ; '.'
00000000000009f9         db  0x00 ; '.'
00000000000009fa         db  0x00 ; '.'
00000000000009fb         db  0x00 ; '.'
00000000000009fc         db  0x00 ; '.'
00000000000009fd         db  0x00 ; '.'
00000000000009fe         db  0x00 ; '.'
00000000000009ff         db  0x00 ; '.'
0000000000000a00         db  0x00 ; '.'
0000000000000a01         db  0x00 ; '.'
0000000000000a02         db  0x00 ; '.'
0000000000000a03         db  0x00 ; '.'
0000000000000a04         db  0x00 ; '.'
0000000000000a05         db  0x00 ; '.'
0000000000000a06         db  0x00 ; '.'
0000000000000a07         db  0x00 ; '.'
0000000000000a08         db  0xdf ; '.'
0000000000000a09         db  0x02 ; '.'
0000000000000a0a         db  0x00 ; '.'
0000000000000a0b         db  0x00 ; '.'
0000000000000a0c         db  0x12 ; '.'
0000000000000a0d         db  0x00 ; '.'
0000000000000a0e         db  0x00 ; '.'
0000000000000a0f         db  0x00 ; '.'
0000000000000a10         db  0x00 ; '.'
0000000000000a11         db  0x00 ; '.'
0000000000000a12         db  0x00 ; '.'
0000000000000a13         db  0x00 ; '.'
0000000000000a14         db  0x00 ; '.'
0000000000000a15         db  0x00 ; '.'
0000000000000a16         db  0x00 ; '.'
0000000000000a17         db  0x00 ; '.'
0000000000000a18         db  0x00 ; '.'
0000000000000a19         db  0x00 ; '.'
0000000000000a1a         db  0x00 ; '.'
0000000000000a1b         db  0x00 ; '.'
0000000000000a1c         db  0x00 ; '.'
0000000000000a1d         db  0x00 ; '.'
0000000000000a1e         db  0x00 ; '.'
0000000000000a1f         db  0x00 ; '.'
0000000000000a20         db  0x73 ; 's'
0000000000000a21         db  0x04 ; '.'
0000000000000a22         db  0x00 ; '.'
0000000000000a23         db  0x00 ; '.'
0000000000000a24         db  0x12 ; '.'
0000000000000a25         db  0x00 ; '.'
0000000000000a26         db  0x00 ; '.'
0000000000000a27         db  0x00 ; '.'
0000000000000a28         db  0x00 ; '.'
0000000000000a29         db  0x00 ; '.'
0000000000000a2a         db  0x00 ; '.'
0000000000000a2b         db  0x00 ; '.'
0000000000000a2c         db  0x00 ; '.'
0000000000000a2d         db  0x00 ; '.'
0000000000000a2e         db  0x00 ; '.'
0000000000000a2f         db  0x00 ; '.'
0000000000000a30         db  0x00 ; '.'
0000000000000a31         db  0x00 ; '.'
0000000000000a32         db  0x00 ; '.'
0000000000000a33         db  0x00 ; '.'
0000000000000a34         db  0x00 ; '.'
0000000000000a35         db  0x00 ; '.'
0000000000000a36         db  0x00 ; '.'
0000000000000a37         db  0x00 ; '.'
0000000000000a38         db  0x6a ; 'j'
0000000000000a39         db  0x03 ; '.'
0000000000000a3a         db  0x00 ; '.'
0000000000000a3b         db  0x00 ; '.'
0000000000000a3c         db  0x12 ; '.'
0000000000000a3d         db  0x00 ; '.'
0000000000000a3e         db  0x00 ; '.'
0000000000000a3f         db  0x00 ; '.'
0000000000000a40         db  0x00 ; '.'
0000000000000a41         db  0x00 ; '.'
0000000000000a42         db  0x00 ; '.'
0000000000000a43         db  0x00 ; '.'
0000000000000a44         db  0x00 ; '.'
0000000000000a45         db  0x00 ; '.'
0000000000000a46         db  0x00 ; '.'
0000000000000a47         db  0x00 ; '.'
0000000000000a48         db  0x00 ; '.'
0000000000000a49         db  0x00 ; '.'
0000000000000a4a         db  0x00 ; '.'
0000000000000a4b         db  0x00 ; '.'
0000000000000a4c         db  0x00 ; '.'
0000000000000a4d         db  0x00 ; '.'
0000000000000a4e         db  0x00 ; '.'
0000000000000a4f         db  0x00 ; '.'
0000000000000a50         db  0x78 ; 'x'
0000000000000a51         db  0x02 ; '.'
0000000000000a52         db  0x00 ; '.'
0000000000000a53         db  0x00 ; '.'
0000000000000a54         db  0x12 ; '.'
0000000000000a55         db  0x00 ; '.'
0000000000000a56         db  0x00 ; '.'
0000000000000a57         db  0x00 ; '.'
0000000000000a58         db  0x00 ; '.'
0000000000000a59         db  0x00 ; '.'
0000000000000a5a         db  0x00 ; '.'
0000000000000a5b         db  0x00 ; '.'
0000000000000a5c         db  0x00 ; '.'
0000000000000a5d         db  0x00 ; '.'
0000000000000a5e         db  0x00 ; '.'
0000000000000a5f         db  0x00 ; '.'
0000000000000a60         db  0x00 ; '.'
0000000000000a61         db  0x00 ; '.'
0000000000000a62         db  0x00 ; '.'
0000000000000a63         db  0x00 ; '.'
0000000000000a64         db  0x00 ; '.'
0000000000000a65         db  0x00 ; '.'
0000000000000a66         db  0x00 ; '.'
0000000000000a67         db  0x00 ; '.'
0000000000000a68         db  0x33 ; '3'
0000000000000a69         db  0x04 ; '.'
0000000000000a6a         db  0x00 ; '.'
0000000000000a6b         db  0x00 ; '.'
0000000000000a6c         db  0x12 ; '.'
0000000000000a6d         db  0x00 ; '.'
0000000000000a6e         db  0x00 ; '.'
0000000000000a6f         db  0x00 ; '.'
0000000000000a70         db  0x00 ; '.'
0000000000000a71         db  0x00 ; '.'
0000000000000a72         db  0x00 ; '.'
0000000000000a73         db  0x00 ; '.'
0000000000000a74         db  0x00 ; '.'
0000000000000a75         db  0x00 ; '.'
0000000000000a76         db  0x00 ; '.'
0000000000000a77         db  0x00 ; '.'
0000000000000a78         db  0x00 ; '.'
0000000000000a79         db  0x00 ; '.'
0000000000000a7a         db  0x00 ; '.'
0000000000000a7b         db  0x00 ; '.'
0000000000000a7c         db  0x00 ; '.'
0000000000000a7d         db  0x00 ; '.'
0000000000000a7e         db  0x00 ; '.'
0000000000000a7f         db  0x00 ; '.'
0000000000000a80         db  0xea ; '.'
0000000000000a81         db  0x00 ; '.'
0000000000000a82         db  0x00 ; '.'
0000000000000a83         db  0x00 ; '.'
0000000000000a84         db  0x12 ; '.'
0000000000000a85         db  0x00 ; '.'
0000000000000a86         db  0x00 ; '.'
0000000000000a87         db  0x00 ; '.'
0000000000000a88         db  0x00 ; '.'
0000000000000a89         db  0x00 ; '.'
0000000000000a8a         db  0x00 ; '.'
0000000000000a8b         db  0x00 ; '.'
0000000000000a8c         db  0x00 ; '.'
0000000000000a8d         db  0x00 ; '.'
0000000000000a8e         db  0x00 ; '.'
0000000000000a8f         db  0x00 ; '.'
0000000000000a90         db  0x00 ; '.'
0000000000000a91         db  0x00 ; '.'
0000000000000a92         db  0x00 ; '.'
0000000000000a93         db  0x00 ; '.'
0000000000000a94         db  0x00 ; '.'
0000000000000a95         db  0x00 ; '.'
0000000000000a96         db  0x00 ; '.'
0000000000000a97         db  0x00 ; '.'
0000000000000a98         db  0x82 ; '.'
0000000000000a99         db  0x00 ; '.'
0000000000000a9a         db  0x00 ; '.'
0000000000000a9b         db  0x00 ; '.'
0000000000000a9c         db  0x12 ; '.'
0000000000000a9d         db  0x00 ; '.'
0000000000000a9e         db  0x00 ; '.'
0000000000000a9f         db  0x00 ; '.'
0000000000000aa0         db  0x00 ; '.'
0000000000000aa1         db  0x00 ; '.'
0000000000000aa2         db  0x00 ; '.'
0000000000000aa3         db  0x00 ; '.'
0000000000000aa4         db  0x00 ; '.'
0000000000000aa5         db  0x00 ; '.'
0000000000000aa6         db  0x00 ; '.'
0000000000000aa7         db  0x00 ; '.'
0000000000000aa8         db  0x00 ; '.'
0000000000000aa9         db  0x00 ; '.'
0000000000000aaa         db  0x00 ; '.'
0000000000000aab         db  0x00 ; '.'
0000000000000aac         db  0x00 ; '.'
0000000000000aad         db  0x00 ; '.'
0000000000000aae         db  0x00 ; '.'
0000000000000aaf         db  0x00 ; '.'
0000000000000ab0         db  0x3f ; '?'
0000000000000ab1         db  0x00 ; '.'
0000000000000ab2         db  0x00 ; '.'
0000000000000ab3         db  0x00 ; '.'
0000000000000ab4         db  0x12 ; '.'
0000000000000ab5         db  0x00 ; '.'
0000000000000ab6         db  0x00 ; '.'
0000000000000ab7         db  0x00 ; '.'
0000000000000ab8         db  0x00 ; '.'
0000000000000ab9         db  0x00 ; '.'
0000000000000aba         db  0x00 ; '.'
0000000000000abb         db  0x00 ; '.'
0000000000000abc         db  0x00 ; '.'
0000000000000abd         db  0x00 ; '.'
0000000000000abe         db  0x00 ; '.'
0000000000000abf         db  0x00 ; '.'
0000000000000ac0         db  0x00 ; '.'
0000000000000ac1         db  0x00 ; '.'
0000000000000ac2         db  0x00 ; '.'
0000000000000ac3         db  0x00 ; '.'
0000000000000ac4         db  0x00 ; '.'
0000000000000ac5         db  0x00 ; '.'
0000000000000ac6         db  0x00 ; '.'
0000000000000ac7         db  0x00 ; '.'
0000000000000ac8         db  0x22 ; '"'
0000000000000ac9         db  0x00 ; '.'
0000000000000aca         db  0x00 ; '.'
0000000000000acb         db  0x00 ; '.'
0000000000000acc         db  0x12 ; '.'
0000000000000acd         db  0x00 ; '.'
0000000000000ace         db  0x00 ; '.'
0000000000000acf         db  0x00 ; '.'
0000000000000ad0         db  0x00 ; '.'
0000000000000ad1         db  0x00 ; '.'
0000000000000ad2         db  0x00 ; '.'
0000000000000ad3         db  0x00 ; '.'
0000000000000ad4         db  0x00 ; '.'
0000000000000ad5         db  0x00 ; '.'
0000000000000ad6         db  0x00 ; '.'
0000000000000ad7         db  0x00 ; '.'
0000000000000ad8         db  0x00 ; '.'
0000000000000ad9         db  0x00 ; '.'
0000000000000ada         db  0x00 ; '.'
0000000000000adb         db  0x00 ; '.'
0000000000000adc         db  0x00 ; '.'
0000000000000add         db  0x00 ; '.'
0000000000000ade         db  0x00 ; '.'
0000000000000adf         db  0x00 ; '.'
0000000000000ae0         db  0x18 ; '.'
0000000000000ae1         db  0x02 ; '.'
0000000000000ae2         db  0x00 ; '.'
0000000000000ae3         db  0x00 ; '.'
0000000000000ae4         db  0x12 ; '.'
0000000000000ae5         db  0x00 ; '.'
0000000000000ae6         db  0x00 ; '.'
0000000000000ae7         db  0x00 ; '.'
0000000000000ae8         db  0x00 ; '.'
0000000000000ae9         db  0x00 ; '.'
0000000000000aea         db  0x00 ; '.'
0000000000000aeb         db  0x00 ; '.'
0000000000000aec         db  0x00 ; '.'
0000000000000aed         db  0x00 ; '.'
0000000000000aee         db  0x00 ; '.'
0000000000000aef         db  0x00 ; '.'
0000000000000af0         db  0x00 ; '.'
0000000000000af1         db  0x00 ; '.'
0000000000000af2         db  0x00 ; '.'
0000000000000af3         db  0x00 ; '.'
0000000000000af4         db  0x00 ; '.'
0000000000000af5         db  0x00 ; '.'
0000000000000af6         db  0x00 ; '.'
0000000000000af7         db  0x00 ; '.'
0000000000000af8         db  0x1d ; '.'
0000000000000af9         db  0x01 ; '.'
0000000000000afa         db  0x00 ; '.'
0000000000000afb         db  0x00 ; '.'
0000000000000afc         db  0x12 ; '.'
0000000000000afd         db  0x00 ; '.'
0000000000000afe         db  0x00 ; '.'
0000000000000aff         db  0x00 ; '.'
0000000000000b00         db  0x00 ; '.'
0000000000000b01         db  0x00 ; '.'
0000000000000b02         db  0x00 ; '.'
0000000000000b03         db  0x00 ; '.'
0000000000000b04         db  0x00 ; '.'
0000000000000b05         db  0x00 ; '.'
0000000000000b06         db  0x00 ; '.'
0000000000000b07         db  0x00 ; '.'
0000000000000b08         db  0x00 ; '.'
0000000000000b09         db  0x00 ; '.'
0000000000000b0a         db  0x00 ; '.'
0000000000000b0b         db  0x00 ; '.'
0000000000000b0c         db  0x00 ; '.'
0000000000000b0d         db  0x00 ; '.'
0000000000000b0e         db  0x00 ; '.'
0000000000000b0f         db  0x00 ; '.'
0000000000000b10         db  0xab ; '.'
0000000000000b11         db  0x01 ; '.'
0000000000000b12         db  0x00 ; '.'
0000000000000b13         db  0x00 ; '.'
0000000000000b14         db  0x12 ; '.'
0000000000000b15         db  0x00 ; '.'
0000000000000b16         db  0x00 ; '.'
0000000000000b17         db  0x00 ; '.'
0000000000000b18         db  0x00 ; '.'
0000000000000b19         db  0x00 ; '.'
0000000000000b1a         db  0x00 ; '.'
0000000000000b1b         db  0x00 ; '.'
0000000000000b1c         db  0x00 ; '.'
0000000000000b1d         db  0x00 ; '.'
0000000000000b1e         db  0x00 ; '.'
0000000000000b1f         db  0x00 ; '.'
0000000000000b20         db  0x00 ; '.'
0000000000000b21         db  0x00 ; '.'
0000000000000b22         db  0x00 ; '.'
0000000000000b23         db  0x00 ; '.'
0000000000000b24         db  0x00 ; '.'
0000000000000b25         db  0x00 ; '.'
0000000000000b26         db  0x00 ; '.'
0000000000000b27         db  0x00 ; '.'
0000000000000b28         db  0x02 ; '.'
0000000000000b29         db  0x04 ; '.'
0000000000000b2a         db  0x00 ; '.'
0000000000000b2b         db  0x00 ; '.'
0000000000000b2c         db  0x12 ; '.'
0000000000000b2d         db  0x00 ; '.'
0000000000000b2e         db  0x00 ; '.'
0000000000000b2f         db  0x00 ; '.'
0000000000000b30         db  0x00 ; '.'
0000000000000b31         db  0x00 ; '.'
0000000000000b32         db  0x00 ; '.'
0000000000000b33         db  0x00 ; '.'
0000000000000b34         db  0x00 ; '.'
0000000000000b35         db  0x00 ; '.'
0000000000000b36         db  0x00 ; '.'
0000000000000b37         db  0x00 ; '.'
0000000000000b38         db  0x00 ; '.'
0000000000000b39         db  0x00 ; '.'
0000000000000b3a         db  0x00 ; '.'
0000000000000b3b         db  0x00 ; '.'
0000000000000b3c         db  0x00 ; '.'
0000000000000b3d         db  0x00 ; '.'
0000000000000b3e         db  0x00 ; '.'
0000000000000b3f         db  0x00 ; '.'
0000000000000b40         db  0xa5 ; '.'
0000000000000b41         db  0x00 ; '.'
0000000000000b42         db  0x00 ; '.'
0000000000000b43         db  0x00 ; '.'
0000000000000b44         db  0x12 ; '.'
0000000000000b45         db  0x00 ; '.'
0000000000000b46         db  0x00 ; '.'
0000000000000b47         db  0x00 ; '.'
0000000000000b48         db  0x00 ; '.'
0000000000000b49         db  0x00 ; '.'
0000000000000b4a         db  0x00 ; '.'
0000000000000b4b         db  0x00 ; '.'
0000000000000b4c         db  0x00 ; '.'
0000000000000b4d         db  0x00 ; '.'
0000000000000b4e         db  0x00 ; '.'
0000000000000b4f         db  0x00 ; '.'
0000000000000b50         db  0x00 ; '.'
0000000000000b51         db  0x00 ; '.'
0000000000000b52         db  0x00 ; '.'
0000000000000b53         db  0x00 ; '.'
0000000000000b54         db  0x00 ; '.'
0000000000000b55         db  0x00 ; '.'
0000000000000b56         db  0x00 ; '.'
0000000000000b57         db  0x00 ; '.'
0000000000000b58         db  0x6c ; 'l'
0000000000000b59         db  0x04 ; '.'
0000000000000b5a         db  0x00 ; '.'
0000000000000b5b         db  0x00 ; '.'
0000000000000b5c         db  0x12 ; '.'
0000000000000b5d         db  0x00 ; '.'
0000000000000b5e         db  0x00 ; '.'
0000000000000b5f         db  0x00 ; '.'
0000000000000b60         db  0x00 ; '.'
0000000000000b61         db  0x00 ; '.'
0000000000000b62         db  0x00 ; '.'
0000000000000b63         db  0x00 ; '.'
0000000000000b64         db  0x00 ; '.'
0000000000000b65         db  0x00 ; '.'
0000000000000b66         db  0x00 ; '.'
0000000000000b67         db  0x00 ; '.'
0000000000000b68         db  0x00 ; '.'
0000000000000b69         db  0x00 ; '.'
0000000000000b6a         db  0x00 ; '.'
0000000000000b6b         db  0x00 ; '.'
0000000000000b6c         db  0x00 ; '.'
0000000000000b6d         db  0x00 ; '.'
0000000000000b6e         db  0x00 ; '.'
0000000000000b6f         db  0x00 ; '.'
0000000000000b70         db  0xb3 ; '.'
0000000000000b71         db  0x01 ; '.'
0000000000000b72         db  0x00 ; '.'
0000000000000b73         db  0x00 ; '.'
0000000000000b74         db  0x12 ; '.'
0000000000000b75         db  0x00 ; '.'
0000000000000b76         db  0x00 ; '.'
0000000000000b77         db  0x00 ; '.'
0000000000000b78         db  0x00 ; '.'
0000000000000b79         db  0x00 ; '.'
0000000000000b7a         db  0x00 ; '.'
0000000000000b7b         db  0x00 ; '.'
0000000000000b7c         db  0x00 ; '.'
0000000000000b7d         db  0x00 ; '.'
0000000000000b7e         db  0x00 ; '.'
0000000000000b7f         db  0x00 ; '.'
0000000000000b80         db  0x00 ; '.'
0000000000000b81         db  0x00 ; '.'
0000000000000b82         db  0x00 ; '.'
0000000000000b83         db  0x00 ; '.'
0000000000000b84         db  0x00 ; '.'
0000000000000b85         db  0x00 ; '.'
0000000000000b86         db  0x00 ; '.'
0000000000000b87         db  0x00 ; '.'
0000000000000b88         db  0x09 ; '.'
0000000000000b89         db  0x02 ; '.'
0000000000000b8a         db  0x00 ; '.'
0000000000000b8b         db  0x00 ; '.'
0000000000000b8c         db  0x12 ; '.'
0000000000000b8d         db  0x00 ; '.'
0000000000000b8e         db  0x00 ; '.'
0000000000000b8f         db  0x00 ; '.'
0000000000000b90         db  0x00 ; '.'
0000000000000b91         db  0x00 ; '.'
0000000000000b92         db  0x00 ; '.'
0000000000000b93         db  0x00 ; '.'
0000000000000b94         db  0x00 ; '.'
0000000000000b95         db  0x00 ; '.'
0000000000000b96         db  0x00 ; '.'
0000000000000b97         db  0x00 ; '.'
0000000000000b98         db  0x00 ; '.'
0000000000000b99         db  0x00 ; '.'
0000000000000b9a         db  0x00 ; '.'
0000000000000b9b         db  0x00 ; '.'
0000000000000b9c         db  0x00 ; '.'
0000000000000b9d         db  0x00 ; '.'
0000000000000b9e         db  0x00 ; '.'
0000000000000b9f         db  0x00 ; '.'
0000000000000ba0         db  0xda ; '.'
0000000000000ba1         db  0x04 ; '.'
0000000000000ba2         db  0x00 ; '.'
0000000000000ba3         db  0x00 ; '.'
0000000000000ba4         db  0x12 ; '.'
0000000000000ba5         db  0x00 ; '.'
0000000000000ba6         db  0x00 ; '.'
0000000000000ba7         db  0x00 ; '.'
0000000000000ba8         db  0x00 ; '.'
0000000000000ba9         db  0x00 ; '.'
0000000000000baa         db  0x00 ; '.'
0000000000000bab         db  0x00 ; '.'
0000000000000bac         db  0x00 ; '.'
0000000000000bad         db  0x00 ; '.'
0000000000000bae         db  0x00 ; '.'
0000000000000baf         db  0x00 ; '.'
0000000000000bb0         db  0x00 ; '.'
0000000000000bb1         db  0x00 ; '.'
0000000000000bb2         db  0x00 ; '.'
0000000000000bb3         db  0x00 ; '.'
0000000000000bb4         db  0x00 ; '.'
0000000000000bb5         db  0x00 ; '.'
0000000000000bb6         db  0x00 ; '.'
0000000000000bb7         db  0x00 ; '.'
0000000000000bb8         db  0x8f ; '.'
0000000000000bb9         db  0x03 ; '.'
0000000000000bba         db  0x00 ; '.'
0000000000000bbb         db  0x00 ; '.'
0000000000000bbc         db  0x12 ; '.'
0000000000000bbd         db  0x00 ; '.'
0000000000000bbe         db  0x00 ; '.'
0000000000000bbf         db  0x00 ; '.'
0000000000000bc0         db  0x00 ; '.'
0000000000000bc1         db  0x00 ; '.'
0000000000000bc2         db  0x00 ; '.'
0000000000000bc3         db  0x00 ; '.'
0000000000000bc4         db  0x00 ; '.'
0000000000000bc5         db  0x00 ; '.'
0000000000000bc6         db  0x00 ; '.'
0000000000000bc7         db  0x00 ; '.'
0000000000000bc8         db  0x00 ; '.'
0000000000000bc9         db  0x00 ; '.'
0000000000000bca         db  0x00 ; '.'
0000000000000bcb         db  0x00 ; '.'
0000000000000bcc         db  0x00 ; '.'
0000000000000bcd         db  0x00 ; '.'
0000000000000bce         db  0x00 ; '.'
0000000000000bcf         db  0x00 ; '.'
0000000000000bd0         db  0xef ; '.'
0000000000000bd1         db  0x02 ; '.'
0000000000000bd2         db  0x00 ; '.'
0000000000000bd3         db  0x00 ; '.'
0000000000000bd4         db  0x12 ; '.'
0000000000000bd5         db  0x00 ; '.'
0000000000000bd6         db  0x00 ; '.'
0000000000000bd7         db  0x00 ; '.'
0000000000000bd8         db  0x00 ; '.'
0000000000000bd9         db  0x00 ; '.'
0000000000000bda         db  0x00 ; '.'
0000000000000bdb         db  0x00 ; '.'
0000000000000bdc         db  0x00 ; '.'
0000000000000bdd         db  0x00 ; '.'
0000000000000bde         db  0x00 ; '.'
0000000000000bdf         db  0x00 ; '.'
0000000000000be0         db  0x00 ; '.'
0000000000000be1         db  0x00 ; '.'
0000000000000be2         db  0x00 ; '.'
0000000000000be3         db  0x00 ; '.'
0000000000000be4         db  0x00 ; '.'
0000000000000be5         db  0x00 ; '.'
0000000000000be6         db  0x00 ; '.'
0000000000000be7         db  0x00 ; '.'
0000000000000be8         db  0x35 ; '5'
0000000000000be9         db  0x03 ; '.'
0000000000000bea         db  0x00 ; '.'
0000000000000beb         db  0x00 ; '.'
0000000000000bec         db  0x12 ; '.'
0000000000000bed         db  0x00 ; '.'
0000000000000bee         db  0x00 ; '.'
0000000000000bef         db  0x00 ; '.'
0000000000000bf0         db  0x00 ; '.'
0000000000000bf1         db  0x00 ; '.'
0000000000000bf2         db  0x00 ; '.'
0000000000000bf3         db  0x00 ; '.'
0000000000000bf4         db  0x00 ; '.'
0000000000000bf5         db  0x00 ; '.'
0000000000000bf6         db  0x00 ; '.'
0000000000000bf7         db  0x00 ; '.'
0000000000000bf8         db  0x00 ; '.'
0000000000000bf9         db  0x00 ; '.'
0000000000000bfa         db  0x00 ; '.'
0000000000000bfb         db  0x00 ; '.'
0000000000000bfc         db  0x00 ; '.'
0000000000000bfd         db  0x00 ; '.'
0000000000000bfe         db  0x00 ; '.'
0000000000000bff         db  0x00 ; '.'
0000000000000c00         db  0xf9 ; '.'
0000000000000c01         db  0x00 ; '.'
0000000000000c02         db  0x00 ; '.'
0000000000000c03         db  0x00 ; '.'
0000000000000c04         db  0x12 ; '.'
0000000000000c05         db  0x00 ; '.'
0000000000000c06         db  0x00 ; '.'
0000000000000c07         db  0x00 ; '.'
0000000000000c08         db  0x00 ; '.'
0000000000000c09         db  0x00 ; '.'
0000000000000c0a         db  0x00 ; '.'
0000000000000c0b         db  0x00 ; '.'
0000000000000c0c         db  0x00 ; '.'
0000000000000c0d         db  0x00 ; '.'
0000000000000c0e         db  0x00 ; '.'
0000000000000c0f         db  0x00 ; '.'
0000000000000c10         db  0x00 ; '.'
0000000000000c11         db  0x00 ; '.'
0000000000000c12         db  0x00 ; '.'
0000000000000c13         db  0x00 ; '.'
0000000000000c14         db  0x00 ; '.'
0000000000000c15         db  0x00 ; '.'
0000000000000c16         db  0x00 ; '.'
0000000000000c17         db  0x00 ; '.'
0000000000000c18         db  0x17 ; '.'
0000000000000c19         db  0x03 ; '.'
0000000000000c1a         db  0x00 ; '.'
0000000000000c1b         db  0x00 ; '.'
0000000000000c1c         db  0x12 ; '.'
0000000000000c1d         db  0x00 ; '.'
0000000000000c1e         db  0x00 ; '.'
0000000000000c1f         db  0x00 ; '.'
0000000000000c20         db  0x00 ; '.'
0000000000000c21         db  0x00 ; '.'
0000000000000c22         db  0x00 ; '.'
0000000000000c23         db  0x00 ; '.'
0000000000000c24         db  0x00 ; '.'
0000000000000c25         db  0x00 ; '.'
0000000000000c26         db  0x00 ; '.'
0000000000000c27         db  0x00 ; '.'
0000000000000c28         db  0x00 ; '.'
0000000000000c29         db  0x00 ; '.'
0000000000000c2a         db  0x00 ; '.'
0000000000000c2b         db  0x00 ; '.'
0000000000000c2c         db  0x00 ; '.'
0000000000000c2d         db  0x00 ; '.'
0000000000000c2e         db  0x00 ; '.'
0000000000000c2f         db  0x00 ; '.'
0000000000000c30         db  0xc4 ; '.'
0000000000000c31         db  0x01 ; '.'
0000000000000c32         db  0x00 ; '.'
0000000000000c33         db  0x00 ; '.'
0000000000000c34         db  0x12 ; '.'
0000000000000c35         db  0x00 ; '.'
0000000000000c36         db  0x00 ; '.'
0000000000000c37         db  0x00 ; '.'
0000000000000c38         db  0x00 ; '.'
0000000000000c39         db  0x00 ; '.'
0000000000000c3a         db  0x00 ; '.'
0000000000000c3b         db  0x00 ; '.'
0000000000000c3c         db  0x00 ; '.'
0000000000000c3d         db  0x00 ; '.'
0000000000000c3e         db  0x00 ; '.'
0000000000000c3f         db  0x00 ; '.'
0000000000000c40         db  0x00 ; '.'
0000000000000c41         db  0x00 ; '.'
0000000000000c42         db  0x00 ; '.'
0000000000000c43         db  0x00 ; '.'
0000000000000c44         db  0x00 ; '.'
0000000000000c45         db  0x00 ; '.'
0000000000000c46         db  0x00 ; '.'
0000000000000c47         db  0x00 ; '.'
0000000000000c48         db  0x54 ; 'T'
0000000000000c49         db  0x05 ; '.'
0000000000000c4a         db  0x00 ; '.'
0000000000000c4b         db  0x00 ; '.'
0000000000000c4c         db  0x20 ; ' '
0000000000000c4d         db  0x00 ; '.'
0000000000000c4e         db  0x00 ; '.'
0000000000000c4f         db  0x00 ; '.'
0000000000000c50         db  0x00 ; '.'
0000000000000c51         db  0x00 ; '.'
0000000000000c52         db  0x00 ; '.'
0000000000000c53         db  0x00 ; '.'
0000000000000c54         db  0x00 ; '.'
0000000000000c55         db  0x00 ; '.'
0000000000000c56         db  0x00 ; '.'
0000000000000c57         db  0x00 ; '.'
0000000000000c58         db  0x00 ; '.'
0000000000000c59         db  0x00 ; '.'
0000000000000c5a         db  0x00 ; '.'
0000000000000c5b         db  0x00 ; '.'
0000000000000c5c         db  0x00 ; '.'
0000000000000c5d         db  0x00 ; '.'
0000000000000c5e         db  0x00 ; '.'
0000000000000c5f         db  0x00 ; '.'
0000000000000c60         db  0x68 ; 'h'
0000000000000c61         db  0x00 ; '.'
0000000000000c62         db  0x00 ; '.'
0000000000000c63         db  0x00 ; '.'
0000000000000c64         db  0x12 ; '.'
0000000000000c65         db  0x00 ; '.'
0000000000000c66         db  0x00 ; '.'
0000000000000c67         db  0x00 ; '.'
0000000000000c68         db  0x00 ; '.'
0000000000000c69         db  0x00 ; '.'
0000000000000c6a         db  0x00 ; '.'
0000000000000c6b         db  0x00 ; '.'
0000000000000c6c         db  0x00 ; '.'
0000000000000c6d         db  0x00 ; '.'
0000000000000c6e         db  0x00 ; '.'
0000000000000c6f         db  0x00 ; '.'
0000000000000c70         db  0x00 ; '.'
0000000000000c71         db  0x00 ; '.'
0000000000000c72         db  0x00 ; '.'
0000000000000c73         db  0x00 ; '.'
0000000000000c74         db  0x00 ; '.'
0000000000000c75         db  0x00 ; '.'
0000000000000c76         db  0x00 ; '.'
0000000000000c77         db  0x00 ; '.'
0000000000000c78         db  0x25 ; '%'
0000000000000c79         db  0x02 ; '.'
0000000000000c7a         db  0x00 ; '.'
0000000000000c7b         db  0x00 ; '.'
0000000000000c7c         db  0x12 ; '.'
0000000000000c7d         db  0x00 ; '.'
0000000000000c7e         db  0x00 ; '.'
0000000000000c7f         db  0x00 ; '.'
0000000000000c80         db  0x00 ; '.'
0000000000000c81         db  0x00 ; '.'
0000000000000c82         db  0x00 ; '.'
0000000000000c83         db  0x00 ; '.'
0000000000000c84         db  0x00 ; '.'
0000000000000c85         db  0x00 ; '.'
0000000000000c86         db  0x00 ; '.'
0000000000000c87         db  0x00 ; '.'
0000000000000c88         db  0x00 ; '.'
0000000000000c89         db  0x00 ; '.'
0000000000000c8a         db  0x00 ; '.'
0000000000000c8b         db  0x00 ; '.'
0000000000000c8c         db  0x00 ; '.'
0000000000000c8d         db  0x00 ; '.'
0000000000000c8e         db  0x00 ; '.'
0000000000000c8f         db  0x00 ; '.'
0000000000000c90         db  0xe1 ; '.'
0000000000000c91         db  0x00 ; '.'
0000000000000c92         db  0x00 ; '.'
0000000000000c93         db  0x00 ; '.'
0000000000000c94         db  0x12 ; '.'
0000000000000c95         db  0x00 ; '.'
0000000000000c96         db  0x00 ; '.'
0000000000000c97         db  0x00 ; '.'
0000000000000c98         db  0x00 ; '.'
0000000000000c99         db  0x00 ; '.'
0000000000000c9a         db  0x00 ; '.'
0000000000000c9b         db  0x00 ; '.'
0000000000000c9c         db  0x00 ; '.'
0000000000000c9d         db  0x00 ; '.'
0000000000000c9e         db  0x00 ; '.'
0000000000000c9f         db  0x00 ; '.'
0000000000000ca0         db  0x00 ; '.'
0000000000000ca1         db  0x00 ; '.'
0000000000000ca2         db  0x00 ; '.'
0000000000000ca3         db  0x00 ; '.'
0000000000000ca4         db  0x00 ; '.'
0000000000000ca5         db  0x00 ; '.'
0000000000000ca6         db  0x00 ; '.'
0000000000000ca7         db  0x00 ; '.'
0000000000000ca8         db  0xdd ; '.'
0000000000000ca9         db  0x03 ; '.'
0000000000000caa         db  0x00 ; '.'
0000000000000cab         db  0x00 ; '.'
0000000000000cac         db  0x22 ; '"'
0000000000000cad         db  0x00 ; '.'
0000000000000cae         db  0x00 ; '.'
0000000000000caf         db  0x00 ; '.'
0000000000000cb0         db  0x00 ; '.'
0000000000000cb1         db  0x00 ; '.'
0000000000000cb2         db  0x00 ; '.'
0000000000000cb3         db  0x00 ; '.'
0000000000000cb4         db  0x00 ; '.'
0000000000000cb5         db  0x00 ; '.'
0000000000000cb6         db  0x00 ; '.'
0000000000000cb7         db  0x00 ; '.'
0000000000000cb8         db  0x00 ; '.'
0000000000000cb9         db  0x00 ; '.'
0000000000000cba         db  0x00 ; '.'
0000000000000cbb         db  0x00 ; '.'
0000000000000cbc         db  0x00 ; '.'
0000000000000cbd         db  0x00 ; '.'
0000000000000cbe         db  0x00 ; '.'
0000000000000cbf         db  0x00 ; '.'
0000000000000cc0         db  0xd2 ; '.'
0000000000000cc1         db  0x01 ; '.'
0000000000000cc2         db  0x00 ; '.'
0000000000000cc3         db  0x00 ; '.'
0000000000000cc4         db  0x12 ; '.'
0000000000000cc5         db  0x00 ; '.'
0000000000000cc6         db  0x00 ; '.'
0000000000000cc7         db  0x00 ; '.'
0000000000000cc8         db  0x00 ; '.'
0000000000000cc9         db  0x00 ; '.'
0000000000000cca         db  0x00 ; '.'
0000000000000ccb         db  0x00 ; '.'
0000000000000ccc         db  0x00 ; '.'
0000000000000ccd         db  0x00 ; '.'
0000000000000cce         db  0x00 ; '.'
0000000000000ccf         db  0x00 ; '.'
0000000000000cd0         db  0x00 ; '.'
0000000000000cd1         db  0x00 ; '.'
0000000000000cd2         db  0x00 ; '.'
0000000000000cd3         db  0x00 ; '.'
0000000000000cd4         db  0x00 ; '.'
0000000000000cd5         db  0x00 ; '.'
0000000000000cd6         db  0x00 ; '.'
0000000000000cd7         db  0x00 ; '.'
0000000000000cd8         db  0xac ; '.'
0000000000000cd9         db  0x03 ; '.'
0000000000000cda         db  0x00 ; '.'
0000000000000cdb         db  0x00 ; '.'
0000000000000cdc         db  0x12 ; '.'
0000000000000cdd         db  0x00 ; '.'
0000000000000cde         db  0x00 ; '.'
0000000000000cdf         db  0x00 ; '.'
0000000000000ce0         db  0x00 ; '.'
0000000000000ce1         db  0x00 ; '.'
0000000000000ce2         db  0x00 ; '.'
0000000000000ce3         db  0x00 ; '.'
0000000000000ce4         db  0x00 ; '.'
0000000000000ce5         db  0x00 ; '.'
0000000000000ce6         db  0x00 ; '.'
0000000000000ce7         db  0x00 ; '.'
0000000000000ce8         db  0x00 ; '.'
0000000000000ce9         db  0x00 ; '.'
0000000000000cea         db  0x00 ; '.'
0000000000000ceb         db  0x00 ; '.'
0000000000000cec         db  0x00 ; '.'
0000000000000ced         db  0x00 ; '.'
0000000000000cee         db  0x00 ; '.'
0000000000000cef         db  0x00 ; '.'
0000000000000cf0         db  0x47 ; 'G'
0000000000000cf1         db  0x02 ; '.'
0000000000000cf2         db  0x00 ; '.'
0000000000000cf3         db  0x00 ; '.'
0000000000000cf4         db  0x12 ; '.'
0000000000000cf5         db  0x00 ; '.'
0000000000000cf6         db  0x00 ; '.'
0000000000000cf7         db  0x00 ; '.'
0000000000000cf8         db  0x00 ; '.'
0000000000000cf9         db  0x00 ; '.'
0000000000000cfa         db  0x00 ; '.'
0000000000000cfb         db  0x00 ; '.'
0000000000000cfc         db  0x00 ; '.'
0000000000000cfd         db  0x00 ; '.'
0000000000000cfe         db  0x00 ; '.'
0000000000000cff         db  0x00 ; '.'
0000000000000d00         db  0x00 ; '.'
0000000000000d01         db  0x00 ; '.'
0000000000000d02         db  0x00 ; '.'
0000000000000d03         db  0x00 ; '.'
0000000000000d04         db  0x00 ; '.'
0000000000000d05         db  0x00 ; '.'
0000000000000d06         db  0x00 ; '.'
0000000000000d07         db  0x00 ; '.'
0000000000000d08         db  0xec ; '.'
0000000000000d09         db  0x03 ; '.'
0000000000000d0a         db  0x00 ; '.'
0000000000000d0b         db  0x00 ; '.'
0000000000000d0c         db  0x12 ; '.'
0000000000000d0d         db  0x00 ; '.'
0000000000000d0e         db  0x00 ; '.'
0000000000000d0f         db  0x00 ; '.'
0000000000000d10         db  0x00 ; '.'
0000000000000d11         db  0x00 ; '.'
0000000000000d12         db  0x00 ; '.'
0000000000000d13         db  0x00 ; '.'
0000000000000d14         db  0x00 ; '.'
0000000000000d15         db  0x00 ; '.'
0000000000000d16         db  0x00 ; '.'
0000000000000d17         db  0x00 ; '.'
0000000000000d18         db  0x00 ; '.'
0000000000000d19         db  0x00 ; '.'
0000000000000d1a         db  0x00 ; '.'
0000000000000d1b         db  0x00 ; '.'
0000000000000d1c         db  0x00 ; '.'
0000000000000d1d         db  0x00 ; '.'
0000000000000d1e         db  0x00 ; '.'
0000000000000d1f         db  0x00 ; '.'
0000000000000d20         db  0xc0 ; '.'
0000000000000d21         db  0x03 ; '.'
0000000000000d22         db  0x00 ; '.'
0000000000000d23         db  0x00 ; '.'
0000000000000d24         db  0x11 ; '.'
0000000000000d25         db  0x00 ; '.'
0000000000000d26         db  0x18 ; '.'
0000000000000d27         db  0x00 ; '.'
0000000000000d28         db  0x60 ; '`'
0000000000000d29         db  0x02 ; '.'
0000000000000d2a         db  0x22 ; '"'
0000000000000d2b         db  0x00 ; '.'
0000000000000d2c         db  0x00 ; '.'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x00 ; '.'
0000000000000d2f         db  0x00 ; '.'
0000000000000d30         db  0x08 ; '.'
0000000000000d31         db  0x00 ; '.'
0000000000000d32         db  0x00 ; '.'
0000000000000d33         db  0x00 ; '.'
0000000000000d34         db  0x00 ; '.'
0000000000000d35         db  0x00 ; '.'
0000000000000d36         db  0x00 ; '.'
0000000000000d37         db  0x00 ; '.'
0000000000000d38         db  0xa9 ; '.'
0000000000000d39         db  0x02 ; '.'
0000000000000d3a         db  0x00 ; '.'
0000000000000d3b         db  0x00 ; '.'
0000000000000d3c         db  0x12 ; '.'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x0e ; '.'
0000000000000d3f         db  0x00 ; '.'
0000000000000d40         db  0x30 ; '0'
0000000000000d41         db  0x55 ; 'U'
0000000000000d42         db  0x01 ; '.'
0000000000000d43         db  0x00 ; '.'
0000000000000d44         db  0x00 ; '.'
0000000000000d45         db  0x00 ; '.'
0000000000000d46         db  0x00 ; '.'
0000000000000d47         db  0x00 ; '.'
0000000000000d48         db  0xeb ; '.'
0000000000000d49         db  0x00 ; '.'
0000000000000d4a         db  0x00 ; '.'
0000000000000d4b         db  0x00 ; '.'
0000000000000d4c         db  0x00 ; '.'
0000000000000d4d         db  0x00 ; '.'
0000000000000d4e         db  0x00 ; '.'
0000000000000d4f         db  0x00 ; '.'
0000000000000d50         db  0xee ; '.'
0000000000000d51         db  0x01 ; '.'
0000000000000d52         db  0x00 ; '.'
0000000000000d53         db  0x00 ; '.'
0000000000000d54         db  0x11 ; '.'
0000000000000d55         db  0x00 ; '.'
0000000000000d56         db  0x19 ; '.'
0000000000000d57         db  0x00 ; '.'
0000000000000d58         db  0x88 ; '.'
0000000000000d59         db  0x02 ; '.'
0000000000000d5a         db  0x22 ; '"'
0000000000000d5b         db  0x00 ; '.'
0000000000000d5c         db  0x00 ; '.'
0000000000000d5d         db  0x00 ; '.'
0000000000000d5e         db  0x00 ; '.'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0x08 ; '.'
0000000000000d61         db  0x00 ; '.'
0000000000000d62         db  0x00 ; '.'
0000000000000d63         db  0x00 ; '.'
0000000000000d64         db  0x00 ; '.'
0000000000000d65         db  0x00 ; '.'
0000000000000d66         db  0x00 ; '.'
0000000000000d67         db  0x00 ; '.'
0000000000000d68         db  0x98 ; '.'
0000000000000d69         db  0x02 ; '.'
0000000000000d6a         db  0x00 ; '.'
0000000000000d6b         db  0x00 ; '.'
0000000000000d6c         db  0x12 ; '.'
0000000000000d6d         db  0x00 ; '.'
0000000000000d6e         db  0x0e ; '.'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0x10 ; '.'
0000000000000d71         db  0x55 ; 'U'
0000000000000d72         db  0x01 ; '.'
0000000000000d73         db  0x00 ; '.'
0000000000000d74         db  0x00 ; '.'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x00 ; '.'
0000000000000d77         db  0x00 ; '.'
0000000000000d78         db  0x15 ; '.'
0000000000000d79         db  0x00 ; '.'
0000000000000d7a         db  0x00 ; '.'
0000000000000d7b         db  0x00 ; '.'
0000000000000d7c         db  0x00 ; '.'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x00 ; '.'
0000000000000d7f         db  0x00 ; '.'
0000000000000d80         db  0x5c ; '\'
0000000000000d81         db  0x02 ; '.'
0000000000000d82         db  0x00 ; '.'
0000000000000d83         db  0x00 ; '.'
0000000000000d84         db  0x12 ; '.'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x0e ; '.'
0000000000000d87         db  0x00 ; '.'
0000000000000d88         db  0x20 ; ' '
0000000000000d89         db  0x56 ; 'V'
0000000000000d8a         db  0x01 ; '.'
0000000000000d8b         db  0x00 ; '.'
0000000000000d8c         db  0x00 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x00 ; '.'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0x38 ; '8'
0000000000000d91         db  0x00 ; '.'
0000000000000d92         db  0x00 ; '.'
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x00 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x00 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0xbf ; '.'
0000000000000d99         db  0x04 ; '.'
0000000000000d9a         db  0x00 ; '.'
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x11 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x19 ; '.'
0000000000000d9f         db  0x00 ; '.'
0000000000000da0         db  0x80 ; '.'
0000000000000da1         db  0x02 ; '.'
0000000000000da2         db  0x22 ; '"'
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x00 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x00 ; '.'
0000000000000da7         db  0x00 ; '.'
0000000000000da8         db  0x08 ; '.'
0000000000000da9         db  0x00 ; '.'
0000000000000daa         db  0x00 ; '.'
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x00 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x00 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0x0a ; '.'
0000000000000db1         db  0x04 ; '.'
0000000000000db2         db  0x00 ; '.'
0000000000000db3         db  0x00 ; '.'
0000000000000db4         db  0x12 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x0e ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0xf0 ; '.'
0000000000000db9         db  0x54 ; 'T'
0000000000000dba         db  0x01 ; '.'
0000000000000dbb         db  0x00 ; '.'
0000000000000dbc         db  0x00 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x00 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0x11 ; '.'
0000000000000dc1         db  0x00 ; '.'
0000000000000dc2         db  0x00 ; '.'
0000000000000dc3         db  0x00 ; '.'
0000000000000dc4         db  0x00 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x00 ; '.'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0x05 ; '.'
0000000000000dc9         db  0x01 ; '.'
0000000000000dca         db  0x00 ; '.'
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x21 ; '!'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x19 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0xa0 ; '.'
0000000000000dd1         db  0x02 ; '.'
0000000000000dd2         db  0x22 ; '"'
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x00 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x00 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0x08 ; '.'
0000000000000dd9         db  0x00 ; '.'
0000000000000dda         db  0x00 ; '.'
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x00 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x00 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0xfb ; '.'
0000000000000de1         db  0x02 ; '.'
0000000000000de2         db  0x00 ; '.'
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x12 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x0e ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0xd0 ; '.'
0000000000000de9         db  0x56 ; 'V'
0000000000000dea         db  0x01 ; '.'
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x00 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x00 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0x2a ; '*'
0000000000000df1         db  0x00 ; '.'
0000000000000df2         db  0x00 ; '.'
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x00 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x00 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0xca ; '.'
0000000000000df9         db  0x04 ; '.'
0000000000000dfa         db  0x00 ; '.'
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x11 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x19 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0xa0 ; '.'
0000000000000e01         db  0x02 ; '.'
0000000000000e02         db  0x22 ; '"'
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x00 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x00 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0x08 ; '.'
0000000000000e09         db  0x00 ; '.'
0000000000000e0a         db  0x00 ; '.'
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x00 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x00 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0x71 ; 'q'
0000000000000e11         db  0x03 ; '.'
0000000000000e12         db  0x00 ; '.'
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x21 ; '!'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x19 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0x80 ; '.'
0000000000000e19         db  0x02 ; '.'
0000000000000e1a         db  0x22 ; '"'
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x00 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x00 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0x08 ; '.'
0000000000000e21         db  0x00 ; '.'
0000000000000e22         db  0x00 ; '.'
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x00 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x00 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0x83 ; '.'
0000000000000e29         db  0x02 ; '.'
0000000000000e2a         db  0x00 ; '.'
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x11 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x19 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0xc0 ; '.'
0000000000000e31         db  0x02 ; '.'
0000000000000e32         db  0x22 ; '"'
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0x08 ; '.'
0000000000000e39         db  0x00 ; '.'
0000000000000e3a         db  0x00 ; '.'
0000000000000e3b         db  0x00 ; '.'                                         ; DATA XREF=print_long_format+207
0000000000000e3c         db  0x00 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x00 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0x59 ; 'Y'
0000000000000e41         db  0x00 ; '.'
0000000000000e42         db  0x00 ; '.'
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x11 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x19 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0x90 ; '.'
0000000000000e49         db  0x02 ; '.'
0000000000000e4a         db  0x22 ; '"'
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x00 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0x04 ; '.'
0000000000000e51         db  0x00 ; '.'
0000000000000e52         db  0x00 ; '.'
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x00 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x00 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0x71 ; 'q'
0000000000000e59         db  0x02 ; '.'
0000000000000e5a         db  0x00 ; '.'
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x11 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x19 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0x98 ; '.'
0000000000000e61         db  0x02 ; '.'
0000000000000e62         db  0x22 ; '"'
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x00 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0x08 ; '.'
0000000000000e69         db  0x00 ; '.'
0000000000000e6a         db  0x00 ; '.'
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x00 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x00 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0xa2 ; '.'
0000000000000e71         db  0x04 ; '.'
0000000000000e72         db  0x00 ; '.'
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x12 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x0e ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0x60 ; '`'
0000000000000e79         db  0x56 ; 'V'
0000000000000e7a         db  0x01 ; '.'
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x00 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0x6a ; 'j'
0000000000000e81         db  0x00 ; '.'
0000000000000e82         db  0x00 ; '.'
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x00 ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0xe88; 0x13f6[ (1390 bytes)
        ; File offset : [3720; 5110[ (1390 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

0000000000000e88         db  0x00 ; '.'
0000000000000e89         db  0x6c ; 'l'
0000000000000e8a         db  0x69 ; 'i'
0000000000000e8b         db  0x62 ; 'b'
0000000000000e8c         db  0x63 ; 'c'
0000000000000e8d         db  0x2e ; '.'
0000000000000e8e         db  0x73 ; 's'
0000000000000e8f         db  0x6f ; 'o'
0000000000000e90         db  0x2e ; '.'
0000000000000e91         db  0x36 ; '6'
0000000000000e92         db  0x00 ; '.'
0000000000000e93         db  0x66 ; 'f'
0000000000000e94         db  0x66 ; 'f'
0000000000000e95         db  0x6c ; 'l'
0000000000000e96         db  0x75 ; 'u'
0000000000000e97         db  0x73 ; 's'
0000000000000e98         db  0x68 ; 'h'
0000000000000e99         db  0x00 ; '.'
0000000000000e9a         db  0x73 ; 's'
0000000000000e9b         db  0x74 ; 't'
0000000000000e9c         db  0x72 ; 'r'
0000000000000e9d         db  0x63 ; 'c'
0000000000000e9e         db  0x70 ; 'p'
0000000000000e9f         db  0x79 ; 'y'
0000000000000ea0         db  0x00 ; '.'
0000000000000ea1         db  0x67 ; 'g'
0000000000000ea2         db  0x6d ; 'm'
0000000000000ea3         db  0x74 ; 't'
0000000000000ea4         db  0x69 ; 'i'
0000000000000ea5         db  0x6d ; 'm'
0000000000000ea6         db  0x65 ; 'e'
0000000000000ea7         db  0x5f ; '_'
0000000000000ea8         db  0x72 ; 'r'
0000000000000ea9         db  0x00 ; '.'
0000000000000eaa         db  0x5f ; '_'
0000000000000eab         db  0x5f ; '_'
0000000000000eac         db  0x70 ; 'p'
0000000000000ead         db  0x72 ; 'r'
0000000000000eae         db  0x69 ; 'i'
0000000000000eaf         db  0x6e ; 'n'
0000000000000eb0         db  0x74 ; 't'
0000000000000eb1         db  0x66 ; 'f'
0000000000000eb2         db  0x5f ; '_'
0000000000000eb3         db  0x63 ; 'c'
0000000000000eb4         db  0x68 ; 'h'
0000000000000eb5         db  0x6b ; 'k'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x66 ; 'f'
0000000000000eb8         db  0x6e ; 'n'
0000000000000eb9         db  0x6d ; 'm'
0000000000000eba         db  0x61 ; 'a'
0000000000000ebb         db  0x74 ; 't'
0000000000000ebc         db  0x63 ; 'c'
0000000000000ebd         db  0x68 ; 'h'
0000000000000ebe         db  0x00 ; '.'
0000000000000ebf         db  0x72 ; 'r'
0000000000000ec0         db  0x65 ; 'e'
0000000000000ec1         db  0x61 ; 'a'
0000000000000ec2         db  0x64 ; 'd'
0000000000000ec3         db  0x64 ; 'd'
0000000000000ec4         db  0x69 ; 'i'
0000000000000ec5         db  0x72 ; 'r'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x73 ; 's'
0000000000000ec8         db  0x65 ; 'e'
0000000000000ec9         db  0x74 ; 't'
0000000000000eca         db  0x6c ; 'l'
0000000000000ecb         db  0x6f ; 'o'
0000000000000ecc         db  0x63 ; 'c'
0000000000000ecd         db  0x61 ; 'a'
0000000000000ece         db  0x6c ; 'l'
0000000000000ecf         db  0x65 ; 'e'
0000000000000ed0         db  0x00 ; '.'
0000000000000ed1         db  0x6d ; 'm'
0000000000000ed2         db  0x62 ; 'b'
0000000000000ed3         db  0x72 ; 'r'
0000000000000ed4         db  0x74 ; 't'
0000000000000ed5         db  0x6f ; 'o'
0000000000000ed6         db  0x77 ; 'w'
0000000000000ed7         db  0x63 ; 'c'
0000000000000ed8         db  0x00 ; '.'
0000000000000ed9         db  0x73 ; 's'
0000000000000eda         db  0x74 ; 't'
0000000000000edb         db  0x72 ; 'r'
0000000000000edc         db  0x6e ; 'n'
0000000000000edd         db  0x63 ; 'c'
0000000000000ede         db  0x6d ; 'm'
0000000000000edf         db  0x70 ; 'p'
0000000000000ee0         db  0x00 ; '.'
0000000000000ee1         db  0x6f ; 'o'
0000000000000ee2         db  0x70 ; 'p'
0000000000000ee3         db  0x74 ; 't'
0000000000000ee4         db  0x69 ; 'i'
0000000000000ee5         db  0x6e ; 'n'
0000000000000ee6         db  0x64 ; 'd'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0x73 ; 's'
0000000000000ee9         db  0x74 ; 't'
                     aRrchr:
0000000000000eea         db         "rrchr", 0                                  ; DATA XREF=sort_files+380
0000000000000ef0         db  0x66 ; 'f'
0000000000000ef1         db  0x66 ; 'f'
0000000000000ef2         db  0x6c ; 'l'
0000000000000ef3         db  0x75 ; 'u'
0000000000000ef4         db  0x73 ; 's'
0000000000000ef5         db  0x68 ; 'h'
0000000000000ef6         db  0x5f ; '_'
0000000000000ef7         db  0x75 ; 'u'
0000000000000ef8         db  0x6e ; 'n'
0000000000000ef9         db  0x6c ; 'l'
0000000000000efa         db  0x6f ; 'o'
0000000000000efb         db  0x63 ; 'c'
0000000000000efc         db  0x6b ; 'k'
0000000000000efd         db  0x65 ; 'e'
0000000000000efe         db  0x64 ; 'd'
0000000000000eff         db  0x00 ; '.'
                     aDcgettext:
0000000000000f00         db         "dcgettext", 0
0000000000000f0a         db  0x73 ; 's'
0000000000000f0b         db  0x74 ; 't'
0000000000000f0c         db  0x70 ; 'p'
0000000000000f0d         db  0x6e ; 'n'
0000000000000f0e         db  0x63 ; 'c'
0000000000000f0f         db  0x70 ; 'p'
0000000000000f10         db  0x79 ; 'y'
0000000000000f11         db  0x00 ; '.'
0000000000000f12         db  0x67 ; 'g'
0000000000000f13         db  0x65 ; 'e'
0000000000000f14         db  0x74 ; 't'
0000000000000f15         db  0x70 ; 'p'
0000000000000f16         db  0x77 ; 'w'
0000000000000f17         db  0x75 ; 'u'
0000000000000f18         db  0x69 ; 'i'
0000000000000f19         db  0x64 ; 'd'
0000000000000f1a         db  0x00 ; '.'
0000000000000f1b         db  0x63 ; 'c'
0000000000000f1c         db  0x6c ; 'l'
0000000000000f1d         db  0x6f ; 'o'
0000000000000f1e         db  0x73 ; 's'
0000000000000f1f         db  0x65 ; 'e'
0000000000000f20         db  0x64 ; 'd'
0000000000000f21         db  0x69 ; 'i'
0000000000000f22         db  0x72 ; 'r'
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x67 ; 'g'
0000000000000f25         db  0x65 ; 'e'
0000000000000f26         db  0x74 ; 't'
0000000000000f27         db  0x67 ; 'g'
0000000000000f28         db  0x72 ; 'r'
0000000000000f29         db  0x67 ; 'g'
0000000000000f2a         db  0x69 ; 'i'
0000000000000f2b         db  0x64 ; 'd'
0000000000000f2c         db  0x00 ; '.'
0000000000000f2d         db  0x65 ; 'e'
0000000000000f2e         db  0x72 ; 'r'
0000000000000f2f         db  0x72 ; 'r'
0000000000000f30         db  0x6f ; 'o'
0000000000000f31         db  0x72 ; 'r'
0000000000000f32         db  0x00 ; '.'
0000000000000f33         db  0x73 ; 's'
0000000000000f34         db  0x69 ; 'i'
0000000000000f35         db  0x67 ; 'g'
0000000000000f36         db  0x6e ; 'n'
0000000000000f37         db  0x61 ; 'a'
0000000000000f38         db  0x6c ; 'l'
0000000000000f39         db  0x00 ; '.'
0000000000000f3a         db  0x6d ; 'm'
0000000000000f3b         db  0x62 ; 'b'
0000000000000f3c         db  0x73 ; 's'
0000000000000f3d         db  0x74 ; 't'
0000000000000f3e         db  0x6f ; 'o'
0000000000000f3f         db  0x77 ; 'w'
0000000000000f40         db  0x63 ; 'c'
0000000000000f41         db  0x73 ; 's'
0000000000000f42         db  0x00 ; '.'
0000000000000f43         db  0x73 ; 's'
0000000000000f44         db  0x69 ; 'i'
0000000000000f45         db  0x67 ; 'g'
0000000000000f46         db  0x70 ; 'p'
0000000000000f47         db  0x72 ; 'r'
0000000000000f48         db  0x6f ; 'o'
0000000000000f49         db  0x63 ; 'c'
0000000000000f4a         db  0x6d ; 'm'
0000000000000f4b         db  0x61 ; 'a'
0000000000000f4c         db  0x73 ; 's'
0000000000000f4d         db  0x6b ; 'k'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x5f ; '_'
0000000000000f50         db  0x5f ; '_'
0000000000000f51         db  0x73 ; 's'
0000000000000f52         db  0x74 ; 't'
0000000000000f53         db  0x61 ; 'a'
0000000000000f54         db  0x63 ; 'c'
0000000000000f55         db  0x6b ; 'k'
0000000000000f56         db  0x5f ; '_'
0000000000000f57         db  0x63 ; 'c'
0000000000000f58         db  0x68 ; 'h'
0000000000000f59         db  0x6b ; 'k'
0000000000000f5a         db  0x5f ; '_'
0000000000000f5b         db  0x66 ; 'f'
0000000000000f5c         db  0x61 ; 'a'
0000000000000f5d         db  0x69 ; 'i'
0000000000000f5e         db  0x6c ; 'l'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0x5f ; '_'
0000000000000f61         db  0x5f ; '_'
0000000000000f62         db  0x6c ; 'l'
0000000000000f63         db  0x78 ; 'x'
0000000000000f64         db  0x73 ; 's'
0000000000000f65         db  0x74 ; 't'
0000000000000f66         db  0x61 ; 'a'
0000000000000f67         db  0x74 ; 't'
0000000000000f68         db  0x00 ; '.'
0000000000000f69         db  0x69 ; 'i'
0000000000000f6a         db  0x73 ; 's'
0000000000000f6b         db  0x77 ; 'w'
0000000000000f6c         db  0x70 ; 'p'
0000000000000f6d         db  0x72 ; 'r'
0000000000000f6e         db  0x69 ; 'i'
0000000000000f6f         db  0x6e ; 'n'
0000000000000f70         db  0x74 ; 't'
0000000000000f71         db  0x00 ; '.'
0000000000000f72         db  0x72 ; 'r'
0000000000000f73         db  0x65 ; 'e'
0000000000000f74         db  0x61 ; 'a'
0000000000000f75         db  0x6c ; 'l'
0000000000000f76         db  0x6c ; 'l'
0000000000000f77         db  0x6f ; 'o'
0000000000000f78         db  0x63 ; 'c'
0000000000000f79         db  0x00 ; '.'
0000000000000f7a         db  0x61 ; 'a'
0000000000000f7b         db  0x62 ; 'b'
0000000000000f7c         db  0x6f ; 'o'
0000000000000f7d         db  0x72 ; 'r'
0000000000000f7e         db  0x74 ; 't'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0x5f ; '_'
0000000000000f81         db  0x65 ; 'e'
0000000000000f82         db  0x78 ; 'x'
0000000000000f83         db  0x69 ; 'i'
0000000000000f84         db  0x74 ; 't'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x73 ; 's'
0000000000000f87         db  0x74 ; 't'
0000000000000f88         db  0x72 ; 'r'
0000000000000f89         db  0x73 ; 's'
0000000000000f8a         db  0x70 ; 'p'
0000000000000f8b         db  0x6e ; 'n'
0000000000000f8c         db  0x00 ; '.'
0000000000000f8d         db  0x70 ; 'p'
0000000000000f8e         db  0x72 ; 'r'
0000000000000f8f         db  0x6f ; 'o'
0000000000000f90         db  0x67 ; 'g'
0000000000000f91         db  0x72 ; 'r'
0000000000000f92         db  0x61 ; 'a'
0000000000000f93         db  0x6d ; 'm'
0000000000000f94         db  0x5f ; '_'
0000000000000f95         db  0x69 ; 'i'
0000000000000f96         db  0x6e ; 'n'
0000000000000f97         db  0x76 ; 'v'
0000000000000f98         db  0x6f ; 'o'
0000000000000f99         db  0x63 ; 'c'
0000000000000f9a         db  0x61 ; 'a'
0000000000000f9b         db  0x74 ; 't'
0000000000000f9c         db  0x69 ; 'i'
0000000000000f9d         db  0x6f ; 'o'
0000000000000f9e         db  0x6e ; 'n'
0000000000000f9f         db  0x5f ; '_'
0000000000000fa0         db  0x6e ; 'n'
0000000000000fa1         db  0x61 ; 'a'
0000000000000fa2         db  0x6d ; 'm'
0000000000000fa3         db  0x65 ; 'e'
0000000000000fa4         db  0x00 ; '.'
0000000000000fa5         db  0x73 ; 's'
0000000000000fa6         db  0x74 ; 't'
0000000000000fa7         db  0x72 ; 'r'
0000000000000fa8         db  0x66 ; 'f'
0000000000000fa9         db  0x74 ; 't'
0000000000000faa         db  0x69 ; 'i'
0000000000000fab         db  0x6d ; 'm'
0000000000000fac         db  0x65 ; 'e'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x5f ; '_'
0000000000000faf         db  0x5f ; '_'
0000000000000fb0         db  0x61 ; 'a'
0000000000000fb1         db  0x73 ; 's'
0000000000000fb2         db  0x73 ; 's'
0000000000000fb3         db  0x65 ; 'e'
0000000000000fb4         db  0x72 ; 'r'
0000000000000fb5         db  0x74 ; 't'
0000000000000fb6         db  0x5f ; '_'
0000000000000fb7         db  0x66 ; 'f'
0000000000000fb8         db  0x61 ; 'a'
0000000000000fb9         db  0x69 ; 'i'
0000000000000fba         db  0x6c ; 'l'
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x6c ; 'l'
0000000000000fbd         db  0x6f ; 'o'
0000000000000fbe         db  0x63 ; 'c'
0000000000000fbf         db  0x61 ; 'a'
0000000000000fc0         db  0x6c ; 'l'
0000000000000fc1         db  0x74 ; 't'
0000000000000fc2         db  0x69 ; 'i'
0000000000000fc3         db  0x6d ; 'm'
0000000000000fc4         db  0x65 ; 'e'
0000000000000fc5         db  0x5f ; '_'
0000000000000fc6         db  0x72 ; 'r'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0x5f ; '_'
0000000000000fc9         db  0x5f ; '_'
0000000000000fca         db  0x63 ; 'c'
0000000000000fcb         db  0x74 ; 't'
0000000000000fcc         db  0x79 ; 'y'
0000000000000fcd         db  0x70 ; 'p'
0000000000000fce         db  0x65 ; 'e'
0000000000000fcf         db  0x5f ; '_'
0000000000000fd0         db  0x67 ; 'g'
0000000000000fd1         db  0x65 ; 'e'
0000000000000fd2         db  0x74 ; 't'
0000000000000fd3         db  0x5f ; '_'
0000000000000fd4         db  0x6d ; 'm'
0000000000000fd5         db  0x62 ; 'b'
0000000000000fd6         db  0x5f ; '_'
0000000000000fd7         db  0x63 ; 'c'
0000000000000fd8         db  0x75 ; 'u'
0000000000000fd9         db  0x72 ; 'r'
0000000000000fda         db  0x5f ; '_'
0000000000000fdb         db  0x6d ; 'm'
0000000000000fdc         db  0x61 ; 'a'
0000000000000fdd         db  0x78 ; 'x'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x69 ; 'i'
                     aSatty:
0000000000000fe0         db         "satty", 0                                  ; DATA XREF=_obstack_begin_worker+22
0000000000000fe6         db  0x67 ; 'g'
0000000000000fe7         db  0x65 ; 'e'
0000000000000fe8         db  0x74 ; 't'
0000000000000fe9         db  0x70 ; 'p'
0000000000000fea         db  0x77 ; 'w'
0000000000000feb         db  0x6e ; 'n'
0000000000000fec         db  0x61 ; 'a'
0000000000000fed         db  0x6d ; 'm'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x63 ; 'c'
0000000000000ff0         db  0x61 ; 'a'
0000000000000ff1         db  0x6c ; 'l'
0000000000000ff2         db  0x6c ; 'l'
0000000000000ff3         db  0x6f ; 'o'
0000000000000ff4         db  0x63 ; 'c'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x73 ; 's'
0000000000000ff7         db  0x74 ; 't'
0000000000000ff8         db  0x72 ; 'r'
0000000000000ff9         db  0x6c ; 'l'
0000000000000ffa         db  0x65 ; 'e'
0000000000000ffb         db  0x6e ; 'n'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x73 ; 's'
0000000000000ffe         db  0x69 ; 'i'
0000000000000fff         db  0x67 ; 'g'                                         ; DATA XREF=print_long_format+2176, gobble_file.constprop.52+1687, canonicalize_filename_mode+124
                     aEmptyset:
0000000000001000         db         "emptyset", 0                               ; DATA XREF=get_type_indicator+171, print_name_with_quoting+539, canonicalize_filename_mode+343, canonicalize_filename_mode+350, sub_ca5a+6, sub_ca5a+41, sub_ca5a+69, sub_ca5a+76, strmode+73
0000000000001009         db  0x6d ; 'm'
000000000000100a         db  0x65 ; 'e'
000000000000100b         db  0x6d ; 'm'
000000000000100c         db  0x73 ; 's'
000000000000100d         db  0x65 ; 'e'
000000000000100e         db  0x74 ; 't'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0x6c ; 'l'
0000000000001011         db  0x6f ; 'o'
0000000000001012         db  0x63 ; 'c'
0000000000001013         db  0x61 ; 'a'
0000000000001014         db  0x6c ; 'l'
0000000000001015         db  0x65 ; 'e'
0000000000001016         db  0x63 ; 'c'
0000000000001017         db  0x6f ; 'o'
0000000000001018         db  0x6e ; 'n'
0000000000001019         db  0x76 ; 'v'
000000000000101a         db  0x00 ; '.'
000000000000101b         db  0x5f ; '_'
000000000000101c         db  0x5f ; '_'
000000000000101d         db  0x65 ; 'e'
000000000000101e         db  0x72 ; 'r'
000000000000101f         db  0x72 ; 'r'
0000000000001020         db  0x6e ; 'n'
0000000000001021         db  0x6f ; 'o'
0000000000001022         db  0x5f ; '_'
0000000000001023         db  0x6c ; 'l'
0000000000001024         db  0x6f ; 'o'
0000000000001025         db  0x63 ; 'c'
0000000000001026         db  0x61 ; 'a'
0000000000001027         db  0x74 ; 't'
0000000000001028         db  0x69 ; 'i'
0000000000001029         db  0x6f ; 'o'
000000000000102a         db  0x6e ; 'n'
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x6d ; 'm'
000000000000102d         db  0x65 ; 'e'
000000000000102e         db  0x6d ; 'm'
000000000000102f         db  0x63 ; 'c'
0000000000001030         db  0x6d ; 'm'
0000000000001031         db  0x70 ; 'p'
0000000000001032         db  0x00 ; '.'
0000000000001033         db  0x6d ; 'm'
0000000000001034         db  0x65 ; 'e'
0000000000001035         db  0x6d ; 'm'
0000000000001036         db  0x70 ; 'p'
0000000000001037         db  0x63 ; 'c'
0000000000001038         db  0x70 ; 'p'
0000000000001039         db  0x79 ; 'y'
000000000000103a         db  0x00 ; '.'
000000000000103b         db  0x75 ; 'u'
000000000000103c         db  0x6e ; 'n'
000000000000103d         db  0x73 ; 's'
000000000000103e         db  0x65 ; 'e'
000000000000103f         db  0x74 ; 't'
0000000000001040         db  0x65 ; 'e'
0000000000001041         db  0x6e ; 'n'
0000000000001042         db  0x76 ; 'v'
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x5f ; '_'
0000000000001045         db  0x73 ; 's'
0000000000001046         db  0x65 ; 'e'
0000000000001047         db  0x74 ; 't'
0000000000001048         db  0x6a ; 'j'
0000000000001049         db  0x6d ; 'm'
000000000000104a         db  0x70 ; 'p'
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x5f ; '_'
000000000000104d         db  0x5f ; '_'
000000000000104e         db  0x66 ; 'f'
000000000000104f         db  0x70 ; 'p'
0000000000001050         db  0x72 ; 'r'
0000000000001051         db  0x69 ; 'i'
0000000000001052         db  0x6e ; 'n'
0000000000001053         db  0x74 ; 't'
0000000000001054         db  0x66 ; 'f'
0000000000001055         db  0x5f ; '_'
0000000000001056         db  0x63 ; 'c'
0000000000001057         db  0x68 ; 'h'
0000000000001058         db  0x6b ; 'k'
0000000000001059         db  0x00 ; '.'
000000000000105a         db  0x73 ; 's'
000000000000105b         db  0x69 ; 'i'
000000000000105c         db  0x67 ; 'g'
000000000000105d         db  0x61 ; 'a'
000000000000105e         db  0x64 ; 'd'
000000000000105f         db  0x64 ; 'd'
0000000000001060         db  0x73 ; 's'
0000000000001061         db  0x65 ; 'e'
0000000000001062         db  0x74 ; 't'
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x67 ; 'g'
0000000000001065         db  0x65 ; 'e'
0000000000001066         db  0x74 ; 't'
0000000000001067         db  0x67 ; 'g'
0000000000001068         db  0x72 ; 'r'
0000000000001069         db  0x6e ; 'n'
000000000000106a         db  0x61 ; 'a'
000000000000106b         db  0x6d ; 'm'
000000000000106c         db  0x00 ; '.'
000000000000106d         db  0x77 ; 'w'
000000000000106e         db  0x63 ; 'c'
000000000000106f         db  0x73 ; 's'
0000000000001070         db  0x77 ; 'w'
0000000000001071         db  0x69 ; 'i'
0000000000001072         db  0x64 ; 'd'
0000000000001073         db  0x74 ; 't'
0000000000001074         db  0x68 ; 'h'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x73 ; 's'
0000000000001077         db  0x74 ; 't'
0000000000001078         db  0x64 ; 'd'
0000000000001079         db  0x6f ; 'o'
000000000000107a         db  0x75 ; 'u'
000000000000107b         db  0x74 ; 't'
000000000000107c         db  0x00 ; '.'
000000000000107d         db  0x6c ; 'l'
000000000000107e         db  0x73 ; 's'
000000000000107f         db  0x65 ; 'e'
0000000000001080         db  0x65 ; 'e'
0000000000001081         db  0x6b ; 'k'
0000000000001082         db  0x00 ; '.'
0000000000001083         db  0x6d ; 'm'
0000000000001084         db  0x65 ; 'e'
0000000000001085         db  0x6d ; 'm'
0000000000001086         db  0x63 ; 'c'
0000000000001087         db  0x70 ; 'p'
0000000000001088         db  0x79 ; 'y'
0000000000001089         db  0x00 ; '.'
000000000000108a         db  0x66 ; 'f'
000000000000108b         db  0x63 ; 'c'
000000000000108c         db  0x6c ; 'l'
000000000000108d         db  0x6f ; 'o'
000000000000108e         db  0x73 ; 's'
000000000000108f         db  0x65 ; 'e'
0000000000001090         db  0x00 ; '.'
0000000000001091         db  0x73 ; 's'
0000000000001092         db  0x74 ; 't'
0000000000001093         db  0x72 ; 'r'
0000000000001094         db  0x74 ; 't'
0000000000001095         db  0x6f ; 'o'
0000000000001096         db  0x75 ; 'u'
0000000000001097         db  0x6c ; 'l'
0000000000001098         db  0x00 ; '.'
0000000000001099         db  0x6d ; 'm'
000000000000109a         db  0x61 ; 'a'
000000000000109b         db  0x6c ; 'l'
000000000000109c         db  0x6c ; 'l'
000000000000109d         db  0x6f ; 'o'
000000000000109e         db  0x63 ; 'c'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0x74 ; 't'
00000000000010a1         db  0x69 ; 'i'
00000000000010a2         db  0x6d ; 'm'
00000000000010a3         db  0x65 ; 'e'
00000000000010a4         db  0x67 ; 'g'
00000000000010a5         db  0x6d ; 'm'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x72 ; 'r'
00000000000010a8         db  0x61 ; 'a'
00000000000010a9         db  0x69 ; 'i'
00000000000010aa         db  0x73 ; 's'
00000000000010ab         db  0x65 ; 'e'
00000000000010ac         db  0x00 ; '.'
00000000000010ad         db  0x6d ; 'm'
00000000000010ae         db  0x62 ; 'b'
00000000000010af         db  0x73 ; 's'
00000000000010b0         db  0x69 ; 'i'
00000000000010b1         db  0x6e ; 'n'
00000000000010b2         db  0x69 ; 'i'
00000000000010b3         db  0x74 ; 't'
00000000000010b4         db  0x00 ; '.'
00000000000010b5         db  0x74 ; 't'
00000000000010b6         db  0x7a ; 'z'
00000000000010b7         db  0x73 ; 's'
00000000000010b8         db  0x65 ; 'e'
00000000000010b9         db  0x74 ; 't'
00000000000010ba         db  0x00 ; '.'
00000000000010bb         db  0x6e ; 'n'
00000000000010bc         db  0x6c ; 'l'
00000000000010bd         db  0x5f ; '_'
00000000000010be         db  0x6c ; 'l'
00000000000010bf         db  0x61 ; 'a'
00000000000010c0         db  0x6e ; 'n'
00000000000010c1         db  0x67 ; 'g'
00000000000010c2         db  0x69 ; 'i'
00000000000010c3         db  0x6e ; 'n'                                         ; DATA XREF=main+4793
00000000000010c4         db  0x66 ; 'f'
00000000000010c5         db  0x6f ; 'o'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x6f ; 'o'
00000000000010c8         db  0x70 ; 'p'
00000000000010c9         db  0x65 ; 'e'
00000000000010ca         db  0x6e ; 'n'
00000000000010cb         db  0x64 ; 'd'
00000000000010cc         db  0x69 ; 'i'
00000000000010cd         db  0x72 ; 'r'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x5f ; '_'
00000000000010d0         db  0x5f ; '_'
00000000000010d1         db  0x63 ; 'c'
00000000000010d2         db  0x74 ; 't'
00000000000010d3         db  0x79 ; 'y'
00000000000010d4         db  0x70 ; 'p'
00000000000010d5         db  0x65 ; 'e'
00000000000010d6         db  0x5f ; '_'
00000000000010d7         db  0x62 ; 'b'
00000000000010d8         db  0x5f ; '_'
00000000000010d9         db  0x6c ; 'l'
00000000000010da         db  0x6f ; 'o'
00000000000010db         db  0x63 ; 'c'
00000000000010dc         db  0x00 ; '.'
00000000000010dd         db  0x67 ; 'g'
00000000000010de         db  0x65 ; 'e'
00000000000010df         db  0x74 ; 't'
00000000000010e0         db  0x65 ; 'e'
00000000000010e1         db  0x6e ; 'n'
00000000000010e2         db  0x76 ; 'v'
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x5f ; '_'
00000000000010e5         db  0x6f ; 'o'
00000000000010e6         db  0x62 ; 'b'
00000000000010e7         db  0x73 ; 's'
00000000000010e8         db  0x74 ; 't'
00000000000010e9         db  0x61 ; 'a'
00000000000010ea         db  0x63 ; 'c'
00000000000010eb         db  0x6b ; 'k'
00000000000010ec         db  0x5f ; '_'
00000000000010ed         db  0x61 ; 'a'
00000000000010ee         db  0x6c ; 'l'
00000000000010ef         db  0x6c ; 'l'
00000000000010f0         db  0x6f ; 'o'
00000000000010f1         db  0x63 ; 'c'
00000000000010f2         db  0x61 ; 'a'
00000000000010f3         db  0x74 ; 't'
00000000000010f4         db  0x65 ; 'e'
00000000000010f5         db  0x64 ; 'd'
00000000000010f6         db  0x5f ; '_'
00000000000010f7         db  0x70 ; 'p'
00000000000010f8         db  0x00 ; '.'
00000000000010f9         db  0x6f ; 'o'
00000000000010fa         db  0x70 ; 'p'
00000000000010fb         db  0x74 ; 't'
00000000000010fc         db  0x61 ; 'a'
00000000000010fd         db  0x72 ; 'r'
00000000000010fe         db  0x67 ; 'g'
00000000000010ff         db  0x00 ; '.'
                     aFreading:
0000000000001100         db         "__freading", 0
000000000000110b         db  0x73 ; 's'
000000000000110c         db  0x74 ; 't'
000000000000110d         db  0x64 ; 'd'
000000000000110e         db  0x65 ; 'e'
000000000000110f         db  0x72 ; 'r'
0000000000001110         db  0x72 ; 'r'
0000000000001111         db  0x00 ; '.'
0000000000001112         db  0x77 ; 'w'
0000000000001113         db  0x63 ; 'c'
0000000000001114         db  0x77 ; 'w'
0000000000001115         db  0x69 ; 'i'
0000000000001116         db  0x64 ; 'd'
0000000000001117         db  0x74 ; 't'
0000000000001118         db  0x68 ; 'h'
0000000000001119         db  0x00 ; '.'
000000000000111a         db  0x69 ; 'i'
000000000000111b         db  0x6f ; 'o'
000000000000111c         db  0x63 ; 'c'
000000000000111d         db  0x74 ; 't'
000000000000111e         db  0x6c ; 'l'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x5f ; '_'
0000000000001121         db  0x6f ; 'o'
0000000000001122         db  0x62 ; 'b'
0000000000001123         db  0x73 ; 's'
0000000000001124         db  0x74 ; 't'
0000000000001125         db  0x61 ; 'a'
0000000000001126         db  0x63 ; 'c'
0000000000001127         db  0x6b ; 'k'
0000000000001128         db  0x5f ; '_'
0000000000001129         db  0x62 ; 'b'
000000000000112a         db  0x65 ; 'e'
000000000000112b         db  0x67 ; 'g'
000000000000112c         db  0x69 ; 'i'
000000000000112d         db  0x6e ; 'n'
000000000000112e         db  0x5f ; '_'
000000000000112f         db  0x31 ; '1'
0000000000001130         db  0x00 ; '.'
0000000000001131         db  0x5f ; '_'
0000000000001132         db  0x6f ; 'o'
0000000000001133         db  0x62 ; 'b'
0000000000001134         db  0x73 ; 's'
0000000000001135         db  0x74 ; 't'
0000000000001136         db  0x61 ; 'a'
0000000000001137         db  0x63 ; 'c'
0000000000001138         db  0x6b ; 'k'
0000000000001139         db  0x5f ; '_'
000000000000113a         db  0x6e ; 'n'
000000000000113b         db  0x65 ; 'e'
000000000000113c         db  0x77 ; 'w'
000000000000113d         db  0x63 ; 'c'
000000000000113e         db  0x68 ; 'h'
000000000000113f         db  0x75 ; 'u'
0000000000001140         db  0x6e ; 'n'
0000000000001141         db  0x6b ; 'k'
0000000000001142         db  0x00 ; '.'
0000000000001143         db  0x5f ; '_'
0000000000001144         db  0x5f ; '_'
0000000000001145         db  0x73 ; 's'
0000000000001146         db  0x6e ; 'n'
0000000000001147         db  0x70 ; 'p'
0000000000001148         db  0x72 ; 'r'
0000000000001149         db  0x69 ; 'i'
000000000000114a         db  0x6e ; 'n'
000000000000114b         db  0x74 ; 't'
000000000000114c         db  0x66 ; 'f'
000000000000114d         db  0x5f ; '_'
000000000000114e         db  0x63 ; 'c'
000000000000114f         db  0x68 ; 'h'
0000000000001150         db  0x6b ; 'k'
0000000000001151         db  0x00 ; '.'
0000000000001152         db  0x72 ; 'r'
0000000000001153         db  0x65 ; 'e'
0000000000001154         db  0x61 ; 'a'
0000000000001155         db  0x64 ; 'd'
0000000000001156         db  0x6c ; 'l'
0000000000001157         db  0x69 ; 'i'
0000000000001158         db  0x6e ; 'n'
0000000000001159         db  0x6b ; 'k'
000000000000115a         db  0x00 ; '.'
000000000000115b         db  0x67 ; 'g'
000000000000115c         db  0x65 ; 'e'
000000000000115d         db  0x74 ; 't'
000000000000115e         db  0x6f ; 'o'
000000000000115f         db  0x70 ; 'p'
0000000000001160         db  0x74 ; 't'
0000000000001161         db  0x5f ; '_'
0000000000001162         db  0x6c ; 'l'
0000000000001163         db  0x6f ; 'o'
0000000000001164         db  0x6e ; 'n'
0000000000001165         db  0x67 ; 'g'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x5f ; '_'
0000000000001168         db  0x5f ; '_'
0000000000001169         db  0x66 ; 'f'
000000000000116a         db  0x78 ; 'x'
000000000000116b         db  0x73 ; 's'
000000000000116c         db  0x74 ; 't'
000000000000116d         db  0x61 ; 'a'
000000000000116e         db  0x74 ; 't'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0x66 ; 'f'
0000000000001171         db  0x69 ; 'i'
0000000000001172         db  0x6c ; 'l'
0000000000001173         db  0x65 ; 'e'
0000000000001174         db  0x6e ; 'n'
0000000000001175         db  0x6f ; 'o'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x67 ; 'g'
0000000000001178         db  0x65 ; 'e'
0000000000001179         db  0x74 ; 't'
000000000000117a         db  0x68 ; 'h'
000000000000117b         db  0x6f ; 'o'
000000000000117c         db  0x73 ; 's'
000000000000117d         db  0x74 ; 't'
000000000000117e         db  0x6e ; 'n'
000000000000117f         db  0x61 ; 'a'
0000000000001180         db  0x6d ; 'm'
0000000000001181         db  0x65 ; 'e'
0000000000001182         db  0x00 ; '.'
0000000000001183         db  0x5f ; '_'
0000000000001184         db  0x6f ; 'o'
0000000000001185         db  0x62 ; 'b'
0000000000001186         db  0x73 ; 's'
0000000000001187         db  0x74 ; 't'
0000000000001188         db  0x61 ; 'a'
0000000000001189         db  0x63 ; 'c'
000000000000118a         db  0x6b ; 'k'
000000000000118b         db  0x5f ; '_'
000000000000118c         db  0x6d ; 'm'
000000000000118d         db  0x65 ; 'e'
000000000000118e         db  0x6d ; 'm'
000000000000118f         db  0x6f ; 'o'
0000000000001190         db  0x72 ; 'r'
0000000000001191         db  0x79 ; 'y'
0000000000001192         db  0x5f ; '_'
0000000000001193         db  0x75 ; 'u'
0000000000001194         db  0x73 ; 's'
0000000000001195         db  0x65 ; 'e'
0000000000001196         db  0x64 ; 'd'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0x67 ; 'g'
0000000000001199         db  0x65 ; 'e'
000000000000119a         db  0x74 ; 't'
000000000000119b         db  0x63 ; 'c'
000000000000119c         db  0x77 ; 'w'
000000000000119d         db  0x64 ; 'd'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x66 ; 'f'
00000000000011a0         db  0x77 ; 'w'
00000000000011a1         db  0x72 ; 'r'
00000000000011a2         db  0x69 ; 'i'
00000000000011a3         db  0x74 ; 't'
00000000000011a4         db  0x65 ; 'e'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x73 ; 's'
00000000000011a7         db  0x69 ; 'i'
00000000000011a8         db  0x67 ; 'g'
00000000000011a9         db  0x61 ; 'a'
00000000000011aa         db  0x63 ; 'c'
00000000000011ab         db  0x74 ; 't'
00000000000011ac         db  0x69 ; 'i'
00000000000011ad         db  0x6f ; 'o'
00000000000011ae         db  0x6e ; 'n'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0x5f ; '_'
00000000000011b1         db  0x5f ; '_'
00000000000011b2         db  0x6d ; 'm'
00000000000011b3         db  0x65 ; 'e'
00000000000011b4         db  0x6d ; 'm'
00000000000011b5         db  0x63 ; 'c'
00000000000011b6         db  0x70 ; 'p'
00000000000011b7         db  0x79 ; 'y'
00000000000011b8         db  0x5f ; '_'
00000000000011b9         db  0x63 ; 'c'
00000000000011ba         db  0x68 ; 'h'
00000000000011bb         db  0x6b ; 'k'
00000000000011bc         db  0x00 ; '.'
00000000000011bd         db  0x73 ; 's'
00000000000011be         db  0x69 ; 'i'
00000000000011bf         db  0x67 ; 'g'
00000000000011c0         db  0x69 ; 'i'
00000000000011c1         db  0x73 ; 's'
00000000000011c2         db  0x6d ; 'm'
00000000000011c3         db  0x65 ; 'e'
00000000000011c4         db  0x6d ; 'm'
00000000000011c5         db  0x62 ; 'b'
00000000000011c6         db  0x65 ; 'e'
00000000000011c7         db  0x72 ; 'r'
00000000000011c8         db  0x00 ; '.'
00000000000011c9         db  0x63 ; 'c'
00000000000011ca         db  0x6c ; 'l'
00000000000011cb         db  0x6f ; 'o'
00000000000011cc         db  0x63 ; 'c'
00000000000011cd         db  0x6b ; 'k'
00000000000011ce         db  0x5f ; '_'
00000000000011cf         db  0x67 ; 'g'
00000000000011d0         db  0x65 ; 'e'
00000000000011d1         db  0x74 ; 't'
00000000000011d2         db  0x74 ; 't'
00000000000011d3         db  0x69 ; 'i'
00000000000011d4         db  0x6d ; 'm'
00000000000011d5         db  0x65 ; 'e'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x5f ; '_'
00000000000011d8         db  0x5f ; '_'
00000000000011d9         db  0x66 ; 'f'
00000000000011da         db  0x70 ; 'p'
00000000000011db         db  0x65 ; 'e'
00000000000011dc         db  0x6e ; 'n'
00000000000011dd         db  0x64 ; 'd'
00000000000011de         db  0x69 ; 'i'
00000000000011df         db  0x6e ; 'n'
00000000000011e0         db  0x67 ; 'g'
00000000000011e1         db  0x00 ; '.'
00000000000011e2         db  0x73 ; 's'
00000000000011e3         db  0x74 ; 't'
00000000000011e4         db  0x72 ; 'r'
00000000000011e5         db  0x63 ; 'c'
00000000000011e6         db  0x68 ; 'h'
00000000000011e7         db  0x72 ; 'r'
00000000000011e8         db  0x00 ; '.'
00000000000011e9         db  0x69 ; 'i'
00000000000011ea         db  0x73 ; 's'
00000000000011eb         db  0x77 ; 'w'
00000000000011ec         db  0x63 ; 'c'
00000000000011ed         db  0x6e ; 'n'
00000000000011ee         db  0x74 ; 't'
00000000000011ef         db  0x72 ; 'r'
00000000000011f0         db  0x6c ; 'l'
00000000000011f1         db  0x00 ; '.'
00000000000011f2         db  0x6d ; 'm'
00000000000011f3         db  0x6b ; 'k'
00000000000011f4         db  0x74 ; 't'
00000000000011f5         db  0x69 ; 'i'
00000000000011f6         db  0x6d ; 'm'
00000000000011f7         db  0x65 ; 'e'
00000000000011f8         db  0x00 ; '.'
00000000000011f9         db  0x70 ; 'p'
00000000000011fa         db  0x72 ; 'r'
00000000000011fb         db  0x6f ; 'o'
00000000000011fc         db  0x67 ; 'g'
00000000000011fd         db  0x72 ; 'r'
00000000000011fe         db  0x61 ; 'a'
00000000000011ff         db  0x6d ; 'm'
                     aInvocationshor:
0000000000001200         db         "_invocation_short_name", 0
0000000000001217         db  0x77 ; 'w'
0000000000001218         db  0x63 ; 'c'
0000000000001219         db  0x73 ; 's'
000000000000121a         db  0x74 ; 't'
000000000000121b         db  0x6f ; 'o'
000000000000121c         db  0x6d ; 'm'
000000000000121d         db  0x62 ; 'b'
000000000000121e         db  0x73 ; 's'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0x5f ; '_'
0000000000001221         db  0x5f ; '_'
0000000000001222         db  0x63 ; 'c'
0000000000001223         db  0x74 ; 't'
0000000000001224         db  0x79 ; 'y'
0000000000001225         db  0x70 ; 'p'
0000000000001226         db  0x65 ; 'e'
0000000000001227         db  0x5f ; '_'
0000000000001228         db  0x74 ; 't'
0000000000001229         db  0x6f ; 'o'
000000000000122a         db  0x75 ; 'u'
000000000000122b         db  0x70 ; 'p'
000000000000122c         db  0x70 ; 'p'
000000000000122d         db  0x65 ; 'e'
000000000000122e         db  0x72 ; 'r'
000000000000122f         db  0x5f ; '_'
0000000000001230         db  0x6c ; 'l'
0000000000001231         db  0x6f ; 'o'
0000000000001232         db  0x63 ; 'c'
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x5f ; '_'
0000000000001235         db  0x5f ; '_'
0000000000001236         db  0x63 ; 'c'
0000000000001237         db  0x74 ; 't'
0000000000001238         db  0x79 ; 'y'
0000000000001239         db  0x70 ; 'p'
000000000000123a         db  0x65 ; 'e'
000000000000123b         db  0x5f ; '_'
000000000000123c         db  0x74 ; 't'
000000000000123d         db  0x6f ; 'o'
000000000000123e         db  0x6c ; 'l'
000000000000123f         db  0x6f ; 'o'
0000000000001240         db  0x77 ; 'w'
0000000000001241         db  0x65 ; 'e'
0000000000001242         db  0x72 ; 'r'
0000000000001243         db  0x5f ; '_'
0000000000001244         db  0x6c ; 'l'
0000000000001245         db  0x6f ; 'o'
0000000000001246         db  0x63 ; 'c'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x6f ; 'o'
0000000000001249         db  0x62 ; 'b'
000000000000124a         db  0x73 ; 's'
000000000000124b         db  0x74 ; 't'
000000000000124c         db  0x61 ; 'a'
000000000000124d         db  0x63 ; 'c'
000000000000124e         db  0x6b ; 'k'
000000000000124f         db  0x5f ; '_'
0000000000001250         db  0x61 ; 'a'
0000000000001251         db  0x6c ; 'l'
0000000000001252         db  0x6c ; 'l'
0000000000001253         db  0x6f ; 'o'
0000000000001254         db  0x63 ; 'c'
0000000000001255         db  0x5f ; '_'
0000000000001256         db  0x66 ; 'f'
0000000000001257         db  0x61 ; 'a'
0000000000001258         db  0x69 ; 'i'
0000000000001259         db  0x6c ; 'l'
000000000000125a         db  0x65 ; 'e'
000000000000125b         db  0x64 ; 'd'
000000000000125c         db  0x5f ; '_'
000000000000125d         db  0x68 ; 'h'
000000000000125e         db  0x61 ; 'a'
000000000000125f         db  0x6e ; 'n'
0000000000001260         db  0x64 ; 'd'
0000000000001261         db  0x6c ; 'l'
0000000000001262         db  0x65 ; 'e'
0000000000001263         db  0x72 ; 'r'
0000000000001264         db  0x00 ; '.'
0000000000001265         db  0x5f ; '_'
0000000000001266         db  0x5f ; '_'
0000000000001267         db  0x63 ; 'c'
0000000000001268         db  0x78 ; 'x'
0000000000001269         db  0x61 ; 'a'
000000000000126a         db  0x5f ; '_'
000000000000126b         db  0x66 ; 'f'
000000000000126c         db  0x69 ; 'i'
000000000000126d         db  0x6e ; 'n'
000000000000126e         db  0x61 ; 'a'
000000000000126f         db  0x6c ; 'l'
0000000000001270         db  0x69 ; 'i'
0000000000001271         db  0x7a ; 'z'
0000000000001272         db  0x65 ; 'e'
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x5f ; '_'
0000000000001275         db  0x5f ; '_'
0000000000001276         db  0x73 ; 's'
0000000000001277         db  0x70 ; 'p'
0000000000001278         db  0x72 ; 'r'
0000000000001279         db  0x69 ; 'i'
000000000000127a         db  0x6e ; 'n'
000000000000127b         db  0x74 ; 't'
000000000000127c         db  0x66 ; 'f'
000000000000127d         db  0x5f ; '_'
000000000000127e         db  0x63 ; 'c'
000000000000127f         db  0x68 ; 'h'
0000000000001280         db  0x6b ; 'k'
0000000000001281         db  0x00 ; '.'
0000000000001282         db  0x5f ; '_'
0000000000001283         db  0x5f ; '_'
0000000000001284         db  0x78 ; 'x'
0000000000001285         db  0x73 ; 's'
0000000000001286         db  0x74 ; 't'
0000000000001287         db  0x61 ; 'a'
0000000000001288         db  0x74 ; 't'
0000000000001289         db  0x00 ; '.'
000000000000128a         db  0x6d ; 'm'
000000000000128b         db  0x65 ; 'e'
000000000000128c         db  0x6d ; 'm'
000000000000128d         db  0x6d ; 'm'
000000000000128e         db  0x6f ; 'o'
000000000000128f         db  0x76 ; 'v'
0000000000001290         db  0x65 ; 'e'
0000000000001291         db  0x00 ; '.'
0000000000001292         db  0x5f ; '_'
0000000000001293         db  0x6f ; 'o'
0000000000001294         db  0x62 ; 'b'
0000000000001295         db  0x73 ; 's'
0000000000001296         db  0x74 ; 't'
0000000000001297         db  0x61 ; 'a'
0000000000001298         db  0x63 ; 'c'
0000000000001299         db  0x6b ; 'k'
000000000000129a         db  0x5f ; '_'
000000000000129b         db  0x62 ; 'b'
000000000000129c         db  0x65 ; 'e'
000000000000129d         db  0x67 ; 'g'
000000000000129e         db  0x69 ; 'i'
000000000000129f         db  0x6e ; 'n'
00000000000012a0         db  0x00 ; '.'
00000000000012a1         db  0x62 ; 'b'
00000000000012a2         db  0x69 ; 'i'
00000000000012a3         db  0x6e ; 'n'
00000000000012a4         db  0x64 ; 'd'
00000000000012a5         db  0x74 ; 't'
00000000000012a6         db  0x65 ; 'e'
00000000000012a7         db  0x78 ; 'x'
00000000000012a8         db  0x74 ; 't'
00000000000012a9         db  0x64 ; 'd'
00000000000012aa         db  0x6f ; 'o'
00000000000012ab         db  0x6d ; 'm'
00000000000012ac         db  0x61 ; 'a'
00000000000012ad         db  0x69 ; 'i'
00000000000012ae         db  0x6e ; 'n'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x5f ; '_'
00000000000012b1         db  0x5f ; '_'
00000000000012b2         db  0x66 ; 'f'
00000000000012b3         db  0x78 ; 'x'
00000000000012b4         db  0x73 ; 's'
00000000000012b5         db  0x74 ; 't'
00000000000012b6         db  0x61 ; 'a'
00000000000012b7         db  0x74 ; 't'
00000000000012b8         db  0x61 ; 'a'
00000000000012b9         db  0x74 ; 't'
00000000000012ba         db  0x00 ; '.'
00000000000012bb         db  0x66 ; 'f'
00000000000012bc         db  0x77 ; 'w'
00000000000012bd         db  0x72 ; 'r'
00000000000012be         db  0x69 ; 'i'
00000000000012bf         db  0x74 ; 't'
00000000000012c0         db  0x65 ; 'e'
00000000000012c1         db  0x5f ; '_'
00000000000012c2         db  0x75 ; 'u'
00000000000012c3         db  0x6e ; 'n'
00000000000012c4         db  0x6c ; 'l'
00000000000012c5         db  0x6f ; 'o'
00000000000012c6         db  0x63 ; 'c'
00000000000012c7         db  0x6b ; 'k'
00000000000012c8         db  0x65 ; 'e'
00000000000012c9         db  0x64 ; 'd'
00000000000012ca         db  0x00 ; '.'
00000000000012cb         db  0x73 ; 's'
00000000000012cc         db  0x74 ; 't'
00000000000012cd         db  0x72 ; 'r'
00000000000012ce         db  0x63 ; 'c'
00000000000012cf         db  0x6d ; 'm'
00000000000012d0         db  0x70 ; 'p'
00000000000012d1         db  0x00 ; '.'
00000000000012d2         db  0x74 ; 't'
00000000000012d3         db  0x63 ; 'c'
00000000000012d4         db  0x67 ; 'g'
00000000000012d5         db  0x65 ; 'e'
00000000000012d6         db  0x74 ; 't'
00000000000012d7         db  0x70 ; 'p'
00000000000012d8         db  0x67 ; 'g'
00000000000012d9         db  0x72 ; 'r'
00000000000012da         db  0x70 ; 'p'
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x5f ; '_'
00000000000012dd         db  0x5f ; '_'
00000000000012de         db  0x6c ; 'l'
00000000000012df         db  0x69 ; 'i'
00000000000012e0         db  0x62 ; 'b'
00000000000012e1         db  0x63 ; 'c'
00000000000012e2         db  0x5f ; '_'
00000000000012e3         db  0x73 ; 's'
00000000000012e4         db  0x74 ; 't'
00000000000012e5         db  0x61 ; 'a'
00000000000012e6         db  0x72 ; 'r'
00000000000012e7         db  0x74 ; 't'
00000000000012e8         db  0x5f ; '_'
00000000000012e9         db  0x6d ; 'm'
00000000000012ea         db  0x61 ; 'a'
00000000000012eb         db  0x69 ; 'i'
00000000000012ec         db  0x6e ; 'n'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x64 ; 'd'
00000000000012ef         db  0x69 ; 'i'
00000000000012f0         db  0x72 ; 'r'
00000000000012f1         db  0x66 ; 'f'
00000000000012f2         db  0x64 ; 'd'
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x66 ; 'f'
00000000000012f5         db  0x73 ; 's'
00000000000012f6         db  0x65 ; 'e'
00000000000012f7         db  0x65 ; 'e'
00000000000012f8         db  0x6b ; 'k'
00000000000012f9         db  0x6f ; 'o'
00000000000012fa         db  0x00 ; '.'
00000000000012fb         db  0x73 ; 's'
00000000000012fc         db  0x74 ; 't'
00000000000012fd         db  0x72 ; 'r'
00000000000012fe         db  0x63 ; 'c'
00000000000012ff         db  0x6f ; 'o'
0000000000001300         db  0x6c ; 'l'
0000000000001301         db  0x6c ; 'l'
0000000000001302         db  0x00 ; '.'
0000000000001303         db  0x73 ; 's'
0000000000001304         db  0x6e ; 'n'
0000000000001305         db  0x70 ; 'p'
0000000000001306         db  0x72 ; 'r'
0000000000001307         db  0x69 ; 'i'
0000000000001308         db  0x6e ; 'n'
0000000000001309         db  0x74 ; 't'
000000000000130a         db  0x66 ; 'f'
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x5f ; '_'
000000000000130d         db  0x5f ; '_'
000000000000130e         db  0x6f ; 'o'
000000000000130f         db  0x76 ; 'v'
0000000000001310         db  0x65 ; 'e'
0000000000001311         db  0x72 ; 'r'
0000000000001312         db  0x66 ; 'f'
0000000000001313         db  0x6c ; 'l'
0000000000001314         db  0x6f ; 'o'
0000000000001315         db  0x77 ; 'w'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x5f ; '_'
0000000000001318         db  0x5f ; '_'
0000000000001319         db  0x73 ; 's'
000000000000131a         db  0x74 ; 't'
000000000000131b         db  0x72 ; 'r'
000000000000131c         db  0x74 ; 't'
000000000000131d         db  0x6f ; 'o'
000000000000131e         db  0x75 ; 'u'
000000000000131f         db  0x6c ; 'l'
0000000000001320         db  0x5f ; '_'
0000000000001321         db  0x69 ; 'i'
0000000000001322         db  0x6e ; 'n'
0000000000001323         db  0x74 ; 't'
0000000000001324         db  0x65 ; 'e'
0000000000001325         db  0x72 ; 'r'
0000000000001326         db  0x6e ; 'n'
0000000000001327         db  0x61 ; 'a'
0000000000001328         db  0x6c ; 'l'                                         ; DATA XREF=print_long_format+13, print_long_format+982
0000000000001329         db  0x00 ; '.'
000000000000132a         db  0x5f ; '_'
000000000000132b         db  0x6f ; 'o'
000000000000132c         db  0x62 ; 'b'
000000000000132d         db  0x73 ; 's'
000000000000132e         db  0x74 ; 't'
000000000000132f         db  0x61 ; 'a'
0000000000001330         db  0x63 ; 'c'
0000000000001331         db  0x6b ; 'k'
0000000000001332         db  0x5f ; '_'
0000000000001333         db  0x66 ; 'f'
0000000000001334         db  0x72 ; 'r'
0000000000001335         db  0x65 ; 'e'
0000000000001336         db  0x65 ; 'e'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x66 ; 'f'
0000000000001339         db  0x70 ; 'p'
000000000000133a         db  0x75 ; 'u'
000000000000133b         db  0x74 ; 't'
000000000000133c         db  0x73 ; 's'
000000000000133d         db  0x5f ; '_'
000000000000133e         db  0x75 ; 'u'
000000000000133f         db  0x6e ; 'n'
0000000000001340         db  0x6c ; 'l'
0000000000001341         db  0x6f ; 'o'
0000000000001342         db  0x63 ; 'c'
0000000000001343         db  0x6b ; 'k'
0000000000001344         db  0x65 ; 'e'
0000000000001345         db  0x64 ; 'd'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x5f ; '_'
0000000000001348         db  0x5f ; '_'
0000000000001349         db  0x70 ; 'p'
000000000000134a         db  0x72 ; 'r'
000000000000134b         db  0x6f ; 'o'
000000000000134c         db  0x67 ; 'g'
000000000000134d         db  0x6e ; 'n'
000000000000134e         db  0x61 ; 'a'
000000000000134f         db  0x6d ; 'm'
0000000000001350         db  0x65 ; 'e'
0000000000001351         db  0x00 ; '.'
0000000000001352         db  0x5f ; '_'
0000000000001353         db  0x5f ; '_'
0000000000001354         db  0x70 ; 'p'
0000000000001355         db  0x72 ; 'r'
0000000000001356         db  0x6f ; 'o'
0000000000001357         db  0x67 ; 'g'
0000000000001358         db  0x6e ; 'n'
0000000000001359         db  0x61 ; 'a'
000000000000135a         db  0x6d ; 'm'
000000000000135b         db  0x65 ; 'e'
000000000000135c         db  0x5f ; '_'
000000000000135d         db  0x66 ; 'f'
000000000000135e         db  0x75 ; 'u'
000000000000135f         db  0x6c ; 'l'
0000000000001360         db  0x6c ; 'l'
0000000000001361         db  0x00 ; '.'
0000000000001362         db  0x5f ; '_'
0000000000001363         db  0x5f ; '_'
0000000000001364         db  0x63 ; 'c'
0000000000001365         db  0x78 ; 'x'
0000000000001366         db  0x61 ; 'a'
0000000000001367         db  0x5f ; '_'
0000000000001368         db  0x61 ; 'a'
0000000000001369         db  0x74 ; 't'
000000000000136a         db  0x65 ; 'e'
000000000000136b         db  0x78 ; 'x'
000000000000136c         db  0x69 ; 'i'
000000000000136d         db  0x74 ; 't'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x47 ; 'G'
0000000000001370         db  0x4c ; 'L'
0000000000001371         db  0x49 ; 'I'
0000000000001372         db  0x42 ; 'B'
0000000000001373         db  0x43 ; 'C'
0000000000001374         db  0x5f ; '_'
0000000000001375         db  0x32 ; '2'
0000000000001376         db  0x2e ; '.'
0000000000001377         db  0x31 ; '1'
0000000000001378         db  0x34 ; '4'
0000000000001379         db  0x00 ; '.'
000000000000137a         db  0x47 ; 'G'
000000000000137b         db  0x4c ; 'L'
000000000000137c         db  0x49 ; 'I'
000000000000137d         db  0x42 ; 'B'
000000000000137e         db  0x43 ; 'C'
000000000000137f         db  0x5f ; '_'
0000000000001380         db  0x32 ; '2'
0000000000001381         db  0x2e ; '.'
0000000000001382         db  0x34 ; '4'
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x47 ; 'G'
0000000000001385         db  0x4c ; 'L'
0000000000001386         db  0x49 ; 'I'
0000000000001387         db  0x42 ; 'B'
0000000000001388         db  0x43 ; 'C'
0000000000001389         db  0x5f ; '_'
000000000000138a         db  0x32 ; '2'
000000000000138b         db  0x2e ; '.'
000000000000138c         db  0x31 ; '1'
000000000000138d         db  0x37 ; '7'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x47 ; 'G'
0000000000001390         db  0x4c ; 'L'
0000000000001391         db  0x49 ; 'I'
0000000000001392         db  0x42 ; 'B'
0000000000001393         db  0x43 ; 'C'
0000000000001394         db  0x5f ; '_'
0000000000001395         db  0x32 ; '2'
0000000000001396         db  0x2e ; '.'
0000000000001397         db  0x33 ; '3'
0000000000001398         db  0x2e ; '.'
0000000000001399         db  0x34 ; '4'
000000000000139a         db  0x00 ; '.'
000000000000139b         db  0x47 ; 'G'
000000000000139c         db  0x4c ; 'L'
000000000000139d         db  0x49 ; 'I'
000000000000139e         db  0x42 ; 'B'
000000000000139f         db  0x43 ; 'C'
00000000000013a0         db  0x5f ; '_'
00000000000013a1         db  0x32 ; '2'
00000000000013a2         db  0x2e ; '.'
00000000000013a3         db  0x32 ; '2'
00000000000013a4         db  0x2e ; '.'
00000000000013a5         db  0x35 ; '5'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x47 ; 'G'
00000000000013a8         db  0x4c ; 'L'
00000000000013a9         db  0x49 ; 'I'
00000000000013aa         db  0x42 ; 'B'
00000000000013ab         db  0x43 ; 'C'
00000000000013ac         db  0x5f ; '_'
00000000000013ad         db  0x32 ; '2'
00000000000013ae         db  0x2e ; '.'
00000000000013af         db  0x33 ; '3'
00000000000013b0         db  0x00 ; '.'
00000000000013b1         db  0x5f ; '_'
00000000000013b2         db  0x49 ; 'I'
00000000000013b3         db  0x54 ; 'T'
00000000000013b4         db  0x4d ; 'M'
00000000000013b5         db  0x5f ; '_'
00000000000013b6         db  0x64 ; 'd'
00000000000013b7         db  0x65 ; 'e'
00000000000013b8         db  0x72 ; 'r'
00000000000013b9         db  0x65 ; 'e'
00000000000013ba         db  0x67 ; 'g'
00000000000013bb         db  0x69 ; 'i'
00000000000013bc         db  0x73 ; 's'
00000000000013bd         db  0x74 ; 't'
00000000000013be         db  0x65 ; 'e'
00000000000013bf         db  0x72 ; 'r'
00000000000013c0         db  0x54 ; 'T'
00000000000013c1         db  0x4d ; 'M'
00000000000013c2         db  0x43 ; 'C'
00000000000013c3         db  0x6c ; 'l'
00000000000013c4         db  0x6f ; 'o'
00000000000013c5         db  0x6e ; 'n'
00000000000013c6         db  0x65 ; 'e'
00000000000013c7         db  0x54 ; 'T'
00000000000013c8         db  0x61 ; 'a'
00000000000013c9         db  0x62 ; 'b'
00000000000013ca         db  0x6c ; 'l'
00000000000013cb         db  0x65 ; 'e'
00000000000013cc         db  0x00 ; '.'
00000000000013cd         db  0x5f ; '_'
00000000000013ce         db  0x5f ; '_'
00000000000013cf         db  0x67 ; 'g'
00000000000013d0         db  0x6d ; 'm'
00000000000013d1         db  0x6f ; 'o'
00000000000013d2         db  0x6e ; 'n'
00000000000013d3         db  0x5f ; '_'
00000000000013d4         db  0x73 ; 's'
00000000000013d5         db  0x74 ; 't'
00000000000013d6         db  0x61 ; 'a'
00000000000013d7         db  0x72 ; 'r'
00000000000013d8         db  0x74 ; 't'
00000000000013d9         db  0x5f ; '_'
00000000000013da         db  0x5f ; '_'
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x5f ; '_'
00000000000013dd         db  0x49 ; 'I'
00000000000013de         db  0x54 ; 'T'
00000000000013df         db  0x4d ; 'M'
00000000000013e0         db  0x5f ; '_'
00000000000013e1         db  0x72 ; 'r'
00000000000013e2         db  0x65 ; 'e'
00000000000013e3         db  0x67 ; 'g'
00000000000013e4         db  0x69 ; 'i'
00000000000013e5         db  0x73 ; 's'
00000000000013e6         db  0x74 ; 't'
00000000000013e7         db  0x65 ; 'e'
00000000000013e8         db  0x72 ; 'r'
00000000000013e9         db  0x54 ; 'T'
00000000000013ea         db  0x4d ; 'M'
00000000000013eb         db  0x43 ; 'C'
00000000000013ec         db  0x6c ; 'l'
00000000000013ed         db  0x6f ; 'o'
00000000000013ee         db  0x6e ; 'n'
00000000000013ef         db  0x65 ; 'e'
00000000000013f0         db  0x54 ; 'T'
00000000000013f1         db  0x61 ; 'a'
00000000000013f2         db  0x62 ; 'b'
00000000000013f3         db  0x6c ; 'l'
00000000000013f4         db  0x65 ; 'e'
00000000000013f5         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0x13f6; 0x14ec[ (246 bytes)
        ; File offset : [5110; 5356[ (246 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

00000000000013f6         db  0x00 ; '.'
00000000000013f7         db  0x00 ; '.'
00000000000013f8         db  0x02 ; '.'
00000000000013f9         db  0x00 ; '.'
00000000000013fa         db  0x03 ; '.'
00000000000013fb         db  0x00 ; '.'
00000000000013fc         db  0x03 ; '.'
00000000000013fd         db  0x00 ; '.'
00000000000013fe         db  0x04 ; '.'
00000000000013ff         db  0x00 ; '.'
0000000000001400         db  0x03 ; '.'
0000000000001401         db  0x00 ; '.'
0000000000001402         db  0x03 ; '.'
0000000000001403         db  0x00 ; '.'
0000000000001404         db  0x03 ; '.'
0000000000001405         db  0x00 ; '.'
0000000000001406         db  0x03 ; '.'
0000000000001407         db  0x00 ; '.'
0000000000001408         db  0x03 ; '.'
0000000000001409         db  0x00 ; '.'
000000000000140a         db  0x00 ; '.'
000000000000140b         db  0x00 ; '.'
000000000000140c         db  0x03 ; '.'
000000000000140d         db  0x00 ; '.'
000000000000140e         db  0x03 ; '.'
000000000000140f         db  0x00 ; '.'
0000000000001410         db  0x03 ; '.'
0000000000001411         db  0x00 ; '.'
0000000000001412         db  0x03 ; '.'
0000000000001413         db  0x00 ; '.'
0000000000001414         db  0x03 ; '.'
0000000000001415         db  0x00 ; '.'
0000000000001416         db  0x03 ; '.'
0000000000001417         db  0x00 ; '.'
0000000000001418         db  0x03 ; '.'
0000000000001419         db  0x00 ; '.'
000000000000141a         db  0x03 ; '.'
000000000000141b         db  0x00 ; '.'
000000000000141c         db  0x03 ; '.'
000000000000141d         db  0x00 ; '.'
000000000000141e         db  0x03 ; '.'
000000000000141f         db  0x00 ; '.'
0000000000001420         db  0x03 ; '.'
0000000000001421         db  0x00 ; '.'
0000000000001422         db  0x05 ; '.'
0000000000001423         db  0x00 ; '.'
0000000000001424         db  0x03 ; '.'
0000000000001425         db  0x00 ; '.'
0000000000001426         db  0x03 ; '.'
0000000000001427         db  0x00 ; '.'
0000000000001428         db  0x03 ; '.'
0000000000001429         db  0x00 ; '.'
000000000000142a         db  0x03 ; '.'
000000000000142b         db  0x00 ; '.'
000000000000142c         db  0x03 ; '.'
000000000000142d         db  0x00 ; '.'
000000000000142e         db  0x03 ; '.'
000000000000142f         db  0x00 ; '.'
0000000000001430         db  0x03 ; '.'
0000000000001431         db  0x00 ; '.'
0000000000001432         db  0x03 ; '.'
0000000000001433         db  0x00 ; '.'
0000000000001434         db  0x03 ; '.'
0000000000001435         db  0x00 ; '.'
0000000000001436         db  0x03 ; '.'
0000000000001437         db  0x00 ; '.'
0000000000001438         db  0x06 ; '.'
0000000000001439         db  0x00 ; '.'
000000000000143a         db  0x03 ; '.'
000000000000143b         db  0x00 ; '.'
000000000000143c         db  0x03 ; '.'
000000000000143d         db  0x00 ; '.'
000000000000143e         db  0x03 ; '.'
000000000000143f         db  0x00 ; '.'
0000000000001440         db  0x03 ; '.'
0000000000001441         db  0x00 ; '.'
0000000000001442         db  0x06 ; '.'
0000000000001443         db  0x00 ; '.'
0000000000001444         db  0x03 ; '.'
0000000000001445         db  0x00 ; '.'
0000000000001446         db  0x03 ; '.'
0000000000001447         db  0x00 ; '.'
0000000000001448         db  0x03 ; '.'
0000000000001449         db  0x00 ; '.'
000000000000144a         db  0x03 ; '.'
000000000000144b         db  0x00 ; '.'
000000000000144c         db  0x03 ; '.'
000000000000144d         db  0x00 ; '.'
000000000000144e         db  0x03 ; '.'
000000000000144f         db  0x00 ; '.'
0000000000001450         db  0x03 ; '.'
0000000000001451         db  0x00 ; '.'
0000000000001452         db  0x03 ; '.'
0000000000001453         db  0x00 ; '.'
0000000000001454         db  0x03 ; '.'
0000000000001455         db  0x00 ; '.'
0000000000001456         db  0x03 ; '.'
0000000000001457         db  0x00 ; '.'
0000000000001458         db  0x03 ; '.'
0000000000001459         db  0x00 ; '.'
000000000000145a         db  0x03 ; '.'
000000000000145b         db  0x00 ; '.'
000000000000145c         db  0x03 ; '.'
000000000000145d         db  0x00 ; '.'
000000000000145e         db  0x03 ; '.'
000000000000145f         db  0x00 ; '.'
0000000000001460         db  0x03 ; '.'
0000000000001461         db  0x00 ; '.'
0000000000001462         db  0x03 ; '.'
0000000000001463         db  0x00 ; '.'
0000000000001464         db  0x03 ; '.'
0000000000001465         db  0x00 ; '.'
0000000000001466         db  0x03 ; '.'
0000000000001467         db  0x00 ; '.'
0000000000001468         db  0x03 ; '.'
0000000000001469         db  0x00 ; '.'
000000000000146a         db  0x03 ; '.'
000000000000146b         db  0x00 ; '.'
000000000000146c         db  0x03 ; '.'
000000000000146d         db  0x00 ; '.'
000000000000146e         db  0x03 ; '.'
000000000000146f         db  0x00 ; '.'
0000000000001470         db  0x04 ; '.'
0000000000001471         db  0x00 ; '.'
0000000000001472         db  0x03 ; '.'
0000000000001473         db  0x00 ; '.'
0000000000001474         db  0x00 ; '.'
0000000000001475         db  0x00 ; '.'
0000000000001476         db  0x07 ; '.'
0000000000001477         db  0x00 ; '.'
0000000000001478         db  0x03 ; '.'
0000000000001479         db  0x00 ; '.'
000000000000147a         db  0x03 ; '.'
000000000000147b         db  0x00 ; '.'
000000000000147c         db  0x03 ; '.'
000000000000147d         db  0x00 ; '.'
000000000000147e         db  0x03 ; '.'
000000000000147f         db  0x00 ; '.'
0000000000001480         db  0x03 ; '.'
0000000000001481         db  0x00 ; '.'
0000000000001482         db  0x03 ; '.'
0000000000001483         db  0x00 ; '.'
0000000000001484         db  0x03 ; '.'
0000000000001485         db  0x00 ; '.'
0000000000001486         db  0x03 ; '.'
0000000000001487         db  0x00 ; '.'
0000000000001488         db  0x03 ; '.'
0000000000001489         db  0x00 ; '.'
000000000000148a         db  0x03 ; '.'
000000000000148b         db  0x00 ; '.'
000000000000148c         db  0x03 ; '.'
000000000000148d         db  0x00 ; '.'
000000000000148e         db  0x03 ; '.'
000000000000148f         db  0x00 ; '.'
0000000000001490         db  0x03 ; '.'
0000000000001491         db  0x00 ; '.'
0000000000001492         db  0x03 ; '.'
0000000000001493         db  0x00 ; '.'
0000000000001494         db  0x03 ; '.'
0000000000001495         db  0x00 ; '.'
0000000000001496         db  0x03 ; '.'
0000000000001497         db  0x00 ; '.'
0000000000001498         db  0x03 ; '.'
0000000000001499         db  0x00 ; '.'
000000000000149a         db  0x03 ; '.'
000000000000149b         db  0x00 ; '.'
000000000000149c         db  0x04 ; '.'
000000000000149d         db  0x00 ; '.'
000000000000149e         db  0x03 ; '.'
000000000000149f         db  0x00 ; '.'
00000000000014a0         db  0x03 ; '.'
00000000000014a1         db  0x00 ; '.'
00000000000014a2         db  0x03 ; '.'
00000000000014a3         db  0x00 ; '.'
00000000000014a4         db  0x03 ; '.'
00000000000014a5         db  0x00 ; '.'
00000000000014a6         db  0x03 ; '.'
00000000000014a7         db  0x00 ; '.'
00000000000014a8         db  0x03 ; '.'
00000000000014a9         db  0x00 ; '.'
00000000000014aa         db  0x03 ; '.'
00000000000014ab         db  0x00 ; '.'
00000000000014ac         db  0x03 ; '.'
00000000000014ad         db  0x00 ; '.'
00000000000014ae         db  0x03 ; '.'
00000000000014af         db  0x00 ; '.'
00000000000014b0         db  0x03 ; '.'
00000000000014b1         db  0x00 ; '.'
00000000000014b2         db  0x03 ; '.'
00000000000014b3         db  0x00 ; '.'
00000000000014b4         db  0x03 ; '.'
00000000000014b5         db  0x00 ; '.'
00000000000014b6         db  0x03 ; '.'
00000000000014b7         db  0x00 ; '.'
00000000000014b8         db  0x03 ; '.'
00000000000014b9         db  0x00 ; '.'
00000000000014ba         db  0x04 ; '.'
00000000000014bb         db  0x00 ; '.'
00000000000014bc         db  0x00 ; '.'
00000000000014bd         db  0x00 ; '.'
00000000000014be         db  0x03 ; '.'
00000000000014bf         db  0x00 ; '.'
00000000000014c0         db  0x03 ; '.'
00000000000014c1         db  0x00 ; '.'
00000000000014c2         db  0x03 ; '.'
00000000000014c3         db  0x00 ; '.'
00000000000014c4         db  0x03 ; '.'
00000000000014c5         db  0x00 ; '.'
00000000000014c6         db  0x03 ; '.'
00000000000014c7         db  0x00 ; '.'
00000000000014c8         db  0x02 ; '.'
00000000000014c9         db  0x00 ; '.'
00000000000014ca         db  0x02 ; '.'
00000000000014cb         db  0x00 ; '.'
00000000000014cc         db  0x04 ; '.'
00000000000014cd         db  0x00 ; '.'
00000000000014ce         db  0x01 ; '.'
00000000000014cf         db  0x00 ; '.'
00000000000014d0         db  0x01 ; '.'
00000000000014d1         db  0x00 ; '.'
00000000000014d2         db  0x03 ; '.'
00000000000014d3         db  0x00 ; '.'
00000000000014d4         db  0x01 ; '.'
00000000000014d5         db  0x00 ; '.'
00000000000014d6         db  0x01 ; '.'
00000000000014d7         db  0x00 ; '.'
00000000000014d8         db  0x03 ; '.'
00000000000014d9         db  0x00 ; '.'
00000000000014da         db  0x01 ; '.'
00000000000014db         db  0x00 ; '.'
00000000000014dc         db  0x03 ; '.'
00000000000014dd         db  0x00 ; '.'
00000000000014de         db  0x01 ; '.'
00000000000014df         db  0x00 ; '.'
00000000000014e0         db  0x03 ; '.'
00000000000014e1         db  0x00 ; '.'
00000000000014e2         db  0x03 ; '.'
00000000000014e3         db  0x00 ; '.'
00000000000014e4         db  0x03 ; '.'
00000000000014e5         db  0x00 ; '.'
00000000000014e6         db  0x03 ; '.'
00000000000014e7         db  0x00 ; '.'
00000000000014e8         db  0x03 ; '.'
00000000000014e9         db  0x00 ; '.'
00000000000014ea         db  0x01 ; '.'
00000000000014eb         db  0x00 ; '.'
00000000000014ec         db  0x00 ; '.'
00000000000014ed         db  0x00 ; '.'
00000000000014ee         db  0x00 ; '.'
00000000000014ef         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0x14f0; 0x1560[ (112 bytes)
        ; File offset : [5360; 5472[ (112 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

00000000000014f0         db  0x01 ; '.'
00000000000014f1         db  0x00 ; '.'
00000000000014f2         db  0x06 ; '.'
00000000000014f3         db  0x00 ; '.'
00000000000014f4         db  0x01 ; '.'
00000000000014f5         db  0x00 ; '.'
00000000000014f6         db  0x00 ; '.'
00000000000014f7         db  0x00 ; '.'
00000000000014f8         db  0x10 ; '.'
00000000000014f9         db  0x00 ; '.'
00000000000014fa         db  0x00 ; '.'
00000000000014fb         db  0x00 ; '.'
00000000000014fc         db  0x00 ; '.'
00000000000014fd         db  0x00 ; '.'
00000000000014fe         db  0x00 ; '.'
00000000000014ff         db  0x00 ; '.'
0000000000001500         db  0x94 ; '.'
0000000000001501         db  0x91 ; '.'
0000000000001502         db  0x96 ; '.'
0000000000001503         db  0x06 ; '.'
0000000000001504         db  0x00 ; '.'
0000000000001505         db  0x00 ; '.'
0000000000001506         db  0x07 ; '.'
0000000000001507         db  0x00 ; '.'
0000000000001508         db  0xe7 ; '.'
0000000000001509         db  0x04 ; '.'
000000000000150a         db  0x00 ; '.'
000000000000150b         db  0x00 ; '.'
000000000000150c         db  0x10 ; '.'
000000000000150d         db  0x00 ; '.'
000000000000150e         db  0x00 ; '.'
000000000000150f         db  0x00 ; '.'
0000000000001510         db  0x14 ; '.'
0000000000001511         db  0x69 ; 'i'
0000000000001512         db  0x69 ; 'i'
0000000000001513         db  0x0d ; '.'
0000000000001514         db  0x00 ; '.'
0000000000001515         db  0x00 ; '.'
0000000000001516         db  0x06 ; '.'
0000000000001517         db  0x00 ; '.'
0000000000001518         db  0xf2 ; '.'
0000000000001519         db  0x04 ; '.'
000000000000151a         db  0x00 ; '.'
000000000000151b         db  0x00 ; '.'
000000000000151c         db  0x10 ; '.'
000000000000151d         db  0x00 ; '.'
000000000000151e         db  0x00 ; '.'
000000000000151f         db  0x00 ; '.'
0000000000001520         db  0x97 ; '.'
0000000000001521         db  0x91 ; '.'
0000000000001522         db  0x96 ; '.'
0000000000001523         db  0x06 ; '.'
0000000000001524         db  0x00 ; '.'
0000000000001525         db  0x00 ; '.'
0000000000001526         db  0x05 ; '.'
0000000000001527         db  0x00 ; '.'
0000000000001528         db  0xfc ; '.'
0000000000001529         db  0x04 ; '.'
000000000000152a         db  0x00 ; '.'
000000000000152b         db  0x00 ; '.'
000000000000152c         db  0x10 ; '.'
000000000000152d         db  0x00 ; '.'
000000000000152e         db  0x00 ; '.'
000000000000152f         db  0x00 ; '.'
0000000000001530         db  0x74 ; 't'
0000000000001531         db  0x19 ; '.'
0000000000001532         db  0x69 ; 'i'
0000000000001533         db  0x09 ; '.'
0000000000001534         db  0x00 ; '.'
0000000000001535         db  0x00 ; '.'
0000000000001536         db  0x04 ; '.'
0000000000001537         db  0x00 ; '.'
0000000000001538         db  0x07 ; '.'
0000000000001539         db  0x05 ; '.'
000000000000153a         db  0x00 ; '.'
000000000000153b         db  0x00 ; '.'
000000000000153c         db  0x10 ; '.'
000000000000153d         db  0x00 ; '.'
000000000000153e         db  0x00 ; '.'
000000000000153f         db  0x00 ; '.'
0000000000001540         db  0x75 ; 'u'
0000000000001541         db  0x1a ; '.'
0000000000001542         db  0x69 ; 'i'
0000000000001543         db  0x09 ; '.'
0000000000001544         db  0x00 ; '.'
0000000000001545         db  0x00 ; '.'
0000000000001546         db  0x03 ; '.'
0000000000001547         db  0x00 ; '.'
0000000000001548         db  0x13 ; '.'
0000000000001549         db  0x05 ; '.'
000000000000154a         db  0x00 ; '.'
000000000000154b         db  0x00 ; '.'
000000000000154c         db  0x10 ; '.'
000000000000154d         db  0x00 ; '.'
000000000000154e         db  0x00 ; '.'
000000000000154f         db  0x00 ; '.'
0000000000001550         db  0x13 ; '.'
0000000000001551         db  0x69 ; 'i'
0000000000001552         db  0x69 ; 'i'
0000000000001553         db  0x0d ; '.'
0000000000001554         db  0x00 ; '.'
0000000000001555         db  0x00 ; '.'
0000000000001556         db  0x02 ; '.'
0000000000001557         db  0x00 ; '.'
0000000000001558         db  0x1f ; '.'
0000000000001559         db  0x05 ; '.'
000000000000155a         db  0x00 ; '.'
000000000000155b         db  0x00 ; '.'
000000000000155c         db  0x00 ; '.'
000000000000155d         db  0x00 ; '.'
000000000000155e         db  0x00 ; '.'
000000000000155f         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0x1560; 0x28b0[ (4944 bytes)
        ; File offset : [5472; 10416[ (4944 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000001560         db  0x50 ; 'P'
0000000000001561         db  0xf0 ; '.'
0000000000001562         db  0x21 ; '!'
0000000000001563         db  0x00 ; '.'
0000000000001564         db  0x00 ; '.'
0000000000001565         db  0x00 ; '.'
0000000000001566         db  0x00 ; '.'
0000000000001567         db  0x00 ; '.'
0000000000001568         db  0x08 ; '.'
0000000000001569         db  0x00 ; '.'
000000000000156a         db  0x00 ; '.'
000000000000156b         db  0x00 ; '.'
000000000000156c         db  0x00 ; '.'
000000000000156d         db  0x00 ; '.'
000000000000156e         db  0x00 ; '.'
000000000000156f         db  0x00 ; '.'
0000000000001570         db  0x70 ; 'p'
0000000000001571         db  0x53 ; 'S'
0000000000001572         db  0x00 ; '.'
0000000000001573         db  0x00 ; '.'
0000000000001574         db  0x00 ; '.'
0000000000001575         db  0x00 ; '.'
0000000000001576         db  0x00 ; '.'
0000000000001577         db  0x00 ; '.'
0000000000001578         db  0x58 ; 'X'
0000000000001579         db  0xf0 ; '.'
000000000000157a         db  0x21 ; '!'
000000000000157b         db  0x00 ; '.'
000000000000157c         db  0x00 ; '.'
000000000000157d         db  0x00 ; '.'
000000000000157e         db  0x00 ; '.'
000000000000157f         db  0x00 ; '.'
0000000000001580         db  0x08 ; '.'
0000000000001581         db  0x00 ; '.'
0000000000001582         db  0x00 ; '.'
0000000000001583         db  0x00 ; '.'
0000000000001584         db  0x00 ; '.'
0000000000001585         db  0x00 ; '.'
0000000000001586         db  0x00 ; '.'
0000000000001587         db  0x00 ; '.'
0000000000001588         db  0x30 ; '0'
0000000000001589         db  0x53 ; 'S'
000000000000158a         db  0x00 ; '.'
000000000000158b         db  0x00 ; '.'
000000000000158c         db  0x00 ; '.'
000000000000158d         db  0x00 ; '.'
000000000000158e         db  0x00 ; '.'
000000000000158f         db  0x00 ; '.'
0000000000001590         db  0x60 ; '`'
0000000000001591         db  0xf0 ; '.'
0000000000001592         db  0x21 ; '!'
0000000000001593         db  0x00 ; '.'
0000000000001594         db  0x00 ; '.'
0000000000001595         db  0x00 ; '.'
0000000000001596         db  0x00 ; '.'
0000000000001597         db  0x00 ; '.'
0000000000001598         db  0x08 ; '.'
0000000000001599         db  0x00 ; '.'
000000000000159a         db  0x00 ; '.'
000000000000159b         db  0x00 ; '.'
000000000000159c         db  0x00 ; '.'
000000000000159d         db  0x00 ; '.'
000000000000159e         db  0x00 ; '.'
000000000000159f         db  0x00 ; '.'
00000000000015a0         db  0x80 ; '.'
00000000000015a1         db  0x5e ; '^'
00000000000015a2         db  0x00 ; '.'
00000000000015a3         db  0x00 ; '.'
00000000000015a4         db  0x00 ; '.'
00000000000015a5         db  0x00 ; '.'
00000000000015a6         db  0x00 ; '.'
00000000000015a7         db  0x00 ; '.'
00000000000015a8         db  0x68 ; 'h'
00000000000015a9         db  0xf0 ; '.'
00000000000015aa         db  0x21 ; '!'
00000000000015ab         db  0x00 ; '.'
00000000000015ac         db  0x00 ; '.'
00000000000015ad         db  0x00 ; '.'
00000000000015ae         db  0x00 ; '.'
00000000000015af         db  0x00 ; '.'
00000000000015b0         db  0x08 ; '.'
00000000000015b1         db  0x00 ; '.'
00000000000015b2         db  0x00 ; '.'
00000000000015b3         db  0x00 ; '.'
00000000000015b4         db  0x00 ; '.'
00000000000015b5         db  0x00 ; '.'
00000000000015b6         db  0x00 ; '.'
00000000000015b7         db  0x00 ; '.'
00000000000015b8         db  0xf0 ; '.'
00000000000015b9         db  0x65 ; 'e'
00000000000015ba         db  0x00 ; '.'
00000000000015bb         db  0x00 ; '.'
00000000000015bc         db  0x00 ; '.'
00000000000015bd         db  0x00 ; '.'
00000000000015be         db  0x00 ; '.'
00000000000015bf         db  0x00 ; '.'
00000000000015c0         db  0x70 ; 'p'
00000000000015c1         db  0xf0 ; '.'
00000000000015c2         db  0x21 ; '!'
00000000000015c3         db  0x00 ; '.'
00000000000015c4         db  0x00 ; '.'
00000000000015c5         db  0x00 ; '.'
00000000000015c6         db  0x00 ; '.'
00000000000015c7         db  0x00 ; '.'
00000000000015c8         db  0x08 ; '.'
00000000000015c9         db  0x00 ; '.'
00000000000015ca         db  0x00 ; '.'
00000000000015cb         db  0x00 ; '.'
00000000000015cc         db  0x00 ; '.'
00000000000015cd         db  0x00 ; '.'
00000000000015ce         db  0x00 ; '.'
00000000000015cf         db  0x00 ; '.'
00000000000015d0         db  0x90 ; '.'
00000000000015d1         db  0x5e ; '^'
00000000000015d2         db  0x00 ; '.'
00000000000015d3         db  0x00 ; '.'
00000000000015d4         db  0x00 ; '.'
00000000000015d5         db  0x00 ; '.'
00000000000015d6         db  0x00 ; '.'
00000000000015d7         db  0x00 ; '.'
00000000000015d8         db  0x78 ; 'x'
00000000000015d9         db  0xf0 ; '.'
00000000000015da         db  0x21 ; '!'
00000000000015db         db  0x00 ; '.'
00000000000015dc         db  0x00 ; '.'
00000000000015dd         db  0x00 ; '.'
00000000000015de         db  0x00 ; '.'
00000000000015df         db  0x00 ; '.'
00000000000015e0         db  0x08 ; '.'
00000000000015e1         db  0x00 ; '.'
00000000000015e2         db  0x00 ; '.'
00000000000015e3         db  0x00 ; '.'
00000000000015e4         db  0x00 ; '.'
00000000000015e5         db  0x00 ; '.'
00000000000015e6         db  0x00 ; '.'
00000000000015e7         db  0x00 ; '.'
00000000000015e8         db  0x10 ; '.'
00000000000015e9         db  0x67 ; 'g'
00000000000015ea         db  0x00 ; '.'
00000000000015eb         db  0x00 ; '.'
00000000000015ec         db  0x00 ; '.'
00000000000015ed         db  0x00 ; '.'
00000000000015ee         db  0x00 ; '.'
00000000000015ef         db  0x00 ; '.'
00000000000015f0         db  0x80 ; '.'
00000000000015f1         db  0xf0 ; '.'
00000000000015f2         db  0x21 ; '!'
00000000000015f3         db  0x00 ; '.'
00000000000015f4         db  0x00 ; '.'
00000000000015f5         db  0x00 ; '.'
00000000000015f6         db  0x00 ; '.'
00000000000015f7         db  0x00 ; '.'
00000000000015f8         db  0x08 ; '.'
00000000000015f9         db  0x00 ; '.'
00000000000015fa         db  0x00 ; '.'
00000000000015fb         db  0x00 ; '.'
00000000000015fc         db  0x00 ; '.'
00000000000015fd         db  0x00 ; '.'
00000000000015fe         db  0x00 ; '.'
00000000000015ff         db  0x00 ; '.'
0000000000001600         db  0xc0 ; '.'
0000000000001601         db  0x5a ; 'Z'
0000000000001602         db  0x00 ; '.'
0000000000001603         db  0x00 ; '.'
0000000000001604         db  0x00 ; '.'
0000000000001605         db  0x00 ; '.'
0000000000001606         db  0x00 ; '.'
0000000000001607         db  0x00 ; '.'
0000000000001608         db  0x88 ; '.'
0000000000001609         db  0xf0 ; '.'
000000000000160a         db  0x21 ; '!'
000000000000160b         db  0x00 ; '.'
000000000000160c         db  0x00 ; '.'
000000000000160d         db  0x00 ; '.'
000000000000160e         db  0x00 ; '.'
000000000000160f         db  0x00 ; '.'
0000000000001610         db  0x08 ; '.'
0000000000001611         db  0x00 ; '.'
0000000000001612         db  0x00 ; '.'
0000000000001613         db  0x00 ; '.'
0000000000001614         db  0x00 ; '.'
0000000000001615         db  0x00 ; '.'
0000000000001616         db  0x00 ; '.'
0000000000001617         db  0x00 ; '.'
0000000000001618         db  0x80 ; '.'
0000000000001619         db  0x66 ; 'f'
000000000000161a         db  0x00 ; '.'
000000000000161b         db  0x00 ; '.'
000000000000161c         db  0x00 ; '.'
000000000000161d         db  0x00 ; '.'
000000000000161e         db  0x00 ; '.'
000000000000161f         db  0x00 ; '.'
0000000000001620         db  0x90 ; '.'
0000000000001621         db  0xf0 ; '.'
0000000000001622         db  0x21 ; '!'
0000000000001623         db  0x00 ; '.'
0000000000001624         db  0x00 ; '.'
0000000000001625         db  0x00 ; '.'
0000000000001626         db  0x00 ; '.'
0000000000001627         db  0x00 ; '.'
0000000000001628         db  0x08 ; '.'
0000000000001629         db  0x00 ; '.'
000000000000162a         db  0x00 ; '.'
000000000000162b         db  0x00 ; '.'
000000000000162c         db  0x00 ; '.'
000000000000162d         db  0x00 ; '.'
000000000000162e         db  0x00 ; '.'
000000000000162f         db  0x00 ; '.'
0000000000001630         db  0xd0 ; '.'
0000000000001631         db  0x5a ; 'Z'
0000000000001632         db  0x00 ; '.'
0000000000001633         db  0x00 ; '.'
0000000000001634         db  0x00 ; '.'
0000000000001635         db  0x00 ; '.'
0000000000001636         db  0x00 ; '.'
0000000000001637         db  0x00 ; '.'
0000000000001638         db  0x98 ; '.'
0000000000001639         db  0xf0 ; '.'
000000000000163a         db  0x21 ; '!'
000000000000163b         db  0x00 ; '.'
000000000000163c         db  0x00 ; '.'
000000000000163d         db  0x00 ; '.'
000000000000163e         db  0x00 ; '.'
000000000000163f         db  0x00 ; '.'
0000000000001640         db  0x08 ; '.'
0000000000001641         db  0x00 ; '.'
0000000000001642         db  0x00 ; '.'
0000000000001643         db  0x00 ; '.'
0000000000001644         db  0x00 ; '.'
0000000000001645         db  0x00 ; '.'
0000000000001646         db  0x00 ; '.'
0000000000001647         db  0x00 ; '.'
0000000000001648         db  0xa0 ; '.'
0000000000001649         db  0x67 ; 'g'
000000000000164a         db  0x00 ; '.'
000000000000164b         db  0x00 ; '.'
000000000000164c         db  0x00 ; '.'
000000000000164d         db  0x00 ; '.'
000000000000164e         db  0x00 ; '.'
000000000000164f         db  0x00 ; '.'
0000000000001650         db  0xa0 ; '.'
0000000000001651         db  0xf0 ; '.'
0000000000001652         db  0x21 ; '!'
0000000000001653         db  0x00 ; '.'
0000000000001654         db  0x00 ; '.'
0000000000001655         db  0x00 ; '.'
0000000000001656         db  0x00 ; '.'
0000000000001657         db  0x00 ; '.'
0000000000001658         db  0x08 ; '.'
0000000000001659         db  0x00 ; '.'
000000000000165a         db  0x00 ; '.'
000000000000165b         db  0x00 ; '.'
000000000000165c         db  0x00 ; '.'
000000000000165d         db  0x00 ; '.'
000000000000165e         db  0x00 ; '.'
000000000000165f         db  0x00 ; '.'
0000000000001660         db  0x50 ; 'P'
0000000000001661         db  0xac ; '.'
0000000000001662         db  0x00 ; '.'
0000000000001663         db  0x00 ; '.'
0000000000001664         db  0x00 ; '.'
0000000000001665         db  0x00 ; '.'
0000000000001666         db  0x00 ; '.'
0000000000001667         db  0x00 ; '.'
0000000000001668         db  0xa8 ; '.'
0000000000001669         db  0xf0 ; '.'
000000000000166a         db  0x21 ; '!'
000000000000166b         db  0x00 ; '.'
000000000000166c         db  0x00 ; '.'
000000000000166d         db  0x00 ; '.'
000000000000166e         db  0x00 ; '.'
000000000000166f         db  0x00 ; '.'
0000000000001670         db  0x08 ; '.'
0000000000001671         db  0x00 ; '.'
0000000000001672         db  0x00 ; '.'
0000000000001673         db  0x00 ; '.'
0000000000001674         db  0x00 ; '.'
0000000000001675         db  0x00 ; '.'
0000000000001676         db  0x00 ; '.'
0000000000001677         db  0x00 ; '.'
0000000000001678         db  0x00 ; '.'
0000000000001679         db  0xb5 ; '.'
000000000000167a         db  0x00 ; '.'
000000000000167b         db  0x00 ; '.'
000000000000167c         db  0x00 ; '.'
000000000000167d         db  0x00 ; '.'
000000000000167e         db  0x00 ; '.'
000000000000167f         db  0x00 ; '.'
0000000000001680         db  0xb0 ; '.'
0000000000001681         db  0xf0 ; '.'
0000000000001682         db  0x21 ; '!'
0000000000001683         db  0x00 ; '.'
0000000000001684         db  0x00 ; '.'
0000000000001685         db  0x00 ; '.'
0000000000001686         db  0x00 ; '.'
0000000000001687         db  0x00 ; '.'
0000000000001688         db  0x08 ; '.'
0000000000001689         db  0x00 ; '.'
000000000000168a         db  0x00 ; '.'
000000000000168b         db  0x00 ; '.'
000000000000168c         db  0x00 ; '.'
000000000000168d         db  0x00 ; '.'
000000000000168e         db  0x00 ; '.'
000000000000168f         db  0x00 ; '.'
0000000000001690         db  0xc0 ; '.'
0000000000001691         db  0xac ; '.'
0000000000001692         db  0x00 ; '.'
0000000000001693         db  0x00 ; '.'
0000000000001694         db  0x00 ; '.'
0000000000001695         db  0x00 ; '.'
0000000000001696         db  0x00 ; '.'
0000000000001697         db  0x00 ; '.'
0000000000001698         db  0xb8 ; '.'
0000000000001699         db  0xf0 ; '.'
000000000000169a         db  0x21 ; '!'
000000000000169b         db  0x00 ; '.'
000000000000169c         db  0x00 ; '.'
000000000000169d         db  0x00 ; '.'
000000000000169e         db  0x00 ; '.'
000000000000169f         db  0x00 ; '.'
00000000000016a0         db  0x08 ; '.'
00000000000016a1         db  0x00 ; '.'
00000000000016a2         db  0x00 ; '.'
00000000000016a3         db  0x00 ; '.'
00000000000016a4         db  0x00 ; '.'
00000000000016a5         db  0x00 ; '.'
00000000000016a6         db  0x00 ; '.'
00000000000016a7         db  0x00 ; '.'
00000000000016a8         db  0x10 ; '.'
00000000000016a9         db  0xb4 ; '.'
00000000000016aa         db  0x00 ; '.'
00000000000016ab         db  0x00 ; '.'
00000000000016ac         db  0x00 ; '.'
00000000000016ad         db  0x00 ; '.'
00000000000016ae         db  0x00 ; '.'
00000000000016af         db  0x00 ; '.'
00000000000016b0         db  0xc0 ; '.'
00000000000016b1         db  0xf0 ; '.'
00000000000016b2         db  0x21 ; '!'
00000000000016b3         db  0x00 ; '.'
00000000000016b4         db  0x00 ; '.'
00000000000016b5         db  0x00 ; '.'
00000000000016b6         db  0x00 ; '.'
00000000000016b7         db  0x00 ; '.'
00000000000016b8         db  0x08 ; '.'
00000000000016b9         db  0x00 ; '.'
00000000000016ba         db  0x00 ; '.'
00000000000016bb         db  0x00 ; '.'
00000000000016bc         db  0x00 ; '.'
00000000000016bd         db  0x00 ; '.'
00000000000016be         db  0x00 ; '.'
00000000000016bf         db  0x00 ; '.'
00000000000016c0         db  0x10 ; '.'
00000000000016c1         db  0xb3 ; '.'
00000000000016c2         db  0x00 ; '.'
00000000000016c3         db  0x00 ; '.'
00000000000016c4         db  0x00 ; '.'
00000000000016c5         db  0x00 ; '.'
00000000000016c6         db  0x00 ; '.'
00000000000016c7         db  0x00 ; '.'
00000000000016c8         db  0xc8 ; '.'
00000000000016c9         db  0xf0 ; '.'
00000000000016ca         db  0x21 ; '!'
00000000000016cb         db  0x00 ; '.'
00000000000016cc         db  0x00 ; '.'
00000000000016cd         db  0x00 ; '.'
00000000000016ce         db  0x00 ; '.'
00000000000016cf         db  0x00 ; '.'
00000000000016d0         db  0x08 ; '.'
00000000000016d1         db  0x00 ; '.'
00000000000016d2         db  0x00 ; '.'
00000000000016d3         db  0x00 ; '.'
00000000000016d4         db  0x00 ; '.'
00000000000016d5         db  0x00 ; '.'
00000000000016d6         db  0x00 ; '.'
00000000000016d7         db  0x00 ; '.'
00000000000016d8         db  0x10 ; '.'
00000000000016d9         db  0xb8 ; '.'
00000000000016da         db  0x00 ; '.'
00000000000016db         db  0x00 ; '.'
00000000000016dc         db  0x00 ; '.'
00000000000016dd         db  0x00 ; '.'
00000000000016de         db  0x00 ; '.'
00000000000016df         db  0x00 ; '.'
00000000000016e0         db  0xd0 ; '.'
00000000000016e1         db  0xf0 ; '.'
00000000000016e2         db  0x21 ; '!'
00000000000016e3         db  0x00 ; '.'
00000000000016e4         db  0x00 ; '.'
00000000000016e5         db  0x00 ; '.'
00000000000016e6         db  0x00 ; '.'
00000000000016e7         db  0x00 ; '.'
00000000000016e8         db  0x08 ; '.'
00000000000016e9         db  0x00 ; '.'
00000000000016ea         db  0x00 ; '.'
00000000000016eb         db  0x00 ; '.'
00000000000016ec         db  0x00 ; '.'
00000000000016ed         db  0x00 ; '.'
00000000000016ee         db  0x00 ; '.'
00000000000016ef         db  0x00 ; '.'
00000000000016f0         db  0x90 ; '.'
00000000000016f1         db  0xb3 ; '.'
00000000000016f2         db  0x00 ; '.'
00000000000016f3         db  0x00 ; '.'
00000000000016f4         db  0x00 ; '.'
00000000000016f5         db  0x00 ; '.'
00000000000016f6         db  0x00 ; '.'
00000000000016f7         db  0x00 ; '.'
00000000000016f8         db  0xd8 ; '.'
00000000000016f9         db  0xf0 ; '.'
00000000000016fa         db  0x21 ; '!'
00000000000016fb         db  0x00 ; '.'
00000000000016fc         db  0x00 ; '.'
00000000000016fd         db  0x00 ; '.'
00000000000016fe         db  0x00 ; '.'
00000000000016ff         db  0x00 ; '.'
0000000000001700         db  0x08 ; '.'
0000000000001701         db  0x00 ; '.'
0000000000001702         db  0x00 ; '.'
0000000000001703         db  0x00 ; '.'
0000000000001704         db  0x00 ; '.'
0000000000001705         db  0x00 ; '.'
0000000000001706         db  0x00 ; '.'
0000000000001707         db  0x00 ; '.'
0000000000001708         db  0x50 ; 'P'
0000000000001709         db  0x6b ; 'k'
000000000000170a         db  0x00 ; '.'
000000000000170b         db  0x00 ; '.'
000000000000170c         db  0x00 ; '.'
000000000000170d         db  0x00 ; '.'
000000000000170e         db  0x00 ; '.'
000000000000170f         db  0x00 ; '.'
0000000000001710         db  0xe0 ; '.'
0000000000001711         db  0xf0 ; '.'
0000000000001712         db  0x21 ; '!'
0000000000001713         db  0x00 ; '.'
0000000000001714         db  0x00 ; '.'
0000000000001715         db  0x00 ; '.'
0000000000001716         db  0x00 ; '.'
0000000000001717         db  0x00 ; '.'
0000000000001718         db  0x08 ; '.'
0000000000001719         db  0x00 ; '.'
000000000000171a         db  0x00 ; '.'
000000000000171b         db  0x00 ; '.'
000000000000171c         db  0x00 ; '.'
000000000000171d         db  0x00 ; '.'
000000000000171e         db  0x00 ; '.'
000000000000171f         db  0x00 ; '.'
0000000000001720         db  0x10 ; '.'
0000000000001721         db  0x5e ; '^'
0000000000001722         db  0x00 ; '.'
0000000000001723         db  0x00 ; '.'
0000000000001724         db  0x00 ; '.'
0000000000001725         db  0x00 ; '.'
0000000000001726         db  0x00 ; '.'
0000000000001727         db  0x00 ; '.'
0000000000001728         db  0xe8 ; '.'
0000000000001729         db  0xf0 ; '.'
000000000000172a         db  0x21 ; '!'
000000000000172b         db  0x00 ; '.'
000000000000172c         db  0x00 ; '.'
000000000000172d         db  0x00 ; '.'
000000000000172e         db  0x00 ; '.'
000000000000172f         db  0x00 ; '.'
0000000000001730         db  0x08 ; '.'
0000000000001731         db  0x00 ; '.'
0000000000001732         db  0x00 ; '.'
0000000000001733         db  0x00 ; '.'
0000000000001734         db  0x00 ; '.'
0000000000001735         db  0x00 ; '.'
0000000000001736         db  0x00 ; '.'
0000000000001737         db  0x00 ; '.'
0000000000001738         db  0x70 ; 'p'
0000000000001739         db  0x63 ; 'c'
000000000000173a         db  0x00 ; '.'
000000000000173b         db  0x00 ; '.'
000000000000173c         db  0x00 ; '.'
000000000000173d         db  0x00 ; '.'
000000000000173e         db  0x00 ; '.'
000000000000173f         db  0x00 ; '.'
0000000000001740         db  0xf0 ; '.'
0000000000001741         db  0xf0 ; '.'
0000000000001742         db  0x21 ; '!'
0000000000001743         db  0x00 ; '.'
0000000000001744         db  0x00 ; '.'
0000000000001745         db  0x00 ; '.'
0000000000001746         db  0x00 ; '.'
0000000000001747         db  0x00 ; '.'
0000000000001748         db  0x08 ; '.'
0000000000001749         db  0x00 ; '.'
000000000000174a         db  0x00 ; '.'
000000000000174b         db  0x00 ; '.'
000000000000174c         db  0x00 ; '.'
000000000000174d         db  0x00 ; '.'
000000000000174e         db  0x00 ; '.'
000000000000174f         db  0x00 ; '.'
0000000000001750         db  0x40 ; '@'
0000000000001751         db  0x5e ; '^'
0000000000001752         db  0x00 ; '.'
0000000000001753         db  0x00 ; '.'
0000000000001754         db  0x00 ; '.'
0000000000001755         db  0x00 ; '.'
0000000000001756         db  0x00 ; '.'
0000000000001757         db  0x00 ; '.'
0000000000001758         db  0xf8 ; '.'
0000000000001759         db  0xf0 ; '.'
000000000000175a         db  0x21 ; '!'
000000000000175b         db  0x00 ; '.'
000000000000175c         db  0x00 ; '.'
000000000000175d         db  0x00 ; '.'
000000000000175e         db  0x00 ; '.'
000000000000175f         db  0x00 ; '.'
0000000000001760         db  0x08 ; '.'
0000000000001761         db  0x00 ; '.'
0000000000001762         db  0x00 ; '.'
0000000000001763         db  0x00 ; '.'
0000000000001764         db  0x00 ; '.'
0000000000001765         db  0x00 ; '.'
0000000000001766         db  0x00 ; '.'
0000000000001767         db  0x00 ; '.'
0000000000001768         db  0xb0 ; '.'
0000000000001769         db  0x64 ; 'd'
000000000000176a         db  0x00 ; '.'
000000000000176b         db  0x00 ; '.'
000000000000176c         db  0x00 ; '.'
000000000000176d         db  0x00 ; '.'
000000000000176e         db  0x00 ; '.'
000000000000176f         db  0x00 ; '.'
0000000000001770         db  0x00 ; '.'
0000000000001771         db  0xf1 ; '.'
0000000000001772         db  0x21 ; '!'
0000000000001773         db  0x00 ; '.'
0000000000001774         db  0x00 ; '.'
0000000000001775         db  0x00 ; '.'
0000000000001776         db  0x00 ; '.'
0000000000001777         db  0x00 ; '.'
0000000000001778         db  0x08 ; '.'
0000000000001779         db  0x00 ; '.'
000000000000177a         db  0x00 ; '.'
000000000000177b         db  0x00 ; '.'
000000000000177c         db  0x00 ; '.'
000000000000177d         db  0x00 ; '.'
000000000000177e         db  0x00 ; '.'
000000000000177f         db  0x00 ; '.'
0000000000001780         db  0x40 ; '@'
0000000000001781         db  0x5a ; 'Z'
0000000000001782         db  0x00 ; '.'
0000000000001783         db  0x00 ; '.'
0000000000001784         db  0x00 ; '.'
0000000000001785         db  0x00 ; '.'
0000000000001786         db  0x00 ; '.'
0000000000001787         db  0x00 ; '.'
0000000000001788         db  0x08 ; '.'
0000000000001789         db  0xf1 ; '.'
000000000000178a         db  0x21 ; '!'
000000000000178b         db  0x00 ; '.'
000000000000178c         db  0x00 ; '.'
000000000000178d         db  0x00 ; '.'
000000000000178e         db  0x00 ; '.'
000000000000178f         db  0x00 ; '.'
0000000000001790         db  0x08 ; '.'
0000000000001791         db  0x00 ; '.'
0000000000001792         db  0x00 ; '.'
0000000000001793         db  0x00 ; '.'
0000000000001794         db  0x00 ; '.'
0000000000001795         db  0x00 ; '.'
0000000000001796         db  0x00 ; '.'
0000000000001797         db  0x00 ; '.'
0000000000001798         db  0x10 ; '.'
0000000000001799         db  0x64 ; 'd'
000000000000179a         db  0x00 ; '.'
000000000000179b         db  0x00 ; '.'
000000000000179c         db  0x00 ; '.'
000000000000179d         db  0x00 ; '.'
000000000000179e         db  0x00 ; '.'
000000000000179f         db  0x00 ; '.'
00000000000017a0         db  0x10 ; '.'
00000000000017a1         db  0xf1 ; '.'
00000000000017a2         db  0x21 ; '!'
00000000000017a3         db  0x00 ; '.'
00000000000017a4         db  0x00 ; '.'
00000000000017a5         db  0x00 ; '.'
00000000000017a6         db  0x00 ; '.'
00000000000017a7         db  0x00 ; '.'
00000000000017a8         db  0x08 ; '.'
00000000000017a9         db  0x00 ; '.'
00000000000017aa         db  0x00 ; '.'
00000000000017ab         db  0x00 ; '.'
00000000000017ac         db  0x00 ; '.'
00000000000017ad         db  0x00 ; '.'
00000000000017ae         db  0x00 ; '.'
00000000000017af         db  0x00 ; '.'
00000000000017b0         db  0x80 ; '.'
00000000000017b1         db  0x5a ; 'Z'
00000000000017b2         db  0x00 ; '.'
00000000000017b3         db  0x00 ; '.'
00000000000017b4         db  0x00 ; '.'
00000000000017b5         db  0x00 ; '.'
00000000000017b6         db  0x00 ; '.'
00000000000017b7         db  0x00 ; '.'
00000000000017b8         db  0x18 ; '.'
00000000000017b9         db  0xf1 ; '.'
00000000000017ba         db  0x21 ; '!'
00000000000017bb         db  0x00 ; '.'
00000000000017bc         db  0x00 ; '.'
00000000000017bd         db  0x00 ; '.'
00000000000017be         db  0x00 ; '.'
00000000000017bf         db  0x00 ; '.'
00000000000017c0         db  0x08 ; '.'
00000000000017c1         db  0x00 ; '.'
00000000000017c2         db  0x00 ; '.'
00000000000017c3         db  0x00 ; '.'
00000000000017c4         db  0x00 ; '.'
00000000000017c5         db  0x00 ; '.'
00000000000017c6         db  0x00 ; '.'
00000000000017c7         db  0x00 ; '.'
00000000000017c8         db  0x50 ; 'P'
00000000000017c9         db  0x65 ; 'e'
00000000000017ca         db  0x00 ; '.'
00000000000017cb         db  0x00 ; '.'
00000000000017cc         db  0x00 ; '.'
00000000000017cd         db  0x00 ; '.'
00000000000017ce         db  0x00 ; '.'
00000000000017cf         db  0x00 ; '.'
00000000000017d0         db  0x20 ; ' '
00000000000017d1         db  0xf1 ; '.'
00000000000017d2         db  0x21 ; '!'
00000000000017d3         db  0x00 ; '.'
00000000000017d4         db  0x00 ; '.'
00000000000017d5         db  0x00 ; '.'
00000000000017d6         db  0x00 ; '.'
00000000000017d7         db  0x00 ; '.'
00000000000017d8         db  0x08 ; '.'
00000000000017d9         db  0x00 ; '.'
00000000000017da         db  0x00 ; '.'
00000000000017db         db  0x00 ; '.'
00000000000017dc         db  0x00 ; '.'
00000000000017dd         db  0x00 ; '.'
00000000000017de         db  0x00 ; '.'
00000000000017df         db  0x00 ; '.'
00000000000017e0         db  0xb0 ; '.'
00000000000017e1         db  0x5e ; '^'
00000000000017e2         db  0x00 ; '.'
00000000000017e3         db  0x00 ; '.'
00000000000017e4         db  0x00 ; '.'
00000000000017e5         db  0x00 ; '.'
00000000000017e6         db  0x00 ; '.'
00000000000017e7         db  0x00 ; '.'
00000000000017e8         db  0x28 ; '('
00000000000017e9         db  0xf1 ; '.'
00000000000017ea         db  0x21 ; '!'
00000000000017eb         db  0x00 ; '.'
00000000000017ec         db  0x00 ; '.'
00000000000017ed         db  0x00 ; '.'
00000000000017ee         db  0x00 ; '.'
00000000000017ef         db  0x00 ; '.'
00000000000017f0         db  0x08 ; '.'
00000000000017f1         db  0x00 ; '.'
00000000000017f2         db  0x00 ; '.'
00000000000017f3         db  0x00 ; '.'
00000000000017f4         db  0x00 ; '.'
00000000000017f5         db  0x00 ; '.'
00000000000017f6         db  0x00 ; '.'
00000000000017f7         db  0x00 ; '.'
00000000000017f8         db  0xc0 ; '.'
00000000000017f9         db  0x6a ; 'j'
00000000000017fa         db  0x00 ; '.'
00000000000017fb         db  0x00 ; '.'
00000000000017fc         db  0x00 ; '.'
00000000000017fd         db  0x00 ; '.'
00000000000017fe         db  0x00 ; '.'
00000000000017ff         db  0x00 ; '.'
0000000000001800         db  0x30 ; '0'
0000000000001801         db  0xf1 ; '.'
0000000000001802         db  0x21 ; '!'
0000000000001803         db  0x00 ; '.'
0000000000001804         db  0x00 ; '.'
0000000000001805         db  0x00 ; '.'
0000000000001806         db  0x00 ; '.'
0000000000001807         db  0x00 ; '.'
0000000000001808         db  0x08 ; '.'
0000000000001809         db  0x00 ; '.'
000000000000180a         db  0x00 ; '.'
000000000000180b         db  0x00 ; '.'
000000000000180c         db  0x00 ; '.'
000000000000180d         db  0x00 ; '.'
000000000000180e         db  0x00 ; '.'
000000000000180f         db  0x00 ; '.'
0000000000001810         db  0xa0 ; '.'
0000000000001811         db  0x5e ; '^'
0000000000001812         db  0x00 ; '.'
0000000000001813         db  0x00 ; '.'
0000000000001814         db  0x00 ; '.'
0000000000001815         db  0x00 ; '.'
0000000000001816         db  0x00 ; '.'
0000000000001817         db  0x00 ; '.'
0000000000001818         db  0x38 ; '8'
0000000000001819         db  0xf1 ; '.'
000000000000181a         db  0x21 ; '!'
000000000000181b         db  0x00 ; '.'
000000000000181c         db  0x00 ; '.'
000000000000181d         db  0x00 ; '.'
000000000000181e         db  0x00 ; '.'
000000000000181f         db  0x00 ; '.'
0000000000001820         db  0x08 ; '.'
0000000000001821         db  0x00 ; '.'
0000000000001822         db  0x00 ; '.'
0000000000001823         db  0x00 ; '.'
0000000000001824         db  0x00 ; '.'
0000000000001825         db  0x00 ; '.'
0000000000001826         db  0x00 ; '.'
0000000000001827         db  0x00 ; '.'
0000000000001828         db  0x30 ; '0'
0000000000001829         db  0x6a ; 'j'
000000000000182a         db  0x00 ; '.'
000000000000182b         db  0x00 ; '.'
000000000000182c         db  0x00 ; '.'
000000000000182d         db  0x00 ; '.'
000000000000182e         db  0x00 ; '.'
000000000000182f         db  0x00 ; '.'
0000000000001830         db  0x60 ; '`'
0000000000001831         db  0xf1 ; '.'
0000000000001832         db  0x21 ; '!'
0000000000001833         db  0x00 ; '.'
0000000000001834         db  0x00 ; '.'
0000000000001835         db  0x00 ; '.'
0000000000001836         db  0x00 ; '.'
0000000000001837         db  0x00 ; '.'
0000000000001838         db  0x08 ; '.'
0000000000001839         db  0x00 ; '.'
000000000000183a         db  0x00 ; '.'
000000000000183b         db  0x00 ; '.'
000000000000183c         db  0x00 ; '.'
000000000000183d         db  0x00 ; '.'
000000000000183e         db  0x00 ; '.'
000000000000183f         db  0x00 ; '.'
0000000000001840         db  0x40 ; '@'
0000000000001841         db  0xab ; '.'
0000000000001842         db  0x00 ; '.'
0000000000001843         db  0x00 ; '.'
0000000000001844         db  0x00 ; '.'
0000000000001845         db  0x00 ; '.'
0000000000001846         db  0x00 ; '.'
0000000000001847         db  0x00 ; '.'
0000000000001848         db  0x68 ; 'h'
0000000000001849         db  0xf1 ; '.'
000000000000184a         db  0x21 ; '!'
000000000000184b         db  0x00 ; '.'
000000000000184c         db  0x00 ; '.'
000000000000184d         db  0x00 ; '.'
000000000000184e         db  0x00 ; '.'
000000000000184f         db  0x00 ; '.'
0000000000001850         db  0x08 ; '.'
0000000000001851         db  0x00 ; '.'
0000000000001852         db  0x00 ; '.'
0000000000001853         db  0x00 ; '.'
0000000000001854         db  0x00 ; '.'
0000000000001855         db  0x00 ; '.'
0000000000001856         db  0x00 ; '.'
0000000000001857         db  0x00 ; '.'
0000000000001858         db  0x80 ; '.'
0000000000001859         db  0xaf ; '.'
000000000000185a         db  0x00 ; '.'
000000000000185b         db  0x00 ; '.'
000000000000185c         db  0x00 ; '.'
000000000000185d         db  0x00 ; '.'
000000000000185e         db  0x00 ; '.'
000000000000185f         db  0x00 ; '.'
0000000000001860         db  0x70 ; 'p'
0000000000001861         db  0xf1 ; '.'
0000000000001862         db  0x21 ; '!'
0000000000001863         db  0x00 ; '.'
0000000000001864         db  0x00 ; '.'
0000000000001865         db  0x00 ; '.'
0000000000001866         db  0x00 ; '.'
0000000000001867         db  0x00 ; '.'
0000000000001868         db  0x08 ; '.'
0000000000001869         db  0x00 ; '.'
000000000000186a         db  0x00 ; '.'
000000000000186b         db  0x00 ; '.'
000000000000186c         db  0x00 ; '.'
000000000000186d         db  0x00 ; '.'
000000000000186e         db  0x00 ; '.'
000000000000186f         db  0x00 ; '.'
0000000000001870         db  0x80 ; '.'
0000000000001871         db  0xab ; '.'
0000000000001872         db  0x00 ; '.'
0000000000001873         db  0x00 ; '.'
0000000000001874         db  0x00 ; '.'
0000000000001875         db  0x00 ; '.'
0000000000001876         db  0x00 ; '.'
0000000000001877         db  0x00 ; '.'
0000000000001878         db  0x78 ; 'x'
0000000000001879         db  0xf1 ; '.'
000000000000187a         db  0x21 ; '!'
000000000000187b         db  0x00 ; '.'
000000000000187c         db  0x00 ; '.'
000000000000187d         db  0x00 ; '.'
000000000000187e         db  0x00 ; '.'
000000000000187f         db  0x00 ; '.'
0000000000001880         db  0x08 ; '.'
0000000000001881         db  0x00 ; '.'
0000000000001882         db  0x00 ; '.'
0000000000001883         db  0x00 ; '.'
0000000000001884         db  0x00 ; '.'
0000000000001885         db  0x00 ; '.'
0000000000001886         db  0x00 ; '.'
0000000000001887         db  0x00 ; '.'
0000000000001888         db  0xf0 ; '.'
0000000000001889         db  0xb0 ; '.'
000000000000188a         db  0x00 ; '.'
000000000000188b         db  0x00 ; '.'
000000000000188c         db  0x00 ; '.'
000000000000188d         db  0x00 ; '.'
000000000000188e         db  0x00 ; '.'
000000000000188f         db  0x00 ; '.'
0000000000001890         db  0x80 ; '.'
0000000000001891         db  0xf1 ; '.'
0000000000001892         db  0x21 ; '!'
0000000000001893         db  0x00 ; '.'
0000000000001894         db  0x00 ; '.'
0000000000001895         db  0x00 ; '.'
0000000000001896         db  0x00 ; '.'
0000000000001897         db  0x00 ; '.'
0000000000001898         db  0x08 ; '.'
0000000000001899         db  0x00 ; '.'
000000000000189a         db  0x00 ; '.'
000000000000189b         db  0x00 ; '.'
000000000000189c         db  0x00 ; '.'
000000000000189d         db  0x00 ; '.'
000000000000189e         db  0x00 ; '.'
000000000000189f         db  0x00 ; '.'
00000000000018a0         db  0x40 ; '@'
00000000000018a1         db  0xae ; '.'
00000000000018a2         db  0x00 ; '.'
00000000000018a3         db  0x00 ; '.'
00000000000018a4         db  0x00 ; '.'
00000000000018a5         db  0x00 ; '.'
00000000000018a6         db  0x00 ; '.'
00000000000018a7         db  0x00 ; '.'
00000000000018a8         db  0x88 ; '.'
00000000000018a9         db  0xf1 ; '.'
00000000000018aa         db  0x21 ; '!'
00000000000018ab         db  0x00 ; '.'
00000000000018ac         db  0x00 ; '.'
00000000000018ad         db  0x00 ; '.'
00000000000018ae         db  0x00 ; '.'
00000000000018af         db  0x00 ; '.'
00000000000018b0         db  0x08 ; '.'
00000000000018b1         db  0x00 ; '.'
00000000000018b2         db  0x00 ; '.'
00000000000018b3         db  0x00 ; '.'
00000000000018b4         db  0x00 ; '.'
00000000000018b5         db  0x00 ; '.'
00000000000018b6         db  0x00 ; '.'
00000000000018b7         db  0x00 ; '.'
00000000000018b8         db  0x80 ; '.'
00000000000018b9         db  0x69 ; 'i'
00000000000018ba         db  0x00 ; '.'
00000000000018bb         db  0x00 ; '.'
00000000000018bc         db  0x00 ; '.'
00000000000018bd         db  0x00 ; '.'
00000000000018be         db  0x00 ; '.'
00000000000018bf         db  0x00 ; '.'
00000000000018c0         db  0x90 ; '.'
00000000000018c1         db  0xf1 ; '.'
00000000000018c2         db  0x21 ; '!'
00000000000018c3         db  0x00 ; '.'
00000000000018c4         db  0x00 ; '.'
00000000000018c5         db  0x00 ; '.'
00000000000018c6         db  0x00 ; '.'
00000000000018c7         db  0x00 ; '.'
00000000000018c8         db  0x08 ; '.'
00000000000018c9         db  0x00 ; '.'
00000000000018ca         db  0x00 ; '.'
00000000000018cb         db  0x00 ; '.'
00000000000018cc         db  0x00 ; '.'
00000000000018cd         db  0x00 ; '.'
00000000000018ce         db  0x00 ; '.'
00000000000018cf         db  0x00 ; '.'
00000000000018d0         db  0x70 ; 'p'
00000000000018d1         db  0xad ; '.'
00000000000018d2         db  0x00 ; '.'
00000000000018d3         db  0x00 ; '.'
00000000000018d4         db  0x00 ; '.'
00000000000018d5         db  0x00 ; '.'
00000000000018d6         db  0x00 ; '.'
00000000000018d7         db  0x00 ; '.'
00000000000018d8         db  0x98 ; '.'
00000000000018d9         db  0xf1 ; '.'
00000000000018da         db  0x21 ; '!'
00000000000018db         db  0x00 ; '.'
00000000000018dc         db  0x00 ; '.'
00000000000018dd         db  0x00 ; '.'
00000000000018de         db  0x00 ; '.'
00000000000018df         db  0x00 ; '.'
00000000000018e0         db  0x08 ; '.'
00000000000018e1         db  0x00 ; '.'
00000000000018e2         db  0x00 ; '.'
00000000000018e3         db  0x00 ; '.'
00000000000018e4         db  0x00 ; '.'
00000000000018e5         db  0x00 ; '.'
00000000000018e6         db  0x00 ; '.'
00000000000018e7         db  0x00 ; '.'
00000000000018e8         db  0xa0 ; '.'
00000000000018e9         db  0xb6 ; '.'
00000000000018ea         db  0x00 ; '.'
00000000000018eb         db  0x00 ; '.'
00000000000018ec         db  0x00 ; '.'
00000000000018ed         db  0x00 ; '.'
00000000000018ee         db  0x00 ; '.'
00000000000018ef         db  0x00 ; '.'
00000000000018f0         db  0xa0 ; '.'
00000000000018f1         db  0xf1 ; '.'
00000000000018f2         db  0x21 ; '!'
00000000000018f3         db  0x00 ; '.'
00000000000018f4         db  0x00 ; '.'
00000000000018f5         db  0x00 ; '.'
00000000000018f6         db  0x00 ; '.'
00000000000018f7         db  0x00 ; '.'
00000000000018f8         db  0x08 ; '.'
00000000000018f9         db  0x00 ; '.'
00000000000018fa         db  0x00 ; '.'
00000000000018fb         db  0x00 ; '.'
00000000000018fc         db  0x00 ; '.'
00000000000018fd         db  0x00 ; '.'
00000000000018fe         db  0x00 ; '.'
00000000000018ff         db  0x00 ; '.'
0000000000001900         db  0xb0 ; '.'
0000000000001901         db  0xaa ; '.'
0000000000001902         db  0x00 ; '.'
0000000000001903         db  0x00 ; '.'
0000000000001904         db  0x00 ; '.'
0000000000001905         db  0x00 ; '.'
0000000000001906         db  0x00 ; '.'
0000000000001907         db  0x00 ; '.'
0000000000001908         db  0xa8 ; '.'
0000000000001909         db  0xf1 ; '.'
000000000000190a         db  0x21 ; '!'
000000000000190b         db  0x00 ; '.'
000000000000190c         db  0x00 ; '.'
000000000000190d         db  0x00 ; '.'
000000000000190e         db  0x00 ; '.'
000000000000190f         db  0x00 ; '.'
0000000000001910         db  0x08 ; '.'
0000000000001911         db  0x00 ; '.'
0000000000001912         db  0x00 ; '.'
0000000000001913         db  0x00 ; '.'
0000000000001914         db  0x00 ; '.'
0000000000001915         db  0x00 ; '.'
0000000000001916         db  0x00 ; '.'
0000000000001917         db  0x00 ; '.'
0000000000001918         db  0x50 ; 'P'
0000000000001919         db  0xb2 ; '.'
000000000000191a         db  0x00 ; '.'
000000000000191b         db  0x00 ; '.'
000000000000191c         db  0x00 ; '.'
000000000000191d         db  0x00 ; '.'
000000000000191e         db  0x00 ; '.'
000000000000191f         db  0x00 ; '.'
0000000000001920         db  0xb0 ; '.'
0000000000001921         db  0xf1 ; '.'
0000000000001922         db  0x21 ; '!'
0000000000001923         db  0x00 ; '.'
0000000000001924         db  0x00 ; '.'
0000000000001925         db  0x00 ; '.'
0000000000001926         db  0x00 ; '.'
0000000000001927         db  0x00 ; '.'
0000000000001928         db  0x08 ; '.'
0000000000001929         db  0x00 ; '.'
000000000000192a         db  0x00 ; '.'
000000000000192b         db  0x00 ; '.'
000000000000192c         db  0x00 ; '.'
000000000000192d         db  0x00 ; '.'
000000000000192e         db  0x00 ; '.'
000000000000192f         db  0x00 ; '.'
0000000000001930         db  0x00 ; '.'
0000000000001931         db  0xac ; '.'
0000000000001932         db  0x00 ; '.'
0000000000001933         db  0x00 ; '.'
0000000000001934         db  0x00 ; '.'
0000000000001935         db  0x00 ; '.'
0000000000001936         db  0x00 ; '.'
0000000000001937         db  0x00 ; '.'
0000000000001938         db  0xb8 ; '.'
0000000000001939         db  0xf1 ; '.'
000000000000193a         db  0x21 ; '!'
000000000000193b         db  0x00 ; '.'
000000000000193c         db  0x00 ; '.'
000000000000193d         db  0x00 ; '.'
000000000000193e         db  0x00 ; '.'
000000000000193f         db  0x00 ; '.'
0000000000001940         db  0x08 ; '.'
0000000000001941         db  0x00 ; '.'
0000000000001942         db  0x00 ; '.'
0000000000001943         db  0x00 ; '.'
0000000000001944         db  0x00 ; '.'
0000000000001945         db  0x00 ; '.'
0000000000001946         db  0x00 ; '.'
0000000000001947         db  0x00 ; '.'
0000000000001948         db  0x30 ; '0'
0000000000001949         db  0xb0 ; '.'
000000000000194a         db  0x00 ; '.'
000000000000194b         db  0x00 ; '.'
000000000000194c         db  0x00 ; '.'
000000000000194d         db  0x00 ; '.'
000000000000194e         db  0x00 ; '.'
000000000000194f         db  0x00 ; '.'
0000000000001950         db  0xc0 ; '.'
0000000000001951         db  0xf1 ; '.'
0000000000001952         db  0x21 ; '!'
0000000000001953         db  0x00 ; '.'
0000000000001954         db  0x00 ; '.'
0000000000001955         db  0x00 ; '.'
0000000000001956         db  0x00 ; '.'
0000000000001957         db  0x00 ; '.'
0000000000001958         db  0x08 ; '.'
0000000000001959         db  0x00 ; '.'
000000000000195a         db  0x00 ; '.'
000000000000195b         db  0x00 ; '.'
000000000000195c         db  0x00 ; '.'
000000000000195d         db  0x00 ; '.'
000000000000195e         db  0x00 ; '.'
000000000000195f         db  0x00 ; '.'
0000000000001960         db  0x80 ; '.'
0000000000001961         db  0xae ; '.'
0000000000001962         db  0x00 ; '.'
0000000000001963         db  0x00 ; '.'
0000000000001964         db  0x00 ; '.'
0000000000001965         db  0x00 ; '.'
0000000000001966         db  0x00 ; '.'
0000000000001967         db  0x00 ; '.'
0000000000001968         db  0xc8 ; '.'
0000000000001969         db  0xf1 ; '.'
000000000000196a         db  0x21 ; '!'
000000000000196b         db  0x00 ; '.'
000000000000196c         db  0x00 ; '.'
000000000000196d         db  0x00 ; '.'
000000000000196e         db  0x00 ; '.'
000000000000196f         db  0x00 ; '.'
0000000000001970         db  0x08 ; '.'
0000000000001971         db  0x00 ; '.'
0000000000001972         db  0x00 ; '.'
0000000000001973         db  0x00 ; '.'
0000000000001974         db  0x00 ; '.'
0000000000001975         db  0x00 ; '.'
0000000000001976         db  0x00 ; '.'
0000000000001977         db  0x00 ; '.'
0000000000001978         db  0x50 ; 'P'
0000000000001979         db  0xb7 ; '.'
000000000000197a         db  0x00 ; '.'
000000000000197b         db  0x00 ; '.'
000000000000197c         db  0x00 ; '.'
000000000000197d         db  0x00 ; '.'
000000000000197e         db  0x00 ; '.'
000000000000197f         db  0x00 ; '.'
0000000000001980         db  0xd0 ; '.'
0000000000001981         db  0xf1 ; '.'
0000000000001982         db  0x21 ; '!'
0000000000001983         db  0x00 ; '.'
0000000000001984         db  0x00 ; '.'
0000000000001985         db  0x00 ; '.'
0000000000001986         db  0x00 ; '.'
0000000000001987         db  0x00 ; '.'
0000000000001988         db  0x08 ; '.'
0000000000001989         db  0x00 ; '.'
000000000000198a         db  0x00 ; '.'
000000000000198b         db  0x00 ; '.'
000000000000198c         db  0x00 ; '.'
000000000000198d         db  0x00 ; '.'
000000000000198e         db  0x00 ; '.'
000000000000198f         db  0x00 ; '.'
0000000000001990         db  0xb0 ; '.'
0000000000001991         db  0xad ; '.'
0000000000001992         db  0x00 ; '.'
0000000000001993         db  0x00 ; '.'
0000000000001994         db  0x00 ; '.'
0000000000001995         db  0x00 ; '.'
0000000000001996         db  0x00 ; '.'
0000000000001997         db  0x00 ; '.'
0000000000001998         db  0xd8 ; '.'
0000000000001999         db  0xf1 ; '.'
000000000000199a         db  0x21 ; '!'
000000000000199b         db  0x00 ; '.'
000000000000199c         db  0x00 ; '.'
000000000000199d         db  0x00 ; '.'
000000000000199e         db  0x00 ; '.'
000000000000199f         db  0x00 ; '.'
00000000000019a0         db  0x08 ; '.'
00000000000019a1         db  0x00 ; '.'
00000000000019a2         db  0x00 ; '.'
00000000000019a3         db  0x00 ; '.'
00000000000019a4         db  0x00 ; '.'
00000000000019a5         db  0x00 ; '.'
00000000000019a6         db  0x00 ; '.'
00000000000019a7         db  0x00 ; '.'
00000000000019a8         db  0x30 ; '0'
00000000000019a9         db  0x94 ; '.'
00000000000019aa         db  0x00 ; '.'
00000000000019ab         db  0x00 ; '.'
00000000000019ac         db  0x00 ; '.'
00000000000019ad         db  0x00 ; '.'
00000000000019ae         db  0x00 ; '.'
00000000000019af         db  0x00 ; '.'
00000000000019b0         db  0xe0 ; '.'
00000000000019b1         db  0xf1 ; '.'
00000000000019b2         db  0x21 ; '!'
00000000000019b3         db  0x00 ; '.'
00000000000019b4         db  0x00 ; '.'
00000000000019b5         db  0x00 ; '.'
00000000000019b6         db  0x00 ; '.'
00000000000019b7         db  0x00 ; '.'
00000000000019b8         db  0x08 ; '.'
00000000000019b9         db  0x00 ; '.'
00000000000019ba         db  0x00 ; '.'
00000000000019bb         db  0x00 ; '.'
00000000000019bc         db  0x00 ; '.'
00000000000019bd         db  0x00 ; '.'
00000000000019be         db  0x00 ; '.'
00000000000019bf         db  0x00 ; '.'
00000000000019c0         db  0x00 ; '.'
00000000000019c1         db  0xab ; '.'
00000000000019c2         db  0x00 ; '.'
00000000000019c3         db  0x00 ; '.'
00000000000019c4         db  0x00 ; '.'
00000000000019c5         db  0x00 ; '.'
00000000000019c6         db  0x00 ; '.'
00000000000019c7         db  0x00 ; '.'
00000000000019c8         db  0xe8 ; '.'
00000000000019c9         db  0xf1 ; '.'
00000000000019ca         db  0x21 ; '!'
00000000000019cb         db  0x00 ; '.'
00000000000019cc         db  0x00 ; '.'
00000000000019cd         db  0x00 ; '.'
00000000000019ce         db  0x00 ; '.'
00000000000019cf         db  0x00 ; '.'
00000000000019d0         db  0x08 ; '.'
00000000000019d1         db  0x00 ; '.'
00000000000019d2         db  0x00 ; '.'
00000000000019d3         db  0x00 ; '.'
00000000000019d4         db  0x00 ; '.'
00000000000019d5         db  0x00 ; '.'
00000000000019d6         db  0x00 ; '.'
00000000000019d7         db  0x00 ; '.'
00000000000019d8         db  0xd0 ; '.'
00000000000019d9         db  0xae ; '.'
00000000000019da         db  0x00 ; '.'
00000000000019db         db  0x00 ; '.'
00000000000019dc         db  0x00 ; '.'
00000000000019dd         db  0x00 ; '.'
00000000000019de         db  0x00 ; '.'
00000000000019df         db  0x00 ; '.'
00000000000019e0         db  0xf0 ; '.'
00000000000019e1         db  0xf1 ; '.'
00000000000019e2         db  0x21 ; '!'
00000000000019e3         db  0x00 ; '.'
00000000000019e4         db  0x00 ; '.'
00000000000019e5         db  0x00 ; '.'
00000000000019e6         db  0x00 ; '.'
00000000000019e7         db  0x00 ; '.'
00000000000019e8         db  0x08 ; '.'
00000000000019e9         db  0x00 ; '.'
00000000000019ea         db  0x00 ; '.'
00000000000019eb         db  0x00 ; '.'
00000000000019ec         db  0x00 ; '.'
00000000000019ed         db  0x00 ; '.'
00000000000019ee         db  0x00 ; '.'
00000000000019ef         db  0x00 ; '.'
00000000000019f0         db  0xc0 ; '.'
00000000000019f1         db  0xab ; '.'
00000000000019f2         db  0x00 ; '.'
00000000000019f3         db  0x00 ; '.'
00000000000019f4         db  0x00 ; '.'
00000000000019f5         db  0x00 ; '.'
00000000000019f6         db  0x00 ; '.'
00000000000019f7         db  0x00 ; '.'
00000000000019f8         db  0xf8 ; '.'
00000000000019f9         db  0xf1 ; '.'
00000000000019fa         db  0x21 ; '!'
00000000000019fb         db  0x00 ; '.'
00000000000019fc         db  0x00 ; '.'
00000000000019fd         db  0x00 ; '.'
00000000000019fe         db  0x00 ; '.'
00000000000019ff         db  0x00 ; '.'
0000000000001a00         db  0x08 ; '.'
0000000000001a01         db  0x00 ; '.'
0000000000001a02         db  0x00 ; '.'
0000000000001a03         db  0x00 ; '.'
0000000000001a04         db  0x00 ; '.'
0000000000001a05         db  0x00 ; '.'
0000000000001a06         db  0x00 ; '.'
0000000000001a07         db  0x00 ; '.'
0000000000001a08         db  0xa0 ; '.'
0000000000001a09         db  0xb1 ; '.'
0000000000001a0a         db  0x00 ; '.'
0000000000001a0b         db  0x00 ; '.'
0000000000001a0c         db  0x00 ; '.'
0000000000001a0d         db  0x00 ; '.'
0000000000001a0e         db  0x00 ; '.'
0000000000001a0f         db  0x00 ; '.'
0000000000001a10         db  0x00 ; '.'
0000000000001a11         db  0xf2 ; '.'
0000000000001a12         db  0x21 ; '!'
0000000000001a13         db  0x00 ; '.'
0000000000001a14         db  0x00 ; '.'
0000000000001a15         db  0x00 ; '.'
0000000000001a16         db  0x00 ; '.'
0000000000001a17         db  0x00 ; '.'
0000000000001a18         db  0x08 ; '.'
0000000000001a19         db  0x00 ; '.'
0000000000001a1a         db  0x00 ; '.'
0000000000001a1b         db  0x00 ; '.'
0000000000001a1c         db  0x00 ; '.'
0000000000001a1d         db  0x00 ; '.'
0000000000001a1e         db  0x00 ; '.'
0000000000001a1f         db  0x00 ; '.'
0000000000001a20         db  0x00 ; '.'
0000000000001a21         db  0xae ; '.'
0000000000001a22         db  0x00 ; '.'
0000000000001a23         db  0x00 ; '.'
0000000000001a24         db  0x00 ; '.'
0000000000001a25         db  0x00 ; '.'
0000000000001a26         db  0x00 ; '.'
0000000000001a27         db  0x00 ; '.'
0000000000001a28         db  0x08 ; '.'
0000000000001a29         db  0xf2 ; '.'
0000000000001a2a         db  0x21 ; '!'
0000000000001a2b         db  0x00 ; '.'
0000000000001a2c         db  0x00 ; '.'
0000000000001a2d         db  0x00 ; '.'
0000000000001a2e         db  0x00 ; '.'
0000000000001a2f         db  0x00 ; '.'
0000000000001a30         db  0x08 ; '.'
0000000000001a31         db  0x00 ; '.'
0000000000001a32         db  0x00 ; '.'
0000000000001a33         db  0x00 ; '.'
0000000000001a34         db  0x00 ; '.'
0000000000001a35         db  0x00 ; '.'
0000000000001a36         db  0x00 ; '.'
0000000000001a37         db  0x00 ; '.'
0000000000001a38         db  0xf0 ; '.'
0000000000001a39         db  0xb5 ; '.'
0000000000001a3a         db  0x00 ; '.'
0000000000001a3b         db  0x00 ; '.'
0000000000001a3c         db  0x00 ; '.'
0000000000001a3d         db  0x00 ; '.'
0000000000001a3e         db  0x00 ; '.'
0000000000001a3f         db  0x00 ; '.'
0000000000001a40         db  0x10 ; '.'
0000000000001a41         db  0xf2 ; '.'
0000000000001a42         db  0x21 ; '!'
0000000000001a43         db  0x00 ; '.'
0000000000001a44         db  0x00 ; '.'
0000000000001a45         db  0x00 ; '.'
0000000000001a46         db  0x00 ; '.'
0000000000001a47         db  0x00 ; '.'
0000000000001a48         db  0x08 ; '.'
0000000000001a49         db  0x00 ; '.'
0000000000001a4a         db  0x00 ; '.'
0000000000001a4b         db  0x00 ; '.'
0000000000001a4c         db  0x00 ; '.'
0000000000001a4d         db  0x00 ; '.'
0000000000001a4e         db  0x00 ; '.'
0000000000001a4f         db  0x00 ; '.'
0000000000001a50         db  0x30 ; '0'
0000000000001a51         db  0xad ; '.'
0000000000001a52         db  0x00 ; '.'
0000000000001a53         db  0x00 ; '.'
0000000000001a54         db  0x00 ; '.'
0000000000001a55         db  0x00 ; '.'
0000000000001a56         db  0x00 ; '.'
0000000000001a57         db  0x00 ; '.'
0000000000001a58         db  0x18 ; '.'
0000000000001a59         db  0xf2 ; '.'
0000000000001a5a         db  0x21 ; '!'
0000000000001a5b         db  0x00 ; '.'
0000000000001a5c         db  0x00 ; '.'
0000000000001a5d         db  0x00 ; '.'
0000000000001a5e         db  0x00 ; '.'
0000000000001a5f         db  0x00 ; '.'
0000000000001a60         db  0x08 ; '.'
0000000000001a61         db  0x00 ; '.'
0000000000001a62         db  0x00 ; '.'
0000000000001a63         db  0x00 ; '.'
0000000000001a64         db  0x00 ; '.'
0000000000001a65         db  0x00 ; '.'
0000000000001a66         db  0x00 ; '.'
0000000000001a67         db  0x00 ; '.'
0000000000001a68         db  0x80 ; '.'
0000000000001a69         db  0x93 ; '.'
0000000000001a6a         db  0x00 ; '.'
0000000000001a6b         db  0x00 ; '.'
0000000000001a6c         db  0x00 ; '.'
0000000000001a6d         db  0x00 ; '.'
0000000000001a6e         db  0x00 ; '.'
0000000000001a6f         db  0x00 ; '.'
0000000000001a70         db  0x20 ; ' '
0000000000001a71         db  0xf2 ; '.'
0000000000001a72         db  0x21 ; '!'
0000000000001a73         db  0x00 ; '.'
0000000000001a74         db  0x00 ; '.'
0000000000001a75         db  0x00 ; '.'
0000000000001a76         db  0x00 ; '.'
0000000000001a77         db  0x00 ; '.'
0000000000001a78         db  0x08 ; '.'
0000000000001a79         db  0x00 ; '.'
0000000000001a7a         db  0x00 ; '.'
0000000000001a7b         db  0x00 ; '.'
0000000000001a7c         db  0x00 ; '.'
0000000000001a7d         db  0x00 ; '.'
0000000000001a7e         db  0x00 ; '.'
0000000000001a7f         db  0x00 ; '.'
0000000000001a80         db  0x4c ; 'L'
0000000000001a81         db  0xa3 ; '.'
0000000000001a82         db  0x01 ; '.'
0000000000001a83         db  0x00 ; '.'
0000000000001a84         db  0x00 ; '.'
0000000000001a85         db  0x00 ; '.'
0000000000001a86         db  0x00 ; '.'
0000000000001a87         db  0x00 ; '.'
0000000000001a88         db  0x28 ; '('
0000000000001a89         db  0xf2 ; '.'
0000000000001a8a         db  0x21 ; '!'
0000000000001a8b         db  0x00 ; '.'
0000000000001a8c         db  0x00 ; '.'
0000000000001a8d         db  0x00 ; '.'
0000000000001a8e         db  0x00 ; '.'
0000000000001a8f         db  0x00 ; '.'
0000000000001a90         db  0x08 ; '.'
0000000000001a91         db  0x00 ; '.'
0000000000001a92         db  0x00 ; '.'
0000000000001a93         db  0x00 ; '.'
0000000000001a94         db  0x00 ; '.'
0000000000001a95         db  0x00 ; '.'
0000000000001a96         db  0x00 ; '.'
0000000000001a97         db  0x00 ; '.'
0000000000001a98         db  0xdc ; '.'
0000000000001a99         db  0x7b ; '{'
0000000000001a9a         db  0x01 ; '.'
0000000000001a9b         db  0x00 ; '.'
0000000000001a9c         db  0x00 ; '.'
0000000000001a9d         db  0x00 ; '.'
0000000000001a9e         db  0x00 ; '.'
0000000000001a9f         db  0x00 ; '.'
0000000000001aa0         db  0x30 ; '0'
0000000000001aa1         db  0xf2 ; '.'
0000000000001aa2         db  0x21 ; '!'
0000000000001aa3         db  0x00 ; '.'
0000000000001aa4         db  0x00 ; '.'
0000000000001aa5         db  0x00 ; '.'
0000000000001aa6         db  0x00 ; '.'
0000000000001aa7         db  0x00 ; '.'
0000000000001aa8         db  0x08 ; '.'
0000000000001aa9         db  0x00 ; '.'
0000000000001aaa         db  0x00 ; '.'
0000000000001aab         db  0x00 ; '.'
0000000000001aac         db  0x00 ; '.'
0000000000001aad         db  0x00 ; '.'
0000000000001aae         db  0x00 ; '.'
0000000000001aaf         db  0x00 ; '.'
0000000000001ab0         db  0xe0 ; '.'
0000000000001ab1         db  0x7b ; '{'
0000000000001ab2         db  0x01 ; '.'
0000000000001ab3         db  0x00 ; '.'
0000000000001ab4         db  0x00 ; '.'
0000000000001ab5         db  0x00 ; '.'
0000000000001ab6         db  0x00 ; '.'
0000000000001ab7         db  0x00 ; '.'
0000000000001ab8         db  0x38 ; '8'
0000000000001ab9         db  0xf2 ; '.'
0000000000001aba         db  0x21 ; '!'
0000000000001abb         db  0x00 ; '.'
0000000000001abc         db  0x00 ; '.'
0000000000001abd         db  0x00 ; '.'
0000000000001abe         db  0x00 ; '.'
0000000000001abf         db  0x00 ; '.'
0000000000001ac0         db  0x08 ; '.'
0000000000001ac1         db  0x00 ; '.'
0000000000001ac2         db  0x00 ; '.'
0000000000001ac3         db  0x00 ; '.'
0000000000001ac4         db  0x00 ; '.'
0000000000001ac5         db  0x00 ; '.'
0000000000001ac6         db  0x00 ; '.'
0000000000001ac7         db  0x00 ; '.'
0000000000001ac8         db  0xe6 ; '.'
0000000000001ac9         db  0x7b ; '{'
0000000000001aca         db  0x01 ; '.'
0000000000001acb         db  0x00 ; '.'
0000000000001acc         db  0x00 ; '.'
0000000000001acd         db  0x00 ; '.'
0000000000001ace         db  0x00 ; '.'
0000000000001acf         db  0x00 ; '.'
0000000000001ad0         db  0x40 ; '@'
0000000000001ad1         db  0xf2 ; '.'
0000000000001ad2         db  0x21 ; '!'
0000000000001ad3         db  0x00 ; '.'
0000000000001ad4         db  0x00 ; '.'
0000000000001ad5         db  0x00 ; '.'
0000000000001ad6         db  0x00 ; '.'
0000000000001ad7         db  0x00 ; '.'
0000000000001ad8         db  0x08 ; '.'
0000000000001ad9         db  0x00 ; '.'
0000000000001ada         db  0x00 ; '.'
0000000000001adb         db  0x00 ; '.'
0000000000001adc         db  0x00 ; '.'
0000000000001add         db  0x00 ; '.'
0000000000001ade         db  0x00 ; '.'
0000000000001adf         db  0x00 ; '.'
0000000000001ae0         db  0xec ; '.'
0000000000001ae1         db  0x7b ; '{'
0000000000001ae2         db  0x01 ; '.'
0000000000001ae3         db  0x00 ; '.'
0000000000001ae4         db  0x00 ; '.'
0000000000001ae5         db  0x00 ; '.'
0000000000001ae6         db  0x00 ; '.'
0000000000001ae7         db  0x00 ; '.'
0000000000001ae8         db  0x48 ; 'H'
0000000000001ae9         db  0xf2 ; '.'
0000000000001aea         db  0x21 ; '!'
0000000000001aeb         db  0x00 ; '.'
0000000000001aec         db  0x00 ; '.'
0000000000001aed         db  0x00 ; '.'
0000000000001aee         db  0x00 ; '.'
0000000000001aef         db  0x00 ; '.'
0000000000001af0         db  0x08 ; '.'
0000000000001af1         db  0x00 ; '.'
0000000000001af2         db  0x00 ; '.'
0000000000001af3         db  0x00 ; '.'
0000000000001af4         db  0x00 ; '.'
0000000000001af5         db  0x00 ; '.'
0000000000001af6         db  0x00 ; '.'
0000000000001af7         db  0x00 ; '.'
0000000000001af8         db  0xef ; '.'
0000000000001af9         db  0x7b ; '{'
0000000000001afa         db  0x01 ; '.'
0000000000001afb         db  0x00 ; '.'
0000000000001afc         db  0x00 ; '.'
0000000000001afd         db  0x00 ; '.'
0000000000001afe         db  0x00 ; '.'
0000000000001aff         db  0x00 ; '.'
0000000000001b00         db  0x50 ; 'P'
0000000000001b01         db  0xf2 ; '.'
0000000000001b02         db  0x21 ; '!'
0000000000001b03         db  0x00 ; '.'
0000000000001b04         db  0x00 ; '.'
0000000000001b05         db  0x00 ; '.'
0000000000001b06         db  0x00 ; '.'
0000000000001b07         db  0x00 ; '.'
0000000000001b08         db  0x08 ; '.'
0000000000001b09         db  0x00 ; '.'
0000000000001b0a         db  0x00 ; '.'
0000000000001b0b         db  0x00 ; '.'
0000000000001b0c         db  0x00 ; '.'
0000000000001b0d         db  0x00 ; '.'
0000000000001b0e         db  0x00 ; '.'
0000000000001b0f         db  0x00 ; '.'
0000000000001b10         db  0xf4 ; '.'
0000000000001b11         db  0x7b ; '{'
0000000000001b12         db  0x01 ; '.'
0000000000001b13         db  0x00 ; '.'
0000000000001b14         db  0x00 ; '.'
0000000000001b15         db  0x00 ; '.'
0000000000001b16         db  0x00 ; '.'
0000000000001b17         db  0x00 ; '.'
0000000000001b18         db  0x58 ; 'X'
0000000000001b19         db  0xf2 ; '.'
0000000000001b1a         db  0x21 ; '!'
0000000000001b1b         db  0x00 ; '.'
0000000000001b1c         db  0x00 ; '.'
0000000000001b1d         db  0x00 ; '.'
0000000000001b1e         db  0x00 ; '.'
0000000000001b1f         db  0x00 ; '.'
0000000000001b20         db  0x08 ; '.'
0000000000001b21         db  0x00 ; '.'
0000000000001b22         db  0x00 ; '.'
0000000000001b23         db  0x00 ; '.'
0000000000001b24         db  0x00 ; '.'
0000000000001b25         db  0x00 ; '.'
0000000000001b26         db  0x00 ; '.'
0000000000001b27         db  0x00 ; '.'
0000000000001b28         db  0xfc ; '.'
0000000000001b29         db  0x7b ; '{'
0000000000001b2a         db  0x01 ; '.'
0000000000001b2b         db  0x00 ; '.'
0000000000001b2c         db  0x00 ; '.'
0000000000001b2d         db  0x00 ; '.'
0000000000001b2e         db  0x00 ; '.'
0000000000001b2f         db  0x00 ; '.'
0000000000001b30         db  0x60 ; '`'
0000000000001b31         db  0xf2 ; '.'
0000000000001b32         db  0x21 ; '!'
0000000000001b33         db  0x00 ; '.'
0000000000001b34         db  0x00 ; '.'
0000000000001b35         db  0x00 ; '.'
0000000000001b36         db  0x00 ; '.'
0000000000001b37         db  0x00 ; '.'
0000000000001b38         db  0x08 ; '.'
0000000000001b39         db  0x00 ; '.'
0000000000001b3a         db  0x00 ; '.'
0000000000001b3b         db  0x00 ; '.'
0000000000001b3c         db  0x00 ; '.'
0000000000001b3d         db  0x00 ; '.'
0000000000001b3e         db  0x00 ; '.'
0000000000001b3f         db  0x00 ; '.'
0000000000001b40         db  0xf9 ; '.'
0000000000001b41         db  0x7b ; '{'
0000000000001b42         db  0x01 ; '.'
0000000000001b43         db  0x00 ; '.'
0000000000001b44         db  0x00 ; '.'
0000000000001b45         db  0x00 ; '.'
0000000000001b46         db  0x00 ; '.'
0000000000001b47         db  0x00 ; '.'
0000000000001b48         db  0x80 ; '.'
0000000000001b49         db  0xf2 ; '.'
0000000000001b4a         db  0x21 ; '!'
0000000000001b4b         db  0x00 ; '.'
0000000000001b4c         db  0x00 ; '.'
0000000000001b4d         db  0x00 ; '.'
0000000000001b4e         db  0x00 ; '.'
0000000000001b4f         db  0x00 ; '.'
0000000000001b50         db  0x08 ; '.'
0000000000001b51         db  0x00 ; '.'
0000000000001b52         db  0x00 ; '.'
0000000000001b53         db  0x00 ; '.'
0000000000001b54         db  0x00 ; '.'
0000000000001b55         db  0x00 ; '.'
0000000000001b56         db  0x00 ; '.'
0000000000001b57         db  0x00 ; '.'
0000000000001b58         db  0x00 ; '.'
0000000000001b59         db  0x7c ; '|'
0000000000001b5a         db  0x01 ; '.'
0000000000001b5b         db  0x00 ; '.'
0000000000001b5c         db  0x00 ; '.'
0000000000001b5d         db  0x00 ; '.'
0000000000001b5e         db  0x00 ; '.'
0000000000001b5f         db  0x00 ; '.'
0000000000001b60         db  0x88 ; '.'
0000000000001b61         db  0xf2 ; '.'
0000000000001b62         db  0x21 ; '!'
0000000000001b63         db  0x00 ; '.'
0000000000001b64         db  0x00 ; '.'
0000000000001b65         db  0x00 ; '.'
0000000000001b66         db  0x00 ; '.'
0000000000001b67         db  0x00 ; '.'
0000000000001b68         db  0x08 ; '.'
0000000000001b69         db  0x00 ; '.'
0000000000001b6a         db  0x00 ; '.'
0000000000001b6b         db  0x00 ; '.'
0000000000001b6c         db  0x00 ; '.'
0000000000001b6d         db  0x00 ; '.'
0000000000001b6e         db  0x00 ; '.'
0000000000001b6f         db  0x00 ; '.'
0000000000001b70         db  0x06 ; '.'
0000000000001b71         db  0x7c ; '|'
0000000000001b72         db  0x01 ; '.'
0000000000001b73         db  0x00 ; '.'
0000000000001b74         db  0x00 ; '.'
0000000000001b75         db  0x00 ; '.'
0000000000001b76         db  0x00 ; '.'
0000000000001b77         db  0x00 ; '.'
0000000000001b78         db  0x90 ; '.'
0000000000001b79         db  0xf2 ; '.'
0000000000001b7a         db  0x21 ; '!'
0000000000001b7b         db  0x00 ; '.'
0000000000001b7c         db  0x00 ; '.'
0000000000001b7d         db  0x00 ; '.'
0000000000001b7e         db  0x00 ; '.'
0000000000001b7f         db  0x00 ; '.'
0000000000001b80         db  0x08 ; '.'
0000000000001b81         db  0x00 ; '.'
0000000000001b82         db  0x00 ; '.'
0000000000001b83         db  0x00 ; '.'
0000000000001b84         db  0x00 ; '.'
0000000000001b85         db  0x00 ; '.'
0000000000001b86         db  0x00 ; '.'
0000000000001b87         db  0x00 ; '.'
0000000000001b88         db  0x0d ; '.'
0000000000001b89         db  0x7c ; '|'
0000000000001b8a         db  0x01 ; '.'
0000000000001b8b         db  0x00 ; '.'
0000000000001b8c         db  0x00 ; '.'
0000000000001b8d         db  0x00 ; '.'
0000000000001b8e         db  0x00 ; '.'
0000000000001b8f         db  0x00 ; '.'
0000000000001b90         db  0x98 ; '.'
0000000000001b91         db  0xf2 ; '.'
0000000000001b92         db  0x21 ; '!'
0000000000001b93         db  0x00 ; '.'
0000000000001b94         db  0x00 ; '.'
0000000000001b95         db  0x00 ; '.'
0000000000001b96         db  0x00 ; '.'
0000000000001b97         db  0x00 ; '.'
0000000000001b98         db  0x08 ; '.'
0000000000001b99         db  0x00 ; '.'
0000000000001b9a         db  0x00 ; '.'
0000000000001b9b         db  0x00 ; '.'
0000000000001b9c         db  0x00 ; '.'
0000000000001b9d         db  0x00 ; '.'
0000000000001b9e         db  0x00 ; '.'
0000000000001b9f         db  0x00 ; '.'
0000000000001ba0         db  0x11 ; '.'
0000000000001ba1         db  0x7c ; '|'
0000000000001ba2         db  0x01 ; '.'
0000000000001ba3         db  0x00 ; '.'
0000000000001ba4         db  0x00 ; '.'
0000000000001ba5         db  0x00 ; '.'
0000000000001ba6         db  0x00 ; '.'
0000000000001ba7         db  0x00 ; '.'
0000000000001ba8         db  0xa0 ; '.'
0000000000001ba9         db  0xf2 ; '.'
0000000000001baa         db  0x21 ; '!'
0000000000001bab         db  0x00 ; '.'
0000000000001bac         db  0x00 ; '.'
0000000000001bad         db  0x00 ; '.'
0000000000001bae         db  0x00 ; '.'
0000000000001baf         db  0x00 ; '.'
0000000000001bb0         db  0x08 ; '.'
0000000000001bb1         db  0x00 ; '.'
0000000000001bb2         db  0x00 ; '.'
0000000000001bb3         db  0x00 ; '.'
0000000000001bb4         db  0x00 ; '.'
0000000000001bb5         db  0x00 ; '.'
0000000000001bb6         db  0x00 ; '.'
0000000000001bb7         db  0x00 ; '.'
0000000000001bb8         db  0x17 ; '.'
0000000000001bb9         db  0x7c ; '|'
0000000000001bba         db  0x01 ; '.'
0000000000001bbb         db  0x00 ; '.'
0000000000001bbc         db  0x00 ; '.'
0000000000001bbd         db  0x00 ; '.'
0000000000001bbe         db  0x00 ; '.'
0000000000001bbf         db  0x00 ; '.'
0000000000001bc0         db  0xc0 ; '.'
0000000000001bc1         db  0xf2 ; '.'
0000000000001bc2         db  0x21 ; '!'
0000000000001bc3         db  0x00 ; '.'
0000000000001bc4         db  0x00 ; '.'
0000000000001bc5         db  0x00 ; '.'
0000000000001bc6         db  0x00 ; '.'
0000000000001bc7         db  0x00 ; '.'
0000000000001bc8         db  0x08 ; '.'
0000000000001bc9         db  0x00 ; '.'
0000000000001bca         db  0x00 ; '.'
0000000000001bcb         db  0x00 ; '.'
0000000000001bcc         db  0x00 ; '.'
0000000000001bcd         db  0x00 ; '.'
0000000000001bce         db  0x00 ; '.'
0000000000001bcf         db  0x00 ; '.'
0000000000001bd0         db  0xef ; '.'
0000000000001bd1         db  0x7b ; '{'
0000000000001bd2         db  0x01 ; '.'
0000000000001bd3         db  0x00 ; '.'
0000000000001bd4         db  0x00 ; '.'
0000000000001bd5         db  0x00 ; '.'
0000000000001bd6         db  0x00 ; '.'
0000000000001bd7         db  0x00 ; '.'
0000000000001bd8         db  0xc8 ; '.'
0000000000001bd9         db  0xf2 ; '.'
0000000000001bda         db  0x21 ; '!'
0000000000001bdb         db  0x00 ; '.'
0000000000001bdc         db  0x00 ; '.'
0000000000001bdd         db  0x00 ; '.'
0000000000001bde         db  0x00 ; '.'
0000000000001bdf         db  0x00 ; '.'
0000000000001be0         db  0x08 ; '.'
0000000000001be1         db  0x00 ; '.'
0000000000001be2         db  0x00 ; '.'
0000000000001be3         db  0x00 ; '.'
0000000000001be4         db  0x00 ; '.'
0000000000001be5         db  0x00 ; '.'
0000000000001be6         db  0x00 ; '.'
0000000000001be7         db  0x00 ; '.'
0000000000001be8         db  0x7d ; '}'
0000000000001be9         db  0x7a ; 'z'
0000000000001bea         db  0x01 ; '.'
0000000000001beb         db  0x00 ; '.'
0000000000001bec         db  0x00 ; '.'
0000000000001bed         db  0x00 ; '.'
0000000000001bee         db  0x00 ; '.'
0000000000001bef         db  0x00 ; '.'
0000000000001bf0         db  0xd0 ; '.'
0000000000001bf1         db  0xf2 ; '.'
0000000000001bf2         db  0x21 ; '!'
0000000000001bf3         db  0x00 ; '.'
0000000000001bf4         db  0x00 ; '.'
0000000000001bf5         db  0x00 ; '.'
0000000000001bf6         db  0x00 ; '.'
0000000000001bf7         db  0x00 ; '.'
0000000000001bf8         db  0x08 ; '.'
0000000000001bf9         db  0x00 ; '.'
0000000000001bfa         db  0x00 ; '.'
0000000000001bfb         db  0x00 ; '.'
0000000000001bfc         db  0x00 ; '.'
0000000000001bfd         db  0x00 ; '.'
0000000000001bfe         db  0x00 ; '.'
0000000000001bff         db  0x00 ; '.'
0000000000001c00         db  0x6f ; 'o'
0000000000001c01         db  0x7a ; 'z'
0000000000001c02         db  0x01 ; '.'
0000000000001c03         db  0x00 ; '.'
0000000000001c04         db  0x00 ; '.'
0000000000001c05         db  0x00 ; '.'
0000000000001c06         db  0x00 ; '.'
0000000000001c07         db  0x00 ; '.'
0000000000001c08         db  0xd8 ; '.'
0000000000001c09         db  0xf2 ; '.'
0000000000001c0a         db  0x21 ; '!'
0000000000001c0b         db  0x00 ; '.'
0000000000001c0c         db  0x00 ; '.'
0000000000001c0d         db  0x00 ; '.'
0000000000001c0e         db  0x00 ; '.'
0000000000001c0f         db  0x00 ; '.'
0000000000001c10         db  0x08 ; '.'
0000000000001c11         db  0x00 ; '.'
0000000000001c12         db  0x00 ; '.'
0000000000001c13         db  0x00 ; '.'
0000000000001c14         db  0x00 ; '.'
0000000000001c15         db  0x00 ; '.'
0000000000001c16         db  0x00 ; '.'
0000000000001c17         db  0x00 ; '.'
0000000000001c18         db  0x1e ; '.'
0000000000001c19         db  0x7c ; '|'
0000000000001c1a         db  0x01 ; '.'
0000000000001c1b         db  0x00 ; '.'
0000000000001c1c         db  0x00 ; '.'
0000000000001c1d         db  0x00 ; '.'
0000000000001c1e         db  0x00 ; '.'
0000000000001c1f         db  0x00 ; '.'
0000000000001c20         db  0xe0 ; '.'
0000000000001c21         db  0xf2 ; '.'
0000000000001c22         db  0x21 ; '!'
0000000000001c23         db  0x00 ; '.'
0000000000001c24         db  0x00 ; '.'
0000000000001c25         db  0x00 ; '.'
0000000000001c26         db  0x00 ; '.'
0000000000001c27         db  0x00 ; '.'
0000000000001c28         db  0x08 ; '.'
0000000000001c29         db  0x00 ; '.'
0000000000001c2a         db  0x00 ; '.'
0000000000001c2b         db  0x00 ; '.'
0000000000001c2c         db  0x00 ; '.'
0000000000001c2d         db  0x00 ; '.'
0000000000001c2e         db  0x00 ; '.'
0000000000001c2f         db  0x00 ; '.'
0000000000001c30         db  0x84 ; '.'
0000000000001c31         db  0x78 ; 'x'
0000000000001c32         db  0x01 ; '.'
0000000000001c33         db  0x00 ; '.'
0000000000001c34         db  0x00 ; '.'
0000000000001c35         db  0x00 ; '.'
0000000000001c36         db  0x00 ; '.'
0000000000001c37         db  0x00 ; '.'
0000000000001c38         db  0x00 ; '.'
0000000000001c39         db  0xf3 ; '.'
0000000000001c3a         db  0x21 ; '!'
0000000000001c3b         db  0x00 ; '.'
0000000000001c3c         db  0x00 ; '.'
0000000000001c3d         db  0x00 ; '.'
0000000000001c3e         db  0x00 ; '.'
0000000000001c3f         db  0x00 ; '.'
0000000000001c40         db  0x08 ; '.'
0000000000001c41         db  0x00 ; '.'
0000000000001c42         db  0x00 ; '.'
0000000000001c43         db  0x00 ; '.'
0000000000001c44         db  0x00 ; '.'
0000000000001c45         db  0x00 ; '.'
0000000000001c46         db  0x00 ; '.'
0000000000001c47         db  0x00 ; '.'
0000000000001c48         db  0x28 ; '('
0000000000001c49         db  0x7c ; '|'
0000000000001c4a         db  0x01 ; '.'
0000000000001c4b         db  0x00 ; '.'
0000000000001c4c         db  0x00 ; '.'
0000000000001c4d         db  0x00 ; '.'
0000000000001c4e         db  0x00 ; '.'
0000000000001c4f         db  0x00 ; '.'
0000000000001c50         db  0x08 ; '.'
0000000000001c51         db  0xf3 ; '.'
0000000000001c52         db  0x21 ; '!'
0000000000001c53         db  0x00 ; '.'
0000000000001c54         db  0x00 ; '.'
0000000000001c55         db  0x00 ; '.'
0000000000001c56         db  0x00 ; '.'
0000000000001c57         db  0x00 ; '.'
0000000000001c58         db  0x08 ; '.'
0000000000001c59         db  0x00 ; '.'
0000000000001c5a         db  0x00 ; '.'
0000000000001c5b         db  0x00 ; '.'
0000000000001c5c         db  0x00 ; '.'
0000000000001c5d         db  0x00 ; '.'
0000000000001c5e         db  0x00 ; '.'
0000000000001c5f         db  0x00 ; '.'
0000000000001c60         db  0x30 ; '0'
0000000000001c61         db  0x7c ; '|'
0000000000001c62         db  0x01 ; '.'
0000000000001c63         db  0x00 ; '.'
0000000000001c64         db  0x00 ; '.'
0000000000001c65         db  0x00 ; '.'
0000000000001c66         db  0x00 ; '.'
0000000000001c67         db  0x00 ; '.'
0000000000001c68         db  0x10 ; '.'
0000000000001c69         db  0xf3 ; '.'
0000000000001c6a         db  0x21 ; '!'
0000000000001c6b         db  0x00 ; '.'
0000000000001c6c         db  0x00 ; '.'
0000000000001c6d         db  0x00 ; '.'
0000000000001c6e         db  0x00 ; '.'
0000000000001c6f         db  0x00 ; '.'
0000000000001c70         db  0x08 ; '.'
0000000000001c71         db  0x00 ; '.'
0000000000001c72         db  0x00 ; '.'
0000000000001c73         db  0x00 ; '.'
0000000000001c74         db  0x00 ; '.'
0000000000001c75         db  0x00 ; '.'
0000000000001c76         db  0x00 ; '.'
0000000000001c77         db  0x00 ; '.'
0000000000001c78         db  0x35 ; '5'
0000000000001c79         db  0x7c ; '|'
0000000000001c7a         db  0x01 ; '.'
0000000000001c7b         db  0x00 ; '.'
0000000000001c7c         db  0x00 ; '.'
0000000000001c7d         db  0x00 ; '.'
0000000000001c7e         db  0x00 ; '.'
0000000000001c7f         db  0x00 ; '.'
0000000000001c80         db  0x18 ; '.'
0000000000001c81         db  0xf3 ; '.'
0000000000001c82         db  0x21 ; '!'
0000000000001c83         db  0x00 ; '.'
0000000000001c84         db  0x00 ; '.'
0000000000001c85         db  0x00 ; '.'
0000000000001c86         db  0x00 ; '.'
0000000000001c87         db  0x00 ; '.'
0000000000001c88         db  0x08 ; '.'
0000000000001c89         db  0x00 ; '.'
0000000000001c8a         db  0x00 ; '.'
0000000000001c8b         db  0x00 ; '.'
0000000000001c8c         db  0x00 ; '.'
0000000000001c8d         db  0x00 ; '.'
0000000000001c8e         db  0x00 ; '.'
0000000000001c8f         db  0x00 ; '.'
0000000000001c90         db  0x3c ; '<'
0000000000001c91         db  0x7c ; '|'
0000000000001c92         db  0x01 ; '.'
0000000000001c93         db  0x00 ; '.'
0000000000001c94         db  0x00 ; '.'
0000000000001c95         db  0x00 ; '.'
0000000000001c96         db  0x00 ; '.'
0000000000001c97         db  0x00 ; '.'
0000000000001c98         db  0x20 ; ' '
0000000000001c99         db  0xf3 ; '.'
0000000000001c9a         db  0x21 ; '!'
0000000000001c9b         db  0x00 ; '.'
0000000000001c9c         db  0x00 ; '.'
0000000000001c9d         db  0x00 ; '.'
0000000000001c9e         db  0x00 ; '.'
0000000000001c9f         db  0x00 ; '.'
0000000000001ca0         db  0x08 ; '.'
0000000000001ca1         db  0x00 ; '.'
0000000000001ca2         db  0x00 ; '.'
0000000000001ca3         db  0x00 ; '.'
0000000000001ca4         db  0x00 ; '.'
0000000000001ca5         db  0x00 ; '.'
0000000000001ca6         db  0x00 ; '.'
0000000000001ca7         db  0x00 ; '.'
0000000000001ca8         db  0x47 ; 'G'
0000000000001ca9         db  0x7c ; '|'
0000000000001caa         db  0x01 ; '.'
0000000000001cab         db  0x00 ; '.'
0000000000001cac         db  0x00 ; '.'
0000000000001cad         db  0x00 ; '.'
0000000000001cae         db  0x00 ; '.'
0000000000001caf         db  0x00 ; '.'
0000000000001cb0         db  0x28 ; '('
0000000000001cb1         db  0xf3 ; '.'
0000000000001cb2         db  0x21 ; '!'
0000000000001cb3         db  0x00 ; '.'
0000000000001cb4         db  0x00 ; '.'
0000000000001cb5         db  0x00 ; '.'
0000000000001cb6         db  0x00 ; '.'
0000000000001cb7         db  0x00 ; '.'
0000000000001cb8         db  0x08 ; '.'
0000000000001cb9         db  0x00 ; '.'
0000000000001cba         db  0x00 ; '.'
0000000000001cbb         db  0x00 ; '.'
0000000000001cbc         db  0x00 ; '.'
0000000000001cbd         db  0x00 ; '.'
0000000000001cbe         db  0x00 ; '.'
0000000000001cbf         db  0x00 ; '.'
0000000000001cc0         db  0x4e ; 'N'
0000000000001cc1         db  0x7c ; '|'
0000000000001cc2         db  0x01 ; '.'
0000000000001cc3         db  0x00 ; '.'
0000000000001cc4         db  0x00 ; '.'
0000000000001cc5         db  0x00 ; '.'
0000000000001cc6         db  0x00 ; '.'
0000000000001cc7         db  0x00 ; '.'
0000000000001cc8         db  0x30 ; '0'
0000000000001cc9         db  0xf3 ; '.'
0000000000001cca         db  0x21 ; '!'
0000000000001ccb         db  0x00 ; '.'
0000000000001ccc         db  0x00 ; '.'
0000000000001ccd         db  0x00 ; '.'
0000000000001cce         db  0x00 ; '.'
0000000000001ccf         db  0x00 ; '.'
0000000000001cd0         db  0x08 ; '.'
0000000000001cd1         db  0x00 ; '.'
0000000000001cd2         db  0x00 ; '.'
0000000000001cd3         db  0x00 ; '.'
0000000000001cd4         db  0x00 ; '.'
0000000000001cd5         db  0x00 ; '.'
0000000000001cd6         db  0x00 ; '.'
0000000000001cd7         db  0x00 ; '.'
0000000000001cd8         db  0x57 ; 'W'
0000000000001cd9         db  0x7c ; '|'
0000000000001cda         db  0x01 ; '.'
0000000000001cdb         db  0x00 ; '.'
0000000000001cdc         db  0x00 ; '.'
0000000000001cdd         db  0x00 ; '.'
0000000000001cde         db  0x00 ; '.'
0000000000001cdf         db  0x00 ; '.'
0000000000001ce0         db  0x40 ; '@'
0000000000001ce1         db  0xf3 ; '.'
0000000000001ce2         db  0x21 ; '!'
0000000000001ce3         db  0x00 ; '.'
0000000000001ce4         db  0x00 ; '.'
0000000000001ce5         db  0x00 ; '.'
0000000000001ce6         db  0x00 ; '.'
0000000000001ce7         db  0x00 ; '.'
0000000000001ce8         db  0x08 ; '.'
0000000000001ce9         db  0x00 ; '.'
0000000000001cea         db  0x00 ; '.'
0000000000001ceb         db  0x00 ; '.'
0000000000001cec         db  0x00 ; '.'
0000000000001ced         db  0x00 ; '.'
0000000000001cee         db  0x00 ; '.'
0000000000001cef         db  0x00 ; '.'
0000000000001cf0         db  0xf1 ; '.'
0000000000001cf1         db  0x7c ; '|'
0000000000001cf2         db  0x01 ; '.'
0000000000001cf3         db  0x00 ; '.'
0000000000001cf4         db  0x00 ; '.'
0000000000001cf5         db  0x00 ; '.'
0000000000001cf6         db  0x00 ; '.'
0000000000001cf7         db  0x00 ; '.'
0000000000001cf8         db  0x60 ; '`'
0000000000001cf9         db  0xf3 ; '.'
0000000000001cfa         db  0x21 ; '!'
0000000000001cfb         db  0x00 ; '.'
0000000000001cfc         db  0x00 ; '.'
0000000000001cfd         db  0x00 ; '.'
0000000000001cfe         db  0x00 ; '.'
0000000000001cff         db  0x00 ; '.'
0000000000001d00         db  0x08 ; '.'
0000000000001d01         db  0x00 ; '.'
0000000000001d02         db  0x00 ; '.'
0000000000001d03         db  0x00 ; '.'
0000000000001d04         db  0x00 ; '.'
0000000000001d05         db  0x00 ; '.'
0000000000001d06         db  0x00 ; '.'
0000000000001d07         db  0x00 ; '.'
0000000000001d08         db  0x38 ; '8'
0000000000001d09         db  0xa3 ; '.'
0000000000001d0a         db  0x01 ; '.'
0000000000001d0b         db  0x00 ; '.'
0000000000001d0c         db  0x00 ; '.'
0000000000001d0d         db  0x00 ; '.'
0000000000001d0e         db  0x00 ; '.'
0000000000001d0f         db  0x00 ; '.'
0000000000001d10         db  0x80 ; '.'
0000000000001d11         db  0xf3 ; '.'
0000000000001d12         db  0x21 ; '!'
0000000000001d13         db  0x00 ; '.'
0000000000001d14         db  0x00 ; '.'
0000000000001d15         db  0x00 ; '.'
0000000000001d16         db  0x00 ; '.'
0000000000001d17         db  0x00 ; '.'
0000000000001d18         db  0x08 ; '.'
0000000000001d19         db  0x00 ; '.'
0000000000001d1a         db  0x00 ; '.'
0000000000001d1b         db  0x00 ; '.'
0000000000001d1c         db  0x00 ; '.'
0000000000001d1d         db  0x00 ; '.'
0000000000001d1e         db  0x00 ; '.'
0000000000001d1f         db  0x00 ; '.'
0000000000001d20         db  0x65 ; 'e'
0000000000001d21         db  0x7c ; '|'
0000000000001d22         db  0x01 ; '.'
0000000000001d23         db  0x00 ; '.'
0000000000001d24         db  0x00 ; '.'
0000000000001d25         db  0x00 ; '.'
0000000000001d26         db  0x00 ; '.'
0000000000001d27         db  0x00 ; '.'
0000000000001d28         db  0xa0 ; '.'
0000000000001d29         db  0xf3 ; '.'
0000000000001d2a         db  0x21 ; '!'
0000000000001d2b         db  0x00 ; '.'
0000000000001d2c         db  0x00 ; '.'
0000000000001d2d         db  0x00 ; '.'
0000000000001d2e         db  0x00 ; '.'
0000000000001d2f         db  0x00 ; '.'
0000000000001d30         db  0x08 ; '.'
0000000000001d31         db  0x00 ; '.'
0000000000001d32         db  0x00 ; '.'
0000000000001d33         db  0x00 ; '.'
0000000000001d34         db  0x00 ; '.'
0000000000001d35         db  0x00 ; '.'
0000000000001d36         db  0x00 ; '.'
0000000000001d37         db  0x00 ; '.'
0000000000001d38         db  0x6f ; 'o'
0000000000001d39         db  0x7c ; '|'
0000000000001d3a         db  0x01 ; '.'
0000000000001d3b         db  0x00 ; '.'
0000000000001d3c         db  0x00 ; '.'
0000000000001d3d         db  0x00 ; '.'
0000000000001d3e         db  0x00 ; '.'
0000000000001d3f         db  0x00 ; '.'
0000000000001d40         db  0xc0 ; '.'
0000000000001d41         db  0xf3 ; '.'
0000000000001d42         db  0x21 ; '!'
0000000000001d43         db  0x00 ; '.'
0000000000001d44         db  0x00 ; '.'
0000000000001d45         db  0x00 ; '.'
0000000000001d46         db  0x00 ; '.'
0000000000001d47         db  0x00 ; '.'
0000000000001d48         db  0x08 ; '.'
0000000000001d49         db  0x00 ; '.'
0000000000001d4a         db  0x00 ; '.'
0000000000001d4b         db  0x00 ; '.'
0000000000001d4c         db  0x00 ; '.'
0000000000001d4d         db  0x00 ; '.'
0000000000001d4e         db  0x00 ; '.'
0000000000001d4f         db  0x00 ; '.'
0000000000001d50         db  0x75 ; 'u'
0000000000001d51         db  0x7c ; '|'
0000000000001d52         db  0x01 ; '.'
0000000000001d53         db  0x00 ; '.'
0000000000001d54         db  0x00 ; '.'
0000000000001d55         db  0x00 ; '.'
0000000000001d56         db  0x00 ; '.'
0000000000001d57         db  0x00 ; '.'
0000000000001d58         db  0xe0 ; '.'
0000000000001d59         db  0xf3 ; '.'
0000000000001d5a         db  0x21 ; '!'
0000000000001d5b         db  0x00 ; '.'
0000000000001d5c         db  0x00 ; '.'
0000000000001d5d         db  0x00 ; '.'
0000000000001d5e         db  0x00 ; '.'
0000000000001d5f         db  0x00 ; '.'
0000000000001d60         db  0x08 ; '.'
0000000000001d61         db  0x00 ; '.'
0000000000001d62         db  0x00 ; '.'
0000000000001d63         db  0x00 ; '.'
0000000000001d64         db  0x00 ; '.'
0000000000001d65         db  0x00 ; '.'
0000000000001d66         db  0x00 ; '.'
0000000000001d67         db  0x00 ; '.'
0000000000001d68         db  0x7f ; '.'
0000000000001d69         db  0x7c ; '|'
0000000000001d6a         db  0x01 ; '.'
0000000000001d6b         db  0x00 ; '.'
0000000000001d6c         db  0x00 ; '.'
0000000000001d6d         db  0x00 ; '.'
0000000000001d6e         db  0x00 ; '.'
0000000000001d6f         db  0x00 ; '.'
0000000000001d70         db  0x00 ; '.'
0000000000001d71         db  0xf4 ; '.'
0000000000001d72         db  0x21 ; '!'
0000000000001d73         db  0x00 ; '.'
0000000000001d74         db  0x00 ; '.'
0000000000001d75         db  0x00 ; '.'
0000000000001d76         db  0x00 ; '.'
0000000000001d77         db  0x00 ; '.'
0000000000001d78         db  0x08 ; '.'
0000000000001d79         db  0x00 ; '.'
0000000000001d7a         db  0x00 ; '.'
0000000000001d7b         db  0x00 ; '.'
0000000000001d7c         db  0x00 ; '.'
0000000000001d7d         db  0x00 ; '.'
0000000000001d7e         db  0x00 ; '.'
0000000000001d7f         db  0x00 ; '.'
0000000000001d80         db  0x97 ; '.'
0000000000001d81         db  0x7c ; '|'
0000000000001d82         db  0x01 ; '.'
0000000000001d83         db  0x00 ; '.'
0000000000001d84         db  0x00 ; '.'
0000000000001d85         db  0x00 ; '.'
0000000000001d86         db  0x00 ; '.'
0000000000001d87         db  0x00 ; '.'
0000000000001d88         db  0x20 ; ' '
0000000000001d89         db  0xf4 ; '.'
0000000000001d8a         db  0x21 ; '!'
0000000000001d8b         db  0x00 ; '.'
0000000000001d8c         db  0x00 ; '.'
0000000000001d8d         db  0x00 ; '.'
0000000000001d8e         db  0x00 ; '.'
0000000000001d8f         db  0x00 ; '.'
0000000000001d90         db  0x08 ; '.'
0000000000001d91         db  0x00 ; '.'
0000000000001d92         db  0x00 ; '.'
0000000000001d93         db  0x00 ; '.'
0000000000001d94         db  0x00 ; '.'
0000000000001d95         db  0x00 ; '.'
0000000000001d96         db  0x00 ; '.'
0000000000001d97         db  0x00 ; '.'
0000000000001d98         db  0xa6 ; '.'
0000000000001d99         db  0x7c ; '|'
0000000000001d9a         db  0x01 ; '.'
0000000000001d9b         db  0x00 ; '.'
0000000000001d9c         db  0x00 ; '.'
0000000000001d9d         db  0x00 ; '.'
0000000000001d9e         db  0x00 ; '.'
0000000000001d9f         db  0x00 ; '.'
0000000000001da0         db  0x40 ; '@'
0000000000001da1         db  0xf4 ; '.'
0000000000001da2         db  0x21 ; '!'
0000000000001da3         db  0x00 ; '.'
0000000000001da4         db  0x00 ; '.'
0000000000001da5         db  0x00 ; '.'
0000000000001da6         db  0x00 ; '.'
0000000000001da7         db  0x00 ; '.'
0000000000001da8         db  0x08 ; '.'
0000000000001da9         db  0x00 ; '.'
0000000000001daa         db  0x00 ; '.'
0000000000001dab         db  0x00 ; '.'
0000000000001dac         db  0x00 ; '.'
0000000000001dad         db  0x00 ; '.'
0000000000001dae         db  0x00 ; '.'
0000000000001daf         db  0x00 ; '.'
0000000000001db0         db  0xac ; '.'
0000000000001db1         db  0x7c ; '|'
0000000000001db2         db  0x01 ; '.'
0000000000001db3         db  0x00 ; '.'
0000000000001db4         db  0x00 ; '.'
0000000000001db5         db  0x00 ; '.'
0000000000001db6         db  0x00 ; '.'
0000000000001db7         db  0x00 ; '.'
0000000000001db8         db  0x60 ; '`'
0000000000001db9         db  0xf4 ; '.'
0000000000001dba         db  0x21 ; '!'
0000000000001dbb         db  0x00 ; '.'
0000000000001dbc         db  0x00 ; '.'
0000000000001dbd         db  0x00 ; '.'
0000000000001dbe         db  0x00 ; '.'
0000000000001dbf         db  0x00 ; '.'
0000000000001dc0         db  0x08 ; '.'
0000000000001dc1         db  0x00 ; '.'
0000000000001dc2         db  0x00 ; '.'
0000000000001dc3         db  0x00 ; '.'
0000000000001dc4         db  0x00 ; '.'
0000000000001dc5         db  0x00 ; '.'
0000000000001dc6         db  0x00 ; '.'
0000000000001dc7         db  0x00 ; '.'
0000000000001dc8         db  0xb6 ; '.'
0000000000001dc9         db  0x7c ; '|'
0000000000001dca         db  0x01 ; '.'
0000000000001dcb         db  0x00 ; '.'
0000000000001dcc         db  0x00 ; '.'
0000000000001dcd         db  0x00 ; '.'
0000000000001dce         db  0x00 ; '.'
0000000000001dcf         db  0x00 ; '.'
0000000000001dd0         db  0x80 ; '.'
0000000000001dd1         db  0xf4 ; '.'
0000000000001dd2         db  0x21 ; '!'
0000000000001dd3         db  0x00 ; '.'
0000000000001dd4         db  0x00 ; '.'
0000000000001dd5         db  0x00 ; '.'
0000000000001dd6         db  0x00 ; '.'
0000000000001dd7         db  0x00 ; '.'
0000000000001dd8         db  0x08 ; '.'
0000000000001dd9         db  0x00 ; '.'
0000000000001dda         db  0x00 ; '.'
0000000000001ddb         db  0x00 ; '.'
0000000000001ddc         db  0x00 ; '.'
0000000000001ddd         db  0x00 ; '.'
0000000000001dde         db  0x00 ; '.'
0000000000001ddf         db  0x00 ; '.'
0000000000001de0         db  0xc6 ; '.'
0000000000001de1         db  0x7c ; '|'
0000000000001de2         db  0x01 ; '.'
0000000000001de3         db  0x00 ; '.'
0000000000001de4         db  0x00 ; '.'
0000000000001de5         db  0x00 ; '.'
0000000000001de6         db  0x00 ; '.'
0000000000001de7         db  0x00 ; '.'
0000000000001de8         db  0xa0 ; '.'
0000000000001de9         db  0xf4 ; '.'
0000000000001dea         db  0x21 ; '!'
0000000000001deb         db  0x00 ; '.'
0000000000001dec         db  0x00 ; '.'
0000000000001ded         db  0x00 ; '.'
0000000000001dee         db  0x00 ; '.'
0000000000001def         db  0x00 ; '.'
0000000000001df0         db  0x08 ; '.'
0000000000001df1         db  0x00 ; '.'
0000000000001df2         db  0x00 ; '.'
0000000000001df3         db  0x00 ; '.'
0000000000001df4         db  0x00 ; '.'
0000000000001df5         db  0x00 ; '.'
0000000000001df6         db  0x00 ; '.'
0000000000001df7         db  0x00 ; '.'
0000000000001df8         db  0xcf ; '.'
0000000000001df9         db  0x7c ; '|'
0000000000001dfa         db  0x01 ; '.'
0000000000001dfb         db  0x00 ; '.'
0000000000001dfc         db  0x00 ; '.'
0000000000001dfd         db  0x00 ; '.'
0000000000001dfe         db  0x00 ; '.'
0000000000001dff         db  0x00 ; '.'
0000000000001e00         db  0xc0 ; '.'
0000000000001e01         db  0xf4 ; '.'
0000000000001e02         db  0x21 ; '!'
0000000000001e03         db  0x00 ; '.'
0000000000001e04         db  0x00 ; '.'
0000000000001e05         db  0x00 ; '.'
0000000000001e06         db  0x00 ; '.'
0000000000001e07         db  0x00 ; '.'
0000000000001e08         db  0x08 ; '.'
0000000000001e09         db  0x00 ; '.'
0000000000001e0a         db  0x00 ; '.'
0000000000001e0b         db  0x00 ; '.'
0000000000001e0c         db  0x00 ; '.'
0000000000001e0d         db  0x00 ; '.'
0000000000001e0e         db  0x00 ; '.'
0000000000001e0f         db  0x00 ; '.'
0000000000001e10         db  0xe2 ; '.'
0000000000001e11         db  0x7c ; '|'
0000000000001e12         db  0x01 ; '.'
0000000000001e13         db  0x00 ; '.'
0000000000001e14         db  0x00 ; '.'
0000000000001e15         db  0x00 ; '.'
0000000000001e16         db  0x00 ; '.'
0000000000001e17         db  0x00 ; '.'
0000000000001e18         db  0xe0 ; '.'
0000000000001e19         db  0xf4 ; '.'
0000000000001e1a         db  0x21 ; '!'
0000000000001e1b         db  0x00 ; '.'
0000000000001e1c         db  0x00 ; '.'
0000000000001e1d         db  0x00 ; '.'
0000000000001e1e         db  0x00 ; '.'
0000000000001e1f         db  0x00 ; '.'
0000000000001e20         db  0x08 ; '.'
0000000000001e21         db  0x00 ; '.'
0000000000001e22         db  0x00 ; '.'
0000000000001e23         db  0x00 ; '.'
0000000000001e24         db  0x00 ; '.'
0000000000001e25         db  0x00 ; '.'
0000000000001e26         db  0x00 ; '.'
0000000000001e27         db  0x00 ; '.'
0000000000001e28         db  0x6f ; 'o'
0000000000001e29         db  0x7a ; 'z'
0000000000001e2a         db  0x01 ; '.'
0000000000001e2b         db  0x00 ; '.'
0000000000001e2c         db  0x00 ; '.'
0000000000001e2d         db  0x00 ; '.'
0000000000001e2e         db  0x00 ; '.'
0000000000001e2f         db  0x00 ; '.'
0000000000001e30         db  0x00 ; '.'
0000000000001e31         db  0xf5 ; '.'
0000000000001e32         db  0x21 ; '!'
0000000000001e33         db  0x00 ; '.'
0000000000001e34         db  0x00 ; '.'
0000000000001e35         db  0x00 ; '.'
0000000000001e36         db  0x00 ; '.'
0000000000001e37         db  0x00 ; '.'
0000000000001e38         db  0x08 ; '.'
0000000000001e39         db  0x00 ; '.'
0000000000001e3a         db  0x00 ; '.'
0000000000001e3b         db  0x00 ; '.'
0000000000001e3c         db  0x00 ; '.'
0000000000001e3d         db  0x00 ; '.'
0000000000001e3e         db  0x00 ; '.'
0000000000001e3f         db  0x00 ; '.'
0000000000001e40         db  0x52 ; 'R'
0000000000001e41         db  0x7a ; 'z'
0000000000001e42         db  0x01 ; '.'
0000000000001e43         db  0x00 ; '.'
0000000000001e44         db  0x00 ; '.'
0000000000001e45         db  0x00 ; '.'
0000000000001e46         db  0x00 ; '.'
0000000000001e47         db  0x00 ; '.'
0000000000001e48         db  0x20 ; ' '
0000000000001e49         db  0xf5 ; '.'
0000000000001e4a         db  0x21 ; '!'
0000000000001e4b         db  0x00 ; '.'
0000000000001e4c         db  0x00 ; '.'
0000000000001e4d         db  0x00 ; '.'
0000000000001e4e         db  0x00 ; '.'
0000000000001e4f         db  0x00 ; '.'
0000000000001e50         db  0x08 ; '.'
0000000000001e51         db  0x00 ; '.'
0000000000001e52         db  0x00 ; '.'
0000000000001e53         db  0x00 ; '.'
0000000000001e54         db  0x00 ; '.'
0000000000001e55         db  0x00 ; '.'
0000000000001e56         db  0x00 ; '.'
0000000000001e57         db  0x00 ; '.'
0000000000001e58         db  0xea ; '.'
0000000000001e59         db  0x7c ; '|'
0000000000001e5a         db  0x01 ; '.'
0000000000001e5b         db  0x00 ; '.'
0000000000001e5c         db  0x00 ; '.'
0000000000001e5d         db  0x00 ; '.'
0000000000001e5e         db  0x00 ; '.'
0000000000001e5f         db  0x00 ; '.'
0000000000001e60         db  0x40 ; '@'
0000000000001e61         db  0xf5 ; '.'
0000000000001e62         db  0x21 ; '!'
0000000000001e63         db  0x00 ; '.'
0000000000001e64         db  0x00 ; '.'
0000000000001e65         db  0x00 ; '.'
0000000000001e66         db  0x00 ; '.'
0000000000001e67         db  0x00 ; '.'
0000000000001e68         db  0x08 ; '.'
0000000000001e69         db  0x00 ; '.'
0000000000001e6a         db  0x00 ; '.'
0000000000001e6b         db  0x00 ; '.'
0000000000001e6c         db  0x00 ; '.'
0000000000001e6d         db  0x00 ; '.'
0000000000001e6e         db  0x00 ; '.'
0000000000001e6f         db  0x00 ; '.'
0000000000001e70         db  0xf5 ; '.'
0000000000001e71         db  0x7c ; '|'
0000000000001e72         db  0x01 ; '.'
0000000000001e73         db  0x00 ; '.'
0000000000001e74         db  0x00 ; '.'
0000000000001e75         db  0x00 ; '.'
0000000000001e76         db  0x00 ; '.'
0000000000001e77         db  0x00 ; '.'
0000000000001e78         db  0x60 ; '`'
0000000000001e79         db  0xf5 ; '.'
0000000000001e7a         db  0x21 ; '!'
0000000000001e7b         db  0x00 ; '.'
0000000000001e7c         db  0x00 ; '.'
0000000000001e7d         db  0x00 ; '.'
0000000000001e7e         db  0x00 ; '.'
0000000000001e7f         db  0x00 ; '.'
0000000000001e80         db  0x08 ; '.'
0000000000001e81         db  0x00 ; '.'
0000000000001e82         db  0x00 ; '.'
0000000000001e83         db  0x00 ; '.'
0000000000001e84         db  0x00 ; '.'
0000000000001e85         db  0x00 ; '.'
0000000000001e86         db  0x00 ; '.'
0000000000001e87         db  0x00 ; '.'
0000000000001e88         db  0x04 ; '.'
0000000000001e89         db  0x7d ; '}'
0000000000001e8a         db  0x01 ; '.'
0000000000001e8b         db  0x00 ; '.'
0000000000001e8c         db  0x00 ; '.'
0000000000001e8d         db  0x00 ; '.'
0000000000001e8e         db  0x00 ; '.'
0000000000001e8f         db  0x00 ; '.'
0000000000001e90         db  0x80 ; '.'
0000000000001e91         db  0xf5 ; '.'
0000000000001e92         db  0x21 ; '!'
0000000000001e93         db  0x00 ; '.'
0000000000001e94         db  0x00 ; '.'
0000000000001e95         db  0x00 ; '.'
0000000000001e96         db  0x00 ; '.'
0000000000001e97         db  0x00 ; '.'
0000000000001e98         db  0x08 ; '.'
0000000000001e99         db  0x00 ; '.'
0000000000001e9a         db  0x00 ; '.'
0000000000001e9b         db  0x00 ; '.'
0000000000001e9c         db  0x00 ; '.'
0000000000001e9d         db  0x00 ; '.'
0000000000001e9e         db  0x00 ; '.'
0000000000001e9f         db  0x00 ; '.'
0000000000001ea0         db  0x0d ; '.'
0000000000001ea1         db  0x7d ; '}'
0000000000001ea2         db  0x01 ; '.'
0000000000001ea3         db  0x00 ; '.'
0000000000001ea4         db  0x00 ; '.'
0000000000001ea5         db  0x00 ; '.'
0000000000001ea6         db  0x00 ; '.'
0000000000001ea7         db  0x00 ; '.'
0000000000001ea8         db  0xa0 ; '.'
0000000000001ea9         db  0xf5 ; '.'
0000000000001eaa         db  0x21 ; '!'
0000000000001eab         db  0x00 ; '.'
0000000000001eac         db  0x00 ; '.'
0000000000001ead         db  0x00 ; '.'
0000000000001eae         db  0x00 ; '.'
0000000000001eaf         db  0x00 ; '.'
0000000000001eb0         db  0x08 ; '.'
0000000000001eb1         db  0x00 ; '.'
0000000000001eb2         db  0x00 ; '.'
0000000000001eb3         db  0x00 ; '.'
0000000000001eb4         db  0x00 ; '.'
0000000000001eb5         db  0x00 ; '.'
0000000000001eb6         db  0x00 ; '.'
0000000000001eb7         db  0x00 ; '.'
0000000000001eb8         db  0x17 ; '.'
0000000000001eb9         db  0x7d ; '}'
0000000000001eba         db  0x01 ; '.'
0000000000001ebb         db  0x00 ; '.'
0000000000001ebc         db  0x00 ; '.'
0000000000001ebd         db  0x00 ; '.'
0000000000001ebe         db  0x00 ; '.'
0000000000001ebf         db  0x00 ; '.'
0000000000001ec0         db  0xc0 ; '.'
0000000000001ec1         db  0xf5 ; '.'
0000000000001ec2         db  0x21 ; '!'
0000000000001ec3         db  0x00 ; '.'
0000000000001ec4         db  0x00 ; '.'
0000000000001ec5         db  0x00 ; '.'
0000000000001ec6         db  0x00 ; '.'
0000000000001ec7         db  0x00 ; '.'
0000000000001ec8         db  0x08 ; '.'
0000000000001ec9         db  0x00 ; '.'
0000000000001eca         db  0x00 ; '.'
0000000000001ecb         db  0x00 ; '.'
0000000000001ecc         db  0x00 ; '.'
0000000000001ecd         db  0x00 ; '.'
0000000000001ece         db  0x00 ; '.'
0000000000001ecf         db  0x00 ; '.'
0000000000001ed0         db  0x1a ; '.'
0000000000001ed1         db  0x7d ; '}'
0000000000001ed2         db  0x01 ; '.'
0000000000001ed3         db  0x00 ; '.'
0000000000001ed4         db  0x00 ; '.'
0000000000001ed5         db  0x00 ; '.'
0000000000001ed6         db  0x00 ; '.'
0000000000001ed7         db  0x00 ; '.'
0000000000001ed8         db  0xe0 ; '.'
0000000000001ed9         db  0xf5 ; '.'
0000000000001eda         db  0x21 ; '!'
0000000000001edb         db  0x00 ; '.'
0000000000001edc         db  0x00 ; '.'
0000000000001edd         db  0x00 ; '.'
0000000000001ede         db  0x00 ; '.'
0000000000001edf         db  0x00 ; '.'
0000000000001ee0         db  0x08 ; '.'
0000000000001ee1         db  0x00 ; '.'
0000000000001ee2         db  0x00 ; '.'
0000000000001ee3         db  0x00 ; '.'
0000000000001ee4         db  0x00 ; '.'
0000000000001ee5         db  0x00 ; '.'
0000000000001ee6         db  0x00 ; '.'
0000000000001ee7         db  0x00 ; '.'
0000000000001ee8         db  0x08 ; '.'
0000000000001ee9         db  0x9f ; '.'
0000000000001eea         db  0x01 ; '.'
0000000000001eeb         db  0x00 ; '.'
0000000000001eec         db  0x00 ; '.'
0000000000001eed         db  0x00 ; '.'
0000000000001eee         db  0x00 ; '.'
0000000000001eef         db  0x00 ; '.'
0000000000001ef0         db  0x00 ; '.'
0000000000001ef1         db  0xf6 ; '.'
0000000000001ef2         db  0x21 ; '!'
0000000000001ef3         db  0x00 ; '.'
0000000000001ef4         db  0x00 ; '.'
0000000000001ef5         db  0x00 ; '.'
0000000000001ef6         db  0x00 ; '.'
0000000000001ef7         db  0x00 ; '.'
0000000000001ef8         db  0x08 ; '.'
0000000000001ef9         db  0x00 ; '.'
0000000000001efa         db  0x00 ; '.'
0000000000001efb         db  0x00 ; '.'
0000000000001efc         db  0x00 ; '.'
0000000000001efd         db  0x00 ; '.'
0000000000001efe         db  0x00 ; '.'
0000000000001eff         db  0x00 ; '.'
0000000000001f00         db  0x33 ; '3'
0000000000001f01         db  0x7d ; '}'
0000000000001f02         db  0x01 ; '.'
0000000000001f03         db  0x00 ; '.'
0000000000001f04         db  0x00 ; '.'
0000000000001f05         db  0x00 ; '.'
0000000000001f06         db  0x00 ; '.'
0000000000001f07         db  0x00 ; '.'
0000000000001f08         db  0x20 ; ' '
0000000000001f09         db  0xf6 ; '.'
0000000000001f0a         db  0x21 ; '!'
0000000000001f0b         db  0x00 ; '.'
0000000000001f0c         db  0x00 ; '.'
0000000000001f0d         db  0x00 ; '.'
0000000000001f0e         db  0x00 ; '.'
0000000000001f0f         db  0x00 ; '.'
0000000000001f10         db  0x08 ; '.'
0000000000001f11         db  0x00 ; '.'
0000000000001f12         db  0x00 ; '.'
0000000000001f13         db  0x00 ; '.'
0000000000001f14         db  0x00 ; '.'
0000000000001f15         db  0x00 ; '.'
0000000000001f16         db  0x00 ; '.'
0000000000001f17         db  0x00 ; '.'
0000000000001f18         db  0x38 ; '8'
0000000000001f19         db  0x7d ; '}'
0000000000001f1a         db  0x01 ; '.'
0000000000001f1b         db  0x00 ; '.'
0000000000001f1c         db  0x00 ; '.'
0000000000001f1d         db  0x00 ; '.'
0000000000001f1e         db  0x00 ; '.'
0000000000001f1f         db  0x00 ; '.'
0000000000001f20         db  0x40 ; '@'
0000000000001f21         db  0xf6 ; '.'
0000000000001f22         db  0x21 ; '!'
0000000000001f23         db  0x00 ; '.'
0000000000001f24         db  0x00 ; '.'
0000000000001f25         db  0x00 ; '.'
0000000000001f26         db  0x00 ; '.'
0000000000001f27         db  0x00 ; '.'
0000000000001f28         db  0x08 ; '.'
0000000000001f29         db  0x00 ; '.'
0000000000001f2a         db  0x00 ; '.'
0000000000001f2b         db  0x00 ; '.'
0000000000001f2c         db  0x00 ; '.'
0000000000001f2d         db  0x00 ; '.'
0000000000001f2e         db  0x00 ; '.'
0000000000001f2f         db  0x00 ; '.'
0000000000001f30         db  0xa1 ; '.'
0000000000001f31         db  0x7a ; 'z'
0000000000001f32         db  0x01 ; '.'
0000000000001f33         db  0x00 ; '.'
0000000000001f34         db  0x00 ; '.'
0000000000001f35         db  0x00 ; '.'
0000000000001f36         db  0x00 ; '.'
0000000000001f37         db  0x00 ; '.'
0000000000001f38         db  0x60 ; '`'
0000000000001f39         db  0xf6 ; '.'
0000000000001f3a         db  0x21 ; '!'
0000000000001f3b         db  0x00 ; '.'
0000000000001f3c         db  0x00 ; '.'
0000000000001f3d         db  0x00 ; '.'
0000000000001f3e         db  0x00 ; '.'
0000000000001f3f         db  0x00 ; '.'
0000000000001f40         db  0x08 ; '.'
0000000000001f41         db  0x00 ; '.'
0000000000001f42         db  0x00 ; '.'
0000000000001f43         db  0x00 ; '.'
0000000000001f44         db  0x00 ; '.'
0000000000001f45         db  0x00 ; '.'
0000000000001f46         db  0x00 ; '.'
0000000000001f47         db  0x00 ; '.'
0000000000001f48         db  0x3f ; '?'
0000000000001f49         db  0x7d ; '}'
0000000000001f4a         db  0x01 ; '.'
0000000000001f4b         db  0x00 ; '.'
0000000000001f4c         db  0x00 ; '.'
0000000000001f4d         db  0x00 ; '.'
0000000000001f4e         db  0x00 ; '.'
0000000000001f4f         db  0x00 ; '.'
0000000000001f50         db  0x80 ; '.'
0000000000001f51         db  0xf6 ; '.'
0000000000001f52         db  0x21 ; '!'
0000000000001f53         db  0x00 ; '.'
0000000000001f54         db  0x00 ; '.'
0000000000001f55         db  0x00 ; '.'
0000000000001f56         db  0x00 ; '.'
0000000000001f57         db  0x00 ; '.'
0000000000001f58         db  0x08 ; '.'
0000000000001f59         db  0x00 ; '.'
0000000000001f5a         db  0x00 ; '.'
0000000000001f5b         db  0x00 ; '.'
0000000000001f5c         db  0x00 ; '.'
0000000000001f5d         db  0x00 ; '.'
0000000000001f5e         db  0x00 ; '.'
0000000000001f5f         db  0x00 ; '.'
0000000000001f60         db  0x4b ; 'K'
0000000000001f61         db  0x7d ; '}'
0000000000001f62         db  0x01 ; '.'
0000000000001f63         db  0x00 ; '.'
0000000000001f64         db  0x00 ; '.'
0000000000001f65         db  0x00 ; '.'
0000000000001f66         db  0x00 ; '.'
0000000000001f67         db  0x00 ; '.'
0000000000001f68         db  0xa0 ; '.'
0000000000001f69         db  0xf6 ; '.'
0000000000001f6a         db  0x21 ; '!'
0000000000001f6b         db  0x00 ; '.'
0000000000001f6c         db  0x00 ; '.'
0000000000001f6d         db  0x00 ; '.'
0000000000001f6e         db  0x00 ; '.'
0000000000001f6f         db  0x00 ; '.'
0000000000001f70         db  0x08 ; '.'
0000000000001f71         db  0x00 ; '.'
0000000000001f72         db  0x00 ; '.'
0000000000001f73         db  0x00 ; '.'
0000000000001f74         db  0x00 ; '.'
0000000000001f75         db  0x00 ; '.'
0000000000001f76         db  0x00 ; '.'
0000000000001f77         db  0x00 ; '.'
0000000000001f78         db  0x53 ; 'S'
0000000000001f79         db  0x7d ; '}'
0000000000001f7a         db  0x01 ; '.'
0000000000001f7b         db  0x00 ; '.'
0000000000001f7c         db  0x00 ; '.'
0000000000001f7d         db  0x00 ; '.'
0000000000001f7e         db  0x00 ; '.'
0000000000001f7f         db  0x00 ; '.'
0000000000001f80         db  0xc0 ; '.'
0000000000001f81         db  0xf6 ; '.'
0000000000001f82         db  0x21 ; '!'
0000000000001f83         db  0x00 ; '.'
0000000000001f84         db  0x00 ; '.'
0000000000001f85         db  0x00 ; '.'
0000000000001f86         db  0x00 ; '.'
0000000000001f87         db  0x00 ; '.'
0000000000001f88         db  0x08 ; '.'
0000000000001f89         db  0x00 ; '.'
0000000000001f8a         db  0x00 ; '.'
0000000000001f8b         db  0x00 ; '.'
0000000000001f8c         db  0x00 ; '.'
0000000000001f8d         db  0x00 ; '.'
0000000000001f8e         db  0x00 ; '.'
0000000000001f8f         db  0x00 ; '.'
0000000000001f90         db  0xb3 ; '.'
0000000000001f91         db  0x7a ; 'z'
0000000000001f92         db  0x01 ; '.'
0000000000001f93         db  0x00 ; '.'
0000000000001f94         db  0x00 ; '.'
0000000000001f95         db  0x00 ; '.'
0000000000001f96         db  0x00 ; '.'
0000000000001f97         db  0x00 ; '.'
0000000000001f98         db  0xe0 ; '.'
0000000000001f99         db  0xf6 ; '.'
0000000000001f9a         db  0x21 ; '!'
0000000000001f9b         db  0x00 ; '.'
0000000000001f9c         db  0x00 ; '.'
0000000000001f9d         db  0x00 ; '.'
0000000000001f9e         db  0x00 ; '.'
0000000000001f9f         db  0x00 ; '.'
0000000000001fa0         db  0x08 ; '.'
0000000000001fa1         db  0x00 ; '.'
0000000000001fa2         db  0x00 ; '.'
0000000000001fa3         db  0x00 ; '.'
0000000000001fa4         db  0x00 ; '.'
0000000000001fa5         db  0x00 ; '.'
0000000000001fa6         db  0x00 ; '.'
0000000000001fa7         db  0x00 ; '.'
0000000000001fa8         db  0x5e ; '^'
0000000000001fa9         db  0x7d ; '}'
0000000000001faa         db  0x01 ; '.'
0000000000001fab         db  0x00 ; '.'
0000000000001fac         db  0x00 ; '.'
0000000000001fad         db  0x00 ; '.'
0000000000001fae         db  0x00 ; '.'
0000000000001faf         db  0x00 ; '.'
0000000000001fb0         db  0x00 ; '.'
0000000000001fb1         db  0xf7 ; '.'
0000000000001fb2         db  0x21 ; '!'
0000000000001fb3         db  0x00 ; '.'
0000000000001fb4         db  0x00 ; '.'
0000000000001fb5         db  0x00 ; '.'
0000000000001fb6         db  0x00 ; '.'
0000000000001fb7         db  0x00 ; '.'
0000000000001fb8         db  0x08 ; '.'
0000000000001fb9         db  0x00 ; '.'
0000000000001fba         db  0x00 ; '.'
0000000000001fbb         db  0x00 ; '.'
0000000000001fbc         db  0x00 ; '.'
0000000000001fbd         db  0x00 ; '.'
0000000000001fbe         db  0x00 ; '.'
0000000000001fbf         db  0x00 ; '.'
0000000000001fc0         db  0x84 ; '.'
0000000000001fc1         db  0x7a ; 'z'
0000000000001fc2         db  0x01 ; '.'
0000000000001fc3         db  0x00 ; '.'
0000000000001fc4         db  0x00 ; '.'
0000000000001fc5         db  0x00 ; '.'
0000000000001fc6         db  0x00 ; '.'
0000000000001fc7         db  0x00 ; '.'
0000000000001fc8         db  0x20 ; ' '
0000000000001fc9         db  0xf7 ; '.'
0000000000001fca         db  0x21 ; '!'
0000000000001fcb         db  0x00 ; '.'
0000000000001fcc         db  0x00 ; '.'
0000000000001fcd         db  0x00 ; '.'
0000000000001fce         db  0x00 ; '.'
0000000000001fcf         db  0x00 ; '.'
0000000000001fd0         db  0x08 ; '.'
0000000000001fd1         db  0x00 ; '.'
0000000000001fd2         db  0x00 ; '.'
0000000000001fd3         db  0x00 ; '.'
0000000000001fd4         db  0x00 ; '.'
0000000000001fd5         db  0x00 ; '.'
0000000000001fd6         db  0x00 ; '.'
0000000000001fd7         db  0x00 ; '.'
0000000000001fd8         db  0x68 ; 'h'
0000000000001fd9         db  0x7d ; '}'
0000000000001fda         db  0x01 ; '.'
0000000000001fdb         db  0x00 ; '.'
0000000000001fdc         db  0x00 ; '.'
0000000000001fdd         db  0x00 ; '.'
0000000000001fde         db  0x00 ; '.'
0000000000001fdf         db  0x00 ; '.'
0000000000001fe0         db  0x40 ; '@'
0000000000001fe1         db  0xf7 ; '.'
0000000000001fe2         db  0x21 ; '!'
0000000000001fe3         db  0x00 ; '.'
0000000000001fe4         db  0x00 ; '.'
0000000000001fe5         db  0x00 ; '.'
0000000000001fe6         db  0x00 ; '.'
0000000000001fe7         db  0x00 ; '.'
0000000000001fe8         db  0x08 ; '.'
0000000000001fe9         db  0x00 ; '.'
0000000000001fea         db  0x00 ; '.'
0000000000001feb         db  0x00 ; '.'
0000000000001fec         db  0x00 ; '.'
0000000000001fed         db  0x00 ; '.'
0000000000001fee         db  0x00 ; '.'
0000000000001fef         db  0x00 ; '.'
0000000000001ff0         db  0x76 ; 'v'
0000000000001ff1         db  0x7a ; 'z'
0000000000001ff2         db  0x01 ; '.'
0000000000001ff3         db  0x00 ; '.'
0000000000001ff4         db  0x00 ; '.'
0000000000001ff5         db  0x00 ; '.'
0000000000001ff6         db  0x00 ; '.'
0000000000001ff7         db  0x00 ; '.'
0000000000001ff8         db  0x60 ; '`'
0000000000001ff9         db  0xf7 ; '.'
0000000000001ffa         db  0x21 ; '!'
0000000000001ffb         db  0x00 ; '.'
0000000000001ffc         db  0x00 ; '.'
0000000000001ffd         db  0x00 ; '.'
0000000000001ffe         db  0x00 ; '.'
0000000000001fff         db  0x00 ; '.'                                         ; DATA XREF=quote_name_buf.constprop.54+124, quote_name_buf.constprop.54+448
0000000000002000         db  0x08 ; '.'                                         ; DATA XREF=quote_name_buf.constprop.54+106, print_name_with_quoting+587, print_long_format+645, gobble_file.constprop.52+1646, strmode+47
0000000000002001         db  0x00 ; '.'
0000000000002002         db  0x00 ; '.'
0000000000002003         db  0x00 ; '.'
0000000000002004         db  0x00 ; '.'
0000000000002005         db  0x00 ; '.'
0000000000002006         db  0x00 ; '.'
0000000000002007         db  0x00 ; '.'
0000000000002008         db  0x7b ; '{'
0000000000002009         db  0x7d ; '}'
000000000000200a         db  0x01 ; '.'
000000000000200b         db  0x00 ; '.'
000000000000200c         db  0x00 ; '.'
000000000000200d         db  0x00 ; '.'
000000000000200e         db  0x00 ; '.'
000000000000200f         db  0x00 ; '.'
0000000000002010         db  0x80 ; '.'
0000000000002011         db  0xf7 ; '.'
0000000000002012         db  0x21 ; '!'
0000000000002013         db  0x00 ; '.'
0000000000002014         db  0x00 ; '.'
0000000000002015         db  0x00 ; '.'
0000000000002016         db  0x00 ; '.'
0000000000002017         db  0x00 ; '.'
0000000000002018         db  0x08 ; '.'
0000000000002019         db  0x00 ; '.'
000000000000201a         db  0x00 ; '.'
000000000000201b         db  0x00 ; '.'
000000000000201c         db  0x00 ; '.'
000000000000201d         db  0x00 ; '.'
000000000000201e         db  0x00 ; '.'
000000000000201f         db  0x00 ; '.'
0000000000002020         db  0x7d ; '}'
0000000000002021         db  0x7a ; 'z'
0000000000002022         db  0x01 ; '.'
0000000000002023         db  0x00 ; '.'
0000000000002024         db  0x00 ; '.'
0000000000002025         db  0x00 ; '.'
0000000000002026         db  0x00 ; '.'
0000000000002027         db  0x00 ; '.'
0000000000002028         db  0xa0 ; '.'
0000000000002029         db  0xf7 ; '.'
000000000000202a         db  0x21 ; '!'
000000000000202b         db  0x00 ; '.'
000000000000202c         db  0x00 ; '.'
000000000000202d         db  0x00 ; '.'
000000000000202e         db  0x00 ; '.'
000000000000202f         db  0x00 ; '.'
0000000000002030         db  0x08 ; '.'
0000000000002031         db  0x00 ; '.'
0000000000002032         db  0x00 ; '.'
0000000000002033         db  0x00 ; '.'
0000000000002034         db  0x00 ; '.'
0000000000002035         db  0x00 ; '.'
0000000000002036         db  0x00 ; '.'
0000000000002037         db  0x00 ; '.'
0000000000002038         db  0x83 ; '.'                                         ; DATA XREF=quote_name_width+13, quote_name_width+118
0000000000002039         db  0x7d ; '}'
000000000000203a         db  0x01 ; '.'
000000000000203b         db  0x00 ; '.'
000000000000203c         db  0x00 ; '.'
000000000000203d         db  0x00 ; '.'
000000000000203e         db  0x00 ; '.'
000000000000203f         db  0x00 ; '.'
0000000000002040         db  0xc0 ; '.'
0000000000002041         db  0xf7 ; '.'
0000000000002042         db  0x21 ; '!'
0000000000002043         db  0x00 ; '.'
0000000000002044         db  0x00 ; '.'
0000000000002045         db  0x00 ; '.'
0000000000002046         db  0x00 ; '.'
0000000000002047         db  0x00 ; '.'
0000000000002048         db  0x08 ; '.'                                         ; DATA XREF=quote_name+25, quote_name+596
0000000000002049         db  0x00 ; '.'
000000000000204a         db  0x00 ; '.'
000000000000204b         db  0x00 ; '.'
000000000000204c         db  0x00 ; '.'
000000000000204d         db  0x00 ; '.'
000000000000204e         db  0x00 ; '.'
000000000000204f         db  0x00 ; '.'
0000000000002050         db  0x8d ; '.'
0000000000002051         db  0x7a ; 'z'
0000000000002052         db  0x01 ; '.'
0000000000002053         db  0x00 ; '.'
0000000000002054         db  0x00 ; '.'
0000000000002055         db  0x00 ; '.'
0000000000002056         db  0x00 ; '.'
0000000000002057         db  0x00 ; '.'
0000000000002058         db  0xe0 ; '.'
0000000000002059         db  0xf7 ; '.'
000000000000205a         db  0x21 ; '!'
000000000000205b         db  0x00 ; '.'
000000000000205c         db  0x00 ; '.'
000000000000205d         db  0x00 ; '.'
000000000000205e         db  0x00 ; '.'
000000000000205f         db  0x00 ; '.'
0000000000002060         db  0x08 ; '.'
0000000000002061         db  0x00 ; '.'
0000000000002062         db  0x00 ; '.'
0000000000002063         db  0x00 ; '.'
0000000000002064         db  0x00 ; '.'
0000000000002065         db  0x00 ; '.'
0000000000002066         db  0x00 ; '.'
0000000000002067         db  0x00 ; '.'
0000000000002068         db  0x95 ; '.'
0000000000002069         db  0x7a ; 'z'
000000000000206a         db  0x01 ; '.'
000000000000206b         db  0x00 ; '.'
000000000000206c         db  0x00 ; '.'
000000000000206d         db  0x00 ; '.'
000000000000206e         db  0x00 ; '.'
000000000000206f         db  0x00 ; '.'
0000000000002070         db  0x00 ; '.'
0000000000002071         db  0xf8 ; '.'
0000000000002072         db  0x21 ; '!'
0000000000002073         db  0x00 ; '.'
0000000000002074         db  0x00 ; '.'
0000000000002075         db  0x00 ; '.'
0000000000002076         db  0x00 ; '.'
0000000000002077         db  0x00 ; '.'
0000000000002078         db  0x08 ; '.'
0000000000002079         db  0x00 ; '.'
000000000000207a         db  0x00 ; '.'
000000000000207b         db  0x00 ; '.'
000000000000207c         db  0x00 ; '.'
000000000000207d         db  0x00 ; '.'
000000000000207e         db  0x00 ; '.'
000000000000207f         db  0x00 ; '.'
0000000000002080         db  0x8e ; '.'
0000000000002081         db  0x7d ; '}'
0000000000002082         db  0x01 ; '.'
0000000000002083         db  0x00 ; '.'
0000000000002084         db  0x00 ; '.'
0000000000002085         db  0x00 ; '.'
0000000000002086         db  0x00 ; '.'
0000000000002087         db  0x00 ; '.'
0000000000002088         db  0x20 ; ' '
0000000000002089         db  0xf8 ; '.'
000000000000208a         db  0x21 ; '!'
000000000000208b         db  0x00 ; '.'
000000000000208c         db  0x00 ; '.'
000000000000208d         db  0x00 ; '.'
000000000000208e         db  0x00 ; '.'
000000000000208f         db  0x00 ; '.'
0000000000002090         db  0x08 ; '.'
0000000000002091         db  0x00 ; '.'
0000000000002092         db  0x00 ; '.'
0000000000002093         db  0x00 ; '.'
0000000000002094         db  0x00 ; '.'
0000000000002095         db  0x00 ; '.'
0000000000002096         db  0x00 ; '.'
0000000000002097         db  0x00 ; '.'
0000000000002098         db  0x99 ; '.'
0000000000002099         db  0x7d ; '}'
000000000000209a         db  0x01 ; '.'
000000000000209b         db  0x00 ; '.'
000000000000209c         db  0x00 ; '.'
000000000000209d         db  0x00 ; '.'
000000000000209e         db  0x00 ; '.'
000000000000209f         db  0x00 ; '.'
00000000000020a0         db  0x40 ; '@'
00000000000020a1         db  0xf8 ; '.'
00000000000020a2         db  0x21 ; '!'
00000000000020a3         db  0x00 ; '.'
00000000000020a4         db  0x00 ; '.'
00000000000020a5         db  0x00 ; '.'
00000000000020a6         db  0x00 ; '.'
00000000000020a7         db  0x00 ; '.'
00000000000020a8         db  0x08 ; '.'
00000000000020a9         db  0x00 ; '.'
00000000000020aa         db  0x00 ; '.'
00000000000020ab         db  0x00 ; '.'
00000000000020ac         db  0x00 ; '.'
00000000000020ad         db  0x00 ; '.'
00000000000020ae         db  0x00 ; '.'
00000000000020af         db  0x00 ; '.'
00000000000020b0         db  0xa1 ; '.'
00000000000020b1         db  0x7d ; '}'
00000000000020b2         db  0x01 ; '.'
00000000000020b3         db  0x00 ; '.'
00000000000020b4         db  0x00 ; '.'
00000000000020b5         db  0x00 ; '.'
00000000000020b6         db  0x00 ; '.'
00000000000020b7         db  0x00 ; '.'
00000000000020b8         db  0x60 ; '`'
00000000000020b9         db  0xf8 ; '.'
00000000000020ba         db  0x21 ; '!'
00000000000020bb         db  0x00 ; '.'
00000000000020bc         db  0x00 ; '.'
00000000000020bd         db  0x00 ; '.'
00000000000020be         db  0x00 ; '.'
00000000000020bf         db  0x00 ; '.'
00000000000020c0         db  0x08 ; '.'
00000000000020c1         db  0x00 ; '.'
00000000000020c2         db  0x00 ; '.'
00000000000020c3         db  0x00 ; '.'
00000000000020c4         db  0x00 ; '.'
00000000000020c5         db  0x00 ; '.'
00000000000020c6         db  0x00 ; '.'
00000000000020c7         db  0x00 ; '.'
00000000000020c8         db  0xa8 ; '.'
00000000000020c9         db  0x7d ; '}'
00000000000020ca         db  0x01 ; '.'
00000000000020cb         db  0x00 ; '.'
00000000000020cc         db  0x00 ; '.'
00000000000020cd         db  0x00 ; '.'
00000000000020ce         db  0x00 ; '.'
00000000000020cf         db  0x00 ; '.'
00000000000020d0         db  0x80 ; '.'
00000000000020d1         db  0xf8 ; '.'
00000000000020d2         db  0x21 ; '!'
00000000000020d3         db  0x00 ; '.'
00000000000020d4         db  0x00 ; '.'
00000000000020d5         db  0x00 ; '.'
00000000000020d6         db  0x00 ; '.'
00000000000020d7         db  0x00 ; '.'
00000000000020d8         db  0x08 ; '.'
00000000000020d9         db  0x00 ; '.'
00000000000020da         db  0x00 ; '.'
00000000000020db         db  0x00 ; '.'
00000000000020dc         db  0x00 ; '.'
00000000000020dd         db  0x00 ; '.'
00000000000020de         db  0x00 ; '.'
00000000000020df         db  0x00 ; '.'
00000000000020e0         db  0x84 ; '.'
00000000000020e1         db  0x78 ; 'x'
00000000000020e2         db  0x01 ; '.'
00000000000020e3         db  0x00 ; '.'
00000000000020e4         db  0x00 ; '.'
00000000000020e5         db  0x00 ; '.'
00000000000020e6         db  0x00 ; '.'
00000000000020e7         db  0x00 ; '.'
00000000000020e8         db  0xc0 ; '.'
00000000000020e9         db  0xf8 ; '.'
00000000000020ea         db  0x21 ; '!'
00000000000020eb         db  0x00 ; '.'
00000000000020ec         db  0x00 ; '.'
00000000000020ed         db  0x00 ; '.'
00000000000020ee         db  0x00 ; '.'
00000000000020ef         db  0x00 ; '.'
00000000000020f0         db  0x08 ; '.'
00000000000020f1         db  0x00 ; '.'
00000000000020f2         db  0x00 ; '.'
00000000000020f3         db  0x00 ; '.'
00000000000020f4         db  0x00 ; '.'
00000000000020f5         db  0x00 ; '.'
00000000000020f6         db  0x00 ; '.'
00000000000020f7         db  0x00 ; '.'
00000000000020f8         db  0x0c ; '.'
00000000000020f9         db  0x7a ; 'z'
00000000000020fa         db  0x01 ; '.'
00000000000020fb         db  0x00 ; '.'
00000000000020fc         db  0x00 ; '.'
00000000000020fd         db  0x00 ; '.'
00000000000020fe         db  0x00 ; '.'
00000000000020ff         db  0x00 ; '.'
0000000000002100         db  0xc8 ; '.'
0000000000002101         db  0xf8 ; '.'
0000000000002102         db  0x21 ; '!'
0000000000002103         db  0x00 ; '.'
0000000000002104         db  0x00 ; '.'
0000000000002105         db  0x00 ; '.'
0000000000002106         db  0x00 ; '.'
0000000000002107         db  0x00 ; '.'
0000000000002108         db  0x08 ; '.'
0000000000002109         db  0x00 ; '.'
000000000000210a         db  0x00 ; '.'
000000000000210b         db  0x00 ; '.'
000000000000210c         db  0x00 ; '.'
000000000000210d         db  0x00 ; '.'
000000000000210e         db  0x00 ; '.'
000000000000210f         db  0x00 ; '.'
0000000000002110         db  0x0c ; '.'
0000000000002111         db  0x7e ; '~'
0000000000002112         db  0x01 ; '.'
0000000000002113         db  0x00 ; '.'
0000000000002114         db  0x00 ; '.'
0000000000002115         db  0x00 ; '.'
0000000000002116         db  0x00 ; '.'
0000000000002117         db  0x00 ; '.'
0000000000002118         db  0xd0 ; '.'
0000000000002119         db  0xf8 ; '.'
000000000000211a         db  0x21 ; '!'
000000000000211b         db  0x00 ; '.'
000000000000211c         db  0x00 ; '.'
000000000000211d         db  0x00 ; '.'
000000000000211e         db  0x00 ; '.'
000000000000211f         db  0x00 ; '.'
0000000000002120         db  0x08 ; '.'
0000000000002121         db  0x00 ; '.'
0000000000002122         db  0x00 ; '.'
0000000000002123         db  0x00 ; '.'
0000000000002124         db  0x00 ; '.'
0000000000002125         db  0x00 ; '.'
0000000000002126         db  0x00 ; '.'
0000000000002127         db  0x00 ; '.'
0000000000002128         db  0x0f ; '.'
0000000000002129         db  0x7e ; '~'
000000000000212a         db  0x01 ; '.'
000000000000212b         db  0x00 ; '.'
000000000000212c         db  0x00 ; '.'
000000000000212d         db  0x00 ; '.'
000000000000212e         db  0x00 ; '.'
000000000000212f         db  0x00 ; '.'
0000000000002130         db  0xd8 ; '.'
0000000000002131         db  0xf8 ; '.'
0000000000002132         db  0x21 ; '!'
0000000000002133         db  0x00 ; '.'
0000000000002134         db  0x00 ; '.'
0000000000002135         db  0x00 ; '.'
0000000000002136         db  0x00 ; '.'
0000000000002137         db  0x00 ; '.'
0000000000002138         db  0x08 ; '.'
0000000000002139         db  0x00 ; '.'
000000000000213a         db  0x00 ; '.'
000000000000213b         db  0x00 ; '.'
000000000000213c         db  0x00 ; '.'
000000000000213d         db  0x00 ; '.'
000000000000213e         db  0x00 ; '.'
000000000000213f         db  0x00 ; '.'
0000000000002140         db  0xdf ; '.'
0000000000002141         db  0x7c ; '|'
0000000000002142         db  0x01 ; '.'
0000000000002143         db  0x00 ; '.'
0000000000002144         db  0x00 ; '.'
0000000000002145         db  0x00 ; '.'
0000000000002146         db  0x00 ; '.'
0000000000002147         db  0x00 ; '.'
0000000000002148         db  0xe0 ; '.'
0000000000002149         db  0xf8 ; '.'
000000000000214a         db  0x21 ; '!'
000000000000214b         db  0x00 ; '.'
000000000000214c         db  0x00 ; '.'
000000000000214d         db  0x00 ; '.'
000000000000214e         db  0x00 ; '.'
000000000000214f         db  0x00 ; '.'
0000000000002150         db  0x08 ; '.'
0000000000002151         db  0x00 ; '.'
0000000000002152         db  0x00 ; '.'
0000000000002153         db  0x00 ; '.'
0000000000002154         db  0x00 ; '.'
0000000000002155         db  0x00 ; '.'
0000000000002156         db  0x00 ; '.'
0000000000002157         db  0x00 ; '.'
0000000000002158         db  0xec ; '.'
0000000000002159         db  0x7b ; '{'
000000000000215a         db  0x01 ; '.'
000000000000215b         db  0x00 ; '.'
000000000000215c         db  0x00 ; '.'
000000000000215d         db  0x00 ; '.'
000000000000215e         db  0x00 ; '.'
000000000000215f         db  0x00 ; '.'
0000000000002160         db  0xe8 ; '.'
0000000000002161         db  0xf8 ; '.'
0000000000002162         db  0x21 ; '!'
0000000000002163         db  0x00 ; '.'
0000000000002164         db  0x00 ; '.'
0000000000002165         db  0x00 ; '.'
0000000000002166         db  0x00 ; '.'
0000000000002167         db  0x00 ; '.'
0000000000002168         db  0x08 ; '.'
0000000000002169         db  0x00 ; '.'
000000000000216a         db  0x00 ; '.'
000000000000216b         db  0x00 ; '.'
000000000000216c         db  0x00 ; '.'
000000000000216d         db  0x00 ; '.'
000000000000216e         db  0x00 ; '.'
000000000000216f         db  0x00 ; '.'
0000000000002170         db  0x12 ; '.'
0000000000002171         db  0x7e ; '~'
0000000000002172         db  0x01 ; '.'
0000000000002173         db  0x00 ; '.'
0000000000002174         db  0x00 ; '.'
0000000000002175         db  0x00 ; '.'
0000000000002176         db  0x00 ; '.'
0000000000002177         db  0x00 ; '.'
0000000000002178         db  0xf0 ; '.'
0000000000002179         db  0xf8 ; '.'
000000000000217a         db  0x21 ; '!'
000000000000217b         db  0x00 ; '.'
000000000000217c         db  0x00 ; '.'
000000000000217d         db  0x00 ; '.'
000000000000217e         db  0x00 ; '.'
000000000000217f         db  0x00 ; '.'
0000000000002180         db  0x08 ; '.'
0000000000002181         db  0x00 ; '.'
0000000000002182         db  0x00 ; '.'
0000000000002183         db  0x00 ; '.'
0000000000002184         db  0x00 ; '.'
0000000000002185         db  0x00 ; '.'
0000000000002186         db  0x00 ; '.'
0000000000002187         db  0x00 ; '.'
0000000000002188         db  0x15 ; '.'
0000000000002189         db  0x7e ; '~'
000000000000218a         db  0x01 ; '.'
000000000000218b         db  0x00 ; '.'
000000000000218c         db  0x00 ; '.'
000000000000218d         db  0x00 ; '.'
000000000000218e         db  0x00 ; '.'
000000000000218f         db  0x00 ; '.'
0000000000002190         db  0xf8 ; '.'
0000000000002191         db  0xf8 ; '.'
0000000000002192         db  0x21 ; '!'
0000000000002193         db  0x00 ; '.'
0000000000002194         db  0x00 ; '.'
0000000000002195         db  0x00 ; '.'
0000000000002196         db  0x00 ; '.'
0000000000002197         db  0x00 ; '.'
0000000000002198         db  0x08 ; '.'
0000000000002199         db  0x00 ; '.'
000000000000219a         db  0x00 ; '.'
000000000000219b         db  0x00 ; '.'
000000000000219c         db  0x00 ; '.'
000000000000219d         db  0x00 ; '.'
000000000000219e         db  0x00 ; '.'
000000000000219f         db  0x00 ; '.'
00000000000021a0         db  0x18 ; '.'
00000000000021a1         db  0x7e ; '~'
00000000000021a2         db  0x01 ; '.'
00000000000021a3         db  0x00 ; '.'
00000000000021a4         db  0x00 ; '.'
00000000000021a5         db  0x00 ; '.'
00000000000021a6         db  0x00 ; '.'
00000000000021a7         db  0x00 ; '.'
00000000000021a8         db  0x00 ; '.'
00000000000021a9         db  0xf9 ; '.'
00000000000021aa         db  0x21 ; '!'
00000000000021ab         db  0x00 ; '.'
00000000000021ac         db  0x00 ; '.'
00000000000021ad         db  0x00 ; '.'
00000000000021ae         db  0x00 ; '.'
00000000000021af         db  0x00 ; '.'
00000000000021b0         db  0x08 ; '.'
00000000000021b1         db  0x00 ; '.'
00000000000021b2         db  0x00 ; '.'
00000000000021b3         db  0x00 ; '.'
00000000000021b4         db  0x00 ; '.'
00000000000021b5         db  0x00 ; '.'
00000000000021b6         db  0x00 ; '.'
00000000000021b7         db  0x00 ; '.'
00000000000021b8         db  0x1b ; '.'
00000000000021b9         db  0x7e ; '~'
00000000000021ba         db  0x01 ; '.'
00000000000021bb         db  0x00 ; '.'
00000000000021bc         db  0x00 ; '.'
00000000000021bd         db  0x00 ; '.'
00000000000021be         db  0x00 ; '.'
00000000000021bf         db  0x00 ; '.'
00000000000021c0         db  0x08 ; '.'
00000000000021c1         db  0xf9 ; '.'
00000000000021c2         db  0x21 ; '!'
00000000000021c3         db  0x00 ; '.'
00000000000021c4         db  0x00 ; '.'
00000000000021c5         db  0x00 ; '.'
00000000000021c6         db  0x00 ; '.'
00000000000021c7         db  0x00 ; '.'
00000000000021c8         db  0x08 ; '.'
00000000000021c9         db  0x00 ; '.'
00000000000021ca         db  0x00 ; '.'
00000000000021cb         db  0x00 ; '.'
00000000000021cc         db  0x00 ; '.'
00000000000021cd         db  0x00 ; '.'
00000000000021ce         db  0x00 ; '.'
00000000000021cf         db  0x00 ; '.'
00000000000021d0         db  0x4e ; 'N'
00000000000021d1         db  0x7e ; '~'
00000000000021d2         db  0x01 ; '.'
00000000000021d3         db  0x00 ; '.'
00000000000021d4         db  0x00 ; '.'
00000000000021d5         db  0x00 ; '.'
00000000000021d6         db  0x00 ; '.'
00000000000021d7         db  0x00 ; '.'
00000000000021d8         db  0x10 ; '.'
00000000000021d9         db  0xf9 ; '.'
00000000000021da         db  0x21 ; '!'
00000000000021db         db  0x00 ; '.'
00000000000021dc         db  0x00 ; '.'
00000000000021dd         db  0x00 ; '.'
00000000000021de         db  0x00 ; '.'
00000000000021df         db  0x00 ; '.'
00000000000021e0         db  0x08 ; '.'
00000000000021e1         db  0x00 ; '.'
00000000000021e2         db  0x00 ; '.'
00000000000021e3         db  0x00 ; '.'
00000000000021e4         db  0x00 ; '.'
00000000000021e5         db  0x00 ; '.'
00000000000021e6         db  0x00 ; '.'
00000000000021e7         db  0x00 ; '.'
00000000000021e8         db  0x1e ; '.'
00000000000021e9         db  0x7e ; '~'
00000000000021ea         db  0x01 ; '.'
00000000000021eb         db  0x00 ; '.'
00000000000021ec         db  0x00 ; '.'
00000000000021ed         db  0x00 ; '.'
00000000000021ee         db  0x00 ; '.'
00000000000021ef         db  0x00 ; '.'
00000000000021f0         db  0x18 ; '.'
00000000000021f1         db  0xf9 ; '.'
00000000000021f2         db  0x21 ; '!'
00000000000021f3         db  0x00 ; '.'
00000000000021f4         db  0x00 ; '.'
00000000000021f5         db  0x00 ; '.'
00000000000021f6         db  0x00 ; '.'
00000000000021f7         db  0x00 ; '.'
00000000000021f8         db  0x08 ; '.'
00000000000021f9         db  0x00 ; '.'
00000000000021fa         db  0x00 ; '.'
00000000000021fb         db  0x00 ; '.'
00000000000021fc         db  0x00 ; '.'
00000000000021fd         db  0x00 ; '.'
00000000000021fe         db  0x00 ; '.'
00000000000021ff         db  0x00 ; '.'
0000000000002200         db  0x21 ; '!'
0000000000002201         db  0x7e ; '~'
0000000000002202         db  0x01 ; '.'
0000000000002203         db  0x00 ; '.'
0000000000002204         db  0x00 ; '.'
0000000000002205         db  0x00 ; '.'
0000000000002206         db  0x00 ; '.'
0000000000002207         db  0x00 ; '.'
0000000000002208         db  0x20 ; ' '
0000000000002209         db  0xf9 ; '.'
000000000000220a         db  0x21 ; '!'
000000000000220b         db  0x00 ; '.'
000000000000220c         db  0x00 ; '.'
000000000000220d         db  0x00 ; '.'
000000000000220e         db  0x00 ; '.'
000000000000220f         db  0x00 ; '.'
0000000000002210         db  0x08 ; '.'
0000000000002211         db  0x00 ; '.'
0000000000002212         db  0x00 ; '.'
0000000000002213         db  0x00 ; '.'
0000000000002214         db  0x00 ; '.'
0000000000002215         db  0x00 ; '.'
0000000000002216         db  0x00 ; '.'
0000000000002217         db  0x00 ; '.'
0000000000002218         db  0x24 ; '$'
0000000000002219         db  0x7e ; '~'
000000000000221a         db  0x01 ; '.'
000000000000221b         db  0x00 ; '.'
000000000000221c         db  0x00 ; '.'
000000000000221d         db  0x00 ; '.'
000000000000221e         db  0x00 ; '.'
000000000000221f         db  0x00 ; '.'
0000000000002220         db  0x28 ; '('
0000000000002221         db  0xf9 ; '.'
0000000000002222         db  0x21 ; '!'
0000000000002223         db  0x00 ; '.'
0000000000002224         db  0x00 ; '.'
0000000000002225         db  0x00 ; '.'
0000000000002226         db  0x00 ; '.'
0000000000002227         db  0x00 ; '.'
0000000000002228         db  0x08 ; '.'
0000000000002229         db  0x00 ; '.'
000000000000222a         db  0x00 ; '.'
000000000000222b         db  0x00 ; '.'
000000000000222c         db  0x00 ; '.'
000000000000222d         db  0x00 ; '.'
000000000000222e         db  0x00 ; '.'
000000000000222f         db  0x00 ; '.'
0000000000002230         db  0xa5 ; '.'
0000000000002231         db  0x7d ; '}'
0000000000002232         db  0x01 ; '.'
0000000000002233         db  0x00 ; '.'
0000000000002234         db  0x00 ; '.'
0000000000002235         db  0x00 ; '.'
0000000000002236         db  0x00 ; '.'
0000000000002237         db  0x00 ; '.'
0000000000002238         db  0x30 ; '0'
0000000000002239         db  0xf9 ; '.'
000000000000223a         db  0x21 ; '!'
000000000000223b         db  0x00 ; '.'
000000000000223c         db  0x00 ; '.'
000000000000223d         db  0x00 ; '.'
000000000000223e         db  0x00 ; '.'
000000000000223f         db  0x00 ; '.'
0000000000002240         db  0x08 ; '.'
0000000000002241         db  0x00 ; '.'
0000000000002242         db  0x00 ; '.'
0000000000002243         db  0x00 ; '.'
0000000000002244         db  0x00 ; '.'
0000000000002245         db  0x00 ; '.'
0000000000002246         db  0x00 ; '.'
0000000000002247         db  0x00 ; '.'
0000000000002248         db  0x27 ; '''
0000000000002249         db  0x7e ; '~'
000000000000224a         db  0x01 ; '.'
000000000000224b         db  0x00 ; '.'
000000000000224c         db  0x00 ; '.'
000000000000224d         db  0x00 ; '.'
000000000000224e         db  0x00 ; '.'
000000000000224f         db  0x00 ; '.'
0000000000002250         db  0x38 ; '8'
0000000000002251         db  0xf9 ; '.'
0000000000002252         db  0x21 ; '!'
0000000000002253         db  0x00 ; '.'
0000000000002254         db  0x00 ; '.'
0000000000002255         db  0x00 ; '.'
0000000000002256         db  0x00 ; '.'
0000000000002257         db  0x00 ; '.'
0000000000002258         db  0x08 ; '.'
0000000000002259         db  0x00 ; '.'
000000000000225a         db  0x00 ; '.'
000000000000225b         db  0x00 ; '.'
000000000000225c         db  0x00 ; '.'
000000000000225d         db  0x00 ; '.'
000000000000225e         db  0x00 ; '.'
000000000000225f         db  0x00 ; '.'
0000000000002260         db  0x2a ; '*'
0000000000002261         db  0x7e ; '~'
0000000000002262         db  0x01 ; '.'
0000000000002263         db  0x00 ; '.'
0000000000002264         db  0x00 ; '.'
0000000000002265         db  0x00 ; '.'
0000000000002266         db  0x00 ; '.'
0000000000002267         db  0x00 ; '.'
0000000000002268         db  0x40 ; '@'
0000000000002269         db  0xf9 ; '.'
000000000000226a         db  0x21 ; '!'
000000000000226b         db  0x00 ; '.'
000000000000226c         db  0x00 ; '.'
000000000000226d         db  0x00 ; '.'
000000000000226e         db  0x00 ; '.'
000000000000226f         db  0x00 ; '.'
0000000000002270         db  0x08 ; '.'
0000000000002271         db  0x00 ; '.'
0000000000002272         db  0x00 ; '.'
0000000000002273         db  0x00 ; '.'
0000000000002274         db  0x00 ; '.'
0000000000002275         db  0x00 ; '.'
0000000000002276         db  0x00 ; '.'
0000000000002277         db  0x00 ; '.'
0000000000002278         db  0x2d ; '-'
0000000000002279         db  0x7e ; '~'
000000000000227a         db  0x01 ; '.'
000000000000227b         db  0x00 ; '.'
000000000000227c         db  0x00 ; '.'
000000000000227d         db  0x00 ; '.'
000000000000227e         db  0x00 ; '.'
000000000000227f         db  0x00 ; '.'
0000000000002280         db  0x48 ; 'H'
0000000000002281         db  0xf9 ; '.'
0000000000002282         db  0x21 ; '!'
0000000000002283         db  0x00 ; '.'
0000000000002284         db  0x00 ; '.'
0000000000002285         db  0x00 ; '.'
0000000000002286         db  0x00 ; '.'
0000000000002287         db  0x00 ; '.'
0000000000002288         db  0x08 ; '.'
0000000000002289         db  0x00 ; '.'
000000000000228a         db  0x00 ; '.'
000000000000228b         db  0x00 ; '.'
000000000000228c         db  0x00 ; '.'
000000000000228d         db  0x00 ; '.'
000000000000228e         db  0x00 ; '.'
000000000000228f         db  0x00 ; '.'
0000000000002290         db  0x30 ; '0'
0000000000002291         db  0x7e ; '~'
0000000000002292         db  0x01 ; '.'
0000000000002293         db  0x00 ; '.'
0000000000002294         db  0x00 ; '.'
0000000000002295         db  0x00 ; '.'
0000000000002296         db  0x00 ; '.'
0000000000002297         db  0x00 ; '.'
0000000000002298         db  0x50 ; 'P'
0000000000002299         db  0xf9 ; '.'
000000000000229a         db  0x21 ; '!'
000000000000229b         db  0x00 ; '.'
000000000000229c         db  0x00 ; '.'
000000000000229d         db  0x00 ; '.'
000000000000229e         db  0x00 ; '.'
000000000000229f         db  0x00 ; '.'
00000000000022a0         db  0x08 ; '.'
00000000000022a1         db  0x00 ; '.'
00000000000022a2         db  0x00 ; '.'
00000000000022a3         db  0x00 ; '.'
00000000000022a4         db  0x00 ; '.'
00000000000022a5         db  0x00 ; '.'
00000000000022a6         db  0x00 ; '.'
00000000000022a7         db  0x00 ; '.'
00000000000022a8         db  0x94 ; '.'
00000000000022a9         db  0x7c ; '|'
00000000000022aa         db  0x01 ; '.'
00000000000022ab         db  0x00 ; '.'
00000000000022ac         db  0x00 ; '.'
00000000000022ad         db  0x00 ; '.'
00000000000022ae         db  0x00 ; '.'
00000000000022af         db  0x00 ; '.'
00000000000022b0         db  0x58 ; 'X'
00000000000022b1         db  0xf9 ; '.'
00000000000022b2         db  0x21 ; '!'
00000000000022b3         db  0x00 ; '.'
00000000000022b4         db  0x00 ; '.'
00000000000022b5         db  0x00 ; '.'
00000000000022b6         db  0x00 ; '.'
00000000000022b7         db  0x00 ; '.'
00000000000022b8         db  0x08 ; '.'
00000000000022b9         db  0x00 ; '.'
00000000000022ba         db  0x00 ; '.'
00000000000022bb         db  0x00 ; '.'
00000000000022bc         db  0x00 ; '.'
00000000000022bd         db  0x00 ; '.'
00000000000022be         db  0x00 ; '.'
00000000000022bf         db  0x00 ; '.'
00000000000022c0         db  0x33 ; '3'
00000000000022c1         db  0x7e ; '~'
00000000000022c2         db  0x01 ; '.'
00000000000022c3         db  0x00 ; '.'
00000000000022c4         db  0x00 ; '.'
00000000000022c5         db  0x00 ; '.'
00000000000022c6         db  0x00 ; '.'
00000000000022c7         db  0x00 ; '.'
00000000000022c8         db  0x60 ; '`'
00000000000022c9         db  0xf9 ; '.'
00000000000022ca         db  0x21 ; '!'
00000000000022cb         db  0x00 ; '.'
00000000000022cc         db  0x00 ; '.'
00000000000022cd         db  0x00 ; '.'
00000000000022ce         db  0x00 ; '.'
00000000000022cf         db  0x00 ; '.'
00000000000022d0         db  0x08 ; '.'
00000000000022d1         db  0x00 ; '.'
00000000000022d2         db  0x00 ; '.'
00000000000022d3         db  0x00 ; '.'
00000000000022d4         db  0x00 ; '.'
00000000000022d5         db  0x00 ; '.'
00000000000022d6         db  0x00 ; '.'
00000000000022d7         db  0x00 ; '.'
00000000000022d8         db  0x36 ; '6'
00000000000022d9         db  0x7e ; '~'
00000000000022da         db  0x01 ; '.'
00000000000022db         db  0x00 ; '.'
00000000000022dc         db  0x00 ; '.'
00000000000022dd         db  0x00 ; '.'
00000000000022de         db  0x00 ; '.'
00000000000022df         db  0x00 ; '.'
00000000000022e0         db  0x68 ; 'h'
00000000000022e1         db  0xf9 ; '.'
00000000000022e2         db  0x21 ; '!'
00000000000022e3         db  0x00 ; '.'
00000000000022e4         db  0x00 ; '.'
00000000000022e5         db  0x00 ; '.'
00000000000022e6         db  0x00 ; '.'
00000000000022e7         db  0x00 ; '.'
00000000000022e8         db  0x08 ; '.'
00000000000022e9         db  0x00 ; '.'
00000000000022ea         db  0x00 ; '.'
00000000000022eb         db  0x00 ; '.'
00000000000022ec         db  0x00 ; '.'
00000000000022ed         db  0x00 ; '.'
00000000000022ee         db  0x00 ; '.'
00000000000022ef         db  0x00 ; '.'
00000000000022f0         db  0x39 ; '9'
00000000000022f1         db  0x7e ; '~'
00000000000022f2         db  0x01 ; '.'
00000000000022f3         db  0x00 ; '.'
00000000000022f4         db  0x00 ; '.'
00000000000022f5         db  0x00 ; '.'
00000000000022f6         db  0x00 ; '.'
00000000000022f7         db  0x00 ; '.'
00000000000022f8         db  0x70 ; 'p'
00000000000022f9         db  0xf9 ; '.'
00000000000022fa         db  0x21 ; '!'
00000000000022fb         db  0x00 ; '.'
00000000000022fc         db  0x00 ; '.'
00000000000022fd         db  0x00 ; '.'
00000000000022fe         db  0x00 ; '.'
00000000000022ff         db  0x00 ; '.'
0000000000002300         db  0x08 ; '.'
0000000000002301         db  0x00 ; '.'
0000000000002302         db  0x00 ; '.'
0000000000002303         db  0x00 ; '.'
0000000000002304         db  0x00 ; '.'
0000000000002305         db  0x00 ; '.'
0000000000002306         db  0x00 ; '.'
0000000000002307         db  0x00 ; '.'
0000000000002308         db  0x3c ; '<'
0000000000002309         db  0x7e ; '~'
000000000000230a         db  0x01 ; '.'
000000000000230b         db  0x00 ; '.'
000000000000230c         db  0x00 ; '.'
000000000000230d         db  0x00 ; '.'
000000000000230e         db  0x00 ; '.'
000000000000230f         db  0x00 ; '.'
0000000000002310         db  0x78 ; 'x'
0000000000002311         db  0xf9 ; '.'
0000000000002312         db  0x21 ; '!'
0000000000002313         db  0x00 ; '.'
0000000000002314         db  0x00 ; '.'
0000000000002315         db  0x00 ; '.'
0000000000002316         db  0x00 ; '.'
0000000000002317         db  0x00 ; '.'
0000000000002318         db  0x08 ; '.'
0000000000002319         db  0x00 ; '.'
000000000000231a         db  0x00 ; '.'
000000000000231b         db  0x00 ; '.'
000000000000231c         db  0x00 ; '.'
000000000000231d         db  0x00 ; '.'
000000000000231e         db  0x00 ; '.'
000000000000231f         db  0x00 ; '.'
0000000000002320         db  0x3f ; '?'
0000000000002321         db  0x7e ; '~'
0000000000002322         db  0x01 ; '.'
0000000000002323         db  0x00 ; '.'
0000000000002324         db  0x00 ; '.'
0000000000002325         db  0x00 ; '.'
0000000000002326         db  0x00 ; '.'
0000000000002327         db  0x00 ; '.'
0000000000002328         db  0xa0 ; '.'
0000000000002329         db  0xf9 ; '.'
000000000000232a         db  0x21 ; '!'
000000000000232b         db  0x00 ; '.'
000000000000232c         db  0x00 ; '.'
000000000000232d         db  0x00 ; '.'
000000000000232e         db  0x00 ; '.'
000000000000232f         db  0x00 ; '.'
0000000000002330         db  0x08 ; '.'
0000000000002331         db  0x00 ; '.'
0000000000002332         db  0x00 ; '.'
0000000000002333         db  0x00 ; '.'
0000000000002334         db  0x00 ; '.'
0000000000002335         db  0x00 ; '.'
0000000000002336         db  0x00 ; '.'
0000000000002337         db  0x00 ; '.'
0000000000002338         db  0xef ; '.'
0000000000002339         db  0x7b ; '{'
000000000000233a         db  0x01 ; '.'
000000000000233b         db  0x00 ; '.'
000000000000233c         db  0x00 ; '.'
000000000000233d         db  0x00 ; '.'
000000000000233e         db  0x00 ; '.'
000000000000233f         db  0x00 ; '.'
0000000000002340         db  0xa8 ; '.'
0000000000002341         db  0xf9 ; '.'
0000000000002342         db  0x21 ; '!'
0000000000002343         db  0x00 ; '.'
0000000000002344         db  0x00 ; '.'
0000000000002345         db  0x00 ; '.'
0000000000002346         db  0x00 ; '.'
0000000000002347         db  0x00 ; '.'
0000000000002348         db  0x08 ; '.'
0000000000002349         db  0x00 ; '.'
000000000000234a         db  0x00 ; '.'
000000000000234b         db  0x00 ; '.'
000000000000234c         db  0x00 ; '.'
000000000000234d         db  0x00 ; '.'
000000000000234e         db  0x00 ; '.'
000000000000234f         db  0x00 ; '.'
0000000000002350         db  0x42 ; 'B'
0000000000002351         db  0x7e ; '~'
0000000000002352         db  0x01 ; '.'
0000000000002353         db  0x00 ; '.'
0000000000002354         db  0x00 ; '.'
0000000000002355         db  0x00 ; '.'
0000000000002356         db  0x00 ; '.'
0000000000002357         db  0x00 ; '.'
0000000000002358         db  0xb0 ; '.'
0000000000002359         db  0xf9 ; '.'
000000000000235a         db  0x21 ; '!'
000000000000235b         db  0x00 ; '.'
000000000000235c         db  0x00 ; '.'
000000000000235d         db  0x00 ; '.'
000000000000235e         db  0x00 ; '.'
000000000000235f         db  0x00 ; '.'
0000000000002360         db  0x08 ; '.'
0000000000002361         db  0x00 ; '.'
0000000000002362         db  0x00 ; '.'
0000000000002363         db  0x00 ; '.'
0000000000002364         db  0x00 ; '.'
0000000000002365         db  0x00 ; '.'
0000000000002366         db  0x00 ; '.'
0000000000002367         db  0x00 ; '.'
0000000000002368         db  0x0d ; '.'
0000000000002369         db  0x7d ; '}'
000000000000236a         db  0x01 ; '.'
000000000000236b         db  0x00 ; '.'
000000000000236c         db  0x00 ; '.'
000000000000236d         db  0x00 ; '.'
000000000000236e         db  0x00 ; '.'
000000000000236f         db  0x00 ; '.'
0000000000002370         db  0xb8 ; '.'
0000000000002371         db  0xf9 ; '.'
0000000000002372         db  0x21 ; '!'
0000000000002373         db  0x00 ; '.'
0000000000002374         db  0x00 ; '.'
0000000000002375         db  0x00 ; '.'
0000000000002376         db  0x00 ; '.'
0000000000002377         db  0x00 ; '.'
0000000000002378         db  0x08 ; '.'
0000000000002379         db  0x00 ; '.'
000000000000237a         db  0x00 ; '.'
000000000000237b         db  0x00 ; '.'
000000000000237c         db  0x00 ; '.'
000000000000237d         db  0x00 ; '.'
000000000000237e         db  0x00 ; '.'
000000000000237f         db  0x00 ; '.'
0000000000002380         db  0x04 ; '.'
0000000000002381         db  0x7d ; '}'
0000000000002382         db  0x01 ; '.'
0000000000002383         db  0x00 ; '.'
0000000000002384         db  0x00 ; '.'
0000000000002385         db  0x00 ; '.'
0000000000002386         db  0x00 ; '.'
0000000000002387         db  0x00 ; '.'
0000000000002388         db  0xe0 ; '.'
0000000000002389         db  0xf9 ; '.'
000000000000238a         db  0x21 ; '!'
000000000000238b         db  0x00 ; '.'
000000000000238c         db  0x00 ; '.'
000000000000238d         db  0x00 ; '.'
000000000000238e         db  0x00 ; '.'
000000000000238f         db  0x00 ; '.'
0000000000002390         db  0x08 ; '.'
0000000000002391         db  0x00 ; '.'
0000000000002392         db  0x00 ; '.'
0000000000002393         db  0x00 ; '.'
0000000000002394         db  0x00 ; '.'
0000000000002395         db  0x00 ; '.'
0000000000002396         db  0x00 ; '.'
0000000000002397         db  0x00 ; '.'
0000000000002398         db  0x03 ; '.'
0000000000002399         db  0x7a ; 'z'
000000000000239a         db  0x01 ; '.'
000000000000239b         db  0x00 ; '.'
000000000000239c         db  0x00 ; '.'
000000000000239d         db  0x00 ; '.'
000000000000239e         db  0x00 ; '.'
000000000000239f         db  0x00 ; '.'
00000000000023a0         db  0xe8 ; '.'
00000000000023a1         db  0xf9 ; '.'
00000000000023a2         db  0x21 ; '!'
00000000000023a3         db  0x00 ; '.'
00000000000023a4         db  0x00 ; '.'
00000000000023a5         db  0x00 ; '.'
00000000000023a6         db  0x00 ; '.'
00000000000023a7         db  0x00 ; '.'
00000000000023a8         db  0x08 ; '.'
00000000000023a9         db  0x00 ; '.'
00000000000023aa         db  0x00 ; '.'
00000000000023ab         db  0x00 ; '.'
00000000000023ac         db  0x00 ; '.'
00000000000023ad         db  0x00 ; '.'
00000000000023ae         db  0x00 ; '.'
00000000000023af         db  0x00 ; '.'
00000000000023b0         db  0x48 ; 'H'
00000000000023b1         db  0x7e ; '~'
00000000000023b2         db  0x01 ; '.'
00000000000023b3         db  0x00 ; '.'
00000000000023b4         db  0x00 ; '.'
00000000000023b5         db  0x00 ; '.'
00000000000023b6         db  0x00 ; '.'
00000000000023b7         db  0x00 ; '.'
00000000000023b8         db  0xf0 ; '.'
00000000000023b9         db  0xf9 ; '.'
00000000000023ba         db  0x21 ; '!'
00000000000023bb         db  0x00 ; '.'
00000000000023bc         db  0x00 ; '.'
00000000000023bd         db  0x00 ; '.'
00000000000023be         db  0x00 ; '.'
00000000000023bf         db  0x00 ; '.'
00000000000023c0         db  0x08 ; '.'
00000000000023c1         db  0x00 ; '.'
00000000000023c2         db  0x00 ; '.'
00000000000023c3         db  0x00 ; '.'
00000000000023c4         db  0x00 ; '.'
00000000000023c5         db  0x00 ; '.'
00000000000023c6         db  0x00 ; '.'
00000000000023c7         db  0x00 ; '.'
00000000000023c8         db  0x4d ; 'M'
00000000000023c9         db  0x7e ; '~'
00000000000023ca         db  0x01 ; '.'
00000000000023cb         db  0x00 ; '.'
00000000000023cc         db  0x00 ; '.'
00000000000023cd         db  0x00 ; '.'
00000000000023ce         db  0x00 ; '.'
00000000000023cf         db  0x00 ; '.'
00000000000023d0         db  0xf8 ; '.'
00000000000023d1         db  0xf9 ; '.'
00000000000023d2         db  0x21 ; '!'
00000000000023d3         db  0x00 ; '.'
00000000000023d4         db  0x00 ; '.'
00000000000023d5         db  0x00 ; '.'
00000000000023d6         db  0x00 ; '.'
00000000000023d7         db  0x00 ; '.'
00000000000023d8         db  0x08 ; '.'
00000000000023d9         db  0x00 ; '.'
00000000000023da         db  0x00 ; '.'
00000000000023db         db  0x00 ; '.'
00000000000023dc         db  0x00 ; '.'
00000000000023dd         db  0x00 ; '.'
00000000000023de         db  0x00 ; '.'
00000000000023df         db  0x00 ; '.'
00000000000023e0         db  0x20 ; ' '
00000000000023e1         db  0x7a ; 'z'
00000000000023e2         db  0x01 ; '.'
00000000000023e3         db  0x00 ; '.'
00000000000023e4         db  0x00 ; '.'
00000000000023e5         db  0x00 ; '.'
00000000000023e6         db  0x00 ; '.'
00000000000023e7         db  0x00 ; '.'
00000000000023e8         db  0x10 ; '.'
00000000000023e9         db  0xfa ; '.'
00000000000023ea         db  0x21 ; '!'
00000000000023eb         db  0x00 ; '.'
00000000000023ec         db  0x00 ; '.'
00000000000023ed         db  0x00 ; '.'
00000000000023ee         db  0x00 ; '.'
00000000000023ef         db  0x00 ; '.'
00000000000023f0         db  0x08 ; '.'
00000000000023f1         db  0x00 ; '.'
00000000000023f2         db  0x00 ; '.'
00000000000023f3         db  0x00 ; '.'
00000000000023f4         db  0x00 ; '.'
00000000000023f5         db  0x00 ; '.'
00000000000023f6         db  0x00 ; '.'
00000000000023f7         db  0x00 ; '.'
00000000000023f8         db  0x97 ; '.'
00000000000023f9         db  0x7c ; '|'
00000000000023fa         db  0x01 ; '.'
00000000000023fb         db  0x00 ; '.'
00000000000023fc         db  0x00 ; '.'
00000000000023fd         db  0x00 ; '.'
00000000000023fe         db  0x00 ; '.'
00000000000023ff         db  0x00 ; '.'
0000000000002400         db  0x18 ; '.'
0000000000002401         db  0xfa ; '.'
0000000000002402         db  0x21 ; '!'
0000000000002403         db  0x00 ; '.'
0000000000002404         db  0x00 ; '.'
0000000000002405         db  0x00 ; '.'
0000000000002406         db  0x00 ; '.'
0000000000002407         db  0x00 ; '.'
0000000000002408         db  0x08 ; '.'
0000000000002409         db  0x00 ; '.'
000000000000240a         db  0x00 ; '.'
000000000000240b         db  0x00 ; '.'
000000000000240c         db  0x00 ; '.'
000000000000240d         db  0x00 ; '.'
000000000000240e         db  0x00 ; '.'
000000000000240f         db  0x00 ; '.'
0000000000002410         db  0x17 ; '.'
0000000000002411         db  0x7d ; '}'
0000000000002412         db  0x01 ; '.'
0000000000002413         db  0x00 ; '.'
0000000000002414         db  0x00 ; '.'
0000000000002415         db  0x00 ; '.'
0000000000002416         db  0x00 ; '.'
0000000000002417         db  0x00 ; '.'
0000000000002418         db  0x40 ; '@'
0000000000002419         db  0xfa ; '.'
000000000000241a         db  0x21 ; '!'
000000000000241b         db  0x00 ; '.'
000000000000241c         db  0x00 ; '.'
000000000000241d         db  0x00 ; '.'
000000000000241e         db  0x00 ; '.'
000000000000241f         db  0x00 ; '.'
0000000000002420         db  0x08 ; '.'
0000000000002421         db  0x00 ; '.'
0000000000002422         db  0x00 ; '.'
0000000000002423         db  0x00 ; '.'
0000000000002424         db  0x00 ; '.'
0000000000002425         db  0x00 ; '.'
0000000000002426         db  0x00 ; '.'
0000000000002427         db  0x00 ; '.'
0000000000002428         db  0x4b ; 'K'
0000000000002429         db  0x7d ; '}'
000000000000242a         db  0x01 ; '.'
000000000000242b         db  0x00 ; '.'
000000000000242c         db  0x00 ; '.'
000000000000242d         db  0x00 ; '.'
000000000000242e         db  0x00 ; '.'
000000000000242f         db  0x00 ; '.'
0000000000002430         db  0x48 ; 'H'
0000000000002431         db  0xfa ; '.'
0000000000002432         db  0x21 ; '!'
0000000000002433         db  0x00 ; '.'
0000000000002434         db  0x00 ; '.'
0000000000002435         db  0x00 ; '.'
0000000000002436         db  0x00 ; '.'
0000000000002437         db  0x00 ; '.'
0000000000002438         db  0x08 ; '.'
0000000000002439         db  0x00 ; '.'
000000000000243a         db  0x00 ; '.'
000000000000243b         db  0x00 ; '.'
000000000000243c         db  0x00 ; '.'
000000000000243d         db  0x00 ; '.'
000000000000243e         db  0x00 ; '.'
000000000000243f         db  0x00 ; '.'
0000000000002440         db  0x1f ; '.'
0000000000002441         db  0xa3 ; '.'
0000000000002442         db  0x01 ; '.'
0000000000002443         db  0x00 ; '.'
0000000000002444         db  0x00 ; '.'
0000000000002445         db  0x00 ; '.'
0000000000002446         db  0x00 ; '.'
0000000000002447         db  0x00 ; '.'
0000000000002448         db  0x50 ; 'P'
0000000000002449         db  0xfa ; '.'
000000000000244a         db  0x21 ; '!'
000000000000244b         db  0x00 ; '.'
000000000000244c         db  0x00 ; '.'
000000000000244d         db  0x00 ; '.'
000000000000244e         db  0x00 ; '.'
000000000000244f         db  0x00 ; '.'
0000000000002450         db  0x08 ; '.'
0000000000002451         db  0x00 ; '.'
0000000000002452         db  0x00 ; '.'
0000000000002453         db  0x00 ; '.'
0000000000002454         db  0x00 ; '.'
0000000000002455         db  0x00 ; '.'
0000000000002456         db  0x00 ; '.'
0000000000002457         db  0x00 ; '.'
0000000000002458         db  0x25 ; '%'
0000000000002459         db  0xa3 ; '.'
000000000000245a         db  0x01 ; '.'
000000000000245b         db  0x00 ; '.'
000000000000245c         db  0x00 ; '.'
000000000000245d         db  0x00 ; '.'
000000000000245e         db  0x00 ; '.'
000000000000245f         db  0x00 ; '.'
0000000000002460         db  0x58 ; 'X'
0000000000002461         db  0xfa ; '.'
0000000000002462         db  0x21 ; '!'
0000000000002463         db  0x00 ; '.'
0000000000002464         db  0x00 ; '.'
0000000000002465         db  0x00 ; '.'
0000000000002466         db  0x00 ; '.'
0000000000002467         db  0x00 ; '.'
0000000000002468         db  0x08 ; '.'
0000000000002469         db  0x00 ; '.'
000000000000246a         db  0x00 ; '.'
000000000000246b         db  0x00 ; '.'
000000000000246c         db  0x00 ; '.'
000000000000246d         db  0x00 ; '.'
000000000000246e         db  0x00 ; '.'
000000000000246f         db  0x00 ; '.'
0000000000002470         db  0x32 ; '2'
0000000000002471         db  0xa3 ; '.'
0000000000002472         db  0x01 ; '.'
0000000000002473         db  0x00 ; '.'
0000000000002474         db  0x00 ; '.'
0000000000002475         db  0x00 ; '.'
0000000000002476         db  0x00 ; '.'
0000000000002477         db  0x00 ; '.'
0000000000002478         db  0x60 ; '`'
0000000000002479         db  0xfa ; '.'
000000000000247a         db  0x21 ; '!'
000000000000247b         db  0x00 ; '.'
000000000000247c         db  0x00 ; '.'
000000000000247d         db  0x00 ; '.'
000000000000247e         db  0x00 ; '.'
000000000000247f         db  0x00 ; '.'
0000000000002480         db  0x08 ; '.'
0000000000002481         db  0x00 ; '.'
0000000000002482         db  0x00 ; '.'
0000000000002483         db  0x00 ; '.'
0000000000002484         db  0x00 ; '.'
0000000000002485         db  0x00 ; '.'
0000000000002486         db  0x00 ; '.'
0000000000002487         db  0x00 ; '.'
0000000000002488         db  0x3f ; '?'
0000000000002489         db  0xa3 ; '.'
000000000000248a         db  0x01 ; '.'
000000000000248b         db  0x00 ; '.'
000000000000248c         db  0x00 ; '.'
000000000000248d         db  0x00 ; '.'
000000000000248e         db  0x00 ; '.'
000000000000248f         db  0x00 ; '.'
0000000000002490         db  0x68 ; 'h'
0000000000002491         db  0xfa ; '.'
0000000000002492         db  0x21 ; '!'
0000000000002493         db  0x00 ; '.'
0000000000002494         db  0x00 ; '.'
0000000000002495         db  0x00 ; '.'
0000000000002496         db  0x00 ; '.'
0000000000002497         db  0x00 ; '.'
0000000000002498         db  0x08 ; '.'
0000000000002499         db  0x00 ; '.'
000000000000249a         db  0x00 ; '.'
000000000000249b         db  0x00 ; '.'
000000000000249c         db  0x00 ; '.'
000000000000249d         db  0x00 ; '.'
000000000000249e         db  0x00 ; '.'
000000000000249f         db  0x00 ; '.'
00000000000024a0         db  0x70 ; 'p'
00000000000024a1         db  0x78 ; 'x'
00000000000024a2         db  0x01 ; '.'
00000000000024a3         db  0x00 ; '.'
00000000000024a4         db  0x00 ; '.'
00000000000024a5         db  0x00 ; '.'
00000000000024a6         db  0x00 ; '.'
00000000000024a7         db  0x00 ; '.'
00000000000024a8         db  0x70 ; 'p'
00000000000024a9         db  0xfa ; '.'
00000000000024aa         db  0x21 ; '!'
00000000000024ab         db  0x00 ; '.'
00000000000024ac         db  0x00 ; '.'
00000000000024ad         db  0x00 ; '.'
00000000000024ae         db  0x00 ; '.'
00000000000024af         db  0x00 ; '.'
00000000000024b0         db  0x08 ; '.'
00000000000024b1         db  0x00 ; '.'
00000000000024b2         db  0x00 ; '.'
00000000000024b3         db  0x00 ; '.'
00000000000024b4         db  0x00 ; '.'
00000000000024b5         db  0x00 ; '.'
00000000000024b6         db  0x00 ; '.'
00000000000024b7         db  0x00 ; '.'
00000000000024b8         db  0x53 ; 'S'
00000000000024b9         db  0xa3 ; '.'
00000000000024ba         db  0x01 ; '.'
00000000000024bb         db  0x00 ; '.'
00000000000024bc         db  0x00 ; '.'
00000000000024bd         db  0x00 ; '.'
00000000000024be         db  0x00 ; '.'
00000000000024bf         db  0x00 ; '.'
00000000000024c0         db  0x78 ; 'x'
00000000000024c1         db  0xfa ; '.'
00000000000024c2         db  0x21 ; '!'
00000000000024c3         db  0x00 ; '.'
00000000000024c4         db  0x00 ; '.'
00000000000024c5         db  0x00 ; '.'
00000000000024c6         db  0x00 ; '.'
00000000000024c7         db  0x00 ; '.'
00000000000024c8         db  0x08 ; '.'
00000000000024c9         db  0x00 ; '.'
00000000000024ca         db  0x00 ; '.'
00000000000024cb         db  0x00 ; '.'
00000000000024cc         db  0x00 ; '.'
00000000000024cd         db  0x00 ; '.'
00000000000024ce         db  0x00 ; '.'
00000000000024cf         db  0x00 ; '.'
00000000000024d0         db  0x38 ; '8'
00000000000024d1         db  0xa3 ; '.'
00000000000024d2         db  0x01 ; '.'
00000000000024d3         db  0x00 ; '.'
00000000000024d4         db  0x00 ; '.'
00000000000024d5         db  0x00 ; '.'
00000000000024d6         db  0x00 ; '.'
00000000000024d7         db  0x00 ; '.'
00000000000024d8         db  0x80 ; '.'
00000000000024d9         db  0xfa ; '.'
00000000000024da         db  0x21 ; '!'
00000000000024db         db  0x00 ; '.'
00000000000024dc         db  0x00 ; '.'
00000000000024dd         db  0x00 ; '.'
00000000000024de         db  0x00 ; '.'
00000000000024df         db  0x00 ; '.'
00000000000024e0         db  0x08 ; '.'
00000000000024e1         db  0x00 ; '.'
00000000000024e2         db  0x00 ; '.'
00000000000024e3         db  0x00 ; '.'
00000000000024e4         db  0x00 ; '.'
00000000000024e5         db  0x00 ; '.'
00000000000024e6         db  0x00 ; '.'
00000000000024e7         db  0x00 ; '.'
00000000000024e8         db  0x20 ; ' '
00000000000024e9         db  0x7a ; 'z'
00000000000024ea         db  0x01 ; '.'
00000000000024eb         db  0x00 ; '.'
00000000000024ec         db  0x00 ; '.'
00000000000024ed         db  0x00 ; '.'
00000000000024ee         db  0x00 ; '.'
00000000000024ef         db  0x00 ; '.'
00000000000024f0         db  0x88 ; '.'
00000000000024f1         db  0xfa ; '.'
00000000000024f2         db  0x21 ; '!'
00000000000024f3         db  0x00 ; '.'
00000000000024f4         db  0x00 ; '.'
00000000000024f5         db  0x00 ; '.'
00000000000024f6         db  0x00 ; '.'
00000000000024f7         db  0x00 ; '.'
00000000000024f8         db  0x08 ; '.'
00000000000024f9         db  0x00 ; '.'
00000000000024fa         db  0x00 ; '.'
00000000000024fb         db  0x00 ; '.'
00000000000024fc         db  0x00 ; '.'
00000000000024fd         db  0x00 ; '.'
00000000000024fe         db  0x00 ; '.'
00000000000024ff         db  0x00 ; '.'
0000000000002500         db  0x5b ; '['
0000000000002501         db  0xa3 ; '.'
0000000000002502         db  0x01 ; '.'
0000000000002503         db  0x00 ; '.'
0000000000002504         db  0x00 ; '.'
0000000000002505         db  0x00 ; '.'
0000000000002506         db  0x00 ; '.'
0000000000002507         db  0x00 ; '.'
0000000000002508         db  0x08 ; '.'
0000000000002509         db  0x00 ; '.'
000000000000250a         db  0x22 ; '"'
000000000000250b         db  0x00 ; '.'
000000000000250c         db  0x00 ; '.'
000000000000250d         db  0x00 ; '.'
000000000000250e         db  0x00 ; '.'
000000000000250f         db  0x00 ; '.'
0000000000002510         db  0x08 ; '.'
0000000000002511         db  0x00 ; '.'
0000000000002512         db  0x00 ; '.'
0000000000002513         db  0x00 ; '.'
0000000000002514         db  0x00 ; '.'
0000000000002515         db  0x00 ; '.'
0000000000002516         db  0x00 ; '.'
0000000000002517         db  0x00 ; '.'
0000000000002518         db  0x08 ; '.'
0000000000002519         db  0x00 ; '.'
000000000000251a         db  0x22 ; '"'
000000000000251b         db  0x00 ; '.'
000000000000251c         db  0x00 ; '.'
000000000000251d         db  0x00 ; '.'
000000000000251e         db  0x00 ; '.'
000000000000251f         db  0x00 ; '.'
0000000000002520         db  0x40 ; '@'                                         ; DATA XREF=__strftime_internal+965, __strftime_internal+1328, __strftime_internal+1420
0000000000002521         db  0x00 ; '.'
0000000000002522         db  0x22 ; '"'
0000000000002523         db  0x00 ; '.'
0000000000002524         db  0x00 ; '.'
0000000000002525         db  0x00 ; '.'
0000000000002526         db  0x00 ; '.'
0000000000002527         db  0x00 ; '.'
0000000000002528         db  0x08 ; '.'
0000000000002529         db  0x00 ; '.'
000000000000252a         db  0x00 ; '.'
000000000000252b         db  0x00 ; '.'
000000000000252c         db  0x00 ; '.'
000000000000252d         db  0x00 ; '.'
000000000000252e         db  0x00 ; '.'
000000000000252f         db  0x00 ; '.'
0000000000002530         db  0xad ; '.'
0000000000002531         db  0x7d ; '}'
0000000000002532         db  0x01 ; '.'
0000000000002533         db  0x00 ; '.'
0000000000002534         db  0x00 ; '.'
0000000000002535         db  0x00 ; '.'
0000000000002536         db  0x00 ; '.'
0000000000002537         db  0x00 ; '.'
0000000000002538         db  0x48 ; 'H'
0000000000002539         db  0x00 ; '.'
000000000000253a         db  0x22 ; '"'
000000000000253b         db  0x00 ; '.'
000000000000253c         db  0x00 ; '.'
000000000000253d         db  0x00 ; '.'
000000000000253e         db  0x00 ; '.'
000000000000253f         db  0x00 ; '.'
0000000000002540         db  0x08 ; '.'
0000000000002541         db  0x00 ; '.'
0000000000002542         db  0x00 ; '.'
0000000000002543         db  0x00 ; '.'
0000000000002544         db  0x00 ; '.'
0000000000002545         db  0x00 ; '.'
0000000000002546         db  0x00 ; '.'
0000000000002547         db  0x00 ; '.'
0000000000002548         db  0xb7 ; '.'
0000000000002549         db  0x7d ; '}'
000000000000254a         db  0x01 ; '.'
000000000000254b         db  0x00 ; '.'
000000000000254c         db  0x00 ; '.'
000000000000254d         db  0x00 ; '.'
000000000000254e         db  0x00 ; '.'
000000000000254f         db  0x00 ; '.'
0000000000002550         db  0x68 ; 'h'
0000000000002551         db  0x00 ; '.'
0000000000002552         db  0x22 ; '"'
0000000000002553         db  0x00 ; '.'
0000000000002554         db  0x00 ; '.'
0000000000002555         db  0x00 ; '.'
0000000000002556         db  0x00 ; '.'
0000000000002557         db  0x00 ; '.'
0000000000002558         db  0x08 ; '.'
0000000000002559         db  0x00 ; '.'
000000000000255a         db  0x00 ; '.'
000000000000255b         db  0x00 ; '.'
000000000000255c         db  0x00 ; '.'
000000000000255d         db  0x00 ; '.'
000000000000255e         db  0x00 ; '.'
000000000000255f         db  0x00 ; '.'
0000000000002560         db  0xc3 ; '.'
0000000000002561         db  0x7d ; '}'
0000000000002562         db  0x01 ; '.'
0000000000002563         db  0x00 ; '.'
0000000000002564         db  0x00 ; '.'
0000000000002565         db  0x00 ; '.'
0000000000002566         db  0x00 ; '.'
0000000000002567         db  0x00 ; '.'
0000000000002568         db  0x78 ; 'x'
0000000000002569         db  0x00 ; '.'
000000000000256a         db  0x22 ; '"'
000000000000256b         db  0x00 ; '.'
000000000000256c         db  0x00 ; '.'
000000000000256d         db  0x00 ; '.'
000000000000256e         db  0x00 ; '.'
000000000000256f         db  0x00 ; '.'
0000000000002570         db  0x08 ; '.'
0000000000002571         db  0x00 ; '.'
0000000000002572         db  0x00 ; '.'
0000000000002573         db  0x00 ; '.'
0000000000002574         db  0x00 ; '.'
0000000000002575         db  0x00 ; '.'
0000000000002576         db  0x00 ; '.'
0000000000002577         db  0x00 ; '.'
0000000000002578         db  0xbd ; '.'
0000000000002579         db  0x79 ; 'y'
000000000000257a         db  0x01 ; '.'
000000000000257b         db  0x00 ; '.'
000000000000257c         db  0x00 ; '.'
000000000000257d         db  0x00 ; '.'
000000000000257e         db  0x00 ; '.'
000000000000257f         db  0x00 ; '.'
0000000000002580         db  0x98 ; '.'
0000000000002581         db  0x00 ; '.'
0000000000002582         db  0x22 ; '"'
0000000000002583         db  0x00 ; '.'
0000000000002584         db  0x00 ; '.'
0000000000002585         db  0x00 ; '.'
0000000000002586         db  0x00 ; '.'
0000000000002587         db  0x00 ; '.'
0000000000002588         db  0x08 ; '.'
0000000000002589         db  0x00 ; '.'
000000000000258a         db  0x00 ; '.'
000000000000258b         db  0x00 ; '.'
000000000000258c         db  0x00 ; '.'
000000000000258d         db  0x00 ; '.'
000000000000258e         db  0x00 ; '.'
000000000000258f         db  0x00 ; '.'
0000000000002590         db  0x45 ; 'E'
0000000000002591         db  0x78 ; 'x'
0000000000002592         db  0x01 ; '.'
0000000000002593         db  0x00 ; '.'
0000000000002594         db  0x00 ; '.'
0000000000002595         db  0x00 ; '.'
0000000000002596         db  0x00 ; '.'
0000000000002597         db  0x00 ; '.'
0000000000002598         db  0xc8 ; '.'
0000000000002599         db  0x00 ; '.'
000000000000259a         db  0x22 ; '"'
000000000000259b         db  0x00 ; '.'
000000000000259c         db  0x00 ; '.'
000000000000259d         db  0x00 ; '.'
000000000000259e         db  0x00 ; '.'
000000000000259f         db  0x00 ; '.'
00000000000025a0         db  0x08 ; '.'
00000000000025a1         db  0x00 ; '.'
00000000000025a2         db  0x00 ; '.'
00000000000025a3         db  0x00 ; '.'
00000000000025a4         db  0x00 ; '.'
00000000000025a5         db  0x00 ; '.'
00000000000025a6         db  0x00 ; '.'
00000000000025a7         db  0x00 ; '.'
00000000000025a8         db  0xc6 ; '.'
00000000000025a9         db  0x7d ; '}'
00000000000025aa         db  0x01 ; '.'
00000000000025ab         db  0x00 ; '.'
00000000000025ac         db  0x00 ; '.'
00000000000025ad         db  0x00 ; '.'
00000000000025ae         db  0x00 ; '.'
00000000000025af         db  0x00 ; '.'
00000000000025b0         db  0xd8 ; '.'
00000000000025b1         db  0x00 ; '.'
00000000000025b2         db  0x22 ; '"'
00000000000025b3         db  0x00 ; '.'
00000000000025b4         db  0x00 ; '.'
00000000000025b5         db  0x00 ; '.'
00000000000025b6         db  0x00 ; '.'
00000000000025b7         db  0x00 ; '.'
00000000000025b8         db  0x08 ; '.'
00000000000025b9         db  0x00 ; '.'
00000000000025ba         db  0x00 ; '.'
00000000000025bb         db  0x00 ; '.'
00000000000025bc         db  0x00 ; '.'
00000000000025bd         db  0x00 ; '.'
00000000000025be         db  0x00 ; '.'
00000000000025bf         db  0x00 ; '.'
00000000000025c0         db  0xcc ; '.'
00000000000025c1         db  0x7d ; '}'
00000000000025c2         db  0x01 ; '.'
00000000000025c3         db  0x00 ; '.'
00000000000025c4         db  0x00 ; '.'
00000000000025c5         db  0x00 ; '.'
00000000000025c6         db  0x00 ; '.'
00000000000025c7         db  0x00 ; '.'
00000000000025c8         db  0xe8 ; '.'
00000000000025c9         db  0x00 ; '.'
00000000000025ca         db  0x22 ; '"'
00000000000025cb         db  0x00 ; '.'
00000000000025cc         db  0x00 ; '.'
00000000000025cd         db  0x00 ; '.'
00000000000025ce         db  0x00 ; '.'
00000000000025cf         db  0x00 ; '.'
00000000000025d0         db  0x08 ; '.'
00000000000025d1         db  0x00 ; '.'
00000000000025d2         db  0x00 ; '.'
00000000000025d3         db  0x00 ; '.'
00000000000025d4         db  0x00 ; '.'
00000000000025d5         db  0x00 ; '.'
00000000000025d6         db  0x00 ; '.'
00000000000025d7         db  0x00 ; '.'
00000000000025d8         db  0xdb ; '.'
00000000000025d9         db  0x7d ; '}'
00000000000025da         db  0x01 ; '.'
00000000000025db         db  0x00 ; '.'
00000000000025dc         db  0x00 ; '.'
00000000000025dd         db  0x00 ; '.'
00000000000025de         db  0x00 ; '.'
00000000000025df         db  0x00 ; '.'
00000000000025e0         db  0xf8 ; '.'
00000000000025e1         db  0x00 ; '.'
00000000000025e2         db  0x22 ; '"'
00000000000025e3         db  0x00 ; '.'
00000000000025e4         db  0x00 ; '.'
00000000000025e5         db  0x00 ; '.'
00000000000025e6         db  0x00 ; '.'
00000000000025e7         db  0x00 ; '.'
00000000000025e8         db  0x08 ; '.'
00000000000025e9         db  0x00 ; '.'
00000000000025ea         db  0x00 ; '.'
00000000000025eb         db  0x00 ; '.'
00000000000025ec         db  0x00 ; '.'
00000000000025ed         db  0x00 ; '.'
00000000000025ee         db  0x00 ; '.'
00000000000025ef         db  0x00 ; '.'
00000000000025f0         db  0xd2 ; '.'
00000000000025f1         db  0x7d ; '}'
00000000000025f2         db  0x01 ; '.'
00000000000025f3         db  0x00 ; '.'
00000000000025f4         db  0x00 ; '.'
00000000000025f5         db  0x00 ; '.'
00000000000025f6         db  0x00 ; '.'
00000000000025f7         db  0x00 ; '.'
00000000000025f8         db  0x08 ; '.'
00000000000025f9         db  0x01 ; '.'
00000000000025fa         db  0x22 ; '"'
00000000000025fb         db  0x00 ; '.'
00000000000025fc         db  0x00 ; '.'
00000000000025fd         db  0x00 ; '.'
00000000000025fe         db  0x00 ; '.'
00000000000025ff         db  0x00 ; '.'
0000000000002600         db  0x08 ; '.'
0000000000002601         db  0x00 ; '.'
0000000000002602         db  0x00 ; '.'
0000000000002603         db  0x00 ; '.'
0000000000002604         db  0x00 ; '.'
0000000000002605         db  0x00 ; '.'
0000000000002606         db  0x00 ; '.'
0000000000002607         db  0x00 ; '.'
0000000000002608         db  0xd8 ; '.'
0000000000002609         db  0x7d ; '}'
000000000000260a         db  0x01 ; '.'
000000000000260b         db  0x00 ; '.'
000000000000260c         db  0x00 ; '.'
000000000000260d         db  0x00 ; '.'
000000000000260e         db  0x00 ; '.'
000000000000260f         db  0x00 ; '.'
0000000000002610         db  0x18 ; '.'
0000000000002611         db  0x01 ; '.'
0000000000002612         db  0x22 ; '"'
0000000000002613         db  0x00 ; '.'
0000000000002614         db  0x00 ; '.'
0000000000002615         db  0x00 ; '.'
0000000000002616         db  0x00 ; '.'
0000000000002617         db  0x00 ; '.'
0000000000002618         db  0x08 ; '.'
0000000000002619         db  0x00 ; '.'
000000000000261a         db  0x00 ; '.'
000000000000261b         db  0x00 ; '.'
000000000000261c         db  0x00 ; '.'
000000000000261d         db  0x00 ; '.'
000000000000261e         db  0x00 ; '.'
000000000000261f         db  0x00 ; '.'
0000000000002620         db  0xd8 ; '.'
0000000000002621         db  0x7d ; '}'
0000000000002622         db  0x01 ; '.'
0000000000002623         db  0x00 ; '.'
0000000000002624         db  0x00 ; '.'
0000000000002625         db  0x00 ; '.'
0000000000002626         db  0x00 ; '.'
0000000000002627         db  0x00 ; '.'
0000000000002628         db  0x48 ; 'H'
0000000000002629         db  0x01 ; '.'
000000000000262a         db  0x22 ; '"'
000000000000262b         db  0x00 ; '.'
000000000000262c         db  0x00 ; '.'
000000000000262d         db  0x00 ; '.'
000000000000262e         db  0x00 ; '.'
000000000000262f         db  0x00 ; '.'
0000000000002630         db  0x08 ; '.'
0000000000002631         db  0x00 ; '.'
0000000000002632         db  0x00 ; '.'
0000000000002633         db  0x00 ; '.'
0000000000002634         db  0x00 ; '.'
0000000000002635         db  0x00 ; '.'
0000000000002636         db  0x00 ; '.'
0000000000002637         db  0x00 ; '.'
0000000000002638         db  0xde ; '.'
0000000000002639         db  0x7d ; '}'
000000000000263a         db  0x01 ; '.'
000000000000263b         db  0x00 ; '.'
000000000000263c         db  0x00 ; '.'
000000000000263d         db  0x00 ; '.'
000000000000263e         db  0x00 ; '.'
000000000000263f         db  0x00 ; '.'
0000000000002640         db  0x58 ; 'X'
0000000000002641         db  0x01 ; '.'
0000000000002642         db  0x22 ; '"'
0000000000002643         db  0x00 ; '.'
0000000000002644         db  0x00 ; '.'
0000000000002645         db  0x00 ; '.'
0000000000002646         db  0x00 ; '.'
0000000000002647         db  0x00 ; '.'
0000000000002648         db  0x08 ; '.'
0000000000002649         db  0x00 ; '.'
000000000000264a         db  0x00 ; '.'
000000000000264b         db  0x00 ; '.'
000000000000264c         db  0x00 ; '.'
000000000000264d         db  0x00 ; '.'
000000000000264e         db  0x00 ; '.'
000000000000264f         db  0x00 ; '.'
0000000000002650         db  0xd2 ; '.'
0000000000002651         db  0x7d ; '}'
0000000000002652         db  0x01 ; '.'
0000000000002653         db  0x00 ; '.'
0000000000002654         db  0x00 ; '.'
0000000000002655         db  0x00 ; '.'
0000000000002656         db  0x00 ; '.'
0000000000002657         db  0x00 ; '.'
0000000000002658         db  0x68 ; 'h'
0000000000002659         db  0x01 ; '.'
000000000000265a         db  0x22 ; '"'
000000000000265b         db  0x00 ; '.'
000000000000265c         db  0x00 ; '.'
000000000000265d         db  0x00 ; '.'
000000000000265e         db  0x00 ; '.'
000000000000265f         db  0x00 ; '.'
0000000000002660         db  0x08 ; '.'
0000000000002661         db  0x00 ; '.'
0000000000002662         db  0x00 ; '.'
0000000000002663         db  0x00 ; '.'
0000000000002664         db  0x00 ; '.'
0000000000002665         db  0x00 ; '.'
0000000000002666         db  0x00 ; '.'
0000000000002667         db  0x00 ; '.'
0000000000002668         db  0xe4 ; '.'
0000000000002669         db  0x7d ; '}'
000000000000266a         db  0x01 ; '.'
000000000000266b         db  0x00 ; '.'
000000000000266c         db  0x00 ; '.'
000000000000266d         db  0x00 ; '.'
000000000000266e         db  0x00 ; '.'
000000000000266f         db  0x00 ; '.'
0000000000002670         db  0x78 ; 'x'
0000000000002671         db  0x01 ; '.'
0000000000002672         db  0x22 ; '"'
0000000000002673         db  0x00 ; '.'
0000000000002674         db  0x00 ; '.'
0000000000002675         db  0x00 ; '.'
0000000000002676         db  0x00 ; '.'
0000000000002677         db  0x00 ; '.'
0000000000002678         db  0x08 ; '.'
0000000000002679         db  0x00 ; '.'
000000000000267a         db  0x00 ; '.'
000000000000267b         db  0x00 ; '.'
000000000000267c         db  0x00 ; '.'
000000000000267d         db  0x00 ; '.'
000000000000267e         db  0x00 ; '.'
000000000000267f         db  0x00 ; '.'
0000000000002680         db  0xea ; '.'
0000000000002681         db  0x7d ; '}'
0000000000002682         db  0x01 ; '.'
0000000000002683         db  0x00 ; '.'
0000000000002684         db  0x00 ; '.'
0000000000002685         db  0x00 ; '.'
0000000000002686         db  0x00 ; '.'
0000000000002687         db  0x00 ; '.'
0000000000002688         db  0x88 ; '.'
0000000000002689         db  0x01 ; '.'
000000000000268a         db  0x22 ; '"'
000000000000268b         db  0x00 ; '.'
000000000000268c         db  0x00 ; '.'
000000000000268d         db  0x00 ; '.'
000000000000268e         db  0x00 ; '.'
000000000000268f         db  0x00 ; '.'
0000000000002690         db  0x08 ; '.'
0000000000002691         db  0x00 ; '.'
0000000000002692         db  0x00 ; '.'
0000000000002693         db  0x00 ; '.'
0000000000002694         db  0x00 ; '.'
0000000000002695         db  0x00 ; '.'
0000000000002696         db  0x00 ; '.'
0000000000002697         db  0x00 ; '.'
0000000000002698         db  0xf0 ; '.'
0000000000002699         db  0x7d ; '}'
000000000000269a         db  0x01 ; '.'
000000000000269b         db  0x00 ; '.'
000000000000269c         db  0x00 ; '.'
000000000000269d         db  0x00 ; '.'
000000000000269e         db  0x00 ; '.'
000000000000269f         db  0x00 ; '.'
00000000000026a0         db  0x98 ; '.'
00000000000026a1         db  0x01 ; '.'
00000000000026a2         db  0x22 ; '"'
00000000000026a3         db  0x00 ; '.'
00000000000026a4         db  0x00 ; '.'
00000000000026a5         db  0x00 ; '.'
00000000000026a6         db  0x00 ; '.'
00000000000026a7         db  0x00 ; '.'
00000000000026a8         db  0x08 ; '.'
00000000000026a9         db  0x00 ; '.'
00000000000026aa         db  0x00 ; '.'
00000000000026ab         db  0x00 ; '.'
00000000000026ac         db  0x00 ; '.'
00000000000026ad         db  0x00 ; '.'
00000000000026ae         db  0x00 ; '.'
00000000000026af         db  0x00 ; '.'
00000000000026b0         db  0xf6 ; '.'
00000000000026b1         db  0x7d ; '}'
00000000000026b2         db  0x01 ; '.'
00000000000026b3         db  0x00 ; '.'
00000000000026b4         db  0x00 ; '.'
00000000000026b5         db  0x00 ; '.'
00000000000026b6         db  0x00 ; '.'
00000000000026b7         db  0x00 ; '.'
00000000000026b8         db  0xa8 ; '.'
00000000000026b9         db  0x01 ; '.'
00000000000026ba         db  0x22 ; '"'
00000000000026bb         db  0x00 ; '.'
00000000000026bc         db  0x00 ; '.'
00000000000026bd         db  0x00 ; '.'
00000000000026be         db  0x00 ; '.'
00000000000026bf         db  0x00 ; '.'
00000000000026c0         db  0x08 ; '.'
00000000000026c1         db  0x00 ; '.'
00000000000026c2         db  0x00 ; '.'
00000000000026c3         db  0x00 ; '.'
00000000000026c4         db  0x00 ; '.'
00000000000026c5         db  0x00 ; '.'
00000000000026c6         db  0x00 ; '.'
00000000000026c7         db  0x00 ; '.'
00000000000026c8         db  0xfc ; '.'
00000000000026c9         db  0x7d ; '}'
00000000000026ca         db  0x01 ; '.'
00000000000026cb         db  0x00 ; '.'
00000000000026cc         db  0x00 ; '.'
00000000000026cd         db  0x00 ; '.'
00000000000026ce         db  0x00 ; '.'
00000000000026cf         db  0x00 ; '.'
00000000000026d0         db  0xb8 ; '.'
00000000000026d1         db  0x01 ; '.'
00000000000026d2         db  0x22 ; '"'
00000000000026d3         db  0x00 ; '.'
00000000000026d4         db  0x00 ; '.'
00000000000026d5         db  0x00 ; '.'
00000000000026d6         db  0x00 ; '.'
00000000000026d7         db  0x00 ; '.'
00000000000026d8         db  0x08 ; '.'
00000000000026d9         db  0x00 ; '.'
00000000000026da         db  0x00 ; '.'
00000000000026db         db  0x00 ; '.'
00000000000026dc         db  0x00 ; '.'
00000000000026dd         db  0x00 ; '.'
00000000000026de         db  0x00 ; '.'
00000000000026df         db  0x00 ; '.'
00000000000026e0         db  0x02 ; '.'
00000000000026e1         db  0x7e ; '~'
00000000000026e2         db  0x01 ; '.'
00000000000026e3         db  0x00 ; '.'
00000000000026e4         db  0x00 ; '.'
00000000000026e5         db  0x00 ; '.'
00000000000026e6         db  0x00 ; '.'
00000000000026e7         db  0x00 ; '.'
00000000000026e8         db  0xd8 ; '.'
00000000000026e9         db  0x01 ; '.'
00000000000026ea         db  0x22 ; '"'
00000000000026eb         db  0x00 ; '.'
00000000000026ec         db  0x00 ; '.'
00000000000026ed         db  0x00 ; '.'
00000000000026ee         db  0x00 ; '.'
00000000000026ef         db  0x00 ; '.'
00000000000026f0         db  0x08 ; '.'
00000000000026f1         db  0x00 ; '.'
00000000000026f2         db  0x00 ; '.'
00000000000026f3         db  0x00 ; '.'
00000000000026f4         db  0x00 ; '.'
00000000000026f5         db  0x00 ; '.'
00000000000026f6         db  0x00 ; '.'
00000000000026f7         db  0x00 ; '.'
00000000000026f8         db  0x08 ; '.'
00000000000026f9         db  0x7e ; '~'
00000000000026fa         db  0x01 ; '.'
00000000000026fb         db  0x00 ; '.'
00000000000026fc         db  0x00 ; '.'
00000000000026fd         db  0x00 ; '.'
00000000000026fe         db  0x00 ; '.'
00000000000026ff         db  0x00 ; '.'
0000000000002700         db  0xe8 ; '.'
0000000000002701         db  0x01 ; '.'
0000000000002702         db  0x22 ; '"'
0000000000002703         db  0x00 ; '.'
0000000000002704         db  0x00 ; '.'
0000000000002705         db  0x00 ; '.'
0000000000002706         db  0x00 ; '.'
0000000000002707         db  0x00 ; '.'
0000000000002708         db  0x08 ; '.'
0000000000002709         db  0x00 ; '.'
000000000000270a         db  0x00 ; '.'
000000000000270b         db  0x00 ; '.'
000000000000270c         db  0x00 ; '.'
000000000000270d         db  0x00 ; '.'
000000000000270e         db  0x00 ; '.'
000000000000270f         db  0x00 ; '.'                                         ; DATA XREF=sub_112b0+2472
0000000000002710         db  0x30 ; '0'                                         ; DATA XREF=sub_11d69+153
0000000000002711         db  0x9f ; '.'
0000000000002712         db  0x01 ; '.'
0000000000002713         db  0x00 ; '.'
0000000000002714         db  0x00 ; '.'
0000000000002715         db  0x00 ; '.'
0000000000002716         db  0x00 ; '.'
0000000000002717         db  0x00 ; '.'
0000000000002718         db  0xf0 ; '.'
0000000000002719         db  0x01 ; '.'
000000000000271a         db  0x22 ; '"'
000000000000271b         db  0x00 ; '.'
000000000000271c         db  0x00 ; '.'
000000000000271d         db  0x00 ; '.'
000000000000271e         db  0x00 ; '.'
000000000000271f         db  0x00 ; '.'
0000000000002720         db  0x08 ; '.'
0000000000002721         db  0x00 ; '.'
0000000000002722         db  0x00 ; '.'
0000000000002723         db  0x00 ; '.'
0000000000002724         db  0x00 ; '.'
0000000000002725         db  0x00 ; '.'
0000000000002726         db  0x00 ; '.'
0000000000002727         db  0x00 ; '.'
0000000000002728         db  0x40 ; '@'
0000000000002729         db  0xc1 ; '.'
000000000000272a         db  0x00 ; '.'
000000000000272b         db  0x00 ; '.'
000000000000272c         db  0x00 ; '.'
000000000000272d         db  0x00 ; '.'
000000000000272e         db  0x00 ; '.'
000000000000272f         db  0x00 ; '.'
0000000000002730         db  0x40 ; '@'
0000000000002731         db  0x02 ; '.'
0000000000002732         db  0x22 ; '"'
0000000000002733         db  0x00 ; '.'
0000000000002734         db  0x00 ; '.'
0000000000002735         db  0x00 ; '.'
0000000000002736         db  0x00 ; '.'
0000000000002737         db  0x00 ; '.'
0000000000002738         db  0x08 ; '.'
0000000000002739         db  0x00 ; '.'
000000000000273a         db  0x00 ; '.'
000000000000273b         db  0x00 ; '.'
000000000000273c         db  0x00 ; '.'
000000000000273d         db  0x00 ; '.'
000000000000273e         db  0x00 ; '.'
000000000000273f         db  0x00 ; '.'
0000000000002740         db  0x50 ; 'P'
0000000000002741         db  0x02 ; '.'
0000000000002742         db  0x22 ; '"'
0000000000002743         db  0x00 ; '.'
0000000000002744         db  0x00 ; '.'
0000000000002745         db  0x00 ; '.'
0000000000002746         db  0x00 ; '.'
0000000000002747         db  0x00 ; '.'
0000000000002748         db  0x58 ; 'X'
0000000000002749         db  0x02 ; '.'
000000000000274a         db  0x22 ; '"'
000000000000274b         db  0x00 ; '.'
000000000000274c         db  0x00 ; '.'
000000000000274d         db  0x00 ; '.'
000000000000274e         db  0x00 ; '.'
000000000000274f         db  0x00 ; '.'
0000000000002750         db  0x08 ; '.'
0000000000002751         db  0x00 ; '.'
0000000000002752         db  0x00 ; '.'
0000000000002753         db  0x00 ; '.'
0000000000002754         db  0x00 ; '.'
0000000000002755         db  0x00 ; '.'
0000000000002756         db  0x00 ; '.'
0000000000002757         db  0x00 ; '.'
0000000000002758         db  0x20 ; ' '
0000000000002759         db  0x14 ; '.'
000000000000275a         db  0x22 ; '"'
000000000000275b         db  0x00 ; '.'
000000000000275c         db  0x00 ; '.'
000000000000275d         db  0x00 ; '.'
000000000000275e         db  0x00 ; '.'
000000000000275f         db  0x00 ; '.'
0000000000002760         db  0x60 ; '`'
0000000000002761         db  0x02 ; '.'
0000000000002762         db  0x22 ; '"'
0000000000002763         db  0x00 ; '.'
0000000000002764         db  0x00 ; '.'
0000000000002765         db  0x00 ; '.'
0000000000002766         db  0x00 ; '.'
0000000000002767         db  0x00 ; '.'
0000000000002768         db  0x08 ; '.'
0000000000002769         db  0x00 ; '.'
000000000000276a         db  0x00 ; '.'
000000000000276b         db  0x00 ; '.'
000000000000276c         db  0x00 ; '.'
000000000000276d         db  0x00 ; '.'
000000000000276e         db  0x00 ; '.'
000000000000276f         db  0x00 ; '.'
0000000000002770         db  0xe0 ; '.'
0000000000002771         db  0x53 ; 'S'
0000000000002772         db  0x01 ; '.'
0000000000002773         db  0x00 ; '.'
0000000000002774         db  0x00 ; '.'
0000000000002775         db  0x00 ; '.'
0000000000002776         db  0x00 ; '.'
0000000000002777         db  0x00 ; '.'
0000000000002778         db  0xc0 ; '.'
0000000000002779         db  0xff ; '.'
000000000000277a         db  0x21 ; '!'
000000000000277b         db  0x00 ; '.'
000000000000277c         db  0x00 ; '.'
000000000000277d         db  0x00 ; '.'
000000000000277e         db  0x00 ; '.'
000000000000277f         db  0x00 ; '.'
0000000000002780         db  0x06 ; '.'
0000000000002781         db  0x00 ; '.'
0000000000002782         db  0x00 ; '.'
0000000000002783         db  0x00 ; '.'
0000000000002784         db  0x06 ; '.'
0000000000002785         db  0x00 ; '.'
0000000000002786         db  0x00 ; '.'
0000000000002787         db  0x00 ; '.'
0000000000002788         db  0x00 ; '.'
0000000000002789         db  0x00 ; '.'
000000000000278a         db  0x00 ; '.'
000000000000278b         db  0x00 ; '.'
000000000000278c         db  0x00 ; '.'
000000000000278d         db  0x00 ; '.'
000000000000278e         db  0x00 ; '.'
000000000000278f         db  0x00 ; '.'
0000000000002790         db  0xc8 ; '.'
0000000000002791         db  0xff ; '.'
0000000000002792         db  0x21 ; '!'
0000000000002793         db  0x00 ; '.'
0000000000002794         db  0x00 ; '.'
0000000000002795         db  0x00 ; '.'
0000000000002796         db  0x00 ; '.'
0000000000002797         db  0x00 ; '.'
0000000000002798         db  0x06 ; '.'
0000000000002799         db  0x00 ; '.'
000000000000279a         db  0x00 ; '.'
000000000000279b         db  0x00 ; '.'
000000000000279c         db  0x0a ; '.'
000000000000279d         db  0x00 ; '.'
000000000000279e         db  0x00 ; '.'
000000000000279f         db  0x00 ; '.'
00000000000027a0         db  0x00 ; '.'
00000000000027a1         db  0x00 ; '.'
00000000000027a2         db  0x00 ; '.'
00000000000027a3         db  0x00 ; '.'
00000000000027a4         db  0x00 ; '.'
00000000000027a5         db  0x00 ; '.'
00000000000027a6         db  0x00 ; '.'
00000000000027a7         db  0x00 ; '.'
00000000000027a8         db  0xd0 ; '.'
00000000000027a9         db  0xff ; '.'
00000000000027aa         db  0x21 ; '!'
00000000000027ab         db  0x00 ; '.'
00000000000027ac         db  0x00 ; '.'
00000000000027ad         db  0x00 ; '.'
00000000000027ae         db  0x00 ; '.'
00000000000027af         db  0x00 ; '.'
00000000000027b0         db  0x06 ; '.'
00000000000027b1         db  0x00 ; '.'
00000000000027b2         db  0x00 ; '.'
00000000000027b3         db  0x00 ; '.'
00000000000027b4         db  0x34 ; '4'
00000000000027b5         db  0x00 ; '.'
00000000000027b6         db  0x00 ; '.'
00000000000027b7         db  0x00 ; '.'
00000000000027b8         db  0x00 ; '.'
00000000000027b9         db  0x00 ; '.'
00000000000027ba         db  0x00 ; '.'
00000000000027bb         db  0x00 ; '.'
00000000000027bc         db  0x00 ; '.'
00000000000027bd         db  0x00 ; '.'
00000000000027be         db  0x00 ; '.'
00000000000027bf         db  0x00 ; '.'
00000000000027c0         db  0xd8 ; '.'
00000000000027c1         db  0xff ; '.'
00000000000027c2         db  0x21 ; '!'
00000000000027c3         db  0x00 ; '.'
00000000000027c4         db  0x00 ; '.'
00000000000027c5         db  0x00 ; '.'
00000000000027c6         db  0x00 ; '.'
00000000000027c7         db  0x00 ; '.'
00000000000027c8         db  0x06 ; '.'
00000000000027c9         db  0x00 ; '.'
00000000000027ca         db  0x00 ; '.'
00000000000027cb         db  0x00 ; '.'
00000000000027cc         db  0x3f ; '?'
00000000000027cd         db  0x00 ; '.'
00000000000027ce         db  0x00 ; '.'
00000000000027cf         db  0x00 ; '.'
00000000000027d0         db  0x00 ; '.'
00000000000027d1         db  0x00 ; '.'
00000000000027d2         db  0x00 ; '.'
00000000000027d3         db  0x00 ; '.'
00000000000027d4         db  0x00 ; '.'
00000000000027d5         db  0x00 ; '.'
00000000000027d6         db  0x00 ; '.'
00000000000027d7         db  0x00 ; '.'
00000000000027d8         db  0xe0 ; '.'
00000000000027d9         db  0xff ; '.'
00000000000027da         db  0x21 ; '!'
00000000000027db         db  0x00 ; '.'
00000000000027dc         db  0x00 ; '.'
00000000000027dd         db  0x00 ; '.'
00000000000027de         db  0x00 ; '.'
00000000000027df         db  0x00 ; '.'
00000000000027e0         db  0x06 ; '.'
00000000000027e1         db  0x00 ; '.'
00000000000027e2         db  0x00 ; '.'
00000000000027e3         db  0x00 ; '.'
00000000000027e4         db  0x48 ; 'H'
00000000000027e5         db  0x00 ; '.'
00000000000027e6         db  0x00 ; '.'
00000000000027e7         db  0x00 ; '.'
00000000000027e8         db  0x00 ; '.'
00000000000027e9         db  0x00 ; '.'
00000000000027ea         db  0x00 ; '.'
00000000000027eb         db  0x00 ; '.'
00000000000027ec         db  0x00 ; '.'
00000000000027ed         db  0x00 ; '.'
00000000000027ee         db  0x00 ; '.'
00000000000027ef         db  0x00 ; '.'
00000000000027f0         db  0xe8 ; '.'
00000000000027f1         db  0xff ; '.'
00000000000027f2         db  0x21 ; '!'
00000000000027f3         db  0x00 ; '.'
00000000000027f4         db  0x00 ; '.'
00000000000027f5         db  0x00 ; '.'
00000000000027f6         db  0x00 ; '.'
00000000000027f7         db  0x00 ; '.'
00000000000027f8         db  0x06 ; '.'
00000000000027f9         db  0x00 ; '.'
00000000000027fa         db  0x00 ; '.'
00000000000027fb         db  0x00 ; '.'
00000000000027fc         db  0x63 ; 'c'
00000000000027fd         db  0x00 ; '.'
00000000000027fe         db  0x00 ; '.'
00000000000027ff         db  0x00 ; '.'
0000000000002800         db  0x00 ; '.'
0000000000002801         db  0x00 ; '.'
0000000000002802         db  0x00 ; '.'
0000000000002803         db  0x00 ; '.'
0000000000002804         db  0x00 ; '.'
0000000000002805         db  0x00 ; '.'
0000000000002806         db  0x00 ; '.'
0000000000002807         db  0x00 ; '.'
0000000000002808         db  0xf0 ; '.'
0000000000002809         db  0xff ; '.'
000000000000280a         db  0x21 ; '!'
000000000000280b         db  0x00 ; '.'
000000000000280c         db  0x00 ; '.'
000000000000280d         db  0x00 ; '.'
000000000000280e         db  0x00 ; '.'
000000000000280f         db  0x00 ; '.'
0000000000002810         db  0x06 ; '.'
0000000000002811         db  0x00 ; '.'
0000000000002812         db  0x00 ; '.'
0000000000002813         db  0x00 ; '.'
0000000000002814         db  0x67 ; 'g'
0000000000002815         db  0x00 ; '.'
0000000000002816         db  0x00 ; '.'
0000000000002817         db  0x00 ; '.'
0000000000002818         db  0x00 ; '.'
0000000000002819         db  0x00 ; '.'
000000000000281a         db  0x00 ; '.'
000000000000281b         db  0x00 ; '.'
000000000000281c         db  0x00 ; '.'
000000000000281d         db  0x00 ; '.'
000000000000281e         db  0x00 ; '.'
000000000000281f         db  0x00 ; '.'
0000000000002820         db  0x80 ; '.'
0000000000002821         db  0x02 ; '.'
0000000000002822         db  0x22 ; '"'
0000000000002823         db  0x00 ; '.'
0000000000002824         db  0x00 ; '.'
0000000000002825         db  0x00 ; '.'
0000000000002826         db  0x00 ; '.'
0000000000002827         db  0x00 ; '.'
0000000000002828         db  0x05 ; '.'
0000000000002829         db  0x00 ; '.'
000000000000282a         db  0x00 ; '.'
000000000000282b         db  0x00 ; '.'
000000000000282c         db  0x71 ; 'q'
000000000000282d         db  0x00 ; '.'
000000000000282e         db  0x00 ; '.'
000000000000282f         db  0x00 ; '.'
0000000000002830         db  0x00 ; '.'
0000000000002831         db  0x00 ; '.'
0000000000002832         db  0x00 ; '.'
0000000000002833         db  0x00 ; '.'
0000000000002834         db  0x00 ; '.'
0000000000002835         db  0x00 ; '.'
0000000000002836         db  0x00 ; '.'
0000000000002837         db  0x00 ; '.'
0000000000002838         db  0x88 ; '.'
0000000000002839         db  0x02 ; '.'
000000000000283a         db  0x22 ; '"'
000000000000283b         db  0x00 ; '.'
000000000000283c         db  0x00 ; '.'
000000000000283d         db  0x00 ; '.'
000000000000283e         db  0x00 ; '.'
000000000000283f         db  0x00 ; '.'
0000000000002840         db  0x05 ; '.'
0000000000002841         db  0x00 ; '.'
0000000000002842         db  0x00 ; '.'
0000000000002843         db  0x00 ; '.'
0000000000002844         db  0x6e ; 'n'
0000000000002845         db  0x00 ; '.'
0000000000002846         db  0x00 ; '.'
0000000000002847         db  0x00 ; '.'
0000000000002848         db  0x00 ; '.'
0000000000002849         db  0x00 ; '.'
000000000000284a         db  0x00 ; '.'
000000000000284b         db  0x00 ; '.'
000000000000284c         db  0x00 ; '.'
000000000000284d         db  0x00 ; '.'
000000000000284e         db  0x00 ; '.'
000000000000284f         db  0x00 ; '.'
0000000000002850         db  0x90 ; '.'
0000000000002851         db  0x02 ; '.'
0000000000002852         db  0x22 ; '"'
0000000000002853         db  0x00 ; '.'
0000000000002854         db  0x00 ; '.'
0000000000002855         db  0x00 ; '.'
0000000000002856         db  0x00 ; '.'
0000000000002857         db  0x00 ; '.'
0000000000002858         db  0x05 ; '.'
0000000000002859         db  0x00 ; '.'
000000000000285a         db  0x00 ; '.'
000000000000285b         db  0x00 ; '.'
000000000000285c         db  0x78 ; 'x'
000000000000285d         db  0x00 ; '.'
000000000000285e         db  0x00 ; '.'
000000000000285f         db  0x00 ; '.'
0000000000002860         db  0x00 ; '.'
0000000000002861         db  0x00 ; '.'
0000000000002862         db  0x00 ; '.'
0000000000002863         db  0x00 ; '.'
0000000000002864         db  0x00 ; '.'
0000000000002865         db  0x00 ; '.'
0000000000002866         db  0x00 ; '.'
0000000000002867         db  0x00 ; '.'
0000000000002868         db  0x98 ; '.'
0000000000002869         db  0x02 ; '.'
000000000000286a         db  0x22 ; '"'
000000000000286b         db  0x00 ; '.'
000000000000286c         db  0x00 ; '.'
000000000000286d         db  0x00 ; '.'
000000000000286e         db  0x00 ; '.'
000000000000286f         db  0x00 ; '.'
0000000000002870         db  0x05 ; '.'
0000000000002871         db  0x00 ; '.'
0000000000002872         db  0x00 ; '.'
0000000000002873         db  0x00 ; '.'
0000000000002874         db  0x79 ; 'y'
0000000000002875         db  0x00 ; '.'
0000000000002876         db  0x00 ; '.'
0000000000002877         db  0x00 ; '.'
0000000000002878         db  0x00 ; '.'
0000000000002879         db  0x00 ; '.'
000000000000287a         db  0x00 ; '.'
000000000000287b         db  0x00 ; '.'
000000000000287c         db  0x00 ; '.'
000000000000287d         db  0x00 ; '.'
000000000000287e         db  0x00 ; '.'
000000000000287f         db  0x00 ; '.'
0000000000002880         db  0xa0 ; '.'
0000000000002881         db  0x02 ; '.'
0000000000002882         db  0x22 ; '"'
0000000000002883         db  0x00 ; '.'
0000000000002884         db  0x00 ; '.'
0000000000002885         db  0x00 ; '.'
0000000000002886         db  0x00 ; '.'
0000000000002887         db  0x00 ; '.'
0000000000002888         db  0x05 ; '.'
0000000000002889         db  0x00 ; '.'
000000000000288a         db  0x00 ; '.'
000000000000288b         db  0x00 ; '.'
000000000000288c         db  0x75 ; 'u'
000000000000288d         db  0x00 ; '.'
000000000000288e         db  0x00 ; '.'
000000000000288f         db  0x00 ; '.'
0000000000002890         db  0x00 ; '.'
0000000000002891         db  0x00 ; '.'
0000000000002892         db  0x00 ; '.'
0000000000002893         db  0x00 ; '.'
0000000000002894         db  0x00 ; '.'
0000000000002895         db  0x00 ; '.'
0000000000002896         db  0x00 ; '.'
0000000000002897         db  0x00 ; '.'
0000000000002898         db  0xc0 ; '.'
0000000000002899         db  0x02 ; '.'
000000000000289a         db  0x22 ; '"'
000000000000289b         db  0x00 ; '.'
000000000000289c         db  0x00 ; '.'
000000000000289d         db  0x00 ; '.'
000000000000289e         db  0x00 ; '.'
000000000000289f         db  0x00 ; '.'
00000000000028a0         db  0x05 ; '.'
00000000000028a1         db  0x00 ; '.'
00000000000028a2         db  0x00 ; '.'
00000000000028a3         db  0x00 ; '.'
00000000000028a4         db  0x77 ; 'w'
00000000000028a5         db  0x00 ; '.'
00000000000028a6         db  0x00 ; '.'
00000000000028a7         db  0x00 ; '.'
00000000000028a8         db  0x00 ; '.'
00000000000028a9         db  0x00 ; '.'
00000000000028aa         db  0x00 ; '.'
00000000000028ab         db  0x00 ; '.'
00000000000028ac         db  0x00 ; '.'
00000000000028ad         db  0x00 ; '.'
00000000000028ae         db  0x00 ; '.'
00000000000028af         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0x28b0; 0x3210[ (2400 bytes)
        ; File offset : [10416; 12816[ (2400 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

00000000000028b0         db  0xa0 ; '.'
00000000000028b1         db  0xfc ; '.'
00000000000028b2         db  0x21 ; '!'
00000000000028b3         db  0x00 ; '.'
00000000000028b4         db  0x00 ; '.'
00000000000028b5         db  0x00 ; '.'
00000000000028b6         db  0x00 ; '.'
00000000000028b7         db  0x00 ; '.'
00000000000028b8         db  0x07 ; '.'
00000000000028b9         db  0x00 ; '.'
00000000000028ba         db  0x00 ; '.'
00000000000028bb         db  0x00 ; '.'
00000000000028bc         db  0x01 ; '.'
00000000000028bd         db  0x00 ; '.'
00000000000028be         db  0x00 ; '.'
00000000000028bf         db  0x00 ; '.'
00000000000028c0         db  0x00 ; '.'
00000000000028c1         db  0x00 ; '.'
00000000000028c2         db  0x00 ; '.'
00000000000028c3         db  0x00 ; '.'
00000000000028c4         db  0x00 ; '.'
00000000000028c5         db  0x00 ; '.'
00000000000028c6         db  0x00 ; '.'
00000000000028c7         db  0x00 ; '.'
00000000000028c8         db  0xa8 ; '.'
00000000000028c9         db  0xfc ; '.'
00000000000028ca         db  0x21 ; '!'
00000000000028cb         db  0x00 ; '.'
00000000000028cc         db  0x00 ; '.'
00000000000028cd         db  0x00 ; '.'
00000000000028ce         db  0x00 ; '.'
00000000000028cf         db  0x00 ; '.'
00000000000028d0         db  0x07 ; '.'
00000000000028d1         db  0x00 ; '.'
00000000000028d2         db  0x00 ; '.'
00000000000028d3         db  0x00 ; '.'
00000000000028d4         db  0x02 ; '.'
00000000000028d5         db  0x00 ; '.'
00000000000028d6         db  0x00 ; '.'
00000000000028d7         db  0x00 ; '.'
00000000000028d8         db  0x00 ; '.'
00000000000028d9         db  0x00 ; '.'
00000000000028da         db  0x00 ; '.'
00000000000028db         db  0x00 ; '.'
00000000000028dc         db  0x00 ; '.'
00000000000028dd         db  0x00 ; '.'
00000000000028de         db  0x00 ; '.'
00000000000028df         db  0x00 ; '.'
00000000000028e0         db  0xb0 ; '.'
00000000000028e1         db  0xfc ; '.'
00000000000028e2         db  0x21 ; '!'
00000000000028e3         db  0x00 ; '.'
00000000000028e4         db  0x00 ; '.'
00000000000028e5         db  0x00 ; '.'
00000000000028e6         db  0x00 ; '.'
00000000000028e7         db  0x00 ; '.'
00000000000028e8         db  0x07 ; '.'
00000000000028e9         db  0x00 ; '.'
00000000000028ea         db  0x00 ; '.'
00000000000028eb         db  0x00 ; '.'
00000000000028ec         db  0x03 ; '.'
00000000000028ed         db  0x00 ; '.'
00000000000028ee         db  0x00 ; '.'
00000000000028ef         db  0x00 ; '.'
00000000000028f0         db  0x00 ; '.'
00000000000028f1         db  0x00 ; '.'
00000000000028f2         db  0x00 ; '.'
00000000000028f3         db  0x00 ; '.'
00000000000028f4         db  0x00 ; '.'
00000000000028f5         db  0x00 ; '.'
00000000000028f6         db  0x00 ; '.'
00000000000028f7         db  0x00 ; '.'
00000000000028f8         db  0xb8 ; '.'
00000000000028f9         db  0xfc ; '.'
00000000000028fa         db  0x21 ; '!'
00000000000028fb         db  0x00 ; '.'
00000000000028fc         db  0x00 ; '.'
00000000000028fd         db  0x00 ; '.'
00000000000028fe         db  0x00 ; '.'
00000000000028ff         db  0x00 ; '.'
0000000000002900         db  0x07 ; '.'
0000000000002901         db  0x00 ; '.'
0000000000002902         db  0x00 ; '.'
0000000000002903         db  0x00 ; '.'
0000000000002904         db  0x04 ; '.'
0000000000002905         db  0x00 ; '.'
0000000000002906         db  0x00 ; '.'
0000000000002907         db  0x00 ; '.'
0000000000002908         db  0x00 ; '.'
0000000000002909         db  0x00 ; '.'
000000000000290a         db  0x00 ; '.'
000000000000290b         db  0x00 ; '.'
000000000000290c         db  0x00 ; '.'
000000000000290d         db  0x00 ; '.'
000000000000290e         db  0x00 ; '.'
000000000000290f         db  0x00 ; '.'
0000000000002910         db  0xc0 ; '.'
0000000000002911         db  0xfc ; '.'
0000000000002912         db  0x21 ; '!'
0000000000002913         db  0x00 ; '.'
0000000000002914         db  0x00 ; '.'
0000000000002915         db  0x00 ; '.'
0000000000002916         db  0x00 ; '.'
0000000000002917         db  0x00 ; '.'
0000000000002918         db  0x07 ; '.'
0000000000002919         db  0x00 ; '.'
000000000000291a         db  0x00 ; '.'
000000000000291b         db  0x00 ; '.'
000000000000291c         db  0x05 ; '.'
000000000000291d         db  0x00 ; '.'
000000000000291e         db  0x00 ; '.'
000000000000291f         db  0x00 ; '.'
0000000000002920         db  0x00 ; '.'
0000000000002921         db  0x00 ; '.'
0000000000002922         db  0x00 ; '.'
0000000000002923         db  0x00 ; '.'
0000000000002924         db  0x00 ; '.'
0000000000002925         db  0x00 ; '.'
0000000000002926         db  0x00 ; '.'
0000000000002927         db  0x00 ; '.'
0000000000002928         db  0xc8 ; '.'
0000000000002929         db  0xfc ; '.'
000000000000292a         db  0x21 ; '!'
000000000000292b         db  0x00 ; '.'
000000000000292c         db  0x00 ; '.'
000000000000292d         db  0x00 ; '.'
000000000000292e         db  0x00 ; '.'
000000000000292f         db  0x00 ; '.'
0000000000002930         db  0x07 ; '.'
0000000000002931         db  0x00 ; '.'
0000000000002932         db  0x00 ; '.'
0000000000002933         db  0x00 ; '.'
0000000000002934         db  0x07 ; '.'
0000000000002935         db  0x00 ; '.'
0000000000002936         db  0x00 ; '.'
0000000000002937         db  0x00 ; '.'
0000000000002938         db  0x00 ; '.'
0000000000002939         db  0x00 ; '.'
000000000000293a         db  0x00 ; '.'
000000000000293b         db  0x00 ; '.'
000000000000293c         db  0x00 ; '.'
000000000000293d         db  0x00 ; '.'
000000000000293e         db  0x00 ; '.'
000000000000293f         db  0x00 ; '.'
0000000000002940         db  0xd0 ; '.'
0000000000002941         db  0xfc ; '.'
0000000000002942         db  0x21 ; '!'
0000000000002943         db  0x00 ; '.'
0000000000002944         db  0x00 ; '.'
0000000000002945         db  0x00 ; '.'
0000000000002946         db  0x00 ; '.'
0000000000002947         db  0x00 ; '.'
0000000000002948         db  0x07 ; '.'
0000000000002949         db  0x00 ; '.'
000000000000294a         db  0x00 ; '.'
000000000000294b         db  0x00 ; '.'
000000000000294c         db  0x08 ; '.'
000000000000294d         db  0x00 ; '.'
000000000000294e         db  0x00 ; '.'
000000000000294f         db  0x00 ; '.'
0000000000002950         db  0x00 ; '.'
0000000000002951         db  0x00 ; '.'
0000000000002952         db  0x00 ; '.'
0000000000002953         db  0x00 ; '.'
0000000000002954         db  0x00 ; '.'
0000000000002955         db  0x00 ; '.'
0000000000002956         db  0x00 ; '.'
0000000000002957         db  0x00 ; '.'
0000000000002958         db  0xd8 ; '.'
0000000000002959         db  0xfc ; '.'
000000000000295a         db  0x21 ; '!'
000000000000295b         db  0x00 ; '.'
000000000000295c         db  0x00 ; '.'
000000000000295d         db  0x00 ; '.'
000000000000295e         db  0x00 ; '.'
000000000000295f         db  0x00 ; '.'
0000000000002960         db  0x07 ; '.'
0000000000002961         db  0x00 ; '.'
0000000000002962         db  0x00 ; '.'
0000000000002963         db  0x00 ; '.'
0000000000002964         db  0x09 ; '.'
0000000000002965         db  0x00 ; '.'
0000000000002966         db  0x00 ; '.'
0000000000002967         db  0x00 ; '.'
0000000000002968         db  0x00 ; '.'
0000000000002969         db  0x00 ; '.'
000000000000296a         db  0x00 ; '.'
000000000000296b         db  0x00 ; '.'
000000000000296c         db  0x00 ; '.'
000000000000296d         db  0x00 ; '.'
000000000000296e         db  0x00 ; '.'
000000000000296f         db  0x00 ; '.'
0000000000002970         db  0xe0 ; '.'
0000000000002971         db  0xfc ; '.'
0000000000002972         db  0x21 ; '!'
0000000000002973         db  0x00 ; '.'
0000000000002974         db  0x00 ; '.'
0000000000002975         db  0x00 ; '.'
0000000000002976         db  0x00 ; '.'
0000000000002977         db  0x00 ; '.'
0000000000002978         db  0x07 ; '.'
0000000000002979         db  0x00 ; '.'
000000000000297a         db  0x00 ; '.'
000000000000297b         db  0x00 ; '.'
000000000000297c         db  0x0b ; '.'
000000000000297d         db  0x00 ; '.'
000000000000297e         db  0x00 ; '.'
000000000000297f         db  0x00 ; '.'
0000000000002980         db  0x00 ; '.'
0000000000002981         db  0x00 ; '.'
0000000000002982         db  0x00 ; '.'
0000000000002983         db  0x00 ; '.'
0000000000002984         db  0x00 ; '.'
0000000000002985         db  0x00 ; '.'
0000000000002986         db  0x00 ; '.'
0000000000002987         db  0x00 ; '.'
0000000000002988         db  0xe8 ; '.'
0000000000002989         db  0xfc ; '.'
000000000000298a         db  0x21 ; '!'
000000000000298b         db  0x00 ; '.'
000000000000298c         db  0x00 ; '.'
000000000000298d         db  0x00 ; '.'
000000000000298e         db  0x00 ; '.'
000000000000298f         db  0x00 ; '.'
0000000000002990         db  0x07 ; '.'
0000000000002991         db  0x00 ; '.'
0000000000002992         db  0x00 ; '.'
0000000000002993         db  0x00 ; '.'
0000000000002994         db  0x0c ; '.'
0000000000002995         db  0x00 ; '.'
0000000000002996         db  0x00 ; '.'
0000000000002997         db  0x00 ; '.'
0000000000002998         db  0x00 ; '.'
0000000000002999         db  0x00 ; '.'
000000000000299a         db  0x00 ; '.'
000000000000299b         db  0x00 ; '.'
000000000000299c         db  0x00 ; '.'
000000000000299d         db  0x00 ; '.'
000000000000299e         db  0x00 ; '.'
000000000000299f         db  0x00 ; '.'
00000000000029a0         db  0xf0 ; '.'
00000000000029a1         db  0xfc ; '.'
00000000000029a2         db  0x21 ; '!'
00000000000029a3         db  0x00 ; '.'
00000000000029a4         db  0x00 ; '.'
00000000000029a5         db  0x00 ; '.'
00000000000029a6         db  0x00 ; '.'
00000000000029a7         db  0x00 ; '.'
00000000000029a8         db  0x07 ; '.'
00000000000029a9         db  0x00 ; '.'
00000000000029aa         db  0x00 ; '.'
00000000000029ab         db  0x00 ; '.'
00000000000029ac         db  0x0d ; '.'
00000000000029ad         db  0x00 ; '.'
00000000000029ae         db  0x00 ; '.'
00000000000029af         db  0x00 ; '.'
00000000000029b0         db  0x00 ; '.'
00000000000029b1         db  0x00 ; '.'
00000000000029b2         db  0x00 ; '.'
00000000000029b3         db  0x00 ; '.'
00000000000029b4         db  0x00 ; '.'
00000000000029b5         db  0x00 ; '.'
00000000000029b6         db  0x00 ; '.'
00000000000029b7         db  0x00 ; '.'
00000000000029b8         db  0xf8 ; '.'
00000000000029b9         db  0xfc ; '.'
00000000000029ba         db  0x21 ; '!'
00000000000029bb         db  0x00 ; '.'
00000000000029bc         db  0x00 ; '.'
00000000000029bd         db  0x00 ; '.'
00000000000029be         db  0x00 ; '.'
00000000000029bf         db  0x00 ; '.'
00000000000029c0         db  0x07 ; '.'
00000000000029c1         db  0x00 ; '.'
00000000000029c2         db  0x00 ; '.'
00000000000029c3         db  0x00 ; '.'
00000000000029c4         db  0x0e ; '.'
00000000000029c5         db  0x00 ; '.'
00000000000029c6         db  0x00 ; '.'
00000000000029c7         db  0x00 ; '.'
00000000000029c8         db  0x00 ; '.'
00000000000029c9         db  0x00 ; '.'
00000000000029ca         db  0x00 ; '.'
00000000000029cb         db  0x00 ; '.'
00000000000029cc         db  0x00 ; '.'
00000000000029cd         db  0x00 ; '.'
00000000000029ce         db  0x00 ; '.'
00000000000029cf         db  0x00 ; '.'
00000000000029d0         db  0x00 ; '.'
00000000000029d1         db  0xfd ; '.'
00000000000029d2         db  0x21 ; '!'
00000000000029d3         db  0x00 ; '.'
00000000000029d4         db  0x00 ; '.'
00000000000029d5         db  0x00 ; '.'
00000000000029d6         db  0x00 ; '.'
00000000000029d7         db  0x00 ; '.'
00000000000029d8         db  0x07 ; '.'
00000000000029d9         db  0x00 ; '.'
00000000000029da         db  0x00 ; '.'
00000000000029db         db  0x00 ; '.'
00000000000029dc         db  0x0f ; '.'
00000000000029dd         db  0x00 ; '.'
00000000000029de         db  0x00 ; '.'
00000000000029df         db  0x00 ; '.'
00000000000029e0         db  0x00 ; '.'
00000000000029e1         db  0x00 ; '.'
00000000000029e2         db  0x00 ; '.'
00000000000029e3         db  0x00 ; '.'
00000000000029e4         db  0x00 ; '.'
00000000000029e5         db  0x00 ; '.'
00000000000029e6         db  0x00 ; '.'
00000000000029e7         db  0x00 ; '.'
00000000000029e8         db  0x08 ; '.'
00000000000029e9         db  0xfd ; '.'
00000000000029ea         db  0x21 ; '!'
00000000000029eb         db  0x00 ; '.'
00000000000029ec         db  0x00 ; '.'
00000000000029ed         db  0x00 ; '.'
00000000000029ee         db  0x00 ; '.'
00000000000029ef         db  0x00 ; '.'
00000000000029f0         db  0x07 ; '.'
00000000000029f1         db  0x00 ; '.'
00000000000029f2         db  0x00 ; '.'
00000000000029f3         db  0x00 ; '.'
00000000000029f4         db  0x10 ; '.'
00000000000029f5         db  0x00 ; '.'
00000000000029f6         db  0x00 ; '.'
00000000000029f7         db  0x00 ; '.'
00000000000029f8         db  0x00 ; '.'
00000000000029f9         db  0x00 ; '.'
00000000000029fa         db  0x00 ; '.'
00000000000029fb         db  0x00 ; '.'
00000000000029fc         db  0x00 ; '.'
00000000000029fd         db  0x00 ; '.'
00000000000029fe         db  0x00 ; '.'
00000000000029ff         db  0x00 ; '.'
0000000000002a00         db  0x10 ; '.'
0000000000002a01         db  0xfd ; '.'
0000000000002a02         db  0x21 ; '!'
0000000000002a03         db  0x00 ; '.'
0000000000002a04         db  0x00 ; '.'
0000000000002a05         db  0x00 ; '.'
0000000000002a06         db  0x00 ; '.'
0000000000002a07         db  0x00 ; '.'
0000000000002a08         db  0x07 ; '.'
0000000000002a09         db  0x00 ; '.'
0000000000002a0a         db  0x00 ; '.'
0000000000002a0b         db  0x00 ; '.'
0000000000002a0c         db  0x11 ; '.'
0000000000002a0d         db  0x00 ; '.'
0000000000002a0e         db  0x00 ; '.'
0000000000002a0f         db  0x00 ; '.'
0000000000002a10         db  0x00 ; '.'
0000000000002a11         db  0x00 ; '.'
0000000000002a12         db  0x00 ; '.'
0000000000002a13         db  0x00 ; '.'
0000000000002a14         db  0x00 ; '.'
0000000000002a15         db  0x00 ; '.'
0000000000002a16         db  0x00 ; '.'
0000000000002a17         db  0x00 ; '.'
0000000000002a18         db  0x18 ; '.'
0000000000002a19         db  0xfd ; '.'
0000000000002a1a         db  0x21 ; '!'
0000000000002a1b         db  0x00 ; '.'
0000000000002a1c         db  0x00 ; '.'
0000000000002a1d         db  0x00 ; '.'
0000000000002a1e         db  0x00 ; '.'
0000000000002a1f         db  0x00 ; '.'
0000000000002a20         db  0x07 ; '.'
0000000000002a21         db  0x00 ; '.'
0000000000002a22         db  0x00 ; '.'
0000000000002a23         db  0x00 ; '.'
0000000000002a24         db  0x12 ; '.'
0000000000002a25         db  0x00 ; '.'
0000000000002a26         db  0x00 ; '.'
0000000000002a27         db  0x00 ; '.'
0000000000002a28         db  0x00 ; '.'
0000000000002a29         db  0x00 ; '.'
0000000000002a2a         db  0x00 ; '.'
0000000000002a2b         db  0x00 ; '.'
0000000000002a2c         db  0x00 ; '.'
0000000000002a2d         db  0x00 ; '.'
0000000000002a2e         db  0x00 ; '.'
0000000000002a2f         db  0x00 ; '.'
0000000000002a30         db  0x20 ; ' '
0000000000002a31         db  0xfd ; '.'
0000000000002a32         db  0x21 ; '!'
0000000000002a33         db  0x00 ; '.'
0000000000002a34         db  0x00 ; '.'
0000000000002a35         db  0x00 ; '.'
0000000000002a36         db  0x00 ; '.'
0000000000002a37         db  0x00 ; '.'
0000000000002a38         db  0x07 ; '.'
0000000000002a39         db  0x00 ; '.'
0000000000002a3a         db  0x00 ; '.'
0000000000002a3b         db  0x00 ; '.'
0000000000002a3c         db  0x13 ; '.'
0000000000002a3d         db  0x00 ; '.'
0000000000002a3e         db  0x00 ; '.'
0000000000002a3f         db  0x00 ; '.'
0000000000002a40         db  0x00 ; '.'
0000000000002a41         db  0x00 ; '.'
0000000000002a42         db  0x00 ; '.'
0000000000002a43         db  0x00 ; '.'
0000000000002a44         db  0x00 ; '.'
0000000000002a45         db  0x00 ; '.'
0000000000002a46         db  0x00 ; '.'
0000000000002a47         db  0x00 ; '.'
0000000000002a48         db  0x28 ; '('
0000000000002a49         db  0xfd ; '.'
0000000000002a4a         db  0x21 ; '!'
0000000000002a4b         db  0x00 ; '.'
0000000000002a4c         db  0x00 ; '.'
0000000000002a4d         db  0x00 ; '.'
0000000000002a4e         db  0x00 ; '.'
0000000000002a4f         db  0x00 ; '.'
0000000000002a50         db  0x07 ; '.'
0000000000002a51         db  0x00 ; '.'
0000000000002a52         db  0x00 ; '.'
0000000000002a53         db  0x00 ; '.'
0000000000002a54         db  0x14 ; '.'
0000000000002a55         db  0x00 ; '.'
0000000000002a56         db  0x00 ; '.'
0000000000002a57         db  0x00 ; '.'
0000000000002a58         db  0x00 ; '.'
0000000000002a59         db  0x00 ; '.'
0000000000002a5a         db  0x00 ; '.'
0000000000002a5b         db  0x00 ; '.'
0000000000002a5c         db  0x00 ; '.'
0000000000002a5d         db  0x00 ; '.'
0000000000002a5e         db  0x00 ; '.'
0000000000002a5f         db  0x00 ; '.'
0000000000002a60         db  0x30 ; '0'
0000000000002a61         db  0xfd ; '.'
0000000000002a62         db  0x21 ; '!'
0000000000002a63         db  0x00 ; '.'
0000000000002a64         db  0x00 ; '.'
0000000000002a65         db  0x00 ; '.'
0000000000002a66         db  0x00 ; '.'
0000000000002a67         db  0x00 ; '.'
0000000000002a68         db  0x07 ; '.'
0000000000002a69         db  0x00 ; '.'
0000000000002a6a         db  0x00 ; '.'
0000000000002a6b         db  0x00 ; '.'
0000000000002a6c         db  0x15 ; '.'
0000000000002a6d         db  0x00 ; '.'
0000000000002a6e         db  0x00 ; '.'
0000000000002a6f         db  0x00 ; '.'
0000000000002a70         db  0x00 ; '.'
0000000000002a71         db  0x00 ; '.'
0000000000002a72         db  0x00 ; '.'
0000000000002a73         db  0x00 ; '.'
0000000000002a74         db  0x00 ; '.'
0000000000002a75         db  0x00 ; '.'
0000000000002a76         db  0x00 ; '.'
0000000000002a77         db  0x00 ; '.'
0000000000002a78         db  0x38 ; '8'
0000000000002a79         db  0xfd ; '.'
0000000000002a7a         db  0x21 ; '!'
0000000000002a7b         db  0x00 ; '.'
0000000000002a7c         db  0x00 ; '.'
0000000000002a7d         db  0x00 ; '.'
0000000000002a7e         db  0x00 ; '.'
0000000000002a7f         db  0x00 ; '.'
0000000000002a80         db  0x07 ; '.'
0000000000002a81         db  0x00 ; '.'
0000000000002a82         db  0x00 ; '.'
0000000000002a83         db  0x00 ; '.'
0000000000002a84         db  0x16 ; '.'
0000000000002a85         db  0x00 ; '.'
0000000000002a86         db  0x00 ; '.'
0000000000002a87         db  0x00 ; '.'
0000000000002a88         db  0x00 ; '.'
0000000000002a89         db  0x00 ; '.'
0000000000002a8a         db  0x00 ; '.'
0000000000002a8b         db  0x00 ; '.'
0000000000002a8c         db  0x00 ; '.'
0000000000002a8d         db  0x00 ; '.'
0000000000002a8e         db  0x00 ; '.'
0000000000002a8f         db  0x00 ; '.'
0000000000002a90         db  0x40 ; '@'
0000000000002a91         db  0xfd ; '.'
0000000000002a92         db  0x21 ; '!'
0000000000002a93         db  0x00 ; '.'
0000000000002a94         db  0x00 ; '.'
0000000000002a95         db  0x00 ; '.'
0000000000002a96         db  0x00 ; '.'
0000000000002a97         db  0x00 ; '.'
0000000000002a98         db  0x07 ; '.'
0000000000002a99         db  0x00 ; '.'
0000000000002a9a         db  0x00 ; '.'
0000000000002a9b         db  0x00 ; '.'
0000000000002a9c         db  0x17 ; '.'
0000000000002a9d         db  0x00 ; '.'
0000000000002a9e         db  0x00 ; '.'
0000000000002a9f         db  0x00 ; '.'
0000000000002aa0         db  0x00 ; '.'
0000000000002aa1         db  0x00 ; '.'
0000000000002aa2         db  0x00 ; '.'
0000000000002aa3         db  0x00 ; '.'
0000000000002aa4         db  0x00 ; '.'
0000000000002aa5         db  0x00 ; '.'
0000000000002aa6         db  0x00 ; '.'
0000000000002aa7         db  0x00 ; '.'
0000000000002aa8         db  0x48 ; 'H'
0000000000002aa9         db  0xfd ; '.'
0000000000002aaa         db  0x21 ; '!'
0000000000002aab         db  0x00 ; '.'
0000000000002aac         db  0x00 ; '.'
0000000000002aad         db  0x00 ; '.'
0000000000002aae         db  0x00 ; '.'
0000000000002aaf         db  0x00 ; '.'
0000000000002ab0         db  0x07 ; '.'
0000000000002ab1         db  0x00 ; '.'
0000000000002ab2         db  0x00 ; '.'
0000000000002ab3         db  0x00 ; '.'
0000000000002ab4         db  0x18 ; '.'
0000000000002ab5         db  0x00 ; '.'
0000000000002ab6         db  0x00 ; '.'
0000000000002ab7         db  0x00 ; '.'
0000000000002ab8         db  0x00 ; '.'
0000000000002ab9         db  0x00 ; '.'
0000000000002aba         db  0x00 ; '.'
0000000000002abb         db  0x00 ; '.'
0000000000002abc         db  0x00 ; '.'
0000000000002abd         db  0x00 ; '.'
0000000000002abe         db  0x00 ; '.'
0000000000002abf         db  0x00 ; '.'
0000000000002ac0         db  0x50 ; 'P'
0000000000002ac1         db  0xfd ; '.'
0000000000002ac2         db  0x21 ; '!'
0000000000002ac3         db  0x00 ; '.'
0000000000002ac4         db  0x00 ; '.'
0000000000002ac5         db  0x00 ; '.'
0000000000002ac6         db  0x00 ; '.'
0000000000002ac7         db  0x00 ; '.'
0000000000002ac8         db  0x07 ; '.'
0000000000002ac9         db  0x00 ; '.'
0000000000002aca         db  0x00 ; '.'
0000000000002acb         db  0x00 ; '.'
0000000000002acc         db  0x19 ; '.'
0000000000002acd         db  0x00 ; '.'
0000000000002ace         db  0x00 ; '.'
0000000000002acf         db  0x00 ; '.'
0000000000002ad0         db  0x00 ; '.'
0000000000002ad1         db  0x00 ; '.'
0000000000002ad2         db  0x00 ; '.'
0000000000002ad3         db  0x00 ; '.'
0000000000002ad4         db  0x00 ; '.'
0000000000002ad5         db  0x00 ; '.'
0000000000002ad6         db  0x00 ; '.'
0000000000002ad7         db  0x00 ; '.'
0000000000002ad8         db  0x58 ; 'X'
0000000000002ad9         db  0xfd ; '.'
0000000000002ada         db  0x21 ; '!'
0000000000002adb         db  0x00 ; '.'
0000000000002adc         db  0x00 ; '.'
0000000000002add         db  0x00 ; '.'
0000000000002ade         db  0x00 ; '.'
0000000000002adf         db  0x00 ; '.'
0000000000002ae0         db  0x07 ; '.'
0000000000002ae1         db  0x00 ; '.'
0000000000002ae2         db  0x00 ; '.'
0000000000002ae3         db  0x00 ; '.'
0000000000002ae4         db  0x1a ; '.'
0000000000002ae5         db  0x00 ; '.'
0000000000002ae6         db  0x00 ; '.'
0000000000002ae7         db  0x00 ; '.'
0000000000002ae8         db  0x00 ; '.'
0000000000002ae9         db  0x00 ; '.'
0000000000002aea         db  0x00 ; '.'
0000000000002aeb         db  0x00 ; '.'
0000000000002aec         db  0x00 ; '.'
0000000000002aed         db  0x00 ; '.'
0000000000002aee         db  0x00 ; '.'
0000000000002aef         db  0x00 ; '.'
0000000000002af0         db  0x60 ; '`'
0000000000002af1         db  0xfd ; '.'
0000000000002af2         db  0x21 ; '!'
0000000000002af3         db  0x00 ; '.'
0000000000002af4         db  0x00 ; '.'
0000000000002af5         db  0x00 ; '.'
0000000000002af6         db  0x00 ; '.'
0000000000002af7         db  0x00 ; '.'
0000000000002af8         db  0x07 ; '.'
0000000000002af9         db  0x00 ; '.'
0000000000002afa         db  0x00 ; '.'
0000000000002afb         db  0x00 ; '.'
0000000000002afc         db  0x1b ; '.'
0000000000002afd         db  0x00 ; '.'
0000000000002afe         db  0x00 ; '.'
0000000000002aff         db  0x00 ; '.'
0000000000002b00         db  0x00 ; '.'
0000000000002b01         db  0x00 ; '.'
0000000000002b02         db  0x00 ; '.'
0000000000002b03         db  0x00 ; '.'
0000000000002b04         db  0x00 ; '.'
0000000000002b05         db  0x00 ; '.'
0000000000002b06         db  0x00 ; '.'
0000000000002b07         db  0x00 ; '.'
0000000000002b08         db  0x68 ; 'h'
0000000000002b09         db  0xfd ; '.'
0000000000002b0a         db  0x21 ; '!'
0000000000002b0b         db  0x00 ; '.'
0000000000002b0c         db  0x00 ; '.'
0000000000002b0d         db  0x00 ; '.'
0000000000002b0e         db  0x00 ; '.'
0000000000002b0f         db  0x00 ; '.'
0000000000002b10         db  0x07 ; '.'
0000000000002b11         db  0x00 ; '.'
0000000000002b12         db  0x00 ; '.'
0000000000002b13         db  0x00 ; '.'
0000000000002b14         db  0x1c ; '.'
0000000000002b15         db  0x00 ; '.'
0000000000002b16         db  0x00 ; '.'
0000000000002b17         db  0x00 ; '.'
0000000000002b18         db  0x00 ; '.'
0000000000002b19         db  0x00 ; '.'
0000000000002b1a         db  0x00 ; '.'
0000000000002b1b         db  0x00 ; '.'
0000000000002b1c         db  0x00 ; '.'
0000000000002b1d         db  0x00 ; '.'
0000000000002b1e         db  0x00 ; '.'
0000000000002b1f         db  0x00 ; '.'
0000000000002b20         db  0x70 ; 'p'
0000000000002b21         db  0xfd ; '.'
0000000000002b22         db  0x21 ; '!'
0000000000002b23         db  0x00 ; '.'
0000000000002b24         db  0x00 ; '.'
0000000000002b25         db  0x00 ; '.'
0000000000002b26         db  0x00 ; '.'
0000000000002b27         db  0x00 ; '.'
0000000000002b28         db  0x07 ; '.'
0000000000002b29         db  0x00 ; '.'
0000000000002b2a         db  0x00 ; '.'
0000000000002b2b         db  0x00 ; '.'
0000000000002b2c         db  0x1d ; '.'
0000000000002b2d         db  0x00 ; '.'
0000000000002b2e         db  0x00 ; '.'
0000000000002b2f         db  0x00 ; '.'
0000000000002b30         db  0x00 ; '.'
0000000000002b31         db  0x00 ; '.'
0000000000002b32         db  0x00 ; '.'
0000000000002b33         db  0x00 ; '.'
0000000000002b34         db  0x00 ; '.'
0000000000002b35         db  0x00 ; '.'
0000000000002b36         db  0x00 ; '.'
0000000000002b37         db  0x00 ; '.'
0000000000002b38         db  0x78 ; 'x'
0000000000002b39         db  0xfd ; '.'
0000000000002b3a         db  0x21 ; '!'
0000000000002b3b         db  0x00 ; '.'
0000000000002b3c         db  0x00 ; '.'
0000000000002b3d         db  0x00 ; '.'
0000000000002b3e         db  0x00 ; '.'
0000000000002b3f         db  0x00 ; '.'
0000000000002b40         db  0x07 ; '.'
0000000000002b41         db  0x00 ; '.'
0000000000002b42         db  0x00 ; '.'
0000000000002b43         db  0x00 ; '.'
0000000000002b44         db  0x1e ; '.'
0000000000002b45         db  0x00 ; '.'
0000000000002b46         db  0x00 ; '.'
0000000000002b47         db  0x00 ; '.'
0000000000002b48         db  0x00 ; '.'
0000000000002b49         db  0x00 ; '.'
0000000000002b4a         db  0x00 ; '.'
0000000000002b4b         db  0x00 ; '.'
0000000000002b4c         db  0x00 ; '.'
0000000000002b4d         db  0x00 ; '.'
0000000000002b4e         db  0x00 ; '.'
0000000000002b4f         db  0x00 ; '.'
0000000000002b50         db  0x80 ; '.'
0000000000002b51         db  0xfd ; '.'
0000000000002b52         db  0x21 ; '!'
0000000000002b53         db  0x00 ; '.'
0000000000002b54         db  0x00 ; '.'
0000000000002b55         db  0x00 ; '.'
0000000000002b56         db  0x00 ; '.'
0000000000002b57         db  0x00 ; '.'
0000000000002b58         db  0x07 ; '.'
0000000000002b59         db  0x00 ; '.'
0000000000002b5a         db  0x00 ; '.'
0000000000002b5b         db  0x00 ; '.'
0000000000002b5c         db  0x1f ; '.'
0000000000002b5d         db  0x00 ; '.'
0000000000002b5e         db  0x00 ; '.'
0000000000002b5f         db  0x00 ; '.'
0000000000002b60         db  0x00 ; '.'
0000000000002b61         db  0x00 ; '.'
0000000000002b62         db  0x00 ; '.'
0000000000002b63         db  0x00 ; '.'
0000000000002b64         db  0x00 ; '.'
0000000000002b65         db  0x00 ; '.'
0000000000002b66         db  0x00 ; '.'
0000000000002b67         db  0x00 ; '.'
0000000000002b68         db  0x88 ; '.'
0000000000002b69         db  0xfd ; '.'
0000000000002b6a         db  0x21 ; '!'
0000000000002b6b         db  0x00 ; '.'
0000000000002b6c         db  0x00 ; '.'
0000000000002b6d         db  0x00 ; '.'
0000000000002b6e         db  0x00 ; '.'
0000000000002b6f         db  0x00 ; '.'
0000000000002b70         db  0x07 ; '.'
0000000000002b71         db  0x00 ; '.'
0000000000002b72         db  0x00 ; '.'
0000000000002b73         db  0x00 ; '.'
0000000000002b74         db  0x20 ; ' '
0000000000002b75         db  0x00 ; '.'
0000000000002b76         db  0x00 ; '.'
0000000000002b77         db  0x00 ; '.'
0000000000002b78         db  0x00 ; '.'
0000000000002b79         db  0x00 ; '.'
0000000000002b7a         db  0x00 ; '.'
0000000000002b7b         db  0x00 ; '.'
0000000000002b7c         db  0x00 ; '.'
0000000000002b7d         db  0x00 ; '.'
0000000000002b7e         db  0x00 ; '.'
0000000000002b7f         db  0x00 ; '.'
0000000000002b80         db  0x90 ; '.'
0000000000002b81         db  0xfd ; '.'
0000000000002b82         db  0x21 ; '!'
0000000000002b83         db  0x00 ; '.'
0000000000002b84         db  0x00 ; '.'
0000000000002b85         db  0x00 ; '.'
0000000000002b86         db  0x00 ; '.'
0000000000002b87         db  0x00 ; '.'
0000000000002b88         db  0x07 ; '.'
0000000000002b89         db  0x00 ; '.'
0000000000002b8a         db  0x00 ; '.'
0000000000002b8b         db  0x00 ; '.'
0000000000002b8c         db  0x21 ; '!'
0000000000002b8d         db  0x00 ; '.'
0000000000002b8e         db  0x00 ; '.'
0000000000002b8f         db  0x00 ; '.'
0000000000002b90         db  0x00 ; '.'
0000000000002b91         db  0x00 ; '.'
0000000000002b92         db  0x00 ; '.'
0000000000002b93         db  0x00 ; '.'
0000000000002b94         db  0x00 ; '.'
0000000000002b95         db  0x00 ; '.'
0000000000002b96         db  0x00 ; '.'
0000000000002b97         db  0x00 ; '.'
0000000000002b98         db  0x98 ; '.'
0000000000002b99         db  0xfd ; '.'
0000000000002b9a         db  0x21 ; '!'
0000000000002b9b         db  0x00 ; '.'
0000000000002b9c         db  0x00 ; '.'
0000000000002b9d         db  0x00 ; '.'
0000000000002b9e         db  0x00 ; '.'
0000000000002b9f         db  0x00 ; '.'
0000000000002ba0         db  0x07 ; '.'
0000000000002ba1         db  0x00 ; '.'
0000000000002ba2         db  0x00 ; '.'
0000000000002ba3         db  0x00 ; '.'
0000000000002ba4         db  0x22 ; '"'
0000000000002ba5         db  0x00 ; '.'
0000000000002ba6         db  0x00 ; '.'
0000000000002ba7         db  0x00 ; '.'
0000000000002ba8         db  0x00 ; '.'
0000000000002ba9         db  0x00 ; '.'
0000000000002baa         db  0x00 ; '.'
0000000000002bab         db  0x00 ; '.'
0000000000002bac         db  0x00 ; '.'
0000000000002bad         db  0x00 ; '.'
0000000000002bae         db  0x00 ; '.'
0000000000002baf         db  0x00 ; '.'
0000000000002bb0         db  0xa0 ; '.'
0000000000002bb1         db  0xfd ; '.'
0000000000002bb2         db  0x21 ; '!'
0000000000002bb3         db  0x00 ; '.'
0000000000002bb4         db  0x00 ; '.'
0000000000002bb5         db  0x00 ; '.'
0000000000002bb6         db  0x00 ; '.'
0000000000002bb7         db  0x00 ; '.'
0000000000002bb8         db  0x07 ; '.'
0000000000002bb9         db  0x00 ; '.'
0000000000002bba         db  0x00 ; '.'
0000000000002bbb         db  0x00 ; '.'
0000000000002bbc         db  0x23 ; '#'
0000000000002bbd         db  0x00 ; '.'
0000000000002bbe         db  0x00 ; '.'
0000000000002bbf         db  0x00 ; '.'
0000000000002bc0         db  0x00 ; '.'
0000000000002bc1         db  0x00 ; '.'
0000000000002bc2         db  0x00 ; '.'
0000000000002bc3         db  0x00 ; '.'
0000000000002bc4         db  0x00 ; '.'
0000000000002bc5         db  0x00 ; '.'
0000000000002bc6         db  0x00 ; '.'
0000000000002bc7         db  0x00 ; '.'
0000000000002bc8         db  0xa8 ; '.'
0000000000002bc9         db  0xfd ; '.'
0000000000002bca         db  0x21 ; '!'
0000000000002bcb         db  0x00 ; '.'
0000000000002bcc         db  0x00 ; '.'
0000000000002bcd         db  0x00 ; '.'
0000000000002bce         db  0x00 ; '.'
0000000000002bcf         db  0x00 ; '.'
0000000000002bd0         db  0x07 ; '.'
0000000000002bd1         db  0x00 ; '.'
0000000000002bd2         db  0x00 ; '.'
0000000000002bd3         db  0x00 ; '.'
0000000000002bd4         db  0x24 ; '$'
0000000000002bd5         db  0x00 ; '.'
0000000000002bd6         db  0x00 ; '.'
0000000000002bd7         db  0x00 ; '.'
0000000000002bd8         db  0x00 ; '.'
0000000000002bd9         db  0x00 ; '.'
0000000000002bda         db  0x00 ; '.'
0000000000002bdb         db  0x00 ; '.'
0000000000002bdc         db  0x00 ; '.'
0000000000002bdd         db  0x00 ; '.'
0000000000002bde         db  0x00 ; '.'
0000000000002bdf         db  0x00 ; '.'
0000000000002be0         db  0xb0 ; '.'
0000000000002be1         db  0xfd ; '.'
0000000000002be2         db  0x21 ; '!'
0000000000002be3         db  0x00 ; '.'
0000000000002be4         db  0x00 ; '.'
0000000000002be5         db  0x00 ; '.'
0000000000002be6         db  0x00 ; '.'
0000000000002be7         db  0x00 ; '.'
0000000000002be8         db  0x07 ; '.'
0000000000002be9         db  0x00 ; '.'
0000000000002bea         db  0x00 ; '.'
0000000000002beb         db  0x00 ; '.'
0000000000002bec         db  0x25 ; '%'
0000000000002bed         db  0x00 ; '.'
0000000000002bee         db  0x00 ; '.'
0000000000002bef         db  0x00 ; '.'
0000000000002bf0         db  0x00 ; '.'
0000000000002bf1         db  0x00 ; '.'
0000000000002bf2         db  0x00 ; '.'
0000000000002bf3         db  0x00 ; '.'
0000000000002bf4         db  0x00 ; '.'
0000000000002bf5         db  0x00 ; '.'
0000000000002bf6         db  0x00 ; '.'
0000000000002bf7         db  0x00 ; '.'
0000000000002bf8         db  0xb8 ; '.'
0000000000002bf9         db  0xfd ; '.'
0000000000002bfa         db  0x21 ; '!'
0000000000002bfb         db  0x00 ; '.'
0000000000002bfc         db  0x00 ; '.'
0000000000002bfd         db  0x00 ; '.'
0000000000002bfe         db  0x00 ; '.'
0000000000002bff         db  0x00 ; '.'
0000000000002c00         db  0x07 ; '.'
0000000000002c01         db  0x00 ; '.'
0000000000002c02         db  0x00 ; '.'
0000000000002c03         db  0x00 ; '.'
0000000000002c04         db  0x26 ; '&'
0000000000002c05         db  0x00 ; '.'
0000000000002c06         db  0x00 ; '.'
0000000000002c07         db  0x00 ; '.'
0000000000002c08         db  0x00 ; '.'
0000000000002c09         db  0x00 ; '.'
0000000000002c0a         db  0x00 ; '.'
0000000000002c0b         db  0x00 ; '.'
0000000000002c0c         db  0x00 ; '.'
0000000000002c0d         db  0x00 ; '.'
0000000000002c0e         db  0x00 ; '.'
0000000000002c0f         db  0x00 ; '.'
0000000000002c10         db  0xc0 ; '.'
0000000000002c11         db  0xfd ; '.'
0000000000002c12         db  0x21 ; '!'
0000000000002c13         db  0x00 ; '.'
0000000000002c14         db  0x00 ; '.'
0000000000002c15         db  0x00 ; '.'
0000000000002c16         db  0x00 ; '.'
0000000000002c17         db  0x00 ; '.'
0000000000002c18         db  0x07 ; '.'
0000000000002c19         db  0x00 ; '.'
0000000000002c1a         db  0x00 ; '.'
0000000000002c1b         db  0x00 ; '.'
0000000000002c1c         db  0x27 ; '''
0000000000002c1d         db  0x00 ; '.'
0000000000002c1e         db  0x00 ; '.'
0000000000002c1f         db  0x00 ; '.'
0000000000002c20         db  0x00 ; '.'
0000000000002c21         db  0x00 ; '.'
0000000000002c22         db  0x00 ; '.'
0000000000002c23         db  0x00 ; '.'
0000000000002c24         db  0x00 ; '.'
0000000000002c25         db  0x00 ; '.'
0000000000002c26         db  0x00 ; '.'
0000000000002c27         db  0x00 ; '.'
0000000000002c28         db  0xc8 ; '.'
0000000000002c29         db  0xfd ; '.'
0000000000002c2a         db  0x21 ; '!'
0000000000002c2b         db  0x00 ; '.'
0000000000002c2c         db  0x00 ; '.'
0000000000002c2d         db  0x00 ; '.'
0000000000002c2e         db  0x00 ; '.'
0000000000002c2f         db  0x00 ; '.'
0000000000002c30         db  0x07 ; '.'
0000000000002c31         db  0x00 ; '.'
0000000000002c32         db  0x00 ; '.'
0000000000002c33         db  0x00 ; '.'
0000000000002c34         db  0x28 ; '('
0000000000002c35         db  0x00 ; '.'
0000000000002c36         db  0x00 ; '.'
0000000000002c37         db  0x00 ; '.'
0000000000002c38         db  0x00 ; '.'
0000000000002c39         db  0x00 ; '.'
0000000000002c3a         db  0x00 ; '.'
0000000000002c3b         db  0x00 ; '.'
0000000000002c3c         db  0x00 ; '.'
0000000000002c3d         db  0x00 ; '.'
0000000000002c3e         db  0x00 ; '.'
0000000000002c3f         db  0x00 ; '.'
0000000000002c40         db  0xd0 ; '.'
0000000000002c41         db  0xfd ; '.'
0000000000002c42         db  0x21 ; '!'
0000000000002c43         db  0x00 ; '.'
0000000000002c44         db  0x00 ; '.'
0000000000002c45         db  0x00 ; '.'
0000000000002c46         db  0x00 ; '.'
0000000000002c47         db  0x00 ; '.'
0000000000002c48         db  0x07 ; '.'
0000000000002c49         db  0x00 ; '.'
0000000000002c4a         db  0x00 ; '.'
0000000000002c4b         db  0x00 ; '.'
0000000000002c4c         db  0x29 ; ')'
0000000000002c4d         db  0x00 ; '.'
0000000000002c4e         db  0x00 ; '.'
0000000000002c4f         db  0x00 ; '.'
0000000000002c50         db  0x00 ; '.'
0000000000002c51         db  0x00 ; '.'
0000000000002c52         db  0x00 ; '.'
0000000000002c53         db  0x00 ; '.'
0000000000002c54         db  0x00 ; '.'
0000000000002c55         db  0x00 ; '.'
0000000000002c56         db  0x00 ; '.'
0000000000002c57         db  0x00 ; '.'
0000000000002c58         db  0xd8 ; '.'
0000000000002c59         db  0xfd ; '.'
0000000000002c5a         db  0x21 ; '!'
0000000000002c5b         db  0x00 ; '.'
0000000000002c5c         db  0x00 ; '.'
0000000000002c5d         db  0x00 ; '.'
0000000000002c5e         db  0x00 ; '.'
0000000000002c5f         db  0x00 ; '.'
0000000000002c60         db  0x07 ; '.'
0000000000002c61         db  0x00 ; '.'
0000000000002c62         db  0x00 ; '.'
0000000000002c63         db  0x00 ; '.'
0000000000002c64         db  0x2a ; '*'
0000000000002c65         db  0x00 ; '.'
0000000000002c66         db  0x00 ; '.'
0000000000002c67         db  0x00 ; '.'
0000000000002c68         db  0x00 ; '.'
0000000000002c69         db  0x00 ; '.'
0000000000002c6a         db  0x00 ; '.'
0000000000002c6b         db  0x00 ; '.'
0000000000002c6c         db  0x00 ; '.'
0000000000002c6d         db  0x00 ; '.'
0000000000002c6e         db  0x00 ; '.'
0000000000002c6f         db  0x00 ; '.'
0000000000002c70         db  0xe0 ; '.'
0000000000002c71         db  0xfd ; '.'
0000000000002c72         db  0x21 ; '!'
0000000000002c73         db  0x00 ; '.'
0000000000002c74         db  0x00 ; '.'
0000000000002c75         db  0x00 ; '.'
0000000000002c76         db  0x00 ; '.'
0000000000002c77         db  0x00 ; '.'
0000000000002c78         db  0x07 ; '.'
0000000000002c79         db  0x00 ; '.'
0000000000002c7a         db  0x00 ; '.'
0000000000002c7b         db  0x00 ; '.'
0000000000002c7c         db  0x2b ; '+'
0000000000002c7d         db  0x00 ; '.'
0000000000002c7e         db  0x00 ; '.'
0000000000002c7f         db  0x00 ; '.'
0000000000002c80         db  0x00 ; '.'
0000000000002c81         db  0x00 ; '.'
0000000000002c82         db  0x00 ; '.'
0000000000002c83         db  0x00 ; '.'
0000000000002c84         db  0x00 ; '.'
0000000000002c85         db  0x00 ; '.'
0000000000002c86         db  0x00 ; '.'
0000000000002c87         db  0x00 ; '.'
0000000000002c88         db  0xe8 ; '.'
0000000000002c89         db  0xfd ; '.'
0000000000002c8a         db  0x21 ; '!'
0000000000002c8b         db  0x00 ; '.'
0000000000002c8c         db  0x00 ; '.'
0000000000002c8d         db  0x00 ; '.'
0000000000002c8e         db  0x00 ; '.'
0000000000002c8f         db  0x00 ; '.'
0000000000002c90         db  0x07 ; '.'
0000000000002c91         db  0x00 ; '.'
0000000000002c92         db  0x00 ; '.'
0000000000002c93         db  0x00 ; '.'
0000000000002c94         db  0x2c ; ','
0000000000002c95         db  0x00 ; '.'
0000000000002c96         db  0x00 ; '.'
0000000000002c97         db  0x00 ; '.'
0000000000002c98         db  0x00 ; '.'
0000000000002c99         db  0x00 ; '.'
0000000000002c9a         db  0x00 ; '.'
0000000000002c9b         db  0x00 ; '.'
0000000000002c9c         db  0x00 ; '.'
0000000000002c9d         db  0x00 ; '.'
0000000000002c9e         db  0x00 ; '.'
0000000000002c9f         db  0x00 ; '.'
0000000000002ca0         db  0xf0 ; '.'
0000000000002ca1         db  0xfd ; '.'
0000000000002ca2         db  0x21 ; '!'
0000000000002ca3         db  0x00 ; '.'
0000000000002ca4         db  0x00 ; '.'
0000000000002ca5         db  0x00 ; '.'
0000000000002ca6         db  0x00 ; '.'
0000000000002ca7         db  0x00 ; '.'
0000000000002ca8         db  0x07 ; '.'
0000000000002ca9         db  0x00 ; '.'
0000000000002caa         db  0x00 ; '.'
0000000000002cab         db  0x00 ; '.'
0000000000002cac         db  0x2d ; '-'
0000000000002cad         db  0x00 ; '.'
0000000000002cae         db  0x00 ; '.'
0000000000002caf         db  0x00 ; '.'
0000000000002cb0         db  0x00 ; '.'
0000000000002cb1         db  0x00 ; '.'
0000000000002cb2         db  0x00 ; '.'
0000000000002cb3         db  0x00 ; '.'
0000000000002cb4         db  0x00 ; '.'
0000000000002cb5         db  0x00 ; '.'
0000000000002cb6         db  0x00 ; '.'
0000000000002cb7         db  0x00 ; '.'
0000000000002cb8         db  0xf8 ; '.'
0000000000002cb9         db  0xfd ; '.'
0000000000002cba         db  0x21 ; '!'
0000000000002cbb         db  0x00 ; '.'
0000000000002cbc         db  0x00 ; '.'
0000000000002cbd         db  0x00 ; '.'
0000000000002cbe         db  0x00 ; '.'
0000000000002cbf         db  0x00 ; '.'
0000000000002cc0         db  0x07 ; '.'
0000000000002cc1         db  0x00 ; '.'
0000000000002cc2         db  0x00 ; '.'
0000000000002cc3         db  0x00 ; '.'
0000000000002cc4         db  0x2e ; '.'
0000000000002cc5         db  0x00 ; '.'
0000000000002cc6         db  0x00 ; '.'
0000000000002cc7         db  0x00 ; '.'
0000000000002cc8         db  0x00 ; '.'
0000000000002cc9         db  0x00 ; '.'
0000000000002cca         db  0x00 ; '.'
0000000000002ccb         db  0x00 ; '.'
0000000000002ccc         db  0x00 ; '.'
0000000000002ccd         db  0x00 ; '.'
0000000000002cce         db  0x00 ; '.'
0000000000002ccf         db  0x00 ; '.'
0000000000002cd0         db  0x00 ; '.'
0000000000002cd1         db  0xfe ; '.'
0000000000002cd2         db  0x21 ; '!'
0000000000002cd3         db  0x00 ; '.'
0000000000002cd4         db  0x00 ; '.'
0000000000002cd5         db  0x00 ; '.'
0000000000002cd6         db  0x00 ; '.'
0000000000002cd7         db  0x00 ; '.'
0000000000002cd8         db  0x07 ; '.'
0000000000002cd9         db  0x00 ; '.'
0000000000002cda         db  0x00 ; '.'
0000000000002cdb         db  0x00 ; '.'
0000000000002cdc         db  0x2f ; '/'
0000000000002cdd         db  0x00 ; '.'
0000000000002cde         db  0x00 ; '.'
0000000000002cdf         db  0x00 ; '.'
0000000000002ce0         db  0x00 ; '.'
0000000000002ce1         db  0x00 ; '.'
0000000000002ce2         db  0x00 ; '.'
0000000000002ce3         db  0x00 ; '.'
0000000000002ce4         db  0x00 ; '.'
0000000000002ce5         db  0x00 ; '.'
0000000000002ce6         db  0x00 ; '.'
0000000000002ce7         db  0x00 ; '.'
0000000000002ce8         db  0x08 ; '.'
0000000000002ce9         db  0xfe ; '.'
0000000000002cea         db  0x21 ; '!'
0000000000002ceb         db  0x00 ; '.'
0000000000002cec         db  0x00 ; '.'
0000000000002ced         db  0x00 ; '.'
0000000000002cee         db  0x00 ; '.'
0000000000002cef         db  0x00 ; '.'
0000000000002cf0         db  0x07 ; '.'
0000000000002cf1         db  0x00 ; '.'
0000000000002cf2         db  0x00 ; '.'
0000000000002cf3         db  0x00 ; '.'
0000000000002cf4         db  0x30 ; '0'
0000000000002cf5         db  0x00 ; '.'
0000000000002cf6         db  0x00 ; '.'
0000000000002cf7         db  0x00 ; '.'
0000000000002cf8         db  0x00 ; '.'
0000000000002cf9         db  0x00 ; '.'
0000000000002cfa         db  0x00 ; '.'
0000000000002cfb         db  0x00 ; '.'
0000000000002cfc         db  0x00 ; '.'
0000000000002cfd         db  0x00 ; '.'
0000000000002cfe         db  0x00 ; '.'
0000000000002cff         db  0x00 ; '.'
0000000000002d00         db  0x10 ; '.'
0000000000002d01         db  0xfe ; '.'
0000000000002d02         db  0x21 ; '!'
0000000000002d03         db  0x00 ; '.'
0000000000002d04         db  0x00 ; '.'
0000000000002d05         db  0x00 ; '.'
0000000000002d06         db  0x00 ; '.'
0000000000002d07         db  0x00 ; '.'
0000000000002d08         db  0x07 ; '.'
0000000000002d09         db  0x00 ; '.'
0000000000002d0a         db  0x00 ; '.'
0000000000002d0b         db  0x00 ; '.'
0000000000002d0c         db  0x31 ; '1'
0000000000002d0d         db  0x00 ; '.'
0000000000002d0e         db  0x00 ; '.'
0000000000002d0f         db  0x00 ; '.'
0000000000002d10         db  0x00 ; '.'
0000000000002d11         db  0x00 ; '.'
0000000000002d12         db  0x00 ; '.'
0000000000002d13         db  0x00 ; '.'
0000000000002d14         db  0x00 ; '.'
0000000000002d15         db  0x00 ; '.'
0000000000002d16         db  0x00 ; '.'
0000000000002d17         db  0x00 ; '.'
0000000000002d18         db  0x18 ; '.'
0000000000002d19         db  0xfe ; '.'
0000000000002d1a         db  0x21 ; '!'
0000000000002d1b         db  0x00 ; '.'
0000000000002d1c         db  0x00 ; '.'
0000000000002d1d         db  0x00 ; '.'
0000000000002d1e         db  0x00 ; '.'
0000000000002d1f         db  0x00 ; '.'
0000000000002d20         db  0x07 ; '.'
0000000000002d21         db  0x00 ; '.'
0000000000002d22         db  0x00 ; '.'
0000000000002d23         db  0x00 ; '.'
0000000000002d24         db  0x32 ; '2'
0000000000002d25         db  0x00 ; '.'
0000000000002d26         db  0x00 ; '.'
0000000000002d27         db  0x00 ; '.'
0000000000002d28         db  0x00 ; '.'
0000000000002d29         db  0x00 ; '.'
0000000000002d2a         db  0x00 ; '.'
0000000000002d2b         db  0x00 ; '.'
0000000000002d2c         db  0x00 ; '.'
0000000000002d2d         db  0x00 ; '.'
0000000000002d2e         db  0x00 ; '.'
0000000000002d2f         db  0x00 ; '.'
0000000000002d30         db  0x20 ; ' '
0000000000002d31         db  0xfe ; '.'
0000000000002d32         db  0x21 ; '!'
0000000000002d33         db  0x00 ; '.'
0000000000002d34         db  0x00 ; '.'
0000000000002d35         db  0x00 ; '.'
0000000000002d36         db  0x00 ; '.'
0000000000002d37         db  0x00 ; '.'
0000000000002d38         db  0x07 ; '.'
0000000000002d39         db  0x00 ; '.'
0000000000002d3a         db  0x00 ; '.'
0000000000002d3b         db  0x00 ; '.'
0000000000002d3c         db  0x33 ; '3'
0000000000002d3d         db  0x00 ; '.'
0000000000002d3e         db  0x00 ; '.'
0000000000002d3f         db  0x00 ; '.'
0000000000002d40         db  0x00 ; '.'
0000000000002d41         db  0x00 ; '.'
0000000000002d42         db  0x00 ; '.'
0000000000002d43         db  0x00 ; '.'
0000000000002d44         db  0x00 ; '.'
0000000000002d45         db  0x00 ; '.'
0000000000002d46         db  0x00 ; '.'
0000000000002d47         db  0x00 ; '.'
0000000000002d48         db  0x28 ; '('
0000000000002d49         db  0xfe ; '.'
0000000000002d4a         db  0x21 ; '!'
0000000000002d4b         db  0x00 ; '.'
0000000000002d4c         db  0x00 ; '.'
0000000000002d4d         db  0x00 ; '.'
0000000000002d4e         db  0x00 ; '.'
0000000000002d4f         db  0x00 ; '.'
0000000000002d50         db  0x07 ; '.'
0000000000002d51         db  0x00 ; '.'
0000000000002d52         db  0x00 ; '.'
0000000000002d53         db  0x00 ; '.'
0000000000002d54         db  0x35 ; '5'
0000000000002d55         db  0x00 ; '.'
0000000000002d56         db  0x00 ; '.'
0000000000002d57         db  0x00 ; '.'
0000000000002d58         db  0x00 ; '.'
0000000000002d59         db  0x00 ; '.'
0000000000002d5a         db  0x00 ; '.'
0000000000002d5b         db  0x00 ; '.'
0000000000002d5c         db  0x00 ; '.'
0000000000002d5d         db  0x00 ; '.'
0000000000002d5e         db  0x00 ; '.'
0000000000002d5f         db  0x00 ; '.'
0000000000002d60         db  0x30 ; '0'
0000000000002d61         db  0xfe ; '.'
0000000000002d62         db  0x21 ; '!'
0000000000002d63         db  0x00 ; '.'
0000000000002d64         db  0x00 ; '.'
0000000000002d65         db  0x00 ; '.'
0000000000002d66         db  0x00 ; '.'
0000000000002d67         db  0x00 ; '.'
0000000000002d68         db  0x07 ; '.'
0000000000002d69         db  0x00 ; '.'
0000000000002d6a         db  0x00 ; '.'
0000000000002d6b         db  0x00 ; '.'
0000000000002d6c         db  0x36 ; '6'
0000000000002d6d         db  0x00 ; '.'
0000000000002d6e         db  0x00 ; '.'
0000000000002d6f         db  0x00 ; '.'
0000000000002d70         db  0x00 ; '.'
0000000000002d71         db  0x00 ; '.'
0000000000002d72         db  0x00 ; '.'
0000000000002d73         db  0x00 ; '.'
0000000000002d74         db  0x00 ; '.'
0000000000002d75         db  0x00 ; '.'
0000000000002d76         db  0x00 ; '.'
0000000000002d77         db  0x00 ; '.'
0000000000002d78         db  0x38 ; '8'
0000000000002d79         db  0xfe ; '.'
0000000000002d7a         db  0x21 ; '!'
0000000000002d7b         db  0x00 ; '.'
0000000000002d7c         db  0x00 ; '.'
0000000000002d7d         db  0x00 ; '.'
0000000000002d7e         db  0x00 ; '.'
0000000000002d7f         db  0x00 ; '.'
0000000000002d80         db  0x07 ; '.'
0000000000002d81         db  0x00 ; '.'
0000000000002d82         db  0x00 ; '.'
0000000000002d83         db  0x00 ; '.'
0000000000002d84         db  0x37 ; '7'
0000000000002d85         db  0x00 ; '.'
0000000000002d86         db  0x00 ; '.'
0000000000002d87         db  0x00 ; '.'
0000000000002d88         db  0x00 ; '.'
0000000000002d89         db  0x00 ; '.'
0000000000002d8a         db  0x00 ; '.'
0000000000002d8b         db  0x00 ; '.'
0000000000002d8c         db  0x00 ; '.'
0000000000002d8d         db  0x00 ; '.'
0000000000002d8e         db  0x00 ; '.'
0000000000002d8f         db  0x00 ; '.'
0000000000002d90         db  0x40 ; '@'
0000000000002d91         db  0xfe ; '.'
0000000000002d92         db  0x21 ; '!'
0000000000002d93         db  0x00 ; '.'
0000000000002d94         db  0x00 ; '.'
0000000000002d95         db  0x00 ; '.'
0000000000002d96         db  0x00 ; '.'
0000000000002d97         db  0x00 ; '.'
0000000000002d98         db  0x07 ; '.'
0000000000002d99         db  0x00 ; '.'
0000000000002d9a         db  0x00 ; '.'
0000000000002d9b         db  0x00 ; '.'
0000000000002d9c         db  0x38 ; '8'
0000000000002d9d         db  0x00 ; '.'
0000000000002d9e         db  0x00 ; '.'
0000000000002d9f         db  0x00 ; '.'
0000000000002da0         db  0x00 ; '.'
0000000000002da1         db  0x00 ; '.'
0000000000002da2         db  0x00 ; '.'
0000000000002da3         db  0x00 ; '.'
0000000000002da4         db  0x00 ; '.'
0000000000002da5         db  0x00 ; '.'
0000000000002da6         db  0x00 ; '.'
0000000000002da7         db  0x00 ; '.'
0000000000002da8         db  0x48 ; 'H'
0000000000002da9         db  0xfe ; '.'
0000000000002daa         db  0x21 ; '!'
0000000000002dab         db  0x00 ; '.'
0000000000002dac         db  0x00 ; '.'
0000000000002dad         db  0x00 ; '.'
0000000000002dae         db  0x00 ; '.'
0000000000002daf         db  0x00 ; '.'
0000000000002db0         db  0x07 ; '.'
0000000000002db1         db  0x00 ; '.'
0000000000002db2         db  0x00 ; '.'
0000000000002db3         db  0x00 ; '.'
0000000000002db4         db  0x39 ; '9'
0000000000002db5         db  0x00 ; '.'
0000000000002db6         db  0x00 ; '.'
0000000000002db7         db  0x00 ; '.'
0000000000002db8         db  0x00 ; '.'
0000000000002db9         db  0x00 ; '.'
0000000000002dba         db  0x00 ; '.'
0000000000002dbb         db  0x00 ; '.'
0000000000002dbc         db  0x00 ; '.'
0000000000002dbd         db  0x00 ; '.'
0000000000002dbe         db  0x00 ; '.'
0000000000002dbf         db  0x00 ; '.'
0000000000002dc0         db  0x50 ; 'P'
0000000000002dc1         db  0xfe ; '.'
0000000000002dc2         db  0x21 ; '!'
0000000000002dc3         db  0x00 ; '.'
0000000000002dc4         db  0x00 ; '.'
0000000000002dc5         db  0x00 ; '.'
0000000000002dc6         db  0x00 ; '.'
0000000000002dc7         db  0x00 ; '.'
0000000000002dc8         db  0x07 ; '.'
0000000000002dc9         db  0x00 ; '.'
0000000000002dca         db  0x00 ; '.'
0000000000002dcb         db  0x00 ; '.'
0000000000002dcc         db  0x3a ; ':'
0000000000002dcd         db  0x00 ; '.'
0000000000002dce         db  0x00 ; '.'
0000000000002dcf         db  0x00 ; '.'
0000000000002dd0         db  0x00 ; '.'
0000000000002dd1         db  0x00 ; '.'
0000000000002dd2         db  0x00 ; '.'
0000000000002dd3         db  0x00 ; '.'
0000000000002dd4         db  0x00 ; '.'
0000000000002dd5         db  0x00 ; '.'
0000000000002dd6         db  0x00 ; '.'
0000000000002dd7         db  0x00 ; '.'
0000000000002dd8         db  0x58 ; 'X'
0000000000002dd9         db  0xfe ; '.'
0000000000002dda         db  0x21 ; '!'
0000000000002ddb         db  0x00 ; '.'
0000000000002ddc         db  0x00 ; '.'
0000000000002ddd         db  0x00 ; '.'
0000000000002dde         db  0x00 ; '.'
0000000000002ddf         db  0x00 ; '.'
0000000000002de0         db  0x07 ; '.'
0000000000002de1         db  0x00 ; '.'
0000000000002de2         db  0x00 ; '.'
0000000000002de3         db  0x00 ; '.'
0000000000002de4         db  0x3b ; ';'
0000000000002de5         db  0x00 ; '.'
0000000000002de6         db  0x00 ; '.'
0000000000002de7         db  0x00 ; '.'
0000000000002de8         db  0x00 ; '.'
0000000000002de9         db  0x00 ; '.'
0000000000002dea         db  0x00 ; '.'
0000000000002deb         db  0x00 ; '.'
0000000000002dec         db  0x00 ; '.'
0000000000002ded         db  0x00 ; '.'
0000000000002dee         db  0x00 ; '.'
0000000000002def         db  0x00 ; '.'
0000000000002df0         db  0x60 ; '`'
0000000000002df1         db  0xfe ; '.'
0000000000002df2         db  0x21 ; '!'
0000000000002df3         db  0x00 ; '.'
0000000000002df4         db  0x00 ; '.'
0000000000002df5         db  0x00 ; '.'
0000000000002df6         db  0x00 ; '.'
0000000000002df7         db  0x00 ; '.'
0000000000002df8         db  0x07 ; '.'
0000000000002df9         db  0x00 ; '.'
0000000000002dfa         db  0x00 ; '.'
0000000000002dfb         db  0x00 ; '.'
0000000000002dfc         db  0x3c ; '<'
0000000000002dfd         db  0x00 ; '.'
0000000000002dfe         db  0x00 ; '.'
0000000000002dff         db  0x00 ; '.'
0000000000002e00         db  0x00 ; '.'
0000000000002e01         db  0x00 ; '.'
0000000000002e02         db  0x00 ; '.'
0000000000002e03         db  0x00 ; '.'
0000000000002e04         db  0x00 ; '.'
0000000000002e05         db  0x00 ; '.'
0000000000002e06         db  0x00 ; '.'
0000000000002e07         db  0x00 ; '.'
0000000000002e08         db  0x68 ; 'h'
0000000000002e09         db  0xfe ; '.'
0000000000002e0a         db  0x21 ; '!'
0000000000002e0b         db  0x00 ; '.'
0000000000002e0c         db  0x00 ; '.'
0000000000002e0d         db  0x00 ; '.'
0000000000002e0e         db  0x00 ; '.'
0000000000002e0f         db  0x00 ; '.'
0000000000002e10         db  0x07 ; '.'
0000000000002e11         db  0x00 ; '.'
0000000000002e12         db  0x00 ; '.'
0000000000002e13         db  0x00 ; '.'
0000000000002e14         db  0x3d ; '='
0000000000002e15         db  0x00 ; '.'
0000000000002e16         db  0x00 ; '.'
0000000000002e17         db  0x00 ; '.'
0000000000002e18         db  0x00 ; '.'
0000000000002e19         db  0x00 ; '.'
0000000000002e1a         db  0x00 ; '.'
0000000000002e1b         db  0x00 ; '.'
0000000000002e1c         db  0x00 ; '.'
0000000000002e1d         db  0x00 ; '.'
0000000000002e1e         db  0x00 ; '.'
0000000000002e1f         db  0x00 ; '.'
0000000000002e20         db  0x70 ; 'p'
0000000000002e21         db  0xfe ; '.'
0000000000002e22         db  0x21 ; '!'
0000000000002e23         db  0x00 ; '.'
0000000000002e24         db  0x00 ; '.'
0000000000002e25         db  0x00 ; '.'
0000000000002e26         db  0x00 ; '.'
0000000000002e27         db  0x00 ; '.'
0000000000002e28         db  0x07 ; '.'
0000000000002e29         db  0x00 ; '.'
0000000000002e2a         db  0x00 ; '.'
0000000000002e2b         db  0x00 ; '.'
0000000000002e2c         db  0x3e ; '>'
0000000000002e2d         db  0x00 ; '.'
0000000000002e2e         db  0x00 ; '.'
0000000000002e2f         db  0x00 ; '.'
0000000000002e30         db  0x00 ; '.'
0000000000002e31         db  0x00 ; '.'
0000000000002e32         db  0x00 ; '.'
0000000000002e33         db  0x00 ; '.'
0000000000002e34         db  0x00 ; '.'
0000000000002e35         db  0x00 ; '.'
0000000000002e36         db  0x00 ; '.'
0000000000002e37         db  0x00 ; '.'
0000000000002e38         db  0x78 ; 'x'
0000000000002e39         db  0xfe ; '.'
0000000000002e3a         db  0x21 ; '!'
0000000000002e3b         db  0x00 ; '.'
0000000000002e3c         db  0x00 ; '.'
0000000000002e3d         db  0x00 ; '.'
0000000000002e3e         db  0x00 ; '.'
0000000000002e3f         db  0x00 ; '.'
0000000000002e40         db  0x07 ; '.'
0000000000002e41         db  0x00 ; '.'
0000000000002e42         db  0x00 ; '.'
0000000000002e43         db  0x00 ; '.'
0000000000002e44         db  0x40 ; '@'
0000000000002e45         db  0x00 ; '.'
0000000000002e46         db  0x00 ; '.'
0000000000002e47         db  0x00 ; '.'
0000000000002e48         db  0x00 ; '.'
0000000000002e49         db  0x00 ; '.'
0000000000002e4a         db  0x00 ; '.'
0000000000002e4b         db  0x00 ; '.'
0000000000002e4c         db  0x00 ; '.'
0000000000002e4d         db  0x00 ; '.'
0000000000002e4e         db  0x00 ; '.'
0000000000002e4f         db  0x00 ; '.'
0000000000002e50         db  0x80 ; '.'
0000000000002e51         db  0xfe ; '.'
0000000000002e52         db  0x21 ; '!'
0000000000002e53         db  0x00 ; '.'
0000000000002e54         db  0x00 ; '.'
0000000000002e55         db  0x00 ; '.'
0000000000002e56         db  0x00 ; '.'
0000000000002e57         db  0x00 ; '.'
0000000000002e58         db  0x07 ; '.'
0000000000002e59         db  0x00 ; '.'
0000000000002e5a         db  0x00 ; '.'
0000000000002e5b         db  0x00 ; '.'
0000000000002e5c         db  0x41 ; 'A'
0000000000002e5d         db  0x00 ; '.'
0000000000002e5e         db  0x00 ; '.'
0000000000002e5f         db  0x00 ; '.'
0000000000002e60         db  0x00 ; '.'
0000000000002e61         db  0x00 ; '.'
0000000000002e62         db  0x00 ; '.'
0000000000002e63         db  0x00 ; '.'
0000000000002e64         db  0x00 ; '.'
0000000000002e65         db  0x00 ; '.'
0000000000002e66         db  0x00 ; '.'
0000000000002e67         db  0x00 ; '.'
0000000000002e68         db  0x88 ; '.'
0000000000002e69         db  0xfe ; '.'
0000000000002e6a         db  0x21 ; '!'
0000000000002e6b         db  0x00 ; '.'
0000000000002e6c         db  0x00 ; '.'
0000000000002e6d         db  0x00 ; '.'
0000000000002e6e         db  0x00 ; '.'
0000000000002e6f         db  0x00 ; '.'
0000000000002e70         db  0x07 ; '.'
0000000000002e71         db  0x00 ; '.'
0000000000002e72         db  0x00 ; '.'
0000000000002e73         db  0x00 ; '.'
0000000000002e74         db  0x42 ; 'B'
0000000000002e75         db  0x00 ; '.'
0000000000002e76         db  0x00 ; '.'
0000000000002e77         db  0x00 ; '.'
0000000000002e78         db  0x00 ; '.'
0000000000002e79         db  0x00 ; '.'
0000000000002e7a         db  0x00 ; '.'
0000000000002e7b         db  0x00 ; '.'
0000000000002e7c         db  0x00 ; '.'
0000000000002e7d         db  0x00 ; '.'
0000000000002e7e         db  0x00 ; '.'
0000000000002e7f         db  0x00 ; '.'
0000000000002e80         db  0x90 ; '.'
0000000000002e81         db  0xfe ; '.'
0000000000002e82         db  0x21 ; '!'
0000000000002e83         db  0x00 ; '.'
0000000000002e84         db  0x00 ; '.'
0000000000002e85         db  0x00 ; '.'
0000000000002e86         db  0x00 ; '.'
0000000000002e87         db  0x00 ; '.'
0000000000002e88         db  0x07 ; '.'
0000000000002e89         db  0x00 ; '.'
0000000000002e8a         db  0x00 ; '.'
0000000000002e8b         db  0x00 ; '.'
0000000000002e8c         db  0x43 ; 'C'
0000000000002e8d         db  0x00 ; '.'
0000000000002e8e         db  0x00 ; '.'
0000000000002e8f         db  0x00 ; '.'
0000000000002e90         db  0x00 ; '.'
0000000000002e91         db  0x00 ; '.'
0000000000002e92         db  0x00 ; '.'
0000000000002e93         db  0x00 ; '.'
0000000000002e94         db  0x00 ; '.'
0000000000002e95         db  0x00 ; '.'
0000000000002e96         db  0x00 ; '.'
0000000000002e97         db  0x00 ; '.'
0000000000002e98         db  0x98 ; '.'
0000000000002e99         db  0xfe ; '.'
0000000000002e9a         db  0x21 ; '!'
0000000000002e9b         db  0x00 ; '.'
0000000000002e9c         db  0x00 ; '.'
0000000000002e9d         db  0x00 ; '.'
0000000000002e9e         db  0x00 ; '.'
0000000000002e9f         db  0x00 ; '.'
0000000000002ea0         db  0x07 ; '.'
0000000000002ea1         db  0x00 ; '.'
0000000000002ea2         db  0x00 ; '.'
0000000000002ea3         db  0x00 ; '.'
0000000000002ea4         db  0x44 ; 'D'
0000000000002ea5         db  0x00 ; '.'
0000000000002ea6         db  0x00 ; '.'
0000000000002ea7         db  0x00 ; '.'
0000000000002ea8         db  0x00 ; '.'
0000000000002ea9         db  0x00 ; '.'
0000000000002eaa         db  0x00 ; '.'
0000000000002eab         db  0x00 ; '.'
0000000000002eac         db  0x00 ; '.'
0000000000002ead         db  0x00 ; '.'
0000000000002eae         db  0x00 ; '.'
0000000000002eaf         db  0x00 ; '.'
0000000000002eb0         db  0xa0 ; '.'
0000000000002eb1         db  0xfe ; '.'
0000000000002eb2         db  0x21 ; '!'
0000000000002eb3         db  0x00 ; '.'
0000000000002eb4         db  0x00 ; '.'
0000000000002eb5         db  0x00 ; '.'
0000000000002eb6         db  0x00 ; '.'
0000000000002eb7         db  0x00 ; '.'
0000000000002eb8         db  0x07 ; '.'
0000000000002eb9         db  0x00 ; '.'
0000000000002eba         db  0x00 ; '.'
0000000000002ebb         db  0x00 ; '.'
0000000000002ebc         db  0x45 ; 'E'
0000000000002ebd         db  0x00 ; '.'
0000000000002ebe         db  0x00 ; '.'
0000000000002ebf         db  0x00 ; '.'
0000000000002ec0         db  0x00 ; '.'
0000000000002ec1         db  0x00 ; '.'
0000000000002ec2         db  0x00 ; '.'
0000000000002ec3         db  0x00 ; '.'
0000000000002ec4         db  0x00 ; '.'
0000000000002ec5         db  0x00 ; '.'
0000000000002ec6         db  0x00 ; '.'
0000000000002ec7         db  0x00 ; '.'
0000000000002ec8         db  0xa8 ; '.'
0000000000002ec9         db  0xfe ; '.'
0000000000002eca         db  0x21 ; '!'
0000000000002ecb         db  0x00 ; '.'
0000000000002ecc         db  0x00 ; '.'
0000000000002ecd         db  0x00 ; '.'
0000000000002ece         db  0x00 ; '.'
0000000000002ecf         db  0x00 ; '.'
0000000000002ed0         db  0x07 ; '.'
0000000000002ed1         db  0x00 ; '.'
0000000000002ed2         db  0x00 ; '.'
0000000000002ed3         db  0x00 ; '.'
0000000000002ed4         db  0x46 ; 'F'
0000000000002ed5         db  0x00 ; '.'
0000000000002ed6         db  0x00 ; '.'
0000000000002ed7         db  0x00 ; '.'
0000000000002ed8         db  0x00 ; '.'
0000000000002ed9         db  0x00 ; '.'
0000000000002eda         db  0x00 ; '.'
0000000000002edb         db  0x00 ; '.'
0000000000002edc         db  0x00 ; '.'
0000000000002edd         db  0x00 ; '.'
0000000000002ede         db  0x00 ; '.'
0000000000002edf         db  0x00 ; '.'
0000000000002ee0         db  0xb0 ; '.'
0000000000002ee1         db  0xfe ; '.'
0000000000002ee2         db  0x21 ; '!'
0000000000002ee3         db  0x00 ; '.'
0000000000002ee4         db  0x00 ; '.'
0000000000002ee5         db  0x00 ; '.'
0000000000002ee6         db  0x00 ; '.'
0000000000002ee7         db  0x00 ; '.'
0000000000002ee8         db  0x07 ; '.'
0000000000002ee9         db  0x00 ; '.'
0000000000002eea         db  0x00 ; '.'
0000000000002eeb         db  0x00 ; '.'
0000000000002eec         db  0x47 ; 'G'
0000000000002eed         db  0x00 ; '.'
0000000000002eee         db  0x00 ; '.'
0000000000002eef         db  0x00 ; '.'
0000000000002ef0         db  0x00 ; '.'
0000000000002ef1         db  0x00 ; '.'
0000000000002ef2         db  0x00 ; '.'
0000000000002ef3         db  0x00 ; '.'
0000000000002ef4         db  0x00 ; '.'
0000000000002ef5         db  0x00 ; '.'
0000000000002ef6         db  0x00 ; '.'
0000000000002ef7         db  0x00 ; '.'
0000000000002ef8         db  0xb8 ; '.'
0000000000002ef9         db  0xfe ; '.'
0000000000002efa         db  0x21 ; '!'
0000000000002efb         db  0x00 ; '.'
0000000000002efc         db  0x00 ; '.'
0000000000002efd         db  0x00 ; '.'
0000000000002efe         db  0x00 ; '.'
0000000000002eff         db  0x00 ; '.'
0000000000002f00         db  0x07 ; '.'
0000000000002f01         db  0x00 ; '.'
0000000000002f02         db  0x00 ; '.'
0000000000002f03         db  0x00 ; '.'
0000000000002f04         db  0x49 ; 'I'
0000000000002f05         db  0x00 ; '.'
0000000000002f06         db  0x00 ; '.'
0000000000002f07         db  0x00 ; '.'
0000000000002f08         db  0x00 ; '.'
0000000000002f09         db  0x00 ; '.'
0000000000002f0a         db  0x00 ; '.'
0000000000002f0b         db  0x00 ; '.'
0000000000002f0c         db  0x00 ; '.'
0000000000002f0d         db  0x00 ; '.'
0000000000002f0e         db  0x00 ; '.'
0000000000002f0f         db  0x00 ; '.'
0000000000002f10         db  0xc0 ; '.'
0000000000002f11         db  0xfe ; '.'
0000000000002f12         db  0x21 ; '!'
0000000000002f13         db  0x00 ; '.'
0000000000002f14         db  0x00 ; '.'
0000000000002f15         db  0x00 ; '.'
0000000000002f16         db  0x00 ; '.'
0000000000002f17         db  0x00 ; '.'
0000000000002f18         db  0x07 ; '.'
0000000000002f19         db  0x00 ; '.'
0000000000002f1a         db  0x00 ; '.'
0000000000002f1b         db  0x00 ; '.'
0000000000002f1c         db  0x4a ; 'J'
0000000000002f1d         db  0x00 ; '.'
0000000000002f1e         db  0x00 ; '.'
0000000000002f1f         db  0x00 ; '.'
0000000000002f20         db  0x00 ; '.'
0000000000002f21         db  0x00 ; '.'
0000000000002f22         db  0x00 ; '.'
0000000000002f23         db  0x00 ; '.'
0000000000002f24         db  0x00 ; '.'
0000000000002f25         db  0x00 ; '.'
0000000000002f26         db  0x00 ; '.'
0000000000002f27         db  0x00 ; '.'
0000000000002f28         db  0xc8 ; '.'
0000000000002f29         db  0xfe ; '.'
0000000000002f2a         db  0x21 ; '!'
0000000000002f2b         db  0x00 ; '.'
0000000000002f2c         db  0x00 ; '.'
0000000000002f2d         db  0x00 ; '.'
0000000000002f2e         db  0x00 ; '.'
0000000000002f2f         db  0x00 ; '.'
0000000000002f30         db  0x07 ; '.'
0000000000002f31         db  0x00 ; '.'
0000000000002f32         db  0x00 ; '.'
0000000000002f33         db  0x00 ; '.'
0000000000002f34         db  0x4b ; 'K'
0000000000002f35         db  0x00 ; '.'
0000000000002f36         db  0x00 ; '.'
0000000000002f37         db  0x00 ; '.'
0000000000002f38         db  0x00 ; '.'
0000000000002f39         db  0x00 ; '.'
0000000000002f3a         db  0x00 ; '.'
0000000000002f3b         db  0x00 ; '.'
0000000000002f3c         db  0x00 ; '.'
0000000000002f3d         db  0x00 ; '.'
0000000000002f3e         db  0x00 ; '.'
0000000000002f3f         db  0x00 ; '.'
0000000000002f40         db  0xd0 ; '.'
0000000000002f41         db  0xfe ; '.'
0000000000002f42         db  0x21 ; '!'
0000000000002f43         db  0x00 ; '.'
0000000000002f44         db  0x00 ; '.'
0000000000002f45         db  0x00 ; '.'
0000000000002f46         db  0x00 ; '.'
0000000000002f47         db  0x00 ; '.'
0000000000002f48         db  0x07 ; '.'
0000000000002f49         db  0x00 ; '.'
0000000000002f4a         db  0x00 ; '.'
0000000000002f4b         db  0x00 ; '.'
0000000000002f4c         db  0x4c ; 'L'
0000000000002f4d         db  0x00 ; '.'
0000000000002f4e         db  0x00 ; '.'
0000000000002f4f         db  0x00 ; '.'
0000000000002f50         db  0x00 ; '.'
0000000000002f51         db  0x00 ; '.'
0000000000002f52         db  0x00 ; '.'
0000000000002f53         db  0x00 ; '.'
0000000000002f54         db  0x00 ; '.'
0000000000002f55         db  0x00 ; '.'
0000000000002f56         db  0x00 ; '.'
0000000000002f57         db  0x00 ; '.'
0000000000002f58         db  0xd8 ; '.'
0000000000002f59         db  0xfe ; '.'
0000000000002f5a         db  0x21 ; '!'
0000000000002f5b         db  0x00 ; '.'
0000000000002f5c         db  0x00 ; '.'
0000000000002f5d         db  0x00 ; '.'
0000000000002f5e         db  0x00 ; '.'
0000000000002f5f         db  0x00 ; '.'
0000000000002f60         db  0x07 ; '.'
0000000000002f61         db  0x00 ; '.'
0000000000002f62         db  0x00 ; '.'
0000000000002f63         db  0x00 ; '.'
0000000000002f64         db  0x4d ; 'M'
0000000000002f65         db  0x00 ; '.'
0000000000002f66         db  0x00 ; '.'
0000000000002f67         db  0x00 ; '.'
0000000000002f68         db  0x00 ; '.'
0000000000002f69         db  0x00 ; '.'
0000000000002f6a         db  0x00 ; '.'
0000000000002f6b         db  0x00 ; '.'
0000000000002f6c         db  0x00 ; '.'
0000000000002f6d         db  0x00 ; '.'
0000000000002f6e         db  0x00 ; '.'
0000000000002f6f         db  0x00 ; '.'
0000000000002f70         db  0xe0 ; '.'
0000000000002f71         db  0xfe ; '.'
0000000000002f72         db  0x21 ; '!'
0000000000002f73         db  0x00 ; '.'
0000000000002f74         db  0x00 ; '.'
0000000000002f75         db  0x00 ; '.'
0000000000002f76         db  0x00 ; '.'
0000000000002f77         db  0x00 ; '.'
0000000000002f78         db  0x07 ; '.'
0000000000002f79         db  0x00 ; '.'
0000000000002f7a         db  0x00 ; '.'
0000000000002f7b         db  0x00 ; '.'
0000000000002f7c         db  0x4e ; 'N'
0000000000002f7d         db  0x00 ; '.'
0000000000002f7e         db  0x00 ; '.'
0000000000002f7f         db  0x00 ; '.'
0000000000002f80         db  0x00 ; '.'
0000000000002f81         db  0x00 ; '.'
0000000000002f82         db  0x00 ; '.'
0000000000002f83         db  0x00 ; '.'
0000000000002f84         db  0x00 ; '.'
0000000000002f85         db  0x00 ; '.'
0000000000002f86         db  0x00 ; '.'
0000000000002f87         db  0x00 ; '.'
0000000000002f88         db  0xe8 ; '.'
0000000000002f89         db  0xfe ; '.'
0000000000002f8a         db  0x21 ; '!'
0000000000002f8b         db  0x00 ; '.'
0000000000002f8c         db  0x00 ; '.'
0000000000002f8d         db  0x00 ; '.'
0000000000002f8e         db  0x00 ; '.'
0000000000002f8f         db  0x00 ; '.'
0000000000002f90         db  0x07 ; '.'
0000000000002f91         db  0x00 ; '.'
0000000000002f92         db  0x00 ; '.'
0000000000002f93         db  0x00 ; '.'
0000000000002f94         db  0x4f ; 'O'
0000000000002f95         db  0x00 ; '.'
0000000000002f96         db  0x00 ; '.'
0000000000002f97         db  0x00 ; '.'
0000000000002f98         db  0x00 ; '.'
0000000000002f99         db  0x00 ; '.'
0000000000002f9a         db  0x00 ; '.'
0000000000002f9b         db  0x00 ; '.'
0000000000002f9c         db  0x00 ; '.'
0000000000002f9d         db  0x00 ; '.'
0000000000002f9e         db  0x00 ; '.'
0000000000002f9f         db  0x00 ; '.'
0000000000002fa0         db  0xf0 ; '.'
0000000000002fa1         db  0xfe ; '.'
0000000000002fa2         db  0x21 ; '!'
0000000000002fa3         db  0x00 ; '.'
0000000000002fa4         db  0x00 ; '.'
0000000000002fa5         db  0x00 ; '.'
0000000000002fa6         db  0x00 ; '.'
0000000000002fa7         db  0x00 ; '.'
0000000000002fa8         db  0x07 ; '.'
0000000000002fa9         db  0x00 ; '.'
0000000000002faa         db  0x00 ; '.'
0000000000002fab         db  0x00 ; '.'
0000000000002fac         db  0x50 ; 'P'
0000000000002fad         db  0x00 ; '.'
0000000000002fae         db  0x00 ; '.'
0000000000002faf         db  0x00 ; '.'
0000000000002fb0         db  0x00 ; '.'
0000000000002fb1         db  0x00 ; '.'
0000000000002fb2         db  0x00 ; '.'
0000000000002fb3         db  0x00 ; '.'
0000000000002fb4         db  0x00 ; '.'
0000000000002fb5         db  0x00 ; '.'
0000000000002fb6         db  0x00 ; '.'
0000000000002fb7         db  0x00 ; '.'
0000000000002fb8         db  0xf8 ; '.'
0000000000002fb9         db  0xfe ; '.'
0000000000002fba         db  0x21 ; '!'
0000000000002fbb         db  0x00 ; '.'
0000000000002fbc         db  0x00 ; '.'
0000000000002fbd         db  0x00 ; '.'
0000000000002fbe         db  0x00 ; '.'
0000000000002fbf         db  0x00 ; '.'
0000000000002fc0         db  0x07 ; '.'
0000000000002fc1         db  0x00 ; '.'
0000000000002fc2         db  0x00 ; '.'
0000000000002fc3         db  0x00 ; '.'
0000000000002fc4         db  0x51 ; 'Q'
0000000000002fc5         db  0x00 ; '.'
0000000000002fc6         db  0x00 ; '.'
0000000000002fc7         db  0x00 ; '.'
0000000000002fc8         db  0x00 ; '.'
0000000000002fc9         db  0x00 ; '.'
0000000000002fca         db  0x00 ; '.'
0000000000002fcb         db  0x00 ; '.'
0000000000002fcc         db  0x00 ; '.'
0000000000002fcd         db  0x00 ; '.'
0000000000002fce         db  0x00 ; '.'
0000000000002fcf         db  0x00 ; '.'
0000000000002fd0         db  0x00 ; '.'
0000000000002fd1         db  0xff ; '.'
0000000000002fd2         db  0x21 ; '!'
0000000000002fd3         db  0x00 ; '.'
0000000000002fd4         db  0x00 ; '.'
0000000000002fd5         db  0x00 ; '.'
0000000000002fd6         db  0x00 ; '.'
0000000000002fd7         db  0x00 ; '.'
0000000000002fd8         db  0x07 ; '.'
0000000000002fd9         db  0x00 ; '.'
0000000000002fda         db  0x00 ; '.'
0000000000002fdb         db  0x00 ; '.'
0000000000002fdc         db  0x52 ; 'R'
0000000000002fdd         db  0x00 ; '.'
0000000000002fde         db  0x00 ; '.'
0000000000002fdf         db  0x00 ; '.'
0000000000002fe0         db  0x00 ; '.'
0000000000002fe1         db  0x00 ; '.'
0000000000002fe2         db  0x00 ; '.'
0000000000002fe3         db  0x00 ; '.'
0000000000002fe4         db  0x00 ; '.'
0000000000002fe5         db  0x00 ; '.'
0000000000002fe6         db  0x00 ; '.'
0000000000002fe7         db  0x00 ; '.'
0000000000002fe8         db  0x08 ; '.'
0000000000002fe9         db  0xff ; '.'
0000000000002fea         db  0x21 ; '!'
0000000000002feb         db  0x00 ; '.'
0000000000002fec         db  0x00 ; '.'
0000000000002fed         db  0x00 ; '.'
0000000000002fee         db  0x00 ; '.'
0000000000002fef         db  0x00 ; '.'
0000000000002ff0         db  0x07 ; '.'
0000000000002ff1         db  0x00 ; '.'
0000000000002ff2         db  0x00 ; '.'
0000000000002ff3         db  0x00 ; '.'
0000000000002ff4         db  0x53 ; 'S'
0000000000002ff5         db  0x00 ; '.'
0000000000002ff6         db  0x00 ; '.'
0000000000002ff7         db  0x00 ; '.'
0000000000002ff8         db  0x00 ; '.'
0000000000002ff9         db  0x00 ; '.'
0000000000002ffa         db  0x00 ; '.'
0000000000002ffb         db  0x00 ; '.'
0000000000002ffc         db  0x00 ; '.'
0000000000002ffd         db  0x00 ; '.'
0000000000002ffe         db  0x00 ; '.'
0000000000002fff         db  0x00 ; '.'
0000000000003000         db  0x10 ; '.'
0000000000003001         db  0xff ; '.'
0000000000003002         db  0x21 ; '!'
0000000000003003         db  0x00 ; '.'
0000000000003004         db  0x00 ; '.'
0000000000003005         db  0x00 ; '.'
0000000000003006         db  0x00 ; '.'
0000000000003007         db  0x00 ; '.'
0000000000003008         db  0x07 ; '.'
0000000000003009         db  0x00 ; '.'
000000000000300a         db  0x00 ; '.'
000000000000300b         db  0x00 ; '.'
000000000000300c         db  0x54 ; 'T'
000000000000300d         db  0x00 ; '.'
000000000000300e         db  0x00 ; '.'
000000000000300f         db  0x00 ; '.'
0000000000003010         db  0x00 ; '.'
0000000000003011         db  0x00 ; '.'
0000000000003012         db  0x00 ; '.'
0000000000003013         db  0x00 ; '.'
0000000000003014         db  0x00 ; '.'
0000000000003015         db  0x00 ; '.'
0000000000003016         db  0x00 ; '.'
0000000000003017         db  0x00 ; '.'
0000000000003018         db  0x18 ; '.'
0000000000003019         db  0xff ; '.'
000000000000301a         db  0x21 ; '!'
000000000000301b         db  0x00 ; '.'
000000000000301c         db  0x00 ; '.'
000000000000301d         db  0x00 ; '.'
000000000000301e         db  0x00 ; '.'
000000000000301f         db  0x00 ; '.'
0000000000003020         db  0x07 ; '.'
0000000000003021         db  0x00 ; '.'
0000000000003022         db  0x00 ; '.'
0000000000003023         db  0x00 ; '.'
0000000000003024         db  0x55 ; 'U'
0000000000003025         db  0x00 ; '.'
0000000000003026         db  0x00 ; '.'
0000000000003027         db  0x00 ; '.'
0000000000003028         db  0x00 ; '.'
0000000000003029         db  0x00 ; '.'
000000000000302a         db  0x00 ; '.'
000000000000302b         db  0x00 ; '.'
000000000000302c         db  0x00 ; '.'
000000000000302d         db  0x00 ; '.'
000000000000302e         db  0x00 ; '.'
000000000000302f         db  0x00 ; '.'
0000000000003030         db  0x20 ; ' '
0000000000003031         db  0xff ; '.'
0000000000003032         db  0x21 ; '!'
0000000000003033         db  0x00 ; '.'
0000000000003034         db  0x00 ; '.'
0000000000003035         db  0x00 ; '.'
0000000000003036         db  0x00 ; '.'
0000000000003037         db  0x00 ; '.'
0000000000003038         db  0x07 ; '.'
0000000000003039         db  0x00 ; '.'
000000000000303a         db  0x00 ; '.'
000000000000303b         db  0x00 ; '.'
000000000000303c         db  0x56 ; 'V'
000000000000303d         db  0x00 ; '.'
000000000000303e         db  0x00 ; '.'
000000000000303f         db  0x00 ; '.'
0000000000003040         db  0x00 ; '.'
0000000000003041         db  0x00 ; '.'
0000000000003042         db  0x00 ; '.'
0000000000003043         db  0x00 ; '.'
0000000000003044         db  0x00 ; '.'
0000000000003045         db  0x00 ; '.'
0000000000003046         db  0x00 ; '.'
0000000000003047         db  0x00 ; '.'
0000000000003048         db  0x28 ; '('
0000000000003049         db  0xff ; '.'
000000000000304a         db  0x21 ; '!'
000000000000304b         db  0x00 ; '.'
000000000000304c         db  0x00 ; '.'
000000000000304d         db  0x00 ; '.'
000000000000304e         db  0x00 ; '.'
000000000000304f         db  0x00 ; '.'
0000000000003050         db  0x07 ; '.'
0000000000003051         db  0x00 ; '.'
0000000000003052         db  0x00 ; '.'
0000000000003053         db  0x00 ; '.'
0000000000003054         db  0x57 ; 'W'
0000000000003055         db  0x00 ; '.'
0000000000003056         db  0x00 ; '.'
0000000000003057         db  0x00 ; '.'
0000000000003058         db  0x00 ; '.'
0000000000003059         db  0x00 ; '.'
000000000000305a         db  0x00 ; '.'
000000000000305b         db  0x00 ; '.'
000000000000305c         db  0x00 ; '.'
000000000000305d         db  0x00 ; '.'
000000000000305e         db  0x00 ; '.'
000000000000305f         db  0x00 ; '.'
0000000000003060         db  0x30 ; '0'
0000000000003061         db  0xff ; '.'
0000000000003062         db  0x21 ; '!'
0000000000003063         db  0x00 ; '.'
0000000000003064         db  0x00 ; '.'
0000000000003065         db  0x00 ; '.'
0000000000003066         db  0x00 ; '.'
0000000000003067         db  0x00 ; '.'
0000000000003068         db  0x07 ; '.'
0000000000003069         db  0x00 ; '.'
000000000000306a         db  0x00 ; '.'
000000000000306b         db  0x00 ; '.'
000000000000306c         db  0x58 ; 'X'
000000000000306d         db  0x00 ; '.'
000000000000306e         db  0x00 ; '.'
000000000000306f         db  0x00 ; '.'
0000000000003070         db  0x00 ; '.'
0000000000003071         db  0x00 ; '.'
0000000000003072         db  0x00 ; '.'
0000000000003073         db  0x00 ; '.'
0000000000003074         db  0x00 ; '.'
0000000000003075         db  0x00 ; '.'
0000000000003076         db  0x00 ; '.'
0000000000003077         db  0x00 ; '.'
0000000000003078         db  0x38 ; '8'
0000000000003079         db  0xff ; '.'
000000000000307a         db  0x21 ; '!'
000000000000307b         db  0x00 ; '.'
000000000000307c         db  0x00 ; '.'
000000000000307d         db  0x00 ; '.'
000000000000307e         db  0x00 ; '.'
000000000000307f         db  0x00 ; '.'
0000000000003080         db  0x07 ; '.'
0000000000003081         db  0x00 ; '.'
0000000000003082         db  0x00 ; '.'
0000000000003083         db  0x00 ; '.'
0000000000003084         db  0x59 ; 'Y'
0000000000003085         db  0x00 ; '.'
0000000000003086         db  0x00 ; '.'
0000000000003087         db  0x00 ; '.'
0000000000003088         db  0x00 ; '.'
0000000000003089         db  0x00 ; '.'
000000000000308a         db  0x00 ; '.'
000000000000308b         db  0x00 ; '.'
000000000000308c         db  0x00 ; '.'
000000000000308d         db  0x00 ; '.'
000000000000308e         db  0x00 ; '.'
000000000000308f         db  0x00 ; '.'
0000000000003090         db  0x40 ; '@'
0000000000003091         db  0xff ; '.'
0000000000003092         db  0x21 ; '!'
0000000000003093         db  0x00 ; '.'
0000000000003094         db  0x00 ; '.'
0000000000003095         db  0x00 ; '.'
0000000000003096         db  0x00 ; '.'
0000000000003097         db  0x00 ; '.'
0000000000003098         db  0x07 ; '.'
0000000000003099         db  0x00 ; '.'
000000000000309a         db  0x00 ; '.'
000000000000309b         db  0x00 ; '.'
000000000000309c         db  0x5a ; 'Z'
000000000000309d         db  0x00 ; '.'
000000000000309e         db  0x00 ; '.'
000000000000309f         db  0x00 ; '.'
00000000000030a0         db  0x00 ; '.'
00000000000030a1         db  0x00 ; '.'
00000000000030a2         db  0x00 ; '.'
00000000000030a3         db  0x00 ; '.'
00000000000030a4         db  0x00 ; '.'
00000000000030a5         db  0x00 ; '.'
00000000000030a6         db  0x00 ; '.'
00000000000030a7         db  0x00 ; '.'
00000000000030a8         db  0x48 ; 'H'
00000000000030a9         db  0xff ; '.'
00000000000030aa         db  0x21 ; '!'
00000000000030ab         db  0x00 ; '.'
00000000000030ac         db  0x00 ; '.'
00000000000030ad         db  0x00 ; '.'
00000000000030ae         db  0x00 ; '.'
00000000000030af         db  0x00 ; '.'
00000000000030b0         db  0x07 ; '.'
00000000000030b1         db  0x00 ; '.'
00000000000030b2         db  0x00 ; '.'
00000000000030b3         db  0x00 ; '.'
00000000000030b4         db  0x5b ; '['
00000000000030b5         db  0x00 ; '.'
00000000000030b6         db  0x00 ; '.'
00000000000030b7         db  0x00 ; '.'
00000000000030b8         db  0x00 ; '.'
00000000000030b9         db  0x00 ; '.'
00000000000030ba         db  0x00 ; '.'
00000000000030bb         db  0x00 ; '.'
00000000000030bc         db  0x00 ; '.'
00000000000030bd         db  0x00 ; '.'
00000000000030be         db  0x00 ; '.'
00000000000030bf         db  0x00 ; '.'
00000000000030c0         db  0x50 ; 'P'
00000000000030c1         db  0xff ; '.'
00000000000030c2         db  0x21 ; '!'
00000000000030c3         db  0x00 ; '.'
00000000000030c4         db  0x00 ; '.'
00000000000030c5         db  0x00 ; '.'
00000000000030c6         db  0x00 ; '.'
00000000000030c7         db  0x00 ; '.'
00000000000030c8         db  0x07 ; '.'
00000000000030c9         db  0x00 ; '.'
00000000000030ca         db  0x00 ; '.'
00000000000030cb         db  0x00 ; '.'
00000000000030cc         db  0x5c ; '\'
00000000000030cd         db  0x00 ; '.'
00000000000030ce         db  0x00 ; '.'
00000000000030cf         db  0x00 ; '.'
00000000000030d0         db  0x00 ; '.'
00000000000030d1         db  0x00 ; '.'
00000000000030d2         db  0x00 ; '.'
00000000000030d3         db  0x00 ; '.'
00000000000030d4         db  0x00 ; '.'
00000000000030d5         db  0x00 ; '.'
00000000000030d6         db  0x00 ; '.'
00000000000030d7         db  0x00 ; '.'
00000000000030d8         db  0x58 ; 'X'
00000000000030d9         db  0xff ; '.'
00000000000030da         db  0x21 ; '!'
00000000000030db         db  0x00 ; '.'
00000000000030dc         db  0x00 ; '.'
00000000000030dd         db  0x00 ; '.'
00000000000030de         db  0x00 ; '.'
00000000000030df         db  0x00 ; '.'
00000000000030e0         db  0x07 ; '.'
00000000000030e1         db  0x00 ; '.'
00000000000030e2         db  0x00 ; '.'
00000000000030e3         db  0x00 ; '.'
00000000000030e4         db  0x5d ; ']'
00000000000030e5         db  0x00 ; '.'
00000000000030e6         db  0x00 ; '.'
00000000000030e7         db  0x00 ; '.'
00000000000030e8         db  0x00 ; '.'
00000000000030e9         db  0x00 ; '.'
00000000000030ea         db  0x00 ; '.'
00000000000030eb         db  0x00 ; '.'
00000000000030ec         db  0x00 ; '.'
00000000000030ed         db  0x00 ; '.'
00000000000030ee         db  0x00 ; '.'
00000000000030ef         db  0x00 ; '.'
00000000000030f0         db  0x60 ; '`'
00000000000030f1         db  0xff ; '.'
00000000000030f2         db  0x21 ; '!'
00000000000030f3         db  0x00 ; '.'
00000000000030f4         db  0x00 ; '.'
00000000000030f5         db  0x00 ; '.'
00000000000030f6         db  0x00 ; '.'
00000000000030f7         db  0x00 ; '.'
00000000000030f8         db  0x07 ; '.'
00000000000030f9         db  0x00 ; '.'
00000000000030fa         db  0x00 ; '.'
00000000000030fb         db  0x00 ; '.'
00000000000030fc         db  0x5e ; '^'
00000000000030fd         db  0x00 ; '.'
00000000000030fe         db  0x00 ; '.'
00000000000030ff         db  0x00 ; '.'
0000000000003100         db  0x00 ; '.'
0000000000003101         db  0x00 ; '.'
0000000000003102         db  0x00 ; '.'
0000000000003103         db  0x00 ; '.'
0000000000003104         db  0x00 ; '.'
0000000000003105         db  0x00 ; '.'
0000000000003106         db  0x00 ; '.'
0000000000003107         db  0x00 ; '.'
0000000000003108         db  0x68 ; 'h'
0000000000003109         db  0xff ; '.'
000000000000310a         db  0x21 ; '!'
000000000000310b         db  0x00 ; '.'
000000000000310c         db  0x00 ; '.'
000000000000310d         db  0x00 ; '.'
000000000000310e         db  0x00 ; '.'
000000000000310f         db  0x00 ; '.'
0000000000003110         db  0x07 ; '.'
0000000000003111         db  0x00 ; '.'
0000000000003112         db  0x00 ; '.'
0000000000003113         db  0x00 ; '.'
0000000000003114         db  0x5f ; '_'
0000000000003115         db  0x00 ; '.'
0000000000003116         db  0x00 ; '.'
0000000000003117         db  0x00 ; '.'
0000000000003118         db  0x00 ; '.'
0000000000003119         db  0x00 ; '.'
000000000000311a         db  0x00 ; '.'
000000000000311b         db  0x00 ; '.'
000000000000311c         db  0x00 ; '.'
000000000000311d         db  0x00 ; '.'
000000000000311e         db  0x00 ; '.'
000000000000311f         db  0x00 ; '.'
0000000000003120         db  0x70 ; 'p'
0000000000003121         db  0xff ; '.'
0000000000003122         db  0x21 ; '!'
0000000000003123         db  0x00 ; '.'
0000000000003124         db  0x00 ; '.'
0000000000003125         db  0x00 ; '.'
0000000000003126         db  0x00 ; '.'
0000000000003127         db  0x00 ; '.'
0000000000003128         db  0x07 ; '.'
0000000000003129         db  0x00 ; '.'
000000000000312a         db  0x00 ; '.'
000000000000312b         db  0x00 ; '.'
000000000000312c         db  0x60 ; '`'
000000000000312d         db  0x00 ; '.'
000000000000312e         db  0x00 ; '.'
000000000000312f         db  0x00 ; '.'
0000000000003130         db  0x00 ; '.'
0000000000003131         db  0x00 ; '.'
0000000000003132         db  0x00 ; '.'
0000000000003133         db  0x00 ; '.'
0000000000003134         db  0x00 ; '.'
0000000000003135         db  0x00 ; '.'
0000000000003136         db  0x00 ; '.'
0000000000003137         db  0x00 ; '.'
0000000000003138         db  0x78 ; 'x'
0000000000003139         db  0xff ; '.'
000000000000313a         db  0x21 ; '!'
000000000000313b         db  0x00 ; '.'
000000000000313c         db  0x00 ; '.'
000000000000313d         db  0x00 ; '.'
000000000000313e         db  0x00 ; '.'
000000000000313f         db  0x00 ; '.'
0000000000003140         db  0x07 ; '.'
0000000000003141         db  0x00 ; '.'
0000000000003142         db  0x00 ; '.'
0000000000003143         db  0x00 ; '.'
0000000000003144         db  0x61 ; 'a'
0000000000003145         db  0x00 ; '.'
0000000000003146         db  0x00 ; '.'
0000000000003147         db  0x00 ; '.'
0000000000003148         db  0x00 ; '.'
0000000000003149         db  0x00 ; '.'
000000000000314a         db  0x00 ; '.'
000000000000314b         db  0x00 ; '.'
000000000000314c         db  0x00 ; '.'
000000000000314d         db  0x00 ; '.'
000000000000314e         db  0x00 ; '.'
000000000000314f         db  0x00 ; '.'
0000000000003150         db  0x80 ; '.'
0000000000003151         db  0xff ; '.'
0000000000003152         db  0x21 ; '!'
0000000000003153         db  0x00 ; '.'
0000000000003154         db  0x00 ; '.'
0000000000003155         db  0x00 ; '.'
0000000000003156         db  0x00 ; '.'
0000000000003157         db  0x00 ; '.'
0000000000003158         db  0x07 ; '.'
0000000000003159         db  0x00 ; '.'
000000000000315a         db  0x00 ; '.'
000000000000315b         db  0x00 ; '.'
000000000000315c         db  0x62 ; 'b'
000000000000315d         db  0x00 ; '.'
000000000000315e         db  0x00 ; '.'
000000000000315f         db  0x00 ; '.'
0000000000003160         db  0x00 ; '.'
0000000000003161         db  0x00 ; '.'
0000000000003162         db  0x00 ; '.'
0000000000003163         db  0x00 ; '.'
0000000000003164         db  0x00 ; '.'
0000000000003165         db  0x00 ; '.'
0000000000003166         db  0x00 ; '.'
0000000000003167         db  0x00 ; '.'
0000000000003168         db  0x88 ; '.'
0000000000003169         db  0xff ; '.'
000000000000316a         db  0x21 ; '!'
000000000000316b         db  0x00 ; '.'
000000000000316c         db  0x00 ; '.'
000000000000316d         db  0x00 ; '.'
000000000000316e         db  0x00 ; '.'
000000000000316f         db  0x00 ; '.'
0000000000003170         db  0x07 ; '.'
0000000000003171         db  0x00 ; '.'
0000000000003172         db  0x00 ; '.'
0000000000003173         db  0x00 ; '.'
0000000000003174         db  0x64 ; 'd'
0000000000003175         db  0x00 ; '.'
0000000000003176         db  0x00 ; '.'
0000000000003177         db  0x00 ; '.'
0000000000003178         db  0x00 ; '.'
0000000000003179         db  0x00 ; '.'
000000000000317a         db  0x00 ; '.'
000000000000317b         db  0x00 ; '.'
000000000000317c         db  0x00 ; '.'
000000000000317d         db  0x00 ; '.'
000000000000317e         db  0x00 ; '.'
000000000000317f         db  0x00 ; '.'
0000000000003180         db  0x90 ; '.'
0000000000003181         db  0xff ; '.'
0000000000003182         db  0x21 ; '!'
0000000000003183         db  0x00 ; '.'
0000000000003184         db  0x00 ; '.'
0000000000003185         db  0x00 ; '.'
0000000000003186         db  0x00 ; '.'
0000000000003187         db  0x00 ; '.'
0000000000003188         db  0x07 ; '.'
0000000000003189         db  0x00 ; '.'
000000000000318a         db  0x00 ; '.'
000000000000318b         db  0x00 ; '.'
000000000000318c         db  0x65 ; 'e'
000000000000318d         db  0x00 ; '.'
000000000000318e         db  0x00 ; '.'
000000000000318f         db  0x00 ; '.'
0000000000003190         db  0x00 ; '.'
0000000000003191         db  0x00 ; '.'
0000000000003192         db  0x00 ; '.'
0000000000003193         db  0x00 ; '.'
0000000000003194         db  0x00 ; '.'
0000000000003195         db  0x00 ; '.'
0000000000003196         db  0x00 ; '.'
0000000000003197         db  0x00 ; '.'
0000000000003198         db  0x98 ; '.'
0000000000003199         db  0xff ; '.'
000000000000319a         db  0x21 ; '!'
000000000000319b         db  0x00 ; '.'
000000000000319c         db  0x00 ; '.'
000000000000319d         db  0x00 ; '.'
000000000000319e         db  0x00 ; '.'
000000000000319f         db  0x00 ; '.'
00000000000031a0         db  0x07 ; '.'
00000000000031a1         db  0x00 ; '.'
00000000000031a2         db  0x00 ; '.'
00000000000031a3         db  0x00 ; '.'
00000000000031a4         db  0x66 ; 'f'
00000000000031a5         db  0x00 ; '.'
00000000000031a6         db  0x00 ; '.'
00000000000031a7         db  0x00 ; '.'
00000000000031a8         db  0x00 ; '.'
00000000000031a9         db  0x00 ; '.'
00000000000031aa         db  0x00 ; '.'
00000000000031ab         db  0x00 ; '.'
00000000000031ac         db  0x00 ; '.'
00000000000031ad         db  0x00 ; '.'
00000000000031ae         db  0x00 ; '.'
00000000000031af         db  0x00 ; '.'
00000000000031b0         db  0xa0 ; '.'
00000000000031b1         db  0xff ; '.'
00000000000031b2         db  0x21 ; '!'
00000000000031b3         db  0x00 ; '.'
00000000000031b4         db  0x00 ; '.'
00000000000031b5         db  0x00 ; '.'
00000000000031b6         db  0x00 ; '.'
00000000000031b7         db  0x00 ; '.'
00000000000031b8         db  0x07 ; '.'
00000000000031b9         db  0x00 ; '.'
00000000000031ba         db  0x00 ; '.'
00000000000031bb         db  0x00 ; '.'
00000000000031bc         db  0x68 ; 'h'
00000000000031bd         db  0x00 ; '.'
00000000000031be         db  0x00 ; '.'
00000000000031bf         db  0x00 ; '.'
00000000000031c0         db  0x00 ; '.'
00000000000031c1         db  0x00 ; '.'
00000000000031c2         db  0x00 ; '.'
00000000000031c3         db  0x00 ; '.'
00000000000031c4         db  0x00 ; '.'
00000000000031c5         db  0x00 ; '.'
00000000000031c6         db  0x00 ; '.'
00000000000031c7         db  0x00 ; '.'
00000000000031c8         db  0xa8 ; '.'
00000000000031c9         db  0xff ; '.'
00000000000031ca         db  0x21 ; '!'
00000000000031cb         db  0x00 ; '.'
00000000000031cc         db  0x00 ; '.'
00000000000031cd         db  0x00 ; '.'
00000000000031ce         db  0x00 ; '.'
00000000000031cf         db  0x00 ; '.'
00000000000031d0         db  0x07 ; '.'
00000000000031d1         db  0x00 ; '.'
00000000000031d2         db  0x00 ; '.'
00000000000031d3         db  0x00 ; '.'
00000000000031d4         db  0x69 ; 'i'
00000000000031d5         db  0x00 ; '.'
00000000000031d6         db  0x00 ; '.'
00000000000031d7         db  0x00 ; '.'
00000000000031d8         db  0x00 ; '.'
00000000000031d9         db  0x00 ; '.'
00000000000031da         db  0x00 ; '.'
00000000000031db         db  0x00 ; '.'
00000000000031dc         db  0x00 ; '.'
00000000000031dd         db  0x00 ; '.'
00000000000031de         db  0x00 ; '.'
00000000000031df         db  0x00 ; '.'
00000000000031e0         db  0xb0 ; '.'
00000000000031e1         db  0xff ; '.'
00000000000031e2         db  0x21 ; '!'
00000000000031e3         db  0x00 ; '.'
00000000000031e4         db  0x00 ; '.'
00000000000031e5         db  0x00 ; '.'
00000000000031e6         db  0x00 ; '.'
00000000000031e7         db  0x00 ; '.'
00000000000031e8         db  0x07 ; '.'
00000000000031e9         db  0x00 ; '.'
00000000000031ea         db  0x00 ; '.'
00000000000031eb         db  0x00 ; '.'
00000000000031ec         db  0x6a ; 'j'
00000000000031ed         db  0x00 ; '.'
00000000000031ee         db  0x00 ; '.'
00000000000031ef         db  0x00 ; '.'
00000000000031f0         db  0x00 ; '.'
00000000000031f1         db  0x00 ; '.'
00000000000031f2         db  0x00 ; '.'
00000000000031f3         db  0x00 ; '.'
00000000000031f4         db  0x00 ; '.'
00000000000031f5         db  0x00 ; '.'
00000000000031f6         db  0x00 ; '.'
00000000000031f7         db  0x00 ; '.'
00000000000031f8         db  0xb8 ; '.'
00000000000031f9         db  0xff ; '.'
00000000000031fa         db  0x21 ; '!'
00000000000031fb         db  0x00 ; '.'
00000000000031fc         db  0x00 ; '.'
00000000000031fd         db  0x00 ; '.'
00000000000031fe         db  0x00 ; '.'
00000000000031ff         db  0x00 ; '.'
0000000000003200         db  0x07 ; '.'
0000000000003201         db  0x00 ; '.'
0000000000003202         db  0x00 ; '.'
0000000000003203         db  0x00 ; '.'
0000000000003204         db  0x6b ; 'k'
0000000000003205         db  0x00 ; '.'
0000000000003206         db  0x00 ; '.'
0000000000003207         db  0x00 ; '.'
0000000000003208         db  0x00 ; '.'
0000000000003209         db  0x00 ; '.'
000000000000320a         db  0x00 ; '.'
000000000000320b         db  0x00 ; '.'
000000000000320c         db  0x00 ; '.'
000000000000320d         db  0x00 ; '.'
000000000000320e         db  0x00 ; '.'
000000000000320f         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x3210; 0x3227[ (23 bytes)
        ; File offset : [12816; 12839[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
0000000000003210         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
0000000000003214         mov        rax, qword [qword_21ffd8]                   ; qword_21ffd8
000000000000321b         test       rax, rax
000000000000321e         je         loc_3222

0000000000003220         call       rax

                     loc_3222:
0000000000003222         add        rsp, 0x8                                    ; CODE XREF=_init+14
0000000000003226         ret
                        ; endp
0000000000003227         db  0x00 ; '.'
0000000000003228         db  0x00 ; '.'
0000000000003229         db  0x00 ; '.'
000000000000322a         db  0x00 ; '.'
000000000000322b         db  0x00 ; '.'
000000000000322c         db  0x00 ; '.'
000000000000322d         db  0x00 ; '.'
000000000000322e         db  0x00 ; '.'
000000000000322f         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x3230; 0x3880[ (1616 bytes)
        ; File offset : [12848; 14464[ (1616 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_3230:
0000000000003230         push       qword [qword_21fc90]                        ; Begin of unwind block (FDE at 0x1b69c), qword_21fc90, CODE XREF=sub_3246+5
0000000000003236         jmp        qword [qword_21fc90+8]                      ; 0x21fc98
                        ; endp
000000000000323c         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_toupper_loc:        // __ctype_toupper_loc
0000000000003240         jmp        qword [__ctype_toupper_loc@GOT]             ; __ctype_toupper_loc, __ctype_toupper_loc@GOT, CODE XREF=memcpy_uppcase+19
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3246:
0000000000003246         push       0x0
000000000000324b         jmp        loc_3230


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getenv:        // getenv
0000000000003250         jmp        qword [getenv@GOT]                          ; getenv, getenv@GOT, CODE XREF=main+360, main+445, main+521, main+3122, main+4178, main+4664, main+4695, main+4721, main+5356, main+6300, human_options+276
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3256:
0000000000003256         push       0x1
000000000000325b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_sigprocmask:        // sigprocmask
0000000000003260         jmp        qword [sigprocmask@GOT]                     ; sigprocmask, sigprocmask@GOT, CODE XREF=process_signals+64, process_signals+116
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3266:
0000000000003266         push       0x2
000000000000326b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___snprintf_chk:        // __snprintf_chk
0000000000003270         jmp        qword [__snprintf_chk@GOT]                  ; __snprintf_chk, __snprintf_chk@GOT, CODE XREF=abformat_init+553
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3276:
0000000000003276         push       0x3
000000000000327b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_raise:        // raise
0000000000003280         jmp        qword [raise@GOT]                           ; raise, raise@GOT, CODE XREF=main+3957, main+3981, process_signals+101
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3286:
0000000000003286         push       0x4
000000000000328b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
0000000000003290         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=main+205, print_long_format+2520, safe_hasher+29, hash_get_first+60, hash_rehash+569, hash_insert_if_absent+477, set_program_name+154, sub_12920+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3296:
0000000000003296         push       0x5
000000000000329b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
00000000000032a0         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=xstrcoll+12, file_failure+25, gobble_file.constprop.52+434, gobble_file.constprop.52+1315, gobble_file.constprop.52+3040, print_dir+50, areadlink_with_size+184, areadlink_with_size+224, canonicalize_filename_mode+635, canonicalize_filename_mode+867, sub_ca5a+118
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_32a6:
00000000000032a6         push       0x6
00000000000032ab         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
00000000000032b0         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=main+2951, main+4816, main+5818, usage+1541, usage+1730, argmatch+162, filevercmp+1017
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_32b6:
00000000000032b6         push       0x7
00000000000032bb         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_localtime_r:        // localtime_r
00000000000032c0         jmp        qword [localtime_r@GOT]                     ; localtime_r, localtime_r@GOT, CODE XREF=localtime_rz+43, mktime_z+170
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_32c6:
00000000000032c6         push       0x8
00000000000032cb         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
00000000000032d0         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_32d6:
00000000000032d6         push       0x9
00000000000032db         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcpy:        // strcpy
00000000000032e0         jmp        qword [strcpy@GOT]                          ; strcpy, strcpy@GOT, CODE XREF=gobble_file.constprop.52+2523, getuser+105, getuidbyname+186, getgroup+105, getgidbyname+186
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_32e6:
00000000000032e6         push       0xa
00000000000032eb         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
00000000000032f0         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_32f6:
00000000000032f6         push       0xb
00000000000032fb         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_isatty:        // isatty
0000000000003300         jmp        qword [isatty@GOT]                          ; isatty, isatty@GOT, CODE XREF=main+1887, main+2495, main+2528, main+5216
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3306:
0000000000003306         push       0xc
000000000000330b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_sigaction:        // sigaction
0000000000003310         jmp        qword [sigaction@GOT]                       ; sigaction, sigaction@GOT, CODE XREF=signal_setup+223, signal_setup+442
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3316:
0000000000003316         push       0xd
000000000000331b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswcntrl:        // iswcntrl
0000000000003320         jmp        qword [iswcntrl@GOT]                        ; iswcntrl, iswcntrl@GOT, CODE XREF=mbsnwidth+247
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3326:
0000000000003326         push       0xe
000000000000332b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_wcswidth:        // wcswidth
0000000000003330         jmp        qword [wcswidth@GOT]                        ; wcswidth, wcswidth@GOT, CODE XREF=mbsalign+647, mbsalign+844
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3336:
0000000000003336         push       0xf
000000000000333b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_localeconv:        // localeconv
0000000000003340         jmp        qword [localeconv@GOT]                      ; localeconv, localeconv@GOT, CODE XREF=human_readable+89
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3346:
0000000000003346         push       0x10
000000000000334b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbstowcs:        // mbstowcs
0000000000003350         jmp        qword [mbstowcs@GOT]                        ; mbstowcs, mbstowcs@GOT, CODE XREF=mbsalign+438, mbsalign+544
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3356:
0000000000003356         push       0x11
000000000000335b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_readlink:        // readlink
0000000000003360         jmp        qword [readlink@GOT]                        ; readlink, readlink@GOT, CODE XREF=areadlink_with_size+89
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3366:
0000000000003366         push       0x12
000000000000336b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_clock_gettime:        // clock_gettime
0000000000003370         jmp        qword [clock_gettime@GOT]                   ; clock_gettime, clock_gettime@GOT, CODE XREF=gettime+5, current_timespec+25
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3376:
0000000000003376         push       0x13
000000000000337b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setenv:        // setenv
0000000000003380         jmp        qword [setenv@GOT]                          ; setenv, setenv@GOT, CODE XREF=setenv_TZ+20
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3386:
0000000000003386         push       0x14
000000000000338b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
0000000000003390         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+86
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3396:
0000000000003396         push       0x15
000000000000339b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
00000000000033a0         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_33a6:
00000000000033a6         push       0x16
00000000000033ab         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_opendir:        // opendir
00000000000033b0         jmp        qword [opendir@GOT]                         ; opendir, opendir@GOT, CODE XREF=print_dir+67
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_33b6:
00000000000033b6         push       0x17
00000000000033bb         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getpwuid:        // getpwuid
00000000000033c0         jmp        qword [getpwuid@GOT]                        ; getpwuid, getpwuid@GOT, CODE XREF=getuser+54
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_33c6:
00000000000033c6         push       0x18
00000000000033cb         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
00000000000033d0         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_33d6:
00000000000033d6         push       0x19
00000000000033db         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
00000000000033e0         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+979, main+2411, main+3723, main+3798, main+4998, main+5163, main+5189, main+5685, main+5721, main+6066, main+6151
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_33e6:
00000000000033e6         push       0x1a
00000000000033eb         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
00000000000033f0         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quote_name_buf.constprop.54+234, quote_name_buf.constprop.54+488, mbsalign+416, mbsnwidth+41, quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_33f6:
00000000000033f6         push       0x1b
00000000000033fb         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
0000000000003400         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=needs_quoting+102, file_escape+14, format_user_or_group+58, quote_name_buf.constprop.54+168, quote_name_buf.constprop.54+214, quote_name_buf.constprop.54+443, print_name_with_quoting+643, print_long_format+485, print_long_format+861, length_of_file_name_and_frills+295, length_of_file_name_and_frills+383
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3406:
0000000000003406         push       0x1c
000000000000340b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___lxstat:        // __lxstat
0000000000003410         jmp        qword [__lxstat@GOT]                        ; __lxstat, __lxstat@GOT, CODE XREF=gobble_file.constprop.52+1211, canonicalize_filename_mode+800
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3416:
0000000000003416         push       0x1d
000000000000341b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
0000000000003420         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=main+6591, set_line_length+122, abformat_init+620, needs_quoting+115, signal_setup+457, process_signals+229, quote_name_buf.constprop.54+1113, quote_name+1020, print_file_name_and_frills+392, print_long_format+2515, quote_name_width+128
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3426:
0000000000003426         push       0x1e
000000000000342b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
0000000000003430         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+646
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3436:
0000000000003436         push       0x1f
000000000000343b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
0000000000003440         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3446:
0000000000003446         push       0x20
000000000000344b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strchr:        // strchr
0000000000003450         jmp        qword [strchr@GOT]                          ; strchr, strchr@GOT, CODE XREF=main+5397, main+5426, abformat_init+208, xstrtoul+291, xstrtoul+323, xstrtoul+380, xstrtoumax+291, xstrtoumax+323, xstrtoumax+380
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3456:
0000000000003456         push       0x21
000000000000345b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getgrgid:        // getgrgid
0000000000003460         jmp        qword [getgrgid@GOT]                        ; getgrgid, getgrgid@GOT, CODE XREF=getgroup+54
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3466:
0000000000003466         push       0x22
000000000000346b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fxstatat:        // __fxstatat
0000000000003470         jmp        qword [__fxstatat@GOT]                      ; __fxstatat, __fxstatat@GOT, CODE XREF=same_nameat.part.0+71, same_nameat.part.0+127
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3476:
0000000000003476         push       0x23
000000000000347b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_snprintf:        // snprintf
0000000000003480         jmp        qword [snprintf@GOT]                        ; snprintf, snprintf@GOT, CODE XREF=abformat_init+613
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3486:
0000000000003486         push       0x24
000000000000348b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___overflow:        // __overflow
0000000000003490         jmp        qword [__overflow@GOT]                      ; __overflow, __overflow@GOT, CODE XREF=main+6383, indent+157, indent+181, dired_dump_obstack+196, format_user_or_group+149, print_type_indicator+67, quote_name+963, quote_name+981, quote_name+999, print_with_separator+354, print_with_separator+380
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3496:
0000000000003496         push       0x25
000000000000349b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
00000000000034a0         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=rev_strcmp_df_extension+154, rev_strcmp_df_extension+173, xstrcoll_extension+18, xstrcoll_extension+35, rev_xstrcoll_extension+19, rev_xstrcoll_extension+36, strcmp_extension+18, strcmp_extension+38, rev_strcmp_extension+18, rev_strcmp_extension+38, rev_xstrcoll_df_extension+154
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_34a6:
00000000000034a6         push       0x26
00000000000034ab         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_gmtime_r:        // gmtime_r
00000000000034b0         jmp        qword [gmtime_r@GOT]                        ; gmtime_r, gmtime_r@GOT, CODE XREF=localtime_rz+144
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_34b6:
00000000000034b6         push       0x27
00000000000034bb         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
00000000000034c0         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_34c6:
00000000000034c6         push       0x28
00000000000034cb         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___assert_fail:        // __assert_fail
00000000000034d0         jmp        qword [__assert_fail@GOT]                   ; __assert_fail, __assert_fail@GOT, CODE XREF=main+6497, main+6528, main+6559, sort_files+385, xstrtoul+927, xstrtoumax+927
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_34d6:
00000000000034d6         push       0x29
00000000000034db         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___strtoul_internal:        // __strtoul_internal
00000000000034e0         jmp        qword [__strtoul_internal@GOT]              ; __strtoul_internal, __strtoul_internal@GOT, CODE XREF=xstrtoumax+142
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_34e6:
00000000000034e6         push       0x2a
00000000000034eb         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fnmatch:        // fnmatch
00000000000034f0         jmp        qword [fnmatch@GOT]                         ; fnmatch, fnmatch@GOT, CODE XREF=main+4836, print_dir+624, print_dir+1268
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_34f6:
00000000000034f6         push       0x2b
00000000000034fb         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
0000000000003500         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=__strftime_internal+285, __strftime_internal+737, __strftime_internal+1204, __strftime_internal+1570, sub_10bf0+119, sub_10bf0+321, sub_10df0+162, sub_11040+363, sub_11040+429, sub_11040+564, sub_112b0+1560
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3506:
0000000000003506         push       0x2c
000000000000350b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_ioctl:        // ioctl
0000000000003510         jmp        qword [ioctl@GOT]                           ; ioctl, ioctl@GOT, CODE XREF=main+487
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3516:
0000000000003516         push       0x2d
000000000000351b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getcwd:        // getcwd
0000000000003520         jmp        qword [getcwd@GOT]                          ; getcwd, getcwd@GOT, CODE XREF=xgetcwd+5
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3526:
0000000000003526         push       0x2e
000000000000352b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strspn:        // strspn
0000000000003530         jmp        qword [strspn@GOT]                          ; strspn, strspn@GOT, CODE XREF=canonicalize_filename_mode+676
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3536:
0000000000003536         push       0x2f
000000000000353b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_closedir:        // closedir
0000000000003540         jmp        qword [closedir@GOT]                        ; closedir, closedir@GOT, CODE XREF=print_dir+172, print_dir+376, print_dir+905
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3546:
0000000000003546         push       0x30
000000000000354b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
0000000000003550         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=argmatch+111, argmatch_valid+150, argmatch_to_argument+56, quotearg_buffer_restyled+410, same_nameat+105
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3556:
0000000000003556         push       0x31
000000000000355b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__setjmp:        // _setjmp
0000000000003560         jmp        qword [_setjmp@GOT]                         ; _setjmp, _setjmp@GOT, CODE XREF=sort_files+102
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3566:
0000000000003566         push       0x32
000000000000356b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
0000000000003570         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=main+6084, main+6162, dired_dump_obstack+105, format_user_or_group+47, print_long_format+557, print_long_format+884, print_dir+1004, print_dir+1112, usage+166, usage+203, usage+240
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3576:
0000000000003576         push       0x33
000000000000357b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
0000000000003580         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=hash_initialize+177, hash_rehash+198, xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3586:
0000000000003586         push       0x34
000000000000358b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcmp:        // strcmp
0000000000003590         jmp        qword [strcmp@GOT]                          ; strcmp, strcmp@GOT, CODE XREF=main+5625, strcmp_size+18, rev_strcmp_size+21, strcmp_name+6, rev_strcmp_name+9, strcmp_df_size+148, rev_strcmp_df_size+148, strcmp_df_name+136, rev_strcmp_df_name+136, strcmp_df_mtime+163, rev_strcmp_df_extension+203
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3596:
0000000000003596         push       0x35
000000000000359b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_signal:        // signal
00000000000035a0         jmp        qword [signal@GOT]                          ; signal, signal@GOT, CODE XREF=signal_setup+101, process_signals+188
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_35a6:
00000000000035a6         push       0x36
00000000000035ab         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dirfd:        // dirfd
00000000000035b0         jmp        qword [dirfd@GOT]                           ; dirfd, dirfd@GOT, CODE XREF=print_dir+101
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_35b6:
00000000000035b6         push       0x37
00000000000035bb         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getpwnam:        // getpwnam
00000000000035c0         jmp        qword [getpwnam@GOT]                        ; getpwnam, getpwnam@GOT, CODE XREF=getuidbyname+147
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_35c6:
00000000000035c6         push       0x38
00000000000035cb         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___memcpy_chk:        // __memcpy_chk
00000000000035d0         jmp        qword [__memcpy_chk@GOT]                    ; __memcpy_chk, __memcpy_chk@GOT, CODE XREF=human_readable+1180
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_35d6:
00000000000035d6         push       0x39
00000000000035db         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_sigemptyset:        // sigemptyset
00000000000035e0         jmp        qword [sigemptyset@GOT]                     ; sigemptyset, sigemptyset@GOT, CODE XREF=signal_setup+190
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_35e6:
00000000000035e6         push       0x3a
00000000000035eb         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
00000000000035f0         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=quote_name_buf.constprop.54+473, canonicalize_filename_mode+387, canonicalize_filename_mode+1208, mdir_name+53, human_readable+1245, human_readable+1274, human_readable+1338, mpsort_with_tmp+321, mpsort_with_tmp+552, sub_11040+609, sub_112b0+1904
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_35f6:
00000000000035f6         push       0x3b
00000000000035fb         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getgrnam:        // getgrnam
0000000000003600         jmp        qword [getgrnam@GOT]                        ; getgrnam, getgrnam@GOT, CODE XREF=getgidbyname+147
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3606:
0000000000003606         push       0x3c
000000000000360b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_tzset:        // tzset
0000000000003610         jmp        qword [tzset@GOT]                           ; tzset, tzset@GOT, CODE XREF=revert_tz.part.1+80, set_tz+216
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3616:
0000000000003616         push       0x3d
000000000000361b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
0000000000003620         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3626:
0000000000003626         push       0x3e
000000000000362b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_tcgetpgrp:        // tcgetpgrp
0000000000003630         jmp        qword [tcgetpgrp@GOT]                       ; tcgetpgrp, tcgetpgrp@GOT, CODE XREF=put_indicator+60
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3636:
0000000000003636         push       0x3f
000000000000363b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___xstat:        // __xstat
0000000000003640         jmp        qword [__xstat@GOT]                         ; __xstat, __xstat@GOT, CODE XREF=gobble_file.constprop.52+364, gobble_file.constprop.52+1482, gobble_file.constprop.52+2639, print_dir+232, canonicalize_filename_mode+617
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3646:
0000000000003646         push       0x40
000000000000364b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_readdir:        // readdir
0000000000003650         jmp        qword [readdir@GOT]                         ; readdir, readdir@GOT, CODE XREF=print_dir+523
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3656:
0000000000003656         push       0x41
000000000000365b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_wcwidth:        // wcwidth
0000000000003660         jmp        qword [wcwidth@GOT]                         ; wcwidth, wcwidth@GOT, CODE XREF=quote_name_buf.constprop.54+658, quote_name_buf.constprop.54+816, mbsalign+750, mbsnwidth+227
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3666:
0000000000003666         push       0x42
000000000000366b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
0000000000003670         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3676:
0000000000003676         push       0x43
000000000000367b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
0000000000003680         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=abformat_init+192, locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3686:
0000000000003686         push       0x44
000000000000368b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fxstat:        // __fxstat
0000000000003690         jmp        qword [__fxstat@GOT]                        ; __fxstat, __fxstat@GOT, CODE XREF=print_dir+122
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3696:
0000000000003696         push       0x45
000000000000369b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcoll:        // strcoll
00000000000036a0         jmp        qword [strcoll@GOT]                         ; strcoll, strcoll@GOT, CODE XREF=xstrcoll+35
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_36a6:
00000000000036a6         push       0x46
00000000000036ab         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mktime:        // mktime
00000000000036b0         jmp        qword [mktime@GOT]                          ; mktime, mktime@GOT, CODE XREF=mktime_z+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_36b6:
00000000000036b6         push       0x47
00000000000036bb         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
00000000000036c0         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_36c6:
00000000000036c6         push       0x48
00000000000036cb         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite_unlocked:        // fwrite_unlocked
00000000000036d0         jmp        qword [fwrite_unlocked@GOT]                 ; fwrite_unlocked, fwrite_unlocked@GOT, CODE XREF=put_indicator+33, quote_name+404, quote_name+493, quote_name+801, print_long_format+1299, print_long_format+1600, print_dir+819, print_dir+1536, print_dir+1643
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_36d6:
00000000000036d6         push       0x49
00000000000036db         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
00000000000036e0         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=ambsalign+50, xrealloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_36e6:
00000000000036e6         push       0x4a
00000000000036eb         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_stpncpy:        // stpncpy
00000000000036f0         jmp        qword [stpncpy@GOT]                         ; stpncpy, stpncpy@GOT, CODE XREF=gobble_file.constprop.52+2512
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_36f6:
00000000000036f6         push       0x4b
00000000000036fb         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
0000000000003700         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+55, usage+1516, usage+1705, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3706:
0000000000003706         push       0x4c
000000000000370b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
0000000000003710         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=main+4647, dired_dump_obstack+129, format_user_or_group+180, quote_name+291, print_file_name_and_frills+108, print_file_name_and_frills+173, print_file_name_and_frills+225, usage+129, usage+1504, usage+1593, usage+1654
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3716:
0000000000003716         push       0x4d
000000000000371b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_timegm:        // timegm
0000000000003720         jmp        qword [timegm@GOT]                          ; timegm, timegm@GOT, CODE XREF=mktime_z+291
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3726:
0000000000003726         push       0x4e
000000000000372b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strftime:        // strftime
0000000000003730         jmp        qword [strftime@GOT]                        ; strftime, strftime@GOT, CODE XREF=__strftime_internal+1048
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3736:
0000000000003736         push       0x4f
000000000000373b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mempcpy:        // mempcpy
0000000000003740         jmp        qword [mempcpy@GOT]                         ; mempcpy, mempcpy@GOT, CODE XREF=mfile_name_concat+173, mfile_name_concat+206, mbsalign+247
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3746:
0000000000003746         push       0x50
000000000000374b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memmove:        // memmove
0000000000003750         jmp        qword [memmove@GOT]                         ; memmove, memmove@GOT, CODE XREF=canonicalize_filename_mode+1192, human_readable+885
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3756:
0000000000003756         push       0x51
000000000000375b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
0000000000003760         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+2438, main+3740, main+3815, main+5015, main+5702, main+5735, main+6466, file_failure+42, gobble_file.constprop.52+2349, print_dir+368, argmatch_invalid+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3766:
0000000000003766         push       0x52
000000000000376b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
0000000000003770         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3776:
0000000000003776         push       0x53
000000000000377b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_unsetenv:        // unsetenv
0000000000003780         jmp        qword [unsetenv@GOT]                        ; unsetenv, unsetenv@GOT, CODE XREF=setenv_TZ+39
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3786:
0000000000003786         push       0x54
000000000000378b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strtoul:        // strtoul
0000000000003790         jmp        qword [strtoul@GOT]                         ; strtoul, strtoul@GOT, CODE XREF=xstrtoul+140
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3796:
0000000000003796         push       0x55
000000000000379b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
00000000000037a0         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_37a6:
00000000000037a6         push       0x56
00000000000037ab         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_wcstombs:        // wcstombs
00000000000037b0         jmp        qword [wcstombs@GOT]                        ; wcstombs, wcstombs@GOT, CODE XREF=mbsalign+674, mbsalign+807
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_37b6:
00000000000037b6         push       0x57
00000000000037bb         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_gethostname:        // gethostname
00000000000037c0         jmp        qword [gethostname@GOT]                     ; gethostname, gethostname@GOT, CODE XREF=xgethostname+105
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_37c6:
00000000000037c6         push       0x58
00000000000037cb         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_sigismember:        // sigismember
00000000000037d0         jmp        qword [sigismember@GOT]                     ; sigismember, sigismember@GOT, CODE XREF=signal_setup+88, signal_setup+406
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_37d6:
00000000000037d6         push       0x59
00000000000037db         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
00000000000037e0         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+1447, usage+90, print_and_abort+58
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_37e6:
00000000000037e6         push       0x5a
00000000000037eb         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
00000000000037f0         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_37f6:
00000000000037f6         push       0x5b
00000000000037fb         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
0000000000003800         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=main+6117, usage+82, argmatch_valid+122, argmatch_valid+198, hash_print_statistics+118, hash_print_statistics+143, hash_print_statistics+211, hash_print_statistics+246, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3806:
0000000000003806         push       0x5c
000000000000380b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush_unlocked:        // fflush_unlocked
0000000000003810         jmp        qword [fflush_unlocked@GOT]                 ; fflush_unlocked, fflush_unlocked@GOT, CODE XREF=main+3927, process_signals+47
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3816:
0000000000003816         push       0x5d
000000000000381b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
0000000000003820         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=quote_name_buf.constprop.54+711, mbsnwidth+167, sub_12920+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3826:
0000000000003826         push       0x5e
000000000000382b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
0000000000003830         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=mbsalign+605, sub_12920+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3836:
0000000000003836         push       0x5f
000000000000383b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_sigaddset:        // sigaddset
0000000000003840         jmp        qword [sigaddset@GOT]                       ; sigaddset, sigaddset@GOT, CODE XREF=signal_setup+241
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3846:
0000000000003846         push       0x60
000000000000384b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_tolower_loc:        // __ctype_tolower_loc
0000000000003850         jmp        qword [__ctype_tolower_loc@GOT]             ; __ctype_tolower_loc, __ctype_tolower_loc@GOT, CODE XREF=memcpy_lowcase+19
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3856:
0000000000003856         push       0x61
000000000000385b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
0000000000003860         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=abformat_init+222, quote_name_buf.constprop.54+263, quote_name_buf.constprop.54+951, mbsnwidth+367, sub_126c0+51, xstrtoul+85, xstrtoumax+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3866:
0000000000003866         push       0x62
000000000000386b         jmp        0x3230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___sprintf_chk:        // __sprintf_chk
0000000000003870         jmp        qword [__sprintf_chk@GOT]                   ; __sprintf_chk, __sprintf_chk@GOT, CODE XREF=file_escape+172, print_long_format+225, print_long_format+477, print_long_format+853, print_long_format+2246, format_user_width+61, gobble_file.constprop.52+2858, human_readable+449, human_readable+818, human_readable+1818, human_readable+1899
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3876:
0000000000003876         push       0x63
000000000000387b         jmp        0x3230
                        ; endp


        ; Section .plt.got
        ; Range: [0x3880; 0x3898[ (24 bytes)
        ; File offset : [14464; 14488[ (24 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3880:
0000000000003880         jmp        qword [qword_21ffc0]                        ; qword, End of unwind block (FDE at 0x1b69c), Begin of unwind block (FDE at 0x1b6c4), qword_21ffc0, CODE XREF=main+3368, main+3377, main+3385, main+3523, main+3531, main+3540, main+3548, main+5747, main+5765, dev_ino_free, sort_files+279
                        ; endp
0000000000003886         align      8


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3888:
0000000000003888         jmp        qword [qword_21ffe0]                        ; qword, qword_21ffe0, CODE XREF=areadlink_with_size+67, areadlink_with_size+126, mdir_name+31, mfile_name_concat+151, transfer_entries+293, hash_initialize+62, hash_insert_if_absent+517, mbsalign+516, mbsalign+693, xmalloc+4, tzalloc+42
                        ; endp
000000000000388e         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_21fff0:        // qword_21fff0
0000000000003890         jmp        qword [qword_21fff0]                        ; qword, qword_21fff0, CODE XREF=__do_global_dtors_aux+30
                        ; endp
0000000000003896         align      8
0000000000003898         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x1b6c4)
0000000000003899         db  0x00 ; '.'
000000000000389a         db  0x00 ; '.'
000000000000389b         db  0x00 ; '.'
000000000000389c         db  0x00 ; '.'
000000000000389d         db  0x00 ; '.'
000000000000389e         db  0x00 ; '.'
000000000000389f         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x38a0; 0x15f4e[ (75438 bytes)
        ; File offset : [14496; 89934[ (75438 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_41: int8_t, -65
        ;    var_42: int8_t, -66
        ;    var_43: int16_t, -67
        ;    var_50: int64_t, -80
        ;    var_56: int16_t, -86
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128


                     main:
00000000000038a0         push       r15                                         ; Begin of unwind block (FDE at 0x1c508), DATA XREF=_start+29
00000000000038a2         push       r14
00000000000038a4         push       r13
00000000000038a6         push       r12
00000000000038a8         push       rbp
00000000000038a9         push       rbx
00000000000038aa         mov        ebp, edi
00000000000038ac         mov        rbx, rsi
00000000000038af         sub        rsp, 0x58
00000000000038b3         mov        rdi, qword [rsi]
00000000000038b6         mov        rax, qword [fs:0x28]
00000000000038bf         mov        qword [rsp+0x88+var_40], rax
00000000000038c4         xor        eax, eax
00000000000038c6         call       set_program_name                            ; set_program_name
00000000000038cb         lea        rsi, qword [aLu+34]                         ; argument "__locale" for method j_setlocale, 0x178b3
00000000000038d2         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
00000000000038d7         call       j_setlocale                                 ; setlocale
00000000000038dc         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
00000000000038e3         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
00000000000038ea         call       j_bindtextdomain                            ; bindtextdomain
00000000000038ef         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
00000000000038f6         call       j_textdomain                                ; textdomain
00000000000038fb         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
0000000000003902         mov        dword [exit_failure], 0x2                   ; exit_failure
000000000000390c         call       atexit                                      ; atexit
0000000000003911         movabs     rax, 0x8000000000000000
000000000000391b         mov        dword [exit_status], 0x0                    ; exit_status
0000000000003925         mov        byte [print_dir_name], 0x1                  ; print_dir_name
000000000000392c         mov        qword [current_time], rax                   ; current_time
0000000000003933         mov        eax, dword [ls_mode]                        ; ls_mode
0000000000003939         mov        qword [pending_dirs], 0x0                   ; pending_dirs
0000000000003944         mov        qword [qword_221378], 0xffffffffffffffff    ; qword_221378
000000000000394f         mov        byte [qmark_funny_chars], 0x0               ; qmark_funny_chars
0000000000003956         cmp        eax, 0x2
0000000000003959         je         loc_46f7

000000000000395f         cmp        eax, 0x3
0000000000003962         je         loc_3972

0000000000003964         sub        eax, 0x1
0000000000003967         je         loc_425a

000000000000396d         call       j_abort                                     ; abort
                        ; endp

                     loc_3972:
0000000000003972         mov        esi, 0x7                                    ; CODE XREF=main+194
0000000000003977         xor        edi, edi
0000000000003979         mov        dword [format], 0x0                         ; format
0000000000003983         call       set_quoting_style                           ; set_quoting_style

                     loc_3988:
0000000000003988         lea        rdi, qword [aQuotingstyle]                  ; argument "__name" for method j_getenv, "QUOTING_STYLE", CODE XREF=main+2518, main+3693, main+5292
000000000000398f         mov        dword [time_type], 0x0                      ; time_type
0000000000003999         mov        dword [sort_type], 0x0                      ; sort_type
00000000000039a3         mov        byte [sort_reverse], 0x0                    ; sort_reverse
00000000000039aa         mov        byte [numeric_ids], 0x0                     ; numeric_ids
00000000000039b1         mov        byte [print_block_size], 0x0                ; print_block_size
00000000000039b8         mov        dword [indicator_style], 0x0                ; indicator_style
00000000000039c2         mov        byte [print_inode], 0x0                     ; print_inode
00000000000039c9         mov        dword [dereference], 0x1                    ; dereference
00000000000039d3         mov        byte [recursive], 0x0                       ; recursive
00000000000039da         mov        byte [immediate_dirs], 0x0                  ; immediate_dirs
00000000000039e1         mov        dword [ignore_mode], 0x0                    ; ignore_mode
00000000000039eb         mov        qword [ignore_patterns], 0x0                ; ignore_patterns
00000000000039f6         mov        qword [hide_patterns], 0x0                  ; hide_patterns
0000000000003a01         mov        byte [print_scontext], 0x0                  ; print_scontext
0000000000003a08         call       j_getenv                                    ; getenv
0000000000003a0d         test       rax, rax
0000000000003a10         mov        r12, rax
0000000000003a13         je         loc_3a4b

0000000000003a15         lea        rdx, qword [quoting_style_vals]             ; quoting_style_vals
0000000000003a1c         lea        rsi, qword [quoting_style_args]             ; quoting_style_args
0000000000003a23         mov        ecx, 0x4
0000000000003a28         mov        rdi, rax
0000000000003a2b         call       argmatch                                    ; argmatch
0000000000003a30         test       eax, eax
0000000000003a32         js         loc_4712

0000000000003a38         lea        rdx, qword [quoting_style_vals]             ; quoting_style_vals
0000000000003a3f         cdqe
0000000000003a41         xor        edi, edi
0000000000003a43         mov        esi, dword [rdx+rax*4]
0000000000003a46         call       set_quoting_style                           ; set_quoting_style

                     loc_3a4b:
0000000000003a4b         lea        rdi, qword [aColumns]                       ; argument "__name" for method j_getenv, "COLUMNS", CODE XREF=main+371, main+3745
0000000000003a52         mov        qword [line_length], 0x50                   ; line_length
0000000000003a5d         call       j_getenv                                    ; getenv
0000000000003a62         test       rax, rax
0000000000003a65         mov        r12, rax
0000000000003a68         je         loc_3a73

0000000000003a6a         cmp        byte [rax], 0x0
0000000000003a6d         jne        loc_474d

                     loc_3a73:
0000000000003a73         lea        r12, qword [rsp+0x88+var_58]                ; CODE XREF=main+456, main+3767, main+3820
0000000000003a78         xor        eax, eax
0000000000003a7a         mov        esi, 0x5413                                 ; argument "__request" for method j_ioctl
0000000000003a7f         mov        edi, 0x1                                    ; argument "__fd" for method j_ioctl
0000000000003a84         mov        rdx, r12
0000000000003a87         call       j_ioctl                                     ; ioctl
0000000000003a8c         cmp        eax, 0xffffffff
0000000000003a8f         je         loc_3aa2

0000000000003a91         movzx      eax, word [rsp+0x88+var_56]
0000000000003a96         test       ax, ax
0000000000003a99         je         loc_3aa2

0000000000003a9b         mov        qword [line_length], rax                    ; line_length

                     loc_3aa2:
0000000000003aa2         lea        rdi, qword [aTabsize]                       ; argument "__name" for method j_getenv, "TABSIZE", CODE XREF=main+495, main+505
0000000000003aa9         call       j_getenv                                    ; getenv
0000000000003aae         test       rax, rax
0000000000003ab1         mov        r13, rax
0000000000003ab4         mov        qword [tabsize], 0x8                        ; tabsize
0000000000003abf         je         loc_3ae7

0000000000003ac1         xor        r8d, r8d
0000000000003ac4         xor        edx, edx
0000000000003ac6         xor        esi, esi
0000000000003ac8         mov        rcx, r12
0000000000003acb         mov        rdi, rax
0000000000003ace         call       xstrtoul                                    ; xstrtoul
0000000000003ad3         test       eax, eax
0000000000003ad5         jne        loc_4c0d

0000000000003adb         mov        rax, qword [rsp+0x88+var_58]
0000000000003ae0         mov        qword [tabsize], rax                        ; tabsize

                     loc_3ae7:
0000000000003ae7         lea        r13, qword [switch_table_16178]             ; switch_table_16178, CODE XREF=main+543, main+5020
0000000000003aee         mov        byte [rsp+0x88+var_78], 0x0
0000000000003af3         mov        byte [rsp+0x88+var_80], 0x0
0000000000003af8         xor        r14d, r14d
0000000000003afb         mov        r15d, 0x1
0000000000003b01         nop        dword [rax]

                     loc_3b08:
0000000000003b08         lea        rcx, qword [long_options]                   ; argument "__longopts" for method j_getopt_long, long_options, CODE XREF=main+703, main+710, main+719, main+763, main+785, main+849, main+861, main+876, main+893, main+908, main+920
0000000000003b0f         lea        rdx, qword [aAbcdfghiklmnop]                ; argument "__shortopts" for method j_getopt_long, "abcdfghiklmnopqrstuvw:xABCDFGHI:LNQRST:UXZ1"
0000000000003b16         mov        r8, r12                                     ; argument "__longind" for method j_getopt_long
0000000000003b19         mov        rsi, rbx                                    ; argument "___argv" for method j_getopt_long
0000000000003b1c         mov        edi, ebp                                    ; argument "___argc" for method j_getopt_long
0000000000003b1e         mov        dword [rsp+0x88+var_58], 0xffffffff
0000000000003b26         call       j_getopt_long                               ; getopt_long
0000000000003b2b         cmp        eax, 0xffffffff
0000000000003b2e         je         loc_42bb

0000000000003b34         add        eax, 0x83
0000000000003b39         cmp        eax, 0x113
0000000000003b3e         ja         loc_50b7

0000000000003b44         movsxd     rax, dword [r13+rax*4]
0000000000003b49         add        rax, r13
0000000000003b4c         jmp        rax                                         ; switch statement using table at 0x16178, with 276 cases, 0x3b4e,0x3b55,0x3b61,0x3b68,0x3b71,0x3ba0,0x3bb6,0x3bf6,0x3c02,0x3c11,0x3c22,0x3c31,0x3c3d,0x3c51,0x3c65,0x3caa,0x3cbe,0x3cca,0x3cdb,0x3ce9,0x3cf8,0x3d2d,0x3d3c,0x3d48,0x3d57,0x3d63,0x3d72,0x3dc3,0x3dd2,0x3dee,0x3e4c,0x3e58,0x3e9b,0x3ee3,0x3f12,0x3f1e,0x3f62,0x3fa5,0x4011,0x403c,0x4048,0x405e,0x40a1,0x40b0,0x40bf,0x411e,0x415f,0x4173,0x417f,0x418b,0x4197,0x41a6,0x41bc,0x41cb,0x41da,0x422b,0x423f,0x424e,0x501d,0x50b7

                     loc_3b4e:
0000000000003b4e         mov        byte [numeric_ids], r15b                    ; case 241, numeric_ids, CODE XREF=main+684

                     loc_3b55:
0000000000003b55         mov        dword [format], 0x0                         ; case 239, format, CODE XREF=main+684
0000000000003b5f         jmp        loc_3b08

                     loc_3b61:
0000000000003b61         mov        byte [rsp+0x88+var_78], 0x1                 ; case 238, CODE XREF=main+684
0000000000003b66         jmp        loc_3b08

                     loc_3b68:
0000000000003b68         mov        byte [print_inode], r15b                    ; case 236, print_inode, CODE XREF=main+684
0000000000003b6f         jmp        loc_3b08

                     loc_3b71:
0000000000003b71         mov        dword [human_output_opts], 0xb0             ; case 235, human_output_opts, CODE XREF=main+684
0000000000003b7b         mov        dword [file_human_output_opts], 0xb0        ; file_human_output_opts
0000000000003b85         mov        qword [output_block_size], 0x1              ; output_block_size
0000000000003b90         mov        qword [file_output_block_size], 0x1         ; file_output_block_size
0000000000003b9b         jmp        loc_3b08

                     loc_3ba0:
0000000000003ba0         mov        dword [format], 0x0                         ; case 234, format, CODE XREF=main+684
0000000000003baa         mov        byte [print_owner], 0x0                     ; print_owner
0000000000003bb1         jmp        loc_3b08

                     loc_3bb6:
0000000000003bb6         cmp        dword [format], 0x0                         ; case 233, format, CODE XREF=main+684
0000000000003bbd         mov        dword [ignore_mode], 0x2                    ; ignore_mode
0000000000003bc7         mov        dword [sort_type], 0xffffffff               ; sort_type
0000000000003bd1         je         loc_4cfb

                     loc_3bd7:
0000000000003bd7         mov        byte [print_block_size], 0x0                ; print_block_size, CODE XREF=main+5235
0000000000003bde         mov        byte [print_with_color], 0x0                ; print_with_color
0000000000003be5         mov        byte [print_hyperlink], 0x0                 ; print_hyperlink
0000000000003bec         mov        byte [rsp+0x88+var_80], 0x1
0000000000003bf1         jmp        loc_3b08

                     loc_3bf6:
0000000000003bf6         mov        byte [immediate_dirs], r15b                 ; case 231, immediate_dirs, CODE XREF=main+684
0000000000003bfd         jmp        loc_3b08

                     loc_3c02:
0000000000003c02         mov        dword [time_type], 0x1                      ; case 230, time_type, CODE XREF=main+684
0000000000003c0c         jmp        loc_3b08

                     loc_3c11:
0000000000003c11         mov        esi, 0x7                                    ; case 229, CODE XREF=main+684
0000000000003c16         xor        edi, edi
0000000000003c18         call       set_quoting_style                           ; set_quoting_style
0000000000003c1d         jmp        loc_3b08

                     loc_3c22:
0000000000003c22         mov        dword [ignore_mode], 0x2                    ; case 228, ignore_mode, CODE XREF=main+684
0000000000003c2c         jmp        loc_3b08

                     loc_3c31:
0000000000003c31         mov        byte [print_scontext], r15b                 ; case 221, print_scontext, CODE XREF=main+684
0000000000003c38         jmp        loc_3b08

                     loc_3c3d:
0000000000003c3d         mov        dword [sort_type], 0x1                      ; case 219, sort_type, CODE XREF=main+684
0000000000003c47         mov        byte [rsp+0x88+var_80], 0x1
0000000000003c4c         jmp        loc_3b08

                     loc_3c51:
0000000000003c51         mov        dword [sort_type], 0xffffffff               ; case 216, sort_type, CODE XREF=main+684
0000000000003c5b         mov        byte [rsp+0x88+var_80], 0x1
0000000000003c60         jmp        loc_3b08

                     loc_3c65:
0000000000003c65         lea        rsi, qword [aInvalidTabSize]                ; case 215, argument "msgid" for method j_dcgettext, "invalid tab size", CODE XREF=main+684
0000000000003c6c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003c71         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003c73         call       j_dcgettext                                 ; dcgettext
0000000000003c78         sub        rsp, 0x8
0000000000003c7c         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000003c83         lea        r8, qword [aLu+34]                          ; 0x178b3
0000000000003c8a         push       0x2
0000000000003c8c         xor        edx, edx
0000000000003c8e         mov        r9, rax
0000000000003c91         or         rcx, 0xffffffffffffffff
0000000000003c95         xor        esi, esi
0000000000003c97         call       xnumtoumax                                  ; xnumtoumax
0000000000003c9c         mov        qword [tabsize], rax                        ; tabsize
0000000000003ca3         pop        rax
0000000000003ca4         pop        rdx
0000000000003ca5         jmp        loc_3b08

                     loc_3caa:
0000000000003caa         mov        dword [sort_type], 0x2                      ; case 214, sort_type, CODE XREF=main+684
0000000000003cb4         mov        byte [rsp+0x88+var_80], 0x1
0000000000003cb9         jmp        loc_3b08

                     loc_3cbe:
0000000000003cbe         mov        byte [recursive], r15b                      ; case 213, recursive, CODE XREF=main+684
0000000000003cc5         jmp        loc_3b08

                     loc_3cca:
0000000000003cca         mov        esi, 0x5                                    ; case 212, CODE XREF=main+684
0000000000003ccf         xor        edi, edi
0000000000003cd1         call       set_quoting_style                           ; set_quoting_style
0000000000003cd6         jmp        loc_3b08

                     loc_3cdb:
0000000000003cdb         xor        esi, esi                                    ; case 209, CODE XREF=main+684
0000000000003cdd         xor        edi, edi
0000000000003cdf         call       set_quoting_style                           ; set_quoting_style
0000000000003ce4         jmp        loc_3b08

                     loc_3ce9:
0000000000003ce9         mov        dword [dereference], 0x5                    ; case 207, dereference, CODE XREF=main+684
0000000000003cf3         jmp        loc_3b08

                     loc_3cf8:
0000000000003cf8         mov        rdx, qword [optarg@@GLIBC_2.2.5]            ; case 204, optarg@@GLIBC_2.2.5, CODE XREF=main+684
0000000000003cff         mov        edi, 0x10                                   ; argument #1 for method xmalloc
0000000000003d04         mov        qword [rsp+0x88+var_70], rdx
0000000000003d09         call       xmalloc                                     ; xmalloc
0000000000003d0e         mov        rdx, qword [rsp+0x88+var_70]
0000000000003d13         mov        qword [rax], rdx
0000000000003d16         mov        rdx, qword [ignore_patterns]                ; ignore_patterns
0000000000003d1d         mov        qword [rax+8], rdx
0000000000003d21         mov        qword [ignore_patterns], rax                ; ignore_patterns
0000000000003d28         jmp        loc_3b08

                     loc_3d2d:
0000000000003d2d         mov        dword [dereference], 0x3                    ; case 203, dereference, CODE XREF=main+684
0000000000003d37         jmp        loc_3b08

                     loc_3d3c:
0000000000003d3c         mov        byte [print_group], 0x0                     ; case 202, print_group, CODE XREF=main+684
0000000000003d43         jmp        loc_3b08

                     loc_3d48:
0000000000003d48         mov        dword [indicator_style], 0x3                ; case 201, indicator_style, CODE XREF=main+684
0000000000003d52         jmp        loc_3b08

                     loc_3d57:
0000000000003d57         mov        byte [dired], r15b                          ; case 199, dired, CODE XREF=main+684
0000000000003d5e         jmp        loc_3b08

                     loc_3d63:
0000000000003d63         mov        dword [format], 0x2                         ; case 198, format, CODE XREF=main+684
0000000000003d6d         jmp        loc_3b08

                     loc_3d72:
0000000000003d72         mov        edi, 0x10                                   ; case 197, argument #1 for method xmalloc, CODE XREF=main+684
0000000000003d77         call       xmalloc                                     ; xmalloc
0000000000003d7c         mov        rdx, qword [ignore_patterns]                ; ignore_patterns
0000000000003d83         lea        rsi, qword [aSS_17a58+8]                    ; 0x17a60
0000000000003d8a         mov        edi, 0x10                                   ; argument #1 for method xmalloc
0000000000003d8f         mov        qword [ignore_patterns], rax                ; ignore_patterns
0000000000003d96         mov        qword [rax], rsi
0000000000003d99         mov        qword [rax+8], rdx
0000000000003d9d         call       xmalloc                                     ; xmalloc
0000000000003da2         mov        rdx, qword [ignore_patterns]                ; ignore_patterns
0000000000003da9         lea        rsi, qword [aSS_17a58+7]                    ; 0x17a5f
0000000000003db0         mov        qword [rax], rsi
0000000000003db3         mov        qword [rax+8], rdx
0000000000003db7         mov        qword [ignore_patterns], rax                ; ignore_patterns
0000000000003dbe         jmp        loc_3b08

                     loc_3dc3:
0000000000003dc3         mov        dword [ignore_mode], 0x1                    ; case 196, ignore_mode, CODE XREF=main+684
0000000000003dcd         jmp        loc_3b08

                     loc_3dd2:
0000000000003dd2         cmp        dword [format], 0x0                         ; case 180, format, CODE XREF=main+684
0000000000003dd9         je         loc_3b08

0000000000003ddf         mov        dword [format], 0x1                         ; format
0000000000003de9         jmp        loc_3b08

                     loc_3dee:
0000000000003dee         mov        eax, dword [ls_mode]                        ; case 0, ls_mode, CODE XREF=main+684
0000000000003df4         mov        rcx, qword [Version]                        ; Version
0000000000003dfb         lea        rsi, qword [aCoreutils+7]                   ; 0x179e1
0000000000003e02         cmp        eax, 0x1
0000000000003e05         je         loc_3e1c

0000000000003e07         cmp        eax, 0x2
0000000000003e0a         lea        rsi, qword [aTotal+6]                       ; 0x1795d
0000000000003e11         lea        rax, qword [aTotal+7]                       ; 0x1795e
0000000000003e18         cmove      rsi, rax

                     loc_3e1c:
0000000000003e1c         sub        rsp, 0x8                                    ; CODE XREF=main+1381
0000000000003e20         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003e27         lea        r9, qword [aDavidMackenzie]                 ; "David MacKenzie"
0000000000003e2e         push       0x0
0000000000003e30         lea        r8, qword [aRichardMStallm]                 ; "Richard M. Stallman"
0000000000003e37         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x179d6
0000000000003e3e         xor        eax, eax
0000000000003e40         call       version_etc                                 ; version_etc
0000000000003e45         xor        edi, edi                                    ; argument "__status" for method j_exit
0000000000003e47         call       j_exit                                      ; exit
                        ; endp

                     loc_3e4c:
0000000000003e4c         mov        r14, qword [optarg@@GLIBC_2.2.5]            ; case 275, optarg@@GLIBC_2.2.5, CODE XREF=main+684
0000000000003e53         jmp        loc_3b08

                     loc_3e58:
0000000000003e58         mov        r9, qword [argmatch_die]                    ; case 274, argmatch_die, CODE XREF=main+684
0000000000003e5f         mov        rsi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000003e66         lea        rdx, qword [time_args]                      ; time_args
0000000000003e6d         lea        rcx, qword [time_types]                     ; time_types
0000000000003e74         lea        rdi, qword [aTime]                          ; "--time"
0000000000003e7b         mov        r8d, 0x4
0000000000003e81         call       __xargmatch_internal                        ; __xargmatch_internal
0000000000003e86         lea        rdx, qword [time_types]                     ; time_types
0000000000003e8d         mov        eax, dword [rdx+rax*4]
0000000000003e90         mov        dword [time_type], eax                      ; time_type
0000000000003e96         jmp        loc_3b08

                     loc_3e9b:
0000000000003e9b         mov        r9, qword [argmatch_die]                    ; case 273, argmatch_die, CODE XREF=main+684
0000000000003ea2         mov        rsi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000003ea9         lea        rdx, qword [sort_args]                      ; sort_args
0000000000003eb0         lea        rcx, qword [sort_types]                     ; sort_types
0000000000003eb7         lea        rdi, qword [aSort]                          ; "--sort"
0000000000003ebe         mov        r8d, 0x4
0000000000003ec4         call       __xargmatch_internal                        ; __xargmatch_internal
0000000000003ec9         lea        rdx, qword [sort_types]                     ; sort_types
0000000000003ed0         mov        byte [rsp+0x88+var_80], 0x1
0000000000003ed5         mov        eax, dword [rdx+rax*4]
0000000000003ed8         mov        dword [sort_type], eax                      ; sort_type
0000000000003ede         jmp        loc_3b08

                     loc_3ee3:
0000000000003ee3         mov        dword [human_output_opts], 0x90             ; case 272, human_output_opts, CODE XREF=main+684
0000000000003eed         mov        dword [file_human_output_opts], 0x90        ; file_human_output_opts
0000000000003ef7         mov        qword [output_block_size], 0x1              ; output_block_size
0000000000003f02         mov        qword [file_output_block_size], 0x1         ; file_output_block_size
0000000000003f0d         jmp        loc_3b08

                     loc_3f12:
0000000000003f12         mov        byte [qmark_funny_chars], 0x0               ; case 271, qmark_funny_chars, CODE XREF=main+684
0000000000003f19         jmp        loc_3b08

                     loc_3f1e:
0000000000003f1e         mov        r9, qword [argmatch_die]                    ; case 270, argmatch_die, CODE XREF=main+684
0000000000003f25         mov        rsi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000003f2c         lea        rcx, qword [quoting_style_vals]             ; quoting_style_vals
0000000000003f33         lea        rdx, qword [quoting_style_args]             ; quoting_style_args
0000000000003f3a         lea        rdi, qword [aQuotingstyle_17ab1]            ; "--quoting-style"
0000000000003f41         mov        r8d, 0x4
0000000000003f47         call       __xargmatch_internal                        ; __xargmatch_internal
0000000000003f4c         lea        rdx, qword [quoting_style_vals]             ; quoting_style_vals
0000000000003f53         xor        edi, edi
0000000000003f55         mov        esi, dword [rdx+rax*4]
0000000000003f58         call       set_quoting_style                           ; set_quoting_style
0000000000003f5d         jmp        loc_3b08

                     loc_3f62:
0000000000003f62         mov        r9, qword [argmatch_die]                    ; case 269, argmatch_die, CODE XREF=main+684
0000000000003f69         mov        rsi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000003f70         lea        rdx, qword [indicator_style_args]           ; indicator_style_args
0000000000003f77         lea        rcx, qword [indicator_style_types]          ; indicator_style_types
0000000000003f7e         lea        rdi, qword [aIndicatorstyle_17a9f]          ; "--indicator-style"
0000000000003f85         mov        r8d, 0x4
0000000000003f8b         call       __xargmatch_internal                        ; __xargmatch_internal
0000000000003f90         lea        rdx, qword [indicator_style_types]          ; indicator_style_types
0000000000003f97         mov        eax, dword [rdx+rax*4]
0000000000003f9a         mov        dword [indicator_style], eax                ; indicator_style
0000000000003fa0         jmp        loc_3b08

                     loc_3fa5:
0000000000003fa5         mov        rsi, qword [optarg@@GLIBC_2.2.5]            ; case 268, optarg@@GLIBC_2.2.5, CODE XREF=main+684
0000000000003fac         test       rsi, rsi
0000000000003faf         je         loc_42a4

0000000000003fb5         mov        r9, qword [argmatch_die]                    ; argmatch_die
0000000000003fbc         lea        rdx, qword [when_args]                      ; when_args
0000000000003fc3         lea        rcx, qword [when_types]                     ; when_types
0000000000003fca         lea        rdi, qword [aHyperlink]                     ; "--hyperlink"
0000000000003fd1         mov        r8d, 0x4
0000000000003fd7         call       __xargmatch_internal                        ; __xargmatch_internal
0000000000003fdc         lea        rdx, qword [when_types]                     ; when_types
0000000000003fe3         mov        edx, dword [rdx+rax*4]
0000000000003fe6         cmp        edx, 0x1
0000000000003fe9         je         loc_42a4

0000000000003fef         xor        eax, eax
0000000000003ff1         cmp        edx, 0x2
0000000000003ff4         jne        loc_42a9

0000000000003ffa         mov        edi, 0x1                                    ; argument "__fd" for method j_isatty
0000000000003fff         call       j_isatty                                    ; isatty
0000000000004004         test       eax, eax
0000000000004006         setne      al
0000000000004009         movzx      eax, al
000000000000400c         jmp        loc_42a9

                     loc_4011:
0000000000004011         mov        edi, 0x10                                   ; case 267, argument #1 for method xmalloc, CODE XREF=main+684
0000000000004016         call       xmalloc                                     ; xmalloc
000000000000401b         mov        rdx, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000004022         mov        qword [rax], rdx
0000000000004025         mov        rdx, qword [hide_patterns]                  ; hide_patterns
000000000000402c         mov        qword [hide_patterns], rax                  ; hide_patterns
0000000000004033         mov        qword [rax+8], rdx
0000000000004037         jmp        loc_3b08

                     loc_403c:
000000000000403c         mov        byte [directories_first], r15b              ; case 266, directories_first, CODE XREF=main+684
0000000000004043         jmp        loc_3b08

                     loc_4048:
0000000000004048         mov        dword [format], 0x0                         ; case 265, format, CODE XREF=main+684
0000000000004052         lea        r14, qword [aFulliso]                       ; "full-iso"
0000000000004059         jmp        loc_3b08

                     loc_405e:
000000000000405e         mov        r9, qword [argmatch_die]                    ; case 264, argmatch_die, CODE XREF=main+684
0000000000004065         mov        rsi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
000000000000406c         lea        rdx, qword [format_args]                    ; format_args
0000000000004073         lea        rcx, qword [format_types]                   ; format_types
000000000000407a         lea        rdi, qword [aFormat]                        ; "--format"
0000000000004081         mov        r8d, 0x4
0000000000004087         call       __xargmatch_internal                        ; __xargmatch_internal
000000000000408c         lea        rdx, qword [format_types]                   ; format_types
0000000000004093         mov        eax, dword [rdx+rax*4]
0000000000004096         mov        dword [format], eax                         ; format
000000000000409c         jmp        loc_3b08

                     loc_40a1:
00000000000040a1         mov        dword [indicator_style], 0x2                ; case 263, indicator_style, CODE XREF=main+684
00000000000040ab         jmp        loc_3b08

                     loc_40b0:
00000000000040b0         mov        dword [dereference], 0x4                    ; case 262, dereference, CODE XREF=main+684
00000000000040ba         jmp        loc_3b08

                     loc_40bf:
00000000000040bf         mov        rsi, qword [optarg@@GLIBC_2.2.5]            ; case 261, optarg@@GLIBC_2.2.5, CODE XREF=main+684
00000000000040c6         test       rsi, rsi
00000000000040c9         je         loc_428d

00000000000040cf         mov        r9, qword [argmatch_die]                    ; argmatch_die
00000000000040d6         lea        rdx, qword [when_args]                      ; when_args
00000000000040dd         lea        rcx, qword [when_types]                     ; when_types
00000000000040e4         lea        rdi, qword [aColor]                         ; "--color"
00000000000040eb         mov        r8d, 0x4
00000000000040f1         call       __xargmatch_internal                        ; __xargmatch_internal
00000000000040f6         lea        rdx, qword [when_types]                     ; when_types
00000000000040fd         mov        eax, dword [rdx+rax*4]
0000000000004100         cmp        eax, 0x1
0000000000004103         je         loc_428d

0000000000004109         cmp        eax, 0x2
000000000000410c         je         loc_427b

                     loc_4112:
0000000000004112         mov        byte [print_with_color], 0x0                ; print_with_color, CODE XREF=main+2535
0000000000004119         jmp        loc_3b08

                     loc_411e:
000000000000411e         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; case 260, optarg@@GLIBC_2.2.5, CODE XREF=main+684
0000000000004125         lea        rdx, qword [output_block_size]              ; output_block_size
000000000000412c         lea        rsi, qword [human_output_opts]              ; human_output_opts
0000000000004133         call       human_options                               ; human_options
0000000000004138         test       eax, eax
000000000000413a         jne        loc_5244

0000000000004140         mov        eax, dword [human_output_opts]              ; human_output_opts
0000000000004146         mov        dword [file_human_output_opts], eax         ; file_human_output_opts
000000000000414c         mov        rax, qword [output_block_size]              ; output_block_size
0000000000004153         mov        qword [file_output_block_size], rax         ; file_output_block_size
000000000000415a         jmp        loc_3b08

                     loc_415f:
000000000000415f         mov        dword [sort_type], 0x4                      ; case 247, sort_type, CODE XREF=main+684
0000000000004169         mov        byte [rsp+0x88+var_80], 0x1
000000000000416e         jmp        loc_3b08

                     loc_4173:
0000000000004173         mov        byte [print_block_size], r15b               ; case 246, print_block_size, CODE XREF=main+684
000000000000417a         jmp        loc_3b08

                     loc_417f:
000000000000417f         mov        byte [sort_reverse], r15b                   ; case 245, sort_reverse, CODE XREF=main+684
0000000000004186         jmp        loc_3b08

                     loc_418b:
000000000000418b         mov        byte [qmark_funny_chars], r15b              ; case 244, qmark_funny_chars, CODE XREF=main+684
0000000000004192         jmp        loc_3b08

                     loc_4197:
0000000000004197         mov        dword [indicator_style], 0x1                ; case 243, indicator_style, CODE XREF=main+684
00000000000041a1         jmp        loc_3b08

                     loc_41a6:
00000000000041a6         mov        dword [format], 0x0                         ; case 242, format, CODE XREF=main+684
00000000000041b0         mov        byte [print_group], 0x0                     ; print_group
00000000000041b7         jmp        loc_3b08

                     loc_41bc:
00000000000041bc         mov        dword [format], 0x4                         ; case 240, format, CODE XREF=main+684
00000000000041c6         jmp        loc_3b08

                     loc_41cb:
00000000000041cb         mov        dword [format], 0x3                         ; case 251, format, CODE XREF=main+684
00000000000041d5         jmp        loc_3b08

                     loc_41da:
00000000000041da         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; case 250, argument #1 for method set_line_length, optarg@@GLIBC_2.2.5, CODE XREF=main+684
00000000000041e1         call       set_line_length                             ; set_line_length
00000000000041e6         test       al, al
00000000000041e8         jne        loc_3b08

00000000000041ee         mov        rdi, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
00000000000041f5         call       quote                                       ; quote
00000000000041fa         lea        rsi, qword [aInvalidLineWid]                ; argument "msgid" for method j_dcgettext, "invalid line width"
0000000000004201         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004206         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004208         mov        rbx, rax
000000000000420b         call       j_dcgettext                                 ; dcgettext
0000000000004210         lea        rdx, qword [aSS_17a58]                      ; argument "__format" for method j_error, "%s: %s"
0000000000004217         mov        rcx, rax
000000000000421a         mov        r8, rbx
000000000000421d         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000421f         mov        edi, 0x2                                    ; argument "__status" for method j_error
0000000000004224         xor        eax, eax
0000000000004226         call       j_error                                     ; error

                     loc_422b:
000000000000422b         mov        dword [sort_type], 0x3                      ; case 249, sort_type, CODE XREF=main+684
0000000000004235         mov        byte [rsp+0x88+var_80], 0x1
000000000000423a         jmp        loc_3b08

                     loc_423f:
000000000000423f         mov        dword [time_type], 0x2                      ; case 248, time_type, CODE XREF=main+684
0000000000004249         jmp        loc_3b08

                     loc_424e:
000000000000424e         mov        byte [print_author], r15b                   ; case 259, print_author, CODE XREF=main+684
0000000000004255         jmp        loc_3b08

                     loc_425a:
000000000000425a         mov        edi, 0x1                                    ; argument "__fd" for method j_isatty, CODE XREF=main+199
000000000000425f         call       j_isatty                                    ; isatty
0000000000004264         test       eax, eax
0000000000004266         jne        loc_4d2f

000000000000426c         mov        dword [format], 0x1                         ; format
0000000000004276         jmp        loc_3988

                     loc_427b:
000000000000427b         mov        edi, 0x1                                    ; argument "__fd" for method j_isatty, CODE XREF=main+2156
0000000000004280         call       j_isatty                                    ; isatty
0000000000004285         test       eax, eax
0000000000004287         je         loc_4112

                     loc_428d:
000000000000428d         mov        byte [print_with_color], r15b               ; print_with_color, CODE XREF=main+2089, main+2147
0000000000004294         mov        qword [tabsize], 0x0                        ; tabsize
000000000000429f         jmp        loc_3b08

                     loc_42a4:
00000000000042a4         mov        eax, 0x1                                    ; CODE XREF=main+1807, main+1865

                     loc_42a9:
00000000000042a9         mov        byte [print_hyperlink], al                  ; print_hyperlink, CODE XREF=main+1876, main+1900
00000000000042af         and        byte [print_hyperlink], 0x1                 ; print_hyperlink
00000000000042b6         jmp        loc_3b08

                     loc_42bb:
00000000000042bb         cmp        qword [output_block_size], 0x0              ; output_block_size, CODE XREF=main+654
00000000000042c3         je         loc_48eb

                     loc_42c9:
00000000000042c9         mov        rax, qword [line_length]                    ; line_length, CODE XREF=main+4248, main+4275
00000000000042d0         mov        ecx, 0x3
00000000000042d5         xor        edx, edx
00000000000042d7         div        rcx
00000000000042da         test       rdx, rdx
00000000000042dd         setne      dl
00000000000042e0         xor        edi, edi
00000000000042e2         movzx      edx, dl
00000000000042e5         add        rax, rdx
00000000000042e8         mov        qword [max_idx], rax                        ; max_idx
00000000000042ef         call       get_quoting_style                           ; get_quoting_style
00000000000042f4         mov        edx, dword [format]                         ; format
00000000000042fa         mov        r13d, eax
00000000000042fd         cmp        edx, 0x4
0000000000004300         je         loc_4746

0000000000004306         cmp        edx, 0x1
0000000000004309         je         loc_4746

000000000000430f         cmp        qword [line_length], 0x0                    ; line_length
0000000000004317         jne        loc_431f

0000000000004319         xor        eax, eax
000000000000431b         test       edx, edx
000000000000431d         jne        loc_4337

                     loc_431f:
000000000000431f         mov        eax, r13d                                   ; CODE XREF=main+2679
0000000000004322         and        eax, 0xfffffffd
0000000000004325         sub        eax, 0x1
0000000000004328         sete       al
000000000000432b         cmp        r13d, 0x6
000000000000432f         sete       dl
0000000000004332         or         eax, edx
0000000000004334         movzx      eax, al

                     loc_4337:
0000000000004337         xor        edi, edi                                    ; argument #1 for method clone_quoting_options, CODE XREF=main+2685, main+3752
0000000000004339         mov        byte [align_variable_outer_quotes], al      ; align_variable_outer_quotes
000000000000433f         and        byte [align_variable_outer_quotes], 0x1     ; align_variable_outer_quotes
0000000000004346         call       clone_quoting_options                       ; clone_quoting_options
000000000000434b         cmp        r13d, 0x7
000000000000434f         mov        qword [filename_quoting_options], rax       ; filename_quoting_options
0000000000004356         je         loc_4d18

                     loc_435c:
000000000000435c         mov        eax, dword [indicator_style]                ; indicator_style, CODE XREF=main+5258
0000000000004362         cmp        eax, 0x1
0000000000004365         jbe        loc_439f

0000000000004367         lea        rdx, qword [aLsblocksize+14]                ; 0x17af3
000000000000436e         sub        eax, 0x2
0000000000004371         movsx      esi, byte [rdx+rax]
0000000000004375         lea        r13, qword [rax+rdx]
0000000000004379         test       sil, sil
000000000000437c         je         loc_439f

000000000000437e         nop

                     loc_4380:
0000000000004380         mov        rdi, qword [filename_quoting_options]       ; filename_quoting_options, CODE XREF=main+2813
0000000000004387         add        r13, 0x1
000000000000438b         mov        edx, 0x1
0000000000004390         call       set_char_quoting                            ; set_char_quoting
0000000000004395         movsx      esi, byte [r13]
000000000000439a         test       sil, sil
000000000000439d         jne        loc_4380

                     loc_439f:
000000000000439f         xor        edi, edi                                    ; argument #1 for method clone_quoting_options, CODE XREF=main+2757, main+2780
00000000000043a1         call       clone_quoting_options                       ; clone_quoting_options
00000000000043a6         mov        edx, 0x1
00000000000043ab         mov        esi, 0x3a
00000000000043b0         mov        rdi, rax
00000000000043b3         mov        qword [dirname_quoting_options], rax        ; dirname_quoting_options
00000000000043ba         call       set_char_quoting                            ; set_char_quoting
00000000000043bf         cmp        byte [dired], 0x0                           ; dired
00000000000043c6         je         loc_43dc

00000000000043c8         cmp        dword [format], 0x0                         ; format
00000000000043cf         je         loc_4890

                     loc_43d5:
00000000000043d5         mov        byte [dired], 0x0                           ; dired, CODE XREF=main+4093

                     loc_43dc:
00000000000043dc         mov        eax, dword [time_type]                      ; time_type, CODE XREF=main+2854
00000000000043e2         mov        edx, dword [format]                         ; format
00000000000043e8         sub        eax, 0x1
00000000000043eb         cmp        eax, 0x1
00000000000043ee         ja         loc_43fb

00000000000043f0         cmp        byte [rsp+0x88+var_80], 0x0
00000000000043f5         je         loc_4d51

                     loc_43fb:
00000000000043fb         test       edx, edx                                    ; CODE XREF=main+2894
00000000000043fd         jne        loc_4442

                     loc_43ff:
00000000000043ff         test       r14, r14                                    ; CODE XREF=main+4087, main+5299
0000000000004402         je         loc_4d85

                     loc_4408:
0000000000004408         lea        r13, qword [posix_prefix.10077]             ; "posix-", CODE XREF=main+5367
000000000000440f         jmp        loc_441c
0000000000004411         align      8

                     loc_4418:
0000000000004418         add        r14, 0x6                                    ; CODE XREF=main+2976

                     loc_441c:
000000000000441c         mov        edx, 0x6                                    ; argument "__n" for method j_strncmp, CODE XREF=main+2927
0000000000004421         mov        rsi, r13                                    ; argument "__s2" for method j_strncmp
0000000000004424         mov        rdi, r14                                    ; argument "__s1" for method j_strncmp
0000000000004427         call       j_strncmp                                   ; strncmp
000000000000442c         test       eax, eax
000000000000442e         jne        loc_4c61

0000000000004434         mov        edi, 0x2
0000000000004439         call       hard_locale                                 ; hard_locale
000000000000443e         test       al, al
0000000000004440         jne        loc_4418

                     loc_4442:
0000000000004442         cmp        byte [print_with_color], 0x0                ; print_with_color, CODE XREF=main+2909, main+5206, main+5315
0000000000004449         movsxd     r13, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5
0000000000004450         jne        loc_4ad1

0000000000004456         cmp        byte [directories_first], 0x0               ; directories_first
000000000000445d         je         loc_4466

                     loc_445f:
000000000000445f         mov        byte [check_symlink_mode], 0x1              ; check_symlink_mode, CODE XREF=main+4873, main+4904, main+4931, main+4962

                     loc_4466:
0000000000004466         cmp        dword [dereference], 0x1                    ; dereference, CODE XREF=main+3005, main+4886, main+4949, main+4968
000000000000446d         je         loc_48ba

                     loc_4473:
0000000000004473         cmp        byte [recursive], 0x0                       ; recursive, CODE XREF=main+4166
000000000000447a         je         loc_44cb

000000000000447c         lea        r8, qword [dev_ino_free]                    ; argument #5 for method hash_initialize, dev_ino_free
0000000000004483         lea        rcx, qword [dev_ino_compare]                ; argument #4 for method hash_initialize, dev_ino_compare
000000000000448a         lea        rdx, qword [dev_ino_hash]                   ; argument #3 for method hash_initialize, dev_ino_hash
0000000000004491         xor        esi, esi                                    ; argument #2 for method hash_initialize
0000000000004493         mov        edi, 0x1e                                   ; argument #1 for method hash_initialize
0000000000004498         call       hash_initialize                             ; hash_initialize
000000000000449d         test       rax, rax
00000000000044a0         mov        qword [active_dir_set], rax                 ; active_dir_set
00000000000044a7         je         loc_5264

00000000000044ad         mov        r8, qword [qword_21ffc0]                    ; argument #5 for method _obstack_begin, qword_21ffc0
00000000000044b4         mov        rcx, qword [qword_21ffe0]                   ; argument #4 for method _obstack_begin, qword_21ffe0
00000000000044bb         lea        rdi, qword [dev_ino_obstack]                ; argument #1 for method _obstack_begin, dev_ino_obstack
00000000000044c2         xor        edx, edx                                    ; argument #3 for method _obstack_begin
00000000000044c4         xor        esi, esi                                    ; argument #2 for method _obstack_begin
00000000000044c6         call       _obstack_begin                              ; _obstack_begin

                     loc_44cb:
00000000000044cb         lea        rdi, qword [aTarget+7]                      ; argument "__name" for method j_getenv, 0x17bbc, CODE XREF=main+3034
00000000000044d2         call       j_getenv                                    ; getenv
00000000000044d7         mov        rdi, rax
00000000000044da         call       tzalloc                                     ; tzalloc
00000000000044df         mov        qword [localtz], rax                        ; localtz
00000000000044e6         mov        eax, dword [sort_type]                      ; sort_type
00000000000044ec         sub        eax, 0x2
00000000000044ef         and        eax, 0xfffffffd
00000000000044f2         je         loc_4501

00000000000044f4         cmp        dword [format], 0x0                         ; format
00000000000044fb         jne        loc_4837

                     loc_4501:
0000000000004501         mov        byte [format_needs_stat], 0x1               ; format_needs_stat, CODE XREF=main+3154, main+3998, main+4011
0000000000004508         xor        eax, eax

                     loc_450a:
000000000000450a         mov        byte [format_needs_type], al                ; format_needs_type, CODE XREF=main+4036, main+4049, main+4062, main+4075
0000000000004510         and        byte [format_needs_type], 0x1               ; format_needs_type
0000000000004517         cmp        byte [dired], 0x0                           ; dired
000000000000451e         jne        loc_49d4

                     loc_4524:
0000000000004524         cmp        byte [print_hyperlink], 0x0                 ; print_hyperlink, CODE XREF=main+4462
000000000000452b         jne        loc_4958

                     loc_4531:
0000000000004531         mov        r14d, ebp                                   ; CODE XREF=main+4399
0000000000004534         mov        edi, 0x4e20                                 ; argument #1 for method xmalloc
0000000000004539         mov        qword [cwd_n_alloc], 0x64                   ; cwd_n_alloc
0000000000004544         sub        r14d, r13d
0000000000004547         lea        r15, qword [aLu+34]                         ; 0x178b3
000000000000454e         call       xmalloc                                     ; xmalloc
0000000000004553         mov        qword [cwd_n_used], 0x0                     ; cwd_n_used
000000000000455e         mov        qword [cwd_file], rax                       ; cwd_file
0000000000004565         call       clear_files                                 ; clear_files
000000000000456a         test       r14d, r14d
000000000000456d         jle        loc_4791

0000000000004573         nop        dword [rax+rax]

                     loc_4578:
0000000000004578         mov        rdi, qword [rbx+r13*8]                      ; argument #1 for method gobble_file.constprop.52, CODE XREF=main+3314
000000000000457c         xor        esi, esi                                    ; argument #2 for method gobble_file.constprop.52
000000000000457e         mov        rcx, r15                                    ; argument #4 for method gobble_file.constprop.52
0000000000004581         mov        edx, 0x1                                    ; argument #3 for method gobble_file.constprop.52
0000000000004586         add        r13, 0x1
000000000000458a         call       gobble_file.constprop.52                    ; gobble_file.constprop.52
000000000000458f         cmp        ebp, r13d
0000000000004592         jg         loc_4578

                     loc_4594:
0000000000004594         cmp        qword [cwd_n_used], 0x0                     ; cwd_n_used, CODE XREF=main+3863, main+4117
000000000000459c         jne        loc_4a13

                     loc_45a2:
00000000000045a2         sub        r14d, 0x1                                   ; CODE XREF=main+4493
00000000000045a6         mov        rbx, qword [pending_dirs]                   ; pending_dirs
00000000000045ad         jg         loc_45ec

00000000000045af         jmp        loc_4c41
00000000000045b4         align      8

                     loc_45b8:
00000000000045b8         movzx      edx, byte [rbx+0x10]                        ; argument #3 for method print_dir, CODE XREF=main+3437, main+3442
00000000000045bc         mov        rsi, qword [rbx+8]                          ; argument #2 for method print_dir
00000000000045c0         call       print_dir                                   ; print_dir
00000000000045c5         mov        rdi, qword [rbx]
00000000000045c8         call       sub_3880                                    ; sub_3880
00000000000045cd         mov        rdi, qword [rbx+8]
00000000000045d1         call       sub_3880                                    ; sub_3880
00000000000045d6         mov        rdi, rbx
00000000000045d9         call       sub_3880                                    ; sub_3880
00000000000045de         mov        byte [print_dir_name], 0x1                  ; print_dir_name

                     loc_45e5:
00000000000045e5         mov        rbx, qword [pending_dirs]                   ; pending_dirs, CODE XREF=main+3553

                     loc_45ec:
00000000000045ec         test       rbx, rbx                                    ; CODE XREF=main+3341, main+4565, main+5039, main+5052
00000000000045ef         je         loc_4686

00000000000045f5         mov        rax, qword [rbx+0x18]
00000000000045f9         mov        rdi, qword [rbx]
00000000000045fc         mov        qword [pending_dirs], rax                   ; pending_dirs
0000000000004603         mov        rax, qword [active_dir_set]                 ; active_dir_set
000000000000460a         test       rax, rax
000000000000460d         je         loc_45b8

000000000000460f         test       rdi, rdi
0000000000004612         jne        loc_45b8

0000000000004614         mov        rdx, qword [qword_2210f8]                   ; qword_2210f8
000000000000461b         mov        rcx, rdx
000000000000461e         sub        rcx, qword [qword_2210f0]                   ; qword_2210f0
0000000000004625         cmp        rcx, 0xf
0000000000004629         jbe        loc_51e7

000000000000462f         lea        rcx, qword [rdx-0x10]
0000000000004633         mov        rsi, r12
0000000000004636         mov        rdi, rax
0000000000004639         mov        qword [qword_2210f8], rcx                   ; qword_2210f8
0000000000004640         mov        rcx, qword [rdx-0x10]
0000000000004644         mov        rdx, qword [rdx-8]
0000000000004648         mov        qword [rsp+0x88+var_58], rcx
000000000000464d         mov        qword [rsp+0x88+var_50], rdx
0000000000004652         call       hash_delete                                 ; hash_delete
0000000000004657         test       rax, rax
000000000000465a         je         loc_5206

0000000000004660         mov        rdi, rax
0000000000004663         call       sub_3880                                    ; sub_3880
0000000000004668         mov        rdi, qword [rbx]
000000000000466b         call       sub_3880                                    ; sub_3880
0000000000004670         mov        rdi, qword [rbx+8]
0000000000004674         call       sub_3880                                    ; sub_3880
0000000000004679         mov        rdi, rbx
000000000000467c         call       sub_3880                                    ; sub_3880
0000000000004681         jmp        loc_45e5

                     loc_4686:
0000000000004686         cmp        byte [print_with_color], 0x0                ; print_with_color, CODE XREF=main+3407, main+4512, main+5028
000000000000468d         je         loc_469c

000000000000468f         cmp        byte [used_color], 0x0                      ; used_color
0000000000004696         jne        loc_47bc

                     loc_469c:
000000000000469c         cmp        byte [dired], 0x0                           ; dired, CODE XREF=main+3565, main+3975, main+3986
00000000000046a3         jne        loc_4a7a

                     loc_46a9:
00000000000046a9         mov        rbx, qword [active_dir_set]                 ; active_dir_set, CODE XREF=main+4652
00000000000046b0         test       rbx, rbx
00000000000046b3         je         loc_46ce

00000000000046b5         mov        rdi, rbx
00000000000046b8         call       hash_get_n_entries                          ; hash_get_n_entries
00000000000046bd         test       rax, rax
00000000000046c0         jne        loc_5225

00000000000046c6         mov        rdi, rbx                                    ; argument #1 for method hash_free
00000000000046c9         call       hash_free                                   ; hash_free

                     loc_46ce:
00000000000046ce         mov        rsi, qword [rsp+0x88+var_40]                ; CODE XREF=main+3603
00000000000046d3         xor        rsi, qword [fs:0x28]
00000000000046dc         mov        eax, dword [exit_status]                    ; exit_status
00000000000046e2         jne        loc_525f

00000000000046e8         add        rsp, 0x58
00000000000046ec         pop        rbx
00000000000046ed         pop        rbp
00000000000046ee         pop        r12
00000000000046f0         pop        r13
00000000000046f2         pop        r14
00000000000046f4         pop        r15
00000000000046f6         ret
                        ; endp

                     loc_46f7:
00000000000046f7         mov        esi, 0x7                                    ; CODE XREF=main+185
00000000000046fc         xor        edi, edi
00000000000046fe         mov        dword [format], 0x2                         ; format
0000000000004708         call       set_quoting_style                           ; set_quoting_style
000000000000470d         jmp        loc_3988

                     loc_4712:
0000000000004712         mov        rdi, r12                                    ; CODE XREF=main+402
0000000000004715         call       quote                                       ; quote
000000000000471a         lea        rsi, qword [aIgnoringInvali_19d10]          ; argument "msgid" for method j_dcgettext, "ignoring invalid value of environment variable QUOTING_STYLE: %s"
0000000000004721         mov        r12, rax
0000000000004724         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004726         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000472b         call       j_dcgettext                                 ; dcgettext
0000000000004730         mov        rcx, r12
0000000000004733         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000004736         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000004738         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000473a         xor        eax, eax
000000000000473c         call       j_error                                     ; error
0000000000004741         jmp        loc_3a4b

                     loc_4746:
0000000000004746         xor        eax, eax                                    ; CODE XREF=main+2656, main+2665
0000000000004748         jmp        loc_4337

                     loc_474d:
000000000000474d         mov        rdi, rax                                    ; argument #1 for method set_line_length, CODE XREF=main+461
0000000000004750         call       set_line_length                             ; set_line_length
0000000000004755         test       al, al
0000000000004757         jne        loc_3a73

000000000000475d         mov        rdi, r12
0000000000004760         call       quote                                       ; quote
0000000000004765         lea        rsi, qword [aIgnoringInvali_19d58]          ; argument "msgid" for method j_dcgettext, "ignoring invalid width in environment variable COLUMNS: %s"
000000000000476c         mov        r12, rax
000000000000476f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004771         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004776         call       j_dcgettext                                 ; dcgettext
000000000000477b         mov        rcx, r12
000000000000477e         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000004781         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000004783         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000004785         xor        eax, eax
0000000000004787         call       j_error                                     ; error
000000000000478c         jmp        loc_3a73

                     loc_4791:
0000000000004791         cmp        byte [immediate_dirs], 0x0                  ; immediate_dirs, CODE XREF=main+3277
0000000000004798         je         loc_48a2

000000000000479e         lea        rdi, qword [aWriteError+13]                 ; argument #1 for method gobble_file.constprop.52, 0x19f9c
00000000000047a5         mov        rcx, r15                                    ; argument #4 for method gobble_file.constprop.52
00000000000047a8         mov        edx, 0x1                                    ; argument #3 for method gobble_file.constprop.52
00000000000047ad         mov        esi, 0x3                                    ; argument #2 for method gobble_file.constprop.52
00000000000047b2         call       gobble_file.constprop.52                    ; gobble_file.constprop.52
00000000000047b7         jmp        loc_4594

                     loc_47bc:
00000000000047bc         cmp        qword [color_indicator], 0x2                ; color_indicator, CODE XREF=main+3574
00000000000047c4         jne        loc_47d8

00000000000047c6         mov        rax, qword [qword_220068]                   ; qword_220068
00000000000047cd         cmp        word [rax], 0x5b1b
00000000000047d2         je         loc_4f73

                     loc_47d8:
00000000000047d8         lea        rdi, qword [color_indicator]                ; argument #1 for method put_indicator, color_indicator, CODE XREF=main+3876, main+5851, main+5867
00000000000047df         call       put_indicator                               ; put_indicator
00000000000047e4         lea        rdi, qword [qword_220070]                   ; argument #1 for method put_indicator, qword_220070
00000000000047eb         call       put_indicator                               ; put_indicator

                     loc_47f0:
00000000000047f0         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fflush_unlocked, stdout@@GLIBC_2.2.5, CODE XREF=main+5873
00000000000047f7         call       j_fflush_unlocked                           ; fflush_unlocked
00000000000047fc         xor        edi, edi                                    ; argument #1 for method signal_setup
00000000000047fe         call       signal_setup                                ; signal_setup
0000000000004803         mov        ebx, dword [stop_signal_count]              ; stop_signal_count
0000000000004809         test       ebx, ebx
000000000000480b         je         loc_481f

000000000000480d         nop        dword [rax]

                     loc_4810:
0000000000004810         mov        edi, 0x13                                   ; argument "__sig" for method j_raise, CODE XREF=main+3965
0000000000004815         call       j_raise                                     ; raise
000000000000481a         sub        ebx, 0x1
000000000000481d         jne        loc_4810

                     loc_481f:
000000000000481f         mov        edi, dword [interrupt_signal]               ; interrupt_signal, CODE XREF=main+3947
0000000000004825         test       edi, edi
0000000000004827         je         loc_469c

000000000000482d         call       j_raise                                     ; raise
0000000000004832         jmp        loc_469c

                     loc_4837:
0000000000004837         cmp        byte [print_scontext], 0x0                  ; print_scontext, CODE XREF=main+3163
000000000000483e         jne        loc_4501

0000000000004844         cmp        byte [print_block_size], 0x0                ; print_block_size
000000000000484b         jne        loc_4501

0000000000004851         cmp        byte [recursive], 0x0                       ; recursive
0000000000004858         mov        byte [format_needs_stat], 0x0               ; format_needs_stat
000000000000485f         mov        eax, 0x1
0000000000004864         jne        loc_450a

000000000000486a         cmp        byte [print_with_color], 0x0                ; print_with_color
0000000000004871         jne        loc_450a

0000000000004877         cmp        dword [indicator_style], 0x0                ; indicator_style
000000000000487e         jne        loc_450a

0000000000004884         movzx      eax, byte [directories_first]               ; directories_first
000000000000488b         jmp        loc_450a

                     loc_4890:
0000000000004890         cmp        byte [print_hyperlink], 0x0                 ; print_hyperlink, CODE XREF=main+2863
0000000000004897         je         loc_43ff

000000000000489d         jmp        loc_43d5

                     loc_48a2:
00000000000048a2         lea        rdi, qword [aWriteError+13]                 ; argument #1 for method queue_directory, 0x19f9c, CODE XREF=main+3832
00000000000048a9         mov        edx, 0x1                                    ; argument #3 for method queue_directory
00000000000048ae         xor        esi, esi                                    ; argument #2 for method queue_directory
00000000000048b0         call       queue_directory                             ; queue_directory
00000000000048b5         jmp        loc_4594

                     loc_48ba:
00000000000048ba         cmp        byte [immediate_dirs], 0x0                  ; immediate_dirs, CODE XREF=main+3021
00000000000048c1         mov        eax, 0x2
00000000000048c6         jne        loc_48e0

00000000000048c8         cmp        dword [indicator_style], 0x3                ; indicator_style
00000000000048cf         je         loc_48e0

00000000000048d1         cmp        dword [format], 0x1                         ; format
00000000000048d8         sbb        eax, eax
00000000000048da         and        eax, 0xfffffffe
00000000000048dd         add        eax, 0x4

                     loc_48e0:
00000000000048e0         mov        dword [dereference], eax                    ; dereference, CODE XREF=main+4134, main+4143
00000000000048e6         jmp        loc_4473

                     loc_48eb:
00000000000048eb         lea        rdi, qword [aLsblocksize]                   ; argument "__name" for method j_getenv, "LS_BLOCK_SIZE", CODE XREF=main+2595
00000000000048f2         call       j_getenv                                    ; getenv
00000000000048f7         lea        rdx, qword [output_block_size]              ; output_block_size
00000000000048fe         lea        rsi, qword [human_output_opts]              ; human_output_opts
0000000000004905         mov        r13, rax
0000000000004908         mov        rdi, rax
000000000000490b         call       human_options                               ; human_options
0000000000004910         test       r13, r13
0000000000004913         je         loc_5135

                     loc_4919:
0000000000004919         mov        eax, dword [human_output_opts]              ; human_output_opts, CODE XREF=main+6308
000000000000491f         mov        dword [file_human_output_opts], eax         ; file_human_output_opts
0000000000004925         mov        rax, qword [output_block_size]              ; output_block_size
000000000000492c         mov        qword [file_output_block_size], rax         ; file_output_block_size

                     loc_4933:
0000000000004933         cmp        byte [rsp+0x88+var_78], 0x0                 ; CODE XREF=main+6314
0000000000004938         je         loc_42c9

000000000000493e         mov        dword [human_output_opts], 0x0              ; human_output_opts
0000000000004948         mov        qword [output_block_size], 0x400            ; output_block_size
0000000000004953         jmp        loc_42c9

                     loc_4958:
0000000000004958         lea        rdx, qword [RFC3986]                        ; RFC3986, CODE XREF=main+3211
000000000000495f         xor        eax, eax
0000000000004961         jmp        loc_4998
0000000000004963         align      8

                     loc_4968:
0000000000004968         cmp        eax, 0x41                                   ; CODE XREF=main+4347
000000000000496b         jge        loc_49a5

000000000000496d         lea        ecx, dword [rax-0x30]
0000000000004970         cmp        ecx, 0x9
0000000000004973         jbe        loc_49a5

                     loc_4975:
0000000000004975         lea        ecx, dword [rax-0x2d]                       ; CODE XREF=main+4355
0000000000004978         cmp        ecx, 0x1
000000000000497b         jbe        loc_49a5

000000000000497d         cmp        eax, 0x7e
0000000000004980         je         loc_49a5

0000000000004982         cmp        eax, 0x5f
0000000000004985         sete       cl
0000000000004988         add        eax, 0x1
000000000000498b         or         byte [rdx], cl
000000000000498d         add        rdx, 0x1
0000000000004991         cmp        eax, 0x100
0000000000004996         je         loc_49ba

                     loc_4998:
0000000000004998         cmp        eax, 0x5a                                   ; CODE XREF=main+4289, main+4376
000000000000499b         jle        loc_4968

000000000000499d         lea        ecx, dword [rax-0x61]
00000000000049a0         cmp        ecx, 0x19
00000000000049a3         ja         loc_4975

                     loc_49a5:
00000000000049a5         add        eax, 0x1                                    ; CODE XREF=main+4299, main+4307, main+4315, main+4320
00000000000049a8         mov        ecx, 0x1
00000000000049ad         or         byte [rdx], cl
00000000000049af         add        rdx, 0x1
00000000000049b3         cmp        eax, 0x100
00000000000049b8         jne        loc_4998

                     loc_49ba:
00000000000049ba         call       xgethostname                                ; xgethostname, CODE XREF=main+4342
00000000000049bf         test       rax, rax
00000000000049c2         je         loc_4d79

                     loc_49c8:
00000000000049c8         mov        qword [hostname], rax                       ; hostname, CODE XREF=main+5344
00000000000049cf         jmp        loc_4531

                     loc_49d4:
00000000000049d4         mov        r15, qword [qword_21ffc0]                   ; qword_21ffc0, CODE XREF=main+3198
00000000000049db         mov        r14, qword [qword_21ffe0]                   ; qword_21ffe0
00000000000049e2         lea        rdi, qword [dired_obstack]                  ; argument #1 for method _obstack_begin, dired_obstack
00000000000049e9         xor        edx, edx                                    ; argument #3 for method _obstack_begin
00000000000049eb         xor        esi, esi                                    ; argument #2 for method _obstack_begin
00000000000049ed         mov        r8, r15                                     ; argument #5 for method _obstack_begin
00000000000049f0         mov        rcx, r14                                    ; argument #4 for method _obstack_begin
00000000000049f3         call       _obstack_begin                              ; _obstack_begin
00000000000049f8         lea        rdi, qword [subdired_obstack]               ; argument #1 for method _obstack_begin, subdired_obstack
00000000000049ff         mov        r8, r15                                     ; argument #5 for method _obstack_begin
0000000000004a02         mov        rcx, r14                                    ; argument #4 for method _obstack_begin
0000000000004a05         xor        edx, edx                                    ; argument #3 for method _obstack_begin
0000000000004a07         xor        esi, esi                                    ; argument #2 for method _obstack_begin
0000000000004a09         call       _obstack_begin                              ; _obstack_begin
0000000000004a0e         jmp        loc_4524

                     loc_4a13:
0000000000004a13         call       sort_files                                  ; sort_files, CODE XREF=main+3324
0000000000004a18         cmp        byte [immediate_dirs], 0x0                  ; immediate_dirs
0000000000004a1f         je         loc_4d68

                     loc_4a25:
0000000000004a25         cmp        qword [cwd_n_used], 0x0                     ; cwd_n_used, CODE XREF=main+5332
0000000000004a2d         je         loc_45a2

0000000000004a33         call       print_current_files                         ; print_current_files
0000000000004a38         cmp        qword [pending_dirs], 0x0                   ; pending_dirs
0000000000004a40         je         loc_4686

0000000000004a46         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004a4d         mov        rax, qword [rdi+0x28]
0000000000004a51         cmp        qword [rdi+0x30], rax
0000000000004a55         jbe        loc_518a

0000000000004a5b         lea        rdx, qword [rax+1]
0000000000004a5f         mov        qword [rdi+0x28], rdx
0000000000004a63         mov        byte [rax], 0xa

                     loc_4a66:
0000000000004a66         add        qword [dired_pos], 0x1                      ; dired_pos, CODE XREF=main+6388
0000000000004a6e         mov        rbx, qword [pending_dirs]                   ; pending_dirs
0000000000004a75         jmp        loc_45ec

                     loc_4a7a:
0000000000004a7a         lea        rsi, qword [dired_obstack]                  ; argument #2 for method dired_dump_obstack, dired_obstack, CODE XREF=main+3587
0000000000004a81         lea        rdi, qword [aDired]                         ; argument #1 for method dired_dump_obstack, "//DIRED//"
0000000000004a88         call       dired_dump_obstack                          ; dired_dump_obstack
0000000000004a8d         lea        rsi, qword [subdired_obstack]               ; argument #2 for method dired_dump_obstack, subdired_obstack
0000000000004a94         lea        rdi, qword [aSubdired]                      ; argument #1 for method dired_dump_obstack, "//SUBDIRED//"
0000000000004a9b         call       dired_dump_obstack                          ; dired_dump_obstack
0000000000004aa0         mov        rdi, qword [filename_quoting_options]       ; filename_quoting_options
0000000000004aa7         call       get_quoting_style                           ; get_quoting_style
0000000000004aac         lea        rdx, qword [quoting_style_args]             ; quoting_style_args
0000000000004ab3         mov        eax, eax
0000000000004ab5         lea        rsi, qword [aDiredoptionsQu]                ; "//DIRED-OPTIONS// --quoting-style=%s\\n"
0000000000004abc         mov        edi, 0x1
0000000000004ac1         mov        rdx, qword [rdx+rax*8]
0000000000004ac5         xor        eax, eax
0000000000004ac7         call       j___printf_chk                              ; __printf_chk
0000000000004acc         jmp        loc_46a9

                     loc_4ad1:
0000000000004ad1         lea        rdi, qword [aLscolors]                      ; argument "__name" for method j_getenv, "LS_COLORS", CODE XREF=main+2992
0000000000004ad8         call       j_getenv                                    ; getenv
0000000000004add         test       rax, rax
0000000000004ae0         mov        qword [rsp+0x88+var_60], rax
0000000000004ae5         je         loc_4af0

0000000000004ae7         cmp        byte [rax], 0x0
0000000000004aea         jne        loc_4df8

                     loc_4af0:
0000000000004af0         lea        rdi, qword [aColorterm]                     ; argument "__name" for method j_getenv, "COLORTERM", CODE XREF=main+4677
0000000000004af7         call       j_getenv                                    ; getenv
0000000000004afc         test       rax, rax
0000000000004aff         je         loc_4b0a

0000000000004b01         cmp        byte [rax], 0x0
0000000000004b04         jne        loc_4ba2

                     loc_4b0a:
0000000000004b0a         lea        rdi, qword [aColorterm+5]                   ; argument "__name" for method j_getenv, 0x17b92, CODE XREF=main+4703
0000000000004b11         call       j_getenv                                    ; getenv
0000000000004b16         test       rax, rax
0000000000004b19         mov        qword [rsp+0x88+var_80], rax
0000000000004b1e         je         loc_4b9b

0000000000004b20         mov        rax, qword [rsp+0x88+var_80]
0000000000004b25         cmp        byte [rax], 0x0
0000000000004b28         je         loc_4b9b

0000000000004b2a         lea        r14, qword [G_line]                         ; "# Configuration file for dircolors, a utility to help you set the"
0000000000004b31         mov        rax, r12
0000000000004b34         mov        r12, rbx
0000000000004b37         mov        r15, rax
0000000000004b3a         mov        rbx, r14
0000000000004b3d         jmp        loc_4b53

                     loc_4b3f:
0000000000004b3f         xor        eax, eax                                    ; CODE XREF=main+4823, main+4843
0000000000004b41         mov        rdi, rbx
0000000000004b44         or         rcx, 0xffffffffffffffff
0000000000004b48         repne scasb al, byte [rdi]
0000000000004b4a         mov        rax, rcx
0000000000004b4d         not        rax
0000000000004b50         add        rbx, rax

                     loc_4b53:
0000000000004b53         mov        rax, rbx                                    ; CODE XREF=main+4765
0000000000004b56         sub        rax, r14
0000000000004b59         cmp        rax, 0x10c3
0000000000004b5f         ja         loc_4b95

0000000000004b61         lea        rsi, qword [aTerm]                          ; argument "__s2" for method j_strncmp, "TERM "
0000000000004b68         mov        edx, 0x5                                    ; argument "__n" for method j_strncmp
0000000000004b6d         mov        rdi, rbx                                    ; argument "__s1" for method j_strncmp
0000000000004b70         call       j_strncmp                                   ; strncmp
0000000000004b75         test       eax, eax
0000000000004b77         jne        loc_4b3f

0000000000004b79         mov        rsi, qword [rsp+0x88+var_80]                ; argument "__name" for method j_fnmatch
0000000000004b7e         lea        rdi, qword [rbx+5]                          ; argument "__pattern" for method j_fnmatch
0000000000004b82         xor        edx, edx                                    ; argument "__flags" for method j_fnmatch
0000000000004b84         call       j_fnmatch                                   ; fnmatch
0000000000004b89         test       eax, eax
0000000000004b8b         jne        loc_4b3f

0000000000004b8d         mov        rbx, r12
0000000000004b90         mov        r12, r15
0000000000004b93         jmp        loc_4ba2

                     loc_4b95:
0000000000004b95         mov        rbx, r12                                    ; CODE XREF=main+4799
0000000000004b98         mov        r12, r15

                     loc_4b9b:
0000000000004b9b         mov        byte [print_with_color], 0x0                ; print_with_color, CODE XREF=main+4734, main+4744

                     loc_4ba2:
0000000000004ba2         cmp        byte [directories_first], 0x0               ; directories_first, CODE XREF=main+4708, main+4851, main+5793, main+5825, main+5838
0000000000004ba9         jne        loc_445f

0000000000004baf         cmp        byte [print_with_color], 0x0                ; print_with_color
0000000000004bb6         je         loc_4466

0000000000004bbc         mov        edi, 0xd                                    ; argument #1 for method is_colored
0000000000004bc1         call       is_colored                                  ; is_colored
0000000000004bc6         test       al, al
0000000000004bc8         jne        loc_445f

0000000000004bce         mov        edi, 0xe                                    ; argument #1 for method is_colored
0000000000004bd3         call       is_colored                                  ; is_colored
0000000000004bd8         test       al, al
0000000000004bda         je         loc_4be9

0000000000004bdc         cmp        byte [color_symlink_as_referent], 0x0       ; color_symlink_as_referent
0000000000004be3         jne        loc_445f

                     loc_4be9:
0000000000004be9         mov        edi, 0xc                                    ; argument #1 for method is_colored, CODE XREF=main+4922
0000000000004bee         call       is_colored                                  ; is_colored
0000000000004bf3         test       al, al
0000000000004bf5         je         loc_4466

0000000000004bfb         cmp        dword [format], 0x0                         ; format
0000000000004c02         je         loc_445f

0000000000004c08         jmp        loc_4466

                     loc_4c0d:
0000000000004c0d         mov        rdi, r13                                    ; CODE XREF=main+565
0000000000004c10         call       quote                                       ; quote
0000000000004c15         lea        rsi, qword [aIgnoringInvali]                ; argument "msgid" for method j_dcgettext, "ignoring invalid tab size in environment variable TABSIZE: %s"
0000000000004c1c         mov        r13, rax
0000000000004c1f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004c21         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004c26         call       j_dcgettext                                 ; dcgettext
0000000000004c2b         mov        rcx, r13
0000000000004c2e         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000004c31         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000004c33         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000004c35         xor        eax, eax
0000000000004c37         call       j_error                                     ; error
0000000000004c3c         jmp        loc_3ae7

                     loc_4c41:
0000000000004c41         test       rbx, rbx                                    ; CODE XREF=main+3343
0000000000004c44         je         loc_4686

0000000000004c4a         cmp        qword [rbx+0x18], 0x0
0000000000004c4f         jne        loc_45ec

0000000000004c55         mov        byte [print_dir_name], 0x0                  ; print_dir_name
0000000000004c5c         jmp        loc_45ec

                     loc_4c61:
0000000000004c61         cmp        byte [r14], 0x2b                            ; CODE XREF=main+2958
0000000000004c65         je         loc_4da9

                     loc_4c6b:
0000000000004c6b         lea        rdx, qword [time_style_types]               ; time_style_types, CODE XREF=main+5380
0000000000004c72         lea        rsi, qword [time_style_args]                ; time_style_args
0000000000004c79         mov        ecx, 0x4
0000000000004c7e         mov        rdi, r14
0000000000004c81         call       argmatch                                    ; argmatch
0000000000004c86         test       rax, rax
0000000000004c89         js         loc_5024

0000000000004c8f         cmp        rax, 0x1
0000000000004c93         je         loc_5170

0000000000004c99         jle        loc_4f96

0000000000004c9f         cmp        rax, 0x2
0000000000004ca3         je         loc_514f

0000000000004ca9         cmp        rax, 0x3
0000000000004cad         jne        loc_4cf1

0000000000004caf         mov        edi, 0x2
0000000000004cb4         call       hard_locale                                 ; hard_locale
0000000000004cb9         test       al, al
0000000000004cbb         je         loc_4cf1

0000000000004cbd         mov        rsi, qword [long_time_format]               ; argument "msgid" for method j_dcgettext, long_time_format
0000000000004cc4         mov        edx, 0x2                                    ; argument "category" for method j_dcgettext
0000000000004cc9         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004ccb         call       j_dcgettext                                 ; dcgettext
0000000000004cd0         mov        rsi, qword [qword_220048]                   ; argument "msgid" for method j_dcgettext, qword_220048
0000000000004cd7         mov        edx, 0x2                                    ; argument "category" for method j_dcgettext
0000000000004cdc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004cde         mov        qword [long_time_format], rax               ; long_time_format
0000000000004ce5         call       j_dcgettext                                 ; dcgettext
0000000000004cea         mov        qword [qword_220048], rax                   ; qword_220048

                     loc_4cf1:
0000000000004cf1         call       abformat_init                               ; abformat_init, CODE XREF=main+5133, main+5147, main+5459, main+5881, main+5908, main+6347, main+6373
0000000000004cf6         jmp        loc_4442

                     loc_4cfb:
0000000000004cfb         mov        edi, 0x1                                    ; argument "__fd" for method j_isatty, CODE XREF=main+817
0000000000004d00         call       j_isatty                                    ; isatty
0000000000004d05         cmp        eax, 0x1
0000000000004d08         sbb        eax, eax
0000000000004d0a         add        eax, 0x2
0000000000004d0d         mov        dword [format], eax                         ; format
0000000000004d13         jmp        loc_3bd7

                     loc_4d18:
0000000000004d18         mov        edx, 0x1                                    ; CODE XREF=main+2742
0000000000004d1d         mov        esi, 0x20
0000000000004d22         mov        rdi, rax
0000000000004d25         call       set_char_quoting                            ; set_char_quoting
0000000000004d2a         jmp        loc_435c

                     loc_4d2f:
0000000000004d2f         mov        esi, 0x3                                    ; CODE XREF=main+2502
0000000000004d34         xor        edi, edi
0000000000004d36         mov        dword [format], 0x2                         ; format
0000000000004d40         call       set_quoting_style                           ; set_quoting_style
0000000000004d45         mov        byte [qmark_funny_chars], 0x1               ; qmark_funny_chars
0000000000004d4c         jmp        loc_3988

                     loc_4d51:
0000000000004d51         test       edx, edx                                    ; CODE XREF=main+2901
0000000000004d53         je         loc_43ff

0000000000004d59         mov        dword [sort_type], 0x4                      ; sort_type
0000000000004d63         jmp        loc_4442

                     loc_4d68:
0000000000004d68         mov        esi, 0x1                                    ; argument #2 for method extract_dirs_from_files, CODE XREF=main+4479
0000000000004d6d         xor        edi, edi                                    ; argument #1 for method extract_dirs_from_files
0000000000004d6f         call       extract_dirs_from_files                     ; extract_dirs_from_files
0000000000004d74         jmp        loc_4a25

                     loc_4d79:
0000000000004d79         lea        rax, qword [aLu+34]                         ; 0x178b3, CODE XREF=main+4386
0000000000004d80         jmp        loc_49c8

                     loc_4d85:
0000000000004d85         lea        rdi, qword [aTimestyle]                     ; argument "__name" for method j_getenv, "TIME_STYLE", CODE XREF=main+2914
0000000000004d8c         call       j_getenv                                    ; getenv
0000000000004d91         test       rax, rax
0000000000004d94         mov        r14, rax
0000000000004d97         jne        loc_4408

0000000000004d9d         lea        r14, qword [aUsrlocalsharel+17]             ; 0x17a20
0000000000004da4         jmp        loc_4c6b

                     loc_4da9:
0000000000004da9         add        r14, 0x1                                    ; CODE XREF=main+5061
0000000000004dad         mov        esi, 0xa                                    ; argument "__c" for method j_strchr
0000000000004db2         mov        rdi, r14                                    ; argument "__s" for method j_strchr
0000000000004db5         call       j_strchr                                    ; strchr
0000000000004dba         test       rax, rax
0000000000004dbd         mov        r13, rax
0000000000004dc0         je         loc_4fb9

0000000000004dc6         lea        r15, qword [rax+1]
0000000000004dca         mov        esi, 0xa                                    ; argument "__c" for method j_strchr
0000000000004dcf         mov        rdi, r15                                    ; argument "__s" for method j_strchr
0000000000004dd2         call       j_strchr                                    ; strchr
0000000000004dd7         test       rax, rax
0000000000004dda         jne        loc_51b5

0000000000004de0         mov        byte [r13], 0x0

                     loc_4de5:
0000000000004de5         mov        qword [long_time_format], r14               ; long_time_format, CODE XREF=main+5916
0000000000004dec         mov        qword [qword_220048], r15                   ; qword_220048
0000000000004df3         jmp        loc_4cf1

                     loc_4df8:
0000000000004df8         mov        rdi, rax                                    ; CODE XREF=main+4682
0000000000004dfb         lea        r15, qword [indicator_name]                 ; indicator_name
0000000000004e02         mov        word [rsp+0x88+var_43], 0x3f3f
0000000000004e09         mov        byte [rsp+0x88+var_41], 0x0
0000000000004e0e         call       xstrdup                                     ; xstrdup
0000000000004e13         mov        dword [rsp+0x88+var_80], ebp
0000000000004e17         mov        qword [color_buf], rax                      ; color_buf
0000000000004e1e         mov        qword [rsp+0x88+var_58], rax
0000000000004e23         mov        qword [rsp+0x88+var_78], rbx

                     loc_4e28:
0000000000004e28         mov        rax, qword [rsp+0x88+var_60]                ; CODE XREF=main+6228, main+6282, main+6402
0000000000004e2d         movzx      edx, byte [rax]
0000000000004e30         cmp        dl, 0x2a
0000000000004e33         je         loc_4fc1

0000000000004e39         cmp        dl, 0x3a
0000000000004e3c         je         loc_5199

0000000000004e42         test       dl, dl
0000000000004e44         je         loc_51a7

0000000000004e4a         lea        rdx, qword [rax+1]
0000000000004e4e         mov        qword [rsp+0x88+var_60], rdx
0000000000004e53         movzx      edx, byte [rax]
0000000000004e56         mov        byte [rsp+0x88+var_43], dl
0000000000004e5a         cmp        byte [rax+1], 0x0
0000000000004e5e         je         loc_500f

0000000000004e64         lea        rdx, qword [rax+2]
0000000000004e68         mov        qword [rsp+0x88+var_60], rdx
0000000000004e6d         movzx      edx, byte [rax+1]
0000000000004e71         mov        byte [rsp+0x88+var_42], dl
0000000000004e75         lea        rdx, qword [rax+3]
0000000000004e79         mov        qword [rsp+0x88+var_60], rdx
0000000000004e7e         cmp        byte [rax+2], 0x3d
0000000000004e82         jne        loc_500f

0000000000004e88         lea        rsi, qword [aFulliso+9]                     ; 0x17a0c
0000000000004e8f         lea        rbx, qword [rsp+0x88+var_43]
0000000000004e94         xor        ebp, ebp

                     loc_4e96:
0000000000004e96         mov        rdi, rbx                                    ; argument "__s1" for method j_strcmp, CODE XREF=main+5649
0000000000004e99         call       j_strcmp                                    ; strcmp
0000000000004e9e         test       eax, eax
0000000000004ea0         je         loc_50ff

0000000000004ea6         add        rbp, 0x1
0000000000004eaa         mov        rsi, qword [r15+rbp*8]
0000000000004eae         test       rsi, rsi
0000000000004eb1         jne        loc_4e96

                     loc_4eb3:
0000000000004eb3         mov        rdi, rbx                                    ; CODE XREF=main+6288
0000000000004eb6         mov        ebp, dword [rsp+0x88+var_80]
0000000000004eba         mov        rbx, qword [rsp+0x88+var_78]
0000000000004ebf         call       quote                                       ; quote
0000000000004ec4         lea        rsi, qword [aUnrecognizedPr]                ; argument "msgid" for method j_dcgettext, "unrecognized prefix: %s"
0000000000004ecb         mov        r14, rax
0000000000004ece         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004ed3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004ed5         call       j_dcgettext                                 ; dcgettext
0000000000004eda         mov        rcx, r14
0000000000004edd         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000004ee0         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000004ee2         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000004ee4         xor        eax, eax
0000000000004ee6         call       j_error                                     ; error

                     loc_4eeb:
0000000000004eeb         lea        rsi, qword [aUnparsableValu]                ; argument "msgid" for method j_dcgettext, "unparsable value for LS_COLORS environment variable", CODE XREF=main+6008
0000000000004ef2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004ef7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004ef9         call       j_dcgettext                                 ; dcgettext
0000000000004efe         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000004f00         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000004f03         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000004f05         xor        eax, eax
0000000000004f07         call       j_error                                     ; error
0000000000004f0c         mov        rdi, qword [color_buf]                      ; color_buf
0000000000004f13         call       sub_3880                                    ; sub_3880
0000000000004f18         mov        rdi, qword [color_ext_list]                 ; color_ext_list
0000000000004f1f         jmp        loc_4f2d

                     loc_4f21:
0000000000004f21         mov        r14, qword [rdi+0x20]                       ; CODE XREF=main+5776
0000000000004f25         call       sub_3880                                    ; sub_3880
0000000000004f2a         mov        rdi, r14

                     loc_4f2d:
0000000000004f2d         test       rdi, rdi                                    ; CODE XREF=main+5759
0000000000004f30         jne        loc_4f21

0000000000004f32         mov        byte [print_with_color], 0x0                ; print_with_color

                     loc_4f39:
0000000000004f39         cmp        qword [qword_2200d0], 0x6                   ; qword_2200d0, CODE XREF=main+6416
0000000000004f41         jne        loc_4ba2

0000000000004f47         mov        rdi, qword [qword_2200d8]                   ; argument "__s1" for method j_strncmp, qword_2200d8
0000000000004f4e         lea        rsi, qword [aTarget]                        ; argument "__s2" for method j_strncmp, "target"
0000000000004f55         mov        edx, 0x6                                    ; argument "__n" for method j_strncmp
0000000000004f5a         call       j_strncmp                                   ; strncmp
0000000000004f5f         test       eax, eax
0000000000004f61         jne        loc_4ba2

0000000000004f67         mov        byte [color_symlink_as_referent], 0x1       ; color_symlink_as_referent
0000000000004f6e         jmp        loc_4ba2

                     loc_4f73:
0000000000004f73         cmp        qword [qword_220070], 0x1                   ; qword_220070, CODE XREF=main+3890
0000000000004f7b         jne        loc_47d8

0000000000004f81         mov        rax, qword [qword_220078]                   ; qword_220078
0000000000004f88         cmp        byte [rax], 0x6d
0000000000004f8b         jne        loc_47d8

0000000000004f91         jmp        loc_47f0

                     loc_4f96:
0000000000004f96         test       rax, rax                                    ; CODE XREF=main+5113
0000000000004f99         jne        loc_4cf1

0000000000004f9f         lea        rax, qword [aYmdHmsnZ]                      ; "%Y-%m-%d %H:%M:%S.%N %z"
0000000000004fa6         mov        qword [qword_220048], rax                   ; qword_220048
0000000000004fad         mov        qword [long_time_format], rax               ; long_time_format
0000000000004fb4         jmp        loc_4cf1

                     loc_4fb9:
0000000000004fb9         mov        r15, r14                                    ; CODE XREF=main+5408
0000000000004fbc         jmp        loc_4de5

                     loc_4fc1:
0000000000004fc1         mov        edi, 0x28                                   ; argument #1 for method xmalloc, CODE XREF=main+5523
0000000000004fc6         lea        rbx, qword [rsp+0x88+var_60]
0000000000004fcb         call       xmalloc                                     ; xmalloc
0000000000004fd0         mov        r14, rax
0000000000004fd3         mov        rax, qword [color_ext_list]                 ; color_ext_list
0000000000004fda         mov        edx, 0x1                                    ; argument #3 for method get_funky_string
0000000000004fdf         mov        rcx, r14                                    ; argument #4 for method get_funky_string
0000000000004fe2         mov        rsi, rbx                                    ; argument #2 for method get_funky_string
0000000000004fe5         mov        rdi, r12                                    ; argument #1 for method get_funky_string
0000000000004fe8         add        qword [rsp+0x88+var_60], 0x1
0000000000004fee         mov        qword [color_ext_list], r14                 ; color_ext_list
0000000000004ff5         mov        qword [r14+0x20], rax
0000000000004ff9         mov        rax, qword [rsp+0x88+var_58]
0000000000004ffe         mov        qword [r14+8], rax
0000000000005002         call       get_funky_string                            ; get_funky_string
0000000000005007         test       al, al
0000000000005009         jne        loc_50c1

                     loc_500f:
000000000000500f         mov        ebp, dword [rsp+0x88+var_80]                ; CODE XREF=main+5566, main+5602, main+6194, main+6234
0000000000005013         mov        rbx, qword [rsp+0x88+var_78]
0000000000005018         jmp        loc_4eeb

                     loc_501d:
000000000000501d         xor        edi, edi                                    ; case 1, argument #1 for method usage, CODE XREF=main+684
000000000000501f         call       usage                                       ; usage

                     loc_5024:
0000000000005024         lea        rdi, qword [aTimeStyle]                     ; "time style", CODE XREF=main+5097
000000000000502b         mov        rdx, rax
000000000000502e         mov        rsi, r14
0000000000005031         lea        rbp, qword [aPosixsn]                       ; "  - [posix-]%s\\n"
0000000000005038         call       argmatch_invalid                            ; argmatch_invalid
000000000000503d         mov        rbx, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000005044         lea        rsi, qword [aValidArguments_17b2c]          ; argument "msgid" for method j_dcgettext, "Valid arguments are:\\n"
000000000000504b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005050         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005052         call       j_dcgettext                                 ; dcgettext
0000000000005057         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000505a         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000505d         lea        rbx, qword [time_style_args]                ; time_style_args
0000000000005064         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000005069         lea        rcx, qword [aFulliso]                       ; "full-iso"

                     loc_5070:
0000000000005070         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=main+6128
0000000000005077         add        rbx, 0x8
000000000000507b         xor        eax, eax
000000000000507d         mov        rdx, rbp
0000000000005080         mov        esi, 0x1
0000000000005085         call       j___fprintf_chk                             ; __fprintf_chk
000000000000508a         mov        rcx, qword [rbx]
000000000000508d         test       rcx, rcx
0000000000005090         jne        loc_5070

0000000000005092         mov        rbx, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000005099         lea        rsi, qword [aFormatEgHmForA]                ; argument "msgid" for method j_dcgettext, "  - +FORMAT (e.g., +%H:%M) for a 'date'-style format\\n"
00000000000050a0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000050a2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000050a7         call       j_dcgettext                                 ; dcgettext
00000000000050ac         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000050af         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000050b2         call       j_fputs_unlocked                            ; fputs_unlocked

                     loc_50b7:
00000000000050b7         mov        edi, 0x2                                    ; case 258, argument #1 for method usage, CODE XREF=main+670, main+684
00000000000050bc         call       usage                                       ; usage

                     loc_50c1:
00000000000050c1         mov        rax, qword [rsp+0x88+var_60]                ; CODE XREF=main+5993
00000000000050c6         lea        rdx, qword [rax+1]
00000000000050ca         mov        qword [rsp+0x88+var_60], rdx
00000000000050cf         cmp        byte [rax], 0x3d
00000000000050d2         jne        loc_500f

00000000000050d8         mov        rax, qword [rsp+0x88+var_58]
00000000000050dd         lea        rcx, qword [r14+0x10]                       ; argument #4 for method get_funky_string
00000000000050e1         xor        edx, edx                                    ; argument #3 for method get_funky_string
00000000000050e3         mov        rsi, rbx                                    ; argument #2 for method get_funky_string
00000000000050e6         mov        rdi, r12                                    ; argument #1 for method get_funky_string
00000000000050e9         mov        qword [r14+0x18], rax
00000000000050ed         call       get_funky_string                            ; get_funky_string
00000000000050f2         test       al, al
00000000000050f4         jne        loc_4e28

00000000000050fa         jmp        loc_500f

                     loc_50ff:
00000000000050ff         lea        rax, qword [color_indicator]                ; color_indicator, CODE XREF=main+5632
0000000000005106         movsxd     rcx, ebp
0000000000005109         lea        rsi, qword [rsp+0x88+var_60]                ; argument #2 for method get_funky_string
000000000000510e         shl        rcx, 0x4
0000000000005112         xor        edx, edx                                    ; argument #3 for method get_funky_string
0000000000005114         mov        rdi, r12                                    ; argument #1 for method get_funky_string
0000000000005117         add        rcx, rax
000000000000511a         mov        rax, qword [rsp+0x88+var_58]
000000000000511f         mov        qword [rcx+8], rax                          ; argument #4 for method get_funky_string
0000000000005123         call       get_funky_string                            ; get_funky_string
0000000000005128         test       al, al
000000000000512a         jne        loc_4e28

0000000000005130         jmp        loc_4eb3

                     loc_5135:
0000000000005135         lea        rdi, qword [aLsblocksize+3]                 ; argument "__name" for method j_getenv, 0x17ae8, CODE XREF=main+4211
000000000000513c         call       j_getenv                                    ; getenv
0000000000005141         test       rax, rax
0000000000005144         jne        loc_4919

000000000000514a         jmp        loc_4933

                     loc_514f:
000000000000514f         lea        rax, qword [aYmd]                           ; "%Y-%m-%d ", CODE XREF=main+5123
0000000000005156         mov        qword [long_time_format], rax               ; long_time_format
000000000000515d         lea        rax, qword [aMdHm]                          ; "%m-%d %H:%M"
0000000000005164         mov        qword [qword_220048], rax                   ; qword_220048
000000000000516b         jmp        loc_4cf1

                     loc_5170:
0000000000005170         lea        rax, qword [aYmdHmsnZ+24]                   ; 0x17b6a, CODE XREF=main+5107
0000000000005177         mov        qword [qword_220048], rax                   ; qword_220048
000000000000517e         mov        qword [long_time_format], rax               ; long_time_format
0000000000005185         jmp        loc_4cf1

                     loc_518a:
000000000000518a         mov        esi, 0xa                                    ; argument #2 for method j___overflow, CODE XREF=main+4533
000000000000518f         call       j___overflow                                ; __overflow
0000000000005194         jmp        loc_4a66

                     loc_5199:
0000000000005199         add        rax, 0x1                                    ; CODE XREF=main+5532
000000000000519d         mov        qword [rsp+0x88+var_60], rax
00000000000051a2         jmp        loc_4e28

                     loc_51a7:
00000000000051a7         mov        ebp, dword [rsp+0x88+var_80]                ; CODE XREF=main+5540
00000000000051ab         mov        rbx, qword [rsp+0x88+var_78]
00000000000051b0         jmp        loc_4f39

                     loc_51b5:
00000000000051b5         mov        rdi, r14                                    ; CODE XREF=main+5434
00000000000051b8         call       quote                                       ; quote
00000000000051bd         lea        rsi, qword [aInvalidTimeSty]                ; argument "msgid" for method j_dcgettext, "invalid time style format %s"
00000000000051c4         mov        rbx, rax
00000000000051c7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000051cc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000051ce         call       j_dcgettext                                 ; dcgettext
00000000000051d3         mov        rcx, rbx
00000000000051d6         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000051d9         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000051db         mov        edi, 0x2                                    ; argument "__status" for method j_error
00000000000051e0         xor        eax, eax
00000000000051e2         call       j_error                                     ; error

                     loc_51e7:
00000000000051e7         lea        rcx, qword [__PRETTY_FUNCTION__.9809]       ; argument "__function" for method j___assert_fail, "dev_ino_pop", CODE XREF=main+3465
00000000000051ee         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/ls.c"
00000000000051f5         lea        rdi, qword [aDevinosizeObst]                ; argument "__assertion" for method j___assert_fail, "dev_ino_size <= obstack_object_size (&dev_ino_obstack)"
00000000000051fc         mov        edx, 0x403                                  ; argument "__line" for method j___assert_fail
0000000000005201         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_5206:
0000000000005206         lea        rcx, qword [__PRETTY_FUNCTION__.9964]       ; argument "__function" for method j___assert_fail, __PRETTY_FUNCTION__.9964, CODE XREF=main+3514
000000000000520d         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/ls.c"
0000000000005214         lea        rdi, qword [aFound]                         ; argument "__assertion" for method j___assert_fail, "found"
000000000000521b         mov        edx, 0x640                                  ; argument "__line" for method j___assert_fail
0000000000005220         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_5225:
0000000000005225         lea        rcx, qword [__PRETTY_FUNCTION__.9964]       ; argument "__function" for method j___assert_fail, __PRETTY_FUNCTION__.9964, CODE XREF=main+3616
000000000000522c         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/ls.c"
0000000000005233         lea        rdi, qword [aHashgetnentrie]                ; argument "__assertion" for method j___assert_fail, "hash_get_n_entries (active_dir_set) == 0"
000000000000523a         mov        edx, 0x674                                  ; argument "__line" for method j___assert_fail
000000000000523f         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_5244:
0000000000005244         mov        r8, qword [optarg@@GLIBC_2.2.5]             ; optarg@@GLIBC_2.2.5, CODE XREF=main+2202
000000000000524b         mov        esi, dword [rsp+0x88+var_58]
000000000000524f         lea        rcx, qword [long_options]                   ; long_options
0000000000005256         xor        edx, edx
0000000000005258         mov        edi, eax
000000000000525a         call       xstrtol_fatal                               ; xstrtol_fatal

                     loc_525f:
000000000000525f         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=main+3650
                        ; endp

                     loc_5264:
0000000000005264         call       xalloc_die                                  ; xalloc_die, CODE XREF=main+3079
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5269:
0000000000005269         nop        dword [rax]                                 ; End of unwind block (FDE at 0x1c508)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
0000000000005270         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x1b66c)
0000000000005272         mov        r9, rdx
0000000000005275         pop        rsi
0000000000005276         mov        rdx, rsp
0000000000005279         and        rsp, 0xfffffffffffffff0
000000000000527d         push       rax
000000000000527e         push       rsp
000000000000527f         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
0000000000005286         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
000000000000528d         lea        rdi, qword [main]                           ; main
0000000000005294         call       qword [qword_21ffc8+8]                      ; 0x21ffd0
000000000000529a         hlt
                        ; endp
000000000000529b         align      32                                          ; End of unwind block (FDE at 0x1b66c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
00000000000052a0         lea        rdi, qword [__TMC_END__]                    ; __TMC_END__, CODE XREF=__do_global_dtors_aux+35
00000000000052a7         push       rbp
00000000000052a8         lea        rax, qword [__TMC_END__]                    ; __TMC_END__
00000000000052af         cmp        rax, rdi
00000000000052b2         mov        rbp, rsp
00000000000052b5         je         loc_52d0

00000000000052b7         mov        rax, qword [qword_21ffc8]                   ; qword_21ffc8
00000000000052be         test       rax, rax
00000000000052c1         je         loc_52d0

00000000000052c3         pop        rbp
00000000000052c4         jmp        rax
                        ; endp
00000000000052c6         align      16

                     loc_52d0:
00000000000052d0         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
00000000000052d1         ret
                        ; endp
00000000000052d2         align      32

                     register_tm_clones:
00000000000052e0         lea        rdi, qword [__TMC_END__]                    ; __TMC_END__, CODE XREF=frame_dummy+5
00000000000052e7         lea        rsi, qword [__TMC_END__]                    ; __TMC_END__
00000000000052ee         push       rbp
00000000000052ef         sub        rsi, rdi
00000000000052f2         mov        rbp, rsp
00000000000052f5         sar        rsi, 0x3
00000000000052f9         mov        rax, rsi
00000000000052fc         shr        rax, 0x3f
0000000000005300         add        rsi, rax
0000000000005303         sar        rsi, 0x1
0000000000005306         je         loc_5320

0000000000005308         mov        rax, qword [qword_21ffe8]                   ; qword_21ffe8
000000000000530f         test       rax, rax
0000000000005312         je         loc_5320

0000000000005314         pop        rbp
0000000000005315         jmp        rax
                        ; endp
0000000000005317         align      32

                     loc_5320:
0000000000005320         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000005321         ret
                        ; endp
0000000000005322         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
0000000000005330         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
0000000000005337         jne        loc_5368

0000000000005339         cmp        qword [qword_21fff0], 0x0                   ; qword_21fff0
0000000000005341         push       rbp
0000000000005342         mov        rbp, rsp
0000000000005345         je         loc_5353

0000000000005347         mov        rdi, qword [__dso_handle]                   ; __dso_handle
000000000000534e         call       j_qword_21fff0                              ; qword_21fff0

                     loc_5353:
0000000000005353         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
0000000000005358         mov        byte [completed.7697], 0x1                  ; completed.7697
000000000000535f         pop        rbp
0000000000005360         ret
                        ; endp
0000000000005361         align      8

                     loc_5368:
0000000000005368         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
000000000000536a         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000005370         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000005371         mov        rbp, rsp
0000000000005374         pop        rbp
0000000000005375         jmp        register_tm_clones                          ; register_tm_clones
000000000000537a         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dev_ino_hash:
0000000000005380         mov        rax, qword [rdi]                            ; Begin of unwind block (FDE at 0x1b6dc), DATA XREF=main+3050
0000000000005383         xor        edx, edx
0000000000005385         div        rsi
0000000000005388         mov        rax, rdx
000000000000538b         ret
                        ; endp
000000000000538c         align      16                                          ; End of unwind block (FDE at 0x1b6dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dev_ino_compare:
0000000000005390         xor        eax, eax                                    ; Begin of unwind block (FDE at 0x1b6f0), DATA XREF=main+3043
0000000000005392         mov        rdx, qword [rsi]
0000000000005395         cmp        qword [rdi], rdx
0000000000005398         je         loc_53a0

000000000000539a         ret
                        ; endp
000000000000539c         align      32

                     loc_53a0:
00000000000053a0         mov        rax, qword [rsi+8]                          ; CODE XREF=dev_ino_compare+8
00000000000053a4         cmp        qword [rdi+8], rax
00000000000053a8         sete       al
00000000000053ab         ret
                        ; endp
00000000000053ac         align      16                                          ; End of unwind block (FDE at 0x1b6f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sighandler:
00000000000053b0         mov        eax, dword [interrupt_signal]               ; Begin of unwind block (FDE at 0x1b704), interrupt_signal, DATA XREF=signal_setup+283
00000000000053b6         test       eax, eax
00000000000053b8         jne        loc_53c0

00000000000053ba         mov        dword [interrupt_signal], edi               ; interrupt_signal

                     loc_53c0:
00000000000053c0         ret                                                    ; CODE XREF=sighandler+8
                        ; endp
00000000000053c2         align      16                                          ; End of unwind block (FDE at 0x1b704)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dev_ino_free:
00000000000053d0         jmp        sub_3880                                    ; sub_3880, Begin of unwind block (FDE at 0x1b718), DATA XREF=main+3036
                        ; endp
00000000000053d5         align      32                                          ; End of unwind block (FDE at 0x1b718)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_funky_string:
00000000000053e0         mov        r8, qword [rsi]                             ; Begin of unwind block (FDE at 0x1b72c), CODE XREF=main+5986, main+6221, main+6275
00000000000053e3         mov        r9, qword [rdi]
00000000000053e6         lea        r11, qword [_IO_stdin_used+32]              ; 0x15f80
00000000000053ed         push       r15
00000000000053ef         xor        r10d, r10d
00000000000053f2         push       r14
00000000000053f4         mov        eax, 0x1
00000000000053f9         push       r13
00000000000053fb         push       r12
00000000000053fd         mov        r12d, edx
0000000000005400         push       rbp
0000000000005401         movabs     rbp, 0x7e000000000000
000000000000540b         push       rbx
000000000000540c         mov        rbx, rcx

                     loc_540f:
000000000000540f         movzx      ecx, byte [r8]                              ; CODE XREF=get_funky_string+159, get_funky_string+319
0000000000005413         cmp        cl, 0x3d                                    ; DATA XREF=main+474
0000000000005416         je         loc_5462

0000000000005418         nop        dword [rax+rax]

                     loc_5420:
0000000000005420         jle        loc_54f8                                    ; CODE XREF=get_funky_string+128

0000000000005426         cmp        cl, 0x5c
0000000000005429         je         loc_5488

000000000000542b         cmp        cl, 0x5e
000000000000542e         jne        loc_5470

0000000000005430         movzx      ecx, byte [r8+1]
0000000000005435         lea        r14, qword [r8+1]
0000000000005439         lea        r13d, dword [rcx-0x40]
000000000000543d         cmp        r13b, 0x3e
0000000000005441         ja         loc_54d8

0000000000005447         add        r8, 0x2
000000000000544b         and        ecx, 0x1f

                     loc_544e:
000000000000544e         mov        byte [r9], cl                               ; CODE XREF=get_funky_string+180, get_funky_string+215, get_funky_string+240
0000000000005451         movzx      ecx, byte [r8]
0000000000005455         add        r10, 0x1
0000000000005459         add        r9, 0x1
000000000000545d         cmp        cl, 0x3d
0000000000005460         jne        loc_5420

                     loc_5462:
0000000000005462         test       r12b, r12b                                  ; CODE XREF=get_funky_string+54
0000000000005465         je         loc_5470

0000000000005467         mov        eax, edx
0000000000005469         mov        r14, r8
000000000000546c         jmp        loc_54df
000000000000546e         align      16

                     loc_5470:
0000000000005470         mov        byte [r9], cl                               ; CODE XREF=get_funky_string+78, get_funky_string+133, get_funky_string+287
0000000000005473         add        r8, 0x1
0000000000005477         add        r10, 0x1
000000000000547b         add        r9, 0x1
000000000000547f         jmp        loc_540f
0000000000005481         align      8

                     loc_5488:
0000000000005488         movzx      ecx, byte [r8+1]                            ; CODE XREF=get_funky_string+73
000000000000548d         add        r8, 0x2
0000000000005491         cmp        cl, 0x78
0000000000005494         ja         loc_544e

0000000000005496         movzx      r13d, cl
000000000000549a         movsxd     r13, dword [r11+r13*4]
000000000000549e         add        r13, r11
00000000000054a1         jmp        r13
                        ; endp
00000000000054a4         nop        dword [rax]
00000000000054a8         movzx      r13d, byte [r8]
00000000000054ac         sub        ecx, 0x30
00000000000054af         lea        r14d, dword [r13-0x30]
00000000000054b3         cmp        r14b, 0x7
00000000000054b7         ja         get_funky_string+110
00000000000054b9         add        r8, 0x1                                     ; CODE XREF=get_funky_string+238
00000000000054bd         lea        ecx, dword [r13+rcx*8-0x30]
00000000000054c2         movzx      r13d, byte [r8]
00000000000054c6         lea        r14d, dword [r13-0x30]
00000000000054ca         cmp        r14b, 0x7
00000000000054ce         jbe        get_funky_string+217
00000000000054d0         jmp        get_funky_string+110
00000000000054d5         nop        dword [rax]

                     loc_54d8:
00000000000054d8         cmp        cl, 0x3f                                    ; CODE XREF=get_funky_string+97
00000000000054db         je         loc_5510

00000000000054dd         xor        eax, eax

                     loc_54df:
00000000000054df         mov        qword [rdi], r9                             ; CODE XREF=get_funky_string+140, get_funky_string+301
00000000000054e2         mov        qword [rsi], r14
00000000000054e5         mov        qword [rbx], r10
00000000000054e8         pop        rbx
00000000000054e9         pop        rbp
00000000000054ea         pop        r12
00000000000054ec         pop        r13
00000000000054ee         pop        r14
00000000000054f0         pop        r15
00000000000054f2         ret
                        ; endp
00000000000054f3         align      8

                     loc_54f8:
00000000000054f8         test       cl, cl                                      ; CODE XREF=loc_5420
00000000000054fa         je         loc_5505

00000000000054fc         cmp        cl, 0x3a
00000000000054ff         jne        loc_5470

                     loc_5505:
0000000000005505         mov        r14, r8                                     ; CODE XREF=get_funky_string+282
0000000000005508         mov        eax, 0x1
000000000000550d         jmp        loc_54df
000000000000550f         align      16

                     loc_5510:
0000000000005510         mov        byte [r9], 0x7f                             ; CODE XREF=get_funky_string+251
0000000000005514         add        r10, 0x1
0000000000005518         add        r9, 0x1
000000000000551c         mov        r8, r14
000000000000551f         jmp        loc_540f


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5524:
0000000000005524         nop        dword [rax]
0000000000005528         mov        ecx, 0x1b
000000000000552d         jmp        get_funky_string+110
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5532:
0000000000005532         nop        word [rax+rax]
0000000000005538         mov        r14, r8
000000000000553b         xor        eax, eax
000000000000553d         jmp        get_funky_string+255
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_553f:
000000000000553f         nop
0000000000005540         xor        r14d, r14d
0000000000005543         nop        dword [rax+rax]

                     loc_5548:
0000000000005548         movzx      r13d, byte [r8]                             ; CODE XREF=sub_5630+29, sub_5630+53
000000000000554c         lea        ecx, dword [r13-0x30]
0000000000005550         cmp        cl, 0x36
0000000000005553         ja         loc_5598

                     loc_5555:
0000000000005555         mov        r15, rax                                    ; CODE XREF=sub_553f+83
0000000000005558         shl        r15, cl
000000000000555b         test       r15d, 0x7e0000
0000000000005562         jne        loc_5640

0000000000005568         test       r15, rbp
000000000000556b         jne        loc_5658

0000000000005571         test       r15d, 0x3ff
0000000000005578         je         loc_5598

000000000000557a         add        r8, 0x1
000000000000557e         shl        r14d, 0x4
0000000000005582         lea        r14d, dword [r13+r14-0x30]
0000000000005587         movzx      r13d, byte [r8]
000000000000558b         lea        ecx, dword [r13-0x30]
000000000000558f         cmp        cl, 0x36
0000000000005592         jbe        loc_5555

0000000000005594         nop        dword [rax]

                     loc_5598:
0000000000005598         mov        byte [r9], r14b                             ; CODE XREF=sub_553f+20, sub_553f+57
000000000000559b         add        r10, 0x1
000000000000559f         add        r9, 0x1
00000000000055a3         jmp        get_funky_string+47
                        ; endp
00000000000055a8         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_55b0:
00000000000055b0         mov        ecx, 0x20
00000000000055b5         jmp        get_funky_string+110
                        ; endp
00000000000055ba         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_55c0:
00000000000055c0         mov        ecx, 0x7
00000000000055c5         jmp        get_funky_string+110
                        ; endp
00000000000055ca         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_55d0:
00000000000055d0         mov        ecx, 0xb
00000000000055d5         jmp        get_funky_string+110
                        ; endp
00000000000055da         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_55e0:
00000000000055e0         mov        ecx, 0x7f
00000000000055e5         jmp        get_funky_string+110
                        ; endp
00000000000055ea         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_55f0:
00000000000055f0         mov        ecx, 0x8
00000000000055f5         jmp        get_funky_string+110
                        ; endp
00000000000055fa         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5600:
0000000000005600         mov        ecx, 0xc
0000000000005605         jmp        get_funky_string+110
                        ; endp
000000000000560a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5610:
0000000000005610         mov        ecx, 0xa
0000000000005615         jmp        get_funky_string+110
                        ; endp
000000000000561a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5620:
0000000000005620         mov        ecx, 0xd
0000000000005625         jmp        get_funky_string+110
                        ; endp
000000000000562a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5630:
0000000000005630         mov        ecx, 0x9
0000000000005635         jmp        get_funky_string+110
                        ; endp
000000000000563a         nop        word [rax+rax]

                     loc_5640:
0000000000005640         shl        r14d, 0x4                                   ; CODE XREF=sub_553f+35
0000000000005644         add        r8, 0x1
0000000000005648         lea        r14d, dword [r13+r14-0x37]
000000000000564d         jmp        loc_5548
0000000000005652         nop        word [rax+rax]

                     loc_5658:
0000000000005658         shl        r14d, 0x4                                   ; CODE XREF=sub_553f+44
000000000000565c         add        r8, 0x1
0000000000005660         lea        r14d, dword [r13+r14-0x57]
0000000000005665         jmp        loc_5548


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_566a:
000000000000566a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x1b72c)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     is_colored:
0000000000005670         lea        rax, qword [color_indicator]                ; Begin of unwind block (FDE at 0x1b774), color_indicator, CODE XREF=main+4897, main+4915, main+4942, set_normal_color+18, quote_name+125, print_name_with_quoting+242, print_name_with_quoting+285, print_name_with_quoting+445, print_name_with_quoting+766, print_name_with_quoting+806, print_name_with_quoting+853
0000000000005677         mov        edi, edi
0000000000005679         shl        rdi, 0x4
000000000000567d         add        rdi, rax
0000000000005680         xor        eax, eax
0000000000005682         mov        rdx, qword [rdi]
0000000000005685         test       rdx, rdx
0000000000005688         je         loc_56b7

000000000000568a         cmp        rdx, 0x1
000000000000568e         mov        rsi, qword [rdi+8]
0000000000005692         je         loc_56c0

0000000000005694         cmp        rdx, 0x2
0000000000005698         mov        eax, 0x1
000000000000569d         jne        loc_56b7

000000000000569f         lea        rdi, qword [G_line+4292]                    ; 0x17844
00000000000056a6         mov        ecx, 0x2
00000000000056ab         rep  cmpsb byte [rsi], byte [rdi]
00000000000056ad         seta       al
00000000000056b0         sbb        al, 0x0
00000000000056b2         test       al, al
00000000000056b4         setne      al

                     loc_56b7:
00000000000056b7         ret                                                    ; CODE XREF=is_colored+24, is_colored+45
                        ; endp
00000000000056b9         align      64

                     loc_56c0:
00000000000056c0         cmp        byte [rsi], 0x30                            ; CODE XREF=is_colored+34
00000000000056c3         setne      al
00000000000056c6         ret
                        ; endp
00000000000056c7         align      16                                          ; End of unwind block (FDE at 0x1b774)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24


                     set_line_length:
00000000000056d0         sub        rsp, 0x18                                   ; Begin of unwind block (FDE at 0x1b788), CODE XREF=main+2369, main+3760
00000000000056d4         lea        r8, qword [aLu+34]                          ; 0x178b3
00000000000056db         xor        edx, edx
00000000000056dd         xor        esi, esi
00000000000056df         mov        rcx, rsp
00000000000056e2         mov        rax, qword [fs:0x28]
00000000000056eb         mov        qword [rsp+0x18+var_10], rax
00000000000056f0         xor        eax, eax
00000000000056f2         call       xstrtoumax                                  ; xstrtoumax
00000000000056f7         test       eax, eax
00000000000056f9         je         loc_5738

00000000000056fb         cmp        eax, 0x1
00000000000056fe         je         loc_5720

0000000000005700         xor        eax, eax

                     loc_5702:
0000000000005702         mov        rdx, qword [rsp+0x18+var_10]                ; CODE XREF=set_line_length+96, set_line_length+120
0000000000005707         xor        rdx, qword [fs:0x28]
0000000000005710         jne        loc_574a

0000000000005712         add        rsp, 0x18
0000000000005716         ret
                        ; endp
0000000000005717         align      32

                     loc_5720:
0000000000005720         mov        qword [line_length], 0xffffffffffffffff     ; line_length, CODE XREF=set_line_length+46
000000000000572b         mov        eax, 0x1
0000000000005730         jmp        loc_5702
0000000000005732         align      8

                     loc_5738:
0000000000005738         mov        rax, qword [rsp+0x18+var_18]                ; CODE XREF=set_line_length+41
000000000000573c         mov        qword [line_length], rax                    ; line_length
0000000000005743         mov        eax, 0x1
0000000000005748         jmp        loc_5702

                     loc_574a:
000000000000574a         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=set_line_length+64
                        ; endp
000000000000574f         align      16                                          ; End of unwind block (FDE at 0x1b788)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_648: int8_t, -1608
        ;    var_650: int64_t, -1616
        ;    var_658: int64_t, -1624
        ;    var_660: int64_t, -1632
        ;    var_670: int64_t, -1648
        ;    var_678: int64_t, -1656
        ;    var_680: int64_t, -1664
        ;    var_688: int64_t, -1672


                     abformat_init:
0000000000005750         push       r15                                         ; Begin of unwind block (FDE at 0x1b7a4), CODE XREF=main+5201
0000000000005752         push       r14
0000000000005754         xor        esi, esi
0000000000005756         push       r13
0000000000005758         push       r12
000000000000575a         push       rbp
000000000000575b         push       rbx
000000000000575c         sub        rsp, 0x658
0000000000005763         lea        rdi, qword [rsp+0x688+var_658]
0000000000005768         mov        rax, qword [fs:0x28]
0000000000005771         mov        qword [rsp+0x688+var_40], rax
0000000000005779         xor        eax, eax
000000000000577b         mov        qword [rsp+0x688+var_678], rdi

                     loc_5780:
0000000000005780         lea        rax, qword [long_time_format]               ; long_time_format, CODE XREF=abformat_init+122
0000000000005787         mov        rax, qword [rax+rsi]
000000000000578b         movzx      edx, byte [rax]
000000000000578e         test       dl, dl
0000000000005790         je         loc_57ab

0000000000005792         nop        word [rax+rax]

                     loc_5798:
0000000000005798         cmp        dl, 0x25                                    ; CODE XREF=abformat_init+89
000000000000579b         movzx      ecx, byte [rax+1]
000000000000579f         je         loc_57b0

                     loc_57a1:
00000000000057a1         mov        edx, ecx                                    ; CODE XREF=abformat_init+108

                     loc_57a3:
00000000000057a3         add        rax, 0x1                                    ; CODE XREF=abformat_init+328
00000000000057a7         test       dl, dl
00000000000057a9         jne        loc_5798

                     loc_57ab:
00000000000057ab         xor        eax, eax                                    ; CODE XREF=abformat_init+64
00000000000057ad         jmp        loc_57be
00000000000057af         align      16

                     loc_57b0:
00000000000057b0         cmp        cl, 0x25                                    ; CODE XREF=abformat_init+79
00000000000057b3         je         loc_5890

00000000000057b9         cmp        cl, 0x62
00000000000057bc         jne        loc_57a1

                     loc_57be:
00000000000057be         mov        qword [rdi+rsi], rax                        ; CODE XREF=abformat_init+93
00000000000057c2         add        rsi, 0x8
00000000000057c6         cmp        rsi, 0x10
00000000000057ca         jne        loc_5780

00000000000057cc         cmp        qword [rsp+0x688+var_658], 0x0
00000000000057d2         mov        r13d, 0xc
00000000000057d8         je         loc_58e1

                     loc_57de:
00000000000057de         lea        rax, qword [rsp+0x688+var_648]              ; CODE XREF=abformat_init+407
00000000000057e3         mov        qword [rsp+0x688+var_680], rax
00000000000057e8         lea        rax, qword [rsp+0x688+var_660]
00000000000057ed         mov        qword [rsp+0x688+var_688], rax

                     loc_57f1:
00000000000057f1         mov        r15, qword [rsp+0x688+var_680]              ; CODE XREF=abformat_init+309
00000000000057f6         mov        r12d, 0x2000e
00000000000057fc         xor        ebp, ebp
00000000000057fe         lea        r14, qword [r15+0x600]
0000000000005805         nop        dword [rax]

                     loc_5808:
0000000000005808         mov        edi, r12d                                   ; argument "__item" for method j_nl_langinfo, CODE XREF=abformat_init+299
000000000000580b         mov        qword [rsp+0x688+var_660], r13
0000000000005810         call       j_nl_langinfo                               ; nl_langinfo
0000000000005815         mov        esi, 0x25                                   ; argument "__c" for method j_strchr
000000000000581a         mov        rdi, rax                                    ; argument "__s" for method j_strchr
000000000000581d         mov        rbx, rax
0000000000005820         call       j_strchr                                    ; strchr
0000000000005825         test       rax, rax
0000000000005828         jne        loc_58b8

000000000000582e         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000005833         movzx      edx, byte [rbx]
0000000000005836         mov        rax, qword [rax]
0000000000005839         xor        r9d, r9d
000000000000583c         mov        rcx, qword [rsp+0x688+var_688]
0000000000005840         mov        rsi, r15
0000000000005843         mov        rdi, rbx
0000000000005846         movzx      r8d, word [rax+rdx*2]
000000000000584b         mov        edx, 0x80
0000000000005850         shr        r8w, 0xb
0000000000005855         and        r8d, 0x1
0000000000005859         call       mbsalign                                    ; mbsalign
000000000000585e         cmp        rax, 0x7f
0000000000005862         ja         loc_58b8

0000000000005864         mov        rax, qword [rsp+0x688+var_660]
0000000000005869         cmp        rbp, rax
000000000000586c         cmovb      rbp, rax
0000000000005870         sub        r15, 0xffffffffffffff80
0000000000005874         add        r12d, 0x1
0000000000005878         cmp        r15, r14
000000000000587b         jne        loc_5808

000000000000587d         cmp        r13, rbp
0000000000005880         jbe        loc_58ef

0000000000005882         mov        r13, rbp
0000000000005885         jmp        loc_57f1
000000000000588a         align      16

                     loc_5890:
0000000000005890         movzx      edx, byte [rax+2]                           ; CODE XREF=abformat_init+99
0000000000005894         add        rax, 0x1
0000000000005898         jmp        loc_57a3

                     loc_589d:
000000000000589d         mov        r13, qword [rsp+0x688+var_688]              ; CODE XREF=abformat_init+582
00000000000058a1         add        r13, 0x8
00000000000058a5         cmp        r13, 0x10
00000000000058a9         jne        loc_58f7

00000000000058ab         mov        byte [use_abformat], 0x1                    ; use_abformat
00000000000058b2         nop        word [rax+rax]

                     loc_58b8:
00000000000058b8         mov        rax, qword [rsp+0x688+var_40]               ; CODE XREF=abformat_init+216, abformat_init+274, abformat_init+413, abformat_init+503, abformat_init+565
00000000000058c0         xor        rax, qword [fs:0x28]
00000000000058c9         jne        loc_59bc

00000000000058cf         add        rsp, 0x658
00000000000058d6         pop        rbx
00000000000058d7         pop        rbp
00000000000058d8         pop        r12
00000000000058da         pop        r13
00000000000058dc         pop        r14
00000000000058de         pop        r15
00000000000058e0         ret
                        ; endp

                     loc_58e1:
00000000000058e1         cmp        qword [rsp+0x688+var_650], 0x0              ; CODE XREF=abformat_init+136
00000000000058e7         jne        loc_57de

00000000000058ed         jmp        loc_58b8

                     loc_58ef:
00000000000058ef         xor        r13d, r13d                                  ; CODE XREF=abformat_init+304
00000000000058f2         mov        qword [rsp+0x688+var_670], r15

                     loc_58f7:
00000000000058f7         lea        rax, qword [long_time_format]               ; long_time_format, CODE XREF=abformat_init+345
00000000000058fe         mov        qword [rsp+0x688+var_688], r13
0000000000005902         mov        rbx, qword [rsp+0x688+var_680]
0000000000005907         imul       r10, r13, 0xc0
000000000000590e         mov        r12, qword [rax+r13]
0000000000005912         mov        rax, qword [rsp+0x688+var_678]
0000000000005917         mov        r14, qword [rax+r13]
000000000000591b         lea        rax, qword [abformat]                       ; abformat
0000000000005922         lea        r15, qword [rax+r10]
0000000000005926         mov        rbp, r14
0000000000005929         mov        r13, r14
000000000000592c         mov        r14, qword [rsp+0x688+var_670]
0000000000005931         sub        rbp, r12
0000000000005934         jmp        loc_599c
0000000000005936         align      64

                     loc_5940:
0000000000005940         cmp        rbp, 0x80                                   ; CODE XREF=abformat_init+591
0000000000005947         jg         loc_58b8

000000000000594d         lea        rax, qword [r13+2]
0000000000005951         sub        rsp, 0x8
0000000000005955         lea        r8, qword [aSss]                            ; "%.*s%s%s"
000000000000595c         mov        r9d, ebp
000000000000595f         mov        rcx, 0xffffffffffffffff
0000000000005966         mov        edx, 0x1
000000000000596b         push       rax
000000000000596c         push       rbx
000000000000596d         mov        esi, 0x80
0000000000005972         push       r12
0000000000005974         mov        rdi, r15
0000000000005977         xor        eax, eax
0000000000005979         call       j___snprintf_chk                            ; __snprintf_chk
000000000000597e         add        rsp, 0x20

                     loc_5982:
0000000000005982         cmp        eax, 0x7f                                   ; CODE XREF=abformat_init+618
0000000000005985         ja         loc_58b8

000000000000598b         sub        rbx, 0xffffffffffffff80
000000000000598f         sub        r15, 0xffffffffffffff80
0000000000005993         cmp        rbx, r14
0000000000005996         je         loc_589d

                     loc_599c:
000000000000599c         test       r13, r13                                    ; CODE XREF=abformat_init+484
000000000000599f         jne        loc_5940

00000000000059a1         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_snprintf, 0x19f8c
00000000000059a8         mov        rcx, r12
00000000000059ab         mov        esi, 0x80                                   ; argument "__maxlen" for method j_snprintf
00000000000059b0         mov        rdi, r15                                    ; argument "__s" for method j_snprintf
00000000000059b3         xor        eax, eax
00000000000059b5         call       j_snprintf                                  ; snprintf
00000000000059ba         jmp        loc_5982

                     loc_59bc:
00000000000059bc         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=abformat_init+377
                        ; endp
00000000000059c1         align      16                                          ; End of unwind block (FDE at 0x1b7a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     queue_directory:
00000000000059d0         push       r13                                         ; Begin of unwind block (FDE at 0x1b808), CODE XREF=main+4112, extract_dirs_from_files+43, extract_dirs_from_files+262, extract_dirs_from_files+330
00000000000059d2         push       r12
00000000000059d4         mov        r12, rsi
00000000000059d7         push       rbp
00000000000059d8         push       rbx
00000000000059d9         mov        rbp, rdi
00000000000059dc         mov        edi, 0x20
00000000000059e1         mov        r13d, edx
00000000000059e4         sub        rsp, 0x8
00000000000059e8         call       xmalloc                                     ; xmalloc
00000000000059ed         mov        rbx, rax
00000000000059f0         xor        eax, eax
00000000000059f2         test       r12, r12
00000000000059f5         je         loc_59ff

00000000000059f7         mov        rdi, r12
00000000000059fa         call       xstrdup                                     ; xstrdup

                     loc_59ff:
00000000000059ff         mov        qword [rbx+8], rax                          ; CODE XREF=queue_directory+37
0000000000005a03         xor        eax, eax
0000000000005a05         test       rbp, rbp
0000000000005a08         je         loc_5a12

0000000000005a0a         mov        rdi, rbp
0000000000005a0d         call       xstrdup                                     ; xstrdup

                     loc_5a12:
0000000000005a12         mov        qword [rbx], rax                            ; CODE XREF=queue_directory+56
0000000000005a15         mov        rax, qword [pending_dirs]                   ; pending_dirs
0000000000005a1c         mov        byte [rbx+0x10], r13b
0000000000005a20         mov        qword [pending_dirs], rbx                   ; pending_dirs
0000000000005a27         mov        qword [rbx+0x18], rax
0000000000005a2b         add        rsp, 0x8
0000000000005a2f         pop        rbx
0000000000005a30         pop        rbp
0000000000005a31         pop        r12
0000000000005a33         pop        r13
0000000000005a35         ret
                        ; endp
0000000000005a36         align      64                                          ; End of unwind block (FDE at 0x1b808)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     strcmp_size:
0000000000005a40         mov        rax, qword [rsi+0x48]                       ; Begin of unwind block (FDE at 0x1b840)
0000000000005a44         cmp        qword [rdi+0x48], rax
0000000000005a48         jg         loc_5a70

0000000000005a4a         jl         loc_5a60

0000000000005a4c         mov        rsi, qword [rsi]                            ; argument "__s2" for method j_strcmp
0000000000005a4f         mov        rdi, qword [rdi]                            ; argument "__s1" for method j_strcmp
0000000000005a52         jmp        j_strcmp                                    ; strcmp
                        ; endp
0000000000005a57         align      32

                     loc_5a60:
0000000000005a60         mov        eax, 0x1                                    ; CODE XREF=strcmp_size+10
0000000000005a65         ret
                        ; endp
0000000000005a66         align      16

                     loc_5a70:
0000000000005a70         mov        eax, 0xffffffff                             ; CODE XREF=strcmp_size+8
0000000000005a75         ret
                        ; endp
0000000000005a76         align      128                                         ; End of unwind block (FDE at 0x1b840)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rev_strcmp_size:
0000000000005a80         mov        rdx, qword [rdi+0x48]                       ; Begin of unwind block (FDE at 0x1b854)
0000000000005a84         cmp        qword [rsi+0x48], rdx
0000000000005a88         mov        rax, rsi
0000000000005a8b         jg         loc_5ab0

0000000000005a8d         jl         loc_5aa0

0000000000005a8f         mov        rsi, qword [rdi]                            ; argument "__s2" for method j_strcmp
0000000000005a92         mov        rdi, qword [rax]                            ; argument "__s1" for method j_strcmp
0000000000005a95         jmp        j_strcmp                                    ; strcmp
                        ; endp
0000000000005a9a         align      32

                     loc_5aa0:
0000000000005aa0         mov        eax, 0x1                                    ; CODE XREF=rev_strcmp_size+13
0000000000005aa5         ret
                        ; endp
0000000000005aa6         align      16

                     loc_5ab0:
0000000000005ab0         mov        eax, 0xffffffff                             ; CODE XREF=rev_strcmp_size+11
0000000000005ab5         ret
                        ; endp
0000000000005ab6         align      64                                          ; End of unwind block (FDE at 0x1b854)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     strcmp_name:
0000000000005ac0         mov        rsi, qword [rsi]                            ; Begin of unwind block (FDE at 0x1b868), argument "__s2" for method j_strcmp
0000000000005ac3         mov        rdi, qword [rdi]                            ; argument "__s1" for method j_strcmp
0000000000005ac6         jmp        j_strcmp                                    ; strcmp
                        ; endp
0000000000005acb         align      16                                          ; End of unwind block (FDE at 0x1b868)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rev_strcmp_name:
0000000000005ad0         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x1b87c)
0000000000005ad3         mov        rsi, qword [rdi]                            ; argument "__s2" for method j_strcmp
0000000000005ad6         mov        rdi, qword [rax]                            ; argument "__s1" for method j_strcmp
0000000000005ad9         jmp        j_strcmp                                    ; strcmp
                        ; endp
0000000000005ade         align      32                                          ; End of unwind block (FDE at 0x1b87c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_22: int8_t, -34


                     needs_quoting:
0000000000005ae0         push       rbp                                         ; Begin of unwind block (FDE at 0x1b890), CODE XREF=gobble_file.constprop.52+2039, gobble_file.constprop.52+3332
0000000000005ae1         push       rbx
0000000000005ae2         mov        rbx, rdi
0000000000005ae5         mov        rdx, rbx
0000000000005ae8         mov        rcx, 0xffffffffffffffff
0000000000005aef         mov        esi, 0x2
0000000000005af4         sub        rsp, 0x18
0000000000005af8         mov        r8, qword [filename_quoting_options]        ; filename_quoting_options
0000000000005aff         lea        rdi, qword [rsp+0x28+var_22]
0000000000005b04         mov        rax, qword [fs:0x28]
0000000000005b0d         mov        qword [rsp+0x28+var_20], rax
0000000000005b12         xor        eax, eax
0000000000005b14         call       quotearg_buffer                             ; quotearg_buffer
0000000000005b19         movzx      edx, byte [rsp+0x28+var_22]
0000000000005b1e         cmp        byte [rbx], dl
0000000000005b20         je         loc_5b40

0000000000005b22         mov        eax, 0x1

                     loc_5b27:
0000000000005b27         mov        rcx, qword [rsp+0x28+var_20]                ; CODE XREF=needs_quoting+113
0000000000005b2c         xor        rcx, qword [fs:0x28]
0000000000005b35         jne        loc_5b53

0000000000005b37         add        rsp, 0x18
0000000000005b3b         pop        rbx
0000000000005b3c         pop        rbp
0000000000005b3d         ret
                        ; endp
0000000000005b3e         align      64

                     loc_5b40:
0000000000005b40         mov        rbp, rax                                    ; CODE XREF=needs_quoting+64
0000000000005b43         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
0000000000005b46         call       j_strlen                                    ; strlen
0000000000005b4b         cmp        rax, rbp
0000000000005b4e         setne      al
0000000000005b51         jmp        loc_5b27

                     loc_5b53:
0000000000005b53         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=needs_quoting+85
                        ; endp
0000000000005b58         align      32                                          ; End of unwind block (FDE at 0x1b890)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     file_escape:
0000000000005b60         push       r14                                         ; Begin of unwind block (FDE at 0x1b8bc), CODE XREF=quote_name+221, quote_name+237
0000000000005b62         push       r13
0000000000005b64         push       r12
0000000000005b66         push       rbp
0000000000005b67         mov        r12d, esi
0000000000005b6a         push       rbx
0000000000005b6b         mov        rbx, rdi
0000000000005b6e         call       j_strlen                                    ; strlen
0000000000005b73         lea        rcx, qword [rax+1]
0000000000005b77         mov        eax, 0x3
0000000000005b7c         mul        rcx
0000000000005b7f         jo         loc_5c22

0000000000005b85         xor        esi, esi

                     loc_5b87:
0000000000005b87         test       rax, rax                                    ; CODE XREF=file_escape+199
0000000000005b8a         js         loc_5c2c

0000000000005b90         test       rsi, rsi
0000000000005b93         jne        loc_5c2c

0000000000005b99         lea        rdi, qword [rcx+rcx*2]                      ; argument #1 for method xmalloc
0000000000005b9d         lea        r14, qword [RFC3986]                        ; RFC3986
0000000000005ba4         call       xmalloc                                     ; xmalloc
0000000000005ba9         mov        r13, rax
0000000000005bac         mov        rbp, rax

                     loc_5baf:
0000000000005baf         movzx      eax, byte [rbx]                             ; CODE XREF=file_escape+177, file_escape+192
0000000000005bb2         test       al, al
0000000000005bb4         je         loc_5bde

                     loc_5bb6:
0000000000005bb6         add        rbx, 0x1                                    ; CODE XREF=file_escape+124
0000000000005bba         cmp        al, 0x2f
0000000000005bbc         jne        loc_5bc3

0000000000005bbe         test       r12b, r12b
0000000000005bc1         jne        loc_5c18

                     loc_5bc3:
0000000000005bc3         movzx      edx, al                                     ; CODE XREF=file_escape+92
0000000000005bc6         cmp        byte [r14+rdx], 0x0
0000000000005bcb         mov        r8, rdx
0000000000005bce         je         loc_5bf0

0000000000005bd0         mov        byte [rbp], al
0000000000005bd3         movzx      eax, byte [rbx]
0000000000005bd6         add        rbp, 0x1
0000000000005bda         test       al, al
0000000000005bdc         jne        loc_5bb6

                     loc_5bde:
0000000000005bde         mov        byte [rbp], 0x0                             ; CODE XREF=file_escape+84
0000000000005be2         mov        rax, r13
0000000000005be5         pop        rbx
0000000000005be6         pop        rbp
0000000000005be7         pop        r12
0000000000005be9         pop        r13
0000000000005beb         pop        r14
0000000000005bed         ret
                        ; endp
0000000000005bee         align      16

                     loc_5bf0:
0000000000005bf0         lea        rcx, qword [a02x]                           ; "%%%02x", CODE XREF=file_escape+110
0000000000005bf7         mov        rdi, rbp
0000000000005bfa         mov        rdx, 0xffffffffffffffff
0000000000005c01         mov        esi, 0x1
0000000000005c06         xor        eax, eax
0000000000005c08         add        rbp, 0x3
0000000000005c0c         call       j___sprintf_chk                             ; __sprintf_chk
0000000000005c11         jmp        loc_5baf
0000000000005c13         align      8

                     loc_5c18:
0000000000005c18         mov        byte [rbp], 0x2f                            ; CODE XREF=file_escape+97
0000000000005c1c         add        rbp, 0x1
0000000000005c20         jmp        loc_5baf

                     loc_5c22:
0000000000005c22         mov        esi, 0x1                                    ; CODE XREF=file_escape+31
0000000000005c27         jmp        loc_5b87

                     loc_5c2c:
0000000000005c2c         call       xalloc_die                                  ; xalloc_die, CODE XREF=file_escape+42, file_escape+51
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5c31:
0000000000005c31         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x1b8bc)
0000000000005c36         nop        word [cs:rax+rax]
                     sort_files:
0000000000005c40         push       rbx                                         ; Begin of unwind block (FDE at 0x1b8fc), CODE XREF=main+4467, print_dir+918, print_dir+1383
0000000000005c41         mov        rbx, qword [cwd_n_used]                     ; cwd_n_used
0000000000005c48         mov        rax, rbx
0000000000005c4b         shr        rax, 0x1
0000000000005c4e         add        rax, rbx
0000000000005c51         cmp        rax, qword [sorted_file_alloc]              ; sorted_file_alloc
0000000000005c58         ja         loc_5d50

                     loc_5c5e:
0000000000005c5e         test       rbx, rbx                                    ; CODE XREF=sort_files+354
0000000000005c61         je         loc_5c92

0000000000005c63         lea        rcx, qword [rbx+rbx*4]
0000000000005c67         mov        rax, qword [cwd_file]                       ; cwd_file
0000000000005c6e         mov        rdx, qword [sorted_file]                    ; sorted_file
0000000000005c75         lea        rcx, qword [rcx+rcx*4]
0000000000005c79         lea        rcx, qword [rax+rcx*8]
0000000000005c7d         nop        dword [rax]

                     loc_5c80:
0000000000005c80         mov        qword [rdx], rax                            ; CODE XREF=sort_files+80
0000000000005c83         add        rax, 0xc8
0000000000005c89         add        rdx, 0x8
0000000000005c8d         cmp        rcx, rax
0000000000005c90         jne        loc_5c80

                     loc_5c92:
0000000000005c92         cmp        dword [sort_type], 0xffffffff               ; sort_type, CODE XREF=sort_files+33
0000000000005c99         je         loc_5d4c

0000000000005c9f         lea        rdi, qword [failed_strcoll]                 ; argument "__env" for method j__setjmp, failed_strcoll
0000000000005ca6         call       j__setjmp                                   ; _setjmp
0000000000005cab         test       eax, eax
0000000000005cad         mov        ecx, dword [sort_type]                      ; sort_type
0000000000005cb3         je         loc_5d00

0000000000005cb5         cmp        ecx, 0x3
0000000000005cb8         je         loc_5da7

0000000000005cbe         mov        rsi, qword [cwd_n_used]                     ; cwd_n_used
0000000000005cc5         mov        rdi, qword [sorted_file]                    ; sorted_file
0000000000005ccc         test       rsi, rsi
0000000000005ccf         je         loc_5cf3

0000000000005cd1         mov        rdx, qword [cwd_file]                       ; cwd_file
0000000000005cd8         lea        r8, qword [rdi+rsi*8]
0000000000005cdc         mov        rax, rdi
0000000000005cdf         nop

                     loc_5ce0:
0000000000005ce0         mov        qword [rax], rdx                            ; CODE XREF=sort_files+177
0000000000005ce3         add        rax, 0x8
0000000000005ce7         add        rdx, 0xc8
0000000000005cee         cmp        rax, r8
0000000000005cf1         jne        loc_5ce0

                     loc_5cf3:
0000000000005cf3         mov        eax, 0x1                                    ; CODE XREF=sort_files+143
0000000000005cf8         jmp        loc_5d0e
0000000000005cfa         align      256

                     loc_5d00:
0000000000005d00         mov        rsi, qword [cwd_n_used]                     ; cwd_n_used, CODE XREF=sort_files+115
0000000000005d07         mov        rdi, qword [sorted_file]                    ; sorted_file

                     loc_5d0e:
0000000000005d0e         cmp        ecx, 0x4                                    ; CODE XREF=sort_files+184
0000000000005d11         mov        edx, 0x0
0000000000005d16         cmove      edx, dword [time_type]                      ; time_type
0000000000005d1d         cdqe
0000000000005d1f         movzx      r8d, byte [directories_first]               ; directories_first
0000000000005d27         add        edx, ecx
0000000000005d29         lea        rdx, qword [rax+rdx*2]
0000000000005d2d         movzx      eax, byte [sort_reverse]                    ; sort_reverse
0000000000005d34         lea        rax, qword [rax+rdx*2]
0000000000005d38         lea        rdx, qword [r8+rax*2]
0000000000005d3c         lea        rax, qword [sort_functions]                 ; sort_functions
0000000000005d43         mov        rdx, qword [rax+rdx*8]                      ; argument #3 for method mpsort
0000000000005d47         call       mpsort                                      ; mpsort

                     loc_5d4c:
0000000000005d4c         pop        rbx                                         ; CODE XREF=sort_files+89
0000000000005d4d         ret
                        ; endp
0000000000005d4e         align      16

                     loc_5d50:
0000000000005d50         mov        rdi, qword [sorted_file]                    ; sorted_file, CODE XREF=sort_files+24
0000000000005d57         call       sub_3880                                    ; sub_3880
0000000000005d5c         mov        edx, 0x18
0000000000005d61         xor        ecx, ecx
0000000000005d63         mov        rax, rdx
0000000000005d66         mul        rbx
0000000000005d69         jo         loc_5dc6

                     loc_5d6b:
0000000000005d6b         test       rax, rax                                    ; CODE XREF=sort_files+395
0000000000005d6e         mov        eax, 0x1
0000000000005d73         cmovs      rcx, rax
0000000000005d77         test       rcx, rcx
0000000000005d7a         jne        loc_5dcd

0000000000005d7c         lea        rdi, qword [rbx+rbx*2]
0000000000005d80         shl        rdi, 0x3                                    ; argument #1 for method xmalloc
0000000000005d84         call       xmalloc                                     ; xmalloc
0000000000005d89         mov        rbx, qword [cwd_n_used]                     ; cwd_n_used
0000000000005d90         mov        qword [sorted_file], rax                    ; sorted_file
0000000000005d97         lea        rax, qword [rbx+rbx*2]
0000000000005d9b         mov        qword [sorted_file_alloc], rax              ; sorted_file_alloc
0000000000005da2         jmp        loc_5c5e

                     loc_5da7:
0000000000005da7         lea        rcx, qword [__PRETTY_FUNCTION__.10745]      ; argument "__function" for method j___assert_fail, "sort_files", CODE XREF=sort_files+120
0000000000005dae         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/ls.c"
0000000000005db5         lea        rdi, qword [aSorttypeSortve]                ; argument "__assertion" for method j___assert_fail, "sort_type != sort_version"
0000000000005dbc         mov        edx, aRrchr                                 ; argument "__line" for method j___assert_fail, "rrchr"
0000000000005dc1         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_5dc6:
0000000000005dc6         mov        ecx, 0x1                                    ; CODE XREF=sort_files+297
0000000000005dcb         jmp        loc_5d6b

                     loc_5dcd:
0000000000005dcd         call       xalloc_die                                  ; xalloc_die, CODE XREF=sort_files+314
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5dd2:
0000000000005dd2         nop        dword [rax]                                 ; End of unwind block (FDE at 0x1b8fc)
0000000000005dd6         nop        word [cs:rax+rax]
                     xstrcoll:
0000000000005de0         push       rbp                                         ; Begin of unwind block (FDE at 0x1b91c), CODE XREF=xstrcoll_size+30, rev_xstrcoll_size+38, xstrcoll_name+6, rev_xstrcoll_name+9, xstrcoll_df_size+153, rev_xstrcoll_df_size+153, xstrcoll_df_name+136, rev_xstrcoll_df_name+136, xstrcoll_ctime+39, xstrcoll_atime+27, xstrcoll_mtime+27
0000000000005de1         push       rbx
0000000000005de2         mov        rbp, rsi
0000000000005de5         mov        rbx, rdi
0000000000005de8         sub        rsp, 0x8
0000000000005dec         call       j___errno_location                          ; __errno_location
0000000000005df1         mov        dword [rax], 0x0
0000000000005df7         add        rsp, 0x8
0000000000005dfb         mov        rsi, rbp                                    ; argument "__s2" for method j_strcoll
0000000000005dfe         mov        rdi, rbx                                    ; argument "__s1" for method j_strcoll
0000000000005e01         pop        rbx
0000000000005e02         pop        rbp
0000000000005e03         jmp        j_strcoll                                   ; strcoll
                        ; endp
0000000000005e08         align      16                                          ; End of unwind block (FDE at 0x1b91c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrcoll_size:
0000000000005e10         mov        rax, qword [rsi+0x48]                       ; Begin of unwind block (FDE at 0x1b944)
0000000000005e14         cmp        qword [rdi+0x48], rax
0000000000005e18         jg         loc_5e30

0000000000005e1a         mov        eax, 0x1
0000000000005e1f         jge        loc_5e28

0000000000005e21         ret
                        ; endp
0000000000005e23         align      8

                     loc_5e28:
0000000000005e28         mov        rsi, qword [rsi]                            ; CODE XREF=xstrcoll_size+15
0000000000005e2b         mov        rdi, qword [rdi]
0000000000005e2e         jmp        xstrcoll                                    ; xstrcoll
                        ; endp

                     loc_5e30:
0000000000005e30         mov        eax, 0xffffffff                             ; CODE XREF=xstrcoll_size+8
0000000000005e35         ret
                        ; endp
0000000000005e36         align      64                                          ; End of unwind block (FDE at 0x1b944)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rev_xstrcoll_size:
0000000000005e40         mov        rax, qword [rdi+0x48]                       ; Begin of unwind block (FDE at 0x1b958)
0000000000005e44         cmp        qword [rsi+0x48], rax
0000000000005e48         mov        rdx, rsi
0000000000005e4b         jg         loc_5e70

0000000000005e4d         mov        eax, 0x1
0000000000005e52         jge        loc_5e60

0000000000005e54         ret
                        ; endp
0000000000005e56         align      32

                     loc_5e60:
0000000000005e60         mov        rsi, qword [rdi]                            ; CODE XREF=rev_xstrcoll_size+18
0000000000005e63         mov        rdi, qword [rdx]
0000000000005e66         jmp        xstrcoll                                    ; xstrcoll
                        ; endp
0000000000005e6b         align      16

                     loc_5e70:
0000000000005e70         mov        eax, 0xffffffff                             ; CODE XREF=rev_xstrcoll_size+11
0000000000005e75         ret
                        ; endp
0000000000005e76         align      128                                         ; End of unwind block (FDE at 0x1b958)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrcoll_name:
0000000000005e80         mov        rsi, qword [rsi]                            ; Begin of unwind block (FDE at 0x1b96c)
0000000000005e83         mov        rdi, qword [rdi]
0000000000005e86         jmp        xstrcoll                                    ; xstrcoll
                        ; endp
0000000000005e8b         align      16                                          ; End of unwind block (FDE at 0x1b96c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rev_xstrcoll_name:
0000000000005e90         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x1b980)
0000000000005e93         mov        rsi, qword [rdi]
0000000000005e96         mov        rdi, qword [rax]
0000000000005e99         jmp        xstrcoll                                    ; xstrcoll
                        ; endp
0000000000005e9e         align      32                                          ; End of unwind block (FDE at 0x1b980)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104


                     rev_xstrcoll_version:
0000000000005ea0         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x1b994)
0000000000005ea3         mov        rsi, qword [rdi]
0000000000005ea6         mov        rdi, qword [rax]
0000000000005ea9         jmp        filevercmp                                  ; filevercmp
0000000000005eae         align      16                                          ; End of unwind block (FDE at 0x1b994)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrcoll_version:
0000000000005eb0         mov        rsi, qword [rsi]                            ; Begin of unwind block (FDE at 0x1b9a8)
0000000000005eb3         mov        rdi, qword [rdi]
0000000000005eb6         jmp        filevercmp                                  ; filevercmp
                        ; endp
0000000000005ebb         align      64                                          ; End of unwind block (FDE at 0x1b9a8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     extract_dirs_from_files:
0000000000005ec0         push       r15                                         ; Begin of unwind block (FDE at 0x1b9bc), CODE XREF=main+5327, print_dir+1453
0000000000005ec2         push       r14
0000000000005ec4         mov        r14, rdi
0000000000005ec7         push       r13
0000000000005ec9         push       r12
0000000000005ecb         movzx      r13d, sil
0000000000005ecf         push       rbp
0000000000005ed0         push       rbx
0000000000005ed1         sub        rsp, 0x8
0000000000005ed5         test       rdi, rdi
0000000000005ed8         je         loc_5ef0

0000000000005eda         cmp        qword [active_dir_set], 0x0                 ; active_dir_set
0000000000005ee2         je         loc_5ef0

0000000000005ee4         mov        rsi, rdi
0000000000005ee7         xor        edx, edx
0000000000005ee9         xor        edi, edi
0000000000005eeb         call       queue_directory                             ; queue_directory

                     loc_5ef0:
0000000000005ef0         mov        rbx, qword [cwd_n_used]                     ; cwd_n_used, CODE XREF=extract_dirs_from_files+24, extract_dirs_from_files+34
0000000000005ef7         lea        r12, qword [0xfffffffffffffff8+rbx*8]
0000000000005eff         sub        rbx, 0x1
0000000000005f03         cmp        rbx, 0xffffffffffffffff
0000000000005f07         je         loc_5f39

0000000000005f09         nop        dword [rax]

                     loc_5f10:
0000000000005f10         mov        rax, qword [sorted_file]                    ; sorted_file, CODE XREF=extract_dirs_from_files+119
0000000000005f17         mov        rbp, qword [rax+r12]
0000000000005f1b         mov        eax, dword [rbp+0xa8]
0000000000005f21         cmp        eax, 0x3
0000000000005f24         je         loc_5f90

0000000000005f26         cmp        eax, 0x9
0000000000005f29         je         loc_5f90

                     loc_5f2b:
0000000000005f2b         sub        rbx, 0x1                                    ; CODE XREF=extract_dirs_from_files+282, extract_dirs_from_files+315, extract_dirs_from_files+360, extract_dirs_from_files+368
0000000000005f2f         sub        r12, 0x8
0000000000005f33         cmp        rbx, 0xffffffffffffffff
0000000000005f37         jne        loc_5f10

                     loc_5f39:
0000000000005f39         mov        rdx, qword [cwd_n_used]                     ; cwd_n_used, CODE XREF=extract_dirs_from_files+71
0000000000005f40         test       rdx, rdx
0000000000005f43         je         loc_5f78

0000000000005f45         mov        rsi, qword [sorted_file]                    ; sorted_file
0000000000005f4c         lea        rdi, qword [rsi+rdx*8]
0000000000005f50         mov        rax, rsi
0000000000005f53         xor        edx, edx
0000000000005f55         nop        dword [rax]

                     loc_5f58:
0000000000005f58         mov        rcx, qword [rax]                            ; CODE XREF=extract_dirs_from_files+182
0000000000005f5b         cmp        dword [rcx+0xa8], 0x9
0000000000005f62         mov        qword [rsi+rdx*8], rcx
0000000000005f66         setne      cl
0000000000005f69         add        rax, 0x8
0000000000005f6d         movzx      ecx, cl
0000000000005f70         add        rdx, rcx
0000000000005f73         cmp        rdi, rax
0000000000005f76         jne        loc_5f58

                     loc_5f78:
0000000000005f78         mov        qword [cwd_n_used], rdx                     ; cwd_n_used, CODE XREF=extract_dirs_from_files+131
0000000000005f7f         add        rsp, 0x8
0000000000005f83         pop        rbx
0000000000005f84         pop        rbp
0000000000005f85         pop        r12
0000000000005f87         pop        r13
0000000000005f89         pop        r14
0000000000005f8b         pop        r15
0000000000005f8d         ret
                        ; endp
0000000000005f8e         align      16

                     loc_5f90:
0000000000005f90         test       r14, r14                                    ; CODE XREF=extract_dirs_from_files+100, extract_dirs_from_files+105
0000000000005f93         mov        r15, qword [rbp]
0000000000005f97         je         loc_6000

0000000000005f99         mov        rdi, r15
0000000000005f9c         call       last_component                              ; last_component
0000000000005fa1         cmp        byte [rax], 0x2e
0000000000005fa4         je         loc_6018

                     loc_5fa6:
0000000000005fa6         cmp        byte [r15], 0x2f                            ; CODE XREF=extract_dirs_from_files+374
0000000000005faa         je         loc_6000

0000000000005fac         mov        rsi, r15
0000000000005faf         xor        edx, edx
0000000000005fb1         mov        rdi, r14
0000000000005fb4         call       file_name_concat                            ; file_name_concat
0000000000005fb9         mov        rsi, qword [rbp+8]
0000000000005fbd         mov        r15, rax
0000000000005fc0         mov        rdi, rax
0000000000005fc3         mov        edx, r13d
0000000000005fc6         call       queue_directory                             ; queue_directory
0000000000005fcb         mov        rdi, r15
0000000000005fce         call       sub_3880                                    ; sub_3880

                     loc_5fd3:
0000000000005fd3         cmp        dword [rbp+0xa8], 0x9                       ; CODE XREF=extract_dirs_from_files+335
0000000000005fda         jne        loc_5f2b

0000000000005fe0         mov        rdi, qword [rbp]
0000000000005fe4         call       sub_3880                                    ; sub_3880
0000000000005fe9         mov        rdi, qword [rbp+8]
0000000000005fed         call       sub_3880                                    ; sub_3880
0000000000005ff2         mov        rdi, qword [rbp+0x10]
0000000000005ff6         call       sub_3880                                    ; sub_3880
0000000000005ffb         jmp        loc_5f2b

                     loc_6000:
0000000000006000         mov        rsi, qword [rbp+8]                          ; CODE XREF=extract_dirs_from_files+215, extract_dirs_from_files+234, DATA XREF=print_name_with_quoting+571, strmode+34
0000000000006004         mov        edx, r13d
0000000000006007         mov        rdi, r15
000000000000600a         call       queue_directory                             ; queue_directory
000000000000600f         jmp        loc_5fd3
0000000000006011         align      8

                     loc_6018:
0000000000006018         xor        edx, edx                                    ; CODE XREF=extract_dirs_from_files+228
000000000000601a         cmp        byte [rax+1], 0x2e
000000000000601e         sete       dl
0000000000006021         movzx      eax, byte [rax+rdx+1]
0000000000006026         test       al, al
0000000000006028         je         loc_5f2b

000000000000602e         cmp        al, 0x2f
0000000000006030         je         loc_5f2b

0000000000006036         jmp        loc_5fa6
000000000000603b         align      64                                          ; End of unwind block (FDE at 0x1b9bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     indent:
0000000000006040         cmp        rdi, rsi                                    ; Begin of unwind block (FDE at 0x1ba08), CODE XREF=print_current_files+290, sub_9150+150
0000000000006043         jae        loc_60e8

0000000000006049         push       r12
000000000000604b         mov        r12, rsi
000000000000604e         push       rbp
000000000000604f         push       rbx
0000000000006050         mov        rbx, rdi
0000000000006053         jmp        loc_6096
0000000000006055         align      8

                     loc_6058:
0000000000006058         xor        edx, edx                                    ; CODE XREF=indent+115
000000000000605a         mov        rax, r12
000000000000605d         div        rcx
0000000000006060         xor        edx, edx
0000000000006062         mov        r9, rax
0000000000006065         mov        rax, rbp
0000000000006068         div        rcx
000000000000606b         cmp        r9, rax
000000000000606e         jbe        loc_60b5

0000000000006070         cmp        rsi, r8
0000000000006073         jae        loc_60f0

0000000000006075         lea        rax, qword [rsi+1]
0000000000006079         mov        qword [rdi+0x28], rax
000000000000607d         mov        byte [rsi], 0x9

                     loc_6080:
0000000000006080         mov        rax, rbx                                    ; CODE XREF=indent+193
0000000000006083         xor        edx, edx
0000000000006085         div        rcx
0000000000006088         add        rcx, rbx
000000000000608b         mov        rbx, rcx
000000000000608e         sub        rbx, rdx
0000000000006091         cmp        rbx, r12
0000000000006094         jae        loc_60cd

                     loc_6096:
0000000000006096         mov        rcx, qword [tabsize]                        ; tabsize, CODE XREF=indent+19, indent+139
000000000000609d         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000060a4         lea        rbp, qword [rbx+1]
00000000000060a8         test       rcx, rcx
00000000000060ab         mov        rsi, qword [rdi+0x28]
00000000000060af         mov        r8, qword [rdi+0x30]
00000000000060b3         jne        loc_6058

                     loc_60b5:
00000000000060b5         cmp        rsi, r8                                     ; CODE XREF=indent+46
00000000000060b8         jae        loc_60d8

00000000000060ba         lea        rax, qword [rsi+1]
00000000000060be         mov        qword [rdi+0x28], rax
00000000000060c2         mov        byte [rsi], 0x20

                     loc_60c5:
00000000000060c5         mov        rbx, rbp                                    ; CODE XREF=indent+162
00000000000060c8         cmp        rbx, r12
00000000000060cb         jb         loc_6096

                     loc_60cd:
00000000000060cd         pop        rbx                                         ; CODE XREF=indent+84
00000000000060ce         pop        rbp
00000000000060cf         pop        r12
00000000000060d1         ret
                        ; endp
00000000000060d2         align      8

                     loc_60d8:
00000000000060d8         mov        esi, 0x20                                   ; argument #2 for method j___overflow, CODE XREF=indent+120
00000000000060dd         call       j___overflow                                ; __overflow
00000000000060e2         jmp        loc_60c5
00000000000060e4         align      8

                     loc_60e8:
00000000000060e8         ret                                                    ; CODE XREF=indent+3
                        ; endp
00000000000060ea         align      16

                     loc_60f0:
00000000000060f0         mov        esi, 0x9                                    ; argument #2 for method j___overflow, CODE XREF=indent+51
00000000000060f5         call       j___overflow                                ; __overflow
00000000000060fa         mov        rcx, qword [tabsize]                        ; tabsize
0000000000006101         jmp        loc_6080
0000000000006106         align      16                                          ; End of unwind block (FDE at 0x1ba08)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dired_dump_obstack:
0000000000006110         push       r12                                         ; Begin of unwind block (FDE at 0x1ba44), CODE XREF=main+4584, main+4603
0000000000006112         push       rbp
0000000000006113         push       rbx
0000000000006114         mov        rax, qword [rsi+0x18]
0000000000006118         mov        rbx, qword [rsi+0x10]
000000000000611c         mov        rbp, rax
000000000000611f         sub        rbp, rbx
0000000000006122         shr        rbp, 0x3
0000000000006126         test       rbp, rbp
0000000000006129         je         loc_61b7

000000000000612f         cmp        rax, rbx
0000000000006132         je         loc_61c2

                     loc_6138:
0000000000006138         mov        rdx, qword [rsi+0x30]                       ; CODE XREF=dired_dump_obstack+182
000000000000613c         mov        rcx, qword [rsi+0x20]
0000000000006140         add        rax, rdx
0000000000006143         not        rdx
0000000000006146         mov        r8, rcx
0000000000006149         and        rax, rdx
000000000000614c         mov        rdx, qword [rsi+8]
0000000000006150         mov        qword [rsi+0x18], rax
0000000000006154         sub        r8, rdx
0000000000006157         sub        rax, rdx
000000000000615a         cmp        rax, r8
000000000000615d         ja         loc_61bc

                     loc_615f:
000000000000615f         mov        rax, qword [rsi+0x18]                       ; CODE XREF=dired_dump_obstack+176
0000000000006163         lea        r12, qword [rbx+rbp*8]
0000000000006167         lea        rbp, qword [aSorttypeSortve+26]             ; 0x1788c
000000000000616e         mov        qword [rsi+0x10], rax
0000000000006172         mov        rsi, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fputs_unlocked, stdout@@GLIBC_2.2.5
0000000000006179         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000617e         nop

                     loc_6180:
0000000000006180         mov        rdx, qword [rbx]                            ; CODE XREF=dired_dump_obstack+137
0000000000006183         xor        eax, eax
0000000000006185         mov        rsi, rbp
0000000000006188         mov        edi, 0x1
000000000000618d         add        rbx, 0x8
0000000000006191         call       j___printf_chk                              ; __printf_chk
0000000000006196         cmp        rbx, r12
0000000000006199         jne        loc_6180

000000000000619b         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000061a2         mov        rax, qword [rdi+0x28]
00000000000061a6         cmp        rax, qword [rdi+0x30]
00000000000061aa         jae        loc_61cb

00000000000061ac         lea        rdx, qword [rax+1]
00000000000061b0         mov        qword [rdi+0x28], rdx
00000000000061b4         mov        byte [rax], 0xa

                     loc_61b7:
00000000000061b7         pop        rbx                                         ; CODE XREF=dired_dump_obstack+25
00000000000061b8         pop        rbp
00000000000061b9         pop        r12
00000000000061bb         ret
                        ; endp

                     loc_61bc:
00000000000061bc         mov        qword [rsi+0x18], rcx                       ; CODE XREF=dired_dump_obstack+77
00000000000061c0         jmp        loc_615f

                     loc_61c2:
00000000000061c2         or         byte [rsi+0x50], 0x2                        ; CODE XREF=dired_dump_obstack+34
00000000000061c6         jmp        loc_6138

                     loc_61cb:
00000000000061cb         pop        rbx                                         ; CODE XREF=dired_dump_obstack+154
00000000000061cc         pop        rbp
00000000000061cd         pop        r12
00000000000061cf         mov        esi, 0xa                                    ; argument #2 for method j___overflow
00000000000061d4         jmp        j___overflow                                ; __overflow
                        ; endp
00000000000061d9         align      32                                          ; End of unwind block (FDE at 0x1ba44)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     format_user_or_group:
00000000000061e0         push       rbp                                         ; Begin of unwind block (FDE at 0x1ba7c), CODE XREF=format_user+42, print_long_format+1679, print_long_format+1792
00000000000061e1         push       rbx
00000000000061e2         mov        ebx, edx
00000000000061e4         sub        rsp, 0x8
00000000000061e8         test       rdi, rdi
00000000000061eb         je         loc_6280

00000000000061f1         xor        esi, esi
00000000000061f3         mov        rbp, rdi
00000000000061f6         call       gnu_mbswidth                                ; gnu_mbswidth
00000000000061fb         mov        rsi, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fputs_unlocked, stdout@@GLIBC_2.2.5
0000000000006202         sub        ebx, eax
0000000000006204         mov        eax, 0x0
0000000000006209         cmovs      ebx, eax
000000000000620c         mov        rdi, rbp                                    ; argument "__s" for method j_fputs_unlocked
000000000000620f         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000006214         mov        rdi, rbp                                    ; argument "__s" for method j_strlen
0000000000006217         movsxd     rbp, ebx
000000000000621a         call       j_strlen                                    ; strlen
000000000000621f         add        rbp, rax
0000000000006222         nop        word [rax+rax]

                     loc_6228:
0000000000006228         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=format_user_or_group+106
000000000000622f         mov        rdx, qword [rdi+0x28]
0000000000006233         cmp        rdx, qword [rdi+0x30]
0000000000006237         jae        loc_6270

0000000000006239         lea        rcx, qword [rdx+1]
000000000000623d         mov        qword [rdi+0x28], rcx
0000000000006241         mov        byte [rdx], 0x20

                     loc_6244:
0000000000006244         sub        ebx, 0x1                                    ; CODE XREF=format_user_or_group+154
0000000000006247         cmp        ebx, 0xffffffff
000000000000624a         jne        loc_6228

                     loc_624c:
000000000000624c         mov        rax, qword [dired_pos]                      ; dired_pos, CODE XREF=format_user_or_group+185
0000000000006253         lea        rax, qword [rbp+rax+1]
0000000000006258         mov        qword [dired_pos], rax                      ; dired_pos
000000000000625f         add        rsp, 0x8
0000000000006263         pop        rbx
0000000000006264         pop        rbp
0000000000006265         ret
                        ; endp
0000000000006266         align      16

                     loc_6270:
0000000000006270         mov        esi, 0x20                                   ; argument #2 for method j___overflow, CODE XREF=format_user_or_group+87
0000000000006275         call       j___overflow                                ; __overflow
000000000000627a         jmp        loc_6244
000000000000627c         align      128

                     loc_6280:
0000000000006280         mov        rcx, rsi                                    ; CODE XREF=format_user_or_group+11
0000000000006283         lea        rsi, qword [aLu]                            ; "%*lu "
000000000000628a         mov        edi, 0x1
000000000000628f         xor        eax, eax
0000000000006291         movsxd     rbp, ebx
0000000000006294         call       j___printf_chk                              ; __printf_chk
0000000000006299         jmp        loc_624c
000000000000629b         align      32                                          ; End of unwind block (FDE at 0x1ba7c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_C: int32_t, -12


                     format_user:
00000000000062a0         push       rbx                                         ; Begin of unwind block (FDE at 0x1baa8), CODE XREF=print_long_format+1712, print_long_format+1824
00000000000062a1         lea        rax, qword [aLu+6]                          ; 0x17897
00000000000062a8         mov        ebx, edi
00000000000062aa         sub        rsp, 0x10
00000000000062ae         test       dl, dl
00000000000062b0         je         loc_62bd

00000000000062b2         xor        eax, eax
00000000000062b4         cmp        byte [numeric_ids], 0x0                     ; numeric_ids
00000000000062bb         je         loc_62d0

                     loc_62bd:
00000000000062bd         add        rsp, 0x10                                   ; CODE XREF=format_user+16, format_user+61
00000000000062c1         mov        edx, esi
00000000000062c3         mov        rsi, rbx
00000000000062c6         pop        rbx
00000000000062c7         mov        rdi, rax
00000000000062ca         jmp        format_user_or_group                        ; format_user_or_group
                        ; endp
00000000000062cf         align      16

                     loc_62d0:
00000000000062d0         mov        dword [rsp+0x18+var_C], esi                 ; CODE XREF=format_user+27
00000000000062d4         call       getuser                                     ; getuser
00000000000062d9         mov        esi, dword [rsp+0x18+var_C]
00000000000062dd         jmp        loc_62bd
00000000000062df         align      32                                          ; End of unwind block (FDE at 0x1baa8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     stophandler:
00000000000062e0         mov        eax, dword [interrupt_signal]               ; Begin of unwind block (FDE at 0x1bacc), interrupt_signal, DATA XREF=signal_setup+415
00000000000062e6         test       eax, eax
00000000000062e8         jne        loc_62f9

00000000000062ea         mov        eax, dword [stop_signal_count]              ; stop_signal_count
00000000000062f0         add        eax, 0x1
00000000000062f3         mov        dword [stop_signal_count], eax              ; stop_signal_count

                     loc_62f9:
00000000000062f9         ret                                                    ; CODE XREF=stophandler+8
                        ; endp
00000000000062fb         align      256                                         ; End of unwind block (FDE at 0x1bacc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     file_failure:
0000000000006300         push       r12                                         ; Begin of unwind block (FDE at 0x1bae0), CODE XREF=gobble_file.constprop.52+1253, gobble_file.constprop.52+1441, gobble_file.constprop.52+3084, gobble_file.constprop.52+3133, print_dir+164, print_dir+886, print_dir+1438, print_dir+1502, print_dir+1609
0000000000006302         push       rbp
0000000000006303         mov        rbp, rsi
0000000000006306         push       rbx
0000000000006307         mov        rsi, rdx
000000000000630a         mov        ebx, edi
000000000000630c         mov        edi, 0x4
0000000000006311         call       quotearg_style                              ; quotearg_style
0000000000006316         mov        r12, rax
0000000000006319         call       j___errno_location                          ; __errno_location
000000000000631e         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000006320         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000006322         xor        eax, eax
0000000000006324         mov        rcx, r12
0000000000006327         mov        rdx, rbp                                    ; argument "__format" for method j_error
000000000000632a         call       j_error                                     ; error
000000000000632f         test       bl, bl
0000000000006331         je         loc_6348

0000000000006333         mov        dword [exit_status], 0x2                    ; exit_status

                     loc_633d:
000000000000633d         pop        rbx                                         ; CODE XREF=file_failure+80
000000000000633e         pop        rbp
000000000000633f         pop        r12
0000000000006341         ret
                        ; endp
0000000000006342         align      8

                     loc_6348:
0000000000006348         mov        eax, dword [exit_status]                    ; exit_status, CODE XREF=file_failure+49
000000000000634e         test       eax, eax
0000000000006350         jne        loc_633d

0000000000006352         pop        rbx
0000000000006353         mov        dword [exit_status], 0x1                    ; exit_status
000000000000635d         pop        rbp
000000000000635e         pop        r12
0000000000006360         ret
                        ; endp
0000000000006361         align      16                                          ; End of unwind block (FDE at 0x1bae0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrcoll_df_size:
0000000000006370         mov        edx, dword [rsi+0xa8]                       ; Begin of unwind block (FDE at 0x1bb18)
0000000000006376         mov        ecx, dword [rdi+0xa8]
000000000000637c         cmp        edx, 0x3
000000000000637f         sete       al
0000000000006382         cmp        edx, 0x9
0000000000006385         sete       dl
0000000000006388         or         eax, edx
000000000000638a         cmp        ecx, 0x3
000000000000638d         je         loc_63b8

000000000000638f         cmp        ecx, 0x9
0000000000006392         je         loc_63b8

0000000000006394         mov        edx, dword [rdi+0xac]
000000000000639a         and        edx, 0xf000
00000000000063a0         test       al, al
00000000000063a2         je         loc_63d8

                     loc_63a4:
00000000000063a4         cmp        edx, 0x4000                                 ; CODE XREF=xstrcoll_df_size+120
00000000000063aa         je         loc_63f2

00000000000063ac         mov        eax, 0x1
00000000000063b1         ret
                        ; endp
00000000000063b2         align      8

                     loc_63b8:
00000000000063b8         test       al, al                                      ; CODE XREF=xstrcoll_df_size+29, xstrcoll_df_size+34
00000000000063ba         jne        loc_63f2

00000000000063bc         mov        eax, dword [rsi+0xac]
00000000000063c2         and        eax, 0xf000
00000000000063c7         cmp        eax, 0x4000
00000000000063cc         je         loc_63f2

                     loc_63ce:
00000000000063ce         mov        eax, 0xffffffff                             ; CODE XREF=xstrcoll_df_size+128, xstrcoll_df_size+138

                     loc_63d3:
00000000000063d3         ret                                                    ; CODE XREF=xstrcoll_df_size+145
                        ; endp
00000000000063d5         align      8

                     loc_63d8:
00000000000063d8         mov        eax, dword [rsi+0xac]                       ; CODE XREF=xstrcoll_df_size+50
00000000000063de         and        eax, 0xf000
00000000000063e3         cmp        eax, 0x4000
00000000000063e8         je         loc_63a4

00000000000063ea         cmp        edx, 0x4000
00000000000063f0         je         loc_63ce

                     loc_63f2:
00000000000063f2         mov        rax, qword [rsi+0x48]                       ; CODE XREF=xstrcoll_df_size+58, xstrcoll_df_size+74, xstrcoll_df_size+92
00000000000063f6         cmp        qword [rdi+0x48], rax
00000000000063fa         jg         loc_63ce

00000000000063fc         mov        eax, 0x1
0000000000006401         jl         loc_63d3

0000000000006403         mov        rsi, qword [rsi]
0000000000006406         mov        rdi, qword [rdi]
0000000000006409         jmp        xstrcoll                                    ; xstrcoll
                        ; endp
000000000000640e         align      16                                          ; End of unwind block (FDE at 0x1bb18)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     strcmp_df_size:
0000000000006410         mov        edx, dword [rsi+0xa8]                       ; Begin of unwind block (FDE at 0x1bb2c)
0000000000006416         mov        ecx, dword [rdi+0xa8]
000000000000641c         cmp        edx, 0x3
000000000000641f         sete       al
0000000000006422         cmp        edx, 0x9
0000000000006425         sete       dl
0000000000006428         or         eax, edx
000000000000642a         cmp        ecx, 0x3
000000000000642d         je         loc_6458

000000000000642f         cmp        ecx, 0x9
0000000000006432         je         loc_6458

0000000000006434         mov        edx, dword [rdi+0xac]
000000000000643a         and        edx, 0xf000
0000000000006440         test       al, al
0000000000006442         je         loc_6478

                     loc_6444:
0000000000006444         cmp        edx, 0x4000                                 ; CODE XREF=strcmp_df_size+120
000000000000644a         je         loc_6492

                     loc_644c:
000000000000644c         mov        eax, 0x1                                    ; CODE XREF=strcmp_df_size+140
0000000000006451         ret
                        ; endp
0000000000006452         align      8

                     loc_6458:
0000000000006458         test       al, al                                      ; CODE XREF=strcmp_df_size+29, strcmp_df_size+34
000000000000645a         jne        loc_6492

000000000000645c         mov        eax, dword [rsi+0xac]
0000000000006462         and        eax, 0xf000
0000000000006467         cmp        eax, 0x4000
000000000000646c         je         loc_6492

                     loc_646e:
000000000000646e         mov        eax, 0xffffffff                             ; CODE XREF=strcmp_df_size+128, strcmp_df_size+138
0000000000006473         ret
                        ; endp
0000000000006474         align      8

                     loc_6478:
0000000000006478         mov        eax, dword [rsi+0xac]                       ; CODE XREF=strcmp_df_size+50
000000000000647e         and        eax, 0xf000
0000000000006483         cmp        eax, 0x4000
0000000000006488         je         loc_6444

000000000000648a         cmp        edx, 0x4000
0000000000006490         je         loc_646e

                     loc_6492:
0000000000006492         mov        rax, qword [rsi+0x48]                       ; CODE XREF=strcmp_df_size+58, strcmp_df_size+74, strcmp_df_size+92
0000000000006496         cmp        qword [rdi+0x48], rax
000000000000649a         jg         loc_646e

000000000000649c         jl         loc_644c

000000000000649e         mov        rsi, qword [rsi]                            ; argument "__s2" for method j_strcmp
00000000000064a1         mov        rdi, qword [rdi]                            ; argument "__s1" for method j_strcmp
00000000000064a4         jmp        j_strcmp                                    ; strcmp
                        ; endp
00000000000064a9         align      16                                          ; End of unwind block (FDE at 0x1bb2c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rev_xstrcoll_df_size:
00000000000064b0         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x1bb40)
00000000000064b3         mov        esi, dword [rdi+0xa8]
00000000000064b9         mov        ecx, dword [rdx+0xa8]
00000000000064bf         cmp        ecx, 0x3
00000000000064c2         sete       al
00000000000064c5         cmp        ecx, 0x9
00000000000064c8         sete       cl
00000000000064cb         or         eax, ecx
00000000000064cd         cmp        esi, 0x3
00000000000064d0         je         loc_64f8

00000000000064d2         cmp        esi, 0x9
00000000000064d5         je         loc_64f8

00000000000064d7         mov        ecx, dword [rdi+0xac]
00000000000064dd         and        ecx, 0xf000
00000000000064e3         test       al, al
00000000000064e5         je         loc_6518

                     loc_64e7:
00000000000064e7         cmp        ecx, 0x4000                                 ; CODE XREF=rev_xstrcoll_df_size+120
00000000000064ed         je         loc_6532

00000000000064ef         mov        eax, 0x1
00000000000064f4         ret
                        ; endp
00000000000064f5         align      8

                     loc_64f8:
00000000000064f8         test       al, al                                      ; CODE XREF=rev_xstrcoll_df_size+32, rev_xstrcoll_df_size+37
00000000000064fa         jne        loc_6532

00000000000064fc         mov        eax, dword [rdx+0xac]
0000000000006502         and        eax, 0xf000
0000000000006507         cmp        eax, 0x4000
000000000000650c         je         loc_6532

                     loc_650e:
000000000000650e         mov        eax, 0xffffffff                             ; CODE XREF=rev_xstrcoll_df_size+128, rev_xstrcoll_df_size+138

                     loc_6513:
0000000000006513         ret                                                    ; CODE XREF=rev_xstrcoll_df_size+145
                        ; endp
0000000000006515         align      8

                     loc_6518:
0000000000006518         mov        eax, dword [rdx+0xac]                       ; CODE XREF=rev_xstrcoll_df_size+53
000000000000651e         and        eax, 0xf000
0000000000006523         cmp        eax, 0x4000
0000000000006528         je         loc_64e7

000000000000652a         cmp        ecx, 0x4000
0000000000006530         je         loc_650e

                     loc_6532:
0000000000006532         mov        rax, qword [rdi+0x48]                       ; CODE XREF=rev_xstrcoll_df_size+61, rev_xstrcoll_df_size+74, rev_xstrcoll_df_size+92
0000000000006536         cmp        qword [rdx+0x48], rax
000000000000653a         jg         loc_650e

000000000000653c         mov        eax, 0x1
0000000000006541         jl         loc_6513

0000000000006543         mov        rsi, qword [rdi]
0000000000006546         mov        rdi, qword [rdx]
0000000000006549         jmp        xstrcoll                                    ; xstrcoll
                        ; endp
000000000000654e         align      16                                          ; End of unwind block (FDE at 0x1bb40)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rev_strcmp_df_size:
0000000000006550         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x1bb54)
0000000000006553         mov        esi, dword [rdi+0xa8]
0000000000006559         mov        ecx, dword [rdx+0xa8]
000000000000655f         cmp        ecx, 0x3
0000000000006562         sete       al
0000000000006565         cmp        ecx, 0x9
0000000000006568         sete       cl
000000000000656b         or         eax, ecx
000000000000656d         cmp        esi, 0x3
0000000000006570         je         loc_6598

0000000000006572         cmp        esi, 0x9
0000000000006575         je         loc_6598

0000000000006577         mov        ecx, dword [rdi+0xac]
000000000000657d         and        ecx, 0xf000
0000000000006583         test       al, al
0000000000006585         je         loc_65b8

                     loc_6587:
0000000000006587         cmp        ecx, 0x4000                                 ; CODE XREF=rev_strcmp_df_size+120
000000000000658d         je         loc_65d2

                     loc_658f:
000000000000658f         mov        eax, 0x1                                    ; CODE XREF=rev_strcmp_df_size+140
0000000000006594         ret
                        ; endp
0000000000006595         align      8

                     loc_6598:
0000000000006598         test       al, al                                      ; CODE XREF=rev_strcmp_df_size+32, rev_strcmp_df_size+37
000000000000659a         jne        loc_65d2

000000000000659c         mov        eax, dword [rdx+0xac]
00000000000065a2         and        eax, 0xf000
00000000000065a7         cmp        eax, 0x4000
00000000000065ac         je         loc_65d2

                     loc_65ae:
00000000000065ae         mov        eax, 0xffffffff                             ; CODE XREF=rev_strcmp_df_size+128, rev_strcmp_df_size+138
00000000000065b3         ret
                        ; endp
00000000000065b4         align      8

                     loc_65b8:
00000000000065b8         mov        eax, dword [rdx+0xac]                       ; CODE XREF=rev_strcmp_df_size+53
00000000000065be         and        eax, 0xf000
00000000000065c3         cmp        eax, 0x4000
00000000000065c8         je         loc_6587

00000000000065ca         cmp        ecx, 0x4000
00000000000065d0         je         loc_65ae

                     loc_65d2:
00000000000065d2         mov        rax, qword [rdi+0x48]                       ; CODE XREF=rev_strcmp_df_size+61, rev_strcmp_df_size+74, rev_strcmp_df_size+92
00000000000065d6         cmp        qword [rdx+0x48], rax
00000000000065da         jg         loc_65ae

00000000000065dc         jl         loc_658f

00000000000065de         mov        rsi, qword [rdi]                            ; argument "__s2" for method j_strcmp
00000000000065e1         mov        rdi, qword [rdx]                            ; argument "__s1" for method j_strcmp
00000000000065e4         jmp        j_strcmp                                    ; strcmp
                        ; endp
00000000000065e9         align      16                                          ; End of unwind block (FDE at 0x1bb54)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrcoll_df_name:
00000000000065f0         mov        edx, dword [rsi+0xa8]                       ; Begin of unwind block (FDE at 0x1bb68)
00000000000065f6         mov        ecx, dword [rdi+0xa8]
00000000000065fc         cmp        edx, 0x3
00000000000065ff         sete       al
0000000000006602         cmp        edx, 0x9
0000000000006605         sete       dl
0000000000006608         or         eax, edx
000000000000660a         cmp        ecx, 0x3
000000000000660d         je         loc_6638

000000000000660f         cmp        ecx, 0x9
0000000000006612         je         loc_6638

0000000000006614         mov        edx, dword [rdi+0xac]
000000000000661a         and        edx, 0xf000
0000000000006620         test       al, al
0000000000006622         je         loc_6658

                     loc_6624:
0000000000006624         cmp        edx, 0x4000                                 ; CODE XREF=xstrcoll_df_name+120
000000000000662a         je         loc_6672

000000000000662c         mov        eax, 0x1
0000000000006631         ret
                        ; endp
0000000000006632         align      8

                     loc_6638:
0000000000006638         test       al, al                                      ; CODE XREF=xstrcoll_df_name+29, xstrcoll_df_name+34
000000000000663a         jne        loc_6672

000000000000663c         mov        eax, dword [rsi+0xac]
0000000000006642         and        eax, 0xf000
0000000000006647         cmp        eax, 0x4000
000000000000664c         je         loc_6672

                     loc_664e:
000000000000664e         mov        eax, 0xffffffff                             ; CODE XREF=xstrcoll_df_name+128
0000000000006653         ret
                        ; endp
0000000000006654         align      8

                     loc_6658:
0000000000006658         mov        eax, dword [rsi+0xac]                       ; CODE XREF=xstrcoll_df_name+50
000000000000665e         and        eax, 0xf000
0000000000006663         cmp        eax, 0x4000
0000000000006668         je         loc_6624

000000000000666a         cmp        edx, 0x4000
0000000000006670         je         loc_664e

                     loc_6672:
0000000000006672         mov        rsi, qword [rsi]                            ; CODE XREF=xstrcoll_df_name+58, xstrcoll_df_name+74, xstrcoll_df_name+92
0000000000006675         mov        rdi, qword [rdi]
0000000000006678         jmp        xstrcoll                                    ; xstrcoll
                        ; endp
000000000000667d         align      128                                         ; End of unwind block (FDE at 0x1bb68)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     strcmp_df_name:
0000000000006680         mov        edx, dword [rsi+0xa8]                       ; Begin of unwind block (FDE at 0x1bb7c)
0000000000006686         mov        ecx, dword [rdi+0xa8]
000000000000668c         cmp        edx, 0x3
000000000000668f         sete       al
0000000000006692         cmp        edx, 0x9
0000000000006695         sete       dl
0000000000006698         or         eax, edx
000000000000669a         cmp        ecx, 0x3
000000000000669d         je         loc_66c8

000000000000669f         cmp        ecx, 0x9
00000000000066a2         je         loc_66c8

00000000000066a4         mov        edx, dword [rdi+0xac]
00000000000066aa         and        edx, 0xf000
00000000000066b0         test       al, al
00000000000066b2         je         loc_66e8

                     loc_66b4:
00000000000066b4         cmp        edx, 0x4000                                 ; CODE XREF=strcmp_df_name+120
00000000000066ba         je         loc_6702

00000000000066bc         mov        eax, 0x1
00000000000066c1         ret
                        ; endp
00000000000066c2         align      8

                     loc_66c8:
00000000000066c8         test       al, al                                      ; CODE XREF=strcmp_df_name+29, strcmp_df_name+34
00000000000066ca         jne        loc_6702

00000000000066cc         mov        eax, dword [rsi+0xac]
00000000000066d2         and        eax, 0xf000
00000000000066d7         cmp        eax, 0x4000
00000000000066dc         je         loc_6702

                     loc_66de:
00000000000066de         mov        eax, 0xffffffff                             ; CODE XREF=strcmp_df_name+128
00000000000066e3         ret
                        ; endp
00000000000066e4         align      8

                     loc_66e8:
00000000000066e8         mov        eax, dword [rsi+0xac]                       ; CODE XREF=strcmp_df_name+50
00000000000066ee         and        eax, 0xf000
00000000000066f3         cmp        eax, 0x4000
00000000000066f8         je         loc_66b4

00000000000066fa         cmp        edx, 0x4000
0000000000006700         je         loc_66de

                     loc_6702:
0000000000006702         mov        rsi, qword [rsi]                            ; argument "__s2" for method j_strcmp, CODE XREF=strcmp_df_name+58, strcmp_df_name+74, strcmp_df_name+92
0000000000006705         mov        rdi, qword [rdi]                            ; argument "__s1" for method j_strcmp
0000000000006708         jmp        j_strcmp                                    ; strcmp
                        ; endp
000000000000670d         align      16                                          ; End of unwind block (FDE at 0x1bb7c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rev_xstrcoll_df_name:
0000000000006710         mov        rcx, rsi                                    ; Begin of unwind block (FDE at 0x1bb90)
0000000000006713         mov        esi, dword [rdi+0xa8]
0000000000006719         mov        edx, dword [rcx+0xa8]
000000000000671f         cmp        edx, 0x3
0000000000006722         sete       al
0000000000006725         cmp        edx, 0x9
0000000000006728         sete       dl
000000000000672b         or         eax, edx
000000000000672d         cmp        esi, 0x3
0000000000006730         je         loc_6758

0000000000006732         cmp        esi, 0x9
0000000000006735         je         loc_6758

0000000000006737         mov        edx, dword [rdi+0xac]
000000000000673d         and        edx, 0xf000
0000000000006743         test       al, al
0000000000006745         je         loc_6778

                     loc_6747:
0000000000006747         cmp        edx, 0x4000                                 ; CODE XREF=rev_xstrcoll_df_name+120
000000000000674d         je         loc_6792

000000000000674f         mov        eax, 0x1
0000000000006754         ret
                        ; endp
0000000000006755         align      8

                     loc_6758:
0000000000006758         test       al, al                                      ; CODE XREF=rev_xstrcoll_df_name+32, rev_xstrcoll_df_name+37
000000000000675a         jne        loc_6792

000000000000675c         mov        eax, dword [rcx+0xac]
0000000000006762         and        eax, 0xf000
0000000000006767         cmp        eax, 0x4000
000000000000676c         je         loc_6792

                     loc_676e:
000000000000676e         mov        eax, 0xffffffff                             ; CODE XREF=rev_xstrcoll_df_name+128
0000000000006773         ret
                        ; endp
0000000000006774         align      8

                     loc_6778:
0000000000006778         mov        eax, dword [rcx+0xac]                       ; CODE XREF=rev_xstrcoll_df_name+53
000000000000677e         and        eax, 0xf000
0000000000006783         cmp        eax, 0x4000
0000000000006788         je         loc_6747

000000000000678a         cmp        edx, 0x4000
0000000000006790         je         loc_676e

                     loc_6792:
0000000000006792         mov        rsi, qword [rdi]                            ; CODE XREF=rev_xstrcoll_df_name+61, rev_xstrcoll_df_name+74, rev_xstrcoll_df_name+92
0000000000006795         mov        rdi, qword [rcx]
0000000000006798         jmp        xstrcoll                                    ; xstrcoll
                        ; endp
000000000000679d         align      32                                          ; End of unwind block (FDE at 0x1bb90)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rev_strcmp_df_name:
00000000000067a0         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x1bba4)
00000000000067a3         mov        esi, dword [rdi+0xa8]
00000000000067a9         mov        ecx, dword [rdx+0xa8]
00000000000067af         cmp        ecx, 0x3
00000000000067b2         sete       al
00000000000067b5         cmp        ecx, 0x9
00000000000067b8         sete       cl
00000000000067bb         or         eax, ecx
00000000000067bd         cmp        esi, 0x3
00000000000067c0         je         loc_67e8

00000000000067c2         cmp        esi, 0x9
00000000000067c5         je         loc_67e8

00000000000067c7         mov        ecx, dword [rdi+0xac]
00000000000067cd         and        ecx, 0xf000
00000000000067d3         test       al, al
00000000000067d5         je         loc_6808

                     loc_67d7:
00000000000067d7         cmp        ecx, 0x4000                                 ; CODE XREF=rev_strcmp_df_name+120
00000000000067dd         je         loc_6822

00000000000067df         mov        eax, 0x1
00000000000067e4         ret
                        ; endp
00000000000067e5         align      8

                     loc_67e8:
00000000000067e8         test       al, al                                      ; CODE XREF=rev_strcmp_df_name+32, rev_strcmp_df_name+37
00000000000067ea         jne        loc_6822

00000000000067ec         mov        eax, dword [rdx+0xac]
00000000000067f2         and        eax, 0xf000
00000000000067f7         cmp        eax, 0x4000
00000000000067fc         je         loc_6822

                     loc_67fe:
00000000000067fe         mov        eax, 0xffffffff                             ; CODE XREF=rev_strcmp_df_name+128
0000000000006803         ret
                        ; endp
0000000000006804         align      8

                     loc_6808:
0000000000006808         mov        eax, dword [rdx+0xac]                       ; CODE XREF=rev_strcmp_df_name+53
000000000000680e         and        eax, 0xf000
0000000000006813         cmp        eax, 0x4000
0000000000006818         je         loc_67d7

000000000000681a         cmp        ecx, 0x4000
0000000000006820         je         loc_67fe

                     loc_6822:
0000000000006822         mov        rsi, qword [rdi]                            ; argument "__s2" for method j_strcmp, CODE XREF=rev_strcmp_df_name+61, rev_strcmp_df_name+74, rev_strcmp_df_name+92
0000000000006825         mov        rdi, qword [rdx]                            ; argument "__s1" for method j_strcmp
0000000000006828         jmp        j_strcmp                                    ; strcmp
                        ; endp
000000000000682d         align      16                                          ; End of unwind block (FDE at 0x1bba4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_type_indicator:
0000000000006830         test       dil, dil                                    ; Begin of unwind block (FDE at 0x1bbb8), CODE XREF=print_type_indicator+5, length_of_file_name_and_frills+159
0000000000006833         je         loc_6858

0000000000006835         mov        eax, esi
0000000000006837         and        eax, 0xf000
000000000000683c         cmp        eax, 0x8000
0000000000006841         jne        loc_68b0

0000000000006843         xor        eax, eax
0000000000006845         cmp        dword [indicator_style], 0x3                ; indicator_style
000000000000684c         je         loc_68f8

                     loc_6852:
0000000000006852         ret                                                    ; CODE XREF=get_type_indicator+68, get_type_indicator+79
                        ; endp
0000000000006854         align      8

                     loc_6858:
0000000000006858         xor        eax, eax                                    ; CODE XREF=get_type_indicator+3
000000000000685a         cmp        edx, 0x5
000000000000685d         je         loc_68c0

000000000000685f         cmp        edx, 0x3
0000000000006862         sete       cl
0000000000006865         cmp        edx, 0x9
0000000000006868         sete       al
000000000000686b         or         ecx, eax

                     loc_686d:
000000000000686d         test       cl, cl                                      ; CODE XREF=get_type_indicator+136
000000000000686f         mov        eax, 0x2f
0000000000006874         jne        loc_6852

0000000000006876         xor        eax, eax
0000000000006878         cmp        dword [indicator_style], 0x1                ; indicator_style
000000000000687f         je         loc_6852

0000000000006881         test       dil, dil
0000000000006884         jne        loc_68c8

0000000000006886         cmp        edx, 0x6
0000000000006889         mov        eax, 0x40
000000000000688e         je         loc_6910

0000000000006894         cmp        edx, 0x1
0000000000006897         mov        eax, 0x7c
000000000000689c         je         loc_6928

00000000000068a2         cmp        edx, 0x7
00000000000068a5         sete       al

                     loc_68a8:
00000000000068a8         neg        eax                                         ; CODE XREF=get_type_indicator+193
00000000000068aa         and        eax, 0x3d
00000000000068ad         ret
                        ; endp
00000000000068ae         align      16

                     loc_68b0:
00000000000068b0         cmp        eax, 0x4000                                 ; CODE XREF=get_type_indicator+17
00000000000068b5         sete       cl
00000000000068b8         jmp        loc_686d
00000000000068ba         align      64

                     loc_68c0:
00000000000068c0         ret                                                    ; CODE XREF=get_type_indicator+45
                        ; endp
00000000000068c2         align      8

                     loc_68c8:
00000000000068c8         and        esi, 0xf000                                 ; CODE XREF=get_type_indicator+84
00000000000068ce         mov        eax, 0x40
00000000000068d3         cmp        esi, 0xa000
00000000000068d9         je         loc_6918

00000000000068db         cmp        esi, aEmptyset                              ; "emptyset"
00000000000068e1         mov        eax, 0x7c
00000000000068e6         je         loc_6920

00000000000068e8         cmp        esi, 0xc000
00000000000068ee         sete       al
00000000000068f1         jmp        loc_68a8
00000000000068f3         align      8

                     loc_68f8:
00000000000068f8         and        esi, 0x49                                   ; CODE XREF=get_type_indicator+28
00000000000068fb         cmp        esi, 0x1
00000000000068fe         sbb        eax, eax
0000000000006900         not        eax
0000000000006902         and        eax, 0x2a
0000000000006905         ret
                        ; endp
0000000000006906         align      16

                     loc_6910:
0000000000006910         ret                                                    ; CODE XREF=get_type_indicator+94
                        ; endp
0000000000006912         align      8

                     loc_6918:
0000000000006918         ret                                                    ; CODE XREF=get_type_indicator+169
                        ; endp
000000000000691a         align      32

                     loc_6920:
0000000000006920         ret                                                    ; CODE XREF=get_type_indicator+182
                        ; endp
0000000000006922         align      8

                     loc_6928:
0000000000006928         ret                                                    ; CODE XREF=get_type_indicator+108
                        ; endp
000000000000692a         align      16                                          ; End of unwind block (FDE at 0x1bbb8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     print_type_indicator:
0000000000006930         push       rbx                                         ; Begin of unwind block (FDE at 0x1bbcc), CODE XREF=print_file_name_and_frills+274, print_long_format+954, print_long_format+1359
0000000000006931         movzx      edi, dil
0000000000006935         call       get_type_indicator                          ; get_type_indicator
000000000000693a         test       al, al
000000000000693c         mov        ebx, eax
000000000000693e         je         loc_6963

0000000000006940         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000006947         mov        rax, qword [rdi+0x28]
000000000000694b         cmp        rax, qword [rdi+0x30]
000000000000694f         jae        loc_6970

0000000000006951         lea        rdx, qword [rax+1]
0000000000006955         mov        qword [rdi+0x28], rdx
0000000000006959         mov        byte [rax], bl

                     loc_695b:
000000000000695b         add        qword [dired_pos], 0x1                      ; dired_pos, CODE XREF=print_type_indicator+72

                     loc_6963:
0000000000006963         test       bl, bl                                      ; CODE XREF=print_type_indicator+14
0000000000006965         setne      al
0000000000006968         pop        rbx
0000000000006969         ret
                        ; endp
000000000000696a         align      16

                     loc_6970:
0000000000006970         movzx      esi, bl                                     ; argument #2 for method j___overflow, CODE XREF=print_type_indicator+31
0000000000006973         call       j___overflow                                ; __overflow
0000000000006978         jmp        loc_695b
000000000000697a         align      128                                         ; End of unwind block (FDE at 0x1bbcc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     strcmp_df_mtime:
0000000000006980         mov        edx, dword [rsi+0xa8]                       ; Begin of unwind block (FDE at 0x1bbe8)
0000000000006986         mov        ecx, dword [rdi+0xa8]
000000000000698c         cmp        edx, 0x3
000000000000698f         sete       al
0000000000006992         cmp        edx, 0x9
0000000000006995         sete       dl
0000000000006998         or         eax, edx
000000000000699a         cmp        ecx, 0x3
000000000000699d         je         loc_69c8

000000000000699f         cmp        ecx, 0x9
00000000000069a2         je         loc_69c8

00000000000069a4         mov        edx, dword [rdi+0xac]
00000000000069aa         and        edx, 0xf000
00000000000069b0         test       al, al
00000000000069b2         je         loc_69e8

                     loc_69b4:
00000000000069b4         cmp        edx, 0x4000                                 ; CODE XREF=strcmp_df_mtime+120
00000000000069ba         je         loc_6a08

                     loc_69bc:
00000000000069bc         mov        eax, 0x1                                    ; CODE XREF=strcmp_df_mtime+146
00000000000069c1         ret
                        ; endp
00000000000069c2         align      8

                     loc_69c8:
00000000000069c8         test       al, al                                      ; CODE XREF=strcmp_df_mtime+29, strcmp_df_mtime+34
00000000000069ca         jne        loc_6a08

00000000000069cc         mov        eax, dword [rsi+0xac]
00000000000069d2         and        eax, 0xf000
00000000000069d7         cmp        eax, 0x4000
00000000000069dc         je         loc_6a08

                     loc_69de:
00000000000069de         mov        eax, 0xffffffff                             ; CODE XREF=strcmp_df_mtime+128, strcmp_df_mtime+144

                     loc_69e3:
00000000000069e3         ret                                                    ; CODE XREF=strcmp_df_mtime+155
                        ; endp
00000000000069e5         align      8

                     loc_69e8:
00000000000069e8         mov        eax, dword [rsi+0xac]                       ; CODE XREF=strcmp_df_mtime+50
00000000000069ee         and        eax, 0xf000
00000000000069f3         cmp        eax, 0x4000
00000000000069f8         je         loc_69b4

00000000000069fa         cmp        edx, 0x4000
0000000000006a00         je         loc_69de

0000000000006a02         nop        word [rax+rax]

                     loc_6a08:
0000000000006a08         mov        rax, qword [rsi+0x70]                       ; CODE XREF=strcmp_df_mtime+58, strcmp_df_mtime+74, strcmp_df_mtime+92
0000000000006a0c         cmp        qword [rdi+0x70], rax
0000000000006a10         jg         loc_69de

0000000000006a12         jl         loc_69bc

0000000000006a14         mov        rax, qword [rsi+0x78]
0000000000006a18         sub        eax, dword [rdi+0x78]
0000000000006a1b         jne        loc_69e3

0000000000006a1d         mov        rsi, qword [rsi]                            ; argument "__s2" for method j_strcmp
0000000000006a20         mov        rdi, qword [rdi]                            ; argument "__s1" for method j_strcmp
0000000000006a23         jmp        j_strcmp                                    ; strcmp
                        ; endp
0000000000006a28         align      16                                          ; End of unwind block (FDE at 0x1bbe8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rev_xstrcoll_df_version:
0000000000006a30         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x1bbfc)
0000000000006a33         mov        esi, dword [rdi+0xa8]
0000000000006a39         mov        ecx, dword [rdx+0xa8]
0000000000006a3f         cmp        ecx, 0x3
0000000000006a42         sete       al
0000000000006a45         cmp        ecx, 0x9
0000000000006a48         sete       cl
0000000000006a4b         or         eax, ecx
0000000000006a4d         cmp        esi, 0x3
0000000000006a50         je         loc_6a78

0000000000006a52         cmp        esi, 0x9
0000000000006a55         je         loc_6a78

0000000000006a57         mov        ecx, dword [rdi+0xac]
0000000000006a5d         and        ecx, 0xf000
0000000000006a63         test       al, al
0000000000006a65         je         loc_6a98

                     loc_6a67:
0000000000006a67         cmp        ecx, 0x4000                                 ; CODE XREF=rev_xstrcoll_df_version+120
0000000000006a6d         je         loc_6ab2

0000000000006a6f         mov        eax, 0x1
0000000000006a74         ret
                        ; endp
0000000000006a75         align      8

                     loc_6a78:
0000000000006a78         test       al, al                                      ; CODE XREF=rev_xstrcoll_df_version+32, rev_xstrcoll_df_version+37
0000000000006a7a         jne        loc_6ab2

0000000000006a7c         mov        eax, dword [rdx+0xac]
0000000000006a82         and        eax, 0xf000
0000000000006a87         cmp        eax, 0x4000
0000000000006a8c         je         loc_6ab2

                     loc_6a8e:
0000000000006a8e         mov        eax, 0xffffffff                             ; CODE XREF=rev_xstrcoll_df_version+128
0000000000006a93         ret
                        ; endp
0000000000006a94         align      8

                     loc_6a98:
0000000000006a98         mov        eax, dword [rdx+0xac]                       ; CODE XREF=rev_xstrcoll_df_version+53
0000000000006a9e         and        eax, 0xf000
0000000000006aa3         cmp        eax, 0x4000
0000000000006aa8         je         loc_6a67

0000000000006aaa         cmp        ecx, 0x4000
0000000000006ab0         je         loc_6a8e

                     loc_6ab2:
0000000000006ab2         mov        rsi, qword [rdi]                            ; CODE XREF=rev_xstrcoll_df_version+61, rev_xstrcoll_df_version+74, rev_xstrcoll_df_version+92
0000000000006ab5         mov        rdi, qword [rdx]
0000000000006ab8         jmp        filevercmp                                  ; filevercmp
                        ; endp
0000000000006abd         align      64                                          ; End of unwind block (FDE at 0x1bbfc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrcoll_df_version:
0000000000006ac0         mov        edx, dword [rsi+0xa8]                       ; Begin of unwind block (FDE at 0x1bc10)
0000000000006ac6         mov        ecx, dword [rdi+0xa8]
0000000000006acc         cmp        edx, 0x3
0000000000006acf         sete       al
0000000000006ad2         cmp        edx, 0x9
0000000000006ad5         sete       dl
0000000000006ad8         or         eax, edx
0000000000006ada         cmp        ecx, 0x3
0000000000006add         je         loc_6b08

0000000000006adf         cmp        ecx, 0x9
0000000000006ae2         je         loc_6b08

0000000000006ae4         mov        edx, dword [rdi+0xac]
0000000000006aea         and        edx, 0xf000
0000000000006af0         test       al, al
0000000000006af2         je         loc_6b28

                     loc_6af4:
0000000000006af4         cmp        edx, 0x4000                                 ; CODE XREF=xstrcoll_df_version+120
0000000000006afa         je         loc_6b42

0000000000006afc         mov        eax, 0x1
0000000000006b01         ret
                        ; endp
0000000000006b02         align      8

                     loc_6b08:
0000000000006b08         test       al, al                                      ; CODE XREF=xstrcoll_df_version+29, xstrcoll_df_version+34
0000000000006b0a         jne        loc_6b42

0000000000006b0c         mov        eax, dword [rsi+0xac]
0000000000006b12         and        eax, 0xf000
0000000000006b17         cmp        eax, 0x4000
0000000000006b1c         je         loc_6b42

                     loc_6b1e:
0000000000006b1e         mov        eax, 0xffffffff                             ; CODE XREF=xstrcoll_df_version+128
0000000000006b23         ret
                        ; endp
0000000000006b24         align      8

                     loc_6b28:
0000000000006b28         mov        eax, dword [rsi+0xac]                       ; CODE XREF=xstrcoll_df_version+50
0000000000006b2e         and        eax, 0xf000
0000000000006b33         cmp        eax, 0x4000
0000000000006b38         je         loc_6af4

0000000000006b3a         cmp        edx, 0x4000
0000000000006b40         je         loc_6b1e

                     loc_6b42:
0000000000006b42         mov        rsi, qword [rsi]                            ; CODE XREF=xstrcoll_df_version+58, xstrcoll_df_version+74, xstrcoll_df_version+92
0000000000006b45         mov        rdi, qword [rdi]
0000000000006b48         jmp        filevercmp                                  ; filevercmp
                        ; endp
0000000000006b4d         align      16                                          ; End of unwind block (FDE at 0x1bc10)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rev_strcmp_df_extension:
0000000000006b50         mov        edx, dword [rsi+0xa8]                       ; Begin of unwind block (FDE at 0x1bc24)
0000000000006b56         mov        ecx, dword [rdi+0xa8]
0000000000006b5c         cmp        edx, 0x3
0000000000006b5f         sete       al
0000000000006b62         cmp        edx, 0x9
0000000000006b65         sete       dl
0000000000006b68         or         eax, edx
0000000000006b6a         cmp        ecx, 0x3
0000000000006b6d         je         loc_6b98

0000000000006b6f         cmp        ecx, 0x9
0000000000006b72         je         loc_6b98

0000000000006b74         mov        edx, dword [rdi+0xac]
0000000000006b7a         and        edx, 0xf000
0000000000006b80         test       al, al
0000000000006b82         je         loc_6bb8

                     loc_6b84:
0000000000006b84         cmp        edx, 0x4000                                 ; CODE XREF=rev_strcmp_df_extension+120
0000000000006b8a         je         loc_6bd8

0000000000006b8c         mov        eax, 0x1
0000000000006b91         ret
                        ; endp
0000000000006b92         align      8

                     loc_6b98:
0000000000006b98         test       al, al                                      ; CODE XREF=rev_strcmp_df_extension+29, rev_strcmp_df_extension+34
0000000000006b9a         jne        loc_6bd8

0000000000006b9c         mov        eax, dword [rsi+0xac]
0000000000006ba2         and        eax, 0xf000
0000000000006ba7         cmp        eax, 0x4000
0000000000006bac         je         loc_6bd8

                     loc_6bae:
0000000000006bae         mov        eax, 0xffffffff                             ; CODE XREF=rev_strcmp_df_extension+128
0000000000006bb3         ret
                        ; endp
0000000000006bb4         align      8

                     loc_6bb8:
0000000000006bb8         mov        eax, dword [rsi+0xac]                       ; CODE XREF=rev_strcmp_df_extension+50
0000000000006bbe         and        eax, 0xf000
0000000000006bc3         cmp        eax, 0x4000
0000000000006bc8         je         loc_6b84

0000000000006bca         cmp        edx, 0x4000
0000000000006bd0         je         loc_6bae

0000000000006bd2         nop        word [rax+rax]

                     loc_6bd8:
0000000000006bd8         push       r12                                         ; CODE XREF=rev_strcmp_df_extension+58, rev_strcmp_df_extension+74, rev_strcmp_df_extension+92
0000000000006bda         push       rbp
0000000000006bdb         push       rbx
0000000000006bdc         mov        r12, qword [rsi]
0000000000006bdf         mov        rbx, rdi
0000000000006be2         mov        esi, 0x2e                                   ; argument "__c" for method j_strrchr
0000000000006be7         mov        rdi, r12                                    ; argument "__s" for method j_strrchr
0000000000006bea         call       j_strrchr                                   ; strrchr
0000000000006bef         mov        rbx, qword [rbx]
0000000000006bf2         mov        esi, 0x2e                                   ; argument "__c" for method j_strrchr
0000000000006bf7         mov        rbp, rax
0000000000006bfa         mov        rdi, rbx                                    ; argument "__s" for method j_strrchr
0000000000006bfd         call       j_strrchr                                   ; strrchr
0000000000006c02         test       rax, rax
0000000000006c05         je         loc_6c40

0000000000006c07         lea        rdx, qword [aLu+34]                         ; 0x178b3
0000000000006c0e         test       rbp, rbp
0000000000006c11         cmove      rbp, rdx

                     loc_6c15:
0000000000006c15         mov        rsi, rax                                    ; argument "__s2" for method j_strcmp, CODE XREF=rev_strcmp_df_extension+250
0000000000006c18         mov        rdi, rbp                                    ; argument "__s1" for method j_strcmp
0000000000006c1b         call       j_strcmp                                    ; strcmp
0000000000006c20         test       eax, eax
0000000000006c22         jne        loc_6c38

                     loc_6c24:
0000000000006c24         mov        rsi, rbx                                    ; argument "__s2" for method j_strcmp, CODE XREF=rev_strcmp_df_extension+252
0000000000006c27         mov        rdi, r12                                    ; argument "__s1" for method j_strcmp
0000000000006c2a         pop        rbx
0000000000006c2b         pop        rbp
0000000000006c2c         pop        r12
0000000000006c2e         jmp        j_strcmp                                    ; strcmp
                        ; endp
0000000000006c33         align      8

                     loc_6c38:
0000000000006c38         pop        rbx                                         ; CODE XREF=rev_strcmp_df_extension+210
0000000000006c39         pop        rbp
0000000000006c3a         pop        r12
0000000000006c3c         ret
                        ; endp
0000000000006c3d         align      64

                     loc_6c40:
0000000000006c40         test       rbp, rbp                                    ; CODE XREF=rev_strcmp_df_extension+181
0000000000006c43         lea        rax, qword [aLu+34]                         ; 0x178b3
0000000000006c4a         jne        loc_6c15

0000000000006c4c         jmp        loc_6c24
0000000000006c4e         align      16                                          ; End of unwind block (FDE at 0x1bc24)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_50: int32_t, -80
        ;    var_60: -96
        ;    var_70: -112
        ;    var_80: -128
        ;    var_90: -144
        ;    var_A0: -160
        ;    var_B0: -176
        ;    var_C0: -192
        ;    var_D0: -208
        ;    var_D8: int64_t, -216


                     signal_setup:
0000000000006c50         push       r15                                         ; Begin of unwind block (FDE at 0x1bc64), CODE XREF=main+3934, put_indicator+85
0000000000006c52         push       r14
0000000000006c54         push       r13
0000000000006c56         push       r12
0000000000006c58         push       rbp
0000000000006c59         push       rbx
0000000000006c5a         sub        rsp, 0xa8
0000000000006c61         mov        rax, qword [fs:0x28]
0000000000006c6a         mov        qword [rsp+0xd8+var_40], rax
0000000000006c72         xor        eax, eax
0000000000006c74         test       dil, dil
0000000000006c77         jne        loc_6cf0

0000000000006c79         lea        rbx, qword [sig.9937+4]                     ; 0x16644
0000000000006c80         mov        ebp, 0x14
0000000000006c85         lea        r12, qword [caught_signals]                 ; caught_signals
0000000000006c8c         lea        r13, qword [rbx+0x2c]
0000000000006c90         jmp        loc_6ca3
0000000000006c92         align      8

                     loc_6c98:
0000000000006c98         cmp        rbx, r13                                    ; CODE XREF=signal_setup+95
0000000000006c9b         je         loc_6cbf

                     loc_6c9d:
0000000000006c9d         mov        ebp, dword [rbx]                            ; CODE XREF=signal_setup+109
0000000000006c9f         add        rbx, 0x4

                     loc_6ca3:
0000000000006ca3         mov        esi, ebp                                    ; argument "__signo" for method j_sigismember, CODE XREF=signal_setup+64
0000000000006ca5         mov        rdi, r12                                    ; argument "__set" for method j_sigismember
0000000000006ca8         call       j_sigismember                               ; sigismember
0000000000006cad         test       eax, eax
0000000000006caf         je         loc_6c98

0000000000006cb1         xor        esi, esi                                    ; argument "__handler" for method j_signal
0000000000006cb3         mov        edi, ebp                                    ; argument "__sig" for method j_signal
0000000000006cb5         call       j_signal                                    ; signal
0000000000006cba         cmp        rbx, r13
0000000000006cbd         jne        loc_6c9d

                     loc_6cbf:
0000000000006cbf         mov        rax, qword [rsp+0xd8+var_40]                ; CODE XREF=signal_setup+75, signal_setup+452
0000000000006cc7         xor        rax, qword [fs:0x28]
0000000000006cd0         jne        loc_6e19

0000000000006cd6         add        rsp, 0xa8
0000000000006cdd         pop        rbx
0000000000006cde         pop        rbp
0000000000006cdf         pop        r12
0000000000006ce1         pop        r13
0000000000006ce3         pop        r14
0000000000006ce5         pop        r15
0000000000006ce7         ret
                        ; endp
0000000000006ce8         align      16

                     loc_6cf0:
0000000000006cf0         lea        rbp, qword [sig.9937+4]                     ; 0x16644, CODE XREF=signal_setup+39
0000000000006cf7         lea        rdi, qword [caught_signals]                 ; argument "__set" for method j_sigemptyset, caught_signals
0000000000006cfe         mov        r13d, 0x14
0000000000006d04         mov        r12, rsp
0000000000006d07         lea        r15, qword [caught_signals]                 ; caught_signals
0000000000006d0e         call       j_sigemptyset                               ; sigemptyset
0000000000006d13         lea        r14, qword [rbp+0x2c]
0000000000006d17         mov        rbx, rbp
0000000000006d1a         jmp        loc_6d27
0000000000006d1c         align      32

                     loc_6d20:
0000000000006d20         mov        r13d, dword [rbx]                           ; CODE XREF=signal_setup+249
0000000000006d23         add        rbx, 0x4

                     loc_6d27:
0000000000006d27         xor        esi, esi                                    ; argument "__act" for method j_sigaction, CODE XREF=signal_setup+202
0000000000006d29         mov        rdx, r12                                    ; argument "__oact" for method j_sigaction
0000000000006d2c         mov        edi, r13d                                   ; argument "__sig" for method j_sigaction
0000000000006d2f         call       j_sigaction                                 ; sigaction
0000000000006d34         cmp        qword [rsp+0xd8+var_D8], 0x1
0000000000006d39         je         loc_6d46

0000000000006d3b         mov        esi, r13d                                   ; argument "__signo" for method j_sigaddset
0000000000006d3e         mov        rdi, r15                                    ; argument "__set" for method j_sigaddset
0000000000006d41         call       j_sigaddset                                 ; sigaddset

                     loc_6d46:
0000000000006d46         cmp        rbx, r14                                    ; CODE XREF=signal_setup+233
0000000000006d49         jne        loc_6d20

0000000000006d4b         movdqa     xmm0, xmmword [caught_signals]              ; caught_signals
0000000000006d53         mov        r14d, 0x14
0000000000006d59         mov        dword [rsp+0xd8+var_50], 0x10000000
0000000000006d64         lea        r13, qword [caught_signals]                 ; caught_signals
0000000000006d6b         lea        r15, qword [sighandler]                     ; sighandler
0000000000006d72         movups     xmmword [rsp+0xd8+var_D0], xmm0
0000000000006d77         movdqa     xmm0, xmmword [caught_signals+16]           ; 0x221230
0000000000006d7f         movups     xmmword [rsp+0xd8+var_C0], xmm0
0000000000006d84         movdqa     xmm0, xmmword [caught_signals+32]           ; 0x221240
0000000000006d8c         movups     xmmword [rsp+0xd8+var_B0], xmm0
0000000000006d91         movdqa     xmm0, xmmword [caught_signals+48]           ; 0x221250
0000000000006d99         movups     xmmword [rsp+0xd8+var_A0], xmm0
0000000000006d9e         movdqa     xmm0, xmmword [caught_signals+64]           ; 0x221260
0000000000006da6         movups     xmmword [rsp+0xd8+var_90], xmm0
0000000000006dab         movdqa     xmm0, xmmword [caught_signals+80]           ; 0x221270
0000000000006db3         movups     xmmword [rsp+0xd8+var_80], xmm0
0000000000006db8         movdqa     xmm0, xmmword [caught_signals+96]           ; 0x221280
0000000000006dc0         movups     xmmword [rsp+0xd8+var_70], xmm0
0000000000006dc5         movdqa     xmm0, xmmword [caught_signals+112]          ; 0x221290
0000000000006dcd         movups     xmmword [rsp+0xd8+var_60], xmm0
0000000000006dd2         jmp        loc_6de0
0000000000006dd4         align      8

                     loc_6dd8:
0000000000006dd8         mov        r14d, dword [rbp]                           ; CODE XREF=signal_setup+450
0000000000006ddc         add        rbp, 0x4

                     loc_6de0:
0000000000006de0         mov        esi, r14d                                   ; argument "__signo" for method j_sigismember, CODE XREF=signal_setup+386
0000000000006de3         mov        rdi, r13                                    ; argument "__set" for method j_sigismember
0000000000006de6         call       j_sigismember                               ; sigismember
0000000000006deb         test       eax, eax
0000000000006ded         je         loc_6e0f

0000000000006def         lea        rax, qword [stophandler]                    ; stophandler
0000000000006df6         cmp        r14d, 0x14
0000000000006dfa         mov        rsi, r12                                    ; argument "__act" for method j_sigaction
0000000000006dfd         mov        edi, r14d                                   ; argument "__sig" for method j_sigaction
0000000000006e00         cmovne     rax, r15
0000000000006e04         xor        edx, edx                                    ; argument "__oact" for method j_sigaction
0000000000006e06         mov        qword [rsp+0xd8+var_D8], rax
0000000000006e0a         call       j_sigaction                                 ; sigaction

                     loc_6e0f:
0000000000006e0f         cmp        rbp, rbx                                    ; CODE XREF=signal_setup+413
0000000000006e12         jne        loc_6dd8

0000000000006e14         jmp        loc_6cbf

                     loc_6e19:
0000000000006e19         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=signal_setup+128
                        ; endp
0000000000006e1e         align      32                                          ; End of unwind block (FDE at 0x1bc64)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     prep_non_filename_text:
0000000000006e20         cmp        qword [qword_220088], 0x0                   ; Begin of unwind block (FDE at 0x1bcb0), qword_220088, CODE XREF=put_indicator+69, put_indicator+90, print_name_with_quoting+349
0000000000006e28         je         loc_6e38

0000000000006e2a         lea        rdi, qword [qword_220078+8]                 ; 0x220080
0000000000006e31         jmp        put_indicator                               ; put_indicator
0000000000006e33         align      8

                     loc_6e38:
0000000000006e38         lea        rdi, qword [color_indicator]                ; color_indicator, CODE XREF=prep_non_filename_text+8
0000000000006e3f         sub        rsp, 0x8
0000000000006e43         call       put_indicator                               ; put_indicator
0000000000006e48         lea        rdi, qword [qword_220088+8]                 ; 0x220090
0000000000006e4f         call       put_indicator                               ; put_indicator
0000000000006e54         lea        rdi, qword [qword_220070]                   ; qword_220070
0000000000006e5b         add        rsp, 0x8
0000000000006e5f         jmp        put_indicator                               ; put_indicator
0000000000006e61         align      16                                          ; End of unwind block (FDE at 0x1bcb0)

                     put_indicator:
0000000000006e70         cmp        byte [used_color], 0x0                      ; Begin of unwind block (FDE at 0x1bcc8), used_color, CODE XREF=main+3903, main+3915, prep_non_filename_text+17, prep_non_filename_text+35, prep_non_filename_text+47, prep_non_filename_text+63, process_signals+157, process_signals+169, set_normal_color+47, set_normal_color+59, set_normal_color+75
0000000000006e77         push       rbx
0000000000006e78         mov        rbx, rdi
0000000000006e7b         je         loc_6ea0

                     loc_6e7d:
0000000000006e7d         mov        rdi, qword [rbx+8]                          ; argument "__ptr" for method j_fwrite_unlocked, CODE XREF=put_indicator+74, put_indicator+95
0000000000006e81         mov        rsi, qword [rbx]                            ; argument "__size" for method j_fwrite_unlocked
0000000000006e84         mov        edx, 0x1                                    ; argument "__n" for method j_fwrite_unlocked
0000000000006e89         pop        rbx
0000000000006e8a         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5
0000000000006e91         jmp        j_fwrite_unlocked                           ; fwrite_unlocked
                        ; endp
0000000000006e96         align      32

                     loc_6ea0:
0000000000006ea0         mov        edi, 0x1                                    ; argument "__fd" for method j_tcgetpgrp, CODE XREF=put_indicator+11
0000000000006ea5         mov        byte [used_color], 0x1                      ; used_color
0000000000006eac         call       j_tcgetpgrp                                 ; tcgetpgrp
0000000000006eb1         test       eax, eax
0000000000006eb3         jns        loc_6ec0

0000000000006eb5         call       prep_non_filename_text                      ; prep_non_filename_text
0000000000006eba         jmp        loc_6e7d
0000000000006ebc         align      64

                     loc_6ec0:
0000000000006ec0         mov        edi, 0x1                                    ; CODE XREF=put_indicator+67
0000000000006ec5         call       signal_setup                                ; signal_setup
0000000000006eca         call       prep_non_filename_text                      ; prep_non_filename_text
0000000000006ecf         jmp        loc_6e7d
0000000000006ed1         align      32                                          ; End of unwind block (FDE at 0x1bcc8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32


                     process_signals:
0000000000006ee0         push       rbp                                         ; Begin of unwind block (FDE at 0x1bce4), CODE XREF=print_name_with_quoting+96, print_name_with_quoting+344, print_dir+640
0000000000006ee1         push       rbx
0000000000006ee2         sub        rsp, 0x98
0000000000006ee9         mov        rax, qword [fs:0x28]
0000000000006ef2         mov        qword [rsp+0xa8+var_20], rax
0000000000006efa         xor        eax, eax
0000000000006efc         mov        rbp, rsp
0000000000006eff         jmp        loc_6f59
0000000000006f01         align      8

                     loc_6f08:
0000000000006f08         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fflush_unlocked, stdout@@GLIBC_2.2.5, CODE XREF=process_signals+148, process_signals+174
0000000000006f0f         call       j_fflush_unlocked                           ; fflush_unlocked
0000000000006f14         lea        rsi, qword [caught_signals]                 ; argument "__set" for method j_sigprocmask, caught_signals
0000000000006f1b         xor        edi, edi                                    ; argument "__how" for method j_sigprocmask
0000000000006f1d         mov        rdx, rbp                                    ; argument "__oset" for method j_sigprocmask
0000000000006f20         call       j_sigprocmask                               ; sigprocmask
0000000000006f25         mov        ebx, dword [interrupt_signal]               ; interrupt_signal
0000000000006f2b         mov        eax, dword [stop_signal_count]              ; stop_signal_count
0000000000006f31         test       eax, eax
0000000000006f33         je         loc_6f98

0000000000006f35         sub        eax, 0x1
0000000000006f38         mov        ebx, 0x13
0000000000006f3d         mov        dword [stop_signal_count], eax              ; stop_signal_count

                     loc_6f43:
0000000000006f43         mov        edi, ebx                                    ; argument "__sig" for method j_raise, CODE XREF=process_signals+193
0000000000006f45         call       j_raise                                     ; raise
0000000000006f4a         xor        edx, edx                                    ; argument "__oset" for method j_sigprocmask
0000000000006f4c         mov        rsi, rbp                                    ; argument "__set" for method j_sigprocmask
0000000000006f4f         mov        edi, 0x2                                    ; argument "__how" for method j_sigprocmask
0000000000006f54         call       j_sigprocmask                               ; sigprocmask

                     loc_6f59:
0000000000006f59         mov        eax, dword [interrupt_signal]               ; interrupt_signal, CODE XREF=process_signals+31
0000000000006f5f         test       eax, eax
0000000000006f61         jne        loc_6f6d

0000000000006f63         mov        eax, dword [stop_signal_count]              ; stop_signal_count
0000000000006f69         test       eax, eax
0000000000006f6b         je         loc_6fa8

                     loc_6f6d:
0000000000006f6d         cmp        byte [used_color], 0x0                      ; used_color, CODE XREF=process_signals+129
0000000000006f74         je         loc_6f08

0000000000006f76         lea        rdi, qword [color_indicator]                ; color_indicator
0000000000006f7d         call       put_indicator                               ; put_indicator
0000000000006f82         lea        rdi, qword [qword_220070]                   ; qword_220070
0000000000006f89         call       put_indicator                               ; put_indicator
0000000000006f8e         jmp        loc_6f08
0000000000006f93         align      8

                     loc_6f98:
0000000000006f98         xor        esi, esi                                    ; argument "__handler" for method j_signal, CODE XREF=process_signals+83
0000000000006f9a         mov        edi, ebx                                    ; argument "__sig" for method j_signal
0000000000006f9c         call       j_signal                                    ; signal
0000000000006fa1         jmp        loc_6f43
0000000000006fa3         align      8

                     loc_6fa8:
0000000000006fa8         mov        rax, qword [rsp+0xa8+var_20]                ; CODE XREF=process_signals+139
0000000000006fb0         xor        rax, qword [fs:0x28]
0000000000006fb9         jne        loc_6fc5

0000000000006fbb         add        rsp, 0x98
0000000000006fc2         pop        rbx
0000000000006fc3         pop        rbp
0000000000006fc4         ret
                        ; endp

                     loc_6fc5:
0000000000006fc5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=process_signals+217
                        ; endp
0000000000006fca         align      16                                          ; End of unwind block (FDE at 0x1bce4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_normal_color:
0000000000006fd0         cmp        byte [print_with_color], 0x0                ; Begin of unwind block (FDE at 0x1bd10), print_with_color, CODE XREF=print_file_name_and_frills+34, sub_9280+48
0000000000006fd7         je         loc_6ff0

0000000000006fd9         sub        rsp, 0x8
0000000000006fdd         mov        edi, 0x4
0000000000006fe2         call       is_colored                                  ; is_colored
0000000000006fe7         test       al, al
0000000000006fe9         jne        loc_6ff8

0000000000006feb         add        rsp, 0x8
0000000000006fef         ret
                        ; endp

                     loc_6ff0:
0000000000006ff0         ret                                                    ; CODE XREF=set_normal_color+7
                        ; endp
0000000000006ff2         align      8

                     loc_6ff8:
0000000000006ff8         lea        rdi, qword [color_indicator]                ; color_indicator, CODE XREF=set_normal_color+25
0000000000006fff         call       put_indicator                               ; put_indicator
0000000000007004         lea        rdi, qword [qword_220088+24]                ; 0x2200a0
000000000000700b         call       put_indicator                               ; put_indicator
0000000000007010         lea        rdi, qword [qword_220070]                   ; qword_220070
0000000000007017         add        rsp, 0x8
000000000000701b         jmp        put_indicator                               ; put_indicator
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144


                     quote_name_buf.constprop.54:
0000000000007020         push       r15                                         ; End of unwind block (FDE at 0x1bd10), Begin of unwind block (FDE at 0x1bd30), CODE XREF=quote_name+91, quote_name_width+64
0000000000007022         push       r14
0000000000007024         mov        r14, rdx
0000000000007027         push       r13
0000000000007029         push       r12
000000000000702b         mov        r12, rsi
000000000000702e         push       rbp
000000000000702f         push       rbx
0000000000007030         mov        ebx, ecx
0000000000007032         sub        rsp, 0x68
0000000000007036         mov        r13, qword [rdi]
0000000000007039         mov        qword [rsp+0x98+var_68], rdi
000000000000703e         mov        rdi, rdx
0000000000007041         mov        qword [rsp+0x98+var_78], r8
0000000000007046         mov        rcx, qword [fs:0x28]
000000000000704f         mov        qword [rsp+0x98+var_40], rcx
0000000000007054         xor        ecx, ecx
0000000000007056         mov        qword [rsp+0x98+var_60], r9
000000000000705b         call       get_quoting_style                           ; get_quoting_style
0000000000007060         cmp        eax, 0x2
0000000000007063         setbe      al
0000000000007066         and        al, byte [qmark_funny_chars]                ; qmark_funny_chars
000000000000706c         mov        byte [rsp+0x98+var_69], al
0000000000007070         jne        loc_71d0

0000000000007076         xor        r9d, r9d
0000000000007079         test       ebx, ebx
000000000000707b         je         loc_70f0

                     loc_707d:
000000000000707d         mov        r8, r14                                     ; CODE XREF=quote_name_buf.constprop.54+1124
0000000000007080         mov        rcx, 0xffffffffffffffff
0000000000007087         mov        rdx, r12
000000000000708a         mov        esi, 0x2000
000000000000708f         mov        rdi, r13
0000000000007092         mov        dword [rsp+0x98+var_90], r9d
0000000000007097         call       quotearg_buffer                             ; quotearg_buffer
000000000000709c         cmp        rax, 0x1fff
00000000000070a2         mov        rbx, rax
00000000000070a5         mov        r9d, dword [rsp+0x98+var_90]
00000000000070aa         ja         loc_7438

                     loc_70b0:
00000000000070b0         movzx      eax, byte [r13]                             ; CODE XREF=quote_name_buf.constprop.54+1092
00000000000070b5         mov        byte [rsp+0x98+var_69], 0x1
00000000000070ba         cmp        byte [r12], al
00000000000070be         jne        loc_70da

00000000000070c0         mov        rdi, r12                                    ; argument "__s" for method j_strlen
00000000000070c3         mov        dword [rsp+0x98+var_90], r9d
00000000000070c8         call       j_strlen                                    ; strlen
00000000000070cd         mov        r9d, dword [rsp+0x98+var_90]
00000000000070d2         cmp        rbx, rax
00000000000070d5         setne      byte [rsp+0x98+var_69]

                     loc_70da:
00000000000070da         test       r9d, r9d                                    ; CODE XREF=quote_name_buf.constprop.54+158
00000000000070dd         je         loc_70fe

00000000000070df         mov        rbp, rbx
00000000000070e2         jmp        loc_7203
00000000000070e7         align      16

                     loc_70f0:
00000000000070f0         mov        rdi, r12                                    ; argument "__s" for method j_strlen, CODE XREF=quote_name_buf.constprop.54+91
00000000000070f3         mov        r13, r12
00000000000070f6         call       j_strlen                                    ; strlen
00000000000070fb         mov        rbx, rax

                     loc_70fe:
00000000000070fe         cmp        qword [rsp+0x98+var_78], 0x0                ; CODE XREF=quote_name_buf.constprop.54+189
0000000000007104         je         loc_71b8

000000000000710a         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
000000000000710f         cmp        rax, 0x1
0000000000007113         ja         loc_7318

0000000000007119         lea        r12, qword [r13+rbx]
000000000000711e         cmp        r13, r12
0000000000007121         jae        loc_7472

0000000000007127         call       j___ctype_b_loc                             ; __ctype_b_loc
000000000000712c         xor        ebp, ebp
000000000000712e         mov        rcx, qword [rax]
0000000000007131         mov        rax, r13
0000000000007134         nop        dword [rax]

                     loc_7138:
0000000000007138         movzx      edx, byte [rax]                             ; CODE XREF=quote_name_buf.constprop.54+307
000000000000713b         movzx      edx, word [rcx+rdx*2]
000000000000713f         and        dx, 0x4000
0000000000007144         cmp        dx, 0x1
0000000000007148         sbb        rbp, 0xffffffffffffffff
000000000000714c         add        rax, 0x1
0000000000007150         cmp        r12, rax
0000000000007153         jne        loc_7138

                     loc_7155:
0000000000007155         movzx      eax, byte [align_variable_outer_quotes]     ; align_variable_outer_quotes, CODE XREF=quote_name_buf.constprop.54+1101, quote_name_buf.constprop.54+1108
000000000000715c         test       al, al
000000000000715e         je         loc_7171

                     loc_7160:
0000000000007160         movzx      eax, byte [cwd_some_quoted]                 ; cwd_some_quoted, CODE XREF=quote_name_buf.constprop.54+415, quote_name_buf.constprop.54+749, quote_name_buf.constprop.54+791, quote_name_buf.constprop.54+1005
0000000000007167         xor        eax, 0x1
000000000000716a         or         al, byte [rsp+0x98+var_69]
000000000000716e         xor        eax, 0x1

                     loc_7171:
0000000000007171         mov        rcx, qword [rsp+0x98+var_60]                ; CODE XREF=quote_name_buf.constprop.54+318, quote_name_buf.constprop.54+743, quote_name_buf.constprop.54+785, quote_name_buf.constprop.54+999
0000000000007176         mov        byte [rcx], al
0000000000007178         mov        rax, qword [rsp+0x98+var_78]
000000000000717d         test       rax, rax
0000000000007180         je         loc_7185

0000000000007182         mov        qword [rax], rbp

                     loc_7185:
0000000000007185         mov        rax, qword [rsp+0x98+var_68]                ; CODE XREF=quote_name_buf.constprop.54+352, quote_name_buf.constprop.54+425
000000000000718a         mov        qword [rax], r13
000000000000718d         mov        rax, rbx
0000000000007190         mov        rbx, qword [rsp+0x98+var_40]
0000000000007195         xor        rbx, qword [fs:0x28]
000000000000719e         jne        loc_7479

00000000000071a4         add        rsp, 0x68
00000000000071a8         pop        rbx
00000000000071a9         pop        rbp
00000000000071aa         pop        r12
00000000000071ac         pop        r13
00000000000071ae         pop        r14
00000000000071b0         pop        r15
00000000000071b2         ret
                        ; endp
00000000000071b3         align      8

                     loc_71b8:
00000000000071b8         cmp        byte [align_variable_outer_quotes], 0x0     ; align_variable_outer_quotes, CODE XREF=quote_name_buf.constprop.54+228
00000000000071bf         jne        loc_7160

00000000000071c1         mov        rax, qword [rsp+0x98+var_60]
00000000000071c6         mov        byte [rax], 0x0
00000000000071c9         jmp        loc_7185
00000000000071cb         align      16

                     loc_71d0:
00000000000071d0         test       ebx, ebx                                    ; CODE XREF=quote_name_buf.constprop.54+80
00000000000071d2         jne        loc_747e

00000000000071d8         mov        rdi, r12                                    ; argument "__s" for method j_strlen
00000000000071db         call       j_strlen                                    ; strlen
00000000000071e0         cmp        rax, 0x1fff
00000000000071e6         mov        rbp, rax
00000000000071e9         lea        rdx, qword [rax+1]
00000000000071ed         ja         loc_7418

                     loc_71f3:
00000000000071f3         mov        rsi, r12                                    ; argument "__src" for method j_memcpy, CODE XREF=quote_name_buf.constprop.54+1037
00000000000071f6         mov        rdi, r13                                    ; argument "__dest" for method j_memcpy
00000000000071f9         call       j_memcpy                                    ; memcpy
00000000000071fe         mov        byte [rsp+0x98+var_69], 0x0

                     loc_7203:
0000000000007203         lea        rbx, qword [r13+rbp]                        ; CODE XREF=quote_name_buf.constprop.54+194
0000000000007208         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
000000000000720d         cmp        rax, 0x1
0000000000007211         mov        qword [rsp+0x98+var_90], rbx
0000000000007216         jbe        loc_73d0

000000000000721c         cmp        r13, rbx
000000000000721f         jae        loc_7469

0000000000007225         lea        rax, qword [rsp+0x98+var_4C]
000000000000722a         lea        r12, qword [rsp+0x98+var_48]
000000000000722f         mov        rbx, r13
0000000000007232         mov        r15, r13
0000000000007235         xor        ebp, ebp
0000000000007237         mov        qword [rsp+0x98+var_80], rax
000000000000723c         nop        dword [rax]

                     loc_7240:
0000000000007240         movzx      eax, byte [r15]                             ; CODE XREF=quote_name_buf.constprop.54+725
0000000000007244         cmp        al, 0x3f
0000000000007246         jg         loc_7370

000000000000724c         cmp        al, 0x25
000000000000724e         jge        loc_7388

0000000000007254         lea        edx, dword [rax-0x20]
0000000000007257         cmp        dl, 0x3
000000000000725a         jbe        loc_7388

                     loc_7260:
0000000000007260         mov        qword [rsp+0x98+var_48], 0x0                ; CODE XREF=quote_name_buf.constprop.54+850, quote_name_buf.constprop.54+866
0000000000007269         nop        dword [rax]

                     loc_7270:
0000000000007270         mov        rdx, qword [rsp+0x98+var_90]                ; CODE XREF=quote_name_buf.constprop.54+718
0000000000007275         mov        rdi, qword [rsp+0x98+var_80]
000000000000727a         mov        rcx, r12
000000000000727d         mov        rsi, r15
0000000000007280         lea        r14, qword [rbx+1]
0000000000007284         sub        rdx, r15
0000000000007287         call       rpl_mbrtowc                                 ; rpl_mbrtowc
000000000000728c         cmp        rax, 0xffffffffffffffff
0000000000007290         je         loc_73a0

0000000000007296         cmp        rax, 0xfffffffffffffffe
000000000000729a         je         loc_73b8

00000000000072a0         test       rax, rax
00000000000072a3         mov        edi, dword [rsp+0x98+var_4C]
00000000000072a7         mov        qword [rsp+0x98+var_88], rax
00000000000072ac         je         loc_7350

00000000000072b2         call       j_wcwidth                                   ; wcwidth
00000000000072b7         mov        rdx, qword [rsp+0x98+var_88]
00000000000072bc         test       eax, eax
00000000000072be         lea        rcx, qword [r15+rdx]
00000000000072c2         js         loc_7340

00000000000072c4         mov        rdi, rbx
00000000000072c7         nop        word [rax+rax]

                     loc_72d0:
00000000000072d0         mov        rsi, r15                                    ; CODE XREF=quote_name_buf.constprop.54+698
00000000000072d3         movsb      byte [rdi], byte [rsi]
00000000000072d4         cmp        rsi, rcx
00000000000072d7         mov        r15, rsi
00000000000072da         jne        loc_72d0

00000000000072dc         add        rbx, rdx

                     loc_72df:
00000000000072df         cdqe                                                   ; CODE XREF=quote_name_buf.constprop.54+841
00000000000072e1         add        rbp, rax

                     loc_72e4:
00000000000072e4         mov        rdi, r12                                    ; argument "__ps" for method j_mbsinit, CODE XREF=quote_name_buf.constprop.54+813
00000000000072e7         call       j_mbsinit                                   ; mbsinit
00000000000072ec         test       eax, eax
00000000000072ee         je         loc_7270

                     loc_72f0:
00000000000072f0         cmp        r15, qword [rsp+0x98+var_90]                ; CODE XREF=quote_name_buf.constprop.54+886, quote_name_buf.constprop.54+910
00000000000072f5         jb         loc_7240

00000000000072fb         movzx      eax, byte [align_variable_outer_quotes]     ; align_variable_outer_quotes
0000000000007302         sub        rbx, r13
0000000000007305         test       al, al
0000000000007307         je         loc_7171

000000000000730d         jmp        loc_7160
0000000000007312         align      8

                     loc_7318:
0000000000007318         xor        edx, edx                                    ; CODE XREF=quote_name_buf.constprop.54+243
000000000000731a         mov        rsi, rbx
000000000000731d         mov        rdi, r13
0000000000007320         call       mbsnwidth                                   ; mbsnwidth
0000000000007325         movsxd     rbp, eax
0000000000007328         movzx      eax, byte [align_variable_outer_quotes]     ; align_variable_outer_quotes
000000000000732f         test       al, al
0000000000007331         je         loc_7171

0000000000007337         jmp        loc_7160
000000000000733c         align      64

                     loc_7340:
0000000000007340         mov        byte [rbx], 0x3f                            ; CODE XREF=quote_name_buf.constprop.54+674, quote_name_buf.constprop.54+827
0000000000007343         add        rbp, 0x1
0000000000007347         mov        rbx, r14
000000000000734a         mov        r15, rcx
000000000000734d         jmp        loc_72e4
000000000000734f         align      16

                     loc_7350:
0000000000007350         call       j_wcwidth                                   ; wcwidth, CODE XREF=quote_name_buf.constprop.54+652
0000000000007355         test       eax, eax
0000000000007357         lea        rcx, qword [r15+1]
000000000000735b         js         loc_7340

000000000000735d         movzx      edx, byte [r15]
0000000000007361         mov        r15, rcx
0000000000007364         mov        byte [rbx], dl
0000000000007366         mov        rbx, r14
0000000000007369         jmp        loc_72df
000000000000736e         align      16

                     loc_7370:
0000000000007370         cmp        al, 0x41                                    ; CODE XREF=quote_name_buf.constprop.54+550
0000000000007372         jl         loc_7260

0000000000007378         cmp        al, 0x5f
000000000000737a         jle        loc_7388

000000000000737c         lea        edx, dword [rax-0x61]
000000000000737f         cmp        dl, 0x1d
0000000000007382         ja         loc_7260

                     loc_7388:
0000000000007388         mov        byte [rbx], al                              ; CODE XREF=quote_name_buf.constprop.54+558, quote_name_buf.constprop.54+570, quote_name_buf.constprop.54+858
000000000000738a         add        r15, 0x1
000000000000738e         add        rbp, 0x1
0000000000007392         add        rbx, 0x1
0000000000007396         jmp        loc_72f0
000000000000739b         align      32

                     loc_73a0:
00000000000073a0         add        r15, 0x1                                    ; CODE XREF=quote_name_buf.constprop.54+624
00000000000073a4         mov        byte [rbx], 0x3f
00000000000073a7         add        rbp, 0x1

                     loc_73ab:
00000000000073ab         mov        rbx, r14                                    ; CODE XREF=quote_name_buf.constprop.54+932
00000000000073ae         jmp        loc_72f0
00000000000073b3         align      8

                     loc_73b8:
00000000000073b8         mov        byte [rbx], 0x3f                            ; CODE XREF=quote_name_buf.constprop.54+634
00000000000073bb         add        rbp, 0x1
00000000000073bf         mov        r15, qword [rsp+0x98+var_90]
00000000000073c4         jmp        loc_73ab
00000000000073c6         align      16

                     loc_73d0:
00000000000073d0         cmp        r13, qword [rsp+0x98+var_90]                ; CODE XREF=quote_name_buf.constprop.54+502
00000000000073d5         jae        loc_73fb

00000000000073d7         call       j___ctype_b_loc                             ; __ctype_b_loc
00000000000073dc         mov        rdx, r13
00000000000073df         nop

                     loc_73e0:
00000000000073e0         movzx      esi, byte [rdx]                             ; CODE XREF=quote_name_buf.constprop.54+985
00000000000073e3         mov        rcx, qword [rax]
00000000000073e6         test       byte [rcx+rsi*2+1], 0x40
00000000000073eb         jne        loc_73f0

00000000000073ed         mov        byte [rdx], 0x3f

                     loc_73f0:
00000000000073f0         add        rdx, 0x1                                    ; CODE XREF=quote_name_buf.constprop.54+971
00000000000073f4         cmp        rdx, qword [rsp+0x98+var_90]
00000000000073f9         jne        loc_73e0

                     loc_73fb:
00000000000073fb         movzx      eax, byte [align_variable_outer_quotes]     ; align_variable_outer_quotes, CODE XREF=quote_name_buf.constprop.54+949
0000000000007402         mov        rbx, rbp
0000000000007405         test       al, al
0000000000007407         je         loc_7171

000000000000740d         jmp        loc_7160
0000000000007412         align      8

                     loc_7418:
0000000000007418         mov        rdi, rdx                                    ; CODE XREF=quote_name_buf.constprop.54+461
000000000000741b         mov        qword [rsp+0x98+var_90], rdx
0000000000007420         call       xmalloc                                     ; xmalloc
0000000000007425         mov        rdx, qword [rsp+0x98+var_90]
000000000000742a         mov        r13, rax
000000000000742d         jmp        loc_71f3
0000000000007432         align      8

                     loc_7438:
0000000000007438         lea        r15, qword [rax+1]                          ; CODE XREF=quote_name_buf.constprop.54+138
000000000000743c         mov        rdi, r15
000000000000743f         call       xmalloc                                     ; xmalloc
0000000000007444         mov        r8, r14
0000000000007447         mov        rcx, 0xffffffffffffffff
000000000000744e         mov        rdx, r12
0000000000007451         mov        rsi, r15
0000000000007454         mov        rdi, rax
0000000000007457         mov        r13, rax
000000000000745a         call       quotearg_buffer                             ; quotearg_buffer
000000000000745f         mov        r9d, dword [rsp+0x98+var_90]
0000000000007464         jmp        loc_70b0

                     loc_7469:
0000000000007469         xor        ebx, ebx                                    ; CODE XREF=quote_name_buf.constprop.54+511
000000000000746b         xor        ebp, ebp
000000000000746d         jmp        loc_7155

                     loc_7472:
0000000000007472         xor        ebp, ebp                                    ; CODE XREF=quote_name_buf.constprop.54+257
0000000000007474         jmp        loc_7155

                     loc_7479:
0000000000007479         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quote_name_buf.constprop.54+382
                        ; endp

                     loc_747e:
000000000000747e         mov        r9d, 0x1                                    ; CODE XREF=quote_name_buf.constprop.54+434
0000000000007484         jmp        loc_707d
0000000000007489         align      16                                          ; End of unwind block (FDE at 0x1bd30)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_2048: int8_t, -8264
        ;    var_2050: int64_t, -8272
        ;    var_2051: int8_t, -8273
        ;    var_2060: int64_t, -8288
        ;    var_2068: int64_t, -8296
        ;    var_2070: int64_t, -8304
        ;    var_2078: int64_t, -8312


                     quote_name:
0000000000007490         push       r15                                         ; Begin of unwind block (FDE at 0x1bd80), CODE XREF=print_name_with_quoting+88, print_name_with_quoting+336, print_dir+782
0000000000007492         push       r14
0000000000007494         mov        rax, rdi
0000000000007497         push       r13
0000000000007499         push       r12
000000000000749b         mov        r14, rcx
000000000000749e         push       rbp
000000000000749f         push       rbx
00000000000074a0         mov        rbx, r9
00000000000074a3         mov        r15d, r8d
00000000000074a6         xor        r8d, r8d
00000000000074a9         sub        rsp, 0x2048
00000000000074b0         mov        qword [rsp+0x2078+var_2078], rdi
00000000000074b4         lea        r13, qword [rsp+0x2078+var_2048]
00000000000074b9         lea        rdi, qword [rsp+0x2078+var_2050]
00000000000074be         lea        r9, qword [rsp+0x2078+var_2051]
00000000000074c3         mov        r12, qword [rsp+0x2078+arg_0]
00000000000074cb         mov        rcx, qword [fs:0x28]
00000000000074d4         mov        qword [rsp+0x2078+var_40], rcx
00000000000074dc         xor        ecx, ecx
00000000000074de         mov        ecx, edx
00000000000074e0         mov        rdx, rsi
00000000000074e3         mov        rsi, rax
00000000000074e6         mov        qword [rsp+0x2078+var_2050], r13
00000000000074eb         call       quote_name_buf.constprop.54                 ; quote_name_buf.constprop.54
00000000000074f0         cmp        byte [rsp+0x2078+var_2051], 0x0
00000000000074f5         mov        rbp, rax
00000000000074f8         je         loc_7503

00000000000074fa         test       r15b, r15b
00000000000074fd         jne        loc_7758

                     loc_7503:
0000000000007503         test       r14, r14                                    ; CODE XREF=quote_name+104, quote_name+752
0000000000007506         je         loc_753a

0000000000007508         mov        edi, 0x4
000000000000750d         call       is_colored                                  ; is_colored
0000000000007512         test       al, al
0000000000007514         jne        loc_77c8

                     loc_751a:
000000000000751a         lea        rdi, qword [color_indicator]                ; color_indicator, CODE XREF=quote_name+848
0000000000007521         call       put_indicator                               ; put_indicator
0000000000007526         mov        rdi, r14
0000000000007529         call       put_indicator                               ; put_indicator
000000000000752e         lea        rdi, qword [qword_220070]                   ; qword_220070
0000000000007535         call       put_indicator                               ; put_indicator

                     loc_753a:
000000000000753a         test       r12, r12                                    ; CODE XREF=quote_name+118
000000000000753d         je         loc_7788

0000000000007543         movzx      r14d, byte [align_variable_outer_quotes]    ; align_variable_outer_quotes
000000000000754b         test       r14b, r14b
000000000000754e         jne        loc_7700

                     loc_7554:
0000000000007554         mov        r10, rbp                                    ; CODE XREF=quote_name+635
0000000000007557         xor        r9d, r9d

                     loc_755a:
000000000000755a         mov        rdi, qword [hostname]                       ; hostname, CODE XREF=quote_name+701, quote_name+945, quote_name+1015
0000000000007561         xor        esi, esi
0000000000007563         mov        qword [rsp+0x2078+var_2060], r10
0000000000007568         mov        qword [rsp+0x2078+var_2068], r9
000000000000756d         call       file_escape                                 ; file_escape
0000000000007572         mov        esi, 0x1
0000000000007577         mov        rdi, r12
000000000000757a         mov        r15, rax
000000000000757d         call       file_escape                                 ; file_escape
0000000000007582         cmp        byte [rax], 0x2f
0000000000007585         mov        r11, rax
0000000000007588         lea        rcx, qword [aDired+8]                       ; 0x17bcd
000000000000758f         lea        rax, qword [aLu+34]                         ; 0x178b3
0000000000007596         lea        rsi, qword [aLu+8]                          ; 0x17899
000000000000759d         mov        r8, r11
00000000000075a0         mov        rdx, r15
00000000000075a3         mov        edi, 0x1
00000000000075a8         mov        qword [rsp+0x2078+var_2070], r11
00000000000075ad         cmove      rcx, rax
00000000000075b1         xor        eax, eax
00000000000075b3         call       j___printf_chk                              ; __printf_chk
00000000000075b8         mov        rdi, r15
00000000000075bb         call       sub_3880                                    ; sub_3880
00000000000075c0         mov        r11, qword [rsp+0x2078+var_2070]
00000000000075c5         mov        rdi, r11
00000000000075c8         call       sub_3880                                    ; sub_3880
00000000000075cd         test       rbx, rbx
00000000000075d0         mov        r9, qword [rsp+0x2078+var_2068]
00000000000075d5         mov        r10, qword [rsp+0x2078+var_2060]
00000000000075da         je         loc_779a

                     loc_75e0:
00000000000075e0         cmp        byte [dired], 0x0                           ; dired, CODE XREF=quote_name+772
00000000000075e7         je         loc_760d

00000000000075e9         mov        rdx, qword [rbx+0x18]
00000000000075ed         mov        rax, qword [rbx+0x20]
00000000000075f1         sub        rax, rdx
00000000000075f4         cmp        rax, 0x7
00000000000075f8         jbe        loc_77e8

                     loc_75fe:
00000000000075fe         mov        rax, qword [dired_pos]                      ; dired_pos, CODE XREF=quote_name+893
0000000000007605         mov        qword [rdx], rax
0000000000007608         add        qword [rbx+0x18], 0x8

                     loc_760d:
000000000000760d         mov        rdi, qword [rsp+0x2078+var_2050]            ; CODE XREF=quote_name+343
0000000000007612         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5
0000000000007619         mov        rdx, r10                                    ; argument "__n" for method j_fwrite_unlocked
000000000000761c         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
0000000000007621         add        rdi, r9                                     ; argument "__ptr" for method j_fwrite_unlocked
0000000000007624         call       j_fwrite_unlocked                           ; fwrite_unlocked
0000000000007629         mov        rax, qword [dired_pos]                      ; dired_pos
0000000000007630         add        rax, rbp
0000000000007633         cmp        byte [dired], 0x0                           ; dired
000000000000763a         mov        qword [dired_pos], rax                      ; dired_pos
0000000000007641         je         loc_7660

0000000000007643         mov        rcx, qword [rbx+0x18]
0000000000007647         mov        rdx, qword [rbx+0x20]
000000000000764b         sub        rdx, rcx
000000000000764e         cmp        rdx, 0x7
0000000000007652         jbe        loc_7818

                     loc_7658:
0000000000007658         mov        qword [rcx], rax                            ; CODE XREF=quote_name+928
000000000000765b         add        qword [rbx+0x18], 0x8

                     loc_7660:
0000000000007660         test       r12, r12                                    ; CODE XREF=quote_name+433, quote_name+813
0000000000007663         je         loc_76b0

0000000000007665         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5
000000000000766c         lea        rdi, qword [aLu+28]                         ; argument "__ptr" for method j_fwrite_unlocked, 0x178ad
0000000000007673         mov        edx, 0x6                                    ; argument "__n" for method j_fwrite_unlocked
0000000000007678         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
000000000000767d         call       j_fwrite_unlocked                           ; fwrite_unlocked
0000000000007682         test       r14b, r14b
0000000000007685         je         loc_76b0

0000000000007687         mov        rax, qword [rsp+0x2078+var_2050]
000000000000768c         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000007693         movzx      edx, byte [rax+rbp-1]
0000000000007698         mov        rax, qword [rdi+0x28]
000000000000769c         cmp        rax, qword [rdi+0x30]
00000000000076a0         jae        loc_7850

00000000000076a6         lea        rcx, qword [rax+1]
00000000000076aa         mov        qword [rdi+0x28], rcx
00000000000076ae         mov        byte [rax], dl

                     loc_76b0:
00000000000076b0         mov        rdi, qword [rsp+0x2078+var_2050]            ; CODE XREF=quote_name+467, quote_name+501, quote_name+968
00000000000076b5         cmp        rdi, qword [rsp+0x2078+var_2078]
00000000000076b9         je         loc_76c5

00000000000076bb         cmp        rdi, r13
00000000000076be         je         loc_76c5

00000000000076c0         call       sub_3880                                    ; sub_3880

                     loc_76c5:
00000000000076c5         movzx      eax, byte [rsp+0x2078+var_2051]             ; CODE XREF=quote_name+553, quote_name+558
00000000000076ca         add        rax, rbp
00000000000076cd         mov        rbx, qword [rsp+0x2078+var_40]
00000000000076d5         xor        rbx, qword [fs:0x28]
00000000000076de         jne        loc_788c

00000000000076e4         add        rsp, 0x2048
00000000000076eb         pop        rbx
00000000000076ec         pop        rbp
00000000000076ed         pop        r12
00000000000076ef         pop        r13
00000000000076f1         pop        r14
00000000000076f3         pop        r15
00000000000076f5         ret
                        ; endp
00000000000076f6         align      256

                     loc_7700:
0000000000007700         movzx      r14d, byte [cwd_some_quoted]                ; cwd_some_quoted, CODE XREF=quote_name+190
0000000000007708         test       r14b, r14b
000000000000770b         je         loc_7554

0000000000007711         cmp        byte [rsp+0x2078+var_2051], 0x0
0000000000007716         jne        loc_7838

000000000000771c         mov        rax, qword [rsp+0x2078+var_2050]
0000000000007721         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000007728         lea        r10, qword [rbp-2]
000000000000772c         movzx      edx, byte [rax]
000000000000772f         mov        rax, qword [rdi+0x28]
0000000000007733         cmp        rax, qword [rdi+0x30]
0000000000007737         jae        loc_786f

000000000000773d         lea        rcx, qword [rax+1]
0000000000007741         mov        r9d, 0x1
0000000000007747         mov        qword [rdi+0x28], rcx
000000000000774b         mov        byte [rax], dl
000000000000774d         jmp        loc_755a
0000000000007752         align      8

                     loc_7758:
0000000000007758         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=quote_name+109
000000000000775f         mov        rax, qword [rdi+0x28]
0000000000007763         cmp        rax, qword [rdi+0x30]
0000000000007767         jae        loc_7860

000000000000776d         lea        rdx, qword [rax+1]
0000000000007771         mov        qword [rdi+0x28], rdx
0000000000007775         mov        byte [rax], 0x20

                     loc_7778:
0000000000007778         add        qword [dired_pos], 0x1                      ; dired_pos, CODE XREF=quote_name+986
0000000000007780         jmp        loc_7503
0000000000007785         align      8

                     loc_7788:
0000000000007788         xor        r9d, r9d                                    ; CODE XREF=quote_name+173
000000000000778b         xor        r14d, r14d
000000000000778e         test       rbx, rbx
0000000000007791         mov        r10, rbp
0000000000007794         jne        loc_75e0

                     loc_779a:
000000000000779a         mov        rdi, qword [rsp+0x2078+var_2050]            ; CODE XREF=quote_name+330
000000000000779f         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5
00000000000077a6         mov        rdx, r10                                    ; argument "__n" for method j_fwrite_unlocked
00000000000077a9         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
00000000000077ae         add        rdi, r9                                     ; argument "__ptr" for method j_fwrite_unlocked
00000000000077b1         call       j_fwrite_unlocked                           ; fwrite_unlocked
00000000000077b6         add        qword [dired_pos], rbp                      ; dired_pos
00000000000077bd         jmp        loc_7660
00000000000077c2         align      8

                     loc_77c8:
00000000000077c8         lea        rdi, qword [color_indicator]                ; color_indicator, CODE XREF=quote_name+132
00000000000077cf         call       put_indicator                               ; put_indicator
00000000000077d4         lea        rdi, qword [qword_220070]                   ; qword_220070
00000000000077db         call       put_indicator                               ; put_indicator
00000000000077e0         jmp        loc_751a
00000000000077e5         align      8

                     loc_77e8:
00000000000077e8         mov        esi, 0x8                                    ; argument #2 for method _obstack_newchunk, CODE XREF=quote_name+360
00000000000077ed         mov        rdi, rbx                                    ; argument #1 for method _obstack_newchunk
00000000000077f0         mov        qword [rsp+0x2078+var_2068], r10
00000000000077f5         mov        qword [rsp+0x2078+var_2070], r9
00000000000077fa         call       _obstack_newchunk                           ; _obstack_newchunk
00000000000077ff         mov        rdx, qword [rbx+0x18]
0000000000007803         mov        r10, qword [rsp+0x2078+var_2068]
0000000000007808         mov        r9, qword [rsp+0x2078+var_2070]
000000000000780d         jmp        loc_75fe
0000000000007812         align      8

                     loc_7818:
0000000000007818         mov        esi, 0x8                                    ; argument #2 for method _obstack_newchunk, CODE XREF=quote_name+450
000000000000781d         mov        rdi, rbx                                    ; argument #1 for method _obstack_newchunk
0000000000007820         call       _obstack_newchunk                           ; _obstack_newchunk
0000000000007825         mov        rcx, qword [rbx+0x18]
0000000000007829         mov        rax, qword [dired_pos]                      ; dired_pos
0000000000007830         jmp        loc_7658
0000000000007835         align      8

                     loc_7838:
0000000000007838         mov        r10, rbp                                    ; CODE XREF=quote_name+646
000000000000783b         xor        r9d, r9d
000000000000783e         xor        r14d, r14d
0000000000007841         jmp        loc_755a
0000000000007846         align      16

                     loc_7850:
0000000000007850         movzx      esi, dl                                     ; argument #2 for method j___overflow, CODE XREF=quote_name+528
0000000000007853         call       j___overflow                                ; __overflow
0000000000007858         jmp        loc_76b0
000000000000785d         align      32

                     loc_7860:
0000000000007860         mov        esi, 0x20                                   ; argument #2 for method j___overflow, CODE XREF=quote_name+727
0000000000007865         call       j___overflow                                ; __overflow
000000000000786a         jmp        loc_7778

                     loc_786f:
000000000000786f         movzx      esi, dl                                     ; argument #2 for method j___overflow, CODE XREF=quote_name+679
0000000000007872         mov        qword [rsp+0x2078+var_2070], r10
0000000000007877         call       j___overflow                                ; __overflow
000000000000787c         mov        r9d, 0x1
0000000000007882         mov        r10, qword [rsp+0x2078+var_2070]
0000000000007887         jmp        loc_755a

                     loc_788c:
000000000000788c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quote_name+590
                        ; endp
0000000000007891         align      32                                          ; End of unwind block (FDE at 0x1bd80)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     print_name_with_quoting:
00000000000078a0         push       r15                                         ; Begin of unwind block (FDE at 0x1bdd0), CODE XREF=print_file_name_and_frills+240, print_long_format+911, print_long_format+1327
00000000000078a2         push       r14
00000000000078a4         mov        r15d, esi
00000000000078a7         push       r13
00000000000078a9         push       r12
00000000000078ab         mov        r14, rdi
00000000000078ae         push       rbp
00000000000078af         push       rbx
00000000000078b0         mov        r13, rdx
00000000000078b3         mov        r12, rcx
00000000000078b6         sub        rsp, 0x18
00000000000078ba         test       sil, sil
00000000000078bd         movzx      eax, byte [print_with_color]                ; print_with_color
00000000000078c4         je         loc_7920

00000000000078c6         test       al, al
00000000000078c8         mov        rbp, qword [rdi+8]
00000000000078cc         jne        loc_7a48

                     loc_78d2:
00000000000078d2         mov        edx, dword [r14+0xc4]                       ; CODE XREF=print_name_with_quoting+133, print_name_with_quoting+292
00000000000078d9         mov        rsi, qword [filename_quoting_options]       ; filename_quoting_options
00000000000078e0         sub        rsp, 0x8
00000000000078e4         xor        r15d, 0x1
00000000000078e8         push       qword [r14+0x10]
00000000000078ec         mov        r9, r13
00000000000078ef         movzx      r8d, r15b
00000000000078f3         xor        ecx, ecx
00000000000078f5         mov        rdi, rbp
00000000000078f8         call       quote_name                                  ; quote_name
00000000000078fd         mov        rbx, rax
0000000000007900         call       process_signals                             ; process_signals
0000000000007905         pop        rax
0000000000007906         pop        rdx

                     loc_7907:
0000000000007907         add        rsp, 0x18                                   ; CODE XREF=print_name_with_quoting+366, print_name_with_quoting+396, print_name_with_quoting+414
000000000000790b         mov        rax, rbx
000000000000790e         pop        rbx
000000000000790f         pop        rbp
0000000000007910         pop        r12
0000000000007912         pop        r13
0000000000007914         pop        r14
0000000000007916         pop        r15
0000000000007918         ret
                        ; endp
0000000000007919         align      32

                     loc_7920:
0000000000007920         test       al, al                                      ; CODE XREF=print_name_with_quoting+36
0000000000007922         mov        rbp, qword [rdi]
0000000000007925         je         loc_78d2

0000000000007927         cmp        byte [color_symlink_as_referent], 0x0       ; color_symlink_as_referent
000000000000792e         movzx      edx, byte [rdi+0xb9]
0000000000007935         jne        loc_7b08

                     loc_793b:
000000000000793b         mov        r8d, dword [r14+0x30]                       ; CODE XREF=print_name_with_quoting+618

                     loc_793f:
000000000000793f         movzx      ecx, byte [r14+0xb8]                        ; CODE XREF=print_name_with_quoting+457, print_name_with_quoting+631
0000000000007947         test       cl, cl
0000000000007949         jne        loc_7a92

                     loc_794f:
000000000000794f         mov        ecx, dword [r14+0xa8]                       ; CODE XREF=print_name_with_quoting+492
0000000000007956         lea        rax, qword [filetype_indicator.11085]       ; filetype_indicator.11085
000000000000795d         mov        eax, dword [rax+rcx*4]
0000000000007960         cmp        eax, 0x7
0000000000007963         sete       cl
0000000000007966         cmp        eax, 0x5
0000000000007969         je         loc_7b20

                     loc_796f:
000000000000796f         test       edx, edx                                    ; CODE XREF=print_name_with_quoting+981
0000000000007971         jne        loc_7cec

0000000000007977         test       cl, cl
0000000000007979         je         loc_7cec

000000000000797f         cmp        byte [color_symlink_as_referent], 0x0       ; color_symlink_as_referent
0000000000007986         mov        ecx, 0xd0
000000000000798b         jne        loc_79a7

000000000000798d         mov        edi, 0xd
0000000000007992         call       is_colored                                  ; is_colored
0000000000007997         cmp        al, 0x1
0000000000007999         sbb        rcx, rcx
000000000000799c         and        rcx, 0xffffffffffffffa0
00000000000079a0         add        rcx, 0xd0

                     loc_79a7:
00000000000079a7         lea        rbx, qword [color_indicator]                ; color_indicator, CODE XREF=print_name_with_quoting+235, print_name_with_quoting+468, print_name_with_quoting+549, print_name_with_quoting+565, print_name_with_quoting+581, print_name_with_quoting+606, print_name_with_quoting+726, print_name_with_quoting+780, print_name_with_quoting+838, print_name_with_quoting+867, print_name_with_quoting+922
00000000000079ae         add        rcx, rbx

                     loc_79b1:
00000000000079b1         cmp        qword [rcx+8], 0x0                          ; CODE XREF=print_name_with_quoting+740
00000000000079b6         jne        loc_79cc

00000000000079b8         mov        edi, 0x4
00000000000079bd         call       is_colored                                  ; is_colored
00000000000079c2         test       al, al
00000000000079c4         je         loc_78d2

00000000000079ca         xor        ecx, ecx

                     loc_79cc:
00000000000079cc         mov        rsi, qword [filename_quoting_options]       ; filename_quoting_options, CODE XREF=print_name_with_quoting+278
00000000000079d3         mov        edx, dword [r14+0xc4]
00000000000079da         sub        rsp, 0x8
00000000000079de         xor        r15d, 0x1
00000000000079e2         push       qword [r14+0x10]
00000000000079e6         mov        rdi, rbp
00000000000079e9         mov        r9, r13
00000000000079ec         movzx      r8d, r15b
00000000000079f0         call       quote_name                                  ; quote_name
00000000000079f5         mov        rbx, rax
00000000000079f8         call       process_signals                             ; process_signals
00000000000079fd         call       prep_non_filename_text                      ; prep_non_filename_text
0000000000007a02         mov        rcx, qword [line_length]                    ; line_length
0000000000007a09         pop        rsi
0000000000007a0a         pop        rdi
0000000000007a0b         test       rcx, rcx
0000000000007a0e         je         loc_7907

0000000000007a14         xor        edx, edx
0000000000007a16         mov        rax, r12
0000000000007a19         div        rcx
0000000000007a1c         xor        edx, edx
0000000000007a1e         mov        rsi, rax
0000000000007a21         lea        rax, qword [rbx+r12-1]
0000000000007a26         div        rcx
0000000000007a29         cmp        rsi, rax
0000000000007a2c         je         loc_7907

0000000000007a32         lea        rdi, qword [qword_2200d8+248]               ; 0x2201d0
0000000000007a39         call       put_indicator                               ; put_indicator
0000000000007a3e         jmp        loc_7907
0000000000007a43         align      8

                     loc_7a48:
0000000000007a48         cmp        byte [rdi+0xb9], 0x0                        ; CODE XREF=print_name_with_quoting+44
0000000000007a4f         mov        r8d, dword [rdi+0xac]
0000000000007a56         jne        loc_7a80

0000000000007a58         mov        edi, 0xc
0000000000007a5d         call       is_colored                                  ; is_colored
0000000000007a62         test       al, al
0000000000007a64         mov        edx, 0xffffffff
0000000000007a69         je         loc_793f

0000000000007a6f         mov        ecx, 0xc0
0000000000007a74         jmp        loc_79a7
0000000000007a79         align      128

                     loc_7a80:
0000000000007a80         movzx      ecx, byte [r14+0xb8]                        ; CODE XREF=print_name_with_quoting+438
0000000000007a88         xor        edx, edx
0000000000007a8a         test       cl, cl
0000000000007a8c         je         loc_794f

                     loc_7a92:
0000000000007a92         mov        eax, r8d                                    ; CODE XREF=print_name_with_quoting+169
0000000000007a95         and        eax, 0xf000
0000000000007a9a         cmp        eax, 0x8000
0000000000007a9f         je         loc_7b90

0000000000007aa5         cmp        eax, 0x4000
0000000000007aaa         je         loc_7c10

0000000000007ab0         cmp        eax, 0xa000
0000000000007ab5         je         loc_7c70

0000000000007abb         cmp        eax, aEmptyset                              ; "emptyset"
0000000000007ac0         mov        ecx, 0x80
0000000000007ac5         je         loc_79a7

0000000000007acb         cmp        eax, 0xc000
0000000000007ad0         mov        ecx, 0x90
0000000000007ad5         je         loc_79a7

0000000000007adb         cmp        eax, 0x6000
0000000000007ae0         mov        ecx, 0xa0
0000000000007ae5         je         loc_79a7

0000000000007aeb         cmp        eax, 0x2000
0000000000007af0         mov        ecx, 0xd0
0000000000007af5         mov        ebx, 0xb0
0000000000007afa         cmove      rcx, rbx
0000000000007afe         jmp        loc_79a7
0000000000007b03         align      8

                     loc_7b08:
0000000000007b08         test       dl, dl                                      ; CODE XREF=print_name_with_quoting+149
0000000000007b0a         je         loc_793b

0000000000007b10         mov        r8d, dword [r14+0xac]
0000000000007b17         jmp        loc_793f
0000000000007b1c         align      32

                     loc_7b20:
0000000000007b20         mov        rdi, rbp                                    ; argument "__s" for method j_strlen, CODE XREF=print_name_with_quoting+201, print_name_with_quoting+1029, print_name_with_quoting+1047
0000000000007b23         call       j_strlen                                    ; strlen
0000000000007b28         mov        rbx, qword [color_ext_list]                 ; color_ext_list
0000000000007b2f         mov        rcx, rax
0000000000007b32         test       rbx, rbx
0000000000007b35         je         loc_7b71

0000000000007b37         nop        word [rax+rax]

                     loc_7b40:
0000000000007b40         mov        rdx, qword [rbx]                            ; CODE XREF=print_name_with_quoting+719
0000000000007b43         cmp        rcx, rdx
0000000000007b46         jb         loc_7b68

0000000000007b48         mov        rdi, rcx
0000000000007b4b         mov        rsi, qword [rbx+8]
0000000000007b4f         mov        qword [rsp+0x48+var_40], rcx
0000000000007b54         sub        rdi, rdx
0000000000007b57         add        rdi, rbp
0000000000007b5a         call       c_strncasecmp                               ; c_strncasecmp
0000000000007b5f         test       eax, eax
0000000000007b61         mov        rcx, qword [rsp+0x48+var_40]
0000000000007b66         je         loc_7b80

                     loc_7b68:
0000000000007b68         mov        rbx, qword [rbx+0x20]                       ; CODE XREF=print_name_with_quoting+678
0000000000007b6c         test       rbx, rbx
0000000000007b6f         jne        loc_7b40

                     loc_7b71:
0000000000007b71         mov        ecx, 0x50                                   ; CODE XREF=print_name_with_quoting+661
0000000000007b76         jmp        loc_79a7
0000000000007b7b         align      128

                     loc_7b80:
0000000000007b80         lea        rcx, qword [rbx+0x10]                       ; CODE XREF=print_name_with_quoting+710
0000000000007b84         jmp        loc_79b1
0000000000007b89         align      16

                     loc_7b90:
0000000000007b90         test       r8d, 0x800                                  ; CODE XREF=print_name_with_quoting+511
0000000000007b97         je         loc_7bb8

0000000000007b99         mov        edi, 0x10
0000000000007b9e         call       is_colored                                  ; is_colored
0000000000007ba3         test       al, al
0000000000007ba5         je         loc_7bb8

0000000000007ba7         mov        ecx, 0x100
0000000000007bac         jmp        loc_79a7
0000000000007bb1         align      8

                     loc_7bb8:
0000000000007bb8         test       r8d, 0x400                                  ; CODE XREF=print_name_with_quoting+759, print_name_with_quoting+773
0000000000007bbf         jne        loc_7bf0

                     loc_7bc1:
0000000000007bc1         mov        edi, 0x15                                   ; CODE XREF=print_name_with_quoting+860
0000000000007bc6         call       is_colored                                  ; is_colored
0000000000007bcb         test       al, al
0000000000007bcd         je         loc_7c80

0000000000007bd3         cmp        byte [r14+0xc0], 0x0
0000000000007bdb         je         loc_7c80

0000000000007be1         mov        ecx, 0x150
0000000000007be6         jmp        loc_79a7
0000000000007beb         align      16

                     loc_7bf0:
0000000000007bf0         mov        edi, 0x11                                   ; CODE XREF=print_name_with_quoting+799
0000000000007bf5         call       is_colored                                  ; is_colored
0000000000007bfa         test       al, al
0000000000007bfc         je         loc_7bc1

0000000000007bfe         mov        ecx, 0x110
0000000000007c03         jmp        loc_79a7
0000000000007c08         align      16

                     loc_7c10:
0000000000007c10         mov        eax, r8d                                    ; CODE XREF=print_name_with_quoting+522
0000000000007c13         and        eax, 0x202
0000000000007c18         cmp        eax, 0x202
0000000000007c1d         je         loc_7cd0

                     loc_7c23:
0000000000007c23         test       r8b, 0x2                                    ; CODE XREF=print_name_with_quoting+1095
0000000000007c27         je         loc_7c40

0000000000007c29         mov        edi, 0x13
0000000000007c2e         call       is_colored                                  ; is_colored
0000000000007c33         test       al, al
0000000000007c35         mov        ecx, 0x130
0000000000007c3a         jne        loc_79a7

                     loc_7c40:
0000000000007c40         and        r8d, 0x200                                  ; CODE XREF=print_name_with_quoting+903
0000000000007c47         mov        ecx, 0x60
0000000000007c4c         je         loc_79a7

0000000000007c52         mov        edi, 0x12
0000000000007c57         call       is_colored                                  ; is_colored
0000000000007c5c         cmp        al, 0x1
0000000000007c5e         sbb        rcx, rcx
0000000000007c61         and        cl, 0x40
0000000000007c64         add        rcx, 0x120
0000000000007c6b         jmp        loc_79a7

                     loc_7c70:
0000000000007c70         mov        eax, 0x7                                    ; CODE XREF=print_name_with_quoting+533
0000000000007c75         jmp        loc_796f
0000000000007c7a         align      128

                     loc_7c80:
0000000000007c80         and        r8d, 0x49                                   ; CODE XREF=print_name_with_quoting+813, print_name_with_quoting+827
0000000000007c84         je         loc_7ca0

0000000000007c86         mov        edi, 0xe
0000000000007c8b         call       is_colored                                  ; is_colored
0000000000007c90         test       al, al
0000000000007c92         je         loc_7ca0

0000000000007c94         mov        ecx, 0xe0
0000000000007c99         jmp        loc_79a7
0000000000007c9e         align      32

                     loc_7ca0:
0000000000007ca0         cmp        qword [r14+0x28], 0x1                       ; CODE XREF=print_name_with_quoting+996, print_name_with_quoting+1010
0000000000007ca5         jbe        loc_7b20

0000000000007cab         mov        edi, 0x16
0000000000007cb0         call       is_colored                                  ; is_colored
0000000000007cb5         test       al, al
0000000000007cb7         je         loc_7b20

0000000000007cbd         mov        ecx, 0x160
0000000000007cc2         jmp        loc_79a7
0000000000007cc7         align      16

                     loc_7cd0:
0000000000007cd0         mov        edi, 0x14                                   ; CODE XREF=print_name_with_quoting+893
0000000000007cd5         call       is_colored                                  ; is_colored
0000000000007cda         test       al, al
0000000000007cdc         mov        ecx, 0x140
0000000000007ce1         jne        loc_79a7

0000000000007ce7         jmp        loc_7c23

                     loc_7cec:
0000000000007cec         shl        rax, 0x4                                    ; CODE XREF=print_name_with_quoting+209, print_name_with_quoting+217
0000000000007cf0         mov        rcx, rax
0000000000007cf3         jmp        loc_79a7
0000000000007cf8         align      256                                         ; End of unwind block (FDE at 0x1bdd0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32


                     print_file_name_and_frills:
0000000000007d00         push       rbp                                         ; Begin of unwind block (FDE at 0x1be34), CODE XREF=print_with_separator+70, print_current_files+131, print_current_files+224, sub_90f0+29, sub_9150+202
0000000000007d01         push       rbx
0000000000007d02         mov        rbp, rsi
0000000000007d05         mov        rbx, rdi
0000000000007d08         sub        rsp, 0x2a8
0000000000007d0f         mov        rax, qword [fs:0x28]
0000000000007d18         mov        qword [rsp+0x2b8+var_20], rax
0000000000007d20         xor        eax, eax
0000000000007d22         call       set_normal_color                            ; set_normal_color
0000000000007d27         cmp        byte [print_inode], 0x0                     ; print_inode
0000000000007d2e         je         loc_7d71

0000000000007d30         cmp        byte [rbx+0xb8], 0x0
0000000000007d37         lea        rcx, qword [aLu+6]                          ; 0x17897
0000000000007d3e         je         loc_7d4d

0000000000007d40         mov        rdi, qword [rbx+0x20]
0000000000007d44         test       rdi, rdi
0000000000007d47         jne        loc_7e78

                     loc_7d4d:
0000000000007d4d         xor        edx, edx                                    ; CODE XREF=print_file_name_and_frills+62, print_file_name_and_frills+387
0000000000007d4f         cmp        dword [format], 0x4                         ; format
0000000000007d56         je         loc_7d5e

0000000000007d58         mov        edx, dword [inode_number_width]             ; inode_number_width

                     loc_7d5e:
0000000000007d5e         lea        rsi, qword [aSS_178bf+5]                    ; 0x178c4, CODE XREF=print_file_name_and_frills+86
0000000000007d65         mov        edi, 0x1
0000000000007d6a         xor        eax, eax
0000000000007d6c         call       j___printf_chk                              ; __printf_chk

                     loc_7d71:
0000000000007d71         cmp        byte [print_block_size], 0x0                ; print_block_size, CODE XREF=print_file_name_and_frills+46
0000000000007d78         je         loc_7db2

0000000000007d7a         cmp        byte [rbx+0xb8], 0x0
0000000000007d81         lea        rcx, qword [aLu+6]                          ; 0x17897
0000000000007d88         jne        loc_7e40

0000000000007d8e         xor        edx, edx
0000000000007d90         cmp        dword [format], 0x4                         ; format
0000000000007d97         je         loc_7d9f

                     loc_7d99:
0000000000007d99         mov        edx, dword [block_size_width]               ; block_size_width, CODE XREF=print_file_name_and_frills+362

                     loc_7d9f:
0000000000007d9f         lea        rsi, qword [aSS_178bf+5]                    ; 0x178c4, CODE XREF=print_file_name_and_frills+151, print_file_name_and_frills+368
0000000000007da6         mov        edi, 0x1
0000000000007dab         xor        eax, eax
0000000000007dad         call       j___printf_chk                              ; __printf_chk

                     loc_7db2:
0000000000007db2         cmp        byte [print_scontext], 0x0                  ; print_scontext, CODE XREF=print_file_name_and_frills+120
0000000000007db9         je         loc_7de6

0000000000007dbb         xor        edx, edx
0000000000007dbd         cmp        dword [format], 0x4                         ; format
0000000000007dc4         mov        rcx, qword [rbx+0xb0]
0000000000007dcb         je         loc_7dd3

0000000000007dcd         mov        edx, dword [scontext_width]                 ; scontext_width

                     loc_7dd3:
0000000000007dd3         lea        rsi, qword [aSS_178bf+5]                    ; 0x178c4, CODE XREF=print_file_name_and_frills+203
0000000000007dda         mov        edi, 0x1
0000000000007ddf         xor        eax, eax
0000000000007de1         call       j___printf_chk                              ; __printf_chk

                     loc_7de6:
0000000000007de6         mov        rcx, rbp                                    ; CODE XREF=print_file_name_and_frills+185
0000000000007de9         xor        edx, edx
0000000000007deb         xor        esi, esi
0000000000007ded         mov        rdi, rbx
0000000000007df0         call       print_name_with_quoting                     ; print_name_with_quoting
0000000000007df5         mov        rbp, rax
0000000000007df8         mov        eax, dword [indicator_style]                ; indicator_style
0000000000007dfe         test       eax, eax
0000000000007e00         je         loc_7e1d

0000000000007e02         movzx      edi, byte [rbx+0xb8]
0000000000007e09         mov        edx, dword [rbx+0xa8]
0000000000007e0f         mov        esi, dword [rbx+0x30]
0000000000007e12         call       print_type_indicator                        ; print_type_indicator
0000000000007e17         movzx      eax, al
0000000000007e1a         add        rbp, rax

                     loc_7e1d:
0000000000007e1d         mov        rbx, qword [rsp+0x2b8+var_20]               ; CODE XREF=print_file_name_and_frills+256
0000000000007e25         xor        rbx, qword [fs:0x28]
0000000000007e2e         mov        rax, rbp
0000000000007e31         jne        loc_7e88

0000000000007e33         add        rsp, 0x2a8
0000000000007e3a         pop        rbx
0000000000007e3b         pop        rbp
0000000000007e3c         ret
                        ; endp
0000000000007e3d         align      64

                     loc_7e40:
0000000000007e40         mov        edx, dword [human_output_opts]              ; human_output_opts, CODE XREF=print_file_name_and_frills+136
0000000000007e46         mov        rdi, qword [rbx+0x58]
0000000000007e4a         mov        ecx, 0x200
0000000000007e4f         mov        r8, qword [output_block_size]               ; output_block_size
0000000000007e56         mov        rsi, rsp
0000000000007e59         call       human_readable                              ; human_readable
0000000000007e5e         xor        edx, edx
0000000000007e60         cmp        dword [format], 0x4                         ; format
0000000000007e67         mov        rcx, rax
0000000000007e6a         jne        loc_7d99

0000000000007e70         jmp        loc_7d9f
0000000000007e75         align      8

                     loc_7e78:
0000000000007e78         mov        rsi, rsp                                    ; CODE XREF=print_file_name_and_frills+71
0000000000007e7b         call       umaxtostr                                   ; umaxtostr
0000000000007e80         mov        rcx, rax
0000000000007e83         jmp        loc_7d4d

                     loc_7e88:
0000000000007e88         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=print_file_name_and_frills+305
                        ; endp
0000000000007e8d         align      16                                          ; End of unwind block (FDE at 0x1be34)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_E88: int8_t, -3720
        ;    var_1278: int8_t, -4728
        ;    var_1298: int8_t, -4760
        ;    var_1299: int8_t, -4761
        ;    var_129A: int8_t, -4762
        ;    var_12A3: int64_t, -4771
        ;    var_12A4: int8_t, -4772
        ;    var_12D8: int32_t, -4824
        ;    var_12E8: int8_t, -4840
        ;    var_1318: int32_t, -4888
        ;    var_1328: int8_t, -4904
        ;    var_1330: int64_t, -4912
        ;    var_1338: int64_t, -4920
        ;    var_1340: int64_t, -4928
        ;    var_1350: int64_t, -4944
        ;    var_1354: int32_t, -4948


                     print_long_format:
0000000000007e90         push       r15                                         ; Begin of unwind block (FDE at 0x1be64), CODE XREF=sub_9280+64
0000000000007e92         push       r14
0000000000007e94         push       r13
0000000000007e96         push       r12
0000000000007e98         push       rbp
0000000000007e99         push       rbx
0000000000007e9a         mov        rbp, rdi
0000000000007e9d         sub        rsp, 0x1328
0000000000007ea4         mov        rax, qword [fs:0x28]
0000000000007ead         mov        qword [rsp+0x1358+var_40], rax
0000000000007eb5         xor        eax, eax
0000000000007eb7         cmp        byte [rdi+0xb8], 0x0
0000000000007ebe         je         loc_8280

0000000000007ec4         lea        r13, qword [rsp+0x1358+var_12A4]
0000000000007ecc         lea        rdi, qword [rdi+0x18]
0000000000007ed0         mov        rsi, r13
0000000000007ed3         call       filemodestring                              ; filemodestring
0000000000007ed8         cmp        byte [any_has_acl], 0x0                     ; any_has_acl
0000000000007edf         jne        loc_82d2

                     loc_7ee5:
0000000000007ee5         mov        byte [rsp+0x1358+var_129A], 0x0             ; CODE XREF=print_long_format+1084

                     loc_7eed:
0000000000007eed         mov        eax, dword [time_type]                      ; time_type, CODE XREF=print_long_format+1108, print_long_format+1880
0000000000007ef3         cmp        eax, 0x1
0000000000007ef6         je         loc_8308

                     loc_7efc:
0000000000007efc         jb         loc_8348                                    ; CODE XREF=print_long_format+1131

0000000000007f02         cmp        eax, 0x2
0000000000007f05         jne        loc_8868

0000000000007f0b         mov        rax, qword [rbp+0x68]
0000000000007f0f         mov        rdx, qword [rbp+0x60]
0000000000007f13         mov        qword [rsp+0x1358+var_1330], rax
0000000000007f18         mov        qword [rsp+0x1358+var_1338], rdx

                     loc_7f1d:
0000000000007f1d         cmp        byte [print_inode], 0x0                     ; print_inode, CODE XREF=print_long_format+1226
0000000000007f24         movzx      edx, byte [rbp+0xb8]
0000000000007f2b         je         loc_8334

                     loc_7f31:
0000000000007f31         test       dl, dl                                      ; CODE XREF=print_long_format+1182
0000000000007f33         lea        r9, qword [aLu+6]                           ; 0x17897
0000000000007f3a         je         loc_7f49

0000000000007f3c         mov        rdi, qword [rbp+0x20]
0000000000007f40         test       rdi, rdi
0000000000007f43         jne        loc_8608

                     loc_7f49:
0000000000007f49         lea        r12, qword [rsp+0x1358+var_E88]             ; CODE XREF=print_long_format+170, print_long_format+1928
0000000000007f51         mov        r8d, dword [inode_number_width]             ; inode_number_width
0000000000007f58         lea        rcx, qword [aSS_178bf+5]                    ; 0x178c4
0000000000007f5f         mov        edx, 0xe3b
0000000000007f64         mov        esi, 0x1
0000000000007f69         xor        eax, eax
0000000000007f6b         mov        rdi, r12
0000000000007f6e         mov        rbx, r12
0000000000007f71         call       j___sprintf_chk                             ; __sprintf_chk

                     loc_7f76:
0000000000007f76         mov        eax, dword [rbx]                            ; CODE XREF=print_long_format+252
0000000000007f78         add        rbx, 0x4
0000000000007f7c         lea        edx, dword [rax-0x1010101]
0000000000007f82         not        eax
0000000000007f84         and        edx, eax
0000000000007f86         and        edx, 0x80808080
0000000000007f8c         je         loc_7f76

0000000000007f8e         mov        eax, edx
0000000000007f90         shr        eax, 0x10
0000000000007f93         test       edx, 0x8080
0000000000007f99         cmove      edx, eax
0000000000007f9c         lea        rax, qword [rbx+2]
0000000000007fa0         cmove      rbx, rax
0000000000007fa4         mov        eax, edx
0000000000007fa6         add        al, dl
0000000000007fa8         movzx      edx, byte [rbp+0xb8]
0000000000007faf         sbb        rbx, 0x3

                     loc_7fb3:
0000000000007fb3         cmp        byte [print_block_size], 0x0                ; print_block_size, CODE XREF=print_long_format+1199
0000000000007fba         je         loc_8037

0000000000007fbc         test       dl, dl
0000000000007fbe         lea        r15, qword [aLu+6]                          ; 0x17897
0000000000007fc5         jne        loc_8680

                     loc_7fcb:
0000000000007fcb         mov        r14d, dword [block_size_width]              ; block_size_width, CODE XREF=print_long_format+2070
0000000000007fd2         xor        esi, esi
0000000000007fd4         mov        rdi, r15
0000000000007fd7         call       gnu_mbswidth                                ; gnu_mbswidth
0000000000007fdc         sub        r14d, eax
0000000000007fdf         test       r14d, r14d
0000000000007fe2         mov        eax, r14d
0000000000007fe5         jle        loc_8500

0000000000007feb         sub        eax, 0x1
0000000000007fee         mov        rdx, rax
0000000000007ff1         lea        rcx, qword [rbx+rax+1]
0000000000007ff6         mov        rax, rbx
0000000000007ff9         nop        dword [rax]

                     loc_8000:
0000000000008000         add        rax, 0x1                                    ; CODE XREF=print_long_format+379, DATA XREF=get_type_indicator+12, print_name_with_quoting+506, gobble_file.constprop.52+402, strmode+13
0000000000008004         mov        byte [rax-1], 0x20
0000000000008008         cmp        rcx, rax
000000000000800b         jne        loc_8000

000000000000800d         movsxd     rax, edx
0000000000008010         lea        rdx, qword [rbx+rax+1]

                     loc_8015:
0000000000008015         add        r15, 0x1                                    ; CODE XREF=print_long_format+1651
0000000000008019         movzx      eax, byte [r15-1]
000000000000801e         lea        rbx, qword [rdx+1]
0000000000008022         test       al, al
0000000000008024         mov        byte [rbx-1], al
0000000000008027         jne        loc_8500

000000000000802d         mov        byte [rdx], 0x20
0000000000008030         movzx      edx, byte [rbp+0xb8]

                     loc_8037:
0000000000008037         test       dl, dl                                      ; CODE XREF=print_long_format+298
0000000000008039         lea        rax, qword [aLu+6]                          ; 0x17897
0000000000008040         jne        loc_84e8

                     loc_8046:
0000000000008046         sub        rsp, 0x8                                    ; CODE XREF=print_long_format+1641
000000000000804a         mov        r9d, dword [nlink_width]                    ; nlink_width
0000000000008051         lea        rcx, qword [aSS]                            ; "%s %*s "
0000000000008058         push       rax
0000000000008059         mov        r8, r13
000000000000805c         mov        rdi, rbx
000000000000805f         mov        rdx, 0xffffffffffffffff
0000000000008066         mov        esi, 0x1
000000000000806b         xor        eax, eax
000000000000806d         call       j___sprintf_chk                             ; __sprintf_chk
0000000000008072         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
0000000000008075         call       j_strlen                                    ; strlen
000000000000807a         add        rbx, rax
000000000000807d         cmp        byte [dired], 0x0                           ; dired
0000000000008084         pop        r8
0000000000008086         pop        r9
0000000000008088         jne        loc_84b8

                     loc_808e:
000000000000808e         cmp        byte [print_owner], 0x0                     ; print_owner, CODE XREF=print_long_format+1613
0000000000008095         jne        loc_80b0

0000000000008097         cmp        byte [print_group], 0x0                     ; print_group
000000000000809e         jne        loc_80b0

00000000000080a0         cmp        byte [print_author], 0x0                    ; print_author
00000000000080a7         je         loc_85f0

00000000000080ad         nop        dword [rax]

                     loc_80b0:
00000000000080b0         mov        rsi, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fputs_unlocked, stdout@@GLIBC_2.2.5, CODE XREF=print_long_format+517, print_long_format+526, print_long_format+1901
00000000000080b7         mov        rdi, r12                                    ; argument "__s" for method j_fputs_unlocked
00000000000080ba         sub        rbx, r12
00000000000080bd         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000080c2         add        qword [dired_pos], rbx                      ; dired_pos
00000000000080c9         cmp        byte [print_owner], 0x0                     ; print_owner
00000000000080d0         jne        loc_85a0

                     loc_80d6:
00000000000080d6         cmp        byte [print_group], 0x0                     ; print_group, CODE XREF=print_long_format+1829
00000000000080dd         jne        loc_8550

                     loc_80e3:
00000000000080e3         cmp        byte [print_author], 0x0                    ; print_author, CODE XREF=print_long_format+1797
00000000000080ea         jne        loc_8530

                     loc_80f0:
00000000000080f0         cmp        byte [print_scontext], 0x0                  ; print_scontext, CODE XREF=print_long_format+1717
00000000000080f7         mov        rbx, r12
00000000000080fa         jne        loc_8510

                     loc_8100:
0000000000008100         cmp        byte [rbp+0xb8], 0x0                        ; CODE XREF=print_long_format+1684, print_long_format+1895
0000000000008107         je         loc_8360

000000000000810d         mov        eax, dword [rbp+0x30]
0000000000008110         and        eax, 0xb000
0000000000008115         cmp        eax, 0x2000
000000000000811a         je         loc_86b0

0000000000008120         mov        rdi, qword [rbp+0x48]
0000000000008124         mov        r8, qword [file_output_block_size]          ; file_output_block_size
000000000000812b         lea        rsi, qword [rsp+0x1358+var_1278]
0000000000008133         mov        edx, dword [file_human_output_opts]         ; file_human_output_opts
0000000000008139         mov        ecx, 0x1
000000000000813e         call       human_readable                              ; human_readable
0000000000008143         mov        r14, rax

                     loc_8146:
0000000000008146         mov        r13d, dword [file_size_width]               ; file_size_width, CODE XREF=print_long_format+1239
000000000000814d         xor        esi, esi
000000000000814f         mov        rdi, r14
0000000000008152         call       gnu_mbswidth                                ; gnu_mbswidth
0000000000008157         sub        r13d, eax
000000000000815a         test       r13d, r13d
000000000000815d         mov        eax, r13d
0000000000008160         jle        loc_8185

0000000000008162         sub        eax, 0x1
0000000000008165         mov        rdx, rax
0000000000008168         lea        rcx, qword [rbx+rax+1]
000000000000816d         mov        rax, rbx

                     loc_8170:
0000000000008170         add        rax, 0x1                                    ; CODE XREF=print_long_format+747
0000000000008174         mov        byte [rax-1], 0x20
0000000000008178         cmp        rax, rcx
000000000000817b         jne        loc_8170

000000000000817d         movsxd     rax, edx
0000000000008180         lea        rbx, qword [rbx+rax+1]

                     loc_8185:
0000000000008185         add        r14, 0x1                                    ; CODE XREF=print_long_format+720, print_long_format+1251
0000000000008189         movzx      eax, byte [r14-1]
000000000000818e         lea        r13, qword [rbx+1]
0000000000008192         test       al, al
0000000000008194         mov        byte [r13-1], al
0000000000008198         jne        loc_8370

000000000000819e         mov        byte [rbx], 0x20

                     loc_81a1:
00000000000081a1         mov        byte [r13], 0x1                             ; CODE XREF=print_long_format+2265
00000000000081a6         cmp        byte [rbp+0xb8], 0x0
00000000000081ad         lea        rbx, qword [aLu+6]                          ; 0x17897
00000000000081b4         jne        loc_83f0

                     loc_81ba:
00000000000081ba         mov        r8d, dword [width.10774]                    ; width.10774, CODE XREF=print_long_format+2539, print_long_format+2566
00000000000081c1         test       r8d, r8d
00000000000081c4         js         loc_8780

                     loc_81ca:
00000000000081ca         lea        rcx, qword [aSS_178bf+5]                    ; 0x178c4, CODE XREF=print_long_format+2392, print_long_format+2411
00000000000081d1         mov        r9, rbx
00000000000081d4         mov        rdx, 0xffffffffffffffff
00000000000081db         mov        esi, 0x1
00000000000081e0         mov        rdi, r13
00000000000081e3         xor        eax, eax
00000000000081e5         call       j___sprintf_chk                             ; __sprintf_chk
00000000000081ea         mov        rdi, r13                                    ; argument "__s" for method j_strlen
00000000000081ed         call       j_strlen                                    ; strlen
00000000000081f2         lea        rbx, qword [r13+rax]

                     loc_81f7:
00000000000081f7         mov        rsi, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fputs_unlocked, stdout@@GLIBC_2.2.5, CODE XREF=print_long_format+1865
00000000000081fe         mov        rdi, r12                                    ; argument "__s" for method j_fputs_unlocked
0000000000008201         sub        rbx, r12
0000000000008204         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000008209         lea        rdx, qword [dired_obstack]                  ; dired_obstack
0000000000008210         xor        esi, esi
0000000000008212         mov        rcx, rbx
0000000000008215         mov        rdi, rbp
0000000000008218         add        qword [dired_pos], rbx                      ; dired_pos
000000000000821f         call       print_name_with_quoting                     ; print_name_with_quoting
0000000000008224         mov        edx, dword [rbp+0xa8]
000000000000822a         mov        r12, rax
000000000000822d         cmp        edx, 0x6
0000000000008230         je         loc_8380

0000000000008236         mov        eax, dword [indicator_style]                ; indicator_style
000000000000823c         test       eax, eax
000000000000823e         je         loc_824f

0000000000008240         movzx      edi, byte [rbp+0xb8]
0000000000008247         mov        esi, dword [rbp+0x30]
000000000000824a         call       print_type_indicator                        ; print_type_indicator

                     loc_824f:
000000000000824f         mov        rax, qword [rsp+0x1358+var_40]              ; CODE XREF=print_long_format+942, print_long_format+1269, print_long_format+1340, print_long_format+1364
0000000000008257         xor        rax, qword [fs:0x28]
0000000000008260         jne        loc_8863

0000000000008266         add        rsp, 0x1328
000000000000826d         pop        rbx
000000000000826e         pop        rbp
000000000000826f         pop        r12
0000000000008271         pop        r13
0000000000008273         pop        r14
0000000000008275         pop        r15
0000000000008277         ret
                        ; endp
0000000000008278         align      128

                     loc_8280:
0000000000008280         mov        eax, dword [rdi+0xa8]                       ; CODE XREF=print_long_format+46
0000000000008286         lea        rdx, qword [filetype_letter]                ; "?pcdb-lswd"
000000000000828d         cmp        byte [any_has_acl], 0x0                     ; any_has_acl
0000000000008294         lea        r13, qword [rsp+0x1358+var_12A4]
000000000000829c         mov        r10d, 0x3f3f
00000000000082a2         movzx      eax, byte [rdx+rax]
00000000000082a6         mov        byte [rsp+0x1358+var_12A4], al
00000000000082ad         movabs     rax, 0x3f3f3f3f3f3f3f3f
00000000000082b7         mov        qword [rsp+0x1358+var_12A3], rax
00000000000082bf         mov        word [r13+9], r10w
00000000000082c4         mov        byte [rsp+0x1358+var_1299], 0x0
00000000000082cc         je         loc_7ee5

                     loc_82d2:
00000000000082d2         mov        eax, dword [rbp+0xbc]                       ; CODE XREF=print_long_format+79
00000000000082d8         cmp        eax, 0x1
00000000000082db         je         loc_85e0

00000000000082e1         cmp        eax, 0x2
00000000000082e4         jne        loc_7eed

00000000000082ea         mov        eax, dword [time_type]                      ; time_type
00000000000082f0         mov        byte [rsp+0x1358+var_129A], 0x2b
00000000000082f8         cmp        eax, 0x1
00000000000082fb         jne        loc_7efc

0000000000008301         nop        dword [rax]

                     loc_8308:
0000000000008308         cmp        byte [print_inode], 0x0                     ; print_inode, CODE XREF=print_long_format+102
000000000000830f         mov        rdx, qword [rbp+0x80]
0000000000008316         mov        rax, qword [rbp+0x88]
000000000000831d         mov        qword [rsp+0x1358+var_1338], rdx
0000000000008322         movzx      edx, byte [rbp+0xb8]
0000000000008329         mov        qword [rsp+0x1358+var_1330], rax
000000000000832e         jne        loc_7f31

                     loc_8334:
0000000000008334         lea        r12, qword [rsp+0x1358+var_E88]             ; CODE XREF=print_long_format+155
000000000000833c         mov        rbx, r12
000000000000833f         jmp        loc_7fb3
0000000000008344         align      8

                     loc_8348:
0000000000008348         mov        rax, qword [rbp+0x78]                       ; CODE XREF=loc_7efc
000000000000834c         mov        rdx, qword [rbp+0x70]
0000000000008350         mov        qword [rsp+0x1358+var_1330], rax
0000000000008355         mov        qword [rsp+0x1358+var_1338], rdx
000000000000835a         jmp        loc_7f1d
000000000000835f         align      32

                     loc_8360:
0000000000008360         lea        r14, qword [aLu+6]                          ; 0x17897, CODE XREF=print_long_format+631
0000000000008367         jmp        loc_8146
000000000000836c         align      16

                     loc_8370:
0000000000008370         mov        rbx, r13                                    ; CODE XREF=print_long_format+776
0000000000008373         jmp        loc_8185
0000000000008378         align      128

                     loc_8380:
0000000000008380         cmp        qword [rbp+8], 0x0                          ; CODE XREF=print_long_format+928
0000000000008385         je         loc_824f

000000000000838b         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5
0000000000008392         lea        rdi, qword [aSS_178bf+10]                   ; argument "__ptr" for method j_fwrite_unlocked, 0x178c9
0000000000008399         mov        edx, 0x4                                    ; argument "__n" for method j_fwrite_unlocked
000000000000839e         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
00000000000083a3         call       j_fwrite_unlocked                           ; fwrite_unlocked
00000000000083a8         lea        rcx, qword [rbx+r12+4]
00000000000083ad         xor        edx, edx
00000000000083af         mov        esi, 0x1
00000000000083b4         mov        rdi, rbp
00000000000083b7         add        qword [dired_pos], 0x4                      ; dired_pos
00000000000083bf         call       print_name_with_quoting                     ; print_name_with_quoting
00000000000083c4         mov        edx, dword [indicator_style]                ; indicator_style
00000000000083ca         test       edx, edx
00000000000083cc         je         loc_824f

00000000000083d2         mov        esi, dword [rbp+0xac]
00000000000083d8         xor        edx, edx
00000000000083da         mov        edi, 0x1
00000000000083df         call       print_type_indicator                        ; print_type_indicator
00000000000083e4         jmp        loc_824f
00000000000083e9         align      16

                     loc_83f0:
00000000000083f0         lea        rbx, qword [rsp+0x1358+var_1328]            ; CODE XREF=print_long_format+804
00000000000083f5         mov        rdi, qword [localtz]                        ; localtz
00000000000083fc         lea        rsi, qword [rsp+0x1358+var_1338]
0000000000008401         mov        rdx, rbx
0000000000008404         call       localtime_rz                                ; localtime_rz
0000000000008409         test       rax, rax
000000000000840c         je         loc_85c0

0000000000008412         mov        rcx, qword [current_time]                   ; current_time
0000000000008419         mov        rdx, qword [rsp+0x1358+var_1338]
000000000000841e         cmp        rcx, rdx
0000000000008421         jl         loc_8620

0000000000008427         mov        rdi, qword [qword_221378]                   ; qword_221378
000000000000842e         mov        r9, qword [rsp+0x1358+var_1330]
0000000000008433         jg         loc_8800

0000000000008439         cmp        edi, r9d
000000000000843c         js         loc_8620

0000000000008442         lea        rax, qword [rcx-0xf0c2ac]
0000000000008449         cmp        rax, rdx
000000000000844c         jl         loc_866d

0000000000008452         mov        eax, 0x0
0000000000008457         jle        loc_8820

000000000000845d         nop        dword [rax]

                     loc_8460:
0000000000008460         cmp        byte [use_abformat], 0x0                    ; use_abformat, CODE XREF=print_long_format+1996, print_long_format+2007, print_long_format+2021, print_long_format+2431, print_long_format+2442, print_long_format+2453
0000000000008467         mov        r8, qword [localtz]                         ; localtz
000000000000846e         je         loc_8770

0000000000008474         lea        rdx, qword [rax+rax]
0000000000008478         add        rax, rdx
000000000000847b         movsxd     rdx, dword [rsp+0x1358+var_1318]
0000000000008480         lea        rdx, qword [rdx+rax*4]
0000000000008484         lea        rax, qword [abformat]                       ; abformat
000000000000848b         shl        rdx, 0x7
000000000000848f         add        rdx, rax

                     loc_8492:
0000000000008492         mov        rcx, rbx                                    ; CODE XREF=print_long_format+2283
0000000000008495         mov        esi, 0x3e9
000000000000849a         mov        rdi, r13
000000000000849d         call       nstrftime                                   ; nstrftime
00000000000084a2         test       rax, rax
00000000000084a5         je         loc_85c0

00000000000084ab         add        r13, rax
00000000000084ae         jmp        loc_85cb
00000000000084b3         align      8

                     loc_84b8:
00000000000084b8         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5, CODE XREF=print_long_format+504
00000000000084bf         lea        rdi, qword [aSS+8]                          ; argument "__ptr" for method j_fwrite_unlocked, 0x178bc
00000000000084c6         mov        edx, 0x2                                    ; argument "__n" for method j_fwrite_unlocked
00000000000084cb         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
00000000000084d0         call       j_fwrite_unlocked                           ; fwrite_unlocked
00000000000084d5         add        qword [dired_pos], 0x2                      ; dired_pos
00000000000084dd         jmp        loc_808e
00000000000084e2         align      8

                     loc_84e8:
00000000000084e8         mov        rdi, qword [rbp+0x28]                       ; CODE XREF=print_long_format+432
00000000000084ec         lea        rsi, qword [rsp+0x1358+var_1278]
00000000000084f4         call       umaxtostr                                   ; umaxtostr
00000000000084f9         jmp        loc_8046
00000000000084fe         align      256

                     loc_8500:
0000000000008500         mov        rdx, rbx                                    ; CODE XREF=print_long_format+341, print_long_format+407
0000000000008503         jmp        loc_8015
0000000000008508         align      16

                     loc_8510:
0000000000008510         mov        rdi, qword [rbp+0xb0]                       ; CODE XREF=print_long_format+618
0000000000008517         mov        edx, dword [scontext_width]                 ; scontext_width
000000000000851d         xor        esi, esi
000000000000851f         call       format_user_or_group                        ; format_user_or_group
0000000000008524         jmp        loc_8100
0000000000008529         align      16

                     loc_8530:
0000000000008530         movzx      edx, byte [rbp+0xb8]                        ; CODE XREF=print_long_format+602
0000000000008537         mov        edi, dword [rbp+0x34]
000000000000853a         mov        esi, dword [author_width]                   ; author_width
0000000000008540         call       format_user                                 ; format_user
0000000000008545         jmp        loc_80f0
000000000000854a         align      16

                     loc_8550:
0000000000008550         cmp        byte [rbp+0xb8], 0x0                        ; CODE XREF=print_long_format+589
0000000000008557         mov        edx, dword [group_width]                    ; group_width
000000000000855d         lea        rdi, qword [aLu+6]                          ; 0x17897
0000000000008564         mov        esi, dword [rbp+0x38]
0000000000008567         je         loc_8590

0000000000008569         xor        edi, edi
000000000000856b         cmp        byte [numeric_ids], 0x0                     ; numeric_ids
0000000000008572         jne        loc_8590

0000000000008574         mov        edi, esi
0000000000008576         mov        qword [rsp+0x1358+var_1350], rsi
000000000000857b         mov        dword [rsp+0x1358+var_1354], edx
000000000000857f         call       getgroup                                    ; getgroup
0000000000008584         mov        rsi, qword [rsp+0x1358+var_1350]
0000000000008589         mov        edx, dword [rsp+0x1358+var_1354]
000000000000858d         mov        rdi, rax

                     loc_8590:
0000000000008590         call       format_user_or_group                        ; format_user_or_group, CODE XREF=print_long_format+1751, print_long_format+1762
0000000000008595         jmp        loc_80e3
000000000000859a         align      32

                     loc_85a0:
00000000000085a0         movzx      edx, byte [rbp+0xb8]                        ; CODE XREF=print_long_format+576
00000000000085a7         mov        edi, dword [rbp+0x34]
00000000000085aa         mov        esi, dword [owner_width]                    ; owner_width
00000000000085b0         call       format_user                                 ; format_user
00000000000085b5         jmp        loc_80d6
00000000000085ba         align      64

                     loc_85c0:
00000000000085c0         cmp        byte [r13], 0x0                             ; CODE XREF=print_long_format+1404, print_long_format+1557
00000000000085c5         jne        loc_886d

                     loc_85cb:
00000000000085cb         mov        ecx, 0x20                                   ; CODE XREF=print_long_format+1566
00000000000085d0         lea        rbx, qword [r13+1]
00000000000085d4         mov        word [r13], cx
00000000000085d9         jmp        loc_81f7
00000000000085de         align      32

                     loc_85e0:
00000000000085e0         mov        byte [rsp+0x1358+var_129A], 0x2e            ; CODE XREF=print_long_format+1099
00000000000085e8         jmp        loc_7eed
00000000000085ed         align      16

                     loc_85f0:
00000000000085f0         cmp        byte [print_scontext], 0x0                  ; print_scontext, CODE XREF=print_long_format+535
00000000000085f7         je         loc_8100

00000000000085fd         jmp        loc_80b0
0000000000008602         align      8

                     loc_8608:
0000000000008608         lea        rsi, qword [rsp+0x1358+var_1278]            ; CODE XREF=print_long_format+179
0000000000008610         call       umaxtostr                                   ; umaxtostr
0000000000008615         mov        r9, rax
0000000000008618         jmp        loc_7f49
000000000000861d         align      32

                     loc_8620:
0000000000008620         lea        rdi, qword [current_time]                   ; current_time, CODE XREF=print_long_format+1425, print_long_format+1452
0000000000008627         call       gettime                                     ; gettime
000000000000862c         mov        rcx, qword [current_time]                   ; current_time
0000000000008633         mov        rdx, qword [rsp+0x1358+var_1338]
0000000000008638         mov        rdi, qword [qword_221378]                   ; qword_221378
000000000000863f         mov        r9, qword [rsp+0x1358+var_1330]
0000000000008644         lea        rsi, qword [rcx-0xf0c2ac]
000000000000864b         cmp        rsi, rdx
000000000000864e         jge        loc_8815

                     loc_8654:
0000000000008654         cmp        rdx, rcx                                    ; CODE XREF=print_long_format+2459
0000000000008657         mov        eax, 0x1
000000000000865c         jl         loc_8460

0000000000008662         mov        eax, 0x0
0000000000008667         jg         loc_8460

                     loc_866d:
000000000000866d         mov        eax, r9d                                    ; CODE XREF=print_long_format+1468
0000000000008670         sub        eax, edi
0000000000008672         shr        eax, 0x1f
0000000000008675         jmp        loc_8460
000000000000867a         align      128

                     loc_8680:
0000000000008680         mov        rdi, qword [rbp+0x58]                       ; CODE XREF=print_long_format+309
0000000000008684         mov        r8, qword [output_block_size]               ; output_block_size
000000000000868b         lea        rsi, qword [rsp+0x1358+var_1278]
0000000000008693         mov        edx, dword [human_output_opts]              ; human_output_opts
0000000000008699         mov        ecx, 0x200
000000000000869e         call       human_readable                              ; human_readable
00000000000086a3         mov        r15, rax
00000000000086a6         jmp        loc_7fcb
00000000000086ab         align      16

                     loc_86b0:
00000000000086b0         mov        edx, dword [major_device_number_width]      ; major_device_number_width, CODE XREF=print_long_format+650
00000000000086b6         mov        eax, dword [minor_device_number_width]      ; minor_device_number_width
00000000000086bc         lea        rsi, qword [rsp+0x1358+var_1278]
00000000000086c4         mov        r13d, dword [file_size_width]               ; file_size_width
00000000000086cb         lea        eax, dword [rdx+rax+2]
00000000000086cf         sub        r13d, eax
00000000000086d2         mov        rax, qword [rbp+0x40]
00000000000086d6         movzx      edx, al
00000000000086d9         shr        rax, 0xc
00000000000086dd         mov        rdi, rax
00000000000086e0         xor        dil, dil
00000000000086e3         or         edi, edx
00000000000086e5         call       umaxtostr                                   ; umaxtostr
00000000000086ea         mov        r15, rax
00000000000086ed         mov        rax, qword [rbp+0x40]
00000000000086f1         lea        rsi, qword [rsp+0x1358+var_1298]
00000000000086f9         mov        r14d, dword [minor_device_number_width]     ; minor_device_number_width
0000000000008700         mov        rdi, rax
0000000000008703         shr        rax, 0x20
0000000000008707         shr        rdi, 0x8
000000000000870b         mov        edx, edi
000000000000870d         mov        rdi, rax
0000000000008710         and        edx, 0xfff
0000000000008716         and        edi, 0xfffff000
000000000000871c         or         edi, edx
000000000000871e         call       umaxtostr                                   ; umaxtostr
0000000000008723         test       r13d, r13d
0000000000008726         mov        r8d, 0x0
000000000000872c         push       r15
000000000000872e         cmovns     r8d, r13d
0000000000008732         add        r8d, dword [major_device_number_width]      ; major_device_number_width
0000000000008739         push       r14
000000000000873b         lea        rcx, qword [aSS_178bf]                      ; "%*s, %*s "
0000000000008742         mov        r9, rax
0000000000008745         mov        esi, 0x1
000000000000874a         mov        rdi, rbx
000000000000874d         mov        rdx, 0xffffffffffffffff
0000000000008754         xor        eax, eax
0000000000008756         call       j___sprintf_chk                             ; __sprintf_chk
000000000000875b         movsxd     rax, dword [file_size_width]                ; file_size_width
0000000000008762         pop        rsi
0000000000008763         pop        rdi
0000000000008764         lea        r13, qword [rbx+rax+1]
0000000000008769         jmp        loc_81a1
000000000000876e         align      16

                     loc_8770:
0000000000008770         lea        rdx, qword [long_time_format]               ; long_time_format, CODE XREF=print_long_format+1502
0000000000008777         mov        rdx, qword [rdx+rax*8]
000000000000877b         jmp        loc_8492

                     loc_8780:
0000000000008780         lea        r15, qword [rsp+0x1358+var_12E8]            ; CODE XREF=print_long_format+820
0000000000008785         mov        rdi, qword [localtz]                        ; localtz
000000000000878c         lea        rsi, qword [rsp+0x1358+var_1340]
0000000000008791         mov        qword [rsp+0x1358+var_1340], 0x0
000000000000879a         mov        rdx, r15
000000000000879d         call       localtime_rz                                ; localtime_rz
00000000000087a2         test       rax, rax
00000000000087a5         je         loc_87de

00000000000087a7         cmp        byte [use_abformat], 0x0                    ; use_abformat
00000000000087ae         mov        r8, qword [localtz]                         ; localtz
00000000000087b5         mov        rdx, qword [long_time_format]               ; long_time_format
00000000000087bc         jne        loc_8830

                     loc_87be:
00000000000087be         lea        r14, qword [rsp+0x1358+var_1278]            ; CODE XREF=print_long_format+2486
00000000000087c6         xor        r9d, r9d
00000000000087c9         mov        rcx, r15
00000000000087cc         mov        esi, 0x3e9
00000000000087d1         mov        rdi, r14
00000000000087d4         call       nstrftime                                   ; nstrftime
00000000000087d9         test       rax, rax
00000000000087dc         jne        loc_884b

                     loc_87de:
00000000000087de         mov        r8d, dword [width.10774]                    ; width.10774, CODE XREF=print_long_format+2325

                     loc_87e5:
00000000000087e5         test       r8d, r8d                                    ; CODE XREF=print_long_format+2513
00000000000087e8         jns        loc_81ca

00000000000087ee         mov        dword [width.10774], 0x0                    ; width.10774
00000000000087f8         xor        r8d, r8d
00000000000087fb         jmp        loc_81ca

                     loc_8800:
0000000000008800         lea        rsi, qword [rcx-0xf0c2ac]                   ; CODE XREF=print_long_format+1443
0000000000008807         mov        eax, 0x1
000000000000880c         cmp        rsi, rdx
000000000000880f         jl         loc_8460

                     loc_8815:
0000000000008815         xor        eax, eax                                    ; CODE XREF=print_long_format+1982
0000000000008817         cmp        rsi, rdx
000000000000881a         jg         loc_8460

                     loc_8820:
0000000000008820         xor        eax, eax                                    ; CODE XREF=print_long_format+1479
0000000000008822         cmp        edi, r9d
0000000000008825         jns        loc_8460

000000000000882b         jmp        loc_8654

                     loc_8830:
0000000000008830         movsxd     rdx, dword [rsp+0x1358+var_12D8]            ; CODE XREF=print_long_format+2348
0000000000008838         lea        rax, qword [abformat]                       ; abformat
000000000000883f         shl        rdx, 0x7
0000000000008843         add        rdx, rax
0000000000008846         jmp        loc_87be

                     loc_884b:
000000000000884b         xor        edx, edx                                    ; CODE XREF=print_long_format+2380
000000000000884d         mov        rsi, rax
0000000000008850         mov        rdi, r14
0000000000008853         call       mbsnwidth                                   ; mbsnwidth
0000000000008858         mov        r8d, eax
000000000000885b         mov        dword [width.10774], eax                    ; width.10774
0000000000008861         jmp        loc_87e5

                     loc_8863:
0000000000008863         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=print_long_format+976
                        ; endp

                     loc_8868:
0000000000008868         call       j_abort                                     ; abort, CODE XREF=print_long_format+117
                        ; endp

                     loc_886d:
000000000000886d         cmp        byte [rbp+0xb8], 0x0                        ; CODE XREF=print_long_format+1845
0000000000008874         lea        rbx, qword [aLu+6]                          ; 0x17897
000000000000887b         je         loc_81ba

0000000000008881         mov        rdi, qword [rsp+0x1358+var_1338]
0000000000008886         lea        rsi, qword [rsp+0x1358+var_1298]
000000000000888e         call       imaxtostr                                   ; imaxtostr
0000000000008893         mov        rbx, rax
0000000000008896         jmp        loc_81ba
000000000000889b         align      32                                          ; End of unwind block (FDE at 0x1be64)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_2028: int8_t, -8232
        ;    var_2030: int64_t, -8240
        ;    var_2038: int64_t, -8248
        ;    var_2039: int8_t, -8249


                     quote_name_width:
00000000000088a0         push       rbp                                         ; Begin of unwind block (FDE at 0x1bed8), CODE XREF=length_of_file_name_and_frills+125
00000000000088a1         push       rbx
00000000000088a2         mov        rbp, rdi
00000000000088a5         mov        ecx, edx
00000000000088a7         mov        rdx, rsi
00000000000088aa         mov        rsi, rbp
00000000000088ad         sub        rsp, 0x2038
00000000000088b4         lea        rbx, qword [rsp+0x2048+var_2028]
00000000000088b9         lea        rdi, qword [rsp+0x2048+var_2038]
00000000000088be         lea        r9, qword [rsp+0x2048+var_2039]
00000000000088c3         lea        r8, qword [rsp+0x2048+var_2030]
00000000000088c8         mov        rax, qword [fs:0x28]
00000000000088d1         mov        qword [rsp+0x2048+var_20], rax
00000000000088d9         xor        eax, eax
00000000000088db         mov        qword [rsp+0x2048+var_2038], rbx
00000000000088e0         call       quote_name_buf.constprop.54                 ; quote_name_buf.constprop.54
00000000000088e5         mov        rdi, qword [rsp+0x2048+var_2038]
00000000000088ea         cmp        rdi, rbx
00000000000088ed         je         loc_88f9

00000000000088ef         cmp        rdi, rbp
00000000000088f2         je         loc_88f9

00000000000088f4         call       sub_3880                                    ; sub_3880

                     loc_88f9:
00000000000088f9         movzx      eax, byte [rsp+0x2048+var_2039]             ; CODE XREF=quote_name_width+77, quote_name_width+82
00000000000088fe         add        rax, qword [rsp+0x2048+var_2030]
0000000000008903         mov        rcx, qword [rsp+0x2048+var_20]
000000000000890b         xor        rcx, qword [fs:0x28]
0000000000008914         jne        loc_8920

0000000000008916         add        rsp, 0x2038
000000000000891d         pop        rbx
000000000000891e         pop        rbp
000000000000891f         ret
                        ; endp

                     loc_8920:
0000000000008920         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quote_name_width+116
                        ; endp
0000000000008925         align      16                                          ; End of unwind block (FDE at 0x1bed8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32


                     length_of_file_name_and_frills:
0000000000008930         push       rbp                                         ; Begin of unwind block (FDE at 0x1bf04), CODE XREF=calculate_columns+435, print_with_separator+112, print_current_files+109, print_current_files+232, sub_9150+169
0000000000008931         push       rbx
0000000000008932         mov        rbp, rdi
0000000000008935         sub        rsp, 0x2a8
000000000000893c         mov        rax, qword [fs:0x28]
0000000000008945         mov        qword [rsp+0x2b8+var_20], rax
000000000000894d         xor        eax, eax
000000000000894f         cmp        byte [print_inode], 0x0                     ; print_inode
0000000000008956         je         loc_8a08

000000000000895c         cmp        dword [format], 0x4                         ; format
0000000000008963         je         loc_8aa0

0000000000008969         movsxd     rbx, dword [inode_number_width]             ; inode_number_width
0000000000008970         add        rbx, 0x1
0000000000008974         cmp        byte [print_block_size], 0x0                ; print_block_size
000000000000897b         je         loc_8a88

                     loc_8981:
0000000000008981         movsxd     rax, dword [block_size_width]               ; block_size_width, CODE XREF=length_of_file_name_and_frills+238
0000000000008988         add        rax, 0x1

                     loc_898c:
000000000000898c         add        rbx, rax                                    ; CODE XREF=length_of_file_name_and_frills+256, length_of_file_name_and_frills+304

                     loc_898f:
000000000000898f         cmp        byte [print_scontext], 0x0                  ; print_scontext, CODE XREF=length_of_file_name_and_frills+225
0000000000008996         jne        loc_8a68

                     loc_899c:
000000000000899c         mov        edx, dword [rbp+0xc4]                       ; CODE XREF=length_of_file_name_and_frills+335, length_of_file_name_and_frills+353
00000000000089a2         mov        rsi, qword [filename_quoting_options]       ; filename_quoting_options
00000000000089a9         mov        rdi, qword [rbp]
00000000000089ad         call       quote_name_width                            ; quote_name_width
00000000000089b2         add        rbx, rax
00000000000089b5         mov        eax, dword [indicator_style]                ; indicator_style
00000000000089bb         test       eax, eax
00000000000089bd         je         loc_89df

00000000000089bf         movzx      edi, byte [rbp+0xb8]
00000000000089c6         mov        edx, dword [rbp+0xa8]
00000000000089cc         mov        esi, dword [rbp+0x30]
00000000000089cf         call       get_type_indicator                          ; get_type_indicator
00000000000089d4         test       al, al
00000000000089d6         setne      al
00000000000089d9         movzx      eax, al
00000000000089dc         add        rbx, rax

                     loc_89df:
00000000000089df         mov        rcx, qword [rsp+0x2b8+var_20]               ; CODE XREF=length_of_file_name_and_frills+141
00000000000089e7         xor        rcx, qword [fs:0x28]
00000000000089f0         mov        rax, rbx
00000000000089f3         jne        loc_8ad2

00000000000089f9         add        rsp, 0x2a8
0000000000008a00         pop        rbx
0000000000008a01         pop        rbp
0000000000008a02         ret
                        ; endp
0000000000008a03         align      8

                     loc_8a08:
0000000000008a08         xor        ebx, ebx                                    ; CODE XREF=length_of_file_name_and_frills+38

                     loc_8a0a:
0000000000008a0a         cmp        byte [print_block_size], 0x0                ; print_block_size, CODE XREF=length_of_file_name_and_frills+392
0000000000008a11         je         loc_898f

0000000000008a17         cmp        dword [format], 0x4                         ; format
0000000000008a1e         jne        loc_8981

0000000000008a24         cmp        byte [rbp+0xb8], 0x0
0000000000008a2b         mov        eax, 0x2
0000000000008a30         je         loc_898c

0000000000008a36         mov        rdi, qword [rbp+0x58]
0000000000008a3a         mov        r8, qword [output_block_size]               ; output_block_size
0000000000008a41         mov        rsi, rsp
0000000000008a44         mov        edx, dword [human_output_opts]              ; human_output_opts
0000000000008a4a         mov        ecx, 0x200
0000000000008a4f         call       human_readable                              ; human_readable
0000000000008a54         mov        rdi, rax                                    ; argument "__s" for method j_strlen
0000000000008a57         call       j_strlen                                    ; strlen
0000000000008a5c         add        rax, 0x1
0000000000008a60         jmp        loc_898c
0000000000008a65         align      8

                     loc_8a68:
0000000000008a68         cmp        dword [format], 0x4                         ; format, CODE XREF=length_of_file_name_and_frills+102
0000000000008a6f         je         loc_8ac0

                     loc_8a71:
0000000000008a71         movsxd     rax, dword [scontext_width]                 ; scontext_width, CODE XREF=length_of_file_name_and_frills+351
0000000000008a78         add        rax, 0x1

                     loc_8a7c:
0000000000008a7c         add        rbx, rax                                    ; CODE XREF=length_of_file_name_and_frills+416
0000000000008a7f         jmp        loc_899c
0000000000008a84         align      8

                     loc_8a88:
0000000000008a88         cmp        byte [print_scontext], 0x0                  ; print_scontext, CODE XREF=length_of_file_name_and_frills+75
0000000000008a8f         jne        loc_8a71

0000000000008a91         jmp        loc_899c
0000000000008a96         align      32

                     loc_8aa0:
0000000000008aa0         mov        rdi, qword [rdi+0x20]                       ; CODE XREF=length_of_file_name_and_frills+51
0000000000008aa4         mov        rsi, rsp
0000000000008aa7         call       umaxtostr                                   ; umaxtostr
0000000000008aac         mov        rdi, rax                                    ; argument "__s" for method j_strlen
0000000000008aaf         call       j_strlen                                    ; strlen
0000000000008ab4         lea        rbx, qword [rax+1]
0000000000008ab8         jmp        loc_8a0a
0000000000008abd         align      64

                     loc_8ac0:
0000000000008ac0         mov        rdi, qword [rbp+0xb0]                       ; argument "__s" for method j_strlen, CODE XREF=length_of_file_name_and_frills+319
0000000000008ac7         call       j_strlen                                    ; strlen
0000000000008acc         add        rax, 0x1
0000000000008ad0         jmp        loc_8a7c

                     loc_8ad2:
0000000000008ad2         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=length_of_file_name_and_frills+195
                        ; endp
0000000000008ad7         align      32                                          ; End of unwind block (FDE at 0x1bf04)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     calculate_columns:
0000000000008ae0         mov        r9, qword [cwd_n_used]                      ; Begin of unwind block (FDE at 0x1bf30), cwd_n_used, CODE XREF=print_current_files+72, sub_9150+19
0000000000008ae7         mov        rcx, qword [max_idx]                        ; max_idx
0000000000008aee         push       r14
0000000000008af0         push       r13
0000000000008af2         push       r12
0000000000008af4         push       rbp
0000000000008af5         mov        r12d, edi
0000000000008af8         cmp        r9, rcx
0000000000008afb         push       rbx
0000000000008afc         mov        rbx, rcx
0000000000008aff         cmovbe     rbx, r9
0000000000008b03         cmp        rbx, qword [column_info_alloc.11173]        ; column_info_alloc.11173
0000000000008b0a         jbe        loc_8c29

0000000000008b10         mov        rax, rcx
0000000000008b13         mov        rdi, qword [column_info]                    ; column_info
0000000000008b1a         shr        rax, 0x1
0000000000008b1d         cmp        rbx, rax
0000000000008b20         jb         loc_8d90

0000000000008b26         mov        edx, 0x18
0000000000008b2b         xor        esi, esi
0000000000008b2d         mov        rax, rdx
0000000000008b30         mul        rcx
0000000000008b33         jo         loc_8dc7

                     loc_8b39:
0000000000008b39         test       rax, rax                                    ; CODE XREF=calculate_columns+748
0000000000008b3c         js         loc_8dd1

0000000000008b42         test       rsi, rsi
0000000000008b45         jne        loc_8dd1

0000000000008b4b         lea        rsi, qword [rcx+rcx*2]
0000000000008b4f         shl        rsi, 0x3                                    ; argument #2 for method xrealloc
0000000000008b53         call       xrealloc                                    ; xrealloc
0000000000008b58         mov        rbp, qword [max_idx]                        ; max_idx
0000000000008b5f         mov        qword [column_info], rax                    ; column_info

                     loc_8b66:
0000000000008b66         mov        rax, qword [column_info_alloc.11173]        ; column_info_alloc.11173, CODE XREF=calculate_columns+738
0000000000008b6d         mov        rdi, rbp
0000000000008b70         sub        rdi, rax
0000000000008b73         add        rax, 0x1
0000000000008b77         add        rax, rbp
0000000000008b7a         mov        rcx, rdi
0000000000008b7d         mov        rsi, rax
0000000000008b80         setb       al
0000000000008b83         movzx      eax, al
0000000000008b86         imul       rcx, rsi
0000000000008b8a         test       rax, rax
0000000000008b8d         jne        loc_8dd1

0000000000008b93         xor        edx, edx
0000000000008b95         mov        rax, rcx
0000000000008b98         div        rdi
0000000000008b9b         cmp        rsi, rax
0000000000008b9e         jne        loc_8dd1

0000000000008ba4         mov        edx, 0x8
0000000000008ba9         shr        rcx, 0x1
0000000000008bac         xor        esi, esi
0000000000008bae         mov        rax, rdx
0000000000008bb1         mul        rcx
0000000000008bb4         jo         loc_8dd6

                     loc_8bba:
0000000000008bba         test       rax, rax                                    ; CODE XREF=calculate_columns+763
0000000000008bbd         js         loc_8dd1

0000000000008bc3         test       rsi, rsi
0000000000008bc6         jne        loc_8dd1

0000000000008bcc         lea        rdi, qword [rcx*8]                          ; argument #1 for method xmalloc
0000000000008bd4         call       xmalloc                                     ; xmalloc
0000000000008bd9         mov        rdx, qword [column_info_alloc.11173]        ; column_info_alloc.11173
0000000000008be0         cmp        rbp, rdx
0000000000008be3         jbe        loc_8c1b

0000000000008be5         mov        rcx, qword [column_info]                    ; column_info
0000000000008bec         lea        rsi, qword [rdx+rdx*2]
0000000000008bf0         lea        rdx, qword [0x8+rdx*8]
0000000000008bf8         lea        rcx, qword [rcx+rsi*8+0x10]
0000000000008bfd         lea        rsi, qword [0x8+rbp*8]
0000000000008c05         nop        dword [rax]

                     loc_8c08:
0000000000008c08         mov        qword [rcx], rax                            ; CODE XREF=calculate_columns+313
0000000000008c0b         add        rax, rdx
0000000000008c0e         add        rdx, 0x8
0000000000008c12         add        rcx, 0x18
0000000000008c16         cmp        rsi, rdx
0000000000008c19         jne        loc_8c08

                     loc_8c1b:
0000000000008c1b         mov        r9, qword [cwd_n_used]                      ; cwd_n_used, CODE XREF=calculate_columns+259
0000000000008c22         mov        qword [column_info_alloc.11173], rbp        ; column_info_alloc.11173

                     loc_8c29:
0000000000008c29         test       rbx, rbx                                    ; CODE XREF=calculate_columns+42
0000000000008c2c         je         loc_8c79

0000000000008c2e         mov        rdi, qword [column_info]                    ; column_info
0000000000008c35         lea        r8, qword [rbx+rbx*2+3]
0000000000008c3a         xor        esi, esi
0000000000008c3c         mov        edx, 0x3
0000000000008c41         nop        dword [rax]

                     loc_8c48:
0000000000008c48         mov        rax, qword [rdi+rdx*8-8]                    ; CODE XREF=calculate_columns+407
0000000000008c4d         add        rsi, 0x8
0000000000008c51         mov        byte [rdi+rdx*8-0x18], 0x1
0000000000008c56         mov        qword [rdi+rdx*8-0x10], rdx
0000000000008c5b         lea        rcx, qword [rax+rsi]
0000000000008c5f         nop

                     loc_8c60:
0000000000008c60         mov        qword [rax], 0x3                            ; CODE XREF=calculate_columns+398
0000000000008c67         add        rax, 0x8
0000000000008c6b         cmp        rcx, rax
0000000000008c6e         jne        loc_8c60

0000000000008c70         add        rdx, 0x3
0000000000008c74         cmp        r8, rdx
0000000000008c77         jne        loc_8c48

                     loc_8c79:
0000000000008c79         test       r9, r9                                      ; CODE XREF=calculate_columns+332
0000000000008c7c         je         loc_8d4d

0000000000008c82         xor        ebp, ebp
0000000000008c84         nop        dword [rax]

                     loc_8c88:
0000000000008c88         mov        rax, qword [sorted_file]                    ; sorted_file, CODE XREF=calculate_columns+615
0000000000008c8f         mov        rdi, qword [rax+rbp*8]                      ; argument #1 for method length_of_file_name_and_frills
0000000000008c93         call       length_of_file_name_and_frills              ; length_of_file_name_and_frills
0000000000008c98         test       rbx, rbx
0000000000008c9b         mov        r10, rax
0000000000008c9e         mov        rdi, qword [cwd_n_used]                     ; cwd_n_used
0000000000008ca5         je         loc_8d40

0000000000008cab         mov        r14, qword [line_length]                    ; line_length
0000000000008cb2         mov        rcx, qword [column_info]                    ; column_info
0000000000008cb9         xor        esi, esi
0000000000008cbb         lea        r11, qword [rax+2]
0000000000008cbf         lea        r13, qword [rdi-1]
0000000000008cc3         jmp        loc_8d21
0000000000008cc5         align      8

                     loc_8cc8:
0000000000008cc8         lea        rax, qword [r13+r8]                         ; CODE XREF=calculate_columns+589
0000000000008ccd         xor        edx, edx
0000000000008ccf         div        r8
0000000000008cd2         xor        edx, edx
0000000000008cd4         mov        r9, rax
0000000000008cd7         mov        rax, rbp
0000000000008cda         div        r9
0000000000008cdd         mov        r9, rax

                     loc_8ce0:
0000000000008ce0         mov        rdx, qword [rcx+0x10]                       ; CODE XREF=calculate_columns+602
0000000000008ce4         cmp        r9, rsi
0000000000008ce7         mov        rax, r10
0000000000008cea         cmovne     rax, r11
0000000000008cee         lea        rsi, qword [rdx+r9*8]
0000000000008cf2         mov        rdx, qword [rsi]
0000000000008cf5         cmp        rdx, rax
0000000000008cf8         jae        loc_8d15

0000000000008cfa         mov        r9, qword [rcx+8]
0000000000008cfe         sub        r9, rdx
0000000000008d01         mov        rdx, r9
0000000000008d04         add        rdx, rax
0000000000008d07         mov        qword [rcx+8], rdx
0000000000008d0b         mov        qword [rsi], rax
0000000000008d0e         cmp        qword [rcx+8], r14
0000000000008d12         setb       byte [rcx]

                     loc_8d15:
0000000000008d15         add        rcx, 0x18                                   ; CODE XREF=calculate_columns+536, calculate_columns+584
0000000000008d19         cmp        rbx, r8
0000000000008d1c         mov        rsi, r8
0000000000008d1f         je         loc_8d40

                     loc_8d21:
0000000000008d21         cmp        byte [rcx], 0x0                             ; CODE XREF=calculate_columns+483
0000000000008d24         lea        r8, qword [rsi+1]
0000000000008d28         je         loc_8d15

0000000000008d2a         test       r12b, r12b
0000000000008d2d         jne        loc_8cc8

0000000000008d2f         mov        rax, rbp
0000000000008d32         xor        edx, edx
0000000000008d34         div        r8
0000000000008d37         mov        r9, rdx
0000000000008d3a         jmp        loc_8ce0
0000000000008d3c         align      64

                     loc_8d40:
0000000000008d40         add        rbp, 0x1                                    ; CODE XREF=calculate_columns+453, calculate_columns+575
0000000000008d44         cmp        rbp, rdi
0000000000008d47         jb         loc_8c88

                     loc_8d4d:
0000000000008d4d         cmp        rbx, 0x1                                    ; CODE XREF=calculate_columns+412
0000000000008d51         jbe        loc_8d84

0000000000008d53         mov        rdx, qword [column_info]                    ; column_info
0000000000008d5a         lea        rax, qword [rbx+rbx*2]
0000000000008d5e         shl        rax, 0x3
0000000000008d62         cmp        byte [rdx+rax-0x18], 0x0
0000000000008d67         jne        loc_8d84

0000000000008d69         lea        rax, qword [rdx+rax-0x30]
0000000000008d6e         jmp        loc_8d7a

                     loc_8d70:
0000000000008d70         sub        rax, 0x18                                   ; CODE XREF=calculate_columns+674
0000000000008d74         cmp        byte [rax+0x18], 0x0
0000000000008d78         jne        loc_8d84

                     loc_8d7a:
0000000000008d7a         sub        rbx, 0x1                                    ; CODE XREF=calculate_columns+654
0000000000008d7e         cmp        rbx, 0x1
0000000000008d82         jne        loc_8d70

                     loc_8d84:
0000000000008d84         mov        rax, rbx                                    ; CODE XREF=calculate_columns+625, calculate_columns+647, calculate_columns+664
0000000000008d87         pop        rbx
0000000000008d88         pop        rbp
0000000000008d89         pop        r12
0000000000008d8b         pop        r13
0000000000008d8d         pop        r14
0000000000008d8f         ret
                        ; endp

                     loc_8d90:
0000000000008d90         mov        edx, 0x30                                   ; CODE XREF=calculate_columns+64
0000000000008d95         xor        ecx, ecx
0000000000008d97         mov        rax, rdx
0000000000008d9a         mul        rbx
0000000000008d9d         jo         loc_8de0

                     loc_8d9f:
0000000000008d9f         test       rax, rax                                    ; CODE XREF=calculate_columns+773
0000000000008da2         js         loc_8dd1

0000000000008da4         test       rcx, rcx
0000000000008da7         jne        loc_8dd1

0000000000008da9         lea        rbp, qword [rbx+rbx]
0000000000008dad         lea        rsi, qword [rbp+rbx]
0000000000008db2         shl        rsi, 0x4                                    ; argument #2 for method xrealloc
0000000000008db6         call       xrealloc                                    ; xrealloc
0000000000008dbb         mov        qword [column_info], rax                    ; column_info
0000000000008dc2         jmp        loc_8b66

                     loc_8dc7:
0000000000008dc7         mov        esi, 0x1                                    ; CODE XREF=calculate_columns+83
0000000000008dcc         jmp        loc_8b39

                     loc_8dd1:
0000000000008dd1         call       xalloc_die                                  ; xalloc_die, CODE XREF=calculate_columns+92, calculate_columns+101, calculate_columns+173, calculate_columns+190, calculate_columns+221, calculate_columns+230, calculate_columns+706, calculate_columns+711
                        ; endp

                     loc_8dd6:
0000000000008dd6         mov        esi, 0x1                                    ; CODE XREF=calculate_columns+212
0000000000008ddb         jmp        loc_8bba

                     loc_8de0:
0000000000008de0         mov        ecx, 0x1                                    ; CODE XREF=calculate_columns+701
0000000000008de5         jmp        loc_8d9f
0000000000008de7         align      16                                          ; End of unwind block (FDE at 0x1bf30)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_3D: int8_t, -61


                     print_with_separator:
0000000000008df0         push       r15                                         ; Begin of unwind block (FDE at 0x1bf70), CODE XREF=sub_90d0+19
0000000000008df2         push       r14
0000000000008df4         push       r13
0000000000008df6         push       r12
0000000000008df8         push       rbp
0000000000008df9         push       rbx
0000000000008dfa         sub        rsp, 0x18
0000000000008dfe         cmp        qword [cwd_n_used], 0x0                     ; cwd_n_used
0000000000008e06         je         loc_8f08

0000000000008e0c         mov        r14d, edi
0000000000008e0f         xor        r13d, r13d
0000000000008e12         xor        ebx, ebx
0000000000008e14         mov        r15, 0xfffffffffffffffd
0000000000008e1b         jmp        loc_8e48
0000000000008e1d         align      32

                     loc_8e20:
0000000000008e20         test       rbx, rbx                                    ; CODE XREF=print_with_separator+107
0000000000008e23         mov        rbp, r13
0000000000008e26         jne        loc_8ef0

                     loc_8e2c:
0000000000008e2c         mov        rsi, rbp                                    ; CODE XREF=print_with_separator+244, print_with_separator+342, print_with_separator+359
0000000000008e2f         mov        rdi, r12
0000000000008e32         add        rbx, 0x1
0000000000008e36         call       print_file_name_and_frills                  ; print_file_name_and_frills
0000000000008e3b         cmp        qword [cwd_n_used], rbx                     ; cwd_n_used
0000000000008e42         jbe        loc_8f08

                     loc_8e48:
0000000000008e48         cmp        qword [line_length], 0x0                    ; line_length, CODE XREF=print_with_separator+43
0000000000008e50         mov        rax, qword [sorted_file]                    ; sorted_file
0000000000008e57         mov        r12, qword [rax+rbx*8]
0000000000008e5b         je         loc_8e20

0000000000008e5d         mov        rdi, r12
0000000000008e60         call       length_of_file_name_and_frills              ; length_of_file_name_and_frills
0000000000008e65         test       rbx, rbx
0000000000008e68         je         loc_8f40

0000000000008e6e         mov        rdx, qword [line_length]                    ; line_length
0000000000008e75         lea        rbp, qword [r13+2]
0000000000008e79         lea        rcx, qword [rax+rbp]
0000000000008e7d         test       rdx, rdx
0000000000008e80         je         loc_8f38

0000000000008e86         cmp        rdx, rcx
0000000000008e89         jbe        loc_8e9a

0000000000008e8b         mov        rdx, r15
0000000000008e8e         sub        rdx, rax
0000000000008e91         cmp        rdx, r13
0000000000008e94         jae        loc_8f38

                     loc_8e9a:
0000000000008e9a         mov        r13, rax                                    ; CODE XREF=print_with_separator+153
0000000000008e9d         mov        ecx, 0xa
0000000000008ea2         mov        edx, 0xa
0000000000008ea7         xor        ebp, ebp

                     loc_8ea9:
0000000000008ea9         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=print_with_separator+273
0000000000008eb0         mov        rax, qword [rdi+0x28]
0000000000008eb4         cmp        rax, qword [rdi+0x30]
0000000000008eb8         jae        loc_8f60

0000000000008ebe         lea        rsi, qword [rax+1]
0000000000008ec2         mov        qword [rdi+0x28], rsi
0000000000008ec6         mov        byte [rax], r14b

                     loc_8ec9:
0000000000008ec9         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=print_with_separator+394
0000000000008ed0         mov        rax, qword [rdi+0x28]
0000000000008ed4         cmp        rax, qword [rdi+0x30]
0000000000008ed8         jae        loc_8f50

0000000000008eda         lea        rcx, qword [rax+1]
0000000000008ede         mov        qword [rdi+0x28], rcx
0000000000008ee2         mov        byte [rax], dl
0000000000008ee4         jmp        loc_8e2c
0000000000008ee9         align      16

                     loc_8ef0:
0000000000008ef0         lea        rbp, qword [r13+2]                          ; CODE XREF=print_with_separator+54
0000000000008ef4         mov        r13, rbp

                     loc_8ef7:
0000000000008ef7         mov        ecx, 0x20                                   ; CODE XREF=print_with_separator+331
0000000000008efc         mov        edx, 0x20
0000000000008f01         jmp        loc_8ea9
0000000000008f03         align      8

                     loc_8f08:
0000000000008f08         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=print_with_separator+22, print_with_separator+82
0000000000008f0f         mov        rax, qword [rdi+0x28]
0000000000008f13         cmp        rax, qword [rdi+0x30]
0000000000008f17         jae        loc_8f80

0000000000008f19         lea        rdx, qword [rax+1]
0000000000008f1d         mov        qword [rdi+0x28], rdx
0000000000008f21         mov        byte [rax], 0xa
0000000000008f24         add        rsp, 0x18
0000000000008f28         pop        rbx
0000000000008f29         pop        rbp
0000000000008f2a         pop        r12
0000000000008f2c         pop        r13
0000000000008f2e         pop        r14
0000000000008f30         pop        r15
0000000000008f32         ret
                        ; endp
0000000000008f33         align      8

                     loc_8f38:
0000000000008f38         mov        r13, rcx                                    ; CODE XREF=print_with_separator+144, print_with_separator+164
0000000000008f3b         jmp        loc_8ef7
0000000000008f3d         align      64

                     loc_8f40:
0000000000008f40         mov        rbp, r13                                    ; CODE XREF=print_with_separator+120
0000000000008f43         add        r13, rax
0000000000008f46         jmp        loc_8e2c
0000000000008f4b         align      16

                     loc_8f50:
0000000000008f50         mov        esi, ecx                                    ; argument #2 for method j___overflow, CODE XREF=print_with_separator+232
0000000000008f52         call       j___overflow                                ; __overflow
0000000000008f57         jmp        loc_8e2c
0000000000008f5c         align      32

                     loc_8f60:
0000000000008f60         movsx      esi, r14b                                   ; argument #2 for method j___overflow, CODE XREF=print_with_separator+200
0000000000008f64         mov        dword [rsp+0x48+var_3C], ecx
0000000000008f68         mov        byte [rsp+0x48+var_3D], dl
0000000000008f6c         call       j___overflow                                ; __overflow
0000000000008f71         movzx      edx, byte [rsp+0x48+var_3D]
0000000000008f76         mov        ecx, dword [rsp+0x48+var_3C]
0000000000008f7a         jmp        loc_8ec9
0000000000008f7f         align      128

                     loc_8f80:
0000000000008f80         add        rsp, 0x18                                   ; CODE XREF=print_with_separator+295
0000000000008f84         mov        esi, 0xa                                    ; argument #2 for method j___overflow
0000000000008f89         pop        rbx
0000000000008f8a         pop        rbp
0000000000008f8b         pop        r12
0000000000008f8d         pop        r13
0000000000008f8f         pop        r14
0000000000008f91         pop        r15
0000000000008f93         jmp        j___overflow                                ; __overflow
                        ; endp
0000000000008f98         align      32                                          ; End of unwind block (FDE at 0x1bf70)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     print_current_files:
0000000000008fa0         cmp        dword [format], 0x4                         ; Begin of unwind block (FDE at 0x1bfd4), format, CODE XREF=main+4499, print_dir+1186, print_dir+1388
0000000000008fa7         ja         loc_92f8

0000000000008fad         push       r15
0000000000008faf         push       r14
0000000000008fb1         lea        rdx, qword [_IO_stdin_used+516]             ; 0x16164
0000000000008fb8         push       r13
0000000000008fba         push       r12
0000000000008fbc         push       rbp
0000000000008fbd         push       rbx
0000000000008fbe         sub        rsp, 0x38
0000000000008fc2         mov        eax, dword [format]                         ; format
0000000000008fc8         movsxd     rax, dword [rdx+rax*4]
0000000000008fcc         add        rax, rdx
0000000000008fcf         jmp        rax
                        ; endp
0000000000008fd1         nop        dword [rax]
0000000000008fd8         cmp        qword [line_length], 0x0                    ; line_length
0000000000008fe0         je         sub_9280+104
0000000000008fe6         xor        edi, edi
0000000000008fe8         call       calculate_columns                           ; calculate_columns
0000000000008fed         lea        rdx, qword [rax+rax*2]
0000000000008ff1         mov        r14, rax
0000000000008ff4         mov        rax, qword [column_info]                    ; column_info
0000000000008ffb         lea        r15, qword [rax+rdx*8-0x18]
0000000000009000         mov        rax, qword [sorted_file]                    ; sorted_file
0000000000009007         mov        rbx, qword [rax]
000000000000900a         mov        rdi, rbx
000000000000900d         call       length_of_file_name_and_frills              ; length_of_file_name_and_frills
0000000000009012         mov        qword [rsp+8], rax
0000000000009017         mov        rax, qword [r15+0x10]
000000000000901b         xor        esi, esi
000000000000901d         mov        rdi, rbx
0000000000009020         mov        r12, qword [rax]
0000000000009023         call       print_file_name_and_frills                  ; print_file_name_and_frills
0000000000009028         cmp        qword [cwd_n_used], 0x1                     ; cwd_n_used
0000000000009030         jbe        sub_9310                                    ; sub_9310
0000000000009036         xor        r13d, r13d
0000000000009039         mov        ebx, 0x1
000000000000903e         mov        rcx, qword [rsp+8]
0000000000009043         jmp        print_current_files+261
0000000000009045         nop        dword [rax]

                     loc_9048:
0000000000009048         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=print_current_files+275
000000000000904f         mov        rax, qword [rdi+0x28]
0000000000009053         cmp        rax, qword [rdi+0x30]
0000000000009057         jae        sub_9350                                    ; sub_9350

000000000000905d         lea        rdx, qword [rax+1]
0000000000009061         xor        r13d, r13d
0000000000009064         mov        qword [rdi+0x28], rdx
0000000000009068         mov        byte [rax], 0xa

                     loc_906b:
000000000000906b         mov        rax, qword [sorted_file]                    ; sorted_file, CODE XREF=print_current_files+295, sub_9350+13
0000000000009072         mov        rsi, r13                                    ; argument #2 for method print_file_name_and_frills
0000000000009075         mov        r12, qword [rax+rbx*8]
0000000000009079         add        rbx, 0x1
000000000000907d         mov        rdi, r12                                    ; argument #1 for method print_file_name_and_frills
0000000000009080         call       print_file_name_and_frills                  ; print_file_name_and_frills
0000000000009085         mov        rdi, r12                                    ; argument #1 for method length_of_file_name_and_frills
0000000000009088         call       length_of_file_name_and_frills              ; length_of_file_name_and_frills
000000000000908d         cmp        rbx, qword [cwd_n_used]                     ; cwd_n_used
0000000000009094         mov        rcx, rax
0000000000009097         mov        rax, qword [r15+0x10]
000000000000909b         mov        r12, qword [rax+rbp*8]
000000000000909f         jae        sub_9310                                    ; sub_9310

                     loc_90a5:
00000000000090a5         xor        edx, edx                                    ; CODE XREF=print_current_files+163
00000000000090a7         mov        rax, rbx
00000000000090aa         div        r14
00000000000090ad         test       rdx, rdx
00000000000090b0         mov        rbp, rdx
00000000000090b3         je         loc_9048

00000000000090b5         add        r12, r13
00000000000090b8         lea        rdi, qword [rcx+r13]                        ; argument #1 for method indent
00000000000090bc         mov        rsi, r12                                    ; argument #2 for method indent
00000000000090bf         mov        r13, r12
00000000000090c2         call       indent                                      ; indent
00000000000090c7         jmp        loc_906b
00000000000090c9         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_90d0:
00000000000090d0         mov        edi, 0x2c                                   ; argument #1 for method print_with_separator
00000000000090d5         add        rsp, 0x38
00000000000090d9         pop        rbx
00000000000090da         pop        rbp
00000000000090db         pop        r12
00000000000090dd         pop        r13
00000000000090df         pop        r14
00000000000090e1         pop        r15
00000000000090e3         jmp        print_with_separator                        ; print_with_separator
                        ; endp
00000000000090e8         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_90f0:
00000000000090f0         xor        ebx, ebx
00000000000090f2         cmp        qword [cwd_n_used], 0x0                     ; cwd_n_used
00000000000090fa         je         sub_9150+280
                        ; endp

                     loc_9100:
0000000000009100         mov        rax, qword [sorted_file]                    ; sorted_file, CODE XREF=sub_90f0+77
0000000000009107         xor        esi, esi
0000000000009109         mov        rdi, qword [rax+rbx*8]
000000000000910d         call       print_file_name_and_frills                  ; print_file_name_and_frills
0000000000009112         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000009119         mov        rax, qword [rdi+0x28]
000000000000911d         cmp        rax, qword [rdi+0x30]
0000000000009121         jae        sub_9300                                    ; sub_9300

0000000000009127         lea        rdx, qword [rax+1]
000000000000912b         mov        qword [rdi+0x28], rdx
000000000000912f         mov        byte [rax], 0xa

                     loc_9132:
0000000000009132         add        rbx, 0x1                                    ; CODE XREF=sub_9300+10
0000000000009136         cmp        qword [cwd_n_used], rbx                     ; cwd_n_used
000000000000913d         ja         loc_9100

000000000000913f         add        rsp, 0x38
0000000000009143         pop        rbx
0000000000009144         pop        rbp
0000000000009145         pop        r12
0000000000009147         pop        r13
0000000000009149         pop        r14
000000000000914b         pop        r15
000000000000914d         ret
                        ; endp
000000000000914e         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_9150:
0000000000009150         cmp        qword [line_length], 0x0                    ; line_length
0000000000009158         je         loc_92e8

000000000000915e         mov        edi, 0x1                                    ; argument #1 for method calculate_columns
0000000000009163         call       calculate_columns                           ; calculate_columns
0000000000009168         lea        rdx, qword [rax+rax*2]
000000000000916c         mov        rcx, rax
000000000000916f         mov        rax, qword [column_info]                    ; column_info
0000000000009176         lea        r15, qword [rax+rdx*8-0x18]
000000000000917b         mov        rax, qword [cwd_n_used]                     ; cwd_n_used
0000000000009182         xor        edx, edx
0000000000009184         div        rcx
0000000000009187         test       rdx, rdx
000000000000918a         setne      dl
000000000000918d         movzx      edx, dl
0000000000009190         add        rdx, rax
0000000000009193         mov        rax, rdx
0000000000009196         mov        qword [rsp+24], rdx
000000000000919b         je         sub_9150+280

00000000000091a1         shl        rax, 0x3
00000000000091a5         mov        qword [rsp+40], 0x0
00000000000091ae         mov        qword [rsp+32], rax
00000000000091b3         nop        dword [rax+rax]

                     loc_91b8:
00000000000091b8         mov        r13, qword [rsp+40]                         ; CODE XREF=sub_9150+274
00000000000091bd         xor        r12d, r12d
00000000000091c0         xor        ebp, ebp
00000000000091c2         lea        r14, qword [r13*8]
00000000000091ca         jmp        loc_91eb
00000000000091cc         nop        dword [rax]

                     loc_91d0:
00000000000091d0         mov        rbx, qword [rsp+16]                         ; CODE XREF=sub_9150+224
00000000000091d5         mov        rdi, qword [rsp+8]
00000000000091da         add        rbx, rbp
00000000000091dd         add        rdi, rbp                                    ; argument #1 for method indent
00000000000091e0         mov        rsi, rbx                                    ; argument #2 for method indent
00000000000091e3         mov        rbp, rbx
00000000000091e6         call       indent                                      ; indent

                     loc_91eb:
00000000000091eb         mov        rax, qword [sorted_file]                    ; sorted_file, CODE XREF=sub_9150+122
00000000000091f2         mov        rbx, qword [rax+r14]
00000000000091f6         mov        rdi, rbx                                    ; argument #1 for method length_of_file_name_and_frills
00000000000091f9         call       length_of_file_name_and_frills              ; length_of_file_name_and_frills
00000000000091fe         mov        qword [rsp+8], rax
0000000000009203         mov        rax, qword [r15+0x10]
0000000000009207         mov        rsi, rbp                                    ; argument #2 for method print_file_name_and_frills
000000000000920a         mov        rdi, rbx                                    ; argument #1 for method print_file_name_and_frills
000000000000920d         mov        rcx, qword [rax+r12]
0000000000009211         add        r12, 0x8
0000000000009215         mov        qword [rsp+16], rcx
000000000000921a         call       print_file_name_and_frills                  ; print_file_name_and_frills
000000000000921f         add        r13, qword [rsp+24]
0000000000009224         add        r14, qword [rsp+32]
0000000000009229         cmp        r13, qword [cwd_n_used]                     ; cwd_n_used
0000000000009230         jb         loc_91d0

0000000000009232         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000009239         mov        rax, qword [rdi+0x28]
000000000000923d         cmp        rax, qword [rdi+0x30]
0000000000009241         jae        loc_9338

0000000000009247         lea        rdx, qword [rax+1]
000000000000924b         mov        qword [rdi+0x28], rdx
000000000000924f         mov        byte [rax], 0xa

                     loc_9252:
0000000000009252         add        qword [rsp+40], 0x1                         ; CODE XREF=sub_9310+50
0000000000009258         mov        rax, qword [rsp+40]
000000000000925d         cmp        qword [rsp+24], rax
0000000000009262         jne        loc_91b8

                     loc_9268:
0000000000009268         add        rsp, 0x38                                   ; CODE XREF=sub_9310+28
000000000000926c         pop        rbx
000000000000926d         pop        rbp
000000000000926e         pop        r12
0000000000009270         pop        r13
0000000000009272         pop        r14
0000000000009274         pop        r15
0000000000009276         ret
                        ; endp
0000000000009277         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_9280:
0000000000009280         xor        ebx, ebx
0000000000009282         cmp        qword [cwd_n_used], 0x0                     ; cwd_n_used
000000000000928a         jne        loc_92b0

000000000000928c         jmp        sub_9150+280
                        ; endp
000000000000928e         nop

                     loc_9290:
0000000000009290         lea        rdx, qword [rax+1]                          ; CODE XREF=sub_9280+84
0000000000009294         mov        qword [rdi+0x28], rdx
0000000000009298         mov        byte [rax], 0xa

                     loc_929b:
000000000000929b         add        qword [dired_pos], 0x1                      ; dired_pos, CODE XREF=sub_9280+96
00000000000092a3         add        rbx, 0x1
00000000000092a7         cmp        qword [cwd_n_used], rbx                     ; cwd_n_used
00000000000092ae         jbe        sub_9150+280

                     loc_92b0:
00000000000092b0         call       set_normal_color                            ; set_normal_color, CODE XREF=sub_9280+10
00000000000092b5         mov        rax, qword [sorted_file]                    ; sorted_file
00000000000092bc         mov        rdi, qword [rax+rbx*8]                      ; argument #1 for method print_long_format
00000000000092c0         call       print_long_format                           ; print_long_format
00000000000092c5         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000092cc         mov        rax, qword [rdi+0x28]
00000000000092d0         cmp        rax, qword [rdi+0x30]
00000000000092d4         jb         loc_9290

00000000000092d6         mov        esi, 0xa                                    ; argument #2 for method j___overflow
00000000000092db         call       j___overflow                                ; __overflow
00000000000092e0         jmp        loc_929b
00000000000092e2         nop        word [rax+rax]

                     loc_92e8:
00000000000092e8         mov        edi, 0x20                                   ; CODE XREF=print_current_files+64, sub_9150+8
00000000000092ed         jmp        sub_90d0+5
                        ; endp
00000000000092f2         nop        word [rax+rax]

                     loc_92f8:
00000000000092f8         ret                                                    ; CODE XREF=print_current_files+7
                        ; endp
00000000000092fa         align      256


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_9300:
0000000000009300         mov        esi, 0xa                                    ; argument #2 for method j___overflow, CODE XREF=sub_90f0+49
0000000000009305         call       j___overflow                                ; __overflow
000000000000930a         jmp        loc_9132
000000000000930f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_9310:
0000000000009310         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=print_current_files+144
0000000000009317         mov        rax, qword [rdi+0x28]
000000000000931b         cmp        rax, qword [rdi+0x30]
000000000000931f         jae        loc_9362

0000000000009321         lea        rdx, qword [rax+1]
0000000000009325         mov        qword [rdi+0x28], rdx
0000000000009329         mov        byte [rax], 0xa
000000000000932c         jmp        loc_9268
0000000000009331         nop        dword [rax]

                     loc_9338:
0000000000009338         mov        esi, 0xa                                    ; argument #2 for method j___overflow, CODE XREF=sub_9150+241
000000000000933d         call       j___overflow                                ; __overflow
0000000000009342         jmp        loc_9252
0000000000009347         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_9350:
0000000000009350         mov        esi, 0xa                                    ; argument #2 for method j___overflow, CODE XREF=print_current_files+183
0000000000009355         xor        r13d, r13d
0000000000009358         call       j___overflow                                ; __overflow
000000000000935d         jmp        loc_906b

                     loc_9362:
0000000000009362         add        rsp, 0x38                                   ; CODE XREF=sub_9310+15
0000000000009366         mov        esi, 0xa                                    ; argument #2 for method j___overflow
000000000000936b         pop        rbx
000000000000936c         pop        rbp
000000000000936d         pop        r12
000000000000936f         pop        r13
0000000000009371         pop        r14
0000000000009373         pop        r15
0000000000009375         jmp        j___overflow                                ; __overflow
                        ; endp
000000000000937a         align      128                                         ; End of unwind block (FDE at 0x1bfd4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rev_strcmp_df_atime:
0000000000009380         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x1c090)
0000000000009383         mov        esi, dword [rdi+0xa8]
0000000000009389         mov        ecx, dword [rdx+0xa8]
000000000000938f         cmp        ecx, 0x3
0000000000009392         sete       al
0000000000009395         cmp        ecx, 0x9
0000000000009398         sete       cl
000000000000939b         or         eax, ecx
000000000000939d         cmp        esi, 0x3
00000000000093a0         je         loc_93c8

00000000000093a2         cmp        esi, 0x9
00000000000093a5         je         loc_93c8

00000000000093a7         mov        ecx, dword [rdi+0xac]
00000000000093ad         and        ecx, 0xf000
00000000000093b3         test       al, al
00000000000093b5         je         loc_93e8

                     loc_93b7:
00000000000093b7         cmp        ecx, 0x4000                                 ; CODE XREF=rev_strcmp_df_atime+120
00000000000093bd         je         loc_9408

                     loc_93bf:
00000000000093bf         mov        eax, 0x1                                    ; CODE XREF=rev_strcmp_df_atime+146
00000000000093c4         ret
                        ; endp
00000000000093c5         align      8

                     loc_93c8:
00000000000093c8         test       al, al                                      ; CODE XREF=rev_strcmp_df_atime+32, rev_strcmp_df_atime+37
00000000000093ca         jne        loc_9408

00000000000093cc         mov        eax, dword [rdx+0xac]
00000000000093d2         and        eax, 0xf000
00000000000093d7         cmp        eax, 0x4000
00000000000093dc         je         loc_9408

                     loc_93de:
00000000000093de         mov        eax, 0xffffffff                             ; CODE XREF=rev_strcmp_df_atime+128, rev_strcmp_df_atime+144

                     loc_93e3:
00000000000093e3         ret                                                    ; CODE XREF=rev_strcmp_df_atime+155
                        ; endp
00000000000093e5         align      8

                     loc_93e8:
00000000000093e8         mov        eax, dword [rdx+0xac]                       ; CODE XREF=rev_strcmp_df_atime+53
00000000000093ee         and        eax, 0xf000
00000000000093f3         cmp        eax, 0x4000
00000000000093f8         je         loc_93b7

00000000000093fa         cmp        ecx, 0x4000
0000000000009400         je         loc_93de

0000000000009402         nop        word [rax+rax]

                     loc_9408:
0000000000009408         mov        rax, qword [rdi+0x60]                       ; CODE XREF=rev_strcmp_df_atime+61, rev_strcmp_df_atime+74, rev_strcmp_df_atime+92
000000000000940c         cmp        qword [rdx+0x60], rax
0000000000009410         jg         loc_93de

0000000000009412         jl         loc_93bf

0000000000009414         mov        rax, qword [rdi+0x68]
0000000000009418         sub        eax, dword [rdx+0x68]
000000000000941b         jne        loc_93e3

000000000000941d         mov        rsi, qword [rdi]                            ; argument "__s2" for method j_strcmp
0000000000009420         mov        rdi, qword [rdx]                            ; argument "__s1" for method j_strcmp
0000000000009423         jmp        j_strcmp                                    ; strcmp
                        ; endp
0000000000009428         align      16                                          ; End of unwind block (FDE at 0x1c090)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rev_strcmp_df_ctime:
0000000000009430         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x1c0a4)
0000000000009433         mov        esi, dword [rdi+0xa8]
0000000000009439         mov        ecx, dword [rdx+0xa8]
000000000000943f         cmp        ecx, 0x3
0000000000009442         sete       al
0000000000009445         cmp        ecx, 0x9
0000000000009448         sete       cl
000000000000944b         or         eax, ecx
000000000000944d         cmp        esi, 0x3
0000000000009450         je         loc_9478

0000000000009452         cmp        esi, 0x9
0000000000009455         je         loc_9478

0000000000009457         mov        ecx, dword [rdi+0xac]
000000000000945d         and        ecx, 0xf000
0000000000009463         test       al, al
0000000000009465         je         loc_9498

                     loc_9467:
0000000000009467         cmp        ecx, 0x4000                                 ; CODE XREF=rev_strcmp_df_ctime+120
000000000000946d         je         loc_94b8

                     loc_946f:
000000000000946f         mov        eax, 0x1                                    ; CODE XREF=rev_strcmp_df_ctime+152
0000000000009474         ret
                        ; endp
0000000000009475         align      8

                     loc_9478:
0000000000009478         test       al, al                                      ; CODE XREF=rev_strcmp_df_ctime+32, rev_strcmp_df_ctime+37
000000000000947a         jne        loc_94b8

000000000000947c         mov        eax, dword [rdx+0xac]
0000000000009482         and        eax, 0xf000
0000000000009487         cmp        eax, 0x4000
000000000000948c         je         loc_94b8

                     loc_948e:
000000000000948e         mov        eax, 0xffffffff                             ; CODE XREF=rev_strcmp_df_ctime+128, rev_strcmp_df_ctime+150

                     loc_9493:
0000000000009493         ret                                                    ; CODE XREF=rev_strcmp_df_ctime+167
                        ; endp
0000000000009495         align      8

                     loc_9498:
0000000000009498         mov        eax, dword [rdx+0xac]                       ; CODE XREF=rev_strcmp_df_ctime+53
000000000000949e         and        eax, 0xf000
00000000000094a3         cmp        eax, 0x4000
00000000000094a8         je         loc_9467

00000000000094aa         cmp        ecx, 0x4000
00000000000094b0         je         loc_948e

00000000000094b2         nop        word [rax+rax]

                     loc_94b8:
00000000000094b8         mov        rax, qword [rdi+0x80]                       ; CODE XREF=rev_strcmp_df_ctime+61, rev_strcmp_df_ctime+74, rev_strcmp_df_ctime+92
00000000000094bf         cmp        qword [rdx+0x80], rax
00000000000094c6         jg         loc_948e

00000000000094c8         jl         loc_946f

00000000000094ca         mov        rax, qword [rdi+0x88]
00000000000094d1         sub        eax, dword [rdx+0x88]
00000000000094d7         jne        loc_9493

00000000000094d9         mov        rsi, qword [rdi]                            ; argument "__s2" for method j_strcmp
00000000000094dc         mov        rdi, qword [rdx]                            ; argument "__s1" for method j_strcmp
00000000000094df         jmp        j_strcmp                                    ; strcmp
                        ; endp
00000000000094e4         align      16                                          ; End of unwind block (FDE at 0x1c0a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     clear_files:
00000000000094f0         mov        rax, qword [cwd_n_used]                     ; Begin of unwind block (FDE at 0x1c0b8), cwd_n_used, CODE XREF=main+3269, print_dir+471, print_dir+1393
00000000000094f7         push       r12
00000000000094f9         push       rbp
00000000000094fa         push       rbx
00000000000094fb         test       rax, rax
00000000000094fe         je         loc_9537

0000000000009500         mov        rbx, qword [sorted_file]                    ; sorted_file
0000000000009507         lea        r12, qword [rbx+rax*8]
000000000000950b         nop        dword [rax+rax]

                     loc_9510:
0000000000009510         mov        rbp, qword [rbx]                            ; CODE XREF=clear_files+69
0000000000009513         add        rbx, 0x8
0000000000009517         mov        rdi, qword [rbp]
000000000000951b         call       sub_3880                                    ; sub_3880
0000000000009520         mov        rdi, qword [rbp+8]
0000000000009524         call       sub_3880                                    ; sub_3880
0000000000009529         mov        rdi, qword [rbp+0x10]
000000000000952d         call       sub_3880                                    ; sub_3880
0000000000009532         cmp        rbx, r12
0000000000009535         jne        loc_9510

                     loc_9537:
0000000000009537         pop        rbx                                         ; CODE XREF=clear_files+14
0000000000009538         mov        qword [cwd_n_used], 0x0                     ; cwd_n_used
0000000000009543         mov        byte [cwd_some_quoted], 0x0                 ; cwd_some_quoted
000000000000954a         pop        rbp
000000000000954b         mov        byte [any_has_acl], 0x0                     ; any_has_acl
0000000000009552         mov        dword [inode_number_width], 0x0             ; inode_number_width
000000000000955c         mov        dword [block_size_width], 0x0               ; block_size_width
0000000000009566         mov        dword [nlink_width], 0x0                    ; nlink_width
0000000000009570         mov        dword [owner_width], 0x0                    ; owner_width
000000000000957a         mov        dword [group_width], 0x0                    ; group_width
0000000000009584         mov        dword [author_width], 0x0                   ; author_width
000000000000958e         mov        dword [scontext_width], 0x0                 ; scontext_width
0000000000009598         mov        dword [major_device_number_width], 0x0      ; major_device_number_width
00000000000095a2         mov        dword [minor_device_number_width], 0x0      ; minor_device_number_width
00000000000095ac         mov        dword [file_size_width], 0x0                ; file_size_width
00000000000095b6         pop        r12
00000000000095b8         ret
                        ; endp
00000000000095b9         align      64                                          ; End of unwind block (FDE at 0x1c0b8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32


                     format_user_width:
00000000000095c0         push       rbp                                         ; Begin of unwind block (FDE at 0x1c0e4), CODE XREF=gobble_file.constprop.52+2723, gobble_file.constprop.52+2779
00000000000095c1         push       rbx
00000000000095c2         mov        ebp, edi
00000000000095c4         sub        rsp, 0x28
00000000000095c8         mov        rax, qword [fs:0x28]
00000000000095d1         mov        qword [rsp+0x38+var_20], rax
00000000000095d6         xor        eax, eax
00000000000095d8         cmp        byte [numeric_ids], 0x0                     ; numeric_ids
00000000000095df         je         loc_9658

                     loc_95e1:
00000000000095e1         mov        rbx, rsp                                    ; CODE XREF=format_user_width+163
00000000000095e4         lea        rcx, qword [aSorttypeSortve+27]             ; 0x1788d
00000000000095eb         mov        r8d, ebp
00000000000095ee         mov        edx, 0x15
00000000000095f3         mov        esi, 0x1
00000000000095f8         mov        rdi, rbx
00000000000095fb         xor        eax, eax
00000000000095fd         call       j___sprintf_chk                             ; __sprintf_chk
0000000000009602         mov        rax, rbx

                     loc_9605:
0000000000009605         mov        ecx, dword [rax]                            ; CODE XREF=format_user_width+91
0000000000009607         add        rax, 0x4
000000000000960b         lea        edx, dword [rcx-0x1010101]
0000000000009611         not        ecx
0000000000009613         and        edx, ecx
0000000000009615         and        edx, 0x80808080
000000000000961b         je         loc_9605

000000000000961d         mov        ecx, edx
000000000000961f         shr        ecx, 0x10
0000000000009622         test       edx, 0x8080
0000000000009628         cmove      edx, ecx
000000000000962b         lea        rcx, qword [rax+2]
000000000000962f         mov        esi, edx
0000000000009631         cmove      rax, rcx
0000000000009635         add        sil, dl
0000000000009638         sbb        rax, 0x3
000000000000963c         sub        eax, ebx

                     loc_963e:
000000000000963e         mov        rsi, qword [rsp+0x38+var_20]                ; CODE XREF=format_user_width+186
0000000000009643         xor        rsi, qword [fs:0x28]
000000000000964c         jne        loc_967c

000000000000964e         add        rsp, 0x28
0000000000009652         pop        rbx
0000000000009653         pop        rbp
0000000000009654         ret
                        ; endp
0000000000009655         align      8

                     loc_9658:
0000000000009658         call       getuser                                     ; getuser, CODE XREF=format_user_width+31
000000000000965d         test       rax, rax
0000000000009660         mov        rdi, rax
0000000000009663         je         loc_95e1

0000000000009669         xor        esi, esi
000000000000966b         call       gnu_mbswidth                                ; gnu_mbswidth
0000000000009670         mov        edx, 0x0
0000000000009675         test       eax, eax
0000000000009677         cmovs      eax, edx
000000000000967a         jmp        loc_963e

                     loc_967c:
000000000000967c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=format_user_width+140
                        ; endp
0000000000009681         align      16                                          ; End of unwind block (FDE at 0x1c0e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_28: int8_t, -40
        ;    var_38: int64_t, -56
        ;    var_2D0: int8_t, -720
        ;    var_2F0: int8_t, -752
        ;    var_368: int32_t, -872
        ;    var_380: int8_t, -896
        ;    var_388: int64_t, -904
        ;    var_390: int64_t, -912
        ;    var_391: int8_t, -913
        ;    var_392: int8_t, -914


                     gobble_file.constprop.52:
0000000000009690         push       rbp                                         ; Begin of unwind block (FDE at 0x1c110), CODE XREF=main+3306, main+3858, print_dir+1322
0000000000009691         mov        rbp, rsp
0000000000009694         push       r15
0000000000009696         push       r14
0000000000009698         push       r13
000000000000969a         push       r12
000000000000969c         mov        r15, rcx
000000000000969f         push       rbx
00000000000096a0         mov        r14d, esi
00000000000096a3         mov        r13d, edx
00000000000096a6         sub        rsp, 0x378
00000000000096ad         mov        rcx, qword [cwd_n_used]                     ; cwd_n_used
00000000000096b4         mov        qword [rbp+var_388], rdi
00000000000096bb         mov        rax, qword [fs:0x28]
00000000000096c4         mov        qword [rbp+var_38], rax
00000000000096c8         xor        eax, eax
00000000000096ca         cmp        rcx, qword [cwd_n_alloc]                    ; cwd_n_alloc
00000000000096d1         mov        rdi, qword [cwd_file]                       ; cwd_file
00000000000096d8         jne        loc_9728

00000000000096da         mov        edx, 0x190
00000000000096df         xor        esi, esi
00000000000096e1         mov        rax, rdx
00000000000096e4         mul        rcx
00000000000096e7         jo         loc_a3de

                     loc_96ed:
00000000000096ed         test       rax, rax                                    ; CODE XREF=gobble_file.constprop.52+3411
00000000000096f0         js         loc_a3d9

00000000000096f6         test       rsi, rsi
00000000000096f9         jne        loc_a3d9

00000000000096ff         lea        rax, qword [rcx+rcx*4]
0000000000009703         lea        rsi, qword [rax+rax*4]
0000000000009707         shl        rsi, 0x4                                    ; argument #2 for method xrealloc
000000000000970b         call       xrealloc                                    ; xrealloc
0000000000009710         shl        qword [cwd_n_alloc], 0x1                    ; cwd_n_alloc
0000000000009717         mov        rcx, qword [cwd_n_used]                     ; cwd_n_used
000000000000971e         mov        rdi, rax
0000000000009721         mov        qword [cwd_file], rax                       ; cwd_file

                     loc_9728:
0000000000009728         lea        rax, qword [rcx+rcx*4]                      ; CODE XREF=gobble_file.constprop.52+72
000000000000972c         lea        rax, qword [rax+rax*4]
0000000000009730         lea        rbx, qword [rdi+rax*8]
0000000000009734         xor        eax, eax
0000000000009736         lea        rdi, qword [rbx+8]
000000000000973a         mov        rcx, rbx
000000000000973d         mov        qword [rbx], 0x0
0000000000009744         mov        qword [rbx+0xbc], 0x0
000000000000974f         and        rdi, 0xfffffffffffffff8
0000000000009753         sub        rcx, rdi
0000000000009756         add        ecx, 0xc4
000000000000975c         shr        ecx, 0x3
000000000000975f         rep stosq  qword [rdi], rax
0000000000009762         mov        qword [rbx+0x20], 0x0
000000000000976a         mov        dword [rbx+0xa8], r14d
0000000000009771         mov        dword [rbx+0xc4], 0xffffffff
000000000000977b         cmp        byte [cwd_some_quoted], 0x0                 ; cwd_some_quoted
0000000000009782         jne        loc_9791

0000000000009784         cmp        byte [align_variable_outer_quotes], 0x0     ; align_variable_outer_quotes
000000000000978b         jne        loc_9e80

                     loc_9791:
0000000000009791         test       r13b, r13b                                  ; CODE XREF=gobble_file.constprop.52+242, gobble_file.constprop.52+2055, gobble_file.constprop.52+2068
0000000000009794         movzx      r8d, byte [print_hyperlink]                 ; print_hyperlink
000000000000979c         je         loc_99c0

00000000000097a2         mov        r12, qword [rbp+var_388]
00000000000097a9         movzx      edx, byte [r12]
00000000000097ae         cmp        dl, 0x2f
00000000000097b1         je         loc_a218

00000000000097b7         movzx      ecx, byte [r15]
00000000000097bb         test       cl, cl
00000000000097bd         jne        loc_9db3

                     loc_97c3:
00000000000097c3         test       r8b, r8b                                    ; CODE XREF=gobble_file.constprop.52+2021, gobble_file.constprop.52+2959
00000000000097c6         jne        loc_9bfa

                     loc_97cc:
00000000000097cc         mov        ecx, dword [dereference]                    ; dereference, CODE XREF=gobble_file.constprop.52+1406, gobble_file.constprop.52+1446, gobble_file.constprop.52+2211
00000000000097d2         lea        r15, qword [rbx+0x18]
00000000000097d6         cmp        ecx, 0x3
00000000000097d9         jb         loc_9b40

00000000000097df         cmp        ecx, 0x4
00000000000097e2         jbe        loc_9c40

00000000000097e8         cmp        ecx, 0x5
00000000000097eb         jne        loc_9b40

                     loc_97f1:
00000000000097f1         mov        rdx, r15                                    ; argument "__stat_buf" for method j___xstat, CODE XREF=gobble_file.constprop.52+1185
00000000000097f4         mov        rsi, r12                                    ; argument "__filename" for method j___xstat
00000000000097f7         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
00000000000097fc         call       j___xstat                                   ; __xstat
0000000000009801         test       eax, eax
0000000000009803         jne        loc_9b58

                     loc_9809:
0000000000009809         cmp        r14d, 0x5                                   ; CODE XREF=gobble_file.constprop.52+1218, gobble_file.constprop.52+1529
000000000000980d         mov        byte [rbx+0xb8], 0x1
0000000000009814         je         loc_9b90

000000000000981a         mov        eax, dword [rbx+0x30]
000000000000981d         and        eax, 0xf000
0000000000009822         cmp        eax, 0x8000
0000000000009827         je         loc_9b90

                     loc_982d:
000000000000982d         mov        r10d, dword [format]                        ; format, CODE XREF=gobble_file.constprop.52+1287, gobble_file.constprop.52+1305, gobble_file.constprop.52+1349
0000000000009834         test       r10d, r10d
0000000000009837         je         loc_9842

0000000000009839         cmp        byte [print_scontext], 0x0                  ; print_scontext
0000000000009840         je         loc_988c

                     loc_9842:
0000000000009842         call       j___errno_location                          ; __errno_location, CODE XREF=gobble_file.constprop.52+423
0000000000009847         mov        r14, qword [rbx+0x18]
000000000000984b         cmp        r14, qword [unsupported_device.10314]       ; unsupported_device.10314
0000000000009852         mov        r8, rax
0000000000009855         mov        dword [rax], 0x5f
000000000000985b         je         loc_9864

000000000000985d         mov        qword [unsupported_device.10314], r14       ; unsupported_device.10314

                     loc_9864:
0000000000009864         mov        r9d, dword [format]                         ; format, CODE XREF=gobble_file.constprop.52+459
000000000000986b         lea        rax, qword [UNKNOWN_SECURITY_CONTEXT]       ; UNKNOWN_SECURITY_CONTEXT
0000000000009872         mov        qword [rbx+0xb0], rax
0000000000009879         test       r9d, r9d
000000000000987c         je         loc_9f40

0000000000009882         mov        dword [rbx+0xbc], 0x0

                     loc_988c:
000000000000988c         mov        eax, dword [rbx+0x30]                       ; CODE XREF=gobble_file.constprop.52+432
000000000000988f         and        eax, 0xf000
0000000000009894         cmp        eax, 0xa000
0000000000009899         je         loc_9fe0

                     loc_989f:
000000000000989f         cmp        eax, 0x4000                                 ; CODE XREF=gobble_file.constprop.52+2367, gobble_file.constprop.52+2597, gobble_file.constprop.52+3022
00000000000098a4         je         loc_a100

00000000000098aa         mov        dword [rbx+0xa8], 0x5

                     loc_98b4:
00000000000098b4         mov        ecx, dword [format]                         ; format, CODE XREF=gobble_file.constprop.52+2613, gobble_file.constprop.52+2696, gobble_file.constprop.52+2714
00000000000098ba         mov        r12, qword [rbx+0x58]
00000000000098be         test       ecx, ecx
00000000000098c0         je         loc_98cb

00000000000098c2         cmp        byte [print_block_size], 0x0                ; print_block_size
00000000000098c9         je         loc_993c

                     loc_98cb:
00000000000098cb         mov        r8, qword [output_block_size]               ; argument #5 for method human_readable, output_block_size, CODE XREF=gobble_file.constprop.52+560
00000000000098d2         mov        edx, dword [human_output_opts]              ; argument #3 for method human_readable, human_output_opts
00000000000098d8         lea        r13, qword [rbp+var_2D0]
00000000000098df         mov        ecx, 0x200                                  ; argument #4 for method human_readable
00000000000098e4         mov        rdi, r12                                    ; argument #1 for method human_readable
00000000000098e7         mov        rsi, r13                                    ; argument #2 for method human_readable
00000000000098ea         call       human_readable                              ; human_readable
00000000000098ef         xor        esi, esi                                    ; argument #2 for method gnu_mbswidth
00000000000098f1         mov        rdi, rax                                    ; argument #1 for method gnu_mbswidth
00000000000098f4         call       gnu_mbswidth                                ; gnu_mbswidth
00000000000098f9         cmp        eax, dword [block_size_width]               ; block_size_width
00000000000098ff         jle        loc_9907

0000000000009901         mov        dword [block_size_width], eax               ; block_size_width

                     loc_9907:
0000000000009907         mov        edx, dword [format]                         ; format, CODE XREF=gobble_file.constprop.52+623
000000000000990d         test       edx, edx
000000000000990f         jne        loc_a150

0000000000009915         cmp        byte [print_owner], 0x0                     ; print_owner
000000000000991c         jne        loc_a130

                     loc_9922:
0000000000009922         cmp        byte [print_group], 0x0                     ; print_group, CODE XREF=gobble_file.constprop.52+2734, gobble_file.constprop.52+2746
0000000000009929         jne        loc_a190

                     loc_992f:
000000000000992f         cmp        byte [print_author], 0x0                    ; print_author, CODE XREF=gobble_file.constprop.52+2930, gobble_file.constprop.52+2942
0000000000009936         jne        loc_a168

                     loc_993c:
000000000000993c         cmp        byte [print_scontext], 0x0                  ; print_scontext, CODE XREF=gobble_file.constprop.52+569, gobble_file.constprop.52+2790, gobble_file.constprop.52+2802
0000000000009943         je         loc_995d

                     loc_9945:
0000000000009945         mov        rdi, qword [rbx+0xb0]                       ; argument "__s" for method j_strlen, CODE XREF=gobble_file.constprop.52+2759
000000000000994c         call       j_strlen                                    ; strlen
0000000000009951         cmp        eax, dword [scontext_width]                 ; scontext_width
0000000000009957         jg         loc_9eb0

                     loc_995d:
000000000000995d         mov        eax, dword [format]                         ; format, CODE XREF=gobble_file.constprop.52+691, gobble_file.constprop.52+2086
0000000000009963         test       eax, eax
0000000000009965         je         loc_9cd0

                     loc_996b:
000000000000996b         movzx      eax, byte [print_inode]                     ; print_inode, CODE XREF=gobble_file.constprop.52+1797, gobble_file.constprop.52+2146, gobble_file.constprop.52+2158, gobble_file.constprop.52+2765
0000000000009972         test       al, al
0000000000009974         jne        loc_9c98

                     loc_997a:
000000000000997a         mov        rdi, qword [rbp+var_388]                    ; CODE XREF=gobble_file.constprop.52+899, gobble_file.constprop.52+1003, gobble_file.constprop.52+1032, gobble_file.constprop.52+1124, gobble_file.constprop.52+1270, gobble_file.constprop.52+1574, gobble_file.constprop.52+1586
0000000000009981         call       xstrdup                                     ; xstrdup
0000000000009986         add        qword [cwd_n_used], 0x1                     ; cwd_n_used
000000000000998e         mov        qword [rbx], rax

                     loc_9991:
0000000000009991         mov        rsi, qword [rbp+var_38]                     ; CODE XREF=gobble_file.constprop.52+1264, gobble_file.constprop.52+3092
0000000000009995         xor        rsi, qword [fs:0x28]
000000000000999e         mov        rax, r12
00000000000099a1         jne        loc_a3d4

00000000000099a7         lea        rsp, qword [rbp+var_28]
00000000000099ab         pop        rbx
00000000000099ac         pop        r12
00000000000099ae         pop        r13
00000000000099b0         pop        r14
00000000000099b2         pop        r15
00000000000099b4         pop        rbp
00000000000099b5         ret
                        ; endp
00000000000099b6         align      64

                     loc_99c0:
00000000000099c0         test       r8b, r8b                                    ; CODE XREF=gobble_file.constprop.52+268
00000000000099c3         jne        loc_9be0

00000000000099c9         cmp        byte [format_needs_stat], 0x0               ; format_needs_stat
00000000000099d0         jne        loc_9b00

00000000000099d6         cmp        r14d, 0x3
00000000000099da         je         loc_a2f0

                     loc_99e0:
00000000000099e0         movzx      eax, byte [print_inode]                     ; print_inode, CODE XREF=gobble_file.constprop.52+3175, gobble_file.constprop.52+3266
00000000000099e7         test       al, al
00000000000099e9         jne        loc_9a20

00000000000099eb         cmp        byte [format_needs_type], 0x0               ; format_needs_type
00000000000099f2         je         loc_9a10

00000000000099f4         test       r14d, r14d
00000000000099f7         sete       cl
00000000000099fa         cmp        r14d, 0x6
00000000000099fe         mov        edx, ecx
0000000000009a00         je         loc_9a34

0000000000009a02         test       cl, cl
0000000000009a04         jne        loc_9a34

0000000000009a06         cmp        byte [format_needs_type], 0x0               ; format_needs_type
0000000000009a0d         jne        loc_9a74

0000000000009a0f         nop

                     loc_9a10:
0000000000009a10         xor        r12d, r12d                                  ; CODE XREF=gobble_file.constprop.52+866, gobble_file.constprop.52+986
0000000000009a13         jmp        loc_997a
0000000000009a18         align      32

                     loc_9a20:
0000000000009a20         test       r14d, r14d                                  ; CODE XREF=gobble_file.constprop.52+857
0000000000009a23         sete       dl
0000000000009a26         cmp        r14d, 0x6
0000000000009a2a         je         loc_9a34

0000000000009a2c         test       dl, dl
0000000000009a2e         je         loc_9b00

                     loc_9a34:
0000000000009a34         cmp        dword [dereference], 0x5                    ; dereference, CODE XREF=gobble_file.constprop.52+880, gobble_file.constprop.52+884, gobble_file.constprop.52+922
0000000000009a3b         je         loc_9b00

0000000000009a41         cmp        byte [color_symlink_as_referent], 0x0       ; color_symlink_as_referent
0000000000009a48         jne        loc_9b00

0000000000009a4e         cmp        byte [check_symlink_mode], 0x0              ; check_symlink_mode
0000000000009a55         jne        loc_9b00

0000000000009a5b         test       al, al
0000000000009a5d         jne        loc_9b00

0000000000009a63         cmp        byte [format_needs_type], 0x0               ; format_needs_type
0000000000009a6a         je         loc_9a10

0000000000009a6c         test       dl, dl
0000000000009a6e         jne        loc_9b00

                     loc_9a74:
0000000000009a74         xor        r12d, r12d                                  ; CODE XREF=gobble_file.constprop.52+893
0000000000009a77         cmp        r14d, 0x5
0000000000009a7b         jne        loc_997a

0000000000009a81         cmp        dword [indicator_style], 0x3                ; indicator_style
0000000000009a88         je         loc_9b00

0000000000009a8a         cmp        byte [print_with_color], 0x0                ; print_with_color
0000000000009a91         mov        byte [rbp+var_390], r8b
0000000000009a98         je         loc_997a

0000000000009a9e         mov        edi, 0xe                                    ; argument #1 for method is_colored
0000000000009aa3         call       is_colored                                  ; is_colored
0000000000009aa8         test       al, al
0000000000009aaa         movzx      r8d, byte [rbp+var_390]
0000000000009ab2         jne        loc_9b00

0000000000009ab4         mov        edi, 0x10                                   ; argument #1 for method is_colored
0000000000009ab9         call       is_colored                                  ; is_colored
0000000000009abe         test       al, al
0000000000009ac0         movzx      r8d, byte [rbp+var_390]
0000000000009ac8         jne        loc_9b00

0000000000009aca         mov        edi, 0x11                                   ; argument #1 for method is_colored
0000000000009acf         call       is_colored                                  ; is_colored
0000000000009ad4         test       al, al
0000000000009ad6         movzx      r8d, byte [rbp+var_390]
0000000000009ade         jne        loc_9b00

0000000000009ae0         mov        edi, 0x15                                   ; argument #1 for method is_colored
0000000000009ae5         call       is_colored                                  ; is_colored
0000000000009aea         test       al, al
0000000000009aec         movzx      r8d, byte [rbp+var_390]
0000000000009af4         je         loc_997a

0000000000009afa         nop        word [rax+rax]

                     loc_9b00:
0000000000009b00         mov        rax, qword [rbp+var_388]                    ; CODE XREF=gobble_file.constprop.52+832, gobble_file.constprop.52+926, gobble_file.constprop.52+939, gobble_file.constprop.52+952, gobble_file.constprop.52+965, gobble_file.constprop.52+973, gobble_file.constprop.52+990, gobble_file.constprop.52+1016, gobble_file.constprop.52+1058, gobble_file.constprop.52+1080, gobble_file.constprop.52+1102
0000000000009b07         movzx      edx, byte [rax]
0000000000009b0a         cmp        dl, 0x2f
0000000000009b0d         jne        loc_9f20

0000000000009b13         mov        eax, dword [dereference]                    ; dereference
0000000000009b19         lea        r15, qword [rbx+0x18]
0000000000009b1d         cmp        eax, 0x3
0000000000009b20         jb         loc_9b37

0000000000009b22         cmp        eax, 0x4
0000000000009b25         jbe        loc_9b37

0000000000009b27         cmp        eax, 0x5
0000000000009b2a         mov        r12, qword [rbp+var_388]
0000000000009b31         je         loc_97f1

                     loc_9b37:
0000000000009b37         mov        r12, qword [rbp+var_388]                    ; CODE XREF=gobble_file.constprop.52+1168, gobble_file.constprop.52+1173
0000000000009b3e         nop

                     loc_9b40:
0000000000009b40         mov        rdx, r15                                    ; argument "__stat_buf" for method j___lxstat, CODE XREF=gobble_file.constprop.52+329, gobble_file.constprop.52+347, gobble_file.constprop.52+1459, gobble_file.constprop.52+1521, gobble_file.constprop.52+3048
0000000000009b43         mov        rsi, r12                                    ; argument "__filename" for method j___lxstat
0000000000009b46         mov        edi, 0x1                                    ; argument "__ver" for method j___lxstat
0000000000009b4b         call       j___lxstat                                  ; __lxstat
0000000000009b50         test       eax, eax
0000000000009b52         je         loc_9809

                     loc_9b58:
0000000000009b58         lea        rsi, qword [aCannotAccessS]                 ; argument "msgid" for method j_dcgettext, "cannot access %s", CODE XREF=gobble_file.constprop.52+371
0000000000009b5f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000009b61         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000009b66         call       j_dcgettext                                 ; dcgettext
0000000000009b6b         mov        rdx, r12                                    ; argument #3 for method file_failure
0000000000009b6e         movzx      edi, r13b                                   ; argument #1 for method file_failure
0000000000009b72         mov        rsi, rax                                    ; argument #2 for method file_failure
0000000000009b75         call       file_failure                                ; file_failure
0000000000009b7a         xor        r12d, r12d
0000000000009b7d         test       r13b, r13b
0000000000009b80         jne        loc_9991

0000000000009b86         jmp        loc_997a
0000000000009b8b         align      16

                     loc_9b90:
0000000000009b90         cmp        byte [print_with_color], 0x0                ; print_with_color, CODE XREF=gobble_file.constprop.52+388, gobble_file.constprop.52+407
0000000000009b97         je         loc_982d

0000000000009b9d         mov        edi, 0x15                                   ; argument #1 for method is_colored
0000000000009ba2         call       is_colored                                  ; is_colored
0000000000009ba7         test       al, al
0000000000009ba9         je         loc_982d

0000000000009baf         mov        r14, qword [rbx+0x18]
0000000000009bb3         call       j___errno_location                          ; __errno_location
0000000000009bb8         cmp        r14, qword [unsupported_device.10326]       ; unsupported_device.10326
0000000000009bbf         mov        dword [rax], 0x5f
0000000000009bc5         je         loc_9bce

0000000000009bc7         mov        qword [unsupported_device.10326], r14       ; unsupported_device.10326

                     loc_9bce:
0000000000009bce         mov        byte [rbx+0xc0], 0x0                        ; CODE XREF=gobble_file.constprop.52+1333
0000000000009bd5         jmp        loc_982d
0000000000009bda         align      32

                     loc_9be0:
0000000000009be0         mov        rax, qword [rbp+var_388]                    ; CODE XREF=gobble_file.constprop.52+819
0000000000009be7         movzx      edx, byte [rax]
0000000000009bea         cmp        dl, 0x2f
0000000000009bed         jne        loc_9da0

0000000000009bf3         mov        r12, qword [rbp+var_388]

                     loc_9bfa:
0000000000009bfa         mov        esi, 0x2                                    ; argument #2 for method canonicalize_filename_mode, CODE XREF=gobble_file.constprop.52+310, gobble_file.constprop.52+1821
0000000000009bff         mov        rdi, r12                                    ; argument #1 for method canonicalize_filename_mode
0000000000009c02         call       canonicalize_filename_mode                  ; canonicalize_filename_mode
0000000000009c07         test       rax, rax
0000000000009c0a         mov        qword [rbx+0x10], rax
0000000000009c0e         jne        loc_97cc

0000000000009c14         lea        rsi, qword [aErrorCanonical]                ; argument "msgid" for method j_dcgettext, "error canonicalizing %s"
0000000000009c1b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000009c1d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000009c22         call       j_dcgettext                                 ; dcgettext
0000000000009c27         movzx      edi, r13b                                   ; argument #1 for method file_failure
0000000000009c2b         mov        rdx, r12                                    ; argument #3 for method file_failure
0000000000009c2e         mov        rsi, rax                                    ; argument #2 for method file_failure
0000000000009c31         call       file_failure                                ; file_failure
0000000000009c36         jmp        loc_97cc
0000000000009c3b         align      64

                     loc_9c40:
0000000000009c40         test       r13b, r13b                                  ; CODE XREF=gobble_file.constprop.52+338
0000000000009c43         je         loc_9b40

0000000000009c49         mov        rdx, r15                                    ; argument "__stat_buf" for method j___xstat
0000000000009c4c         mov        rsi, r12                                    ; argument "__filename" for method j___xstat
0000000000009c4f         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
0000000000009c54         mov        dword [rbp+var_390], ecx
0000000000009c5a         call       j___xstat                                   ; __xstat
0000000000009c5f         mov        ecx, dword [rbp+var_390]
0000000000009c65         cmp        ecx, 0x3
0000000000009c68         je         loc_9c87

0000000000009c6a         test       eax, eax
0000000000009c6c         js         loc_a270

0000000000009c72         mov        edx, dword [rbx+0x30]
0000000000009c75         and        edx, 0xf000
0000000000009c7b         cmp        edx, 0x4000
0000000000009c81         jne        loc_9b40

                     loc_9c87:
0000000000009c87         test       eax, eax                                    ; CODE XREF=gobble_file.constprop.52+1496
0000000000009c89         je         loc_9809

0000000000009c8f         jmp        loc_a27e
0000000000009c94         align      8

                     loc_9c98:
0000000000009c98         mov        rdi, qword [rbx+0x20]                       ; argument #1 for method umaxtostr, CODE XREF=gobble_file.constprop.52+740
0000000000009c9c         lea        rsi, qword [rbp+var_2D0]                    ; argument #2 for method umaxtostr
0000000000009ca3         call       umaxtostr                                   ; umaxtostr
0000000000009ca8         mov        rdi, rax                                    ; argument "__s" for method j_strlen
0000000000009cab         call       j_strlen                                    ; strlen
0000000000009cb0         cmp        eax, dword [inode_number_width]             ; inode_number_width
0000000000009cb6         jle        loc_997a

0000000000009cbc         mov        dword [inode_number_width], eax             ; inode_number_width
0000000000009cc2         jmp        loc_997a
0000000000009cc7         align      16

                     loc_9cd0:
0000000000009cd0         mov        rdi, qword [rbx+0x28]                       ; argument #1 for method umaxtostr, CODE XREF=gobble_file.constprop.52+725
0000000000009cd4         lea        rsi, qword [rbp+var_2F0]                    ; argument #2 for method umaxtostr
0000000000009cdb         call       umaxtostr                                   ; umaxtostr
0000000000009ce0         mov        rdi, rax                                    ; argument "__s" for method j_strlen
0000000000009ce3         call       j_strlen                                    ; strlen
0000000000009ce8         cmp        eax, dword [nlink_width]                    ; nlink_width
0000000000009cee         jle        loc_9cf6

0000000000009cf0         mov        dword [nlink_width], eax                    ; nlink_width

                     loc_9cf6:
0000000000009cf6         mov        eax, dword [rbx+0x30]                       ; CODE XREF=gobble_file.constprop.52+1630
0000000000009cf9         and        eax, 0xb000
0000000000009cfe         cmp        eax, 0x2000
0000000000009d03         jne        loc_9ec0

0000000000009d09         mov        rax, qword [rbx+0x40]
0000000000009d0d         lea        r13, qword [rbp+var_2D0]
0000000000009d14         mov        rsi, r13                                    ; argument #2 for method umaxtostr
0000000000009d17         mov        rdi, rax
0000000000009d1a         shr        rax, 0x20
0000000000009d1e         shr        rdi, 0x8
0000000000009d22         mov        edx, edi
0000000000009d24         mov        rdi, rax
0000000000009d27         and        edx, 0xfff
0000000000009d2d         and        edi, 0xfffff000
0000000000009d33         or         edi, edx                                    ; argument #1 for method umaxtostr
0000000000009d35         call       umaxtostr                                   ; umaxtostr
0000000000009d3a         mov        rdi, rax                                    ; argument "__s" for method j_strlen
0000000000009d3d         call       j_strlen                                    ; strlen
0000000000009d42         cmp        eax, dword [major_device_number_width]      ; major_device_number_width
0000000000009d48         jle        loc_9d50

0000000000009d4a         mov        dword [major_device_number_width], eax      ; major_device_number_width

                     loc_9d50:
0000000000009d50         mov        rax, qword [rbx+0x40]                       ; CODE XREF=gobble_file.constprop.52+1720
0000000000009d54         mov        rsi, r13                                    ; argument #2 for method umaxtostr
0000000000009d57         movzx      edx, al
0000000000009d5a         shr        rax, 0xc
0000000000009d5e         mov        rdi, rax
0000000000009d61         xor        dil, dil
0000000000009d64         or         edi, edx                                    ; argument #1 for method umaxtostr
0000000000009d66         call       umaxtostr                                   ; umaxtostr
0000000000009d6b         mov        rdi, rax                                    ; argument "__s" for method j_strlen
0000000000009d6e         call       j_strlen                                    ; strlen
0000000000009d73         mov        edx, dword [minor_device_number_width]      ; minor_device_number_width
0000000000009d79         cmp        eax, edx
0000000000009d7b         jle        loc_9d85

0000000000009d7d         mov        dword [minor_device_number_width], eax      ; minor_device_number_width
0000000000009d83         mov        edx, eax

                     loc_9d85:
0000000000009d85         mov        eax, dword [major_device_number_width]      ; major_device_number_width, CODE XREF=gobble_file.constprop.52+1771
0000000000009d8b         lea        eax, dword [rdx+rax+2]
0000000000009d8f         cmp        eax, dword [file_size_width]                ; file_size_width
0000000000009d95         jle        loc_996b

0000000000009d9b         jmp        loc_9ef8

                     loc_9da0:
0000000000009da0         movzx      ecx, byte [r15]                             ; CODE XREF=gobble_file.constprop.52+1373
0000000000009da4         mov        r12, qword [rbp+var_388]
0000000000009dab         test       cl, cl
0000000000009dad         je         loc_9bfa

                     loc_9db3:
0000000000009db3         mov        rdi, qword [rbp+var_388]                    ; argument "__s" for method j_strlen, CODE XREF=gobble_file.constprop.52+301, gobble_file.constprop.52+2198
0000000000009dba         mov        byte [rbp+var_392], dl
0000000000009dc0         mov        byte [rbp+var_391], cl
0000000000009dc6         mov        byte [rbp+var_390], r8b
0000000000009dcd         call       j_strlen                                    ; strlen
0000000000009dd2         mov        rdi, r15                                    ; argument "__s" for method j_strlen
0000000000009dd5         mov        r12, rax
0000000000009dd8         call       j_strlen                                    ; strlen
0000000000009ddd         lea        rax, qword [r12+rax+0x20]
0000000000009de2         movzx      ecx, byte [rbp+var_391]
0000000000009de9         movzx      r10d, byte [r15+1]
0000000000009dee         movzx      r8d, byte [rbp+var_390]
0000000000009df6         movzx      edx, byte [rbp+var_392]
0000000000009dfd         and        rax, 0xfffffffffffffff0
0000000000009e01         sub        rsp, rax
0000000000009e04         lea        rdi, qword [rsp+0x3a0+var_391]
0000000000009e09         and        rdi, 0xfffffffffffffff0
0000000000009e0d         cmp        cl, 0x2e
0000000000009e10         mov        r12, rdi
0000000000009e13         je         loc_9f08

                     loc_9e19:
0000000000009e19         mov        rsi, r15                                    ; CODE XREF=gobble_file.constprop.52+2180
0000000000009e1c         jmp        loc_9e2b
0000000000009e1e         align      32

                     loc_9e20:
0000000000009e20         mov        ecx, r10d                                   ; CODE XREF=gobble_file.constprop.52+1961
0000000000009e23         movzx      r10d, byte [rsi+1]
0000000000009e28         mov        rdi, rax

                     loc_9e2b:
0000000000009e2b         lea        rax, qword [rdi+1]                          ; CODE XREF=gobble_file.constprop.52+1932
0000000000009e2f         add        rsi, 0x1
0000000000009e33         test       r10b, r10b
0000000000009e36         mov        byte [rax-1], cl
0000000000009e39         jne        loc_9e20

0000000000009e3b         cmp        r15, rsi
0000000000009e3e         jae        loc_9e4d

0000000000009e40         cmp        byte [rsi-1], 0x2f
0000000000009e44         je         loc_9e4d

0000000000009e46         mov        byte [rax], 0x2f
0000000000009e49         lea        rax, qword [rdi+2]

                     loc_9e4d:
0000000000009e4d         test       dl, dl                                      ; CODE XREF=gobble_file.constprop.52+1966, gobble_file.constprop.52+1972, gobble_file.constprop.52+2174
0000000000009e4f         je         loc_9e72

0000000000009e51         mov        rcx, qword [rbp+var_388]
0000000000009e58         nop        dword [rax+rax]

                     loc_9e60:
0000000000009e60         add        rcx, 0x1                                    ; CODE XREF=gobble_file.constprop.52+2016
0000000000009e64         add        rax, 0x1
0000000000009e68         mov        byte [rax-1], dl
0000000000009e6b         movzx      edx, byte [rcx]
0000000000009e6e         test       dl, dl
0000000000009e70         jne        loc_9e60

                     loc_9e72:
0000000000009e72         mov        byte [rax], 0x0                             ; CODE XREF=gobble_file.constprop.52+1983
0000000000009e75         jmp        loc_97c3
0000000000009e7a         align      128

                     loc_9e80:
0000000000009e80         mov        rdi, qword [rbp+var_388]                    ; argument #1 for method needs_quoting, CODE XREF=gobble_file.constprop.52+251
0000000000009e87         call       needs_quoting                               ; needs_quoting
0000000000009e8c         movzx      edx, al
0000000000009e8f         test       al, al
0000000000009e91         mov        dword [rbx+0xc4], edx
0000000000009e97         je         loc_9791

0000000000009e9d         mov        byte [cwd_some_quoted], 0x1                 ; cwd_some_quoted
0000000000009ea4         jmp        loc_9791
0000000000009ea9         align      16

                     loc_9eb0:
0000000000009eb0         mov        dword [scontext_width], eax                 ; scontext_width, CODE XREF=gobble_file.constprop.52+711
0000000000009eb6         jmp        loc_995d
0000000000009ebb         align      64

                     loc_9ec0:
0000000000009ec0         mov        rdi, qword [rbx+0x48]                       ; argument #1 for method human_readable, CODE XREF=gobble_file.constprop.52+1651
0000000000009ec4         mov        r8, qword [file_output_block_size]          ; argument #5 for method human_readable, file_output_block_size
0000000000009ecb         lea        rsi, qword [rbp+var_2D0]                    ; argument #2 for method human_readable
0000000000009ed2         mov        edx, dword [file_human_output_opts]         ; argument #3 for method human_readable, file_human_output_opts
0000000000009ed8         mov        ecx, 0x1                                    ; argument #4 for method human_readable
0000000000009edd         call       human_readable                              ; human_readable
0000000000009ee2         xor        esi, esi                                    ; argument #2 for method gnu_mbswidth
0000000000009ee4         mov        rdi, rax                                    ; argument #1 for method gnu_mbswidth
0000000000009ee7         call       gnu_mbswidth                                ; gnu_mbswidth
0000000000009eec         cmp        eax, dword [file_size_width]                ; file_size_width
0000000000009ef2         jle        loc_996b

                     loc_9ef8:
0000000000009ef8         mov        dword [file_size_width], eax                ; file_size_width, CODE XREF=gobble_file.constprop.52+1803
0000000000009efe         jmp        loc_996b
0000000000009f03         align      8

                     loc_9f08:
0000000000009f08         test       r10b, r10b                                  ; CODE XREF=gobble_file.constprop.52+1923
0000000000009f0b         mov        rax, rdi
0000000000009f0e         je         loc_9e4d

0000000000009f14         jmp        loc_9e19
0000000000009f19         align      32

                     loc_9f20:
0000000000009f20         movzx      ecx, byte [r15]                             ; CODE XREF=gobble_file.constprop.52+1149
0000000000009f24         test       cl, cl
0000000000009f26         jne        loc_9db3

0000000000009f2c         mov        r12, qword [rbp+var_388]
0000000000009f33         jmp        loc_97cc
0000000000009f38         align      64

                     loc_9f40:
0000000000009f40         cmp        r14, qword [unsupported_device.10320]       ; unsupported_device.10320, CODE XREF=gobble_file.constprop.52+492
0000000000009f47         je         loc_a240

0000000000009f4d         mov        dword [r8], 0x0
0000000000009f54         mov        rsi, r15
0000000000009f57         mov        rdi, r12
0000000000009f5a         mov        qword [rbp+var_390], r8
0000000000009f61         call       file_has_acl                                ; file_has_acl
0000000000009f66         test       eax, eax
0000000000009f68         mov        ecx, 0x1
0000000000009f6d         mov        edx, 0x2
0000000000009f72         mov        r8, qword [rbp+var_390]
0000000000009f79         jle        loc_a3b0

                     loc_9f7f:
0000000000009f7f         or         byte [any_has_acl], cl                      ; any_has_acl, CODE XREF=gobble_file.constprop.52+3391
0000000000009f85         test       eax, eax
0000000000009f87         mov        qword [rbp+var_390], r8
0000000000009f8e         mov        dword [rbx+0xbc], edx
0000000000009f94         jns        loc_9fc2

0000000000009f96         mov        rdx, r12                                    ; argument #3 for method quotearg_n_style_colon
0000000000009f99         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
0000000000009f9e         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
0000000000009fa0         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000009fa5         mov        r8, qword [rbp+var_390]
0000000000009fac         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0x19f8c
0000000000009fb3         mov        rcx, rax
0000000000009fb6         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000009fb8         xor        eax, eax
0000000000009fba         mov        esi, dword [r8]                             ; argument "__errnum" for method j_error
0000000000009fbd         call       j_error                                     ; error

                     loc_9fc2:
0000000000009fc2         mov        eax, dword [rbx+0x30]                       ; CODE XREF=gobble_file.constprop.52+2308
0000000000009fc5         and        eax, 0xf000
0000000000009fca         cmp        eax, 0xa000
0000000000009fcf         jne        loc_989f

0000000000009fd5         mov        edi, dword [format]                         ; format
0000000000009fdb         test       edi, edi
0000000000009fdd         je         loc_9fed

0000000000009fdf         nop

                     loc_9fe0:
0000000000009fe0         cmp        byte [check_symlink_mode], 0x0              ; check_symlink_mode, CODE XREF=gobble_file.constprop.52+521
0000000000009fe7         je         loc_a0bb

                     loc_9fed:
0000000000009fed         mov        rsi, qword [rbx+0x48]                       ; argument #2 for method areadlink_with_size, CODE XREF=gobble_file.constprop.52+2381, gobble_file.constprop.52+3028
0000000000009ff1         mov        rdi, r12                                    ; argument #1 for method areadlink_with_size
0000000000009ff4         call       areadlink_with_size                         ; areadlink_with_size
0000000000009ff9         test       rax, rax
0000000000009ffc         mov        r14, rax
0000000000009fff         mov        qword [rbx+8], rax
000000000000a003         je         loc_a2b0

                     loc_a009:
000000000000a009         cmp        byte [r14], 0x2f                            ; CODE XREF=gobble_file.constprop.52+3145
000000000000a00d         je         loc_a228

000000000000a013         mov        rdi, r12                                    ; argument #1 for method dir_len
000000000000a016         call       dir_len                                     ; dir_len
000000000000a01b         test       rax, rax
000000000000a01e         je         loc_a228

000000000000a024         mov        rdi, r14                                    ; argument "__s" for method j_strlen
000000000000a027         mov        qword [rbp+var_390], rax
000000000000a02e         call       j_strlen                                    ; strlen
000000000000a033         mov        rdx, qword [rbp+var_390]
000000000000a03a         lea        rdi, qword [rdx+rax+2]                      ; argument #1 for method xmalloc
000000000000a03f         call       xmalloc                                     ; xmalloc
000000000000a044         mov        rdx, qword [rbp+var_390]
000000000000a04b         mov        r15, rax
000000000000a04e         cmp        byte [r12+rdx-1], 0x2f
000000000000a054         je         loc_a05a

000000000000a056         add        rdx, 0x1

                     loc_a05a:
000000000000a05a         mov        rsi, r12                                    ; argument "__src" for method j_stpncpy, CODE XREF=gobble_file.constprop.52+2500
000000000000a05d         mov        rdi, r15                                    ; argument "__dest" for method j_stpncpy
000000000000a060         call       j_stpncpy                                   ; stpncpy
000000000000a065         mov        rsi, r14                                    ; argument "__src" for method j_strcpy
000000000000a068         mov        rdi, rax                                    ; argument "__dest" for method j_strcpy
000000000000a06b         call       j_strcpy                                    ; strcpy

                     loc_a070:
000000000000a070         test       r15, r15                                    ; CODE XREF=gobble_file.constprop.52+2979
000000000000a073         je         loc_a2e0

000000000000a079         mov        esi, dword [rbx+0xc4]
000000000000a07f         test       esi, esi
000000000000a081         je         loc_a390

                     loc_a087:
000000000000a087         cmp        dword [indicator_style], 0x1                ; indicator_style, CODE XREF=gobble_file.constprop.52+3339, gobble_file.constprop.52+3355
000000000000a08e         ja         loc_a0d0

000000000000a090         cmp        byte [check_symlink_mode], 0x0              ; check_symlink_mode
000000000000a097         jne        loc_a0d0

000000000000a099         nop        dword [rax]

                     loc_a0a0:
000000000000a0a0         mov        rdi, r15                                    ; CODE XREF=gobble_file.constprop.52+2646, gobble_file.constprop.52+2667, gobble_file.constprop.52+3155
000000000000a0a3         call       sub_3880                                    ; sub_3880
000000000000a0a8         mov        eax, dword [rbx+0x30]
000000000000a0ab         and        eax, 0xf000
000000000000a0b0         cmp        eax, 0xa000
000000000000a0b5         jne        loc_989f

                     loc_a0bb:
000000000000a0bb         mov        dword [rbx+0xa8], 0x6                       ; CODE XREF=gobble_file.constprop.52+2391
000000000000a0c5         jmp        loc_98b4
000000000000a0ca         align      16

                     loc_a0d0:
000000000000a0d0         lea        rdx, qword [rbp+var_380]                    ; argument "__stat_buf" for method j___xstat, CODE XREF=gobble_file.constprop.52+2558, gobble_file.constprop.52+2567
000000000000a0d7         mov        rsi, r15                                    ; argument "__filename" for method j___xstat
000000000000a0da         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
000000000000a0df         call       j___xstat                                   ; __xstat
000000000000a0e4         test       eax, eax
000000000000a0e6         jne        loc_a0a0

000000000000a0e8         mov        eax, dword [rbp+var_368]
000000000000a0ee         mov        byte [rbx+0xb9], 0x1
000000000000a0f5         mov        dword [rbx+0xac], eax
000000000000a0fb         jmp        loc_a0a0
000000000000a0fd         align      256

                     loc_a100:
000000000000a100         test       r13b, r13b                                  ; CODE XREF=gobble_file.constprop.52+532
000000000000a103         je         loc_a120

000000000000a105         cmp        byte [immediate_dirs], 0x0                  ; immediate_dirs
000000000000a10c         jne        loc_a120

000000000000a10e         mov        dword [rbx+0xa8], 0x9
000000000000a118         jmp        loc_98b4
000000000000a11d         align      32

                     loc_a120:
000000000000a120         mov        dword [rbx+0xa8], 0x3                       ; CODE XREF=gobble_file.constprop.52+2675, gobble_file.constprop.52+2684
000000000000a12a         jmp        loc_98b4
000000000000a12f         align      16

                     loc_a130:
000000000000a130         mov        edi, dword [rbx+0x34]                       ; argument #1 for method format_user_width, CODE XREF=gobble_file.constprop.52+652
000000000000a133         call       format_user_width                           ; format_user_width
000000000000a138         cmp        eax, dword [owner_width]                    ; owner_width
000000000000a13e         jle        loc_9922

000000000000a144         mov        dword [owner_width], eax                    ; owner_width
000000000000a14a         jmp        loc_9922
000000000000a14f         align      16

                     loc_a150:
000000000000a150         cmp        byte [print_scontext], 0x0                  ; print_scontext, CODE XREF=gobble_file.constprop.52+639
000000000000a157         jne        loc_9945

000000000000a15d         jmp        loc_996b
000000000000a162         align      8

                     loc_a168:
000000000000a168         mov        edi, dword [rbx+0x34]                       ; argument #1 for method format_user_width, CODE XREF=gobble_file.constprop.52+678
000000000000a16b         call       format_user_width                           ; format_user_width
000000000000a170         cmp        eax, dword [author_width]                   ; author_width
000000000000a176         jle        loc_993c

000000000000a17c         mov        dword [author_width], eax                   ; author_width
000000000000a182         jmp        loc_993c
000000000000a187         align      16

                     loc_a190:
000000000000a190         cmp        byte [numeric_ids], 0x0                     ; numeric_ids, CODE XREF=gobble_file.constprop.52+665
000000000000a197         mov        r14d, dword [rbx+0x38]
000000000000a19b         je         loc_a360

                     loc_a1a1:
000000000000a1a1         lea        rcx, qword [aSorttypeSortve+27]             ; 0x1788d, CODE XREF=gobble_file.constprop.52+3294
000000000000a1a8         mov        r8d, r14d
000000000000a1ab         mov        edx, 0x15
000000000000a1b0         mov        esi, 0x1
000000000000a1b5         mov        rdi, r13
000000000000a1b8         xor        eax, eax
000000000000a1ba         call       j___sprintf_chk                             ; __sprintf_chk
000000000000a1bf         mov        rax, r13

                     loc_a1c2:
000000000000a1c2         mov        ecx, dword [rax]                            ; CODE XREF=gobble_file.constprop.52+2888
000000000000a1c4         add        rax, 0x4
000000000000a1c8         lea        edx, dword [rcx-0x1010101]
000000000000a1ce         not        ecx
000000000000a1d0         and        edx, ecx
000000000000a1d2         and        edx, 0x80808080
000000000000a1d8         je         loc_a1c2

000000000000a1da         mov        ecx, edx
000000000000a1dc         shr        ecx, 0x10
000000000000a1df         test       edx, 0x8080
000000000000a1e5         cmove      edx, ecx
000000000000a1e8         lea        rcx, qword [rax+2]
000000000000a1ec         mov        esi, edx
000000000000a1ee         cmove      rax, rcx
000000000000a1f2         add        sil, dl
000000000000a1f5         sbb        rax, 0x3
000000000000a1f9         sub        eax, r13d

                     loc_a1fc:
000000000000a1fc         cmp        dword [group_width], eax                    ; group_width, CODE XREF=gobble_file.constprop.52+3317
000000000000a202         jge        loc_992f

000000000000a208         mov        dword [group_width], eax                    ; group_width
000000000000a20e         jmp        loc_992f
000000000000a213         align      8

                     loc_a218:
000000000000a218         mov        r12, qword [rbp+var_388]                    ; CODE XREF=gobble_file.constprop.52+289
000000000000a21f         jmp        loc_97c3
000000000000a224         align      8

                     loc_a228:
000000000000a228         mov        rdi, r14                                    ; CODE XREF=gobble_file.constprop.52+2429, gobble_file.constprop.52+2446
000000000000a22b         call       xstrdup                                     ; xstrdup
000000000000a230         mov        r15, rax
000000000000a233         jmp        loc_a070
000000000000a238         align      64

                     loc_a240:
000000000000a240         mov        dword [r8], 0x5f                            ; CODE XREF=gobble_file.constprop.52+2231
000000000000a247         mov        eax, dword [rbx+0x30]
000000000000a24a         mov        dword [rbx+0xbc], 0x0
000000000000a254         and        eax, 0xf000
000000000000a259         cmp        eax, 0xa000
000000000000a25e         jne        loc_989f

000000000000a264         jmp        loc_9fed
000000000000a269         align      16

                     loc_a270:
000000000000a270         call       j___errno_location                          ; __errno_location, CODE XREF=gobble_file.constprop.52+1500
000000000000a275         cmp        dword [rax], 0x2
000000000000a278         je         loc_9b40

                     loc_a27e:
000000000000a27e         lea        rsi, qword [aCannotAccessS]                 ; argument "msgid" for method j_dcgettext, "cannot access %s", CODE XREF=gobble_file.constprop.52+1535
000000000000a285         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000a28a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000a28c         call       j_dcgettext                                 ; dcgettext
000000000000a291         mov        rdx, r12                                    ; argument #3 for method file_failure
000000000000a294         mov        rsi, rax                                    ; argument #2 for method file_failure
000000000000a297         mov        edi, 0x1                                    ; argument #1 for method file_failure
000000000000a29c         call       file_failure                                ; file_failure
000000000000a2a1         xor        r12d, r12d
000000000000a2a4         jmp        loc_9991
000000000000a2a9         align      16

                     loc_a2b0:
000000000000a2b0         lea        rsi, qword [aCannotReadSymb]                ; argument "msgid" for method j_dcgettext, "cannot read symbolic link %s", CODE XREF=gobble_file.constprop.52+2419
000000000000a2b7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000a2b9         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000a2be         call       j_dcgettext                                 ; dcgettext
000000000000a2c3         movzx      edi, r13b                                   ; argument #1 for method file_failure
000000000000a2c7         mov        rdx, r12                                    ; argument #3 for method file_failure
000000000000a2ca         mov        rsi, rax                                    ; argument #2 for method file_failure
000000000000a2cd         call       file_failure                                ; file_failure
000000000000a2d2         mov        r14, qword [rbx+8]
000000000000a2d6         test       r14, r14
000000000000a2d9         jne        loc_a009

000000000000a2df         nop

                     loc_a2e0:
000000000000a2e0         xor        r15d, r15d                                  ; CODE XREF=gobble_file.constprop.52+2531
000000000000a2e3         jmp        loc_a0a0
000000000000a2e8         align      16

                     loc_a2f0:
000000000000a2f0         cmp        byte [print_with_color], 0x0                ; print_with_color, CODE XREF=gobble_file.constprop.52+842
000000000000a2f7         je         loc_99e0

000000000000a2fd         mov        edi, 0x13                                   ; argument #1 for method is_colored
000000000000a302         mov        byte [rbp+var_390], r8b
000000000000a309         call       is_colored                                  ; is_colored
000000000000a30e         test       al, al
000000000000a310         movzx      r8d, byte [rbp+var_390]
000000000000a318         jne        loc_9b00

000000000000a31e         mov        edi, 0x12                                   ; argument #1 for method is_colored
000000000000a323         call       is_colored                                  ; is_colored
000000000000a328         test       al, al
000000000000a32a         movzx      r8d, byte [rbp+var_390]
000000000000a332         jne        loc_9b00

000000000000a338         mov        edi, 0x14                                   ; argument #1 for method is_colored
000000000000a33d         call       is_colored                                  ; is_colored
000000000000a342         test       al, al
000000000000a344         movzx      r8d, byte [rbp+var_390]
000000000000a34c         jne        loc_9b00

000000000000a352         jmp        loc_99e0
000000000000a357         align      32

                     loc_a360:
000000000000a360         mov        edi, r14d                                   ; argument #1 for method getgroup, CODE XREF=gobble_file.constprop.52+2827
000000000000a363         call       getgroup                                    ; getgroup
000000000000a368         test       rax, rax
000000000000a36b         mov        rdi, rax
000000000000a36e         je         loc_a1a1

000000000000a374         xor        esi, esi                                    ; argument #2 for method gnu_mbswidth
000000000000a376         call       gnu_mbswidth                                ; gnu_mbswidth
000000000000a37b         mov        edx, 0x0
000000000000a380         test       eax, eax
000000000000a382         cmovs      eax, edx
000000000000a385         jmp        loc_a1fc
000000000000a38a         align      16

                     loc_a390:
000000000000a390         mov        rdi, qword [rbx+8]                          ; argument #1 for method needs_quoting, CODE XREF=gobble_file.constprop.52+2545
000000000000a394         call       needs_quoting                               ; needs_quoting
000000000000a399         test       al, al
000000000000a39b         je         loc_a087

000000000000a3a1         mov        dword [rbx+0xc4], 0xffffffff
000000000000a3ab         jmp        loc_a087

                     loc_a3b0:
000000000000a3b0         mov        edx, dword [r8]                             ; CODE XREF=gobble_file.constprop.52+2281
000000000000a3b3         lea        ecx, dword [rdx-0x16]
000000000000a3b6         and        ecx, 0xffffffef
000000000000a3b9         je         loc_a3c0

000000000000a3bb         cmp        edx, 0x5f
000000000000a3be         jne        loc_a3cb

                     loc_a3c0:
000000000000a3c0         mov        rdx, qword [rbx+0x18]                       ; CODE XREF=gobble_file.constprop.52+3369
000000000000a3c4         mov        qword [unsupported_device.10320], rdx       ; unsupported_device.10320

                     loc_a3cb:
000000000000a3cb         xor        ecx, ecx                                    ; CODE XREF=gobble_file.constprop.52+3374
000000000000a3cd         xor        edx, edx
000000000000a3cf         jmp        loc_9f7f

                     loc_a3d4:
000000000000a3d4         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=gobble_file.constprop.52+785
                        ; endp

                     loc_a3d9:
000000000000a3d9         call       xalloc_die                                  ; xalloc_die, CODE XREF=gobble_file.constprop.52+96, gobble_file.constprop.52+105
                        ; endp

                     loc_a3de:
000000000000a3de         mov        esi, 0x1                                    ; CODE XREF=gobble_file.constprop.52+87
000000000000a3e3         jmp        loc_96ed
000000000000a3e8         align      16                                          ; End of unwind block (FDE at 0x1c110)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_2D8: int8_t, -728
        ;    var_360: int64_t, -864
        ;    var_368: int64_t, -872
        ;    var_36C: int32_t, -876
        ;    var_36D: int8_t, -877
        ;    var_378: int64_t, -888


                     print_dir:
000000000000a3f0         push       r15                                         ; Begin of unwind block (FDE at 0x1c140), CODE XREF=main+3360
000000000000a3f2         push       r14
000000000000a3f4         mov        r14, rdi
000000000000a3f7         push       r13
000000000000a3f9         push       r12
000000000000a3fb         push       rbp
000000000000a3fc         push       rbx
000000000000a3fd         mov        rbx, rsi
000000000000a400         sub        rsp, 0x348
000000000000a407         mov        dword [rsp+0x378+var_36C], edx
000000000000a40b         mov        byte [rsp+0x378+var_36D], dl
000000000000a40f         mov        rax, qword [fs:0x28]
000000000000a418         mov        qword [rsp+0x378+var_40], rax
000000000000a420         xor        eax, eax
000000000000a422         call       j___errno_location                          ; __errno_location
000000000000a427         mov        rdi, r14                                    ; argument "__name" for method j_opendir
000000000000a42a         mov        dword [rax], 0x0
000000000000a430         mov        r12, rax
000000000000a433         call       j_opendir                                   ; opendir
000000000000a438         test       rax, rax
000000000000a43b         je         loc_a970

000000000000a441         cmp        qword [active_dir_set], 0x0                 ; active_dir_set
000000000000a449         mov        r13, rax
000000000000a44c         je         loc_a5c7

000000000000a452         mov        rdi, rax                                    ; argument "__dirp" for method j_dirfd
000000000000a455         call       j_dirfd                                     ; dirfd
000000000000a45a         test       eax, eax
000000000000a45c         lea        rdx, qword [rsp+0x378+var_368]
000000000000a461         js         loc_a4d0

000000000000a463         mov        esi, eax                                    ; argument "__fildes" for method j___fxstat
000000000000a465         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstat
000000000000a46a         call       j___fxstat                                  ; __fxstat
000000000000a46f         shr        eax, 0x1f
000000000000a472         test       al, al
000000000000a474         je         loc_a4e4

                     loc_a476:
000000000000a476         lea        rsi, qword [aCannotDetermin]                ; argument "msgid" for method j_dcgettext, "cannot determine device and inode of %s", CODE XREF=print_dir+242
000000000000a47d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000a482         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000a484         call       j_dcgettext                                 ; dcgettext
000000000000a489         movzx      edi, byte [rsp+0x378+var_36C]               ; argument #1 for method file_failure
000000000000a48e         mov        rdx, r14                                    ; argument #3 for method file_failure
000000000000a491         mov        rsi, rax                                    ; argument #2 for method file_failure
000000000000a494         call       file_failure                                ; file_failure
000000000000a499         mov        rdi, r13                                    ; argument "__dirp" for method j_closedir
000000000000a49c         call       j_closedir                                  ; closedir

                     loc_a4a1:
000000000000a4a1         mov        rax, qword [rsp+0x378+var_40]               ; CODE XREF=print_dir+391, print_dir+1180, print_dir+1191, print_dir+1443
000000000000a4a9         xor        rax, qword [fs:0x28]
000000000000a4b2         jne        loc_aa9a

000000000000a4b8         add        rsp, 0x348
000000000000a4bf         pop        rbx
000000000000a4c0         pop        rbp
000000000000a4c1         pop        r12
000000000000a4c3         pop        r13
000000000000a4c5         pop        r14
000000000000a4c7         pop        r15
000000000000a4c9         ret
                        ; endp
000000000000a4ca         align      16

                     loc_a4d0:
000000000000a4d0         mov        rsi, r14                                    ; argument "__filename" for method j___xstat, CODE XREF=print_dir+113
000000000000a4d3         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
000000000000a4d8         call       j___xstat                                   ; __xstat
000000000000a4dd         shr        eax, 0x1f
000000000000a4e0         test       al, al
000000000000a4e2         jne        loc_a476

                     loc_a4e4:
000000000000a4e4         mov        rdx, qword [rsp+0x378+var_360]              ; CODE XREF=print_dir+132
000000000000a4e9         mov        edi, 0x10                                   ; argument #1 for method xmalloc
000000000000a4ee         mov        r15, qword [rsp+0x378+var_368]
000000000000a4f3         mov        qword [rsp+0x378+var_378], rdx
000000000000a4f7         call       xmalloc                                     ; xmalloc
000000000000a4fc         mov        rdx, qword [rsp+0x378+var_378]
000000000000a500         mov        rdi, qword [active_dir_set]                 ; argument #1 for method hash_insert, active_dir_set
000000000000a507         mov        rsi, rax                                    ; argument #2 for method hash_insert
000000000000a50a         mov        qword [rax+8], r15
000000000000a50e         mov        rbp, rax
000000000000a511         mov        qword [rax], rdx
000000000000a514         call       hash_insert                                 ; hash_insert
000000000000a519         test       rax, rax
000000000000a51c         je         loc_aa9f

000000000000a522         cmp        rbp, rax
000000000000a525         je         loc_a57c

000000000000a527         mov        rdi, rbp
000000000000a52a         call       sub_3880                                    ; sub_3880
000000000000a52f         mov        rdx, r14                                    ; argument #3 for method quotearg_n_style_colon
000000000000a532         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
000000000000a537         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
000000000000a539         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
000000000000a53e         lea        rsi, qword [aSNotListingAlr]                ; argument "msgid" for method j_dcgettext, "%s: not listing already-listed directory"
000000000000a545         mov        rbx, rax
000000000000a548         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000a54d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000a54f         call       j_dcgettext                                 ; dcgettext
000000000000a554         mov        rcx, rbx
000000000000a557         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000a55a         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000a55c         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000a55e         xor        eax, eax
000000000000a560         call       j_error                                     ; error
000000000000a565         mov        rdi, r13                                    ; argument "__dirp" for method j_closedir
000000000000a568         call       j_closedir                                  ; closedir
000000000000a56d         mov        dword [exit_status], 0x2                    ; exit_status
000000000000a577         jmp        loc_a4a1

                     loc_a57c:
000000000000a57c         mov        rax, qword [qword_2210f8]                   ; qword_2210f8, CODE XREF=print_dir+309
000000000000a583         mov        rdx, qword [qword_221100]                   ; qword_221100
000000000000a58a         mov        rbp, qword [rsp+0x378+var_360]
000000000000a58f         mov        r15, qword [rsp+0x378+var_368]
000000000000a594         sub        rdx, rax
000000000000a597         cmp        rdx, 0xf
000000000000a59b         ja         loc_a5b5

000000000000a59d         lea        rdi, qword [dev_ino_obstack]                ; argument #1 for method _obstack_newchunk, dev_ino_obstack
000000000000a5a4         mov        esi, 0x10                                   ; argument #2 for method _obstack_newchunk
000000000000a5a9         call       _obstack_newchunk                           ; _obstack_newchunk
000000000000a5ae         mov        rax, qword [qword_2210f8]                   ; qword_2210f8

                     loc_a5b5:
000000000000a5b5         lea        rdx, qword [rax+0x10]                       ; CODE XREF=print_dir+427
000000000000a5b9         mov        qword [qword_2210f8], rdx                   ; qword_2210f8
000000000000a5c0         mov        qword [rax+8], r15
000000000000a5c4         mov        qword [rax], rbp

                     loc_a5c7:
000000000000a5c7         call       clear_files                                 ; clear_files, CODE XREF=print_dir+92
000000000000a5cc         cmp        byte [recursive], 0x0                       ; recursive
000000000000a5d3         jne        loc_a680

000000000000a5d9         cmp        byte [print_dir_name], 0x0                  ; print_dir_name
000000000000a5e0         jne        loc_a680

                     loc_a5e6:
000000000000a5e6         mov        qword [rsp+0x378+var_378], 0x0              ; CODE XREF=print_dir+834
000000000000a5ee         nop

                     loc_a5f0:
000000000000a5f0         mov        dword [r12], 0x0                            ; CODE XREF=print_dir+645
000000000000a5f8         mov        rdi, r13                                    ; argument "__dirp" for method j_readdir
000000000000a5fb         call       j_readdir                                   ; readdir
000000000000a600         test       rax, rax
000000000000a603         mov        rbp, rax
000000000000a606         je         loc_a740

000000000000a60c         lea        rbx, qword [rax+0x13]
000000000000a610         mov        eax, dword [ignore_mode]                    ; ignore_mode
000000000000a616         cmp        eax, 0x2
000000000000a619         je         loc_a8c0

000000000000a61f         cmp        byte [rbp+0x13], 0x2e
000000000000a623         je         loc_a8a0

000000000000a629         test       eax, eax
000000000000a62b         jne        loc_a8c0

000000000000a631         mov        r15, qword [hide_patterns]                  ; hide_patterns
000000000000a638         test       r15, r15
000000000000a63b         jne        loc_a655

000000000000a63d         jmp        loc_a8c0
000000000000a642         align      8

                     loc_a648:
000000000000a648         mov        r15, qword [r15+8]                          ; CODE XREF=print_dir+631
000000000000a64c         test       r15, r15
000000000000a64f         je         loc_a8c0

                     loc_a655:
000000000000a655         mov        rdi, qword [r15]                            ; argument "__pattern" for method j_fnmatch, CODE XREF=print_dir+587
000000000000a658         mov        edx, 0x4                                    ; argument "__flags" for method j_fnmatch
000000000000a65d         mov        rsi, rbx                                    ; argument "__name" for method j_fnmatch
000000000000a660         call       j_fnmatch                                   ; fnmatch
000000000000a665         test       eax, eax
000000000000a667         jne        loc_a648

000000000000a669         nop        dword [rax]

                     loc_a670:
000000000000a670         call       process_signals                             ; process_signals, CODE XREF=print_dir+896, print_dir+1202, print_dir+1222, print_dir+1277, print_dir+1338, print_dir+1351, print_dir+1364, print_dir+1377, print_dir+1398
000000000000a675         jmp        loc_a5f0
000000000000a67a         align      128

                     loc_a680:
000000000000a680         cmp        byte [first.10256], 0x0                     ; first.10256, CODE XREF=print_dir+483, print_dir+496
000000000000a687         jne        loc_a6b1

000000000000a689         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000a690         mov        rax, qword [rdi+0x28]
000000000000a694         cmp        rax, qword [rdi+0x30]
000000000000a698         jae        loc_aa8b

000000000000a69e         lea        rdx, qword [rax+1]
000000000000a6a2         mov        qword [rdi+0x28], rdx
000000000000a6a6         mov        byte [rax], 0xa

                     loc_a6a9:
000000000000a6a9         add        qword [dired_pos], 0x1                      ; dired_pos, CODE XREF=print_dir+1701

                     loc_a6b1:
000000000000a6b1         cmp        byte [dired], 0x0                           ; dired, CODE XREF=print_dir+663
000000000000a6b8         mov        byte [first.10256], 0x0                     ; first.10256
000000000000a6bf         jne        loc_aa43

                     loc_a6c5:
000000000000a6c5         xor        ebp, ebp                                    ; CODE XREF=print_dir+1656
000000000000a6c7         cmp        byte [print_hyperlink], 0x0                 ; print_hyperlink
000000000000a6ce         jne        loc_aa02

                     loc_a6d4:
000000000000a6d4         test       rbx, rbx                                    ; CODE XREF=print_dir+1573, print_dir+1614
000000000000a6d7         mov        rsi, qword [dirname_quoting_options]        ; argument #2 for method quote_name, dirname_quoting_options
000000000000a6de         lea        r9, qword [subdired_obstack]                ; argument #6 for method quote_name, subdired_obstack
000000000000a6e5         cmove      rbx, r14
000000000000a6e9         sub        rsp, 0x8
000000000000a6ed         mov        r8d, 0x1                                    ; argument #5 for method quote_name
000000000000a6f3         push       rbp                                         ; argument #7 for method quote_name
000000000000a6f4         xor        ecx, ecx                                    ; argument #4 for method quote_name
000000000000a6f6         mov        edx, 0xffffffff                             ; argument #3 for method quote_name
000000000000a6fb         mov        rdi, rbx                                    ; argument #1 for method quote_name
000000000000a6fe         call       quote_name                                  ; quote_name
000000000000a703         mov        rdi, rbp
000000000000a706         call       sub_3880                                    ; sub_3880
000000000000a70b         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5
000000000000a712         lea        rdi, qword [aValidArguments_17b2c+19]       ; argument "__ptr" for method j_fwrite_unlocked, 0x17b3f
000000000000a719         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
000000000000a71e         mov        edx, 0x2                                    ; argument "__n" for method j_fwrite_unlocked
000000000000a723         call       j_fwrite_unlocked                           ; fwrite_unlocked
000000000000a728         pop        rcx
000000000000a729         add        qword [dired_pos], 0x2                      ; dired_pos
000000000000a731         pop        rsi
000000000000a732         jmp        loc_a5e6
000000000000a737         align      64

                     loc_a740:
000000000000a740         mov        edx, dword [r12]                            ; CODE XREF=print_dir+534
000000000000a744         test       edx, edx
000000000000a746         je         loc_a776

000000000000a748         lea        rsi, qword [aReadingDirecto]                ; argument "msgid" for method j_dcgettext, "reading directory %s"
000000000000a74f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000a751         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000a756         call       j_dcgettext                                 ; dcgettext
000000000000a75b         movzx      edi, byte [rsp+0x378+var_36D]               ; argument #1 for method file_failure
000000000000a760         mov        rdx, r14                                    ; argument #3 for method file_failure
000000000000a763         mov        rsi, rax                                    ; argument #2 for method file_failure
000000000000a766         call       file_failure                                ; file_failure
000000000000a76b         cmp        dword [r12], 0x4b
000000000000a770         je         loc_a670

                     loc_a776:
000000000000a776         mov        rdi, r13                                    ; argument "__dirp" for method j_closedir, CODE XREF=print_dir+854
000000000000a779         call       j_closedir                                  ; closedir
000000000000a77e         test       eax, eax
000000000000a780         jne        loc_a9b0

                     loc_a786:
000000000000a786         call       sort_files                                  ; sort_files, CODE XREF=print_dir+1507
000000000000a78b         cmp        byte [recursive], 0x0                       ; recursive
000000000000a792         jne        loc_a998

                     loc_a798:
000000000000a798         mov        eax, dword [format]                         ; format, CODE XREF=print_dir+1458
000000000000a79e         test       eax, eax
000000000000a7a0         je         loc_a7af

000000000000a7a2         cmp        byte [print_block_size], 0x0                ; print_block_size
000000000000a7a9         je         loc_a884

                     loc_a7af:
000000000000a7af         cmp        byte [dired], 0x0                           ; dired, CODE XREF=print_dir+944
000000000000a7b6         jne        loc_a9d8

                     loc_a7bc:
000000000000a7bc         lea        rsi, qword [aTotal]                         ; argument "msgid" for method j_dcgettext, "total", CODE XREF=print_dir+1549
000000000000a7c3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000a7c8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000a7ca         call       j_dcgettext                                 ; dcgettext
000000000000a7cf         mov        rsi, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fputs_unlocked, stdout@@GLIBC_2.2.5
000000000000a7d6         mov        rbx, rax
000000000000a7d9         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000a7dc         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000a7e1         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
000000000000a7e4         call       j_strlen                                    ; strlen
000000000000a7e9         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000a7f0         add        qword [dired_pos], rax                      ; dired_pos
000000000000a7f7         mov        rax, qword [rdi+0x28]
000000000000a7fb         cmp        rax, qword [rdi+0x30]
000000000000a7ff         jae        loc_aa6d

000000000000a805         lea        rdx, qword [rax+1]
000000000000a809         mov        qword [rdi+0x28], rdx
000000000000a80d         mov        byte [rax], 0x20

                     loc_a810:
000000000000a810         mov        r8, qword [output_block_size]               ; argument #5 for method human_readable, output_block_size, CODE XREF=print_dir+1671
000000000000a817         mov        edx, dword [human_output_opts]              ; argument #3 for method human_readable, human_output_opts
000000000000a81d         lea        rsi, qword [rsp+0x378+var_2D8]              ; argument #2 for method human_readable
000000000000a825         mov        rdi, qword [rsp+0x378+var_378]              ; argument #1 for method human_readable
000000000000a829         mov        ecx, 0x200                                  ; argument #4 for method human_readable
000000000000a82e         add        qword [dired_pos], 0x1                      ; dired_pos
000000000000a836         call       human_readable                              ; human_readable
000000000000a83b         mov        rsi, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fputs_unlocked, stdout@@GLIBC_2.2.5
000000000000a842         mov        rbx, rax
000000000000a845         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000a848         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000a84d         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
000000000000a850         call       j_strlen                                    ; strlen
000000000000a855         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000a85c         add        qword [dired_pos], rax                      ; dired_pos
000000000000a863         mov        rax, qword [rdi+0x28]
000000000000a867         cmp        rax, qword [rdi+0x30]
000000000000a86b         jae        loc_aa7c

000000000000a871         lea        rdx, qword [rax+1]
000000000000a875         mov        qword [rdi+0x28], rdx
000000000000a879         mov        byte [rax], 0xa

                     loc_a87c:
000000000000a87c         add        qword [dired_pos], 0x1                      ; dired_pos, CODE XREF=print_dir+1686

                     loc_a884:
000000000000a884         cmp        qword [cwd_n_used], 0x0                     ; cwd_n_used, CODE XREF=print_dir+953
000000000000a88c         je         loc_a4a1

000000000000a892         call       print_current_files                         ; print_current_files
000000000000a897         jmp        loc_a4a1
000000000000a89c         align      32

                     loc_a8a0:
000000000000a8a0         test       eax, eax                                    ; CODE XREF=print_dir+563
000000000000a8a2         je         loc_a670

000000000000a8a8         xor        eax, eax
000000000000a8aa         cmp        byte [rbp+0x14], 0x2e
000000000000a8ae         sete       al
000000000000a8b1         cmp        byte [rbp+rax+0x14], 0x0
000000000000a8b6         je         loc_a670

000000000000a8bc         nop        dword [rax]

                     loc_a8c0:
000000000000a8c0         mov        r15, qword [ignore_patterns]                ; ignore_patterns, CODE XREF=print_dir+553, print_dir+571, print_dir+589, print_dir+607
000000000000a8c7         test       r15, r15
000000000000a8ca         jne        loc_a8d9

000000000000a8cc         jmp        loc_a8f8
000000000000a8ce         align      16

                     loc_a8d0:
000000000000a8d0         mov        r15, qword [r15+8]                          ; CODE XREF=print_dir+1275
000000000000a8d4         test       r15, r15
000000000000a8d7         je         loc_a8f8

                     loc_a8d9:
000000000000a8d9         mov        rdi, qword [r15]                            ; argument "__pattern" for method j_fnmatch, CODE XREF=print_dir+1242
000000000000a8dc         mov        edx, 0x4                                    ; argument "__flags" for method j_fnmatch
000000000000a8e1         mov        rsi, rbx                                    ; argument "__name" for method j_fnmatch
000000000000a8e4         call       j_fnmatch                                   ; fnmatch
000000000000a8e9         test       eax, eax
000000000000a8eb         jne        loc_a8d0

000000000000a8ed         jmp        loc_a670
000000000000a8f2         align      8

                     loc_a8f8:
000000000000a8f8         movzx      eax, byte [rbp+0x12]                        ; CODE XREF=print_dir+1244, print_dir+1255
000000000000a8fc         xor        esi, esi
000000000000a8fe         sub        eax, 0x1
000000000000a901         cmp        al, 0xd
000000000000a903         ja         loc_a912

000000000000a905         lea        rcx, qword [CSWTCH.920]                     ; CSWTCH.920
000000000000a90c         movzx      eax, al
000000000000a90f         mov        esi, dword [rcx+rax*4]

                     loc_a912:
000000000000a912         xor        edx, edx                                    ; argument #3 for method gobble_file.constprop.52, CODE XREF=print_dir+1299
000000000000a914         mov        rcx, r14                                    ; argument #4 for method gobble_file.constprop.52
000000000000a917         mov        rdi, rbx                                    ; argument #1 for method gobble_file.constprop.52
000000000000a91a         call       gobble_file.constprop.52                    ; gobble_file.constprop.52
000000000000a91f         add        qword [rsp+0x378+var_378], rax
000000000000a923         cmp        dword [format], 0x1                         ; format
000000000000a92a         jne        loc_a670

000000000000a930         cmp        dword [sort_type], 0xffffffff               ; sort_type
000000000000a937         jne        loc_a670

000000000000a93d         cmp        byte [print_block_size], 0x0                ; print_block_size
000000000000a944         jne        loc_a670

000000000000a94a         cmp        byte [recursive], 0x0                       ; recursive
000000000000a951         jne        loc_a670

000000000000a957         call       sort_files                                  ; sort_files
000000000000a95c         call       print_current_files                         ; print_current_files
000000000000a961         call       clear_files                                 ; clear_files
000000000000a966         jmp        loc_a670
000000000000a96b         align      16

                     loc_a970:
000000000000a970         lea        rsi, qword [aCannotOpenDire]                ; argument "msgid" for method j_dcgettext, "cannot open directory %s", CODE XREF=print_dir+75
000000000000a977         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000a979         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000a97e         call       j_dcgettext                                 ; dcgettext
000000000000a983         movzx      edi, byte [rsp+0x378+var_36C]               ; argument #1 for method file_failure
000000000000a988         mov        rdx, r14                                    ; argument #3 for method file_failure
000000000000a98b         mov        rsi, rax                                    ; argument #2 for method file_failure
000000000000a98e         call       file_failure                                ; file_failure
000000000000a993         jmp        loc_a4a1

                     loc_a998:
000000000000a998         xor        esi, esi                                    ; argument #2 for method extract_dirs_from_files, CODE XREF=print_dir+930
000000000000a99a         mov        rdi, r14                                    ; argument #1 for method extract_dirs_from_files
000000000000a99d         call       extract_dirs_from_files                     ; extract_dirs_from_files
000000000000a9a2         jmp        loc_a798
000000000000a9a7         align      16

                     loc_a9b0:
000000000000a9b0         lea        rsi, qword [aClosingDirecto]                ; argument "msgid" for method j_dcgettext, "closing directory %s", CODE XREF=print_dir+912
000000000000a9b7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000a9b9         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000a9be         call       j_dcgettext                                 ; dcgettext
000000000000a9c3         movzx      edi, byte [rsp+0x378+var_36C]               ; argument #1 for method file_failure
000000000000a9c8         mov        rdx, r14                                    ; argument #3 for method file_failure
000000000000a9cb         mov        rsi, rax                                    ; argument #2 for method file_failure
000000000000a9ce         call       file_failure                                ; file_failure
000000000000a9d3         jmp        loc_a786

                     loc_a9d8:
000000000000a9d8         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5, CODE XREF=print_dir+966
000000000000a9df         lea        rdi, qword [aSS+8]                          ; argument "__ptr" for method j_fwrite_unlocked, 0x178bc
000000000000a9e6         mov        edx, 0x2                                    ; argument "__n" for method j_fwrite_unlocked
000000000000a9eb         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
000000000000a9f0         call       j_fwrite_unlocked                           ; fwrite_unlocked
000000000000a9f5         add        qword [dired_pos], 0x2                      ; dired_pos
000000000000a9fd         jmp        loc_a7bc

                     loc_aa02:
000000000000aa02         mov        esi, 0x2                                    ; argument #2 for method canonicalize_filename_mode, CODE XREF=print_dir+734
000000000000aa07         mov        rdi, r14                                    ; argument #1 for method canonicalize_filename_mode
000000000000aa0a         call       canonicalize_filename_mode                  ; canonicalize_filename_mode
000000000000aa0f         test       rax, rax
000000000000aa12         mov        rbp, rax
000000000000aa15         jne        loc_a6d4

000000000000aa1b         lea        rsi, qword [aErrorCanonical]                ; argument "msgid" for method j_dcgettext, "error canonicalizing %s"
000000000000aa22         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000aa24         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000aa29         call       j_dcgettext                                 ; dcgettext
000000000000aa2e         movzx      edi, byte [rsp+0x378+var_36C]               ; argument #1 for method file_failure
000000000000aa33         mov        rdx, r14                                    ; argument #3 for method file_failure
000000000000aa36         mov        rsi, rax                                    ; argument #2 for method file_failure
000000000000aa39         call       file_failure                                ; file_failure
000000000000aa3e         jmp        loc_a6d4

                     loc_aa43:
000000000000aa43         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5, CODE XREF=print_dir+719
000000000000aa4a         lea        rdi, qword [aSS+8]                          ; argument "__ptr" for method j_fwrite_unlocked, 0x178bc
000000000000aa51         mov        edx, 0x2                                    ; argument "__n" for method j_fwrite_unlocked
000000000000aa56         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
000000000000aa5b         call       j_fwrite_unlocked                           ; fwrite_unlocked
000000000000aa60         add        qword [dired_pos], 0x2                      ; dired_pos
000000000000aa68         jmp        loc_a6c5

                     loc_aa6d:
000000000000aa6d         mov        esi, 0x20                                   ; argument #2 for method j___overflow, CODE XREF=print_dir+1039
000000000000aa72         call       j___overflow                                ; __overflow
000000000000aa77         jmp        loc_a810

                     loc_aa7c:
000000000000aa7c         mov        esi, 0xa                                    ; argument #2 for method j___overflow, CODE XREF=print_dir+1147
000000000000aa81         call       j___overflow                                ; __overflow
000000000000aa86         jmp        loc_a87c

                     loc_aa8b:
000000000000aa8b         mov        esi, 0xa                                    ; argument #2 for method j___overflow, CODE XREF=print_dir+680
000000000000aa90         call       j___overflow                                ; __overflow
000000000000aa95         jmp        loc_a6a9

                     loc_aa9a:
000000000000aa9a         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=print_dir+194
                        ; endp

                     loc_aa9f:
000000000000aa9f         call       xalloc_die                                  ; xalloc_die, CODE XREF=print_dir+300
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_aaa4:
000000000000aaa4         nop                                                    ; End of unwind block (FDE at 0x1c140)
000000000000aaa6         nop        word [cs:rax+rax]
                     xstrcoll_ctime:
000000000000aab0         mov        rax, qword [rsi+0x80]                       ; Begin of unwind block (FDE at 0x1c1a0)
000000000000aab7         cmp        qword [rdi+0x80], rax
000000000000aabe         jg         loc_aaf0

000000000000aac0         jl         loc_aae0

000000000000aac2         mov        rax, qword [rsi+0x88]
000000000000aac9         sub        eax, dword [rdi+0x88]
000000000000aacf         jne        loc_aae5

000000000000aad1         mov        rsi, qword [rsi]                            ; argument #2 for method xstrcoll
000000000000aad4         mov        rdi, qword [rdi]                            ; argument #1 for method xstrcoll
000000000000aad7         jmp        xstrcoll                                    ; xstrcoll
                        ; endp
000000000000aadc         align      32

                     loc_aae0:
000000000000aae0         mov        eax, 0x1                                    ; CODE XREF=xstrcoll_ctime+16

                     loc_aae5:
000000000000aae5         ret                                                    ; CODE XREF=xstrcoll_ctime+31
                        ; endp
000000000000aae7         align      16

                     loc_aaf0:
000000000000aaf0         mov        eax, 0xffffffff                             ; CODE XREF=xstrcoll_ctime+14
000000000000aaf5         ret
                        ; endp
000000000000aaf6         align      256                                         ; End of unwind block (FDE at 0x1c1a0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrcoll_atime:
000000000000ab00         mov        rax, qword [rsi+0x60]                       ; Begin of unwind block (FDE at 0x1c1b4)
000000000000ab04         cmp        qword [rdi+0x60], rax
000000000000ab08         jg         loc_ab30

000000000000ab0a         jl         loc_ab20

000000000000ab0c         mov        rax, qword [rsi+0x68]
000000000000ab10         sub        eax, dword [rdi+0x68]
000000000000ab13         jne        loc_ab25

000000000000ab15         mov        rsi, qword [rsi]
000000000000ab18         mov        rdi, qword [rdi]
000000000000ab1b         jmp        xstrcoll                                    ; xstrcoll
                        ; endp

                     loc_ab20:
000000000000ab20         mov        eax, 0x1                                    ; CODE XREF=xstrcoll_atime+10

                     loc_ab25:
000000000000ab25         ret                                                    ; CODE XREF=xstrcoll_atime+19
                        ; endp
000000000000ab27         align      16

                     loc_ab30:
000000000000ab30         mov        eax, 0xffffffff                             ; CODE XREF=xstrcoll_atime+8
000000000000ab35         ret
                        ; endp
000000000000ab36         align      64                                          ; End of unwind block (FDE at 0x1c1b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrcoll_mtime:
000000000000ab40         mov        rax, qword [rsi+0x70]                       ; Begin of unwind block (FDE at 0x1c1c8)
000000000000ab44         cmp        qword [rdi+0x70], rax
000000000000ab48         jg         loc_ab70

000000000000ab4a         jl         loc_ab60

000000000000ab4c         mov        rax, qword [rsi+0x78]
000000000000ab50         sub        eax, dword [rdi+0x78]
000000000000ab53         jne        loc_ab65

000000000000ab55         mov        rsi, qword [rsi]
000000000000ab58         mov        rdi, qword [rdi]
000000000000ab5b         jmp        xstrcoll                                    ; xstrcoll
                        ; endp

                     loc_ab60:
000000000000ab60         mov        eax, 0x1                                    ; CODE XREF=xstrcoll_mtime+10

                     loc_ab65:
000000000000ab65         ret                                                    ; CODE XREF=xstrcoll_mtime+19
                        ; endp
000000000000ab67         align      16

                     loc_ab70:
000000000000ab70         mov        eax, 0xffffffff                             ; CODE XREF=xstrcoll_mtime+8
000000000000ab75         ret
                        ; endp
000000000000ab76         align      128                                         ; End of unwind block (FDE at 0x1c1c8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rev_xstrcoll_mtime:
000000000000ab80         mov        rax, qword [rdi+0x70]                       ; Begin of unwind block (FDE at 0x1c1dc)
000000000000ab84         cmp        qword [rsi+0x70], rax
000000000000ab88         mov        rdx, rsi
000000000000ab8b         jg         loc_abb0

000000000000ab8d         jl         loc_aba8

000000000000ab8f         mov        rax, qword [rdi+0x78]
000000000000ab93         sub        eax, dword [rsi+0x78]
000000000000ab96         jne        loc_abad

000000000000ab98         mov        rsi, qword [rdi]
000000000000ab9b         mov        rdi, qword [rdx]
000000000000ab9e         jmp        xstrcoll                                    ; xstrcoll
                        ; endp
000000000000aba3         align      8

                     loc_aba8:
000000000000aba8         mov        eax, 0x1                                    ; CODE XREF=rev_xstrcoll_mtime+13

                     loc_abad:
000000000000abad         ret                                                    ; CODE XREF=rev_xstrcoll_mtime+22
                        ; endp
000000000000abaf         align      16

                     loc_abb0:
000000000000abb0         mov        eax, 0xffffffff                             ; CODE XREF=rev_xstrcoll_mtime+11
000000000000abb5         ret
                        ; endp
000000000000abb6         align      64                                          ; End of unwind block (FDE at 0x1c1dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rev_xstrcoll_atime:
000000000000abc0         mov        rax, qword [rdi+0x60]                       ; Begin of unwind block (FDE at 0x1c1f0)
000000000000abc4         cmp        qword [rsi+0x60], rax
000000000000abc8         mov        rdx, rsi
000000000000abcb         jg         loc_abf0

000000000000abcd         jl         loc_abe8

000000000000abcf         mov        rax, qword [rdi+0x68]
000000000000abd3         sub        eax, dword [rsi+0x68]
000000000000abd6         jne        loc_abed

000000000000abd8         mov        rsi, qword [rdi]
000000000000abdb         mov        rdi, qword [rdx]
000000000000abde         jmp        xstrcoll                                    ; xstrcoll
                        ; endp
000000000000abe3         align      8

                     loc_abe8:
000000000000abe8         mov        eax, 0x1                                    ; CODE XREF=rev_xstrcoll_atime+13

                     loc_abed:
000000000000abed         ret                                                    ; CODE XREF=rev_xstrcoll_atime+22
                        ; endp
000000000000abef         align      16

                     loc_abf0:
000000000000abf0         mov        eax, 0xffffffff                             ; CODE XREF=rev_xstrcoll_atime+11
000000000000abf5         ret
                        ; endp
000000000000abf6         align      1024                                        ; End of unwind block (FDE at 0x1c1f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rev_xstrcoll_ctime:
000000000000ac00         mov        rax, qword [rdi+0x80]                       ; Begin of unwind block (FDE at 0x1c204)
000000000000ac07         cmp        qword [rsi+0x80], rax
000000000000ac0e         mov        rdx, rsi
000000000000ac11         jg         loc_ac40

000000000000ac13         jl         loc_ac30

000000000000ac15         mov        rax, qword [rdi+0x88]
000000000000ac1c         sub        eax, dword [rsi+0x88]
000000000000ac22         jne        loc_ac35

000000000000ac24         mov        rsi, qword [rdi]
000000000000ac27         mov        rdi, qword [rdx]
000000000000ac2a         jmp        xstrcoll                                    ; xstrcoll
                        ; endp
000000000000ac2f         align      16

                     loc_ac30:
000000000000ac30         mov        eax, 0x1                                    ; CODE XREF=rev_xstrcoll_ctime+19

                     loc_ac35:
000000000000ac35         ret                                                    ; CODE XREF=rev_xstrcoll_ctime+34
                        ; endp
000000000000ac37         align      64

                     loc_ac40:
000000000000ac40         mov        eax, 0xffffffff                             ; CODE XREF=rev_xstrcoll_ctime+17
000000000000ac45         ret
                        ; endp
000000000000ac46         align      16                                          ; End of unwind block (FDE at 0x1c204)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrcoll_extension:
000000000000ac50         push       r12                                         ; Begin of unwind block (FDE at 0x1c218)
000000000000ac52         push       rbp
000000000000ac53         mov        rbp, rdi
000000000000ac56         push       rbx
000000000000ac57         mov        rdi, qword [rdi]                            ; argument "__s" for method j_strrchr
000000000000ac5a         mov        r12, rsi
000000000000ac5d         mov        esi, 0x2e                                   ; argument "__c" for method j_strrchr
000000000000ac62         call       j_strrchr                                   ; strrchr
000000000000ac67         mov        rdi, qword [r12]                            ; argument "__s" for method j_strrchr
000000000000ac6b         mov        esi, 0x2e                                   ; argument "__c" for method j_strrchr
000000000000ac70         mov        rbx, rax
000000000000ac73         call       j_strrchr                                   ; strrchr
000000000000ac78         lea        rdx, qword [aLu+34]                         ; 0x178b3
000000000000ac7f         test       rax, rax
000000000000ac82         cmove      rax, rdx
000000000000ac86         test       rbx, rbx
000000000000ac89         cmove      rbx, rdx
000000000000ac8d         mov        rsi, rax
000000000000ac90         mov        rdi, rbx
000000000000ac93         call       xstrcoll                                    ; xstrcoll
000000000000ac98         test       eax, eax
000000000000ac9a         jne        loc_acb0

000000000000ac9c         pop        rbx
000000000000ac9d         mov        rsi, qword [r12]
000000000000aca1         mov        rdi, qword [rbp]
000000000000aca5         pop        rbp
000000000000aca6         pop        r12
000000000000aca8         jmp        xstrcoll                                    ; xstrcoll
                        ; endp
000000000000acad         align      16

                     loc_acb0:
000000000000acb0         pop        rbx                                         ; CODE XREF=xstrcoll_extension+74
000000000000acb1         pop        rbp
000000000000acb2         pop        r12
000000000000acb4         ret
                        ; endp
000000000000acb5         align      64                                          ; End of unwind block (FDE at 0x1c218)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rev_xstrcoll_extension:
000000000000acc0         push       r12                                         ; Begin of unwind block (FDE at 0x1c250)
000000000000acc2         push       rbp
000000000000acc3         mov        rbp, rsi
000000000000acc6         push       rbx
000000000000acc7         mov        r12, rdi
000000000000acca         mov        rdi, qword [rbp]                            ; argument "__s" for method j_strrchr
000000000000acce         mov        esi, 0x2e                                   ; argument "__c" for method j_strrchr
000000000000acd3         call       j_strrchr                                   ; strrchr
000000000000acd8         mov        rdi, qword [r12]                            ; argument "__s" for method j_strrchr
000000000000acdc         mov        esi, 0x2e                                   ; argument "__c" for method j_strrchr
000000000000ace1         mov        rbx, rax
000000000000ace4         call       j_strrchr                                   ; strrchr
000000000000ace9         lea        rdx, qword [aLu+34]                         ; 0x178b3
000000000000acf0         test       rax, rax
000000000000acf3         cmove      rax, rdx
000000000000acf7         test       rbx, rbx
000000000000acfa         cmove      rbx, rdx
000000000000acfe         mov        rsi, rax
000000000000ad01         mov        rdi, rbx
000000000000ad04         call       xstrcoll                                    ; xstrcoll
000000000000ad09         test       eax, eax
000000000000ad0b         jne        loc_ad20

000000000000ad0d         pop        rbx
000000000000ad0e         mov        rsi, qword [r12]
000000000000ad12         mov        rdi, qword [rbp]
000000000000ad16         pop        rbp
000000000000ad17         pop        r12
000000000000ad19         jmp        xstrcoll                                    ; xstrcoll
                        ; endp
000000000000ad1e         align      32

                     loc_ad20:
000000000000ad20         pop        rbx                                         ; CODE XREF=rev_xstrcoll_extension+75
000000000000ad21         pop        rbp
000000000000ad22         pop        r12
000000000000ad24         ret
                        ; endp
000000000000ad25         align      16                                          ; End of unwind block (FDE at 0x1c250)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rev_strcmp_atime:
000000000000ad30         mov        rax, qword [rdi+0x60]                       ; Begin of unwind block (FDE at 0x1c288)
000000000000ad34         cmp        qword [rsi+0x60], rax
000000000000ad38         mov        rdx, rsi
000000000000ad3b         jg         loc_ad60

000000000000ad3d         jl         loc_ad58

000000000000ad3f         mov        rax, qword [rdi+0x68]
000000000000ad43         sub        eax, dword [rsi+0x68]
000000000000ad46         jne        loc_ad5d

000000000000ad48         mov        rsi, qword [rdi]                            ; argument "__s2" for method j_strcmp
000000000000ad4b         mov        rdi, qword [rdx]                            ; argument "__s1" for method j_strcmp
000000000000ad4e         jmp        j_strcmp                                    ; strcmp
                        ; endp
000000000000ad53         align      8

                     loc_ad58:
000000000000ad58         mov        eax, 0x1                                    ; CODE XREF=rev_strcmp_atime+13

                     loc_ad5d:
000000000000ad5d         ret                                                    ; CODE XREF=rev_strcmp_atime+22
                        ; endp
000000000000ad5f         align      32

                     loc_ad60:
000000000000ad60         mov        eax, 0xffffffff                             ; CODE XREF=rev_strcmp_atime+11
000000000000ad65         ret
                        ; endp
000000000000ad66         align      16                                          ; End of unwind block (FDE at 0x1c288)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rev_strcmp_mtime:
000000000000ad70         mov        rax, qword [rdi+0x70]                       ; Begin of unwind block (FDE at 0x1c29c)
000000000000ad74         cmp        qword [rsi+0x70], rax
000000000000ad78         mov        rdx, rsi
000000000000ad7b         jg         loc_ada0

000000000000ad7d         jl         loc_ad98

000000000000ad7f         mov        rax, qword [rdi+0x78]
000000000000ad83         sub        eax, dword [rsi+0x78]
000000000000ad86         jne        loc_ad9d

000000000000ad88         mov        rsi, qword [rdi]                            ; argument "__s2" for method j_strcmp
000000000000ad8b         mov        rdi, qword [rdx]                            ; argument "__s1" for method j_strcmp
000000000000ad8e         jmp        j_strcmp                                    ; strcmp
                        ; endp
000000000000ad93         align      8

                     loc_ad98:
000000000000ad98         mov        eax, 0x1                                    ; CODE XREF=rev_strcmp_mtime+13

                     loc_ad9d:
000000000000ad9d         ret                                                    ; CODE XREF=rev_strcmp_mtime+22
                        ; endp
000000000000ad9f         align      32

                     loc_ada0:
000000000000ada0         mov        eax, 0xffffffff                             ; CODE XREF=rev_strcmp_mtime+11
000000000000ada5         ret
                        ; endp
000000000000ada6         align      16                                          ; End of unwind block (FDE at 0x1c29c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rev_strcmp_ctime:
000000000000adb0         mov        rax, qword [rdi+0x80]                       ; Begin of unwind block (FDE at 0x1c2b0)
000000000000adb7         cmp        qword [rsi+0x80], rax
000000000000adbe         mov        rdx, rsi
000000000000adc1         jg         loc_adf0

000000000000adc3         jl         loc_ade0

000000000000adc5         mov        rax, qword [rdi+0x88]
000000000000adcc         sub        eax, dword [rsi+0x88]
000000000000add2         jne        loc_ade5

000000000000add4         mov        rsi, qword [rdi]                            ; argument "__s2" for method j_strcmp
000000000000add7         mov        rdi, qword [rdx]                            ; argument "__s1" for method j_strcmp
000000000000adda         jmp        j_strcmp                                    ; strcmp
                        ; endp
000000000000addf         align      32

                     loc_ade0:
000000000000ade0         mov        eax, 0x1                                    ; CODE XREF=rev_strcmp_ctime+19

                     loc_ade5:
000000000000ade5         ret                                                    ; CODE XREF=rev_strcmp_ctime+34
                        ; endp
000000000000ade7         align      16

                     loc_adf0:
000000000000adf0         mov        eax, 0xffffffff                             ; CODE XREF=rev_strcmp_ctime+17
000000000000adf5         ret
                        ; endp
000000000000adf6         align      512                                         ; End of unwind block (FDE at 0x1c2b0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     strcmp_atime:
000000000000ae00         mov        rax, qword [rsi+0x60]                       ; Begin of unwind block (FDE at 0x1c2c4)
000000000000ae04         cmp        qword [rdi+0x60], rax
000000000000ae08         jg         loc_ae30

000000000000ae0a         jl         loc_ae20

000000000000ae0c         mov        rax, qword [rsi+0x68]
000000000000ae10         sub        eax, dword [rdi+0x68]
000000000000ae13         jne        loc_ae25

000000000000ae15         mov        rsi, qword [rsi]                            ; argument "__s2" for method j_strcmp
000000000000ae18         mov        rdi, qword [rdi]                            ; argument "__s1" for method j_strcmp
000000000000ae1b         jmp        j_strcmp                                    ; strcmp
                        ; endp

                     loc_ae20:
000000000000ae20         mov        eax, 0x1                                    ; CODE XREF=strcmp_atime+10

                     loc_ae25:
000000000000ae25         ret                                                    ; CODE XREF=strcmp_atime+19
                        ; endp
000000000000ae27         align      16

                     loc_ae30:
000000000000ae30         mov        eax, 0xffffffff                             ; CODE XREF=strcmp_atime+8
000000000000ae35         ret
                        ; endp
000000000000ae36         align      64                                          ; End of unwind block (FDE at 0x1c2c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     strcmp_mtime:
000000000000ae40         mov        rax, qword [rsi+0x70]                       ; Begin of unwind block (FDE at 0x1c2d8)
000000000000ae44         cmp        qword [rdi+0x70], rax
000000000000ae48         jg         loc_ae70

000000000000ae4a         jl         loc_ae60

000000000000ae4c         mov        rax, qword [rsi+0x78]
000000000000ae50         sub        eax, dword [rdi+0x78]
000000000000ae53         jne        loc_ae65

000000000000ae55         mov        rsi, qword [rsi]                            ; argument "__s2" for method j_strcmp
000000000000ae58         mov        rdi, qword [rdi]                            ; argument "__s1" for method j_strcmp
000000000000ae5b         jmp        j_strcmp                                    ; strcmp
                        ; endp

                     loc_ae60:
000000000000ae60         mov        eax, 0x1                                    ; CODE XREF=strcmp_mtime+10

                     loc_ae65:
000000000000ae65         ret                                                    ; CODE XREF=strcmp_mtime+19
                        ; endp
000000000000ae67         align      16

                     loc_ae70:
000000000000ae70         mov        eax, 0xffffffff                             ; CODE XREF=strcmp_mtime+8
000000000000ae75         ret
                        ; endp
000000000000ae76         align      128                                         ; End of unwind block (FDE at 0x1c2d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     strcmp_ctime:
000000000000ae80         mov        rax, qword [rsi+0x80]                       ; Begin of unwind block (FDE at 0x1c2ec)
000000000000ae87         cmp        qword [rdi+0x80], rax
000000000000ae8e         jg         loc_aec0

000000000000ae90         jl         loc_aeb0

000000000000ae92         mov        rax, qword [rsi+0x88]
000000000000ae99         sub        eax, dword [rdi+0x88]
000000000000ae9f         jne        loc_aeb5

000000000000aea1         mov        rsi, qword [rsi]                            ; argument "__s2" for method j_strcmp
000000000000aea4         mov        rdi, qword [rdi]                            ; argument "__s1" for method j_strcmp
000000000000aea7         jmp        j_strcmp                                    ; strcmp
                        ; endp
000000000000aeac         align      16

                     loc_aeb0:
000000000000aeb0         mov        eax, 0x1                                    ; CODE XREF=strcmp_ctime+16

                     loc_aeb5:
000000000000aeb5         ret                                                    ; CODE XREF=strcmp_ctime+31
                        ; endp
000000000000aeb7         align      64

                     loc_aec0:
000000000000aec0         mov        eax, 0xffffffff                             ; CODE XREF=strcmp_ctime+14
000000000000aec5         ret
                        ; endp
000000000000aec6         align      16                                          ; End of unwind block (FDE at 0x1c2ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrcoll_df_atime:
000000000000aed0         mov        edx, dword [rsi+0xa8]                       ; Begin of unwind block (FDE at 0x1c300)
000000000000aed6         mov        ecx, dword [rdi+0xa8]
000000000000aedc         cmp        edx, 0x3
000000000000aedf         sete       al
000000000000aee2         cmp        edx, 0x9
000000000000aee5         sete       dl
000000000000aee8         or         eax, edx
000000000000aeea         cmp        ecx, 0x3
000000000000aeed         je         loc_af18

000000000000aeef         cmp        ecx, 0x9
000000000000aef2         je         loc_af18

000000000000aef4         mov        edx, dword [rdi+0xac]
000000000000aefa         and        edx, 0xf000
000000000000af00         test       al, al
000000000000af02         je         loc_af38

                     loc_af04:
000000000000af04         cmp        edx, 0x4000                                 ; CODE XREF=xstrcoll_df_atime+120
000000000000af0a         je         loc_af58

                     loc_af0c:
000000000000af0c         mov        eax, 0x1                                    ; CODE XREF=xstrcoll_df_atime+146
000000000000af11         ret
                        ; endp
000000000000af12         align      8

                     loc_af18:
000000000000af18         test       al, al                                      ; CODE XREF=xstrcoll_df_atime+29, xstrcoll_df_atime+34
000000000000af1a         jne        loc_af58

000000000000af1c         mov        eax, dword [rsi+0xac]
000000000000af22         and        eax, 0xf000
000000000000af27         cmp        eax, 0x4000
000000000000af2c         je         loc_af58

                     loc_af2e:
000000000000af2e         mov        eax, 0xffffffff                             ; CODE XREF=xstrcoll_df_atime+128, xstrcoll_df_atime+144

                     loc_af33:
000000000000af33         ret                                                    ; CODE XREF=xstrcoll_df_atime+155
                        ; endp
000000000000af35         align      8

                     loc_af38:
000000000000af38         mov        eax, dword [rsi+0xac]                       ; CODE XREF=xstrcoll_df_atime+50
000000000000af3e         and        eax, 0xf000
000000000000af43         cmp        eax, 0x4000
000000000000af48         je         loc_af04

000000000000af4a         cmp        edx, 0x4000
000000000000af50         je         loc_af2e

000000000000af52         nop        word [rax+rax]

                     loc_af58:
000000000000af58         mov        rax, qword [rsi+0x60]                       ; CODE XREF=xstrcoll_df_atime+58, xstrcoll_df_atime+74, xstrcoll_df_atime+92
000000000000af5c         cmp        qword [rdi+0x60], rax
000000000000af60         jg         loc_af2e

000000000000af62         jl         loc_af0c

000000000000af64         mov        rax, qword [rsi+0x68]
000000000000af68         sub        eax, dword [rdi+0x68]
000000000000af6b         jne        loc_af33

000000000000af6d         mov        rsi, qword [rsi]
000000000000af70         mov        rdi, qword [rdi]
000000000000af73         jmp        xstrcoll                                    ; xstrcoll
                        ; endp
000000000000af78         align      128                                         ; End of unwind block (FDE at 0x1c300)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrcoll_df_mtime:
000000000000af80         mov        edx, dword [rsi+0xa8]                       ; Begin of unwind block (FDE at 0x1c314)
000000000000af86         mov        ecx, dword [rdi+0xa8]
000000000000af8c         cmp        edx, 0x3
000000000000af8f         sete       al
000000000000af92         cmp        edx, 0x9
000000000000af95         sete       dl
000000000000af98         or         eax, edx
000000000000af9a         cmp        ecx, 0x3
000000000000af9d         je         loc_afc8

000000000000af9f         cmp        ecx, 0x9
000000000000afa2         je         loc_afc8

000000000000afa4         mov        edx, dword [rdi+0xac]
000000000000afaa         and        edx, 0xf000
000000000000afb0         test       al, al
000000000000afb2         je         loc_afe8

                     loc_afb4:
000000000000afb4         cmp        edx, 0x4000                                 ; CODE XREF=xstrcoll_df_mtime+120
000000000000afba         je         loc_b008

                     loc_afbc:
000000000000afbc         mov        eax, 0x1                                    ; CODE XREF=xstrcoll_df_mtime+146
000000000000afc1         ret
                        ; endp
000000000000afc2         align      8

                     loc_afc8:
000000000000afc8         test       al, al                                      ; CODE XREF=xstrcoll_df_mtime+29, xstrcoll_df_mtime+34
000000000000afca         jne        loc_b008

000000000000afcc         mov        eax, dword [rsi+0xac]
000000000000afd2         and        eax, 0xf000
000000000000afd7         cmp        eax, 0x4000
000000000000afdc         je         loc_b008

                     loc_afde:
000000000000afde         mov        eax, 0xffffffff                             ; CODE XREF=xstrcoll_df_mtime+128, xstrcoll_df_mtime+144

                     loc_afe3:
000000000000afe3         ret                                                    ; CODE XREF=xstrcoll_df_mtime+155
                        ; endp
000000000000afe5         align      8

                     loc_afe8:
000000000000afe8         mov        eax, dword [rsi+0xac]                       ; CODE XREF=xstrcoll_df_mtime+50
000000000000afee         and        eax, 0xf000
000000000000aff3         cmp        eax, 0x4000
000000000000aff8         je         loc_afb4

000000000000affa         cmp        edx, 0x4000
000000000000b000         je         loc_afde                                    ; DATA XREF=print_long_format+640, gobble_file.constprop.52+1641

000000000000b002         nop        word [rax+rax]

                     loc_b008:
000000000000b008         mov        rax, qword [rsi+0x70]                       ; CODE XREF=xstrcoll_df_mtime+58, xstrcoll_df_mtime+74, xstrcoll_df_mtime+92
000000000000b00c         cmp        qword [rdi+0x70], rax
000000000000b010         jg         loc_afde

000000000000b012         jl         loc_afbc

000000000000b014         mov        rax, qword [rsi+0x78]
000000000000b018         sub        eax, dword [rdi+0x78]
000000000000b01b         jne        loc_afe3

000000000000b01d         mov        rsi, qword [rsi]
000000000000b020         mov        rdi, qword [rdi]
000000000000b023         jmp        xstrcoll                                    ; xstrcoll
                        ; endp
000000000000b028         align      16                                          ; End of unwind block (FDE at 0x1c314)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rev_xstrcoll_df_ctime:
000000000000b030         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x1c328)
000000000000b033         mov        esi, dword [rdi+0xa8]
000000000000b039         mov        ecx, dword [rdx+0xa8]
000000000000b03f         cmp        ecx, 0x3
000000000000b042         sete       al
000000000000b045         cmp        ecx, 0x9
000000000000b048         sete       cl
000000000000b04b         or         eax, ecx
000000000000b04d         cmp        esi, 0x3
000000000000b050         je         loc_b078

000000000000b052         cmp        esi, 0x9
000000000000b055         je         loc_b078

000000000000b057         mov        ecx, dword [rdi+0xac]
000000000000b05d         and        ecx, 0xf000
000000000000b063         test       al, al
000000000000b065         je         loc_b098

                     loc_b067:
000000000000b067         cmp        ecx, 0x4000                                 ; CODE XREF=rev_xstrcoll_df_ctime+120
000000000000b06d         je         loc_b0b8

                     loc_b06f:
000000000000b06f         mov        eax, 0x1                                    ; CODE XREF=rev_xstrcoll_df_ctime+152
000000000000b074         ret
                        ; endp
000000000000b075         align      8

                     loc_b078:
000000000000b078         test       al, al                                      ; CODE XREF=rev_xstrcoll_df_ctime+32, rev_xstrcoll_df_ctime+37
000000000000b07a         jne        loc_b0b8

000000000000b07c         mov        eax, dword [rdx+0xac]
000000000000b082         and        eax, 0xf000
000000000000b087         cmp        eax, 0x4000
000000000000b08c         je         loc_b0b8

                     loc_b08e:
000000000000b08e         mov        eax, 0xffffffff                             ; CODE XREF=rev_xstrcoll_df_ctime+128, rev_xstrcoll_df_ctime+150

                     loc_b093:
000000000000b093         ret                                                    ; CODE XREF=rev_xstrcoll_df_ctime+167
                        ; endp
000000000000b095         align      8

                     loc_b098:
000000000000b098         mov        eax, dword [rdx+0xac]                       ; CODE XREF=rev_xstrcoll_df_ctime+53
000000000000b09e         and        eax, 0xf000
000000000000b0a3         cmp        eax, 0x4000
000000000000b0a8         je         loc_b067

000000000000b0aa         cmp        ecx, 0x4000
000000000000b0b0         je         loc_b08e

000000000000b0b2         nop        word [rax+rax]

                     loc_b0b8:
000000000000b0b8         mov        rax, qword [rdi+0x80]                       ; CODE XREF=rev_xstrcoll_df_ctime+61, rev_xstrcoll_df_ctime+74, rev_xstrcoll_df_ctime+92
000000000000b0bf         cmp        qword [rdx+0x80], rax
000000000000b0c6         jg         loc_b08e

000000000000b0c8         jl         loc_b06f

000000000000b0ca         mov        rax, qword [rdi+0x88]
000000000000b0d1         sub        eax, dword [rdx+0x88]
000000000000b0d7         jne        loc_b093

000000000000b0d9         mov        rsi, qword [rdi]
000000000000b0dc         mov        rdi, qword [rdx]
000000000000b0df         jmp        xstrcoll                                    ; xstrcoll
                        ; endp
000000000000b0e4         align      16                                          ; End of unwind block (FDE at 0x1c328)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rev_xstrcoll_df_mtime:
000000000000b0f0         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x1c33c)
000000000000b0f3         mov        esi, dword [rdi+0xa8]
000000000000b0f9         mov        ecx, dword [rdx+0xa8]
000000000000b0ff         cmp        ecx, 0x3
000000000000b102         sete       al
000000000000b105         cmp        ecx, 0x9
000000000000b108         sete       cl
000000000000b10b         or         eax, ecx
000000000000b10d         cmp        esi, 0x3
000000000000b110         je         loc_b138

000000000000b112         cmp        esi, 0x9
000000000000b115         je         loc_b138

000000000000b117         mov        ecx, dword [rdi+0xac]
000000000000b11d         and        ecx, 0xf000
000000000000b123         test       al, al
000000000000b125         je         loc_b158

                     loc_b127:
000000000000b127         cmp        ecx, 0x4000                                 ; CODE XREF=rev_xstrcoll_df_mtime+120
000000000000b12d         je         loc_b178

                     loc_b12f:
000000000000b12f         mov        eax, 0x1                                    ; CODE XREF=rev_xstrcoll_df_mtime+146
000000000000b134         ret
                        ; endp
000000000000b135         align      8

                     loc_b138:
000000000000b138         test       al, al                                      ; CODE XREF=rev_xstrcoll_df_mtime+32, rev_xstrcoll_df_mtime+37
000000000000b13a         jne        loc_b178

000000000000b13c         mov        eax, dword [rdx+0xac]
000000000000b142         and        eax, 0xf000
000000000000b147         cmp        eax, 0x4000
000000000000b14c         je         loc_b178

                     loc_b14e:
000000000000b14e         mov        eax, 0xffffffff                             ; CODE XREF=rev_xstrcoll_df_mtime+128, rev_xstrcoll_df_mtime+144

                     loc_b153:
000000000000b153         ret                                                    ; CODE XREF=rev_xstrcoll_df_mtime+155
                        ; endp
000000000000b155         align      8

                     loc_b158:
000000000000b158         mov        eax, dword [rdx+0xac]                       ; CODE XREF=rev_xstrcoll_df_mtime+53
000000000000b15e         and        eax, 0xf000
000000000000b163         cmp        eax, 0x4000
000000000000b168         je         loc_b127

000000000000b16a         cmp        ecx, 0x4000
000000000000b170         je         loc_b14e

000000000000b172         nop        word [rax+rax]

                     loc_b178:
000000000000b178         mov        rax, qword [rdi+0x70]                       ; CODE XREF=rev_xstrcoll_df_mtime+61, rev_xstrcoll_df_mtime+74, rev_xstrcoll_df_mtime+92
000000000000b17c         cmp        qword [rdx+0x70], rax
000000000000b180         jg         loc_b14e

000000000000b182         jl         loc_b12f

000000000000b184         mov        rax, qword [rdi+0x78]
000000000000b188         sub        eax, dword [rdx+0x78]
000000000000b18b         jne        loc_b153

000000000000b18d         mov        rsi, qword [rdi]
000000000000b190         mov        rdi, qword [rdx]
000000000000b193         jmp        xstrcoll                                    ; xstrcoll
                        ; endp
000000000000b198         align      32                                          ; End of unwind block (FDE at 0x1c33c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rev_xstrcoll_df_atime:
000000000000b1a0         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x1c350)
000000000000b1a3         mov        esi, dword [rdi+0xa8]
000000000000b1a9         mov        ecx, dword [rdx+0xa8]
000000000000b1af         cmp        ecx, 0x3
000000000000b1b2         sete       al
000000000000b1b5         cmp        ecx, 0x9
000000000000b1b8         sete       cl
000000000000b1bb         or         eax, ecx
000000000000b1bd         cmp        esi, 0x3
000000000000b1c0         je         loc_b1e8

000000000000b1c2         cmp        esi, 0x9
000000000000b1c5         je         loc_b1e8

000000000000b1c7         mov        ecx, dword [rdi+0xac]
000000000000b1cd         and        ecx, 0xf000
000000000000b1d3         test       al, al
000000000000b1d5         je         loc_b208

                     loc_b1d7:
000000000000b1d7         cmp        ecx, 0x4000                                 ; CODE XREF=rev_xstrcoll_df_atime+120
000000000000b1dd         je         loc_b228

                     loc_b1df:
000000000000b1df         mov        eax, 0x1                                    ; CODE XREF=rev_xstrcoll_df_atime+146
000000000000b1e4         ret
                        ; endp
000000000000b1e5         align      8

                     loc_b1e8:
000000000000b1e8         test       al, al                                      ; CODE XREF=rev_xstrcoll_df_atime+32, rev_xstrcoll_df_atime+37
000000000000b1ea         jne        loc_b228

000000000000b1ec         mov        eax, dword [rdx+0xac]
000000000000b1f2         and        eax, 0xf000
000000000000b1f7         cmp        eax, 0x4000
000000000000b1fc         je         loc_b228

                     loc_b1fe:
000000000000b1fe         mov        eax, 0xffffffff                             ; CODE XREF=rev_xstrcoll_df_atime+128, rev_xstrcoll_df_atime+144

                     loc_b203:
000000000000b203         ret                                                    ; CODE XREF=rev_xstrcoll_df_atime+155
                        ; endp
000000000000b205         align      8

                     loc_b208:
000000000000b208         mov        eax, dword [rdx+0xac]                       ; CODE XREF=rev_xstrcoll_df_atime+53
000000000000b20e         and        eax, 0xf000
000000000000b213         cmp        eax, 0x4000
000000000000b218         je         loc_b1d7

000000000000b21a         cmp        ecx, 0x4000
000000000000b220         je         loc_b1fe

000000000000b222         nop        word [rax+rax]

                     loc_b228:
000000000000b228         mov        rax, qword [rdi+0x60]                       ; CODE XREF=rev_xstrcoll_df_atime+61, rev_xstrcoll_df_atime+74, rev_xstrcoll_df_atime+92
000000000000b22c         cmp        qword [rdx+0x60], rax
000000000000b230         jg         loc_b1fe

000000000000b232         jl         loc_b1df

000000000000b234         mov        rax, qword [rdi+0x68]
000000000000b238         sub        eax, dword [rdx+0x68]
000000000000b23b         jne        loc_b203

000000000000b23d         mov        rsi, qword [rdi]
000000000000b240         mov        rdi, qword [rdx]
000000000000b243         jmp        xstrcoll                                    ; xstrcoll
                        ; endp
000000000000b248         align      16                                          ; End of unwind block (FDE at 0x1c350)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrcoll_df_ctime:
000000000000b250         mov        edx, dword [rsi+0xa8]                       ; Begin of unwind block (FDE at 0x1c364)
000000000000b256         mov        ecx, dword [rdi+0xa8]
000000000000b25c         cmp        edx, 0x3
000000000000b25f         sete       al
000000000000b262         cmp        edx, 0x9
000000000000b265         sete       dl
000000000000b268         or         eax, edx
000000000000b26a         cmp        ecx, 0x3
000000000000b26d         je         loc_b298

000000000000b26f         cmp        ecx, 0x9
000000000000b272         je         loc_b298

000000000000b274         mov        edx, dword [rdi+0xac]
000000000000b27a         and        edx, 0xf000
000000000000b280         test       al, al
000000000000b282         je         loc_b2b8

                     loc_b284:
000000000000b284         cmp        edx, 0x4000                                 ; CODE XREF=xstrcoll_df_ctime+120
000000000000b28a         je         loc_b2d8

                     loc_b28c:
000000000000b28c         mov        eax, 0x1                                    ; CODE XREF=xstrcoll_df_ctime+152
000000000000b291         ret
                        ; endp
000000000000b292         align      8

                     loc_b298:
000000000000b298         test       al, al                                      ; CODE XREF=xstrcoll_df_ctime+29, xstrcoll_df_ctime+34
000000000000b29a         jne        loc_b2d8

000000000000b29c         mov        eax, dword [rsi+0xac]
000000000000b2a2         and        eax, 0xf000
000000000000b2a7         cmp        eax, 0x4000
000000000000b2ac         je         loc_b2d8

                     loc_b2ae:
000000000000b2ae         mov        eax, 0xffffffff                             ; CODE XREF=xstrcoll_df_ctime+128, xstrcoll_df_ctime+150

                     loc_b2b3:
000000000000b2b3         ret                                                    ; CODE XREF=xstrcoll_df_ctime+167
                        ; endp
000000000000b2b5         align      8

                     loc_b2b8:
000000000000b2b8         mov        eax, dword [rsi+0xac]                       ; CODE XREF=xstrcoll_df_ctime+50
000000000000b2be         and        eax, 0xf000
000000000000b2c3         cmp        eax, 0x4000
000000000000b2c8         je         loc_b284

000000000000b2ca         cmp        edx, 0x4000
000000000000b2d0         je         loc_b2ae

000000000000b2d2         nop        word [rax+rax]

                     loc_b2d8:
000000000000b2d8         mov        rax, qword [rsi+0x80]                       ; CODE XREF=xstrcoll_df_ctime+58, xstrcoll_df_ctime+74, xstrcoll_df_ctime+92
000000000000b2df         cmp        qword [rdi+0x80], rax
000000000000b2e6         jg         loc_b2ae

000000000000b2e8         jl         loc_b28c

000000000000b2ea         mov        rax, qword [rsi+0x88]
000000000000b2f1         sub        eax, dword [rdi+0x88]
000000000000b2f7         jne        loc_b2b3

000000000000b2f9         mov        rsi, qword [rsi]
000000000000b2fc         mov        rdi, qword [rdi]
000000000000b2ff         jmp        xstrcoll                                    ; xstrcoll
                        ; endp
000000000000b304         align      16                                          ; End of unwind block (FDE at 0x1c364)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     strcmp_extension:
000000000000b310         push       r12                                         ; Begin of unwind block (FDE at 0x1c378)
000000000000b312         push       rbp
000000000000b313         mov        r12, rsi
000000000000b316         push       rbx
000000000000b317         mov        rbp, qword [rdi]
000000000000b31a         mov        esi, 0x2e                                   ; argument "__c" for method j_strrchr
000000000000b31f         mov        rdi, rbp                                    ; argument "__s" for method j_strrchr
000000000000b322         call       j_strrchr                                   ; strrchr
000000000000b327         mov        r12, qword [r12]
000000000000b32b         mov        esi, 0x2e                                   ; argument "__c" for method j_strrchr
000000000000b330         mov        rbx, rax
000000000000b333         mov        rdi, r12                                    ; argument "__s" for method j_strrchr
000000000000b336         call       j_strrchr                                   ; strrchr
000000000000b33b         test       rax, rax
000000000000b33e         je         loc_b370

000000000000b340         lea        rdx, qword [aLu+34]                         ; 0x178b3
000000000000b347         test       rbx, rbx
000000000000b34a         mov        rsi, rax                                    ; argument "__s2" for method j_strcmp
000000000000b34d         cmove      rbx, rdx
000000000000b351         mov        rdi, rbx                                    ; argument "__s1" for method j_strcmp
000000000000b354         call       j_strcmp                                    ; strcmp
000000000000b359         test       eax, eax
000000000000b35b         jne        loc_b38b

                     loc_b35d:
000000000000b35d         pop        rbx                                         ; CODE XREF=strcmp_extension+106, strcmp_extension+121
000000000000b35e         mov        rsi, r12                                    ; argument "__s2" for method j_strcmp
000000000000b361         mov        rdi, rbp                                    ; argument "__s1" for method j_strcmp
000000000000b364         pop        rbp
000000000000b365         pop        r12
000000000000b367         jmp        j_strcmp                                    ; strcmp
                        ; endp
000000000000b36c         align      16

                     loc_b370:
000000000000b370         test       rbx, rbx                                    ; CODE XREF=strcmp_extension+46
000000000000b373         lea        rax, qword [aLu+34]                         ; 0x178b3
000000000000b37a         je         loc_b35d

000000000000b37c         mov        rsi, rax                                    ; argument "__s2" for method j_strcmp
000000000000b37f         mov        rdi, rbx                                    ; argument "__s1" for method j_strcmp
000000000000b382         call       j_strcmp                                    ; strcmp
000000000000b387         test       eax, eax
000000000000b389         je         loc_b35d

                     loc_b38b:
000000000000b38b         pop        rbx                                         ; CODE XREF=strcmp_extension+75
000000000000b38c         pop        rbp
000000000000b38d         pop        r12
000000000000b38f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rev_strcmp_extension:
000000000000b390         push       r12                                         ; End of unwind block (FDE at 0x1c378), Begin of unwind block (FDE at 0x1c3b0)
000000000000b392         push       rbp
000000000000b393         mov        r12, rdi
000000000000b396         push       rbx
000000000000b397         mov        rbp, qword [rsi]
000000000000b39a         mov        esi, 0x2e                                   ; argument "__c" for method j_strrchr
000000000000b39f         mov        rdi, rbp                                    ; argument "__s" for method j_strrchr
000000000000b3a2         call       j_strrchr                                   ; strrchr
000000000000b3a7         mov        r12, qword [r12]
000000000000b3ab         mov        esi, 0x2e                                   ; argument "__c" for method j_strrchr
000000000000b3b0         mov        rbx, rax
000000000000b3b3         mov        rdi, r12                                    ; argument "__s" for method j_strrchr
000000000000b3b6         call       j_strrchr                                   ; strrchr
000000000000b3bb         test       rax, rax
000000000000b3be         je         loc_b3f0

000000000000b3c0         lea        rdx, qword [aLu+34]                         ; 0x178b3
000000000000b3c7         test       rbx, rbx
000000000000b3ca         mov        rsi, rax                                    ; argument "__s2" for method j_strcmp
000000000000b3cd         cmove      rbx, rdx
000000000000b3d1         mov        rdi, rbx                                    ; argument "__s1" for method j_strcmp
000000000000b3d4         call       j_strcmp                                    ; strcmp
000000000000b3d9         test       eax, eax
000000000000b3db         jne        loc_b40b

                     loc_b3dd:
000000000000b3dd         pop        rbx                                         ; CODE XREF=rev_strcmp_extension+106, rev_strcmp_extension+121
000000000000b3de         mov        rsi, r12                                    ; argument "__s2" for method j_strcmp
000000000000b3e1         mov        rdi, rbp                                    ; argument "__s1" for method j_strcmp
000000000000b3e4         pop        rbp
000000000000b3e5         pop        r12
000000000000b3e7         jmp        j_strcmp                                    ; strcmp
                        ; endp
000000000000b3ec         align      16

                     loc_b3f0:
000000000000b3f0         test       rbx, rbx                                    ; CODE XREF=rev_strcmp_extension+46
000000000000b3f3         lea        rax, qword [aLu+34]                         ; 0x178b3
000000000000b3fa         je         loc_b3dd

000000000000b3fc         mov        rsi, rax                                    ; argument "__s2" for method j_strcmp
000000000000b3ff         mov        rdi, rbx                                    ; argument "__s1" for method j_strcmp
000000000000b402         call       j_strcmp                                    ; strcmp
000000000000b407         test       eax, eax
000000000000b409         je         loc_b3dd

                     loc_b40b:
000000000000b40b         pop        rbx                                         ; CODE XREF=rev_strcmp_extension+75
000000000000b40c         pop        rbp
000000000000b40d         pop        r12
000000000000b40f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rev_xstrcoll_df_extension:
000000000000b410         mov        edx, dword [rsi+0xa8]                       ; End of unwind block (FDE at 0x1c3b0), Begin of unwind block (FDE at 0x1c3e8)
000000000000b416         mov        ecx, dword [rdi+0xa8]
000000000000b41c         cmp        edx, 0x3
000000000000b41f         sete       al
000000000000b422         cmp        edx, 0x9
000000000000b425         sete       dl
000000000000b428         or         eax, edx
000000000000b42a         cmp        ecx, 0x3
000000000000b42d         je         loc_b458

000000000000b42f         cmp        ecx, 0x9
000000000000b432         je         loc_b458

000000000000b434         mov        edx, dword [rdi+0xac]
000000000000b43a         and        edx, 0xf000
000000000000b440         test       al, al
000000000000b442         je         loc_b478

                     loc_b444:
000000000000b444         cmp        edx, 0x4000                                 ; CODE XREF=rev_xstrcoll_df_extension+120
000000000000b44a         je         loc_b498

000000000000b44c         mov        eax, 0x1
000000000000b451         ret
                        ; endp
000000000000b452         align      8

                     loc_b458:
000000000000b458         test       al, al                                      ; CODE XREF=rev_xstrcoll_df_extension+29, rev_xstrcoll_df_extension+34
000000000000b45a         jne        loc_b498

000000000000b45c         mov        eax, dword [rsi+0xac]
000000000000b462         and        eax, 0xf000
000000000000b467         cmp        eax, 0x4000
000000000000b46c         je         loc_b498

                     loc_b46e:
000000000000b46e         mov        eax, 0xffffffff                             ; CODE XREF=rev_xstrcoll_df_extension+128
000000000000b473         ret
                        ; endp
000000000000b474         align      8

                     loc_b478:
000000000000b478         mov        eax, dword [rsi+0xac]                       ; CODE XREF=rev_xstrcoll_df_extension+50
000000000000b47e         and        eax, 0xf000
000000000000b483         cmp        eax, 0x4000
000000000000b488         je         loc_b444

000000000000b48a         cmp        edx, 0x4000
000000000000b490         je         loc_b46e

000000000000b492         nop        word [rax+rax]

                     loc_b498:
000000000000b498         push       r12                                         ; CODE XREF=rev_xstrcoll_df_extension+58, rev_xstrcoll_df_extension+74, rev_xstrcoll_df_extension+92
000000000000b49a         push       rbp
000000000000b49b         mov        rbp, rdi
000000000000b49e         push       rbx
000000000000b49f         mov        rbx, rsi
000000000000b4a2         mov        esi, 0x2e                                   ; argument "__c" for method j_strrchr
000000000000b4a7         mov        rdi, qword [rbx]                            ; argument "__s" for method j_strrchr
000000000000b4aa         call       j_strrchr                                   ; strrchr
000000000000b4af         mov        rdi, qword [rbp]                            ; argument "__s" for method j_strrchr
000000000000b4b3         mov        esi, 0x2e                                   ; argument "__c" for method j_strrchr
000000000000b4b8         mov        r12, rax
000000000000b4bb         call       j_strrchr                                   ; strrchr
000000000000b4c0         lea        rdx, qword [aLu+34]                         ; 0x178b3
000000000000b4c7         test       rax, rax
000000000000b4ca         cmove      rax, rdx
000000000000b4ce         test       r12, r12
000000000000b4d1         cmove      r12, rdx
000000000000b4d5         mov        rsi, rax
000000000000b4d8         mov        rdi, r12
000000000000b4db         call       xstrcoll                                    ; xstrcoll
000000000000b4e0         test       eax, eax
000000000000b4e2         jne        loc_b4f8

000000000000b4e4         mov        rsi, qword [rbp]
000000000000b4e8         mov        rdi, qword [rbx]
000000000000b4eb         pop        rbx
000000000000b4ec         pop        rbp
000000000000b4ed         pop        r12
000000000000b4ef         jmp        xstrcoll                                    ; xstrcoll
                        ; endp
000000000000b4f4         align      8

                     loc_b4f8:
000000000000b4f8         pop        rbx                                         ; CODE XREF=rev_xstrcoll_df_extension+210
000000000000b4f9         pop        rbp
000000000000b4fa         pop        r12
000000000000b4fc         ret
                        ; endp
000000000000b4fd         align      256                                         ; End of unwind block (FDE at 0x1c3e8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrcoll_df_extension:
000000000000b500         mov        edx, dword [rsi+0xa8]                       ; Begin of unwind block (FDE at 0x1c424)
000000000000b506         mov        ecx, dword [rdi+0xa8]
000000000000b50c         cmp        edx, 0x3
000000000000b50f         sete       al
000000000000b512         cmp        edx, 0x9
000000000000b515         sete       dl
000000000000b518         or         eax, edx
000000000000b51a         cmp        ecx, 0x3
000000000000b51d         je         loc_b548

000000000000b51f         cmp        ecx, 0x9
000000000000b522         je         loc_b548

000000000000b524         mov        edx, dword [rdi+0xac]
000000000000b52a         and        edx, 0xf000
000000000000b530         test       al, al
000000000000b532         je         loc_b568

                     loc_b534:
000000000000b534         cmp        edx, 0x4000                                 ; CODE XREF=xstrcoll_df_extension+120
000000000000b53a         je         loc_b588

000000000000b53c         mov        eax, 0x1
000000000000b541         ret
                        ; endp
000000000000b542         align      8

                     loc_b548:
000000000000b548         test       al, al                                      ; CODE XREF=xstrcoll_df_extension+29, xstrcoll_df_extension+34
000000000000b54a         jne        loc_b588

000000000000b54c         mov        eax, dword [rsi+0xac]
000000000000b552         and        eax, 0xf000
000000000000b557         cmp        eax, 0x4000
000000000000b55c         je         loc_b588

                     loc_b55e:
000000000000b55e         mov        eax, 0xffffffff                             ; CODE XREF=xstrcoll_df_extension+128
000000000000b563         ret
                        ; endp
000000000000b564         align      8

                     loc_b568:
000000000000b568         mov        eax, dword [rsi+0xac]                       ; CODE XREF=xstrcoll_df_extension+50
000000000000b56e         and        eax, 0xf000
000000000000b573         cmp        eax, 0x4000
000000000000b578         je         loc_b534

000000000000b57a         cmp        edx, 0x4000
000000000000b580         je         loc_b55e

000000000000b582         nop        word [rax+rax]

                     loc_b588:
000000000000b588         push       r12                                         ; CODE XREF=xstrcoll_df_extension+58, xstrcoll_df_extension+74, xstrcoll_df_extension+92
000000000000b58a         push       rbp
000000000000b58b         mov        rbp, rdi
000000000000b58e         push       rbx
000000000000b58f         mov        rdi, qword [rdi]                            ; argument "__s" for method j_strrchr
000000000000b592         mov        rbx, rsi
000000000000b595         mov        esi, 0x2e                                   ; argument "__c" for method j_strrchr
000000000000b59a         call       j_strrchr                                   ; strrchr
000000000000b59f         mov        rdi, qword [rbx]                            ; argument "__s" for method j_strrchr
000000000000b5a2         mov        esi, 0x2e                                   ; argument "__c" for method j_strrchr
000000000000b5a7         mov        r12, rax
000000000000b5aa         call       j_strrchr                                   ; strrchr
000000000000b5af         lea        rdx, qword [aLu+34]                         ; 0x178b3
000000000000b5b6         test       rax, rax
000000000000b5b9         cmove      rax, rdx
000000000000b5bd         test       r12, r12
000000000000b5c0         cmove      r12, rdx
000000000000b5c4         mov        rsi, rax
000000000000b5c7         mov        rdi, r12
000000000000b5ca         call       xstrcoll                                    ; xstrcoll
000000000000b5cf         test       eax, eax
000000000000b5d1         jne        loc_b5e8

000000000000b5d3         mov        rsi, qword [rbx]
000000000000b5d6         mov        rdi, qword [rbp]
000000000000b5da         pop        rbx
000000000000b5db         pop        rbp
000000000000b5dc         pop        r12
000000000000b5de         jmp        xstrcoll                                    ; xstrcoll
                        ; endp
000000000000b5e3         align      8

                     loc_b5e8:
000000000000b5e8         pop        rbx                                         ; CODE XREF=xstrcoll_df_extension+209
000000000000b5e9         pop        rbp
000000000000b5ea         pop        r12
000000000000b5ec         ret
                        ; endp
000000000000b5ed         align      16                                          ; End of unwind block (FDE at 0x1c424)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     strcmp_df_atime:
000000000000b5f0         mov        edx, dword [rsi+0xa8]                       ; Begin of unwind block (FDE at 0x1c460)
000000000000b5f6         mov        ecx, dword [rdi+0xa8]
000000000000b5fc         cmp        edx, 0x3
000000000000b5ff         sete       al
000000000000b602         cmp        edx, 0x9
000000000000b605         sete       dl
000000000000b608         or         eax, edx
000000000000b60a         cmp        ecx, 0x3
000000000000b60d         je         loc_b638

000000000000b60f         cmp        ecx, 0x9
000000000000b612         je         loc_b638

000000000000b614         mov        edx, dword [rdi+0xac]
000000000000b61a         and        edx, 0xf000
000000000000b620         test       al, al
000000000000b622         je         loc_b658

                     loc_b624:
000000000000b624         cmp        edx, 0x4000                                 ; CODE XREF=strcmp_df_atime+120
000000000000b62a         je         loc_b678

                     loc_b62c:
000000000000b62c         mov        eax, 0x1                                    ; CODE XREF=strcmp_df_atime+146
000000000000b631         ret
                        ; endp
000000000000b632         align      8

                     loc_b638:
000000000000b638         test       al, al                                      ; CODE XREF=strcmp_df_atime+29, strcmp_df_atime+34
000000000000b63a         jne        loc_b678

000000000000b63c         mov        eax, dword [rsi+0xac]
000000000000b642         and        eax, 0xf000
000000000000b647         cmp        eax, 0x4000
000000000000b64c         je         loc_b678

                     loc_b64e:
000000000000b64e         mov        eax, 0xffffffff                             ; CODE XREF=strcmp_df_atime+128, strcmp_df_atime+144

                     loc_b653:
000000000000b653         ret                                                    ; CODE XREF=strcmp_df_atime+155
                        ; endp
000000000000b655         align      8

                     loc_b658:
000000000000b658         mov        eax, dword [rsi+0xac]                       ; CODE XREF=strcmp_df_atime+50
000000000000b65e         and        eax, 0xf000
000000000000b663         cmp        eax, 0x4000
000000000000b668         je         loc_b624

000000000000b66a         cmp        edx, 0x4000
000000000000b670         je         loc_b64e

000000000000b672         nop        word [rax+rax]

                     loc_b678:
000000000000b678         mov        rax, qword [rsi+0x60]                       ; CODE XREF=strcmp_df_atime+58, strcmp_df_atime+74, strcmp_df_atime+92
000000000000b67c         cmp        qword [rdi+0x60], rax
000000000000b680         jg         loc_b64e

000000000000b682         jl         loc_b62c

000000000000b684         mov        rax, qword [rsi+0x68]
000000000000b688         sub        eax, dword [rdi+0x68]
000000000000b68b         jne        loc_b653

000000000000b68d         mov        rsi, qword [rsi]                            ; argument "__s2" for method j_strcmp
000000000000b690         mov        rdi, qword [rdi]                            ; argument "__s1" for method j_strcmp
000000000000b693         jmp        j_strcmp                                    ; strcmp
                        ; endp
000000000000b698         align      32                                          ; End of unwind block (FDE at 0x1c460)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rev_strcmp_df_mtime:
000000000000b6a0         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x1c474)
000000000000b6a3         mov        esi, dword [rdi+0xa8]
000000000000b6a9         mov        ecx, dword [rdx+0xa8]
000000000000b6af         cmp        ecx, 0x3
000000000000b6b2         sete       al
000000000000b6b5         cmp        ecx, 0x9
000000000000b6b8         sete       cl
000000000000b6bb         or         eax, ecx
000000000000b6bd         cmp        esi, 0x3
000000000000b6c0         je         loc_b6e8

000000000000b6c2         cmp        esi, 0x9
000000000000b6c5         je         loc_b6e8

000000000000b6c7         mov        ecx, dword [rdi+0xac]
000000000000b6cd         and        ecx, 0xf000
000000000000b6d3         test       al, al
000000000000b6d5         je         loc_b708

                     loc_b6d7:
000000000000b6d7         cmp        ecx, 0x4000                                 ; CODE XREF=rev_strcmp_df_mtime+120
000000000000b6dd         je         loc_b728

                     loc_b6df:
000000000000b6df         mov        eax, 0x1                                    ; CODE XREF=rev_strcmp_df_mtime+146
000000000000b6e4         ret
                        ; endp
000000000000b6e5         align      8

                     loc_b6e8:
000000000000b6e8         test       al, al                                      ; CODE XREF=rev_strcmp_df_mtime+32, rev_strcmp_df_mtime+37
000000000000b6ea         jne        loc_b728

000000000000b6ec         mov        eax, dword [rdx+0xac]
000000000000b6f2         and        eax, 0xf000
000000000000b6f7         cmp        eax, 0x4000
000000000000b6fc         je         loc_b728

                     loc_b6fe:
000000000000b6fe         mov        eax, 0xffffffff                             ; CODE XREF=rev_strcmp_df_mtime+128, rev_strcmp_df_mtime+144

                     loc_b703:
000000000000b703         ret                                                    ; CODE XREF=rev_strcmp_df_mtime+155
                        ; endp
000000000000b705         align      8

                     loc_b708:
000000000000b708         mov        eax, dword [rdx+0xac]                       ; CODE XREF=rev_strcmp_df_mtime+53
000000000000b70e         and        eax, 0xf000
000000000000b713         cmp        eax, 0x4000
000000000000b718         je         loc_b6d7

000000000000b71a         cmp        ecx, 0x4000
000000000000b720         je         loc_b6fe

000000000000b722         nop        word [rax+rax]

                     loc_b728:
000000000000b728         mov        rax, qword [rdi+0x70]                       ; CODE XREF=rev_strcmp_df_mtime+61, rev_strcmp_df_mtime+74, rev_strcmp_df_mtime+92
000000000000b72c         cmp        qword [rdx+0x70], rax
000000000000b730         jg         loc_b6fe

000000000000b732         jl         loc_b6df

000000000000b734         mov        rax, qword [rdi+0x78]
000000000000b738         sub        eax, dword [rdx+0x78]
000000000000b73b         jne        loc_b703

000000000000b73d         mov        rsi, qword [rdi]                            ; argument "__s2" for method j_strcmp
000000000000b740         mov        rdi, qword [rdx]                            ; argument "__s1" for method j_strcmp
000000000000b743         jmp        j_strcmp                                    ; strcmp
                        ; endp
000000000000b748         align      16                                          ; End of unwind block (FDE at 0x1c474)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     strcmp_df_ctime:
000000000000b750         mov        edx, dword [rsi+0xa8]                       ; Begin of unwind block (FDE at 0x1c488)
000000000000b756         mov        ecx, dword [rdi+0xa8]
000000000000b75c         cmp        edx, 0x3
000000000000b75f         sete       al
000000000000b762         cmp        edx, 0x9
000000000000b765         sete       dl
000000000000b768         or         eax, edx
000000000000b76a         cmp        ecx, 0x3
000000000000b76d         je         loc_b798

000000000000b76f         cmp        ecx, 0x9
000000000000b772         je         loc_b798

000000000000b774         mov        edx, dword [rdi+0xac]
000000000000b77a         and        edx, 0xf000
000000000000b780         test       al, al
000000000000b782         je         loc_b7b8

                     loc_b784:
000000000000b784         cmp        edx, 0x4000                                 ; CODE XREF=strcmp_df_ctime+120
000000000000b78a         je         loc_b7d8

                     loc_b78c:
000000000000b78c         mov        eax, 0x1                                    ; CODE XREF=strcmp_df_ctime+152
000000000000b791         ret
                        ; endp
000000000000b792         align      8

                     loc_b798:
000000000000b798         test       al, al                                      ; CODE XREF=strcmp_df_ctime+29, strcmp_df_ctime+34
000000000000b79a         jne        loc_b7d8

000000000000b79c         mov        eax, dword [rsi+0xac]
000000000000b7a2         and        eax, 0xf000
000000000000b7a7         cmp        eax, 0x4000
000000000000b7ac         je         loc_b7d8

                     loc_b7ae:
000000000000b7ae         mov        eax, 0xffffffff                             ; CODE XREF=strcmp_df_ctime+128, strcmp_df_ctime+150

                     loc_b7b3:
000000000000b7b3         ret                                                    ; CODE XREF=strcmp_df_ctime+167
                        ; endp
000000000000b7b5         align      8

                     loc_b7b8:
000000000000b7b8         mov        eax, dword [rsi+0xac]                       ; CODE XREF=strcmp_df_ctime+50
000000000000b7be         and        eax, 0xf000
000000000000b7c3         cmp        eax, 0x4000
000000000000b7c8         je         loc_b784

000000000000b7ca         cmp        edx, 0x4000
000000000000b7d0         je         loc_b7ae

000000000000b7d2         nop        word [rax+rax]

                     loc_b7d8:
000000000000b7d8         mov        rax, qword [rsi+0x80]                       ; CODE XREF=strcmp_df_ctime+58, strcmp_df_ctime+74, strcmp_df_ctime+92
000000000000b7df         cmp        qword [rdi+0x80], rax
000000000000b7e6         jg         loc_b7ae

000000000000b7e8         jl         loc_b78c

000000000000b7ea         mov        rax, qword [rsi+0x88]
000000000000b7f1         sub        eax, dword [rdi+0x88]
000000000000b7f7         jne        loc_b7b3

000000000000b7f9         mov        rsi, qword [rsi]                            ; argument "__s2" for method j_strcmp
000000000000b7fc         mov        rdi, qword [rdi]                            ; argument "__s1" for method j_strcmp
000000000000b7ff         jmp        j_strcmp                                    ; strcmp
                        ; endp
000000000000b804         align      16                                          ; End of unwind block (FDE at 0x1c488)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     strcmp_df_extension:
000000000000b810         mov        edx, dword [rsi+0xa8]                       ; Begin of unwind block (FDE at 0x1c49c)
000000000000b816         mov        ecx, dword [rdi+0xa8]
000000000000b81c         cmp        edx, 0x3
000000000000b81f         sete       al
000000000000b822         cmp        edx, 0x9
000000000000b825         sete       dl
000000000000b828         or         eax, edx
000000000000b82a         cmp        ecx, 0x3
000000000000b82d         je         loc_b858

000000000000b82f         cmp        ecx, 0x9
000000000000b832         je         loc_b858

000000000000b834         mov        edx, dword [rdi+0xac]
000000000000b83a         and        edx, 0xf000
000000000000b840         test       al, al
000000000000b842         je         loc_b878

                     loc_b844:
000000000000b844         cmp        edx, 0x4000                                 ; CODE XREF=strcmp_df_extension+120
000000000000b84a         je         loc_b898

000000000000b84c         mov        eax, 0x1
000000000000b851         ret
                        ; endp
000000000000b852         align      8

                     loc_b858:
000000000000b858         test       al, al                                      ; CODE XREF=strcmp_df_extension+29, strcmp_df_extension+34
000000000000b85a         jne        loc_b898

000000000000b85c         mov        eax, dword [rsi+0xac]
000000000000b862         and        eax, 0xf000
000000000000b867         cmp        eax, 0x4000
000000000000b86c         je         loc_b898

                     loc_b86e:
000000000000b86e         mov        eax, 0xffffffff                             ; CODE XREF=strcmp_df_extension+128
000000000000b873         ret
                        ; endp
000000000000b874         align      8

                     loc_b878:
000000000000b878         mov        eax, dword [rsi+0xac]                       ; CODE XREF=strcmp_df_extension+50
000000000000b87e         and        eax, 0xf000
000000000000b883         cmp        eax, 0x4000
000000000000b888         je         loc_b844

000000000000b88a         cmp        edx, 0x4000
000000000000b890         je         loc_b86e

000000000000b892         nop        word [rax+rax]

                     loc_b898:
000000000000b898         push       r12                                         ; CODE XREF=strcmp_df_extension+58, strcmp_df_extension+74, strcmp_df_extension+92
000000000000b89a         push       rbp
000000000000b89b         push       rbx
000000000000b89c         mov        r12, qword [rdi]
000000000000b89f         mov        rbx, rsi
000000000000b8a2         mov        esi, 0x2e                                   ; argument "__c" for method j_strrchr
000000000000b8a7         mov        rdi, r12                                    ; argument "__s" for method j_strrchr
000000000000b8aa         call       j_strrchr                                   ; strrchr
000000000000b8af         mov        rbx, qword [rbx]
000000000000b8b2         mov        esi, 0x2e                                   ; argument "__c" for method j_strrchr
000000000000b8b7         mov        rbp, rax
000000000000b8ba         mov        rdi, rbx                                    ; argument "__s" for method j_strrchr
000000000000b8bd         call       j_strrchr                                   ; strrchr
000000000000b8c2         test       rax, rax
000000000000b8c5         je         loc_b900

000000000000b8c7         lea        rdx, qword [aLu+34]                         ; 0x178b3
000000000000b8ce         test       rbp, rbp
000000000000b8d1         cmove      rbp, rdx

                     loc_b8d5:
000000000000b8d5         mov        rsi, rax                                    ; argument "__s2" for method j_strcmp, CODE XREF=strcmp_df_extension+250
000000000000b8d8         mov        rdi, rbp                                    ; argument "__s1" for method j_strcmp
000000000000b8db         call       j_strcmp                                    ; strcmp
000000000000b8e0         test       eax, eax
000000000000b8e2         jne        loc_b8f8

                     loc_b8e4:
000000000000b8e4         mov        rsi, rbx                                    ; argument "__s2" for method j_strcmp, CODE XREF=strcmp_df_extension+252
000000000000b8e7         mov        rdi, r12                                    ; argument "__s1" for method j_strcmp
000000000000b8ea         pop        rbx
000000000000b8eb         pop        rbp
000000000000b8ec         pop        r12
000000000000b8ee         jmp        j_strcmp                                    ; strcmp
                        ; endp
000000000000b8f3         align      8

                     loc_b8f8:
000000000000b8f8         pop        rbx                                         ; CODE XREF=strcmp_df_extension+210
000000000000b8f9         pop        rbp
000000000000b8fa         pop        r12
000000000000b8fc         ret
                        ; endp
000000000000b8fd         align      256

                     loc_b900:
000000000000b900         test       rbp, rbp                                    ; CODE XREF=strcmp_df_extension+181
000000000000b903         lea        rax, qword [aLu+34]                         ; 0x178b3
000000000000b90a         jne        loc_b8d5

000000000000b90c         jmp        loc_b8e4
000000000000b90e         align      16                                          ; End of unwind block (FDE at 0x1c49c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
000000000000b910         push       r13                                         ; Begin of unwind block (FDE at 0x1c4dc), CODE XREF=main+6015, main+6172, __argmatch_die+5
000000000000b912         push       r12
000000000000b914         mov        edx, 0x5
000000000000b919         push       rbp
000000000000b91a         push       rbx
000000000000b91b         mov        r12d, edi
000000000000b91e         sub        rsp, 0x88
000000000000b925         mov        rbx, qword [program_name]                   ; program_name
000000000000b92c         mov        rax, qword [fs:0x28]
000000000000b935         mov        qword [rsp+0xa8+var_30], rax
000000000000b93a         xor        eax, eax
000000000000b93c         test       edi, edi
000000000000b93e         je         loc_b96f

000000000000b940         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
000000000000b947         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000b949         call       j_dcgettext                                 ; dcgettext
000000000000b94e         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
000000000000b955         mov        rdx, rax
000000000000b958         mov        rcx, rbx
000000000000b95b         mov        esi, 0x1
000000000000b960         xor        eax, eax
000000000000b962         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_b967:
000000000000b967         mov        edi, r12d                                   ; argument "__status" for method j_exit, CODE XREF=usage+1659
000000000000b96a         call       j_exit                                      ; exit
                        ; endp

                     loc_b96f:
000000000000b96f         lea        rsi, qword [aUsageSOptionFi]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... [FILE]...\\n", CODE XREF=usage+46
000000000000b976         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000b978         lea        rbp, qword [aCoreutils+7]                   ; 0x179e1
000000000000b97f         call       j_dcgettext                                 ; dcgettext
000000000000b984         mov        rdx, rbx
000000000000b987         mov        rsi, rax
000000000000b98a         mov        edi, 0x1
000000000000b98f         xor        eax, eax
000000000000b991         call       j___printf_chk                              ; __printf_chk
000000000000b996         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000b99d         lea        rsi, qword [aListInformatio]                ; argument "msgid" for method j_dcgettext, "List information about the FILEs (the current directory by default).\\nSort entries alphabetically if none of -cftuvSUX nor --sort is specified.\\n"
000000000000b9a4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000b9a9         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000b9ab         call       j_dcgettext                                 ; dcgettext
000000000000b9b0         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000b9b3         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000b9b6         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000b9bb         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000b9c2         lea        rsi, qword [aNmandatoryArgu]                ; argument "msgid" for method j_dcgettext, "\\nMandatory arguments to long options are mandatory for short options too.\\n"
000000000000b9c9         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000b9ce         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000b9d0         call       j_dcgettext                                 ; dcgettext
000000000000b9d5         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000b9d8         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000b9db         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000b9e0         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000b9e7         lea        rsi, qword [aAAllDoNotIgnor]                ; argument "msgid" for method j_dcgettext, "  -a, --all                  do not ignore entries starting with .\\n  -A, --almost-all           do not list implied . and ..\\n      --author               with -l, print the author of each file\\n  -b, --escape               print C-style escapes for nongraph…"
000000000000b9ee         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000b9f3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000b9f5         call       j_dcgettext                                 ; dcgettext
000000000000b9fa         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000b9fd         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000ba00         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000ba05         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000ba0c         lea        rsi, qword [aBlocksizesizeW]                ; argument "msgid" for method j_dcgettext, "      --block-size=SIZE      with -l, scale sizes by SIZE when printing them;\\n                               e.g., '--block-size=M'; see SIZE format below\\n"
000000000000ba13         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000ba18         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000ba1a         call       j_dcgettext                                 ; dcgettext
000000000000ba1f         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000ba22         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000ba25         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000ba2a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000ba31         lea        rsi, qword [aBIgnorebackups]                ; argument "msgid" for method j_dcgettext, "  -B, --ignore-backups       do not list implied entries ending with ~\\n  -c                         with -lt: sort by, and show, ctime (time of last\\n                               modification of file status information);\\n                               wit…"
000000000000ba38         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000ba3d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000ba3f         call       j_dcgettext                                 ; dcgettext
000000000000ba44         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000ba47         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000ba4a         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000ba4f         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000ba56         lea        rsi, qword [aCListEntriesBy]                ; argument "msgid" for method j_dcgettext, "  -C                         list entries by columns\\n      --color[=WHEN]         colorize the output; WHEN can be 'always' (default\\n                               if omitted), 'auto', or 'never'; more info below\\n  -d, --directory            list directori…"
000000000000ba5d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000ba62         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000ba64         call       j_dcgettext                                 ; dcgettext
000000000000ba69         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000ba6c         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000ba6f         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000ba74         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000ba7b         lea        rsi, qword [aFDoNotSortEnab]                ; argument "msgid" for method j_dcgettext, "  -f                         do not sort, enable -aU, disable -ls --color\\n  -F, --classify             append indicator (one of */=>@|) to entries\\n      --file-type            likewise, except do not append '*'\\n      --format=WORD          across -x, comma…"
000000000000ba82         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000ba87         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000ba89         call       j_dcgettext                                 ; dcgettext
000000000000ba8e         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000ba91         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000ba94         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000ba99         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000baa0         lea        rsi, qword [aGLikeLButDoNot]                ; argument "msgid" for method j_dcgettext, "  -g                         like -l, but do not list owner\\n"
000000000000baa7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000baac         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000baae         call       j_dcgettext                                 ; dcgettext
000000000000bab3         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000bab6         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000bab9         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000babe         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000bac5         lea        rsi, qword [aGroupdirectori]                ; argument "msgid" for method j_dcgettext, "      --group-directories-first\\n                             group directories before files;\\n                               can be augmented with a --sort option, but any\\n                               use of --sort=none (-U) disables grouping\\n"
000000000000bacc         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000bad1         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000bad3         call       j_dcgettext                                 ; dcgettext
000000000000bad8         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000badb         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000bade         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000bae3         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000baea         lea        rsi, qword [aGNogroupInALon]                ; argument "msgid" for method j_dcgettext, "  -G, --no-group             in a long listing, don't print group names\\n"
000000000000baf1         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000baf6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000baf8         call       j_dcgettext                                 ; dcgettext
000000000000bafd         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000bb00         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000bb03         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000bb08         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000bb0f         lea        rsi, qword [aHHumanreadable]                ; argument "msgid" for method j_dcgettext, "  -h, --human-readable       with -l and -s, print sizes like 1K 234M 2G etc.\\n      --si                   likewise, but use powers of 1000 not 1024\\n"
000000000000bb16         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000bb1b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000bb1d         call       j_dcgettext                                 ; dcgettext
000000000000bb22         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000bb25         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000bb28         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000bb2d         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000bb34         lea        rsi, qword [aHDereferenceco]                ; argument "msgid" for method j_dcgettext, "  -H, --dereference-command-line\\n                             follow symbolic links listed on the command line\\n      --dereference-command-line-symlink-to-dir\\n                             follow each command line symbolic link\\n                             …"
000000000000bb3b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000bb40         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000bb42         call       j_dcgettext                                 ; dcgettext
000000000000bb47         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000bb4a         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000bb4d         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000bb52         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000bb59         lea        rsi, qword [aHyperlinkwhenH]                ; argument "msgid" for method j_dcgettext, "      --hyperlink[=WHEN]     hyperlink file names; WHEN can be 'always'\\n                               (default if omitted), 'auto', or 'never'\\n"
000000000000bb60         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000bb65         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000bb67         call       j_dcgettext                                 ; dcgettext
000000000000bb6c         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000bb6f         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000bb72         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000bb77         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000bb7e         lea        rsi, qword [aIndicatorstyle]                ; argument "msgid" for method j_dcgettext, "      --indicator-style=WORD  append indicator with style WORD to entry names:\\n                               none (default), slash (-p),\\n                               file-type (--file-type), classify (-F)\\n  -i, --inode                print the index num…"
000000000000bb85         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000bb8a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000bb8c         call       j_dcgettext                                 ; dcgettext
000000000000bb91         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000bb94         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000bb97         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000bb9c         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000bba3         lea        rsi, qword [aKKibibytesDefa]                ; argument "msgid" for method j_dcgettext, "  -k, --kibibytes            default to 1024-byte blocks for disk usage;\\n                               used only with -s and per directory totals\\n"
000000000000bbaa         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000bbaf         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000bbb1         call       j_dcgettext                                 ; dcgettext
000000000000bbb6         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000bbb9         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000bbbc         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000bbc1         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000bbc8         lea        rsi, qword [aLUseALongListi]                ; argument "msgid" for method j_dcgettext, "  -l                         use a long listing format\\n  -L, --dereference          when showing file information for a symbolic\\n                               link, show information for the file the link\\n                               references rather th…"
000000000000bbcf         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000bbd4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000bbd6         call       j_dcgettext                                 ; dcgettext
000000000000bbdb         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000bbde         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000bbe1         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000bbe6         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000bbed         lea        rsi, qword [aNNumericuidgid]                ; argument "msgid" for method j_dcgettext, "  -n, --numeric-uid-gid      like -l, but list numeric user and group IDs\\n  -N, --literal              print entry names without quoting\\n  -o                         like -l, but do not list group information\\n  -p, --indicator-style=slash\\n                 …"
000000000000bbf4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000bbf9         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000bbfb         call       j_dcgettext                                 ; dcgettext
000000000000bc00         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000bc03         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000bc06         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000bc0b         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000bc12         lea        rsi, qword [aQHidecontrolch]                ; argument "msgid" for method j_dcgettext, "  -q, --hide-control-chars   print ? instead of nongraphic characters\\n      --show-control-chars   show nongraphic characters as-is (the default,\\n                               unless program is 'ls' and output is a terminal)\\n  -Q, --quote-name           e…"
000000000000bc19         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000bc1e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000bc20         call       j_dcgettext                                 ; dcgettext
000000000000bc25         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000bc28         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000bc2b         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000bc30         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000bc37         lea        rsi, qword [aRReverseRevers]                ; argument "msgid" for method j_dcgettext, "  -r, --reverse              reverse order while sorting\\n  -R, --recursive            list subdirectories recursively\\n  -s, --size                 print the allocated size of each file, in blocks\\n"
000000000000bc3e         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000bc43         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000bc45         call       j_dcgettext                                 ; dcgettext
000000000000bc4a         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000bc4d         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000bc50         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000bc55         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000bc5c         lea        rsi, qword [aSSortByFileSiz]                ; argument "msgid" for method j_dcgettext, "  -S                         sort by file size, largest first\\n      --sort=WORD            sort by WORD instead of name: none (-U), size (-S),\\n                               time (-t), version (-v), extension (-X)\\n      --time=WORD            with -l, show…"
000000000000bc63         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000bc68         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000bc6a         call       j_dcgettext                                 ; dcgettext
000000000000bc6f         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000bc72         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000bc75         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000bc7a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000bc81         lea        rsi, qword [aTimestyletimes]                ; argument "msgid" for method j_dcgettext, "      --time-style=TIME_STYLE  time/date format with -l; see TIME_STYLE below\\n"
000000000000bc88         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000bc8a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000bc8f         call       j_dcgettext                                 ; dcgettext
000000000000bc94         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000bc97         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000bc9a         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000bc9f         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000bca6         lea        rsi, qword [aTSortByModific]                ; argument "msgid" for method j_dcgettext, "  -t                         sort by modification time, newest first\\n  -T, --tabsize=COLS         assume tab stops at each COLS instead of 8\\n"
000000000000bcad         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000bcb2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000bcb4         call       j_dcgettext                                 ; dcgettext
000000000000bcb9         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000bcbc         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000bcbf         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000bcc4         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000bccb         lea        rsi, qword [aUWithLtSortByA]                ; argument "msgid" for method j_dcgettext, "  -u                         with -lt: sort by, and show, access time;\\n                               with -l: show access time and sort by name;\\n                               otherwise: sort by access time, newest first\\n  -U                         do no…"
000000000000bcd2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000bcd7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000bcd9         call       j_dcgettext                                 ; dcgettext
000000000000bcde         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000bce1         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000bce4         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000bce9         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000bcf0         lea        rsi, qword [aWWidthcolsSetO]                ; argument "msgid" for method j_dcgettext, "  -w, --width=COLS           set output width to COLS.  0 means no limit\\n  -x                         list entries by lines instead of by columns\\n  -X                         sort alphabetically by entry extension\\n  -Z, --context              print any sec…"
000000000000bcf7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000bcfc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000bcfe         call       j_dcgettext                                 ; dcgettext
000000000000bd03         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000bd06         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000bd09         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000bd0e         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000bd15         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
000000000000bd1c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000bd21         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000bd23         call       j_dcgettext                                 ; dcgettext
000000000000bd28         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000bd2b         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000bd2e         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000bd33         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000bd3a         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
000000000000bd41         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000bd46         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000bd48         call       j_dcgettext                                 ; dcgettext
000000000000bd4d         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000bd50         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000bd53         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000bd58         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000bd5f         lea        rsi, qword [aNtheSizeArgume]                ; argument "msgid" for method j_dcgettext, "\\nThe SIZE argument is an integer and optional unit (example: 10K is 10*1024).\\nUnits are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).\\nBinary prefixes can be used, too: KiB=K, MiB=M, and so on.\\n"
000000000000bd66         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000bd6b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000bd6d         call       j_dcgettext                                 ; dcgettext
000000000000bd72         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000bd75         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000bd78         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000bd7d         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000bd84         lea        rsi, qword [aNtheTimestyleA]                ; argument "msgid" for method j_dcgettext, "\\nThe TIME_STYLE argument can be full-iso, long-iso, iso, locale, or +FORMAT.\\nFORMAT is interpreted like in date(1).  If FORMAT is FORMAT1<newline>FORMAT2,\\nthen FORMAT1 applies to non-recent files and FORMAT2 to recent files.\\nTIME_STYLE prefixed with 'posix…"
000000000000bd8b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000bd90         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000bd92         call       j_dcgettext                                 ; dcgettext
000000000000bd97         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000bd9a         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000bd9d         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000bda2         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000bda9         lea        rsi, qword [aNusingColorToD]                ; argument "msgid" for method j_dcgettext, "\\nUsing color to distinguish file types is disabled both by default and\\nwith --color=never.  With --color=auto, ls emits color codes only when\\nstandard output is connected to a terminal.  The LS_COLORS environment\\nvariable can change the settings.  Use the …"
000000000000bdb0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000bdb5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000bdb7         call       j_dcgettext                                 ; dcgettext
000000000000bdbc         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000bdbf         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000bdc2         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000bdc7         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000bdce         lea        rsi, qword [aNexitStatusn0I]                ; argument "msgid" for method j_dcgettext, "\\nExit status:\\n 0  if OK,\\n 1  if minor problems (e.g., cannot access subdirectory),\\n 2  if serious trouble (e.g., cannot access command-line argument).\\n"
000000000000bdd5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000bdd7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000bddc         call       j_dcgettext                                 ; dcgettext
000000000000bde1         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000bde4         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000bde7         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000bdec         mov        eax, dword [ls_mode]                        ; ls_mode
000000000000bdf2         cmp        eax, 0x1
000000000000bdf5         je         loc_be0c

000000000000bdf7         cmp        eax, 0x2
000000000000bdfa         lea        rbp, qword [aTotal+6]                       ; 0x1795d
000000000000be01         lea        rax, qword [aTotal+7]                       ; 0x1795e
000000000000be08         cmove      rbp, rax

                     loc_be0c:
000000000000be0c         lea        rax, qword [aTestInvocation]                ; "test invocation", CODE XREF=usage+1253
000000000000be13         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
000000000000be1a         lea        rsi, qword [aBEHm+13]                       ; 0x17dc4
000000000000be21         mov        qword [rsp+0xa8+var_48], 0x0
000000000000be2a         mov        qword [rsp+0xa8+var_40], 0x0
000000000000be33         mov        rbx, rsp
000000000000be36         mov        qword [rsp+0xa8+var_A0], rax
000000000000be3b         lea        rax, qword [aCoreutils]                     ; "coreutils"
000000000000be42         mov        qword [rsp+0xa8+var_78], rcx
000000000000be47         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
000000000000be4e         mov        qword [rsp+0xa8+var_A8], rsi
000000000000be52         mov        qword [rsp+0xa8+var_98], rax
000000000000be57         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
000000000000be5e         mov        qword [rsp+0xa8+var_68], rcx
000000000000be63         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
000000000000be6a         mov        qword [rsp+0xa8+var_90], rax
000000000000be6f         lea        rax, qword [aSha224sum]                     ; "sha224sum"
000000000000be76         mov        qword [rsp+0xa8+var_58], rcx
000000000000be7b         mov        qword [rsp+0xa8+var_88], rax
000000000000be80         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
000000000000be87         mov        qword [rsp+0xa8+var_80], rax
000000000000be8c         mov        qword [rsp+0xa8+var_70], rax
000000000000be91         mov        qword [rsp+0xa8+var_60], rax
000000000000be96         mov        qword [rsp+0xa8+var_50], rax
000000000000be9b         jmp        loc_beac
000000000000be9d         align      32

                     loc_bea0:
000000000000bea0         add        rbx, 0x10                                   ; CODE XREF=usage+1446
000000000000bea4         mov        rsi, qword [rbx]
000000000000bea7         test       rsi, rsi
000000000000beaa         je         loc_beb8

                     loc_beac:
000000000000beac         mov        rdi, rbp                                    ; argument "__s1" for method j_strcmp, CODE XREF=usage+1419
000000000000beaf         call       j_strcmp                                    ; strcmp
000000000000beb4         test       eax, eax
000000000000beb6         jne        loc_bea0

                     loc_beb8:
000000000000beb8         mov        rbx, qword [rbx+8]                          ; CODE XREF=usage+1434
000000000000bebc         xor        edi, edi
000000000000bebe         mov        edx, 0x5
000000000000bec3         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
000000000000beca         test       rbx, rbx
000000000000becd         je         loc_bf90

000000000000bed3         call       j_dcgettext                                 ; dcgettext
000000000000bed8         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
000000000000bedf         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x179d6
000000000000bee6         mov        rsi, rax
000000000000bee9         mov        edi, 0x1
000000000000beee         xor        eax, eax
000000000000bef0         call       j___printf_chk                              ; __printf_chk
000000000000bef5         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000bef7         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
000000000000befc         call       j_setlocale                                 ; setlocale
000000000000bf01         test       rax, rax
000000000000bf04         je         loc_bf22

000000000000bf06         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x179e4
000000000000bf0d         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
000000000000bf12         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
000000000000bf15         call       j_strncmp                                   ; strncmp
000000000000bf1a         test       eax, eax
000000000000bf1c         jne        loc_c019

                     loc_bf22:
000000000000bf22         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+1524, usage+1838
000000000000bf29         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000bf2b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000bf30         call       j_dcgettext                                 ; dcgettext
000000000000bf35         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
000000000000bf3c         mov        rcx, rbp
000000000000bf3f         mov        rsi, rax
000000000000bf42         mov        edi, 0x1
000000000000bf47         xor        eax, eax
000000000000bf49         call       j___printf_chk                              ; __printf_chk
000000000000bf4e         cmp        rbp, rbx
000000000000bf51         lea        rcx, qword [aMulticallInvoc+10]             ; 0x1797c
000000000000bf58         lea        rbp, qword [aLu+34]                         ; 0x178b3
000000000000bf5f         cmove      rbp, rcx

                     loc_bf63:
000000000000bf63         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+1793
000000000000bf6a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000bf6c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000bf71         call       j_dcgettext                                 ; dcgettext
000000000000bf76         mov        rcx, rbp
000000000000bf79         mov        rsi, rax
000000000000bf7c         mov        rdx, rbx
000000000000bf7f         mov        edi, 0x1
000000000000bf84         xor        eax, eax
000000000000bf86         call       j___printf_chk                              ; __printf_chk
000000000000bf8b         jmp        loc_b967

                     loc_bf90:
000000000000bf90         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+1469
000000000000bf95         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
000000000000bf9c         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x179d6
000000000000bfa3         mov        rsi, rax
000000000000bfa6         mov        edi, 0x1
000000000000bfab         xor        eax, eax
000000000000bfad         call       j___printf_chk                              ; __printf_chk
000000000000bfb2         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000bfb4         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
000000000000bfb9         call       j_setlocale                                 ; setlocale
000000000000bfbe         test       rax, rax
000000000000bfc1         je         loc_bfdb

000000000000bfc3         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x179e4
000000000000bfca         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
000000000000bfcf         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
000000000000bfd2         call       j_strncmp                                   ; strncmp
000000000000bfd7         test       eax, eax
000000000000bfd9         jne        loc_c016

                     loc_bfdb:
000000000000bfdb         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+1713
000000000000bfe2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000bfe7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000bfe9         mov        rbx, rbp
000000000000bfec         call       j_dcgettext                                 ; dcgettext
000000000000bff1         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
000000000000bff8         mov        rcx, rbp
000000000000bffb         mov        rsi, rax
000000000000bffe         mov        edi, 0x1
000000000000c003         xor        eax, eax
000000000000c005         lea        rbp, qword [aMulticallInvoc+10]             ; 0x1797c
000000000000c00c         call       j___printf_chk                              ; __printf_chk
000000000000c011         jmp        loc_bf63

                     loc_c016:
000000000000c016         mov        rbx, rbp                                    ; CODE XREF=usage+1737

                     loc_c019:
000000000000c019         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+1548
000000000000c020         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
000000000000c027         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000c029         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000c02e         call       j_dcgettext                                 ; dcgettext
000000000000c033         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
000000000000c036         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000c039         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000c03e         jmp        loc_bf22
000000000000c043         align      16                                          ; End of unwind block (FDE at 0x1c4dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     areadlink_with_size:
000000000000c050         push       r15                                         ; Begin of unwind block (FDE at 0x1c574), CODE XREF=gobble_file.constprop.52+2404, canonicalize_filename_mode+1068
000000000000c052         push       r14
000000000000c054         mov        eax, 0x401
000000000000c059         push       r13
000000000000c05b         push       r12
000000000000c05d         mov        r13, rdi
000000000000c060         push       rbp
000000000000c061         push       rbx
000000000000c062         lea        rbx, qword [rsi+1]
000000000000c066         movabs     r14, 0x3fffffffffffffff
000000000000c070         movabs     r15, 0x7ffffffffffffffe
000000000000c07a         sub        rsp, 0x8
000000000000c07e         cmp        rsi, 0x401
000000000000c085         cmovae     rbx, rax
000000000000c089         nop        dword [rax]

                     loc_c090:
000000000000c090         mov        rdi, rbx                                    ; CODE XREF=areadlink_with_size+175
000000000000c093         call       sub_3888                                    ; sub_3888
000000000000c098         test       rax, rax
000000000000c09b         mov        rbp, rax
000000000000c09e         je         loc_c0db

                     loc_c0a0:
000000000000c0a0         mov        rdx, rbx                                    ; argument "__len" for method j_readlink, CODE XREF=areadlink_with_size+137
000000000000c0a3         mov        rsi, rax                                    ; argument "__buf" for method j_readlink
000000000000c0a6         mov        rdi, r13                                    ; argument "__path" for method j_readlink
000000000000c0a9         call       j_readlink                                  ; readlink
000000000000c0ae         test       rax, rax
000000000000c0b1         mov        r12, rax
000000000000c0b4         js         loc_c108

                     loc_c0b6:
000000000000c0b6         cmp        rbx, r12                                    ; CODE XREF=areadlink_with_size+192
000000000000c0b9         ja         loc_c120

000000000000c0bb         mov        rdi, rbp
000000000000c0be         call       sub_3880                                    ; sub_3880
000000000000c0c3         cmp        rbx, r14
000000000000c0c6         ja         loc_c0f0

000000000000c0c8         add        rbx, rbx
000000000000c0cb         mov        rdi, rbx
000000000000c0ce         call       sub_3888                                    ; sub_3888
000000000000c0d3         test       rax, rax
000000000000c0d6         mov        rbp, rax
000000000000c0d9         jne        loc_c0a0

                     loc_c0db:
000000000000c0db         add        rsp, 0x8                                    ; CODE XREF=areadlink_with_size+78, areadlink_with_size+204, areadlink_with_size+214, areadlink_with_size+237
000000000000c0df         mov        rax, rbp
000000000000c0e2         pop        rbx
000000000000c0e3         pop        rbp
000000000000c0e4         pop        r12
000000000000c0e6         pop        r13
000000000000c0e8         pop        r14
000000000000c0ea         pop        r15
000000000000c0ec         ret
                        ; endp
000000000000c0ed         align      16

                     loc_c0f0:
000000000000c0f0         cmp        rbx, r15                                    ; CODE XREF=areadlink_with_size+118
000000000000c0f3         ja         loc_c130

000000000000c0f5         movabs     rbx, 0x7fffffffffffffff
000000000000c0ff         jmp        loc_c090
000000000000c101         align      8

                     loc_c108:
000000000000c108         call       j___errno_location                          ; __errno_location, CODE XREF=areadlink_with_size+100
000000000000c10d         cmp        dword [rax], 0x22
000000000000c110         je         loc_c0b6

000000000000c112         mov        rdi, rbp
000000000000c115         xor        ebp, ebp
000000000000c117         call       sub_3880                                    ; sub_3880
000000000000c11c         jmp        loc_c0db
000000000000c11e         align      32

                     loc_c120:
000000000000c120         mov        byte [rbp+r12], 0x0                         ; CODE XREF=areadlink_with_size+105
000000000000c126         jmp        loc_c0db
000000000000c128         align      16

                     loc_c130:
000000000000c130         call       j___errno_location                          ; __errno_location, CODE XREF=areadlink_with_size+163
000000000000c135         xor        ebp, ebp
000000000000c137         mov        dword [rax], 0xc
000000000000c13d         jmp        loc_c0db
000000000000c13f         align      64                                          ; End of unwind block (FDE at 0x1c574)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __argmatch_die:
000000000000c140         mov        edi, 0x1                                    ; Begin of unwind block (FDE at 0x1c5c4), argument #1 for method usage, DATA XREF=argmatch_die
000000000000c145         jmp        usage                                       ; usage
                        ; endp
000000000000c14a         align      16                                          ; End of unwind block (FDE at 0x1c5c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_41: int8_t, -65
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     argmatch:
000000000000c150         push       r15                                         ; Begin of unwind block (FDE at 0x1c5d8), CODE XREF=main+395, main+5089, __xargmatch_internal+44, human_options+82
000000000000c152         push       r14
000000000000c154         mov        r15, rsi
000000000000c157         push       r13
000000000000c159         push       r12
000000000000c15b         mov        r13, rcx
000000000000c15e         push       rbp
000000000000c15f         push       rbx
000000000000c160         mov        rbp, rdx
000000000000c163         sub        rsp, 0x28
000000000000c167         mov        qword [rsp+0x58+var_50], rdi
000000000000c16c         mov        qword [rsp+0x58+var_40], rdx
000000000000c171         call       j_strlen                                    ; strlen
000000000000c176         mov        r14, qword [r15]
000000000000c179         mov        qword [rsp+0x58+var_58], 0xffffffffffffffff
000000000000c181         test       r14, r14
000000000000c184         je         loc_c23d

000000000000c18a         mov        r12, rax
000000000000c18d         mov        byte [rsp+0x58+var_41], 0x0
000000000000c192         xor        ebx, ebx
000000000000c194         jmp        loc_c1e7
000000000000c196         align      32

                     loc_c1a0:
000000000000c1a0         mov        rax, qword [rsp+0x58+var_40]                ; CODE XREF=argmatch+189
000000000000c1a5         test       rax, rax
000000000000c1a8         je         loc_c250

000000000000c1ae         mov        rdi, qword [rsp+0x58+var_58]
000000000000c1b2         mov        rdx, r13                                    ; argument "__n" for method j_memcmp
000000000000c1b5         mov        rsi, rbp                                    ; argument "__s2" for method j_memcmp
000000000000c1b8         imul       rdi, r13
000000000000c1bc         add        rdi, rax                                    ; argument "__s1" for method j_memcmp
000000000000c1bf         call       j_memcmp                                    ; memcmp
000000000000c1c4         test       eax, eax
000000000000c1c6         movzx      eax, byte [rsp+0x58+var_41]
000000000000c1cb         mov        ecx, 0x1
000000000000c1d0         cmovne     eax, ecx
000000000000c1d3         mov        byte [rsp+0x58+var_41], al

                     loc_c1d7:
000000000000c1d7         add        rbx, 0x1                                    ; CODE XREF=argmatch+169, argmatch+261
000000000000c1db         add        rbp, r13
000000000000c1de         mov        r14, qword [r15+rbx*8]
000000000000c1e2         test       r14, r14
000000000000c1e5         je         loc_c228

                     loc_c1e7:
000000000000c1e7         mov        rsi, qword [rsp+0x58+var_50]                ; argument "__s2" for method j_strncmp, CODE XREF=argmatch+68, argmatch+209
000000000000c1ec         mov        rdx, r12                                    ; argument "__n" for method j_strncmp
000000000000c1ef         mov        rdi, r14                                    ; argument "__s1" for method j_strncmp
000000000000c1f2         call       j_strncmp                                   ; strncmp
000000000000c1f7         test       eax, eax
000000000000c1f9         jne        loc_c1d7

000000000000c1fb         mov        rdi, r14                                    ; argument "__s" for method j_strlen
000000000000c1fe         call       j_strlen                                    ; strlen
000000000000c203         cmp        rax, r12
000000000000c206         je         loc_c260

000000000000c208         cmp        qword [rsp+0x58+var_58], 0xffffffffffffffff
000000000000c20d         jne        loc_c1a0

000000000000c20f         mov        qword [rsp+0x58+var_58], rbx
000000000000c213         add        rbx, 0x1
000000000000c217         add        rbp, r13
000000000000c21a         mov        r14, qword [r15+rbx*8]
000000000000c21e         test       r14, r14
000000000000c221         jne        loc_c1e7

000000000000c223         nop        dword [rax+rax]

                     loc_c228:
000000000000c228         cmp        byte [rsp+0x58+var_41], 0x0                 ; CODE XREF=argmatch+149
000000000000c22d         mov        rax, 0xfffffffffffffffe
000000000000c234         cmove      rax, qword [rsp+0x58+var_58]
000000000000c239         mov        qword [rsp+0x58+var_58], rax

                     loc_c23d:
000000000000c23d         mov        rax, qword [rsp+0x58+var_58]                ; CODE XREF=argmatch+52, argmatch+276
000000000000c241         add        rsp, 0x28
000000000000c245         pop        rbx
000000000000c246         pop        rbp
000000000000c247         pop        r12
000000000000c249         pop        r13
000000000000c24b         pop        r14
000000000000c24d         pop        r15
000000000000c24f         ret
                        ; endp

                     loc_c250:
000000000000c250         mov        byte [rsp+0x58+var_41], 0x1                 ; CODE XREF=argmatch+88
000000000000c255         jmp        loc_c1d7
000000000000c257         align      32

                     loc_c260:
000000000000c260         mov        qword [rsp+0x58+var_58], rbx                ; CODE XREF=argmatch+182
000000000000c264         jmp        loc_c23d
000000000000c266         align      16                                          ; End of unwind block (FDE at 0x1c5d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     argmatch_invalid:
000000000000c270         cmp        rdx, 0xffffffffffffffff                     ; Begin of unwind block (FDE at 0x1c624), CODE XREF=main+6040, __xargmatch_internal+78
000000000000c274         push       r12
000000000000c276         mov        edx, 0x5
000000000000c27b         push       rbp
000000000000c27c         mov        r12, rsi
000000000000c27f         push       rbx
000000000000c280         mov        rbp, rdi
000000000000c283         je         loc_c2d0

000000000000c285         lea        rsi, qword [aAmbiguousArgum]                ; argument "msgid" for method j_dcgettext, "ambiguous argument %s for %s"
000000000000c28c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000c28e         call       j_dcgettext                                 ; dcgettext
000000000000c293         mov        rbx, rax

                     loc_c296:
000000000000c296         mov        rsi, rbp                                    ; CODE XREF=argmatch_invalid+113
000000000000c299         mov        edi, 0x1
000000000000c29e         call       quote_n                                     ; quote_n
000000000000c2a3         mov        rdx, r12
000000000000c2a6         mov        rbp, rax
000000000000c2a9         mov        esi, 0x8
000000000000c2ae         xor        edi, edi
000000000000c2b0         call       quotearg_n_style                            ; quotearg_n_style
000000000000c2b5         mov        r8, rbp
000000000000c2b8         mov        rdx, rbx                                    ; argument "__format" for method j_error
000000000000c2bb         mov        rcx, rax
000000000000c2be         pop        rbx
000000000000c2bf         pop        rbp
000000000000c2c0         pop        r12
000000000000c2c2         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000c2c4         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000c2c6         xor        eax, eax
000000000000c2c8         jmp        j_error                                     ; error
                        ; endp
000000000000c2cd         align      16

                     loc_c2d0:
000000000000c2d0         lea        rsi, qword [aInvalidArgumen]                ; argument "msgid" for method j_dcgettext, "invalid argument %s for %s", CODE XREF=argmatch_invalid+19
000000000000c2d7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000c2d9         call       j_dcgettext                                 ; dcgettext
000000000000c2de         mov        rbx, rax
000000000000c2e1         jmp        loc_c296
000000000000c2e3         align      16                                          ; End of unwind block (FDE at 0x1c624)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     argmatch_valid:
000000000000c2f0         push       r15                                         ; Begin of unwind block (FDE at 0x1c650), CODE XREF=__xargmatch_internal+92
000000000000c2f2         push       r14
000000000000c2f4         mov        r14, rdi
000000000000c2f7         push       r13
000000000000c2f9         push       r12
000000000000c2fb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000c2fd         push       rbp
000000000000c2fe         push       rbx
000000000000c2ff         mov        rbp, rsi
000000000000c302         lea        rsi, qword [aValidArguments]                ; argument "msgid" for method j_dcgettext, "Valid arguments are:"
000000000000c309         mov        r12, rdx
000000000000c30c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000c311         sub        rsp, 0x8
000000000000c315         mov        rbx, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
000000000000c31c         call       j_dcgettext                                 ; dcgettext
000000000000c321         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000c324         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000c327         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000c32c         mov        r15, qword [r14]
000000000000c32f         test       r15, r15
000000000000c332         je         loc_c3c8

000000000000c338         xor        r13d, r13d
000000000000c33b         xor        ebx, ebx
000000000000c33d         jmp        loc_c378
000000000000c33f         align      64

                     loc_c340:
000000000000c340         mov        rdi, r15                                    ; CODE XREF=argmatch_valid+139, argmatch_valid+157
000000000000c343         add        rbx, 0x1
000000000000c347         mov        r13, rbp
000000000000c34a         call       quote                                       ; quote
000000000000c34f         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
000000000000c356         lea        rdx, qword [aNS]                            ; "\\n  - %s"
000000000000c35d         mov        rcx, rax
000000000000c360         mov        esi, 0x1
000000000000c365         xor        eax, eax
000000000000c367         add        rbp, r12
000000000000c36a         call       j___fprintf_chk                             ; __fprintf_chk
000000000000c36f         mov        r15, qword [r14+rbx*8]
000000000000c373         test       r15, r15
000000000000c376         je         loc_c3c8

                     loc_c378:
000000000000c378         test       rbx, rbx                                    ; CODE XREF=argmatch_valid+77, argmatch_valid+210
000000000000c37b         je         loc_c340

000000000000c37d         mov        rdx, r12                                    ; argument "__n" for method j_memcmp
000000000000c380         mov        rsi, rbp                                    ; argument "__s2" for method j_memcmp
000000000000c383         mov        rdi, r13                                    ; argument "__s1" for method j_memcmp
000000000000c386         call       j_memcmp                                    ; memcmp
000000000000c38b         test       eax, eax
000000000000c38d         jne        loc_c340

000000000000c38f         mov        rdi, r15
000000000000c392         add        rbx, 0x1
000000000000c396         add        rbp, r12
000000000000c399         call       quote                                       ; quote
000000000000c39e         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
000000000000c3a5         lea        rdx, qword [aNS+8]                          ; 0x19f8a
000000000000c3ac         mov        rcx, rax
000000000000c3af         mov        esi, 0x1
000000000000c3b4         xor        eax, eax
000000000000c3b6         call       j___fprintf_chk                             ; __fprintf_chk
000000000000c3bb         mov        r15, qword [r14+rbx*8]
000000000000c3bf         test       r15, r15
000000000000c3c2         jne        loc_c378

000000000000c3c4         nop        dword [rax]

                     loc_c3c8:
000000000000c3c8         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=argmatch_valid+66, argmatch_valid+134
000000000000c3cf         mov        rax, qword [rdi+0x28]
000000000000c3d3         cmp        rax, qword [rdi+0x30]
000000000000c3d7         jae        loc_c3f8

000000000000c3d9         lea        rdx, qword [rax+1]
000000000000c3dd         mov        qword [rdi+0x28], rdx
000000000000c3e1         mov        byte [rax], 0xa
000000000000c3e4         add        rsp, 0x8
000000000000c3e8         pop        rbx
000000000000c3e9         pop        rbp
000000000000c3ea         pop        r12
000000000000c3ec         pop        r13
000000000000c3ee         pop        r14
000000000000c3f0         pop        r15
000000000000c3f2         ret
                        ; endp
000000000000c3f3         align      8

                     loc_c3f8:
000000000000c3f8         add        rsp, 0x8                                    ; CODE XREF=argmatch_valid+231
000000000000c3fc         mov        esi, 0xa                                    ; argument #2 for method j___overflow
000000000000c401         pop        rbx
000000000000c402         pop        rbp
000000000000c403         pop        r12
000000000000c405         pop        r13
000000000000c407         pop        r14
000000000000c409         pop        r15
000000000000c40b         jmp        j___overflow                                ; __overflow
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __xargmatch_internal:
000000000000c410         push       r15                                         ; End of unwind block (FDE at 0x1c650), Begin of unwind block (FDE at 0x1c6b0), CODE XREF=main+1505, main+1572, main+1703, main+1771, main+1847, main+2023, main+2129
000000000000c412         push       r14
000000000000c414         mov        r14, rdi
000000000000c417         push       r13
000000000000c419         push       r12
000000000000c41b         mov        r12, rsi
000000000000c41e         push       rbp
000000000000c41f         push       rbx
000000000000c420         mov        rbp, rcx
000000000000c423         mov        rbx, rdx
000000000000c426         mov        rcx, r8
000000000000c429         mov        rdx, rbp
000000000000c42c         sub        rsp, 0x8
000000000000c430         mov        rsi, rbx
000000000000c433         mov        rdi, r12
000000000000c436         mov        r15, r8
000000000000c439         mov        r13, r9
000000000000c43c         call       argmatch                                    ; argmatch
000000000000c441         test       rax, rax
000000000000c444         js         loc_c455

                     loc_c446:
000000000000c446         add        rsp, 0x8                                    ; CODE XREF=__xargmatch_internal+107
000000000000c44a         pop        rbx
000000000000c44b         pop        rbp
000000000000c44c         pop        r12
000000000000c44e         pop        r13
000000000000c450         pop        r14
000000000000c452         pop        r15
000000000000c454         ret
                        ; endp

                     loc_c455:
000000000000c455         mov        rdx, rax                                    ; CODE XREF=__xargmatch_internal+52
000000000000c458         mov        rsi, r12
000000000000c45b         mov        rdi, r14
000000000000c45e         call       argmatch_invalid                            ; argmatch_invalid
000000000000c463         mov        rdx, r15
000000000000c466         mov        rsi, rbp
000000000000c469         mov        rdi, rbx
000000000000c46c         call       argmatch_valid                              ; argmatch_valid
000000000000c471         call       r13
000000000000c474         mov        rax, 0xffffffffffffffff
000000000000c47b         jmp        loc_c446
000000000000c47d         align      128                                         ; End of unwind block (FDE at 0x1c6b0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     argmatch_to_argument:
000000000000c480         push       r14                                         ; Begin of unwind block (FDE at 0x1c6fc)
000000000000c482         push       r13
000000000000c484         push       r12
000000000000c486         push       rbp
000000000000c487         push       rbx
000000000000c488         mov        r14, qword [rsi]
000000000000c48b         test       r14, r14
000000000000c48e         je         loc_c4c1

000000000000c490         mov        r12, rcx
000000000000c493         mov        r13, rdi
000000000000c496         mov        rbp, rdx
000000000000c499         lea        rbx, qword [rsi+8]
000000000000c49d         jmp        loc_c4af
000000000000c49f         align      32

                     loc_c4a0:
000000000000c4a0         mov        r14, qword [rbx]                            ; CODE XREF=argmatch_to_argument+63
000000000000c4a3         add        rbp, r12
000000000000c4a6         add        rbx, 0x8
000000000000c4aa         test       r14, r14
000000000000c4ad         je         loc_c4c1

                     loc_c4af:
000000000000c4af         mov        rdx, r12                                    ; argument "__n" for method j_memcmp, CODE XREF=argmatch_to_argument+29
000000000000c4b2         mov        rsi, rbp                                    ; argument "__s2" for method j_memcmp
000000000000c4b5         mov        rdi, r13                                    ; argument "__s1" for method j_memcmp
000000000000c4b8         call       j_memcmp                                    ; memcmp
000000000000c4bd         test       eax, eax
000000000000c4bf         jne        loc_c4a0

                     loc_c4c1:
000000000000c4c1         pop        rbx                                         ; CODE XREF=argmatch_to_argument+14, argmatch_to_argument+45
000000000000c4c2         mov        rax, r14
000000000000c4c5         pop        rbp
000000000000c4c6         pop        r12
000000000000c4c8         pop        r13
000000000000c4ca         pop        r14
000000000000c4cc         ret
                        ; endp
000000000000c4cd         align      16                                          ; End of unwind block (FDE at 0x1c6fc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     c_strncasecmp:
000000000000c4d0         cmp        rdi, rsi                                    ; Begin of unwind block (FDE at 0x1c73c), CODE XREF=print_name_with_quoting+698
000000000000c4d3         je         loc_c530

000000000000c4d5         test       rdx, rdx
000000000000c4d8         jne        loc_c4f0

000000000000c4da         jmp        loc_c530
000000000000c4dc         align      32

                     loc_c4e0:
000000000000c4e0         test       al, al                                      ; CODE XREF=c_strncasecmp+77
000000000000c4e2         je         loc_c51f

000000000000c4e4         add        rdi, 0x1
000000000000c4e8         add        rsi, 0x1
000000000000c4ec         cmp        al, cl
000000000000c4ee         jne        loc_c51f

                     loc_c4f0:
000000000000c4f0         movzx      eax, byte [rdi]                             ; CODE XREF=c_strncasecmp+8
000000000000c4f3         mov        ecx, eax
000000000000c4f5         lea        r8d, dword [rax+0x20]
000000000000c4f9         sub        ecx, 0x41
000000000000c4fc         cmp        cl, 0x1a
000000000000c4ff         movzx      ecx, byte [rsi]
000000000000c502         cmovb      eax, r8d
000000000000c506         mov        r8d, ecx
000000000000c509         lea        r10d, dword [rcx+0x20]
000000000000c50d         sub        r8d, 0x41
000000000000c511         cmp        r8b, 0x1a
000000000000c515         cmovb      ecx, r10d
000000000000c519         sub        rdx, 0x1
000000000000c51d         jne        loc_c4e0

                     loc_c51f:
000000000000c51f         movzx      ecx, cl                                     ; CODE XREF=c_strncasecmp+18, c_strncasecmp+30
000000000000c522         movzx      eax, al
000000000000c525         sub        eax, ecx
000000000000c527         ret
                        ; endp
000000000000c528         align      16

                     loc_c530:
000000000000c530         xor        eax, eax                                    ; CODE XREF=c_strncasecmp+3, c_strncasecmp+10
000000000000c532         ret
                        ; endp
000000000000c533         align      64                                          ; End of unwind block (FDE at 0x1c73c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_A8: int64_t, -168
        ;    var_C0: int32_t, -192
        ;    var_D8: int8_t, -216
        ;    var_E0: int64_t, -224
        ;    var_E8: int64_t, -232
        ;    var_F0: int64_t, -240
        ;    var_F8: int64_t, -248
        ;    var_FC: int32_t, -252
        ;    var_FD: int8_t, -253
        ;    var_108: int64_t, -264
        ;    var_110: int64_t, -272
        ;    var_114: int32_t, -276


                     canonicalize_filename_mode:
000000000000c540         push       r15                                         ; Begin of unwind block (FDE at 0x1c754), CODE XREF=gobble_file.constprop.52+1394, print_dir+1562
000000000000c542         push       r14
000000000000c544         push       r13
000000000000c546         push       r12
000000000000c548         push       rbp
000000000000c549         push       rbx
000000000000c54a         sub        rsp, 0xe8
000000000000c551         mov        rax, qword [fs:0x28]
000000000000c55a         mov        qword [rsp+0x118+var_40], rax
000000000000c562         xor        eax, eax
000000000000c564         mov        eax, esi
000000000000c566         and        eax, 0x4
000000000000c569         setne      byte [rsp+0x118+var_FD]
000000000000c56e         and        esi, 0x3
000000000000c571         mov        dword [rsp+0x118+var_FC], eax
000000000000c575         lea        eax, dword [rsi-1]
000000000000c578         mov        dword [rsp+0x118+var_114], esi
000000000000c57c         test       esi, eax
000000000000c57e         jne        loc_cad0

000000000000c584         test       rdi, rdi
000000000000c587         mov        r14, rdi
000000000000c58a         je         loc_cad0

000000000000c590         movzx      eax, byte [rdi]
000000000000c593         test       al, al
000000000000c595         je         loc_cb10

000000000000c59b         cmp        al, 0x2f
000000000000c59d         je         loc_ca60

000000000000c5a3         call       xgetcwd                                     ; xgetcwd
000000000000c5a8         test       rax, rax
000000000000c5ab         mov        rbp, rax
000000000000c5ae         je         loc_c760

000000000000c5b4         mov        rdi, rax                                    ; argument "__s" for method j_strlen
000000000000c5b7         call       j_strlen                                    ; strlen
000000000000c5bc         cmp        rax, 0xfff
000000000000c5c2         mov        r15, rax
000000000000c5c5         jbe        loc_ca80

000000000000c5cb         add        r15, rbp
000000000000c5ce         mov        rbx, r15

                     loc_c5d1:
000000000000c5d1         lea        rax, qword [rsp+0x118+var_D8]               ; CODE XREF=sub_ca5a+33, sub_ca5a+64
000000000000c5d6         mov        qword [rsp+0x118+var_F8], r14
000000000000c5db         mov        qword [rsp+0x118+var_108], 0x0
000000000000c5e4         mov        qword [rsp+0x118+var_E8], 0x0
000000000000c5ed         mov        qword [rsp+0x118+var_F0], 0x0
000000000000c5f6         mov        qword [rsp+0x118+var_110], rax

                     loc_c5fb:
000000000000c5fb         movzx      eax, byte [r14]                             ; CODE XREF=canonicalize_filename_mode+981, canonicalize_filename_mode+1008, sub_ca5a+274
000000000000c5ff         test       al, al
000000000000c601         je         loc_c70f

000000000000c607         nop        word [rax+rax]

                     loc_c610:
000000000000c610         cmp        al, 0x2f                                    ; CODE XREF=canonicalize_filename_mode+457
000000000000c612         jne        loc_c62c

000000000000c614         nop        dword [rax]

                     loc_c618:
000000000000c618         add        r14, 0x1                                    ; CODE XREF=canonicalize_filename_mode+226
000000000000c61c         movzx      eax, byte [r14]
000000000000c620         cmp        al, 0x2f
000000000000c622         je         loc_c618

000000000000c624         test       al, al
000000000000c626         je         loc_c8f0

                     loc_c62c:
000000000000c62c         mov        r13, r14                                    ; CODE XREF=canonicalize_filename_mode+210
000000000000c62f         jmp        loc_c63d
000000000000c631         align      8

                     loc_c638:
000000000000c638         cmp        dl, 0x2f                                    ; CODE XREF=canonicalize_filename_mode+264
000000000000c63b         je         loc_c64a

                     loc_c63d:
000000000000c63d         add        r13, 0x1                                    ; CODE XREF=canonicalize_filename_mode+239
000000000000c641         movzx      edx, byte [r13]
000000000000c646         test       dl, dl
000000000000c648         jne        loc_c638

                     loc_c64a:
000000000000c64a         cmp        r13, r14                                    ; CODE XREF=canonicalize_filename_mode+251, canonicalize_filename_mode+947
000000000000c64d         je         loc_c70f

000000000000c653         mov        r12, r13
000000000000c656         sub        r12, r14
000000000000c659         cmp        r12, 0x1
000000000000c65d         je         loc_c830

000000000000c663         cmp        r12, 0x2
000000000000c667         jne        loc_c671

000000000000c669         cmp        al, 0x2e
000000000000c66b         je         loc_c900

                     loc_c671:
000000000000c671         cmp        byte [r15-1], 0x2f                          ; CODE XREF=canonicalize_filename_mode+295, canonicalize_filename_mode+754, canonicalize_filename_mode+965
000000000000c676         je         loc_c680

000000000000c678         mov        byte [r15], 0x2f
000000000000c67c         add        r15, 0x1

                     loc_c680:
000000000000c680         lea        rax, qword [r15+r12]                        ; CODE XREF=canonicalize_filename_mode+310
000000000000c684         cmp        rbx, rax
000000000000c687         ja         loc_c6ba

000000000000c689         sub        rbx, rbp
000000000000c68c         sub        r15, rbp
000000000000c68f         mov        rdi, rbp                                    ; argument #1 for method xrealloc
000000000000c692         lea        rax, qword [r12+rbx+1]
000000000000c697         add        rbx, aEmptyset                              ; "emptyset"
000000000000c69e         cmp        r12, aEmptyset                              ; "emptyset"
000000000000c6a5         cmovge     rbx, rax
000000000000c6a9         mov        rsi, rbx                                    ; argument #2 for method xrealloc
000000000000c6ac         call       xrealloc                                    ; xrealloc
000000000000c6b1         mov        rbp, rax
000000000000c6b4         add        rbx, rax
000000000000c6b7         add        r15, rax

                     loc_c6ba:
000000000000c6ba         mov        rdi, r15                                    ; argument "__dest" for method j_memcpy, CODE XREF=canonicalize_filename_mode+327
000000000000c6bd         mov        rdx, r12                                    ; argument "__n" for method j_memcpy
000000000000c6c0         mov        rsi, r14                                    ; argument "__src" for method j_memcpy
000000000000c6c3         call       j_memcpy                                    ; memcpy
000000000000c6c8         cmp        dword [rsp+0x118+var_114], 0x2
000000000000c6cd         lea        r15, qword [r15+r12]
000000000000c6d1         mov        byte [r15], 0x0
000000000000c6d5         jne        loc_c790

000000000000c6db         cmp        byte [rsp+0x118+var_FD], 0x0
000000000000c6e0         je         loc_c790

                     loc_c6e6:
000000000000c6e6         mov        dword [rsp+0x118+var_C0], 0x0               ; CODE XREF=canonicalize_filename_mode+656

                     loc_c6ee:
000000000000c6ee         cmp        byte [r13], 0x0                             ; CODE XREF=canonicalize_filename_mode+795
000000000000c6f3         je         loc_c700

000000000000c6f5         cmp        dword [rsp+0x118+var_114], 0x2
000000000000c6fa         jne        loc_cb57

                     loc_c700:
000000000000c700         mov        r14, r13                                    ; CODE XREF=canonicalize_filename_mode+435, canonicalize_filename_mode+696, canonicalize_filename_mode+760, canonicalize_filename_mode+789, canonicalize_filename_mode+861, canonicalize_filename_mode+1021, canonicalize_filename_mode+1032, canonicalize_filename_mode+1249, sub_ca5a+156
000000000000c703         movzx      eax, byte [r14]
000000000000c707         test       al, al
000000000000c709         jne        loc_c610

                     loc_c70f:
000000000000c70f         lea        rax, qword [rbp+1]                          ; CODE XREF=canonicalize_filename_mode+193, canonicalize_filename_mode+269
000000000000c713         cmp        r15, rax
000000000000c716         jbe        loc_c723

000000000000c718         cmp        byte [r15-1], 0x2f
000000000000c71d         jne        loc_c723

000000000000c71f         sub        r15, 0x1

                     loc_c723:
000000000000c723         lea        rax, qword [r15+1]                          ; CODE XREF=canonicalize_filename_mode+470, canonicalize_filename_mode+477
000000000000c727         mov        byte [r15], 0x0
000000000000c72b         cmp        rbx, rax
000000000000c72e         je         loc_c742

000000000000c730         sub        r15, rbp
000000000000c733         mov        rdi, rbp                                    ; argument #1 for method xrealloc
000000000000c736         lea        rsi, qword [r15+1]                          ; argument #2 for method xrealloc
000000000000c73a         call       xrealloc                                    ; xrealloc
000000000000c73f         mov        rbp, rax

                     loc_c742:
000000000000c742         mov        rdi, qword [rsp+0x118+var_F0]               ; CODE XREF=canonicalize_filename_mode+494
000000000000c747         call       sub_3880                                    ; sub_3880
000000000000c74c         mov        rax, qword [rsp+0x118+var_108]
000000000000c751         test       rax, rax
000000000000c754         je         loc_c760

000000000000c756         mov        rdi, rax                                    ; argument #1 for method hash_free
000000000000c759         call       hash_free                                   ; hash_free
000000000000c75e         nop

                     loc_c760:
000000000000c760         mov        rcx, qword [rsp+0x118+var_40]               ; CODE XREF=canonicalize_filename_mode+110, canonicalize_filename_mode+532, canonicalize_filename_mode+930, sub_ca5a+131, sub_ca5a+195
000000000000c768         xor        rcx, qword [fs:0x28]
000000000000c771         mov        rax, rbp
000000000000c774         jne        loc_cb71

000000000000c77a         add        rsp, 0xe8
000000000000c781         pop        rbx
000000000000c782         pop        rbp
000000000000c783         pop        r12
000000000000c785         pop        r13
000000000000c787         pop        r14
000000000000c789         pop        r15
000000000000c78b         ret
                        ; endp
000000000000c78c         align      16

                     loc_c790:
000000000000c790         mov        eax, dword [rsp+0x118+var_FC]               ; CODE XREF=canonicalize_filename_mode+405, canonicalize_filename_mode+416
000000000000c794         mov        rdx, qword [rsp+0x118+var_110]
000000000000c799         mov        rsi, rbp
000000000000c79c         mov        edi, 0x1
000000000000c7a1         test       eax, eax
000000000000c7a3         je         loc_c860

000000000000c7a9         call       j___xstat                                   ; __xstat
000000000000c7ae         test       eax, eax
000000000000c7b0         setne      al

                     loc_c7b3:
000000000000c7b3         test       al, al                                      ; CODE XREF=canonicalize_filename_mode+810
000000000000c7b5         je         loc_c840

000000000000c7bb         call       j___errno_location                          ; __errno_location
000000000000c7c0         mov        r14, rax
000000000000c7c3         mov        edx, dword [rax]
000000000000c7c5         mov        eax, dword [rsp+0x118+var_114]
000000000000c7c9         test       eax, eax
000000000000c7cb         je         loc_c7fe

000000000000c7cd         cmp        eax, 0x1
000000000000c7d0         jne        loc_c6e6

000000000000c7d6         lea        rsi, qword [aDired+8]                       ; argument "__accept" for method j_strspn, 0x17bcd
000000000000c7dd         mov        rdi, r13                                    ; argument "__s" for method j_strspn
000000000000c7e0         mov        dword [rsp+0x118+var_E0], edx
000000000000c7e4         call       j_strspn                                    ; strspn
000000000000c7e9         cmp        byte [r13+rax], 0x0
000000000000c7ef         mov        edx, dword [rsp+0x118+var_E0]
000000000000c7f3         jne        loc_c7fe

000000000000c7f5         cmp        edx, 0x2
000000000000c7f8         je         loc_c700

                     loc_c7fe:
000000000000c7fe         mov        r12, r14                                    ; CODE XREF=canonicalize_filename_mode+651, canonicalize_filename_mode+691

                     loc_c801:
000000000000c801         mov        rdi, qword [rsp+0x118+var_F0]               ; CODE XREF=sub_ca5a+266
000000000000c806         mov        dword [rsp+0x118+var_114], edx
000000000000c80a         call       sub_3880                                    ; sub_3880
000000000000c80f         mov        rdi, rbp
000000000000c812         call       sub_3880                                    ; sub_3880
000000000000c817         cmp        qword [rsp+0x118+var_108], 0x0
000000000000c81d         mov        edx, dword [rsp+0x118+var_114]
000000000000c821         je         loc_c8dc

000000000000c827         jmp        loc_c8ca
000000000000c82c         align      16

                     loc_c830:
000000000000c830         cmp        al, 0x2e                                    ; CODE XREF=canonicalize_filename_mode+285
000000000000c832         jne        loc_c671

000000000000c838         jmp        loc_c700
000000000000c83d         align      64

                     loc_c840:
000000000000c840         mov        eax, dword [rsp+0x118+var_C0]               ; CODE XREF=canonicalize_filename_mode+629
000000000000c844         and        eax, 0xf000
000000000000c849         cmp        eax, 0xa000
000000000000c84e         je         loc_c870

000000000000c850         cmp        eax, 0x4000
000000000000c855         je         loc_c700

000000000000c85b         jmp        loc_c6ee

                     loc_c860:
000000000000c860         call       j___lxstat                                  ; __lxstat, CODE XREF=canonicalize_filename_mode+611
000000000000c865         test       eax, eax
000000000000c867         setne      al
000000000000c86a         jmp        loc_c7b3
000000000000c86f         align      16

                     loc_c870:
000000000000c870         cmp        qword [rsp+0x118+var_108], 0x0              ; CODE XREF=canonicalize_filename_mode+782
000000000000c876         je         loc_ca26

                     loc_c87c:
000000000000c87c         mov        rdx, qword [rsp+0x118+var_110]              ; argument #3 for method seen_file, CODE XREF=canonicalize_filename_mode+1295
000000000000c881         mov        rsi, qword [rsp+0x118+var_F8]               ; argument #2 for method seen_file
000000000000c886         mov        rdi, qword [rsp+0x118+var_108]              ; argument #1 for method seen_file
000000000000c88b         call       seen_file                                   ; seen_file
000000000000c890         test       al, al
000000000000c892         je         loc_c950

000000000000c898         cmp        dword [rsp+0x118+var_114], 0x2
000000000000c89d         je         loc_c700

000000000000c8a3         call       j___errno_location                          ; __errno_location
000000000000c8a8         mov        edx, 0x28
000000000000c8ad         mov        r12, rax

                     loc_c8b0:
000000000000c8b0         mov        rdi, qword [rsp+0x118+var_F0]               ; CODE XREF=sub_ca5a+165
000000000000c8b5         mov        dword [rsp+0x118+var_114], edx
000000000000c8b9         call       sub_3880                                    ; sub_3880
000000000000c8be         mov        rdi, rbp
000000000000c8c1         call       sub_3880                                    ; sub_3880
000000000000c8c6         mov        edx, dword [rsp+0x118+var_114]

                     loc_c8ca:
000000000000c8ca         mov        rdi, qword [rsp+0x118+var_108]              ; argument #1 for method hash_free, CODE XREF=canonicalize_filename_mode+743
000000000000c8cf         mov        dword [rsp+0x118+var_114], edx
000000000000c8d3         call       hash_free                                   ; hash_free
000000000000c8d8         mov        edx, dword [rsp+0x118+var_114]

                     loc_c8dc:
000000000000c8dc         mov        dword [r12], edx                            ; CODE XREF=canonicalize_filename_mode+737
000000000000c8e0         xor        ebp, ebp
000000000000c8e2         jmp        loc_c760
000000000000c8e7         align      16

                     loc_c8f0:
000000000000c8f0         mov        r13, r14                                    ; CODE XREF=canonicalize_filename_mode+230
000000000000c8f3         jmp        loc_c64a
000000000000c8f8         align      256

                     loc_c900:
000000000000c900         cmp        byte [r14+1], 0x2e                          ; CODE XREF=canonicalize_filename_mode+299
000000000000c905         jne        loc_c671

000000000000c90b         lea        rax, qword [rbp+1]
000000000000c90f         mov        r14, r13
000000000000c912         cmp        r15, rax
000000000000c915         jbe        loc_c5fb

000000000000c91b         lea        rax, qword [r15-1]
000000000000c91f         cmp        rbp, rax
000000000000c922         jae        loc_cb69

000000000000c928         cmp        byte [r15-2], 0x2f
000000000000c92d         mov        r15, rax
000000000000c930         je         loc_c5fb

                     loc_c936:
000000000000c936         sub        r15, 0x1                                    ; CODE XREF=canonicalize_filename_mode+1038
000000000000c93a         cmp        rbp, r15
000000000000c93d         je         loc_c700

000000000000c943         cmp        byte [r15-1], 0x2f
000000000000c948         je         loc_c700

000000000000c94e         jmp        loc_c936

                     loc_c950:
000000000000c950         mov        rdx, qword [rsp+0x118+var_110]              ; argument #3 for method record_file, CODE XREF=canonicalize_filename_mode+850
000000000000c955         mov        rsi, qword [rsp+0x118+var_F8]               ; argument #2 for method record_file
000000000000c95a         mov        rdi, qword [rsp+0x118+var_108]              ; argument #1 for method record_file
000000000000c95f         call       record_file                                 ; record_file
000000000000c964         mov        rsi, qword [rsp+0x118+var_A8]               ; argument #2 for method areadlink_with_size
000000000000c969         mov        rdi, rbp                                    ; argument #1 for method areadlink_with_size
000000000000c96c         call       areadlink_with_size                         ; areadlink_with_size
000000000000c971         test       rax, rax
000000000000c974         mov        r14, rax
000000000000c977         je         loc_cae2

000000000000c97d         mov        rdi, rax                                    ; argument "__s" for method j_strlen
000000000000c980         call       j_strlen                                    ; strlen
000000000000c985         mov        rdi, r13                                    ; argument "__s" for method j_strlen
000000000000c988         mov        r12, rax
000000000000c98b         mov        qword [rsp+0x118+var_F8], rax
000000000000c990         call       j_strlen                                    ; strlen
000000000000c995         cmp        qword [rsp+0x118+var_E8], 0x0
000000000000c99b         mov        rdx, rax
000000000000c99e         lea        rcx, qword [r12+rdx+1]
000000000000c9a3         je         loc_ca9f

000000000000c9a9         cmp        qword [rsp+0x118+var_E8], rcx
000000000000c9ae         jae        loc_c9d1

000000000000c9b0         mov        rdi, qword [rsp+0x118+var_F0]               ; argument #1 for method xrealloc
000000000000c9b5         mov        rsi, rcx                                    ; argument #2 for method xrealloc
000000000000c9b8         mov        qword [rsp+0x118+var_E0], rdx
000000000000c9bd         mov        qword [rsp+0x118+var_E8], rcx
000000000000c9c2         call       xrealloc                                    ; xrealloc
000000000000c9c7         mov        rdx, qword [rsp+0x118+var_E0]
000000000000c9cc         mov        qword [rsp+0x118+var_F0], rax

                     loc_c9d1:
000000000000c9d1         mov        r12, qword [rsp+0x118+var_F0]               ; CODE XREF=canonicalize_filename_mode+1134, sub_ca5a+113
000000000000c9d6         mov        rdi, qword [rsp+0x118+var_F8]
000000000000c9db         add        rdx, 0x1                                    ; argument "__n" for method j_memmove
000000000000c9df         mov        rsi, r13                                    ; argument "__src" for method j_memmove
000000000000c9e2         add        rdi, r12                                    ; argument "__dest" for method j_memmove
000000000000c9e5         mov        r13, r12
000000000000c9e8         call       j_memmove                                   ; memmove
000000000000c9ed         mov        rdx, qword [rsp+0x118+var_F8]               ; argument "__n" for method j_memcpy
000000000000c9f2         mov        rsi, r14                                    ; argument "__src" for method j_memcpy
000000000000c9f5         mov        rdi, r12                                    ; argument "__dest" for method j_memcpy
000000000000c9f8         call       j_memcpy                                    ; memcpy
000000000000c9fd         cmp        byte [r14], 0x2f
000000000000ca01         mov        qword [rsp+0x118+var_F8], r12
000000000000ca06         lea        rax, qword [rbp+1]
000000000000ca0a         je         loc_cb04

000000000000ca10         cmp        r15, rax
000000000000ca13         ja         loc_cb22

                     loc_ca19:
000000000000ca19         mov        rdi, r14                                    ; CODE XREF=sub_ca5a+177, sub_ca5a+219, sub_ca5a+234, sub_ca5a+245
000000000000ca1c         call       sub_3880                                    ; sub_3880
000000000000ca21         jmp        loc_c700

                     loc_ca26:
000000000000ca26         lea        r8, qword [triple_free]                     ; argument #5 for method hash_initialize, triple_free, CODE XREF=canonicalize_filename_mode+822
000000000000ca2d         lea        rcx, qword [triple_compare_ino_str]         ; argument #4 for method hash_initialize, triple_compare_ino_str
000000000000ca34         xor        esi, esi                                    ; argument #2 for method hash_initialize
000000000000ca36         lea        rdx, qword [triple_hash]                    ; argument #3 for method hash_initialize, triple_hash
000000000000ca3d         mov        edi, 0x7                                    ; argument #1 for method hash_initialize
000000000000ca42         call       hash_initialize                             ; hash_initialize
000000000000ca47         test       rax, rax
000000000000ca4a         mov        qword [rsp+0x118+var_108], rax
000000000000ca4f         jne        loc_c87c

000000000000ca55         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_ca5a:
000000000000ca5a         nop        word [rax+rax]
                        ; endp

                     loc_ca60:
000000000000ca60         mov        edi, aEmptyset                              ; argument #1 for method xmalloc, "emptyset", CODE XREF=canonicalize_filename_mode+93
000000000000ca65         call       xmalloc                                     ; xmalloc
000000000000ca6a         mov        rbp, rax
000000000000ca6d         lea        rbx, qword [rax+aEmptyset]
000000000000ca74         lea        r15, qword [rax+1]
000000000000ca78         mov        byte [rax], 0x2f
000000000000ca7b         jmp        loc_c5d1

                     loc_ca80:
000000000000ca80         mov        rdi, rbp                                    ; argument #1 for method xrealloc, CODE XREF=canonicalize_filename_mode+133
000000000000ca83         mov        esi, aEmptyset                              ; argument #2 for method xrealloc, "emptyset"
000000000000ca88         call       xrealloc                                    ; xrealloc
000000000000ca8d         mov        rbp, rax
000000000000ca90         add        r15, rax
000000000000ca93         lea        rbx, qword [rax+aEmptyset]
000000000000ca9a         jmp        loc_c5d1

                     loc_ca9f:
000000000000ca9f         cmp        rcx, aEmptyset                              ; "emptyset", CODE XREF=canonicalize_filename_mode+1123
000000000000caa6         mov        eax, aEmptyset                              ; "emptyset"
000000000000caab         mov        qword [rsp+0x118+var_E0], rdx
000000000000cab0         cmovae     rax, rcx
000000000000cab4         mov        rdi, rax                                    ; argument #1 for method xmalloc
000000000000cab7         mov        qword [rsp+0x118+var_E8], rax
000000000000cabc         call       xmalloc                                     ; xmalloc
000000000000cac1         mov        rdx, qword [rsp+0x118+var_E0]
000000000000cac6         mov        qword [rsp+0x118+var_F0], rax
000000000000cacb         jmp        loc_c9d1

                     loc_cad0:
000000000000cad0         call       j___errno_location                          ; __errno_location, CODE XREF=canonicalize_filename_mode+62, canonicalize_filename_mode+74
000000000000cad5         xor        ebp, ebp
000000000000cad7         mov        dword [rax], 0x16
000000000000cadd         jmp        loc_c760

                     loc_cae2:
000000000000cae2         call       j___errno_location                          ; __errno_location, CODE XREF=canonicalize_filename_mode+1079
000000000000cae7         cmp        dword [rsp+0x118+var_114], 0x2
000000000000caec         mov        r14, rax
000000000000caef         mov        edx, dword [rax]
000000000000caf1         jne        loc_cafc

000000000000caf3         cmp        edx, 0xc
000000000000caf6         jne        loc_c700

                     loc_cafc:
000000000000cafc         mov        r12, r14                                    ; CODE XREF=sub_ca5a+151
000000000000caff         jmp        loc_c8b0

                     loc_cb04:
000000000000cb04         mov        byte [rbp], 0x2f                            ; CODE XREF=canonicalize_filename_mode+1226
000000000000cb08         mov        r15, rax
000000000000cb0b         jmp        loc_ca19

                     loc_cb10:
000000000000cb10         call       j___errno_location                          ; __errno_location, CODE XREF=canonicalize_filename_mode+85
000000000000cb15         xor        ebp, ebp
000000000000cb17         mov        dword [rax], 0x2
000000000000cb1d         jmp        loc_c760

                     loc_cb22:
000000000000cb22         lea        rax, qword [r15-1]                          ; CODE XREF=canonicalize_filename_mode+1235
000000000000cb26         cmp        rbp, rax
000000000000cb29         jae        loc_cb32

000000000000cb2b         cmp        byte [r15-2], 0x2f
000000000000cb30         jne        loc_cb3d

                     loc_cb32:
000000000000cb32         mov        r15, rax                                    ; CODE XREF=sub_ca5a+207
000000000000cb35         jmp        loc_ca19

                     loc_cb3a:
000000000000cb3a         mov        rax, r15                                    ; CODE XREF=sub_ca5a+251

                     loc_cb3d:
000000000000cb3d         lea        r15, qword [rax-1]                          ; CODE XREF=sub_ca5a+214
000000000000cb41         cmp        rbp, r15
000000000000cb44         je         loc_ca19

000000000000cb4a         cmp        byte [r15-1], 0x2f
000000000000cb4f         je         loc_ca19

000000000000cb55         jmp        loc_cb3a

                     loc_cb57:
000000000000cb57         call       j___errno_location                          ; __errno_location, CODE XREF=canonicalize_filename_mode+442
000000000000cb5c         mov        edx, 0x14
000000000000cb61         mov        r12, rax
000000000000cb64         jmp        loc_c801

                     loc_cb69:
000000000000cb69         mov        r15, rax                                    ; CODE XREF=canonicalize_filename_mode+994
000000000000cb6c         jmp        loc_c5fb

                     loc_cb71:
000000000000cb71         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=canonicalize_filename_mode+564
                        ; endp
000000000000cb76         align      128                                         ; End of unwind block (FDE at 0x1c754)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
000000000000cb80         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0x1c7a4), file_name
000000000000cb87         ret
                        ; endp
000000000000cb88         align      16                                          ; End of unwind block (FDE at 0x1c7a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
000000000000cb90         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x1c7b8), ignore_EPIPE
000000000000cb97         ret
                        ; endp
000000000000cb98         align      32                                          ; End of unwind block (FDE at 0x1c7b8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
000000000000cba0         push       rbp                                         ; Begin of unwind block (FDE at 0x1c7cc), DATA XREF=main+91
000000000000cba1         push       rbx
000000000000cba2         sub        rsp, 0x8
000000000000cba6         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000cbad         call       close_stream                                ; close_stream
000000000000cbb2         test       eax, eax
000000000000cbb4         je         loc_cbcc

000000000000cbb6         call       j___errno_location                          ; __errno_location
000000000000cbbb         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
000000000000cbc2         mov        rbx, rax
000000000000cbc5         je         loc_cbe3

000000000000cbc7         cmp        dword [rax], 0x20
000000000000cbca         jne        loc_cbe3

                     loc_cbcc:
000000000000cbcc         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
000000000000cbd3         call       close_stream                                ; close_stream
000000000000cbd8         test       eax, eax
000000000000cbda         jne        loc_cc22

000000000000cbdc         add        rsp, 0x8
000000000000cbe0         pop        rbx
000000000000cbe1         pop        rbp
000000000000cbe2         ret
                        ; endp

                     loc_cbe3:
000000000000cbe3         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
000000000000cbea         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000cbec         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000cbf1         call       j_dcgettext                                 ; dcgettext
000000000000cbf6         mov        rdi, qword [file_name]                      ; file_name
000000000000cbfd         mov        rbp, rax
000000000000cc00         test       rdi, rdi
000000000000cc03         je         loc_cc2d

000000000000cc05         call       quotearg_colon                              ; quotearg_colon
000000000000cc0a         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
000000000000cc0c         lea        rdx, qword [aSS_17a58]                      ; argument "__format" for method j_error, "%s: %s"
000000000000cc13         mov        rcx, rax
000000000000cc16         mov        r8, rbp
000000000000cc19         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000cc1b         xor        eax, eax
000000000000cc1d         call       j_error                                     ; error

                     loc_cc22:
000000000000cc22         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
000000000000cc28         call       j__exit                                     ; _exit
                        ; endp

                     loc_cc2d:
000000000000cc2d         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
000000000000cc2f         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0x19f8c
000000000000cc36         mov        rcx, rax
000000000000cc39         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000cc3b         xor        eax, eax
000000000000cc3d         call       j_error                                     ; error
000000000000cc42         jmp        loc_cc22
000000000000cc44         align      16                                          ; End of unwind block (FDE at 0x1c7cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dir_len:
000000000000cc50         push       rbp                                         ; Begin of unwind block (FDE at 0x1c7fc), CODE XREF=gobble_file.constprop.52+2438, mdir_name+9
000000000000cc51         push       rbx
000000000000cc52         xor        ebp, ebp
000000000000cc54         mov        rbx, rdi
000000000000cc57         sub        rsp, 0x8
000000000000cc5b         cmp        byte [rdi], 0x2f
000000000000cc5e         sete       bpl
000000000000cc62         call       last_component                              ; last_component
000000000000cc67         mov        rcx, rax
000000000000cc6a         sub        rcx, rbx
000000000000cc6d         cmp        rcx, rbp
000000000000cc70         jbe        loc_cca0

000000000000cc72         cmp        byte [rax-1], 0x2f
000000000000cc76         lea        rdx, qword [rcx-1]
000000000000cc7a         je         loc_cc8e

000000000000cc7c         jmp        loc_cca0
000000000000cc7e         align      128

                     loc_cc80:
000000000000cc80         cmp        byte [rbx+rdx-1], 0x2f                      ; CODE XREF=dir_len+65
000000000000cc85         lea        rax, qword [rdx-1]
000000000000cc89         jne        loc_cc93

000000000000cc8b         mov        rdx, rax

                     loc_cc8e:
000000000000cc8e         cmp        rbp, rdx                                    ; CODE XREF=dir_len+42
000000000000cc91         jne        loc_cc80

                     loc_cc93:
000000000000cc93         add        rsp, 0x8                                    ; CODE XREF=dir_len+57
000000000000cc97         mov        rax, rdx
000000000000cc9a         pop        rbx
000000000000cc9b         pop        rbp
000000000000cc9c         ret
                        ; endp
000000000000cc9d         align      32

                     loc_cca0:
000000000000cca0         add        rsp, 0x8                                    ; CODE XREF=dir_len+32, dir_len+44
000000000000cca4         mov        rdx, rcx
000000000000cca7         mov        rax, rdx
000000000000ccaa         pop        rbx
000000000000ccab         pop        rbp
000000000000ccac         ret
                        ; endp
000000000000ccad         align      16                                          ; End of unwind block (FDE at 0x1c7fc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     mdir_name:
000000000000ccb0         push       rbp                                         ; Begin of unwind block (FDE at 0x1c830), CODE XREF=dir_name+4
000000000000ccb1         push       rbx
000000000000ccb2         mov        rbp, rdi
000000000000ccb5         sub        rsp, 0x8
000000000000ccb9         call       dir_len                                     ; dir_len
000000000000ccbe         test       rax, rax
000000000000ccc1         mov        rbx, rax
000000000000ccc4         sete       al
000000000000ccc7         movzx      eax, al
000000000000ccca         lea        rdi, qword [rbx+rax+1]
000000000000cccf         call       sub_3888                                    ; sub_3888
000000000000ccd4         test       rax, rax
000000000000ccd7         mov        rcx, rax
000000000000ccda         je         loc_ccf6

000000000000ccdc         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
000000000000ccdf         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
000000000000cce2         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
000000000000cce5         call       j_memcpy                                    ; memcpy
000000000000ccea         test       rbx, rbx
000000000000cced         mov        rcx, rax
000000000000ccf0         je         loc_cd00

                     loc_ccf2:
000000000000ccf2         mov        byte [rcx+rbx], 0x0                         ; CODE XREF=mdir_name+88

                     loc_ccf6:
000000000000ccf6         add        rsp, 0x8                                    ; CODE XREF=mdir_name+42
000000000000ccfa         mov        rax, rcx
000000000000ccfd         pop        rbx
000000000000ccfe         pop        rbp
000000000000ccff         ret
                        ; endp

                     loc_cd00:
000000000000cd00         mov        byte [rax], 0x2e                            ; CODE XREF=mdir_name+64
000000000000cd03         mov        ebx, 0x1
000000000000cd08         jmp        loc_ccf2
000000000000cd0a         align      16                                          ; End of unwind block (FDE at 0x1c830)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     last_component:
000000000000cd10         movzx      edx, byte [rdi]                             ; Begin of unwind block (FDE at 0x1c85c), CODE XREF=extract_dirs_from_files+220, dir_len+18, mfile_name_concat+23, same_nameat+30, same_nameat+41
000000000000cd13         mov        rax, rdi
000000000000cd16         cmp        dl, 0x2f
000000000000cd19         jne        loc_cd2c

000000000000cd1b         nop        dword [rax+rax]

                     loc_cd20:
000000000000cd20         add        rax, 0x1                                    ; CODE XREF=last_component+26
000000000000cd24         movzx      edx, byte [rax]
000000000000cd27         cmp        dl, 0x2f
000000000000cd2a         je         loc_cd20

                     loc_cd2c:
000000000000cd2c         test       dl, dl                                      ; CODE XREF=last_component+9
000000000000cd2e         je         loc_cd6a

000000000000cd30         mov        rcx, rax
000000000000cd33         xor        esi, esi
000000000000cd35         jmp        loc_cd55
000000000000cd37         align      64

                     loc_cd40:
000000000000cd40         test       sil, sil                                    ; CODE XREF=last_component+72
000000000000cd43         je         loc_cd4a

000000000000cd45         mov        rax, rcx
000000000000cd48         xor        esi, esi

                     loc_cd4a:
000000000000cd4a         add        rcx, 0x1                                    ; CODE XREF=last_component+51
000000000000cd4e         movzx      edx, byte [rcx]
000000000000cd51         test       dl, dl
000000000000cd53         je         loc_cd6a

                     loc_cd55:
000000000000cd55         cmp        dl, 0x2f                                    ; CODE XREF=last_component+37, last_component+88
000000000000cd58         jne        loc_cd40

000000000000cd5a         add        rcx, 0x1
000000000000cd5e         movzx      edx, byte [rcx]
000000000000cd61         mov        esi, 0x1
000000000000cd66         test       dl, dl
000000000000cd68         jne        loc_cd55

                     loc_cd6a:
000000000000cd6a         ret                                                    ; CODE XREF=last_component+30, last_component+67
                        ; endp
000000000000cd6c         align      16                                          ; End of unwind block (FDE at 0x1c85c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base_len:
000000000000cd70         push       rbx                                         ; Begin of unwind block (FDE at 0x1c870), CODE XREF=mfile_name_concat+34, same_nameat+52, same_nameat+63
000000000000cd71         mov        rbx, rdi
000000000000cd74         call       j_strlen                                    ; strlen
000000000000cd79         cmp        rax, 0x1
000000000000cd7d         jbe        loc_cd8a

000000000000cd7f         cmp        byte [rbx+rax-1], 0x2f
000000000000cd84         lea        rdx, qword [rax-1]
000000000000cd88         je         loc_cd98

                     loc_cd8a:
000000000000cd8a         pop        rbx                                         ; CODE XREF=base_len+13
000000000000cd8b         ret
                        ; endp
000000000000cd8c         align      16

                     loc_cd90:
000000000000cd90         mov        rdx, rax                                    ; CODE XREF=base_len+55
000000000000cd93         nop        dword [rax+rax]

                     loc_cd98:
000000000000cd98         cmp        rdx, 0x1                                    ; CODE XREF=base_len+24
000000000000cd9c         je         loc_cdb0

000000000000cd9e         cmp        byte [rbx+rdx-1], 0x2f
000000000000cda3         lea        rax, qword [rdx-1]
000000000000cda7         je         loc_cd90

000000000000cda9         mov        rax, rdx
000000000000cdac         pop        rbx
000000000000cdad         ret
                        ; endp
000000000000cdae         align      16

                     loc_cdb0:
000000000000cdb0         mov        eax, 0x1                                    ; CODE XREF=base_len+44
000000000000cdb5         pop        rbx
000000000000cdb6         ret
                        ; endp
000000000000cdb7         align      64                                          ; End of unwind block (FDE at 0x1c870)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     file_has_acl:
000000000000cdc0         xor        eax, eax                                    ; Begin of unwind block (FDE at 0x1c89c), CODE XREF=gobble_file.constprop.52+2257
000000000000cdc2         ret
                        ; endp
000000000000cdc3         align      16                                          ; End of unwind block (FDE at 0x1c89c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_38: int64_t, -56
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     record_file:
000000000000cdd0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x1c8b4), CODE XREF=canonicalize_filename_mode+1055
000000000000cdd3         je         loc_ce50

000000000000cdd5         push       r13
000000000000cdd7         push       r12
000000000000cdd9         mov        r13, rdi
000000000000cddc         push       rbp
000000000000cddd         push       rbx
000000000000cdde         mov        r12, rsi
000000000000cde1         mov        edi, 0x18                                   ; argument #1 for method xmalloc
000000000000cde6         mov        rbp, rdx
000000000000cde9         sub        rsp, 0x8
000000000000cded         call       xmalloc                                     ; xmalloc
000000000000cdf2         mov        rdi, r12
000000000000cdf5         mov        rbx, rax
000000000000cdf8         call       xstrdup                                     ; xstrdup
000000000000cdfd         mov        qword [rbx], rax
000000000000ce00         mov        rax, qword [rbp+8]
000000000000ce04         mov        rsi, rbx                                    ; argument #2 for method hash_insert
000000000000ce07         mov        rdi, r13                                    ; argument #1 for method hash_insert
000000000000ce0a         mov        qword [rbx+8], rax
000000000000ce0e         mov        rax, qword [rbp]
000000000000ce12         mov        qword [rbx+0x10], rax
000000000000ce16         call       hash_insert                                 ; hash_insert
000000000000ce1b         test       rax, rax
000000000000ce1e         je         loc_ce52

000000000000ce20         cmp        rbx, rax
000000000000ce23         je         loc_ce40

000000000000ce25         add        rsp, 0x8
000000000000ce29         mov        rdi, rbx
000000000000ce2c         pop        rbx
000000000000ce2d         pop        rbp
000000000000ce2e         pop        r12
000000000000ce30         pop        r13
000000000000ce32         jmp        triple_free                                 ; triple_free
                        ; endp
000000000000ce37         align      64

                     loc_ce40:
000000000000ce40         add        rsp, 0x8                                    ; CODE XREF=record_file+83
000000000000ce44         pop        rbx
000000000000ce45         pop        rbp
000000000000ce46         pop        r12
000000000000ce48         pop        r13
000000000000ce4a         ret
                        ; endp
000000000000ce4b         align      16

                     loc_ce50:
000000000000ce50         ret                                                    ; CODE XREF=record_file+3
                        ; endp

                     loc_ce52:
000000000000ce52         call       xalloc_die                                  ; xalloc_die, CODE XREF=record_file+78
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40


                     sub_ce57:
000000000000ce57         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x1c8b4)
                     seen_file:
000000000000ce60         sub        rsp, 0x28                                   ; Begin of unwind block (FDE at 0x1c914), CODE XREF=canonicalize_filename_mode+843
000000000000ce64         mov        rax, qword [fs:0x28]
000000000000ce6d         mov        qword [rsp+0x28+var_10], rax
000000000000ce72         xor        eax, eax
000000000000ce74         test       rdi, rdi
000000000000ce77         je         loc_ce9c

000000000000ce79         mov        rax, qword [rdx+8]
000000000000ce7d         mov        qword [rsp+0x28+var_28], rsi
000000000000ce81         mov        rsi, rsp                                    ; argument #2 for method hash_lookup
000000000000ce84         mov        qword [rsp+0x28+var_20], rax
000000000000ce89         mov        rax, qword [rdx]
000000000000ce8c         mov        qword [rsp+0x28+var_18], rax
000000000000ce91         call       hash_lookup                                 ; hash_lookup
000000000000ce96         test       rax, rax
000000000000ce99         setne      al

                     loc_ce9c:
000000000000ce9c         mov        rcx, qword [rsp+0x28+var_10]                ; CODE XREF=seen_file+23
000000000000cea1         xor        rcx, qword [fs:0x28]
000000000000ceaa         jne        loc_ceb1

000000000000ceac         add        rsp, 0x28
000000000000ceb0         ret
                        ; endp

                     loc_ceb1:
000000000000ceb1         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=seen_file+74
                        ; endp
000000000000ceb6         align      64                                          ; End of unwind block (FDE at 0x1c914)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     strmode:
000000000000cec0         mov        edx, edi                                    ; Begin of unwind block (FDE at 0x1c934), CODE XREF=filemodestring+3
000000000000cec2         mov        eax, 0x2d
000000000000cec7         and        edx, 0xf000
000000000000cecd         cmp        edx, 0x8000
000000000000ced3         je         loc_cf30

000000000000ced5         cmp        edx, 0x4000
000000000000cedb         mov        eax, 0x64
000000000000cee0         je         loc_cf30

000000000000cee2         cmp        edx, 0x6000
000000000000cee8         mov        eax, 0x62
000000000000ceed         je         loc_cf30

000000000000ceef         cmp        edx, 0x2000
000000000000cef5         mov        eax, 0x63
000000000000cefa         je         loc_cf30

000000000000cefc         cmp        edx, 0xa000
000000000000cf02         mov        eax, 0x6c
000000000000cf07         je         loc_cf30

000000000000cf09         cmp        edx, aEmptyset                              ; "emptyset"
000000000000cf0f         mov        eax, 0x70
000000000000cf14         je         loc_cf30

000000000000cf16         cmp        edx, 0xc000
000000000000cf1c         mov        eax, 0x73
000000000000cf21         mov        edx, 0x3f
000000000000cf26         cmovne     eax, edx
000000000000cf29         nop        dword [rax]

                     loc_cf30:
000000000000cf30         mov        byte [rsi], al                              ; CODE XREF=strmode+19, strmode+32, strmode+45, strmode+58, strmode+71, strmode+84
000000000000cf32         mov        eax, edi
000000000000cf34         and        eax, 0x100
000000000000cf39         cmp        eax, 0x1
000000000000cf3c         sbb        eax, eax
000000000000cf3e         and        eax, 0xffffffbb
000000000000cf41         add        eax, 0x72
000000000000cf44         mov        byte [rsi+1], al
000000000000cf47         mov        eax, edi
000000000000cf49         and        eax, 0x80
000000000000cf4e         cmp        eax, 0x1
000000000000cf51         sbb        eax, eax
000000000000cf53         and        eax, 0xffffffb6
000000000000cf56         add        eax, 0x77
000000000000cf59         mov        byte [rsi+2], al
000000000000cf5c         mov        eax, edi
000000000000cf5e         and        eax, 0x40
000000000000cf61         cmp        eax, 0x1
000000000000cf64         sbb        eax, eax
000000000000cf66         test       edi, 0x800
000000000000cf6c         je         loc_d010

000000000000cf72         and        eax, 0xffffffe0
000000000000cf75         add        eax, 0x73

                     loc_cf78:
000000000000cf78         mov        byte [rsi+3], al                            ; CODE XREF=strmode+342
000000000000cf7b         mov        eax, edi
000000000000cf7d         and        eax, 0x20
000000000000cf80         cmp        eax, 0x1
000000000000cf83         sbb        eax, eax
000000000000cf85         and        eax, 0xffffffbb
000000000000cf88         add        eax, 0x72
000000000000cf8b         mov        byte [rsi+4], al
000000000000cf8e         mov        eax, edi
000000000000cf90         and        eax, 0x10
000000000000cf93         cmp        eax, 0x1
000000000000cf96         sbb        eax, eax
000000000000cf98         and        eax, 0xffffffb6
000000000000cf9b         add        eax, 0x77
000000000000cf9e         mov        byte [rsi+5], al
000000000000cfa1         mov        eax, edi
000000000000cfa3         and        eax, 0x8
000000000000cfa6         cmp        eax, 0x1
000000000000cfa9         sbb        eax, eax
000000000000cfab         test       edi, 0x400
000000000000cfb1         je         loc_d038

000000000000cfb7         and        eax, 0xffffffe0
000000000000cfba         add        eax, 0x73

                     loc_cfbd:
000000000000cfbd         mov        byte [rsi+6], al                            ; CODE XREF=strmode+382
000000000000cfc0         mov        eax, edi
000000000000cfc2         and        eax, 0x4
000000000000cfc5         cmp        eax, 0x1
000000000000cfc8         sbb        eax, eax
000000000000cfca         and        eax, 0xffffffbb
000000000000cfcd         add        eax, 0x72
000000000000cfd0         mov        byte [rsi+7], al
000000000000cfd3         mov        eax, edi
000000000000cfd5         and        eax, 0x2
000000000000cfd8         cmp        eax, 0x1
000000000000cfdb         sbb        eax, eax
000000000000cfdd         and        eax, 0xffffffb6
000000000000cfe0         add        eax, 0x77
000000000000cfe3         mov        byte [rsi+8], al
000000000000cfe6         mov        eax, edi
000000000000cfe8         and        eax, 0x1
000000000000cfeb         cmp        eax, 0x1
000000000000cfee         sbb        eax, eax
000000000000cff0         and        edi, 0x200
000000000000cff6         je         loc_d020

000000000000cff8         and        eax, 0xffffffe0
000000000000cffb         add        eax, 0x74
000000000000cffe         mov        byte [rsi+9], al
000000000000d001         mov        eax, 0x20
000000000000d006         mov        word [rsi+0xa], ax
000000000000d00a         ret
                        ; endp
000000000000d00b         align      16

                     loc_d010:
000000000000d010         and        eax, 0xffffffb5                             ; CODE XREF=strmode+172
000000000000d013         add        eax, 0x78
000000000000d016         jmp        loc_cf78
000000000000d01b         align      32

                     loc_d020:
000000000000d020         and        eax, 0xffffffb5                             ; CODE XREF=strmode+310
000000000000d023         add        eax, 0x78
000000000000d026         mov        byte [rsi+9], al
000000000000d029         mov        eax, 0x20
000000000000d02e         mov        word [rsi+0xa], ax
000000000000d032         ret
                        ; endp
000000000000d033         align      8

                     loc_d038:
000000000000d038         and        eax, 0xffffffb5                             ; CODE XREF=strmode+241
000000000000d03b         add        eax, 0x78
000000000000d03e         jmp        loc_cfbd
000000000000d043         align      16                                          ; End of unwind block (FDE at 0x1c934)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     filemodestring:
000000000000d050         mov        edi, dword [rdi+0x18]                       ; Begin of unwind block (FDE at 0x1c948), argument "mode" for method strmode, CODE XREF=print_long_format+67
000000000000d053         jmp        strmode                                     ; strmode
                        ; endp
000000000000d058         align      32                                          ; End of unwind block (FDE at 0x1c948)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_41: int8_t, -65
        ;    var_50: int64_t, -80


                     file_name_concat:
000000000000d060         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x1c95c), CODE XREF=extract_dirs_from_files+244
000000000000d064         call       mfile_name_concat                           ; mfile_name_concat
000000000000d069         test       rax, rax
000000000000d06c         je         loc_d073

000000000000d06e         add        rsp, 0x8
000000000000d072         ret
                        ; endp

                     loc_d073:
000000000000d073         call       xalloc_die                                  ; xalloc_die, CODE XREF=file_name_concat+12
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_39: int8_t, -57
        ;    var_48: int64_t, -72


                     sub_d078:
000000000000d078         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x1c95c)
                     mfile_name_concat:
000000000000d080         push       r15                                         ; Begin of unwind block (FDE at 0x1c97c), CODE XREF=file_name_concat+4
000000000000d082         push       r14
000000000000d084         mov        r15, rdx
000000000000d087         push       r13
000000000000d089         push       r12
000000000000d08b         mov        r12, rdi
000000000000d08e         push       rbp
000000000000d08f         push       rbx
000000000000d090         mov        rbp, rsi
000000000000d093         sub        rsp, 0x18
000000000000d097         call       last_component                              ; last_component
000000000000d09c         mov        rbx, rax
000000000000d09f         mov        rdi, rax                                    ; argument #1 for method base_len
000000000000d0a2         call       base_len                                    ; base_len
000000000000d0a7         sub        rbx, r12
000000000000d0aa         mov        r13, rax
000000000000d0ad         mov        rdi, rbp                                    ; argument "__s" for method j_strlen
000000000000d0b0         add        rbx, rax
000000000000d0b3         call       j_strlen                                    ; strlen
000000000000d0b8         test       r13, r13
000000000000d0bb         mov        r14, rax
000000000000d0be         je         loc_d0f0

000000000000d0c0         cmp        byte [r12+rbx-1], 0x2f
000000000000d0c6         je         loc_d170

000000000000d0cc         xor        eax, eax
000000000000d0ce         cmp        byte [rbp], 0x2f
000000000000d0d2         mov        edx, 0x0
000000000000d0d7         setne      al
000000000000d0da         mov        qword [rsp+0x48+var_48], rax
000000000000d0de         mov        eax, 0x2f
000000000000d0e3         cmove      eax, edx
000000000000d0e6         mov        byte [rsp+0x48+var_39], al
000000000000d0ea         jmp        loc_d10e
000000000000d0ec         align      16

                     loc_d0f0:
000000000000d0f0         xor        eax, eax                                    ; CODE XREF=mfile_name_concat+62
000000000000d0f2         cmp        byte [rbp], 0x2f
000000000000d0f6         mov        edx, 0x0
000000000000d0fb         sete       al
000000000000d0fe         mov        qword [rsp+0x48+var_48], rax
000000000000d102         mov        eax, 0x2e
000000000000d107         cmovne     eax, edx
000000000000d10a         mov        byte [rsp+0x48+var_39], al

                     loc_d10e:
000000000000d10e         lea        rdi, qword [rbx+r14+1]                      ; CODE XREF=mfile_name_concat+106, mfile_name_concat+253
000000000000d113         add        rdi, qword [rsp+0x48+var_48]
000000000000d117         call       sub_3888                                    ; sub_3888
000000000000d11c         test       rax, rax
000000000000d11f         mov        r13, rax
000000000000d122         je         loc_d156

000000000000d124         mov        rdi, rax                                    ; argument "__dest" for method j_mempcpy
000000000000d127         mov        rdx, rbx                                    ; argument "__n" for method j_mempcpy
000000000000d12a         mov        rsi, r12                                    ; argument "__src" for method j_mempcpy
000000000000d12d         call       j_mempcpy                                   ; mempcpy
000000000000d132         movzx      ecx, byte [rsp+0x48+var_39]
000000000000d137         mov        rdi, qword [rsp+0x48+var_48]
000000000000d13b         add        rdi, rax
000000000000d13e         test       r15, r15
000000000000d141         mov        byte [rax], cl
000000000000d143         je         loc_d148

000000000000d145         mov        qword [r15], rdi

                     loc_d148:
000000000000d148         mov        rdx, r14                                    ; argument "__n" for method j_mempcpy, CODE XREF=mfile_name_concat+195
000000000000d14b         mov        rsi, rbp                                    ; argument "__src" for method j_mempcpy
000000000000d14e         call       j_mempcpy                                   ; mempcpy
000000000000d153         mov        byte [rax], 0x0

                     loc_d156:
000000000000d156         add        rsp, 0x18                                   ; CODE XREF=mfile_name_concat+162
000000000000d15a         mov        rax, r13
000000000000d15d         pop        rbx
000000000000d15e         pop        rbp
000000000000d15f         pop        r12
000000000000d161         pop        r13
000000000000d163         pop        r14
000000000000d165         pop        r15
000000000000d167         ret
                        ; endp
000000000000d168         align      16

                     loc_d170:
000000000000d170         mov        qword [rsp+0x48+var_48], 0x0                ; CODE XREF=mfile_name_concat+70
000000000000d178         mov        byte [rsp+0x48+var_39], 0x0
000000000000d17d         jmp        loc_d10e
000000000000d17f         align      128                                         ; End of unwind block (FDE at 0x1c97c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     match_suffix:
000000000000d180         mov        rsi, qword [rdi]                            ; Begin of unwind block (FDE at 0x1c9cc), CODE XREF=filevercmp+232, filevercmp+245
000000000000d183         movzx      edx, byte [rsi]
000000000000d186         test       dl, dl
000000000000d188         je         loc_d240

000000000000d18e         xor        ecx, ecx
000000000000d190         xor        eax, eax
000000000000d192         xor        r8d, r8d
000000000000d195         mov        r11d, 0x1
000000000000d19b         movabs     r10, 0x3ffffff03ffffff
000000000000d1a5         jmp        loc_d1df
000000000000d1a7         align      16

                     loc_d1b0:
000000000000d1b0         movsx      ecx, dl                                     ; CODE XREF=match_suffix+97
000000000000d1b3         sub        ecx, 0x41
000000000000d1b6         cmp        ecx, 0x39
000000000000d1b9         ja         loc_d1c8

000000000000d1bb         mov        r9, r11
000000000000d1be         shl        r9, cl
000000000000d1c1         xor        ecx, ecx
000000000000d1c3         test       r9, r10
000000000000d1c6         jne        loc_d1d1

                     loc_d1c8:
000000000000d1c8         xor        ecx, ecx                                    ; CODE XREF=match_suffix+57
000000000000d1ca         cmp        dl, 0x7e
000000000000d1cd         cmovne     rax, r8

                     loc_d1d1:
000000000000d1d1         add        rsi, 0x1                                    ; CODE XREF=match_suffix+70, match_suffix+112, match_suffix+122, match_suffix+164, match_suffix+186
000000000000d1d5         mov        qword [rdi], rsi
000000000000d1d8         movzx      edx, byte [rsi]
000000000000d1db         test       dl, dl
000000000000d1dd         je         loc_d211

                     loc_d1df:
000000000000d1df         test       cl, cl                                      ; CODE XREF=match_suffix+37, match_suffix+143
000000000000d1e1         jne        loc_d1b0

000000000000d1e3         cmp        dl, 0x2e
000000000000d1e6         je         loc_d218

000000000000d1e8         cmp        dl, 0x5a
000000000000d1eb         jg         loc_d230

000000000000d1ed         cmp        dl, 0x41
000000000000d1f0         jge        loc_d1d1

000000000000d1f2         lea        r9d, dword [rdx-0x30]
000000000000d1f6         cmp        r9b, 0x9
000000000000d1fa         jbe        loc_d1d1

                     loc_d1fc:
000000000000d1fc         cmp        dl, 0x7e                                    ; CODE XREF=match_suffix+184
000000000000d1ff         cmovne     rax, r8
000000000000d203         add        rsi, 0x1
000000000000d207         mov        qword [rdi], rsi
000000000000d20a         movzx      edx, byte [rsi]
000000000000d20d         test       dl, dl
000000000000d20f         jne        loc_d1df

                     loc_d211:
000000000000d211         ret                                                    ; CODE XREF=match_suffix+93
                        ; endp
000000000000d213         align      8

                     loc_d218:
000000000000d218         test       rax, rax                                    ; CODE XREF=match_suffix+102
000000000000d21b         mov        ecx, 0x1
000000000000d220         cmove      rax, rsi
000000000000d224         jmp        loc_d1d1
000000000000d226         align      16

                     loc_d230:
000000000000d230         lea        r9d, dword [rdx-0x61]                       ; CODE XREF=match_suffix+107
000000000000d234         cmp        r9b, 0x19
000000000000d238         ja         loc_d1fc

000000000000d23a         jmp        loc_d1d1
000000000000d23c         align      64

                     loc_d240:
000000000000d240         xor        eax, eax                                    ; CODE XREF=match_suffix+8
000000000000d242         ret
                        ; endp
000000000000d243         align      16                                          ; End of unwind block (FDE at 0x1c9cc)

                     filevercmp:
000000000000d250         push       r15                                         ; Begin of unwind block (FDE at 0x1c9e0), CODE XREF=rev_xstrcoll_version+9
000000000000d252         push       r14
000000000000d254         push       r13
000000000000d256         push       r12
000000000000d258         push       rbp
000000000000d259         push       rbx
000000000000d25a         mov        rbp, rsi
000000000000d25d         mov        rbx, rdi
000000000000d260         sub        rsp, 0x38
000000000000d264         mov        rax, qword [fs:0x28]
000000000000d26d         mov        qword [rsp+0x68+var_40], rax
000000000000d272         xor        eax, eax
000000000000d274         call       j_strcmp                                    ; strcmp
000000000000d279         test       eax, eax
000000000000d27b         mov        r12d, eax
000000000000d27e         je         loc_d4c8

000000000000d284         movzx      eax, byte [rbx]
000000000000d287         test       al, al
000000000000d289         je         loc_d608

000000000000d28f         movzx      r8d, byte [rbp]
000000000000d294         test       r8b, r8b
000000000000d297         je         loc_d4f0

000000000000d29d         lea        r9, qword [aWriteError+13]                  ; 0x19f9c
000000000000d2a4         mov        ecx, 0x2
000000000000d2a9         mov        rdi, rbx
000000000000d2ac         mov        rsi, r9
000000000000d2af         rep  cmpsb byte [rsi], byte [rdi]
000000000000d2b1         seta       dl
000000000000d2b4         sbb        dl, 0x0
000000000000d2b7         test       dl, dl
000000000000d2b9         je         loc_d608

000000000000d2bf         mov        ecx, 0x2
000000000000d2c4         mov        rsi, r9
000000000000d2c7         mov        rdi, rbp
000000000000d2ca         rep  cmpsb byte [rsi], byte [rdi]
000000000000d2cc         seta       dl
000000000000d2cf         sbb        dl, 0x0
000000000000d2d2         test       dl, dl
000000000000d2d4         je         loc_d4f0

000000000000d2da         lea        r9, qword [aWriteError+12]                  ; 0x19f9b
000000000000d2e1         mov        ecx, 0x3
000000000000d2e6         mov        rdi, rbx
000000000000d2e9         mov        rsi, r9
000000000000d2ec         rep  cmpsb byte [rsi], byte [rdi]
000000000000d2ee         seta       dl
000000000000d2f1         sbb        dl, 0x0
000000000000d2f4         test       dl, dl
000000000000d2f6         je         loc_d608

000000000000d2fc         mov        ecx, 0x3
000000000000d301         mov        rsi, r9
000000000000d304         mov        rdi, rbp
000000000000d307         rep  cmpsb byte [rsi], byte [rdi]
000000000000d309         seta       dl
000000000000d30c         sbb        dl, 0x0
000000000000d30f         test       dl, dl
000000000000d311         je         loc_d4f0

000000000000d317         cmp        al, 0x2e
000000000000d319         je         loc_d5f0

000000000000d31f         cmp        r8b, 0x2e
000000000000d323         je         loc_d4f0

                     loc_d329:
000000000000d329         lea        rdi, qword [rsp+0x68+var_50]                ; CODE XREF=filevercmp+940
000000000000d32e         mov        qword [rsp+0x68+var_50], rbx
000000000000d333         mov        qword [rsp+0x68+var_48], rbp
000000000000d338         call       match_suffix                                ; match_suffix
000000000000d33d         lea        rdi, qword [rsp+0x68+var_48]
000000000000d342         mov        r13, rax
000000000000d345         call       match_suffix                                ; match_suffix
000000000000d34a         test       r13, r13
000000000000d34d         je         loc_d560

000000000000d353         sub        r13, rbx
000000000000d356         test       rax, rax
000000000000d359         je         loc_d673

                     loc_d35f:
000000000000d35f         sub        rax, rbp                                    ; CODE XREF=filevercmp+795
000000000000d362         mov        r14, rax

                     loc_d365:
000000000000d365         cmp        r13, r14                                    ; CODE XREF=filevercmp+1067
000000000000d368         je         loc_d640

                     loc_d36e:
000000000000d36e         xor        esi, esi                                    ; CODE XREF=filevercmp+809, filevercmp+1024
000000000000d370         xor        edx, edx
000000000000d372         mov        r10d, 0x1
000000000000d378         movabs     r15, 0x3ffffff03ffffff

                     loc_d382:
000000000000d382         cmp        r13, rdx                                    ; CODE XREF=filevercmp+609
000000000000d385         ja         loc_d390

000000000000d387         cmp        r14, rsi
000000000000d38a         jbe        loc_d4c8

                     loc_d390:
000000000000d390         mov        r11, rsi                                    ; CODE XREF=filevercmp+309
000000000000d393         mov        qword [rsp+0x68+var_68], rbp
000000000000d397         sub        r11, rdx
000000000000d39a         lea        rax, qword [r13+r11]
000000000000d39f         lea        r9, qword [rbp+r11]
000000000000d3a4         mov        qword [rsp+0x68+var_60], rax
000000000000d3a9         nop        dword [rax]

                     loc_d3b0:
000000000000d3b0         cmp        r13, rdx                                    ; CODE XREF=filevercmp+499
000000000000d3b3         jbe        loc_d3c0

000000000000d3b5         movzx      eax, byte [rbx+rdx]
000000000000d3b9         sub        eax, 0x30
000000000000d3bc         cmp        al, 0x9
000000000000d3be         ja         loc_d3da

                     loc_d3c0:
000000000000d3c0         cmp        r14, rsi                                    ; CODE XREF=filevercmp+355
000000000000d3c3         movsx      eax, byte [r9+rdx]
000000000000d3c8         jbe        loc_d590

000000000000d3ce         lea        ecx, dword [rax-0x30]
000000000000d3d1         cmp        cl, 0x9
000000000000d3d4         jbe        loc_d590

                     loc_d3da:
000000000000d3da         cmp        r13, rdx                                    ; CODE XREF=filevercmp+366
000000000000d3dd         je         loc_d613

000000000000d3e3         movzx      eax, byte [rbx+rdx]
000000000000d3e7         lea        ecx, dword [rax-0x30]
000000000000d3ea         cmp        cl, 0x9
000000000000d3ed         jbe        loc_d580

000000000000d3f3         movzx      r8d, al
000000000000d3f7         lea        ecx, dword [r8-0x41]
000000000000d3fb         cmp        ecx, 0x39
000000000000d3fe         ja         loc_d40b

000000000000d400         mov        rdi, r10
000000000000d403         shl        rdi, cl
000000000000d406         test       rdi, r15
000000000000d409         jne        loc_d41a

                     loc_d40b:
000000000000d40b         add        r8d, 0x100                                  ; CODE XREF=filevercmp+430
000000000000d412         cmp        al, 0x7e
000000000000d414         je         loc_d500

                     loc_d41a:
000000000000d41a         cmp        r14, rsi                                    ; CODE XREF=filevercmp+441, filevercmp+819
000000000000d41d         je         loc_d430

000000000000d41f         movzx      eax, byte [r9+rdx]
000000000000d424         lea        ecx, dword [rax-0x30]
000000000000d427         cmp        cl, 0x9
000000000000d42a         ja         loc_d528

                     loc_d430:
000000000000d430         xor        edi, edi                                    ; CODE XREF=filevercmp+461

                     loc_d432:
000000000000d432         cmp        edi, r8d                                    ; CODE XREF=filevercmp+748, filevercmp+770
000000000000d435         jne        loc_d5c8

                     loc_d43b:
000000000000d43b         add        rdx, 0x1                                    ; CODE XREF=filevercmp+968, filevercmp+985
000000000000d43f         add        rsi, 0x1
000000000000d443         jmp        loc_d3b0
000000000000d448         align      16

                     loc_d450:
000000000000d450         add        rsi, 0x1                                    ; CODE XREF=filevercmp+523
000000000000d454         movsx      eax, byte [rbp+rsi]

                     loc_d459:
000000000000d459         cmp        al, 0x30                                    ; CODE XREF=filevercmp+843, filevercmp+869
000000000000d45b         je         loc_d450

000000000000d45d         sub        rsi, rdx
000000000000d460         xor        r8d, r8d
000000000000d463         mov        r9, rsi
000000000000d466         lea        r11, qword [rbp+rsi]
000000000000d46b         jmp        loc_d496
000000000000d46d         align      16

                     loc_d470:
000000000000d470         lea        esi, dword [rax-0x30]                       ; CODE XREF=filevercmp+593
000000000000d473         cmp        sil, 0x9
000000000000d477         ja         loc_d5e0

000000000000d47d         test       r8d, r8d
000000000000d480         jne        loc_d489

000000000000d482         movsx      r8d, cl
000000000000d486         sub        r8d, eax

                     loc_d489:
000000000000d489         add        rdx, 0x1                                    ; CODE XREF=filevercmp+560
000000000000d48d         movzx      ecx, byte [rbx+rdx]
000000000000d491         movsx      eax, byte [r11+rdx]

                     loc_d496:
000000000000d496         lea        edi, dword [rcx-0x30]                       ; CODE XREF=filevercmp+539
000000000000d499         lea        rsi, qword [rdx+r9]
000000000000d49d         cmp        dil, 0x9
000000000000d4a1         jbe        loc_d470

000000000000d4a3         sub        eax, 0x30
000000000000d4a6         cmp        al, 0x9
000000000000d4a8         jbe        loc_d663

000000000000d4ae         test       r8d, r8d
000000000000d4b1         je         loc_d382

000000000000d4b7         nop        word [rax+rax]

                     loc_d4c0:
000000000000d4c0         mov        r12d, r8d                                   ; CODE XREF=filevercmp+891, filevercmp+918, filevercmp+1049
000000000000d4c3         nop        dword [rax+rax]

                     loc_d4c8:
000000000000d4c8         mov        rbx, qword [rsp+0x68+var_40]                ; CODE XREF=filevercmp+46, filevercmp+314, filevercmp+678, filevercmp+897, filevercmp+958
000000000000d4cd         xor        rbx, qword [fs:0x28]
000000000000d4d6         mov        eax, r12d
000000000000d4d9         jne        loc_d66e

000000000000d4df         add        rsp, 0x38
000000000000d4e3         pop        rbx
000000000000d4e4         pop        rbp
000000000000d4e5         pop        r12
000000000000d4e7         pop        r13
000000000000d4e9         pop        r14
000000000000d4eb         pop        r15
000000000000d4ed         ret
                        ; endp
000000000000d4ee         align      16

                     loc_d4f0:
000000000000d4f0         mov        r12d, 0x1                                   ; CODE XREF=filevercmp+71, filevercmp+132, filevercmp+193, filevercmp+211
000000000000d4f6         jmp        loc_d4c8
000000000000d4f8         align      256

                     loc_d500:
000000000000d500         lea        rax, qword [r11+rdx]                        ; CODE XREF=filevercmp+452
000000000000d504         cmp        r14, rax
000000000000d507         je         loc_d5c0

000000000000d50d         movzx      eax, byte [r9+rdx]
000000000000d512         lea        ecx, dword [rax-0x30]
000000000000d515         cmp        cl, 0x9
000000000000d518         jbe        loc_d5c0

000000000000d51e         mov        r8d, 0xffffffff
000000000000d524         nop        dword [rax]

                     loc_d528:
000000000000d528         movzx      edi, al                                     ; CODE XREF=filevercmp+474, filevercmp+994
000000000000d52b         lea        ecx, dword [rdi-0x41]
000000000000d52e         cmp        ecx, 0x39
000000000000d531         ja         loc_d542

000000000000d533         mov        rbp, r10
000000000000d536         shl        rbp, cl
000000000000d539         test       rbp, r15
000000000000d53c         jne        loc_d432

                     loc_d542:
000000000000d542         add        edi, 0x100                                  ; CODE XREF=filevercmp+737
000000000000d548         cmp        al, 0x7e
000000000000d54a         mov        eax, 0xffffffff
000000000000d54f         cmove      edi, eax
000000000000d552         jmp        loc_d432
000000000000d557         align      32

                     loc_d560:
000000000000d560         mov        r13, qword [rsp+0x68+var_50]                ; CODE XREF=filevercmp+253
000000000000d565         sub        r13, rbx
000000000000d568         test       rax, rax
000000000000d56b         jne        loc_d35f

                     loc_d571:
000000000000d571         mov        r14, qword [rsp+0x68+var_48]                ; CODE XREF=filevercmp+1038
000000000000d576         sub        r14, rbp
000000000000d579         jmp        loc_d36e
000000000000d57e         align      128

                     loc_d580:
000000000000d580         xor        r8d, r8d                                    ; CODE XREF=filevercmp+413
000000000000d583         jmp        loc_d41a
000000000000d588         align      16

                     loc_d590:
000000000000d590         movzx      ecx, byte [rbx+rdx]                         ; CODE XREF=filevercmp+376, filevercmp+388
000000000000d594         mov        rbp, qword [rsp+0x68+var_68]
000000000000d598         cmp        cl, 0x30
000000000000d59b         jne        loc_d459

000000000000d5a1         nop        dword [rax]

                     loc_d5a8:
000000000000d5a8         add        rdx, 0x1                                    ; CODE XREF=filevercmp+867
000000000000d5ac         movzx      ecx, byte [rbx+rdx]
000000000000d5b0         cmp        cl, 0x30
000000000000d5b3         je         loc_d5a8

000000000000d5b5         jmp        loc_d459
000000000000d5ba         align      64

                     loc_d5c0:
000000000000d5c0         xor        edi, edi                                    ; CODE XREF=filevercmp+695, filevercmp+712
000000000000d5c2         mov        r8d, 0xffffffff

                     loc_d5c8:
000000000000d5c8         sub        r8d, edi                                    ; CODE XREF=filevercmp+485
000000000000d5cb         jne        loc_d4c0

000000000000d5d1         jmp        loc_d4c8
000000000000d5d6         align      32

                     loc_d5e0:
000000000000d5e0         mov        r8d, 0x1                                    ; CODE XREF=filevercmp+551
000000000000d5e6         jmp        loc_d4c0
000000000000d5eb         align      16

                     loc_d5f0:
000000000000d5f0         add        rbx, 0x1                                    ; CODE XREF=filevercmp+201
000000000000d5f4         add        rbp, 0x1
000000000000d5f8         cmp        r8b, 0x2e
000000000000d5fc         je         loc_d329

000000000000d602         nop        word [rax+rax]

                     loc_d608:
000000000000d608         mov        r12d, 0xffffffff                            ; CODE XREF=filevercmp+57, filevercmp+105, filevercmp+166
000000000000d60e         jmp        loc_d4c8

                     loc_d613:
000000000000d613         cmp        r14, qword [rsp+0x68+var_60]                ; CODE XREF=filevercmp+397
000000000000d618         je         loc_d43b

000000000000d61e         movzx      eax, byte [r9+r13]
000000000000d623         lea        ecx, dword [rax-0x30]
000000000000d626         cmp        cl, 0x9
000000000000d629         jbe        loc_d43b

000000000000d62f         xor        r8d, r8d
000000000000d632         jmp        loc_d528
000000000000d637         align      64

                     loc_d640:
000000000000d640         mov        rdx, r13                                    ; argument "__n" for method j_strncmp, CODE XREF=filevercmp+280
000000000000d643         mov        rsi, rbp                                    ; argument "__s2" for method j_strncmp
000000000000d646         mov        rdi, rbx                                    ; argument "__s1" for method j_strncmp
000000000000d649         call       j_strncmp                                   ; strncmp
000000000000d64e         test       eax, eax
000000000000d650         jne        loc_d36e

000000000000d656         mov        r13, qword [rsp+0x68+var_50]
000000000000d65b         sub        r13, rbx
000000000000d65e         jmp        loc_d571

                     loc_d663:
000000000000d663         mov        r8d, 0xffffffff                             ; CODE XREF=filevercmp+600
000000000000d669         jmp        loc_d4c0

                     loc_d66e:
000000000000d66e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=filevercmp+649
                        ; endp

                     loc_d673:
000000000000d673         mov        r14, qword [rsp+0x68+var_48]                ; CODE XREF=filevercmp+265
000000000000d678         sub        r14, rbp
000000000000d67b         jmp        loc_d365


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettime:
000000000000d680         mov        rsi, rdi                                    ; End of unwind block (FDE at 0x1c9e0), Begin of unwind block (FDE at 0x1ca2c), argument "__tp" for method j_clock_gettime, CODE XREF=print_long_format+1943
000000000000d683         xor        edi, edi                                    ; argument "__clock_id" for method j_clock_gettime
000000000000d685         jmp        j_clock_gettime                             ; clock_gettime
                        ; endp
000000000000d68a         align      16                                          ; End of unwind block (FDE at 0x1ca2c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40


                     current_timespec:
000000000000d690         sub        rsp, 0x28                                   ; Begin of unwind block (FDE at 0x1ca40)
000000000000d694         xor        edi, edi                                    ; argument "__clock_id" for method j_clock_gettime
000000000000d696         mov        rsi, rsp                                    ; argument "__tp" for method j_clock_gettime
000000000000d699         mov        rax, qword [fs:0x28]
000000000000d6a2         mov        qword [rsp+0x28+var_10], rax
000000000000d6a7         xor        eax, eax
000000000000d6a9         call       j_clock_gettime                             ; clock_gettime
000000000000d6ae         mov        rcx, qword [rsp+0x28+var_10]
000000000000d6b3         xor        rcx, qword [fs:0x28]
000000000000d6bc         mov        rax, qword [rsp+0x28+var_28]
000000000000d6c0         mov        rdx, qword [rsp+0x28+var_20]
000000000000d6c5         jne        loc_d6cc

000000000000d6c7         add        rsp, 0x28
000000000000d6cb         ret
                        ; endp

                     loc_d6cc:
000000000000d6cc         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=current_timespec+53
                        ; endp
000000000000d6d1         align      32                                          ; End of unwind block (FDE at 0x1ca40)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
000000000000d6e0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x1ca5c), CODE XREF=main+2969, main+5140, rpl_mbrtowc+71
000000000000d6e4         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000d6e6         call       j_setlocale                                 ; setlocale
000000000000d6eb         mov        rdx, rax
000000000000d6ee         mov        eax, 0x1
000000000000d6f3         test       rdx, rdx
000000000000d6f6         je         loc_d715

000000000000d6f8         lea        rdi, qword [aWriteError+15]                 ; 0x19f9e
000000000000d6ff         mov        ecx, 0x2
000000000000d704         mov        rsi, rdx
000000000000d707         rep  cmpsb byte [rsi], byte [rdi]
000000000000d709         seta       cl
000000000000d70c         sbb        cl, 0x0
000000000000d70f         xor        eax, eax
000000000000d711         test       cl, cl
000000000000d713         jne        loc_d720

                     loc_d715:
000000000000d715         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
000000000000d719         ret
                        ; endp
000000000000d71a         align      32

                     loc_d720:
000000000000d720         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
000000000000d727         mov        ecx, 0x6
000000000000d72c         mov        rsi, rdx
000000000000d72f         rep  cmpsb byte [rsi], byte [rdi]
000000000000d731         seta       al
000000000000d734         sbb        al, 0x0
000000000000d736         test       al, al
000000000000d738         setne      al
000000000000d73b         add        rsp, 0x8
000000000000d73f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     next_prime:
000000000000d740         cmp        rdi, 0xa                                    ; End of unwind block (FDE at 0x1ca5c), Begin of unwind block (FDE at 0x1ca7c), CODE XREF=hash_initialize+123, hash_rehash+123
000000000000d744         mov        eax, 0xa
000000000000d749         movabs     r9, 0xaaaaaaaaaaaaaaab
000000000000d753         cmovb      rdi, rax
000000000000d757         or         rdi, 0x1
000000000000d75b         cmp        rdi, 0xffffffffffffffff
000000000000d75f         je         loc_d7cf

000000000000d761         nop        dword [rax]

                     loc_d768:
000000000000d768         mov        rax, rdi                                    ; CODE XREF=next_prime+141
000000000000d76b         mov        rcx, rdi
000000000000d76e         mul        r9
000000000000d771         mov        rax, rdx
000000000000d774         shr        rax, 0x1
000000000000d777         lea        rax, qword [rax+rax*2]
000000000000d77b         sub        rcx, rax
000000000000d77e         cmp        rdi, 0x9
000000000000d782         mov        rax, rcx
000000000000d785         jbe        loc_d7c0

000000000000d787         test       rcx, rcx
000000000000d78a         je         loc_d7c5

000000000000d78c         mov        r8d, 0x10
000000000000d792         mov        esi, 0x9
000000000000d797         mov        ecx, 0x3
000000000000d79c         jmp        loc_d7a9
000000000000d79e         align      32

                     loc_d7a0:
000000000000d7a0         add        r8, 0x8                                     ; CODE XREF=next_prime+126
000000000000d7a4         test       rdx, rdx
000000000000d7a7         je         loc_d7c5

                     loc_d7a9:
000000000000d7a9         add        rcx, 0x2                                    ; CODE XREF=next_prime+92
000000000000d7ad         xor        edx, edx
000000000000d7af         mov        rax, rdi
000000000000d7b2         div        rcx
000000000000d7b5         add        rsi, r8
000000000000d7b8         cmp        rsi, rdi
000000000000d7bb         mov        rax, rdx
000000000000d7be         jb         loc_d7a0

                     loc_d7c0:
000000000000d7c0         test       rax, rax                                    ; CODE XREF=next_prime+69
000000000000d7c3         jne        loc_d7cf

                     loc_d7c5:
000000000000d7c5         add        rdi, 0x2                                    ; CODE XREF=next_prime+74, next_prime+103
000000000000d7c9         cmp        rdi, 0xffffffffffffffff
000000000000d7cd         jne        loc_d768

                     loc_d7cf:
000000000000d7cf         mov        rax, rdi                                    ; CODE XREF=next_prime+31, next_prime+131
000000000000d7d2         ret
                        ; endp
000000000000d7d3         align      32                                          ; End of unwind block (FDE at 0x1ca7c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     raw_hasher:
000000000000d7e0         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x1ca90), DATA XREF=hash_initialize+4
000000000000d7e3         xor        edx, edx
000000000000d7e5         ror        rax, 0x3
000000000000d7e9         div        rsi
000000000000d7ec         mov        rax, rdx
000000000000d7ef         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     raw_comparator:
000000000000d7f0         cmp        rdi, rsi                                    ; End of unwind block (FDE at 0x1ca90), Begin of unwind block (FDE at 0x1caa4), DATA XREF=hash_initialize+48
000000000000d7f3         sete       al
000000000000d7f6         ret
                        ; endp
000000000000d7f7         align      2048                                        ; End of unwind block (FDE at 0x1caa4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     safe_hasher:
000000000000d800         push       rbx                                         ; Begin of unwind block (FDE at 0x1cab8), CODE XREF=hash_find_entry+20, transfer_entries+101, transfer_entries+175, hash_lookup+10, hash_get_next+12
000000000000d801         mov        rbx, rdi
000000000000d804         mov        rdi, rsi
000000000000d807         mov        rsi, qword [rbx+0x10]
000000000000d80b         call       qword [rbx+0x30]
000000000000d80e         cmp        qword [rbx+0x10], rax
000000000000d812         jbe        loc_d81d

000000000000d814         shl        rax, 0x4
000000000000d818         add        rax, qword [rbx]
000000000000d81b         pop        rbx
000000000000d81c         ret
                        ; endp

                     loc_d81d:
000000000000d81d         call       j_abort                                     ; abort, CODE XREF=safe_hasher+18
                        ; endp
000000000000d822         align      16                                          ; End of unwind block (FDE at 0x1cab8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_find_entry:
000000000000d830         push       r14                                         ; Begin of unwind block (FDE at 0x1cad4), CODE XREF=hash_insert_if_absent+52, hash_insert_if_absent+463, hash_delete+35
000000000000d832         push       r13
000000000000d834         mov        r14, rdx
000000000000d837         push       r12
000000000000d839         push       rbp
000000000000d83a         mov        r12, rdi
000000000000d83d         push       rbx
000000000000d83e         mov        rbp, rsi
000000000000d841         mov        r13d, ecx
000000000000d844         call       safe_hasher                                 ; safe_hasher
000000000000d849         mov        qword [r14], rax
000000000000d84c         mov        rsi, qword [rax]
000000000000d84f         test       rsi, rsi
000000000000d852         je         loc_d940

000000000000d858         cmp        rsi, rbp
000000000000d85b         mov        rbx, rax
000000000000d85e         je         loc_d8f3

000000000000d864         mov        rdi, rbp
000000000000d867         call       qword [r12+0x38]
000000000000d86c         test       al, al
000000000000d86e         jne        loc_d8f0

000000000000d874         mov        rax, qword [rbx+8]
000000000000d878         test       rax, rax
000000000000d87b         je         loc_d940

000000000000d881         mov        rsi, qword [rax]
000000000000d884         cmp        rbp, rsi
000000000000d887         jne        loc_d8a9

000000000000d889         jmp        loc_d8bc
000000000000d88b         align      16

                     loc_d890:
000000000000d890         mov        rbx, qword [rbx+8]                          ; CODE XREF=hash_find_entry+131
000000000000d894         mov        rax, qword [rbx+8]
000000000000d898         test       rax, rax
000000000000d89b         je         loc_d940

000000000000d8a1         mov        rsi, qword [rax]
000000000000d8a4         cmp        rsi, rbp
000000000000d8a7         je         loc_d8bc

                     loc_d8a9:
000000000000d8a9         mov        rdi, rbp                                    ; CODE XREF=hash_find_entry+87
000000000000d8ac         call       qword [r12+0x38]
000000000000d8b1         test       al, al
000000000000d8b3         je         loc_d890

000000000000d8b5         mov        rax, qword [rbx+8]
000000000000d8b9         mov        rsi, qword [rax]

                     loc_d8bc:
000000000000d8bc         test       r13b, r13b                                  ; CODE XREF=hash_find_entry+89, hash_find_entry+119
000000000000d8bf         je         loc_d8de

000000000000d8c1         mov        rdx, qword [rax+8]
000000000000d8c5         mov        qword [rbx+8], rdx
000000000000d8c9         mov        qword [rax], 0x0
000000000000d8d0         mov        rdx, qword [r12+0x48]
000000000000d8d5         mov        qword [rax+8], rdx
000000000000d8d9         mov        qword [r12+0x48], rax

                     loc_d8de:
000000000000d8de         pop        rbx                                         ; CODE XREF=hash_find_entry+143, hash_find_entry+198, hash_find_entry+263
000000000000d8df         mov        rax, rsi
000000000000d8e2         pop        rbp
000000000000d8e3         pop        r12
000000000000d8e5         pop        r13
000000000000d8e7         pop        r14
000000000000d8e9         ret
                        ; endp
000000000000d8ea         align      16

                     loc_d8f0:
000000000000d8f0         mov        rsi, qword [rbx]                            ; CODE XREF=hash_find_entry+62

                     loc_d8f3:
000000000000d8f3         test       r13b, r13b                                  ; CODE XREF=hash_find_entry+46
000000000000d8f6         je         loc_d8de

000000000000d8f8         mov        rax, qword [rbx+8]
000000000000d8fc         test       rax, rax
000000000000d8ff         je         loc_d930

000000000000d901         movdqu     xmm0, xmmword [rax]
000000000000d905         movups     xmmword [rbx], xmm0
000000000000d908         mov        qword [rax], 0x0
000000000000d90f         mov        rdx, qword [r12+0x48]
000000000000d914         mov        qword [rax+8], rdx
000000000000d918         mov        qword [r12+0x48], rax
000000000000d91d         mov        rax, rsi
000000000000d920         pop        rbx
000000000000d921         pop        rbp
000000000000d922         pop        r12
000000000000d924         pop        r13
000000000000d926         pop        r14
000000000000d928         ret
                        ; endp
000000000000d929         align      16

                     loc_d930:
000000000000d930         mov        qword [rbx], 0x0                            ; CODE XREF=hash_find_entry+207
000000000000d937         jmp        loc_d8de
000000000000d939         align      64

                     loc_d940:
000000000000d940         xor        esi, esi                                    ; CODE XREF=hash_find_entry+34, hash_find_entry+75, hash_find_entry+107
000000000000d942         pop        rbx
000000000000d943         mov        rax, rsi
000000000000d946         pop        rbp
000000000000d947         pop        r12
000000000000d949         pop        r13
000000000000d94b         pop        r14
000000000000d94d         ret
                        ; endp
000000000000d94e         align      16                                          ; End of unwind block (FDE at 0x1cad4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     check_tuning.isra.0:
000000000000d950         mov        rdx, qword [rdi]                            ; Begin of unwind block (FDE at 0x1cb34), CODE XREF=hash_initialize+96, hash_initialize+283, hash_insert_if_absent+324, hash_delete+165
000000000000d953         lea        rcx, qword [default_tuning]                 ; default_tuning
000000000000d95a         mov        eax, 0x1
000000000000d95f         cmp        rdx, rcx
000000000000d962         je         loc_d9c5

000000000000d964         movss      xmm0, dword [rdx+8]
000000000000d969         ucomiss    xmm0, dword [float_1a034]                   ; float_1a034
000000000000d970         jbe        loc_d9c0

000000000000d972         movss      xmm1, dword [float_1a038]                   ; float_1a038
000000000000d97a         ucomiss    xmm1, xmm0
000000000000d97d         jbe        loc_d9c0

000000000000d97f         movss      xmm1, dword [rdx+0xc]
000000000000d984         ucomiss    xmm1, dword [float_1a03c]                   ; float_1a03c
000000000000d98b         jbe        loc_d9c0

000000000000d98d         movss      xmm1, dword [rdx]
000000000000d991         ucomiss    xmm1, dword [float_1a040]                   ; float_1a040
000000000000d998         jb         loc_d9c0

000000000000d99a         addss      xmm1, dword [float_1a034]                   ; float_1a034
000000000000d9a2         movss      xmm2, dword [rdx+4]
000000000000d9a7         ucomiss    xmm2, xmm1
000000000000d9aa         jbe        loc_d9c0

000000000000d9ac         movss      xmm3, dword [float_1a044]                   ; float_1a044
000000000000d9b4         ucomiss    xmm3, xmm2
000000000000d9b7         jb         loc_d9c0

000000000000d9b9         ucomiss    xmm0, xmm1
000000000000d9bc         ja         loc_d9c5

000000000000d9be         nop

                     loc_d9c0:
000000000000d9c0         mov        qword [rdi], rcx                            ; CODE XREF=check_tuning.isra.0+32, check_tuning.isra.0+45, check_tuning.isra.0+59, check_tuning.isra.0+72, check_tuning.isra.0+90, check_tuning.isra.0+103
000000000000d9c3         xor        eax, eax

                     loc_d9c5:
000000000000d9c5         ret                                                    ; CODE XREF=check_tuning.isra.0+18, check_tuning.isra.0+108
                        ; endp
000000000000d9c7         align      16                                          ; End of unwind block (FDE at 0x1cb34)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     transfer_entries:
000000000000d9d0         push       r15                                         ; Begin of unwind block (FDE at 0x1cb48), CODE XREF=hash_rehash+303, hash_rehash+338, hash_rehash+359
000000000000d9d2         push       r14
000000000000d9d4         push       r13
000000000000d9d6         push       r12
000000000000d9d8         push       rbp
000000000000d9d9         push       rbx
000000000000d9da         sub        rsp, 0x8
000000000000d9de         mov        r12, qword [rsi]
000000000000d9e1         cmp        r12, qword [rsi+8]
000000000000d9e5         jae        loc_dac8

000000000000d9eb         mov        rbp, rdi
000000000000d9ee         mov        r13, rsi
000000000000d9f1         mov        r14d, edx
000000000000d9f4         nop        dword [rax]

                     loc_d9f8:
000000000000d9f8         mov        r15, qword [r12]                            ; CODE XREF=transfer_entries+242
000000000000d9fc         test       r15, r15
000000000000d9ff         je         loc_daba

000000000000da05         mov        rbx, qword [r12+8]
000000000000da0a         test       rbx, rbx
000000000000da0d         jne        loc_da2c

000000000000da0f         jmp        loc_da6b
000000000000da11         align      8

                     loc_da18:
000000000000da18         mov        rcx, qword [rax+8]                          ; CODE XREF=transfer_entries+114
000000000000da1c         test       rdx, rdx
000000000000da1f         mov        qword [rbx+8], rcx
000000000000da23         mov        qword [rax+8], rbx
000000000000da27         mov        rbx, rdx
000000000000da2a         je         loc_da67

                     loc_da2c:
000000000000da2c         mov        r15, qword [rbx]                            ; CODE XREF=transfer_entries+61, transfer_entries+149
000000000000da2f         mov        rdi, rbp
000000000000da32         mov        rsi, r15
000000000000da35         call       safe_hasher                                 ; safe_hasher
000000000000da3a         cmp        qword [rax], 0x0
000000000000da3e         mov        rdx, qword [rbx+8]
000000000000da42         jne        loc_da18

000000000000da44         mov        qword [rax], r15
000000000000da47         add        qword [rbp+0x18], 0x1
000000000000da4c         test       rdx, rdx
000000000000da4f         mov        qword [rbx], 0x0
000000000000da56         mov        rax, qword [rbp+0x48]
000000000000da5a         mov        qword [rbx+8], rax
000000000000da5e         mov        qword [rbp+0x48], rbx
000000000000da62         mov        rbx, rdx
000000000000da65         jne        loc_da2c

                     loc_da67:
000000000000da67         mov        r15, qword [r12]                            ; CODE XREF=transfer_entries+90

                     loc_da6b:
000000000000da6b         test       r14b, r14b                                  ; CODE XREF=transfer_entries+63
000000000000da6e         mov        qword [r12+8], 0x0
000000000000da77         jne        loc_daba

000000000000da79         mov        rsi, r15
000000000000da7c         mov        rdi, rbp
000000000000da7f         call       safe_hasher                                 ; safe_hasher
000000000000da84         cmp        qword [rax], 0x0
000000000000da88         mov        rbx, rax
000000000000da8b         je         loc_dae0

000000000000da8d         mov        rax, qword [rbp+0x48]
000000000000da91         test       rax, rax
000000000000da94         je         loc_daf0

000000000000da96         mov        rdx, qword [rax+8]
000000000000da9a         mov        qword [rbp+0x48], rdx

                     loc_da9e:
000000000000da9e         mov        rdx, qword [rbx+8]                          ; CODE XREF=transfer_entries+301
000000000000daa2         mov        qword [rax], r15
000000000000daa5         mov        qword [rax+8], rdx
000000000000daa9         mov        qword [rbx+8], rax

                     loc_daad:
000000000000daad         mov        qword [r12], 0x0                            ; CODE XREF=transfer_entries+280
000000000000dab5         sub        qword [r13+0x18], 0x1

                     loc_daba:
000000000000daba         add        r12, 0x10                                   ; CODE XREF=transfer_entries+47, transfer_entries+167
000000000000dabe         cmp        qword [r13+8], r12
000000000000dac2         ja         loc_d9f8

                     loc_dac8:
000000000000dac8         add        rsp, 0x8                                    ; CODE XREF=transfer_entries+21
000000000000dacc         mov        eax, 0x1
000000000000dad1         pop        rbx
000000000000dad2         pop        rbp
000000000000dad3         pop        r12
000000000000dad5         pop        r13
000000000000dad7         pop        r14
000000000000dad9         pop        r15
000000000000dadb         ret
                        ; endp
000000000000dadc         align      32

                     loc_dae0:
000000000000dae0         mov        qword [rax], r15                            ; CODE XREF=transfer_entries+187
000000000000dae3         add        qword [rbp+0x18], 0x1
000000000000dae8         jmp        loc_daad
000000000000daea         align      16

                     loc_daf0:
000000000000daf0         mov        edi, 0x10                                   ; CODE XREF=transfer_entries+196
000000000000daf5         call       sub_3888                                    ; sub_3888
000000000000dafa         test       rax, rax
000000000000dafd         jne        loc_da9e

000000000000daff         add        rsp, 0x8
000000000000db03         xor        eax, eax
000000000000db05         pop        rbx
000000000000db06         pop        rbp
000000000000db07         pop        r12
000000000000db09         pop        r13
000000000000db0b         pop        r14
000000000000db0d         pop        r15
000000000000db0f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_n_buckets:
000000000000db10         mov        rax, qword [rdi+0x10]                       ; End of unwind block (FDE at 0x1cb48), Begin of unwind block (FDE at 0x1cba8)
000000000000db14         ret
                        ; endp
000000000000db15         align      32                                          ; End of unwind block (FDE at 0x1cba8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_n_buckets_used:
000000000000db20         mov        rax, qword [rdi+0x18]                       ; Begin of unwind block (FDE at 0x1cbbc)
000000000000db24         ret
                        ; endp
000000000000db25         align      16                                          ; End of unwind block (FDE at 0x1cbbc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_n_entries:
000000000000db30         mov        rax, qword [rdi+0x20]                       ; Begin of unwind block (FDE at 0x1cbd0), CODE XREF=main+3608
000000000000db34         ret
                        ; endp
000000000000db35         align      64                                          ; End of unwind block (FDE at 0x1cbd0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_max_bucket_length:
000000000000db40         mov        rsi, qword [rdi]                            ; Begin of unwind block (FDE at 0x1cbe4)
000000000000db43         mov        rdi, qword [rdi+8]
000000000000db47         xor        eax, eax
000000000000db49         cmp        rsi, rdi
000000000000db4c         jae        loc_db87

000000000000db4e         nop

                     loc_db50:
000000000000db50         cmp        qword [rsi], 0x0                            ; CODE XREF=hash_get_max_bucket_length+67
000000000000db54         je         loc_db7c

000000000000db56         mov        rdx, qword [rsi+8]
000000000000db5a         mov        ecx, 0x1
000000000000db5f         test       rdx, rdx
000000000000db62         je         loc_db75

000000000000db64         nop        dword [rax]

                     loc_db68:
000000000000db68         mov        rdx, qword [rdx+8]                          ; CODE XREF=hash_get_max_bucket_length+51
000000000000db6c         add        rcx, 0x1
000000000000db70         test       rdx, rdx
000000000000db73         jne        loc_db68

                     loc_db75:
000000000000db75         cmp        rax, rcx                                    ; CODE XREF=hash_get_max_bucket_length+34
000000000000db78         cmovb      rax, rcx

                     loc_db7c:
000000000000db7c         add        rsi, 0x10                                   ; CODE XREF=hash_get_max_bucket_length+20
000000000000db80         cmp        rsi, rdi
000000000000db83         jb         loc_db50

000000000000db85         ret
                        ; endp

                     loc_db87:
000000000000db87         ret                                                    ; CODE XREF=hash_get_max_bucket_length+12
                        ; endp
000000000000db89         align      16                                          ; End of unwind block (FDE at 0x1cbe4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_table_ok:
000000000000db90         mov        rcx, qword [rdi]                            ; Begin of unwind block (FDE at 0x1cbf8)
000000000000db93         mov        r8, qword [rdi+8]
000000000000db97         xor        edx, edx
000000000000db99         xor        esi, esi
000000000000db9b         cmp        rcx, r8
000000000000db9e         jae        loc_dbd6

                     loc_dba0:
000000000000dba0         cmp        qword [rcx], 0x0                            ; CODE XREF=hash_table_ok+68
000000000000dba4         je         loc_dbcd

000000000000dba6         mov        rax, qword [rcx+8]
000000000000dbaa         add        rsi, 0x1
000000000000dbae         add        rdx, 0x1
000000000000dbb2         test       rax, rax
000000000000dbb5         je         loc_dbcd

000000000000dbb7         nop        word [rax+rax]

                     loc_dbc0:
000000000000dbc0         mov        rax, qword [rax+8]                          ; CODE XREF=hash_table_ok+59
000000000000dbc4         add        rdx, 0x1
000000000000dbc8         test       rax, rax
000000000000dbcb         jne        loc_dbc0

                     loc_dbcd:
000000000000dbcd         add        rcx, 0x10                                   ; CODE XREF=hash_table_ok+20, hash_table_ok+37
000000000000dbd1         cmp        rcx, r8
000000000000dbd4         jb         loc_dba0

                     loc_dbd6:
000000000000dbd6         xor        eax, eax                                    ; CODE XREF=hash_table_ok+14
000000000000dbd8         cmp        qword [rdi+0x18], rsi
000000000000dbdc         je         loc_dbe0

000000000000dbde         ret
                        ; endp

                     loc_dbe0:
000000000000dbe0         cmp        qword [rdi+0x20], rdx                       ; CODE XREF=hash_table_ok+76
000000000000dbe4         sete       al
000000000000dbe7         ret
                        ; endp
000000000000dbe8         align      16                                          ; End of unwind block (FDE at 0x1cbf8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_print_statistics:
000000000000dbf0         push       r13                                         ; Begin of unwind block (FDE at 0x1cc0c)
000000000000dbf2         push       r12
000000000000dbf4         mov        r12, rsi
000000000000dbf7         push       rbp
000000000000dbf8         push       rbx
000000000000dbf9         xor        ebx, ebx
000000000000dbfb         sub        rsp, 0x8
000000000000dbff         mov        rsi, qword [rdi]
000000000000dc02         mov        rcx, qword [rdi+0x20]
000000000000dc06         mov        rbp, qword [rdi+0x10]
000000000000dc0a         mov        r13, qword [rdi+0x18]
000000000000dc0e         mov        rdi, qword [rdi+8]
000000000000dc12         cmp        rsi, rdi
000000000000dc15         jae        loc_dc55

000000000000dc17         nop        word [rax+rax]

                     loc_dc20:
000000000000dc20         cmp        qword [rsi], 0x0                            ; CODE XREF=hash_print_statistics+99
000000000000dc24         je         loc_dc4c

000000000000dc26         mov        rax, qword [rsi+8]
000000000000dc2a         mov        edx, 0x1
000000000000dc2f         test       rax, rax
000000000000dc32         je         loc_dc45

000000000000dc34         nop        dword [rax]

                     loc_dc38:
000000000000dc38         mov        rax, qword [rax+8]                          ; CODE XREF=hash_print_statistics+83
000000000000dc3c         add        rdx, 0x1
000000000000dc40         test       rax, rax
000000000000dc43         jne        loc_dc38

                     loc_dc45:
000000000000dc45         cmp        rbx, rdx                                    ; CODE XREF=hash_print_statistics+66
000000000000dc48         cmovb      rbx, rdx

                     loc_dc4c:
000000000000dc4c         add        rsi, 0x10                                   ; CODE XREF=hash_print_statistics+52
000000000000dc50         cmp        rsi, rdi
000000000000dc53         jb         loc_dc20

                     loc_dc55:
000000000000dc55         lea        rdx, qword [aEntriesLun]                    ; "# entries:         %lu\\n", CODE XREF=hash_print_statistics+37
000000000000dc5c         mov        esi, 0x1
000000000000dc61         mov        rdi, r12
000000000000dc64         xor        eax, eax
000000000000dc66         call       j___fprintf_chk                             ; __fprintf_chk
000000000000dc6b         lea        rdx, qword [aBucketsLun]                    ; "# buckets:         %lu\\n"
000000000000dc72         xor        eax, eax
000000000000dc74         mov        rcx, rbp
000000000000dc77         mov        esi, 0x1
000000000000dc7c         mov        rdi, r12
000000000000dc7f         call       j___fprintf_chk                             ; __fprintf_chk
000000000000dc84         test       r13, r13
000000000000dc87         js         loc_dcf0

000000000000dc89         pxor       xmm0, xmm0
000000000000dc8d         test       rbp, rbp
000000000000dc90         cvtsi2sd   xmm0, r13
000000000000dc95         mulsd      xmm0, qword [float_1a050+8]                 ; 0x1a058
000000000000dc9d         js         loc_dd19

                     loc_dc9f:
000000000000dc9f         pxor       xmm1, xmm1                                  ; CODE XREF=hash_print_statistics+295
000000000000dca3         cvtsi2sd   xmm1, rbp

                     loc_dca8:
000000000000dca8         divsd      xmm0, xmm1                                  ; CODE XREF=hash_print_statistics+322
000000000000dcac         lea        rdx, qword [aBucketsUsedLu2]                ; "# buckets used:    %lu (%.2f%%)\\n"
000000000000dcb3         mov        rcx, r13
000000000000dcb6         mov        rdi, r12
000000000000dcb9         mov        esi, 0x1
000000000000dcbe         mov        eax, 0x1
000000000000dcc3         call       j___fprintf_chk                             ; __fprintf_chk
000000000000dcc8         add        rsp, 0x8
000000000000dccc         mov        rcx, rbx
000000000000dccf         mov        rdi, r12
000000000000dcd2         pop        rbx
000000000000dcd3         pop        rbp
000000000000dcd4         pop        r12
000000000000dcd6         pop        r13
000000000000dcd8         lea        rdx, qword [aMaxBucketLengt]                ; "max bucket length: %lu\\n"
000000000000dcdf         mov        esi, 0x1
000000000000dce4         xor        eax, eax
000000000000dce6         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
000000000000dceb         align      16

                     loc_dcf0:
000000000000dcf0         mov        rax, r13                                    ; CODE XREF=hash_print_statistics+151
000000000000dcf3         mov        rdx, r13
000000000000dcf6         pxor       xmm0, xmm0
000000000000dcfa         shr        rax, 0x1
000000000000dcfd         and        edx, 0x1
000000000000dd00         or         rax, rdx
000000000000dd03         test       rbp, rbp
000000000000dd06         cvtsi2sd   xmm0, rax
000000000000dd0b         addsd      xmm0, xmm0
000000000000dd0f         mulsd      xmm0, qword [float_1a050+8]                 ; 0x1a058
000000000000dd17         jns        loc_dc9f

                     loc_dd19:
000000000000dd19         mov        rax, rbp                                    ; CODE XREF=hash_print_statistics+173
000000000000dd1c         pxor       xmm1, xmm1
000000000000dd20         shr        rax, 0x1
000000000000dd23         and        ebp, 0x1
000000000000dd26         or         rax, rbp
000000000000dd29         cvtsi2sd   xmm1, rax
000000000000dd2e         addsd      xmm1, xmm1
000000000000dd32         jmp        loc_dca8
000000000000dd37         align      64                                          ; End of unwind block (FDE at 0x1cc0c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_lookup:
000000000000dd40         push       r12                                         ; Begin of unwind block (FDE at 0x1cc48), CODE XREF=seen_file+49
000000000000dd42         push       rbp
000000000000dd43         mov        r12, rdi
000000000000dd46         push       rbx
000000000000dd47         mov        rbp, rsi
000000000000dd4a         call       safe_hasher                                 ; safe_hasher
000000000000dd4f         mov        rsi, qword [rax]
000000000000dd52         test       rsi, rsi
000000000000dd55         je         loc_dd7d

000000000000dd57         mov        rbx, rax
000000000000dd5a         jmp        loc_dd63
000000000000dd5c         align      32

                     loc_dd60:
000000000000dd60         mov        rsi, qword [rbx]                            ; CODE XREF=hash_lookup+59

                     loc_dd63:
000000000000dd63         cmp        rsi, rbp                                    ; CODE XREF=hash_lookup+26
000000000000dd66         je         loc_dd7f

000000000000dd68         mov        rdi, rbp
000000000000dd6b         call       qword [r12+0x38]
000000000000dd70         test       al, al
000000000000dd72         jne        loc_dd90

000000000000dd74         mov        rbx, qword [rbx+8]
000000000000dd78         test       rbx, rbx
000000000000dd7b         jne        loc_dd60

                     loc_dd7d:
000000000000dd7d         xor        esi, esi                                    ; CODE XREF=hash_lookup+21

                     loc_dd7f:
000000000000dd7f         pop        rbx                                         ; CODE XREF=hash_lookup+38
000000000000dd80         mov        rax, rsi
000000000000dd83         pop        rbp
000000000000dd84         pop        r12
000000000000dd86         ret
                        ; endp
000000000000dd87         align      16

                     loc_dd90:
000000000000dd90         mov        rsi, qword [rbx]                            ; CODE XREF=hash_lookup+50
000000000000dd93         pop        rbx
000000000000dd94         pop        rbp
000000000000dd95         mov        rax, rsi
000000000000dd98         pop        r12
000000000000dd9a         ret
                        ; endp
000000000000dd9b         align      32                                          ; End of unwind block (FDE at 0x1cc48)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_first:
000000000000dda0         cmp        qword [rdi+0x20], 0x0                       ; Begin of unwind block (FDE at 0x1cc80)
000000000000dda5         je         loc_ddd3

000000000000dda7         mov        rdx, qword [rdi]
000000000000ddaa         mov        rcx, qword [rdi+8]
000000000000ddae         cmp        rdx, rcx
000000000000ddb1         jae        loc_ddd8

000000000000ddb3         mov        rax, qword [rdx]
000000000000ddb6         test       rax, rax
000000000000ddb9         jne        loc_ddd6

000000000000ddbb         nop        dword [rax+rax]

                     loc_ddc0:
000000000000ddc0         add        rdx, 0x10                                   ; CODE XREF=hash_get_first+47
000000000000ddc4         cmp        rdx, rcx
000000000000ddc7         jae        loc_ddd8

000000000000ddc9         mov        rax, qword [rdx]
000000000000ddcc         test       rax, rax
000000000000ddcf         je         loc_ddc0

000000000000ddd1         ret
                        ; endp

                     loc_ddd3:
000000000000ddd3         xor        eax, eax                                    ; CODE XREF=hash_get_first+5
000000000000ddd5         ret
                        ; endp

                     loc_ddd6:
000000000000ddd6         ret                                                    ; CODE XREF=hash_get_first+25
                        ; endp

                     loc_ddd8:
000000000000ddd8         sub        rsp, 0x8                                    ; CODE XREF=hash_get_first+17, hash_get_first+39
000000000000dddc         call       j_abort                                     ; abort
                        ; endp
000000000000dde1         align      16                                          ; End of unwind block (FDE at 0x1cc80)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_next:
000000000000ddf0         push       rbp                                         ; Begin of unwind block (FDE at 0x1cc94)
000000000000ddf1         push       rbx
000000000000ddf2         mov        rbp, rdi
000000000000ddf5         mov        rbx, rsi
000000000000ddf8         sub        rsp, 0x8
000000000000ddfc         call       safe_hasher                                 ; safe_hasher
000000000000de01         mov        rdx, rax
000000000000de04         mov        rcx, rax
000000000000de07         mov        rax, qword [rdx]
000000000000de0a         mov        rdx, qword [rdx+8]
000000000000de0e         cmp        rax, rbx
000000000000de11         je         loc_de29

000000000000de13         nop        dword [rax+rax]

                     loc_de18:
000000000000de18         test       rdx, rdx                                    ; CODE XREF=hash_get_next+55
000000000000de1b         je         loc_de2e

000000000000de1d         mov        rax, qword [rdx]
000000000000de20         mov        rdx, qword [rdx+8]
000000000000de24         cmp        rax, rbx
000000000000de27         jne        loc_de18

                     loc_de29:
000000000000de29         test       rdx, rdx                                    ; CODE XREF=hash_get_next+33
000000000000de2c         jne        loc_de58

                     loc_de2e:
000000000000de2e         mov        rdx, qword [rbp+8]                          ; CODE XREF=hash_get_next+43
000000000000de32         jmp        loc_de40
000000000000de34         align      8

                     loc_de38:
000000000000de38         mov        rax, qword [rcx]                            ; CODE XREF=hash_get_next+87
000000000000de3b         test       rax, rax
000000000000de3e         jne        loc_de4b

                     loc_de40:
000000000000de40         add        rcx, 0x10                                   ; CODE XREF=hash_get_next+66
000000000000de44         cmp        rdx, rcx
000000000000de47         ja         loc_de38

000000000000de49         xor        eax, eax

                     loc_de4b:
000000000000de4b         add        rsp, 0x8                                    ; CODE XREF=hash_get_next+78
000000000000de4f         pop        rbx
000000000000de50         pop        rbp
000000000000de51         ret
                        ; endp
000000000000de52         align      8

                     loc_de58:
000000000000de58         mov        rax, qword [rdx]                            ; CODE XREF=hash_get_next+60
000000000000de5b         add        rsp, 0x8
000000000000de5f         pop        rbx
000000000000de60         pop        rbp
000000000000de61         ret
                        ; endp
000000000000de62         align      16                                          ; End of unwind block (FDE at 0x1cc94)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_get_entries:
000000000000de70         mov        r9, qword [rdi]                             ; Begin of unwind block (FDE at 0x1ccc8)
000000000000de73         cmp        qword [rdi+8], r9
000000000000de77         jbe        loc_ded2

000000000000de79         xor        r8d, r8d

                     loc_de7c:
000000000000de7c         mov        rcx, qword [r9]                             ; CODE XREF=hash_get_entries+85
000000000000de7f         test       rcx, rcx
000000000000de82         je         loc_debd

000000000000de84         cmp        rdx, r8
000000000000de87         jbe        loc_dec7

000000000000de89         mov        qword [rsi+r8*8], rcx
000000000000de8d         mov        rcx, qword [r9+8]
000000000000de91         lea        rax, qword [r8+1]
000000000000de95         test       rcx, rcx
000000000000de98         je         loc_deba

000000000000de9a         nop        word [rax+rax]

                     loc_dea0:
000000000000dea0         cmp        rdx, rax                                    ; CODE XREF=hash_get_entries+72
000000000000dea3         je         loc_ded0

000000000000dea5         mov        r8, qword [rcx]
000000000000dea8         add        rax, 0x1
000000000000deac         mov        qword [rsi+rax*8-8], r8
000000000000deb1         mov        rcx, qword [rcx+8]
000000000000deb5         test       rcx, rcx
000000000000deb8         jne        loc_dea0

                     loc_deba:
000000000000deba         mov        r8, rax                                     ; CODE XREF=hash_get_entries+40

                     loc_debd:
000000000000debd         add        r9, 0x10                                    ; CODE XREF=hash_get_entries+18
000000000000dec1         cmp        qword [rdi+8], r9
000000000000dec5         ja         loc_de7c

                     loc_dec7:
000000000000dec7         mov        rax, r8                                     ; CODE XREF=hash_get_entries+23
000000000000deca         ret
                        ; endp
000000000000decb         align      16

                     loc_ded0:
000000000000ded0         ret                                                    ; CODE XREF=hash_get_entries+51
                        ; endp

                     loc_ded2:
000000000000ded2         xor        eax, eax                                    ; CODE XREF=hash_get_entries+7
000000000000ded4         ret
                        ; endp
000000000000ded5         align      32                                          ; End of unwind block (FDE at 0x1ccc8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_do_for_each:
000000000000dee0         push       r15                                         ; Begin of unwind block (FDE at 0x1ccdc)
000000000000dee2         push       r14
000000000000dee4         push       r13
000000000000dee6         push       r12
000000000000dee8         push       rbp
000000000000dee9         push       rbx
000000000000deea         sub        rsp, 0x8
000000000000deee         mov        r14, qword [rdi]
000000000000def1         cmp        qword [rdi+8], r14
000000000000def5         jbe        loc_df46

000000000000def7         mov        r13, rdx
000000000000defa         mov        r12, rsi
000000000000defd         mov        r15, rdi
000000000000df00         xor        ebp, ebp

                     loc_df02:
000000000000df02         mov        rdi, qword [r14]                            ; CODE XREF=hash_do_for_each+82
000000000000df05         test       rdi, rdi
000000000000df08         je         loc_df2a

000000000000df0a         mov        rbx, r14
000000000000df0d         jmp        loc_df13
000000000000df0f         align      16

                     loc_df10:
000000000000df10         mov        rdi, qword [rbx]                            ; CODE XREF=hash_do_for_each+72

                     loc_df13:
000000000000df13         mov        rsi, r13                                    ; CODE XREF=hash_do_for_each+45
000000000000df16         call       r12
000000000000df19         test       al, al
000000000000df1b         je         loc_df34

000000000000df1d         mov        rbx, qword [rbx+8]
000000000000df21         add        rbp, 0x1
000000000000df25         test       rbx, rbx
000000000000df28         jne        loc_df10

                     loc_df2a:
000000000000df2a         add        r14, 0x10                                   ; CODE XREF=hash_do_for_each+40
000000000000df2e         cmp        qword [r15+8], r14
000000000000df32         ja         loc_df02

                     loc_df34:
000000000000df34         add        rsp, 0x8                                    ; CODE XREF=hash_do_for_each+59, hash_do_for_each+104
000000000000df38         mov        rax, rbp
000000000000df3b         pop        rbx
000000000000df3c         pop        rbp
000000000000df3d         pop        r12
000000000000df3f         pop        r13
000000000000df41         pop        r14
000000000000df43         pop        r15
000000000000df45         ret
                        ; endp

                     loc_df46:
000000000000df46         xor        ebp, ebp                                    ; CODE XREF=hash_do_for_each+21
000000000000df48         jmp        loc_df34
000000000000df4a         align      16                                          ; End of unwind block (FDE at 0x1ccdc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_string:
000000000000df50         movzx      ecx, byte [rdi]                             ; Begin of unwind block (FDE at 0x1cd28)
000000000000df53         xor        edx, edx
000000000000df55         test       cl, cl
000000000000df57         je         loc_df7d

000000000000df59         nop        dword [rax]

                     loc_df60:
000000000000df60         mov        rax, rdx                                    ; CODE XREF=hash_string+43
000000000000df63         add        rdi, 0x1
000000000000df67         shl        rax, 0x5
000000000000df6b         sub        rax, rdx
000000000000df6e         xor        edx, edx
000000000000df70         add        rax, rcx
000000000000df73         movzx      ecx, byte [rdi]
000000000000df76         div        rsi
000000000000df79         test       cl, cl
000000000000df7b         jne        loc_df60

                     loc_df7d:
000000000000df7d         mov        rax, rdx                                    ; CODE XREF=hash_string+7
000000000000df80         ret
                        ; endp
000000000000df81         align      16                                          ; End of unwind block (FDE at 0x1cd28)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_reset_tuning:
000000000000df90         movabs     rax, 0x3f80000000000000                     ; Begin of unwind block (FDE at 0x1cd3c)
000000000000df9a         mov        byte [rdi+0x10], 0x0
000000000000df9e         mov        qword [rdi], rax
000000000000dfa1         movabs     rax, 0x3fb4fdf43f4ccccd
000000000000dfab         mov        qword [rdi+8], rax
000000000000dfaf         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_initialize:
000000000000dfb0         push       r15                                         ; End of unwind block (FDE at 0x1cd3c), Begin of unwind block (FDE at 0x1cd50), CODE XREF=main+3064, canonicalize_filename_mode+1282
000000000000dfb2         push       r14
000000000000dfb4         lea        rax, qword [raw_hasher]                     ; raw_hasher
000000000000dfbb         push       r13
000000000000dfbd         push       r12
000000000000dfbf         mov        r12, rdx
000000000000dfc2         push       rbp
000000000000dfc3         push       rbx
000000000000dfc4         mov        r13, rcx
000000000000dfc7         mov        rbp, rdi
000000000000dfca         mov        edi, 0x50
000000000000dfcf         mov        r15, rsi
000000000000dfd2         sub        rsp, 0x8
000000000000dfd6         test       rdx, rdx
000000000000dfd9         mov        r14, r8
000000000000dfdc         cmove      r12, rax
000000000000dfe0         lea        rax, qword [raw_comparator]                 ; raw_comparator
000000000000dfe7         test       rcx, rcx
000000000000dfea         cmove      r13, rax
000000000000dfee         call       sub_3888                                    ; sub_3888
000000000000dff3         test       rax, rax
000000000000dff6         mov        rbx, rax
000000000000dff9         je         loc_e0aa

000000000000dfff         test       r15, r15
000000000000e002         lea        rdi, qword [rax+0x28]
000000000000e006         je         loc_e0c0

000000000000e00c         mov        qword [rax+0x28], r15
000000000000e010         call       check_tuning.isra.0                         ; check_tuning.isra.0
000000000000e015         test       al, al
000000000000e017         je         loc_e0a0

000000000000e01d         cmp        byte [r15+0x10], 0x0
000000000000e022         je         loc_e120

                     loc_e028:
000000000000e028         mov        rdi, rbp                                    ; CODE XREF=hash_initialize+362, hash_initialize+421
000000000000e02b         call       next_prime                                  ; next_prime
000000000000e030         mov        edx, 0x8
000000000000e035         mov        rbp, rax
000000000000e038         xor        ecx, ecx
000000000000e03a         mov        rax, rdx
000000000000e03d         mul        rbp
000000000000e040         jo         loc_e15a

                     loc_e046:
000000000000e046         test       rax, rax                                    ; CODE XREF=hash_initialize+431
000000000000e049         js         loc_e0a0

000000000000e04b         test       rcx, rcx
000000000000e04e         jne        loc_e0a0

000000000000e050         test       rbp, rbp
000000000000e053         mov        qword [rbx+0x10], rbp
000000000000e057         je         loc_e0a0

000000000000e059         mov        esi, 0x10                                   ; argument "__size" for method j_calloc
000000000000e05e         mov        rdi, rbp                                    ; argument "__nmemb" for method j_calloc
000000000000e061         call       j_calloc                                    ; calloc
000000000000e066         test       rax, rax
000000000000e069         mov        qword [rbx], rax
000000000000e06c         je         loc_e0a0

000000000000e06e         shl        rbp, 0x4
000000000000e072         mov        qword [rbx+0x18], 0x0
000000000000e07a         mov        qword [rbx+0x20], 0x0
000000000000e082         add        rbp, rax
000000000000e085         mov        qword [rbx+0x30], r12
000000000000e089         mov        qword [rbx+0x38], r13
000000000000e08d         mov        qword [rbx+8], rbp
000000000000e091         mov        qword [rbx+0x40], r14
000000000000e095         mov        qword [rbx+0x48], 0x0
000000000000e09d         jmp        loc_e0aa
000000000000e09f         align      32

                     loc_e0a0:
000000000000e0a0         mov        rdi, rbx                                    ; CODE XREF=hash_initialize+103, hash_initialize+153, hash_initialize+158, hash_initialize+167, hash_initialize+188, hash_initialize+298, hash_initialize+325
000000000000e0a3         xor        ebx, ebx
000000000000e0a5         call       sub_3880                                    ; sub_3880

                     loc_e0aa:
000000000000e0aa         add        rsp, 0x8                                    ; CODE XREF=hash_initialize+73, hash_initialize+237
000000000000e0ae         mov        rax, rbx
000000000000e0b1         pop        rbx
000000000000e0b2         pop        rbp
000000000000e0b3         pop        r12
000000000000e0b5         pop        r13
000000000000e0b7         pop        r14
000000000000e0b9         pop        r15
000000000000e0bb         ret
                        ; endp
000000000000e0bc         align      64

                     loc_e0c0:
000000000000e0c0         lea        rax, qword [default_tuning]                 ; default_tuning, CODE XREF=hash_initialize+86
000000000000e0c7         mov        qword [rbx+0x28], rax
000000000000e0cb         call       check_tuning.isra.0                         ; check_tuning.isra.0
000000000000e0d0         test       al, al
000000000000e0d2         movss      xmm1, dword [float_1a048]                   ; float_1a048
000000000000e0da         je         loc_e0a0

000000000000e0dc         test       rbp, rbp
000000000000e0df         js         loc_e12b

                     loc_e0e1:
000000000000e0e1         pxor       xmm0, xmm0                                  ; CODE XREF=hash_initialize+377
000000000000e0e5         cvtsi2ss   xmm0, rbp

                     loc_e0ea:
000000000000e0ea         divss      xmm0, xmm1                                  ; CODE XREF=hash_initialize+404
000000000000e0ee         ucomiss    xmm0, dword [float_1a04c]                   ; float_1a04c
000000000000e0f5         jae        loc_e0a0

000000000000e0f7         ucomiss    xmm0, dword [float_1a050]                   ; float_1a050
000000000000e0fe         jb         loc_e150

000000000000e100         subss      xmm0, dword [float_1a050]                   ; float_1a050
000000000000e108         movabs     rax, 0x8000000000000000
000000000000e112         cvttss2si  rbp, xmm0
000000000000e117         xor        rbp, rax
000000000000e11a         jmp        loc_e028
000000000000e11f         align      32

                     loc_e120:
000000000000e120         test       rbp, rbp                                    ; CODE XREF=hash_initialize+114
000000000000e123         movss      xmm1, dword [r15+8]
000000000000e129         jns        loc_e0e1

                     loc_e12b:
000000000000e12b         mov        rax, rbp                                    ; CODE XREF=hash_initialize+303
000000000000e12e         pxor       xmm0, xmm0
000000000000e132         shr        rax, 0x1
000000000000e135         and        ebp, 0x1
000000000000e138         or         rax, rbp
000000000000e13b         cvtsi2ss   xmm0, rax
000000000000e140         addss      xmm0, xmm0
000000000000e144         jmp        loc_e0ea
000000000000e146         align      16

                     loc_e150:
000000000000e150         cvttss2si  rbp, xmm0                                   ; CODE XREF=hash_initialize+334
000000000000e155         jmp        loc_e028

                     loc_e15a:
000000000000e15a         mov        ecx, 0x1                                    ; CODE XREF=hash_initialize+144
000000000000e15f         jmp        loc_e046
000000000000e164         align      16                                          ; End of unwind block (FDE at 0x1cd50)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_clear:
000000000000e170         push       r12                                         ; Begin of unwind block (FDE at 0x1cd9c)
000000000000e172         push       rbp
000000000000e173         mov        rbp, rdi
000000000000e176         push       rbx
000000000000e177         mov        r12, qword [rdi]
000000000000e17a         cmp        r12, qword [rdi+8]
000000000000e17e         jae        loc_e1eb

                     loc_e180:
000000000000e180         cmp        qword [r12], 0x0                            ; CODE XREF=hash_clear+121
000000000000e185         je         loc_e1e1

000000000000e187         mov        rbx, qword [r12+8]
000000000000e18c         mov        rax, qword [rbp+0x40]
000000000000e190         test       rbx, rbx
000000000000e193         je         loc_e1c5

000000000000e195         nop        dword [rax]

                     loc_e198:
000000000000e198         test       rax, rax                                    ; CODE XREF=hash_clear+83
000000000000e19b         je         loc_e1a6

000000000000e19d         mov        rdi, qword [rbx]
000000000000e1a0         call       rax
000000000000e1a2         mov        rax, qword [rbp+0x40]

                     loc_e1a6:
000000000000e1a6         mov        rdx, qword [rbx+8]                          ; CODE XREF=hash_clear+43
000000000000e1aa         mov        rcx, qword [rbp+0x48]
000000000000e1ae         mov        qword [rbx], 0x0
000000000000e1b5         test       rdx, rdx
000000000000e1b8         mov        qword [rbx+8], rcx
000000000000e1bc         mov        qword [rbp+0x48], rbx
000000000000e1c0         mov        rbx, rdx
000000000000e1c3         jne        loc_e198

                     loc_e1c5:
000000000000e1c5         test       rax, rax                                    ; CODE XREF=hash_clear+35
000000000000e1c8         je         loc_e1d0

000000000000e1ca         mov        rdi, qword [r12]
000000000000e1ce         call       rax

                     loc_e1d0:
000000000000e1d0         mov        qword [r12], 0x0                            ; CODE XREF=hash_clear+88
000000000000e1d8         mov        qword [r12+8], 0x0

                     loc_e1e1:
000000000000e1e1         add        r12, 0x10                                   ; CODE XREF=hash_clear+21
000000000000e1e5         cmp        qword [rbp+8], r12
000000000000e1e9         ja         loc_e180

                     loc_e1eb:
000000000000e1eb         mov        qword [rbp+0x18], 0x0                       ; CODE XREF=hash_clear+14
000000000000e1f3         mov        qword [rbp+0x20], 0x0
000000000000e1fb         pop        rbx
000000000000e1fc         pop        rbp
000000000000e1fd         pop        r12
000000000000e1ff         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hash_free:
000000000000e200         push       r12                                         ; End of unwind block (FDE at 0x1cd9c), Begin of unwind block (FDE at 0x1cdc8), CODE XREF=main+3625, canonicalize_filename_mode+537, canonicalize_filename_mode+915
000000000000e202         push       rbp
000000000000e203         mov        r12, rdi
000000000000e206         push       rbx
000000000000e207         cmp        qword [rdi+0x40], 0x0
000000000000e20c         mov        rbp, qword [rdi]
000000000000e20f         mov        rax, qword [rdi+8]
000000000000e213         je         loc_e263

000000000000e215         cmp        qword [rdi+0x20], 0x0
000000000000e21a         je         loc_e263

000000000000e21c         cmp        rbp, rax
000000000000e21f         jae        loc_e29c

000000000000e221         nop        dword [rax]

                     loc_e228:
000000000000e228         mov        rdi, qword [rbp]                            ; CODE XREF=hash_free+93
000000000000e22c         test       rdi, rdi
000000000000e22f         je         loc_e256

000000000000e231         mov        rbx, rbp
000000000000e234         jmp        loc_e243
000000000000e236         align      64

                     loc_e240:
000000000000e240         mov        rdi, qword [rbx]                            ; CODE XREF=hash_free+79

                     loc_e243:
000000000000e243         call       qword [r12+0x40]                            ; CODE XREF=hash_free+52
000000000000e248         mov        rbx, qword [rbx+8]
000000000000e24c         test       rbx, rbx
000000000000e24f         jne        loc_e240

000000000000e251         mov        rax, qword [r12+8]

                     loc_e256:
000000000000e256         add        rbp, 0x10                                   ; CODE XREF=hash_free+47
000000000000e25a         cmp        rax, rbp
000000000000e25d         ja         loc_e228

000000000000e25f         mov        rbp, qword [r12]

                     loc_e263:
000000000000e263         cmp        rbp, rax                                    ; CODE XREF=hash_free+19, hash_free+26
000000000000e266         jae        loc_e29c

000000000000e268         nop        dword [rax+rax]

                     loc_e270:
000000000000e270         mov        rdi, qword [rbp+8]                          ; CODE XREF=hash_free+154
000000000000e274         test       rdi, rdi
000000000000e277         je         loc_e291

000000000000e279         nop        dword [rax]

                     loc_e280:
000000000000e280         mov        rbx, qword [rdi+8]                          ; CODE XREF=hash_free+143
000000000000e284         call       sub_3880                                    ; sub_3880
000000000000e289         test       rbx, rbx
000000000000e28c         mov        rdi, rbx
000000000000e28f         jne        loc_e280

                     loc_e291:
000000000000e291         add        rbp, 0x10                                   ; CODE XREF=hash_free+119
000000000000e295         cmp        qword [r12+8], rbp
000000000000e29a         ja         loc_e270

                     loc_e29c:
000000000000e29c         mov        rdi, qword [r12+0x48]                       ; CODE XREF=hash_free+31, hash_free+102
000000000000e2a1         test       rdi, rdi
000000000000e2a4         je         loc_e2c1

000000000000e2a6         nop        word [cs:rax+rax]

                     loc_e2b0:
000000000000e2b0         mov        rbx, qword [rdi+8]                          ; CODE XREF=hash_free+191
000000000000e2b4         call       sub_3880                                    ; sub_3880
000000000000e2b9         test       rbx, rbx
000000000000e2bc         mov        rdi, rbx
000000000000e2bf         jne        loc_e2b0

                     loc_e2c1:
000000000000e2c1         mov        rdi, qword [r12]                            ; CODE XREF=hash_free+164
000000000000e2c5         call       sub_3880                                    ; sub_3880
000000000000e2ca         pop        rbx
000000000000e2cb         mov        rdi, r12
000000000000e2ce         pop        rbp
000000000000e2cf         pop        r12
000000000000e2d1         jmp        sub_3880                                    ; sub_3880
                        ; endp
000000000000e2d6         align      32                                          ; End of unwind block (FDE at 0x1cdc8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120


                     hash_rehash:
000000000000e2e0         push       r12                                         ; Begin of unwind block (FDE at 0x1cdf4), CODE XREF=hash_insert_if_absent+443, hash_delete+271
000000000000e2e2         push       rbp
000000000000e2e3         mov        rbp, rdi
000000000000e2e6         push       rbx
000000000000e2e7         sub        rsp, 0x60
000000000000e2eb         mov        r12, qword [rdi+0x28]
000000000000e2ef         mov        rax, qword [fs:0x28]
000000000000e2f8         mov        qword [rsp+0x78+var_20], rax
000000000000e2fd         xor        eax, eax
000000000000e2ff         cmp        byte [r12+0x10], 0x0
000000000000e305         jne        loc_e358

000000000000e307         test       rsi, rsi
000000000000e30a         js         loc_e488

000000000000e310         pxor       xmm0, xmm0
000000000000e314         cvtsi2ss   xmm0, rsi

                     loc_e319:
000000000000e319         divss      xmm0, dword [r12+8]                         ; CODE XREF=hash_rehash+449
000000000000e320         ucomiss    xmm0, dword [float_1a04c]                   ; float_1a04c
000000000000e327         jae        loc_e460

000000000000e32d         ucomiss    xmm0, dword [float_1a050]                   ; float_1a050
000000000000e334         jb         loc_e4b0

000000000000e33a         subss      xmm0, dword [float_1a050]                   ; float_1a050
000000000000e342         movabs     rax, 0x8000000000000000
000000000000e34c         cvttss2si  rsi, xmm0
000000000000e351         xor        rsi, rax
000000000000e354         nop        dword [rax]

                     loc_e358:
000000000000e358         mov        rdi, rsi                                    ; CODE XREF=hash_rehash+37, hash_rehash+469
000000000000e35b         call       next_prime                                  ; next_prime
000000000000e360         mov        edx, 0x8
000000000000e365         mov        rbx, rax
000000000000e368         xor        ecx, ecx
000000000000e36a         mov        rax, rdx
000000000000e36d         mul        rbx
000000000000e370         jo         loc_e50f

                     loc_e376:
000000000000e376         test       rax, rax                                    ; CODE XREF=hash_rehash+564
000000000000e379         mov        eax, 0x1
000000000000e37e         cmovs      rcx, rax
000000000000e382         test       rbx, rbx
000000000000e385         je         loc_e460

000000000000e38b         and        ecx, 0x1
000000000000e38e         jne        loc_e460

000000000000e394         cmp        qword [rbp+0x10], rbx
000000000000e398         je         loc_e4c0

000000000000e39e         mov        esi, 0x10                                   ; argument "__size" for method j_calloc
000000000000e3a3         mov        rdi, rbx                                    ; argument "__nmemb" for method j_calloc
000000000000e3a6         call       j_calloc                                    ; calloc
000000000000e3ab         test       rax, rax
000000000000e3ae         mov        qword [rsp+0x78+var_78], rax
000000000000e3b2         je         loc_e460

000000000000e3b8         mov        qword [rsp+0x78+var_68], rbx
000000000000e3bd         shl        rbx, 0x4
000000000000e3c1         mov        qword [rsp+0x78+var_50], r12
000000000000e3c6         add        rbx, rax
000000000000e3c9         mov        rax, qword [rbp+0x30]
000000000000e3cd         mov        r12, rsp
000000000000e3d0         xor        edx, edx
000000000000e3d2         mov        rsi, rbp
000000000000e3d5         mov        rdi, r12
000000000000e3d8         mov        qword [rsp+0x78+var_70], rbx
000000000000e3dd         mov        qword [rsp+0x78+var_60], 0x0
000000000000e3e6         mov        qword [rsp+0x78+var_48], rax
000000000000e3eb         mov        rax, qword [rbp+0x38]
000000000000e3ef         mov        qword [rsp+0x78+var_58], 0x0
000000000000e3f8         mov        qword [rsp+0x78+var_40], rax
000000000000e3fd         mov        rax, qword [rbp+0x40]
000000000000e401         mov        qword [rsp+0x78+var_38], rax
000000000000e406         mov        rax, qword [rbp+0x48]
000000000000e40a         mov        qword [rsp+0x78+var_30], rax
000000000000e40f         call       transfer_entries                            ; transfer_entries
000000000000e414         test       al, al
000000000000e416         mov        ebx, eax
000000000000e418         jne        loc_e4d0

000000000000e41e         mov        rax, qword [rsp+0x78+var_30]
000000000000e423         mov        edx, 0x1
000000000000e428         mov        rsi, r12
000000000000e42b         mov        rdi, rbp
000000000000e42e         mov        qword [rbp+0x48], rax
000000000000e432         call       transfer_entries                            ; transfer_entries
000000000000e437         test       al, al
000000000000e439         je         loc_e519

000000000000e43f         xor        edx, edx
000000000000e441         mov        rsi, r12
000000000000e444         mov        rdi, rbp
000000000000e447         call       transfer_entries                            ; transfer_entries
000000000000e44c         test       al, al
000000000000e44e         je         loc_e519

000000000000e454         mov        rdi, qword [rsp+0x78+var_78]
000000000000e458         call       sub_3880                                    ; sub_3880
000000000000e45d         jmp        loc_e462
000000000000e45f         align      32

                     loc_e460:
000000000000e460         xor        ebx, ebx                                    ; CODE XREF=hash_rehash+71, hash_rehash+165, hash_rehash+174, hash_rehash+210

                     loc_e462:
000000000000e462         mov        rcx, qword [rsp+0x78+var_20]                ; CODE XREF=hash_rehash+381, hash_rehash+485, hash_rehash+549
000000000000e467         xor        rcx, qword [fs:0x28]
000000000000e470         mov        eax, ebx
000000000000e472         jne        loc_e50a

000000000000e478         add        rsp, 0x60
000000000000e47c         pop        rbx
000000000000e47d         pop        rbp
000000000000e47e         pop        r12
000000000000e480         ret
                        ; endp
000000000000e481         align      8

                     loc_e488:
000000000000e488         mov        rax, rsi                                    ; CODE XREF=hash_rehash+42
000000000000e48b         pxor       xmm0, xmm0
000000000000e48f         shr        rax, 0x1
000000000000e492         and        esi, 0x1
000000000000e495         or         rax, rsi
000000000000e498         cvtsi2ss   xmm0, rax
000000000000e49d         addss      xmm0, xmm0
000000000000e4a1         jmp        loc_e319
000000000000e4a6         align      16

                     loc_e4b0:
000000000000e4b0         cvttss2si  rsi, xmm0                                   ; CODE XREF=hash_rehash+84
000000000000e4b5         jmp        loc_e358
000000000000e4ba         align      64

                     loc_e4c0:
000000000000e4c0         mov        ebx, 0x1                                    ; CODE XREF=hash_rehash+184
000000000000e4c5         jmp        loc_e462
000000000000e4c7         align      16

                     loc_e4d0:
000000000000e4d0         mov        rdi, qword [rbp]                            ; CODE XREF=hash_rehash+312
000000000000e4d4         call       sub_3880                                    ; sub_3880
000000000000e4d9         mov        rax, qword [rsp+0x78+var_78]
000000000000e4dd         mov        qword [rbp], rax
000000000000e4e1         mov        rax, qword [rsp+0x78+var_70]
000000000000e4e6         mov        qword [rbp+8], rax
000000000000e4ea         mov        rax, qword [rsp+0x78+var_68]
000000000000e4ef         mov        qword [rbp+0x10], rax
000000000000e4f3         mov        rax, qword [rsp+0x78+var_60]
000000000000e4f8         mov        qword [rbp+0x18], rax
000000000000e4fc         mov        rax, qword [rsp+0x78+var_30]
000000000000e501         mov        qword [rbp+0x48], rax
000000000000e505         jmp        loc_e462

                     loc_e50a:
000000000000e50a         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_rehash+402
                        ; endp

                     loc_e50f:
000000000000e50f         mov        ecx, 0x1                                    ; CODE XREF=hash_rehash+144
000000000000e514         jmp        loc_e376

                     loc_e519:
000000000000e519         call       j_abort                                     ; abort, CODE XREF=hash_rehash+345, hash_rehash+366
                        ; endp
000000000000e51e         align      32                                          ; End of unwind block (FDE at 0x1cdf4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56


                     hash_insert_if_absent:
000000000000e520         push       r13                                         ; Begin of unwind block (FDE at 0x1ce2c), CODE XREF=hash_insert+27
000000000000e522         push       r12
000000000000e524         push       rbp
000000000000e525         push       rbx
000000000000e526         sub        rsp, 0x18
000000000000e52a         mov        rax, qword [fs:0x28]
000000000000e533         mov        qword [rsp+0x38+var_30], rax
000000000000e538         xor        eax, eax
000000000000e53a         test       rsi, rsi
000000000000e53d         je         loc_e6fd

000000000000e543         mov        r12, rsp
000000000000e546         xor        ecx, ecx
000000000000e548         mov        r13, rdx
000000000000e54b         mov        rdx, r12
000000000000e54e         mov        rbx, rdi
000000000000e551         mov        rbp, rsi
000000000000e554         call       hash_find_entry                             ; hash_find_entry
000000000000e559         test       rax, rax
000000000000e55c         mov        rdx, rax
000000000000e55f         je         loc_e590

000000000000e561         xor        eax, eax
000000000000e563         test       r13, r13
000000000000e566         je         loc_e56c

000000000000e568         mov        qword [r13], rdx

                     loc_e56c:
000000000000e56c         mov        rcx, qword [rsp+0x38+var_30]                ; CODE XREF=hash_insert_if_absent+70, hash_insert_if_absent+233, hash_insert_if_absent+507, hash_insert_if_absent+536
000000000000e571         xor        rcx, qword [fs:0x28]
000000000000e57a         jne        loc_e79f

000000000000e580         add        rsp, 0x18
000000000000e584         pop        rbx
000000000000e585         pop        rbp
000000000000e586         pop        r12
000000000000e588         pop        r13
000000000000e58a         ret
                        ; endp
000000000000e58b         align      16

                     loc_e590:
000000000000e590         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_insert_if_absent+63
000000000000e594         test       rax, rax
000000000000e597         js         loc_e610

000000000000e599         pxor       xmm1, xmm1
000000000000e59d         mov        rdx, qword [rbx+0x28]
000000000000e5a1         cvtsi2ss   xmm1, rax
000000000000e5a6         mov        rax, qword [rbx+0x10]
000000000000e5aa         test       rax, rax
000000000000e5ad         js         loc_e63a

                     loc_e5b3:
000000000000e5b3         pxor       xmm0, xmm0                                  ; CODE XREF=hash_insert_if_absent+276
000000000000e5b7         cvtsi2ss   xmm0, rax

                     loc_e5bc:
000000000000e5bc         mulss      xmm0, dword [rdx+8]                         ; CODE XREF=hash_insert_if_absent+307
000000000000e5c1         ucomiss    xmm1, xmm0
000000000000e5c4         ja         loc_e660

                     loc_e5ca:
000000000000e5ca         mov        r12, qword [rsp+0x38+var_38]                ; CODE XREF=hash_insert_if_absent+392, hash_insert_if_absent+471
000000000000e5ce         cmp        qword [r12], 0x0
000000000000e5d3         je         loc_e708

000000000000e5d9         mov        rax, qword [rbx+0x48]
000000000000e5dd         test       rax, rax
000000000000e5e0         je         loc_e720

000000000000e5e6         mov        rdx, qword [rax+8]
000000000000e5ea         mov        qword [rbx+0x48], rdx

                     loc_e5ee:
000000000000e5ee         mov        rdx, qword [r12+8]                          ; CODE XREF=hash_insert_if_absent+525
000000000000e5f3         mov        qword [rax], rbp
000000000000e5f6         mov        qword [rax+8], rdx
000000000000e5fa         mov        qword [r12+8], rax
000000000000e5ff         mov        eax, 0x1
000000000000e604         add        qword [rbx+0x20], 0x1
000000000000e609         jmp        loc_e56c
000000000000e60e         align      16

                     loc_e610:
000000000000e610         mov        rdx, rax                                    ; CODE XREF=hash_insert_if_absent+119
000000000000e613         pxor       xmm1, xmm1
000000000000e617         and        eax, 0x1
000000000000e61a         shr        rdx, 0x1
000000000000e61d         or         rdx, rax
000000000000e620         mov        rax, qword [rbx+0x10]
000000000000e624         cvtsi2ss   xmm1, rdx
000000000000e629         mov        rdx, qword [rbx+0x28]
000000000000e62d         test       rax, rax
000000000000e630         addss      xmm1, xmm1
000000000000e634         jns        loc_e5b3

                     loc_e63a:
000000000000e63a         mov        rcx, rax                                    ; CODE XREF=hash_insert_if_absent+141
000000000000e63d         pxor       xmm0, xmm0
000000000000e641         shr        rcx, 0x1
000000000000e644         and        eax, 0x1
000000000000e647         or         rcx, rax
000000000000e64a         cvtsi2ss   xmm0, rcx
000000000000e64f         addss      xmm0, xmm0
000000000000e653         jmp        loc_e5bc
000000000000e658         align      32

                     loc_e660:
000000000000e660         lea        rdi, qword [rbx+0x28]                       ; CODE XREF=hash_insert_if_absent+164
000000000000e664         call       check_tuning.isra.0                         ; check_tuning.isra.0
000000000000e669         mov        rax, qword [rbx+0x10]
000000000000e66d         mov        rdx, qword [rbx+0x28]
000000000000e671         test       rax, rax
000000000000e674         movss      xmm2, dword [rdx+8]
000000000000e679         js         loc_e740

000000000000e67f         pxor       xmm0, xmm0
000000000000e683         cvtsi2ss   xmm0, rax

                     loc_e688:
000000000000e688         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_insert_if_absent+569
000000000000e68c         test       rax, rax
000000000000e68f         js         loc_e760

000000000000e695         pxor       xmm1, xmm1
000000000000e699         cvtsi2ss   xmm1, rax

                     loc_e69e:
000000000000e69e         movaps     xmm3, xmm2                                  ; CODE XREF=hash_insert_if_absent+601
000000000000e6a1         mulss      xmm3, xmm0
000000000000e6a5         ucomiss    xmm1, xmm3
000000000000e6a8         jbe        loc_e5ca

000000000000e6ae         cmp        byte [rdx+0x10], 0x0
000000000000e6b2         mulss      xmm0, dword [rdx+0xc]
000000000000e6b7         jne        loc_e6bd

000000000000e6b9         mulss      xmm0, xmm2

                     loc_e6bd:
000000000000e6bd         ucomiss    xmm0, dword [float_1a04c]                   ; float_1a04c, CODE XREF=hash_insert_if_absent+407
000000000000e6c4         jae        loc_e733

000000000000e6c6         ucomiss    xmm0, dword [float_1a050]                   ; float_1a050
000000000000e6cd         jae        loc_e780

000000000000e6d3         cvttss2si  rsi, xmm0

                     loc_e6d8:
000000000000e6d8         mov        rdi, rbx                                    ; CODE XREF=hash_insert_if_absent+634
000000000000e6db         call       hash_rehash                                 ; hash_rehash
000000000000e6e0         test       al, al
000000000000e6e2         je         loc_e733

000000000000e6e4         xor        ecx, ecx
000000000000e6e6         mov        rdx, r12
000000000000e6e9         mov        rsi, rbp
000000000000e6ec         mov        rdi, rbx
000000000000e6ef         call       hash_find_entry                             ; hash_find_entry
000000000000e6f4         test       rax, rax
000000000000e6f7         je         loc_e5ca

                     loc_e6fd:
000000000000e6fd         call       j_abort                                     ; abort, CODE XREF=hash_insert_if_absent+29
                        ; endp
000000000000e702         align      8

                     loc_e708:
000000000000e708         mov        qword [r12], rbp                            ; CODE XREF=hash_insert_if_absent+179
000000000000e70c         mov        eax, 0x1
000000000000e711         add        qword [rbx+0x20], 0x1
000000000000e716         add        qword [rbx+0x18], 0x1
000000000000e71b         jmp        loc_e56c

                     loc_e720:
000000000000e720         mov        edi, 0x10                                   ; CODE XREF=hash_insert_if_absent+192
000000000000e725         call       sub_3888                                    ; sub_3888
000000000000e72a         test       rax, rax
000000000000e72d         jne        loc_e5ee

                     loc_e733:
000000000000e733         mov        eax, 0xffffffff                             ; CODE XREF=hash_insert_if_absent+420, hash_insert_if_absent+450
000000000000e738         jmp        loc_e56c
000000000000e73d         align      64

                     loc_e740:
000000000000e740         mov        rcx, rax                                    ; CODE XREF=hash_insert_if_absent+345
000000000000e743         pxor       xmm0, xmm0
000000000000e747         shr        rcx, 0x1
000000000000e74a         and        eax, 0x1
000000000000e74d         or         rcx, rax
000000000000e750         cvtsi2ss   xmm0, rcx
000000000000e755         addss      xmm0, xmm0
000000000000e759         jmp        loc_e688
000000000000e75e         align      32

                     loc_e760:
000000000000e760         mov        rcx, rax                                    ; CODE XREF=hash_insert_if_absent+367
000000000000e763         pxor       xmm1, xmm1
000000000000e767         shr        rcx, 0x1
000000000000e76a         and        eax, 0x1
000000000000e76d         or         rcx, rax
000000000000e770         cvtsi2ss   xmm1, rcx
000000000000e775         addss      xmm1, xmm1
000000000000e779         jmp        loc_e69e
000000000000e77e         align      128

                     loc_e780:
000000000000e780         subss      xmm0, dword [float_1a050]                   ; float_1a050, CODE XREF=hash_insert_if_absent+429
000000000000e788         movabs     rax, 0x8000000000000000
000000000000e792         cvttss2si  rsi, xmm0
000000000000e797         xor        rsi, rax
000000000000e79a         jmp        loc_e6d8

                     loc_e79f:
000000000000e79f         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_insert_if_absent+90
                        ; endp
000000000000e7a4         align      16                                          ; End of unwind block (FDE at 0x1ce2c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24


                     hash_insert:
000000000000e7b0         push       rbx                                         ; Begin of unwind block (FDE at 0x1ce68), CODE XREF=print_dir+292, record_file+70
000000000000e7b1         mov        rbx, rsi
000000000000e7b4         sub        rsp, 0x10
000000000000e7b8         mov        rdx, rsp
000000000000e7bb         mov        rax, qword [fs:0x28]
000000000000e7c4         mov        qword [rsp+0x18+var_10], rax
000000000000e7c9         xor        eax, eax
000000000000e7cb         call       hash_insert_if_absent                       ; hash_insert_if_absent
000000000000e7d0         cmp        eax, 0xffffffff
000000000000e7d3         je         loc_e800

000000000000e7d5         test       eax, eax
000000000000e7d7         jne        loc_e7dd

000000000000e7d9         mov        rbx, qword [rsp+0x18+var_18]

                     loc_e7dd:
000000000000e7dd         mov        rcx, qword [rsp+0x18+var_10]                ; CODE XREF=hash_insert+39, hash_insert+82
000000000000e7e2         xor        rcx, qword [fs:0x28]
000000000000e7eb         mov        rax, rbx
000000000000e7ee         jne        loc_e804

000000000000e7f0         add        rsp, 0x10
000000000000e7f4         pop        rbx
000000000000e7f5         ret
                        ; endp
000000000000e7f6         align      2048

                     loc_e800:
000000000000e800         xor        ebx, ebx                                    ; CODE XREF=hash_insert+35
000000000000e802         jmp        loc_e7dd

                     loc_e804:
000000000000e804         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_insert+62
                        ; endp
000000000000e809         align      16                                          ; End of unwind block (FDE at 0x1ce68)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40


                     hash_delete:
000000000000e810         push       r12                                         ; Begin of unwind block (FDE at 0x1ce8c), CODE XREF=main+3506
000000000000e812         push       rbp
000000000000e813         mov        ecx, 0x1
000000000000e818         push       rbx
000000000000e819         mov        rbx, rdi
000000000000e81c         sub        rsp, 0x10
000000000000e820         mov        rdx, rsp
000000000000e823         mov        rax, qword [fs:0x28]
000000000000e82c         mov        qword [rsp+0x28+var_20], rax
000000000000e831         xor        eax, eax
000000000000e833         call       hash_find_entry                             ; hash_find_entry
000000000000e838         test       rax, rax
000000000000e83b         mov        rbp, rax
000000000000e83e         je         loc_e84f

000000000000e840         mov        rax, qword [rsp+0x28+var_28]
000000000000e844         sub        qword [rbx+0x20], 0x1
000000000000e849         cmp        qword [rax], 0x0
000000000000e84d         je         loc_e870

                     loc_e84f:
000000000000e84f         mov        rcx, qword [rsp+0x28+var_20]                ; CODE XREF=hash_delete+46, hash_delete+159, hash_delete+229, hash_delete+278, hash_delete+321
000000000000e854         xor        rcx, qword [fs:0x28]
000000000000e85d         mov        rax, rbp
000000000000e860         jne        loc_ea0e

000000000000e866         add        rsp, 0x10
000000000000e86a         pop        rbx
000000000000e86b         pop        rbp
000000000000e86c         pop        r12
000000000000e86e         ret
                        ; endp
000000000000e86f         align      16

                     loc_e870:
000000000000e870         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_delete+61
000000000000e874         sub        rax, 0x1
000000000000e878         test       rax, rax
000000000000e87b         mov        qword [rbx+0x18], rax
000000000000e87f         js         loc_e980

000000000000e885         pxor       xmm0, xmm0
000000000000e889         cvtsi2ss   xmm0, rax

                     loc_e88e:
000000000000e88e         mov        rax, qword [rbx+0x10]                       ; CODE XREF=hash_delete+393
000000000000e892         mov        rdx, qword [rbx+0x28]
000000000000e896         test       rax, rax
000000000000e899         js         loc_e960

000000000000e89f         pxor       xmm1, xmm1
000000000000e8a3         cvtsi2ss   xmm1, rax

                     loc_e8a8:
000000000000e8a8         mulss      xmm1, dword [rdx]                           ; CODE XREF=hash_delete+361
000000000000e8ac         ucomiss    xmm1, xmm0
000000000000e8af         jbe        loc_e84f

000000000000e8b1         lea        rdi, qword [rbx+0x28]
000000000000e8b5         call       check_tuning.isra.0                         ; check_tuning.isra.0
000000000000e8ba         mov        rax, qword [rbx+0x10]
000000000000e8be         mov        rdx, qword [rbx+0x28]
000000000000e8c2         test       rax, rax
000000000000e8c5         js         loc_e9f0

000000000000e8cb         pxor       xmm0, xmm0
000000000000e8cf         cvtsi2ss   xmm0, rax

                     loc_e8d4:
000000000000e8d4         mov        rax, qword [rbx+0x18]                       ; CODE XREF=hash_delete+505
000000000000e8d8         test       rax, rax
000000000000e8db         js         loc_e9d0

000000000000e8e1         pxor       xmm1, xmm1
000000000000e8e5         cvtsi2ss   xmm1, rax

                     loc_e8ea:
000000000000e8ea         movss      xmm2, dword [rdx]                           ; CODE XREF=hash_delete+473
000000000000e8ee         mulss      xmm2, xmm0
000000000000e8f2         ucomiss    xmm2, xmm1
000000000000e8f5         jbe        loc_e84f

000000000000e8fb         cmp        byte [rdx+0x10], 0x0
000000000000e8ff         mulss      xmm0, dword [rdx+4]
000000000000e904         je         loc_e9c0

                     loc_e90a:
000000000000e90a         ucomiss    xmm0, dword [float_1a050]                   ; float_1a050, CODE XREF=hash_delete+437
000000000000e911         jae        loc_e9a0

000000000000e917         cvttss2si  rsi, xmm0

                     loc_e91c:
000000000000e91c         mov        rdi, rbx                                    ; CODE XREF=hash_delete+426
000000000000e91f         call       hash_rehash                                 ; hash_rehash
000000000000e924         test       al, al
000000000000e926         jne        loc_e84f

000000000000e92c         mov        rdi, qword [rbx+0x48]
000000000000e930         test       rdi, rdi
000000000000e933         je         loc_e949

000000000000e935         nop        dword [rax]

                     loc_e938:
000000000000e938         mov        r12, qword [rdi+8]                          ; CODE XREF=hash_delete+311
000000000000e93c         call       sub_3880                                    ; sub_3880
000000000000e941         test       r12, r12
000000000000e944         mov        rdi, r12
000000000000e947         jne        loc_e938

                     loc_e949:
000000000000e949         mov        qword [rbx+0x48], 0x0                       ; CODE XREF=hash_delete+291
000000000000e951         jmp        loc_e84f
000000000000e956         align      32

                     loc_e960:
000000000000e960         mov        rcx, rax                                    ; CODE XREF=hash_delete+137
000000000000e963         pxor       xmm1, xmm1
000000000000e967         shr        rcx, 0x1
000000000000e96a         and        eax, 0x1
000000000000e96d         or         rcx, rax
000000000000e970         cvtsi2ss   xmm1, rcx
000000000000e975         addss      xmm1, xmm1
000000000000e979         jmp        loc_e8a8
000000000000e97e         align      128

                     loc_e980:
000000000000e980         mov        rdx, rax                                    ; CODE XREF=hash_delete+111
000000000000e983         pxor       xmm0, xmm0
000000000000e987         shr        rdx, 0x1
000000000000e98a         and        eax, 0x1
000000000000e98d         or         rdx, rax
000000000000e990         cvtsi2ss   xmm0, rdx
000000000000e995         addss      xmm0, xmm0
000000000000e999         jmp        loc_e88e
000000000000e99e         align      32

                     loc_e9a0:
000000000000e9a0         subss      xmm0, dword [float_1a050]                   ; float_1a050, CODE XREF=hash_delete+257
000000000000e9a8         movabs     rax, 0x8000000000000000
000000000000e9b2         cvttss2si  rsi, xmm0
000000000000e9b7         xor        rsi, rax
000000000000e9ba         jmp        loc_e91c
000000000000e9bf         align      64

                     loc_e9c0:
000000000000e9c0         mulss      xmm0, dword [rdx+8]                         ; CODE XREF=hash_delete+244
000000000000e9c5         jmp        loc_e90a
000000000000e9ca         align      16

                     loc_e9d0:
000000000000e9d0         mov        rcx, rax                                    ; CODE XREF=hash_delete+203
000000000000e9d3         pxor       xmm1, xmm1
000000000000e9d7         shr        rcx, 0x1
000000000000e9da         and        eax, 0x1
000000000000e9dd         or         rcx, rax
000000000000e9e0         cvtsi2ss   xmm1, rcx
000000000000e9e5         addss      xmm1, xmm1
000000000000e9e9         jmp        loc_e8ea
000000000000e9ee         align      16

                     loc_e9f0:
000000000000e9f0         mov        rcx, rax                                    ; CODE XREF=hash_delete+181
000000000000e9f3         pxor       xmm0, xmm0
000000000000e9f7         shr        rcx, 0x1
000000000000e9fa         and        eax, 0x1
000000000000e9fd         or         rcx, rax
000000000000ea00         cvtsi2ss   xmm0, rcx
000000000000ea05         addss      xmm0, xmm0
000000000000ea09         jmp        loc_e8d4

                     loc_ea0e:
000000000000ea0e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=hash_delete+80
                        ; endp
000000000000ea13         align      32                                          ; End of unwind block (FDE at 0x1ce8c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     triple_hash:
000000000000ea20         push       rbp                                         ; Begin of unwind block (FDE at 0x1cec4), DATA XREF=canonicalize_filename_mode+1270
000000000000ea21         push       rbx
000000000000ea22         mov        rbp, rdi
000000000000ea25         mov        rbx, rsi
000000000000ea28         sub        rsp, 0x8
000000000000ea2c         mov        rdi, qword [rdi]
000000000000ea2f         call       hash_pjw                                    ; hash_pjw
000000000000ea34         xor        rax, qword [rbp+8]
000000000000ea38         xor        edx, edx
000000000000ea3a         add        rsp, 0x8
000000000000ea3e         div        rbx
000000000000ea41         pop        rbx
000000000000ea42         pop        rbp
000000000000ea43         mov        rax, rdx
000000000000ea46         ret
                        ; endp
000000000000ea47         align      16                                          ; End of unwind block (FDE at 0x1cec4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     triple_hash_no_name:
000000000000ea50         mov        rax, qword [rdi+8]                          ; Begin of unwind block (FDE at 0x1ceec)
000000000000ea54         xor        edx, edx
000000000000ea56         div        rsi
000000000000ea59         mov        rax, rdx
000000000000ea5c         ret
                        ; endp
000000000000ea5d         align      32                                          ; End of unwind block (FDE at 0x1ceec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     triple_compare:
000000000000ea60         xor        eax, eax                                    ; Begin of unwind block (FDE at 0x1cf00)
000000000000ea62         mov        rdx, qword [rsi+8]
000000000000ea66         cmp        qword [rdi+8], rdx
000000000000ea6a         je         loc_ea70

                     loc_ea6c:
000000000000ea6c         ret                                                    ; CODE XREF=triple_compare+24
                        ; endp
000000000000ea6e         align      16

                     loc_ea70:
000000000000ea70         mov        rcx, qword [rsi+0x10]                       ; CODE XREF=triple_compare+10
000000000000ea74         cmp        qword [rdi+0x10], rcx
000000000000ea78         jne        loc_ea6c

000000000000ea7a         sub        rsp, 0x8
000000000000ea7e         mov        rsi, qword [rsi]
000000000000ea81         mov        rdi, qword [rdi]
000000000000ea84         call       same_name                                   ; same_name
000000000000ea89         add        rsp, 0x8
000000000000ea8d         ret
                        ; endp
000000000000ea8e         align      16                                          ; End of unwind block (FDE at 0x1cf00)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     triple_compare_ino_str:
000000000000ea90         xor        eax, eax                                    ; Begin of unwind block (FDE at 0x1cf18), DATA XREF=canonicalize_filename_mode+1261
000000000000ea92         mov        rdx, qword [rsi+8]
000000000000ea96         cmp        qword [rdi+8], rdx
000000000000ea9a         je         loc_eaa0

                     loc_ea9c:
000000000000ea9c         ret                                                    ; CODE XREF=triple_compare_ino_str+24
                        ; endp
000000000000ea9e         align      32

                     loc_eaa0:
000000000000eaa0         mov        rcx, qword [rsi+0x10]                       ; CODE XREF=triple_compare_ino_str+10
000000000000eaa4         cmp        qword [rdi+0x10], rcx
000000000000eaa8         jne        loc_ea9c

000000000000eaaa         sub        rsp, 0x8
000000000000eaae         mov        rsi, qword [rsi]                            ; argument "__s2" for method j_strcmp
000000000000eab1         mov        rdi, qword [rdi]                            ; argument "__s1" for method j_strcmp
000000000000eab4         call       j_strcmp                                    ; strcmp
000000000000eab9         test       eax, eax
000000000000eabb         sete       al
000000000000eabe         add        rsp, 0x8
000000000000eac2         ret
                        ; endp
000000000000eac3         align      16                                          ; End of unwind block (FDE at 0x1cf18)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     triple_free:
000000000000ead0         push       rbx                                         ; Begin of unwind block (FDE at 0x1cf30), CODE XREF=record_file+98, DATA XREF=canonicalize_filename_mode+1254
000000000000ead1         mov        rbx, rdi
000000000000ead4         mov        rdi, qword [rdi]
000000000000ead7         call       sub_3880                                    ; sub_3880
000000000000eadc         mov        rdi, rbx
000000000000eadf         pop        rbx
000000000000eae0         jmp        sub_3880                                    ; sub_3880
                        ; endp
000000000000eae5         align      16                                          ; End of unwind block (FDE at 0x1cf30)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_A: int16_t, -10
        ;    var_C: int16_t, -12
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32


                     adjust_value.part.0:
000000000000eaf0         fld        dword [float_1a050]                         ; Begin of unwind block (FDE at 0x1cf4c), float_1a050, CODE XREF=human_readable+1400, human_readable+1434, human_readable+1960
000000000000eaf6         fld        tword [rsp+arg_0]
000000000000eafa         fucomi     st1
000000000000eafc         jae        loc_eb70

000000000000eafe         fstp       st1
000000000000eb00         fnstcw     word [rsp+var_A]
000000000000eb04         movzx      eax, word [rsp+var_A]
000000000000eb09         or         ah, 0xc
000000000000eb0c         mov        word [rsp+var_C], ax
000000000000eb11         fld        st0
000000000000eb13         fldcw      word [rsp+var_C]
000000000000eb17         fistp      qword [rsp+var_18]
000000000000eb1b         fldcw      word [rsp+var_A]
000000000000eb1f         mov        rax, qword [rsp+var_18]

                     loc_eb24:
000000000000eb24         mov        qword [rsp+var_20], rax                     ; CODE XREF=adjust_value.part.0+179
000000000000eb29         test       rax, rax
000000000000eb2c         fild       qword [rsp+var_20]
000000000000eb30         jns        loc_eb38

000000000000eb32         fadd       dword [float_1a04c]                         ; float_1a04c

                     loc_eb38:
000000000000eb38         test       edi, edi                                    ; CODE XREF=adjust_value.part.0+64
000000000000eb3a         jne        loc_eb68

000000000000eb3c         fxch       st1
000000000000eb3e         fucomip    st1
000000000000eb40         jp         loc_eb48

000000000000eb42         je         loc_eb6a

000000000000eb44         fstp       st0
000000000000eb46         jmp        loc_eb50

                     loc_eb48:
000000000000eb48         fstp       st0                                         ; CODE XREF=adjust_value.part.0+80
000000000000eb4a         nop        word [rax+rax]

                     loc_eb50:
000000000000eb50         add        rax, 0x1                                    ; CODE XREF=adjust_value.part.0+86
000000000000eb54         mov        qword [rsp+var_20], rax
000000000000eb59         test       rax, rax
000000000000eb5c         fild       qword [rsp+var_20]
000000000000eb60         js         loc_ebb0

000000000000eb62         jmp        loc_eb6a
000000000000eb64         align      8

                     loc_eb68:
000000000000eb68         fstp       st1                                         ; CODE XREF=adjust_value.part.0+74

                     loc_eb6a:
000000000000eb6a         ret                                                    ; CODE XREF=adjust_value.part.0+82, adjust_value.part.0+114
                        ; endp
000000000000eb6c         align      16

                     loc_eb70:
000000000000eb70         fnstcw     word [rsp+var_A]                            ; CODE XREF=adjust_value.part.0+12
000000000000eb74         movzx      eax, word [rsp+var_A]
000000000000eb79         fsubr      st1, st0
000000000000eb7b         fxch       st1
000000000000eb7d         movabs     rdx, 0x8000000000000000
000000000000eb87         or         ah, 0xc
000000000000eb8a         mov        word [rsp+var_C], ax
000000000000eb8f         fldcw      word [rsp+var_C]
000000000000eb93         fistp      qword [rsp+var_18]
000000000000eb97         fldcw      word [rsp+var_A]
000000000000eb9b         mov        rax, qword [rsp+var_18]
000000000000eba0         xor        rax, rdx
000000000000eba3         jmp        loc_eb24
000000000000eba8         align      16

                     loc_ebb0:
000000000000ebb0         fadd       dword [float_1a04c]                         ; float_1a04c, CODE XREF=adjust_value.part.0+112
000000000000ebb6         ret
                        ; endp
000000000000ebb7         align      64                                          ; End of unwind block (FDE at 0x1cf4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_78: int8_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_94: int32_t, -148
        ;    var_98: int32_t, -152
        ;    var_A8: int32_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D8: -216


                     human_readable:
000000000000ebc0         push       r15                                         ; Begin of unwind block (FDE at 0x1cf60), CODE XREF=print_file_name_and_frills+345, print_long_format+686, print_long_format+2062, length_of_file_name_and_frills+287, gobble_file.constprop.52+602, gobble_file.constprop.52+2125, print_dir+1094
000000000000ebc2         push       r14
000000000000ebc4         mov        eax, edx
000000000000ebc6         push       r13
000000000000ebc8         push       r12
000000000000ebca         mov        r15d, edx
000000000000ebcd         push       rbp
000000000000ebce         push       rbx
000000000000ebcf         and        eax, 0x20
000000000000ebd2         and        r15d, 0x3
000000000000ebd6         mov        r12d, edx
000000000000ebd9         mov        rbx, rdi
000000000000ebdc         sub        rsp, 0x98
000000000000ebe3         mov        qword [rsp+0xc8+var_B0], rcx
000000000000ebe8         mov        dword [rsp+0xc8+var_98], eax
000000000000ebec         mov        rcx, qword [fs:0x28]
000000000000ebf5         mov        qword [rsp+0xc8+var_40], rcx
000000000000ebfd         xor        ecx, ecx
000000000000ebff         cmp        eax, 0x1
000000000000ec02         mov        qword [rsp+0xc8+var_C8], rsi
000000000000ec06         mov        qword [rsp+0xc8+var_B8], r8
000000000000ec0b         sbb        eax, eax
000000000000ec0d         and        eax, 0xffffffe8
000000000000ec10         add        eax, 0x400
000000000000ec15         mov        dword [rsp+0xc8+var_94], eax
000000000000ec19         call       j_localeconv                                ; localeconv
000000000000ec1e         mov        r14, qword [rax]
000000000000ec21         mov        r13, rax
000000000000ec24         mov        rdi, r14                                    ; argument "__s" for method j_strlen
000000000000ec27         call       j_strlen                                    ; strlen
000000000000ec2c         mov        rcx, qword [r13+0x10]
000000000000ec30         mov        r13, qword [r13+8]
000000000000ec34         mov        rbp, rax
000000000000ec37         sub        rax, 0x1
000000000000ec3b         mov        edx, 0x1
000000000000ec40         cmp        rax, 0x10
000000000000ec44         lea        rax, qword [aWriteError+13]                 ; 0x19f9c
000000000000ec4b         mov        rdi, r13                                    ; argument "__s" for method j_strlen
000000000000ec4e         cmovae     rbp, rdx
000000000000ec52         mov        qword [rsp+0xc8+var_90], rcx
000000000000ec57         cmovae     r14, rax
000000000000ec5b         call       j_strlen                                    ; strlen
000000000000ec60         cmp        rax, 0x11
000000000000ec64         lea        rax, qword [aLu+34]                         ; 0x178b3
000000000000ec6b         mov        rdi, qword [rsp+0xc8+var_B8]
000000000000ec70         mov        rcx, qword [rsp+0xc8+var_B0]
000000000000ec75         cmovae     r13, rax
000000000000ec79         mov        rax, qword [rsp+0xc8+var_C8]
000000000000ec7d         add        rax, 0x287
000000000000ec83         cmp        rdi, rcx
000000000000ec86         mov        qword [rsp+0xc8+var_C0], rax
000000000000ec8b         ja         loc_edd8

000000000000ec91         xor        edx, edx
000000000000ec93         mov        rax, rcx
000000000000ec96         div        rdi
000000000000ec99         test       rdx, rdx
000000000000ec9c         mov        rdi, rax
000000000000ec9f         je         loc_f000

                     loc_eca5:
000000000000eca5         mov        qword [rsp+0xc8+var_B0], rcx                ; CODE XREF=human_readable+539, human_readable+561, human_readable+1106
000000000000ecaa         test       rcx, rcx
000000000000ecad         fild       qword [rsp+0xc8+var_B0]
000000000000ecb1         jns        loc_ecb9

000000000000ecb3         fadd       dword [float_1a04c]                         ; float_1a04c

                     loc_ecb9:
000000000000ecb9         mov        rax, qword [rsp+0xc8+var_B8]                ; CODE XREF=human_readable+241
000000000000ecbe         mov        qword [rsp+0xc8+var_B0], rax
000000000000ecc3         test       rax, rax
000000000000ecc6         fild       qword [rsp+0xc8+var_B0]
000000000000ecca         jns        loc_ecd2

000000000000eccc         fadd       dword [float_1a04c]                         ; float_1a04c

                     loc_ecd2:
000000000000ecd2         fdivp      st1                                         ; CODE XREF=human_readable+266
000000000000ecd4         mov        qword [rsp+0xc8+var_B0], rbx
000000000000ecd9         test       rbx, rbx
000000000000ecdc         fild       qword [rsp+0xc8+var_B0]
000000000000ece0         jns        loc_ece8

000000000000ece2         fadd       dword [float_1a04c]                         ; float_1a04c

                     loc_ece8:
000000000000ece8         test       r12b, 0x10                                  ; CODE XREF=human_readable+288
000000000000ecec         fmulp      st1
000000000000ecee         je         loc_eeb8

000000000000ecf4         fild       dword [rsp+0xc8+var_94]
000000000000ecf8         xor        ebx, ebx
000000000000ecfa         fld        st0
000000000000ecfc         jmp        loc_ed04
000000000000ecfe         align      256

                     loc_ed00:
000000000000ed00         fstp       st1                                         ; CODE XREF=human_readable+340
000000000000ed02         fxch       st2

                     loc_ed04:
000000000000ed04         fld        st0                                         ; CODE XREF=human_readable+316
000000000000ed06         add        ebx, 0x1
000000000000ed09         fmul       st2
000000000000ed0b         fxch       st3
000000000000ed0d         fucomi     st3
000000000000ed0f         jb         loc_ed20

000000000000ed11         cmp        ebx, 0x8
000000000000ed14         jne        loc_ed00

000000000000ed16         fstp       st2
000000000000ed18         fstp       st2
000000000000ed1a         jmp        loc_ed24
000000000000ed1c         align      32

                     loc_ed20:
000000000000ed20         fstp       st2                                         ; CODE XREF=human_readable+335
000000000000ed22         fstp       st2

                     loc_ed24:
000000000000ed24         mov        ecx, dword [rsp+0xc8+var_98]                ; CODE XREF=human_readable+346
000000000000ed28         add        rbp, 0x1
000000000000ed2c         xor        eax, eax
000000000000ed2e         fdivrp     st1
000000000000ed30         test       ecx, ecx
000000000000ed32         sete       al
000000000000ed35         cmp        r15d, 0x1
000000000000ed39         lea        rax, qword [rbp+rax+1]
000000000000ed3e         mov        qword [rsp+0xc8+var_B0], rax
000000000000ed43         je         loc_f2b0

000000000000ed49         fld        tword [dword_1a0ac+4]                       ; 0x1a0b0
000000000000ed4f         fucomip    st1
000000000000ed51         ja         loc_f128

000000000000ed57         fld        st0

                     loc_ed59:
000000000000ed59         fstp       tword [rsp+0xc8+var_A8]                     ; CODE XREF=human_readable+1411
000000000000ed5d         sub        rsp, 0x10
000000000000ed61         lea        rcx, qword [a1lf]                           ; "%.1Lf"
000000000000ed68         mov        esi, 0x1
000000000000ed6d         mov        rdx, 0xffffffffffffffff
000000000000ed74         xor        eax, eax
000000000000ed76         mov        r14, qword [rsp+0xd8+var_C8]
000000000000ed7b         mov        rdi, r14
000000000000ed7e         fstp       tword [rsp+0xd8+var_D8]
000000000000ed81         call       j___sprintf_chk                             ; __sprintf_chk
000000000000ed86         mov        rdi, r14                                    ; argument "__s" for method j_strlen
000000000000ed89         call       j_strlen                                    ; strlen
000000000000ed8e         pop        rcx
000000000000ed8f         pop        rsi
000000000000ed90         cmp        rax, qword [rsp+0xc8+var_B0]
000000000000ed95         mov        r14, rax
000000000000ed98         fld        tword [rsp+0xc8+var_A8]
000000000000ed9c         ja         loc_f348

                     loc_eda2:
000000000000eda2         test       r12b, 0x8                                   ; CODE XREF=human_readable+1845
000000000000eda6         je         loc_ef10

000000000000edac         mov        rax, qword [rsp+0xc8+var_C8]
000000000000edb0         cmp        byte [rax+r14-1], 0x30
000000000000edb6         jne        loc_ef18

000000000000edbc         fld        dword [dword_1a0ac]                         ; dword_1a0ac
000000000000edc2         cmp        r15d, 0x1
000000000000edc6         fmul       st1, st0
000000000000edc8         jne        loc_f350

000000000000edce         jmp        loc_f303
000000000000edd3         align      8

                     loc_edd8:
000000000000edd8         test       rcx, rcx                                    ; CODE XREF=human_readable+203
000000000000eddb         je         loc_eca5

000000000000ede1         mov        rax, qword [rsp+0xc8+var_B8]
000000000000ede6         xor        edx, edx
000000000000ede8         div        rcx
000000000000edeb         test       rdx, rdx
000000000000edee         mov        r8, rax
000000000000edf1         jne        loc_eca5

000000000000edf7         mov        rax, rbx
000000000000edfa         xor        edx, edx
000000000000edfc         div        r8
000000000000edff         mov        rbx, rax
000000000000ee02         lea        rax, qword [rdx+rdx*4]
000000000000ee06         xor        edx, edx
000000000000ee08         mov        rsi, rbx
000000000000ee0b         add        rax, rax
000000000000ee0e         div        r8
000000000000ee11         add        rdx, rdx
000000000000ee14         mov        r9d, eax
000000000000ee17         cmp        r8, rdx
000000000000ee1a         jbe        loc_f3a8

000000000000ee20         xor        edi, edi
000000000000ee22         test       rdx, rdx
000000000000ee25         setne      dil

                     loc_ee29:
000000000000ee29         mov        ecx, r12d                                   ; CODE XREF=human_readable+1117, human_readable+2035
000000000000ee2c         mov        r8, qword [rsp+0xc8+var_C0]
000000000000ee31         mov        ebx, 0xffffffff
000000000000ee36         and        ecx, 0x10
000000000000ee39         je         loc_f200

000000000000ee3f         mov        r8d, dword [rsp+0xc8+var_94]
000000000000ee44         cmp        r8, rsi
000000000000ee47         mov        r11, r8
000000000000ee4a         ja         loc_f3c0

000000000000ee50         xor        ebx, ebx
000000000000ee52         jmp        loc_ee77
000000000000ee54         align      8

                     loc_ee58:
000000000000ee58         test       edi, edi                                    ; CODE XREF=human_readable+736
000000000000ee5a         setne      dil
000000000000ee5e         movzx      edi, dil

                     loc_ee62:
000000000000ee62         add        ebx, 0x1                                    ; CODE XREF=human_readable+752
000000000000ee65         cmp        r8, r10
000000000000ee68         ja         loc_f17d

000000000000ee6e         cmp        ebx, 0x8
000000000000ee71         je         loc_f418

                     loc_ee77:
000000000000ee77         mov        rax, rsi                                    ; CODE XREF=human_readable+658
000000000000ee7a         xor        edx, edx
000000000000ee7c         mov        esi, edi
000000000000ee7e         div        r8
000000000000ee81         sar        esi, 0x1
000000000000ee83         mov        r10, rax
000000000000ee86         lea        eax, dword [rdx+rdx*4]
000000000000ee89         xor        edx, edx
000000000000ee8b         lea        eax, dword [r9+rax*2]
000000000000ee8f         div        r11d
000000000000ee92         lea        edx, dword [rsi+rdx*2]
000000000000ee95         mov        r9d, eax
000000000000ee98         mov        rsi, r10
000000000000ee9b         add        edi, edx
000000000000ee9d         cmp        r11d, edx
000000000000eea0         ja         loc_ee58

000000000000eea2         cmp        r11d, edi
000000000000eea5         setb       dil
000000000000eea9         movzx      edi, dil
000000000000eead         add        edi, 0x2
000000000000eeb0         jmp        loc_ee62
000000000000eeb2         align      8

                     loc_eeb8:
000000000000eeb8         cmp        r15d, 0x1                                   ; CODE XREF=human_readable+302
000000000000eebc         je         loc_eecc

000000000000eebe         fld        tword [dword_1a0ac+4]                       ; 0x1a0b0
000000000000eec4         fucomip    st1
000000000000eec6         ja         loc_f150

                     loc_eecc:
000000000000eecc         sub        rsp, 0x10                                   ; CODE XREF=human_readable+764, human_readable+1443
000000000000eed0         lea        rcx, qword [a0lf]                           ; "%.0Lf"
000000000000eed7         mov        esi, 0x1
000000000000eedc         mov        rbx, qword [rsp+0xd8+var_C8]
000000000000eee1         mov        rdx, 0xffffffffffffffff
000000000000eee8         xor        eax, eax
000000000000eeea         fstp       tword [rsp+0xd8+var_D8]
000000000000eeed         xor        ebp, ebp
000000000000eeef         mov        rdi, rbx
000000000000eef2         call       j___sprintf_chk                             ; __sprintf_chk
000000000000eef7         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
000000000000eefa         mov        ebx, 0xffffffff
000000000000eeff         call       j_strlen                                    ; strlen
000000000000ef04         pop        rsi
000000000000ef05         pop        rdi
000000000000ef06         mov        r14, rax
000000000000ef09         jmp        loc_ef20
000000000000ef0b         align      16

                     loc_ef10:
000000000000ef10         fstp       st0                                         ; CODE XREF=human_readable+486
000000000000ef12         jmp        loc_ef20
000000000000ef14         align      8

                     loc_ef18:
000000000000ef18         fstp       st0                                         ; CODE XREF=human_readable+502
000000000000ef1a         nop        word [rax+rax]

                     loc_ef20:
000000000000ef20         mov        r15, qword [rsp+0xc8+var_C0]                ; CODE XREF=human_readable+841, human_readable+850, human_readable+1919
000000000000ef25         mov        rsi, qword [rsp+0xc8+var_C8]                ; argument "__src" for method j_memmove
000000000000ef29         mov        rdx, r14                                    ; argument "__n" for method j_memmove
000000000000ef2c         sub        r15, r14
000000000000ef2f         sub        r14, rbp
000000000000ef32         mov        rdi, r15                                    ; argument "__dest" for method j_memmove
000000000000ef35         call       j_memmove                                   ; memmove
000000000000ef3a         mov        r8, r14
000000000000ef3d         add        r8, r15

                     loc_ef40:
000000000000ef40         test       r12b, 0x4                                   ; CODE XREF=human_readable+1702, human_readable+2127
000000000000ef44         jne        loc_f028

                     loc_ef4a:
000000000000ef4a         test       r12b, 0x80                                  ; CODE XREF=human_readable+1343, human_readable+2562
000000000000ef4e         je         loc_efc7

000000000000ef50         cmp        ebx, 0xffffffff
000000000000ef53         je         loc_f270

                     loc_ef59:
000000000000ef59         mov        eax, r12d                                   ; CODE XREF=human_readable+1748, human_readable+1762, human_readable+2148
000000000000ef5c         and        eax, 0x100
000000000000ef61         mov        ecx, eax
000000000000ef63         or         ecx, ebx
000000000000ef65         je         loc_efc7

000000000000ef67         and        r12d, 0x40
000000000000ef6b         jne        loc_f108

                     loc_ef71:
000000000000ef71         test       ebx, ebx                                    ; CODE XREF=human_readable+1375
000000000000ef73         je         loc_f5a6

000000000000ef79         cmp        ebx, 0x1
000000000000ef7c         jne        loc_ef8c

000000000000ef7e         mov        r9d, dword [rsp+0xc8+var_98]
000000000000ef83         test       r9d, r9d
000000000000ef86         je         loc_f3d0

                     loc_ef8c:
000000000000ef8c         lea        rcx, qword [power_letter]                   ; power_letter, CODE XREF=human_readable+956
000000000000ef93         movsxd     rbx, ebx
000000000000ef96         mov        rdi, qword [rsp+0xc8+var_C0]
000000000000ef9b         test       eax, eax
000000000000ef9d         movzx      ecx, byte [rcx+rbx]
000000000000efa1         lea        rdx, qword [rdi+1]
000000000000efa5         mov        byte [rdi], cl
000000000000efa7         je         loc_f3e4

000000000000efad         mov        r8d, dword [rsp+0xc8+var_98]
000000000000efb2         test       r8d, r8d
000000000000efb5         jne        loc_f170

                     loc_efbb:
000000000000efbb         lea        rax, qword [rdx+1]                          ; CODE XREF=human_readable+1464, human_readable+2078, human_readable+2541
000000000000efbf         mov        byte [rdx], 0x42
000000000000efc2         mov        qword [rsp+0xc8+var_C0], rax

                     loc_efc7:
000000000000efc7         mov        rax, qword [rsp+0xc8+var_C0]                ; CODE XREF=human_readable+910, human_readable+933, human_readable+2089, human_readable+2547
000000000000efcc         mov        rcx, qword [rsp+0xc8+var_40]
000000000000efd4         xor        rcx, qword [fs:0x28]
000000000000efdd         mov        byte [rax], 0x0
000000000000efe0         mov        rax, r15
000000000000efe3         jne        loc_f57b

000000000000efe9         add        rsp, 0x98
000000000000eff0         pop        rbx
000000000000eff1         pop        rbp
000000000000eff2         pop        r12
000000000000eff4         pop        r13
000000000000eff6         pop        r14
000000000000eff8         pop        r15
000000000000effa         ret
                        ; endp
000000000000effb         align      4096

                     loc_f000:
000000000000f000         mov        rsi, rbx                                    ; DATA XREF=xstrcoll_df_size+42, xstrcoll_df_size+82, xstrcoll_df_size+110, strcmp_df_size+42, strcmp_df_size+82, strcmp_df_size+110, rev_xstrcoll_df_size+45, rev_xstrcoll_df_size+82, rev_xstrcoll_df_size+110, rev_strcmp_df_size+45, rev_strcmp_df_size+82
000000000000f003         xor        edx, edx
000000000000f005         imul       rsi, rax
000000000000f009         mov        rax, rsi
000000000000f00c         div        rdi
000000000000f00f         cmp        rax, rbx
000000000000f012         jne        loc_eca5

000000000000f018         xor        edi, edi
000000000000f01a         xor        r9d, r9d
000000000000f01d         jmp        loc_ee29
000000000000f022         align      8

                     loc_f028:
000000000000f028         mov        r14, r8                                     ; CODE XREF=human_readable+900
000000000000f02b         mov        rdi, r13                                    ; argument "__s" for method j_strlen
000000000000f02e         mov        qword [rsp+0xc8+var_80], r8
000000000000f033         sub        r14, r15
000000000000f036         mov        rbp, 0xffffffffffffffff
000000000000f03d         call       j_strlen                                    ; strlen
000000000000f042         lea        rdi, qword [rsp+0xc8+var_78]
000000000000f047         mov        ecx, 0x29
000000000000f04c         mov        rdx, r14
000000000000f04f         mov        rsi, r15
000000000000f052         mov        qword [rsp+0xc8+var_88], rax
000000000000f057         mov        qword [rsp+0xc8+var_B0], rdi
000000000000f05c         call       j___memcpy_chk                              ; __memcpy_chk
000000000000f061         mov        ecx, r12d
000000000000f064         mov        dword [rsp+0xc8+var_A8], ebx
000000000000f068         mov        r12, r14
000000000000f06b         mov        rbx, r13
000000000000f06e         mov        r8, qword [rsp+0xc8+var_80]
000000000000f073         mov        r15, qword [rsp+0xc8+var_90]
000000000000f078         mov        r13, qword [rsp+0xc8+var_88]
000000000000f07d         mov        r14d, ecx
000000000000f080         jmp        loc_f0c2
000000000000f082         align      8

                     loc_f088:
000000000000f088         mov        rax, qword [rsp+0xc8+var_B0]                ; CODE XREF=human_readable+1306
000000000000f08d         sub        r12, rbp
000000000000f090         sub        r8, rbp
000000000000f093         mov        rdi, r8                                     ; argument "__dest" for method j_memcpy
000000000000f096         mov        rdx, rbp                                    ; argument "__n" for method j_memcpy
000000000000f099         lea        rsi, qword [rax+r12]                        ; argument "__src" for method j_memcpy
000000000000f09d         call       j_memcpy                                    ; memcpy
000000000000f0a2         test       r12, r12
000000000000f0a5         mov        r8, rax
000000000000f0a8         je         loc_f5b8

000000000000f0ae         sub        r8, r13
000000000000f0b1         mov        rdx, r13                                    ; argument "__n" for method j_memcpy
000000000000f0b4         mov        rsi, rbx                                    ; argument "__src" for method j_memcpy
000000000000f0b7         mov        rdi, r8                                     ; argument "__dest" for method j_memcpy
000000000000f0ba         call       j_memcpy                                    ; memcpy
000000000000f0bf         mov        r8, rax

                     loc_f0c2:
000000000000f0c2         movzx      eax, byte [r15]                             ; CODE XREF=human_readable+1216
000000000000f0c6         test       al, al
000000000000f0c8         je         loc_f0d7

000000000000f0ca         cmp        al, 0x7f
000000000000f0cc         movzx      ebp, al
000000000000f0cf         cmovae     rbp, r12
000000000000f0d3         add        r15, 0x1

                     loc_f0d7:
000000000000f0d7         cmp        rbp, r12                                    ; CODE XREF=human_readable+1288
000000000000f0da         jbe        loc_f088

000000000000f0dc         mov        eax, r14d
000000000000f0df         mov        r15, r8
000000000000f0e2         mov        r14, r12
000000000000f0e5         mov        rsi, qword [rsp+0xc8+var_B0]                ; argument "__src" for method j_memcpy
000000000000f0ea         sub        r15, r14
000000000000f0ed         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
000000000000f0f0         mov        rdi, r15                                    ; argument "__dest" for method j_memcpy
000000000000f0f3         mov        ebx, dword [rsp+0xc8+var_A8]
000000000000f0f7         mov        r12d, eax
000000000000f0fa         call       j_memcpy                                    ; memcpy
000000000000f0ff         jmp        loc_ef4a
000000000000f104         align      8

                     loc_f108:
000000000000f108         mov        rcx, qword [rsp+0xc8+var_C8]                ; CODE XREF=human_readable+939
000000000000f10c         lea        rdi, qword [rcx+0x288]
000000000000f113         mov        byte [rcx+0x287], 0x20
000000000000f11a         mov        qword [rsp+0xc8+var_C0], rdi
000000000000f11f         jmp        loc_ef71
000000000000f124         align      8

                     loc_f128:
000000000000f128         sub        rsp, 0x10                                   ; CODE XREF=human_readable+401
000000000000f12c         mov        edi, r15d
000000000000f12f         fld        st0
000000000000f131         fstp       tword [rsp+0xd8+var_D8]
000000000000f134         fstp       tword [rsp+0xd8+var_A8]
000000000000f138         call       adjust_value.part.0                         ; adjust_value.part.0
000000000000f13d         pop        rax
000000000000f13e         pop        rdx
000000000000f13f         fld        tword [rsp+0xc8+var_A8]
000000000000f143         jmp        loc_ed59
000000000000f148         align      16

                     loc_f150:
000000000000f150         sub        rsp, 0x10                                   ; CODE XREF=human_readable+774
000000000000f154         mov        edi, r15d
000000000000f157         fstp       tword [rsp+0xd8+var_D8]
000000000000f15a         call       adjust_value.part.0                         ; adjust_value.part.0
000000000000f15f         pop        r8
000000000000f161         pop        r9
000000000000f163         jmp        loc_eecc
000000000000f168         align      16

                     loc_f170:
000000000000f170         lea        rdx, qword [rdi+2]                          ; CODE XREF=human_readable+1013
000000000000f174         mov        byte [rdi+1], 0x69
000000000000f178         jmp        loc_efbb

                     loc_f17d:
000000000000f17d         cmp        r10, 0x9                                    ; CODE XREF=human_readable+680
000000000000f181         ja         loc_f418

000000000000f187         cmp        r15d, 0x1
000000000000f18b         je         loc_f442

000000000000f191         test       r15d, r15d
000000000000f194         sete       dl
000000000000f197         test       edi, edi
000000000000f199         setg       r8b
000000000000f19d         and        edx, r8d

                     loc_f1a0:
000000000000f1a0         test       dl, dl                                      ; CODE XREF=human_readable+2191
000000000000f1a2         je         loc_f429

000000000000f1a8         lea        r9d, dword [rax+1]
000000000000f1ac         cmp        r9d, 0xa
000000000000f1b0         je         loc_f4b1

                     loc_f1b6:
000000000000f1b6         add        r9d, 0x30                                   ; CODE XREF=human_readable+2155

                     loc_f1ba:
000000000000f1ba         mov        rax, qword [rsp+0xc8+var_C8]                ; CODE XREF=human_readable+2173
000000000000f1be         lea        r8, qword [rax+0x286]
000000000000f1c5         mov        byte [rax+0x286], r9b
000000000000f1cc         mov        eax, ebp
000000000000f1ce         sub        r8, rbp
000000000000f1d1         cmp        ebp, 0x8
000000000000f1d4         jae        loc_f461

000000000000f1da         test       bpl, 0x4
000000000000f1de         jne        loc_f566

000000000000f1e4         test       eax, eax
000000000000f1e6         je         loc_f1f7

000000000000f1e8         movzx      edx, byte [r14]
000000000000f1ec         test       al, 0x2
000000000000f1ee         mov        byte [r8], dl
000000000000f1f1         jne        loc_f580

                     loc_f1f7:
000000000000f1f7         xor        edi, edi                                    ; CODE XREF=human_readable+1574, human_readable+2255, human_readable+2284, human_readable+2389, human_readable+2486, human_readable+2508
000000000000f1f9         xor        r9d, r9d
000000000000f1fc         nop        dword [rax]

                     loc_f200:
000000000000f200         cmp        r15d, 0x1                                   ; CODE XREF=human_readable+633, human_readable+2055, human_readable+2141, human_readable+2204
000000000000f204         je         loc_f380

000000000000f20a         test       r15d, r15d
000000000000f20d         jne        loc_f230

000000000000f20f         add        edi, r9d
000000000000f212         test       edi, edi
000000000000f214         jle        loc_f230

                     loc_f216:
000000000000f216         add        rsi, 0x1                                    ; CODE XREF=human_readable+2009
000000000000f21a         test       ecx, ecx
000000000000f21c         je         loc_f230

000000000000f21e         mov        eax, dword [rsp+0xc8+var_94]
000000000000f222         cmp        rax, rsi
000000000000f225         je         loc_f3f0

000000000000f22b         nop        dword [rax+rax]

                     loc_f230:
000000000000f230         mov        r15, r8                                     ; CODE XREF=human_readable+1613, human_readable+1620, human_readable+1628, human_readable+2015, human_readable+2099
000000000000f233         movabs     rcx, 0xcccccccccccccccd
000000000000f23d         nop        dword [rax]

                     loc_f240:
000000000000f240         mov        rax, rsi                                    ; CODE XREF=human_readable+1700
000000000000f243         sub        r15, 0x1
000000000000f247         mul        rcx
000000000000f24a         shr        rdx, 0x3
000000000000f24e         lea        rax, qword [rdx+rdx*4]
000000000000f252         add        rax, rax
000000000000f255         sub        rsi, rax
000000000000f258         add        esi, 0x30
000000000000f25b         test       rdx, rdx
000000000000f25e         mov        byte [r15], sil
000000000000f261         mov        rsi, rdx
000000000000f264         jne        loc_f240

000000000000f266         jmp        loc_ef40
000000000000f26b         align      16

                     loc_f270:
000000000000f270         mov        rcx, qword [rsp+0xc8+var_B8]                ; CODE XREF=human_readable+915
000000000000f275         cmp        rcx, 0x1
000000000000f279         jbe        loc_f422

000000000000f27f         mov        edx, dword [rsp+0xc8+var_94]
000000000000f283         mov        ebx, 0x1
000000000000f288         mov        eax, 0x1

                     loc_f28d:
000000000000f28d         imul       rax, rdx                                    ; CODE XREF=human_readable+1760
000000000000f291         cmp        rcx, rax
000000000000f294         jbe        loc_ef59

000000000000f29a         add        ebx, 0x1
000000000000f29d         cmp        ebx, 0x8
000000000000f2a0         jne        loc_f28d

000000000000f2a2         jmp        loc_ef59
000000000000f2a7         align      16

                     loc_f2b0:
000000000000f2b0         sub        rsp, 0x10                                   ; CODE XREF=human_readable+387
000000000000f2b4         lea        rcx, qword [a1lf]                           ; "%.1Lf"
000000000000f2bb         mov        rdx, 0xffffffffffffffff
000000000000f2c2         fld        st0
000000000000f2c4         fstp       tword [rsp+0xd8+var_D8]
000000000000f2c7         mov        r14, qword [rsp+0xd8+var_C8]
000000000000f2cc         mov        esi, 0x1
000000000000f2d1         xor        eax, eax
000000000000f2d3         mov        rdi, r14
000000000000f2d6         fstp       tword [rsp+0xd8+var_A8]
000000000000f2da         call       j___sprintf_chk                             ; __sprintf_chk
000000000000f2df         mov        rdi, r14                                    ; argument "__s" for method j_strlen
000000000000f2e2         call       j_strlen                                    ; strlen
000000000000f2e7         mov        r14, rax
000000000000f2ea         pop        rax
000000000000f2eb         pop        rdx
000000000000f2ec         cmp        r14, qword [rsp+0xc8+var_B0]
000000000000f2f1         fld        tword [rsp+0xc8+var_A8]
000000000000f2f5         jbe        loc_eda2

000000000000f2fb         fld        dword [dword_1a0ac]                         ; dword_1a0ac
000000000000f301         fmul       st1, st0

                     loc_f303:
000000000000f303         fdivp      st1                                         ; CODE XREF=human_readable+526, human_readable+1944, human_readable+1972
000000000000f305         sub        rsp, 0x10
000000000000f309         lea        rcx, qword [a0lf]                           ; "%.0Lf"
000000000000f310         mov        r14, qword [rsp+0xd8+var_C8]
000000000000f315         mov        rdx, 0xffffffffffffffff
000000000000f31c         mov        esi, 0x1
000000000000f321         xor        eax, eax
000000000000f323         xor        ebp, ebp
000000000000f325         mov        rdi, r14
000000000000f328         fstp       tword [rsp+0xd8+var_D8]
000000000000f32b         call       j___sprintf_chk                             ; __sprintf_chk
000000000000f330         mov        rdi, r14                                    ; argument "__s" for method j_strlen
000000000000f333         call       j_strlen                                    ; strlen
000000000000f338         pop        r10
000000000000f33a         mov        r14, rax
000000000000f33d         pop        r11
000000000000f33f         jmp        loc_ef20
000000000000f344         align      8

                     loc_f348:
000000000000f348         fld        dword [dword_1a0ac]                         ; dword_1a0ac, CODE XREF=human_readable+476
000000000000f34e         fmul       st1, st0

                     loc_f350:
000000000000f350         fld        tword [dword_1a0ac+4]                       ; 0x1a0b0, CODE XREF=human_readable+520
000000000000f356         fucomip    st2
000000000000f358         jbe        loc_f303

000000000000f35a         fstp       dword [rsp+0xc8+var_B0]
000000000000f35e         sub        rsp, 0x10
000000000000f362         mov        edi, r15d
000000000000f365         fstp       tword [rsp+0xd8+var_D8]
000000000000f368         call       adjust_value.part.0                         ; adjust_value.part.0
000000000000f36d         pop        rbp
000000000000f36e         pop        r14
000000000000f370         fld        dword [rsp+0xc8+var_B0]
000000000000f374         jmp        loc_f303
000000000000f376         align      128

                     loc_f380:
000000000000f380         mov        rax, rsi                                    ; CODE XREF=human_readable+1604
000000000000f383         movsxd     rdi, edi
000000000000f386         and        eax, 0x1
000000000000f389         add        rax, rdi
000000000000f38c         setne      al
000000000000f38f         movzx      eax, al
000000000000f392         add        r9d, eax
000000000000f395         cmp        r9d, 0x5
000000000000f399         jg         loc_f216

000000000000f39f         jmp        loc_f230
000000000000f3a4         align      8

                     loc_f3a8:
000000000000f3a8         setb       dil                                         ; CODE XREF=human_readable+602
000000000000f3ac         movzx      edi, dil
000000000000f3b0         add        edi, 0x2
000000000000f3b3         jmp        loc_ee29
000000000000f3b8         align      64

                     loc_f3c0:
000000000000f3c0         mov        r8, qword [rsp+0xc8+var_C0]                 ; CODE XREF=human_readable+650
000000000000f3c5         xor        ebx, ebx
000000000000f3c7         jmp        loc_f200
000000000000f3cc         align      16

                     loc_f3d0:
000000000000f3d0         mov        rbx, qword [rsp+0xc8+var_C0]                ; CODE XREF=human_readable+966
000000000000f3d5         test       eax, eax
000000000000f3d7         lea        rdx, qword [rbx+1]
000000000000f3db         mov        byte [rbx], 0x6b
000000000000f3de         jne        loc_efbb

                     loc_f3e4:
000000000000f3e4         mov        qword [rsp+0xc8+var_C0], rdx                ; CODE XREF=human_readable+999
000000000000f3e9         jmp        loc_efc7
000000000000f3ee         align      16

                     loc_f3f0:
000000000000f3f0         cmp        ebx, 0x8                                    ; CODE XREF=human_readable+1637
000000000000f3f3         je         loc_f230

000000000000f3f9         add        ebx, 0x1
000000000000f3fc         test       r12b, 0x8
000000000000f400         je         loc_f4c2

                     loc_f406:
000000000000f406         lea        r15, qword [r8-1]                           ; CODE XREF=human_readable+2338, human_readable+2353, human_readable+2371, human_readable+2437, human_readable+2465, human_readable+2529
000000000000f40a         mov        byte [r8-1], 0x31
000000000000f40f         jmp        loc_ef40
000000000000f414         align      8

                     loc_f418:
000000000000f418         mov        r8, qword [rsp+0xc8+var_C0]                 ; CODE XREF=human_readable+689, human_readable+1473
000000000000f41d         jmp        loc_f200

                     loc_f422:
000000000000f422         xor        ebx, ebx                                    ; CODE XREF=human_readable+1721
000000000000f424         jmp        loc_ef59

                     loc_f429:
000000000000f429         test       eax, eax                                    ; CODE XREF=human_readable+1506
000000000000f42b         jne        loc_f1b6

                     loc_f431:
000000000000f431         test       r12b, 0x8                                   ; CODE XREF=human_readable+2301
000000000000f435         jne        loc_f454

000000000000f437         mov        r9d, 0x30
000000000000f43d         jmp        loc_f1ba

                     loc_f442:
000000000000f442         mov        edx, eax                                    ; CODE XREF=human_readable+1483
000000000000f444         and        edx, 0x1
000000000000f447         add        edx, edi
000000000000f449         cmp        edx, 0x2
000000000000f44c         setg       dl
000000000000f44f         jmp        loc_f1a0

                     loc_f454:
000000000000f454         mov        r8, qword [rsp+0xc8+var_C0]                 ; CODE XREF=human_readable+2165
000000000000f459         xor        r9d, r9d
000000000000f45c         jmp        loc_f200

                     loc_f461:
000000000000f461         mov        rax, qword [r14]                            ; CODE XREF=human_readable+1556
000000000000f464         mov        r9, r14
000000000000f467         mov        qword [r8], rax
000000000000f46a         mov        eax, ebp
000000000000f46c         mov        rdx, qword [r14+rax-8]
000000000000f471         mov        qword [r8+rax-8], rdx
000000000000f476         lea        rdx, qword [r8+8]
000000000000f47a         mov        rax, r8
000000000000f47d         and        rdx, 0xfffffffffffffff8
000000000000f481         sub        rax, rdx
000000000000f484         sub        r9, rax
000000000000f487         add        eax, ebp
000000000000f489         and        eax, 0xfffffff8
000000000000f48c         cmp        eax, 0x8
000000000000f48f         jb         loc_f1f7

000000000000f495         and        eax, 0xfffffff8
000000000000f498         xor        edi, edi

                     loc_f49a:
000000000000f49a         mov        r10d, edi                                   ; CODE XREF=human_readable+2282
000000000000f49d         add        edi, 0x8
000000000000f4a0         mov        r11, qword [r9+r10]
000000000000f4a4         cmp        edi, eax
000000000000f4a6         mov        qword [rdx+r10], r11
000000000000f4aa         jb         loc_f49a

000000000000f4ac         jmp        loc_f1f7

                     loc_f4b1:
000000000000f4b1         lea        rsi, qword [r10+1]                          ; CODE XREF=human_readable+1520
000000000000f4b5         cmp        rsi, 0xa
000000000000f4b9         je         loc_f510

000000000000f4bb         xor        edi, edi
000000000000f4bd         jmp        loc_f431

                     loc_f4c2:
000000000000f4c2         mov        rax, rbp                                    ; CODE XREF=human_readable+2112
000000000000f4c5         mov        byte [r8-1], 0x30
000000000000f4ca         not        rax
000000000000f4cd         add        r8, rax
000000000000f4d0         cmp        ebp, 0x8
000000000000f4d3         mov        eax, ebp
000000000000f4d5         jae        loc_f51a

000000000000f4d7         and        ebp, 0x4
000000000000f4da         jne        loc_f591

000000000000f4e0         test       eax, eax
000000000000f4e2         je         loc_f406

000000000000f4e8         movzx      edx, byte [r14]
000000000000f4ec         test       al, 0x2
000000000000f4ee         mov        byte [r8], dl
000000000000f4f1         je         loc_f406

000000000000f4f7         movzx      edx, word [r14+rax-2]
000000000000f4fd         mov        word [r8+rax-2], dx
000000000000f503         jmp        loc_f406
000000000000f508         align      16

                     loc_f510:
000000000000f510         mov        r8, qword [rsp+0xc8+var_C0]                 ; CODE XREF=human_readable+2297
000000000000f515         jmp        loc_f1f7

                     loc_f51a:
000000000000f51a         mov        rax, qword [r14]                            ; CODE XREF=human_readable+2325
000000000000f51d         lea        rcx, qword [r8+8]
000000000000f521         and        rcx, 0xfffffffffffffff8
000000000000f525         mov        qword [r8], rax
000000000000f528         mov        eax, ebp
000000000000f52a         mov        rdx, qword [r14+rax-8]
000000000000f52f         mov        qword [r8+rax-8], rdx
000000000000f534         mov        rax, r8
000000000000f537         sub        rax, rcx
000000000000f53a         sub        r14, rax
000000000000f53d         add        eax, ebp
000000000000f53f         and        eax, 0xfffffff8
000000000000f542         cmp        eax, 0x8
000000000000f545         jb         loc_f406

000000000000f54b         and        eax, 0xfffffff8
000000000000f54e         xor        edx, edx

                     loc_f550:
000000000000f550         mov        esi, edx                                    ; CODE XREF=human_readable+2463
000000000000f552         add        edx, 0x8
000000000000f555         mov        rdi, qword [r14+rsi]
000000000000f559         cmp        edx, eax
000000000000f55b         mov        qword [rcx+rsi], rdi
000000000000f55f         jb         loc_f550

000000000000f561         jmp        loc_f406

                     loc_f566:
000000000000f566         mov        edx, dword [r14]                            ; CODE XREF=human_readable+1566
000000000000f569         mov        dword [r8], edx
000000000000f56c         mov        edx, dword [r14+rax-4]
000000000000f571         mov        dword [r8+rax-4], edx
000000000000f576         jmp        loc_f1f7

                     loc_f57b:
000000000000f57b         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=human_readable+1059
                        ; endp

                     loc_f580:
000000000000f580         movzx      edx, word [r14+rax-2]                       ; CODE XREF=human_readable+1585
000000000000f586         mov        word [r8+rax-2], dx
000000000000f58c         jmp        loc_f1f7

                     loc_f591:
000000000000f591         mov        edx, dword [r14]                            ; CODE XREF=human_readable+2330
000000000000f594         mov        dword [r8], edx
000000000000f597         mov        edx, dword [r14+rax-4]
000000000000f59c         mov        dword [r8+rax-4], edx
000000000000f5a1         jmp        loc_f406

                     loc_f5a6:
000000000000f5a6         test       eax, eax                                    ; CODE XREF=human_readable+947
000000000000f5a8         mov        rdx, qword [rsp+0xc8+var_C0]
000000000000f5ad         jne        loc_efbb

000000000000f5b3         jmp        loc_efc7

                     loc_f5b8:
000000000000f5b8         mov        ebx, dword [rsp+0xc8+var_A8]                ; CODE XREF=human_readable+1256
000000000000f5bc         mov        r15, rax
000000000000f5bf         mov        r12d, r14d
000000000000f5c2         jmp        loc_ef4a
000000000000f5c7         align      16                                          ; End of unwind block (FDE at 0x1cf60)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56


                     human_options:
000000000000f5d0         push       r13                                         ; Begin of unwind block (FDE at 0x1d008), CODE XREF=main+2195, main+4203
000000000000f5d2         push       r12
000000000000f5d4         mov        r13, rsi
000000000000f5d7         push       rbp
000000000000f5d8         push       rbx
000000000000f5d9         mov        r12, rdx
000000000000f5dc         mov        rbx, rdi
000000000000f5df         sub        rsp, 0x18
000000000000f5e3         mov        rax, qword [fs:0x28]
000000000000f5ec         mov        qword [rsp+0x38+var_30], rax
000000000000f5f1         xor        eax, eax
000000000000f5f3         test       rdi, rdi
000000000000f5f6         je         loc_f710

                     loc_f5fc:
000000000000f5fc         xor        ebp, ebp                                    ; CODE XREF=human_options+338, human_options+362
000000000000f5fe         cmp        byte [rbx], 0x27
000000000000f601         jne        loc_f60c

000000000000f603         add        rbx, 0x1
000000000000f607         mov        ebp, 0x4

                     loc_f60c:
000000000000f60c         lea        rdx, qword [block_size_opts]                ; block_size_opts, CODE XREF=human_options+49
000000000000f613         lea        rsi, qword [block_size_args]                ; block_size_args
000000000000f61a         mov        ecx, 0x4
000000000000f61f         mov        rdi, rbx
000000000000f622         call       argmatch                                    ; argmatch
000000000000f627         test       eax, eax
000000000000f629         js         loc_f668

000000000000f62b         lea        rdx, qword [block_size_opts]                ; block_size_opts
000000000000f632         cdqe
000000000000f634         mov        qword [r12], 0x1
000000000000f63c         or         ebp, dword [rdx+rax*4]
000000000000f63f         xor        eax, eax
000000000000f641         mov        dword [r13], ebp

                     loc_f645:
000000000000f645         mov        rcx, qword [rsp+0x38+var_30]                ; CODE XREF=human_options+263, human_options+308, human_options+403, human_options+476
000000000000f64a         xor        rcx, qword [fs:0x28]
000000000000f653         jne        loc_f7b1

000000000000f659         add        rsp, 0x18
000000000000f65d         pop        rbx
000000000000f65e         pop        rbp
000000000000f65f         pop        r12
000000000000f661         pop        r13
000000000000f663         ret
                        ; endp
000000000000f664         align      8

                     loc_f668:
000000000000f668         lea        r8, qword [aEeggkkmmppttyy]                 ; "eEgGkKmMpPtTyYzZ0", CODE XREF=human_options+89
000000000000f66f         xor        edx, edx
000000000000f671         mov        rsi, rsp
000000000000f674         mov        rcx, r12
000000000000f677         mov        rdi, rbx
000000000000f67a         call       xstrtoumax                                  ; xstrtoumax
000000000000f67f         test       eax, eax
000000000000f681         jne        loc_f6c8

000000000000f683         movzx      esi, byte [rbx]
000000000000f686         lea        edx, dword [rsi-0x30]
000000000000f689         cmp        dl, 0x9
000000000000f68c         jbe        loc_f6b8

000000000000f68e         mov        rcx, qword [rsp+0x38+var_38]
000000000000f692         cmp        rbx, rcx
000000000000f695         jne        loc_f6a9

000000000000f697         jmp        loc_f770
000000000000f69c         align      32

                     loc_f6a0:
000000000000f6a0         cmp        rbx, rcx                                    ; CODE XREF=human_options+230
000000000000f6a3         je         loc_f770

                     loc_f6a9:
000000000000f6a9         add        rbx, 0x1                                    ; CODE XREF=human_options+197
000000000000f6ad         movzx      edi, byte [rbx]
000000000000f6b0         lea        edx, dword [rdi-0x30]
000000000000f6b3         cmp        dl, 0x9
000000000000f6b6         ja         loc_f6a0

                     loc_f6b8:
000000000000f6b8         mov        rdx, qword [r12]                            ; CODE XREF=human_options+188, human_options+429, human_options+450
000000000000f6bc         mov        dword [r13], ebp
000000000000f6c0         jmp        loc_f6d4
000000000000f6c2         align      8

                     loc_f6c8:
000000000000f6c8         mov        rdx, qword [r12]                            ; CODE XREF=human_options+177
000000000000f6cc         mov        dword [r13], 0x0

                     loc_f6d4:
000000000000f6d4         test       rdx, rdx                                    ; CODE XREF=human_options+240
000000000000f6d7         jne        loc_f645

000000000000f6dd         lea        rdi, qword [aPosixlycorrect]                ; argument "__name" for method j_getenv, "POSIXLY_CORRECT"
000000000000f6e4         call       j_getenv                                    ; getenv
000000000000f6e9         cmp        rax, 0x1
000000000000f6ed         sbb        rax, rax
000000000000f6f0         and        eax, 0x200
000000000000f6f5         add        rax, 0x200
000000000000f6fb         mov        qword [r12], rax
000000000000f6ff         mov        eax, 0x4
000000000000f704         jmp        loc_f645
000000000000f709         align      16

                     loc_f710:
000000000000f710         lea        rdi, qword [aLsblocksize+3]                 ; argument "__name" for method j_getenv, 0x17ae8, CODE XREF=human_options+38
000000000000f717         call       j_getenv                                    ; getenv
000000000000f71c         test       rax, rax
000000000000f71f         mov        rbx, rax
000000000000f722         jne        loc_f5fc

000000000000f728         lea        rdi, qword [aBlocksize]                     ; argument "__name" for method j_getenv, "BLOCKSIZE"
000000000000f72f         call       j_getenv                                    ; getenv
000000000000f734         test       rax, rax
000000000000f737         mov        rbx, rax
000000000000f73a         jne        loc_f5fc

000000000000f740         lea        rdi, qword [aPosixlycorrect]                ; argument "__name" for method j_getenv, "POSIXLY_CORRECT"
000000000000f747         call       j_getenv                                    ; getenv
000000000000f74c         test       rax, rax
000000000000f74f         je         loc_f79a

000000000000f751         mov        qword [r12], 0x200
000000000000f759         xor        eax, eax
000000000000f75b         mov        dword [r13], 0x0
000000000000f763         jmp        loc_f645
000000000000f768         align      16

                     loc_f770:
000000000000f770         cmp        byte [rcx-1], 0x42                          ; CODE XREF=human_options+199, human_options+211
000000000000f774         je         loc_f788

000000000000f776         or         bpl, 0x80

                     loc_f77a:
000000000000f77a         or         ebp, 0x20                                   ; CODE XREF=human_options+456
000000000000f77d         jmp        loc_f6b8
000000000000f782         align      8

                     loc_f788:
000000000000f788         or         ebp, 0x180                                  ; CODE XREF=human_options+420
000000000000f78e         cmp        byte [rcx-2], 0x69
000000000000f792         jne        loc_f6b8

000000000000f798         jmp        loc_f77a

                     loc_f79a:
000000000000f79a         mov        qword [r12], 0x400                          ; CODE XREF=human_options+383
000000000000f7a2         xor        eax, eax
000000000000f7a4         mov        dword [r13], 0x0
000000000000f7ac         jmp        loc_f645

                     loc_f7b1:
000000000000f7b1         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=human_options+131
                        ; endp
000000000000f7b6         align      64                                          ; End of unwind block (FDE at 0x1d008)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     getuser:
000000000000f7c0         push       r12                                         ; Begin of unwind block (FDE at 0x1d044), CODE XREF=format_user+52, format_user_width+152
000000000000f7c2         push       rbp
000000000000f7c3         push       rbx
000000000000f7c4         mov        rbx, qword [user_alist]                     ; user_alist
000000000000f7cb         test       rbx, rbx
000000000000f7ce         je         loc_f7ed

000000000000f7d0         cmp        edi, dword [rbx]
000000000000f7d2         jne        loc_f7e4

000000000000f7d4         jmp        loc_f840
000000000000f7d6         align      32

                     loc_f7e0:
000000000000f7e0         cmp        dword [rbx], edi                            ; CODE XREF=getuser+43
000000000000f7e2         je         loc_f840

                     loc_f7e4:
000000000000f7e4         mov        rbx, qword [rbx+8]                          ; CODE XREF=getuser+18
000000000000f7e8         test       rbx, rbx
000000000000f7eb         jne        loc_f7e0

                     loc_f7ed:
000000000000f7ed         mov        ebp, edi                                    ; CODE XREF=getuser+14
000000000000f7ef         lea        r12, qword [aLu+34]                         ; 0x178b3
000000000000f7f6         call       j_getpwuid                                  ; getpwuid
000000000000f7fb         test       rax, rax
000000000000f7fe         mov        edi, 0x18
000000000000f803         je         loc_f818

000000000000f805         mov        r12, qword [rax]
000000000000f808         mov        rdi, r12                                    ; argument "__s" for method j_strlen
000000000000f80b         call       j_strlen                                    ; strlen
000000000000f810         lea        rdi, qword [rax+0x18]
000000000000f814         and        rdi, 0xfffffffffffffff8

                     loc_f818:
000000000000f818         call       xmalloc                                     ; xmalloc, CODE XREF=getuser+67
000000000000f81d         lea        rdi, qword [rax+0x10]                       ; argument "__dest" for method j_strcpy
000000000000f821         mov        dword [rax], ebp
000000000000f823         mov        rsi, r12                                    ; argument "__src" for method j_strcpy
000000000000f826         mov        rbx, rax
000000000000f829         call       j_strcpy                                    ; strcpy
000000000000f82e         mov        rax, qword [user_alist]                     ; user_alist
000000000000f835         mov        qword [user_alist], rbx                     ; user_alist
000000000000f83c         mov        qword [rbx+8], rax

                     loc_f840:
000000000000f840         cmp        byte [rbx+0x10], 0x0                        ; CODE XREF=getuser+20, getuser+34
000000000000f844         je         loc_f850

000000000000f846         lea        rax, qword [rbx+0x10]

                     loc_f84a:
000000000000f84a         pop        rbx                                         ; CODE XREF=getuser+146
000000000000f84b         pop        rbp
000000000000f84c         pop        r12
000000000000f84e         ret
                        ; endp
000000000000f84f         align      16

                     loc_f850:
000000000000f850         xor        eax, eax                                    ; CODE XREF=getuser+132
000000000000f852         jmp        loc_f84a
000000000000f854         align      32                                          ; End of unwind block (FDE at 0x1d044)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     getuidbyname:
000000000000f860         push       r12                                         ; Begin of unwind block (FDE at 0x1d074)
000000000000f862         push       rbp
000000000000f863         mov        r12, rdi
000000000000f866         push       rbx
000000000000f867         mov        rbx, qword [user_alist]                     ; user_alist
000000000000f86e         test       rbx, rbx
000000000000f871         je         loc_f8b0

000000000000f873         movzx      ebp, byte [rdi]
000000000000f876         jmp        loc_f889
000000000000f878         align      128

                     loc_f880:
000000000000f880         mov        rbx, qword [rbx+8]                          ; CODE XREF=getuidbyname+45, getuidbyname+61
000000000000f884         test       rbx, rbx
000000000000f887         je         loc_f8b0

                     loc_f889:
000000000000f889         cmp        byte [rbx+0x10], bpl                        ; CODE XREF=getuidbyname+22
000000000000f88d         jne        loc_f880

000000000000f88f         lea        rdi, qword [rbx+0x10]                       ; argument "__s1" for method j_strcmp
000000000000f893         mov        rsi, r12                                    ; argument "__s2" for method j_strcmp
000000000000f896         call       j_strcmp                                    ; strcmp
000000000000f89b         test       eax, eax
000000000000f89d         jne        loc_f880

                     loc_f89f:
000000000000f89f         mov        rax, rbx                                    ; CODE XREF=getuidbyname+219

                     loc_f8a2:
000000000000f8a2         pop        rbx                                         ; CODE XREF=getuidbyname+244
000000000000f8a3         pop        rbp
000000000000f8a4         pop        r12
000000000000f8a6         ret
                        ; endp
000000000000f8a7         align      16

                     loc_f8b0:
000000000000f8b0         mov        rbx, qword [nouser_alist]                   ; nouser_alist, CODE XREF=getuidbyname+17, getuidbyname+39
000000000000f8b7         test       rbx, rbx
000000000000f8ba         je         loc_f8f0

000000000000f8bc         movzx      ebp, byte [r12]
000000000000f8c1         jmp        loc_f8d1
000000000000f8c3         align      8

                     loc_f8c8:
000000000000f8c8         mov        rbx, qword [rbx+8]                          ; CODE XREF=getuidbyname+117, getuidbyname+133
000000000000f8cc         test       rbx, rbx
000000000000f8cf         je         loc_f8f0

                     loc_f8d1:
000000000000f8d1         cmp        byte [rbx+0x10], bpl                        ; CODE XREF=getuidbyname+97
000000000000f8d5         jne        loc_f8c8

000000000000f8d7         lea        rdi, qword [rbx+0x10]                       ; argument "__s1" for method j_strcmp
000000000000f8db         mov        rsi, r12                                    ; argument "__s2" for method j_strcmp
000000000000f8de         call       j_strcmp                                    ; strcmp
000000000000f8e3         test       eax, eax
000000000000f8e5         jne        loc_f8c8

000000000000f8e7         pop        rbx
000000000000f8e8         xor        eax, eax
000000000000f8ea         pop        rbp
000000000000f8eb         pop        r12
000000000000f8ed         ret
                        ; endp
000000000000f8ee         align      16

                     loc_f8f0:
000000000000f8f0         mov        rdi, r12                                    ; argument "__name" for method j_getpwnam, CODE XREF=getuidbyname+90, getuidbyname+111
000000000000f8f3         call       j_getpwnam                                  ; getpwnam
000000000000f8f8         mov        rdi, r12                                    ; argument "__s" for method j_strlen
000000000000f8fb         mov        rbp, rax
000000000000f8fe         call       j_strlen                                    ; strlen
000000000000f903         lea        rdi, qword [rax+0x18]
000000000000f907         and        rdi, 0xfffffffffffffff8
000000000000f90b         call       xmalloc                                     ; xmalloc
000000000000f910         lea        rdi, qword [rax+0x10]                       ; argument "__dest" for method j_strcpy
000000000000f914         mov        rsi, r12                                    ; argument "__src" for method j_strcpy
000000000000f917         mov        rbx, rax
000000000000f91a         call       j_strcpy                                    ; strcpy
000000000000f91f         test       rbp, rbp
000000000000f922         je         loc_f940

000000000000f924         mov        eax, dword [rbp+0x10]
000000000000f927         mov        dword [rbx], eax
000000000000f929         mov        rax, qword [user_alist]                     ; user_alist
000000000000f930         mov        qword [user_alist], rbx                     ; user_alist
000000000000f937         mov        qword [rbx+8], rax
000000000000f93b         jmp        loc_f89f

                     loc_f940:
000000000000f940         mov        rax, qword [nouser_alist]                   ; nouser_alist, CODE XREF=getuidbyname+194
000000000000f947         mov        qword [nouser_alist], rbx                   ; nouser_alist
000000000000f94e         mov        qword [rbx+8], rax
000000000000f952         xor        eax, eax
000000000000f954         jmp        loc_f8a2
000000000000f959         align      32                                          ; End of unwind block (FDE at 0x1d074)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     getgroup:
000000000000f960         push       r12                                         ; Begin of unwind block (FDE at 0x1d0ac), CODE XREF=print_long_format+1775, gobble_file.constprop.52+3283
000000000000f962         push       rbp
000000000000f963         push       rbx
000000000000f964         mov        rbx, qword [group_alist]                    ; group_alist
000000000000f96b         test       rbx, rbx
000000000000f96e         je         loc_f98d

000000000000f970         cmp        edi, dword [rbx]
000000000000f972         jne        loc_f984

000000000000f974         jmp        loc_f9e0
000000000000f976         align      128

                     loc_f980:
000000000000f980         cmp        dword [rbx], edi                            ; CODE XREF=getgroup+43
000000000000f982         je         loc_f9e0

                     loc_f984:
000000000000f984         mov        rbx, qword [rbx+8]                          ; CODE XREF=getgroup+18
000000000000f988         test       rbx, rbx
000000000000f98b         jne        loc_f980

                     loc_f98d:
000000000000f98d         mov        ebp, edi                                    ; CODE XREF=getgroup+14
000000000000f98f         lea        r12, qword [aLu+34]                         ; 0x178b3
000000000000f996         call       j_getgrgid                                  ; getgrgid
000000000000f99b         test       rax, rax
000000000000f99e         mov        edi, 0x18
000000000000f9a3         je         loc_f9b8

000000000000f9a5         mov        r12, qword [rax]
000000000000f9a8         mov        rdi, r12                                    ; argument "__s" for method j_strlen
000000000000f9ab         call       j_strlen                                    ; strlen
000000000000f9b0         lea        rdi, qword [rax+0x18]
000000000000f9b4         and        rdi, 0xfffffffffffffff8

                     loc_f9b8:
000000000000f9b8         call       xmalloc                                     ; xmalloc, CODE XREF=getgroup+67
000000000000f9bd         lea        rdi, qword [rax+0x10]                       ; argument "__dest" for method j_strcpy
000000000000f9c1         mov        dword [rax], ebp
000000000000f9c3         mov        rsi, r12                                    ; argument "__src" for method j_strcpy
000000000000f9c6         mov        rbx, rax
000000000000f9c9         call       j_strcpy                                    ; strcpy
000000000000f9ce         mov        rax, qword [group_alist]                    ; group_alist
000000000000f9d5         mov        qword [group_alist], rbx                    ; group_alist
000000000000f9dc         mov        qword [rbx+8], rax

                     loc_f9e0:
000000000000f9e0         cmp        byte [rbx+0x10], 0x0                        ; CODE XREF=getgroup+20, getgroup+34
000000000000f9e4         je         loc_f9f0

000000000000f9e6         lea        rax, qword [rbx+0x10]

                     loc_f9ea:
000000000000f9ea         pop        rbx                                         ; CODE XREF=getgroup+146
000000000000f9eb         pop        rbp
000000000000f9ec         pop        r12
000000000000f9ee         ret
                        ; endp
000000000000f9ef         align      16

                     loc_f9f0:
000000000000f9f0         xor        eax, eax                                    ; CODE XREF=getgroup+132
000000000000f9f2         jmp        loc_f9ea
000000000000f9f4         align      512                                         ; End of unwind block (FDE at 0x1d0ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     getgidbyname:
000000000000fa00         push       r12                                         ; Begin of unwind block (FDE at 0x1d0dc)
000000000000fa02         push       rbp
000000000000fa03         mov        r12, rdi
000000000000fa06         push       rbx
000000000000fa07         mov        rbx, qword [group_alist]                    ; group_alist
000000000000fa0e         test       rbx, rbx
000000000000fa11         je         loc_fa50

000000000000fa13         movzx      ebp, byte [rdi]
000000000000fa16         jmp        loc_fa29
000000000000fa18         align      32

                     loc_fa20:
000000000000fa20         mov        rbx, qword [rbx+8]                          ; CODE XREF=getgidbyname+45, getgidbyname+61
000000000000fa24         test       rbx, rbx
000000000000fa27         je         loc_fa50

                     loc_fa29:
000000000000fa29         cmp        byte [rbx+0x10], bpl                        ; CODE XREF=getgidbyname+22
000000000000fa2d         jne        loc_fa20

000000000000fa2f         lea        rdi, qword [rbx+0x10]                       ; argument "__s1" for method j_strcmp
000000000000fa33         mov        rsi, r12                                    ; argument "__s2" for method j_strcmp
000000000000fa36         call       j_strcmp                                    ; strcmp
000000000000fa3b         test       eax, eax
000000000000fa3d         jne        loc_fa20

                     loc_fa3f:
000000000000fa3f         mov        rax, rbx                                    ; CODE XREF=getgidbyname+219

                     loc_fa42:
000000000000fa42         pop        rbx                                         ; CODE XREF=getgidbyname+244
000000000000fa43         pop        rbp
000000000000fa44         pop        r12
000000000000fa46         ret
                        ; endp
000000000000fa47         align      16

                     loc_fa50:
000000000000fa50         mov        rbx, qword [nogroup_alist]                  ; nogroup_alist, CODE XREF=getgidbyname+17, getgidbyname+39
000000000000fa57         test       rbx, rbx
000000000000fa5a         je         loc_fa90

000000000000fa5c         movzx      ebp, byte [r12]
000000000000fa61         jmp        loc_fa71
000000000000fa63         align      8

                     loc_fa68:
000000000000fa68         mov        rbx, qword [rbx+8]                          ; CODE XREF=getgidbyname+117, getgidbyname+133
000000000000fa6c         test       rbx, rbx
000000000000fa6f         je         loc_fa90

                     loc_fa71:
000000000000fa71         cmp        byte [rbx+0x10], bpl                        ; CODE XREF=getgidbyname+97
000000000000fa75         jne        loc_fa68

000000000000fa77         lea        rdi, qword [rbx+0x10]                       ; argument "__s1" for method j_strcmp
000000000000fa7b         mov        rsi, r12                                    ; argument "__s2" for method j_strcmp
000000000000fa7e         call       j_strcmp                                    ; strcmp
000000000000fa83         test       eax, eax
000000000000fa85         jne        loc_fa68

000000000000fa87         pop        rbx
000000000000fa88         xor        eax, eax
000000000000fa8a         pop        rbp
000000000000fa8b         pop        r12
000000000000fa8d         ret
                        ; endp
000000000000fa8e         align      16

                     loc_fa90:
000000000000fa90         mov        rdi, r12                                    ; argument "__name" for method j_getgrnam, CODE XREF=getgidbyname+90, getgidbyname+111
000000000000fa93         call       j_getgrnam                                  ; getgrnam
000000000000fa98         mov        rdi, r12                                    ; argument "__s" for method j_strlen
000000000000fa9b         mov        rbp, rax
000000000000fa9e         call       j_strlen                                    ; strlen
000000000000faa3         lea        rdi, qword [rax+0x18]
000000000000faa7         and        rdi, 0xfffffffffffffff8
000000000000faab         call       xmalloc                                     ; xmalloc
000000000000fab0         lea        rdi, qword [rax+0x10]                       ; argument "__dest" for method j_strcpy
000000000000fab4         mov        rsi, r12                                    ; argument "__src" for method j_strcpy
000000000000fab7         mov        rbx, rax
000000000000faba         call       j_strcpy                                    ; strcpy
000000000000fabf         test       rbp, rbp
000000000000fac2         je         loc_fae0

000000000000fac4         mov        eax, dword [rbp+0x10]
000000000000fac7         mov        dword [rbx], eax
000000000000fac9         mov        rax, qword [group_alist]                    ; group_alist
000000000000fad0         mov        qword [group_alist], rbx                    ; group_alist
000000000000fad7         mov        qword [rbx+8], rax
000000000000fadb         jmp        loc_fa3f

                     loc_fae0:
000000000000fae0         mov        rax, qword [nogroup_alist]                  ; nogroup_alist, CODE XREF=getgidbyname+194
000000000000fae7         mov        qword [nogroup_alist], rbx                  ; nogroup_alist
000000000000faee         mov        qword [rbx+8], rax
000000000000faf2         xor        eax, eax
000000000000faf4         jmp        loc_fa42
000000000000faf9         align      256                                         ; End of unwind block (FDE at 0x1d0dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     imaxtostr:
000000000000fb00         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x1d114), CODE XREF=print_long_format+2558
000000000000fb03         lea        rcx, qword [rsi+0x14]
000000000000fb07         mov        byte [rsi+0x14], 0x0
000000000000fb0b         movabs     r9, 0x6666666666666667
000000000000fb15         movabs     rsi, 0xcccccccccccccccd
000000000000fb1f         mov        r8d, 0x30
000000000000fb25         js         loc_fb63

000000000000fb27         nop        word [rax+rax]

                     loc_fb30:
000000000000fb30         mov        rax, rdi                                    ; CODE XREF=imaxtostr+84
000000000000fb33         sub        rcx, 0x1
000000000000fb37         mul        rsi
000000000000fb3a         shr        rdx, 0x3
000000000000fb3e         lea        rax, qword [rdx+rdx*4]
000000000000fb42         add        rax, rax
000000000000fb45         sub        rdi, rax
000000000000fb48         add        edi, 0x30
000000000000fb4b         test       rdx, rdx
000000000000fb4e         mov        byte [rcx], dil
000000000000fb51         mov        rdi, rdx
000000000000fb54         jne        loc_fb30

000000000000fb56         mov        rax, rcx
000000000000fb59         ret
                        ; endp
000000000000fb5a         align      32

                     loc_fb60:
000000000000fb60         mov        rcx, rsi                                    ; CODE XREF=imaxtostr+142

                     loc_fb63:
000000000000fb63         mov        rax, rdi                                    ; CODE XREF=imaxtostr+37
000000000000fb66         lea        rsi, qword [rcx-1]
000000000000fb6a         imul       r9
000000000000fb6d         mov        rax, rdi
000000000000fb70         sar        rax, 0x3f
000000000000fb74         sar        rdx, 0x2
000000000000fb78         sub        rdx, rax
000000000000fb7b         lea        rax, qword [rdx+rdx*4]
000000000000fb7f         lea        eax, dword [r8+rax*2]
000000000000fb83         sub        eax, edi
000000000000fb85         test       rdx, rdx
000000000000fb88         mov        rdi, rdx
000000000000fb8b         mov        byte [rcx-1], al
000000000000fb8e         jne        loc_fb60

000000000000fb90         sub        rcx, 0x2
000000000000fb94         mov        byte [rsi-1], 0x2d
000000000000fb98         mov        rax, rcx
000000000000fb9b         ret
                        ; endp
000000000000fb9c         align      32                                          ; End of unwind block (FDE at 0x1d114)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     umaxtostr:
000000000000fba0         lea        rcx, qword [rsi+0x14]                       ; Begin of unwind block (FDE at 0x1d12c), CODE XREF=print_file_name_and_frills+379, print_long_format+1636, print_long_format+1920, print_long_format+2133, print_long_format+2190, length_of_file_name_and_frills+375, gobble_file.constprop.52+1555, gobble_file.constprop.52+1611, gobble_file.constprop.52+1701, gobble_file.constprop.52+1750
000000000000fba4         mov        byte [rsi+0x14], 0x0
000000000000fba8         movabs     rsi, 0xcccccccccccccccd
000000000000fbb2         nop        word [rax+rax]

                     loc_fbb8:
000000000000fbb8         mov        rax, rdi                                    ; CODE XREF=umaxtostr+60
000000000000fbbb         sub        rcx, 0x1
000000000000fbbf         mul        rsi
000000000000fbc2         shr        rdx, 0x3
000000000000fbc6         lea        rax, qword [rdx+rdx*4]
000000000000fbca         add        rax, rax
000000000000fbcd         sub        rdi, rax
000000000000fbd0         add        edi, 0x30
000000000000fbd3         test       rdx, rdx
000000000000fbd6         mov        byte [rcx], dil
000000000000fbd9         mov        rdi, rdx
000000000000fbdc         jne        loc_fbb8

000000000000fbde         mov        rax, rcx
000000000000fbe1         ret
                        ; endp
000000000000fbe2         align      16                                          ; End of unwind block (FDE at 0x1d12c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104


                     mbsalign:
000000000000fbf0         push       r15                                         ; Begin of unwind block (FDE at 0x1d144), CODE XREF=abformat_init+265, ambsalign+89
000000000000fbf2         push       r14
000000000000fbf4         mov        r14, rdi
000000000000fbf7         push       r13
000000000000fbf9         push       r12
000000000000fbfb         mov        r13, rsi
000000000000fbfe         push       rbp
000000000000fbff         push       rbx
000000000000fc00         mov        ebx, r9d
000000000000fc03         mov        r12, rcx
000000000000fc06         sub        rsp, 0x38
000000000000fc0a         mov        qword [rsp+0x68+var_58], rdx
000000000000fc0f         mov        dword [rsp+0x68+var_4C], r8d
000000000000fc14         call       j_strlen                                    ; strlen
000000000000fc19         test       bl, 0x2
000000000000fc1c         mov        r15, rax
000000000000fc1f         mov        qword [rsp+0x68+var_60], rax
000000000000fc24         je         loc_fd90

                     loc_fc2a:
000000000000fc2a         mov        rbp, r15                                    ; CODE XREF=mbsalign+425, mbsalign+452
000000000000fc2d         mov        qword [rsp+0x68+var_68], 0x0
000000000000fc35         mov        qword [rsp+0x68+var_60], 0x0

                     loc_fc3e:
000000000000fc3e         mov        rax, qword [r12]                            ; CODE XREF=mbsalign+815, mbsalign+832, mbsalign+899, mbsalign+932
000000000000fc42         cmp        rax, rbp
000000000000fc45         jae        loc_fd59

000000000000fc4b         mov        r15, rax
000000000000fc4e         xor        edx, edx

                     loc_fc50:
000000000000fc50         mov        qword [r12], rax                            ; CODE XREF=mbsalign+959
000000000000fc54         mov        eax, dword [rsp+0x68+var_4C]
000000000000fc58         test       eax, eax
000000000000fc5a         je         loc_fd7b

                     loc_fc60:
000000000000fc60         xor        ebp, ebp                                    ; CODE XREF=mbsalign+389
000000000000fc62         cmp        eax, 0x1
000000000000fc65         je         loc_fc73

000000000000fc67         mov        rbp, rdx
000000000000fc6a         and        edx, 0x1
000000000000fc6d         shr        rbp, 0x1
000000000000fc70         add        rdx, rbp

                     loc_fc73:
000000000000fc73         test       bl, 0x4                                     ; CODE XREF=mbsalign+117, mbsalign+400
000000000000fc76         lea        r12, qword [rdx+r15]
000000000000fc7a         je         loc_fc81

000000000000fc7c         mov        r12, r15
000000000000fc7f         xor        edx, edx

                     loc_fc81:
000000000000fc81         and        ebx, 0x8                                    ; CODE XREF=mbsalign+138
000000000000fc84         jne        loc_fd88

000000000000fc8a         add        r12, rbp

                     loc_fc8d:
000000000000fc8d         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=mbsalign+410
000000000000fc92         test       rax, rax
000000000000fc95         je         loc_fd21

000000000000fc9b         lea        rbx, qword [r13+rax-1]
000000000000fca0         lea        rax, qword [rdx-1]
000000000000fca4         cmp        r13, rbx
000000000000fca7         jae        loc_fccf

000000000000fca9         test       rdx, rdx
000000000000fcac         je         loc_fccf

000000000000fcae         nop

                     loc_fcb0:
000000000000fcb0         add        r13, 0x1                                    ; CODE XREF=mbsalign+221
000000000000fcb4         mov        byte [r13-1], 0x20
000000000000fcb9         cmp        rbx, r13
000000000000fcbc         seta       sil
000000000000fcc0         test       rax, rax
000000000000fcc3         setne      dl
000000000000fcc6         sub        rax, 0x1
000000000000fcca         test       sil, dl
000000000000fccd         jne        loc_fcb0

                     loc_fccf:
000000000000fccf         mov        rdx, rbx                                    ; CODE XREF=mbsalign+183, mbsalign+188
000000000000fcd2         mov        byte [r13], 0x0
000000000000fcd7         mov        rsi, r14                                    ; argument "__src" for method j_mempcpy
000000000000fcda         sub        rdx, r13
000000000000fcdd         mov        rdi, r13                                    ; argument "__dest" for method j_mempcpy
000000000000fce0         cmp        rdx, r15
000000000000fce3         cmova      rdx, r15                                    ; argument "__n" for method j_mempcpy
000000000000fce7         call       j_mempcpy                                   ; mempcpy
000000000000fcec         cmp        rbx, rax
000000000000fcef         lea        rdx, qword [rbp-1]
000000000000fcf3         jbe        loc_fd1e

000000000000fcf5         test       rbp, rbp
000000000000fcf8         je         loc_fd1e

000000000000fcfa         nop        word [rax+rax]

                     loc_fd00:
000000000000fd00         add        rax, 0x1                                    ; CODE XREF=mbsalign+300
000000000000fd04         test       rdx, rdx
000000000000fd07         mov        byte [rax-1], 0x20
000000000000fd0b         setne      sil
000000000000fd0f         cmp        rbx, rax
000000000000fd12         seta       cl
000000000000fd15         sub        rdx, 0x1
000000000000fd19         test       sil, cl
000000000000fd1c         jne        loc_fd00

                     loc_fd1e:
000000000000fd1e         mov        byte [rax], 0x0                             ; CODE XREF=mbsalign+259, mbsalign+264

                     loc_fd21:
000000000000fd21         mov        rdi, qword [rsp+0x68+var_68]                ; CODE XREF=mbsalign+165, mbsalign+482, mbsalign+912
000000000000fd25         call       sub_3880                                    ; sub_3880
000000000000fd2a         mov        rdi, qword [rsp+0x68+var_60]
000000000000fd2f         call       sub_3880                                    ; sub_3880
000000000000fd34         add        rsp, 0x38
000000000000fd38         mov        rax, r12
000000000000fd3b         pop        rbx
000000000000fd3c         pop        rbp
000000000000fd3d         pop        r12
000000000000fd3f         pop        r13
000000000000fd41         pop        r14
000000000000fd43         pop        r15
000000000000fd45         ret
                        ; endp
000000000000fd46         align      16

                     loc_fd50:
000000000000fd50         mov        qword [rsp+0x68+var_60], 0x0                ; CODE XREF=mbsalign+863

                     loc_fd59:
000000000000fd59         cmp        rbp, rax                                    ; CODE XREF=mbsalign+85
000000000000fd5c         jae        loc_ffaa

000000000000fd62         sub        rax, rbp
000000000000fd65         mov        rdx, rax
000000000000fd68         mov        rax, rbp
000000000000fd6b         mov        qword [r12], rax
000000000000fd6f         mov        eax, dword [rsp+0x68+var_4C]
000000000000fd73         test       eax, eax
000000000000fd75         jne        loc_fc60

                     loc_fd7b:
000000000000fd7b         mov        rbp, rdx                                    ; CODE XREF=mbsalign+106
000000000000fd7e         xor        edx, edx
000000000000fd80         jmp        loc_fc73
000000000000fd85         align      8

                     loc_fd88:
000000000000fd88         xor        ebp, ebp                                    ; CODE XREF=mbsalign+148
000000000000fd8a         jmp        loc_fc8d
000000000000fd8f         align      16

                     loc_fd90:
000000000000fd90         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max, CODE XREF=mbsalign+52
000000000000fd95         cmp        rax, 0x1
000000000000fd99         jbe        loc_fc2a

000000000000fd9f         xor        edx, edx                                    ; argument "__n" for method j_mbstowcs
000000000000fda1         xor        edi, edi                                    ; argument "__pwcs" for method j_mbstowcs
000000000000fda3         mov        rsi, r14                                    ; argument "__s" for method j_mbstowcs
000000000000fda6         call       j_mbstowcs                                  ; mbstowcs
000000000000fdab         cmp        rax, 0xffffffffffffffff
000000000000fdaf         jne        loc_fde0

000000000000fdb1         test       bl, 0x1
000000000000fdb4         jne        loc_fc2a

                     loc_fdba:
000000000000fdba         mov        qword [rsp+0x68+var_68], 0x0                ; CODE XREF=mbsalign+938
000000000000fdc2         mov        qword [rsp+0x68+var_60], 0x0
000000000000fdcb         mov        r12, 0xffffffffffffffff
000000000000fdd2         jmp        loc_fd21
000000000000fdd7         align      32

                     loc_fde0:
000000000000fde0         lea        rbp, qword [rax+1]                          ; CODE XREF=mbsalign+447
000000000000fde4         lea        rax, qword [rbp*4]
000000000000fdec         mov        rdi, rax
000000000000fdef         mov        qword [rsp+0x68+var_48], rax
000000000000fdf4         call       sub_3888                                    ; sub_3888
000000000000fdf9         test       rax, rax
000000000000fdfc         mov        qword [rsp+0x68+var_68], rax
000000000000fe00         je         loc_ff85

000000000000fe06         mov        rdi, qword [rsp+0x68+var_68]                ; argument "__pwcs" for method j_mbstowcs
000000000000fe0a         mov        rdx, rbp                                    ; argument "__n" for method j_mbstowcs
000000000000fe0d         mov        rsi, r14                                    ; argument "__s" for method j_mbstowcs
000000000000fe10         call       j_mbstowcs                                  ; mbstowcs
000000000000fe15         test       rax, rax
000000000000fe18         je         loc_ff24

000000000000fe1e         mov        rax, qword [rsp+0x68+var_68]
000000000000fe22         mov        rcx, qword [rsp+0x68+var_48]
000000000000fe27         mov        dword [rax+rcx-4], 0x0
000000000000fe2f         mov        edi, dword [rax]
000000000000fe31         mov        rdx, rax
000000000000fe34         test       edi, edi
000000000000fe36         je         loc_ff35

000000000000fe3c         mov        byte [rsp+0x68+var_48], 0x0
000000000000fe41         nop        dword [rax]

                     loc_fe48:
000000000000fe48         mov        qword [rsp+0x68+var_40], rdx                ; CODE XREF=mbsalign+638
000000000000fe4d         call       j_iswprint                                  ; iswprint
000000000000fe52         test       eax, eax
000000000000fe54         mov        rdx, qword [rsp+0x68+var_40]
000000000000fe59         jne        loc_fe66

000000000000fe5b         mov        dword [rdx], 0xfffd
000000000000fe61         mov        byte [rsp+0x68+var_48], 0x1

                     loc_fe66:
000000000000fe66         add        rdx, 0x4                                    ; CODE XREF=mbsalign+617
000000000000fe6a         mov        edi, dword [rdx]
000000000000fe6c         test       edi, edi
000000000000fe6e         jne        loc_fe48

000000000000fe70         mov        rdi, qword [rsp+0x68+var_68]                ; argument "__s" for method j_wcswidth
000000000000fe74         mov        rsi, rbp                                    ; argument "__n" for method j_wcswidth
000000000000fe77         call       j_wcswidth                                  ; wcswidth
000000000000fe7c         cmp        byte [rsp+0x68+var_48], 0x0
000000000000fe81         movsxd     rbp, eax
000000000000fe84         je         loc_ff48

000000000000fe8a         mov        rsi, qword [rsp+0x68+var_68]                ; argument "__pwcs" for method j_wcstombs
000000000000fe8e         xor        edx, edx                                    ; argument "__n" for method j_wcstombs
000000000000fe90         xor        edi, edi                                    ; argument "__s" for method j_wcstombs
000000000000fe92         call       j_wcstombs                                  ; wcstombs
000000000000fe97         add        rax, 0x1
000000000000fe9b         mov        qword [rsp+0x68+var_48], rax

                     loc_fea0:
000000000000fea0         mov        rdi, qword [rsp+0x68+var_48]                ; CODE XREF=mbsalign+883
000000000000fea5         call       sub_3888                                    ; sub_3888
000000000000feaa         test       rax, rax
000000000000fead         mov        qword [rsp+0x68+var_60], rax
000000000000feb2         je         loc_ff70

000000000000feb8         mov        r15, qword [rsp+0x68+var_68]
000000000000febc         mov        r14, qword [r12]
000000000000fec0         mov        edi, dword [r15]
000000000000fec3         test       edi, edi
000000000000fec5         je         loc_ff9f

000000000000fecb         xor        ebp, ebp
000000000000fecd         jmp        loc_fede
000000000000fecf         align      16

                     loc_fed0:
000000000000fed0         add        r15, 0x4                                    ; CODE XREF=mbsalign+781
000000000000fed4         mov        edi, dword [r15]
000000000000fed7         mov        rbp, rdx
000000000000feda         test       edi, edi
000000000000fedc         je         loc_feff

                     loc_fede:
000000000000fede         call       j_wcwidth                                   ; wcwidth, CODE XREF=mbsalign+733
000000000000fee3         cmp        eax, 0xffffffff
000000000000fee6         movsxd     rdx, eax
000000000000fee9         jne        loc_fef7

000000000000feeb         mov        dword [r15], 0xfffd
000000000000fef2         mov        edx, 0x1

                     loc_fef7:
000000000000fef7         add        rdx, rbp                                    ; CODE XREF=mbsalign+761
000000000000fefa         cmp        r14, rdx
000000000000fefd         jae        loc_fed0

                     loc_feff:
000000000000feff         mov        r14, qword [rsp+0x68+var_60]                ; CODE XREF=mbsalign+748, mbsalign+949
000000000000ff04         mov        rdx, qword [rsp+0x68+var_48]                ; argument "__n" for method j_wcstombs
000000000000ff09         mov        rsi, qword [rsp+0x68+var_68]                ; argument "__pwcs" for method j_wcstombs
000000000000ff0d         mov        dword [r15], 0x0
000000000000ff14         mov        rdi, r14                                    ; argument "__s" for method j_wcstombs
000000000000ff17         call       j_wcstombs                                  ; wcstombs
000000000000ff1c         mov        r15, rax
000000000000ff1f         jmp        loc_fc3e

                     loc_ff24:
000000000000ff24         mov        rbp, r15                                    ; CODE XREF=mbsalign+552
000000000000ff27         mov        qword [rsp+0x68+var_60], 0x0
000000000000ff30         jmp        loc_fc3e

                     loc_ff35:
000000000000ff35         mov        rdi, qword [rsp+0x68+var_68]                ; argument "__s" for method j_wcswidth, CODE XREF=mbsalign+582
000000000000ff39         mov        rsi, rbp                                    ; argument "__n" for method j_wcswidth
000000000000ff3c         call       j_wcswidth                                  ; wcswidth
000000000000ff41         movsxd     rbp, eax
000000000000ff44         nop        dword [rax]

                     loc_ff48:
000000000000ff48         mov        rax, qword [r12]                            ; CODE XREF=mbsalign+660
000000000000ff4c         cmp        rax, rbp
000000000000ff4f         jae        loc_fd50

000000000000ff55         mov        rax, qword [rsp+0x68+var_60]
000000000000ff5a         add        rax, 0x1
000000000000ff5e         mov        qword [rsp+0x68+var_48], rax
000000000000ff63         jmp        loc_fea0
000000000000ff68         align      16

                     loc_ff70:
000000000000ff70         test       bl, 0x1                                     ; CODE XREF=mbsalign+706
000000000000ff73         jne        loc_fc3e

000000000000ff79         mov        r12, 0xffffffffffffffff
000000000000ff80         jmp        loc_fd21

                     loc_ff85:
000000000000ff85         test       bl, 0x1                                     ; CODE XREF=mbsalign+528
000000000000ff88         mov        rbp, r15
000000000000ff8b         mov        qword [rsp+0x68+var_60], 0x0
000000000000ff94         jne        loc_fc3e

000000000000ff9a         jmp        loc_fdba

                     loc_ff9f:
000000000000ff9f         mov        r15, qword [rsp+0x68+var_68]                ; CODE XREF=mbsalign+725
000000000000ffa3         xor        ebp, ebp
000000000000ffa5         jmp        loc_feff

                     loc_ffaa:
000000000000ffaa         mov        rax, rbp                                    ; CODE XREF=mbsalign+364
000000000000ffad         xor        edx, edx
000000000000ffaf         jmp        loc_fc50
000000000000ffb4         align      64                                          ; End of unwind block (FDE at 0x1d144)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64


                     ambsalign:
000000000000ffc0         push       r15                                         ; Begin of unwind block (FDE at 0x1d190)
000000000000ffc2         push       r14
000000000000ffc4         mov        r15, rdi
000000000000ffc7         push       r13
000000000000ffc9         push       r12
000000000000ffcb         xor        r12d, r12d
000000000000ffce         push       rbp
000000000000ffcf         push       rbx
000000000000ffd0         mov        rbp, rsi
000000000000ffd3         sub        rsp, 0x18
000000000000ffd7         mov        r13, qword [rsi]
000000000000ffda         mov        dword [rsp+0x48+var_40], edx
000000000000ffde         mov        dword [rsp+0x48+var_3C], ecx
000000000000ffe2         mov        rax, r13
000000000000ffe5         nop        dword [rax]

                     loc_ffe8:
000000000000ffe8         lea        rbx, qword [rax+1]                          ; CODE XREF=ambsalign+106
000000000000ffec         mov        rdi, r12                                    ; argument "__ptr" for method j_realloc
000000000000ffef         mov        rsi, rbx                                    ; argument "__size" for method j_realloc
000000000000fff2         call       j_realloc                                   ; realloc
000000000000fff7         test       rax, rax
000000000000fffa         mov        r14, rax
000000000000fffd         je         loc_10040                                   ; DATA XREF=mbsalign+619, mbsalign+763

000000000000ffff         mov        r9d, dword [rsp+0x48+var_3C]
0000000000010004         mov        r8d, dword [rsp+0x48+var_40]
0000000000010009         mov        rcx, rbp
000000000001000c         mov        qword [rbp], r13
0000000000010010         mov        rdx, rbx
0000000000010013         mov        rsi, rax
0000000000010016         mov        rdi, r15
0000000000010019         call       mbsalign                                    ; mbsalign
000000000001001e         cmp        rax, 0xffffffffffffffff
0000000000010022         je         loc_10050

0000000000010024         cmp        rbx, rax
0000000000010027         mov        r12, r14
000000000001002a         jbe        loc_ffe8

                     loc_1002c:
000000000001002c         add        rsp, 0x18                                   ; CODE XREF=ambsalign+136, ambsalign+155
0000000000010030         mov        rax, r14
0000000000010033         pop        rbx
0000000000010034         pop        rbp
0000000000010035         pop        r12
0000000000010037         pop        r13
0000000000010039         pop        r14
000000000001003b         pop        r15
000000000001003d         ret
                        ; endp
000000000001003e         align      64

                     loc_10040:
0000000000010040         mov        rdi, r12                                    ; CODE XREF=ambsalign+61
0000000000010043         call       sub_3880                                    ; sub_3880
0000000000010048         jmp        loc_1002c
000000000001004a         align      16

                     loc_10050:
0000000000010050         mov        rdi, r14                                    ; CODE XREF=ambsalign+98
0000000000010053         xor        r14d, r14d
0000000000010056         call       sub_3880                                    ; sub_3880
000000000001005b         jmp        loc_1002c
000000000001005d         align      32                                          ; End of unwind block (FDE at 0x1d190)

                     mbsnwidth:
0000000000010060         push       r15                                         ; Begin of unwind block (FDE at 0x1d1dc), CODE XREF=quote_name_buf.constprop.54+768, print_long_format+2499, gnu_mbswidth+30
0000000000010062         push       r14
0000000000010064         push       r13
0000000000010066         push       r12
0000000000010068         lea        r13, qword [rdi+rsi]
000000000001006c         push       rbp
000000000001006d         push       rbx
000000000001006e         mov        rbx, rdi
0000000000010071         sub        rsp, 0x38
0000000000010075         mov        rax, qword [fs:0x28]
000000000001007e         mov        qword [rsp+0x68+var_40], rax
0000000000010083         xor        eax, eax
0000000000010085         mov        dword [rsp+0x68+var_5C], edx
0000000000010089         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
000000000001008e         cmp        rax, 0x1
0000000000010092         jbe        loc_101c8

0000000000010098         xor        ebp, ebp
000000000001009a         cmp        rbx, r13
000000000001009d         jae        loc_1018d

00000000000100a3         lea        r12, qword [rsp+0x68+var_48]
00000000000100a8         lea        r14, qword [rsp+0x68+var_4C]
00000000000100ad         jmp        loc_100cb
00000000000100af         align      16

                     loc_100b0:
00000000000100b0         cmp        al, 0x25                                    ; CODE XREF=mbsnwidth+112
00000000000100b2         jge        loc_100bb

00000000000100b4         sub        eax, 0x20
00000000000100b7         cmp        al, 0x3
00000000000100b9         ja         loc_100e1

                     loc_100bb:
00000000000100bb         add        rbx, 0x1                                    ; CODE XREF=mbsnwidth+82, mbsnwidth+120, mbsnwidth+127, mbsnwidth+285
00000000000100bf         add        ebp, 0x1

                     loc_100c2:
00000000000100c2         cmp        rbx, r13                                    ; CODE XREF=mbsnwidth+174, mbsnwidth+349
00000000000100c5         jae        loc_1018d

                     loc_100cb:
00000000000100cb         movzx      eax, byte [rbx]                             ; CODE XREF=mbsnwidth+77
00000000000100ce         cmp        al, 0x3f
00000000000100d0         jle        loc_100b0

00000000000100d2         cmp        al, 0x41
00000000000100d4         jl         loc_100e1

00000000000100d6         cmp        al, 0x5f
00000000000100d8         jle        loc_100bb

00000000000100da         sub        eax, 0x61
00000000000100dd         cmp        al, 0x1d
00000000000100df         jbe        loc_100bb

                     loc_100e1:
00000000000100e1         mov        qword [r12], 0x0                            ; CODE XREF=mbsnwidth+89, mbsnwidth+116
00000000000100e9         jmp        loc_10110
00000000000100eb         align      16

                     loc_100f0:
00000000000100f0         mov        ecx, 0x7fffffff                             ; CODE XREF=mbsnwidth+234
00000000000100f5         sub        ecx, ebp
00000000000100f7         cmp        ecx, eax
00000000000100f9         jl         loc_10210

00000000000100ff         add        ebp, eax

                     loc_10101:
0000000000010101         mov        rdi, r12                                    ; argument "__ps" for method j_mbsinit, CODE XREF=mbsnwidth+254, mbsnwidth+271
0000000000010104         add        rbx, r15
0000000000010107         call       j_mbsinit                                   ; mbsinit
000000000001010c         test       eax, eax
000000000001010e         jne        loc_100c2

                     loc_10110:
0000000000010110         mov        rdx, r13                                    ; CODE XREF=mbsnwidth+137
0000000000010113         mov        rcx, r12
0000000000010116         mov        rsi, rbx
0000000000010119         sub        rdx, rbx
000000000001011c         mov        rdi, r14
000000000001011f         call       rpl_mbrtowc                                 ; rpl_mbrtowc
0000000000010124         cmp        rax, 0xffffffffffffffff
0000000000010128         mov        r15, rax
000000000001012b         je         loc_10178

000000000001012d         cmp        rax, 0xfffffffffffffffe
0000000000010131         je         loc_101b0

0000000000010133         mov        edi, dword [rsp+0x68+var_4C]                ; argument "__c" for method j_wcwidth
0000000000010137         test       rax, rax
000000000001013a         mov        eax, 0x1
000000000001013f         cmove      r15, rax
0000000000010143         call       j_wcwidth                                   ; wcwidth
0000000000010148         test       eax, eax
000000000001014a         jns        loc_100f0

000000000001014c         test       byte [rsp+0x68+var_5C], 0x2
0000000000010151         jne        loc_10188

0000000000010153         mov        edi, dword [rsp+0x68+var_4C]                ; argument "__wc" for method j_iswcntrl
0000000000010157         call       j_iswcntrl                                  ; iswcntrl
000000000001015c         test       eax, eax
000000000001015e         jne        loc_10101

0000000000010160         cmp        ebp, 0x7fffffff
0000000000010166         je         loc_10210

000000000001016c         add        ebp, 0x1
000000000001016f         jmp        loc_10101
0000000000010171         align      8

                     loc_10178:
0000000000010178         test       byte [rsp+0x68+var_5C], 0x1                 ; CODE XREF=mbsnwidth+203
000000000001017d         je         loc_100bb

0000000000010183         nop        dword [rax+rax]

                     loc_10188:
0000000000010188         mov        ebp, 0xffffffff                             ; CODE XREF=mbsnwidth+241, mbsnwidth+341, mbsnwidth+403

                     loc_1018d:
000000000001018d         mov        rsi, qword [rsp+0x68+var_40]                ; CODE XREF=mbsnwidth+61, mbsnwidth+101, mbsnwidth+365, mbsnwidth+415, mbsnwidth+425, mbsnwidth+437
0000000000010192         xor        rsi, qword [fs:0x28]
000000000001019b         mov        eax, ebp
000000000001019d         jne        loc_1021a

000000000001019f         add        rsp, 0x38
00000000000101a3         pop        rbx
00000000000101a4         pop        rbp
00000000000101a5         pop        r12
00000000000101a7         pop        r13
00000000000101a9         pop        r14
00000000000101ab         pop        r15
00000000000101ad         ret
                        ; endp
00000000000101ae         align      16

                     loc_101b0:
00000000000101b0         test       byte [rsp+0x68+var_5C], 0x1                 ; CODE XREF=mbsnwidth+209
00000000000101b5         jne        loc_10188

00000000000101b7         add        ebp, 0x1
00000000000101ba         mov        rbx, r13
00000000000101bd         jmp        loc_100c2
00000000000101c2         align      8

                     loc_101c8:
00000000000101c8         xor        ebp, ebp                                    ; CODE XREF=mbsnwidth+50
00000000000101ca         cmp        rbx, r13
00000000000101cd         jae        loc_1018d

00000000000101cf         call       j___ctype_b_loc                             ; __ctype_b_loc
00000000000101d4         mov        edx, dword [rsp+0x68+var_5C]
00000000000101d8         mov        rcx, qword [rax]
00000000000101db         xor        ebp, ebp
00000000000101dd         and        edx, 0x2

                     loc_101e0:
00000000000101e0         add        rbx, 0x1                                    ; CODE XREF=mbsnwidth+423
00000000000101e4         movzx      eax, byte [rbx-1]
00000000000101e8         movzx      eax, word [rcx+rax*2]
00000000000101ec         test       ah, 0x40
00000000000101ef         jne        loc_101f9

00000000000101f1         test       edx, edx
00000000000101f3         jne        loc_10188

00000000000101f5         test       al, 0x2
00000000000101f7         jne        loc_10204

                     loc_101f9:
00000000000101f9         cmp        ebp, 0x7fffffff                             ; CODE XREF=mbsnwidth+399
00000000000101ff         je         loc_1018d

0000000000010201         add        ebp, 0x1

                     loc_10204:
0000000000010204         cmp        r13, rbx                                    ; CODE XREF=mbsnwidth+407
0000000000010207         jne        loc_101e0

0000000000010209         jmp        loc_1018d
000000000001020b         align      16

                     loc_10210:
0000000000010210         mov        ebp, 0x7fffffff                             ; CODE XREF=mbsnwidth+153, mbsnwidth+262
0000000000010215         jmp        loc_1018d

                     loc_1021a:
000000000001021a         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=mbsnwidth+317
                        ; endp
000000000001021f         align      32                                          ; End of unwind block (FDE at 0x1d1dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int8_t, -72
        ;    var_4C: int32_t, -76
        ;    var_5C: int32_t, -92


                     gnu_mbswidth:
0000000000010220         push       rbp                                         ; Begin of unwind block (FDE at 0x1d228), CODE XREF=format_user_or_group+22, print_long_format+327, print_long_format+706, format_user_width+171, gobble_file.constprop.52+612, gobble_file.constprop.52+2135, gobble_file.constprop.52+3302
0000000000010221         push       rbx
0000000000010222         mov        ebp, esi
0000000000010224         mov        rbx, rdi
0000000000010227         sub        rsp, 0x8
000000000001022b         call       j_strlen                                    ; strlen
0000000000010230         add        rsp, 0x8
0000000000010234         mov        edx, ebp
0000000000010236         mov        rdi, rbx
0000000000010239         pop        rbx
000000000001023a         pop        rbp
000000000001023b         mov        rsi, rax
000000000001023e         jmp        mbsnwidth                                   ; mbsnwidth
0000000000010243         align      16                                          ; End of unwind block (FDE at 0x1d228)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104


                     mpsort_with_tmp:
0000000000010250         push       r15                                         ; Begin of unwind block (FDE at 0x1d254), CODE XREF=mpsort_with_tmp+124, mpsort_with_tmp+379, mpsort_with_tmp+396, mpsort+10
0000000000010252         push       r14
0000000000010254         push       r13
0000000000010256         push       r12
0000000000010258         mov        r13, rdi
000000000001025b         push       rbp
000000000001025c         push       rbx
000000000001025d         mov        rbx, rcx
0000000000010260         sub        rsp, 0x38
0000000000010264         cmp        rsi, 0x2
0000000000010268         mov        qword [rsp+0x68+var_68], rsi
000000000001026c         mov        qword [rsp+0x68+var_58], rdx
0000000000010271         ja         loc_102a0

0000000000010273         jne        loc_10290

0000000000010275         mov        r12, qword [rdi+8]
0000000000010279         mov        rbp, qword [rdi]
000000000001027c         mov        rsi, r12
000000000001027f         mov        rdi, rbp
0000000000010282         call       rcx
0000000000010284         test       eax, eax
0000000000010286         jle        loc_10290

0000000000010288         mov        qword [r13], r12
000000000001028c         mov        qword [r13+8], rbp

                     loc_10290:
0000000000010290         add        rsp, 0x38                                   ; CODE XREF=mpsort_with_tmp+35, mpsort_with_tmp+54, mpsort_with_tmp+249
0000000000010294         pop        rbx
0000000000010295         pop        rbp
0000000000010296         pop        r12
0000000000010298         pop        r13
000000000001029a         pop        r14
000000000001029c         pop        r15
000000000001029e         ret
                        ; endp
000000000001029f         align      32

                     loc_102a0:
00000000000102a0         mov        rax, qword [rsp+0x68+var_68]                ; CODE XREF=mpsort_with_tmp+33
00000000000102a4         mov        r15, qword [rsp+0x68+var_58]
00000000000102a9         mov        rcx, rax
00000000000102ac         mov        rsi, rax
00000000000102af         mov        rdx, r15
00000000000102b2         shr        rcx, 0x1
00000000000102b5         lea        rdi, qword [rdi+rcx*8]
00000000000102b9         sub        rsi, rcx
00000000000102bc         mov        r14, rcx
00000000000102bf         mov        qword [rsp+0x68+var_50], rcx
00000000000102c4         mov        rcx, rbx
00000000000102c7         mov        qword [rsp+0x68+var_40], rdi
00000000000102cc         call       mpsort_with_tmp                             ; mpsort_with_tmp
00000000000102d1         cmp        r14, 0x1
00000000000102d5         jne        loc_103a0

00000000000102db         mov        r14, qword [r13]
00000000000102df         mov        qword [r15], r14

                     loc_102e2:
00000000000102e2         mov        rax, qword [rsp+0x68+var_40]                ; CODE XREF=mpsort_with_tmp+565
00000000000102e7         mov        r15, qword [rsp+0x68+var_50]
00000000000102ec         xor        r12d, r12d
00000000000102ef         mov        qword [rsp+0x68+var_60], 0x0
00000000000102f8         mov        rbp, qword [rax]
00000000000102fb         nop        dword [rax+rax]

                     loc_10300:
0000000000010300         mov        rsi, rbp                                    ; CODE XREF=mpsort_with_tmp+264
0000000000010303         mov        rdi, r14
0000000000010306         add        r12, 0x1
000000000001030a         call       rbx
000000000001030c         test       eax, eax
000000000001030e         jle        loc_10334

                     loc_10310:
0000000000010310         add        r15, 0x1                                    ; CODE XREF=mpsort_with_tmp+226
0000000000010314         cmp        qword [rsp+0x68+var_68], r15
0000000000010318         mov        qword [r13+r12*8-8], rbp
000000000001031d         je         loc_10360

000000000001031f         mov        rbp, qword [r13+r15*8]
0000000000010324         mov        rdi, r14
0000000000010327         add        r12, 0x1
000000000001032b         mov        rsi, rbp
000000000001032e         call       rbx
0000000000010330         test       eax, eax
0000000000010332         jg         loc_10310

                     loc_10334:
0000000000010334         add        qword [rsp+0x68+var_60], 0x1                ; CODE XREF=mpsort_with_tmp+190
000000000001033a         mov        qword [r13+r12*8-8], r14
000000000001033f         mov        rax, qword [rsp+0x68+var_60]
0000000000010344         cmp        qword [rsp+0x68+var_50], rax
0000000000010349         je         loc_10290

000000000001034f         mov        rdx, qword [rsp+0x68+var_58]
0000000000010354         mov        r14, qword [rdx+rax*8]
0000000000010358         jmp        loc_10300
000000000001035a         align      32

                     loc_10360:
0000000000010360         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=mpsort_with_tmp+205
0000000000010365         lea        rdi, qword [r13+r12*8]                      ; argument "__dest" for method j_memcpy
000000000001036a         mov        r12, qword [rsp+0x68+var_50]
000000000001036f         mov        rcx, qword [rsp+0x68+var_58]
0000000000010374         add        rsp, 0x38
0000000000010378         pop        rbx
0000000000010379         sub        r12, rax
000000000001037c         pop        rbp
000000000001037d         lea        rdx, qword [r12*8]                          ; argument "__n" for method j_memcpy
0000000000010385         lea        rsi, qword [rcx+rax*8]                      ; argument "__src" for method j_memcpy
0000000000010389         pop        r12
000000000001038b         pop        r13
000000000001038d         pop        r14
000000000001038f         pop        r15
0000000000010391         jmp        j_memcpy                                    ; memcpy
                        ; endp
0000000000010396         align      32

                     loc_103a0:
00000000000103a0         mov        r14, qword [rsp+0x68+var_68]                ; CODE XREF=mpsort_with_tmp+133
00000000000103a4         mov        r12, qword [rsp+0x68+var_58]
00000000000103a9         mov        rcx, rbx
00000000000103ac         mov        rsi, qword [rsp+0x68+var_50]
00000000000103b1         shr        r14, 0x2
00000000000103b5         mov        rdx, r12
00000000000103b8         lea        r15, qword [r13+r14*8]
00000000000103bd         sub        rsi, r14
00000000000103c0         mov        qword [rsp+0x68+var_48], r14
00000000000103c5         mov        rbp, r14
00000000000103c8         mov        rdi, r15
00000000000103cb         call       mpsort_with_tmp                             ; mpsort_with_tmp
00000000000103d0         mov        rsi, r14
00000000000103d3         mov        rcx, rbx
00000000000103d6         mov        rdx, r12
00000000000103d9         mov        rdi, r13
00000000000103dc         call       mpsort_with_tmp                             ; mpsort_with_tmp
00000000000103e1         mov        r14, qword [r13]
00000000000103e5         mov        r15, qword [r15]
00000000000103e8         mov        qword [rsp+0x68+var_60], 0x0
00000000000103f1         nop        dword [rax]

                     loc_103f8:
00000000000103f8         mov        rsi, r15                                    ; CODE XREF=mpsort_with_tmp+505
00000000000103fb         mov        rdi, r14
00000000000103fe         add        r12, 0x8
0000000000010402         call       rbx
0000000000010404         test       eax, eax
0000000000010406         jle        loc_1042d

                     loc_10408:
0000000000010408         add        rbp, 0x1                                    ; CODE XREF=mpsort_with_tmp+475
000000000001040c         cmp        qword [rsp+0x68+var_50], rbp
0000000000010411         mov        qword [r12-8], r15
0000000000010416         je         loc_1045f

0000000000010418         mov        r15, qword [r13+rbp*8]
000000000001041d         mov        rdi, r14
0000000000010420         add        r12, 0x8
0000000000010424         mov        rsi, r15
0000000000010427         call       rbx
0000000000010429         test       eax, eax
000000000001042b         jg         loc_10408

                     loc_1042d:
000000000001042d         add        qword [rsp+0x68+var_60], 0x1                ; CODE XREF=mpsort_with_tmp+438
0000000000010433         mov        qword [r12-8], r14
0000000000010438         mov        rax, qword [rsp+0x68+var_60]
000000000001043d         cmp        qword [rsp+0x68+var_48], rax
0000000000010442         je         loc_10450

0000000000010444         mov        r14, qword [r13+rax*8]
0000000000010449         jmp        loc_103f8
000000000001044b         align      16

                     loc_10450:
0000000000010450         mov        rax, qword [rsp+0x68+var_50]                ; CODE XREF=mpsort_with_tmp+498
0000000000010455         mov        qword [rsp+0x68+var_60], rbp
000000000001045a         mov        qword [rsp+0x68+var_48], rax

                     loc_1045f:
000000000001045f         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=mpsort_with_tmp+454
0000000000010464         mov        rdx, qword [rsp+0x68+var_48]
0000000000010469         mov        rdi, r12                                    ; argument "__dest" for method j_memcpy
000000000001046c         sub        rdx, rax
000000000001046f         lea        rsi, qword [r13+rax*8]                      ; argument "__src" for method j_memcpy
0000000000010474         shl        rdx, 0x3                                    ; argument "__n" for method j_memcpy
0000000000010478         call       j_memcpy                                    ; memcpy
000000000001047d         mov        rax, qword [rsp+0x68+var_58]
0000000000010482         mov        r14, qword [rax]
0000000000010485         jmp        loc_102e2
000000000001048a         align      16                                          ; End of unwind block (FDE at 0x1d254)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     mpsort:
0000000000010490         lea        rax, qword [rdi+rsi*8]                      ; Begin of unwind block (FDE at 0x1d2b8), CODE XREF=sort_files+263
0000000000010494         mov        rcx, rdx
0000000000010497         mov        rdx, rax
000000000001049a         jmp        mpsort_with_tmp                             ; mpsort_with_tmp
                        ; endp
000000000001049f         align      32                                          ; End of unwind block (FDE at 0x1d2b8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     memcpy_lowcase:
00000000000104a0         test       rdx, rdx                                    ; Begin of unwind block (FDE at 0x1d2cc), CODE XREF=sub_112b0+1936, sub_11d69+334
00000000000104a3         push       r12
00000000000104a5         push       rbp
00000000000104a6         mov        rbp, rdi
00000000000104a9         push       rbx
00000000000104aa         je         loc_104d9

00000000000104ac         mov        r12, rsi
00000000000104af         lea        rbx, qword [rdx-1]
00000000000104b3         call       j___ctype_tolower_loc                       ; __ctype_tolower_loc
00000000000104b8         nop        dword [rax+rax]

                     loc_104c0:
00000000000104c0         movzx      ecx, byte [r12+rbx]                         ; CODE XREF=memcpy_lowcase+55
00000000000104c5         mov        rdx, qword [rax]
00000000000104c8         mov        edx, dword [rdx+rcx*4]
00000000000104cb         mov        byte [rbp+rbx], dl
00000000000104cf         sub        rbx, 0x1
00000000000104d3         cmp        rbx, 0xffffffffffffffff
00000000000104d7         jne        loc_104c0

                     loc_104d9:
00000000000104d9         mov        rax, rbp                                    ; CODE XREF=memcpy_lowcase+10
00000000000104dc         pop        rbx
00000000000104dd         pop        rbp
00000000000104de         pop        r12
00000000000104e0         ret
                        ; endp
00000000000104e1         align      16                                          ; End of unwind block (FDE at 0x1d2cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     memcpy_uppcase:
00000000000104f0         test       rdx, rdx                                    ; Begin of unwind block (FDE at 0x1d2f8), CODE XREF=__strftime_internal+787, __strftime_internal+1265, sub_10df0+219
00000000000104f3         push       r12
00000000000104f5         push       rbp
00000000000104f6         mov        rbp, rdi
00000000000104f9         push       rbx
00000000000104fa         je         loc_10529

00000000000104fc         mov        r12, rsi
00000000000104ff         lea        rbx, qword [rdx-1]
0000000000010503         call       j___ctype_toupper_loc                       ; __ctype_toupper_loc
0000000000010508         nop        dword [rax+rax]

                     loc_10510:
0000000000010510         movzx      ecx, byte [r12+rbx]                         ; CODE XREF=memcpy_uppcase+55
0000000000010515         mov        rdx, qword [rax]
0000000000010518         mov        edx, dword [rdx+rcx*4]
000000000001051b         mov        byte [rbp+rbx], dl
000000000001051f         sub        rbx, 0x1
0000000000010523         cmp        rbx, 0xffffffffffffffff
0000000000010527         jne        loc_10510

                     loc_10529:
0000000000010529         mov        rax, rbp                                    ; CODE XREF=memcpy_uppcase+10
000000000001052c         pop        rbx
000000000001052d         pop        rbp
000000000001052e         pop        r12
0000000000010530         ret
                        ; endp
0000000000010531         align      64                                          ; End of unwind block (FDE at 0x1d2f8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_490: int32_t, -1168
        ;    var_4B0: int64_t, -1200
        ;    var_4B8: int64_t, -1208
        ;    var_4C0: int64_t, -1216
        ;    var_4C8: int64_t, -1224
        ;    var_4CC: int32_t, -1228
        ;    var_4CD: int8_t, -1229
        ;    var_4D8: int64_t, -1240
        ;    var_4E0: int64_t, -1248
        ;    var_4E8: int64_t, -1256
        ;    var_4F0: int64_t, -1264


                     __strftime_internal:
0000000000010540         push       r15                                         ; Begin of unwind block (FDE at 0x1d324), CODE XREF=__strftime_internal+1707, sub_10bf0+184, nstrftime+43
0000000000010542         push       r14
0000000000010544         mov        r11, rdx
0000000000010547         push       r13
0000000000010549         push       r12
000000000001054b         mov        r13, rcx
000000000001054e         push       rbp
000000000001054f         push       rbx
0000000000010550         mov        rbp, rdi
0000000000010553         sub        rsp, 0x4c8
000000000001055a         mov        rdi, qword [rcx+0x30]
000000000001055e         mov        r15d, dword [rcx+8]
0000000000010562         mov        rax, qword [rsp+0x4f8+arg_8]
000000000001056a         mov        qword [rsp+0x4f8+var_4F0], rsi
000000000001056f         mov        dword [rsp+0x4f8+var_4CC], r9d
0000000000010574         movsxd     r10, dword [rsp+0x4f8+arg_0]
000000000001057c         mov        byte [rsp+0x4f8+var_4CD], r8b
0000000000010581         mov        qword [rsp+0x4f8+var_4E0], rax
0000000000010586         mov        rax, qword [rsp+0x4f8+arg_10]
000000000001058e         mov        qword [rsp+0x4f8+var_4E8], rax
0000000000010593         mov        rax, qword [fs:0x28]
000000000001059c         mov        qword [rsp+0x4f8+var_40], rax
00000000000105a4         xor        eax, eax
00000000000105a6         lea        rax, qword [aLu+34]                         ; 0x178b3
00000000000105ad         test       rdi, rdi
00000000000105b0         cmovne     rax, rdi
00000000000105b4         cmp        r15d, 0xc
00000000000105b8         mov        qword [rsp+0x4f8+var_4D8], rax
00000000000105bd         jle        loc_106b0

00000000000105c3         sub        r15d, 0xc

                     loc_105c7:
00000000000105c7         movzx      eax, byte [r11]                             ; CODE XREF=__strftime_internal+380
00000000000105cb         xor        r14d, r14d
00000000000105ce         test       al, al
00000000000105d0         je         loc_1068c

00000000000105d6         mov        dword [rsp+0x4f8+var_490], r15d
00000000000105db         mov        rbx, r11

                     loc_105de:
00000000000105de         cmp        al, 0x25                                    ; CODE XREF=__strftime_internal+326
00000000000105e0         je         loc_106c8

00000000000105e6         test       r10d, r10d
00000000000105e9         mov        r12d, 0x0
00000000000105ef         mov        eax, 0x1
00000000000105f4         cmovns     r12, r10
00000000000105f8         test       r12, r12
00000000000105fb         cmove      r12, rax
00000000000105ff         mov        rax, qword [rsp+0x4f8+var_4F0]
0000000000010604         sub        rax, r14
0000000000010607         cmp        rax, r12
000000000001060a         ja         loc_10640

                     loc_1060c:
000000000001060c         xor        r14d, r14d                                  ; CODE XREF=__strftime_internal+660, __strftime_internal+1505, sub_10bf0+252, sub_112b0+1491

                     loc_1060f:
000000000001060f         mov        rbx, qword [rsp+0x4f8+var_40]               ; CODE XREF=__strftime_internal+335, __strftime_internal+347, __strftime_internal+357
0000000000010617         xor        rbx, qword [fs:0x28]
0000000000010620         mov        rax, r14
0000000000010623         jne        loc_11fd5

0000000000010629         add        rsp, 0x4c8
0000000000010630         pop        rbx
0000000000010631         pop        rbp
0000000000010632         pop        r12
0000000000010634         pop        r13
0000000000010636         pop        r14
0000000000010638         pop        r15
000000000001063a         ret
                        ; endp
000000000001063b         align      64

                     loc_10640:
0000000000010640         test       rbp, rbp                                    ; CODE XREF=__strftime_internal+202
0000000000010643         je         loc_1066c

0000000000010645         cmp        r10d, 0x1
0000000000010649         jle        loc_10662

000000000001064b         lea        r15, qword [r10-1]
000000000001064f         mov        rdi, rbp                                    ; argument "__s" for method j_memset
0000000000010652         mov        esi, 0x20                                   ; argument "__c" for method j_memset
0000000000010657         mov        rdx, r15                                    ; argument "__n" for method j_memset
000000000001065a         add        rbp, r15
000000000001065d         call       j_memset                                    ; memset

                     loc_10662:
0000000000010662         movzx      eax, byte [rbx]                             ; CODE XREF=__strftime_internal+265
0000000000010665         add        rbp, 0x1
0000000000010669         mov        byte [rbp-1], al

                     loc_1066c:
000000000001066c         add        r14, r12                                    ; CODE XREF=__strftime_internal+259
000000000001066f         mov        r12, rbx

                     loc_10672:
0000000000010672         movzx      eax, byte [r12+1]                           ; CODE XREF=__strftime_internal+808, sub_112b0+2417
0000000000010678         lea        rbx, qword [r12+1]
000000000001067d         mov        r10, 0xffffffffffffffff
0000000000010684         test       al, al
0000000000010686         jne        loc_105de

                     loc_1068c:
000000000001068c         test       rbp, rbp                                    ; CODE XREF=__strftime_internal+144
000000000001068f         je         loc_1060f

0000000000010695         cmp        qword [rsp+0x4f8+var_4F0], 0x0
000000000001069b         je         loc_1060f

00000000000106a1         mov        byte [rbp], 0x0
00000000000106a5         jmp        loc_1060f
00000000000106aa         align      16

                     loc_106b0:
00000000000106b0         test       r15d, r15d                                  ; CODE XREF=__strftime_internal+125
00000000000106b3         mov        eax, 0xc
00000000000106b8         cmove      r15d, eax
00000000000106bc         jmp        loc_105c7
00000000000106c1         align      8

                     loc_106c8:
00000000000106c8         movzx      eax, byte [rsp+0x4f8+var_4CD]               ; CODE XREF=__strftime_internal+160
00000000000106cd         xor        r8d, r8d
00000000000106d0         xor        r15d, r15d
00000000000106d3         mov        edx, 0x1
00000000000106d8         mov        byte [rsp+0x4f8+var_4C8], al

                     loc_106dc:
00000000000106dc         add        rbx, 0x1                                    ; CODE XREF=__strftime_internal+563, __strftime_internal+582, __strftime_internal+821
00000000000106e0         movsx      eax, byte [rbx]
00000000000106e3         lea        ecx, dword [rax-0x23]
00000000000106e6         mov        esi, eax
00000000000106e8         mov        r9d, eax
00000000000106eb         cmp        cl, 0x3c
00000000000106ee         ja         loc_1071c

00000000000106f0         mov        rdi, rdx
00000000000106f3         movabs     r11, 0x1000000000002500
00000000000106fd         shl        rdi, cl
0000000000010700         test       rdi, r11
0000000000010703         jne        loc_10770

0000000000010705         test       cl, cl
0000000000010707         je         loc_10780

0000000000010709         movabs     rcx, 0x800000000000000
0000000000010713         test       rdi, rcx
0000000000010716         jne        loc_10870

                     loc_1071c:
000000000001071c         lea        edx, dword [rax-0x30]                       ; CODE XREF=__strftime_internal+430
000000000001071f         cmp        edx, 0x9
0000000000010722         jbe        loc_10880

                     loc_10728:
0000000000010728         cmp        sil, 0x45                                   ; CODE XREF=__strftime_internal+882, __strftime_internal+940
000000000001072c         je         loc_10758

000000000001072e         xor        r11d, r11d
0000000000010731         cmp        sil, 0x4f
0000000000010735         je         loc_10758

                     loc_10737:
0000000000010737         cmp        sil, 0x7a                                   ; CODE XREF=__strftime_internal+551
000000000001073b         ja         loc_10790

000000000001073d         lea        rdx, qword [aMdy+10]                        ; 0x1a0dc
0000000000010744         movzx      eax, sil
0000000000010748         movsxd     rax, dword [rdx+rax*4]
000000000001074c         add        rax, rdx
000000000001074f         jmp        rax
                        ; endp
0000000000010751         align      8

                     loc_10758:
0000000000010758         movsx      r9d, byte [rbx+1]                           ; CODE XREF=__strftime_internal+492, __strftime_internal+501
000000000001075d         mov        r11d, eax
0000000000010760         add        rbx, 0x1
0000000000010764         mov        esi, r9d
0000000000010767         jmp        loc_10737
0000000000010769         align      16

                     loc_10770:
0000000000010770         mov        r15d, eax                                   ; CODE XREF=__strftime_internal+451
0000000000010773         jmp        loc_106dc
0000000000010778         align      128

                     loc_10780:
0000000000010780         mov        r8d, 0x1                                    ; CODE XREF=__strftime_internal+455
0000000000010786         jmp        loc_106dc
000000000001078b         mov        rbx, r9                                     ; CODE XREF=sub_112b0+1186
000000000001078e         nop

                     loc_10790:
0000000000010790         lea        rax, qword [rbx-1]                          ; CODE XREF=__strftime_internal+507, __strftime_internal+956, __strftime_internal+1289, __strftime_internal+1354, sub_10bf0+376, sub_10bf0+437, sub_112b0+287, sub_112b0+305, sub_112b0+712, sub_112b0+789, sub_112b0+813
0000000000010794         mov        r8d, 0x1

                     loc_1079a:
000000000001079a         mov        r9, rax                                     ; CODE XREF=__strftime_internal+617
000000000001079d         lea        rax, qword [rax-1]
00000000000107a1         add        r8d, 0x1
00000000000107a5         cmp        byte [rax+1], 0x25
00000000000107a9         jne        loc_1079a

00000000000107ab         mov        rdx, qword [rsp+0x4f8+var_4F0]
00000000000107b0         mov        eax, 0x0
00000000000107b5         movsxd     r8, r8d
00000000000107b8         mov        rcx, r8
00000000000107bb         mov        r12, rbx
00000000000107be         sub        rdx, r14
00000000000107c1         test       r10d, r10d
00000000000107c4         cmovns     eax, r10d
00000000000107c8         cdqe
00000000000107ca         cmp        rax, r8
00000000000107cd         cmovae     rcx, rax
00000000000107d1         cmp        rcx, rdx                                    ; CODE XREF=sub_112b0+1213, sub_112b0+2676
00000000000107d4         jae        loc_1060c

00000000000107da         test       rbp, rbp
00000000000107dd         je         loc_10865

00000000000107e3         cmp        rax, r8
00000000000107e6         jbe        loc_10835

00000000000107e8         movsxd     rdx, r10d
00000000000107eb         mov        qword [rsp+0x4f8+var_4B0], r8
00000000000107f0         mov        qword [rsp+0x4f8+var_4B8], rcx
00000000000107f5         sub        rdx, r8
00000000000107f8         cmp        r15d, 0x30
00000000000107fc         mov        qword [rsp+0x4f8+var_4C0], r9
0000000000010801         lea        rbx, qword [rbp+rdx]
0000000000010806         je         loc_11a76

000000000001080c         cmp        r15d, 0x2b
0000000000010810         je         loc_11a76

0000000000010816         mov        rdi, rbp                                    ; argument "__s" for method j_memset
0000000000010819         mov        esi, 0x20                                   ; argument "__c" for method j_memset
000000000001081e         mov        rbp, rbx
0000000000010821         call       j_memset                                    ; memset
0000000000010826         mov        r8, qword [rsp+0x4f8+var_4B0]
000000000001082b         mov        rcx, qword [rsp+0x4f8+var_4B8]
0000000000010830         mov        r9, qword [rsp+0x4f8+var_4C0]

                     loc_10835:
0000000000010835         cmp        byte [rsp+0x4f8+var_4C8], 0x0               ; CODE XREF=__strftime_internal+678, sub_112b0+2021
000000000001083a         mov        qword [rsp+0x4f8+var_4C0], rcx
000000000001083f         mov        rdx, r8
0000000000010842         mov        qword [rsp+0x4f8+var_4C8], r8
0000000000010847         mov        rsi, r9
000000000001084a         mov        rdi, rbp
000000000001084d         je         loc_11a20

0000000000010853         call       memcpy_uppcase                              ; memcpy_uppcase
0000000000010858         mov        r8, qword [rsp+0x4f8+var_4C8]
000000000001085d         mov        rcx, qword [rsp+0x4f8+var_4C0]

                     loc_10862:
0000000000010862         add        rbp, r8                                     ; CODE XREF=sub_112b0+1919

                     loc_10865:
0000000000010865         add        r14, rcx                                    ; CODE XREF=__strftime_internal+669
0000000000010868         jmp        loc_10672
000000000001086d         align      16

                     loc_10870:
0000000000010870         mov        byte [rsp+0x4f8+var_4C8], 0x1               ; CODE XREF=__strftime_internal+470
0000000000010875         jmp        loc_106dc
000000000001087a         align      128

                     loc_10880:
0000000000010880         xor        r10d, r10d                                  ; CODE XREF=__strftime_internal+482

                     loc_10883:
0000000000010883         movsx      eax, byte [rbx+1]                           ; CODE XREF=__strftime_internal+877
0000000000010887         cmp        r10d, 0xccccccc
000000000001088e         lea        rcx, qword [rbx+1]
0000000000010892         mov        esi, eax
0000000000010894         lea        edx, dword [rax-0x30]
0000000000010897         jg         loc_108c6

0000000000010899         movsx      edi, byte [rbx]
000000000001089c         je         loc_108c0

                     loc_1089e:
000000000001089e         lea        r9d, dword [r10+r10*4]                      ; CODE XREF=__strftime_internal+900
00000000000108a2         mov        rbx, rcx
00000000000108a5         lea        r10d, dword [rdi+r9*2-0x30]

                     loc_108aa:
00000000000108aa         cmp        edx, 0x9                                    ; CODE XREF=__strftime_internal+926
00000000000108ad         jbe        loc_10883

00000000000108af         mov        r9d, eax
00000000000108b2         jmp        loc_10728
00000000000108b7         align      64

                     loc_108c0:
00000000000108c0         cmp        dil, 0x37                                   ; CODE XREF=__strftime_internal+860
00000000000108c4         jle        loc_1089e

                     loc_108c6:
00000000000108c6         cmp        edx, 0x9                                    ; CODE XREF=__strftime_internal+855
00000000000108c9         ja         loc_108e0

00000000000108cb         movsx      eax, byte [rbx+2]
00000000000108cf         mov        r10d, 0x7fffffff
00000000000108d5         add        rbx, 0x2
00000000000108d9         mov        esi, eax
00000000000108db         lea        edx, dword [rax-0x30]
00000000000108de         jmp        loc_108aa

                     loc_108e0:
00000000000108e0         mov        r9d, eax                                    ; CODE XREF=__strftime_internal+905
00000000000108e3         mov        rbx, rcx
00000000000108e6         mov        r10d, 0x7fffffff
00000000000108ec         jmp        loc_10728
00000000000108f1         nop        dword [rax]
00000000000108f8         cmp        r11d, 0x4f
00000000000108fc         je         __strftime_internal+592
0000000000010902         xor        r8d, r8d                                    ; CODE XREF=sub_112b0+902
0000000000010905         mov        eax, 0x2520                                 ; CODE XREF=__strftime_internal+1625, sub_10df0+375, sub_112b0+891, sub_112b0+2069
000000000001090a         test       r11d, r11d
000000000001090d         mov        word [rsp+0xab], ax
0000000000010915         jne        sub_11feb                                   ; sub_11feb
000000000001091b         lea        rdx, qword [rsp+0xab]
0000000000010923         mov        r12, rbx
0000000000010926         lea        rax, qword [rdx+2]

                     loc_1092a:
000000000001092a         lea        r9, qword [rsp+0x1+arg_A7]                  ; CODE XREF=__strftime_internal+1345, __strftime_internal+1462
0000000000010932         mov        byte [rax], sil
0000000000010935         mov        byte [rax+1], 0x0
0000000000010939         mov        rcx, r13                                    ; argument "__tp" for method j_strftime
000000000001093c         mov        esi, 0x400                                  ; argument "__maxsize" for method j_strftime
0000000000010941         mov        dword [rsp+0x1+arg_2F], r10d
0000000000010946         mov        rdi, r9                                     ; argument "__s" for method j_strftime
0000000000010949         mov        byte [rsp+0x1+arg_47], r8b
000000000001094e         mov        dword [rsp+0x1+arg_3F], r11d
0000000000010953         mov        qword [rsp+0x1+arg_37], r9
0000000000010958         call       j_strftime                                  ; strftime
000000000001095d         test       rax, rax
0000000000010960         je         __strftime_internal+306

0000000000010966         movsxd     r10, dword [rsp+0x1+arg_2F]
000000000001096b         lea        rcx, qword [rax-1]
000000000001096f         mov        rdx, qword [rsp+0x1+var_FFFFFFFFFFFFFFF9]
0000000000010974         mov        eax, 0x0
0000000000010979         test       r10d, r10d
000000000001097c         cmovns     rax, r10
0000000000010980         cmp        rcx, rax
0000000000010983         mov        rbx, rax
0000000000010986         cmovae     rbx, rcx
000000000001098a         sub        rdx, r14
000000000001098d         cmp        rdx, rbx
0000000000010990         jbe        __strftime_internal+204

0000000000010996         test       rbp, rbp
0000000000010999         je         loc_10a3e

000000000001099f         mov        r11d, dword [rsp+0x1+arg_3F]
00000000000109a4         mov        r9, qword [rsp+0x1+arg_37]
00000000000109a9         movzx      r8d, byte [rsp+0x1+arg_47]
00000000000109af         test       r11d, r11d
00000000000109b2         jne        loc_10a0e

00000000000109b4         cmp        rcx, rax
00000000000109b7         jae        loc_10a0e

00000000000109b9         movsxd     rdx, r10d
00000000000109bc         mov        qword [rsp+0x1+arg_47], r9
00000000000109c1         mov        qword [rsp+0x1+arg_3F], rcx
00000000000109c6         sub        rdx, rcx
00000000000109c9         cmp        r15d, 0x30
00000000000109cd         mov        byte [rsp+0x1+arg_37], r8b
00000000000109d2         lea        rax, qword [rbp+rdx]
00000000000109d7         mov        qword [rsp+0x1+arg_2F], rax
00000000000109dc         je         loc_11a4f

00000000000109e2         cmp        r15d, 0x2b
00000000000109e6         je         loc_11a4f

00000000000109ec         mov        rdi, rbp                                    ; argument "__s" for method j_memset
00000000000109ef         mov        esi, 0x20                                   ; argument "__c" for method j_memset
00000000000109f4         call       j_memset                                    ; memset
00000000000109f9         movzx      r8d, byte [rsp+0x1+arg_37]
00000000000109ff         mov        rbp, qword [rsp+0x1+arg_2F]
0000000000010a04         mov        r9, qword [rsp+0x1+arg_47]
0000000000010a09         mov        rcx, qword [rsp+0x1+arg_3F]

                     loc_10a0e:
0000000000010a0e         test       r8b, r8b                                    ; CODE XREF=__strftime_internal+1138, __strftime_internal+1143, sub_112b0+1985
0000000000010a11         lea        rsi, qword [r9+1]
0000000000010a15         mov        rdx, rcx
0000000000010a18         jne        loc_11a38

0000000000010a1e         cmp        byte [rsp+0x1+arg_27], 0x0
0000000000010a23         mov        rdi, rbp
0000000000010a26         mov        qword [rsp+0x1+arg_27], rcx
0000000000010a2b         je         loc_112a1

                     loc_10a31:
0000000000010a31         call       memcpy_uppcase                              ; memcpy_uppcase, CODE XREF=sub_11040+603
0000000000010a36         mov        rcx, qword [rsp+0x1+arg_27]

                     loc_10a3b:
0000000000010a3b         add        rbp, rcx                                    ; CODE XREF=sub_11040+619, sub_112b0+1946

                     loc_10a3e:
0000000000010a3e         add        r14, rbx                                    ; CODE XREF=__strftime_internal+1113, sub_11040+491
0000000000010a41         jmp        __strftime_internal+306
                        ; endp
0000000000010a46         test       r11d, r11d
0000000000010a49         jne        __strftime_internal+592
0000000000010a4f         movzx      eax, byte [rsp+0x30]
0000000000010a54         test       r8b, r8b
0000000000010a57         lea        rdx, qword [rsp+0xab]
0000000000010a5f         mov        r12, rbx
0000000000010a62         cmovne     eax, r8d
0000000000010a66         xor        r8d, r8d
0000000000010a69         xor        r11d, r11d
0000000000010a6c         mov        byte [rsp+0x30], al
0000000000010a70         mov        eax, 0x2520
0000000000010a75         mov        word [rsp+0xab], ax
0000000000010a7d         lea        rax, qword [rdx+2]
0000000000010a81         jmp        __strftime_internal+1002
0000000000010a86         cmp        r11d, 0x45
0000000000010a8a         je         __strftime_internal+592
0000000000010a90         mov        ecx, dword [r13]
0000000000010a94         mov        edi, 0x2
0000000000010a99         nop        dword [rax]

                     loc_10aa0:
0000000000010aa0         mov        eax, ecx                                    ; CODE XREF=sub_10bf0+418, sub_112b0+727, sub_112b0+780, sub_112b0+804, sub_112b0+1237, sub_112b0+1261, sub_112b0+1337, sub_112b0+1361, sub_112b0+1388, sub_112b0+1400, sub_112b0+2659
0000000000010aa2         xor        esi, esi
0000000000010aa4         mov        byte [rsp+0x1+arg_37], 0x0
0000000000010aa9         shr        eax, 0x1f
0000000000010aac         mov        dword [rsp+0x1+arg_2F], eax
0000000000010ab0         mov        eax, ecx
0000000000010ab2         not        eax
0000000000010ab4         shr        eax, 0x1f

                     loc_10ab7:
0000000000010ab7         cmp        r11d, 0x4f                                  ; CODE XREF=sub_10bf0+507, sub_10df0+338, sub_10df0+580, sub_112b0+703, sub_112b0+1056, sub_112b0+1448, sub_112b0+1633, sub_11d69+177, sub_11d69+246
0000000000010abb         jne        loc_11940

0000000000010ac1         test       al, al
0000000000010ac3         je         loc_11940

0000000000010ac9         mov        esi, r9d
0000000000010acc         mov        edx, 0x2520                                 ; CODE XREF=sub_112b0+2076
0000000000010ad1         xor        r8d, r8d
0000000000010ad4         mov        word [rsp+0x1+arg_A2], dx
0000000000010adc         lea        rdx, qword [rsp+0x1+arg_A2]
0000000000010ae4         mov        byte [rsp+0x1+arg_A4], r11b
0000000000010aec         mov        r12, rbx
0000000000010aef         mov        r11d, edi
0000000000010af2         lea        rax, qword [rdx+3]
0000000000010af6         jmp        loc_1092a
0000000000010afb         test       r10d, r10d
0000000000010afe         mov        ecx, 0x0
0000000000010b03         mov        eax, 0x1
0000000000010b08         cmovns     ecx, r10d
0000000000010b0c         movsxd     rcx, ecx
0000000000010b0f         test       rcx, rcx
0000000000010b12         cmove      rcx, rax
0000000000010b16         mov        rax, qword [rsp+8]
0000000000010b1b         sub        rax, r14
0000000000010b1e         cmp        rax, rcx
0000000000010b21         jbe        __strftime_internal+204
0000000000010b27         test       rbp, rbp
0000000000010b2a         je         __strftime_internal+1592
0000000000010b2c         cmp        r10d, 0x1
0000000000010b30         jle        __strftime_internal+1580
0000000000010b32         movsxd     rdx, r10d
0000000000010b35         mov        qword [rsp+0x30], rcx
0000000000010b3a         sub        rdx, 0x1
0000000000010b3e         cmp        r15d, 0x30
0000000000010b42         lea        r12, qword [rbp+rdx]
0000000000010b47         je         sub_11d69+251
0000000000010b4d         cmp        r15d, 0x2b
0000000000010b51         je         sub_11d69+251
0000000000010b57         mov        rdi, rbp
0000000000010b5a         mov        esi, 0x20
0000000000010b5f         mov        rbp, r12
0000000000010b62         call       j_memset                                    ; memset
0000000000010b67         mov        rcx, qword [rsp+0x30]
0000000000010b6c         mov        byte [rbp], 0x9                             ; CODE XREF=__strftime_internal+1520, sub_11d69+272
0000000000010b70         add        rbp, 0x1
0000000000010b74         nop        dword [rax]

                     loc_10b78:
0000000000010b78         add        r14, rcx                                    ; CODE XREF=__strftime_internal+1514, sub_10bf0+261, sub_10bf0+342, sub_10df0+91, sub_10df0+232, sub_112b0+1500, sub_112b0+1578
0000000000010b7b         mov        r12, rbx
0000000000010b7e         jmp        __strftime_internal+306
                        ; endp
0000000000010b83         mov        eax, 0x1
0000000000010b88         test       r8b, r8b                                    ; CODE XREF=sub_112b0+1585
0000000000010b8b         jne        sub_112b0+2059
0000000000010b91         mov        r8d, eax
0000000000010b94         mov        esi, 0x70
0000000000010b99         jmp        __strftime_internal+965
0000000000010b9e         lea        rax, qword [aMdHm+6]                        ; 0x17b73
0000000000010ba5         mov        dword [rsp+0x38], 0xffffffff
0000000000010bad         mov        qword [rsp+0x40], rax
0000000000010bb2         movzx      r8d, byte [rsp+0x30]                        ; CODE XREF=sub_10bf0+367, sub_112b0+1090, sub_112b0+1148, sub_11d69+434
0000000000010bb8         mov        eax, dword [rsp+0x518]
0000000000010bbf         mov        rsi, 0xffffffffffffffff
0000000000010bc6         mov        dword [rsp+0x48], r10d
0000000000010bcb         xor        edi, edi
0000000000010bcd         mov        r9d, r15d
0000000000010bd0         mov        rcx, r13
0000000000010bd3         mov        dword [rsp+0x30], r8d
0000000000010bd8         push       rax
0000000000010bd9         push       qword [rsp+0x18]
0000000000010bdd         push       qword [rsp+0x28]
0000000000010be1         mov        eax, dword [rsp+0x50]
0000000000010be5         push       rax
0000000000010be6         mov        rdx, qword [rsp+0x60]
0000000000010beb         call       __strftime_internal                         ; __strftime_internal


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_10bf0:
0000000000010bf0         add        rsp, 0x20
0000000000010bf4         movsxd     r10, dword [rsp+72]
0000000000010bf9         mov        r11, rax
0000000000010bfc         mov        rsi, qword [rsp+8]
0000000000010c01         mov        eax, 0x0
0000000000010c06         test       r10d, r10d
0000000000010c09         cmovns     rax, r10
0000000000010c0d         cmp        r11, rax
0000000000010c10         mov        r12, rax
0000000000010c13         cmovae     r12, r11
0000000000010c17         sub        rsi, r14
0000000000010c1a         cmp        rsi, r12
0000000000010c1d         mov        qword [rsp+72], rsi
0000000000010c22         jbe        __strftime_internal+204

0000000000010c28         test       rbp, rbp
0000000000010c2b         je         __strftime_internal+300

0000000000010c31         cmp        r11, rax
0000000000010c34         jae        loc_10c76

0000000000010c36         movsxd     rdx, r10d
0000000000010c39         mov        qword [rsp+88], r11
0000000000010c3e         sub        rdx, r11
0000000000010c41         cmp        r15d, 0x30
0000000000010c45         lea        rax, qword [rbp+rdx]
0000000000010c4a         mov        qword [rsp+80], rax
0000000000010c4f         je         loc_11d4c

0000000000010c55         cmp        r15d, 0x2b
0000000000010c59         je         loc_11d4c

0000000000010c5f         mov        rdi, rbp                                    ; argument "__s" for method j_memset
0000000000010c62         mov        esi, 0x20                                   ; argument "__c" for method j_memset
0000000000010c67         call       j_memset                                    ; memset
0000000000010c6c         mov        rbp, qword [rsp+80]
0000000000010c71         mov        r11, qword [rsp+88]

                     loc_10c76:
0000000000010c76         mov        eax, dword [rsp+1304]                       ; CODE XREF=sub_10bf0+68, sub_112b0+2739
0000000000010c7d         mov        qword [rsp+80], r11
0000000000010c82         mov        rdi, rbp                                    ; argument #1 for method __strftime_internal
0000000000010c85         mov        r9d, r15d                                   ; argument #6 for method __strftime_internal
0000000000010c88         mov        rcx, r13                                    ; argument #4 for method __strftime_internal
0000000000010c8b         push       rax
0000000000010c8c         push       qword [rsp+24]                              ; argument #9 for method __strftime_internal
0000000000010c90         push       qword [rsp+40]                              ; argument #8 for method __strftime_internal
0000000000010c94         mov        eax, dword [rsp+80]
0000000000010c98         push       rax                                         ; argument #7 for method __strftime_internal
0000000000010c99         mov        r8d, dword [rsp+80]                         ; argument #5 for method __strftime_internal
0000000000010c9e         mov        rdx, qword [rsp+96]                         ; argument #3 for method __strftime_internal
0000000000010ca3         mov        rsi, qword [rsp+104]                        ; argument #2 for method __strftime_internal
0000000000010ca8         call       __strftime_internal                         ; __strftime_internal
0000000000010cad         mov        r11, qword [rsp+112]
0000000000010cb2         add        rsp, 0x20
0000000000010cb6         add        rbp, r11
0000000000010cb9         jmp        __strftime_internal+300
                        ; endp
0000000000010cbe         mov        rdx, qword [rsp+8]
0000000000010cc3         mov        eax, 0x0
0000000000010cc8         mov        ecx, 0x1
0000000000010ccd         sub        rdx, r14
0000000000010cd0         test       r10d, r10d
0000000000010cd3         cmovns     eax, r10d
0000000000010cd7         cdqe
0000000000010cd9         test       rax, rax
0000000000010cdc         cmovne     rcx, rax
0000000000010ce0         test       r11d, r11d
0000000000010ce3         jne        sub_112b0+2664
0000000000010ce9         cmp        rcx, rdx
0000000000010cec         jae        __strftime_internal+204
0000000000010cf2         test       rbp, rbp
0000000000010cf5         je         __strftime_internal+1592
0000000000010cfb         cmp        r10d, 0x1
0000000000010cff         jle        sub_10bf0+334
0000000000010d01         movsxd     rdx, r10d
0000000000010d04         mov        qword [rsp+0x30], rcx
0000000000010d09         sub        rdx, 0x1
0000000000010d0d         cmp        r15d, 0x30
0000000000010d11         lea        r12, qword [rbp+rdx]
0000000000010d16         je         sub_11f20+101
0000000000010d1c         cmp        r15d, 0x2b
0000000000010d20         mov        esi, 0x20
0000000000010d25         je         sub_11f20+101
0000000000010d2b         mov        rdi, rbp                                    ; CODE XREF=sub_11f20+106
0000000000010d2e         mov        rbp, r12
0000000000010d31         call       j_memset                                    ; memset
0000000000010d36         movzx      esi, byte [rbx]
0000000000010d39         mov        rcx, qword [rsp+0x30]
0000000000010d3e         mov        byte [rbp], sil                             ; CODE XREF=sub_10bf0+271
0000000000010d42         add        rbp, 0x1
0000000000010d46         jmp        __strftime_internal+1592
0000000000010d4b         lea        rax, qword [aHms]                           ; "%H:%M:%S"
0000000000010d52         mov        dword [rsp+0x38], 0xffffffff
0000000000010d5a         mov        qword [rsp+0x40], rax
0000000000010d5f         jmp        __strftime_internal+1650
0000000000010d64         cmp        r11d, 0x45
0000000000010d68         je         __strftime_internal+592
0000000000010d6e         mov        esi, dword [r13+0x1c]
0000000000010d72         sub        esi, dword [r13+0x18]
0000000000010d76         mov        edx, 0x92492493
0000000000010d7b         add        esi, 0x7
0000000000010d7e         mov        eax, esi
0000000000010d80         imul       edx
0000000000010d82         lea        ecx, dword [rdx+rsi]                        ; CODE XREF=sub_112b0+873
0000000000010d85         sar        esi, 0x1f
0000000000010d88         mov        edi, 0x2
0000000000010d8d         sar        ecx, 0x2
0000000000010d90         sub        ecx, esi
0000000000010d92         jmp        __strftime_internal+1376
0000000000010d97         cmp        r11d, 0x45
0000000000010d9b         je         sub_112b0+2074
0000000000010da1         cmp        r11d, 0x4f
0000000000010da5         je         __strftime_internal+592
0000000000010dab         mov        eax, dword [r13+0x14]
0000000000010daf         cmp        eax, 0xfffff894
0000000000010db4         lea        ecx, dword [rax+0x76c]
0000000000010dba         setl       byte [rsp+0x38]
0000000000010dbf         cmp        eax, 0xfffff894
0000000000010dc4         setge      al
0000000000010dc7         test       r15d, r15d
0000000000010dca         jne        sub_112b0+2457

                     loc_10dd0:
0000000000010dd0         mov        r15d, dword [rsp+0x1+arg_23]                ; CODE XREF=sub_112b0+2451
0000000000010dd5         cmp        r15d, 0x2b
0000000000010dd9         je         loc_11c53

                     loc_10ddf:
0000000000010ddf         mov        byte [rsp+0x1+arg_37], 0x0                  ; CODE XREF=sub_112b0+2461
0000000000010de4         mov        edi, 0x4

                     loc_10de9:
0000000000010de9         xor        esi, esi                                    ; CODE XREF=sub_112b0+1034
0000000000010deb         jmp        loc_10ab7


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_10df0:
0000000000010df0         movzx      esi, byte [rsp+48]
0000000000010df5         mov        rdi, qword [rsp+32]                         ; argument "__s" for method j_strlen
0000000000010dfa         test       r8b, r8b
0000000000010dfd         mov        eax, 0x0
0000000000010e02         mov        dword [rsp+56], r10d
0000000000010e07         mov        byte [rsp+64], r8b
0000000000010e0c         cmovne     esi, eax
0000000000010e0f         mov        byte [rsp+48], sil
0000000000010e14         call       j_strlen                                    ; strlen
0000000000010e19         movsxd     r10, dword [rsp+56]
0000000000010e1e         mov        r12, rax
0000000000010e21         mov        rdx, qword [rsp+8]
0000000000010e26         mov        eax, 0x0
0000000000010e2b         test       r10d, r10d
0000000000010e2e         cmovns     rax, r10
0000000000010e32         cmp        r12, rax
0000000000010e35         mov        rcx, rax
0000000000010e38         cmovae     rcx, r12
0000000000010e3c         sub        rdx, r14
0000000000010e3f         cmp        rdx, rcx
0000000000010e42         jbe        __strftime_internal+204

0000000000010e48         test       rbp, rbp
0000000000010e4b         je         loc_10b78

0000000000010e51         cmp        r12, rax
0000000000010e54         movzx      r8d, byte [rsp+64]
0000000000010e5a         jae        loc_10ea7

0000000000010e5c         movsxd     rdx, r10d
0000000000010e5f         mov        qword [rsp+72], rcx
0000000000010e64         mov        byte [rsp+64], r8b
0000000000010e69         sub        rdx, r12
0000000000010e6c         cmp        r15d, 0x30
0000000000010e70         lea        rax, qword [rbp+rdx]
0000000000010e75         mov        qword [rsp+56], rax
0000000000010e7a         je         loc_11f3f

0000000000010e80         cmp        r15d, 0x2b
0000000000010e84         je         loc_11f3f

0000000000010e8a         mov        rdi, rbp                                    ; argument "__s" for method j_memset
0000000000010e8d         mov        esi, 0x20                                   ; argument "__c" for method j_memset
0000000000010e92         call       j_memset                                    ; memset
0000000000010e97         movzx      r8d, byte [rsp+64]
0000000000010e9d         mov        rbp, qword [rsp+56]
0000000000010ea2         mov        rcx, qword [rsp+72]

                     loc_10ea7:
0000000000010ea7         test       r8b, r8b                                    ; CODE XREF=sub_10df0+106, sub_11f20+60
0000000000010eaa         jne        loc_11ea7

0000000000010eb0         cmp        byte [rsp+48], 0x0
0000000000010eb5         mov        rdx, r12
0000000000010eb8         mov        qword [rsp+48], rcx
0000000000010ebd         mov        rsi, qword [rsp+32]
0000000000010ec2         mov        rdi, rbp
0000000000010ec5         je         loc_11e98

0000000000010ecb         call       memcpy_uppcase                              ; memcpy_uppcase
0000000000010ed0         mov        rcx, qword [rsp+48]

                     loc_10ed5:
0000000000010ed5         add        rbp, r12                                    ; CODE XREF=sub_11d69+313, sub_11d69+344
0000000000010ed8         jmp        loc_10b78
0000000000010edd         cmp        r11d, 0x45
0000000000010ee1         je         sub_112b0+2074
0000000000010ee7         mov        esi, dword [r13+0x14]
0000000000010eeb         mov        edx, 0x51eb851f
0000000000010ef0         mov        eax, esi
0000000000010ef2         imul       edx
0000000000010ef4         mov        eax, esi
0000000000010ef6         sar        eax, 0x1f
0000000000010ef9         mov        ecx, edx
0000000000010efb         sar        ecx, 0x5
0000000000010efe         sub        ecx, eax
0000000000010f00         mov        eax, esi
0000000000010f02         imul       ecx, ecx, 0x64
0000000000010f05         sub        eax, ecx
0000000000010f07         mov        ecx, eax
0000000000010f09         jns        sub_10df0+297
0000000000010f0b         neg        eax
0000000000010f0d         add        ecx, 0x64
0000000000010f10         cmp        esi, 0xfffff893
0000000000010f16         cmovle     ecx, eax

                     loc_10f19:
0000000000010f19         test       r15d, r15d                                  ; CODE XREF=sub_10df0+281, sub_112b0+633
0000000000010f1c         je         loc_1154a

                     loc_10f22:
0000000000010f22         mov        eax, 0x1                                    ; CODE XREF=sub_112b0+660, sub_11f20+198
0000000000010f27         mov        byte [rsp+0x1+arg_2F], 0x0
0000000000010f2c         cmp        r15d, 0x2b                                  ; CODE XREF=sub_112b0+989
0000000000010f30         je         loc_116a3

0000000000010f36         mov        byte [rsp+0x1+arg_37], 0x0                  ; CODE XREF=sub_112b0+1005
0000000000010f3b         mov        edi, 0x2
0000000000010f40         xor        esi, esi
0000000000010f42         jmp        loc_10ab7
0000000000010f47         movzx      eax, byte [rsp+0x30]
0000000000010f4c         test       r8b, r8b
0000000000010f4f         cmovne     eax, r8d
0000000000010f53         cmp        r11d, 0x45
0000000000010f57         je         sub_11d69+349
0000000000010f5d         mov        esi, r9d
0000000000010f60         mov        byte [rsp+0x30], al
0000000000010f64         xor        r8d, r8d
0000000000010f67         jmp        __strftime_internal+965
0000000000010f6c         xor        r8d, r8d
0000000000010f6f         mov        ecx, dword [r13+0x20]                       ; CODE XREF=sub_112b0+296
0000000000010f73         test       ecx, ecx
0000000000010f75         js         sub_112b0+2414
0000000000010f7b         mov        rcx, qword [r13+0x28]
0000000000010f7f         mov        byte [rsp+0x38], 0x1
0000000000010f84         test       ecx, ecx
0000000000010f86         js         sub_10df0+428
0000000000010f88         mov        byte [rsp+0x38], 0x0
0000000000010f8d         jne        sub_10df0+428
0000000000010f8f         mov        rax, qword [rsp+0x20]
0000000000010f94         cmp        byte [rax], 0x2d
0000000000010f97         sete       byte [rsp+0x38]
0000000000010f9c         mov        eax, ecx                                    ; CODE XREF=sub_10df0+406, sub_10df0+413
0000000000010f9e         mov        edx, 0x91a2b3c5
0000000000010fa3         mov        esi, 0x88888889
0000000000010fa8         imul       edx
0000000000010faa         mov        eax, ecx
0000000000010fac         sar        eax, 0x1f
0000000000010faf         mov        dword [rsp+0x40], eax
0000000000010fb3         lea        r12d, dword [rdx+rcx]
0000000000010fb7         sar        r12d, 0xb
0000000000010fbb         sub        r12d, eax
0000000000010fbe         mov        eax, ecx
0000000000010fc0         imul       esi
0000000000010fc2         lea        edi, dword [rdx+rcx]
0000000000010fc5         sar        edi, 0x5
0000000000010fc8         sub        edi, dword [rsp+0x40]
0000000000010fcc         mov        eax, edi
0000000000010fce         imul       esi
0000000000010fd0         mov        eax, edi
0000000000010fd2         sar        eax, 0x1f
0000000000010fd5         lea        esi, dword [rdx+rdi]
0000000000010fd8         sar        esi, 0x5
0000000000010fdb         sub        esi, eax
0000000000010fdd         mov        eax, edi
0000000000010fdf         imul       esi, esi, 0x3c
0000000000010fe2         imul       edi, edi, 0x3c
0000000000010fe5         sub        eax, esi
0000000000010fe7         sub        ecx, edi
0000000000010fe9         cmp        r8, 0x1
0000000000010fed         mov        esi, eax
0000000000010fef         je         sub_11d69+217
0000000000010ff5         jb         sub_11f20                                   ; sub_11f20
0000000000010ffb         cmp        r8, 0x2
0000000000010fff         je         sub_11d69+140
0000000000011005         cmp        r8, 0x3
0000000000011009         jne        sub_11d69+358
000000000001100f         test       ecx, ecx
0000000000011011         jne        sub_11d69+140
0000000000011017         test       eax, eax
0000000000011019         jne        sub_11d69+217
000000000001101f         movzx      eax, byte [rsp+0x38]
0000000000011024         mov        ecx, r12d
0000000000011027         mov        byte [rsp+0x40], 0x1
000000000001102c         mov        edi, 0x3
0000000000011031         xor        eax, 0x1
0000000000011034         jmp        __strftime_internal+1399
0000000000011039         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_11040:
0000000000011040         cmp        r11d, 0x4f
0000000000011044         mov        eax, dword [r13+0x10]
0000000000011048         mov        edi, 0x1
000000000001104d         je         __strftime_internal+1420

0000000000011053         lea        edx, dword [rax+rax*4]
0000000000011056         mov        byte [rsp+64], 0x0
000000000001105b         mov        byte [rsp+56], 0x0
0000000000011060         xor        esi, esi
0000000000011062         lea        ecx, dword [rax+rdx*2]
0000000000011065         sar        ecx, 0x5
0000000000011068         add        ecx, 0x1
000000000001106b         nop        dword [rax+rax]
                        ; endp

                     loc_11070:
0000000000011070         lea        r9, qword [rsp+0x1+arg_A7]                  ; CODE XREF=sub_112b0+1692
0000000000011078         mov        r12d, 0xcccccccd
000000000001107e         lea        r11, qword [r9+0x17]
0000000000011082         nop        word [rax+rax]

                     loc_11088:
0000000000011088         test       sil, 0x1                                    ; CODE XREF=sub_11040+130
000000000001108c         lea        r8, qword [r11-1]
0000000000011090         je         loc_110a1

0000000000011092         lea        rax, qword [r11-2]
0000000000011096         mov        byte [r11-1], 0x3a
000000000001109b         mov        r11, r8
000000000001109e         mov        r8, rax

                     loc_110a1:
00000000000110a1         mov        eax, ecx                                    ; CODE XREF=sub_11040+80
00000000000110a3         sar        esi, 0x1
00000000000110a5         mul        r12d
00000000000110a8         shr        edx, 0x3
00000000000110ab         lea        eax, dword [rdx+rdx*4]
00000000000110ae         add        eax, eax
00000000000110b0         sub        ecx, eax
00000000000110b2         mov        eax, esi
00000000000110b4         add        ecx, 0x30
00000000000110b7         or         eax, edx
00000000000110b9         mov        byte [r11-1], cl
00000000000110bd         mov        ecx, edx
00000000000110bf         mov        r11, r8
00000000000110c2         jne        loc_11088

00000000000110c4         cmp        r10d, edi
00000000000110c7         cmovge     edi, r10d
00000000000110cb         cmp        byte [rsp+0x1+arg_2F], 0x0
00000000000110d0         mov        dword [rsp+0x1+arg_3F], edi
00000000000110d4         jne        loc_11958

00000000000110da         cmp        byte [rsp+0x1+arg_37], 0x0
00000000000110df         je         loc_11379

00000000000110e5         cmp        r15d, 0x2d
00000000000110e9         je         loc_11c13

00000000000110ef         mov        byte [rsp+0x1+arg_2F], 0x2b

                     loc_110f4:
00000000000110f4         mov        eax, dword [rsp+0x1+arg_3F]                 ; CODE XREF=sub_112b0+1713
00000000000110f8         lea        rcx, qword [r9+0x17]
00000000000110fc         mov        rdx, qword [rsp+0x1+var_FFFFFFFFFFFFFFF9]
0000000000011101         sub        rcx, r8
0000000000011104         lea        r12d, dword [rax-1]
0000000000011108         sub        rdx, r14
000000000001110b         sub        r12d, ecx
000000000001110e         test       r12d, r12d
0000000000011111         jle        loc_11b5c

0000000000011117         cmp        r15d, 0x5f
000000000001111b         je         loc_11ad6

0000000000011121         movsxd     rax, dword [rsp+0x1+arg_3F]
0000000000011126         cmp        rax, rdx
0000000000011129         mov        rdi, rax
000000000001112c         jae        __strftime_internal+204

0000000000011132         test       r10d, r10d
0000000000011135         mov        eax, 0x0
000000000001113a         mov        esi, 0x1
000000000001113f         cmovns     eax, r10d
0000000000011143         cdqe
0000000000011145         test       rax, rax
0000000000011148         cmovne     rsi, rax
000000000001114c         cmp        rsi, rdx
000000000001114f         jae        __strftime_internal+204

0000000000011155         add        r14, rsi
0000000000011158         test       rbp, rbp
000000000001115b         movsxd     r9, r12d
000000000001115e         mov        r12, rbx
0000000000011161         je         loc_11204

0000000000011167         test       edi, edi
0000000000011169         jne        loc_111bf

000000000001116b         cmp        rax, 0x1
000000000001116f         jbe        loc_111bf

0000000000011171         movsxd     rdx, r10d
0000000000011174         mov        qword [rsp+0x1+arg_4F], r8
0000000000011179         mov        qword [rsp+0x1+arg_47], r9
000000000001117e         sub        rdx, 0x1
0000000000011182         cmp        r15d, 0x30
0000000000011186         mov        qword [rsp+0x1+arg_37], rcx
000000000001118b         lea        r12, qword [rbp+rdx]
0000000000011190         je         loc_11f61

0000000000011196         cmp        r15d, 0x2b
000000000001119a         je         loc_11f61

00000000000111a0         mov        rdi, rbp                                    ; argument "__s" for method j_memset
00000000000111a3         mov        esi, 0x20                                   ; argument "__c" for method j_memset
00000000000111a8         mov        rbp, r12
00000000000111ab         call       j_memset                                    ; memset
00000000000111b0         mov        r8, qword [rsp+0x1+arg_4F]
00000000000111b5         mov        r9, qword [rsp+0x1+arg_47]
00000000000111ba         mov        rcx, qword [rsp+0x1+arg_37]

                     loc_111bf:
00000000000111bf         movzx      eax, byte [rsp+0x1+arg_2F]                  ; CODE XREF=sub_11040+297, sub_11040+303, sub_11f20+96
00000000000111c4         add        rbp, 0x1
00000000000111c8         mov        r12, rbx
00000000000111cb         mov        byte [rbp-1], al

                     loc_111ce:
00000000000111ce         test       rbp, rbp                                    ; CODE XREF=sub_112b0+2711
00000000000111d1         je         loc_11204

00000000000111d3         mov        rdx, r9                                     ; argument "__n" for method j_memset
00000000000111d6         mov        rdi, rbp                                    ; argument "__s" for method j_memset
00000000000111d9         mov        esi, 0x30                                   ; argument "__c" for method j_memset
00000000000111de         mov        qword [rsp+0x1+arg_47], r8
00000000000111e3         mov        qword [rsp+0x1+arg_37], rcx
00000000000111e8         mov        qword [rsp+0x1+arg_2F], r9
00000000000111ed         call       j_memset                                    ; memset
00000000000111f2         mov        r9, qword [rsp+0x1+arg_2F]
00000000000111f7         mov        r8, qword [rsp+0x1+arg_47]
00000000000111fc         mov        rcx, qword [rsp+0x1+arg_37]
0000000000011201         add        rbp, r9

                     loc_11204:
0000000000011204         mov        rdx, qword [rsp+0x1+var_FFFFFFFFFFFFFFF9]   ; CODE XREF=sub_11040+289, sub_11040+401
0000000000011209         add        r14, r9
000000000001120c         xor        r11d, r11d
000000000001120f         xor        r10d, r10d
0000000000011212         sub        rdx, r14

                     loc_11215:
0000000000011215         cmp        rcx, r11                                    ; CODE XREF=sub_112b0+258, sub_112b0+1895, sub_112b0+2215, sub_112b0+2398, sub_112b0+2636
0000000000011218         mov        rbx, r11
000000000001121b         cmovae     rbx, rcx
000000000001121f         cmp        rbx, rdx
0000000000011222         jae        __strftime_internal+204

0000000000011228         test       rbp, rbp
000000000001122b         je         loc_10a3e

0000000000011231         mov        esi, dword [rsp+0x1+arg_3F]
0000000000011235         test       esi, esi
0000000000011237         jne        loc_11288

0000000000011239         cmp        rcx, r11
000000000001123c         jae        loc_11288

000000000001123e         movsxd     rdx, r10d
0000000000011241         mov        qword [rsp+0x1+arg_3F], r8
0000000000011246         mov        qword [rsp+0x1+arg_37], rcx
000000000001124b         sub        rdx, rcx
000000000001124e         cmp        r15d, 0x30
0000000000011252         lea        rax, qword [rbp+rdx]
0000000000011257         mov        qword [rsp+0x1+arg_2F], rax
000000000001125c         je         loc_11a9a

0000000000011262         cmp        r15d, 0x2b
0000000000011266         je         loc_11a9a

000000000001126c         mov        rdi, rbp                                    ; argument "__s" for method j_memset
000000000001126f         mov        esi, 0x20                                   ; argument "__c" for method j_memset
0000000000011274         call       j_memset                                    ; memset
0000000000011279         mov        rbp, qword [rsp+0x1+arg_2F]
000000000001127e         mov        r8, qword [rsp+0x1+arg_3F]
0000000000011283         mov        rcx, qword [rsp+0x1+arg_37]

                     loc_11288:
0000000000011288         cmp        byte [rsp+0x1+arg_27], 0x0                  ; CODE XREF=sub_11040+503, sub_11040+508, sub_112b0+2054
000000000001128d         mov        rdx, rcx
0000000000011290         mov        qword [rsp+0x1+arg_27], rcx
0000000000011295         mov        rsi, r8
0000000000011298         mov        rdi, rbp
000000000001129b         jne        loc_10a31

                     loc_112a1:
00000000000112a1         call       j_memcpy                                    ; memcpy, CODE XREF=__strftime_internal+1259
00000000000112a6         mov        rcx, qword [rsp+0x1+arg_27]
00000000000112ab         jmp        loc_10a3b


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_112b0:
00000000000112b0         movdqu     xmm0, xmmword [r13]
00000000000112b6         lea        rsi, qword [rsp+112]                        ; argument #2 for method mktime_z
00000000000112bb         mov        rax, qword [r13+0x30]
00000000000112bf         mov        rdi, qword [rsp+16]                         ; argument #1 for method mktime_z
00000000000112c4         movaps     xmmword [rsp+112], xmm0
00000000000112c9         mov        dword [rsp+56], r10d
00000000000112ce         movdqu     xmm0, xmmword [r13+0x10]
00000000000112d4         mov        qword [rsp+160], rax
00000000000112dc         movaps     xmmword [rsp+128], xmm0
00000000000112e4         movdqu     xmm0, xmmword [r13+0x20]
00000000000112ea         movaps     xmmword [rsp+144], xmm0
00000000000112f2         call       mktime_z                                    ; mktime_z
00000000000112f7         lea        r9, qword [rsp+176]
00000000000112ff         mov        rsi, rax
0000000000011302         mov        rcx, rax
0000000000011305         movabs     r11, 0x6666666666666667
000000000001130f         mov        edi, 0x30
0000000000011314         mov        r10d, dword [rsp+56]
0000000000011319         lea        r8, qword [r9+0x17]
000000000001131d         nop        dword [rax]

                     loc_11320:
0000000000011320         mov        rax, rcx                                    ; CODE XREF=sub_112b0+174
0000000000011323         imul       r11
0000000000011326         mov        rax, rcx
0000000000011329         sar        rax, 0x3f
000000000001132d         sar        rdx, 0x2
0000000000011331         sub        rdx, rax
0000000000011334         mov        rax, rdx
0000000000011337         lea        rdx, qword [rdx+rdx*4]
000000000001133b         add        rdx, rdx
000000000001133e         sub        rcx, rdx
0000000000011341         mov        rdx, rcx
0000000000011344         mov        rcx, rax
0000000000011347         mov        eax, edi
0000000000011349         sub        eax, edx
000000000001134b         add        edx, 0x30
000000000001134e         test       rsi, rsi
0000000000011351         cmovs      edx, eax
0000000000011354         sub        r8, 0x1
0000000000011358         test       rcx, rcx
000000000001135b         mov        byte [r8], dl
000000000001135e         jne        loc_11320

0000000000011360         test       r10d, r10d
0000000000011363         mov        edi, 0x1
0000000000011368         cmovg      edi, r10d
000000000001136c         test       rsi, rsi
000000000001136f         mov        dword [rsp+72], edi
0000000000011373         js         sub_112b0+1704
                        ; endp

                     loc_11379:
0000000000011379         mov        rdx, qword [rsp+0x1+var_FFFFFFFFFFFFFFF9]   ; CODE XREF=sub_11040+159
000000000001137e         lea        rcx, qword [r9+0x17]
0000000000011382         sub        rcx, r8
0000000000011385         sub        rdx, r14
0000000000011388         cmp        r15d, 0x2d
000000000001138c         je         loc_1139f

000000000001138e         mov        r12d, dword [rsp+0x1+arg_3F]
0000000000011393         sub        r12d, ecx
0000000000011396         test       r12d, r12d
0000000000011399         jg         loc_11d29

                     loc_1139f:
000000000001139f         test       r10d, r10d                                  ; CODE XREF=sub_112b0+220
00000000000113a2         mov        r11d, 0x0
00000000000113a8         mov        r12, rbx
00000000000113ab         cmovns     r11d, r10d
00000000000113af         movsxd     r11, r11d
00000000000113b2         jmp        loc_11215
00000000000113b7         movzx      eax, byte [rbx+1]
00000000000113bb         lea        rdx, qword [rbx+1]
00000000000113bf         cmp        al, 0x3a
00000000000113c1         je         sub_11d69+369
00000000000113c7         mov        r8d, 0x1
00000000000113cd         cmp        al, 0x7a                                    ; CODE XREF=sub_11d69+396
00000000000113cf         jne        __strftime_internal+592
00000000000113d5         mov        rbx, rdx
00000000000113d8         jmp        sub_10df0+383
00000000000113dd         cmp        r11d, 0x45
00000000000113e1         je         __strftime_internal+592
00000000000113e7         mov        edi, dword [r13+0x14]
00000000000113eb         mov        r8d, dword [r13+0x1c]
00000000000113ef         mov        edx, 0x92492493
00000000000113f4         mov        eax, edi
00000000000113f6         mov        ecx, r8d
00000000000113f9         sar        eax, 0x1f
00000000000113fc         and        eax, 0x190
0000000000011401         lea        r12d, dword [rdi+rax-0x64]
0000000000011406         mov        eax, dword [r13+0x18]
000000000001140a         sub        ecx, eax
000000000001140c         mov        dword [rsp+0x38], eax
0000000000011410         add        ecx, 0x17e
0000000000011416         mov        eax, ecx
0000000000011418         imul       edx
000000000001141a         lea        eax, dword [rdx+rcx]
000000000001141d         mov        edx, ecx
000000000001141f         sar        edx, 0x1f
0000000000011422         sar        eax, 0x2
0000000000011425         sub        eax, edx
0000000000011427         lea        edx, dword [rax*8]
000000000001142e         sub        edx, eax
0000000000011430         mov        eax, edx
0000000000011432         mov        edx, r8d
0000000000011435         sub        edx, ecx
0000000000011437         lea        eax, dword [rdx+rax+3]
000000000001143b         test       eax, eax
000000000001143d         mov        dword [rsp+0x40], eax
0000000000011441         js         sub_112b0+2744
0000000000011447         test       r12b, 0x3
000000000001144b         mov        eax, 0x16d
0000000000011450         jne        sub_112b0+487
0000000000011452         mov        ecx, 0x51eb851f
0000000000011457         mov        eax, r12d
000000000001145a         imul       ecx
000000000001145c         mov        eax, r12d
000000000001145f         sar        eax, 0x1f
0000000000011462         mov        dword [rsp+0x48], eax
0000000000011466         mov        ecx, edx
0000000000011468         sar        edx, 0x5
000000000001146b         sub        edx, eax
000000000001146d         mov        eax, 0x16e
0000000000011472         imul       edx, edx, 0x64
0000000000011475         cmp        r12d, edx
0000000000011478         jne        sub_112b0+487
000000000001147a         sar        ecx, 0x7
000000000001147d         mov        eax, ecx
000000000001147f         sub        eax, dword [rsp+0x48]
0000000000011483         imul       eax, eax, 0x190
0000000000011489         cmp        r12d, eax
000000000001148c         sete       al
000000000001148f         movzx      eax, al
0000000000011492         add        eax, 0x16d
0000000000011497         sub        r8d, eax                                    ; CODE XREF=sub_112b0+416, sub_112b0+456
000000000001149a         mov        edx, 0x92492493
000000000001149f         mov        ecx, r8d
00000000000114a2         sub        ecx, dword [rsp+0x38]
00000000000114a6         add        ecx, 0x17e
00000000000114ac         mov        eax, ecx
00000000000114ae         sub        r8d, ecx
00000000000114b1         imul       edx
00000000000114b3         lea        eax, dword [rdx+rcx]
00000000000114b6         mov        edx, ecx
00000000000114b8         sar        edx, 0x1f
00000000000114bb         sar        eax, 0x2
00000000000114be         sub        eax, edx
00000000000114c0         lea        edx, dword [rax*8]
00000000000114c7         sub        edx, eax
00000000000114c9         lea        ecx, dword [r8+rdx+3]
00000000000114ce         mov        r8d, 0x1
00000000000114d4         test       ecx, ecx
00000000000114d6         jns        sub_112b0+559
00000000000114d8         mov        ecx, dword [rsp+0x40]
00000000000114dc         xor        r8d, r8d

                     loc_114df:
00000000000114df         cmp        sil, 0x47                                   ; CODE XREF=sub_112b0+550, sub_11d69+135
00000000000114e3         je         loc_11c26

00000000000114e9         cmp        sil, 0x67
00000000000114ed         jne        loc_11e1f

00000000000114f3         mov        ecx, 0x51eb851f
00000000000114f8         mov        eax, edi
00000000000114fa         mov        esi, edi
00000000000114fc         imul       ecx
00000000000114fe         mov        eax, edx
0000000000011500         mov        edx, edi
0000000000011502         sar        edx, 0x1f
0000000000011505         sar        eax, 0x5
0000000000011508         sub        eax, edx
000000000001150a         imul       eax, eax, 0x64
000000000001150d         sub        esi, eax
000000000001150f         add        esi, r8d
0000000000011512         mov        eax, esi
0000000000011514         imul       ecx
0000000000011516         mov        eax, esi
0000000000011518         sar        eax, 0x1f
000000000001151b         mov        ecx, edx
000000000001151d         sar        ecx, 0x5
0000000000011520         sub        ecx, eax
0000000000011522         imul       ecx, ecx, 0x64
0000000000011525         sub        esi, ecx
0000000000011527         mov        ecx, esi
0000000000011529         jns        loc_10f19

000000000001152f         mov        eax, 0xfffff894
0000000000011534         sub        eax, r8d
0000000000011537         cmp        edi, eax
0000000000011539         jge        loc_11fda

000000000001153f         neg        ecx
0000000000011541         test       r15d, r15d
0000000000011544         jne        loc_10f22

                     loc_1154a:
000000000001154a         mov        r15d, dword [rsp+0x1+arg_23]                ; CODE XREF=sub_10df0+300, sub_11f20+192
000000000001154f         mov        eax, 0x1
0000000000011554         cmp        r15d, 0x2b
0000000000011558         je         loc_11fba

000000000001155e         mov        byte [rsp+0x1+arg_37], 0x0
0000000000011563         mov        byte [rsp+0x1+arg_2F], 0x0
0000000000011568         mov        edi, 0x2
000000000001156d         xor        esi, esi
000000000001156f         jmp        loc_10ab7
0000000000011574         cmp        r11d, 0x45
0000000000011578         je         __strftime_internal+592
000000000001157e         mov        ecx, dword [r13+0xc]
0000000000011582         mov        edi, 0x2
0000000000011587         jmp        __strftime_internal+1376
000000000001158c         mov        eax, dword [r13+0x18]
0000000000011590         mov        edx, 0x92492493
0000000000011595         mov        edi, 0x1
000000000001159a         lea        ecx, dword [rax+6]
000000000001159d         mov        eax, ecx
000000000001159f         imul       edx
00000000000115a1         lea        eax, dword [rdx+rcx]
00000000000115a4         mov        edx, ecx
00000000000115a6         sar        edx, 0x1f
00000000000115a9         sar        eax, 0x2
00000000000115ac         sub        eax, edx
00000000000115ae         lea        edx, dword [rax*8]
00000000000115b5         sub        edx, eax
00000000000115b7         sub        ecx, edx
00000000000115b9         add        ecx, 0x1
00000000000115bc         jmp        __strftime_internal+1376
00000000000115c1         cmp        r11d, 0x45
00000000000115c5         je         __strftime_internal+592
00000000000115cb         mov        ecx, dword [r13+0x18]
00000000000115cf         mov        edi, 0x1
00000000000115d4         jmp        __strftime_internal+1376
00000000000115d9         cmp        r11d, 0x45
00000000000115dd         je         __strftime_internal+592
00000000000115e3         mov        eax, dword [r13+0x18]
00000000000115e7         mov        ecx, 0x92492493
00000000000115ec         lea        esi, dword [rax+6]
00000000000115ef         mov        eax, esi
00000000000115f1         imul       ecx
00000000000115f3         lea        eax, dword [rdx+rsi]
00000000000115f6         mov        edx, esi
00000000000115f8         sar        edx, 0x1f
00000000000115fb         sar        eax, 0x2
00000000000115fe         sub        eax, edx
0000000000011600         lea        edx, dword [rax*8]
0000000000011607         sub        edx, eax
0000000000011609         mov        eax, edx
000000000001160b         mov        edx, dword [r13+0x1c]
000000000001160f         sub        eax, esi
0000000000011611         lea        esi, dword [rax+rdx+7]
0000000000011615         mov        eax, esi
0000000000011617         imul       ecx
0000000000011619         jmp        sub_10bf0+402
000000000001161e         cmp        r11d, 0x45
0000000000011622         je         __strftime_internal+592
0000000000011628         test       r8b, r8b
000000000001162b         je         __strftime_internal+965
0000000000011631         mov        byte [rsp+0x30], r8b
0000000000011636         jmp        __strftime_internal+962
000000000001163b         cmp        r11d, 0x45
000000000001163f         je         sub_112b0+2074
0000000000011645         mov        esi, dword [r13+0x14]
0000000000011649         mov        edx, 0x51eb851f
000000000001164e         mov        eax, esi
0000000000011650         imul       edx
0000000000011652         mov        eax, edx
0000000000011654         mov        edx, esi
0000000000011656         sar        edx, 0x1f
0000000000011659         sar        eax, 0x5
000000000001165c         sub        eax, edx
000000000001165e         mov        edx, esi
0000000000011660         lea        ecx, dword [rax+0x13]
0000000000011663         imul       eax, eax, 0x64
0000000000011666         sub        edx, eax
0000000000011668         mov        eax, edx
000000000001166a         shr        eax, 0x1f
000000000001166d         test       ecx, ecx
000000000001166f         setg       dl
0000000000011672         and        eax, edx
0000000000011674         cmp        esi, 0xfffff894
000000000001167a         setl       byte [rsp+0x38]
000000000001167f         sub        ecx, eax
0000000000011681         cmp        esi, 0xfffff894
0000000000011687         setge      al
000000000001168a         test       r15d, r15d
000000000001168d         jne        sub_10df0+316
0000000000011693         cmp        dword [rsp+0x2c], 0x2b
0000000000011698         mov        r15d, dword [rsp+0x2c]
000000000001169d         jne        sub_10df0+326

                     loc_116a3:
00000000000116a3         mov        edi, 0x2                                    ; CODE XREF=sub_10df0+320
00000000000116a8         mov        edx, 0x63

                     loc_116ad:
00000000000116ad         cmp        edx, ecx                                    ; CODE XREF=sub_112b0+2477
00000000000116af         mov        byte [rsp+0x1+arg_37], 0x1
00000000000116b4         mov        r15d, 0x2b
00000000000116ba         jb         loc_10de9

                     loc_116c0:
00000000000116c0         cmp        r10d, edi                                   ; CODE XREF=sub_11f20+164
00000000000116c3         mov        r15d, 0x2b
00000000000116c9         setg       byte [rsp+0x1+arg_37]
00000000000116ce         xor        esi, esi
00000000000116d0         jmp        loc_10ab7
00000000000116d5         test       r11d, r11d
00000000000116d8         jne        __strftime_internal+592
00000000000116de         lea        rax, qword [aMdy]                           ; "%m/%d/%y"
00000000000116e5         mov        dword [rsp+0x38], 0xffffffff
00000000000116ed         mov        qword [rsp+0x40], rax
00000000000116f2         jmp        __strftime_internal+1650
00000000000116f7         test       r11d, r11d
00000000000116fa         jne        __strftime_internal+592
0000000000011700         test       r15d, r15d
0000000000011703         jne        sub_11d69+404
0000000000011709         test       r10d, r10d
000000000001170c         jns        sub_11d69+404
0000000000011712         lea        rax, qword [aYmd_1a0c9]                     ; "%Y-%m-%d"
0000000000011719         mov        dword [rsp+0x38], 0x4
0000000000011721         mov        r15d, 0x2b
0000000000011727         mov        qword [rsp+0x40], rax
000000000001172c         jmp        __strftime_internal+1650
0000000000011731         movzx      ecx, byte [rbx-1]
0000000000011735         lea        r9, qword [rbx-1]
0000000000011739         mov        rdx, qword [rsp+8]                          ; CODE XREF=sub_11d69+364
000000000001173e         mov        eax, 0x0
0000000000011743         sub        rdx, r14
0000000000011746         test       r10d, r10d
0000000000011749         cmovns     eax, r10d
000000000001174d         cmp        cl, 0x25
0000000000011750         cdqe
0000000000011752         jne        __strftime_internal+587
0000000000011758         test       rax, rax
000000000001175b         mov        ecx, 0x1
0000000000011760         mov        r12, r9
0000000000011763         cmovne     rcx, rax
0000000000011767         mov        r8d, 0x1
000000000001176d         jmp        __strftime_internal+657
0000000000011772         cmp        r11d, 0x45
0000000000011776         je         __strftime_internal+592
000000000001177c         mov        ecx, dword [r13+8]
0000000000011780         mov        edi, 0x2
0000000000011785         jmp        __strftime_internal+1376
000000000001178a         cmp        r11d, 0x45
000000000001178e         je         __strftime_internal+592
0000000000011794         mov        ecx, dword [r13+4]
0000000000011798         mov        edi, 0x2
000000000001179d         jmp        __strftime_internal+1376
00000000000117a2         cmp        r11d, 0x45
00000000000117a6         je         __strftime_internal+592
00000000000117ac         cmp        r10d, 0xffffffff
00000000000117b0         je         sub_112b0+2641
00000000000117b6         cmp        r10d, 0x8
00000000000117ba         jg         sub_11f20+169
00000000000117c0         mov        ecx, dword [rsp+0x518]
00000000000117c7         mov        esi, r10d
00000000000117ca         mov        edi, 0x66666667
00000000000117cf         nop
00000000000117d0         mov        eax, ecx                                    ; CODE XREF=sub_112b0+1332
00000000000117d2         add        esi, 0x1
00000000000117d5         sar        ecx, 0x1f
00000000000117d8         imul       edi
00000000000117da         sar        edx, 0x2
00000000000117dd         sub        edx, ecx
00000000000117df         cmp        esi, 0x9
00000000000117e2         mov        ecx, edx
00000000000117e4         jne        sub_112b0+1312
00000000000117e6         mov        edi, r10d                                   ; CODE XREF=sub_11f20+176
00000000000117e9         jmp        __strftime_internal+1376
00000000000117ee         cmp        r11d, 0x45
00000000000117f2         je         __strftime_internal+592
00000000000117f8         mov        ecx, dword [rsp+0x68]
00000000000117fc         mov        edi, 0x2
0000000000011801         jmp        __strftime_internal+1376
0000000000011806         cmp        r11d, 0x45
000000000001180a         je         __strftime_internal+592
0000000000011810         mov        ecx, dword [rsp+0x68]
0000000000011814         test       r15d, r15d                                  ; CODE XREF=sub_112b0+1652, sub_112b0+1671
0000000000011817         mov        edi, 0x2
000000000001181c         jne        __strftime_internal+1376
0000000000011822         mov        r15d, 0x5f
0000000000011828         jmp        __strftime_internal+1376
000000000001182d         cmp        r11d, 0x45
0000000000011831         je         __strftime_internal+592
0000000000011837         mov        eax, dword [r13+0x10]
000000000001183b         mov        byte [rsp+0x40], 0x0
0000000000011840         mov        edi, 0x2
0000000000011845         cmp        eax, 0xffffffff
0000000000011848         lea        ecx, dword [rax+1]
000000000001184b         setl       byte [rsp+0x38]
0000000000011850         cmp        eax, 0xffffffff
0000000000011853         setge      al
0000000000011856         xor        esi, esi
0000000000011858         jmp        __strftime_internal+1399
000000000001185d         test       r10d, r10d
0000000000011860         mov        ecx, 0x0
0000000000011865         mov        eax, 0x1
000000000001186a         cmovns     ecx, r10d
000000000001186e         movsxd     rcx, ecx
0000000000011871         test       rcx, rcx
0000000000011874         cmove      rcx, rax
0000000000011878         mov        rax, qword [rsp+8]
000000000001187d         sub        rax, r14
0000000000011880         cmp        rax, rcx
0000000000011883         jbe        __strftime_internal+204
0000000000011889         test       rbp, rbp
000000000001188c         je         __strftime_internal+1592
0000000000011892         cmp        r10d, 0x1
0000000000011896         jle        sub_112b0+1570
0000000000011898         movsxd     rdx, r10d
000000000001189b         mov        qword [rsp+0x30], rcx
00000000000118a0         sub        rdx, 0x1
00000000000118a4         cmp        r15d, 0x30
00000000000118a8         lea        r12, qword [rbp+rdx]
00000000000118ad         je         sub_11d69+277
00000000000118b3         cmp        r15d, 0x2b
00000000000118b7         je         sub_11d69+277
00000000000118bd         mov        rdi, rbp
00000000000118c0         mov        esi, 0x20
00000000000118c5         mov        rbp, r12
00000000000118c8         call       j_memset                                    ; memset
00000000000118cd         mov        rcx, qword [rsp+0x30]
00000000000118d2         mov        byte [rbp], 0xa                             ; CODE XREF=sub_112b0+1510, sub_11d69+298
00000000000118d6         add        rbp, 0x1
00000000000118da         jmp        __strftime_internal+1592
00000000000118df         xor        eax, eax
00000000000118e1         jmp        __strftime_internal+1608
00000000000118e6         cmp        r11d, 0x45
00000000000118ea         je         __strftime_internal+592
00000000000118f0         mov        eax, dword [r13+0x1c]
00000000000118f4         mov        byte [rsp+0x40], 0x0
00000000000118f9         mov        edi, 0x3
00000000000118fe         cmp        eax, 0xffffffff
0000000000011901         lea        ecx, dword [rax+1]
0000000000011904         setl       byte [rsp+0x38]
0000000000011909         cmp        eax, 0xffffffff
000000000001190c         setge      al
000000000001190f         xor        esi, esi
0000000000011911         jmp        __strftime_internal+1399
0000000000011916         cmp        r11d, 0x45
000000000001191a         je         __strftime_internal+592
0000000000011920         mov        ecx, dword [r13+8]
0000000000011924         jmp        sub_112b0+1380
0000000000011929         cmp        r11d, 0x45
000000000001192d         je         __strftime_internal+592
0000000000011933         mov        ecx, dword [r13+0xc]
0000000000011937         jmp        sub_112b0+1380
000000000001193c         nop        dword [rax]

                     loc_11940:
0000000000011940         mov        eax, ecx                                    ; CODE XREF=__strftime_internal+1403, __strftime_internal+1411
0000000000011942         neg        eax
0000000000011944         cmp        byte [rsp+0x1+arg_2F], 0x0
0000000000011949         cmovne     ecx, eax
000000000001194c         jmp        loc_11070
0000000000011951         align      8

                     loc_11958:
0000000000011958         cmp        r15d, 0x2d                                  ; CODE XREF=sub_11040+148
000000000001195c         mov        byte [rsp+0x1+arg_2F], 0x2d
0000000000011961         jne        loc_110f4

                     loc_11967:
0000000000011967         test       r10d, r10d                                  ; CODE XREF=sub_112b0+2409
000000000001196a         mov        r11d, 0x0
0000000000011970         mov        rax, qword [rsp+0x1+var_FFFFFFFFFFFFFFF9]
0000000000011975         cmovns     r11d, r10d
0000000000011979         mov        r12d, 0x1
000000000001197f         movsxd     r11, r11d
0000000000011982         test       r11, r11
0000000000011985         cmovne     r12, r11
0000000000011989         sub        rax, r14
000000000001198c         cmp        rax, r12
000000000001198f         jbe        __strftime_internal+204

0000000000011995         test       rbp, rbp
0000000000011998         je         loc_119fc

000000000001199a         mov        eax, dword [rsp+0x1+arg_3F]
000000000001199e         test       eax, eax
00000000000119a0         jne        loc_119f4

00000000000119a2         cmp        r11, 0x1
00000000000119a6         jbe        loc_119f4

00000000000119a8         movsxd     rax, r10d
00000000000119ab         mov        rdi, rbp                                    ; argument "__s" for method j_memset
00000000000119ae         mov        esi, 0x20                                   ; argument "__c" for method j_memset
00000000000119b3         lea        rcx, qword [rax-1]
00000000000119b7         mov        qword [rsp+0x1+arg_57], r9
00000000000119bc         mov        qword [rsp+0x1+arg_4F], r8
00000000000119c1         mov        qword [rsp+0x1+arg_47], r11
00000000000119c6         mov        dword [rsp+0x1+arg_37], r10d
00000000000119cb         mov        rdx, rcx                                    ; argument "__n" for method j_memset
00000000000119ce         mov        qword [rsp+0x1+arg_2F], rcx
00000000000119d3         call       j_memset                                    ; memset
00000000000119d8         mov        rcx, qword [rsp+0x1+arg_2F]
00000000000119dd         mov        r9, qword [rsp+0x1+arg_57]
00000000000119e2         mov        r8, qword [rsp+0x1+arg_4F]
00000000000119e7         mov        r11, qword [rsp+0x1+arg_47]
00000000000119ec         mov        r10d, dword [rsp+0x1+arg_37]
00000000000119f1         add        rbp, rcx

                     loc_119f4:
00000000000119f4         mov        byte [rbp], r15b                            ; CODE XREF=sub_112b0+1776, sub_112b0+1782
00000000000119f8         add        rbp, 0x1

                     loc_119fc:
00000000000119fc         mov        rdx, qword [rsp+0x1+var_FFFFFFFFFFFFFFF9]   ; CODE XREF=sub_112b0+1768
0000000000011a01         lea        rcx, qword [r9+0x17]
0000000000011a05         add        r14, r12
0000000000011a08         mov        r15d, 0x2d
0000000000011a0e         mov        r12, rbx
0000000000011a11         sub        rcx, r8
0000000000011a14         sub        rdx, r14
0000000000011a17         jmp        loc_11215
0000000000011a1c         align      32

                     loc_11a20:
0000000000011a20         call       j_memcpy                                    ; memcpy, CODE XREF=__strftime_internal+781
0000000000011a25         mov        rcx, qword [rsp+0x4f8+var_4C0]
0000000000011a2a         mov        r8, qword [rsp+0x4f8+var_4C8]
0000000000011a2f         jmp        loc_10862
0000000000011a34         align      8

                     loc_11a38:
0000000000011a38         mov        rdi, rbp                                    ; CODE XREF=__strftime_internal+1240
0000000000011a3b         mov        qword [rsp+0x1+arg_27], rcx
0000000000011a40         call       memcpy_lowcase                              ; memcpy_lowcase
0000000000011a45         mov        rcx, qword [rsp+0x1+arg_27]
0000000000011a4a         jmp        loc_10a3b

                     loc_11a4f:
0000000000011a4f         mov        rdi, rbp                                    ; argument "__s" for method j_memset, CODE XREF=__strftime_internal+1180, __strftime_internal+1190
0000000000011a52         mov        esi, 0x30                                   ; argument "__c" for method j_memset
0000000000011a57         call       j_memset                                    ; memset
0000000000011a5c         mov        rbp, qword [rsp+0x1+arg_2F]
0000000000011a61         movzx      r8d, byte [rsp+0x1+arg_37]
0000000000011a67         mov        rcx, qword [rsp+0x1+arg_3F]
0000000000011a6c         mov        r9, qword [rsp+0x1+arg_47]
0000000000011a71         jmp        loc_10a0e

                     loc_11a76:
0000000000011a76         mov        rdi, rbp                                    ; argument "__s" for method j_memset, CODE XREF=__strftime_internal+710, __strftime_internal+720
0000000000011a79         mov        esi, 0x30                                   ; argument "__c" for method j_memset
0000000000011a7e         mov        rbp, rbx
0000000000011a81         call       j_memset                                    ; memset
0000000000011a86         mov        r9, qword [rsp+0x4f8+var_4C0]
0000000000011a8b         mov        rcx, qword [rsp+0x4f8+var_4B8]
0000000000011a90         mov        r8, qword [rsp+0x4f8+var_4B0]
0000000000011a95         jmp        loc_10835

                     loc_11a9a:
0000000000011a9a         mov        rdi, rbp                                    ; argument "__s" for method j_memset, CODE XREF=sub_11040+540, sub_11040+550
0000000000011a9d         mov        esi, 0x30                                   ; argument "__c" for method j_memset
0000000000011aa2         call       j_memset                                    ; memset
0000000000011aa7         mov        rbp, qword [rsp+0x1+arg_2F]
0000000000011aac         mov        rcx, qword [rsp+0x1+arg_37]
0000000000011ab1         mov        r8, qword [rsp+0x1+arg_3F]
0000000000011ab6         jmp        loc_11288
0000000000011abb         mov        esi, 0x70                                   ; CODE XREF=__strftime_internal+1611
0000000000011ac0         mov        byte [rsp+0x30], 0x0
0000000000011ac5         jmp        __strftime_internal+965
0000000000011aca         xor        edi, edi                                    ; CODE XREF=sub_10bf0+427, sub_10df0+241, sub_112b0+911
0000000000011acc         jmp        __strftime_internal+1420

                     loc_11ad1:
0000000000011ad1         mov        byte [rsp+0x1+arg_2F], 0x0                  ; CODE XREF=sub_112b0+2685

                     loc_11ad6:
0000000000011ad6         movsxd     r15, r12d                                   ; CODE XREF=sub_11040+219
0000000000011ad9         cmp        r15, rdx
0000000000011adc         jae        __strftime_internal+204

0000000000011ae2         test       rbp, rbp
0000000000011ae5         je         loc_11b18

0000000000011ae7         mov        rdi, rbp                                    ; argument "__s" for method j_memset
0000000000011aea         mov        rdx, r15                                    ; argument "__n" for method j_memset
0000000000011aed         mov        esi, 0x20                                   ; argument "__c" for method j_memset
0000000000011af2         mov        dword [rsp+0x1+arg_4F], r10d
0000000000011af7         mov        qword [rsp+0x1+arg_47], r9
0000000000011afc         add        rbp, r15
0000000000011aff         mov        qword [rsp+0x1+arg_37], r8
0000000000011b04         call       j_memset                                    ; memset
0000000000011b09         mov        r10d, dword [rsp+0x1+arg_4F]
0000000000011b0e         mov        r9, qword [rsp+0x1+arg_47]
0000000000011b13         mov        r8, qword [rsp+0x1+arg_37]

                     loc_11b18:
0000000000011b18         mov        rdx, qword [rsp+0x1+var_FFFFFFFFFFFFFFF9]   ; CODE XREF=sub_112b0+2101
0000000000011b1d         mov        eax, r10d
0000000000011b20         add        r14, r15
0000000000011b23         sub        eax, r12d
0000000000011b26         cmp        r10d, r12d
0000000000011b29         mov        r10d, 0x0
0000000000011b2f         cmovg      r10d, eax
0000000000011b33         sub        rdx, r14
0000000000011b36         cmp        byte [rsp+0x1+arg_2F], 0x0
0000000000011b3b         jne        loc_11c62

0000000000011b41         add        r9, 0x17
0000000000011b45         movsxd     r11, r10d
0000000000011b48         mov        r12, rbx
0000000000011b4b         mov        rcx, r9
0000000000011b4e         mov        r15d, 0x5f
0000000000011b54         sub        rcx, r8
0000000000011b57         jmp        loc_11215

                     loc_11b5c:
0000000000011b5c         test       r10d, r10d                                  ; CODE XREF=sub_11040+209
0000000000011b5f         mov        r11d, 0x0
0000000000011b65         mov        r12d, 0x1
0000000000011b6b         cmovns     r11d, r10d
0000000000011b6f         movsxd     r11, r11d
0000000000011b72         test       r11, r11
0000000000011b75         cmovne     r12, r11
0000000000011b79         cmp        r12, rdx
0000000000011b7c         jae        __strftime_internal+204

0000000000011b82         test       rbp, rbp
0000000000011b85         je         loc_11c00

0000000000011b87         mov        edi, dword [rsp+0x1+arg_3F]
0000000000011b8b         test       edi, edi
0000000000011b8d         jne        loc_11bf4

0000000000011b8f         cmp        r11, 0x1
0000000000011b93         jbe        loc_11bf4

0000000000011b95         movsxd     rdx, r10d
0000000000011b98         mov        dword [rsp+0x1+arg_63], r10d
0000000000011b9d         mov        qword [rsp+0x1+arg_57], r8
0000000000011ba2         sub        rdx, 0x1
0000000000011ba6         cmp        r15d, 0x30
0000000000011baa         mov        qword [rsp+0x1+arg_4F], rcx
0000000000011baf         lea        rax, qword [rbp+rdx]
0000000000011bb4         mov        qword [rsp+0x1+arg_47], r11
0000000000011bb9         mov        qword [rsp+0x1+arg_37], rax
0000000000011bbe         je         loc_11f8f

0000000000011bc4         cmp        r15d, 0x2b
0000000000011bc8         je         loc_11f8f

0000000000011bce         mov        rdi, rbp                                    ; argument "__s" for method j_memset
0000000000011bd1         mov        esi, 0x20                                   ; argument "__c" for method j_memset
0000000000011bd6         call       j_memset                                    ; memset
0000000000011bdb         mov        rbp, qword [rsp+0x1+arg_37]
0000000000011be0         mov        r10d, dword [rsp+0x1+arg_63]
0000000000011be5         mov        r8, qword [rsp+0x1+arg_57]
0000000000011bea         mov        rcx, qword [rsp+0x1+arg_4F]
0000000000011bef         mov        r11, qword [rsp+0x1+arg_47]

                     loc_11bf4:
0000000000011bf4         movzx      eax, byte [rsp+0x1+arg_2F]                  ; CODE XREF=sub_112b0+2269, sub_112b0+2275, sub_11f20+149
0000000000011bf9         add        rbp, 0x1
0000000000011bfd         mov        byte [rbp-1], al

                     loc_11c00:
0000000000011c00         mov        rdx, qword [rsp+0x1+var_FFFFFFFFFFFFFFF9]   ; CODE XREF=sub_112b0+2261
0000000000011c05         add        r14, r12
0000000000011c08         mov        r12, rbx
0000000000011c0b         sub        rdx, r14
0000000000011c0e         jmp        loc_11215

                     loc_11c13:
0000000000011c13         mov        r15d, 0x2b                                  ; CODE XREF=sub_11040+169
0000000000011c19         jmp        loc_11967
0000000000011c1e         mov        r12, rbx                                    ; CODE XREF=sub_10df0+389
0000000000011c21         jmp        __strftime_internal+306

                     loc_11c26:
0000000000011c26         mov        eax, 0xfffff894                             ; CODE XREF=sub_112b0+563
0000000000011c2b         lea        ecx, dword [rdi+r8+0x76c]
0000000000011c33         sub        eax, r8d
0000000000011c36         cmp        edi, eax
0000000000011c38         setl       byte [rsp+0x1+arg_2F]
0000000000011c3d         setge      al
0000000000011c40         test       r15d, r15d
0000000000011c43         je         loc_10dd0

0000000000011c49         cmp        r15d, 0x2b                                  ; CODE XREF=sub_10bf0+474
0000000000011c4d         jne        loc_10ddf

                     loc_11c53:
0000000000011c53         mov        edi, 0x4                                    ; CODE XREF=sub_10bf0+489
0000000000011c58         mov        edx, 0x270f
0000000000011c5d         jmp        loc_116ad

                     loc_11c62:
0000000000011c62         movsxd     r15, r10d                                   ; CODE XREF=sub_112b0+2187
0000000000011c65         mov        r12d, 0x1
0000000000011c6b         test       r15, r15
0000000000011c6e         cmovne     r12, r15
0000000000011c72         cmp        r12, rdx
0000000000011c75         jae        __strftime_internal+204

0000000000011c7b         test       rbp, rbp
0000000000011c7e         je         loc_11cdb

0000000000011c80         mov        r11d, dword [rsp+0x1+arg_3F]
0000000000011c85         test       r11d, r11d
0000000000011c88         jne        loc_11ccf

0000000000011c8a         cmp        r15, 0x1
0000000000011c8e         jbe        loc_11ccf

0000000000011c90         lea        rcx, qword [r15-1]
0000000000011c94         mov        rdi, rbp                                    ; argument "__s" for method j_memset
0000000000011c97         mov        esi, 0x20                                   ; argument "__c" for method j_memset
0000000000011c9c         mov        dword [rsp+0x1+arg_57], r10d
0000000000011ca1         mov        qword [rsp+0x1+arg_4F], r9
0000000000011ca6         mov        rdx, rcx                                    ; argument "__n" for method j_memset
0000000000011ca9         mov        qword [rsp+0x1+arg_47], r8
0000000000011cae         mov        qword [rsp+0x1+arg_37], rcx
0000000000011cb3         call       j_memset                                    ; memset
0000000000011cb8         mov        rcx, qword [rsp+0x1+arg_37]
0000000000011cbd         mov        r10d, dword [rsp+0x1+arg_57]
0000000000011cc2         mov        r9, qword [rsp+0x1+arg_4F]
0000000000011cc7         mov        r8, qword [rsp+0x1+arg_47]
0000000000011ccc         add        rbp, rcx

                     loc_11ccf:
0000000000011ccf         movzx      eax, byte [rsp+0x1+arg_2F]                  ; CODE XREF=sub_112b0+2520, sub_112b0+2526
0000000000011cd4         add        rbp, 0x1
0000000000011cd8         mov        byte [rbp-1], al

                     loc_11cdb:
0000000000011cdb         mov        rdx, qword [rsp+0x1+var_FFFFFFFFFFFFFFF9]   ; CODE XREF=sub_112b0+2510
0000000000011ce0         add        r9, 0x17
0000000000011ce4         add        r14, r12
0000000000011ce7         mov        rcx, r9
0000000000011cea         mov        r11, r15
0000000000011ced         mov        r12, rbx
0000000000011cf0         sub        rcx, r8
0000000000011cf3         mov        r15d, 0x5f
0000000000011cf9         sub        rdx, r14
0000000000011cfc         jmp        loc_11215
0000000000011d01         mov        ecx, dword [rsp+0x518]                      ; CODE XREF=sub_112b0+1280
0000000000011d08         mov        edi, 0x9
0000000000011d0d         mov        r10d, 0x9
0000000000011d13         jmp        __strftime_internal+1376
0000000000011d18         mov        r12, rbx                                    ; CODE XREF=sub_10bf0+243
0000000000011d1b         mov        r9, rbx
0000000000011d1e         mov        r8d, 0x1
0000000000011d24         jmp        __strftime_internal+657

                     loc_11d29:
0000000000011d29         cmp        r15d, 0x5f                                  ; CODE XREF=sub_112b0+233
0000000000011d2d         je         loc_11ad1

0000000000011d33         movsxd     rax, dword [rsp+0x1+arg_3F]
0000000000011d38         cmp        rax, rdx
0000000000011d3b         jae        __strftime_internal+204

0000000000011d41         movsxd     r9, r12d
0000000000011d44         mov        r12, rbx
0000000000011d47         jmp        loc_111ce

                     loc_11d4c:
0000000000011d4c         mov        rdi, rbp                                    ; argument "__s" for method j_memset, CODE XREF=sub_10bf0+95, sub_10bf0+105
0000000000011d4f         mov        esi, 0x30                                   ; argument "__c" for method j_memset
0000000000011d54         call       j_memset                                    ; memset
0000000000011d59         mov        rbp, qword [rsp+80]
0000000000011d5e         mov        r11, qword [rsp+88]
0000000000011d63         jmp        loc_10c76
0000000000011d68         db  0x41 ; 'A'                                         ; CODE XREF=sub_112b0+401


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_A7: int8_t, 175
        ;    arg_A4: int8_t, 172
        ;    arg_A2: int16_t, 170
        ;    arg_63: int32_t, 107
        ;    arg_57: int64_t, 95
        ;    arg_4F: int64_t, 87
        ;    arg_47: int64_t, 79
        ;    arg_3F: int64_t, 71
        ;    arg_37: int64_t, 63
        ;    arg_2F: int64_t, 55
        ;    arg_27: int64_t, 47
        ;    arg_23: int32_t, 43
        ;    var_FFFFFFFFFFFFFFF9: int64_t, 7


                     sub_11d69:
0000000000011d69         sub        esp, 0x1
0000000000011d6c         mov        edx, 0x16d
0000000000011d71         test       r12b, 0x3
0000000000011d75         jne        loc_11db3

0000000000011d77         mov        eax, r12d
0000000000011d7a         mov        edx, 0x51eb851f
0000000000011d7f         imul       edx
0000000000011d81         mov        eax, edx
0000000000011d83         mov        edx, r12d
0000000000011d86         sar        edx, 0x1f
0000000000011d89         sar        eax, 0x5
0000000000011d8c         sub        eax, edx
0000000000011d8e         mov        edx, 0x16e
0000000000011d93         imul       eax, eax, 0x64
0000000000011d96         cmp        r12d, eax
0000000000011d99         jne        loc_11db3

0000000000011d9b         mov        eax, r12d
0000000000011d9e         mov        ecx, 0x190
0000000000011da3         cdq
0000000000011da4         idiv       ecx
0000000000011da6         cmp        edx, 0x1
0000000000011da9         sbb        edx, edx
0000000000011dab         not        edx
0000000000011dad         add        edx, 0x16e

                     loc_11db3:
0000000000011db3         add        r8d, edx                                    ; CODE XREF=sub_11d69+12, sub_11d69+48
0000000000011db6         mov        edx, 0x92492493
0000000000011dbb         mov        ecx, r8d
0000000000011dbe         sub        ecx, dword [rsp+0x1+arg_2F]
0000000000011dc2         add        ecx, 0x17e
0000000000011dc8         mov        eax, ecx
0000000000011dca         sub        r8d, ecx
0000000000011dcd         imul       edx
0000000000011dcf         lea        eax, dword [rdx+rcx]
0000000000011dd2         mov        edx, ecx
0000000000011dd4         sar        edx, 0x1f
0000000000011dd7         sar        eax, 0x2
0000000000011dda         sub        eax, edx
0000000000011ddc         lea        edx, dword [rax*8]
0000000000011de3         sub        edx, eax
0000000000011de5         lea        ecx, dword [r8+rdx+3]
0000000000011dea         mov        r8d, 0xffffffff
0000000000011df0         jmp        loc_114df
0000000000011df5         imul       esi, esi, 0x64                              ; CODE XREF=sub_10df0+527, sub_10df0+545
0000000000011df8         mov        byte [rsp+0x40], 0x1
0000000000011dfd         mov        edi, 0x9
0000000000011e02         imul       eax, r12d, 0x2710
0000000000011e09         add        eax, esi
0000000000011e0b         mov        esi, 0x14
0000000000011e10         add        ecx, eax
0000000000011e12         movzx      eax, byte [rsp+0x38]
0000000000011e17         xor        eax, 0x1
0000000000011e1a         jmp        __strftime_internal+1399

                     loc_11e1f:
0000000000011e1f         mov        eax, ecx                                    ; CODE XREF=sub_112b0+573
0000000000011e21         mov        edx, 0x92492493
0000000000011e26         mov        edi, 0x2
0000000000011e2b         imul       edx
0000000000011e2d         lea        eax, dword [rdx+rcx]
0000000000011e30         sar        ecx, 0x1f
0000000000011e33         sar        eax, 0x2
0000000000011e36         sub        eax, ecx
0000000000011e38         mov        ecx, eax
0000000000011e3a         add        ecx, 0x1
0000000000011e3d         jmp        loc_10aa0
0000000000011e42         movzx      eax, byte [rsp+0x38]                        ; CODE XREF=sub_10df0+511, sub_10df0+553
0000000000011e47         mov        byte [rsp+0x40], 0x1
0000000000011e4c         mov        edi, 0x6
0000000000011e51         imul       ecx, r12d, 0x64
0000000000011e55         xor        eax, 0x1
0000000000011e58         add        ecx, esi
0000000000011e5a         mov        esi, 0x4
0000000000011e5f         jmp        __strftime_internal+1399
0000000000011e64         mov        rdi, rbp                                    ; CODE XREF=__strftime_internal+1543, __strftime_internal+1553
0000000000011e67         mov        esi, 0x30
0000000000011e6c         mov        rbp, r12
0000000000011e6f         call       j_memset                                    ; memset
0000000000011e74         mov        rcx, qword [rsp+0x30]
0000000000011e79         jmp        __strftime_internal+1580
0000000000011e7e         mov        rdi, rbp                                    ; CODE XREF=sub_112b0+1533, sub_112b0+1543
0000000000011e81         mov        esi, 0x30
0000000000011e86         mov        rbp, r12
0000000000011e89         call       j_memset                                    ; memset
0000000000011e8e         mov        rcx, qword [rsp+0x30]
0000000000011e93         jmp        sub_112b0+1570

                     loc_11e98:
0000000000011e98         call       j_memcpy                                    ; memcpy, CODE XREF=sub_10df0+213
0000000000011e9d         mov        rcx, qword [rsp+48]
0000000000011ea2         jmp        loc_10ed5

                     loc_11ea7:
0000000000011ea7         mov        rsi, qword [rsp+32]                         ; argument #2 for method memcpy_lowcase, CODE XREF=sub_10df0+186
0000000000011eac         mov        rdx, r12                                    ; argument #3 for method memcpy_lowcase
0000000000011eaf         mov        rdi, rbp                                    ; argument #1 for method memcpy_lowcase
0000000000011eb2         mov        qword [rsp+48], rcx
0000000000011eb7         call       memcpy_lowcase                              ; memcpy_lowcase
0000000000011ebc         mov        rcx, qword [rsp+48]
0000000000011ec1         jmp        loc_10ed5
0000000000011ec6         mov        byte [rsp+0x30], al                         ; CODE XREF=sub_10df0+359
0000000000011eca         jmp        __strftime_internal+592
0000000000011ecf         movzx      ecx, byte [rbx]                             ; CODE XREF=sub_10df0+537
0000000000011ed2         mov        r9, rbx
0000000000011ed5         jmp        sub_112b0+1161
0000000000011eda         lea        rcx, qword [rbx+2]                          ; CODE XREF=sub_112b0+273
0000000000011ede         mov        r8d, 0x1
0000000000011ee4         mov        rdx, rcx                                    ; CODE XREF=sub_11d69+402
0000000000011ee7         add        rcx, 0x1
0000000000011eeb         movzx      eax, byte [rcx-1]
0000000000011eef         add        r8, 0x1
0000000000011ef3         cmp        al, 0x3a
0000000000011ef5         jne        sub_112b0+285
0000000000011efb         jmp        sub_11d69+379
0000000000011efd         mov        esi, r10d                                   ; CODE XREF=sub_112b0+1107, sub_112b0+1116
0000000000011f00         mov        eax, 0x0
0000000000011f05         sub        esi, 0x6
0000000000011f08         cmovns     eax, esi
0000000000011f0b         mov        dword [rsp+0x38], eax
0000000000011f0f         lea        rax, qword [aYmd_1a0c9]                     ; "%Y-%m-%d"
0000000000011f16         mov        qword [rsp+0x40], rax
0000000000011f1b         jmp        __strftime_internal+1650


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_11f20:
0000000000011f20         imul       ecx, r12d, 0x64                             ; CODE XREF=sub_10df0+517
0000000000011f24         xor        esi, esi
0000000000011f26         mov        byte [rsp+64], 0x1
0000000000011f2b         mov        edi, 0x5
0000000000011f30         add        ecx, eax
0000000000011f32         movzx      eax, byte [rsp+56]
0000000000011f37         xor        eax, 0x1
0000000000011f3a         jmp        __strftime_internal+1399
                        ; endp

                     loc_11f3f:
0000000000011f3f         mov        rdi, rbp                                    ; argument "__s" for method j_memset, CODE XREF=sub_10df0+138, sub_10df0+148
0000000000011f42         mov        esi, 0x30                                   ; argument "__c" for method j_memset
0000000000011f47         call       j_memset                                    ; memset
0000000000011f4c         mov        rbp, qword [rsp+56]
0000000000011f51         movzx      r8d, byte [rsp+64]
0000000000011f57         mov        rcx, qword [rsp+72]
0000000000011f5c         jmp        loc_10ea7

                     loc_11f61:
0000000000011f61         mov        rdi, rbp                                    ; argument "__s" for method j_memset, CODE XREF=sub_11040+336, sub_11040+346
0000000000011f64         mov        esi, 0x30                                   ; argument "__c" for method j_memset
0000000000011f69         mov        rbp, r12
0000000000011f6c         call       j_memset                                    ; memset
0000000000011f71         mov        rcx, qword [rsp+0x1+arg_37]
0000000000011f76         mov        r9, qword [rsp+0x1+arg_47]
0000000000011f7b         mov        r8, qword [rsp+0x1+arg_4F]
0000000000011f80         jmp        loc_111bf
0000000000011f85         mov        esi, 0x30                                   ; CODE XREF=sub_10bf0+294, sub_10bf0+309
0000000000011f8a         jmp        sub_10bf0+315

                     loc_11f8f:
0000000000011f8f         mov        rdi, rbp                                    ; argument "__s" for method j_memset, CODE XREF=sub_112b0+2318, sub_112b0+2328
0000000000011f92         mov        esi, 0x30                                   ; argument "__c" for method j_memset
0000000000011f97         call       j_memset                                    ; memset
0000000000011f9c         mov        rbp, qword [rsp+0x1+arg_37]
0000000000011fa1         mov        r11, qword [rsp+0x1+arg_47]
0000000000011fa6         mov        rcx, qword [rsp+0x1+arg_4F]
0000000000011fab         mov        r8, qword [rsp+0x1+arg_57]
0000000000011fb0         mov        r10d, dword [rsp+0x1+arg_63]
0000000000011fb5         jmp        loc_11bf4

                     loc_11fba:
0000000000011fba         mov        byte [rsp+0x1+arg_2F], 0x0                  ; CODE XREF=sub_112b0+680
0000000000011fbf         mov        edi, 0x2
0000000000011fc4         jmp        loc_116c0
0000000000011fc9         mov        ecx, dword [rsp+0x518]                      ; CODE XREF=sub_112b0+1290
0000000000011fd0         jmp        sub_112b0+1334

                     loc_11fd5:
0000000000011fd5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=__strftime_internal+227
                        ; endp

                     loc_11fda:
0000000000011fda         add        ecx, 0x64                                   ; CODE XREF=sub_112b0+649
0000000000011fdd         test       r15d, r15d
0000000000011fe0         je         loc_1154a

0000000000011fe6         jmp        loc_10f22


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_11feb:
0000000000011feb         xor        edi, edi                                    ; CODE XREF=__strftime_internal+981
0000000000011fed         jmp        __strftime_internal+1436
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_11ff2:
0000000000011ff2         nop        dword [rax]                                 ; End of unwind block (FDE at 0x1d324)
0000000000011ff6         nop        word [cs:rax+rax]
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_11: int8_t, -17


                     nstrftime:
0000000000012000         sub        rsp, 0x18                                   ; Begin of unwind block (FDE at 0x1d39c), CODE XREF=print_long_format+1549, print_long_format+2372
0000000000012004         mov        rax, qword [fs:0x28]
000000000001200d         mov        qword [rsp+0x18+var_10], rax
0000000000012012         xor        eax, eax
0000000000012014         mov        byte [rsp+0x18+var_11], 0x0
0000000000012019         push       r9
000000000001201b         xor        r9d, r9d
000000000001201e         push       r8
0000000000012020         xor        r8d, r8d
0000000000012023         lea        rax, qword [rsp+0x28+var_11]
0000000000012028         push       rax
0000000000012029         push       0xffffffffffffffff
000000000001202b         call       __strftime_internal                         ; __strftime_internal
0000000000012030         add        rsp, 0x20
0000000000012034         mov        rdx, qword [rsp+0x18+var_10]
0000000000012039         xor        rdx, qword [fs:0x28]
0000000000012042         jne        loc_12049

0000000000012044         add        rsp, 0x18
0000000000012048         ret
                        ; endp

                     loc_12049:
0000000000012049         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=nstrftime+66
                        ; endp
000000000001204e         align      16                                          ; End of unwind block (FDE at 0x1d39c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000012050         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x1d3cc), CODE XREF=main+38
0000000000012053         push       rbx
0000000000012054         je         loc_120cd

0000000000012056         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
000000000001205b         mov        rbx, rdi
000000000001205e         call       j_strrchr                                   ; strrchr
0000000000012063         test       rax, rax
0000000000012066         je         loc_120bd

0000000000012068         lea        r8, qword [rax+1]
000000000001206c         mov        rdx, r8
000000000001206f         sub        rdx, rbx
0000000000012072         cmp        rdx, 0x6
0000000000012076         jle        loc_120bd

0000000000012078         lea        rsi, qword [rax-6]
000000000001207c         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000012083         mov        ecx, 0x7
0000000000012088         rep  cmpsb byte [rsi], byte [rdi]
000000000001208a         seta       dl
000000000001208d         sbb        dl, 0x0
0000000000012090         test       dl, dl
0000000000012092         jne        loc_120bd

0000000000012094         lea        rdi, qword [aLibs+8]                        ; 0x1a308
000000000001209b         mov        ecx, 0x3
00000000000120a0         mov        rsi, r8
00000000000120a3         mov        rbx, r8
00000000000120a6         rep  cmpsb byte [rsi], byte [rdi]
00000000000120a8         seta       dl
00000000000120ab         sbb        dl, 0x0
00000000000120ae         test       dl, dl
00000000000120b0         jne        loc_120bd

00000000000120b2         lea        rbx, qword [rax+4]
00000000000120b6         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_120bd:
00000000000120bd         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
00000000000120c4         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
00000000000120cb         pop        rbx
00000000000120cc         ret
                        ; endp

                     loc_120cd:
00000000000120cd         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
00000000000120d4         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
00000000000120db         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
00000000000120e0         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
00000000000120e5         call       j_fwrite                                    ; fwrite
00000000000120ea         call       j_abort                                     ; abort
                        ; endp
00000000000120ef         align      16                                          ; End of unwind block (FDE at 0x1d3cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
00000000000120f0         push       rbp                                         ; Begin of unwind block (FDE at 0x1d3ec), CODE XREF=sub_12920+2597, sub_12920+2619
00000000000120f1         push       rbx
00000000000120f2         mov        rbp, rdi
00000000000120f5         mov        ebx, esi
00000000000120f7         sub        rsp, 0x8
00000000000120fb         call       locale_charset                              ; locale_charset
0000000000012100         movzx      edx, byte [rax]
0000000000012103         and        edx, 0xffffffdf
0000000000012106         cmp        dl, 0x55
0000000000012109         je         loc_12180

000000000001210b         cmp        dl, 0x47
000000000001210e         je         loc_12130

                     loc_12110:
0000000000012110         lea        rax, qword [aLibs+27]                       ; 0x1a31b, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
0000000000012117         lea        rdx, qword [aInvalidSsArgum+25]             ; 0x1aca2
000000000001211e         cmp        ebx, 0x9
0000000000012121         cmovne     rax, rdx
0000000000012125         add        rsp, 0x8
0000000000012129         pop        rbx
000000000001212a         pop        rbp
000000000001212b         ret
                        ; endp
000000000001212c         align      16

                     loc_12130:
0000000000012130         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
0000000000012134         and        edx, 0xffffffdf
0000000000012137         cmp        dl, 0x42
000000000001213a         jne        loc_12110

000000000001213c         cmp        byte [rax+2], 0x31
0000000000012140         jne        loc_12110

0000000000012142         cmp        byte [rax+3], 0x38
0000000000012146         jne        loc_12110

0000000000012148         cmp        byte [rax+4], 0x30
000000000001214c         jne        loc_12110

000000000001214e         cmp        byte [rax+5], 0x33
0000000000012152         jne        loc_12110

0000000000012154         cmp        byte [rax+6], 0x30
0000000000012158         jne        loc_12110

000000000001215a         cmp        byte [rax+7], 0x0
000000000001215e         jne        loc_12110

0000000000012160         cmp        byte [rbp], 0x60
0000000000012164         lea        rax, qword [aLibs+20]                       ; 0x1a314
000000000001216b         lea        rdx, qword [aLibs+24]                       ; 0x1a318
0000000000012172         cmovne     rax, rdx
0000000000012176         add        rsp, 0x8
000000000001217a         pop        rbx
000000000001217b         pop        rbp
000000000001217c         ret
                        ; endp
000000000001217d         align      128

                     loc_12180:
0000000000012180         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
0000000000012184         and        edx, 0xffffffdf
0000000000012187         cmp        dl, 0x54
000000000001218a         jne        loc_12110

000000000001218c         movzx      edx, byte [rax+2]
0000000000012190         and        edx, 0xffffffdf
0000000000012193         cmp        dl, 0x46
0000000000012196         jne        loc_12110

000000000001219c         cmp        byte [rax+3], 0x2d
00000000000121a0         jne        loc_12110

00000000000121a6         cmp        byte [rax+4], 0x38
00000000000121aa         jne        loc_12110

00000000000121b0         cmp        byte [rax+5], 0x0
00000000000121b4         jne        loc_12110

00000000000121ba         cmp        byte [rbp], 0x60
00000000000121be         lea        rax, qword [aLibs+12]                       ; 0x1a30c
00000000000121c5         lea        rdx, qword [aLibs+16]                       ; 0x1a310
00000000000121cc         cmovne     rax, rdx
00000000000121d0         add        rsp, 0x8
00000000000121d4         pop        rbx
00000000000121d5         pop        rbp
00000000000121d6         ret
                        ; endp
00000000000121d7         align      32                                          ; End of unwind block (FDE at 0x1d3ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
00000000000121e0         push       r15                                         ; Begin of unwind block (FDE at 0x1d430), CODE XREF=sub_12920+1165, sub_12920+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
00000000000121e2         push       r14
00000000000121e4         mov        r15d, r8d
00000000000121e7         push       r13
00000000000121e9         push       r12
00000000000121eb         mov        r14, rdi
00000000000121ee         push       rbp
00000000000121ef         push       rbx
00000000000121f0         mov        ebx, r9d
00000000000121f3         mov        r13, rsi
00000000000121f6         mov        rbp, rcx
00000000000121f9         and        ebx, 0x2
00000000000121fc         sub        rsp, 0xb8
0000000000012203         mov        rax, qword [rsp+0xe8+arg_0]
000000000001220b         mov        qword [rsp+0xe8+var_D8], rdx
0000000000012210         mov        dword [rsp+0xe8+var_E0], r8d
0000000000012215         mov        dword [rsp+0xe8+var_70], r9d
000000000001221a         mov        qword [rsp+0xe8+var_C8], rax
000000000001221f         mov        rax, qword [rsp+0xe8+arg_8]
0000000000012227         mov        qword [rsp+0xe8+var_80], rax
000000000001222c         mov        rax, qword [rsp+0xe8+arg_10]
0000000000012234         mov        qword [rsp+0xe8+var_88], rax
0000000000012239         mov        rax, qword [fs:0x28]
0000000000012242         mov        qword [rsp+0xe8+var_40], rax
000000000001224a         xor        eax, eax
000000000001224c         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000012251         cmp        r15d, 0xa
0000000000012255         mov        qword [rsp+0xe8+var_90], rax
000000000001225a         ja         loc_1340f

0000000000012260         lea        rcx, qword [switch_table_1a380]             ; switch_table_1a380
0000000000012267         mov        edx, r15d
000000000001226a         movsxd     rax, dword [rcx+rdx*4]
000000000001226e         add        rax, rcx
0000000000012271         jmp        rax                                         ; switch statement using table at 0x1a380, with 11 cases, 0x12273,0x12e44,0x12ea0,0x12ef5,0x12f3a,0x12f74,0x1301a,0x13054,0x13248

                     loc_12273:
0000000000012273         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_12920+1318
0000000000012278         mov        byte [rsp+0xe8+var_6C], 0x0
000000000001227d         xor        r12d, r12d
0000000000012280         mov        qword [rsp+0xe8+var_98], 0x0
0000000000012289         mov        byte [rsp+0xe8+var_D9], 0x1
000000000001228e         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_12293:
0000000000012293         lea        rax, qword [aInvalidSsArgum+25]             ; 0x1aca2, CODE XREF=sub_12920+1876
000000000001229a         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000122a3         xor        r15d, r15d
00000000000122a6         mov        dword [rsp+0xe8+var_E0], 0x2
00000000000122ae         mov        qword [rsp+0xe8+var_A0], rax

                     loc_122b3:
00000000000122b3         xor        r11d, r11d                                  ; CODE XREF=sub_12920+180, sub_12920+1400, sub_12920+1488, sub_12920+1557, sub_12920+1615, sub_12920+1781, sub_12920+1839, sub_12920+2408, sub_12920+2485
00000000000122b6         mov        rax, rbp
00000000000122b9         mov        r8d, r12d
00000000000122bc         mov        rbp, r11
00000000000122bf         mov        r11, rax
00000000000122c2         nop        word [rax+rax]

                     loc_122c8:
00000000000122c8         cmp        r11, rbp                                    ; CODE XREF=sub_123d0+194
00000000000122cb         setne      r12b
00000000000122cf         cmp        r11, 0xffffffffffffffff
00000000000122d3         jne        loc_122e2

00000000000122d5         mov        rax, qword [rsp+0xe8+var_D8]
00000000000122da         cmp        byte [rax+rbp], 0x0
00000000000122de         setne      r12b

                     loc_122e2:
00000000000122e2         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
00000000000122e5         je         loc_12940

00000000000122eb         cmp        dword [rsp+0xe8+var_E0], 0x2
00000000000122f0         mov        rdi, qword [rsp+0xe8+var_D8]
00000000000122f5         lea        r9, qword [rdi+rbp]
00000000000122f9         setne      al
00000000000122fc         and        al, byte [rsp+0xe8+var_DB]
0000000000012300         mov        r10d, eax
0000000000012303         je         loc_123b0

0000000000012309         mov        rax, qword [rsp+0xe8+var_D0]
000000000001230e         test       rax, rax
0000000000012311         je         loc_12740

0000000000012317         cmp        r11, 0xffffffffffffffff
000000000001231b         lea        rbx, qword [rbp+rax]
0000000000012320         jne        loc_12350

0000000000012322         cmp        rax, 0x1
0000000000012326         jbe        loc_12350

0000000000012328         mov        byte [rsp+0xe8+var_B0], r8b
000000000001232d         mov        byte [rsp+0xe8+var_B8], r10b
0000000000012332         mov        qword [rsp+0xe8+var_C0], r9
0000000000012337         call       j_strlen                                    ; strlen
000000000001233c         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000012342         movzx      r10d, byte [rsp+0xe8+var_B8]
0000000000012348         mov        r11, rax
000000000001234b         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_12350:
0000000000012350         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
0000000000012353         mov        byte [rsp+0xe8+var_C0], r10b
0000000000012358         ja         loc_12910

000000000001235e         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
0000000000012363         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
0000000000012368         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
000000000001236b         mov        qword [rsp+0xe8+var_A8], r11
0000000000012370         mov        byte [rsp+0xe8+var_B0], r8b
0000000000012375         mov        qword [rsp+0xe8+var_B8], r9
000000000001237a         call       j_memcmp                                    ; memcmp
000000000001237f         test       eax, eax
0000000000012381         mov        r9, qword [rsp+0xe8+var_B8]
0000000000012386         movzx      r8d, byte [rsp+0xe8+var_B0]
000000000001238c         mov        r11, qword [rsp+0xe8+var_A8]
0000000000012391         jne        loc_12910

0000000000012397         cmp        byte [rsp+0xe8+var_D9], 0x0
000000000001239c         movzx      r10d, byte [rsp+0xe8+var_C0]
00000000000123a2         jne        loc_13325

00000000000123a8         nop        dword [rax+rax]

                     loc_123b0:
00000000000123b0         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_12900+19
00000000000123b4         cmp        bl, 0x7e
00000000000123b7         ja         loc_126d8

00000000000123bd         lea        rcx, qword [switch_table_1a380+44]          ; 0x1a3ac
00000000000123c4         movzx      edx, bl
00000000000123c7         movsxd     rax, dword [rcx+rdx*4]
00000000000123cb         add        rax, rcx
00000000000123ce         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_123d0:
00000000000123d0         xor        r10d, r10d
00000000000123d3         cmp        r11, 0x1
00000000000123d7         setne      al
00000000000123da         cmp        r11, 0xffffffffffffffff
00000000000123de         jne        loc_123ec

00000000000123e0         mov        rax, qword [rsp+arg_8]
00000000000123e5         cmp        byte [rax+1], 0x0
00000000000123e9         setne      al

                     loc_123ec:
00000000000123ec         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_123d0+14
00000000000123f1         sete       dl
00000000000123f4         test       al, al
00000000000123f6         je         loc_12648

                     loc_123fc:
00000000000123fc         xor        r12d, r12d                                  ; CODE XREF=sub_12640+11
00000000000123ff         xor        eax, eax
0000000000012401         nop        dword [rax]
                        ; endp

                     loc_12408:
0000000000012408         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_125f0+50, sub_126c0+119
000000000001240d         jne        loc_12522

0000000000012413         test       dl, dl
0000000000012415         jne        loc_12522

                     loc_1241b:
000000000001241b         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_124d0+87
0000000000012420         test       rsi, rsi
0000000000012423         je         loc_12439

0000000000012425         mov        edx, ebx
0000000000012427         shr        dl, 0x5
000000000001242a         movzx      edx, dl
000000000001242d         mov        edx, dword [rsi+rdx*4]
0000000000012430         bt         edx, ebx
0000000000012433         jb         loc_12583

                     loc_12439:
0000000000012439         test       r10b, r10b                                  ; CODE XREF=sub_123d0+83, sub_124d0+93
000000000001243c         jne        loc_12583

0000000000012442         xor        eax, 0x1
0000000000012445         add        rbp, 0x1
0000000000012449         and        eax, r8d

                     loc_1244c:
000000000001244c         test       al, al                                      ; CODE XREF=sub_12920+936
000000000001244e         je         loc_12470

0000000000012450         cmp        r13, r15
0000000000012453         jbe        loc_1245a

0000000000012455         mov        byte [r14+r15], 0x27

                     loc_1245a:
000000000001245a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_123d0+131
000000000001245e         cmp        r13, rax
0000000000012461         jbe        loc_12469

0000000000012463         mov        byte [r14+r15+1], 0x27

                     loc_12469:
0000000000012469         add        r15, 0x2                                    ; CODE XREF=sub_123d0+145
000000000001246d         xor        r8d, r8d

                     loc_12470:
0000000000012470         cmp        r15, r13                                    ; CODE XREF=sub_123d0+126, sub_124d0+275, sub_12920+869
0000000000012473         jae        loc_12479

0000000000012475         mov        byte [r14+r15], bl

                     loc_12479:
0000000000012479         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_123d0+163
000000000001247e         add        r15, 0x1
0000000000012482         mov        eax, 0x0
0000000000012487         test       r12b, r12b
000000000001248a         cmove      edi, eax
000000000001248d         mov        byte [rsp+0xe8+var_DA], dil
0000000000012492         jmp        loc_122c8
0000000000012497         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_124a0:
00000000000124a0         xor        r10d, r10d
00000000000124a3         mov        eax, dword [rsp+arg_0]
00000000000124a7         cmp        eax, 0x2
00000000000124aa         je         loc_12a68

00000000000124b0         cmp        eax, 0x5
00000000000124b3         je         loc_12a28

00000000000124b9         cmp        eax, 0x2
00000000000124bc         mov        ebx, 0x3f
00000000000124c1         sete       dl
00000000000124c4         xor        r12d, r12d
00000000000124c7         xor        eax, eax
00000000000124c9         jmp        sub_123d0+56
                        ; endp
00000000000124ce         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_124d0:
00000000000124d0         xor        r10d, r10d
00000000000124d3         cmp        dword [rsp+arg_0], 0x2
00000000000124d8         je         loc_129e0

00000000000124de         mov        byte [rsp+arg_74], r12b
00000000000124e3         xor        edx, edx
00000000000124e5         xor        eax, eax
00000000000124e7         mov        ebx, 0x27
00000000000124ec         jmp        sub_123d0+56
                        ; endp
00000000000124f1         nop        dword [rax]
00000000000124f8         mov        edx, 0x9
00000000000124fd         mov        ebx, 0x74

                     loc_12502:
0000000000012502         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_12690+10, sub_12780+37, sub_128c0+53
0000000000012507         sete       al
000000000001250a         and        al, byte [rsp+arg_7]
000000000001250e         jne        sub_12640+30

0000000000012514         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_124d0+114
0000000000012519         jne        loc_12580

                     loc_1251b:
000000000001251b         mov        ebx, edx                                    ; CODE XREF=sub_125f0+18
000000000001251d         xor        r12d, r12d
0000000000012520         xor        eax, eax
                        ; endp

                     loc_12522:
0000000000012522         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_123d0+61, sub_123d0+69
0000000000012527         jne        loc_1241b

000000000001252d         jmp        loc_12439
0000000000012532         nop        word [rax+rax]
0000000000012538         mov        edx, 0x8
000000000001253d         mov        ebx, 0x62
0000000000012542         jmp        sub_124d0+68
0000000000012544         nop        dword [rax]
0000000000012548         cmp        dword [rsp+8], 0x2
000000000001254d         je         sub_12920                                   ; sub_12920
0000000000012553         cmp        byte [rsp+0xd], 0x0
0000000000012558         je         sub_12760+16

                     loc_1255e:
000000000001255e         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_12760+8
0000000000012563         je         loc_12770

0000000000012569         cmp        qword [rsp+arg_10], 0x0
000000000001256f         jne        loc_1292b

0000000000012575         mov        ebx, 0x5c
000000000001257a         nop        word [rax+rax]
                        ; endp

                     loc_12580:
0000000000012580         xor        r12d, r12d                                  ; CODE XREF=sub_124d0+73, sub_128c0+29
                        ; endp

                     loc_12583:
0000000000012583         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_123d0+99, sub_123d0+108
0000000000012588         sete       dl
000000000001258b         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000012590         mov        eax, edx
0000000000012592         jne        loc_12de8

0000000000012598         mov        eax, r8d
000000000001259b         xor        eax, 0x1
000000000001259e         and        al, dl
00000000000125a0         je         loc_125d1

00000000000125a2         cmp        r13, r15
00000000000125a5         jbe        loc_125ac

00000000000125a7         mov        byte [r14+r15], 0x27

                     loc_125ac:
00000000000125ac         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_124d0+213
00000000000125b0         cmp        r13, rdx
00000000000125b3         jbe        loc_125bb

00000000000125b5         mov        byte [r14+r15+1], 0x24

                     loc_125bb:
00000000000125bb         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_124d0+227
00000000000125bf         cmp        r13, rdx
00000000000125c2         jbe        loc_125ca

00000000000125c4         mov        byte [r14+r15+2], 0x27

                     loc_125ca:
00000000000125ca         add        r15, 0x3                                    ; CODE XREF=sub_124d0+242
00000000000125ce         mov        r8d, eax

                     loc_125d1:
00000000000125d1         cmp        r13, r15                                    ; CODE XREF=sub_124d0+208
00000000000125d4         jbe        loc_125db

00000000000125d6         mov        byte [r14+r15], 0x5c

                     loc_125db:
00000000000125db         add        r15, 0x1                                    ; CODE XREF=sub_124d0+260
00000000000125df         add        rbp, 0x1
00000000000125e3         jmp        loc_12470
00000000000125e8         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_125f0:
00000000000125f0         cmp        byte [rsp+arg_5], 0x0
00000000000125f5         jne        loc_127c3

00000000000125fb         xor        edx, edx
00000000000125fd         test       byte [rsp+arg_70], 0x1
0000000000012602         je         loc_1251b

0000000000012608         add        rbp, 0x1
000000000001260c         jmp        quotearg_buffer_restyled+232
                        ; endp
0000000000012611         nop        dword [rax]
0000000000012618         cmp        dword [rsp+8], 0x2
000000000001261d         sete       dl
0000000000012620         xor        eax, eax
0000000000012622         jmp        sub_123d0+56
0000000000012627         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_12630:
0000000000012630         mov        edx, 0x7
0000000000012635         mov        ebx, 0x61
000000000001263a         jmp        sub_124d0+68
                        ; endp
000000000001263f         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_12640:
0000000000012640         cmp        dword [rsp+8], 0x2
0000000000012645         sete       dl
                        ; endp

                     loc_12648:
0000000000012648         test       rbp, rbp                                    ; CODE XREF=sub_123d0+38, sub_12860+35
000000000001264b         jne        loc_123fc

0000000000012651         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_12890+43
0000000000012656         and        al, dl
0000000000012658         je         sub_123d0+56

000000000001265e         mov        rbp, r11
0000000000012661         mov        dword [rsp+arg_0], 0x2
0000000000012669         jmp        sub_12920+1097
                        ; endp
000000000001266e         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_12670:
0000000000012670         cmp        dword [rsp+arg_0], 0x2
0000000000012675         sete       dl
0000000000012678         xor        r12d, r12d
000000000001267b         jmp        sub_12640+17
                        ; endp
000000000001267d         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_12680:
0000000000012680         cmp        dword [rsp+arg_0], 0x2
0000000000012685         mov        ebx, 0x20
000000000001268a         sete       dl
000000000001268d         jmp        sub_12640+17
                        ; endp
000000000001268f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_12690:
0000000000012690         mov        edx, 0xd
0000000000012695         mov        ebx, 0x72
000000000001269a         jmp        loc_12502
000000000001269f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_126a0:
00000000000126a0         mov        edx, 0xc
00000000000126a5         mov        ebx, 0x66
00000000000126aa         jmp        sub_124d0+68
                        ; endp
00000000000126af         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_126b0:
00000000000126b0         mov        edx, 0xb
00000000000126b5         mov        ebx, 0x76
00000000000126ba         jmp        sub_124d0+68
                        ; endp
00000000000126bf         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_126c0:
00000000000126c0         mov        edx, 0xa
00000000000126c5         mov        ebx, 0x6e
00000000000126ca         jmp        sub_124d0+50
                        ; endp
00000000000126cf         align      16

                     loc_126d0:
00000000000126d0         xor        r10d, r10d                                  ; CODE XREF=sub_126c0+135
00000000000126d3         nop        dword [rax+rax]

                     loc_126d8:
00000000000126d8         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
00000000000126de         jne        loc_12a88

00000000000126e4         mov        qword [rsp+0xe8+var_B0], r11
00000000000126e9         mov        byte [rsp+0xe8+var_B8], r8b
00000000000126ee         mov        byte [rsp+0xe8+var_C0], r10b
00000000000126f3         call       j___ctype_b_loc                             ; __ctype_b_loc
00000000000126f8         mov        rcx, qword [rax]
00000000000126fb         movzx      edx, bl
00000000000126fe         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000012704         movzx      r8d, byte [rsp+0xe8+var_B8]
000000000001270a         mov        r11, qword [rsp+0xe8+var_B0]
000000000001270f         mov        edi, 0x1
0000000000012714         movzx      eax, word [rcx+rdx*2]
0000000000012718         and        ax, 0x4000
000000000001271c         setne      r12b
0000000000012720         sete       al
0000000000012723         and        al, byte [rsp+0xe8+var_DB]

                     loc_12727:
0000000000012727         test       al, al                                      ; CODE XREF=sub_12920+2221
0000000000012729         jne        loc_130c1

000000000001272f         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000012734         sete       dl
0000000000012737         jmp        loc_12408
000000000001273c         align      64

                     loc_12740:
0000000000012740         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
0000000000012744         cmp        bl, 0x7e
0000000000012747         ja         loc_126d0

0000000000012749         lea        rcx, qword [switch_table_1a380+552]         ; 0x1a5a8
0000000000012750         movzx      edx, bl
0000000000012753         movsxd     rax, dword [rcx+rdx*4]
0000000000012757         add        rax, rcx
000000000001275a         jmp        rax
                        ; endp
000000000001275c         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_12760:
0000000000012760         xor        r10d, r10d
0000000000012763         cmp        byte [rsp+arg_5], 0x0
0000000000012768         jne        loc_1255e

000000000001276e         nop

                     loc_12770:
0000000000012770         mov        edx, 0x5c                                   ; CODE XREF=sub_124d0+136, sub_124d0+147
0000000000012775         mov        ebx, 0x5c
000000000001277a         jmp        sub_124d0+68
                        ; endp
000000000001277f         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_12780:
0000000000012780         mov        edx, 0xc
0000000000012785         xor        r10d, r10d
0000000000012788         mov        ebx, 0x66
000000000001278d         jmp        sub_124d0+68
                        ; endp
0000000000012792         nop        word [rax+rax]
0000000000012798         mov        edx, 0xa
000000000001279d         xor        r10d, r10d
00000000000127a0         mov        ebx, 0x6e
00000000000127a5         jmp        sub_124d0+50
00000000000127aa         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_127b0:
00000000000127b0         mov        ebx, 0x61
00000000000127b5         jmp        sub_124d0+176
                        ; endp
00000000000127ba         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_127c0:
00000000000127c0         xor        r10d, r10d
                        ; endp

                     loc_127c3:
00000000000127c3         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_125f0+5
00000000000127c8         sete       dl
00000000000127cb         cmp        byte [rsp+arg_7], 0x0
00000000000127d0         jne        loc_1336a

00000000000127d6         mov        eax, r8d
00000000000127d9         mov        rcx, r15
00000000000127dc         xor        eax, 0x1
00000000000127df         and        al, dl
00000000000127e1         je         loc_12810

00000000000127e3         cmp        r13, r15
00000000000127e6         jbe        loc_127ed

00000000000127e8         mov        byte [r14+r15], 0x27

                     loc_127ed:
00000000000127ed         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_127c0+38
00000000000127f1         cmp        r13, rcx
00000000000127f4         jbe        loc_127fc

00000000000127f6         mov        byte [r14+r15+1], 0x24

                     loc_127fc:
00000000000127fc         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_127c0+52
0000000000012800         cmp        r13, rcx
0000000000012803         ja         loc_12e39

                     loc_12809:
0000000000012809         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_12920+1311
000000000001280d         mov        r8d, eax

                     loc_12810:
0000000000012810         cmp        r13, rcx                                    ; CODE XREF=sub_127c0+33
0000000000012813         jbe        loc_1281a

0000000000012815         mov        byte [r14+rcx], 0x5c

                     loc_1281a:
000000000001281a         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_127c0+83
000000000001281f         lea        r15, qword [rcx+1]
0000000000012823         je         loc_12e29

0000000000012829         lea        rax, qword [rbp+1]
000000000001282d         cmp        rax, r11
0000000000012830         jae        loc_1284b

0000000000012832         mov        rax, qword [rsp+arg_8]
0000000000012837         movzx      eax, byte [rax+rbp+1]
000000000001283c         mov        byte [rsp+arg_20], al
0000000000012840         sub        eax, 0x30
0000000000012843         cmp        al, 0x9
0000000000012845         jbe        loc_13079

                     loc_1284b:
000000000001284b         mov        eax, r12d                                   ; CODE XREF=sub_127c0+112
000000000001284e         mov        ebx, 0x30
0000000000012853         xor        r12d, r12d
0000000000012856         jmp        sub_123d0+56
                        ; endp
000000000001285b         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_12860:
0000000000012860         cmp        dword [rsp+arg_0], 0x2
0000000000012865         mov        r12d, r10d
0000000000012868         sete       dl
000000000001286b         xor        r10d, r10d
000000000001286e         xor        eax, eax
0000000000012870         jmp        sub_123d0+56
                        ; endp
0000000000012875         nop        dword [rax]
0000000000012878         cmp        dword [rsp+8], 0x2
000000000001287d         sete       dl
0000000000012880         xor        r10d, r10d
0000000000012883         jmp        sub_12640+8
0000000000012888         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_12890:
0000000000012890         cmp        dword [rsp+8], 0x2
0000000000012895         sete       dl
0000000000012898         xor        r10d, r10d
000000000001289b         xor        r12d, r12d
000000000001289e         jmp        sub_12640+17
                        ; endp
00000000000128a3         nop        dword [rax+rax]
00000000000128a8         cmp        dword [rsp+8], 0x2
00000000000128ad         mov        r12d, r10d
00000000000128b0         mov        ebx, 0x20
00000000000128b5         sete       dl
00000000000128b8         xor        r10d, r10d
00000000000128bb         jmp        sub_12640+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_128c0:
00000000000128c0         mov        edx, 0xd
00000000000128c5         xor        r10d, r10d
00000000000128c8         mov        ebx, 0x72
00000000000128cd         jmp        sub_124d0+50
                        ; endp
00000000000128d2         nop        word [rax+rax]
00000000000128d8         mov        ebx, 0x76
00000000000128dd         jmp        sub_124d0+176
00000000000128e2         nop        word [rax+rax]
00000000000128e8         mov        edx, 0x9
00000000000128ed         xor        r10d, r10d
00000000000128f0         mov        ebx, 0x74
00000000000128f5         jmp        sub_124d0+50
00000000000128fa         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_12900:
0000000000012900         mov        ebx, 0x62
0000000000012905         jmp        sub_124d0+176
                        ; endp
000000000001290a         nop        word [rax+rax]

                     loc_12910:
0000000000012910         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
0000000000012913         jmp        loc_123b0
0000000000012918         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_12920:
0000000000012920         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_124d0+125
0000000000012925         jne        sub_12920+2416
                        ; endp

                     loc_1292b:
000000000001292b         add        rbp, 0x1                                    ; CODE XREF=sub_124d0+159
000000000001292f         mov        eax, r8d
0000000000012932         xor        r12d, r12d
0000000000012935         mov        ebx, 0x5c
000000000001293a         jmp        sub_123d0+124
                        ; endp
000000000001293f         align      64

                     loc_12940:
0000000000012940         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
0000000000012945         movzx      ebx, byte [rsp+0xe8+var_D9]
000000000001294a         mov        r12d, r8d
000000000001294d         mov        rbp, r11
0000000000012950         sete       dl
0000000000012953         mov        eax, ebx
0000000000012955         test       r15, r15
0000000000012958         sete       cl
000000000001295b         and        eax, edx
000000000001295d         and        al, cl
000000000001295f         jne        loc_133c6

0000000000012965         mov        eax, ebx
0000000000012967         xor        eax, 0x1
000000000001296a         and        dl, al
000000000001296c         je         loc_132dc

0000000000012972         cmp        byte [rsp+0xe8+var_6C], 0x0
0000000000012977         je         loc_132da

000000000001297d         cmp        byte [rsp+0xe8+var_DA], 0x0
0000000000012982         jne        loc_1337d

0000000000012988         test       r13, r13
000000000001298b         sete       al
000000000001298e         cmp        qword [rsp+0xe8+var_98], 0x0
0000000000012994         setne      dl
0000000000012997         and        al, dl
0000000000012999         je         loc_133bc

000000000001299f         mov        r13, qword [rsp+0xe8+var_98]

                     loc_129a4:
00000000000129a4         lea        rbx, qword [aInvalidSsArgum+25]             ; 0x1aca2, CODE XREF=sub_12920+2781
00000000000129ab         mov        byte [r14], 0x27
00000000000129af         mov        dword [rsp+0xe8+var_E0], 0x2
00000000000129b7         mov        r15d, 0x1
00000000000129bd         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000129c6         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000129cb         mov        qword [rsp+0xe8+var_A0], rbx
00000000000129d0         mov        byte [rsp+0xe8+var_6C], al
00000000000129d4         jmp        loc_122b3
00000000000129d9         align      32

                     loc_129e0:
00000000000129e0         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_124d0+8
00000000000129e5         jne        sub_12920+2416

00000000000129eb         test       r13, r13
00000000000129ee         je         loc_12df0

00000000000129f4         xor        edx, edx
00000000000129f6         cmp        qword [rsp+arg_48], 0x0
00000000000129fc         jne        loc_12df0

                     loc_12a02:
0000000000012a02         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_12920+1284, sub_12920+2794
0000000000012a07         add        r15, 0x3
0000000000012a0b         xor        eax, eax
0000000000012a0d         mov        byte [rsp+arg_74], r12b
0000000000012a12         xor        r8d, r8d
0000000000012a15         mov        r13, rdx
0000000000012a18         mov        ebx, 0x27
0000000000012a1d         jmp        sub_123d0+105
                        ; endp
0000000000012a22         align      8

                     loc_12a28:
0000000000012a28         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_124a0+19
0000000000012a2d         je         loc_12a50

0000000000012a2f         lea        rcx, qword [rbp+2]
0000000000012a33         cmp        rcx, r11
0000000000012a36         jae        loc_12a50

0000000000012a38         mov        rax, qword [rsp+arg_8]
0000000000012a3d         cmp        byte [rax+rbp+1], 0x3f
0000000000012a42         je         loc_131d2

0000000000012a48         nop        dword [rax+rax]

                     loc_12a50:
0000000000012a50         xor        edx, edx                                    ; CODE XREF=sub_12920+269, sub_12920+278, sub_12920+2233, sub_12920+2253
0000000000012a52         xor        r12d, r12d
0000000000012a55         xor        eax, eax
0000000000012a57         mov        ebx, 0x3f
0000000000012a5c         jmp        sub_123d0+56
                        ; endp
0000000000012a61         align      8

                     loc_12a68:
0000000000012a68         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_124a0+10
0000000000012a6d         jne        loc_13290

0000000000012a73         xor        r12d, r12d
0000000000012a76         xor        eax, eax
0000000000012a78         mov        ebx, 0x3f
0000000000012a7d         jmp        sub_123d0+105
                        ; endp
0000000000012a82         align      8

                     loc_12a88:
0000000000012a88         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_126c0+30
0000000000012a90         cmp        r11, 0xffffffffffffffff
0000000000012a94         mov        qword [rsp+0xe8+var_48], 0x0
0000000000012aa0         mov        qword [rsp+0xe8+var_C0], rax
0000000000012aa5         jne        loc_12ad4

0000000000012aa7         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
0000000000012aac         mov        byte [rsp+0xe8+var_A8], r8b
0000000000012ab1         mov        byte [rsp+0xe8+var_B0], r10b
0000000000012ab6         mov        qword [rsp+0xe8+var_B8], r9
0000000000012abb         call       j_strlen                                    ; strlen
0000000000012ac0         movzx      r8d, byte [rsp+0xe8+var_A8]
0000000000012ac6         movzx      r10d, byte [rsp+0xe8+var_B0]
0000000000012acc         mov        r11, rax
0000000000012acf         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_12ad4:
0000000000012ad4         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_12920+389
0000000000012adc         xor        ecx, ecx
0000000000012ade         mov        byte [rsp+0xe8+var_6A], bl
0000000000012ae2         mov        byte [rsp+0xe8+var_6B], r8b
0000000000012ae7         mov        rbx, rcx
0000000000012aea         mov        qword [rsp+0xe8+var_60], r9
0000000000012af2         mov        qword [rsp+0xe8+var_B0], rax
0000000000012af7         mov        byte [rsp+0xe8+var_69], r10b
0000000000012afc         mov        qword [rsp+0xe8+var_68], r15
0000000000012b04         mov        qword [rsp+0xe8+var_A8], r14
0000000000012b09         mov        qword [rsp+0xe8+var_78], r13
0000000000012b0e         mov        qword [rsp+0xe8+var_B8], r11

                     loc_12b13:
0000000000012b13         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_12920+623
0000000000012b18         lea        r14, qword [rbp+rbx]
0000000000012b1d         mov        rdx, qword [rsp+0xe8+var_B8]
0000000000012b22         mov        rcx, qword [rsp+0xe8+var_C0]
0000000000012b27         mov        rdi, qword [rsp+0xe8+var_B0]
0000000000012b2c         lea        r13, qword [rax+r14]
0000000000012b30         sub        rdx, r14
0000000000012b33         mov        rsi, r13
0000000000012b36         call       rpl_mbrtowc                                 ; rpl_mbrtowc
0000000000012b3b         test       rax, rax
0000000000012b3e         mov        r15, rax
0000000000012b41         je         loc_12b91

0000000000012b43         cmp        rax, 0xffffffffffffffff
0000000000012b47         je         loc_13165

0000000000012b4d         cmp        rax, 0xfffffffffffffffe
0000000000012b51         je         loc_130f1

0000000000012b57         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000012b5c         sete       al
0000000000012b5f         and        al, byte [rsp+0xe8+var_D9]
0000000000012b63         jne        loc_12d00

                     loc_12b69:
0000000000012b69         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_12920+996, sub_12920+1031
0000000000012b70         call       j_iswprint                                  ; iswprint
0000000000012b75         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
0000000000012b7a         test       eax, eax
0000000000012b7c         mov        eax, 0x0
0000000000012b81         cmove      r12d, eax
0000000000012b85         add        rbx, r15
0000000000012b88         call       j_mbsinit                                   ; mbsinit
0000000000012b8d         test       eax, eax
0000000000012b8f         je         loc_12b13

                     loc_12b91:
0000000000012b91         mov        edx, r12d                                   ; CODE XREF=sub_12920+545
0000000000012b94         mov        rdi, rbx
0000000000012b97         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000012b9d         xor        edx, 0x1
0000000000012ba0         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000012ba5         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000012bab         and        dl, byte [rsp+0xe8+var_DB]
0000000000012baf         mov        r15, qword [rsp+0xe8+var_68]
0000000000012bb7         mov        r14, qword [rsp+0xe8+var_A8]
0000000000012bbc         mov        r13, qword [rsp+0xe8+var_78]
0000000000012bc1         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_12bc6:
0000000000012bc6         cmp        rdi, 0x1                                    ; CODE XREF=sub_12920+2112, sub_12920+2168
0000000000012bca         jbe        loc_131cb

                     loc_12bd0:
0000000000012bd0         mov        rcx, rdi                                    ; CODE XREF=sub_12920+1961
0000000000012bd3         xor        esi, esi
0000000000012bd5         movzx      r9d, byte [rsp+0xe8+var_D9]
0000000000012bdb         add        rcx, rbp
0000000000012bde         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000012be3         jmp        loc_12c9e
0000000000012be8         align      16

                     loc_12bf0:
0000000000012bf0         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_12920+896
0000000000012bf5         sete       al
0000000000012bf8         test       r9b, r9b
0000000000012bfb         jne        loc_130b0

0000000000012c01         mov        esi, r8d
0000000000012c04         xor        esi, 0x1
0000000000012c07         and        al, sil
0000000000012c0a         je         loc_12c3b

0000000000012c0c         cmp        r13, r15
0000000000012c0f         jbe        loc_12c16

0000000000012c11         mov        byte [r14+r15], 0x27

                     loc_12c16:
0000000000012c16         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_12920+751
0000000000012c1a         cmp        r13, rsi
0000000000012c1d         jbe        loc_12c25

0000000000012c1f         mov        byte [r14+r15+1], 0x24

                     loc_12c25:
0000000000012c25         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_12920+765
0000000000012c29         cmp        r13, rsi
0000000000012c2c         jbe        loc_12c34

0000000000012c2e         mov        byte [r14+r15+2], 0x27

                     loc_12c34:
0000000000012c34         add        r15, 0x3                                    ; CODE XREF=sub_12920+780
0000000000012c38         mov        r8d, eax

                     loc_12c3b:
0000000000012c3b         cmp        r13, r15                                    ; CODE XREF=sub_12920+746
0000000000012c3e         jbe        loc_12c45

0000000000012c40         mov        byte [r14+r15], 0x5c

                     loc_12c45:
0000000000012c45         lea        rax, qword [r15+1]                          ; CODE XREF=sub_12920+798
0000000000012c49         cmp        r13, rax
0000000000012c4c         jbe        loc_12c5b

0000000000012c4e         mov        eax, ebx
0000000000012c50         shr        al, 0x6
0000000000012c53         add        eax, 0x30
0000000000012c56         mov        byte [r14+r15+1], al

                     loc_12c5b:
0000000000012c5b         lea        rax, qword [r15+2]                          ; CODE XREF=sub_12920+812
0000000000012c5f         cmp        r13, rax
0000000000012c62         jbe        loc_12c74

0000000000012c64         mov        eax, ebx
0000000000012c66         shr        al, 0x3
0000000000012c69         and        eax, 0x7
0000000000012c6c         add        eax, 0x30
0000000000012c6f         mov        byte [r14+r15+2], al

                     loc_12c74:
0000000000012c74         and        ebx, 0x7                                    ; CODE XREF=sub_12920+834
0000000000012c77         add        rbp, 0x1
0000000000012c7b         add        r15, 0x3
0000000000012c7f         add        ebx, 0x30
0000000000012c82         cmp        rbp, rcx
0000000000012c85         jae        loc_12470

0000000000012c8b         mov        esi, edx

                     loc_12c8d:
0000000000012c8d         cmp        r13, r15                                    ; CODE XREF=sub_12920+985, sub_12920+1969
0000000000012c90         jbe        loc_12c96

0000000000012c92         mov        byte [r14+r15], bl

                     loc_12c96:
0000000000012c96         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_12920+880
0000000000012c9a         add        r15, 0x1

                     loc_12c9e:
0000000000012c9e         test       dl, dl                                      ; CODE XREF=sub_12920+707
0000000000012ca0         jne        loc_12bf0

0000000000012ca6         mov        eax, esi
0000000000012ca8         xor        eax, 0x1
0000000000012cab         and        eax, r8d
0000000000012cae         test       r10b, r10b
0000000000012cb1         je         loc_12cc1

0000000000012cb3         cmp        r13, r15
0000000000012cb6         jbe        loc_12cbd

0000000000012cb8         mov        byte [r14+r15], 0x5c

                     loc_12cbd:
0000000000012cbd         add        r15, 0x1                                    ; CODE XREF=sub_12920+918

                     loc_12cc1:
0000000000012cc1         add        rbp, 0x1                                    ; CODE XREF=sub_12920+913
0000000000012cc5         cmp        rbp, rcx
0000000000012cc8         jae        loc_1244c

0000000000012cce         test       al, al
0000000000012cd0         je         loc_130ce

0000000000012cd6         cmp        r13, r15
0000000000012cd9         jbe        loc_12ce0

0000000000012cdb         mov        byte [r14+r15], 0x27

                     loc_12ce0:
0000000000012ce0         lea        rax, qword [r15+1]                          ; CODE XREF=sub_12920+953
0000000000012ce4         cmp        r13, rax
0000000000012ce7         jbe        loc_12cef

0000000000012ce9         mov        byte [r14+r15+1], 0x27

                     loc_12cef:
0000000000012cef         add        r15, 0x2                                    ; CODE XREF=sub_12920+967
0000000000012cf3         xor        r10d, r10d
0000000000012cf6         xor        r8d, r8d
0000000000012cf9         jmp        loc_12c8d
0000000000012cfb         align      256

                     loc_12d00:
0000000000012d00         cmp        r15, 0x1                                    ; CODE XREF=sub_12920+579
0000000000012d04         je         loc_12b69

0000000000012d0a         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000012d0f         lea        rcx, qword [rdi+r15]
0000000000012d13         lea        rdx, qword [rdi+r14+1]
0000000000012d18         lea        r8, qword [rcx+r14]
0000000000012d1c         jmp        loc_12d2d
0000000000012d1e         align      32

                     loc_12d20:
0000000000012d20         add        rdx, 0x1                                    ; CODE XREF=sub_12920+1046, sub_12920+1072
0000000000012d24         cmp        r8, rdx
0000000000012d27         je         loc_12b69

                     loc_12d2d:
0000000000012d2d         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_12920+1020
0000000000012d30         sub        ecx, 0x5b
0000000000012d33         cmp        cl, 0x21
0000000000012d36         ja         loc_12d20

0000000000012d38         mov        esi, 0x1
0000000000012d3d         shl        rsi, cl
0000000000012d40         mov        rcx, rsi
0000000000012d43         movabs     rsi, 0x20000002b
0000000000012d4d         test       rcx, rsi
0000000000012d50         je         loc_12d20

0000000000012d52         mov        r14, qword [rsp+0xe8+var_A8]
0000000000012d57         mov        r13, qword [rsp+0xe8+var_78]
0000000000012d5c         mov        rbp, qword [rsp+0xe8+var_B8]
0000000000012d61         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_12d69:
0000000000012d69         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_12920+1227, sub_12920+1948, sub_12920+2585, sub_12920+2734
0000000000012d6e         je         loc_12d80

0000000000012d70         test       al, al
0000000000012d72         mov        eax, 0x4
0000000000012d77         cmove      eax, dword [rsp+0xe8+var_E0]
0000000000012d7c         mov        dword [rsp+0xe8+var_E0], eax

                     loc_12d80:
0000000000012d80         sub        rsp, 0x8                                    ; CODE XREF=sub_12920+1102
0000000000012d84         mov        rcx, rbp
0000000000012d87         mov        rsi, r13
0000000000012d8a         push       qword [rsp+0xf0+var_88]
0000000000012d8e         push       qword [rsp+0xf8+var_80]
0000000000012d92         mov        rdi, r14
0000000000012d95         push       0x0
0000000000012d97         mov        r9d, dword [rsp+0x108+var_70]
0000000000012d9f         mov        r8d, dword [rsp+0x108+var_E0]
0000000000012da4         mov        rdx, qword [rsp+0x108+var_D8]
0000000000012da9         and        r9d, 0xfffffffd
0000000000012dad         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000012db2         add        rsp, 0x20
0000000000012db6         mov        r15, rax

                     loc_12db9:
0000000000012db9         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_12920+2549, sub_12920+2560, sub_12920+2711
0000000000012dc1         xor        rbx, qword [fs:0x28]
0000000000012dca         mov        rax, r15
0000000000012dcd         jne        loc_133d3

0000000000012dd3         add        rsp, 0xb8
0000000000012dda         pop        rbx
0000000000012ddb         pop        rbp
0000000000012ddc         pop        r12
0000000000012dde         pop        r13
0000000000012de0         pop        r14
0000000000012de2         pop        r15
0000000000012de4         ret
                        ; endp
0000000000012de5         align      8

                     loc_12de8:
0000000000012de8         mov        rbp, r11                                    ; CODE XREF=sub_124d0+194
0000000000012deb         jmp        loc_12d69

                     loc_12df0:
0000000000012df0         cmp        r13, r15                                    ; CODE XREF=sub_12920+206, sub_12920+220
0000000000012df3         jbe        loc_12dfa

0000000000012df5         mov        byte [r14+r15], 0x27

                     loc_12dfa:
0000000000012dfa         lea        rax, qword [r15+1]                          ; CODE XREF=sub_12920+1235
0000000000012dfe         cmp        r13, rax
0000000000012e01         jbe        loc_12e09

0000000000012e03         mov        byte [r14+r15+1], 0x5c

                     loc_12e09:
0000000000012e09         lea        rax, qword [r15+2]                          ; CODE XREF=sub_12920+1249
0000000000012e0d         cmp        r13, rax
0000000000012e10         jbe        loc_13402

0000000000012e16         mov        rdx, r13
0000000000012e19         mov        byte [r14+r15+2], 0x27
0000000000012e1f         mov        r13, qword [rsp+arg_48]
0000000000012e24         jmp        loc_12a02

                     loc_12e29:
0000000000012e29         mov        eax, r12d                                   ; CODE XREF=sub_127c0+99
0000000000012e2c         mov        ebx, 0x30
0000000000012e31         xor        r12d, r12d
0000000000012e34         jmp        sub_123d0+105
                        ; endp

                     loc_12e39:
0000000000012e39         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_127c0+67
0000000000012e3f         jmp        loc_12809

                     loc_12e44:
0000000000012e44         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
0000000000012e46         jne        loc_12273

0000000000012e4c         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_12e51:
0000000000012e51         test       r13, r13                                    ; CODE XREF=sub_12920+2749
0000000000012e54         jne        loc_133ea

0000000000012e5a         lea        rax, qword [aInvalidSsArgum+25]             ; 0x1aca2
0000000000012e61         mov        qword [rsp+0xe8+var_98], 0x0
0000000000012e6a         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000012e6f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000012e74         xor        r12d, r12d
0000000000012e77         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000012e7c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000012e85         mov        qword [rsp+0xe8+var_A0], rax
0000000000012e8a         mov        r15d, 0x1
0000000000012e90         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000012e98         jmp        loc_122b3
0000000000012e9d         align      32

                     loc_12ea0:
0000000000012ea0         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
0000000000012ea2         jne        loc_1329d

0000000000012ea8         test       r13, r13
0000000000012eab         je         loc_130d6

0000000000012eb1         mov        byte [r14], 0x22
0000000000012eb5         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000012eba         xor        r12d, r12d
0000000000012ebd         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000012ec2         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_12ecb:
0000000000012ecb         lea        rax, qword [aLibs+27]                       ; 0x1a31b, CODE XREF=sub_12920+1996
0000000000012ed2         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000012ed7         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000012edc         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000012ee5         mov        r15d, 0x1
0000000000012eeb         mov        qword [rsp+0xe8+var_A0], rax
0000000000012ef0         jmp        loc_122b3

                     loc_12ef5:
0000000000012ef5         lea        rax, qword [aLibs+27]                       ; case 6, 0x1a31b, CODE XREF=quotearg_buffer_restyled+145
0000000000012efc         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000012f01         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000012f06         xor        r12d, r12d
0000000000012f09         mov        qword [rsp+0xe8+var_98], 0x0
0000000000012f12         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000012f17         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000012f1c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000012f25         xor        r15d, r15d
0000000000012f28         mov        qword [rsp+0xe8+var_A0], rax
0000000000012f2d         mov        dword [rsp+0xe8+var_E0], 0x5
0000000000012f35         jmp        loc_122b3

                     loc_12f3a:
0000000000012f3a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
0000000000012f3f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000012f44         xor        r12d, r12d
0000000000012f47         mov        qword [rsp+0xe8+var_98], 0x0
0000000000012f50         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000012f55         xor        r15d, r15d
0000000000012f58         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000012f5d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000012f66         mov        qword [rsp+0xe8+var_A0], 0x0
0000000000012f6f         jmp        loc_122b3

                     loc_12f74:
0000000000012f74         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
0000000000012f79         je         loc_12fd1

0000000000012f7b         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x1a31d
0000000000012f82         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000012f84         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000012f89         call       j_dcgettext                                 ; dcgettext
0000000000012f8e         mov        rcx, rax
0000000000012f91         mov        qword [rsp+0xe8+var_80], rax
0000000000012f96         lea        rax, qword [aLibs+29]                       ; 0x1a31d
0000000000012f9d         cmp        rcx, rax
0000000000012fa0         je         loc_1333e

                     loc_12fa6:
0000000000012fa6         lea        rsi, qword [aInvalidSsArgum+25]             ; argument "msgid" for method j_dcgettext, 0x1aca2, CODE XREF=sub_12920+2607
0000000000012fad         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000012faf         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000012fb4         call       j_dcgettext                                 ; dcgettext
0000000000012fb9         mov        rcx, rax
0000000000012fbc         mov        qword [rsp+0xe8+var_88], rax
0000000000012fc1         lea        rax, qword [aInvalidSsArgum+25]             ; 0x1aca2
0000000000012fc8         cmp        rcx, rax
0000000000012fcb         je         loc_13354

                     loc_12fd1:
0000000000012fd1         xor        r15d, r15d                                  ; CODE XREF=sub_12920+1625, sub_12920+2629
0000000000012fd4         test       ebx, ebx
0000000000012fd6         je         loc_1319d

                     loc_12fdc:
0000000000012fdc         test       ebx, ebx                                    ; CODE XREF=sub_12920+2183, sub_12920+2214
0000000000012fde         mov        rbx, qword [rsp+0xe8+var_88]
0000000000012fe3         setne      byte [rsp+0xe8+var_D9]
0000000000012fe8         xor        r12d, r12d
0000000000012feb         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
0000000000012fee         call       j_strlen                                    ; strlen
0000000000012ff3         mov        qword [rsp+0xe8+var_A0], rbx
0000000000012ff8         mov        qword [rsp+0xe8+var_D0], rax
0000000000012ffd         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000013002         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000013007         mov        qword [rsp+0xe8+var_98], 0x0
0000000000013010         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000013015         jmp        loc_122b3

                     loc_1301a:
000000000001301a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
000000000001301f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000013024         xor        r12d, r12d
0000000000013027         mov        qword [rsp+0xe8+var_98], 0x0
0000000000013030         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000013035         xor        r15d, r15d
0000000000013038         mov        byte [rsp+0xe8+var_DB], 0x0
000000000001303d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000013046         mov        qword [rsp+0xe8+var_A0], 0x0
000000000001304f         jmp        loc_122b3

                     loc_13054:
0000000000013054         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000013059         mov        byte [rsp+0xe8+var_6C], 0x0
000000000001305e         xor        r12d, r12d
0000000000013061         mov        qword [rsp+0xe8+var_98], 0x0
000000000001306a         mov        byte [rsp+0xe8+var_D9], 0x1
000000000001306f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000013074         jmp        loc_12293

                     loc_13079:
0000000000013079         cmp        r13, r15                                    ; CODE XREF=sub_127c0+133
000000000001307c         jbe        loc_13083

000000000001307e         mov        byte [r14+r15], 0x30

                     loc_13083:
0000000000013083         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_12920+1884
0000000000013087         cmp        r13, rax
000000000001308a         jbe        loc_13092

000000000001308c         mov        byte [r14+rcx+2], 0x30

                     loc_13092:
0000000000013092         mov        eax, r12d                                   ; CODE XREF=sub_12920+1898
0000000000013095         lea        r15, qword [rcx+3]
0000000000013099         xor        r12d, r12d
000000000001309c         mov        ebx, 0x30
00000000000130a1         jmp        sub_123d0+56
                        ; endp
00000000000130a6         align      16

                     loc_130b0:
00000000000130b0         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_12920+731
00000000000130b5         mov        rbp, r11
00000000000130b8         mov        byte [rsp+0xe8+var_DB], bl
00000000000130bc         jmp        loc_12d69

                     loc_130c1:
00000000000130c1         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_126c0+105
00000000000130c6         xor        r12d, r12d
00000000000130c9         jmp        loc_12bd0

                     loc_130ce:
00000000000130ce         xor        r10d, r10d                                  ; CODE XREF=sub_12920+944
00000000000130d1         jmp        loc_12c8d

                     loc_130d6:
00000000000130d6         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_12920+1419
00000000000130df         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000130e4         xor        r12d, r12d
00000000000130e7         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000130ec         jmp        loc_12ecb

                     loc_130f1:
00000000000130f1         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_12920+561
00000000000130f6         mov        rsi, r14
00000000000130f9         mov        rcx, r13
00000000000130fc         mov        rax, rbx
00000000000130ff         mov        rdi, rbx
0000000000013102         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000013108         movzx      ebx, byte [rsp+0xe8+var_6A]
000000000001310d         mov        r9, qword [rsp+0xe8+var_60]
0000000000013115         cmp        rsi, r11
0000000000013118         movzx      r10d, byte [rsp+0xe8+var_69]
000000000001311e         mov        r15, qword [rsp+0xe8+var_68]
0000000000013126         mov        r14, qword [rsp+0xe8+var_A8]
000000000001312b         mov        r13, qword [rsp+0xe8+var_78]
0000000000013130         jae        loc_13158

0000000000013132         cmp        byte [rcx], 0x0
0000000000013135         jne        loc_13147

0000000000013137         jmp        loc_13158
0000000000013139         align      64

                     loc_13140:
0000000000013140         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_12920+2099
0000000000013145         je         loc_13155

                     loc_13147:
0000000000013147         add        rax, 0x1                                    ; CODE XREF=sub_12920+2069
000000000001314b         lea        rdx, qword [rbp+rax]
0000000000013150         cmp        r11, rdx
0000000000013153         ja         loc_13140

                     loc_13155:
0000000000013155         mov        rdi, rax                                    ; CODE XREF=sub_12920+2085

                     loc_13158:
0000000000013158         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_12920+2064, sub_12920+2071
000000000001315d         xor        r12d, r12d
0000000000013160         jmp        loc_12bc6

                     loc_13165:
0000000000013165         mov        rdi, rbx                                    ; CODE XREF=sub_12920+551
0000000000013168         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000001316e         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000013173         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000013179         mov        r15, qword [rsp+0xe8+var_68]
0000000000013181         xor        r12d, r12d
0000000000013184         mov        r14, qword [rsp+0xe8+var_A8]
0000000000013189         mov        r13, qword [rsp+0xe8+var_78]
000000000001318e         mov        r11, qword [rsp+0xe8+var_B8]
0000000000013193         movzx      edx, byte [rsp+0xe8+var_DB]
0000000000013198         jmp        loc_12bc6

                     loc_1319d:
000000000001319d         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_12920+1718
00000000000131a2         movzx      eax, byte [rdx]
00000000000131a5         test       al, al
00000000000131a7         je         loc_12fdc

00000000000131ad         nop        dword [rax]

                     loc_131b0:
00000000000131b0         cmp        r13, r15                                    ; CODE XREF=sub_12920+2212
00000000000131b3         jbe        loc_131b9

00000000000131b5         mov        byte [r14+r15], al

                     loc_131b9:
00000000000131b9         add        r15, 0x1                                    ; CODE XREF=sub_12920+2195
00000000000131bd         movzx      eax, byte [rdx+r15]
00000000000131c2         test       al, al
00000000000131c4         jne        loc_131b0

00000000000131c6         jmp        loc_12fdc

                     loc_131cb:
00000000000131cb         mov        eax, edx                                    ; CODE XREF=sub_12920+682
00000000000131cd         jmp        loc_12727

                     loc_131d2:
00000000000131d2         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_12920+290
00000000000131d6         cmp        bl, 0x3e
00000000000131d9         ja         loc_12a50

00000000000131df         movabs     rax, 0x7000a38200000000
00000000000131e9         bt         rax, rbx
00000000000131ed         jae        loc_12a50

00000000000131f3         cmp        byte [rsp+arg_7], 0x0
00000000000131f8         jne        loc_133e2

00000000000131fe         cmp        r13, r15
0000000000013201         jbe        loc_13208

0000000000013203         mov        byte [r14+r15], 0x3f

                     loc_13208:
0000000000013208         lea        rax, qword [r15+1]                          ; CODE XREF=sub_12920+2273
000000000001320c         cmp        r13, rax
000000000001320f         jbe        loc_13217

0000000000013211         mov        byte [r14+r15+1], 0x22

                     loc_13217:
0000000000013217         lea        rax, qword [r15+2]                          ; CODE XREF=sub_12920+2287
000000000001321b         cmp        r13, rax
000000000001321e         jbe        loc_13226

0000000000013220         mov        byte [r14+r15+2], 0x22

                     loc_13226:
0000000000013226         lea        rax, qword [r15+3]                          ; CODE XREF=sub_12920+2302
000000000001322a         cmp        r13, rax
000000000001322d         jbe        loc_13235

000000000001322f         mov        byte [r14+r15+3], 0x3f

                     loc_13235:
0000000000013235         add        r15, 0x4                                    ; CODE XREF=sub_12920+2317
0000000000013239         xor        edx, edx
000000000001323b         xor        r12d, r12d
000000000001323e         xor        eax, eax
0000000000013240         mov        rbp, rcx
0000000000013243         jmp        sub_123d0+56
                        ; endp

                     loc_13248:
0000000000013248         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
000000000001324a         je         loc_133d8

0000000000013250         lea        rax, qword [aInvalidSsArgum+25]             ; 0x1aca2
0000000000013257         mov        byte [rsp+0xe8+var_DA], 0x1
000000000001325c         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000013261         xor        r12d, r12d
0000000000013264         mov        qword [rsp+0xe8+var_98], 0x0
000000000001326d         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000013272         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000013277         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000013280         xor        r15d, r15d
0000000000013283         mov        qword [rsp+0xe8+var_A0], rax
0000000000013288         jmp        loc_122b3
000000000001328d         align      16

                     loc_13290:
0000000000013290         mov        rbp, r11                                    ; CODE XREF=sub_12920+333
0000000000013293         movzx      eax, byte [rsp+arg_7]
0000000000013298         jmp        sub_12920+1097
                        ; endp

                     loc_1329d:
000000000001329d         lea        rax, qword [aLibs+27]                       ; 0x1a31b, CODE XREF=sub_12920+1410
00000000000132a4         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000132a9         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000132ae         xor        r12d, r12d
00000000000132b1         mov        qword [rsp+0xe8+var_98], 0x0
00000000000132ba         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000132bf         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000132c4         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000132cd         xor        r15d, r15d
00000000000132d0         mov        qword [rsp+0xe8+var_A0], rax
00000000000132d5         jmp        loc_122b3

                     loc_132da:
00000000000132da         mov        eax, edx                                    ; CODE XREF=sub_12920+87

                     loc_132dc:
00000000000132dc         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_12920+76, sub_12920+2721
00000000000132e1         test       rbx, rbx
00000000000132e4         je         loc_13312

00000000000132e6         test       al, al
00000000000132e8         je         loc_13312

00000000000132ea         movzx      ecx, byte [rbx]
00000000000132ed         mov        rax, rbx
00000000000132f0         test       cl, cl
00000000000132f2         je         loc_13312

00000000000132f4         mov        rdx, r15
00000000000132f7         sub        rax, r15

                     loc_132fa:
00000000000132fa         cmp        r13, rdx                                    ; CODE XREF=sub_12920+2541
00000000000132fd         jbe        loc_13303

00000000000132ff         mov        byte [r14+rdx], cl

                     loc_13303:
0000000000013303         add        rdx, 0x1                                    ; CODE XREF=sub_12920+2525
0000000000013307         movzx      ecx, byte [rax+rdx]
000000000001330b         test       cl, cl
000000000001330d         jne        loc_132fa

000000000001330f         mov        r15, rdx

                     loc_13312:
0000000000013312         cmp        r13, r15                                    ; CODE XREF=sub_12920+2500, sub_12920+2504, sub_12920+2514
0000000000013315         jbe        loc_12db9

000000000001331b         mov        byte [r14+r15], 0x0
0000000000013320         jmp        loc_12db9

                     loc_13325:
0000000000013325         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
000000000001332a         movzx      ebx, byte [rsp+0xe8+var_D9]
000000000001332f         mov        rbp, r11
0000000000013332         sete       al
0000000000013335         mov        byte [rsp+0xe8+var_DB], bl
0000000000013339         jmp        loc_12d69

                     loc_1333e:
000000000001333e         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_12920+1664
0000000000013342         mov        rdi, rcx
0000000000013345         call       gettext_quote.part.1                        ; gettext_quote.part.1
000000000001334a         mov        qword [rsp+0xe8+var_80], rax
000000000001334f         jmp        loc_12fa6

                     loc_13354:
0000000000013354         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_12920+1707
0000000000013358         mov        rdi, rcx
000000000001335b         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000013360         mov        qword [rsp+0xe8+var_88], rax
0000000000013365         jmp        loc_12fd1

                     loc_1336a:
000000000001336a         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_127c0+16
000000000001336f         mov        rbp, r11
0000000000013372         mov        eax, edx
0000000000013374         mov        byte [rsp+arg_5], bl
0000000000013378         jmp        sub_12920+1097
                        ; endp

                     loc_1337d:
000000000001337d         sub        rsp, 0x8                                    ; CODE XREF=sub_12920+98
0000000000013381         mov        r8d, 0x5
0000000000013387         mov        rcx, r11
000000000001338a         push       qword [rsp+0xf0+var_88]
000000000001338e         push       qword [rsp+0xf8+var_80]
0000000000013392         mov        rdi, r14
0000000000013395         push       qword [rsp+0x100+var_C8]
0000000000013399         mov        r9d, dword [rsp+0x108+var_70]
00000000000133a1         mov        rdx, qword [rsp+0x108+var_D8]
00000000000133a6         mov        rsi, qword [rsp+0x108+var_98]
00000000000133ab         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000133b0         add        rsp, 0x20
00000000000133b4         mov        r15, rax
00000000000133b7         jmp        loc_12db9

                     loc_133bc:
00000000000133bc         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_12920+121
00000000000133c1         jmp        loc_132dc

                     loc_133c6:
00000000000133c6         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_12920+63
00000000000133ce         jmp        loc_12d69

                     loc_133d3:
00000000000133d3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_12920+1197
                        ; endp

                     loc_133d8:
00000000000133d8         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_12920+2346
00000000000133dd         jmp        loc_12e51

                     loc_133e2:
00000000000133e2         mov        rbp, r11                                    ; CODE XREF=sub_12920+2264
00000000000133e5         jmp        sub_12920+1120
                        ; endp

                     loc_133ea:
00000000000133ea         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_12920+1332
00000000000133ef         xor        eax, eax
00000000000133f1         xor        r12d, r12d
00000000000133f4         mov        qword [rsp+0xe8+var_98], 0x0
00000000000133fd         jmp        loc_129a4

                     loc_13402:
0000000000013402         mov        rdx, r13                                    ; CODE XREF=sub_12920+1264
0000000000013405         mov        r13, qword [rsp+arg_48]
000000000001340a         jmp        loc_12a02

                     loc_1340f:
000000000001340f         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
0000000000013414         align      32                                          ; End of unwind block (FDE at 0x1d430)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
0000000000013420         push       r15                                         ; Begin of unwind block (FDE at 0x1d4a8), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
0000000000013422         push       r14
0000000000013424         movsxd     r15, edi
0000000000013427         push       r13
0000000000013429         push       r12
000000000001342b         mov        r14, rdx
000000000001342e         push       rbp
000000000001342f         push       rbx
0000000000013430         mov        rbp, rcx
0000000000013433         sub        rsp, 0x28
0000000000013437         mov        qword [rsp+0x58+var_50], rsi
000000000001343c         call       j___errno_location                          ; __errno_location
0000000000013441         mov        r13, rax
0000000000013444         mov        eax, dword [rax]
0000000000013446         test       r15d, r15d
0000000000013449         mov        rbx, qword [slotvec]                        ; slotvec
0000000000013450         mov        dword [rsp+0x58+var_40], eax
0000000000013454         js         loc_135c1

000000000001345a         cmp        dword [nslots], r15d                        ; nslots
0000000000013461         jg         loc_134c5

0000000000013463         cmp        r15d, 0x7fffffff
000000000001346a         je         loc_135c6

0000000000013470         lea        r12d, dword [r15+1]
0000000000013474         lea        rax, qword [slotvec0]                       ; slotvec0
000000000001347b         movsxd     rsi, r12d
000000000001347e         shl        rsi, 0x4
0000000000013482         cmp        rbx, rax
0000000000013485         je         loc_135a0

000000000001348b         mov        rdi, rbx                                    ; argument #1 for method xrealloc
000000000001348e         call       xrealloc                                    ; xrealloc
0000000000013493         mov        rbx, rax
0000000000013496         mov        qword [slotvec], rax                        ; slotvec

                     loc_1349d:
000000000001349d         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
00000000000134a4         mov        edx, r12d
00000000000134a7         xor        esi, esi                                    ; argument "__c" for method j_memset
00000000000134a9         sub        edx, edi
00000000000134ab         shl        rdi, 0x4
00000000000134af         movsxd     rdx, edx
00000000000134b2         add        rdi, rbx                                    ; argument "__s" for method j_memset
00000000000134b5         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
00000000000134b9         call       j_memset                                    ; memset
00000000000134be         mov        dword [nslots], r12d                        ; nslots

                     loc_134c5:
00000000000134c5         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
00000000000134c8         shl        r15, 0x4
00000000000134cc         sub        rsp, 0x8
00000000000134d0         add        rbx, r15
00000000000134d3         lea        r15, qword [rbp+8]
00000000000134d7         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
00000000000134db         mov        r11, qword [rbx]
00000000000134de         mov        r12, qword [rbx+8]
00000000000134e2         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
00000000000134e5         or         eax, 0x1
00000000000134e8         mov        dword [rsp+0x60+var_3C], eax
00000000000134ec         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
00000000000134ef         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
00000000000134f2         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
00000000000134f5         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
00000000000134f7         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
00000000000134fa         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
00000000000134ff         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
0000000000013502         mov        qword [rsp+0x78+var_48], r11
0000000000013507         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000001350c         add        rsp, 0x20
0000000000013510         mov        r11, qword [rsp+0x58+var_48]
0000000000013515         cmp        r11, rax
0000000000013518         ja         loc_13581

000000000001351a         lea        rsi, qword [rax+1]
000000000001351e         lea        rax, qword [slot0]                          ; slot0
0000000000013525         cmp        r12, rax
0000000000013528         mov        qword [rbx], rsi
000000000001352b         je         loc_1353f

000000000001352d         mov        rdi, r12
0000000000013530         mov        qword [rsp+0x58+var_48], rsi
0000000000013535         call       sub_3880                                    ; sub_3880
000000000001353a         mov        rsi, qword [rsp+0x58+var_48]

                     loc_1353f:
000000000001353f         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
0000000000013542         mov        qword [rsp+0x58+var_48], rsi
0000000000013547         call       xmalloc                                     ; xmalloc
000000000001354c         sub        rsp, 0x8
0000000000013550         mov        qword [rbx+8], rax
0000000000013554         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000013558         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
000000000001355b         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
000000000001355e         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000013561         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000013563         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
0000000000013568         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
000000000001356b         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000013570         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
0000000000013575         mov        r12, rax
0000000000013578         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000001357d         add        rsp, 0x20

                     loc_13581:
0000000000013581         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
0000000000013585         mov        dword [r13], eax
0000000000013589         add        rsp, 0x28
000000000001358d         mov        rax, r12
0000000000013590         pop        rbx
0000000000013591         pop        rbp
0000000000013592         pop        r12
0000000000013594         pop        r13
0000000000013596         pop        r14
0000000000013598         pop        r15
000000000001359a         ret
                        ; endp
000000000001359b         align      32

                     loc_135a0:
00000000000135a0         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
00000000000135a2         call       xrealloc                                    ; xrealloc
00000000000135a7         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
00000000000135af         mov        rbx, rax
00000000000135b2         mov        qword [slotvec], rax                        ; slotvec
00000000000135b9         movups     xmmword [rax], xmm0
00000000000135bc         jmp        loc_1349d

                     loc_135c1:
00000000000135c1         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_135c6:
00000000000135c6         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_135cb:
00000000000135cb         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x1d4a8)
                     clone_quoting_options:
00000000000135d0         push       r12                                         ; Begin of unwind block (FDE at 0x1d514), CODE XREF=main+2726, main+2817
00000000000135d2         push       rbp
00000000000135d3         push       rbx
00000000000135d4         mov        rbx, rdi
00000000000135d7         call       j___errno_location                          ; __errno_location
00000000000135dc         mov        r12d, dword [rax]
00000000000135df         mov        rbp, rax
00000000000135e2         lea        rax, qword [default_quoting_options]        ; default_quoting_options
00000000000135e9         test       rbx, rbx
00000000000135ec         mov        esi, 0x38                                   ; argument #2 for method xmemdup
00000000000135f1         cmove      rbx, rax
00000000000135f5         mov        rdi, rbx                                    ; argument #1 for method xmemdup
00000000000135f8         call       xmemdup                                     ; xmemdup
00000000000135fd         mov        dword [rbp], r12d
0000000000013601         pop        rbx
0000000000013602         pop        rbp
0000000000013603         pop        r12
0000000000013605         ret
                        ; endp
0000000000013606         align      16                                          ; End of unwind block (FDE at 0x1d514)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
0000000000013610         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x1d540), default_quoting_options, CODE XREF=main+2639, main+4615, quote_name_buf.constprop.54+59
0000000000013617         test       rdi, rdi
000000000001361a         cmove      rdi, rax
000000000001361e         mov        eax, dword [rdi]
0000000000013620         ret
                        ; endp
0000000000013621         align      16                                          ; End of unwind block (FDE at 0x1d540)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
0000000000013630         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x1d554), default_quoting_options, CODE XREF=main+227, main+422, main+888, main+1073, main+1087, main+1720, main+3688, main+5280
0000000000013637         test       rdi, rdi
000000000001363a         cmove      rdi, rax
000000000001363e         mov        dword [rdi], esi
0000000000013640         ret
                        ; endp
0000000000013641         align      16                                          ; End of unwind block (FDE at 0x1d554)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
0000000000013650         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x1d568), default_quoting_options, CODE XREF=main+2800, main+2842, main+5253
0000000000013657         test       rdi, rdi
000000000001365a         mov        ecx, esi
000000000001365c         cmove      rdi, rax
0000000000013660         mov        eax, esi
0000000000013662         and        ecx, 0x1f
0000000000013665         shr        al, 0x5
0000000000013668         movzx      eax, al
000000000001366b         lea        rdi, qword [rdi+rax*4+8]
0000000000013670         mov        esi, dword [rdi]
0000000000013672         mov        eax, esi
0000000000013674         shr        eax, cl
0000000000013676         xor        edx, eax
0000000000013678         and        eax, 0x1
000000000001367b         and        edx, 0x1
000000000001367e         shl        edx, cl
0000000000013680         xor        edx, esi
0000000000013682         mov        dword [rdi], edx
0000000000013684         ret
                        ; endp
0000000000013685         align      16                                          ; End of unwind block (FDE at 0x1d568)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
0000000000013690         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x1d57c), default_quoting_options
0000000000013697         test       rdi, rdi
000000000001369a         cmove      rdi, rax
000000000001369e         mov        eax, dword [rdi+4]
00000000000136a1         mov        dword [rdi+4], esi
00000000000136a4         ret
                        ; endp
00000000000136a5         align      16                                          ; End of unwind block (FDE at 0x1d57c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
00000000000136b0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x1d590), default_quoting_options
00000000000136b7         test       rdi, rdi
00000000000136ba         cmove      rdi, rax
00000000000136be         test       rsi, rsi
00000000000136c1         mov        dword [rdi], 0xa
00000000000136c7         je         loc_136d7

00000000000136c9         test       rdx, rdx
00000000000136cc         je         loc_136d7

00000000000136ce         mov        qword [rdi+0x28], rsi
00000000000136d2         mov        qword [rdi+0x30], rdx
00000000000136d6         ret
                        ; endp

                     loc_136d7:
00000000000136d7         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
00000000000136db         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
00000000000136e0         push       r15                                         ; End of unwind block (FDE at 0x1d590), Begin of unwind block (FDE at 0x1d5a4), CODE XREF=needs_quoting+52, quote_name_buf.constprop.54+119, quote_name_buf.constprop.54+1082
00000000000136e2         push       r14
00000000000136e4         lea        rax, qword [default_quoting_options]        ; default_quoting_options
00000000000136eb         push       r13
00000000000136ed         push       r12
00000000000136ef         mov        r13, rdi
00000000000136f2         push       rbp
00000000000136f3         push       rbx
00000000000136f4         mov        rbx, r8
00000000000136f7         mov        r14, rsi
00000000000136fa         mov        r15, rdx
00000000000136fd         sub        rsp, 0x18
0000000000013701         test       r8, r8
0000000000013704         cmove      rbx, rax
0000000000013708         mov        qword [rsp+0x48+var_40], rcx
000000000001370d         call       j___errno_location                          ; __errno_location
0000000000013712         mov        r12d, dword [rax]
0000000000013715         mov        rbp, rax
0000000000013718         lea        rax, qword [rbx+8]
000000000001371c         sub        rsp, 0x8
0000000000013720         mov        r9d, dword [rbx+4]
0000000000013724         push       qword [rbx+0x30]
0000000000013727         mov        r8d, dword [rbx]
000000000001372a         push       qword [rbx+0x28]
000000000001372d         mov        rdx, r15
0000000000013730         push       rax
0000000000013731         mov        rcx, qword [rsp+0x68+var_40]
0000000000013736         mov        rsi, r14
0000000000013739         mov        rdi, r13
000000000001373c         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000013741         mov        dword [rbp], r12d
0000000000013745         add        rsp, 0x38
0000000000013749         pop        rbx
000000000001374a         pop        rbp
000000000001374b         pop        r12
000000000001374d         pop        r13
000000000001374f         pop        r14
0000000000013751         pop        r15
0000000000013753         ret
                        ; endp
0000000000013754         align      32                                          ; End of unwind block (FDE at 0x1d5a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
0000000000013760         push       r15                                         ; Begin of unwind block (FDE at 0x1d5f8), CODE XREF=quotearg_alloc+5
0000000000013762         push       r14
0000000000013764         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000001376b         push       r13
000000000001376d         push       r12
000000000001376f         mov        r12, rdx
0000000000013772         push       rbp
0000000000013773         push       rbx
0000000000013774         mov        rbx, rcx
0000000000013777         mov        r14, rdi
000000000001377a         mov        r15, rsi
000000000001377d         sub        rsp, 0x38
0000000000013781         test       rcx, rcx
0000000000013784         cmove      rbx, rax
0000000000013788         xor        ebp, ebp
000000000001378a         call       j___errno_location                          ; __errno_location
000000000001378f         test       r12, r12
0000000000013792         mov        r13, rax
0000000000013795         mov        eax, dword [rax]
0000000000013797         sete       bpl
000000000001379b         or         ebp, dword [rbx+4]
000000000001379e         lea        r10, qword [rbx+8]
00000000000137a2         sub        rsp, 0x8
00000000000137a6         mov        r8d, dword [rbx]
00000000000137a9         mov        rcx, r15
00000000000137ac         mov        dword [rsp+0x70+var_5C], eax
00000000000137b0         push       qword [rbx+0x30]
00000000000137b3         mov        rdx, r14
00000000000137b6         push       qword [rbx+0x28]
00000000000137b9         push       r10
00000000000137bb         xor        esi, esi
00000000000137bd         mov        r9d, ebp
00000000000137c0         xor        edi, edi
00000000000137c2         mov        qword [rsp+0x88+var_48], r10
00000000000137c7         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000137cc         lea        rsi, qword [rax+1]
00000000000137d0         mov        qword [rsp+0x88+var_40], rax
00000000000137d5         add        rsp, 0x20
00000000000137d9         mov        rdi, rsi
00000000000137dc         mov        qword [rsp+0x68+var_50], rsi
00000000000137e1         call       xmalloc                                     ; xmalloc
00000000000137e6         mov        qword [rsp+0x68+var_58], rax
00000000000137eb         sub        rsp, 0x8
00000000000137ef         push       qword [rbx+0x30]
00000000000137f2         push       qword [rbx+0x28]
00000000000137f5         mov        r10, qword [rsp+0x80+var_48]
00000000000137fa         mov        r9d, ebp
00000000000137fd         mov        r8d, dword [rbx]
0000000000013800         mov        rcx, r15
0000000000013803         mov        rdx, r14
0000000000013806         mov        rdi, rax
0000000000013809         push       r10
000000000001380b         mov        rsi, qword [rsp+0x88+var_50]
0000000000013810         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000013815         mov        eax, dword [rsp+0x88+var_5C]
0000000000013819         add        rsp, 0x20
000000000001381d         test       r12, r12
0000000000013820         mov        dword [r13], eax
0000000000013824         je         loc_1382f

0000000000013826         mov        r11, qword [rsp+0x68+var_40]
000000000001382b         mov        qword [r12], r11

                     loc_1382f:
000000000001382f         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
0000000000013834         add        rsp, 0x38
0000000000013838         pop        rbx
0000000000013839         pop        rbp
000000000001383a         pop        r12
000000000001383c         pop        r13
000000000001383e         pop        r14
0000000000013840         pop        r15
0000000000013842         ret
                        ; endp
0000000000013843         align      16                                          ; End of unwind block (FDE at 0x1d5f8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
0000000000013850         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x1d664)
0000000000013853         xor        edx, edx
0000000000013855         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
000000000001385a         align      32                                          ; End of unwind block (FDE at 0x1d664)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
0000000000013860         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0x1d678), nslots
0000000000013866         push       r12
0000000000013868         mov        r12, qword [slotvec]                        ; slotvec
000000000001386f         push       rbp
0000000000013870         push       rbx
0000000000013871         cmp        eax, 0x1
0000000000013874         jle        loc_138a1

0000000000013876         sub        eax, 0x2
0000000000013879         lea        rbx, qword [r12+0x18]
000000000001387e         shl        rax, 0x4
0000000000013882         lea        rbp, qword [r12+rax+0x28]
0000000000013887         nop        word [rax+rax]

                     loc_13890:
0000000000013890         mov        rdi, qword [rbx]                            ; CODE XREF=quotearg_free+63
0000000000013893         add        rbx, 0x10
0000000000013897         call       sub_3880                                    ; sub_3880
000000000001389c         cmp        rbx, rbp
000000000001389f         jne        loc_13890

                     loc_138a1:
00000000000138a1         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
00000000000138a6         lea        rbx, qword [slot0]                          ; slot0
00000000000138ad         cmp        rdi, rbx
00000000000138b0         je         loc_138c9

00000000000138b2         call       sub_3880                                    ; sub_3880
00000000000138b7         mov        qword [slotvec0], 0x100                     ; slotvec0
00000000000138c2         mov        qword [slotvec0+8], rbx                     ; 0x220258

                     loc_138c9:
00000000000138c9         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
00000000000138d0         cmp        r12, rbx
00000000000138d3         je         loc_138e4

00000000000138d5         mov        rdi, r12
00000000000138d8         call       sub_3880                                    ; sub_3880
00000000000138dd         mov        qword [slotvec], rbx                        ; slotvec

                     loc_138e4:
00000000000138e4         pop        rbx                                         ; CODE XREF=quotearg_free+115
00000000000138e5         mov        dword [nslots], 0x1                         ; nslots
00000000000138ef         pop        rbp
00000000000138f0         pop        r12
00000000000138f2         ret
                        ; endp
00000000000138f3         align      256                                         ; End of unwind block (FDE at 0x1d678)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
0000000000013900         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x1d6a4), default_quoting_options
0000000000013907         mov        rdx, 0xffffffffffffffff
000000000001390e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000013913         align      32                                          ; End of unwind block (FDE at 0x1d6a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
0000000000013920         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x1d6b8), default_quoting_options
0000000000013927         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000001392c         align      16                                          ; End of unwind block (FDE at 0x1d6b8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
0000000000013930         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x1d6cc), default_quoting_options
0000000000013937         mov        rsi, rdi
000000000001393a         mov        rdx, 0xffffffffffffffff
0000000000013941         xor        edi, edi
0000000000013943         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000013948         align      16                                          ; End of unwind block (FDE at 0x1d6cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
0000000000013950         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x1d6e0), default_quoting_options
0000000000013957         mov        rdx, rsi
000000000001395a         mov        rsi, rdi
000000000001395d         xor        edi, edi
000000000001395f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000013964         align      16                                          ; End of unwind block (FDE at 0x1d6e0)

                     quotearg_n_style:
0000000000013970         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x1d6f4), CODE XREF=argmatch_invalid+64, quotearg_style+7
0000000000013974         mov        rax, rdx
0000000000013977         mov        rdx, qword [fs:0x28]
0000000000013980         mov        qword [rsp+0x48+var_10], rdx
0000000000013985         xor        edx, edx
0000000000013987         cmp        esi, 0xa
000000000001398a         je         loc_139f4

000000000001398c         mov        dword [rsp+0x48+var_48], esi
000000000001398f         mov        rcx, rsp
0000000000013992         mov        rdx, 0xffffffffffffffff
0000000000013999         mov        rsi, rax
000000000001399c         mov        qword [rsp+0x48+var_44], 0x0
00000000000139a5         mov        qword [rsp+0x48+var_3C], 0x0
00000000000139ae         mov        qword [rsp+0x48+var_34], 0x0
00000000000139b7         mov        qword [rsp+0x48+var_2C], 0x0
00000000000139c0         mov        qword [rsp+0x48+var_24], 0x0
00000000000139c9         mov        qword [rsp+0x48+var_1C], 0x0
00000000000139d2         mov        dword [rsp+0x48+var_14], 0x0
00000000000139da         call       quotearg_n_options                          ; quotearg_n_options
00000000000139df         mov        rcx, qword [rsp+0x48+var_10]
00000000000139e4         xor        rcx, qword [fs:0x28]
00000000000139ed         jne        loc_139f9

00000000000139ef         add        rsp, 0x48
00000000000139f3         ret
                        ; endp

                     loc_139f4:
00000000000139f4         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_139f9:
00000000000139f9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
00000000000139fe         align      512                                         ; End of unwind block (FDE at 0x1d6f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
0000000000013a00         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x1d710), CODE XREF=quotearg_style_mem+10
0000000000013a04         mov        rax, rdx
0000000000013a07         mov        rdx, rcx
0000000000013a0a         mov        rcx, qword [fs:0x28]
0000000000013a13         mov        qword [rsp+0x48+var_10], rcx
0000000000013a18         xor        ecx, ecx
0000000000013a1a         cmp        esi, 0xa
0000000000013a1d         je         loc_13a80

0000000000013a1f         mov        dword [rsp+0x48+var_48], esi
0000000000013a22         mov        rcx, rsp
0000000000013a25         mov        rsi, rax
0000000000013a28         mov        qword [rsp+0x48+var_44], 0x0
0000000000013a31         mov        qword [rsp+0x48+var_3C], 0x0
0000000000013a3a         mov        qword [rsp+0x48+var_34], 0x0
0000000000013a43         mov        qword [rsp+0x48+var_2C], 0x0
0000000000013a4c         mov        qword [rsp+0x48+var_24], 0x0
0000000000013a55         mov        qword [rsp+0x48+var_1C], 0x0
0000000000013a5e         mov        dword [rsp+0x48+var_14], 0x0
0000000000013a66         call       quotearg_n_options                          ; quotearg_n_options
0000000000013a6b         mov        rdx, qword [rsp+0x48+var_10]
0000000000013a70         xor        rdx, qword [fs:0x28]
0000000000013a79         jne        loc_13a85

0000000000013a7b         add        rsp, 0x48
0000000000013a7f         ret
                        ; endp

                     loc_13a80:
0000000000013a80         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_13a85:
0000000000013a85         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
0000000000013a8a         align      16                                          ; End of unwind block (FDE at 0x1d710)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_style:
0000000000013a90         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x1d72c), CODE XREF=file_failure+17
0000000000013a93         mov        esi, edi
0000000000013a95         xor        edi, edi
0000000000013a97         jmp        quotearg_n_style                            ; quotearg_n_style
0000000000013a9c         align      32                                          ; End of unwind block (FDE at 0x1d72c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
0000000000013aa0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x1d740)
0000000000013aa3         mov        rdx, rsi
0000000000013aa6         mov        esi, edi
0000000000013aa8         xor        edi, edi
0000000000013aaa         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
0000000000013aaf         align      16                                          ; End of unwind block (FDE at 0x1d740)

                     quotearg_char_mem:
0000000000013ab0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x1d754), CODE XREF=quotearg_char+11
0000000000013ab4         mov        ecx, edx
0000000000013ab6         mov        rax, qword [fs:0x28]
0000000000013abf         mov        qword [rsp+0x48+var_10], rax
0000000000013ac4         xor        eax, eax
0000000000013ac6         mov        rax, qword [qword_221550]                   ; qword_221550
0000000000013acd         mov        r8, rsp
0000000000013ad0         and        ecx, 0x1f
0000000000013ad3         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000013adb         mov        qword [rsp+0x48+var_18], rax
0000000000013ae0         mov        eax, edx
0000000000013ae2         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000013ae6         shr        al, 0x5
0000000000013ae9         movzx      eax, al
0000000000013aec         lea        r9, qword [r8+rax*4+8]
0000000000013af1         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x221530
0000000000013af9         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000013afe         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x221540
0000000000013b06         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000013b0b         mov        edx, dword [r9]
0000000000013b0e         mov        eax, edx
0000000000013b10         shr        eax, cl
0000000000013b12         not        eax
0000000000013b14         and        eax, 0x1
0000000000013b17         shl        eax, cl
0000000000013b19         mov        rcx, r8
0000000000013b1c         xor        eax, edx
0000000000013b1e         mov        rdx, rsi
0000000000013b21         mov        rsi, rdi
0000000000013b24         mov        dword [r9], eax
0000000000013b27         xor        edi, edi
0000000000013b29         call       quotearg_n_options                          ; quotearg_n_options
0000000000013b2e         mov        rsi, qword [rsp+0x48+var_10]
0000000000013b33         xor        rsi, qword [fs:0x28]
0000000000013b3c         jne        loc_13b43

0000000000013b3e         add        rsp, 0x48
0000000000013b42         ret
                        ; endp

                     loc_13b43:
0000000000013b43         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
0000000000013b48         align      16                                          ; End of unwind block (FDE at 0x1d754)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
0000000000013b50         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0x1d770)
0000000000013b54         mov        rsi, 0xffffffffffffffff
0000000000013b5b         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
0000000000013b60         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0x1d770), Begin of unwind block (FDE at 0x1d784), CODE XREF=close_stdout+101
0000000000013b65         mov        rsi, 0xffffffffffffffff
0000000000013b6c         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000013b71         align      128                                         ; End of unwind block (FDE at 0x1d784)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
0000000000013b80         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0x1d798)
0000000000013b85         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000013b8a         align      16                                          ; End of unwind block (FDE at 0x1d798)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
0000000000013b90         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x1d7ac), CODE XREF=gobble_file.constprop.52+2320, print_dir+329
0000000000013b94         mov        rax, rdx
0000000000013b97         mov        rdx, qword [fs:0x28]
0000000000013ba0         mov        qword [rsp+0x48+var_10], rdx
0000000000013ba5         xor        edx, edx
0000000000013ba7         cmp        esi, 0xa
0000000000013baa         je         loc_13c14

0000000000013bac         mov        dword [rsp+0x48+var_48], esi
0000000000013baf         mov        rcx, rsp
0000000000013bb2         mov        rdx, 0xffffffffffffffff
0000000000013bb9         mov        rsi, rax
0000000000013bbc         mov        qword [rsp+0x48+var_44], 0x0
0000000000013bc5         mov        qword [rsp+0x48+var_3C], 0x4000000
0000000000013bce         mov        qword [rsp+0x48+var_34], 0x0
0000000000013bd7         mov        qword [rsp+0x48+var_2C], 0x0
0000000000013be0         mov        qword [rsp+0x48+var_24], 0x0
0000000000013be9         mov        qword [rsp+0x48+var_1C], 0x0
0000000000013bf2         mov        dword [rsp+0x48+var_14], 0x0
0000000000013bfa         call       quotearg_n_options                          ; quotearg_n_options
0000000000013bff         mov        rcx, qword [rsp+0x48+var_10]
0000000000013c04         xor        rcx, qword [fs:0x28]
0000000000013c0d         jne        loc_13c19

0000000000013c0f         add        rsp, 0x48
0000000000013c13         ret
                        ; endp

                     loc_13c14:
0000000000013c14         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_13c19:
0000000000013c19         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
0000000000013c1e         align      32                                          ; End of unwind block (FDE at 0x1d7ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom_mem:
0000000000013c20         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x1d7c8), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
0000000000013c24         mov        r9, rcx
0000000000013c27         mov        rcx, qword [qword_221550]                   ; qword_221550
0000000000013c2e         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000013c36         mov        rax, qword [fs:0x28]
0000000000013c3f         mov        qword [rsp+0x48+var_10], rax
0000000000013c44         xor        eax, eax
0000000000013c46         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000013c4a         test       rsi, rsi
0000000000013c4d         mov        qword [rsp+0x48+var_18], rcx
0000000000013c52         mov        dword [rsp+0x48+var_48], 0xa
0000000000013c59         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x221530
0000000000013c61         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000013c66         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x221540
0000000000013c6e         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000013c73         je         loc_13ca7

0000000000013c75         test       rdx, rdx
0000000000013c78         je         loc_13ca7

0000000000013c7a         mov        qword [rsp+0x48+var_20], rsi
0000000000013c7f         mov        qword [rsp+0x48+var_18], rdx
0000000000013c84         mov        rcx, rsp
0000000000013c87         mov        rdx, r8
0000000000013c8a         mov        rsi, r9
0000000000013c8d         call       quotearg_n_options                          ; quotearg_n_options
0000000000013c92         mov        rdi, qword [rsp+0x48+var_10]
0000000000013c97         xor        rdi, qword [fs:0x28]
0000000000013ca0         jne        loc_13cac

0000000000013ca2         add        rsp, 0x48
0000000000013ca6         ret
                        ; endp

                     loc_13ca7:
0000000000013ca7         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_13cac:
0000000000013cac         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
0000000000013cb1         align      64                                          ; End of unwind block (FDE at 0x1d7c8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_custom:
0000000000013cc0         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0x1d7e4)
0000000000013cc7         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000013ccc         align      16                                          ; End of unwind block (FDE at 0x1d7e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
0000000000013cd0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x1d7f8)
0000000000013cd3         mov        r8, 0xffffffffffffffff
0000000000013cda         mov        rdx, rsi
0000000000013cdd         mov        rsi, rdi
0000000000013ce0         xor        edi, edi
0000000000013ce2         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000013ce7         align      16                                          ; End of unwind block (FDE at 0x1d7f8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
0000000000013cf0         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0x1d80c)
0000000000013cf3         mov        rcx, rdx
0000000000013cf6         mov        rdx, rsi
0000000000013cf9         mov        rsi, rdi
0000000000013cfc         xor        edi, edi
0000000000013cfe         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000013d03         align      16                                          ; End of unwind block (FDE at 0x1d80c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
0000000000013d10         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x1d820), quote_quoting_options
0000000000013d17         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000013d1c         align      32                                          ; End of unwind block (FDE at 0x1d820)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
0000000000013d20         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x1d834), quote_quoting_options
0000000000013d27         mov        rdx, rsi
0000000000013d2a         mov        rsi, rdi
0000000000013d2d         xor        edi, edi
0000000000013d2f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000013d34         align      64                                          ; End of unwind block (FDE at 0x1d834)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
0000000000013d40         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x1d848), quote_quoting_options, CODE XREF=argmatch_invalid+46
0000000000013d47         mov        rdx, 0xffffffffffffffff
0000000000013d4e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000013d53         align      32                                          ; End of unwind block (FDE at 0x1d848)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
0000000000013d60         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x1d85c), quote_quoting_options, CODE XREF=main+2389, main+3701, main+3776, main+4976, main+5663, main+6424, argmatch_valid+90, argmatch_valid+169, xnumtoumax+109
0000000000013d67         mov        rsi, rdi
0000000000013d6a         mov        rdx, 0xffffffffffffffff
0000000000013d71         xor        edi, edi
0000000000013d73         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000013d78         align      128                                         ; End of unwind block (FDE at 0x1d85c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_150: int64_t, -336
        ;    var_158: int64_t, -344


                     same_nameat.part.0:
0000000000013d80         push       r13                                         ; Begin of unwind block (FDE at 0x1d874)
0000000000013d82         push       r12
0000000000013d84         mov        r13d, edi
0000000000013d87         push       rbp
0000000000013d88         push       rbx
0000000000013d89         mov        rdi, rsi
0000000000013d8c         mov        ebp, edx
0000000000013d8e         mov        r12, rcx
0000000000013d91         sub        rsp, 0x138
0000000000013d98         mov        rax, qword [fs:0x28]
0000000000013da1         mov        qword [rsp+0x158+var_30], rax
0000000000013da9         xor        eax, eax
0000000000013dab         call       dir_name                                    ; dir_name
0000000000013db0         mov        rcx, rsp                                    ; argument "__stat_buf" for method j___fxstatat
0000000000013db3         mov        r8d, 0x100                                  ; argument "__flag" for method j___fxstatat
0000000000013db9         mov        rdx, rax                                    ; argument "__filename" for method j___fxstatat
0000000000013dbc         mov        esi, r13d                                   ; argument "__fildes" for method j___fxstatat
0000000000013dbf         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
0000000000013dc4         mov        rbx, rax
0000000000013dc7         call       j___fxstatat                                ; __fxstatat
0000000000013dcc         test       eax, eax
0000000000013dce         jne        loc_13e80

                     loc_13dd4:
0000000000013dd4         mov        rdi, rbx                                    ; CODE XREF=same_nameat.part.0+285
0000000000013dd7         call       sub_3880                                    ; sub_3880
0000000000013ddc         mov        rdi, r12
0000000000013ddf         call       dir_name                                    ; dir_name
0000000000013de4         lea        rcx, qword [rsp+0x158+var_C8]               ; argument "__stat_buf" for method j___fxstatat
0000000000013dec         mov        r8d, 0x100                                  ; argument "__flag" for method j___fxstatat
0000000000013df2         mov        rdx, rax                                    ; argument "__filename" for method j___fxstatat
0000000000013df5         mov        esi, ebp                                    ; argument "__fildes" for method j___fxstatat
0000000000013df7         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstatat
0000000000013dfc         mov        rbx, rax
0000000000013dff         call       j___fxstatat                                ; __fxstatat
0000000000013e04         test       eax, eax
0000000000013e06         jne        loc_13e58

                     loc_13e08:
0000000000013e08         xor        ebp, ebp                                    ; CODE XREF=same_nameat.part.0+245
0000000000013e0a         mov        rax, qword [rsp+0x158+var_C0]
0000000000013e12         cmp        qword [rsp+0x158+var_150], rax
0000000000013e17         jne        loc_13e29

0000000000013e19         mov        rax, qword [rsp+0x158+var_C8]
0000000000013e21         cmp        qword [rsp+0x158+var_158], rax
0000000000013e25         sete       bpl

                     loc_13e29:
0000000000013e29         mov        rdi, rbx                                    ; CODE XREF=same_nameat.part.0+151
0000000000013e2c         call       sub_3880                                    ; sub_3880
0000000000013e31         mov        rdx, qword [rsp+0x158+var_30]
0000000000013e39         xor        rdx, qword [fs:0x28]
0000000000013e42         mov        eax, ebp
0000000000013e44         jne        loc_13ea2

0000000000013e46         add        rsp, 0x138
0000000000013e4d         pop        rbx
0000000000013e4e         pop        rbp
0000000000013e4f         pop        r12
0000000000013e51         pop        r13
0000000000013e53         ret
                        ; endp
0000000000013e54         align      8

                     loc_13e58:
0000000000013e58         call       j___errno_location                          ; __errno_location, CODE XREF=same_nameat.part.0+134
0000000000013e5d         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000013e5f         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0x19f8c
0000000000013e66         mov        rcx, rbx
0000000000013e69         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000013e6e         xor        eax, eax
0000000000013e70         call       j_error                                     ; error
0000000000013e75         jmp        loc_13e08
0000000000013e77         align      128

                     loc_13e80:
0000000000013e80         call       j___errno_location                          ; __errno_location, CODE XREF=same_nameat.part.0+78
0000000000013e85         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000013e87         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0x19f8c
0000000000013e8e         mov        rcx, rbx
0000000000013e91         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000013e96         xor        eax, eax
0000000000013e98         call       j_error                                     ; error
0000000000013e9d         jmp        loc_13dd4

                     loc_13ea2:
0000000000013ea2         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=same_nameat.part.0+196
                        ; endp
0000000000013ea7         align      16                                          ; End of unwind block (FDE at 0x1d874)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60


                     same_nameat:
0000000000013eb0         push       r15                                         ; Begin of unwind block (FDE at 0x1d8b0), CODE XREF=same_name+13
0000000000013eb2         push       r14
0000000000013eb4         mov        r15d, edx
0000000000013eb7         push       r13
0000000000013eb9         push       r12
0000000000013ebb         push       rbp
0000000000013ebc         push       rbx
0000000000013ebd         mov        rbp, rcx
0000000000013ec0         mov        rbx, rsi
0000000000013ec3         sub        rsp, 0x18
0000000000013ec7         mov        dword [rsp+0x48+var_3C], edi
0000000000013ecb         mov        rdi, rsi
0000000000013ece         call       last_component                              ; last_component
0000000000013ed3         mov        rdi, rbp
0000000000013ed6         mov        r12, rax
0000000000013ed9         call       last_component                              ; last_component
0000000000013ede         mov        rdi, r12
0000000000013ee1         mov        r13, rax
0000000000013ee4         call       base_len                                    ; base_len
0000000000013ee9         mov        rdi, r13
0000000000013eec         mov        r14, rax
0000000000013eef         call       base_len                                    ; base_len
0000000000013ef4         cmp        r14, rax
0000000000013ef7         je         loc_13f10

                     loc_13ef9:
0000000000013ef9         add        rsp, 0x18                                   ; CODE XREF=same_nameat+112
0000000000013efd         xor        eax, eax
0000000000013eff         pop        rbx
0000000000013f00         pop        rbp
0000000000013f01         pop        r12
0000000000013f03         pop        r13
0000000000013f05         pop        r14
0000000000013f07         pop        r15
0000000000013f09         ret
                        ; endp
0000000000013f0a         align      16

                     loc_13f10:
0000000000013f10         mov        rdx, r14                                    ; argument "__n" for method j_memcmp, CODE XREF=same_nameat+71
0000000000013f13         mov        rsi, r13                                    ; argument "__s2" for method j_memcmp
0000000000013f16         mov        rdi, r12                                    ; argument "__s1" for method j_memcmp
0000000000013f19         call       j_memcmp                                    ; memcmp
0000000000013f1e         test       eax, eax
0000000000013f20         jne        loc_13ef9

0000000000013f22         mov        edi, dword [rsp+0x48+var_3C]
0000000000013f26         add        rsp, 0x18
0000000000013f2a         mov        rcx, rbp
0000000000013f2d         mov        edx, r15d
0000000000013f30         mov        rsi, rbx
0000000000013f33         pop        rbx
0000000000013f34         pop        rbp
0000000000013f35         pop        r12
0000000000013f37         pop        r13
0000000000013f39         pop        r14
0000000000013f3b         pop        r15
0000000000013f3d         jmp        same_nameat.part.0                          ; same_nameat.part.0
                        ; endp
0000000000013f42         align      16                                          ; End of unwind block (FDE at 0x1d8b0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     same_name:
0000000000013f50         mov        edx, 0xffffff9c                             ; Begin of unwind block (FDE at 0x1d910), CODE XREF=triple_compare+36
0000000000013f55         mov        rcx, rsi
0000000000013f58         mov        rsi, rdi
0000000000013f5b         mov        edi, edx
0000000000013f5d         jmp        same_nameat                                 ; same_nameat
                        ; endp
0000000000013f62         align      16                                          ; End of unwind block (FDE at 0x1d910)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
0000000000013f70         push       r15                                         ; Begin of unwind block (FDE at 0x1d924), CODE XREF=j_version_etc_arn, version_etc_va+75, version_etc+161
0000000000013f72         push       r14
0000000000013f74         push       r13
0000000000013f76         push       r12
0000000000013f78         mov        r12, r9
0000000000013f7b         push       rbp
0000000000013f7c         push       rbx
0000000000013f7d         mov        rbp, rdi
0000000000013f80         mov        rbx, r8
0000000000013f83         sub        rsp, 0x28
0000000000013f87         test       rsi, rsi
0000000000013f8a         je         loc_140a8

0000000000013f90         mov        r8, rdx
0000000000013f93         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
0000000000013f9a         mov        r9, rcx
0000000000013f9d         xor        eax, eax
0000000000013f9f         mov        rcx, rsi
0000000000013fa2         mov        esi, 0x1
0000000000013fa7         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_13fac:
0000000000013fac         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0x1a7fb, CODE XREF=version_etc_arn+337
0000000000013fb3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000013fb5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000013fba         call       j_dcgettext                                 ; dcgettext
0000000000013fbf         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000013fc6         mov        rcx, rax
0000000000013fc9         mov        r8d, 0x7e3
0000000000013fcf         mov        esi, 0x1
0000000000013fd4         mov        rdi, rbp
0000000000013fd7         xor        eax, eax
0000000000013fd9         call       j___fprintf_chk                             ; __fprintf_chk
0000000000013fde         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000013fe5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000013fe7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000013fec         call       j_dcgettext                                 ; dcgettext
0000000000013ff1         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
0000000000013ff4         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000013ff7         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000013ffc         cmp        r12, 0x9
0000000000014000         ja         loc_14340

0000000000014006         lea        rdx, qword [switch_table_1aae4]             ; switch_table_1aae4
000000000001400d         movsxd     rax, dword [rdx+r12*4]
0000000000014011         add        rax, rdx
0000000000014014         jmp        rax                                         ; switch statement using table at 0x1aae4, with 10 cases, 0x14020,0x14096,0x140d0,0x14128,0x14168,0x141b0,0x14200,0x14258,0x14288,0x142f0
0000000000014016         align      32

                     loc_14020:
0000000000014020         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
0000000000014024         mov        rax, qword [rbx+0x10]
0000000000014028         lea        rsi, qword [aWrittenBySSSns_1a9f8]          ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
000000000001402f         mov        r8, qword [rbx+8]
0000000000014033         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000014038         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000001403a         mov        r13, qword [rbx+0x30]
000000000001403e         mov        r12, qword [rbx+0x28]
0000000000014042         mov        qword [rsp+0x58+var_48], r9
0000000000014047         mov        r15, qword [rbx+0x20]
000000000001404b         mov        r14, qword [rbx+0x18]
000000000001404f         mov        qword [rsp+0x58+var_58], rax
0000000000014053         mov        qword [rsp+0x58+var_50], r8
0000000000014058         mov        rbx, qword [rbx]
000000000001405b         call       j_dcgettext                                 ; dcgettext
0000000000014060         sub        rsp, 0x8

                     loc_14064:
0000000000014064         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
0000000000014069         mov        rdx, rax
000000000001406c         mov        rcx, rbx
000000000001406f         mov        esi, 0x1
0000000000014074         mov        rdi, rbp
0000000000014077         xor        eax, eax
0000000000014079         push       r9
000000000001407b         push       r13
000000000001407d         push       r12
000000000001407f         push       r15
0000000000014081         push       r14
0000000000014083         mov        r9, qword [rsp+0x88+var_58]
0000000000014088         mov        r8, qword [rsp+0x88+var_50]
000000000001408d         call       j___fprintf_chk                             ; __fprintf_chk
0000000000014092         add        rsp, 0x30

                     loc_14096:
0000000000014096         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
000000000001409a         pop        rbx
000000000001409b         pop        rbp
000000000001409c         pop        r12
000000000001409e         pop        r13
00000000000140a0         pop        r14
00000000000140a2         pop        r15
00000000000140a4         ret
                        ; endp
00000000000140a5         align      8

                     loc_140a8:
00000000000140a8         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
00000000000140ab         mov        rcx, rdx
00000000000140ae         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
00000000000140b5         mov        esi, 0x1
00000000000140ba         xor        eax, eax
00000000000140bc         call       j___fprintf_chk                             ; __fprintf_chk
00000000000140c1         jmp        loc_13fac
00000000000140c6         align      16

                     loc_140d0:
00000000000140d0         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
00000000000140d4         mov        r9, qword [rbx+0x38]
00000000000140d8         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
00000000000140df         mov        rax, qword [rbx+0x10]
00000000000140e3         mov        r8, qword [rbx+8]
00000000000140e7         mov        edx, 0x5
00000000000140ec         mov        r13, qword [rbx+0x30]
00000000000140f0         mov        r12, qword [rbx+0x28]
00000000000140f4         mov        r15, qword [rbx+0x20]
00000000000140f8         mov        r14, qword [rbx+0x18]
00000000000140fc         mov        rbx, qword [rbx]
00000000000140ff         mov        qword [rsp+0x58+var_40], r10
0000000000014104         mov        qword [rsp+0x58+var_48], r9
0000000000014109         mov        qword [rsp+0x58+var_58], rax
000000000001410d         mov        qword [rsp+0x58+var_50], r8

                     loc_14112:
0000000000014112         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
0000000000014114         call       j_dcgettext                                 ; dcgettext
0000000000014119         mov        r10, qword [rsp+0x58+var_40]
000000000001411e         push       r10
0000000000014120         jmp        loc_14064
0000000000014125         align      8

                     loc_14128:
0000000000014128         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
000000000001412b         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
0000000000014132         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000014137         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000014139         call       j_dcgettext                                 ; dcgettext
000000000001413e         add        rsp, 0x28
0000000000014142         mov        rcx, rbx
0000000000014145         mov        rdi, rbp
0000000000014148         pop        rbx
0000000000014149         pop        rbp
000000000001414a         pop        r12
000000000001414c         pop        r13
000000000001414e         pop        r14
0000000000014150         pop        r15
0000000000014152         mov        rdx, rax
0000000000014155         mov        esi, 0x1
000000000001415a         xor        eax, eax
000000000001415c         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000014161         align      8

                     loc_14168:
0000000000014168         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
000000000001416c         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
0000000000014173         mov        rbx, qword [rbx]
0000000000014176         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000001417b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000001417d         call       j_dcgettext                                 ; dcgettext
0000000000014182         add        rsp, 0x28
0000000000014186         mov        r8, r12
0000000000014189         mov        rcx, rbx
000000000001418c         mov        rdi, rbp
000000000001418f         mov        rdx, rax
0000000000014192         mov        esi, 0x1
0000000000014197         pop        rbx
0000000000014198         pop        rbp
0000000000014199         pop        r12
000000000001419b         pop        r13
000000000001419d         pop        r14
000000000001419f         pop        r15
00000000000141a1         xor        eax, eax
00000000000141a3         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
00000000000141a8         align      16

                     loc_141b0:
00000000000141b0         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
00000000000141b4         mov        r12, qword [rbx+8]
00000000000141b8         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
00000000000141bf         mov        rbx, qword [rbx]
00000000000141c2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000141c7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000141c9         call       j_dcgettext                                 ; dcgettext
00000000000141ce         add        rsp, 0x28
00000000000141d2         mov        r9, r13
00000000000141d5         mov        r8, r12
00000000000141d8         mov        rcx, rbx
00000000000141db         mov        rdi, rbp
00000000000141de         mov        rdx, rax
00000000000141e1         pop        rbx
00000000000141e2         pop        rbp
00000000000141e3         pop        r12
00000000000141e5         pop        r13
00000000000141e7         pop        r14
00000000000141e9         pop        r15
00000000000141eb         mov        esi, 0x1
00000000000141f0         xor        eax, eax
00000000000141f2         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
00000000000141f7         align      512

                     loc_14200:
0000000000014200         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
0000000000014207         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000001420c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000001420e         mov        r14, qword [rbx+0x18]
0000000000014212         mov        r13, qword [rbx+0x10]
0000000000014216         mov        r12, qword [rbx+8]
000000000001421a         mov        rbx, qword [rbx]
000000000001421d         call       j_dcgettext                                 ; dcgettext
0000000000014222         sub        rsp, 0x8

                     loc_14226:
0000000000014226         push       r14                                         ; CODE XREF=version_etc_arn+784
0000000000014228         mov        rdx, rax
000000000001422b         mov        r9, r13
000000000001422e         mov        r8, r12
0000000000014231         mov        rcx, rbx
0000000000014234         mov        rdi, rbp
0000000000014237         mov        esi, 0x1
000000000001423c         xor        eax, eax
000000000001423e         call       j___fprintf_chk                             ; __fprintf_chk
0000000000014243         pop        rax
0000000000014244         pop        rdx
0000000000014245         add        rsp, 0x28
0000000000014249         pop        rbx
000000000001424a         pop        rbp
000000000001424b         pop        r12
000000000001424d         pop        r13
000000000001424f         pop        r14
0000000000014251         pop        r15
0000000000014253         ret
                        ; endp
0000000000014254         align      8

                     loc_14258:
0000000000014258         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
000000000001425c         lea        rsi, qword [aWrittenBySSSns_1a978]          ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
0000000000014263         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000014268         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000001426a         mov        r14, qword [rbx+0x18]
000000000001426e         mov        r13, qword [rbx+0x10]
0000000000014272         mov        r12, qword [rbx+8]
0000000000014276         mov        rbx, qword [rbx]
0000000000014279         call       j_dcgettext                                 ; dcgettext
000000000001427e         push       r15
0000000000014280         jmp        loc_14226
0000000000014282         align      8

                     loc_14288:
0000000000014288         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
000000000001428c         mov        r12, qword [rbx+0x28]
0000000000014290         lea        rsi, qword [aWrittenBySSSns_1a9a0]          ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
0000000000014297         mov        r15, qword [rbx+0x20]
000000000001429b         mov        r14, qword [rbx+0x18]
000000000001429f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000142a4         mov        r13, qword [rbx+0x10]
00000000000142a8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000142aa         mov        rbx, qword [rbx]
00000000000142ad         mov        qword [rsp+0x58+var_58], r8
00000000000142b1         call       j_dcgettext                                 ; dcgettext
00000000000142b6         sub        rsp, 0x8
00000000000142ba         mov        r9, r13
00000000000142bd         push       r12
00000000000142bf         push       r15
00000000000142c1         push       r14

                     loc_142c3:
00000000000142c3         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
00000000000142c8         mov        rcx, rbx
00000000000142cb         mov        rdx, rax
00000000000142ce         mov        rdi, rbp
00000000000142d1         mov        esi, 0x1
00000000000142d6         xor        eax, eax
00000000000142d8         call       j___fprintf_chk                             ; __fprintf_chk
00000000000142dd         add        rsp, 0x20
00000000000142e1         add        rsp, 0x28
00000000000142e5         pop        rbx
00000000000142e6         pop        rbp
00000000000142e7         pop        r12
00000000000142e9         pop        r13
00000000000142eb         pop        r14
00000000000142ed         pop        r15
00000000000142ef         ret
                        ; endp

                     loc_142f0:
00000000000142f0         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
00000000000142f4         mov        r13, qword [rbx+0x30]
00000000000142f8         lea        rsi, qword [aWrittenBySSSns_1a9c8]          ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
00000000000142ff         mov        r12, qword [rbx+0x28]
0000000000014303         mov        r15, qword [rbx+0x20]
0000000000014307         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000001430c         mov        r14, qword [rbx+0x18]
0000000000014310         mov        r8, qword [rbx+8]
0000000000014314         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000014316         mov        qword [rsp+0x58+var_50], r9
000000000001431b         mov        rbx, qword [rbx]
000000000001431e         mov        qword [rsp+0x58+var_58], r8
0000000000014322         call       j_dcgettext                                 ; dcgettext
0000000000014327         push       r13
0000000000014329         push       r12
000000000001432b         push       r15
000000000001432d         push       r14
000000000001432f         mov        r9, qword [rsp+0x78+var_50]
0000000000014334         jmp        loc_142c3
0000000000014336         align      64

                     loc_14340:
0000000000014340         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
0000000000014344         mov        r9, qword [rbx+0x38]
0000000000014348         mov        edx, 0x5
000000000001434d         mov        rax, qword [rbx+0x10]
0000000000014351         mov        r8, qword [rbx+8]
0000000000014355         lea        rsi, qword [aWrittenBySSSns_1aa60]          ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
000000000001435c         mov        r13, qword [rbx+0x30]
0000000000014360         mov        r12, qword [rbx+0x28]
0000000000014364         mov        r15, qword [rbx+0x20]
0000000000014368         mov        r14, qword [rbx+0x18]
000000000001436c         mov        qword [rsp+0x58+var_40], r10
0000000000014371         mov        qword [rsp+0x58+var_48], r9
0000000000014376         mov        qword [rsp+0x58+var_58], rax
000000000001437a         mov        qword [rsp+0x58+var_50], r8
000000000001437f         mov        rbx, qword [rbx]
0000000000014382         jmp        loc_14112
0000000000014387         align      16                                          ; End of unwind block (FDE at 0x1d924)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
0000000000014390         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0x1da38)
0000000000014393         cmp        qword [r8], 0x0
0000000000014397         je         j_version_etc_arn                           ; version_etc_arn

0000000000014399         nop        dword [rax]

                     loc_143a0:
00000000000143a0         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
00000000000143a4         cmp        qword [r8+r9*8], 0x0
00000000000143a9         jne        loc_143a0

                     j_version_etc_arn:        // version_etc_arn
00000000000143ab         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
00000000000143b0         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0x1da38), Begin of unwind block (FDE at 0x1da4c)
00000000000143b4         mov        r10, r8
00000000000143b7         xor        r9d, r9d
00000000000143ba         mov        rax, qword [fs:0x28]
00000000000143c3         mov        qword [rsp+0x68+var_10], rax
00000000000143c8         xor        eax, eax
00000000000143ca         mov        r8, rsp
00000000000143cd         nop        dword [rax]

                     loc_143d0:
00000000000143d0         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
00000000000143d3         cmp        eax, 0x2f
00000000000143d6         ja         loc_1441a

00000000000143d8         mov        r11d, eax
00000000000143db         add        r11, qword [r10+0x10]
00000000000143df         add        eax, 0x8
00000000000143e2         mov        dword [r10], eax

                     loc_143e5:
00000000000143e5         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
00000000000143e8         test       rax, rax
00000000000143eb         mov        qword [r8+r9*8], rax
00000000000143ef         je         loc_143fb

00000000000143f1         add        r9, 0x1
00000000000143f5         cmp        r9, 0xa
00000000000143f9         jne        loc_143d0

                     loc_143fb:
00000000000143fb         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
0000000000014400         mov        rax, qword [rsp+0x68+var_10]
0000000000014405         xor        rax, qword [fs:0x28]
000000000001440e         jne        loc_14415

0000000000014410         add        rsp, 0x68
0000000000014414         ret
                        ; endp

                     loc_14415:
0000000000014415         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_1441a:
000000000001441a         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
000000000001441e         lea        rax, qword [r11+8]
0000000000014422         mov        qword [r10+8], rax
0000000000014426         jmp        loc_143e5
0000000000014428         align      16                                          ; End of unwind block (FDE at 0x1da4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
0000000000014430         push       rbp                                         ; Begin of unwind block (FDE at 0x1da68), CODE XREF=main+1440
0000000000014431         push       rbx
0000000000014432         mov        r10d, 0x20
0000000000014438         xor        r11d, r11d
000000000001443b         sub        rsp, 0xb8
0000000000014442         mov        rax, qword [fs:0x28]
000000000001444b         mov        qword [rsp+0xc8+var_50], rax
0000000000014450         xor        eax, eax
0000000000014452         lea        rax, qword [rsp+0xc8+arg_0]
000000000001445a         mov        qword [rsp+0xc8+var_28], r8
0000000000014462         lea        rbx, qword [rsp+0xc8+arg_0]
000000000001446a         lea        r8, qword [rsp+0xc8+var_A8]
000000000001446f         mov        qword [rsp+0xc8+var_20], r9
0000000000014477         mov        dword [rsp+0xc8+var_C0], 0x20
000000000001447f         mov        qword [rsp+0xc8+var_B8], rax
0000000000014484         lea        rax, qword [rsp+0xc8+var_48]
000000000001448c         xor        r9d, r9d
000000000001448f         mov        qword [rsp+0xc8+var_B0], rax
0000000000014494         mov        rbp, rax
0000000000014497         nop        word [rax+rax]

                     loc_144a0:
00000000000144a0         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
00000000000144a4         ja         loc_144fc

00000000000144a6         mov        eax, r10d
00000000000144a9         mov        r11d, 0x1
00000000000144af         add        r10d, 0x8
00000000000144b3         add        rax, rbp

                     loc_144b6:
00000000000144b6         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
00000000000144b9         test       rax, rax
00000000000144bc         mov        qword [r8+r9*8], rax
00000000000144c0         je         loc_144cc

00000000000144c2         add        r9, 0x1
00000000000144c6         cmp        r9, 0xa
00000000000144ca         jne        loc_144a0

                     loc_144cc:
00000000000144cc         test       r11b, r11b                                  ; CODE XREF=version_etc+144
00000000000144cf         jne        loc_144f5

                     loc_144d1:
00000000000144d1         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
00000000000144d6         mov        rax, qword [rsp+0xc8+var_50]
00000000000144db         xor        rax, qword [fs:0x28]
00000000000144e4         jne        loc_144f0

00000000000144e6         add        rsp, 0xb8
00000000000144ed         pop        rbx
00000000000144ee         pop        rbp
00000000000144ef         ret
                        ; endp

                     loc_144f0:
00000000000144f0         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_144f5:
00000000000144f5         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
00000000000144fa         jmp        loc_144d1

                     loc_144fc:
00000000000144fc         mov        rax, rbx                                    ; CODE XREF=version_etc+116
00000000000144ff         add        rbx, 0x8
0000000000014503         jmp        loc_144b6
0000000000014505         align      16                                          ; End of unwind block (FDE at 0x1da68)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
0000000000014510         push       rbx                                         ; Begin of unwind block (FDE at 0x1da94)
0000000000014511         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
0000000000014518         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000001451d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000001451f         call       j_dcgettext                                 ; dcgettext
0000000000014524         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
000000000001452b         mov        rsi, rax
000000000001452e         mov        edi, 0x1
0000000000014533         xor        eax, eax
0000000000014535         call       j___printf_chk                              ; __printf_chk
000000000001453a         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
0000000000014541         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000014546         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000014548         call       j_dcgettext                                 ; dcgettext
000000000001454d         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000014554         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x179d6
000000000001455b         mov        rsi, rax
000000000001455e         mov        edi, 0x1
0000000000014563         xor        eax, eax
0000000000014565         call       j___printf_chk                              ; __printf_chk
000000000001456a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000014571         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
0000000000014578         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000001457a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000001457f         call       j_dcgettext                                 ; dcgettext
0000000000014584         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000014587         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000001458a         pop        rbx
000000000001458b         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
0000000000014590         push       rbx                                         ; End of unwind block (FDE at 0x1da94), Begin of unwind block (FDE at 0x1dab4), CODE XREF=main+1129, main+1239, main+1277, main+1910, main+3246, main+5931, queue_directory+24, file_escape+68, sort_files+324, quote_name_buf.constprop.54+1024, quote_name_buf.constprop.54+1055
0000000000014591         mov        rbx, rdi
0000000000014594         call       sub_3888                                    ; sub_3888
0000000000014599         test       rax, rax
000000000001459c         jne        loc_145a3

000000000001459e         test       rbx, rbx
00000000000145a1         jne        loc_145a5

                     loc_145a3:
00000000000145a3         pop        rbx                                         ; CODE XREF=xmalloc+12
00000000000145a4         ret
                        ; endp

                     loc_145a5:
00000000000145a5         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_145aa:
00000000000145aa         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x1dab4)
                     xnmalloc:
00000000000145b0         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x1dad0)
00000000000145b3         mul        rsi
00000000000145b6         mov        rdi, rax
00000000000145b9         seto       al
00000000000145bc         test       rdi, rdi
00000000000145bf         js         loc_145cb

00000000000145c1         movzx      eax, al
00000000000145c4         test       rax, rax
00000000000145c7         jne        loc_145cb

00000000000145c9         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_145cb:
00000000000145cb         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
00000000000145cf         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_145d4:
00000000000145d4         nop                                                    ; End of unwind block (FDE at 0x1dad0)
00000000000145d6         nop        word [cs:rax+rax]
                     xcharalloc:
00000000000145e0         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0x1dae4)
                        ; endp
00000000000145e2         align      16                                          ; End of unwind block (FDE at 0x1dae4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
00000000000145f0         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x1daf8), CODE XREF=calculate_columns+115, calculate_columns+726, gobble_file.constprop.52+123, canonicalize_filename_mode+364, canonicalize_filename_mode+506, canonicalize_filename_mode+1154, sub_ca5a+46, quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52
00000000000145f3         push       rbx
00000000000145f4         mov        rbx, rsi
00000000000145f7         jne        loc_145fe

00000000000145f9         test       rdi, rdi
00000000000145fc         jne        loc_14618

                     loc_145fe:
00000000000145fe         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000014601         call       j_realloc                                   ; realloc
0000000000014606         test       rax, rax
0000000000014609         jne        loc_14610

000000000001460b         test       rbx, rbx
000000000001460e         jne        loc_14621

                     loc_14610:
0000000000014610         pop        rbx                                         ; CODE XREF=xrealloc+25
0000000000014611         ret
                        ; endp
0000000000014612         align      8

                     loc_14618:
0000000000014618         call       sub_3880                                    ; sub_3880, CODE XREF=xrealloc+12
000000000001461d         xor        eax, eax
000000000001461f         pop        rbx
0000000000014620         ret
                        ; endp

                     loc_14621:
0000000000014621         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14626:
0000000000014626         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x1daf8)
                     xnrealloc:
0000000000014630         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x1db1c)
0000000000014633         mul        rdx
0000000000014636         mov        rsi, rax
0000000000014639         seto       al
000000000001463c         test       rsi, rsi
000000000001463f         js         loc_1464b

0000000000014641         movzx      eax, al
0000000000014644         test       rax, rax
0000000000014647         jne        loc_1464b

0000000000014649         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_1464b:
000000000001464b         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
000000000001464f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14654:
0000000000014654         nop                                                    ; End of unwind block (FDE at 0x1db1c)
0000000000014656         nop        word [cs:rax+rax]
                     x2nrealloc:
0000000000014660         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x1db30)
0000000000014663         mov        r9, rdx
0000000000014666         mov        rcx, qword [rsi]
0000000000014669         je         loc_146a0

000000000001466b         xor        edx, edx
000000000001466d         movabs     rax, 0x5555555555555554
0000000000014677         div        r9
000000000001467a         cmp        rax, rcx
000000000001467d         jbe        loc_146bb

000000000001467f         mov        rax, rcx
0000000000014682         shr        rax, 0x1
0000000000014685         lea        rcx, qword [rax+rcx+1]

                     loc_1468a:
000000000001468a         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
000000000001468d         imul       rcx, r9                                     ; argument #4 for method xrealloc
0000000000014691         mov        rsi, rcx                                    ; argument #2 for method xrealloc
0000000000014694         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000014699         align      32

                     loc_146a0:
00000000000146a0         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
00000000000146a3         je         loc_146c8

                     loc_146a5:
00000000000146a5         mov        rax, rcx                                    ; CODE XREF=sub_146c4+28
00000000000146a8         mul        r9
00000000000146ab         seto       dl
00000000000146ae         test       rax, rax
00000000000146b1         movzx      edx, dl
00000000000146b4         js         loc_146bb

00000000000146b6         test       rdx, rdx
00000000000146b9         je         loc_1468a

                     loc_146bb:
00000000000146bb         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
00000000000146bf         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_146c4:
00000000000146c4         nop        dword [rax]
                        ; endp

                     loc_146c8:
00000000000146c8         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
00000000000146ca         mov        eax, 0x80
00000000000146cf         xor        r8d, r8d
00000000000146d2         div        r9
00000000000146d5         test       rax, rax
00000000000146d8         sete       r8b
00000000000146dc         lea        rcx, qword [r8+rax]
00000000000146e0         jmp        loc_146a5
00000000000146e2         align      16                                          ; End of unwind block (FDE at 0x1db30)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
00000000000146f0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x1db48), CODE XREF=xgethostname+70
00000000000146f3         mov        rax, qword [rsi]
00000000000146f6         je         loc_14720

00000000000146f8         movabs     rdx, 0x5555555555555553
0000000000014702         cmp        rax, rdx
0000000000014705         ja         loc_14731

0000000000014707         mov        rdx, rax
000000000001470a         shr        rdx, 0x1
000000000001470d         lea        rax, qword [rdx+rax+1]

                     loc_14712:
0000000000014712         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
0000000000014715         mov        rsi, rax                                    ; argument #2 for method xrealloc
0000000000014718         jmp        xrealloc                                    ; xrealloc
                        ; endp
000000000001471d         align      32

                     loc_14720:
0000000000014720         test       rax, rax                                    ; CODE XREF=x2realloc+6
0000000000014723         mov        edx, 0x80
0000000000014728         cmove      rax, rdx
000000000001472c         test       rax, rax
000000000001472f         jns        loc_14712

                     loc_14731:
0000000000014731         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
0000000000014735         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1473a:
000000000001473a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x1db48)
                     xzalloc:
0000000000014740         push       rbx                                         ; Begin of unwind block (FDE at 0x1db60)
0000000000014741         mov        rbx, rdi
0000000000014744         call       xmalloc                                     ; xmalloc
0000000000014749         mov        rdx, rbx                                    ; argument "__n" for method j_memset
000000000001474c         xor        esi, esi                                    ; argument "__c" for method j_memset
000000000001474e         mov        rdi, rax                                    ; argument "__s" for method j_memset
0000000000014751         pop        rbx
0000000000014752         jmp        j_memset                                    ; memset
                        ; endp
0000000000014757         align      32                                          ; End of unwind block (FDE at 0x1db60)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
0000000000014760         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x1db7c)
0000000000014763         sub        rsp, 0x8
0000000000014767         mul        rsi
000000000001476a         seto       dl
000000000001476d         test       rax, rax
0000000000014770         js         loc_14789

0000000000014772         movzx      edx, dl
0000000000014775         test       rdx, rdx
0000000000014778         jne        loc_14789

000000000001477a         call       j_calloc                                    ; calloc
000000000001477f         test       rax, rax
0000000000014782         je         loc_14789

0000000000014784         add        rsp, 0x8
0000000000014788         ret
                        ; endp

                     loc_14789:
0000000000014789         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1478e:
000000000001478e         nop                                                    ; End of unwind block (FDE at 0x1db7c)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmemdup:
0000000000014790         push       rbp                                         ; Begin of unwind block (FDE at 0x1db98), CODE XREF=clone_quoting_options+40
0000000000014791         push       rbx
0000000000014792         mov        rbp, rdi
0000000000014795         mov        rdi, rsi
0000000000014798         mov        rbx, rsi
000000000001479b         sub        rsp, 0x8
000000000001479f         call       xmalloc                                     ; xmalloc
00000000000147a4         add        rsp, 0x8
00000000000147a8         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
00000000000147ab         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
00000000000147ae         pop        rbx
00000000000147af         pop        rbp
00000000000147b0         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
00000000000147b3         jmp        j_memcpy                                    ; memcpy
                        ; endp
00000000000147b8         align      64                                          ; End of unwind block (FDE at 0x1db98)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
00000000000147c0         push       rbx                                         ; Begin of unwind block (FDE at 0x1dbc0), CODE XREF=main+5486, queue_directory+42, queue_directory+61, gobble_file.constprop.52+753, gobble_file.constprop.52+2971, record_file+40
00000000000147c1         mov        rbx, rdi
00000000000147c4         call       j_strlen                                    ; strlen
00000000000147c9         mov        rdi, rbx
00000000000147cc         lea        rsi, qword [rax+1]
00000000000147d0         pop        rbx
00000000000147d1         jmp        xmemdup                                     ; xmemdup
                        ; endp
00000000000147d3         align      32                                          ; End of unwind block (FDE at 0x1dbc0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
00000000000147e0         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x1dbdc), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=main+6596, file_escape+204, sort_files+397, calculate_columns+753, gobble_file.constprop.52+3401, print_dir+1711, canonicalize_filename_mode+1301, record_file+130, file_name_concat+19, quotearg_n_options+422, xmalloc+21
00000000000147e7         sub        rsp, 0x8
00000000000147eb         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000147f0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000147f2         call       j_dcgettext                                 ; dcgettext
00000000000147f7         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
00000000000147fd         lea        rdx, qword [aNS+10]                         ; argument "__format" for method j_error, 0x19f8c
0000000000014804         mov        rcx, rax
0000000000014807         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000014809         xor        eax, eax
000000000001480b         call       j_error                                     ; error
0000000000014810         call       j_abort                                     ; abort
                        ; endp
0000000000014815         align      32                                          ; End of unwind block (FDE at 0x1dbdc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72


                     xnumtoumax:
0000000000014820         push       r15                                         ; Begin of unwind block (FDE at 0x1dbf4), CODE XREF=main+1015, xdectoumax+23
0000000000014822         push       r14
0000000000014824         mov        r15, rcx
0000000000014827         push       r13
0000000000014829         push       r12
000000000001482b         mov        r14, rdx
000000000001482e         push       rbp
000000000001482f         push       rbx
0000000000014830         mov        edx, esi
0000000000014832         xor        esi, esi
0000000000014834         mov        r12, rdi
0000000000014837         mov        r13, r9
000000000001483a         sub        rsp, 0x18
000000000001483e         mov        rcx, rsp
0000000000014841         mov        ebx, dword [rsp+0x48+arg_0]
0000000000014845         mov        rax, qword [fs:0x28]
000000000001484e         mov        qword [rsp+0x48+var_40], rax
0000000000014853         xor        eax, eax
0000000000014855         call       xstrtoumax                                  ; xstrtoumax
000000000001485a         test       eax, eax
000000000001485c         jne        loc_148f0

0000000000014862         mov        rbp, qword [rsp+0x48+var_48]
0000000000014866         cmp        rbp, r14
0000000000014869         jb         loc_14870

000000000001486b         cmp        rbp, r15
000000000001486e         jbe        loc_148c4

                     loc_14870:
0000000000014870         call       j___errno_location                          ; __errno_location, CODE XREF=xnumtoumax+73
0000000000014875         cmp        rbp, 0x40000000
000000000001487c         mov        r14, rax
000000000001487f         sbb        eax, eax
0000000000014881         and        eax, 0xffffffd7
0000000000014884         add        eax, 0x4b
0000000000014887         mov        dword [r14], eax

                     loc_1488a:
000000000001488a         mov        rdi, r12                                    ; CODE XREF=xnumtoumax+226, xnumtoumax+234, xnumtoumax+246
000000000001488d         call       quote                                       ; quote
0000000000014892         mov        esi, dword [r14]
0000000000014895         mov        r8, rax
0000000000014898         mov        eax, 0x0
000000000001489d         lea        rdx, qword [aSS_17a58]                      ; argument "__format" for method j_error, "%s: %s"
00000000000148a4         mov        rcx, r13
00000000000148a7         cmp        esi, 0x16
00000000000148aa         cmove      esi, eax                                    ; argument "__errnum" for method j_error
00000000000148ad         test       ebx, ebx
00000000000148af         mov        eax, 0x1
00000000000148b4         cmove      ebx, eax
00000000000148b7         xor        eax, eax
00000000000148b9         mov        edi, ebx                                    ; argument "__status" for method j_error
00000000000148bb         call       j_error                                     ; error
00000000000148c0         mov        rbp, qword [rsp+0x48+var_48]

                     loc_148c4:
00000000000148c4         mov        rdx, qword [rsp+0x48+var_40]                ; CODE XREF=xnumtoumax+78
00000000000148c9         xor        rdx, qword [fs:0x28]
00000000000148d2         mov        rax, rbp
00000000000148d5         jne        loc_1491b

00000000000148d7         add        rsp, 0x18
00000000000148db         pop        rbx
00000000000148dc         pop        rbp
00000000000148dd         pop        r12
00000000000148df         pop        r13
00000000000148e1         pop        r14
00000000000148e3         pop        r15
00000000000148e5         ret
                        ; endp
00000000000148e6         align      16

                     loc_148f0:
00000000000148f0         mov        ebp, eax                                    ; CODE XREF=xnumtoumax+60
00000000000148f2         call       j___errno_location                          ; __errno_location
00000000000148f7         cmp        ebp, 0x1
00000000000148fa         mov        r14, rax
00000000000148fd         je         loc_14910

00000000000148ff         cmp        ebp, 0x3
0000000000014902         jne        loc_1488a

0000000000014904         mov        dword [rax], 0x0
000000000001490a         jmp        loc_1488a
000000000001490f         align      16

                     loc_14910:
0000000000014910         mov        dword [rax], 0x4b                           ; CODE XREF=xnumtoumax+221
0000000000014916         jmp        loc_1488a

                     loc_1491b:
000000000001491b         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=xnumtoumax+181
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xdectoumax:
0000000000014920         sub        rsp, 0x10                                   ; End of unwind block (FDE at 0x1dbf4), Begin of unwind block (FDE at 0x1dc40)
0000000000014924         push       r9
0000000000014926         mov        r9, r8
0000000000014929         mov        r8, rcx
000000000001492c         mov        rcx, rdx
000000000001492f         mov        rdx, rsi
0000000000014932         mov        esi, 0xa
0000000000014937         call       xnumtoumax                                  ; xnumtoumax
000000000001493c         add        rsp, 0x18
0000000000014940         ret
                        ; endp
0000000000014941         align      16                                          ; End of unwind block (FDE at 0x1dc40)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xgetcwd:
0000000000014950         push       rbx                                         ; Begin of unwind block (FDE at 0x1dc5c), CODE XREF=canonicalize_filename_mode+99
0000000000014951         xor        esi, esi                                    ; argument "__size" for method j_getcwd
0000000000014953         xor        edi, edi                                    ; argument "__buf" for method j_getcwd
0000000000014955         call       j_getcwd                                    ; getcwd
000000000001495a         test       rax, rax
000000000001495d         mov        rbx, rax
0000000000014960         je         loc_14970

                     loc_14962:
0000000000014962         mov        rax, rbx                                    ; CODE XREF=xgetcwd+40
0000000000014965         pop        rbx
0000000000014966         ret
                        ; endp
0000000000014967         align      16

                     loc_14970:
0000000000014970         call       j___errno_location                          ; __errno_location, CODE XREF=xgetcwd+16
0000000000014975         cmp        dword [rax], 0xc
0000000000014978         jne        loc_14962

000000000001497a         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1497f:
000000000001497f         nop                                                    ; End of unwind block (FDE at 0x1dc5c)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56


                     xgethostname:
0000000000014980         push       r14                                         ; Begin of unwind block (FDE at 0x1dc7c), CODE XREF=main+4378
0000000000014982         push       r13
0000000000014984         movabs     r13, 0x1000401001
000000000001498e         push       r12
0000000000014990         push       rbp
0000000000014991         push       rbx
0000000000014992         xor        ebx, ebx
0000000000014994         sub        rsp, 0x10
0000000000014998         mov        rax, qword [fs:0x28]
00000000000149a1         mov        qword [rsp+0x38+var_30], rax
00000000000149a6         xor        eax, eax
00000000000149a8         mov        qword [rsp+0x38+var_38], 0x22
00000000000149b0         mov        r12, rsp
00000000000149b3         call       j___errno_location                          ; __errno_location
00000000000149b8         mov        rbp, rax
00000000000149bb         nop        dword [rax+rax]

                     loc_149c0:
00000000000149c0         mov        rdi, rbx                                    ; CODE XREF=xgethostname+118, xgethostname+196
00000000000149c3         mov        rsi, r12
00000000000149c6         call       x2realloc                                   ; x2realloc
00000000000149cb         mov        rsi, qword [rsp+0x38+var_38]
00000000000149cf         mov        rdi, rax                                    ; argument "__name" for method j_gethostname
00000000000149d2         mov        rbx, rax
00000000000149d5         lea        r14, qword [rax+rsi-2]
00000000000149da         sub        rsi, 0x1                                    ; argument "__len" for method j_gethostname
00000000000149de         mov        byte [r14], 0x0
00000000000149e2         mov        dword [rbp], 0x0
00000000000149e9         call       j_gethostname                               ; gethostname
00000000000149ee         test       eax, eax
00000000000149f0         jne        loc_14a20

00000000000149f2         cmp        byte [r14], 0x0
00000000000149f6         jne        loc_149c0

                     loc_149f8:
00000000000149f8         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=xgethostname+184
00000000000149fd         xor        rdx, qword [fs:0x28]
0000000000014a06         mov        rax, rbx
0000000000014a09         jne        loc_14a4c

0000000000014a0b         add        rsp, 0x10
0000000000014a0f         pop        rbx
0000000000014a10         pop        rbp
0000000000014a11         pop        r12
0000000000014a13         pop        r13
0000000000014a15         pop        r14
0000000000014a17         ret
                        ; endp
0000000000014a18         align      32

                     loc_14a20:
0000000000014a20         mov        r14d, dword [rbp]                           ; CODE XREF=xgethostname+112
0000000000014a24         cmp        r14d, 0x24
0000000000014a28         jbe        loc_14a40

                     loc_14a2a:
0000000000014a2a         mov        rdi, rbx                                    ; CODE XREF=xgethostname+202
0000000000014a2d         xor        ebx, ebx
0000000000014a2f         call       sub_3880                                    ; sub_3880
0000000000014a34         mov        dword [rbp], r14d
0000000000014a38         jmp        loc_149f8
0000000000014a3a         align      64

                     loc_14a40:
0000000000014a40         bt         r13, r14                                    ; CODE XREF=xgethostname+168
0000000000014a44         jb         loc_149c0

0000000000014a4a         jmp        loc_14a2a

                     loc_14a4c:
0000000000014a4c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=xgethostname+137
                        ; endp
0000000000014a51         align      32                                          ; End of unwind block (FDE at 0x1dc7c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80


                     xstrtoul:
0000000000014a60         push       r15                                         ; Begin of unwind block (FDE at 0x1dcc4), CODE XREF=main+558
0000000000014a62         push       r14
0000000000014a64         push       r13
0000000000014a66         push       r12
0000000000014a68         push       rbp
0000000000014a69         push       rbx
0000000000014a6a         sub        rsp, 0x28
0000000000014a6e         mov        rax, qword [fs:0x28]
0000000000014a77         mov        qword [rsp+0x58+var_40], rax
0000000000014a7c         xor        eax, eax
0000000000014a7e         cmp        edx, 0x24
0000000000014a81         ja         loc_14de5

0000000000014a87         lea        rax, qword [rsp+0x58+var_48]
0000000000014a8c         mov        r15, rsi
0000000000014a8f         test       rsi, rsi
0000000000014a92         mov        rbp, rdi
0000000000014a95         mov        dword [rsp+0x58+var_50], edx
0000000000014a99         mov        r14, rcx
0000000000014a9c         mov        r13, r8
0000000000014a9f         cmove      r15, rax
0000000000014aa3         call       j___errno_location                          ; __errno_location
0000000000014aa8         mov        dword [rax], 0x0
0000000000014aae         mov        r12, rax
0000000000014ab1         movzx      ebx, byte [rbp]
0000000000014ab5         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000014aba         mov        edx, dword [rsp+0x58+var_50]
0000000000014abe         mov        rsi, qword [rax]
0000000000014ac1         mov        rax, rbp
0000000000014ac4         jmp        loc_14ad7
0000000000014ac6         align      16

                     loc_14ad0:
0000000000014ad0         add        rax, 0x1                                    ; CODE XREF=xstrtoul+127
0000000000014ad4         movzx      ebx, byte [rax]

                     loc_14ad7:
0000000000014ad7         movzx      ecx, bl                                     ; CODE XREF=xstrtoul+100
0000000000014ada         test       byte [rsi+rcx*2+1], 0x20
0000000000014adf         jne        loc_14ad0

0000000000014ae1         cmp        bl, 0x2d
0000000000014ae4         je         loc_14b38

0000000000014ae6         mov        rsi, r15                                    ; argument "__endptr" for method j_strtoul
0000000000014ae9         mov        rdi, rbp                                    ; argument "__nptr" for method j_strtoul
0000000000014aec         call       j_strtoul                                   ; strtoul
0000000000014af1         mov        rcx, qword [r15]
0000000000014af4         mov        rbx, rax
0000000000014af7         cmp        rcx, rbp
0000000000014afa         je         loc_14b28

0000000000014afc         mov        eax, dword [r12]
0000000000014b00         test       eax, eax
0000000000014b02         je         loc_14b68

0000000000014b04         cmp        eax, 0x22
0000000000014b07         mov        ebp, 0x1
0000000000014b0c         jne        loc_14b38

                     loc_14b0e:
0000000000014b0e         test       r13, r13                                    ; CODE XREF=xstrtoul+266
0000000000014b11         je         loc_14b1c

0000000000014b13         movzx      r12d, byte [rcx]
0000000000014b17         test       r12b, r12b
0000000000014b1a         jne        loc_14b97

                     loc_14b1c:
0000000000014b1c         mov        qword [r14], rbx                            ; CODE XREF=xstrtoul+177
0000000000014b1f         jmp        loc_14b3d
0000000000014b21         align      8

                     loc_14b28:
0000000000014b28         test       r13, r13                                    ; CODE XREF=xstrtoul+154
0000000000014b2b         mov        qword [rsp+0x58+var_50], rcx
0000000000014b30         jne        loc_14b70

0000000000014b32         nop        word [rax+rax]

                     loc_14b38:
0000000000014b38         mov        ebp, 0x4                                    ; CODE XREF=xstrtoul+132, xstrtoul+172, xstrtoul+280, xstrtoul+309

                     loc_14b3d:
0000000000014b3d         mov        rdi, qword [rsp+0x58+var_40]                ; CODE XREF=xstrtoul+191, xstrtoul+535, xstrtoul+546
0000000000014b42         xor        rdi, qword [fs:0x28]
0000000000014b4b         mov        eax, ebp
0000000000014b4d         jne        loc_14de0

0000000000014b53         add        rsp, 0x28
0000000000014b57         pop        rbx
0000000000014b58         pop        rbp
0000000000014b59         pop        r12
0000000000014b5b         pop        r13
0000000000014b5d         pop        r14
0000000000014b5f         pop        r15
0000000000014b61         ret
                        ; endp
0000000000014b62         align      8

                     loc_14b68:
0000000000014b68         xor        ebp, ebp                                    ; CODE XREF=xstrtoul+162
0000000000014b6a         jmp        loc_14b0e
0000000000014b6c         align      16

                     loc_14b70:
0000000000014b70         movzx      r12d, byte [rbp]                            ; CODE XREF=xstrtoul+208
0000000000014b75         test       r12b, r12b
0000000000014b78         je         loc_14b38

0000000000014b7a         movsx      esi, r12b                                   ; argument "__c" for method j_strchr
0000000000014b7e         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000014b81         xor        ebp, ebp
0000000000014b83         call       j_strchr                                    ; strchr
0000000000014b88         test       rax, rax
0000000000014b8b         mov        ebx, 0x1
0000000000014b90         mov        rcx, qword [rsp+0x58+var_50]
0000000000014b95         je         loc_14b38

                     loc_14b97:
0000000000014b97         movsx      esi, r12b                                   ; argument "__c" for method j_strchr, CODE XREF=xstrtoul+186
0000000000014b9b         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000014b9e         mov        qword [rsp+0x58+var_50], rcx
0000000000014ba3         call       j_strchr                                    ; strchr
0000000000014ba8         test       rax, rax
0000000000014bab         mov        rcx, qword [rsp+0x58+var_50]
0000000000014bb0         je         loc_14c7c

0000000000014bb6         lea        eax, dword [r12-0x45]
0000000000014bbb         cmp        al, 0x2f
0000000000014bbd         ja         loc_14c10

0000000000014bbf         movabs     rdx, 0x814400308945
0000000000014bc9         bt         rdx, rax
0000000000014bcd         jae        loc_14c10

0000000000014bcf         mov        esi, 0x30                                   ; argument "__c" for method j_strchr
0000000000014bd4         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000014bd7         mov        qword [rsp+0x58+var_50], rcx
0000000000014bdc         call       j_strchr                                    ; strchr
0000000000014be1         test       rax, rax
0000000000014be4         mov        rcx, qword [rsp+0x58+var_50]
0000000000014be9         je         loc_14c10

0000000000014beb         movzx      eax, byte [rcx+1]
0000000000014bef         cmp        al, 0x44
0000000000014bf1         je         loc_14bff

0000000000014bf3         cmp        al, 0x69
0000000000014bf5         je         loc_14dc8

0000000000014bfb         cmp        al, 0x42
0000000000014bfd         jne        loc_14c10

                     loc_14bff:
0000000000014bff         mov        edi, 0x2                                    ; CODE XREF=xstrtoul+401
0000000000014c04         mov        esi, 0x3e8
0000000000014c09         jmp        loc_14c1a
0000000000014c0b         align      16

                     loc_14c10:
0000000000014c10         mov        edi, 0x1                                    ; CODE XREF=xstrtoul+349, xstrtoul+365, xstrtoul+393, xstrtoul+413
0000000000014c15         mov        esi, 0x400

                     loc_14c1a:
0000000000014c1a         sub        r12d, 0x42                                  ; CODE XREF=xstrtoul+425, xstrtoul+891
0000000000014c1e         cmp        r12b, 0x35
0000000000014c22         ja         loc_14c7c

0000000000014c24         lea        rdx, qword [switch_table_1aba8]             ; switch_table_1aba8
0000000000014c2b         movzx      r12d, r12b
0000000000014c2f         movsxd     rax, dword [rdx+r12*4]
0000000000014c33         add        rax, rdx
0000000000014c36         jmp        rax                                         ; switch statement using table at 0x1aba8, with 54 cases, 0x14c38,0x14c60,0x14c7c,0x14c87,0x14c9d,0x14cb4,0x14cda,0x14cff,0x14d1f,0x14d40,0x14d63,0x14d86,0x14d9c

                     loc_14c38:
0000000000014c38         mov        rax, rbx                                    ; case 43, CODE XREF=xstrtoul+470
0000000000014c3b         mul        rsi
0000000000014c3e         jo         loc_14e31

0000000000014c44         xor        r8d, r8d

                     loc_14c47:
0000000000014c47         mul        rsi                                         ; CODE XREF=xstrtoul+846, xstrtoul+862, xstrtoul+987
0000000000014c4a         jo         loc_14e22

0000000000014c50         mov        rbx, rax

                     loc_14c53:
0000000000014c53         or         ebp, r8d                                    ; CODE XREF=xstrtoul+972
0000000000014c56         nop        word [cs:rax+rax]

                     loc_14c60:
0000000000014c60         movsxd     rdi, edi                                    ; case 33, CODE XREF=xstrtoul+470, xstrtoul+571, xstrtoul+594, xstrtoul+632, xstrtoul+712, xstrtoul+727, xstrtoul+823
0000000000014c63         mov        eax, ebp
0000000000014c65         add        rcx, rdi
0000000000014c68         or         eax, 0x2
0000000000014c6b         mov        qword [r15], rcx
0000000000014c6e         cmp        byte [rcx], 0x0
0000000000014c71         mov        qword [r14], rbx
0000000000014c74         cmovne     ebp, eax
0000000000014c77         jmp        loc_14b3d

                     loc_14c7c:
0000000000014c7c         mov        qword [r14], rbx                            ; case 52, CODE XREF=xstrtoul+336, xstrtoul+450, xstrtoul+470
0000000000014c7f         or         ebp, 0x2
0000000000014c82         jmp        loc_14b3d

                     loc_14c87:
0000000000014c87         mov        edx, 0x2                                    ; case 53, CODE XREF=xstrtoul+470
0000000000014c8c         mov        rax, rdx
0000000000014c8f         mul        rbx
0000000000014c92         jo         loc_14d2e

0000000000014c98         add        rbx, rbx
0000000000014c9b         jmp        loc_14c60

                     loc_14c9d:
0000000000014c9d         mov        edx, 0x200                                  ; case 32, CODE XREF=xstrtoul+470
0000000000014ca2         mov        rax, rdx
0000000000014ca5         mul        rbx
0000000000014ca8         jo         loc_14d2e

0000000000014cae         shl        rbx, 0x9
0000000000014cb2         jmp        loc_14c60

                     loc_14cb4:
0000000000014cb4         mov        r8d, 0x7                                    ; case 24, CODE XREF=xstrtoul+470
0000000000014cba         xor        r9d, r9d
0000000000014cbd         nop        dword [rax]

                     loc_14cc0:
0000000000014cc0         mov        rax, rbx                                    ; CODE XREF=xstrtoul+627
0000000000014cc3         mul        rsi
0000000000014cc6         mov        rbx, rax
0000000000014cc9         jo         loc_14e5e

                     loc_14ccf:
0000000000014ccf         sub        r8d, 0x1                                    ; CODE XREF=xstrtoul+1032
0000000000014cd3         jne        loc_14cc0

                     loc_14cd5:
0000000000014cd5         or         ebp, r9d                                    ; CODE XREF=xstrtoul+669, xstrtoul+701, xstrtoul+766, xstrtoul+801
0000000000014cd8         jmp        loc_14c60

                     loc_14cda:
0000000000014cda         mov        r8d, 0x8                                    ; case 23, CODE XREF=xstrtoul+470
0000000000014ce0         xor        r9d, r9d
0000000000014ce3         nop        dword [rax+rax]

                     loc_14ce8:
0000000000014ce8         mov        rax, rbx                                    ; CODE XREF=xstrtoul+667
0000000000014ceb         mul        rsi
0000000000014cee         mov        rbx, rax
0000000000014cf1         jo         loc_14e40

                     loc_14cf7:
0000000000014cf7         sub        r8d, 0x1                                    ; CODE XREF=xstrtoul+1002
0000000000014cfb         jne        loc_14ce8

0000000000014cfd         jmp        loc_14cd5

                     loc_14cff:
0000000000014cff         mov        r8d, 0x4                                    ; case 50, CODE XREF=xstrtoul+470
0000000000014d05         xor        r9d, r9d

                     loc_14d08:
0000000000014d08         mov        rax, rbx                                    ; CODE XREF=xstrtoul+699
0000000000014d0b         mul        rsi
0000000000014d0e         mov        rbx, rax
0000000000014d11         jo         loc_14e13

                     loc_14d17:
0000000000014d17         sub        r8d, 0x1                                    ; CODE XREF=xstrtoul+957
0000000000014d1b         jne        loc_14d08

0000000000014d1d         jmp        loc_14cd5

                     loc_14d1f:
0000000000014d1f         mov        rax, rbx                                    ; case 41, CODE XREF=xstrtoul+470
0000000000014d22         mul        rsi
0000000000014d25         mov        rbx, rax
0000000000014d28         jno        loc_14c60

                     loc_14d2e:
0000000000014d2e         mov        ebp, 0x1                                    ; CODE XREF=xstrtoul+562, xstrtoul+584, xstrtoul+817
0000000000014d33         or         rbx, 0xffffffffffffffff
0000000000014d37         jmp        loc_14c60
0000000000014d3c         align      64

                     loc_14d40:
0000000000014d40         mov        r8d, 0x5                                    ; case 14, CODE XREF=xstrtoul+470
0000000000014d46         xor        r9d, r9d

                     loc_14d49:
0000000000014d49         mov        rax, rbx                                    ; CODE XREF=xstrtoul+764
0000000000014d4c         mul        rsi
0000000000014d4f         mov        rbx, rax
0000000000014d52         jo         loc_14e4f

                     loc_14d58:
0000000000014d58         sub        r8d, 0x1                                    ; CODE XREF=xstrtoul+1017
0000000000014d5c         jne        loc_14d49

0000000000014d5e         jmp        loc_14cd5

                     loc_14d63:
0000000000014d63         mov        r8d, 0x6                                    ; case 3, CODE XREF=xstrtoul+470
0000000000014d69         xor        r9d, r9d

                     loc_14d6c:
0000000000014d6c         mov        rax, rbx                                    ; CODE XREF=xstrtoul+799
0000000000014d6f         mul        rsi
0000000000014d72         mov        rbx, rax
0000000000014d75         jo         loc_14e04

                     loc_14d7b:
0000000000014d7b         sub        r8d, 0x1                                    ; CODE XREF=xstrtoul+942
0000000000014d7f         jne        loc_14d6c

0000000000014d81         jmp        loc_14cd5

                     loc_14d86:
0000000000014d86         mov        edx, 0x400                                  ; case 0, CODE XREF=xstrtoul+470
0000000000014d8b         mov        rax, rdx
0000000000014d8e         mul        rbx
0000000000014d91         jo         loc_14d2e

0000000000014d93         shl        rbx, 0xa
0000000000014d97         jmp        loc_14c60

                     loc_14d9c:
0000000000014d9c         mov        rax, rbx                                    ; case 37, CODE XREF=xstrtoul+470
0000000000014d9f         mul        rsi
0000000000014da2         jo         loc_14e6d

0000000000014da8         xor        r8d, r8d

                     loc_14dab:
0000000000014dab         mul        rsi                                         ; CODE XREF=xstrtoul+1047
0000000000014dae         jno        loc_14c47

0000000000014db4         mov        r8d, 0x1
0000000000014dba         or         rax, 0xffffffffffffffff
0000000000014dbe         jmp        loc_14c47
0000000000014dc3         align      8

                     loc_14dc8:
0000000000014dc8         xor        edi, edi                                    ; CODE XREF=xstrtoul+405
0000000000014dca         cmp        byte [rcx+2], 0x42
0000000000014dce         mov        esi, 0x400
0000000000014dd3         sete       dil
0000000000014dd7         lea        edi, dword [rdi+rdi+1]
0000000000014ddb         jmp        loc_14c1a

                     loc_14de0:
0000000000014de0         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=xstrtoul+237
                        ; endp

                     loc_14de5:
0000000000014de5         lea        rcx, qword [__PRETTY_FUNCTION__.4162]       ; argument "__function" for method j___assert_fail, "xstrtoul", CODE XREF=xstrtoul+33
0000000000014dec         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/xstrtol.c"
0000000000014df3         lea        rdi, qword [a0StrtolbaseStr]                ; argument "__assertion" for method j___assert_fail, "0 <= strtol_base && strtol_base <= 36"
0000000000014dfa         mov        edx, 0x54                                   ; argument "__line" for method j___assert_fail
0000000000014dff         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_14e04:
0000000000014e04         mov        r9d, 0x1                                    ; CODE XREF=xstrtoul+789
0000000000014e0a         or         rbx, 0xffffffffffffffff
0000000000014e0e         jmp        loc_14d7b

                     loc_14e13:
0000000000014e13         mov        r9d, 0x1                                    ; CODE XREF=xstrtoul+689
0000000000014e19         or         rbx, 0xffffffffffffffff
0000000000014e1d         jmp        loc_14d17

                     loc_14e22:
0000000000014e22         mov        r8d, 0x1                                    ; CODE XREF=xstrtoul+490
0000000000014e28         or         rbx, 0xffffffffffffffff
0000000000014e2c         jmp        loc_14c53

                     loc_14e31:
0000000000014e31         or         rax, 0xffffffffffffffff                     ; CODE XREF=xstrtoul+478
0000000000014e35         mov        r8d, 0x1
0000000000014e3b         jmp        loc_14c47

                     loc_14e40:
0000000000014e40         mov        r9d, 0x1                                    ; CODE XREF=xstrtoul+657
0000000000014e46         or         rbx, 0xffffffffffffffff
0000000000014e4a         jmp        loc_14cf7

                     loc_14e4f:
0000000000014e4f         mov        r9d, 0x1                                    ; CODE XREF=xstrtoul+754
0000000000014e55         or         rbx, 0xffffffffffffffff
0000000000014e59         jmp        loc_14d58

                     loc_14e5e:
0000000000014e5e         mov        r9d, 0x1                                    ; CODE XREF=xstrtoul+617
0000000000014e64         or         rbx, 0xffffffffffffffff
0000000000014e68         jmp        loc_14ccf

                     loc_14e6d:
0000000000014e6d         mov        r8d, 0x1                                    ; CODE XREF=xstrtoul+834
0000000000014e73         or         rax, 0xffffffffffffffff
0000000000014e77         jmp        loc_14dab
0000000000014e7c         align      128                                         ; End of unwind block (FDE at 0x1dcc4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_31: int8_t, -49
        ;    var_32: int8_t, -50


                     xstrtol_fatal:
0000000000014e80         push       r13                                         ; Begin of unwind block (FDE at 0x1dd14), CODE XREF=main+6586
0000000000014e82         push       r12
0000000000014e84         mov        r10d, esi
0000000000014e87         push       rbp
0000000000014e88         push       rbx
0000000000014e89         mov        r12, r8
0000000000014e8c         sub        rsp, 0x18
0000000000014e90         mov        rax, qword [fs:0x28]
0000000000014e99         mov        qword [rsp+0x38+var_30], rax
0000000000014e9e         xor        eax, eax
0000000000014ea0         cmp        edi, 0x3
0000000000014ea3         mov        ebp, dword [exit_failure]                   ; exit_failure
0000000000014ea9         ja         loc_14f04

0000000000014eab         cmp        edi, 0x2
0000000000014eae         jae        loc_14efb

0000000000014eb0         sub        edi, 0x1
0000000000014eb3         lea        rsi, qword [aSsArgumentSToo]                ; "%s%s argument '%s' too large"
0000000000014eba         jne        loc_14ef6

                     loc_14ebc:
0000000000014ebc         test       r10d, r10d                                  ; CODE XREF=xstrtol_fatal+130, xstrtol_fatal+142
0000000000014ebf         movsxd     rax, r10d
0000000000014ec2         js         loc_14f12

0000000000014ec4         shl        rax, 0x5
0000000000014ec8         lea        rbx, qword [aSsArgumentSToo+29]             ; 0x1acc1
0000000000014ecf         mov        r13, qword [rcx+rax]

                     loc_14ed3:
0000000000014ed3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext, CODE XREF=xstrtol_fatal+170
0000000000014ed8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000014eda         call       j_dcgettext                                 ; dcgettext
0000000000014edf         mov        r9, r12
0000000000014ee2         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000014ee5         mov        r8, r13
0000000000014ee8         mov        rcx, rbx
0000000000014eeb         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000014eed         mov        edi, ebp                                    ; argument "__status" for method j_error
0000000000014eef         xor        eax, eax
0000000000014ef1         call       j_error                                     ; error

                     loc_14ef6:
0000000000014ef6         call       j_abort                                     ; abort, CODE XREF=xstrtol_fatal+58, xstrtol_fatal+144
                        ; endp

                     loc_14efb:
0000000000014efb         lea        rsi, qword [aInvalidSuffixI]                ; "invalid suffix in %s%s argument '%s'", CODE XREF=xstrtol_fatal+46
0000000000014f02         jmp        loc_14ebc

                     loc_14f04:
0000000000014f04         cmp        edi, 0x4                                    ; CODE XREF=xstrtol_fatal+41
0000000000014f07         lea        rsi, qword [aInvalidSsArgum]                ; "invalid %s%s argument '%s'"
0000000000014f0e         je         loc_14ebc

0000000000014f10         jmp        loc_14ef6

                     loc_14f12:
0000000000014f12         lea        rbx, qword [aSsArgumentSToo+29]             ; 0x1acc1, CODE XREF=xstrtol_fatal+66
0000000000014f19         mov        byte [rsp+0x38+var_32], dl
0000000000014f1d         mov        byte [rsp+0x38+var_31], 0x0
0000000000014f22         lea        r13, qword [rsp+0x38+var_32]
0000000000014f27         sub        rbx, rax
0000000000014f2a         jmp        loc_14ed3
0000000000014f2c         align      16                                          ; End of unwind block (FDE at 0x1dd14)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80


                     xstrtoumax:
0000000000014f30         push       r15                                         ; Begin of unwind block (FDE at 0x1dd3c), CODE XREF=set_line_length+34, human_options+170, xnumtoumax+53
0000000000014f32         push       r14
0000000000014f34         push       r13
0000000000014f36         push       r12
0000000000014f38         push       rbp
0000000000014f39         push       rbx
0000000000014f3a         sub        rsp, 0x28
0000000000014f3e         mov        rax, qword [fs:0x28]
0000000000014f47         mov        qword [rsp+0x58+var_40], rax
0000000000014f4c         xor        eax, eax
0000000000014f4e         cmp        edx, 0x24
0000000000014f51         ja         loc_152b5

0000000000014f57         lea        rax, qword [rsp+0x58+var_48]
0000000000014f5c         mov        r15, rsi
0000000000014f5f         test       rsi, rsi
0000000000014f62         mov        rbp, rdi
0000000000014f65         mov        dword [rsp+0x58+var_50], edx
0000000000014f69         mov        r14, rcx
0000000000014f6c         mov        r13, r8
0000000000014f6f         cmove      r15, rax
0000000000014f73         call       j___errno_location                          ; __errno_location
0000000000014f78         mov        dword [rax], 0x0
0000000000014f7e         mov        r12, rax
0000000000014f81         movzx      ebx, byte [rbp]
0000000000014f85         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000014f8a         mov        edx, dword [rsp+0x58+var_50]
0000000000014f8e         mov        rsi, qword [rax]
0000000000014f91         mov        rax, rbp
0000000000014f94         jmp        loc_14fa7
0000000000014f96         align      32

                     loc_14fa0:
0000000000014fa0         add        rax, 0x1                                    ; CODE XREF=xstrtoumax+127
0000000000014fa4         movzx      ebx, byte [rax]

                     loc_14fa7:
0000000000014fa7         movzx      ecx, bl                                     ; CODE XREF=xstrtoumax+100
0000000000014faa         test       byte [rsi+rcx*2+1], 0x20
0000000000014faf         jne        loc_14fa0

0000000000014fb1         cmp        bl, 0x2d
0000000000014fb4         je         loc_15008

0000000000014fb6         xor        ecx, ecx
0000000000014fb8         mov        rsi, r15
0000000000014fbb         mov        rdi, rbp
0000000000014fbe         call       j___strtoul_internal                        ; __strtoul_internal
0000000000014fc3         mov        rcx, qword [r15]
0000000000014fc6         mov        rbx, rax
0000000000014fc9         cmp        rcx, rbp
0000000000014fcc         je         loc_14ff8

0000000000014fce         mov        eax, dword [r12]
0000000000014fd2         test       eax, eax
0000000000014fd4         je         loc_15038

0000000000014fd6         cmp        eax, 0x22
0000000000014fd9         mov        ebp, 0x1
0000000000014fde         jne        loc_15008

                     loc_14fe0:
0000000000014fe0         test       r13, r13                                    ; CODE XREF=xstrtoumax+266
0000000000014fe3         je         loc_14fee

0000000000014fe5         movzx      r12d, byte [rcx]
0000000000014fe9         test       r12b, r12b
0000000000014fec         jne        loc_15067

                     loc_14fee:
0000000000014fee         mov        qword [r14], rbx                            ; CODE XREF=xstrtoumax+179
0000000000014ff1         jmp        loc_1500d
0000000000014ff3         align      8

                     loc_14ff8:
0000000000014ff8         test       r13, r13                                    ; CODE XREF=xstrtoumax+156
0000000000014ffb         mov        qword [rsp+0x58+var_50], rcx
0000000000015000         jne        loc_15040

0000000000015002         nop        word [rax+rax]

                     loc_15008:
0000000000015008         mov        ebp, 0x4                                    ; CODE XREF=xstrtoumax+132, xstrtoumax+174, xstrtoumax+280, xstrtoumax+309

                     loc_1500d:
000000000001500d         mov        rdi, qword [rsp+0x58+var_40]                ; CODE XREF=xstrtoumax+193, xstrtoumax+535, xstrtoumax+546
0000000000015012         xor        rdi, qword [fs:0x28]
000000000001501b         mov        eax, ebp
000000000001501d         jne        loc_152b0

0000000000015023         add        rsp, 0x28
0000000000015027         pop        rbx
0000000000015028         pop        rbp
0000000000015029         pop        r12
000000000001502b         pop        r13
000000000001502d         pop        r14
000000000001502f         pop        r15
0000000000015031         ret
                        ; endp
0000000000015032         align      8

                     loc_15038:
0000000000015038         xor        ebp, ebp                                    ; CODE XREF=xstrtoumax+164
000000000001503a         jmp        loc_14fe0
000000000001503c         align      64

                     loc_15040:
0000000000015040         movzx      r12d, byte [rbp]                            ; CODE XREF=xstrtoumax+208
0000000000015045         test       r12b, r12b
0000000000015048         je         loc_15008

000000000001504a         movsx      esi, r12b                                   ; argument "__c" for method j_strchr
000000000001504e         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000015051         xor        ebp, ebp
0000000000015053         call       j_strchr                                    ; strchr
0000000000015058         test       rax, rax
000000000001505b         mov        ebx, 0x1
0000000000015060         mov        rcx, qword [rsp+0x58+var_50]
0000000000015065         je         loc_15008

                     loc_15067:
0000000000015067         movsx      esi, r12b                                   ; argument "__c" for method j_strchr, CODE XREF=xstrtoumax+188
000000000001506b         mov        rdi, r13                                    ; argument "__s" for method j_strchr
000000000001506e         mov        qword [rsp+0x58+var_50], rcx
0000000000015073         call       j_strchr                                    ; strchr
0000000000015078         test       rax, rax
000000000001507b         mov        rcx, qword [rsp+0x58+var_50]
0000000000015080         je         loc_1514c

0000000000015086         lea        eax, dword [r12-0x45]
000000000001508b         cmp        al, 0x2f
000000000001508d         ja         loc_150e0

000000000001508f         movabs     rdx, 0x814400308945
0000000000015099         bt         rdx, rax
000000000001509d         jae        loc_150e0

000000000001509f         mov        esi, 0x30                                   ; argument "__c" for method j_strchr
00000000000150a4         mov        rdi, r13                                    ; argument "__s" for method j_strchr
00000000000150a7         mov        qword [rsp+0x58+var_50], rcx
00000000000150ac         call       j_strchr                                    ; strchr
00000000000150b1         test       rax, rax
00000000000150b4         mov        rcx, qword [rsp+0x58+var_50]
00000000000150b9         je         loc_150e0

00000000000150bb         movzx      eax, byte [rcx+1]
00000000000150bf         cmp        al, 0x44
00000000000150c1         je         loc_150cf

00000000000150c3         cmp        al, 0x69
00000000000150c5         je         loc_15298

00000000000150cb         cmp        al, 0x42
00000000000150cd         jne        loc_150e0

                     loc_150cf:
00000000000150cf         mov        edi, 0x2                                    ; CODE XREF=xstrtoumax+401
00000000000150d4         mov        esi, 0x3e8
00000000000150d9         jmp        loc_150ea
00000000000150db         align      32

                     loc_150e0:
00000000000150e0         mov        edi, 0x1                                    ; CODE XREF=xstrtoumax+349, xstrtoumax+365, xstrtoumax+393, xstrtoumax+413
00000000000150e5         mov        esi, 0x400

                     loc_150ea:
00000000000150ea         sub        r12d, 0x42                                  ; CODE XREF=xstrtoumax+425, xstrtoumax+891
00000000000150ee         cmp        r12b, 0x35
00000000000150f2         ja         loc_1514c

00000000000150f4         lea        rdx, qword [switch_table_1acf0]             ; switch_table_1acf0
00000000000150fb         movzx      r12d, r12b
00000000000150ff         movsxd     rax, dword [rdx+r12*4]
0000000000015103         add        rax, rdx
0000000000015106         jmp        rax                                         ; switch statement using table at 0x1acf0, with 54 cases, 0x15108,0x15130,0x1514c,0x15157,0x1516d,0x15184,0x151aa,0x151cf,0x151ef,0x15210,0x15233,0x15256,0x1526c

                     loc_15108:
0000000000015108         mov        rax, rbx                                    ; case 43, CODE XREF=xstrtoumax+470
000000000001510b         mul        rsi
000000000001510e         jo         loc_15301

0000000000015114         xor        r8d, r8d

                     loc_15117:
0000000000015117         mul        rsi                                         ; CODE XREF=xstrtoumax+846, xstrtoumax+862, xstrtoumax+987
000000000001511a         jo         loc_152f2

0000000000015120         mov        rbx, rax

                     loc_15123:
0000000000015123         or         ebp, r8d                                    ; CODE XREF=xstrtoumax+972
0000000000015126         nop        word [cs:rax+rax]

                     loc_15130:
0000000000015130         movsxd     rdi, edi                                    ; case 33, CODE XREF=xstrtoumax+470, xstrtoumax+571, xstrtoumax+594, xstrtoumax+632, xstrtoumax+712, xstrtoumax+727, xstrtoumax+823
0000000000015133         mov        eax, ebp
0000000000015135         add        rcx, rdi
0000000000015138         or         eax, 0x2
000000000001513b         mov        qword [r15], rcx
000000000001513e         cmp        byte [rcx], 0x0
0000000000015141         mov        qword [r14], rbx
0000000000015144         cmovne     ebp, eax
0000000000015147         jmp        loc_1500d

                     loc_1514c:
000000000001514c         mov        qword [r14], rbx                            ; case 52, CODE XREF=xstrtoumax+336, xstrtoumax+450, xstrtoumax+470
000000000001514f         or         ebp, 0x2
0000000000015152         jmp        loc_1500d

                     loc_15157:
0000000000015157         mov        edx, 0x2                                    ; case 53, CODE XREF=xstrtoumax+470
000000000001515c         mov        rax, rdx
000000000001515f         mul        rbx
0000000000015162         jo         loc_151fe

0000000000015168         add        rbx, rbx
000000000001516b         jmp        loc_15130

                     loc_1516d:
000000000001516d         mov        edx, 0x200                                  ; case 32, CODE XREF=xstrtoumax+470
0000000000015172         mov        rax, rdx
0000000000015175         mul        rbx
0000000000015178         jo         loc_151fe

000000000001517e         shl        rbx, 0x9
0000000000015182         jmp        loc_15130

                     loc_15184:
0000000000015184         mov        r8d, 0x7                                    ; case 24, CODE XREF=xstrtoumax+470
000000000001518a         xor        r9d, r9d
000000000001518d         nop        dword [rax]

                     loc_15190:
0000000000015190         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+627
0000000000015193         mul        rsi
0000000000015196         mov        rbx, rax
0000000000015199         jo         loc_1532e

                     loc_1519f:
000000000001519f         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1032
00000000000151a3         jne        loc_15190

                     loc_151a5:
00000000000151a5         or         ebp, r9d                                    ; CODE XREF=xstrtoumax+669, xstrtoumax+701, xstrtoumax+766, xstrtoumax+801
00000000000151a8         jmp        loc_15130

                     loc_151aa:
00000000000151aa         mov        r8d, 0x8                                    ; case 23, CODE XREF=xstrtoumax+470
00000000000151b0         xor        r9d, r9d
00000000000151b3         nop        dword [rax+rax]

                     loc_151b8:
00000000000151b8         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+667
00000000000151bb         mul        rsi
00000000000151be         mov        rbx, rax
00000000000151c1         jo         loc_15310

                     loc_151c7:
00000000000151c7         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1002
00000000000151cb         jne        loc_151b8

00000000000151cd         jmp        loc_151a5

                     loc_151cf:
00000000000151cf         mov        r8d, 0x4                                    ; case 50, CODE XREF=xstrtoumax+470
00000000000151d5         xor        r9d, r9d

                     loc_151d8:
00000000000151d8         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+699
00000000000151db         mul        rsi
00000000000151de         mov        rbx, rax
00000000000151e1         jo         loc_152e3

                     loc_151e7:
00000000000151e7         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+957
00000000000151eb         jne        loc_151d8

00000000000151ed         jmp        loc_151a5

                     loc_151ef:
00000000000151ef         mov        rax, rbx                                    ; case 41, CODE XREF=xstrtoumax+470
00000000000151f2         mul        rsi
00000000000151f5         mov        rbx, rax
00000000000151f8         jno        loc_15130

                     loc_151fe:
00000000000151fe         mov        ebp, 0x1                                    ; CODE XREF=xstrtoumax+562, xstrtoumax+584, xstrtoumax+817
0000000000015203         or         rbx, 0xffffffffffffffff
0000000000015207         jmp        loc_15130
000000000001520c         align      16

                     loc_15210:
0000000000015210         mov        r8d, 0x5                                    ; case 14, CODE XREF=xstrtoumax+470
0000000000015216         xor        r9d, r9d

                     loc_15219:
0000000000015219         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+764
000000000001521c         mul        rsi
000000000001521f         mov        rbx, rax
0000000000015222         jo         loc_1531f

                     loc_15228:
0000000000015228         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1017
000000000001522c         jne        loc_15219

000000000001522e         jmp        loc_151a5

                     loc_15233:
0000000000015233         mov        r8d, 0x6                                    ; case 3, CODE XREF=xstrtoumax+470
0000000000015239         xor        r9d, r9d

                     loc_1523c:
000000000001523c         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+799
000000000001523f         mul        rsi
0000000000015242         mov        rbx, rax
0000000000015245         jo         loc_152d4

                     loc_1524b:
000000000001524b         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+942
000000000001524f         jne        loc_1523c

0000000000015251         jmp        loc_151a5

                     loc_15256:
0000000000015256         mov        edx, 0x400                                  ; case 0, CODE XREF=xstrtoumax+470
000000000001525b         mov        rax, rdx
000000000001525e         mul        rbx
0000000000015261         jo         loc_151fe

0000000000015263         shl        rbx, 0xa
0000000000015267         jmp        loc_15130

                     loc_1526c:
000000000001526c         mov        rax, rbx                                    ; case 37, CODE XREF=xstrtoumax+470
000000000001526f         mul        rsi
0000000000015272         jo         loc_1533d

0000000000015278         xor        r8d, r8d

                     loc_1527b:
000000000001527b         mul        rsi                                         ; CODE XREF=xstrtoumax+1047
000000000001527e         jno        loc_15117

0000000000015284         mov        r8d, 0x1
000000000001528a         or         rax, 0xffffffffffffffff
000000000001528e         jmp        loc_15117
0000000000015293         align      8

                     loc_15298:
0000000000015298         xor        edi, edi                                    ; CODE XREF=xstrtoumax+405
000000000001529a         cmp        byte [rcx+2], 0x42
000000000001529e         mov        esi, 0x400
00000000000152a3         sete       dil
00000000000152a7         lea        edi, dword [rdi+rdi+1]
00000000000152ab         jmp        loc_150ea

                     loc_152b0:
00000000000152b0         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=xstrtoumax+237
                        ; endp

                     loc_152b5:
00000000000152b5         lea        rcx, qword [__PRETTY_FUNCTION__.4162_1adc8] ; argument "__function" for method j___assert_fail, "xstrtoumax", CODE XREF=xstrtoumax+33
00000000000152bc         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/xstrtol.c"
00000000000152c3         lea        rdi, qword [a0StrtolbaseStr]                ; argument "__assertion" for method j___assert_fail, "0 <= strtol_base && strtol_base <= 36"
00000000000152ca         mov        edx, 0x54                                   ; argument "__line" for method j___assert_fail
00000000000152cf         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_152d4:
00000000000152d4         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+789
00000000000152da         or         rbx, 0xffffffffffffffff
00000000000152de         jmp        loc_1524b

                     loc_152e3:
00000000000152e3         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+689
00000000000152e9         or         rbx, 0xffffffffffffffff
00000000000152ed         jmp        loc_151e7

                     loc_152f2:
00000000000152f2         mov        r8d, 0x1                                    ; CODE XREF=xstrtoumax+490
00000000000152f8         or         rbx, 0xffffffffffffffff
00000000000152fc         jmp        loc_15123

                     loc_15301:
0000000000015301         or         rax, 0xffffffffffffffff                     ; CODE XREF=xstrtoumax+478
0000000000015305         mov        r8d, 0x1
000000000001530b         jmp        loc_15117

                     loc_15310:
0000000000015310         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+657
0000000000015316         or         rbx, 0xffffffffffffffff
000000000001531a         jmp        loc_151c7

                     loc_1531f:
000000000001531f         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+754
0000000000015325         or         rbx, 0xffffffffffffffff
0000000000015329         jmp        loc_15228

                     loc_1532e:
000000000001532e         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+617
0000000000015334         or         rbx, 0xffffffffffffffff
0000000000015338         jmp        loc_1519f

                     loc_1533d:
000000000001533d         mov        r8d, 0x1                                    ; CODE XREF=xstrtoumax+834
0000000000015343         or         rax, 0xffffffffffffffff
0000000000015347         jmp        loc_1527b
000000000001534c         align      16                                          ; End of unwind block (FDE at 0x1dd3c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
0000000000015350         push       r13                                         ; Begin of unwind block (FDE at 0x1dd8c), CODE XREF=quote_name_buf.constprop.54+615, mbsnwidth+191, sub_12920+534
0000000000015352         push       r12
0000000000015354         mov        r13, rsi
0000000000015357         push       rbp
0000000000015358         push       rbx
0000000000015359         mov        rbx, rdi
000000000001535c         mov        r12, rdx
000000000001535f         sub        rsp, 0x18
0000000000015363         mov        rax, qword [fs:0x28]
000000000001536c         mov        qword [rsp+0x38+var_30], rax
0000000000015371         xor        eax, eax
0000000000015373         lea        rax, qword [rsp+0x38+var_34]
0000000000015378         test       rdi, rdi
000000000001537b         cmove      rbx, rax
000000000001537f         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
0000000000015382         call       j_mbrtowc                                   ; mbrtowc
0000000000015387         cmp        rax, 0xfffffffffffffffd
000000000001538b         mov        rbp, rax
000000000001538e         jbe        loc_153b0

0000000000015390         test       r12, r12
0000000000015393         je         loc_153b0

0000000000015395         xor        edi, edi
0000000000015397         call       hard_locale                                 ; hard_locale
000000000001539c         test       al, al
000000000001539e         jne        loc_153b0

00000000000153a0         movzx      eax, byte [r13]
00000000000153a5         mov        ebp, 0x1
00000000000153aa         mov        dword [rbx], eax
00000000000153ac         nop        dword [rax]

                     loc_153b0:
00000000000153b0         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
00000000000153b5         xor        rdx, qword [fs:0x28]
00000000000153be         mov        rax, rbp
00000000000153c1         jne        loc_153ce

00000000000153c3         add        rsp, 0x18
00000000000153c7         pop        rbx
00000000000153c8         pop        rbp
00000000000153c9         pop        r12
00000000000153cb         pop        r13
00000000000153cd         ret
                        ; endp

                     loc_153ce:
00000000000153ce         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
00000000000153d3         align      32                                          ; End of unwind block (FDE at 0x1dd8c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     print_and_abort:
00000000000153e0         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x1ddcc), argument "msgid" for method j_dcgettext, "memory exhausted"
00000000000153e7         sub        rsp, 0x8
00000000000153eb         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000153f0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000153f2         call       j_dcgettext                                 ; dcgettext
00000000000153f7         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
00000000000153fe         lea        rdx, qword [aSSSn+8]                        ; 0x1a7f0
0000000000015405         mov        rcx, rax
0000000000015408         mov        esi, 0x1
000000000001540d         xor        eax, eax
000000000001540f         call       j___fprintf_chk                             ; __fprintf_chk
0000000000015414         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_exit, exit_failure
000000000001541a         call       j_exit                                      ; exit
                        ; endp
000000000001541f         align      32                                          ; End of unwind block (FDE at 0x1ddcc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     call_chunkfun:
0000000000015420         test       byte [rdi+0x50], 0x1                        ; Begin of unwind block (FDE at 0x1dde0), CODE XREF=_obstack_begin_worker+41, _obstack_newchunk+88
0000000000015424         mov        rax, qword [rdi+0x38]
0000000000015428         jne        loc_15430

000000000001542a         mov        rdi, rsi
000000000001542d         jmp        rax
                        ; endp
000000000001542f         align      16

                     loc_15430:
0000000000015430         mov        rdi, qword [rdi+0x48]                       ; CODE XREF=call_chunkfun+8
0000000000015434         jmp        rax
                        ; endp
0000000000015436         align      64                                          ; End of unwind block (FDE at 0x1dde0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     call_freefun:
0000000000015440         test       byte [rdi+0x50], 0x1                        ; Begin of unwind block (FDE at 0x1ddf4), CODE XREF=_obstack_newchunk+222, _obstack_free+44
0000000000015444         mov        rax, qword [rdi+0x40]
0000000000015448         jne        loc_15450

000000000001544a         mov        rdi, rsi
000000000001544d         jmp        rax
                        ; endp
000000000001544f         align      16

                     loc_15450:
0000000000015450         mov        rdi, qword [rdi+0x48]                       ; CODE XREF=call_freefun+8
0000000000015454         jmp        rax
                        ; endp
0000000000015456         align      32                                          ; End of unwind block (FDE at 0x1ddf4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _obstack_begin_worker:
0000000000015460         test       rdx, rdx                                    ; Begin of unwind block (FDE at 0x1de08), CODE XREF=_obstack_begin+12, _obstack_begin_1+16
0000000000015463         push       r12
0000000000015465         push       rbp
0000000000015466         push       rbx
0000000000015467         mov        rbx, rdi
000000000001546a         je         loc_154d0

000000000001546c         lea        r12, qword [rdx-1]
0000000000015470         mov        rbp, rdx

                     loc_15473:
0000000000015473         test       rsi, rsi                                    ; CODE XREF=_obstack_begin_worker+123
0000000000015476         mov        eax, aSatty                                 ; "satty"
000000000001547b         mov        qword [rbx+0x30], r12
000000000001547f         cmove      rsi, rax
0000000000015483         mov        rdi, rbx
0000000000015486         mov        qword [rbx], rsi
0000000000015489         call       call_chunkfun                               ; call_chunkfun
000000000001548e         test       rax, rax
0000000000015491         mov        qword [rbx+8], rax
0000000000015495         je         loc_154dd

0000000000015497         lea        rdx, qword [rax+r12+0x10]
000000000001549c         neg        rbp
000000000001549f         and        rbp, rdx
00000000000154a2         mov        rdx, qword [rbx]
00000000000154a5         mov        qword [rbx+0x10], rbp
00000000000154a9         mov        qword [rbx+0x18], rbp
00000000000154ad         add        rdx, rax
00000000000154b0         mov        qword [rax], rdx
00000000000154b3         mov        qword [rbx+0x20], rdx
00000000000154b7         mov        qword [rax+8], 0x0
00000000000154bf         mov        eax, 0x1
00000000000154c4         and        byte [rbx+0x50], 0xf9
00000000000154c8         pop        rbx
00000000000154c9         pop        rbp
00000000000154ca         pop        r12
00000000000154cc         ret
                        ; endp
00000000000154cd         align      16

                     loc_154d0:
00000000000154d0         mov        r12d, 0xf                                   ; CODE XREF=_obstack_begin_worker+10
00000000000154d6         mov        ebp, 0x10
00000000000154db         jmp        loc_15473

                     loc_154dd:
00000000000154dd         call       qword [obstack_alloc_failed_handler]        ; obstack_alloc_failed_handler, obstack_alloc_failed_handler, CODE XREF=_obstack_begin_worker+53
00000000000154e3         nop        dword [rax]                                 ; End of unwind block (FDE at 0x1de08)
00000000000154e6         nop        word [cs:rax+rax]
                     _obstack_begin:
00000000000154f0         and        byte [rdi+0x50], 0xfe                       ; Begin of unwind block (FDE at 0x1de38), CODE XREF=main+3110, main+4435, main+4457
00000000000154f4         mov        qword [rdi+0x38], rcx
00000000000154f8         mov        qword [rdi+0x40], r8
00000000000154fc         jmp        _obstack_begin_worker                       ; _obstack_begin_worker
0000000000015501         align      16                                          ; End of unwind block (FDE at 0x1de38)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _obstack_begin_1:
0000000000015510         or         byte [rdi+0x50], 0x1                        ; Begin of unwind block (FDE at 0x1de4c)
0000000000015514         mov        qword [rdi+0x38], rcx
0000000000015518         mov        qword [rdi+0x40], r8
000000000001551c         mov        qword [rdi+0x48], r9
0000000000015520         jmp        _obstack_begin_worker                       ; _obstack_begin_worker
                        ; endp
0000000000015525         align      16                                          ; End of unwind block (FDE at 0x1de4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _obstack_newchunk:
0000000000015530         push       r14                                         ; Begin of unwind block (FDE at 0x1de60), CODE XREF=quote_name+874, quote_name+912, print_dir+441
0000000000015532         push       r13
0000000000015534         xor        edx, edx
0000000000015536         push       r12
0000000000015538         push       rbp
0000000000015539         push       rbx
000000000001553a         mov        rbx, qword [rdi+0x18]
000000000001553e         sub        rbx, qword [rdi+0x10]
0000000000015542         mov        rbp, qword [rdi+8]
0000000000015546         add        rsi, rbx
0000000000015549         mov        rcx, rbx
000000000001554c         setb       dl
000000000001554f         add        rsi, qword [rdi+0x30]
0000000000015553         setb       al
0000000000015556         shr        rcx, 0x3
000000000001555a         cmp        qword [rdi], rsi
000000000001555d         lea        r12, qword [rsi+rcx+0x64]
0000000000015562         cmovae     rsi, qword [rdi]
0000000000015566         cmp        rsi, r12
0000000000015569         cmovae     r12, rsi
000000000001556d         test       rdx, rdx
0000000000015570         jne        loc_15615

0000000000015576         movzx      eax, al
0000000000015579         test       rax, rax
000000000001557c         jne        loc_15615

0000000000015582         mov        rsi, r12
0000000000015585         mov        r13, rdi
0000000000015588         call       call_chunkfun                               ; call_chunkfun
000000000001558d         test       rax, rax
0000000000015590         mov        r14, rax
0000000000015593         je         loc_15615

0000000000015599         lea        rsi, qword [rax+r12]
000000000001559d         mov        qword [r13+8], rax
00000000000155a1         mov        qword [rax+8], rbp
00000000000155a5         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
00000000000155a8         mov        qword [r13+0x20], rsi
00000000000155ac         mov        qword [rax], rsi
00000000000155af         mov        rax, qword [r13+0x30]
00000000000155b3         mov        rsi, qword [r13+0x10]                       ; argument "__src" for method j_memcpy
00000000000155b7         lea        r12, qword [r14+rax+0x10]
00000000000155bc         not        rax
00000000000155bf         and        r12, rax
00000000000155c2         mov        rdi, r12                                    ; argument "__dest" for method j_memcpy
00000000000155c5         call       j_memcpy                                    ; memcpy
00000000000155ca         test       byte [r13+0x50], 0x2
00000000000155cf         jne        loc_155e6

00000000000155d1         mov        rax, qword [r13+0x30]
00000000000155d5         lea        rdx, qword [rbp+rax+0x10]
00000000000155da         not        rax
00000000000155dd         and        rax, rdx
00000000000155e0         cmp        qword [r13+0x10], rax
00000000000155e4         je         loc_15600

                     loc_155e6:
00000000000155e6         and        byte [r13+0x50], 0xfd                       ; CODE XREF=_obstack_newchunk+159, _obstack_newchunk+227
00000000000155eb         add        rbx, r12
00000000000155ee         mov        qword [r13+0x10], r12
00000000000155f2         mov        qword [r13+0x18], rbx
00000000000155f6         pop        rbx
00000000000155f7         pop        rbp
00000000000155f8         pop        r12
00000000000155fa         pop        r13
00000000000155fc         pop        r14
00000000000155fe         ret
                        ; endp
00000000000155ff         align      512

                     loc_15600:
0000000000015600         mov        rax, qword [rbp+8]                          ; CODE XREF=_obstack_newchunk+180
0000000000015604         mov        rsi, rbp
0000000000015607         mov        rdi, r13
000000000001560a         mov        qword [r14+8], rax
000000000001560e         call       call_freefun                                ; call_freefun
0000000000015613         jmp        loc_155e6

                     loc_15615:
0000000000015615         call       qword [obstack_alloc_failed_handler]        ; obstack_alloc_failed_handler, obstack_alloc_failed_handler, CODE XREF=_obstack_newchunk+64, _obstack_newchunk+76, _obstack_newchunk+99
000000000001561b         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x1de60)
                     _obstack_allocated_p:
0000000000015620         mov        rax, qword [rdi+8]                          ; Begin of unwind block (FDE at 0x1dea0)
0000000000015624         test       rax, rax
0000000000015627         je         loc_15656

0000000000015629         nop        dword [rax]

                     loc_15630:
0000000000015630         cmp        rsi, rax                                    ; CODE XREF=_obstack_allocated_p+33
0000000000015633         jbe        loc_1563a

0000000000015635         cmp        qword [rax], rsi
0000000000015638         jae        loc_15650

                     loc_1563a:
000000000001563a         mov        rax, qword [rax+8]                          ; CODE XREF=_obstack_allocated_p+19
000000000001563e         test       rax, rax
0000000000015641         jne        loc_15630

0000000000015643         xor        eax, eax
0000000000015645         ret
                        ; endp
0000000000015646         align      16

                     loc_15650:
0000000000015650         mov        eax, 0x1                                    ; CODE XREF=_obstack_allocated_p+24
0000000000015655         ret
                        ; endp

                     loc_15656:
0000000000015656         ret                                                    ; CODE XREF=_obstack_allocated_p+7
                        ; endp
0000000000015658         align      32                                          ; End of unwind block (FDE at 0x1dea0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _obstack_free:
0000000000015660         push       r12                                         ; Begin of unwind block (FDE at 0x1deb4)
0000000000015662         push       rbp
0000000000015663         mov        rbp, rsi
0000000000015666         push       rbx
0000000000015667         mov        rsi, qword [rdi+8]
000000000001566b         mov        rbx, rdi
000000000001566e         test       rsi, rsi
0000000000015671         je         loc_1569d

0000000000015673         nop        dword [rax+rax]

                     loc_15678:
0000000000015678         cmp        rsi, rbp                                    ; CODE XREF=_obstack_free+59
000000000001567b         jae        loc_15685

000000000001567d         mov        rax, qword [rsi]
0000000000015680         cmp        rax, rbp
0000000000015683         jae        loc_156b0

                     loc_15685:
0000000000015685         mov        r12, qword [rsi+8]                          ; CODE XREF=_obstack_free+27
0000000000015689         mov        rdi, rbx
000000000001568c         call       call_freefun                                ; call_freefun
0000000000015691         or         byte [rbx+0x50], 0x2
0000000000015695         test       r12, r12
0000000000015698         mov        rsi, r12
000000000001569b         jne        loc_15678

                     loc_1569d:
000000000001569d         test       rbp, rbp                                    ; CODE XREF=_obstack_free+17
00000000000156a0         jne        loc_156c5

00000000000156a2         pop        rbx
00000000000156a3         pop        rbp
00000000000156a4         pop        r12
00000000000156a6         ret
                        ; endp
00000000000156a7         align      16

                     loc_156b0:
00000000000156b0         mov        qword [rbx+0x18], rbp                       ; CODE XREF=_obstack_free+35
00000000000156b4         mov        qword [rbx+0x10], rbp
00000000000156b8         mov        qword [rbx+0x20], rax
00000000000156bc         mov        qword [rbx+8], rsi
00000000000156c0         pop        rbx
00000000000156c1         pop        rbp
00000000000156c2         pop        r12
00000000000156c4         ret
                        ; endp

                     loc_156c5:
00000000000156c5         call       j_abort                                     ; abort, CODE XREF=_obstack_free+64
                        ; endp
00000000000156ca         align      16                                          ; End of unwind block (FDE at 0x1deb4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _obstack_memory_used:
00000000000156d0         mov        rdx, qword [rdi+8]                          ; Begin of unwind block (FDE at 0x1deec)
00000000000156d4         xor        eax, eax
00000000000156d6         test       rdx, rdx
00000000000156d9         je         loc_156f8

00000000000156db         nop        dword [rax+rax]

                     loc_156e0:
00000000000156e0         mov        rcx, qword [rdx]                            ; CODE XREF=_obstack_memory_used+32
00000000000156e3         sub        rcx, rdx
00000000000156e6         mov        rdx, qword [rdx+8]
00000000000156ea         add        rax, rcx
00000000000156ed         test       rdx, rdx
00000000000156f0         jne        loc_156e0

00000000000156f2         ret
                        ; endp
00000000000156f4         align      8

                     loc_156f8:
00000000000156f8         ret                                                    ; CODE XREF=_obstack_memory_used+9
                        ; endp
00000000000156fa         align      256                                         ; End of unwind block (FDE at 0x1deec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     setenv_TZ:
0000000000015700         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x1df04), CODE XREF=revert_tz.part.1+36, set_tz+69
0000000000015703         je         loc_15720

0000000000015705         mov        rsi, rdi                                    ; argument "__value" for method j_setenv
0000000000015708         lea        rdi, qword [aTarget+7]                      ; argument "__name" for method j_setenv, 0x17bbc
000000000001570f         mov        edx, 0x1                                    ; argument "__replace" for method j_setenv
0000000000015714         jmp        j_setenv                                    ; setenv
                        ; endp
0000000000015719         align      32

                     loc_15720:
0000000000015720         lea        rdi, qword [aTarget+7]                      ; argument "__name" for method j_unsetenv, 0x17bbc, CODE XREF=setenv_TZ+3
0000000000015727         jmp        j_unsetenv                                  ; unsetenv
                        ; endp
000000000001572c         align      16                                          ; End of unwind block (FDE at 0x1df04)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     tzfree.part.0:
0000000000015730         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x1df18), CODE XREF=revert_tz.part.1+54, set_tz+103, tzfree+6
0000000000015733         je         loc_15758

0000000000015735         push       rbx
0000000000015736         nop        word [cs:rax+rax]

                     loc_15740:
0000000000015740         mov        rbx, qword [rdi]                            ; CODE XREF=tzfree.part.0+30
0000000000015743         call       sub_3880                                    ; sub_3880
0000000000015748         test       rbx, rbx
000000000001574b         mov        rdi, rbx
000000000001574e         jne        loc_15740

0000000000015750         pop        rbx
0000000000015751         ret
                        ; endp
0000000000015752         align      8

                     loc_15758:
0000000000015758         ret                                                    ; CODE XREF=tzfree.part.0+3
                        ; endp
000000000001575a         align      32                                          ; End of unwind block (FDE at 0x1df18)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     revert_tz.part.1:
0000000000015760         push       r13                                         ; Begin of unwind block (FDE at 0x1df34), CODE XREF=localtime_rz+105, localtime_rz+152, mktime_z+108
0000000000015762         push       r12
0000000000015764         push       rbp
0000000000015765         push       rbx
0000000000015766         mov        rbp, rdi
0000000000015769         sub        rsp, 0x8
000000000001576d         call       j___errno_location                          ; __errno_location
0000000000015772         cmp        byte [rbp+8], 0x0
0000000000015776         mov        rbx, rax
0000000000015779         mov        r12d, dword [rax]
000000000001577c         lea        rdi, qword [rbp+9]
0000000000015780         jne        loc_15784

0000000000015782         xor        edi, edi

                     loc_15784:
0000000000015784         call       setenv_TZ                                   ; setenv_TZ, CODE XREF=revert_tz.part.1+32
0000000000015789         test       eax, eax
000000000001578b         je         loc_157b0

000000000001578d         mov        r12d, dword [rbx]
0000000000015790         xor        r13d, r13d

                     loc_15793:
0000000000015793         mov        rdi, rbp                                    ; CODE XREF=revert_tz.part.1+91
0000000000015796         call       tzfree.part.0                               ; tzfree.part.0
000000000001579b         mov        dword [rbx], r12d
000000000001579e         add        rsp, 0x8
00000000000157a2         mov        eax, r13d
00000000000157a5         pop        rbx
00000000000157a6         pop        rbp
00000000000157a7         pop        r12
00000000000157a9         pop        r13
00000000000157ab         ret
                        ; endp
00000000000157ac         align      16

                     loc_157b0:
00000000000157b0         call       j_tzset                                     ; tzset, CODE XREF=revert_tz.part.1+43
00000000000157b5         mov        r13d, 0x1
00000000000157bb         jmp        loc_15793
00000000000157bd         align      64                                          ; End of unwind block (FDE at 0x1df34)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     tzalloc:
00000000000157c0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x1df70), CODE XREF=main+3130, save_abbr+236, set_tz+44
00000000000157c3         push       r12
00000000000157c5         push       rbp
00000000000157c6         push       rbx
00000000000157c7         je         loc_15828

00000000000157c9         mov        r12, rdi
00000000000157cc         call       j_strlen                                    ; strlen
00000000000157d1         lea        rbp, qword [rax+1]
00000000000157d5         mov        edi, 0x76
00000000000157da         cmp        rbp, 0x76
00000000000157de         cmovae     rdi, rbp
00000000000157e2         add        rdi, 0x11
00000000000157e6         and        rdi, 0xfffffffffffffff8
00000000000157ea         call       sub_3888                                    ; sub_3888
00000000000157ef         test       rax, rax
00000000000157f2         mov        rbx, rax
00000000000157f5         je         loc_1581b

00000000000157f7         mov        qword [rax], 0x0
00000000000157fe         lea        rdi, qword [rbx+9]                          ; argument "__dest" for method j_memcpy
0000000000015802         mov        eax, 0x1
0000000000015807         mov        word [rbx+8], ax
000000000001580b         mov        rdx, rbp                                    ; argument "__n" for method j_memcpy
000000000001580e         mov        rsi, r12                                    ; argument "__src" for method j_memcpy
0000000000015811         call       j_memcpy                                    ; memcpy
0000000000015816         mov        byte [rbx+rbp+9], 0x0

                     loc_1581b:
000000000001581b         mov        rax, rbx                                    ; CODE XREF=tzalloc+53, tzalloc+120
000000000001581e         pop        rbx
000000000001581f         pop        rbp
0000000000015820         pop        r12
0000000000015822         ret
                        ; endp
0000000000015823         align      8

                     loc_15828:
0000000000015828         mov        edi, 0x80                                   ; CODE XREF=tzalloc+7
000000000001582d         call       sub_3888                                    ; sub_3888
0000000000015832         test       rax, rax
0000000000015835         mov        rbx, rax
0000000000015838         je         loc_1581b

000000000001583a         xor        edx, edx
000000000001583c         mov        qword [rbx], 0x0
0000000000015843         mov        rax, rbx
0000000000015846         mov        word [rbx+8], dx
000000000001584a         pop        rbx
000000000001584b         pop        rbp
000000000001584c         pop        r12
000000000001584e         ret
                        ; endp
000000000001584f         align      16                                          ; End of unwind block (FDE at 0x1df70)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     save_abbr:
0000000000015850         push       r15                                         ; Begin of unwind block (FDE at 0x1dfa8), CODE XREF=localtime_rz+59, mktime_z+81
0000000000015852         push       r14
0000000000015854         mov        eax, 0x1
0000000000015859         push       r13
000000000001585b         push       r12
000000000001585d         push       rbp
000000000001585e         push       rbx
000000000001585f         sub        rsp, 0x8
0000000000015863         mov        rbp, qword [rsi+0x30]
0000000000015867         test       rbp, rbp
000000000001586a         je         loc_15900

0000000000015870         cmp        rsi, rbp
0000000000015873         mov        r12, rdi
0000000000015876         mov        r13, rsi
0000000000015879         ja         loc_15884

000000000001587b         lea        rdx, qword [rsi+0x38]
000000000001587f         cmp        rbp, rdx
0000000000015882         jb         loc_15900

                     loc_15884:
0000000000015884         cmp        byte [rbp], 0x0                             ; CODE XREF=save_abbr+41
0000000000015888         lea        rbx, qword [r12+9]
000000000001588d         je         loc_158f0

000000000001588f         nop

                     loc_15890:
0000000000015890         mov        rsi, rbp                                    ; argument "__s2" for method j_strcmp, CODE XREF=save_abbr+118, save_abbr+127
0000000000015893         mov        rdi, rbx                                    ; argument "__s1" for method j_strcmp
0000000000015896         call       j_strcmp                                    ; strcmp
000000000001589b         test       eax, eax
000000000001589d         je         loc_158f7

                     loc_1589f:
000000000001589f         cmp        byte [rbx], 0x0                             ; CODE XREF=save_abbr+149
00000000000158a2         jne        loc_158b6

00000000000158a4         lea        r14, qword [r12+9]
00000000000158a9         cmp        r14, rbx
00000000000158ac         jne        loc_15910

00000000000158ae         cmp        byte [r12+8], 0x0
00000000000158b4         je         loc_15910

                     loc_158b6:
00000000000158b6         mov        rdi, rbx                                    ; argument "__s" for method j_strlen, CODE XREF=save_abbr+82
00000000000158b9         call       j_strlen                                    ; strlen
00000000000158be         lea        rbx, qword [rbx+rax+1]
00000000000158c3         cmp        byte [rbx], 0x0
00000000000158c6         jne        loc_15890

00000000000158c8         mov        rax, qword [r12]
00000000000158cc         test       rax, rax
00000000000158cf         je         loc_15890

00000000000158d1         lea        rbx, qword [rax+9]
00000000000158d5         mov        rsi, rbp                                    ; argument "__s2" for method j_strcmp
00000000000158d8         mov        r12, rax
00000000000158db         mov        rdi, rbx                                    ; argument "__s1" for method j_strcmp
00000000000158de         call       j_strcmp                                    ; strcmp
00000000000158e3         test       eax, eax
00000000000158e5         jne        loc_1589f

00000000000158e7         jmp        loc_158f7
00000000000158e9         align      16

                     loc_158f0:
00000000000158f0         lea        rbx, qword [aLu+34]                         ; 0x178b3, CODE XREF=save_abbr+61

                     loc_158f7:
00000000000158f7         mov        qword [r13+0x30], rbx                       ; CODE XREF=save_abbr+77, save_abbr+151, save_abbr+263, save_abbr+305
00000000000158fb         mov        eax, 0x1

                     loc_15900:
0000000000015900         add        rsp, 0x8                                    ; CODE XREF=save_abbr+26, save_abbr+50, save_abbr+253, save_abbr+285
0000000000015904         pop        rbx
0000000000015905         pop        rbp
0000000000015906         pop        r12
0000000000015908         pop        r13
000000000001590a         pop        r14
000000000001590c         pop        r15
000000000001590e         ret
                        ; endp
000000000001590f         align      16

                     loc_15910:
0000000000015910         mov        rdi, rbp                                    ; argument "__s" for method j_strlen, CODE XREF=save_abbr+92, save_abbr+100
0000000000015913         call       j_strlen                                    ; strlen
0000000000015918         lea        rdx, qword [rax+1]
000000000001591c         mov        r15, rax
000000000001591f         mov        rax, rbx
0000000000015922         sub        rax, r14
0000000000015925         mov        rcx, rax
0000000000015928         not        rcx
000000000001592b         cmp        rcx, rdx
000000000001592e         jb         loc_15960

0000000000015930         add        rax, rdx
0000000000015933         cmp        rax, 0x76
0000000000015937         jbe        loc_15970

0000000000015939         mov        rdi, rbp
000000000001593c         call       tzalloc                                     ; tzalloc
0000000000015941         mov        rbx, rax
0000000000015944         mov        qword [r12], rax
0000000000015948         xor        eax, eax
000000000001594a         test       rbx, rbx
000000000001594d         je         loc_15900

000000000001594f         mov        byte [rbx+8], 0x0
0000000000015953         add        rbx, 0x9
0000000000015957         jmp        loc_158f7
0000000000015959         align      32

                     loc_15960:
0000000000015960         call       j___errno_location                          ; __errno_location, CODE XREF=save_abbr+222
0000000000015965         mov        dword [rax], 0xc
000000000001596b         xor        eax, eax
000000000001596d         jmp        loc_15900
000000000001596f         align      16

                     loc_15970:
0000000000015970         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy, CODE XREF=save_abbr+231
0000000000015973         mov        rdi, rbx                                    ; argument "__dest" for method j_memcpy
0000000000015976         call       j_memcpy                                    ; memcpy
000000000001597b         mov        byte [rbx+r15+1], 0x0
0000000000015981         jmp        loc_158f7
0000000000015986         align      16                                          ; End of unwind block (FDE at 0x1dfa8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32


                     set_tz:
0000000000015990         push       r12                                         ; Begin of unwind block (FDE at 0x1dff4), CODE XREF=localtime_rz+24, mktime_z+39
0000000000015992         push       rbp
0000000000015993         mov        rbp, rdi
0000000000015996         push       rbx
0000000000015997         lea        rdi, qword [aTarget+7]                      ; argument "__name" for method j_getenv, 0x17bbc
000000000001599e         sub        rsp, 0x10
00000000000159a2         call       j_getenv                                    ; getenv
00000000000159a7         test       rax, rax
00000000000159aa         mov        rbx, rax
00000000000159ad         je         loc_15a48

00000000000159b3         cmp        byte [rbp+8], 0x0
00000000000159b7         jne        loc_15a20

                     loc_159b9:
00000000000159b9         mov        rdi, rbx                                    ; CODE XREF=set_tz+164, set_tz+194
00000000000159bc         call       tzalloc                                     ; tzalloc
00000000000159c1         test       rax, rax
00000000000159c4         mov        r12, rax
00000000000159c7         je         loc_15a0d

00000000000159c9         xor        edi, edi
00000000000159cb         cmp        byte [rbp+8], 0x0
00000000000159cf         je         loc_159d5

00000000000159d1         lea        rdi, qword [rbp+9]

                     loc_159d5:
00000000000159d5         call       setenv_TZ                                   ; setenv_TZ, CODE XREF=set_tz+63
00000000000159da         test       eax, eax
00000000000159dc         je         loc_15a68

00000000000159e2         call       j___errno_location                          ; __errno_location
00000000000159e7         cmp        r12, 0x1
00000000000159eb         mov        ebx, dword [rax]
00000000000159ed         je         loc_15a08

00000000000159ef         mov        rdi, r12
00000000000159f2         mov        qword [rsp+0x28+var_20], rax
00000000000159f7         call       tzfree.part.0                               ; tzfree.part.0
00000000000159fc         mov        rax, qword [rsp+0x28+var_20]
0000000000015a01         nop        dword [rax]

                     loc_15a08:
0000000000015a08         mov        dword [rax], ebx                            ; CODE XREF=set_tz+93
0000000000015a0a         xor        r12d, r12d

                     loc_15a0d:
0000000000015a0d         add        rsp, 0x10                                   ; CODE XREF=set_tz+55, set_tz+221
0000000000015a11         mov        rax, r12
0000000000015a14         pop        rbx
0000000000015a15         pop        rbp
0000000000015a16         pop        r12
0000000000015a18         ret
                        ; endp
0000000000015a19         align      32

                     loc_15a20:
0000000000015a20         lea        rdi, qword [rbp+9]                          ; argument "__s1" for method j_strcmp, CODE XREF=set_tz+39
0000000000015a24         mov        rsi, rax                                    ; argument "__s2" for method j_strcmp
0000000000015a27         mov        r12d, 0x1
0000000000015a2d         call       j_strcmp                                    ; strcmp
0000000000015a32         test       eax, eax
0000000000015a34         jne        loc_159b9

0000000000015a36         add        rsp, 0x10
0000000000015a3a         mov        rax, r12
0000000000015a3d         pop        rbx
0000000000015a3e         pop        rbp
0000000000015a3f         pop        r12
0000000000015a41         ret
                        ; endp
0000000000015a42         align      8

                     loc_15a48:
0000000000015a48         cmp        byte [rbp+8], 0x0                           ; CODE XREF=set_tz+29
0000000000015a4c         mov        r12d, 0x1
0000000000015a52         jne        loc_159b9

0000000000015a58         add        rsp, 0x10
0000000000015a5c         mov        rax, r12
0000000000015a5f         pop        rbx
0000000000015a60         pop        rbp
0000000000015a61         pop        r12
0000000000015a63         ret
                        ; endp
0000000000015a64         align      8

                     loc_15a68:
0000000000015a68         call       j_tzset                                     ; tzset, CODE XREF=set_tz+76
0000000000015a6d         jmp        loc_15a0d
0000000000015a6f         align      16                                          ; End of unwind block (FDE at 0x1dff4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     tzfree:
0000000000015a70         cmp        rdi, 0x1                                    ; Begin of unwind block (FDE at 0x1e048)
0000000000015a74         je         loc_15a7b

0000000000015a76         jmp        tzfree.part.0                               ; tzfree.part.0
                        ; endp

                     loc_15a7b:
0000000000015a7b         ret                                                    ; CODE XREF=tzfree+4
                        ; endp
0000000000015a7c         align      128                                         ; End of unwind block (FDE at 0x1e048)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     localtime_rz:
0000000000015a80         push       r13                                         ; Begin of unwind block (FDE at 0x1e05c), CODE XREF=print_long_format+1396, print_long_format+2317
0000000000015a82         push       r12
0000000000015a84         push       rbp
0000000000015a85         push       rbx
0000000000015a86         mov        rbp, rsi
0000000000015a89         sub        rsp, 0x8
0000000000015a8d         test       rdi, rdi
0000000000015a90         je         loc_15b00

0000000000015a92         mov        r13, rdx
0000000000015a95         mov        rbx, rdi
0000000000015a98         call       set_tz                                      ; set_tz
0000000000015a9d         test       rax, rax
0000000000015aa0         mov        r12, rax
0000000000015aa3         je         loc_15aee

0000000000015aa5         mov        rsi, r13                                    ; argument "__tp" for method j_localtime_r
0000000000015aa8         mov        rdi, rbp                                    ; argument "__timer" for method j_localtime_r
0000000000015aab         call       j_localtime_r                               ; localtime_r
0000000000015ab0         test       rax, rax
0000000000015ab3         je         loc_15ae0

0000000000015ab5         mov        rsi, r13
0000000000015ab8         mov        rdi, rbx
0000000000015abb         call       save_abbr                                   ; save_abbr
0000000000015ac0         test       al, al
0000000000015ac2         je         loc_15ae0

0000000000015ac4         cmp        r12, 0x1
0000000000015ac8         jne        loc_15b15

                     loc_15aca:
0000000000015aca         add        rsp, 0x8                                    ; CODE XREF=localtime_rz+159
0000000000015ace         mov        rax, r13
0000000000015ad1         pop        rbx
0000000000015ad2         pop        rbp
0000000000015ad3         pop        r12
0000000000015ad5         pop        r13
0000000000015ad7         ret
                        ; endp
0000000000015ad8         align      32

                     loc_15ae0:
0000000000015ae0         cmp        r12, 0x1                                    ; CODE XREF=localtime_rz+51, localtime_rz+66
0000000000015ae4         je         loc_15aee

0000000000015ae6         mov        rdi, r12
0000000000015ae9         call       revert_tz.part.1                            ; revert_tz.part.1

                     loc_15aee:
0000000000015aee         add        rsp, 0x8                                    ; CODE XREF=localtime_rz+35, localtime_rz+100, localtime_rz+161
0000000000015af2         xor        eax, eax
0000000000015af4         pop        rbx
0000000000015af5         pop        rbp
0000000000015af6         pop        r12
0000000000015af8         pop        r13
0000000000015afa         ret
                        ; endp
0000000000015afb         align      256

                     loc_15b00:
0000000000015b00         add        rsp, 0x8                                    ; CODE XREF=localtime_rz+16
0000000000015b04         mov        rdi, rbp                                    ; argument "__timer" for method j_gmtime_r
0000000000015b07         mov        rsi, rdx                                    ; argument "__tp" for method j_gmtime_r
0000000000015b0a         pop        rbx
0000000000015b0b         pop        rbp
0000000000015b0c         pop        r12
0000000000015b0e         pop        r13
0000000000015b10         jmp        j_gmtime_r                                  ; gmtime_r
                        ; endp

                     loc_15b15:
0000000000015b15         mov        rdi, r12                                    ; CODE XREF=localtime_rz+72
0000000000015b18         call       revert_tz.part.1                            ; revert_tz.part.1
0000000000015b1d         test       al, al
0000000000015b1f         jne        loc_15aca

0000000000015b21         jmp        loc_15aee
0000000000015b23         align      16                                          ; End of unwind block (FDE at 0x1e05c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_38: int32_t, -56
        ;    var_44: int32_t, -68
        ;    var_48: int32_t, -72
        ;    var_4C: int32_t, -76
        ;    var_50: int32_t, -80
        ;    var_54: int32_t, -84
        ;    var_58: int32_t, -88
        ;    var_60: int64_t, -96


                     mktime_z:
0000000000015b30         push       r12                                         ; Begin of unwind block (FDE at 0x1e0bc), CODE XREF=sub_112b0+66
0000000000015b32         push       rbp
0000000000015b33         push       rbx
0000000000015b34         mov        rbx, rsi
0000000000015b37         sub        rsp, 0x50
0000000000015b3b         mov        rax, qword [fs:0x28]
0000000000015b44         mov        qword [rsp+0x68+var_20], rax
0000000000015b49         xor        eax, eax
0000000000015b4b         test       rdi, rdi
0000000000015b4e         je         loc_15c50

0000000000015b54         mov        rbp, rdi
0000000000015b57         call       set_tz                                      ; set_tz
0000000000015b5c         test       rax, rax
0000000000015b5f         mov        r12, rax
0000000000015b62         je         loc_15c60

0000000000015b68         mov        rdi, rbx                                    ; argument "__tp" for method j_mktime
0000000000015b6b         call       j_mktime                                    ; mktime
0000000000015b70         cmp        rax, 0xffffffffffffffff
0000000000015b74         mov        qword [rsp+0x68+var_60], rax
0000000000015b79         je         loc_15bd0

                     loc_15b7b:
0000000000015b7b         mov        rsi, rbx                                    ; CODE XREF=mktime_z+269
0000000000015b7e         mov        rdi, rbp
0000000000015b81         call       save_abbr                                   ; save_abbr
0000000000015b86         test       al, al
0000000000015b88         jne        loc_15b93

0000000000015b8a         mov        qword [rsp+0x68+var_60], 0xffffffffffffffff

                     loc_15b93:
0000000000015b93         cmp        r12, 0x1                                    ; CODE XREF=mktime_z+88, mktime_z+178, mktime_z+261, mktime_z+275
0000000000015b97         je         loc_15ba9

0000000000015b99         mov        rdi, r12
0000000000015b9c         call       revert_tz.part.1                            ; revert_tz.part.1
0000000000015ba1         test       al, al
0000000000015ba3         je         loc_15c60

                     loc_15ba9:
0000000000015ba9         mov        rax, qword [rsp+0x68+var_60]                ; CODE XREF=mktime_z+103

                     loc_15bae:
0000000000015bae         mov        rcx, qword [rsp+0x68+var_20]                ; CODE XREF=mktime_z+296, mktime_z+311
0000000000015bb3         xor        rcx, qword [fs:0x28]
0000000000015bbc         jne        loc_15c6c

0000000000015bc2         add        rsp, 0x50
0000000000015bc6         pop        rbx
0000000000015bc7         pop        rbp
0000000000015bc8         pop        r12
0000000000015bca         ret
                        ; endp
0000000000015bcb         align      16

                     loc_15bd0:
0000000000015bd0         lea        rsi, qword [rsp+0x68+var_58]                ; argument "__tp" for method j_localtime_r, CODE XREF=mktime_z+73
0000000000015bd5         lea        rdi, qword [rsp+0x68+var_60]                ; argument "__timer" for method j_localtime_r
0000000000015bda         call       j_localtime_r                               ; localtime_r
0000000000015bdf         test       rax, rax
0000000000015be2         je         loc_15b93

0000000000015be4         mov        eax, dword [rbx]
0000000000015be6         mov        edx, dword [rbx+4]
0000000000015be9         xor        eax, dword [rsp+0x68+var_58]
0000000000015bed         xor        edx, dword [rsp+0x68+var_54]
0000000000015bf1         mov        ecx, dword [rsp+0x68+var_38]
0000000000015bf5         or         eax, edx
0000000000015bf7         mov        edx, dword [rbx+8]
0000000000015bfa         xor        edx, dword [rsp+0x68+var_50]
0000000000015bfe         or         eax, edx
0000000000015c00         mov        edx, dword [rbx+0xc]
0000000000015c03         xor        edx, dword [rsp+0x68+var_4C]
0000000000015c07         or         eax, edx
0000000000015c09         mov        edx, dword [rbx+0x10]
0000000000015c0c         xor        edx, dword [rsp+0x68+var_48]
0000000000015c10         or         eax, edx
0000000000015c12         mov        edx, dword [rbx+0x14]
0000000000015c15         xor        edx, dword [rsp+0x68+var_44]
0000000000015c19         or         eax, edx
0000000000015c1b         mov        edx, dword [rbx+0x20]
0000000000015c1e         test       edx, edx
0000000000015c20         sete       dil
0000000000015c24         test       ecx, ecx
0000000000015c26         sete       sil
0000000000015c2a         cmp        dil, sil
0000000000015c2d         je         loc_15c3b

0000000000015c2f         test       edx, edx
0000000000015c31         js         loc_15c3b

0000000000015c33         test       ecx, ecx
0000000000015c35         jns        loc_15b93

                     loc_15c3b:
0000000000015c3b         test       eax, eax                                    ; CODE XREF=mktime_z+253, mktime_z+257
0000000000015c3d         je         loc_15b7b

0000000000015c43         jmp        loc_15b93
0000000000015c48         align      16

                     loc_15c50:
0000000000015c50         mov        rdi, rsi                                    ; argument "__tp" for method j_timegm, CODE XREF=mktime_z+30
0000000000015c53         call       j_timegm                                    ; timegm
0000000000015c58         jmp        loc_15bae
0000000000015c5d         align      32

                     loc_15c60:
0000000000015c60         mov        rax, 0xffffffffffffffff                     ; CODE XREF=mktime_z+50, mktime_z+115
0000000000015c67         jmp        loc_15bae

                     loc_15c6c:
0000000000015c6c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=mktime_z+140
                        ; endp
0000000000015c71         align      128                                         ; End of unwind block (FDE at 0x1e0bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
0000000000015c80         push       r12                                         ; Begin of unwind block (FDE at 0x1e0f4), CODE XREF=close_stdout+13, close_stdout+51
0000000000015c82         push       rbp
0000000000015c83         mov        rbp, rdi
0000000000015c86         push       rbx
0000000000015c87         call       j___fpending                                ; __fpending
0000000000015c8c         mov        ebx, dword [rbp]
0000000000015c8f         mov        rdi, rbp
0000000000015c92         mov        r12, rax
0000000000015c95         call       rpl_fclose                                  ; rpl_fclose
0000000000015c9a         and        ebx, 0x20
0000000000015c9d         test       ebx, ebx
0000000000015c9f         jne        loc_15cb8

0000000000015ca1         test       eax, eax
0000000000015ca3         je         loc_15caf

0000000000015ca5         test       r12, r12
0000000000015ca8         mov        eax, 0xffffffff
0000000000015cad         je         loc_15ce8

                     loc_15caf:
0000000000015caf         pop        rbx                                         ; CODE XREF=close_stream+35
0000000000015cb0         pop        rbp
0000000000015cb1         pop        r12
0000000000015cb3         ret
                        ; endp
0000000000015cb4         align      8

                     loc_15cb8:
0000000000015cb8         test       eax, eax                                    ; CODE XREF=close_stream+31
0000000000015cba         jne        loc_15cd8

0000000000015cbc         call       j___errno_location                          ; __errno_location
0000000000015cc1         mov        dword [rax], 0x0
0000000000015cc7         mov        eax, 0xffffffff
0000000000015ccc         pop        rbx
0000000000015ccd         pop        rbp
0000000000015cce         pop        r12
0000000000015cd0         ret
                        ; endp
0000000000015cd1         align      8

                     loc_15cd8:
0000000000015cd8         pop        rbx                                         ; CODE XREF=close_stream+58
0000000000015cd9         mov        eax, 0xffffffff
0000000000015cde         pop        rbp
0000000000015cdf         pop        r12
0000000000015ce1         ret
                        ; endp
0000000000015ce2         align      8

                     loc_15ce8:
0000000000015ce8         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
0000000000015ced         cmp        dword [rax], 0x9
0000000000015cf0         pop        rbx
0000000000015cf1         pop        rbp
0000000000015cf2         pop        r12
0000000000015cf4         setne      al
0000000000015cf7         movzx      eax, al
0000000000015cfa         neg        eax
0000000000015cfc         ret
                        ; endp
0000000000015cfd         align      256                                         ; End of unwind block (FDE at 0x1e0f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     dir_name:
0000000000015d00         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x1e144), CODE XREF=same_nameat.part.0+43, same_nameat.part.0+95
0000000000015d04         call       mdir_name                                   ; mdir_name
0000000000015d09         test       rax, rax
0000000000015d0c         je         loc_15d13

0000000000015d0e         add        rsp, 0x8
0000000000015d12         ret
                        ; endp

                     loc_15d13:
0000000000015d13         call       xalloc_die                                  ; xalloc_die, CODE XREF=dir_name+12
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15d18:
0000000000015d18         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x1e144)
                     hash_pjw:
0000000000015d20         movsx      rcx, byte [rdi]                             ; Begin of unwind block (FDE at 0x1e164), CODE XREF=triple_hash+15
0000000000015d24         test       cl, cl
0000000000015d26         je         loc_15d50

0000000000015d28         xor        eax, eax
0000000000015d2a         nop        word [rax+rax]

                     loc_15d30:
0000000000015d30         rol        rax, 0x9                                    ; CODE XREF=hash_pjw+33
0000000000015d34         add        rdi, 0x1
0000000000015d38         add        rax, rcx
0000000000015d3b         movsx      rcx, byte [rdi]
0000000000015d3f         test       cl, cl
0000000000015d41         jne        loc_15d30

0000000000015d43         xor        edx, edx
0000000000015d45         div        rsi
0000000000015d48         mov        rax, rdx
0000000000015d4b         ret
                        ; endp
0000000000015d4c         align      16

                     loc_15d50:
0000000000015d50         xor        edx, edx                                    ; CODE XREF=hash_pjw+6
0000000000015d52         mov        rax, rdx
0000000000015d55         ret
                        ; endp
0000000000015d56         align      32                                          ; End of unwind block (FDE at 0x1e164)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000015d60         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x1e17c), CODE XREF=gettext_quote.part.1+11
0000000000015d64         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000015d69         call       j_nl_langinfo                               ; nl_langinfo
0000000000015d6e         test       rax, rax
0000000000015d71         je         loc_15d90

0000000000015d73         cmp        byte [rax], 0x0
0000000000015d76         lea        rdx, qword [aAscii]                         ; "ASCII"
0000000000015d7d         cmove      rax, rdx
0000000000015d81         add        rsp, 0x8
0000000000015d85         ret
                        ; endp
0000000000015d86         align      16

                     loc_15d90:
0000000000015d90         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
0000000000015d97         add        rsp, 0x8
0000000000015d9b         ret
                        ; endp
0000000000015d9c         align      32                                          ; End of unwind block (FDE at 0x1e17c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
0000000000015da0         push       r12                                         ; Begin of unwind block (FDE at 0x1e19c), CODE XREF=close_stream+21
0000000000015da2         push       rbp
0000000000015da3         push       rbx
0000000000015da4         mov        rbx, rdi
0000000000015da7         call       j_fileno                                    ; fileno
0000000000015dac         test       eax, eax
0000000000015dae         mov        rdi, rbx
0000000000015db1         js         loc_15e07

0000000000015db3         call       j___freading                                ; __freading
0000000000015db8         test       eax, eax
0000000000015dba         jne        loc_15de8

                     loc_15dbc:
0000000000015dbc         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
0000000000015dbf         call       rpl_fflush                                  ; rpl_fflush
0000000000015dc4         test       eax, eax
0000000000015dc6         je         loc_15e04

0000000000015dc8         call       j___errno_location                          ; __errno_location
0000000000015dcd         mov        r12d, dword [rax]
0000000000015dd0         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
0000000000015dd3         mov        rbp, rax
0000000000015dd6         call       j_fclose                                    ; fclose
0000000000015ddb         test       r12d, r12d
0000000000015dde         jne        loc_15e10

                     loc_15de0:
0000000000015de0         pop        rbx                                         ; CODE XREF=rpl_fclose+121
0000000000015de1         pop        rbp
0000000000015de2         pop        r12
0000000000015de4         ret
                        ; endp
0000000000015de5         align      8

                     loc_15de8:
0000000000015de8         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
0000000000015deb         call       j_fileno                                    ; fileno
0000000000015df0         xor        esi, esi                                    ; argument "__offset" for method j_lseek
0000000000015df2         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000015df7         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000015df9         call       j_lseek                                     ; lseek
0000000000015dfe         cmp        rax, 0xffffffffffffffff
0000000000015e02         jne        loc_15dbc

                     loc_15e04:
0000000000015e04         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_15e07:
0000000000015e07         pop        rbx                                         ; CODE XREF=rpl_fclose+17
0000000000015e08         pop        rbp
0000000000015e09         pop        r12
0000000000015e0b         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_15e10:
0000000000015e10         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
0000000000015e14         mov        eax, 0xffffffff
0000000000015e19         jmp        loc_15de0
0000000000015e1b         align      32                                          ; End of unwind block (FDE at 0x1e19c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
0000000000015e20         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x1e1d4), CODE XREF=rpl_fclose+31
0000000000015e23         push       rbx
0000000000015e24         mov        rbx, rdi
0000000000015e27         je         loc_15e3a

0000000000015e29         call       j___freading                                ; __freading
0000000000015e2e         test       eax, eax
0000000000015e30         je         loc_15e3a

0000000000015e32         test       dword [rbx], 0x100
0000000000015e38         jne        loc_15e48

                     loc_15e3a:
0000000000015e3a         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
0000000000015e3d         pop        rbx
0000000000015e3e         jmp        j_fflush                                    ; fflush
                        ; endp
0000000000015e43         align      8

                     loc_15e48:
0000000000015e48         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
0000000000015e4b         mov        edx, 0x1
0000000000015e50         xor        esi, esi
0000000000015e52         call       rpl_fseeko                                  ; rpl_fseeko
0000000000015e57         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
0000000000015e5a         pop        rbx
0000000000015e5b         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
0000000000015e60         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0x1e1d4), Begin of unwind block (FDE at 0x1e1f4), CODE XREF=rpl_fflush+50
0000000000015e64         cmp        qword [rdi+0x10], rax
0000000000015e68         je         loc_15e70

                     j_j_fseeko:        // fseeko
0000000000015e6a         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
0000000000015e6f         align      16

                     loc_15e70:
0000000000015e70         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
0000000000015e74         cmp        qword [rdi+0x28], rax
0000000000015e78         jne        j_j_fseeko                                  ; fseeko

0000000000015e7a         cmp        qword [rdi+0x48], 0x0
0000000000015e7f         jne        j_j_fseeko                                  ; fseeko

0000000000015e81         push       r12
0000000000015e83         push       rbp
0000000000015e84         mov        r12d, edx
0000000000015e87         push       rbx
0000000000015e88         mov        rbp, rsi
0000000000015e8b         mov        rbx, rdi
0000000000015e8e         call       j_fileno                                    ; fileno
0000000000015e93         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000015e96         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000015e99         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000015e9b         call       j_lseek                                     ; lseek
0000000000015ea0         cmp        rax, 0xffffffffffffffff
0000000000015ea4         je         loc_15eb2

0000000000015ea6         and        dword [rbx], 0xffffffef
0000000000015ea9         mov        qword [rbx+0x90], rax
0000000000015eb0         xor        eax, eax

                     loc_15eb2:
0000000000015eb2         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
0000000000015eb3         pop        rbp
0000000000015eb4         pop        r12
0000000000015eb6         ret
                        ; endp
0000000000015eb7         align      64                                          ; End of unwind block (FDE at 0x1e1f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
0000000000015ec0         push       r15                                         ; Begin of unwind block (FDE at 0x1e224), DATA XREF=_start+22
0000000000015ec2         push       r14
0000000000015ec4         mov        r15, rdx
0000000000015ec7         push       r13
0000000000015ec9         push       r12
0000000000015ecb         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
0000000000015ed2         push       rbp
0000000000015ed3         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
0000000000015eda         push       rbx
0000000000015edb         mov        r13d, edi
0000000000015ede         mov        r14, rsi
0000000000015ee1         sub        rbp, r12
0000000000015ee4         sub        rsp, 0x8
0000000000015ee8         sar        rbp, 0x3
0000000000015eec         call       _init                                       ; _init
0000000000015ef1         test       rbp, rbp
0000000000015ef4         je         loc_15f16

0000000000015ef6         xor        ebx, ebx
0000000000015ef8         nop        dword [rax+rax]

                     loc_15f00:
0000000000015f00         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
0000000000015f03         mov        rsi, r14
0000000000015f06         mov        edi, r13d
0000000000015f09         call       qword [r12+rbx*8]
0000000000015f0d         add        rbx, 0x1
0000000000015f11         cmp        rbp, rbx
0000000000015f14         jne        loc_15f00

                     loc_15f16:
0000000000015f16         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
0000000000015f1a         pop        rbx
0000000000015f1b         pop        rbp
0000000000015f1c         pop        r12
0000000000015f1e         pop        r13
0000000000015f20         pop        r14
0000000000015f22         pop        r15
0000000000015f24         ret
                        ; endp
0000000000015f25         align      16                                          ; End of unwind block (FDE at 0x1e224)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
0000000000015f30         ret                                                    ; Begin of unwind block (FDE at 0x1e26c), DATA XREF=_start+15
                        ; endp
0000000000015f32         align      64                                          ; End of unwind block (FDE at 0x1e26c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
0000000000015f40         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0x1e284), __dso_handle, CODE XREF=main+108
0000000000015f47         xor        esi, esi
0000000000015f49         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
0000000000015f4e         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x1e284)
0000000000015f4f         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x15f50; 0x15f59[ (9 bytes)
        ; File offset : [89936; 89945[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
0000000000015f50         sub        rsp, 0x8
0000000000015f54         add        rsp, 0x8
0000000000015f58         ret
                        ; endp
0000000000015f59         db  0x00 ; '.'
0000000000015f5a         db  0x00 ; '.'
0000000000015f5b         db  0x00 ; '.'
0000000000015f5c         db  0x00 ; '.'
0000000000015f5d         db  0x00 ; '.'
0000000000015f5e         db  0x00 ; '.'
0000000000015f5f         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x15f60; 0x1add9[ (20089 bytes)
        ; File offset : [89952; 110041[ (20089 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
0000000000015f60         db  0x01 ; '.'
0000000000015f61         db  0x00 ; '.'
0000000000015f62         db  0x02 ; '.'
0000000000015f63         db  0x00 ; '.'
0000000000015f64         db  0x00 ; '.'
0000000000015f65         db  0x00 ; '.'
0000000000015f66         db  0x00 ; '.'
0000000000015f67         db  0x00 ; '.'
0000000000015f68         db  0x00 ; '.'
0000000000015f69         db  0x00 ; '.'
0000000000015f6a         db  0x00 ; '.'
0000000000015f6b         db  0x00 ; '.'
0000000000015f6c         db  0x00 ; '.'
0000000000015f6d         db  0x00 ; '.'
0000000000015f6e         db  0x00 ; '.'
0000000000015f6f         db  0x00 ; '.'
0000000000015f70         db  0x00 ; '.'
0000000000015f71         db  0x00 ; '.'
0000000000015f72         db  0x00 ; '.'
0000000000015f73         db  0x00 ; '.'
0000000000015f74         db  0x00 ; '.'
0000000000015f75         db  0x00 ; '.'
0000000000015f76         db  0x00 ; '.'
0000000000015f77         db  0x00 ; '.'
0000000000015f78         db  0x00 ; '.'
0000000000015f79         db  0x00 ; '.'
0000000000015f7a         db  0x00 ; '.'
0000000000015f7b         db  0x00 ; '.'
0000000000015f7c         db  0x00 ; '.'
0000000000015f7d         db  0x00 ; '.'
0000000000015f7e         db  0x00 ; '.'
0000000000015f7f         db  0x00 ; '.'
0000000000015f80         db  0xb8 ; '.'                                         ; DATA XREF=get_funky_string+6
0000000000015f81         db  0xf5 ; '.'
0000000000015f82         db  0xfe ; '.'
0000000000015f83         db  0xff ; '.'
0000000000015f84         db  0xce ; '.'
0000000000015f85         db  0xf4 ; '.'
0000000000015f86         db  0xfe ; '.'
0000000000015f87         db  0xff ; '.'
0000000000015f88         db  0xce ; '.'
0000000000015f89         db  0xf4 ; '.'
0000000000015f8a         db  0xfe ; '.'
0000000000015f8b         db  0xff ; '.'
0000000000015f8c         db  0xce ; '.'
0000000000015f8d         db  0xf4 ; '.'
0000000000015f8e         db  0xfe ; '.'
0000000000015f8f         db  0xff ; '.'
0000000000015f90         db  0xce ; '.'
0000000000015f91         db  0xf4 ; '.'
0000000000015f92         db  0xfe ; '.'
0000000000015f93         db  0xff ; '.'
0000000000015f94         db  0xce ; '.'
0000000000015f95         db  0xf4 ; '.'
0000000000015f96         db  0xfe ; '.'
0000000000015f97         db  0xff ; '.'
0000000000015f98         db  0xce ; '.'
0000000000015f99         db  0xf4 ; '.'
0000000000015f9a         db  0xfe ; '.'
0000000000015f9b         db  0xff ; '.'
0000000000015f9c         db  0xce ; '.'
0000000000015f9d         db  0xf4 ; '.'
0000000000015f9e         db  0xfe ; '.'
0000000000015f9f         db  0xff ; '.'
0000000000015fa0         db  0xce ; '.'
0000000000015fa1         db  0xf4 ; '.'
0000000000015fa2         db  0xfe ; '.'
0000000000015fa3         db  0xff ; '.'
0000000000015fa4         db  0xce ; '.'
0000000000015fa5         db  0xf4 ; '.'
0000000000015fa6         db  0xfe ; '.'
0000000000015fa7         db  0xff ; '.'
0000000000015fa8         db  0xce ; '.'
0000000000015fa9         db  0xf4 ; '.'
0000000000015faa         db  0xfe ; '.'
0000000000015fab         db  0xff ; '.'
0000000000015fac         db  0xce ; '.'
0000000000015fad         db  0xf4 ; '.'
0000000000015fae         db  0xfe ; '.'
0000000000015faf         db  0xff ; '.'
0000000000015fb0         db  0xce ; '.'
0000000000015fb1         db  0xf4 ; '.'
0000000000015fb2         db  0xfe ; '.'
0000000000015fb3         db  0xff ; '.'
0000000000015fb4         db  0xce ; '.'
0000000000015fb5         db  0xf4 ; '.'
0000000000015fb6         db  0xfe ; '.'
0000000000015fb7         db  0xff ; '.'
0000000000015fb8         db  0xce ; '.'
0000000000015fb9         db  0xf4 ; '.'
0000000000015fba         db  0xfe ; '.'
0000000000015fbb         db  0xff ; '.'
0000000000015fbc         db  0xce ; '.'
0000000000015fbd         db  0xf4 ; '.'
0000000000015fbe         db  0xfe ; '.'
0000000000015fbf         db  0xff ; '.'
0000000000015fc0         db  0xce ; '.'
0000000000015fc1         db  0xf4 ; '.'
0000000000015fc2         db  0xfe ; '.'
0000000000015fc3         db  0xff ; '.'
0000000000015fc4         db  0xce ; '.'
0000000000015fc5         db  0xf4 ; '.'
0000000000015fc6         db  0xfe ; '.'
0000000000015fc7         db  0xff ; '.'
0000000000015fc8         db  0xce ; '.'
0000000000015fc9         db  0xf4 ; '.'
0000000000015fca         db  0xfe ; '.'
0000000000015fcb         db  0xff ; '.'
0000000000015fcc         db  0xce ; '.'
0000000000015fcd         db  0xf4 ; '.'
0000000000015fce         db  0xfe ; '.'
0000000000015fcf         db  0xff ; '.'
0000000000015fd0         db  0xce ; '.'
0000000000015fd1         db  0xf4 ; '.'
0000000000015fd2         db  0xfe ; '.'
0000000000015fd3         db  0xff ; '.'
0000000000015fd4         db  0xce ; '.'
0000000000015fd5         db  0xf4 ; '.'
0000000000015fd6         db  0xfe ; '.'
0000000000015fd7         db  0xff ; '.'
0000000000015fd8         db  0xce ; '.'
0000000000015fd9         db  0xf4 ; '.'
0000000000015fda         db  0xfe ; '.'
0000000000015fdb         db  0xff ; '.'
0000000000015fdc         db  0xce ; '.'
0000000000015fdd         db  0xf4 ; '.'
0000000000015fde         db  0xfe ; '.'
0000000000015fdf         db  0xff ; '.'
0000000000015fe0         db  0xce ; '.'
0000000000015fe1         db  0xf4 ; '.'
0000000000015fe2         db  0xfe ; '.'
0000000000015fe3         db  0xff ; '.'
0000000000015fe4         db  0xce ; '.'
0000000000015fe5         db  0xf4 ; '.'
0000000000015fe6         db  0xfe ; '.'
0000000000015fe7         db  0xff ; '.'
0000000000015fe8         db  0xce ; '.'
0000000000015fe9         db  0xf4 ; '.'
0000000000015fea         db  0xfe ; '.'
0000000000015feb         db  0xff ; '.'
0000000000015fec         db  0xce ; '.'
0000000000015fed         db  0xf4 ; '.'
0000000000015fee         db  0xfe ; '.'
0000000000015fef         db  0xff ; '.'
0000000000015ff0         db  0xce ; '.'
0000000000015ff1         db  0xf4 ; '.'
0000000000015ff2         db  0xfe ; '.'
0000000000015ff3         db  0xff ; '.'
0000000000015ff4         db  0xce ; '.'
0000000000015ff5         db  0xf4 ; '.'
0000000000015ff6         db  0xfe ; '.'
0000000000015ff7         db  0xff ; '.'
0000000000015ff8         db  0xce ; '.'
0000000000015ff9         db  0xf4 ; '.'
0000000000015ffa         db  0xfe ; '.'
0000000000015ffb         db  0xff ; '.'
0000000000015ffc         db  0xce ; '.'
0000000000015ffd         db  0xf4 ; '.'
0000000000015ffe         db  0xfe ; '.'
0000000000015fff         db  0xff ; '.'
0000000000016000         db  0xce ; '.'
0000000000016001         db  0xf4 ; '.'
0000000000016002         db  0xfe ; '.'
0000000000016003         db  0xff ; '.'
0000000000016004         db  0xce ; '.'
0000000000016005         db  0xf4 ; '.'
0000000000016006         db  0xfe ; '.'
0000000000016007         db  0xff ; '.'
0000000000016008         db  0xce ; '.'
0000000000016009         db  0xf4 ; '.'
000000000001600a         db  0xfe ; '.'
000000000001600b         db  0xff ; '.'
000000000001600c         db  0xce ; '.'
000000000001600d         db  0xf4 ; '.'
000000000001600e         db  0xfe ; '.'
000000000001600f         db  0xff ; '.'
0000000000016010         db  0xce ; '.'
0000000000016011         db  0xf4 ; '.'
0000000000016012         db  0xfe ; '.'
0000000000016013         db  0xff ; '.'
0000000000016014         db  0xce ; '.'
0000000000016015         db  0xf4 ; '.'
0000000000016016         db  0xfe ; '.'
0000000000016017         db  0xff ; '.'
0000000000016018         db  0xce ; '.'
0000000000016019         db  0xf4 ; '.'
000000000001601a         db  0xfe ; '.'
000000000001601b         db  0xff ; '.'
000000000001601c         db  0xce ; '.'
000000000001601d         db  0xf4 ; '.'
000000000001601e         db  0xfe ; '.'
000000000001601f         db  0xff ; '.'
0000000000016020         db  0xce ; '.'
0000000000016021         db  0xf4 ; '.'
0000000000016022         db  0xfe ; '.'
0000000000016023         db  0xff ; '.'
0000000000016024         db  0xce ; '.'
0000000000016025         db  0xf4 ; '.'
0000000000016026         db  0xfe ; '.'
0000000000016027         db  0xff ; '.'
0000000000016028         db  0xce ; '.'
0000000000016029         db  0xf4 ; '.'
000000000001602a         db  0xfe ; '.'
000000000001602b         db  0xff ; '.'
000000000001602c         db  0xce ; '.'
000000000001602d         db  0xf4 ; '.'
000000000001602e         db  0xfe ; '.'
000000000001602f         db  0xff ; '.'
0000000000016030         db  0xce ; '.'
0000000000016031         db  0xf4 ; '.'
0000000000016032         db  0xfe ; '.'
0000000000016033         db  0xff ; '.'
0000000000016034         db  0xce ; '.'
0000000000016035         db  0xf4 ; '.'
0000000000016036         db  0xfe ; '.'
0000000000016037         db  0xff ; '.'
0000000000016038         db  0xce ; '.'
0000000000016039         db  0xf4 ; '.'
000000000001603a         db  0xfe ; '.'
000000000001603b         db  0xff ; '.'
000000000001603c         db  0xce ; '.'
000000000001603d         db  0xf4 ; '.'
000000000001603e         db  0xfe ; '.'
000000000001603f         db  0xff ; '.'
0000000000016040         db  0x28 ; '('
0000000000016041         db  0xf5 ; '.'
0000000000016042         db  0xfe ; '.'
0000000000016043         db  0xff ; '.'
0000000000016044         db  0x28 ; '('
0000000000016045         db  0xf5 ; '.'
0000000000016046         db  0xfe ; '.'
0000000000016047         db  0xff ; '.'
0000000000016048         db  0x28 ; '('
0000000000016049         db  0xf5 ; '.'
000000000001604a         db  0xfe ; '.'
000000000001604b         db  0xff ; '.'
000000000001604c         db  0x28 ; '('
000000000001604d         db  0xf5 ; '.'
000000000001604e         db  0xfe ; '.'
000000000001604f         db  0xff ; '.'
0000000000016050         db  0x28 ; '('
0000000000016051         db  0xf5 ; '.'
0000000000016052         db  0xfe ; '.'
0000000000016053         db  0xff ; '.'
0000000000016054         db  0x28 ; '('
0000000000016055         db  0xf5 ; '.'
0000000000016056         db  0xfe ; '.'
0000000000016057         db  0xff ; '.'
0000000000016058         db  0x28 ; '('
0000000000016059         db  0xf5 ; '.'
000000000001605a         db  0xfe ; '.'
000000000001605b         db  0xff ; '.'
000000000001605c         db  0x28 ; '('
000000000001605d         db  0xf5 ; '.'
000000000001605e         db  0xfe ; '.'
000000000001605f         db  0xff ; '.'
0000000000016060         db  0xce ; '.'
0000000000016061         db  0xf4 ; '.'
0000000000016062         db  0xfe ; '.'
0000000000016063         db  0xff ; '.'
0000000000016064         db  0xce ; '.'
0000000000016065         db  0xf4 ; '.'
0000000000016066         db  0xfe ; '.'
0000000000016067         db  0xff ; '.'
0000000000016068         db  0xce ; '.'
0000000000016069         db  0xf4 ; '.'
000000000001606a         db  0xfe ; '.'
000000000001606b         db  0xff ; '.'
000000000001606c         db  0xce ; '.'
000000000001606d         db  0xf4 ; '.'
000000000001606e         db  0xfe ; '.'
000000000001606f         db  0xff ; '.'
0000000000016070         db  0xce ; '.'
0000000000016071         db  0xf4 ; '.'
0000000000016072         db  0xfe ; '.'
0000000000016073         db  0xff ; '.'
0000000000016074         db  0xce ; '.'
0000000000016075         db  0xf4 ; '.'
0000000000016076         db  0xfe ; '.'
0000000000016077         db  0xff ; '.'
0000000000016078         db  0xce ; '.'
0000000000016079         db  0xf4 ; '.'
000000000001607a         db  0xfe ; '.'
000000000001607b         db  0xff ; '.'
000000000001607c         db  0x60 ; '`'
000000000001607d         db  0xf6 ; '.'
000000000001607e         db  0xfe ; '.'
000000000001607f         db  0xff ; '.'
0000000000016080         db  0xce ; '.'
0000000000016081         db  0xf4 ; '.'
0000000000016082         db  0xfe ; '.'
0000000000016083         db  0xff ; '.'
0000000000016084         db  0xce ; '.'
0000000000016085         db  0xf4 ; '.'
0000000000016086         db  0xfe ; '.'
0000000000016087         db  0xff ; '.'
0000000000016088         db  0xce ; '.'
0000000000016089         db  0xf4 ; '.'
000000000001608a         db  0xfe ; '.'
000000000001608b         db  0xff ; '.'
000000000001608c         db  0xce ; '.'
000000000001608d         db  0xf4 ; '.'
000000000001608e         db  0xfe ; '.'
000000000001608f         db  0xff ; '.'
0000000000016090         db  0xce ; '.'
0000000000016091         db  0xf4 ; '.'
0000000000016092         db  0xfe ; '.'
0000000000016093         db  0xff ; '.'
0000000000016094         db  0xce ; '.'
0000000000016095         db  0xf4 ; '.'
0000000000016096         db  0xfe ; '.'
0000000000016097         db  0xff ; '.'
0000000000016098         db  0xce ; '.'
0000000000016099         db  0xf4 ; '.'
000000000001609a         db  0xfe ; '.'
000000000001609b         db  0xff ; '.'
000000000001609c         db  0xce ; '.'
000000000001609d         db  0xf4 ; '.'
000000000001609e         db  0xfe ; '.'
000000000001609f         db  0xff ; '.'
00000000000160a0         db  0xce ; '.'
00000000000160a1         db  0xf4 ; '.'
00000000000160a2         db  0xfe ; '.'
00000000000160a3         db  0xff ; '.'
00000000000160a4         db  0xce ; '.'
00000000000160a5         db  0xf4 ; '.'
00000000000160a6         db  0xfe ; '.'
00000000000160a7         db  0xff ; '.'
00000000000160a8         db  0xce ; '.'
00000000000160a9         db  0xf4 ; '.'
00000000000160aa         db  0xfe ; '.'
00000000000160ab         db  0xff ; '.'
00000000000160ac         db  0xce ; '.'
00000000000160ad         db  0xf4 ; '.'
00000000000160ae         db  0xfe ; '.'
00000000000160af         db  0xff ; '.'
00000000000160b0         db  0xce ; '.'
00000000000160b1         db  0xf4 ; '.'
00000000000160b2         db  0xfe ; '.'
00000000000160b3         db  0xff ; '.'
00000000000160b4         db  0xce ; '.'
00000000000160b5         db  0xf4 ; '.'
00000000000160b6         db  0xfe ; '.'
00000000000160b7         db  0xff ; '.'
00000000000160b8         db  0xce ; '.'
00000000000160b9         db  0xf4 ; '.'
00000000000160ba         db  0xfe ; '.'
00000000000160bb         db  0xff ; '.'
00000000000160bc         db  0xce ; '.'
00000000000160bd         db  0xf4 ; '.'
00000000000160be         db  0xfe ; '.'
00000000000160bf         db  0xff ; '.'
00000000000160c0         db  0xce ; '.'
00000000000160c1         db  0xf4 ; '.'
00000000000160c2         db  0xfe ; '.'
00000000000160c3         db  0xff ; '.'
00000000000160c4         db  0xce ; '.'
00000000000160c5         db  0xf4 ; '.'
00000000000160c6         db  0xfe ; '.'
00000000000160c7         db  0xff ; '.'
00000000000160c8         db  0xce ; '.'
00000000000160c9         db  0xf4 ; '.'
00000000000160ca         db  0xfe ; '.'
00000000000160cb         db  0xff ; '.'
00000000000160cc         db  0xce ; '.'
00000000000160cd         db  0xf4 ; '.'
00000000000160ce         db  0xfe ; '.'
00000000000160cf         db  0xff ; '.'
00000000000160d0         db  0xce ; '.'
00000000000160d1         db  0xf4 ; '.'
00000000000160d2         db  0xfe ; '.'
00000000000160d3         db  0xff ; '.'
00000000000160d4         db  0xce ; '.'
00000000000160d5         db  0xf4 ; '.'
00000000000160d6         db  0xfe ; '.'
00000000000160d7         db  0xff ; '.'
00000000000160d8         db  0xce ; '.'
00000000000160d9         db  0xf4 ; '.'
00000000000160da         db  0xfe ; '.'
00000000000160db         db  0xff ; '.'
00000000000160dc         db  0xce ; '.'
00000000000160dd         db  0xf4 ; '.'
00000000000160de         db  0xfe ; '.'
00000000000160df         db  0xff ; '.'
00000000000160e0         db  0xc0 ; '.'
00000000000160e1         db  0xf5 ; '.'
00000000000160e2         db  0xfe ; '.'
00000000000160e3         db  0xff ; '.'
00000000000160e4         db  0xce ; '.'
00000000000160e5         db  0xf4 ; '.'
00000000000160e6         db  0xfe ; '.'
00000000000160e7         db  0xff ; '.'
00000000000160e8         db  0xce ; '.'
00000000000160e9         db  0xf4 ; '.'
00000000000160ea         db  0xfe ; '.'
00000000000160eb         db  0xff ; '.'
00000000000160ec         db  0xce ; '.'
00000000000160ed         db  0xf4 ; '.'
00000000000160ee         db  0xfe ; '.'
00000000000160ef         db  0xff ; '.'
00000000000160f0         db  0xce ; '.'
00000000000160f1         db  0xf4 ; '.'
00000000000160f2         db  0xfe ; '.'
00000000000160f3         db  0xff ; '.'
00000000000160f4         db  0xce ; '.'
00000000000160f5         db  0xf4 ; '.'
00000000000160f6         db  0xfe ; '.'
00000000000160f7         db  0xff ; '.'
00000000000160f8         db  0xce ; '.'
00000000000160f9         db  0xf4 ; '.'
00000000000160fa         db  0xfe ; '.'
00000000000160fb         db  0xff ; '.'
00000000000160fc         db  0x30 ; '0'
00000000000160fd         db  0xf6 ; '.'
00000000000160fe         db  0xfe ; '.'
00000000000160ff         db  0xff ; '.'
0000000000016100         db  0xce ; '.'
0000000000016101         db  0xf4 ; '.'
0000000000016102         db  0xfe ; '.'
0000000000016103         db  0xff ; '.'
0000000000016104         db  0x40 ; '@'
0000000000016105         db  0xf6 ; '.'
0000000000016106         db  0xfe ; '.'
0000000000016107         db  0xff ; '.'
0000000000016108         db  0x70 ; 'p'
0000000000016109         db  0xf6 ; '.'
000000000001610a         db  0xfe ; '.'
000000000001610b         db  0xff ; '.'
000000000001610c         db  0xce ; '.'
000000000001610d         db  0xf4 ; '.'
000000000001610e         db  0xfe ; '.'
000000000001610f         db  0xff ; '.'
0000000000016110         db  0xce ; '.'
0000000000016111         db  0xf4 ; '.'
0000000000016112         db  0xfe ; '.'
0000000000016113         db  0xff ; '.'
0000000000016114         db  0xa8 ; '.'
0000000000016115         db  0xf5 ; '.'
0000000000016116         db  0xfe ; '.'
0000000000016117         db  0xff ; '.'
0000000000016118         db  0x80 ; '.'
0000000000016119         db  0xf6 ; '.'
000000000001611a         db  0xfe ; '.'
000000000001611b         db  0xff ; '.'
000000000001611c         db  0xce ; '.'
000000000001611d         db  0xf4 ; '.'
000000000001611e         db  0xfe ; '.'
000000000001611f         db  0xff ; '.'
0000000000016120         db  0xce ; '.'
0000000000016121         db  0xf4 ; '.'
0000000000016122         db  0xfe ; '.'
0000000000016123         db  0xff ; '.'
0000000000016124         db  0xce ; '.'
0000000000016125         db  0xf4 ; '.'
0000000000016126         db  0xfe ; '.'
0000000000016127         db  0xff ; '.'
0000000000016128         db  0xce ; '.'
0000000000016129         db  0xf4 ; '.'
000000000001612a         db  0xfe ; '.'
000000000001612b         db  0xff ; '.'
000000000001612c         db  0xce ; '.'
000000000001612d         db  0xf4 ; '.'
000000000001612e         db  0xfe ; '.'
000000000001612f         db  0xff ; '.'
0000000000016130         db  0xce ; '.'
0000000000016131         db  0xf4 ; '.'
0000000000016132         db  0xfe ; '.'
0000000000016133         db  0xff ; '.'
0000000000016134         db  0xce ; '.'
0000000000016135         db  0xf4 ; '.'
0000000000016136         db  0xfe ; '.'
0000000000016137         db  0xff ; '.'
0000000000016138         db  0x90 ; '.'
0000000000016139         db  0xf6 ; '.'
000000000001613a         db  0xfe ; '.'
000000000001613b         db  0xff ; '.'
000000000001613c         db  0xce ; '.'
000000000001613d         db  0xf4 ; '.'
000000000001613e         db  0xfe ; '.'
000000000001613f         db  0xff ; '.'
0000000000016140         db  0xce ; '.'
0000000000016141         db  0xf4 ; '.'
0000000000016142         db  0xfe ; '.'
0000000000016143         db  0xff ; '.'
0000000000016144         db  0xce ; '.'
0000000000016145         db  0xf4 ; '.'
0000000000016146         db  0xfe ; '.'
0000000000016147         db  0xff ; '.'
0000000000016148         db  0xa0 ; '.'
0000000000016149         db  0xf6 ; '.'
000000000001614a         db  0xfe ; '.'
000000000001614b         db  0xff ; '.'
000000000001614c         db  0xce ; '.'
000000000001614d         db  0xf4 ; '.'
000000000001614e         db  0xfe ; '.'
000000000001614f         db  0xff ; '.'
0000000000016150         db  0xb0 ; '.'
0000000000016151         db  0xf6 ; '.'
0000000000016152         db  0xfe ; '.'
0000000000016153         db  0xff ; '.'
0000000000016154         db  0xce ; '.'
0000000000016155         db  0xf4 ; '.'
0000000000016156         db  0xfe ; '.'
0000000000016157         db  0xff ; '.'
0000000000016158         db  0x50 ; 'P'
0000000000016159         db  0xf6 ; '.'
000000000001615a         db  0xfe ; '.'
000000000001615b         db  0xff ; '.'
000000000001615c         db  0xce ; '.'
000000000001615d         db  0xf4 ; '.'
000000000001615e         db  0xfe ; '.'
000000000001615f         db  0xff ; '.'
0000000000016160         db  0xc0 ; '.'
0000000000016161         db  0xf5 ; '.'
0000000000016162         db  0xfe ; '.'
0000000000016163         db  0xff ; '.'
0000000000016164         db  0x1c ; '.'                                         ; DATA XREF=print_current_files+17
0000000000016165         db  0x31 ; '1'
0000000000016166         db  0xff ; '.'
0000000000016167         db  0xff ; '.'
0000000000016168         db  0x8c ; '.'
0000000000016169         db  0x2f ; '/'
000000000001616a         db  0xff ; '.'
000000000001616b         db  0xff ; '.'
000000000001616c         db  0xec ; '.'
000000000001616d         db  0x2f ; '/'
000000000001616e         db  0xff ; '.'
000000000001616f         db  0xff ; '.'
0000000000016170         db  0x74 ; 't'
0000000000016171         db  0x2e ; '.'
0000000000016172         db  0xff ; '.'
0000000000016173         db  0xff ; '.'
0000000000016174         db  0x6c ; 'l'
0000000000016175         db  0x2f ; '/'
0000000000016176         db  0xff ; '.'
0000000000016177         db  0xff ; '.'
                     switch_table_16178:        // switch_table
0000000000016178         dd         main.loc_3dee-switch_table_16178, main.loc_501d-switch_table_16178, 178 dup (main.loc_50b7-switch_table_16178), main.loc_3dd2-switch_table_16178 ; switch table used at 0x3b4c containing 276 entries, DATA XREF=main+583
000000000001644c         dd         15 dup (main.loc_50b7-switch_table_16178), main.loc_3dc3-switch_table_16178, main.loc_3d72-switch_table_16178, main.loc_3d63-switch_table_16178
0000000000016494         dd         main.loc_3d57-switch_table_16178, main.loc_50b7-switch_table_16178, main.loc_3d48-switch_table_16178, main.loc_3d3c-switch_table_16178
00000000000164a4         dd         main.loc_3d2d-switch_table_16178, main.loc_3cf8-switch_table_16178, 2 dup (main.loc_50b7-switch_table_16178), main.loc_3ce9-switch_table_16178
00000000000164b8         dd         main.loc_50b7-switch_table_16178, main.loc_3cdb-switch_table_16178, 2 dup (main.loc_50b7-switch_table_16178), main.loc_3cca-switch_table_16178
00000000000164cc         dd         main.loc_3cbe-switch_table_16178, main.loc_3caa-switch_table_16178, main.loc_3c65-switch_table_16178, main.loc_3c51-switch_table_16178
00000000000164dc         dd         2 dup (main.loc_50b7-switch_table_16178), main.loc_3c3d-switch_table_16178, main.loc_50b7-switch_table_16178, main.loc_3c31-switch_table_16178
00000000000164f0         dd         6 dup (main.loc_50b7-switch_table_16178), main.loc_3c22-switch_table_16178, main.loc_3c11-switch_table_16178, main.loc_3c02-switch_table_16178
0000000000016514         dd         main.loc_3bf6-switch_table_16178, main.loc_50b7-switch_table_16178, main.loc_3bb6-switch_table_16178, main.loc_3ba0-switch_table_16178
0000000000016524         dd         main.loc_3b71-switch_table_16178, main.loc_3b68-switch_table_16178, main.loc_50b7-switch_table_16178, main.loc_3b61-switch_table_16178
0000000000016534         dd         main.loc_3b55-switch_table_16178, main.loc_41bc-switch_table_16178, main.loc_3b4e-switch_table_16178, main.loc_41a6-switch_table_16178
0000000000016544         dd         main.loc_4197-switch_table_16178, main.loc_418b-switch_table_16178, main.loc_417f-switch_table_16178, main.loc_4173-switch_table_16178
0000000000016554         dd         main.loc_415f-switch_table_16178, main.loc_423f-switch_table_16178, main.loc_422b-switch_table_16178, main.loc_41da-switch_table_16178
0000000000016564         dd         main.loc_41cb-switch_table_16178, 7 dup (main.loc_50b7-switch_table_16178), main.loc_424e-switch_table_16178, main.loc_411e-switch_table_16178
000000000001658c         dd         main.loc_40bf-switch_table_16178, main.loc_40b0-switch_table_16178, main.loc_40a1-switch_table_16178, main.loc_405e-switch_table_16178
000000000001659c         dd         main.loc_4048-switch_table_16178, main.loc_403c-switch_table_16178, main.loc_4011-switch_table_16178, main.loc_3fa5-switch_table_16178
00000000000165ac         dd         main.loc_3f62-switch_table_16178, main.loc_3f1e-switch_table_16178, main.loc_3f12-switch_table_16178, main.loc_3ee3-switch_table_16178
00000000000165bc         dd         main.loc_3e9b-switch_table_16178, main.loc_3e58-switch_table_16178, main.loc_3e4c-switch_table_16178
00000000000165c8         db  0x00 ; '.'
00000000000165c9         db  0x00 ; '.'
00000000000165ca         db  0x00 ; '.'
00000000000165cb         db  0x00 ; '.'
00000000000165cc         db  0x00 ; '.'
00000000000165cd         db  0x00 ; '.'
00000000000165ce         db  0x00 ; '.'
00000000000165cf         db  0x00 ; '.'
00000000000165d0         db  0x00 ; '.'
00000000000165d1         db  0x00 ; '.'
00000000000165d2         db  0x00 ; '.'
00000000000165d3         db  0x00 ; '.'
00000000000165d4         db  0x00 ; '.'
00000000000165d5         db  0x00 ; '.'
00000000000165d6         db  0x00 ; '.'
00000000000165d7         db  0x00 ; '.'
00000000000165d8         db  0x00 ; '.'
00000000000165d9         db  0x00 ; '.'
00000000000165da         db  0x00 ; '.'
00000000000165db         db  0x00 ; '.'
00000000000165dc         db  0x00 ; '.'
00000000000165dd         db  0x00 ; '.'
00000000000165de         db  0x00 ; '.'
00000000000165df         db  0x00 ; '.'
                     CSWTCH.920:
00000000000165e0         db  0x01 ; '.'                                         ; DATA XREF=print_dir+1301
00000000000165e1         db  0x00 ; '.'
00000000000165e2         db  0x00 ; '.'
00000000000165e3         db  0x00 ; '.'
00000000000165e4         db  0x02 ; '.'
00000000000165e5         db  0x00 ; '.'
00000000000165e6         db  0x00 ; '.'
00000000000165e7         db  0x00 ; '.'
00000000000165e8         db  0x00 ; '.'
00000000000165e9         db  0x00 ; '.'
00000000000165ea         db  0x00 ; '.'
00000000000165eb         db  0x00 ; '.'
00000000000165ec         db  0x03 ; '.'
00000000000165ed         db  0x00 ; '.'
00000000000165ee         db  0x00 ; '.'
00000000000165ef         db  0x00 ; '.'
00000000000165f0         db  0x00 ; '.'
00000000000165f1         db  0x00 ; '.'
00000000000165f2         db  0x00 ; '.'
00000000000165f3         db  0x00 ; '.'
00000000000165f4         db  0x04 ; '.'
00000000000165f5         db  0x00 ; '.'
00000000000165f6         db  0x00 ; '.'
00000000000165f7         db  0x00 ; '.'
00000000000165f8         db  0x00 ; '.'
00000000000165f9         db  0x00 ; '.'
00000000000165fa         db  0x00 ; '.'
00000000000165fb         db  0x00 ; '.'
00000000000165fc         db  0x05 ; '.'
00000000000165fd         db  0x00 ; '.'
00000000000165fe         db  0x00 ; '.'
00000000000165ff         db  0x00 ; '.'
0000000000016600         db  0x00 ; '.'
0000000000016601         db  0x00 ; '.'
0000000000016602         db  0x00 ; '.'
0000000000016603         db  0x00 ; '.'
0000000000016604         db  0x06 ; '.'
0000000000016605         db  0x00 ; '.'
0000000000016606         db  0x00 ; '.'
0000000000016607         db  0x00 ; '.'
0000000000016608         db  0x00 ; '.'
0000000000016609         db  0x00 ; '.'
000000000001660a         db  0x00 ; '.'
000000000001660b         db  0x00 ; '.'
000000000001660c         db  0x07 ; '.'
000000000001660d         db  0x00 ; '.'
000000000001660e         db  0x00 ; '.'
000000000001660f         db  0x00 ; '.'
0000000000016610         db  0x00 ; '.'
0000000000016611         db  0x00 ; '.'
0000000000016612         db  0x00 ; '.'
0000000000016613         db  0x00 ; '.'
0000000000016614         db  0x08 ; '.'
0000000000016615         db  0x00 ; '.'
0000000000016616         db  0x00 ; '.'
0000000000016617         db  0x00 ; '.'
                     __PRETTY_FUNCTION__.9809:
0000000000016618         db         "dev_ino_pop", 0                            ; DATA XREF=main+6471
0000000000016624         db  0x00 ; '.'
0000000000016625         db  0x00 ; '.'
0000000000016626         db  0x00 ; '.'
0000000000016627         db  0x00 ; '.'
0000000000016628         db  0x00 ; '.'
0000000000016629         db  0x00 ; '.'
000000000001662a         db  0x00 ; '.'
000000000001662b         db  0x00 ; '.'
000000000001662c         db  0x00 ; '.'
000000000001662d         db  0x00 ; '.'
000000000001662e         db  0x00 ; '.'
000000000001662f         db  0x00 ; '.'
0000000000016630         db  0x00 ; '.'
0000000000016631         db  0x00 ; '.'
0000000000016632         db  0x00 ; '.'
0000000000016633         db  0x00 ; '.'
0000000000016634         db  0x00 ; '.'
0000000000016635         db  0x00 ; '.'
0000000000016636         db  0x00 ; '.'
0000000000016637         db  0x00 ; '.'
0000000000016638         db  0x00 ; '.'
0000000000016639         db  0x00 ; '.'
000000000001663a         db  0x00 ; '.'
000000000001663b         db  0x00 ; '.'
000000000001663c         db  0x00 ; '.'
000000000001663d         db  0x00 ; '.'
000000000001663e         db  0x00 ; '.'
000000000001663f         db  0x00 ; '.'
                     sig.9937:
0000000000016640         db  0x14 ; '.'
0000000000016641         db  0x00 ; '.'
0000000000016642         db  0x00 ; '.'
0000000000016643         db  0x00 ; '.'
0000000000016644         db  0x0e ; '.'                                         ; DATA XREF=signal_setup+41, signal_setup+160
0000000000016645         db  0x00 ; '.'
0000000000016646         db  0x00 ; '.'
0000000000016647         db  0x00 ; '.'
0000000000016648         db  0x01 ; '.'
0000000000016649         db  0x00 ; '.'
000000000001664a         db  0x00 ; '.'
000000000001664b         db  0x00 ; '.'
000000000001664c         db  0x02 ; '.'
000000000001664d         db  0x00 ; '.'
000000000001664e         db  0x00 ; '.'
000000000001664f         db  0x00 ; '.'
0000000000016650         db  0x0d ; '.'
0000000000016651         db  0x00 ; '.'
0000000000016652         db  0x00 ; '.'
0000000000016653         db  0x00 ; '.'
0000000000016654         db  0x03 ; '.'
0000000000016655         db  0x00 ; '.'
0000000000016656         db  0x00 ; '.'
0000000000016657         db  0x00 ; '.'
0000000000016658         db  0x0f ; '.'
0000000000016659         db  0x00 ; '.'
000000000001665a         db  0x00 ; '.'
000000000001665b         db  0x00 ; '.'
000000000001665c         db  0x1d ; '.'
000000000001665d         db  0x00 ; '.'
000000000001665e         db  0x00 ; '.'
000000000001665f         db  0x00 ; '.'
0000000000016660         db  0x1b ; '.'
0000000000016661         db  0x00 ; '.'
0000000000016662         db  0x00 ; '.'
0000000000016663         db  0x00 ; '.'
0000000000016664         db  0x1a ; '.'
0000000000016665         db  0x00 ; '.'
0000000000016666         db  0x00 ; '.'
0000000000016667         db  0x00 ; '.'
0000000000016668         db  0x18 ; '.'
0000000000016669         db  0x00 ; '.'
000000000001666a         db  0x00 ; '.'
000000000001666b         db  0x00 ; '.'
000000000001666c         db  0x19 ; '.'
000000000001666d         db  0x00 ; '.'
000000000001666e         db  0x00 ; '.'
000000000001666f         db  0x00 ; '.'
0000000000016670         db  0x00 ; '.'
0000000000016671         db  0x00 ; '.'
0000000000016672         db  0x00 ; '.'
0000000000016673         db  0x00 ; '.'
0000000000016674         db  0x00 ; '.'
0000000000016675         db  0x00 ; '.'
0000000000016676         db  0x00 ; '.'
0000000000016677         db  0x00 ; '.'
0000000000016678         db  0x00 ; '.'
0000000000016679         db  0x00 ; '.'
000000000001667a         db  0x00 ; '.'
000000000001667b         db  0x00 ; '.'
000000000001667c         db  0x00 ; '.'
000000000001667d         db  0x00 ; '.'
000000000001667e         db  0x00 ; '.'
000000000001667f         db  0x00 ; '.'
                     filetype_indicator.11085:
0000000000016680         db  0x0d ; '.'                                         ; DATA XREF=print_name_with_quoting+182
0000000000016681         db  0x00 ; '.'
0000000000016682         db  0x00 ; '.'
0000000000016683         db  0x00 ; '.'
0000000000016684         db  0x08 ; '.'
0000000000016685         db  0x00 ; '.'
0000000000016686         db  0x00 ; '.'
0000000000016687         db  0x00 ; '.'
0000000000016688         db  0x0b ; '.'
0000000000016689         db  0x00 ; '.'
000000000001668a         db  0x00 ; '.'
000000000001668b         db  0x00 ; '.'
000000000001668c         db  0x06 ; '.'
000000000001668d         db  0x00 ; '.'
000000000001668e         db  0x00 ; '.'
000000000001668f         db  0x00 ; '.'
0000000000016690         db  0x0a ; '.'
0000000000016691         db  0x00 ; '.'
0000000000016692         db  0x00 ; '.'
0000000000016693         db  0x00 ; '.'
0000000000016694         db  0x05 ; '.'
0000000000016695         db  0x00 ; '.'
0000000000016696         db  0x00 ; '.'
0000000000016697         db  0x00 ; '.'
0000000000016698         db  0x07 ; '.'
0000000000016699         db  0x00 ; '.'
000000000001669a         db  0x00 ; '.'
000000000001669b         db  0x00 ; '.'
000000000001669c         db  0x09 ; '.'
000000000001669d         db  0x00 ; '.'
000000000001669e         db  0x00 ; '.'
000000000001669f         db  0x00 ; '.'
00000000000166a0         db  0x05 ; '.'
00000000000166a1         db  0x00 ; '.'
00000000000166a2         db  0x00 ; '.'
00000000000166a3         db  0x00 ; '.'
00000000000166a4         db  0x06 ; '.'
00000000000166a5         db  0x00 ; '.'
00000000000166a6         db  0x00 ; '.'
00000000000166a7         db  0x00 ; '.'
                     __PRETTY_FUNCTION__.10745:
00000000000166a8         db         "sort_files", 0                             ; DATA XREF=sort_files+359
                     posix_prefix.10077:
00000000000166b3         db         "posix-", 0                                 ; DATA XREF=main+2920
                     __PRETTY_FUNCTION__.9964:
00000000000166ba         db  0x6d ; 'm'                                         ; DATA XREF=main+6502, main+6533
00000000000166bb         db  0x61 ; 'a'
00000000000166bc         db  0x69 ; 'i'
00000000000166bd         db  0x6e ; 'n'
00000000000166be         db  0x00 ; '.'
00000000000166bf         db  0x00 ; '.'
                     when_types:
00000000000166c0         db  0x01 ; '.'                                         ; DATA XREF=main+1827, main+1852, main+2109, main+2134
00000000000166c1         db  0x00 ; '.'
00000000000166c2         db  0x00 ; '.'
00000000000166c3         db  0x00 ; '.'
00000000000166c4         db  0x01 ; '.'
00000000000166c5         db  0x00 ; '.'
00000000000166c6         db  0x00 ; '.'
00000000000166c7         db  0x00 ; '.'
00000000000166c8         db  0x01 ; '.'
00000000000166c9         db  0x00 ; '.'
00000000000166ca         db  0x00 ; '.'
00000000000166cb         db  0x00 ; '.'
00000000000166cc         db  0x00 ; '.'
00000000000166cd         db  0x00 ; '.'
00000000000166ce         db  0x00 ; '.'
00000000000166cf         db  0x00 ; '.'
00000000000166d0         db  0x00 ; '.'
00000000000166d1         db  0x00 ; '.'
00000000000166d2         db  0x00 ; '.'
00000000000166d3         db  0x00 ; '.'
00000000000166d4         db  0x00 ; '.'
00000000000166d5         db  0x00 ; '.'
00000000000166d6         db  0x00 ; '.'
00000000000166d7         db  0x00 ; '.'
00000000000166d8         db  0x02 ; '.'
00000000000166d9         db  0x00 ; '.'
00000000000166da         db  0x00 ; '.'
00000000000166db         db  0x00 ; '.'
00000000000166dc         db  0x02 ; '.'
00000000000166dd         db  0x00 ; '.'
00000000000166de         db  0x00 ; '.'
00000000000166df         db  0x00 ; '.'
00000000000166e0         db  0x02 ; '.'
00000000000166e1         db  0x00 ; '.'
00000000000166e2         db  0x00 ; '.'
00000000000166e3         db  0x00 ; '.'
00000000000166e4         db  0x00 ; '.'
00000000000166e5         db  0x00 ; '.'
00000000000166e6         db  0x00 ; '.'
00000000000166e7         db  0x00 ; '.'
00000000000166e8         db  0x00 ; '.'
00000000000166e9         db  0x00 ; '.'
00000000000166ea         db  0x00 ; '.'
00000000000166eb         db  0x00 ; '.'
00000000000166ec         db  0x00 ; '.'
00000000000166ed         db  0x00 ; '.'
00000000000166ee         db  0x00 ; '.'
00000000000166ef         db  0x00 ; '.'
                     time_types:
00000000000166f0         db  0x02 ; '.'                                         ; DATA XREF=main+1485, main+1510
00000000000166f1         db  0x00 ; '.'
00000000000166f2         db  0x00 ; '.'
00000000000166f3         db  0x00 ; '.'
00000000000166f4         db  0x02 ; '.'
00000000000166f5         db  0x00 ; '.'
00000000000166f6         db  0x00 ; '.'
00000000000166f7         db  0x00 ; '.'
00000000000166f8         db  0x02 ; '.'
00000000000166f9         db  0x00 ; '.'
00000000000166fa         db  0x00 ; '.'
00000000000166fb         db  0x00 ; '.'
00000000000166fc         db  0x01 ; '.'
00000000000166fd         db  0x00 ; '.'
00000000000166fe         db  0x00 ; '.'
00000000000166ff         db  0x00 ; '.'
0000000000016700         db  0x01 ; '.'
0000000000016701         db  0x00 ; '.'
0000000000016702         db  0x00 ; '.'
0000000000016703         db  0x00 ; '.'
0000000000016704         db  0x00 ; '.'
0000000000016705         db  0x00 ; '.'
0000000000016706         db  0x00 ; '.'
0000000000016707         db  0x00 ; '.'
0000000000016708         db  0x00 ; '.'
0000000000016709         db  0x00 ; '.'
000000000001670a         db  0x00 ; '.'
000000000001670b         db  0x00 ; '.'
000000000001670c         db  0x00 ; '.'
000000000001670d         db  0x00 ; '.'
000000000001670e         db  0x00 ; '.'
000000000001670f         db  0x00 ; '.'
                     sort_types:
0000000000016710         db  0xff ; '.'                                         ; DATA XREF=main+1552, main+1577
0000000000016711         db  0xff ; '.'
0000000000016712         db  0xff ; '.'
0000000000016713         db  0xff ; '.'
0000000000016714         db  0x04 ; '.'
0000000000016715         db  0x00 ; '.'
0000000000016716         db  0x00 ; '.'
0000000000016717         db  0x00 ; '.'
0000000000016718         db  0x02 ; '.'
0000000000016719         db  0x00 ; '.'
000000000001671a         db  0x00 ; '.'
000000000001671b         db  0x00 ; '.'
000000000001671c         db  0x01 ; '.'
000000000001671d         db  0x00 ; '.'
000000000001671e         db  0x00 ; '.'
000000000001671f         db  0x00 ; '.'
0000000000016720         db  0x03 ; '.'
0000000000016721         db  0x00 ; '.'
0000000000016722         db  0x00 ; '.'
0000000000016723         db  0x00 ; '.'
0000000000016724         db  0x00 ; '.'
0000000000016725         db  0x00 ; '.'
0000000000016726         db  0x00 ; '.'
0000000000016727         db  0x00 ; '.'
0000000000016728         db  0x00 ; '.'
0000000000016729         db  0x00 ; '.'
000000000001672a         db  0x00 ; '.'
000000000001672b         db  0x00 ; '.'
000000000001672c         db  0x00 ; '.'
000000000001672d         db  0x00 ; '.'
000000000001672e         db  0x00 ; '.'
000000000001672f         db  0x00 ; '.'
                     format_types:
0000000000016730         db  0x00 ; '.'                                         ; DATA XREF=main+2003, main+2028
0000000000016731         db  0x00 ; '.'
0000000000016732         db  0x00 ; '.'
0000000000016733         db  0x00 ; '.'
0000000000016734         db  0x00 ; '.'
0000000000016735         db  0x00 ; '.'
0000000000016736         db  0x00 ; '.'
0000000000016737         db  0x00 ; '.'
0000000000016738         db  0x04 ; '.'
0000000000016739         db  0x00 ; '.'
000000000001673a         db  0x00 ; '.'
000000000001673b         db  0x00 ; '.'
000000000001673c         db  0x03 ; '.'
000000000001673d         db  0x00 ; '.'
000000000001673e         db  0x00 ; '.'
000000000001673f         db  0x00 ; '.'
0000000000016740         db  0x03 ; '.'
0000000000016741         db  0x00 ; '.'
0000000000016742         db  0x00 ; '.'
0000000000016743         db  0x00 ; '.'
0000000000016744         db  0x02 ; '.'
0000000000016745         db  0x00 ; '.'
0000000000016746         db  0x00 ; '.'
0000000000016747         db  0x00 ; '.'
0000000000016748         db  0x01 ; '.'
0000000000016749         db  0x00 ; '.'
000000000001674a         db  0x00 ; '.'
000000000001674b         db  0x00 ; '.'
000000000001674c         db  0x00 ; '.'
000000000001674d         db  0x00 ; '.'
000000000001674e         db  0x00 ; '.'
000000000001674f         db  0x00 ; '.'
                     indicator_style_types:
0000000000016750         db  0x00 ; '.'                                         ; DATA XREF=main+1751, main+1776
0000000000016751         db  0x00 ; '.'
0000000000016752         db  0x00 ; '.'
0000000000016753         db  0x00 ; '.'
0000000000016754         db  0x01 ; '.'
0000000000016755         db  0x00 ; '.'
0000000000016756         db  0x00 ; '.'
0000000000016757         db  0x00 ; '.'
0000000000016758         db  0x02 ; '.'
0000000000016759         db  0x00 ; '.'
000000000001675a         db  0x00 ; '.'
000000000001675b         db  0x00 ; '.'
000000000001675c         db  0x03 ; '.'
000000000001675d         db  0x00 ; '.'
000000000001675e         db  0x00 ; '.'
000000000001675f         db  0x00 ; '.'
                     time_style_types:
0000000000016760         db  0x00 ; '.'                                         ; DATA XREF=main+5067
0000000000016761         db  0x00 ; '.'
0000000000016762         db  0x00 ; '.'
0000000000016763         db  0x00 ; '.'
0000000000016764         db  0x01 ; '.'
0000000000016765         db  0x00 ; '.'
0000000000016766         db  0x00 ; '.'
0000000000016767         db  0x00 ; '.'
0000000000016768         db  0x02 ; '.'
0000000000016769         db  0x00 ; '.'
000000000001676a         db  0x00 ; '.'
000000000001676b         db  0x00 ; '.'
000000000001676c         db  0x03 ; '.'
000000000001676d         db  0x00 ; '.'
000000000001676e         db  0x00 ; '.'
000000000001676f         db  0x00 ; '.'
                     filetype_letter:
0000000000016770         db         "?pcdb-lswd", 0                             ; DATA XREF=print_long_format+1014
000000000001677b         align      128
                     G_line:
0000000000016780         db         "# Configuration file for dircolors, a utility to help you set the", 0 ; DATA XREF=main+4746
00000000000167c2         db  0x23 ; '#'
00000000000167c3         db  0x20 ; ' '
00000000000167c4         db  0x4c ; 'L'
00000000000167c5         db  0x53 ; 'S'
00000000000167c6         db  0x5f ; '_'
00000000000167c7         db  0x43 ; 'C'
00000000000167c8         db  0x4f ; 'O'
00000000000167c9         db  0x4c ; 'L'
00000000000167ca         db  0x4f ; 'O'
00000000000167cb         db  0x52 ; 'R'
00000000000167cc         db  0x53 ; 'S'
00000000000167cd         db  0x20 ; ' '
00000000000167ce         db  0x65 ; 'e'
00000000000167cf         db  0x6e ; 'n'
00000000000167d0         db  0x76 ; 'v'
00000000000167d1         db  0x69 ; 'i'
00000000000167d2         db  0x72 ; 'r'
00000000000167d3         db  0x6f ; 'o'
00000000000167d4         db  0x6e ; 'n'
00000000000167d5         db  0x6d ; 'm'
00000000000167d6         db  0x65 ; 'e'
00000000000167d7         db  0x6e ; 'n'
00000000000167d8         db  0x74 ; 't'
00000000000167d9         db  0x20 ; ' '
00000000000167da         db  0x76 ; 'v'
00000000000167db         db  0x61 ; 'a'
00000000000167dc         db  0x72 ; 'r'
00000000000167dd         db  0x69 ; 'i'
00000000000167de         db  0x61 ; 'a'
00000000000167df         db  0x62 ; 'b'
00000000000167e0         db  0x6c ; 'l'
00000000000167e1         db  0x65 ; 'e'
00000000000167e2         db  0x20 ; ' '
00000000000167e3         db  0x75 ; 'u'
00000000000167e4         db  0x73 ; 's'
00000000000167e5         db  0x65 ; 'e'
00000000000167e6         db  0x64 ; 'd'
00000000000167e7         db  0x20 ; ' '
00000000000167e8         db  0x62 ; 'b'
00000000000167e9         db  0x79 ; 'y'
00000000000167ea         db  0x20 ; ' '
00000000000167eb         db  0x47 ; 'G'
00000000000167ec         db  0x4e ; 'N'
00000000000167ed         db  0x55 ; 'U'
00000000000167ee         db  0x20 ; ' '
00000000000167ef         db  0x6c ; 'l'
00000000000167f0         db  0x73 ; 's'
00000000000167f1         db  0x20 ; ' '
00000000000167f2         db  0x77 ; 'w'
00000000000167f3         db  0x69 ; 'i'
00000000000167f4         db  0x74 ; 't'
00000000000167f5         db  0x68 ; 'h'
00000000000167f6         db  0x20 ; ' '
00000000000167f7         db  0x74 ; 't'
00000000000167f8         db  0x68 ; 'h'
00000000000167f9         db  0x65 ; 'e'
00000000000167fa         db  0x20 ; ' '
00000000000167fb         db  0x2d ; '-'
00000000000167fc         db  0x2d ; '-'
00000000000167fd         db  0x63 ; 'c'
00000000000167fe         db  0x6f ; 'o'
00000000000167ff         db  0x6c ; 'l'
0000000000016800         db  0x6f ; 'o'
0000000000016801         db  0x72 ; 'r'
0000000000016802         db  0x20 ; ' '
0000000000016803         db  0x6f ; 'o'
0000000000016804         db  0x70 ; 'p'
0000000000016805         db  0x74 ; 't'
0000000000016806         db  0x69 ; 'i'
0000000000016807         db  0x6f ; 'o'
0000000000016808         db  0x6e ; 'n'
0000000000016809         db  0x2e ; '.'
000000000001680a         db  0x00 ; '.'
000000000001680b         db  0x23 ; '#'
000000000001680c         db  0x20 ; ' '
000000000001680d         db  0x43 ; 'C'
000000000001680e         db  0x6f ; 'o'
000000000001680f         db  0x70 ; 'p'
0000000000016810         db  0x79 ; 'y'
0000000000016811         db  0x72 ; 'r'
0000000000016812         db  0x69 ; 'i'
0000000000016813         db  0x67 ; 'g'
0000000000016814         db  0x68 ; 'h'
0000000000016815         db  0x74 ; 't'
0000000000016816         db  0x20 ; ' '
0000000000016817         db  0x28 ; '('
0000000000016818         db  0x43 ; 'C'
0000000000016819         db  0x29 ; ')'
000000000001681a         db  0x20 ; ' '
000000000001681b         db  0x31 ; '1'
000000000001681c         db  0x39 ; '9'
000000000001681d         db  0x39 ; '9'
000000000001681e         db  0x36 ; '6'
000000000001681f         db  0x2d ; '-'
0000000000016820         db  0x32 ; '2'
0000000000016821         db  0x30 ; '0'
0000000000016822         db  0x31 ; '1'
0000000000016823         db  0x39 ; '9'
0000000000016824         db  0x20 ; ' '
0000000000016825         db  0x46 ; 'F'
0000000000016826         db  0x72 ; 'r'
0000000000016827         db  0x65 ; 'e'
0000000000016828         db  0x65 ; 'e'
0000000000016829         db  0x20 ; ' '
000000000001682a         db  0x53 ; 'S'
000000000001682b         db  0x6f ; 'o'
000000000001682c         db  0x66 ; 'f'
000000000001682d         db  0x74 ; 't'
000000000001682e         db  0x77 ; 'w'
000000000001682f         db  0x61 ; 'a'
0000000000016830         db  0x72 ; 'r'
0000000000016831         db  0x65 ; 'e'
0000000000016832         db  0x20 ; ' '
0000000000016833         db  0x46 ; 'F'
0000000000016834         db  0x6f ; 'o'
0000000000016835         db  0x75 ; 'u'
0000000000016836         db  0x6e ; 'n'
0000000000016837         db  0x64 ; 'd'
0000000000016838         db  0x61 ; 'a'
0000000000016839         db  0x74 ; 't'
000000000001683a         db  0x69 ; 'i'
000000000001683b         db  0x6f ; 'o'
000000000001683c         db  0x6e ; 'n'
000000000001683d         db  0x2c ; ','
000000000001683e         db  0x20 ; ' '
000000000001683f         db  0x49 ; 'I'
0000000000016840         db  0x6e ; 'n'
0000000000016841         db  0x63 ; 'c'
0000000000016842         db  0x2e ; '.'
0000000000016843         db  0x00 ; '.'
0000000000016844         db  0x23 ; '#'
0000000000016845         db  0x20 ; ' '
0000000000016846         db  0x43 ; 'C'
0000000000016847         db  0x6f ; 'o'
0000000000016848         db  0x70 ; 'p'
0000000000016849         db  0x79 ; 'y'
000000000001684a         db  0x69 ; 'i'
000000000001684b         db  0x6e ; 'n'
000000000001684c         db  0x67 ; 'g'
000000000001684d         db  0x20 ; ' '
000000000001684e         db  0x61 ; 'a'
000000000001684f         db  0x6e ; 'n'
0000000000016850         db  0x64 ; 'd'
0000000000016851         db  0x20 ; ' '
0000000000016852         db  0x64 ; 'd'
0000000000016853         db  0x69 ; 'i'
0000000000016854         db  0x73 ; 's'
0000000000016855         db  0x74 ; 't'
0000000000016856         db  0x72 ; 'r'
0000000000016857         db  0x69 ; 'i'
0000000000016858         db  0x62 ; 'b'
0000000000016859         db  0x75 ; 'u'
000000000001685a         db  0x74 ; 't'
000000000001685b         db  0x69 ; 'i'
000000000001685c         db  0x6f ; 'o'
000000000001685d         db  0x6e ; 'n'
000000000001685e         db  0x20 ; ' '
000000000001685f         db  0x6f ; 'o'
0000000000016860         db  0x66 ; 'f'
0000000000016861         db  0x20 ; ' '
0000000000016862         db  0x74 ; 't'
0000000000016863         db  0x68 ; 'h'
0000000000016864         db  0x69 ; 'i'
0000000000016865         db  0x73 ; 's'
0000000000016866         db  0x20 ; ' '
0000000000016867         db  0x66 ; 'f'
0000000000016868         db  0x69 ; 'i'
0000000000016869         db  0x6c ; 'l'
000000000001686a         db  0x65 ; 'e'
000000000001686b         db  0x2c ; ','
000000000001686c         db  0x20 ; ' '
000000000001686d         db  0x77 ; 'w'
000000000001686e         db  0x69 ; 'i'
000000000001686f         db  0x74 ; 't'
0000000000016870         db  0x68 ; 'h'
0000000000016871         db  0x20 ; ' '
0000000000016872         db  0x6f ; 'o'
0000000000016873         db  0x72 ; 'r'
0000000000016874         db  0x20 ; ' '
0000000000016875         db  0x77 ; 'w'
0000000000016876         db  0x69 ; 'i'
0000000000016877         db  0x74 ; 't'
0000000000016878         db  0x68 ; 'h'
0000000000016879         db  0x6f ; 'o'
000000000001687a         db  0x75 ; 'u'
000000000001687b         db  0x74 ; 't'
000000000001687c         db  0x20 ; ' '
000000000001687d         db  0x6d ; 'm'
000000000001687e         db  0x6f ; 'o'
000000000001687f         db  0x64 ; 'd'
0000000000016880         db  0x69 ; 'i'
0000000000016881         db  0x66 ; 'f'
0000000000016882         db  0x69 ; 'i'
0000000000016883         db  0x63 ; 'c'
0000000000016884         db  0x61 ; 'a'
0000000000016885         db  0x74 ; 't'
0000000000016886         db  0x69 ; 'i'
0000000000016887         db  0x6f ; 'o'
0000000000016888         db  0x6e ; 'n'
0000000000016889         db  0x2c ; ','
000000000001688a         db  0x00 ; '.'
000000000001688b         db  0x23 ; '#'
000000000001688c         db  0x20 ; ' '
000000000001688d         db  0x61 ; 'a'
000000000001688e         db  0x72 ; 'r'
000000000001688f         db  0x65 ; 'e'
0000000000016890         db  0x20 ; ' '
0000000000016891         db  0x70 ; 'p'
0000000000016892         db  0x65 ; 'e'
0000000000016893         db  0x72 ; 'r'
0000000000016894         db  0x6d ; 'm'
0000000000016895         db  0x69 ; 'i'
0000000000016896         db  0x74 ; 't'
0000000000016897         db  0x74 ; 't'
0000000000016898         db  0x65 ; 'e'
0000000000016899         db  0x64 ; 'd'
000000000001689a         db  0x20 ; ' '
000000000001689b         db  0x70 ; 'p'
000000000001689c         db  0x72 ; 'r'
000000000001689d         db  0x6f ; 'o'
000000000001689e         db  0x76 ; 'v'
000000000001689f         db  0x69 ; 'i'
00000000000168a0         db  0x64 ; 'd'
00000000000168a1         db  0x65 ; 'e'
00000000000168a2         db  0x64 ; 'd'
00000000000168a3         db  0x20 ; ' '
00000000000168a4         db  0x74 ; 't'
00000000000168a5         db  0x68 ; 'h'
00000000000168a6         db  0x65 ; 'e'
00000000000168a7         db  0x20 ; ' '
00000000000168a8         db  0x63 ; 'c'
00000000000168a9         db  0x6f ; 'o'
00000000000168aa         db  0x70 ; 'p'
00000000000168ab         db  0x79 ; 'y'
00000000000168ac         db  0x72 ; 'r'
00000000000168ad         db  0x69 ; 'i'
00000000000168ae         db  0x67 ; 'g'
00000000000168af         db  0x68 ; 'h'
00000000000168b0         db  0x74 ; 't'
00000000000168b1         db  0x20 ; ' '
00000000000168b2         db  0x6e ; 'n'
00000000000168b3         db  0x6f ; 'o'
00000000000168b4         db  0x74 ; 't'
00000000000168b5         db  0x69 ; 'i'
00000000000168b6         db  0x63 ; 'c'
00000000000168b7         db  0x65 ; 'e'
00000000000168b8         db  0x20 ; ' '
00000000000168b9         db  0x61 ; 'a'
00000000000168ba         db  0x6e ; 'n'
00000000000168bb         db  0x64 ; 'd'
00000000000168bc         db  0x20 ; ' '
00000000000168bd         db  0x74 ; 't'
00000000000168be         db  0x68 ; 'h'
00000000000168bf         db  0x69 ; 'i'
00000000000168c0         db  0x73 ; 's'
00000000000168c1         db  0x20 ; ' '
00000000000168c2         db  0x6e ; 'n'
00000000000168c3         db  0x6f ; 'o'
00000000000168c4         db  0x74 ; 't'
00000000000168c5         db  0x69 ; 'i'
00000000000168c6         db  0x63 ; 'c'
00000000000168c7         db  0x65 ; 'e'
00000000000168c8         db  0x20 ; ' '
00000000000168c9         db  0x61 ; 'a'
00000000000168ca         db  0x72 ; 'r'
00000000000168cb         db  0x65 ; 'e'
00000000000168cc         db  0x20 ; ' '
00000000000168cd         db  0x70 ; 'p'
00000000000168ce         db  0x72 ; 'r'
00000000000168cf         db  0x65 ; 'e'
00000000000168d0         db  0x73 ; 's'
00000000000168d1         db  0x65 ; 'e'
00000000000168d2         db  0x72 ; 'r'
00000000000168d3         db  0x76 ; 'v'
00000000000168d4         db  0x65 ; 'e'
00000000000168d5         db  0x64 ; 'd'
00000000000168d6         db  0x2e ; '.'
00000000000168d7         db  0x00 ; '.'
00000000000168d8         db  0x23 ; '#'
00000000000168d9         db  0x20 ; ' '
00000000000168da         db  0x54 ; 'T'
00000000000168db         db  0x68 ; 'h'
00000000000168dc         db  0x65 ; 'e'
00000000000168dd         db  0x20 ; ' '
00000000000168de         db  0x6b ; 'k'
00000000000168df         db  0x65 ; 'e'
00000000000168e0         db  0x79 ; 'y'
00000000000168e1         db  0x77 ; 'w'
00000000000168e2         db  0x6f ; 'o'
00000000000168e3         db  0x72 ; 'r'
00000000000168e4         db  0x64 ; 'd'
00000000000168e5         db  0x73 ; 's'
00000000000168e6         db  0x20 ; ' '
00000000000168e7         db  0x43 ; 'C'
00000000000168e8         db  0x4f ; 'O'
00000000000168e9         db  0x4c ; 'L'
00000000000168ea         db  0x4f ; 'O'
00000000000168eb         db  0x52 ; 'R'
00000000000168ec         db  0x2c ; ','
00000000000168ed         db  0x20 ; ' '
00000000000168ee         db  0x4f ; 'O'
00000000000168ef         db  0x50 ; 'P'
00000000000168f0         db  0x54 ; 'T'
00000000000168f1         db  0x49 ; 'I'
00000000000168f2         db  0x4f ; 'O'
00000000000168f3         db  0x4e ; 'N'
00000000000168f4         db  0x53 ; 'S'
00000000000168f5         db  0x2c ; ','
00000000000168f6         db  0x20 ; ' '
00000000000168f7         db  0x61 ; 'a'
00000000000168f8         db  0x6e ; 'n'
00000000000168f9         db  0x64 ; 'd'
00000000000168fa         db  0x20 ; ' '
00000000000168fb         db  0x45 ; 'E'
00000000000168fc         db  0x49 ; 'I'
00000000000168fd         db  0x47 ; 'G'
00000000000168fe         db  0x48 ; 'H'
00000000000168ff         db  0x54 ; 'T'
0000000000016900         db  0x42 ; 'B'
0000000000016901         db  0x49 ; 'I'
0000000000016902         db  0x54 ; 'T'
0000000000016903         db  0x20 ; ' '
0000000000016904         db  0x28 ; '('
0000000000016905         db  0x68 ; 'h'
0000000000016906         db  0x6f ; 'o'
0000000000016907         db  0x6e ; 'n'
0000000000016908         db  0x6f ; 'o'
0000000000016909         db  0x72 ; 'r'
000000000001690a         db  0x65 ; 'e'
000000000001690b         db  0x64 ; 'd'
000000000001690c         db  0x20 ; ' '
000000000001690d         db  0x62 ; 'b'
000000000001690e         db  0x79 ; 'y'
000000000001690f         db  0x20 ; ' '
0000000000016910         db  0x74 ; 't'
0000000000016911         db  0x68 ; 'h'
0000000000016912         db  0x65 ; 'e'
0000000000016913         db  0x00 ; '.'
0000000000016914         db  0x23 ; '#'
0000000000016915         db  0x20 ; ' '
0000000000016916         db  0x73 ; 's'
0000000000016917         db  0x6c ; 'l'
0000000000016918         db  0x61 ; 'a'
0000000000016919         db  0x63 ; 'c'
000000000001691a         db  0x6b ; 'k'
000000000001691b         db  0x77 ; 'w'
000000000001691c         db  0x61 ; 'a'
000000000001691d         db  0x72 ; 'r'
000000000001691e         db  0x65 ; 'e'
000000000001691f         db  0x20 ; ' '
0000000000016920         db  0x76 ; 'v'
0000000000016921         db  0x65 ; 'e'
0000000000016922         db  0x72 ; 'r'
0000000000016923         db  0x73 ; 's'
0000000000016924         db  0x69 ; 'i'
0000000000016925         db  0x6f ; 'o'
0000000000016926         db  0x6e ; 'n'
0000000000016927         db  0x20 ; ' '
0000000000016928         db  0x6f ; 'o'
0000000000016929         db  0x66 ; 'f'
000000000001692a         db  0x20 ; ' '
000000000001692b         db  0x64 ; 'd'
000000000001692c         db  0x69 ; 'i'
000000000001692d         db  0x72 ; 'r'
000000000001692e         db  0x63 ; 'c'
000000000001692f         db  0x6f ; 'o'
0000000000016930         db  0x6c ; 'l'
0000000000016931         db  0x6f ; 'o'
0000000000016932         db  0x72 ; 'r'
0000000000016933         db  0x73 ; 's'
0000000000016934         db  0x29 ; ')'
0000000000016935         db  0x20 ; ' '
0000000000016936         db  0x61 ; 'a'
0000000000016937         db  0x72 ; 'r'
0000000000016938         db  0x65 ; 'e'
0000000000016939         db  0x20 ; ' '
000000000001693a         db  0x72 ; 'r'
000000000001693b         db  0x65 ; 'e'
000000000001693c         db  0x63 ; 'c'
000000000001693d         db  0x6f ; 'o'
000000000001693e         db  0x67 ; 'g'
000000000001693f         db  0x6e ; 'n'
0000000000016940         db  0x69 ; 'i'
0000000000016941         db  0x7a ; 'z'
0000000000016942         db  0x65 ; 'e'
0000000000016943         db  0x64 ; 'd'
0000000000016944         db  0x20 ; ' '
0000000000016945         db  0x62 ; 'b'
0000000000016946         db  0x75 ; 'u'
0000000000016947         db  0x74 ; 't'
0000000000016948         db  0x20 ; ' '
0000000000016949         db  0x69 ; 'i'
000000000001694a         db  0x67 ; 'g'
000000000001694b         db  0x6e ; 'n'
000000000001694c         db  0x6f ; 'o'
000000000001694d         db  0x72 ; 'r'
000000000001694e         db  0x65 ; 'e'
000000000001694f         db  0x64 ; 'd'
0000000000016950         db  0x2e ; '.'
0000000000016951         db  0x00 ; '.'
0000000000016952         db  0x23 ; '#'
0000000000016953         db  0x20 ; ' '
0000000000016954         db  0x42 ; 'B'
0000000000016955         db  0x65 ; 'e'
0000000000016956         db  0x6c ; 'l'
0000000000016957         db  0x6f ; 'o'
0000000000016958         db  0x77 ; 'w'
0000000000016959         db  0x20 ; ' '
000000000001695a         db  0x61 ; 'a'
000000000001695b         db  0x72 ; 'r'
000000000001695c         db  0x65 ; 'e'
000000000001695d         db  0x20 ; ' '
000000000001695e         db  0x54 ; 'T'
000000000001695f         db  0x45 ; 'E'
0000000000016960         db  0x52 ; 'R'
0000000000016961         db  0x4d ; 'M'
0000000000016962         db  0x20 ; ' '
0000000000016963         db  0x65 ; 'e'
0000000000016964         db  0x6e ; 'n'
0000000000016965         db  0x74 ; 't'
0000000000016966         db  0x72 ; 'r'
0000000000016967         db  0x69 ; 'i'
0000000000016968         db  0x65 ; 'e'
0000000000016969         db  0x73 ; 's'
000000000001696a         db  0x2c ; ','
000000000001696b         db  0x20 ; ' '
000000000001696c         db  0x77 ; 'w'
000000000001696d         db  0x68 ; 'h'
000000000001696e         db  0x69 ; 'i'
000000000001696f         db  0x63 ; 'c'
0000000000016970         db  0x68 ; 'h'
0000000000016971         db  0x20 ; ' '
0000000000016972         db  0x63 ; 'c'
0000000000016973         db  0x61 ; 'a'
0000000000016974         db  0x6e ; 'n'
0000000000016975         db  0x20 ; ' '
0000000000016976         db  0x62 ; 'b'
0000000000016977         db  0x65 ; 'e'
0000000000016978         db  0x20 ; ' '
0000000000016979         db  0x61 ; 'a'
000000000001697a         db  0x20 ; ' '
000000000001697b         db  0x67 ; 'g'
000000000001697c         db  0x6c ; 'l'
000000000001697d         db  0x6f ; 'o'
000000000001697e         db  0x62 ; 'b'
000000000001697f         db  0x20 ; ' '
0000000000016980         db  0x70 ; 'p'
0000000000016981         db  0x61 ; 'a'
0000000000016982         db  0x74 ; 't'
0000000000016983         db  0x74 ; 't'
0000000000016984         db  0x65 ; 'e'
0000000000016985         db  0x72 ; 'r'
0000000000016986         db  0x6e ; 'n'
0000000000016987         db  0x73 ; 's'
0000000000016988         db  0x2c ; ','
0000000000016989         db  0x20 ; ' '
000000000001698a         db  0x74 ; 't'
000000000001698b         db  0x6f ; 'o'
000000000001698c         db  0x20 ; ' '
000000000001698d         db  0x6d ; 'm'
000000000001698e         db  0x61 ; 'a'
000000000001698f         db  0x74 ; 't'
0000000000016990         db  0x63 ; 'c'
0000000000016991         db  0x68 ; 'h'
0000000000016992         db  0x00 ; '.'
0000000000016993         db  0x23 ; '#'
0000000000016994         db  0x20 ; ' '
0000000000016995         db  0x61 ; 'a'
0000000000016996         db  0x67 ; 'g'
0000000000016997         db  0x61 ; 'a'
0000000000016998         db  0x69 ; 'i'
0000000000016999         db  0x6e ; 'n'
000000000001699a         db  0x73 ; 's'
000000000001699b         db  0x74 ; 't'
000000000001699c         db  0x20 ; ' '
000000000001699d         db  0x74 ; 't'
000000000001699e         db  0x68 ; 'h'
000000000001699f         db  0x65 ; 'e'
00000000000169a0         db  0x20 ; ' '
00000000000169a1         db  0x54 ; 'T'
00000000000169a2         db  0x45 ; 'E'
00000000000169a3         db  0x52 ; 'R'
00000000000169a4         db  0x4d ; 'M'
00000000000169a5         db  0x20 ; ' '
00000000000169a6         db  0x65 ; 'e'
00000000000169a7         db  0x6e ; 'n'
00000000000169a8         db  0x76 ; 'v'
00000000000169a9         db  0x69 ; 'i'
00000000000169aa         db  0x72 ; 'r'
00000000000169ab         db  0x6f ; 'o'
00000000000169ac         db  0x6e ; 'n'
00000000000169ad         db  0x6d ; 'm'
00000000000169ae         db  0x65 ; 'e'
00000000000169af         db  0x6e ; 'n'
00000000000169b0         db  0x74 ; 't'
00000000000169b1         db  0x20 ; ' '
00000000000169b2         db  0x76 ; 'v'
00000000000169b3         db  0x61 ; 'a'
00000000000169b4         db  0x72 ; 'r'
00000000000169b5         db  0x69 ; 'i'
00000000000169b6         db  0x61 ; 'a'
00000000000169b7         db  0x62 ; 'b'
00000000000169b8         db  0x6c ; 'l'
00000000000169b9         db  0x65 ; 'e'
00000000000169ba         db  0x20 ; ' '
00000000000169bb         db  0x74 ; 't'
00000000000169bc         db  0x6f ; 'o'
00000000000169bd         db  0x20 ; ' '
00000000000169be         db  0x64 ; 'd'
00000000000169bf         db  0x65 ; 'e'
00000000000169c0         db  0x74 ; 't'
00000000000169c1         db  0x65 ; 'e'
00000000000169c2         db  0x72 ; 'r'
00000000000169c3         db  0x6d ; 'm'
00000000000169c4         db  0x69 ; 'i'
00000000000169c5         db  0x6e ; 'n'
00000000000169c6         db  0x65 ; 'e'
00000000000169c7         db  0x20 ; ' '
00000000000169c8         db  0x69 ; 'i'
00000000000169c9         db  0x66 ; 'f'
00000000000169ca         db  0x20 ; ' '
00000000000169cb         db  0x69 ; 'i'
00000000000169cc         db  0x74 ; 't'
00000000000169cd         db  0x20 ; ' '
00000000000169ce         db  0x69 ; 'i'
00000000000169cf         db  0x73 ; 's'
00000000000169d0         db  0x20 ; ' '
00000000000169d1         db  0x63 ; 'c'
00000000000169d2         db  0x6f ; 'o'
00000000000169d3         db  0x6c ; 'l'
00000000000169d4         db  0x6f ; 'o'
00000000000169d5         db  0x72 ; 'r'
00000000000169d6         db  0x69 ; 'i'
00000000000169d7         db  0x7a ; 'z'
00000000000169d8         db  0x61 ; 'a'
00000000000169d9         db  0x62 ; 'b'
00000000000169da         db  0x6c ; 'l'
00000000000169db         db  0x65 ; 'e'
00000000000169dc         db  0x2e ; '.'
00000000000169dd         db  0x00 ; '.'
00000000000169de         db  0x54 ; 'T'
00000000000169df         db  0x45 ; 'E'
00000000000169e0         db  0x52 ; 'R'
00000000000169e1         db  0x4d ; 'M'
00000000000169e2         db  0x20 ; ' '
00000000000169e3         db  0x45 ; 'E'
00000000000169e4         db  0x74 ; 't'
00000000000169e5         db  0x65 ; 'e'
00000000000169e6         db  0x72 ; 'r'
00000000000169e7         db  0x6d ; 'm'
00000000000169e8         db  0x00 ; '.'
00000000000169e9         db  0x54 ; 'T'
00000000000169ea         db  0x45 ; 'E'
00000000000169eb         db  0x52 ; 'R'
00000000000169ec         db  0x4d ; 'M'
00000000000169ed         db  0x20 ; ' '
00000000000169ee         db  0x61 ; 'a'
00000000000169ef         db  0x6e ; 'n'
00000000000169f0         db  0x73 ; 's'
00000000000169f1         db  0x69 ; 'i'
00000000000169f2         db  0x00 ; '.'
00000000000169f3         db  0x54 ; 'T'
00000000000169f4         db  0x45 ; 'E'
00000000000169f5         db  0x52 ; 'R'
00000000000169f6         db  0x4d ; 'M'
00000000000169f7         db  0x20 ; ' '
00000000000169f8         db  0x2a ; '*'
00000000000169f9         db  0x63 ; 'c'
00000000000169fa         db  0x6f ; 'o'
00000000000169fb         db  0x6c ; 'l'
00000000000169fc         db  0x6f ; 'o'
00000000000169fd         db  0x72 ; 'r'
00000000000169fe         db  0x2a ; '*'
00000000000169ff         db  0x00 ; '.'
0000000000016a00         db  0x54 ; 'T'
0000000000016a01         db  0x45 ; 'E'
0000000000016a02         db  0x52 ; 'R'
0000000000016a03         db  0x4d ; 'M'
0000000000016a04         db  0x20 ; ' '
0000000000016a05         db  0x63 ; 'c'
0000000000016a06         db  0x6f ; 'o'
0000000000016a07         db  0x6e ; 'n'
0000000000016a08         db  0x5b ; '['
0000000000016a09         db  0x30 ; '0'
0000000000016a0a         db  0x2d ; '-'
0000000000016a0b         db  0x39 ; '9'
0000000000016a0c         db  0x5d ; ']'
0000000000016a0d         db  0x2a ; '*'
0000000000016a0e         db  0x78 ; 'x'
0000000000016a0f         db  0x5b ; '['
0000000000016a10         db  0x30 ; '0'
0000000000016a11         db  0x2d ; '-'
0000000000016a12         db  0x39 ; '9'
0000000000016a13         db  0x5d ; ']'
0000000000016a14         db  0x2a ; '*'
0000000000016a15         db  0x00 ; '.'
0000000000016a16         db  0x54 ; 'T'
0000000000016a17         db  0x45 ; 'E'
0000000000016a18         db  0x52 ; 'R'
0000000000016a19         db  0x4d ; 'M'
0000000000016a1a         db  0x20 ; ' '
0000000000016a1b         db  0x63 ; 'c'
0000000000016a1c         db  0x6f ; 'o'
0000000000016a1d         db  0x6e ; 'n'
0000000000016a1e         db  0x73 ; 's'
0000000000016a1f         db  0x32 ; '2'
0000000000016a20         db  0x35 ; '5'
0000000000016a21         db  0x00 ; '.'
0000000000016a22         db  0x54 ; 'T'
0000000000016a23         db  0x45 ; 'E'
0000000000016a24         db  0x52 ; 'R'
0000000000016a25         db  0x4d ; 'M'
0000000000016a26         db  0x20 ; ' '
0000000000016a27         db  0x63 ; 'c'
0000000000016a28         db  0x6f ; 'o'
0000000000016a29         db  0x6e ; 'n'
0000000000016a2a         db  0x73 ; 's'
0000000000016a2b         db  0x6f ; 'o'
0000000000016a2c         db  0x6c ; 'l'
0000000000016a2d         db  0x65 ; 'e'
0000000000016a2e         db  0x00 ; '.'
0000000000016a2f         db  0x54 ; 'T'
0000000000016a30         db  0x45 ; 'E'
0000000000016a31         db  0x52 ; 'R'
0000000000016a32         db  0x4d ; 'M'
0000000000016a33         db  0x20 ; ' '
0000000000016a34         db  0x63 ; 'c'
0000000000016a35         db  0x79 ; 'y'
0000000000016a36         db  0x67 ; 'g'
0000000000016a37         db  0x77 ; 'w'
0000000000016a38         db  0x69 ; 'i'
0000000000016a39         db  0x6e ; 'n'
0000000000016a3a         db  0x00 ; '.'
0000000000016a3b         db  0x54 ; 'T'
0000000000016a3c         db  0x45 ; 'E'
0000000000016a3d         db  0x52 ; 'R'
0000000000016a3e         db  0x4d ; 'M'
0000000000016a3f         db  0x20 ; ' '
0000000000016a40         db  0x64 ; 'd'
0000000000016a41         db  0x74 ; 't'
0000000000016a42         db  0x74 ; 't'
0000000000016a43         db  0x65 ; 'e'
0000000000016a44         db  0x72 ; 'r'
0000000000016a45         db  0x6d ; 'm'
0000000000016a46         db  0x00 ; '.'
0000000000016a47         db  0x54 ; 'T'
0000000000016a48         db  0x45 ; 'E'
0000000000016a49         db  0x52 ; 'R'
0000000000016a4a         db  0x4d ; 'M'
0000000000016a4b         db  0x20 ; ' '
0000000000016a4c         db  0x67 ; 'g'
0000000000016a4d         db  0x6e ; 'n'
0000000000016a4e         db  0x6f ; 'o'
0000000000016a4f         db  0x6d ; 'm'
0000000000016a50         db  0x65 ; 'e'
0000000000016a51         db  0x00 ; '.'
0000000000016a52         db  0x54 ; 'T'
0000000000016a53         db  0x45 ; 'E'
0000000000016a54         db  0x52 ; 'R'
0000000000016a55         db  0x4d ; 'M'
0000000000016a56         db  0x20 ; ' '
0000000000016a57         db  0x68 ; 'h'
0000000000016a58         db  0x75 ; 'u'
0000000000016a59         db  0x72 ; 'r'
0000000000016a5a         db  0x64 ; 'd'
0000000000016a5b         db  0x00 ; '.'
0000000000016a5c         db  0x54 ; 'T'
0000000000016a5d         db  0x45 ; 'E'
0000000000016a5e         db  0x52 ; 'R'
0000000000016a5f         db  0x4d ; 'M'
0000000000016a60         db  0x20 ; ' '
0000000000016a61         db  0x6a ; 'j'
0000000000016a62         db  0x66 ; 'f'
0000000000016a63         db  0x62 ; 'b'
0000000000016a64         db  0x74 ; 't'
0000000000016a65         db  0x65 ; 'e'
0000000000016a66         db  0x72 ; 'r'
0000000000016a67         db  0x6d ; 'm'
0000000000016a68         db  0x00 ; '.'
0000000000016a69         db  0x54 ; 'T'
0000000000016a6a         db  0x45 ; 'E'
0000000000016a6b         db  0x52 ; 'R'
0000000000016a6c         db  0x4d ; 'M'
0000000000016a6d         db  0x20 ; ' '
0000000000016a6e         db  0x6b ; 'k'
0000000000016a6f         db  0x6f ; 'o'
0000000000016a70         db  0x6e ; 'n'
0000000000016a71         db  0x73 ; 's'
0000000000016a72         db  0x6f ; 'o'
0000000000016a73         db  0x6c ; 'l'
0000000000016a74         db  0x65 ; 'e'
0000000000016a75         db  0x00 ; '.'
0000000000016a76         db  0x54 ; 'T'
0000000000016a77         db  0x45 ; 'E'
0000000000016a78         db  0x52 ; 'R'
0000000000016a79         db  0x4d ; 'M'
0000000000016a7a         db  0x20 ; ' '
0000000000016a7b         db  0x6b ; 'k'
0000000000016a7c         db  0x74 ; 't'
0000000000016a7d         db  0x65 ; 'e'
0000000000016a7e         db  0x72 ; 'r'
0000000000016a7f         db  0x6d ; 'm'
0000000000016a80         db  0x00 ; '.'
0000000000016a81         db  0x54 ; 'T'
0000000000016a82         db  0x45 ; 'E'
0000000000016a83         db  0x52 ; 'R'
0000000000016a84         db  0x4d ; 'M'
0000000000016a85         db  0x20 ; ' '
0000000000016a86         db  0x6c ; 'l'
0000000000016a87         db  0x69 ; 'i'
0000000000016a88         db  0x6e ; 'n'
0000000000016a89         db  0x75 ; 'u'
0000000000016a8a         db  0x78 ; 'x'
0000000000016a8b         db  0x00 ; '.'
0000000000016a8c         db  0x54 ; 'T'
0000000000016a8d         db  0x45 ; 'E'
0000000000016a8e         db  0x52 ; 'R'
0000000000016a8f         db  0x4d ; 'M'
0000000000016a90         db  0x20 ; ' '
0000000000016a91         db  0x6c ; 'l'
0000000000016a92         db  0x69 ; 'i'
0000000000016a93         db  0x6e ; 'n'
0000000000016a94         db  0x75 ; 'u'
0000000000016a95         db  0x78 ; 'x'
0000000000016a96         db  0x2d ; '-'
0000000000016a97         db  0x63 ; 'c'
0000000000016a98         db  0x00 ; '.'
0000000000016a99         db  0x54 ; 'T'
0000000000016a9a         db  0x45 ; 'E'
0000000000016a9b         db  0x52 ; 'R'
0000000000016a9c         db  0x4d ; 'M'
0000000000016a9d         db  0x20 ; ' '
0000000000016a9e         db  0x6d ; 'm'
0000000000016a9f         db  0x6c ; 'l'
0000000000016aa0         db  0x74 ; 't'
0000000000016aa1         db  0x65 ; 'e'
0000000000016aa2         db  0x72 ; 'r'
0000000000016aa3         db  0x6d ; 'm'
0000000000016aa4         db  0x00 ; '.'
0000000000016aa5         db  0x54 ; 'T'
0000000000016aa6         db  0x45 ; 'E'
0000000000016aa7         db  0x52 ; 'R'
0000000000016aa8         db  0x4d ; 'M'
0000000000016aa9         db  0x20 ; ' '
0000000000016aaa         db  0x70 ; 'p'
0000000000016aab         db  0x75 ; 'u'
0000000000016aac         db  0x74 ; 't'
0000000000016aad         db  0x74 ; 't'
0000000000016aae         db  0x79 ; 'y'
0000000000016aaf         db  0x00 ; '.'
0000000000016ab0         db  0x54 ; 'T'
0000000000016ab1         db  0x45 ; 'E'
0000000000016ab2         db  0x52 ; 'R'
0000000000016ab3         db  0x4d ; 'M'
0000000000016ab4         db  0x20 ; ' '
0000000000016ab5         db  0x72 ; 'r'
0000000000016ab6         db  0x78 ; 'x'
0000000000016ab7         db  0x76 ; 'v'
0000000000016ab8         db  0x74 ; 't'
0000000000016ab9         db  0x2a ; '*'
0000000000016aba         db  0x00 ; '.'
0000000000016abb         db  0x54 ; 'T'
0000000000016abc         db  0x45 ; 'E'
0000000000016abd         db  0x52 ; 'R'
0000000000016abe         db  0x4d ; 'M'
0000000000016abf         db  0x20 ; ' '
0000000000016ac0         db  0x73 ; 's'
0000000000016ac1         db  0x63 ; 'c'
0000000000016ac2         db  0x72 ; 'r'
0000000000016ac3         db  0x65 ; 'e'
0000000000016ac4         db  0x65 ; 'e'
0000000000016ac5         db  0x6e ; 'n'
0000000000016ac6         db  0x2a ; '*'
0000000000016ac7         db  0x00 ; '.'
0000000000016ac8         db  0x54 ; 'T'
0000000000016ac9         db  0x45 ; 'E'
0000000000016aca         db  0x52 ; 'R'
0000000000016acb         db  0x4d ; 'M'
0000000000016acc         db  0x20 ; ' '
0000000000016acd         db  0x73 ; 's'
0000000000016ace         db  0x74 ; 't'
0000000000016acf         db  0x00 ; '.'
0000000000016ad0         db  0x54 ; 'T'
0000000000016ad1         db  0x45 ; 'E'
0000000000016ad2         db  0x52 ; 'R'
0000000000016ad3         db  0x4d ; 'M'
0000000000016ad4         db  0x20 ; ' '
0000000000016ad5         db  0x74 ; 't'
0000000000016ad6         db  0x65 ; 'e'
0000000000016ad7         db  0x72 ; 'r'
0000000000016ad8         db  0x6d ; 'm'
0000000000016ad9         db  0x69 ; 'i'
0000000000016ada         db  0x6e ; 'n'
0000000000016adb         db  0x61 ; 'a'
0000000000016adc         db  0x74 ; 't'
0000000000016add         db  0x6f ; 'o'
0000000000016ade         db  0x72 ; 'r'
0000000000016adf         db  0x00 ; '.'
0000000000016ae0         db  0x54 ; 'T'
0000000000016ae1         db  0x45 ; 'E'
0000000000016ae2         db  0x52 ; 'R'
0000000000016ae3         db  0x4d ; 'M'
0000000000016ae4         db  0x20 ; ' '
0000000000016ae5         db  0x74 ; 't'
0000000000016ae6         db  0x6d ; 'm'
0000000000016ae7         db  0x75 ; 'u'
0000000000016ae8         db  0x78 ; 'x'
0000000000016ae9         db  0x2a ; '*'
0000000000016aea         db  0x00 ; '.'
0000000000016aeb         db  0x54 ; 'T'
0000000000016aec         db  0x45 ; 'E'
0000000000016aed         db  0x52 ; 'R'
0000000000016aee         db  0x4d ; 'M'
0000000000016aef         db  0x20 ; ' '
0000000000016af0         db  0x76 ; 'v'
0000000000016af1         db  0x74 ; 't'
0000000000016af2         db  0x31 ; '1'
0000000000016af3         db  0x30 ; '0'
0000000000016af4         db  0x30 ; '0'
0000000000016af5         db  0x00 ; '.'
0000000000016af6         db  0x54 ; 'T'
0000000000016af7         db  0x45 ; 'E'
0000000000016af8         db  0x52 ; 'R'
0000000000016af9         db  0x4d ; 'M'
0000000000016afa         db  0x20 ; ' '
0000000000016afb         db  0x78 ; 'x'
0000000000016afc         db  0x74 ; 't'
0000000000016afd         db  0x65 ; 'e'
0000000000016afe         db  0x72 ; 'r'
0000000000016aff         db  0x6d ; 'm'
0000000000016b00         db  0x2a ; '*'
0000000000016b01         db  0x00 ; '.'
0000000000016b02         db  0x23 ; '#'
0000000000016b03         db  0x20 ; ' '
0000000000016b04         db  0x42 ; 'B'
0000000000016b05         db  0x65 ; 'e'
0000000000016b06         db  0x6c ; 'l'
0000000000016b07         db  0x6f ; 'o'
0000000000016b08         db  0x77 ; 'w'
0000000000016b09         db  0x20 ; ' '
0000000000016b0a         db  0x61 ; 'a'
0000000000016b0b         db  0x72 ; 'r'
0000000000016b0c         db  0x65 ; 'e'
0000000000016b0d         db  0x20 ; ' '
0000000000016b0e         db  0x74 ; 't'
0000000000016b0f         db  0x68 ; 'h'
0000000000016b10         db  0x65 ; 'e'
0000000000016b11         db  0x20 ; ' '
0000000000016b12         db  0x63 ; 'c'
0000000000016b13         db  0x6f ; 'o'
0000000000016b14         db  0x6c ; 'l'
0000000000016b15         db  0x6f ; 'o'
0000000000016b16         db  0x72 ; 'r'
0000000000016b17         db  0x20 ; ' '
0000000000016b18         db  0x69 ; 'i'
0000000000016b19         db  0x6e ; 'n'
0000000000016b1a         db  0x69 ; 'i'
0000000000016b1b         db  0x74 ; 't'
0000000000016b1c         db  0x20 ; ' '
0000000000016b1d         db  0x73 ; 's'
0000000000016b1e         db  0x74 ; 't'
0000000000016b1f         db  0x72 ; 'r'
0000000000016b20         db  0x69 ; 'i'
0000000000016b21         db  0x6e ; 'n'
0000000000016b22         db  0x67 ; 'g'
0000000000016b23         db  0x73 ; 's'
0000000000016b24         db  0x20 ; ' '
0000000000016b25         db  0x66 ; 'f'
0000000000016b26         db  0x6f ; 'o'
0000000000016b27         db  0x72 ; 'r'
0000000000016b28         db  0x20 ; ' '
0000000000016b29         db  0x74 ; 't'
0000000000016b2a         db  0x68 ; 'h'
0000000000016b2b         db  0x65 ; 'e'
0000000000016b2c         db  0x20 ; ' '
0000000000016b2d         db  0x62 ; 'b'
0000000000016b2e         db  0x61 ; 'a'
0000000000016b2f         db  0x73 ; 's'
0000000000016b30         db  0x69 ; 'i'
0000000000016b31         db  0x63 ; 'c'
0000000000016b32         db  0x20 ; ' '
0000000000016b33         db  0x66 ; 'f'
0000000000016b34         db  0x69 ; 'i'
0000000000016b35         db  0x6c ; 'l'
0000000000016b36         db  0x65 ; 'e'
0000000000016b37         db  0x20 ; ' '
0000000000016b38         db  0x74 ; 't'
0000000000016b39         db  0x79 ; 'y'
0000000000016b3a         db  0x70 ; 'p'
0000000000016b3b         db  0x65 ; 'e'
0000000000016b3c         db  0x73 ; 's'
0000000000016b3d         db  0x2e ; '.'
0000000000016b3e         db  0x00 ; '.'
0000000000016b3f         db  0x23 ; '#'
0000000000016b40         db  0x20 ; ' '
0000000000016b41         db  0x4f ; 'O'
0000000000016b42         db  0x6e ; 'n'
0000000000016b43         db  0x65 ; 'e'
0000000000016b44         db  0x20 ; ' '
0000000000016b45         db  0x63 ; 'c'
0000000000016b46         db  0x61 ; 'a'
0000000000016b47         db  0x6e ; 'n'
0000000000016b48         db  0x20 ; ' '
0000000000016b49         db  0x75 ; 'u'
0000000000016b4a         db  0x73 ; 's'
0000000000016b4b         db  0x65 ; 'e'
0000000000016b4c         db  0x20 ; ' '
0000000000016b4d         db  0x63 ; 'c'
0000000000016b4e         db  0x6f ; 'o'
0000000000016b4f         db  0x64 ; 'd'
0000000000016b50         db  0x65 ; 'e'
0000000000016b51         db  0x73 ; 's'
0000000000016b52         db  0x20 ; ' '
0000000000016b53         db  0x66 ; 'f'
0000000000016b54         db  0x6f ; 'o'
0000000000016b55         db  0x72 ; 'r'
0000000000016b56         db  0x20 ; ' '
0000000000016b57         db  0x32 ; '2'
0000000000016b58         db  0x35 ; '5'
0000000000016b59         db  0x36 ; '6'
0000000000016b5a         db  0x20 ; ' '
0000000000016b5b         db  0x6f ; 'o'
0000000000016b5c         db  0x72 ; 'r'
0000000000016b5d         db  0x20 ; ' '
0000000000016b5e         db  0x6d ; 'm'
0000000000016b5f         db  0x6f ; 'o'
0000000000016b60         db  0x72 ; 'r'
0000000000016b61         db  0x65 ; 'e'
0000000000016b62         db  0x20 ; ' '
0000000000016b63         db  0x63 ; 'c'
0000000000016b64         db  0x6f ; 'o'
0000000000016b65         db  0x6c ; 'l'
0000000000016b66         db  0x6f ; 'o'
0000000000016b67         db  0x72 ; 'r'
0000000000016b68         db  0x73 ; 's'
0000000000016b69         db  0x20 ; ' '
0000000000016b6a         db  0x73 ; 's'
0000000000016b6b         db  0x75 ; 'u'
0000000000016b6c         db  0x70 ; 'p'
0000000000016b6d         db  0x70 ; 'p'
0000000000016b6e         db  0x6f ; 'o'
0000000000016b6f         db  0x72 ; 'r'
0000000000016b70         db  0x74 ; 't'
0000000000016b71         db  0x65 ; 'e'
0000000000016b72         db  0x64 ; 'd'
0000000000016b73         db  0x20 ; ' '
0000000000016b74         db  0x62 ; 'b'
0000000000016b75         db  0x79 ; 'y'
0000000000016b76         db  0x20 ; ' '
0000000000016b77         db  0x6d ; 'm'
0000000000016b78         db  0x6f ; 'o'
0000000000016b79         db  0x64 ; 'd'
0000000000016b7a         db  0x65 ; 'e'
0000000000016b7b         db  0x72 ; 'r'
0000000000016b7c         db  0x6e ; 'n'
0000000000016b7d         db  0x20 ; ' '
0000000000016b7e         db  0x74 ; 't'
0000000000016b7f         db  0x65 ; 'e'
0000000000016b80         db  0x72 ; 'r'
0000000000016b81         db  0x6d ; 'm'
0000000000016b82         db  0x69 ; 'i'
0000000000016b83         db  0x6e ; 'n'
0000000000016b84         db  0x61 ; 'a'
0000000000016b85         db  0x6c ; 'l'
0000000000016b86         db  0x73 ; 's'
0000000000016b87         db  0x2e ; '.'
0000000000016b88         db  0x00 ; '.'
0000000000016b89         db  0x23 ; '#'
0000000000016b8a         db  0x20 ; ' '
0000000000016b8b         db  0x54 ; 'T'
0000000000016b8c         db  0x68 ; 'h'
0000000000016b8d         db  0x65 ; 'e'
0000000000016b8e         db  0x20 ; ' '
0000000000016b8f         db  0x64 ; 'd'
0000000000016b90         db  0x65 ; 'e'
0000000000016b91         db  0x66 ; 'f'
0000000000016b92         db  0x61 ; 'a'
0000000000016b93         db  0x75 ; 'u'
0000000000016b94         db  0x6c ; 'l'
0000000000016b95         db  0x74 ; 't'
0000000000016b96         db  0x20 ; ' '
0000000000016b97         db  0x63 ; 'c'
0000000000016b98         db  0x6f ; 'o'
0000000000016b99         db  0x6c ; 'l'
0000000000016b9a         db  0x6f ; 'o'
0000000000016b9b         db  0x72 ; 'r'
0000000000016b9c         db  0x20 ; ' '
0000000000016b9d         db  0x63 ; 'c'
0000000000016b9e         db  0x6f ; 'o'
0000000000016b9f         db  0x64 ; 'd'
0000000000016ba0         db  0x65 ; 'e'
0000000000016ba1         db  0x73 ; 's'
0000000000016ba2         db  0x20 ; ' '
0000000000016ba3         db  0x75 ; 'u'
0000000000016ba4         db  0x73 ; 's'
0000000000016ba5         db  0x65 ; 'e'
0000000000016ba6         db  0x20 ; ' '
0000000000016ba7         db  0x74 ; 't'
0000000000016ba8         db  0x68 ; 'h'
0000000000016ba9         db  0x65 ; 'e'
0000000000016baa         db  0x20 ; ' '
0000000000016bab         db  0x63 ; 'c'
0000000000016bac         db  0x61 ; 'a'
0000000000016bad         db  0x70 ; 'p'
0000000000016bae         db  0x61 ; 'a'
0000000000016baf         db  0x62 ; 'b'
0000000000016bb0         db  0x69 ; 'i'
0000000000016bb1         db  0x6c ; 'l'
0000000000016bb2         db  0x69 ; 'i'
0000000000016bb3         db  0x74 ; 't'
0000000000016bb4         db  0x69 ; 'i'
0000000000016bb5         db  0x65 ; 'e'
0000000000016bb6         db  0x73 ; 's'
0000000000016bb7         db  0x20 ; ' '
0000000000016bb8         db  0x6f ; 'o'
0000000000016bb9         db  0x66 ; 'f'
0000000000016bba         db  0x20 ; ' '
0000000000016bbb         db  0x61 ; 'a'
0000000000016bbc         db  0x6e ; 'n'
0000000000016bbd         db  0x20 ; ' '
0000000000016bbe         db  0x38 ; '8'
0000000000016bbf         db  0x20 ; ' '
0000000000016bc0         db  0x63 ; 'c'
0000000000016bc1         db  0x6f ; 'o'
0000000000016bc2         db  0x6c ; 'l'
0000000000016bc3         db  0x6f ; 'o'
0000000000016bc4         db  0x72 ; 'r'
0000000000016bc5         db  0x20 ; ' '
0000000000016bc6         db  0x74 ; 't'
0000000000016bc7         db  0x65 ; 'e'
0000000000016bc8         db  0x72 ; 'r'
0000000000016bc9         db  0x6d ; 'm'
0000000000016bca         db  0x69 ; 'i'
0000000000016bcb         db  0x6e ; 'n'
0000000000016bcc         db  0x61 ; 'a'
0000000000016bcd         db  0x6c ; 'l'
0000000000016bce         db  0x00 ; '.'
0000000000016bcf         db  0x23 ; '#'
0000000000016bd0         db  0x20 ; ' '
0000000000016bd1         db  0x77 ; 'w'
0000000000016bd2         db  0x69 ; 'i'
0000000000016bd3         db  0x74 ; 't'
0000000000016bd4         db  0x68 ; 'h'
0000000000016bd5         db  0x20 ; ' '
0000000000016bd6         db  0x73 ; 's'
0000000000016bd7         db  0x6f ; 'o'
0000000000016bd8         db  0x6d ; 'm'
0000000000016bd9         db  0x65 ; 'e'
0000000000016bda         db  0x20 ; ' '
0000000000016bdb         db  0x61 ; 'a'
0000000000016bdc         db  0x64 ; 'd'
0000000000016bdd         db  0x64 ; 'd'
0000000000016bde         db  0x69 ; 'i'
0000000000016bdf         db  0x74 ; 't'
0000000000016be0         db  0x69 ; 'i'
0000000000016be1         db  0x6f ; 'o'
0000000000016be2         db  0x6e ; 'n'
0000000000016be3         db  0x61 ; 'a'
0000000000016be4         db  0x6c ; 'l'
0000000000016be5         db  0x20 ; ' '
0000000000016be6         db  0x61 ; 'a'
0000000000016be7         db  0x74 ; 't'
0000000000016be8         db  0x74 ; 't'
0000000000016be9         db  0x72 ; 'r'
0000000000016bea         db  0x69 ; 'i'
0000000000016beb         db  0x62 ; 'b'
0000000000016bec         db  0x75 ; 'u'
0000000000016bed         db  0x74 ; 't'
0000000000016bee         db  0x65 ; 'e'
0000000000016bef         db  0x73 ; 's'
0000000000016bf0         db  0x20 ; ' '
0000000000016bf1         db  0x61 ; 'a'
0000000000016bf2         db  0x73 ; 's'
0000000000016bf3         db  0x20 ; ' '
0000000000016bf4         db  0x70 ; 'p'
0000000000016bf5         db  0x65 ; 'e'
0000000000016bf6         db  0x72 ; 'r'
0000000000016bf7         db  0x20 ; ' '
0000000000016bf8         db  0x74 ; 't'
0000000000016bf9         db  0x68 ; 'h'
0000000000016bfa         db  0x65 ; 'e'
0000000000016bfb         db  0x20 ; ' '
0000000000016bfc         db  0x66 ; 'f'
0000000000016bfd         db  0x6f ; 'o'
0000000000016bfe         db  0x6c ; 'l'
0000000000016bff         db  0x6c ; 'l'
0000000000016c00         db  0x6f ; 'o'
0000000000016c01         db  0x77 ; 'w'
0000000000016c02         db  0x69 ; 'i'
0000000000016c03         db  0x6e ; 'n'
0000000000016c04         db  0x67 ; 'g'
0000000000016c05         db  0x20 ; ' '
0000000000016c06         db  0x63 ; 'c'
0000000000016c07         db  0x6f ; 'o'
0000000000016c08         db  0x64 ; 'd'
0000000000016c09         db  0x65 ; 'e'
0000000000016c0a         db  0x73 ; 's'
0000000000016c0b         db  0x3a ; ':'
0000000000016c0c         db  0x00 ; '.'
0000000000016c0d         db  0x23 ; '#'
0000000000016c0e         db  0x20 ; ' '
0000000000016c0f         db  0x41 ; 'A'
0000000000016c10         db  0x74 ; 't'
0000000000016c11         db  0x74 ; 't'
0000000000016c12         db  0x72 ; 'r'
0000000000016c13         db  0x69 ; 'i'
0000000000016c14         db  0x62 ; 'b'
0000000000016c15         db  0x75 ; 'u'
0000000000016c16         db  0x74 ; 't'
0000000000016c17         db  0x65 ; 'e'
0000000000016c18         db  0x20 ; ' '
0000000000016c19         db  0x63 ; 'c'
0000000000016c1a         db  0x6f ; 'o'
0000000000016c1b         db  0x64 ; 'd'
0000000000016c1c         db  0x65 ; 'e'
0000000000016c1d         db  0x73 ; 's'
0000000000016c1e         db  0x3a ; ':'
0000000000016c1f         db  0x00 ; '.'
0000000000016c20         db  0x23 ; '#'
0000000000016c21         db  0x20 ; ' '
0000000000016c22         db  0x30 ; '0'
0000000000016c23         db  0x30 ; '0'
0000000000016c24         db  0x3d ; '='
0000000000016c25         db  0x6e ; 'n'
0000000000016c26         db  0x6f ; 'o'
0000000000016c27         db  0x6e ; 'n'
0000000000016c28         db  0x65 ; 'e'
0000000000016c29         db  0x20 ; ' '
0000000000016c2a         db  0x30 ; '0'
0000000000016c2b         db  0x31 ; '1'
0000000000016c2c         db  0x3d ; '='
0000000000016c2d         db  0x62 ; 'b'
0000000000016c2e         db  0x6f ; 'o'
0000000000016c2f         db  0x6c ; 'l'
0000000000016c30         db  0x64 ; 'd'
0000000000016c31         db  0x20 ; ' '
0000000000016c32         db  0x30 ; '0'
0000000000016c33         db  0x34 ; '4'
0000000000016c34         db  0x3d ; '='
0000000000016c35         db  0x75 ; 'u'
0000000000016c36         db  0x6e ; 'n'
0000000000016c37         db  0x64 ; 'd'
0000000000016c38         db  0x65 ; 'e'
0000000000016c39         db  0x72 ; 'r'
0000000000016c3a         db  0x73 ; 's'
0000000000016c3b         db  0x63 ; 'c'
0000000000016c3c         db  0x6f ; 'o'
0000000000016c3d         db  0x72 ; 'r'
0000000000016c3e         db  0x65 ; 'e'
0000000000016c3f         db  0x20 ; ' '
0000000000016c40         db  0x30 ; '0'
0000000000016c41         db  0x35 ; '5'
0000000000016c42         db  0x3d ; '='
0000000000016c43         db  0x62 ; 'b'
0000000000016c44         db  0x6c ; 'l'
0000000000016c45         db  0x69 ; 'i'
0000000000016c46         db  0x6e ; 'n'
0000000000016c47         db  0x6b ; 'k'
0000000000016c48         db  0x20 ; ' '
0000000000016c49         db  0x30 ; '0'
0000000000016c4a         db  0x37 ; '7'
0000000000016c4b         db  0x3d ; '='
0000000000016c4c         db  0x72 ; 'r'
0000000000016c4d         db  0x65 ; 'e'
0000000000016c4e         db  0x76 ; 'v'
0000000000016c4f         db  0x65 ; 'e'
0000000000016c50         db  0x72 ; 'r'
0000000000016c51         db  0x73 ; 's'
0000000000016c52         db  0x65 ; 'e'
0000000000016c53         db  0x20 ; ' '
0000000000016c54         db  0x30 ; '0'
0000000000016c55         db  0x38 ; '8'
0000000000016c56         db  0x3d ; '='
0000000000016c57         db  0x63 ; 'c'
0000000000016c58         db  0x6f ; 'o'
0000000000016c59         db  0x6e ; 'n'
0000000000016c5a         db  0x63 ; 'c'
0000000000016c5b         db  0x65 ; 'e'
0000000000016c5c         db  0x61 ; 'a'
0000000000016c5d         db  0x6c ; 'l'
0000000000016c5e         db  0x65 ; 'e'
0000000000016c5f         db  0x64 ; 'd'
0000000000016c60         db  0x00 ; '.'
0000000000016c61         db  0x23 ; '#'
0000000000016c62         db  0x20 ; ' '
0000000000016c63         db  0x54 ; 'T'
0000000000016c64         db  0x65 ; 'e'
0000000000016c65         db  0x78 ; 'x'
0000000000016c66         db  0x74 ; 't'
0000000000016c67         db  0x20 ; ' '
0000000000016c68         db  0x63 ; 'c'
0000000000016c69         db  0x6f ; 'o'
0000000000016c6a         db  0x6c ; 'l'
0000000000016c6b         db  0x6f ; 'o'
0000000000016c6c         db  0x72 ; 'r'
0000000000016c6d         db  0x20 ; ' '
0000000000016c6e         db  0x63 ; 'c'
0000000000016c6f         db  0x6f ; 'o'
0000000000016c70         db  0x64 ; 'd'
0000000000016c71         db  0x65 ; 'e'
0000000000016c72         db  0x73 ; 's'
0000000000016c73         db  0x3a ; ':'
0000000000016c74         db  0x00 ; '.'
0000000000016c75         db  0x23 ; '#'
0000000000016c76         db  0x20 ; ' '
0000000000016c77         db  0x33 ; '3'
0000000000016c78         db  0x30 ; '0'
0000000000016c79         db  0x3d ; '='
0000000000016c7a         db  0x62 ; 'b'
0000000000016c7b         db  0x6c ; 'l'
0000000000016c7c         db  0x61 ; 'a'
0000000000016c7d         db  0x63 ; 'c'
0000000000016c7e         db  0x6b ; 'k'
0000000000016c7f         db  0x20 ; ' '
0000000000016c80         db  0x33 ; '3'
0000000000016c81         db  0x31 ; '1'
0000000000016c82         db  0x3d ; '='
0000000000016c83         db  0x72 ; 'r'
0000000000016c84         db  0x65 ; 'e'
0000000000016c85         db  0x64 ; 'd'
0000000000016c86         db  0x20 ; ' '
0000000000016c87         db  0x33 ; '3'
0000000000016c88         db  0x32 ; '2'
0000000000016c89         db  0x3d ; '='
0000000000016c8a         db  0x67 ; 'g'
0000000000016c8b         db  0x72 ; 'r'
0000000000016c8c         db  0x65 ; 'e'
0000000000016c8d         db  0x65 ; 'e'
0000000000016c8e         db  0x6e ; 'n'
0000000000016c8f         db  0x20 ; ' '
0000000000016c90         db  0x33 ; '3'
0000000000016c91         db  0x33 ; '3'
0000000000016c92         db  0x3d ; '='
0000000000016c93         db  0x79 ; 'y'
0000000000016c94         db  0x65 ; 'e'
0000000000016c95         db  0x6c ; 'l'
0000000000016c96         db  0x6c ; 'l'
0000000000016c97         db  0x6f ; 'o'
0000000000016c98         db  0x77 ; 'w'
0000000000016c99         db  0x20 ; ' '
0000000000016c9a         db  0x33 ; '3'
0000000000016c9b         db  0x34 ; '4'
0000000000016c9c         db  0x3d ; '='
0000000000016c9d         db  0x62 ; 'b'
0000000000016c9e         db  0x6c ; 'l'
0000000000016c9f         db  0x75 ; 'u'
0000000000016ca0         db  0x65 ; 'e'
0000000000016ca1         db  0x20 ; ' '
0000000000016ca2         db  0x33 ; '3'
0000000000016ca3         db  0x35 ; '5'
0000000000016ca4         db  0x3d ; '='
0000000000016ca5         db  0x6d ; 'm'
0000000000016ca6         db  0x61 ; 'a'
0000000000016ca7         db  0x67 ; 'g'
0000000000016ca8         db  0x65 ; 'e'
0000000000016ca9         db  0x6e ; 'n'
0000000000016caa         db  0x74 ; 't'
0000000000016cab         db  0x61 ; 'a'
0000000000016cac         db  0x20 ; ' '
0000000000016cad         db  0x33 ; '3'
0000000000016cae         db  0x36 ; '6'
0000000000016caf         db  0x3d ; '='
0000000000016cb0         db  0x63 ; 'c'
0000000000016cb1         db  0x79 ; 'y'
0000000000016cb2         db  0x61 ; 'a'
0000000000016cb3         db  0x6e ; 'n'
0000000000016cb4         db  0x20 ; ' '
0000000000016cb5         db  0x33 ; '3'
0000000000016cb6         db  0x37 ; '7'
0000000000016cb7         db  0x3d ; '='
0000000000016cb8         db  0x77 ; 'w'
0000000000016cb9         db  0x68 ; 'h'
0000000000016cba         db  0x69 ; 'i'
0000000000016cbb         db  0x74 ; 't'
0000000000016cbc         db  0x65 ; 'e'
0000000000016cbd         db  0x00 ; '.'
0000000000016cbe         db  0x23 ; '#'
0000000000016cbf         db  0x20 ; ' '
0000000000016cc0         db  0x42 ; 'B'
0000000000016cc1         db  0x61 ; 'a'
0000000000016cc2         db  0x63 ; 'c'
0000000000016cc3         db  0x6b ; 'k'
0000000000016cc4         db  0x67 ; 'g'
0000000000016cc5         db  0x72 ; 'r'
0000000000016cc6         db  0x6f ; 'o'
0000000000016cc7         db  0x75 ; 'u'
0000000000016cc8         db  0x6e ; 'n'
0000000000016cc9         db  0x64 ; 'd'
0000000000016cca         db  0x20 ; ' '
0000000000016ccb         db  0x63 ; 'c'
0000000000016ccc         db  0x6f ; 'o'
0000000000016ccd         db  0x6c ; 'l'
0000000000016cce         db  0x6f ; 'o'
0000000000016ccf         db  0x72 ; 'r'
0000000000016cd0         db  0x20 ; ' '
0000000000016cd1         db  0x63 ; 'c'
0000000000016cd2         db  0x6f ; 'o'
0000000000016cd3         db  0x64 ; 'd'
0000000000016cd4         db  0x65 ; 'e'
0000000000016cd5         db  0x73 ; 's'
0000000000016cd6         db  0x3a ; ':'
0000000000016cd7         db  0x00 ; '.'
0000000000016cd8         db  0x23 ; '#'
0000000000016cd9         db  0x20 ; ' '
0000000000016cda         db  0x34 ; '4'
0000000000016cdb         db  0x30 ; '0'
0000000000016cdc         db  0x3d ; '='
0000000000016cdd         db  0x62 ; 'b'
0000000000016cde         db  0x6c ; 'l'
0000000000016cdf         db  0x61 ; 'a'
0000000000016ce0         db  0x63 ; 'c'
0000000000016ce1         db  0x6b ; 'k'
0000000000016ce2         db  0x20 ; ' '
0000000000016ce3         db  0x34 ; '4'
0000000000016ce4         db  0x31 ; '1'
0000000000016ce5         db  0x3d ; '='
0000000000016ce6         db  0x72 ; 'r'
0000000000016ce7         db  0x65 ; 'e'
0000000000016ce8         db  0x64 ; 'd'
0000000000016ce9         db  0x20 ; ' '
0000000000016cea         db  0x34 ; '4'
0000000000016ceb         db  0x32 ; '2'
0000000000016cec         db  0x3d ; '='
0000000000016ced         db  0x67 ; 'g'
0000000000016cee         db  0x72 ; 'r'
0000000000016cef         db  0x65 ; 'e'
0000000000016cf0         db  0x65 ; 'e'
0000000000016cf1         db  0x6e ; 'n'
0000000000016cf2         db  0x20 ; ' '
0000000000016cf3         db  0x34 ; '4'
0000000000016cf4         db  0x33 ; '3'
0000000000016cf5         db  0x3d ; '='
0000000000016cf6         db  0x79 ; 'y'
0000000000016cf7         db  0x65 ; 'e'
0000000000016cf8         db  0x6c ; 'l'
0000000000016cf9         db  0x6c ; 'l'
0000000000016cfa         db  0x6f ; 'o'
0000000000016cfb         db  0x77 ; 'w'
0000000000016cfc         db  0x20 ; ' '
0000000000016cfd         db  0x34 ; '4'
0000000000016cfe         db  0x34 ; '4'
0000000000016cff         db  0x3d ; '='
0000000000016d00         db  0x62 ; 'b'
0000000000016d01         db  0x6c ; 'l'
0000000000016d02         db  0x75 ; 'u'
0000000000016d03         db  0x65 ; 'e'
0000000000016d04         db  0x20 ; ' '
0000000000016d05         db  0x34 ; '4'
0000000000016d06         db  0x35 ; '5'
0000000000016d07         db  0x3d ; '='
0000000000016d08         db  0x6d ; 'm'
0000000000016d09         db  0x61 ; 'a'
0000000000016d0a         db  0x67 ; 'g'
0000000000016d0b         db  0x65 ; 'e'
0000000000016d0c         db  0x6e ; 'n'
0000000000016d0d         db  0x74 ; 't'
0000000000016d0e         db  0x61 ; 'a'
0000000000016d0f         db  0x20 ; ' '
0000000000016d10         db  0x34 ; '4'
0000000000016d11         db  0x36 ; '6'
0000000000016d12         db  0x3d ; '='
0000000000016d13         db  0x63 ; 'c'
0000000000016d14         db  0x79 ; 'y'
0000000000016d15         db  0x61 ; 'a'
0000000000016d16         db  0x6e ; 'n'
0000000000016d17         db  0x20 ; ' '
0000000000016d18         db  0x34 ; '4'
0000000000016d19         db  0x37 ; '7'
0000000000016d1a         db  0x3d ; '='
0000000000016d1b         db  0x77 ; 'w'
0000000000016d1c         db  0x68 ; 'h'
0000000000016d1d         db  0x69 ; 'i'
0000000000016d1e         db  0x74 ; 't'
0000000000016d1f         db  0x65 ; 'e'
0000000000016d20         db  0x00 ; '.'
0000000000016d21         db  0x23 ; '#'
0000000000016d22         db  0x4e ; 'N'
0000000000016d23         db  0x4f ; 'O'
0000000000016d24         db  0x52 ; 'R'
0000000000016d25         db  0x4d ; 'M'
0000000000016d26         db  0x41 ; 'A'
0000000000016d27         db  0x4c ; 'L'
0000000000016d28         db  0x20 ; ' '
0000000000016d29         db  0x30 ; '0'
0000000000016d2a         db  0x30 ; '0'
0000000000016d2b         db  0x20 ; ' '
0000000000016d2c         db  0x23 ; '#'
0000000000016d2d         db  0x20 ; ' '
0000000000016d2e         db  0x6e ; 'n'
0000000000016d2f         db  0x6f ; 'o'
0000000000016d30         db  0x20 ; ' '
0000000000016d31         db  0x63 ; 'c'
0000000000016d32         db  0x6f ; 'o'
0000000000016d33         db  0x6c ; 'l'
0000000000016d34         db  0x6f ; 'o'
0000000000016d35         db  0x72 ; 'r'
0000000000016d36         db  0x20 ; ' '
0000000000016d37         db  0x63 ; 'c'
0000000000016d38         db  0x6f ; 'o'
0000000000016d39         db  0x64 ; 'd'
0000000000016d3a         db  0x65 ; 'e'
0000000000016d3b         db  0x20 ; ' '
0000000000016d3c         db  0x61 ; 'a'
0000000000016d3d         db  0x74 ; 't'
0000000000016d3e         db  0x20 ; ' '
0000000000016d3f         db  0x61 ; 'a'
0000000000016d40         db  0x6c ; 'l'
0000000000016d41         db  0x6c ; 'l'
0000000000016d42         db  0x00 ; '.'
0000000000016d43         db  0x23 ; '#'
0000000000016d44         db  0x46 ; 'F'
0000000000016d45         db  0x49 ; 'I'
0000000000016d46         db  0x4c ; 'L'
0000000000016d47         db  0x45 ; 'E'
0000000000016d48         db  0x20 ; ' '
0000000000016d49         db  0x30 ; '0'
0000000000016d4a         db  0x30 ; '0'
0000000000016d4b         db  0x20 ; ' '
0000000000016d4c         db  0x23 ; '#'
0000000000016d4d         db  0x20 ; ' '
0000000000016d4e         db  0x72 ; 'r'
0000000000016d4f         db  0x65 ; 'e'
0000000000016d50         db  0x67 ; 'g'
0000000000016d51         db  0x75 ; 'u'
0000000000016d52         db  0x6c ; 'l'
0000000000016d53         db  0x61 ; 'a'
0000000000016d54         db  0x72 ; 'r'
0000000000016d55         db  0x20 ; ' '
0000000000016d56         db  0x66 ; 'f'
0000000000016d57         db  0x69 ; 'i'
0000000000016d58         db  0x6c ; 'l'
0000000000016d59         db  0x65 ; 'e'
0000000000016d5a         db  0x3a ; ':'
0000000000016d5b         db  0x20 ; ' '
0000000000016d5c         db  0x75 ; 'u'
0000000000016d5d         db  0x73 ; 's'
0000000000016d5e         db  0x65 ; 'e'
0000000000016d5f         db  0x20 ; ' '
0000000000016d60         db  0x6e ; 'n'
0000000000016d61         db  0x6f ; 'o'
0000000000016d62         db  0x20 ; ' '
0000000000016d63         db  0x63 ; 'c'
0000000000016d64         db  0x6f ; 'o'
0000000000016d65         db  0x6c ; 'l'
0000000000016d66         db  0x6f ; 'o'
0000000000016d67         db  0x72 ; 'r'
0000000000016d68         db  0x20 ; ' '
0000000000016d69         db  0x61 ; 'a'
0000000000016d6a         db  0x74 ; 't'
0000000000016d6b         db  0x20 ; ' '
0000000000016d6c         db  0x61 ; 'a'
0000000000016d6d         db  0x6c ; 'l'
0000000000016d6e         db  0x6c ; 'l'
0000000000016d6f         db  0x00 ; '.'
0000000000016d70         db  0x52 ; 'R'
0000000000016d71         db  0x45 ; 'E'
0000000000016d72         db  0x53 ; 'S'
0000000000016d73         db  0x45 ; 'E'
0000000000016d74         db  0x54 ; 'T'
0000000000016d75         db  0x20 ; ' '
0000000000016d76         db  0x30 ; '0'
0000000000016d77         db  0x20 ; ' '
0000000000016d78         db  0x23 ; '#'
0000000000016d79         db  0x20 ; ' '
0000000000016d7a         db  0x72 ; 'r'
0000000000016d7b         db  0x65 ; 'e'
0000000000016d7c         db  0x73 ; 's'
0000000000016d7d         db  0x65 ; 'e'
0000000000016d7e         db  0x74 ; 't'
0000000000016d7f         db  0x20 ; ' '
0000000000016d80         db  0x74 ; 't'
0000000000016d81         db  0x6f ; 'o'
0000000000016d82         db  0x20 ; ' '
0000000000016d83         db  0x22 ; '"'
0000000000016d84         db  0x6e ; 'n'
0000000000016d85         db  0x6f ; 'o'
0000000000016d86         db  0x72 ; 'r'
0000000000016d87         db  0x6d ; 'm'
0000000000016d88         db  0x61 ; 'a'
0000000000016d89         db  0x6c ; 'l'
0000000000016d8a         db  0x22 ; '"'
0000000000016d8b         db  0x20 ; ' '
0000000000016d8c         db  0x63 ; 'c'
0000000000016d8d         db  0x6f ; 'o'
0000000000016d8e         db  0x6c ; 'l'
0000000000016d8f         db  0x6f ; 'o'
0000000000016d90         db  0x72 ; 'r'
0000000000016d91         db  0x00 ; '.'
0000000000016d92         db  0x44 ; 'D'
0000000000016d93         db  0x49 ; 'I'
0000000000016d94         db  0x52 ; 'R'
0000000000016d95         db  0x20 ; ' '
0000000000016d96         db  0x30 ; '0'
0000000000016d97         db  0x31 ; '1'
0000000000016d98         db  0x3b ; ';'
0000000000016d99         db  0x33 ; '3'
0000000000016d9a         db  0x34 ; '4'
0000000000016d9b         db  0x20 ; ' '
0000000000016d9c         db  0x23 ; '#'
0000000000016d9d         db  0x20 ; ' '
0000000000016d9e         db  0x64 ; 'd'
0000000000016d9f         db  0x69 ; 'i'
0000000000016da0         db  0x72 ; 'r'
0000000000016da1         db  0x65 ; 'e'
0000000000016da2         db  0x63 ; 'c'
0000000000016da3         db  0x74 ; 't'
0000000000016da4         db  0x6f ; 'o'
0000000000016da5         db  0x72 ; 'r'
0000000000016da6         db  0x79 ; 'y'
0000000000016da7         db  0x00 ; '.'
0000000000016da8         db  0x4c ; 'L'
0000000000016da9         db  0x49 ; 'I'
0000000000016daa         db  0x4e ; 'N'
0000000000016dab         db  0x4b ; 'K'
0000000000016dac         db  0x20 ; ' '
0000000000016dad         db  0x30 ; '0'
0000000000016dae         db  0x31 ; '1'
0000000000016daf         db  0x3b ; ';'
0000000000016db0         db  0x33 ; '3'
0000000000016db1         db  0x36 ; '6'
0000000000016db2         db  0x20 ; ' '
0000000000016db3         db  0x23 ; '#'
0000000000016db4         db  0x20 ; ' '
0000000000016db5         db  0x73 ; 's'
0000000000016db6         db  0x79 ; 'y'
0000000000016db7         db  0x6d ; 'm'
0000000000016db8         db  0x62 ; 'b'
0000000000016db9         db  0x6f ; 'o'
0000000000016dba         db  0x6c ; 'l'
0000000000016dbb         db  0x69 ; 'i'
0000000000016dbc         db  0x63 ; 'c'
0000000000016dbd         db  0x20 ; ' '
0000000000016dbe         db  0x6c ; 'l'
0000000000016dbf         db  0x69 ; 'i'
0000000000016dc0         db  0x6e ; 'n'
0000000000016dc1         db  0x6b ; 'k'
0000000000016dc2         db  0x2e ; '.'
0000000000016dc3         db  0x20 ; ' '
0000000000016dc4         db  0x28 ; '('
0000000000016dc5         db  0x49 ; 'I'
0000000000016dc6         db  0x66 ; 'f'
0000000000016dc7         db  0x20 ; ' '
0000000000016dc8         db  0x79 ; 'y'
0000000000016dc9         db  0x6f ; 'o'
0000000000016dca         db  0x75 ; 'u'
0000000000016dcb         db  0x20 ; ' '
0000000000016dcc         db  0x73 ; 's'
0000000000016dcd         db  0x65 ; 'e'
0000000000016dce         db  0x74 ; 't'
0000000000016dcf         db  0x20 ; ' '
0000000000016dd0         db  0x74 ; 't'
0000000000016dd1         db  0x68 ; 'h'
0000000000016dd2         db  0x69 ; 'i'
0000000000016dd3         db  0x73 ; 's'
0000000000016dd4         db  0x20 ; ' '
0000000000016dd5         db  0x74 ; 't'
0000000000016dd6         db  0x6f ; 'o'
0000000000016dd7         db  0x20 ; ' '
0000000000016dd8         db  0x27 ; '''
0000000000016dd9         db  0x74 ; 't'
0000000000016dda         db  0x61 ; 'a'
0000000000016ddb         db  0x72 ; 'r'
0000000000016ddc         db  0x67 ; 'g'
0000000000016ddd         db  0x65 ; 'e'
0000000000016dde         db  0x74 ; 't'
0000000000016ddf         db  0x27 ; '''
0000000000016de0         db  0x20 ; ' '
0000000000016de1         db  0x69 ; 'i'
0000000000016de2         db  0x6e ; 'n'
0000000000016de3         db  0x73 ; 's'
0000000000016de4         db  0x74 ; 't'
0000000000016de5         db  0x65 ; 'e'
0000000000016de6         db  0x61 ; 'a'
0000000000016de7         db  0x64 ; 'd'
0000000000016de8         db  0x20 ; ' '
0000000000016de9         db  0x6f ; 'o'
0000000000016dea         db  0x66 ; 'f'
0000000000016deb         db  0x20 ; ' '
0000000000016dec         db  0x61 ; 'a'
0000000000016ded         db  0x00 ; '.'
0000000000016dee         db  0x20 ; ' '
0000000000016def         db  0x23 ; '#'
0000000000016df0         db  0x20 ; ' '
0000000000016df1         db  0x6e ; 'n'
0000000000016df2         db  0x75 ; 'u'
0000000000016df3         db  0x6d ; 'm'
0000000000016df4         db  0x65 ; 'e'
0000000000016df5         db  0x72 ; 'r'
0000000000016df6         db  0x69 ; 'i'
0000000000016df7         db  0x63 ; 'c'
0000000000016df8         db  0x61 ; 'a'
0000000000016df9         db  0x6c ; 'l'
0000000000016dfa         db  0x20 ; ' '
0000000000016dfb         db  0x76 ; 'v'
0000000000016dfc         db  0x61 ; 'a'
0000000000016dfd         db  0x6c ; 'l'
0000000000016dfe         db  0x75 ; 'u'
0000000000016dff         db  0x65 ; 'e'
0000000000016e00         db  0x2c ; ','
0000000000016e01         db  0x20 ; ' '
0000000000016e02         db  0x74 ; 't'
0000000000016e03         db  0x68 ; 'h'
0000000000016e04         db  0x65 ; 'e'
0000000000016e05         db  0x20 ; ' '
0000000000016e06         db  0x63 ; 'c'
0000000000016e07         db  0x6f ; 'o'
0000000000016e08         db  0x6c ; 'l'
0000000000016e09         db  0x6f ; 'o'
0000000000016e0a         db  0x72 ; 'r'
0000000000016e0b         db  0x20 ; ' '
0000000000016e0c         db  0x69 ; 'i'
0000000000016e0d         db  0x73 ; 's'
0000000000016e0e         db  0x20 ; ' '
0000000000016e0f         db  0x61 ; 'a'
0000000000016e10         db  0x73 ; 's'
0000000000016e11         db  0x20 ; ' '
0000000000016e12         db  0x66 ; 'f'
0000000000016e13         db  0x6f ; 'o'
0000000000016e14         db  0x72 ; 'r'
0000000000016e15         db  0x20 ; ' '
0000000000016e16         db  0x74 ; 't'
0000000000016e17         db  0x68 ; 'h'
0000000000016e18         db  0x65 ; 'e'
0000000000016e19         db  0x20 ; ' '
0000000000016e1a         db  0x66 ; 'f'
0000000000016e1b         db  0x69 ; 'i'
0000000000016e1c         db  0x6c ; 'l'
0000000000016e1d         db  0x65 ; 'e'
0000000000016e1e         db  0x20 ; ' '
0000000000016e1f         db  0x70 ; 'p'
0000000000016e20         db  0x6f ; 'o'
0000000000016e21         db  0x69 ; 'i'
0000000000016e22         db  0x6e ; 'n'
0000000000016e23         db  0x74 ; 't'
0000000000016e24         db  0x65 ; 'e'
0000000000016e25         db  0x64 ; 'd'
0000000000016e26         db  0x20 ; ' '
0000000000016e27         db  0x74 ; 't'
0000000000016e28         db  0x6f ; 'o'
0000000000016e29         db  0x2e ; '.'
0000000000016e2a         db  0x29 ; ')'
0000000000016e2b         db  0x00 ; '.'
0000000000016e2c         db  0x4d ; 'M'
0000000000016e2d         db  0x55 ; 'U'
0000000000016e2e         db  0x4c ; 'L'
0000000000016e2f         db  0x54 ; 'T'
0000000000016e30         db  0x49 ; 'I'
0000000000016e31         db  0x48 ; 'H'
0000000000016e32         db  0x41 ; 'A'
0000000000016e33         db  0x52 ; 'R'
0000000000016e34         db  0x44 ; 'D'
0000000000016e35         db  0x4c ; 'L'
0000000000016e36         db  0x49 ; 'I'
0000000000016e37         db  0x4e ; 'N'
0000000000016e38         db  0x4b ; 'K'
0000000000016e39         db  0x20 ; ' '
0000000000016e3a         db  0x30 ; '0'
0000000000016e3b         db  0x30 ; '0'
0000000000016e3c         db  0x20 ; ' '
0000000000016e3d         db  0x23 ; '#'
0000000000016e3e         db  0x20 ; ' '
0000000000016e3f         db  0x72 ; 'r'
0000000000016e40         db  0x65 ; 'e'
0000000000016e41         db  0x67 ; 'g'
0000000000016e42         db  0x75 ; 'u'
0000000000016e43         db  0x6c ; 'l'
0000000000016e44         db  0x61 ; 'a'
0000000000016e45         db  0x72 ; 'r'
0000000000016e46         db  0x20 ; ' '
0000000000016e47         db  0x66 ; 'f'
0000000000016e48         db  0x69 ; 'i'
0000000000016e49         db  0x6c ; 'l'
0000000000016e4a         db  0x65 ; 'e'
0000000000016e4b         db  0x20 ; ' '
0000000000016e4c         db  0x77 ; 'w'
0000000000016e4d         db  0x69 ; 'i'
0000000000016e4e         db  0x74 ; 't'
0000000000016e4f         db  0x68 ; 'h'
0000000000016e50         db  0x20 ; ' '
0000000000016e51         db  0x6d ; 'm'
0000000000016e52         db  0x6f ; 'o'
0000000000016e53         db  0x72 ; 'r'
0000000000016e54         db  0x65 ; 'e'
0000000000016e55         db  0x20 ; ' '
0000000000016e56         db  0x74 ; 't'
0000000000016e57         db  0x68 ; 'h'
0000000000016e58         db  0x61 ; 'a'
0000000000016e59         db  0x6e ; 'n'
0000000000016e5a         db  0x20 ; ' '
0000000000016e5b         db  0x6f ; 'o'
0000000000016e5c         db  0x6e ; 'n'
0000000000016e5d         db  0x65 ; 'e'
0000000000016e5e         db  0x20 ; ' '
0000000000016e5f         db  0x6c ; 'l'
0000000000016e60         db  0x69 ; 'i'
0000000000016e61         db  0x6e ; 'n'
0000000000016e62         db  0x6b ; 'k'
0000000000016e63         db  0x00 ; '.'
0000000000016e64         db  0x46 ; 'F'
0000000000016e65         db  0x49 ; 'I'
0000000000016e66         db  0x46 ; 'F'
0000000000016e67         db  0x4f ; 'O'
0000000000016e68         db  0x20 ; ' '
0000000000016e69         db  0x34 ; '4'
0000000000016e6a         db  0x30 ; '0'
0000000000016e6b         db  0x3b ; ';'
0000000000016e6c         db  0x33 ; '3'
0000000000016e6d         db  0x33 ; '3'
0000000000016e6e         db  0x20 ; ' '
0000000000016e6f         db  0x23 ; '#'
0000000000016e70         db  0x20 ; ' '
0000000000016e71         db  0x70 ; 'p'
0000000000016e72         db  0x69 ; 'i'
0000000000016e73         db  0x70 ; 'p'
0000000000016e74         db  0x65 ; 'e'
0000000000016e75         db  0x00 ; '.'
0000000000016e76         db  0x53 ; 'S'
0000000000016e77         db  0x4f ; 'O'
0000000000016e78         db  0x43 ; 'C'
0000000000016e79         db  0x4b ; 'K'
0000000000016e7a         db  0x20 ; ' '
0000000000016e7b         db  0x30 ; '0'
0000000000016e7c         db  0x31 ; '1'
0000000000016e7d         db  0x3b ; ';'
0000000000016e7e         db  0x33 ; '3'
0000000000016e7f         db  0x35 ; '5'
0000000000016e80         db  0x20 ; ' '
0000000000016e81         db  0x23 ; '#'
0000000000016e82         db  0x20 ; ' '
0000000000016e83         db  0x73 ; 's'
0000000000016e84         db  0x6f ; 'o'
0000000000016e85         db  0x63 ; 'c'
0000000000016e86         db  0x6b ; 'k'
0000000000016e87         db  0x65 ; 'e'
0000000000016e88         db  0x74 ; 't'
0000000000016e89         db  0x00 ; '.'
0000000000016e8a         db  0x44 ; 'D'
0000000000016e8b         db  0x4f ; 'O'
0000000000016e8c         db  0x4f ; 'O'
0000000000016e8d         db  0x52 ; 'R'
0000000000016e8e         db  0x20 ; ' '
0000000000016e8f         db  0x30 ; '0'
0000000000016e90         db  0x31 ; '1'
0000000000016e91         db  0x3b ; ';'
0000000000016e92         db  0x33 ; '3'
0000000000016e93         db  0x35 ; '5'
0000000000016e94         db  0x20 ; ' '
0000000000016e95         db  0x23 ; '#'
0000000000016e96         db  0x20 ; ' '
0000000000016e97         db  0x64 ; 'd'
0000000000016e98         db  0x6f ; 'o'
0000000000016e99         db  0x6f ; 'o'
0000000000016e9a         db  0x72 ; 'r'
0000000000016e9b         db  0x00 ; '.'
0000000000016e9c         db  0x42 ; 'B'
0000000000016e9d         db  0x4c ; 'L'
0000000000016e9e         db  0x4b ; 'K'
0000000000016e9f         db  0x20 ; ' '
0000000000016ea0         db  0x34 ; '4'
0000000000016ea1         db  0x30 ; '0'
0000000000016ea2         db  0x3b ; ';'
0000000000016ea3         db  0x33 ; '3'
0000000000016ea4         db  0x33 ; '3'
0000000000016ea5         db  0x3b ; ';'
0000000000016ea6         db  0x30 ; '0'
0000000000016ea7         db  0x31 ; '1'
0000000000016ea8         db  0x20 ; ' '
0000000000016ea9         db  0x23 ; '#'
0000000000016eaa         db  0x20 ; ' '
0000000000016eab         db  0x62 ; 'b'
0000000000016eac         db  0x6c ; 'l'
0000000000016ead         db  0x6f ; 'o'
0000000000016eae         db  0x63 ; 'c'
0000000000016eaf         db  0x6b ; 'k'
0000000000016eb0         db  0x20 ; ' '
0000000000016eb1         db  0x64 ; 'd'
0000000000016eb2         db  0x65 ; 'e'
0000000000016eb3         db  0x76 ; 'v'
0000000000016eb4         db  0x69 ; 'i'
0000000000016eb5         db  0x63 ; 'c'
0000000000016eb6         db  0x65 ; 'e'
0000000000016eb7         db  0x20 ; ' '
0000000000016eb8         db  0x64 ; 'd'
0000000000016eb9         db  0x72 ; 'r'
0000000000016eba         db  0x69 ; 'i'
0000000000016ebb         db  0x76 ; 'v'
0000000000016ebc         db  0x65 ; 'e'
0000000000016ebd         db  0x72 ; 'r'
0000000000016ebe         db  0x00 ; '.'
0000000000016ebf         db  0x43 ; 'C'
0000000000016ec0         db  0x48 ; 'H'
0000000000016ec1         db  0x52 ; 'R'
0000000000016ec2         db  0x20 ; ' '
0000000000016ec3         db  0x34 ; '4'
0000000000016ec4         db  0x30 ; '0'
0000000000016ec5         db  0x3b ; ';'
0000000000016ec6         db  0x33 ; '3'
0000000000016ec7         db  0x33 ; '3'
0000000000016ec8         db  0x3b ; ';'
0000000000016ec9         db  0x30 ; '0'
0000000000016eca         db  0x31 ; '1'
0000000000016ecb         db  0x20 ; ' '
0000000000016ecc         db  0x23 ; '#'
0000000000016ecd         db  0x20 ; ' '
0000000000016ece         db  0x63 ; 'c'
0000000000016ecf         db  0x68 ; 'h'
0000000000016ed0         db  0x61 ; 'a'
0000000000016ed1         db  0x72 ; 'r'
0000000000016ed2         db  0x61 ; 'a'
0000000000016ed3         db  0x63 ; 'c'
0000000000016ed4         db  0x74 ; 't'
0000000000016ed5         db  0x65 ; 'e'
0000000000016ed6         db  0x72 ; 'r'
0000000000016ed7         db  0x20 ; ' '
0000000000016ed8         db  0x64 ; 'd'
0000000000016ed9         db  0x65 ; 'e'
0000000000016eda         db  0x76 ; 'v'
0000000000016edb         db  0x69 ; 'i'
0000000000016edc         db  0x63 ; 'c'
0000000000016edd         db  0x65 ; 'e'
0000000000016ede         db  0x20 ; ' '
0000000000016edf         db  0x64 ; 'd'
0000000000016ee0         db  0x72 ; 'r'
0000000000016ee1         db  0x69 ; 'i'
0000000000016ee2         db  0x76 ; 'v'
0000000000016ee3         db  0x65 ; 'e'
0000000000016ee4         db  0x72 ; 'r'
0000000000016ee5         db  0x00 ; '.'
0000000000016ee6         db  0x4f ; 'O'
0000000000016ee7         db  0x52 ; 'R'
0000000000016ee8         db  0x50 ; 'P'
0000000000016ee9         db  0x48 ; 'H'
0000000000016eea         db  0x41 ; 'A'
0000000000016eeb         db  0x4e ; 'N'
0000000000016eec         db  0x20 ; ' '
0000000000016eed         db  0x34 ; '4'
0000000000016eee         db  0x30 ; '0'
0000000000016eef         db  0x3b ; ';'
0000000000016ef0         db  0x33 ; '3'
0000000000016ef1         db  0x31 ; '1'
0000000000016ef2         db  0x3b ; ';'
0000000000016ef3         db  0x30 ; '0'
0000000000016ef4         db  0x31 ; '1'
0000000000016ef5         db  0x20 ; ' '
0000000000016ef6         db  0x23 ; '#'
0000000000016ef7         db  0x20 ; ' '
0000000000016ef8         db  0x73 ; 's'
0000000000016ef9         db  0x79 ; 'y'
0000000000016efa         db  0x6d ; 'm'
0000000000016efb         db  0x6c ; 'l'
0000000000016efc         db  0x69 ; 'i'
0000000000016efd         db  0x6e ; 'n'
0000000000016efe         db  0x6b ; 'k'
0000000000016eff         db  0x20 ; ' '
0000000000016f00         db  0x74 ; 't'
0000000000016f01         db  0x6f ; 'o'
0000000000016f02         db  0x20 ; ' '
0000000000016f03         db  0x6e ; 'n'
0000000000016f04         db  0x6f ; 'o'
0000000000016f05         db  0x6e ; 'n'
0000000000016f06         db  0x65 ; 'e'
0000000000016f07         db  0x78 ; 'x'
0000000000016f08         db  0x69 ; 'i'
0000000000016f09         db  0x73 ; 's'
0000000000016f0a         db  0x74 ; 't'
0000000000016f0b         db  0x65 ; 'e'
0000000000016f0c         db  0x6e ; 'n'
0000000000016f0d         db  0x74 ; 't'
0000000000016f0e         db  0x20 ; ' '
0000000000016f0f         db  0x66 ; 'f'
0000000000016f10         db  0x69 ; 'i'
0000000000016f11         db  0x6c ; 'l'
0000000000016f12         db  0x65 ; 'e'
0000000000016f13         db  0x2c ; ','
0000000000016f14         db  0x20 ; ' '
0000000000016f15         db  0x6f ; 'o'
0000000000016f16         db  0x72 ; 'r'
0000000000016f17         db  0x20 ; ' '
0000000000016f18         db  0x6e ; 'n'
0000000000016f19         db  0x6f ; 'o'
0000000000016f1a         db  0x6e ; 'n'
0000000000016f1b         db  0x2d ; '-'
0000000000016f1c         db  0x73 ; 's'
0000000000016f1d         db  0x74 ; 't'
0000000000016f1e         db  0x61 ; 'a'
0000000000016f1f         db  0x74 ; 't'
0000000000016f20         db  0x27 ; '''
0000000000016f21         db  0x61 ; 'a'
0000000000016f22         db  0x62 ; 'b'
0000000000016f23         db  0x6c ; 'l'
0000000000016f24         db  0x65 ; 'e'
0000000000016f25         db  0x20 ; ' '
0000000000016f26         db  0x66 ; 'f'
0000000000016f27         db  0x69 ; 'i'
0000000000016f28         db  0x6c ; 'l'
0000000000016f29         db  0x65 ; 'e'
0000000000016f2a         db  0x20 ; ' '
0000000000016f2b         db  0x2e ; '.'
0000000000016f2c         db  0x2e ; '.'
0000000000016f2d         db  0x2e ; '.'
0000000000016f2e         db  0x00 ; '.'
0000000000016f2f         db  0x4d ; 'M'
0000000000016f30         db  0x49 ; 'I'
0000000000016f31         db  0x53 ; 'S'
0000000000016f32         db  0x53 ; 'S'
0000000000016f33         db  0x49 ; 'I'
0000000000016f34         db  0x4e ; 'N'
0000000000016f35         db  0x47 ; 'G'
0000000000016f36         db  0x20 ; ' '
0000000000016f37         db  0x30 ; '0'
0000000000016f38         db  0x30 ; '0'
0000000000016f39         db  0x20 ; ' '
0000000000016f3a         db  0x23 ; '#'
0000000000016f3b         db  0x20 ; ' '
0000000000016f3c         db  0x2e ; '.'
0000000000016f3d         db  0x2e ; '.'
0000000000016f3e         db  0x2e ; '.'
0000000000016f3f         db  0x20 ; ' '
0000000000016f40         db  0x61 ; 'a'
0000000000016f41         db  0x6e ; 'n'
0000000000016f42         db  0x64 ; 'd'
0000000000016f43         db  0x20 ; ' '
0000000000016f44         db  0x74 ; 't'
0000000000016f45         db  0x68 ; 'h'
0000000000016f46         db  0x65 ; 'e'
0000000000016f47         db  0x20 ; ' '
0000000000016f48         db  0x66 ; 'f'
0000000000016f49         db  0x69 ; 'i'
0000000000016f4a         db  0x6c ; 'l'
0000000000016f4b         db  0x65 ; 'e'
0000000000016f4c         db  0x73 ; 's'
0000000000016f4d         db  0x20 ; ' '
0000000000016f4e         db  0x74 ; 't'
0000000000016f4f         db  0x68 ; 'h'
0000000000016f50         db  0x65 ; 'e'
0000000000016f51         db  0x79 ; 'y'
0000000000016f52         db  0x20 ; ' '
0000000000016f53         db  0x70 ; 'p'
0000000000016f54         db  0x6f ; 'o'
0000000000016f55         db  0x69 ; 'i'
0000000000016f56         db  0x6e ; 'n'
0000000000016f57         db  0x74 ; 't'
0000000000016f58         db  0x20 ; ' '
0000000000016f59         db  0x74 ; 't'
0000000000016f5a         db  0x6f ; 'o'
0000000000016f5b         db  0x00 ; '.'
0000000000016f5c         db  0x53 ; 'S'
0000000000016f5d         db  0x45 ; 'E'
0000000000016f5e         db  0x54 ; 'T'
0000000000016f5f         db  0x55 ; 'U'
0000000000016f60         db  0x49 ; 'I'
0000000000016f61         db  0x44 ; 'D'
0000000000016f62         db  0x20 ; ' '
0000000000016f63         db  0x33 ; '3'
0000000000016f64         db  0x37 ; '7'
0000000000016f65         db  0x3b ; ';'
0000000000016f66         db  0x34 ; '4'
0000000000016f67         db  0x31 ; '1'
0000000000016f68         db  0x20 ; ' '
0000000000016f69         db  0x23 ; '#'
0000000000016f6a         db  0x20 ; ' '
0000000000016f6b         db  0x66 ; 'f'
0000000000016f6c         db  0x69 ; 'i'
0000000000016f6d         db  0x6c ; 'l'
0000000000016f6e         db  0x65 ; 'e'
0000000000016f6f         db  0x20 ; ' '
0000000000016f70         db  0x74 ; 't'
0000000000016f71         db  0x68 ; 'h'
0000000000016f72         db  0x61 ; 'a'
0000000000016f73         db  0x74 ; 't'
0000000000016f74         db  0x20 ; ' '
0000000000016f75         db  0x69 ; 'i'
0000000000016f76         db  0x73 ; 's'
0000000000016f77         db  0x20 ; ' '
0000000000016f78         db  0x73 ; 's'
0000000000016f79         db  0x65 ; 'e'
0000000000016f7a         db  0x74 ; 't'
0000000000016f7b         db  0x75 ; 'u'
0000000000016f7c         db  0x69 ; 'i'
0000000000016f7d         db  0x64 ; 'd'
0000000000016f7e         db  0x20 ; ' '
0000000000016f7f         db  0x28 ; '('
0000000000016f80         db  0x75 ; 'u'
0000000000016f81         db  0x2b ; '+'
0000000000016f82         db  0x73 ; 's'
0000000000016f83         db  0x29 ; ')'
0000000000016f84         db  0x00 ; '.'
0000000000016f85         db  0x53 ; 'S'
0000000000016f86         db  0x45 ; 'E'
0000000000016f87         db  0x54 ; 'T'
0000000000016f88         db  0x47 ; 'G'
0000000000016f89         db  0x49 ; 'I'
0000000000016f8a         db  0x44 ; 'D'
0000000000016f8b         db  0x20 ; ' '
0000000000016f8c         db  0x33 ; '3'
0000000000016f8d         db  0x30 ; '0'
0000000000016f8e         db  0x3b ; ';'
0000000000016f8f         db  0x34 ; '4'
0000000000016f90         db  0x33 ; '3'
0000000000016f91         db  0x20 ; ' '
0000000000016f92         db  0x23 ; '#'
0000000000016f93         db  0x20 ; ' '
0000000000016f94         db  0x66 ; 'f'
0000000000016f95         db  0x69 ; 'i'
0000000000016f96         db  0x6c ; 'l'
0000000000016f97         db  0x65 ; 'e'
0000000000016f98         db  0x20 ; ' '
0000000000016f99         db  0x74 ; 't'
0000000000016f9a         db  0x68 ; 'h'
0000000000016f9b         db  0x61 ; 'a'
0000000000016f9c         db  0x74 ; 't'
0000000000016f9d         db  0x20 ; ' '
0000000000016f9e         db  0x69 ; 'i'
0000000000016f9f         db  0x73 ; 's'
0000000000016fa0         db  0x20 ; ' '
0000000000016fa1         db  0x73 ; 's'
0000000000016fa2         db  0x65 ; 'e'
0000000000016fa3         db  0x74 ; 't'
0000000000016fa4         db  0x67 ; 'g'
0000000000016fa5         db  0x69 ; 'i'
0000000000016fa6         db  0x64 ; 'd'
0000000000016fa7         db  0x20 ; ' '
0000000000016fa8         db  0x28 ; '('
0000000000016fa9         db  0x67 ; 'g'
0000000000016faa         db  0x2b ; '+'
0000000000016fab         db  0x73 ; 's'
0000000000016fac         db  0x29 ; ')'
0000000000016fad         db  0x00 ; '.'
0000000000016fae         db  0x43 ; 'C'
0000000000016faf         db  0x41 ; 'A'
0000000000016fb0         db  0x50 ; 'P'
0000000000016fb1         db  0x41 ; 'A'
0000000000016fb2         db  0x42 ; 'B'
0000000000016fb3         db  0x49 ; 'I'
0000000000016fb4         db  0x4c ; 'L'
0000000000016fb5         db  0x49 ; 'I'
0000000000016fb6         db  0x54 ; 'T'
0000000000016fb7         db  0x59 ; 'Y'
0000000000016fb8         db  0x20 ; ' '
0000000000016fb9         db  0x33 ; '3'
0000000000016fba         db  0x30 ; '0'
0000000000016fbb         db  0x3b ; ';'
0000000000016fbc         db  0x34 ; '4'
0000000000016fbd         db  0x31 ; '1'
0000000000016fbe         db  0x20 ; ' '
0000000000016fbf         db  0x23 ; '#'
0000000000016fc0         db  0x20 ; ' '
0000000000016fc1         db  0x66 ; 'f'
0000000000016fc2         db  0x69 ; 'i'
0000000000016fc3         db  0x6c ; 'l'
0000000000016fc4         db  0x65 ; 'e'
0000000000016fc5         db  0x20 ; ' '
0000000000016fc6         db  0x77 ; 'w'
0000000000016fc7         db  0x69 ; 'i'
0000000000016fc8         db  0x74 ; 't'
0000000000016fc9         db  0x68 ; 'h'
0000000000016fca         db  0x20 ; ' '
0000000000016fcb         db  0x63 ; 'c'
0000000000016fcc         db  0x61 ; 'a'
0000000000016fcd         db  0x70 ; 'p'
0000000000016fce         db  0x61 ; 'a'
0000000000016fcf         db  0x62 ; 'b'
0000000000016fd0         db  0x69 ; 'i'
0000000000016fd1         db  0x6c ; 'l'
0000000000016fd2         db  0x69 ; 'i'
0000000000016fd3         db  0x74 ; 't'
0000000000016fd4         db  0x79 ; 'y'
0000000000016fd5         db  0x00 ; '.'
0000000000016fd6         db  0x53 ; 'S'
0000000000016fd7         db  0x54 ; 'T'
0000000000016fd8         db  0x49 ; 'I'
0000000000016fd9         db  0x43 ; 'C'
0000000000016fda         db  0x4b ; 'K'
0000000000016fdb         db  0x59 ; 'Y'
0000000000016fdc         db  0x5f ; '_'
0000000000016fdd         db  0x4f ; 'O'
0000000000016fde         db  0x54 ; 'T'
0000000000016fdf         db  0x48 ; 'H'
0000000000016fe0         db  0x45 ; 'E'
0000000000016fe1         db  0x52 ; 'R'
0000000000016fe2         db  0x5f ; '_'
0000000000016fe3         db  0x57 ; 'W'
0000000000016fe4         db  0x52 ; 'R'
0000000000016fe5         db  0x49 ; 'I'
0000000000016fe6         db  0x54 ; 'T'
0000000000016fe7         db  0x41 ; 'A'
0000000000016fe8         db  0x42 ; 'B'
0000000000016fe9         db  0x4c ; 'L'
0000000000016fea         db  0x45 ; 'E'
0000000000016feb         db  0x20 ; ' '
0000000000016fec         db  0x33 ; '3'
0000000000016fed         db  0x30 ; '0'
0000000000016fee         db  0x3b ; ';'
0000000000016fef         db  0x34 ; '4'
0000000000016ff0         db  0x32 ; '2'
0000000000016ff1         db  0x20 ; ' '
0000000000016ff2         db  0x23 ; '#'
0000000000016ff3         db  0x20 ; ' '
0000000000016ff4         db  0x64 ; 'd'
0000000000016ff5         db  0x69 ; 'i'
0000000000016ff6         db  0x72 ; 'r'
0000000000016ff7         db  0x20 ; ' '
0000000000016ff8         db  0x74 ; 't'
0000000000016ff9         db  0x68 ; 'h'
0000000000016ffa         db  0x61 ; 'a'
0000000000016ffb         db  0x74 ; 't'
0000000000016ffc         db  0x20 ; ' '
0000000000016ffd         db  0x69 ; 'i'
0000000000016ffe         db  0x73 ; 's'
0000000000016fff         db  0x20 ; ' '
0000000000017000         db  0x73 ; 's'
0000000000017001         db  0x74 ; 't'
0000000000017002         db  0x69 ; 'i'
0000000000017003         db  0x63 ; 'c'
0000000000017004         db  0x6b ; 'k'
0000000000017005         db  0x79 ; 'y'
0000000000017006         db  0x20 ; ' '
0000000000017007         db  0x61 ; 'a'
0000000000017008         db  0x6e ; 'n'
0000000000017009         db  0x64 ; 'd'
000000000001700a         db  0x20 ; ' '
000000000001700b         db  0x6f ; 'o'
000000000001700c         db  0x74 ; 't'
000000000001700d         db  0x68 ; 'h'
000000000001700e         db  0x65 ; 'e'
000000000001700f         db  0x72 ; 'r'
0000000000017010         db  0x2d ; '-'
0000000000017011         db  0x77 ; 'w'
0000000000017012         db  0x72 ; 'r'
0000000000017013         db  0x69 ; 'i'
0000000000017014         db  0x74 ; 't'
0000000000017015         db  0x61 ; 'a'
0000000000017016         db  0x62 ; 'b'
0000000000017017         db  0x6c ; 'l'
0000000000017018         db  0x65 ; 'e'
0000000000017019         db  0x20 ; ' '
000000000001701a         db  0x28 ; '('
000000000001701b         db  0x2b ; '+'
000000000001701c         db  0x74 ; 't'
000000000001701d         db  0x2c ; ','
000000000001701e         db  0x6f ; 'o'
000000000001701f         db  0x2b ; '+'
0000000000017020         db  0x77 ; 'w'
0000000000017021         db  0x29 ; ')'
0000000000017022         db  0x00 ; '.'
0000000000017023         db  0x4f ; 'O'
0000000000017024         db  0x54 ; 'T'
0000000000017025         db  0x48 ; 'H'
0000000000017026         db  0x45 ; 'E'
0000000000017027         db  0x52 ; 'R'
0000000000017028         db  0x5f ; '_'
0000000000017029         db  0x57 ; 'W'
000000000001702a         db  0x52 ; 'R'
000000000001702b         db  0x49 ; 'I'
000000000001702c         db  0x54 ; 'T'
000000000001702d         db  0x41 ; 'A'
000000000001702e         db  0x42 ; 'B'
000000000001702f         db  0x4c ; 'L'
0000000000017030         db  0x45 ; 'E'
0000000000017031         db  0x20 ; ' '
0000000000017032         db  0x33 ; '3'
0000000000017033         db  0x34 ; '4'
0000000000017034         db  0x3b ; ';'
0000000000017035         db  0x34 ; '4'
0000000000017036         db  0x32 ; '2'
0000000000017037         db  0x20 ; ' '
0000000000017038         db  0x23 ; '#'
0000000000017039         db  0x20 ; ' '
000000000001703a         db  0x64 ; 'd'
000000000001703b         db  0x69 ; 'i'
000000000001703c         db  0x72 ; 'r'
000000000001703d         db  0x20 ; ' '
000000000001703e         db  0x74 ; 't'
000000000001703f         db  0x68 ; 'h'
0000000000017040         db  0x61 ; 'a'
0000000000017041         db  0x74 ; 't'
0000000000017042         db  0x20 ; ' '
0000000000017043         db  0x69 ; 'i'
0000000000017044         db  0x73 ; 's'
0000000000017045         db  0x20 ; ' '
0000000000017046         db  0x6f ; 'o'
0000000000017047         db  0x74 ; 't'
0000000000017048         db  0x68 ; 'h'
0000000000017049         db  0x65 ; 'e'
000000000001704a         db  0x72 ; 'r'
000000000001704b         db  0x2d ; '-'
000000000001704c         db  0x77 ; 'w'
000000000001704d         db  0x72 ; 'r'
000000000001704e         db  0x69 ; 'i'
000000000001704f         db  0x74 ; 't'
0000000000017050         db  0x61 ; 'a'
0000000000017051         db  0x62 ; 'b'
0000000000017052         db  0x6c ; 'l'
0000000000017053         db  0x65 ; 'e'
0000000000017054         db  0x20 ; ' '
0000000000017055         db  0x28 ; '('
0000000000017056         db  0x6f ; 'o'
0000000000017057         db  0x2b ; '+'
0000000000017058         db  0x77 ; 'w'
0000000000017059         db  0x29 ; ')'
000000000001705a         db  0x20 ; ' '
000000000001705b         db  0x61 ; 'a'
000000000001705c         db  0x6e ; 'n'
000000000001705d         db  0x64 ; 'd'
000000000001705e         db  0x20 ; ' '
000000000001705f         db  0x6e ; 'n'
0000000000017060         db  0x6f ; 'o'
0000000000017061         db  0x74 ; 't'
0000000000017062         db  0x20 ; ' '
0000000000017063         db  0x73 ; 's'
0000000000017064         db  0x74 ; 't'
0000000000017065         db  0x69 ; 'i'
0000000000017066         db  0x63 ; 'c'
0000000000017067         db  0x6b ; 'k'
0000000000017068         db  0x79 ; 'y'
0000000000017069         db  0x00 ; '.'
000000000001706a         db  0x53 ; 'S'
000000000001706b         db  0x54 ; 'T'
000000000001706c         db  0x49 ; 'I'
000000000001706d         db  0x43 ; 'C'
000000000001706e         db  0x4b ; 'K'
000000000001706f         db  0x59 ; 'Y'
0000000000017070         db  0x20 ; ' '
0000000000017071         db  0x33 ; '3'
0000000000017072         db  0x37 ; '7'
0000000000017073         db  0x3b ; ';'
0000000000017074         db  0x34 ; '4'
0000000000017075         db  0x34 ; '4'
0000000000017076         db  0x20 ; ' '
0000000000017077         db  0x23 ; '#'
0000000000017078         db  0x20 ; ' '
0000000000017079         db  0x64 ; 'd'
000000000001707a         db  0x69 ; 'i'
000000000001707b         db  0x72 ; 'r'
000000000001707c         db  0x20 ; ' '
000000000001707d         db  0x77 ; 'w'
000000000001707e         db  0x69 ; 'i'
000000000001707f         db  0x74 ; 't'
0000000000017080         db  0x68 ; 'h'
0000000000017081         db  0x20 ; ' '
0000000000017082         db  0x74 ; 't'
0000000000017083         db  0x68 ; 'h'
0000000000017084         db  0x65 ; 'e'
0000000000017085         db  0x20 ; ' '
0000000000017086         db  0x73 ; 's'
0000000000017087         db  0x74 ; 't'
0000000000017088         db  0x69 ; 'i'
0000000000017089         db  0x63 ; 'c'
000000000001708a         db  0x6b ; 'k'
000000000001708b         db  0x79 ; 'y'
000000000001708c         db  0x20 ; ' '
000000000001708d         db  0x62 ; 'b'
000000000001708e         db  0x69 ; 'i'
000000000001708f         db  0x74 ; 't'
0000000000017090         db  0x20 ; ' '
0000000000017091         db  0x73 ; 's'
0000000000017092         db  0x65 ; 'e'
0000000000017093         db  0x74 ; 't'
0000000000017094         db  0x20 ; ' '
0000000000017095         db  0x28 ; '('
0000000000017096         db  0x2b ; '+'
0000000000017097         db  0x74 ; 't'
0000000000017098         db  0x29 ; ')'
0000000000017099         db  0x20 ; ' '
000000000001709a         db  0x61 ; 'a'
000000000001709b         db  0x6e ; 'n'
000000000001709c         db  0x64 ; 'd'
000000000001709d         db  0x20 ; ' '
000000000001709e         db  0x6e ; 'n'
000000000001709f         db  0x6f ; 'o'
00000000000170a0         db  0x74 ; 't'
00000000000170a1         db  0x20 ; ' '
00000000000170a2         db  0x6f ; 'o'
00000000000170a3         db  0x74 ; 't'
00000000000170a4         db  0x68 ; 'h'
00000000000170a5         db  0x65 ; 'e'
00000000000170a6         db  0x72 ; 'r'
00000000000170a7         db  0x2d ; '-'
00000000000170a8         db  0x77 ; 'w'
00000000000170a9         db  0x72 ; 'r'
00000000000170aa         db  0x69 ; 'i'
00000000000170ab         db  0x74 ; 't'
00000000000170ac         db  0x61 ; 'a'
00000000000170ad         db  0x62 ; 'b'
00000000000170ae         db  0x6c ; 'l'
00000000000170af         db  0x65 ; 'e'
00000000000170b0         db  0x00 ; '.'
00000000000170b1         db  0x23 ; '#'
00000000000170b2         db  0x20 ; ' '
00000000000170b3         db  0x54 ; 'T'
00000000000170b4         db  0x68 ; 'h'
00000000000170b5         db  0x69 ; 'i'
00000000000170b6         db  0x73 ; 's'
00000000000170b7         db  0x20 ; ' '
00000000000170b8         db  0x69 ; 'i'
00000000000170b9         db  0x73 ; 's'
00000000000170ba         db  0x20 ; ' '
00000000000170bb         db  0x66 ; 'f'
00000000000170bc         db  0x6f ; 'o'
00000000000170bd         db  0x72 ; 'r'
00000000000170be         db  0x20 ; ' '
00000000000170bf         db  0x66 ; 'f'
00000000000170c0         db  0x69 ; 'i'
00000000000170c1         db  0x6c ; 'l'
00000000000170c2         db  0x65 ; 'e'
00000000000170c3         db  0x73 ; 's'
00000000000170c4         db  0x20 ; ' '
00000000000170c5         db  0x77 ; 'w'
00000000000170c6         db  0x69 ; 'i'
00000000000170c7         db  0x74 ; 't'
00000000000170c8         db  0x68 ; 'h'
00000000000170c9         db  0x20 ; ' '
00000000000170ca         db  0x65 ; 'e'
00000000000170cb         db  0x78 ; 'x'
00000000000170cc         db  0x65 ; 'e'
00000000000170cd         db  0x63 ; 'c'
00000000000170ce         db  0x75 ; 'u'
00000000000170cf         db  0x74 ; 't'
00000000000170d0         db  0x65 ; 'e'
00000000000170d1         db  0x20 ; ' '
00000000000170d2         db  0x70 ; 'p'
00000000000170d3         db  0x65 ; 'e'
00000000000170d4         db  0x72 ; 'r'
00000000000170d5         db  0x6d ; 'm'
00000000000170d6         db  0x69 ; 'i'
00000000000170d7         db  0x73 ; 's'
00000000000170d8         db  0x73 ; 's'
00000000000170d9         db  0x69 ; 'i'
00000000000170da         db  0x6f ; 'o'
00000000000170db         db  0x6e ; 'n'
00000000000170dc         db  0x3a ; ':'
00000000000170dd         db  0x00 ; '.'
00000000000170de         db  0x45 ; 'E'
00000000000170df         db  0x58 ; 'X'
00000000000170e0         db  0x45 ; 'E'
00000000000170e1         db  0x43 ; 'C'
00000000000170e2         db  0x20 ; ' '
00000000000170e3         db  0x30 ; '0'
00000000000170e4         db  0x31 ; '1'
00000000000170e5         db  0x3b ; ';'
00000000000170e6         db  0x33 ; '3'
00000000000170e7         db  0x32 ; '2'
00000000000170e8         db  0x00 ; '.'
00000000000170e9         db  0x23 ; '#'
00000000000170ea         db  0x20 ; ' '
00000000000170eb         db  0x4c ; 'L'
00000000000170ec         db  0x69 ; 'i'
00000000000170ed         db  0x73 ; 's'
00000000000170ee         db  0x74 ; 't'
00000000000170ef         db  0x20 ; ' '
00000000000170f0         db  0x61 ; 'a'
00000000000170f1         db  0x6e ; 'n'
00000000000170f2         db  0x79 ; 'y'
00000000000170f3         db  0x20 ; ' '
00000000000170f4         db  0x66 ; 'f'
00000000000170f5         db  0x69 ; 'i'
00000000000170f6         db  0x6c ; 'l'
00000000000170f7         db  0x65 ; 'e'
00000000000170f8         db  0x20 ; ' '
00000000000170f9         db  0x65 ; 'e'
00000000000170fa         db  0x78 ; 'x'
00000000000170fb         db  0x74 ; 't'
00000000000170fc         db  0x65 ; 'e'
00000000000170fd         db  0x6e ; 'n'
00000000000170fe         db  0x73 ; 's'
00000000000170ff         db  0x69 ; 'i'
0000000000017100         db  0x6f ; 'o'
0000000000017101         db  0x6e ; 'n'
0000000000017102         db  0x73 ; 's'
0000000000017103         db  0x20 ; ' '
0000000000017104         db  0x6c ; 'l'
0000000000017105         db  0x69 ; 'i'
0000000000017106         db  0x6b ; 'k'
0000000000017107         db  0x65 ; 'e'
0000000000017108         db  0x20 ; ' '
0000000000017109         db  0x27 ; '''
000000000001710a         db  0x2e ; '.'
000000000001710b         db  0x67 ; 'g'
000000000001710c         db  0x7a ; 'z'
000000000001710d         db  0x27 ; '''
000000000001710e         db  0x20 ; ' '
000000000001710f         db  0x6f ; 'o'
0000000000017110         db  0x72 ; 'r'
0000000000017111         db  0x20 ; ' '
0000000000017112         db  0x27 ; '''
0000000000017113         db  0x2e ; '.'
0000000000017114         db  0x74 ; 't'
0000000000017115         db  0x61 ; 'a'
0000000000017116         db  0x72 ; 'r'
0000000000017117         db  0x27 ; '''
0000000000017118         db  0x20 ; ' '
0000000000017119         db  0x74 ; 't'
000000000001711a         db  0x68 ; 'h'
000000000001711b         db  0x61 ; 'a'
000000000001711c         db  0x74 ; 't'
000000000001711d         db  0x20 ; ' '
000000000001711e         db  0x79 ; 'y'
000000000001711f         db  0x6f ; 'o'
0000000000017120         db  0x75 ; 'u'
0000000000017121         db  0x20 ; ' '
0000000000017122         db  0x77 ; 'w'
0000000000017123         db  0x6f ; 'o'
0000000000017124         db  0x75 ; 'u'
0000000000017125         db  0x6c ; 'l'
0000000000017126         db  0x64 ; 'd'
0000000000017127         db  0x20 ; ' '
0000000000017128         db  0x6c ; 'l'
0000000000017129         db  0x69 ; 'i'
000000000001712a         db  0x6b ; 'k'
000000000001712b         db  0x65 ; 'e'
000000000001712c         db  0x20 ; ' '
000000000001712d         db  0x6c ; 'l'
000000000001712e         db  0x73 ; 's'
000000000001712f         db  0x00 ; '.'
0000000000017130         db  0x23 ; '#'
0000000000017131         db  0x20 ; ' '
0000000000017132         db  0x74 ; 't'
0000000000017133         db  0x6f ; 'o'
0000000000017134         db  0x20 ; ' '
0000000000017135         db  0x63 ; 'c'
0000000000017136         db  0x6f ; 'o'
0000000000017137         db  0x6c ; 'l'
0000000000017138         db  0x6f ; 'o'
0000000000017139         db  0x72 ; 'r'
000000000001713a         db  0x69 ; 'i'
000000000001713b         db  0x7a ; 'z'
000000000001713c         db  0x65 ; 'e'
000000000001713d         db  0x20 ; ' '
000000000001713e         db  0x62 ; 'b'
000000000001713f         db  0x65 ; 'e'
0000000000017140         db  0x6c ; 'l'
0000000000017141         db  0x6f ; 'o'
0000000000017142         db  0x77 ; 'w'
0000000000017143         db  0x2e ; '.'
0000000000017144         db  0x20 ; ' '
0000000000017145         db  0x50 ; 'P'
0000000000017146         db  0x75 ; 'u'
0000000000017147         db  0x74 ; 't'
0000000000017148         db  0x20 ; ' '
0000000000017149         db  0x74 ; 't'
000000000001714a         db  0x68 ; 'h'
000000000001714b         db  0x65 ; 'e'
000000000001714c         db  0x20 ; ' '
000000000001714d         db  0x65 ; 'e'
000000000001714e         db  0x78 ; 'x'
000000000001714f         db  0x74 ; 't'
0000000000017150         db  0x65 ; 'e'
0000000000017151         db  0x6e ; 'n'
0000000000017152         db  0x73 ; 's'
0000000000017153         db  0x69 ; 'i'
0000000000017154         db  0x6f ; 'o'
0000000000017155         db  0x6e ; 'n'
0000000000017156         db  0x2c ; ','
0000000000017157         db  0x20 ; ' '
0000000000017158         db  0x61 ; 'a'
0000000000017159         db  0x20 ; ' '
000000000001715a         db  0x73 ; 's'
000000000001715b         db  0x70 ; 'p'
000000000001715c         db  0x61 ; 'a'
000000000001715d         db  0x63 ; 'c'
000000000001715e         db  0x65 ; 'e'
000000000001715f         db  0x2c ; ','
0000000000017160         db  0x20 ; ' '
0000000000017161         db  0x61 ; 'a'
0000000000017162         db  0x6e ; 'n'
0000000000017163         db  0x64 ; 'd'
0000000000017164         db  0x20 ; ' '
0000000000017165         db  0x74 ; 't'
0000000000017166         db  0x68 ; 'h'
0000000000017167         db  0x65 ; 'e'
0000000000017168         db  0x20 ; ' '
0000000000017169         db  0x63 ; 'c'
000000000001716a         db  0x6f ; 'o'
000000000001716b         db  0x6c ; 'l'
000000000001716c         db  0x6f ; 'o'
000000000001716d         db  0x72 ; 'r'
000000000001716e         db  0x20 ; ' '
000000000001716f         db  0x69 ; 'i'
0000000000017170         db  0x6e ; 'n'
0000000000017171         db  0x69 ; 'i'
0000000000017172         db  0x74 ; 't'
0000000000017173         db  0x20 ; ' '
0000000000017174         db  0x73 ; 's'
0000000000017175         db  0x74 ; 't'
0000000000017176         db  0x72 ; 'r'
0000000000017177         db  0x69 ; 'i'
0000000000017178         db  0x6e ; 'n'
0000000000017179         db  0x67 ; 'g'
000000000001717a         db  0x2e ; '.'
000000000001717b         db  0x00 ; '.'
000000000001717c         db  0x23 ; '#'
000000000001717d         db  0x20 ; ' '
000000000001717e         db  0x28 ; '('
000000000001717f         db  0x61 ; 'a'
0000000000017180         db  0x6e ; 'n'
0000000000017181         db  0x64 ; 'd'
0000000000017182         db  0x20 ; ' '
0000000000017183         db  0x61 ; 'a'
0000000000017184         db  0x6e ; 'n'
0000000000017185         db  0x79 ; 'y'
0000000000017186         db  0x20 ; ' '
0000000000017187         db  0x63 ; 'c'
0000000000017188         db  0x6f ; 'o'
0000000000017189         db  0x6d ; 'm'
000000000001718a         db  0x6d ; 'm'
000000000001718b         db  0x65 ; 'e'
000000000001718c         db  0x6e ; 'n'
000000000001718d         db  0x74 ; 't'
000000000001718e         db  0x73 ; 's'
000000000001718f         db  0x20 ; ' '
0000000000017190         db  0x79 ; 'y'
0000000000017191         db  0x6f ; 'o'
0000000000017192         db  0x75 ; 'u'
0000000000017193         db  0x20 ; ' '
0000000000017194         db  0x77 ; 'w'
0000000000017195         db  0x61 ; 'a'
0000000000017196         db  0x6e ; 'n'
0000000000017197         db  0x74 ; 't'
0000000000017198         db  0x20 ; ' '
0000000000017199         db  0x74 ; 't'
000000000001719a         db  0x6f ; 'o'
000000000001719b         db  0x20 ; ' '
000000000001719c         db  0x61 ; 'a'
000000000001719d         db  0x64 ; 'd'
000000000001719e         db  0x64 ; 'd'
000000000001719f         db  0x20 ; ' '
00000000000171a0         db  0x61 ; 'a'
00000000000171a1         db  0x66 ; 'f'
00000000000171a2         db  0x74 ; 't'
00000000000171a3         db  0x65 ; 'e'
00000000000171a4         db  0x72 ; 'r'
00000000000171a5         db  0x20 ; ' '
00000000000171a6         db  0x61 ; 'a'
00000000000171a7         db  0x20 ; ' '
00000000000171a8         db  0x27 ; '''
00000000000171a9         db  0x23 ; '#'
00000000000171aa         db  0x27 ; '''
00000000000171ab         db  0x29 ; ')'
00000000000171ac         db  0x00 ; '.'
00000000000171ad         db  0x23 ; '#'
00000000000171ae         db  0x20 ; ' '
00000000000171af         db  0x49 ; 'I'
00000000000171b0         db  0x66 ; 'f'
00000000000171b1         db  0x20 ; ' '
00000000000171b2         db  0x79 ; 'y'
00000000000171b3         db  0x6f ; 'o'
00000000000171b4         db  0x75 ; 'u'
00000000000171b5         db  0x20 ; ' '
00000000000171b6         db  0x75 ; 'u'
00000000000171b7         db  0x73 ; 's'
00000000000171b8         db  0x65 ; 'e'
00000000000171b9         db  0x20 ; ' '
00000000000171ba         db  0x44 ; 'D'
00000000000171bb         db  0x4f ; 'O'
00000000000171bc         db  0x53 ; 'S'
00000000000171bd         db  0x2d ; '-'
00000000000171be         db  0x73 ; 's'
00000000000171bf         db  0x74 ; 't'
00000000000171c0         db  0x79 ; 'y'
00000000000171c1         db  0x6c ; 'l'
00000000000171c2         db  0x65 ; 'e'
00000000000171c3         db  0x20 ; ' '
00000000000171c4         db  0x73 ; 's'
00000000000171c5         db  0x75 ; 'u'
00000000000171c6         db  0x66 ; 'f'
00000000000171c7         db  0x66 ; 'f'
00000000000171c8         db  0x69 ; 'i'
00000000000171c9         db  0x78 ; 'x'
00000000000171ca         db  0x65 ; 'e'
00000000000171cb         db  0x73 ; 's'
00000000000171cc         db  0x2c ; ','
00000000000171cd         db  0x20 ; ' '
00000000000171ce         db  0x79 ; 'y'
00000000000171cf         db  0x6f ; 'o'
00000000000171d0         db  0x75 ; 'u'
00000000000171d1         db  0x20 ; ' '
00000000000171d2         db  0x6d ; 'm'
00000000000171d3         db  0x61 ; 'a'
00000000000171d4         db  0x79 ; 'y'
00000000000171d5         db  0x20 ; ' '
00000000000171d6         db  0x77 ; 'w'
00000000000171d7         db  0x61 ; 'a'
00000000000171d8         db  0x6e ; 'n'
00000000000171d9         db  0x74 ; 't'
00000000000171da         db  0x20 ; ' '
00000000000171db         db  0x74 ; 't'
00000000000171dc         db  0x6f ; 'o'
00000000000171dd         db  0x20 ; ' '
00000000000171de         db  0x75 ; 'u'
00000000000171df         db  0x6e ; 'n'
00000000000171e0         db  0x63 ; 'c'
00000000000171e1         db  0x6f ; 'o'
00000000000171e2         db  0x6d ; 'm'
00000000000171e3         db  0x6d ; 'm'
00000000000171e4         db  0x65 ; 'e'
00000000000171e5         db  0x6e ; 'n'
00000000000171e6         db  0x74 ; 't'
00000000000171e7         db  0x20 ; ' '
00000000000171e8         db  0x74 ; 't'
00000000000171e9         db  0x68 ; 'h'
00000000000171ea         db  0x65 ; 'e'
00000000000171eb         db  0x20 ; ' '
00000000000171ec         db  0x66 ; 'f'
00000000000171ed         db  0x6f ; 'o'
00000000000171ee         db  0x6c ; 'l'
00000000000171ef         db  0x6c ; 'l'
00000000000171f0         db  0x6f ; 'o'
00000000000171f1         db  0x77 ; 'w'
00000000000171f2         db  0x69 ; 'i'
00000000000171f3         db  0x6e ; 'n'
00000000000171f4         db  0x67 ; 'g'
00000000000171f5         db  0x3a ; ':'
00000000000171f6         db  0x00 ; '.'
00000000000171f7         db  0x23 ; '#'
00000000000171f8         db  0x2e ; '.'
00000000000171f9         db  0x63 ; 'c'
00000000000171fa         db  0x6d ; 'm'
00000000000171fb         db  0x64 ; 'd'
00000000000171fc         db  0x20 ; ' '
00000000000171fd         db  0x30 ; '0'
00000000000171fe         db  0x31 ; '1'
00000000000171ff         db  0x3b ; ';'
0000000000017200         db  0x33 ; '3'
0000000000017201         db  0x32 ; '2'
0000000000017202         db  0x20 ; ' '
0000000000017203         db  0x23 ; '#'
0000000000017204         db  0x20 ; ' '
0000000000017205         db  0x65 ; 'e'
0000000000017206         db  0x78 ; 'x'
0000000000017207         db  0x65 ; 'e'
0000000000017208         db  0x63 ; 'c'
0000000000017209         db  0x75 ; 'u'
000000000001720a         db  0x74 ; 't'
000000000001720b         db  0x61 ; 'a'
000000000001720c         db  0x62 ; 'b'
000000000001720d         db  0x6c ; 'l'
000000000001720e         db  0x65 ; 'e'
000000000001720f         db  0x73 ; 's'
0000000000017210         db  0x20 ; ' '
0000000000017211         db  0x28 ; '('
0000000000017212         db  0x62 ; 'b'
0000000000017213         db  0x72 ; 'r'
0000000000017214         db  0x69 ; 'i'
0000000000017215         db  0x67 ; 'g'
0000000000017216         db  0x68 ; 'h'
0000000000017217         db  0x74 ; 't'
0000000000017218         db  0x20 ; ' '
0000000000017219         db  0x67 ; 'g'
000000000001721a         db  0x72 ; 'r'
000000000001721b         db  0x65 ; 'e'
000000000001721c         db  0x65 ; 'e'
000000000001721d         db  0x6e ; 'n'
000000000001721e         db  0x29 ; ')'
000000000001721f         db  0x00 ; '.'
0000000000017220         db  0x23 ; '#'
0000000000017221         db  0x2e ; '.'
0000000000017222         db  0x65 ; 'e'
0000000000017223         db  0x78 ; 'x'
0000000000017224         db  0x65 ; 'e'
0000000000017225         db  0x20 ; ' '
0000000000017226         db  0x30 ; '0'
0000000000017227         db  0x31 ; '1'
0000000000017228         db  0x3b ; ';'
0000000000017229         db  0x33 ; '3'
000000000001722a         db  0x32 ; '2'
000000000001722b         db  0x00 ; '.'
000000000001722c         db  0x23 ; '#'
000000000001722d         db  0x2e ; '.'
000000000001722e         db  0x63 ; 'c'
000000000001722f         db  0x6f ; 'o'
0000000000017230         db  0x6d ; 'm'
0000000000017231         db  0x20 ; ' '
0000000000017232         db  0x30 ; '0'
0000000000017233         db  0x31 ; '1'
0000000000017234         db  0x3b ; ';'
0000000000017235         db  0x33 ; '3'
0000000000017236         db  0x32 ; '2'
0000000000017237         db  0x00 ; '.'
0000000000017238         db  0x23 ; '#'
0000000000017239         db  0x2e ; '.'
000000000001723a         db  0x62 ; 'b'
000000000001723b         db  0x74 ; 't'
000000000001723c         db  0x6d ; 'm'
000000000001723d         db  0x20 ; ' '
000000000001723e         db  0x30 ; '0'
000000000001723f         db  0x31 ; '1'
0000000000017240         db  0x3b ; ';'
0000000000017241         db  0x33 ; '3'
0000000000017242         db  0x32 ; '2'
0000000000017243         db  0x00 ; '.'
0000000000017244         db  0x23 ; '#'
0000000000017245         db  0x2e ; '.'
0000000000017246         db  0x62 ; 'b'
0000000000017247         db  0x61 ; 'a'
0000000000017248         db  0x74 ; 't'
0000000000017249         db  0x20 ; ' '
000000000001724a         db  0x30 ; '0'
000000000001724b         db  0x31 ; '1'
000000000001724c         db  0x3b ; ';'
000000000001724d         db  0x33 ; '3'
000000000001724e         db  0x32 ; '2'
000000000001724f         db  0x00 ; '.'
0000000000017250         db  0x23 ; '#'
0000000000017251         db  0x20 ; ' '
0000000000017252         db  0x4f ; 'O'
0000000000017253         db  0x72 ; 'r'
0000000000017254         db  0x20 ; ' '
0000000000017255         db  0x69 ; 'i'
0000000000017256         db  0x66 ; 'f'
0000000000017257         db  0x20 ; ' '
0000000000017258         db  0x79 ; 'y'
0000000000017259         db  0x6f ; 'o'
000000000001725a         db  0x75 ; 'u'
000000000001725b         db  0x20 ; ' '
000000000001725c         db  0x77 ; 'w'
000000000001725d         db  0x61 ; 'a'
000000000001725e         db  0x6e ; 'n'
000000000001725f         db  0x74 ; 't'
0000000000017260         db  0x20 ; ' '
0000000000017261         db  0x74 ; 't'
0000000000017262         db  0x6f ; 'o'
0000000000017263         db  0x20 ; ' '
0000000000017264         db  0x63 ; 'c'
0000000000017265         db  0x6f ; 'o'
0000000000017266         db  0x6c ; 'l'
0000000000017267         db  0x6f ; 'o'
0000000000017268         db  0x72 ; 'r'
0000000000017269         db  0x69 ; 'i'
000000000001726a         db  0x7a ; 'z'
000000000001726b         db  0x65 ; 'e'
000000000001726c         db  0x20 ; ' '
000000000001726d         db  0x73 ; 's'
000000000001726e         db  0x63 ; 'c'
000000000001726f         db  0x72 ; 'r'
0000000000017270         db  0x69 ; 'i'
0000000000017271         db  0x70 ; 'p'
0000000000017272         db  0x74 ; 't'
0000000000017273         db  0x73 ; 's'
0000000000017274         db  0x20 ; ' '
0000000000017275         db  0x65 ; 'e'
0000000000017276         db  0x76 ; 'v'
0000000000017277         db  0x65 ; 'e'
0000000000017278         db  0x6e ; 'n'
0000000000017279         db  0x20 ; ' '
000000000001727a         db  0x69 ; 'i'
000000000001727b         db  0x66 ; 'f'
000000000001727c         db  0x20 ; ' '
000000000001727d         db  0x74 ; 't'
000000000001727e         db  0x68 ; 'h'
000000000001727f         db  0x65 ; 'e'
0000000000017280         db  0x79 ; 'y'
0000000000017281         db  0x20 ; ' '
0000000000017282         db  0x64 ; 'd'
0000000000017283         db  0x6f ; 'o'
0000000000017284         db  0x20 ; ' '
0000000000017285         db  0x6e ; 'n'
0000000000017286         db  0x6f ; 'o'
0000000000017287         db  0x74 ; 't'
0000000000017288         db  0x20 ; ' '
0000000000017289         db  0x68 ; 'h'
000000000001728a         db  0x61 ; 'a'
000000000001728b         db  0x76 ; 'v'
000000000001728c         db  0x65 ; 'e'
000000000001728d         db  0x20 ; ' '
000000000001728e         db  0x74 ; 't'
000000000001728f         db  0x68 ; 'h'
0000000000017290         db  0x65 ; 'e'
0000000000017291         db  0x00 ; '.'
0000000000017292         db  0x23 ; '#'
0000000000017293         db  0x20 ; ' '
0000000000017294         db  0x65 ; 'e'
0000000000017295         db  0x78 ; 'x'
0000000000017296         db  0x65 ; 'e'
0000000000017297         db  0x63 ; 'c'
0000000000017298         db  0x75 ; 'u'
0000000000017299         db  0x74 ; 't'
000000000001729a         db  0x61 ; 'a'
000000000001729b         db  0x62 ; 'b'
000000000001729c         db  0x6c ; 'l'
000000000001729d         db  0x65 ; 'e'
000000000001729e         db  0x20 ; ' '
000000000001729f         db  0x62 ; 'b'
00000000000172a0         db  0x69 ; 'i'
00000000000172a1         db  0x74 ; 't'
00000000000172a2         db  0x20 ; ' '
00000000000172a3         db  0x61 ; 'a'
00000000000172a4         db  0x63 ; 'c'
00000000000172a5         db  0x74 ; 't'
00000000000172a6         db  0x75 ; 'u'
00000000000172a7         db  0x61 ; 'a'
00000000000172a8         db  0x6c ; 'l'
00000000000172a9         db  0x6c ; 'l'
00000000000172aa         db  0x79 ; 'y'
00000000000172ab         db  0x20 ; ' '
00000000000172ac         db  0x73 ; 's'
00000000000172ad         db  0x65 ; 'e'
00000000000172ae         db  0x74 ; 't'
00000000000172af         db  0x2e ; '.'
00000000000172b0         db  0x00 ; '.'
00000000000172b1         db  0x23 ; '#'
00000000000172b2         db  0x2e ; '.'
00000000000172b3         db  0x73 ; 's'
00000000000172b4         db  0x68 ; 'h'
00000000000172b5         db  0x20 ; ' '
00000000000172b6         db  0x30 ; '0'
00000000000172b7         db  0x31 ; '1'
00000000000172b8         db  0x3b ; ';'
00000000000172b9         db  0x33 ; '3'
00000000000172ba         db  0x32 ; '2'
00000000000172bb         db  0x00 ; '.'
00000000000172bc         db  0x23 ; '#'
00000000000172bd         db  0x2e ; '.'
00000000000172be         db  0x63 ; 'c'
00000000000172bf         db  0x73 ; 's'
00000000000172c0         db  0x68 ; 'h'
00000000000172c1         db  0x20 ; ' '
00000000000172c2         db  0x30 ; '0'
00000000000172c3         db  0x31 ; '1'
00000000000172c4         db  0x3b ; ';'
00000000000172c5         db  0x33 ; '3'
00000000000172c6         db  0x32 ; '2'
00000000000172c7         db  0x00 ; '.'
00000000000172c8         db  0x20 ; ' '
00000000000172c9         db  0x23 ; '#'
00000000000172ca         db  0x20 ; ' '
00000000000172cb         db  0x61 ; 'a'
00000000000172cc         db  0x72 ; 'r'
00000000000172cd         db  0x63 ; 'c'
00000000000172ce         db  0x68 ; 'h'
00000000000172cf         db  0x69 ; 'i'
00000000000172d0         db  0x76 ; 'v'
00000000000172d1         db  0x65 ; 'e'
00000000000172d2         db  0x73 ; 's'
00000000000172d3         db  0x20 ; ' '
00000000000172d4         db  0x6f ; 'o'
00000000000172d5         db  0x72 ; 'r'
00000000000172d6         db  0x20 ; ' '
00000000000172d7         db  0x63 ; 'c'
00000000000172d8         db  0x6f ; 'o'
00000000000172d9         db  0x6d ; 'm'
00000000000172da         db  0x70 ; 'p'
00000000000172db         db  0x72 ; 'r'
00000000000172dc         db  0x65 ; 'e'
00000000000172dd         db  0x73 ; 's'
00000000000172de         db  0x73 ; 's'
00000000000172df         db  0x65 ; 'e'
00000000000172e0         db  0x64 ; 'd'
00000000000172e1         db  0x20 ; ' '
00000000000172e2         db  0x28 ; '('
00000000000172e3         db  0x62 ; 'b'
00000000000172e4         db  0x72 ; 'r'
00000000000172e5         db  0x69 ; 'i'
00000000000172e6         db  0x67 ; 'g'
00000000000172e7         db  0x68 ; 'h'
00000000000172e8         db  0x74 ; 't'
00000000000172e9         db  0x20 ; ' '
00000000000172ea         db  0x72 ; 'r'
00000000000172eb         db  0x65 ; 'e'
00000000000172ec         db  0x64 ; 'd'
00000000000172ed         db  0x29 ; ')'
00000000000172ee         db  0x00 ; '.'
00000000000172ef         db  0x2e ; '.'
00000000000172f0         db  0x74 ; 't'
00000000000172f1         db  0x61 ; 'a'
00000000000172f2         db  0x72 ; 'r'
00000000000172f3         db  0x20 ; ' '
00000000000172f4         db  0x30 ; '0'
00000000000172f5         db  0x31 ; '1'
00000000000172f6         db  0x3b ; ';'
00000000000172f7         db  0x33 ; '3'
00000000000172f8         db  0x31 ; '1'
00000000000172f9         db  0x00 ; '.'
00000000000172fa         db  0x2e ; '.'
00000000000172fb         db  0x74 ; 't'
00000000000172fc         db  0x67 ; 'g'
00000000000172fd         db  0x7a ; 'z'
00000000000172fe         db  0x20 ; ' '
00000000000172ff         db  0x30 ; '0'
0000000000017300         db  0x31 ; '1'
0000000000017301         db  0x3b ; ';'
0000000000017302         db  0x33 ; '3'
0000000000017303         db  0x31 ; '1'
0000000000017304         db  0x00 ; '.'
0000000000017305         db  0x2e ; '.'
0000000000017306         db  0x61 ; 'a'
0000000000017307         db  0x72 ; 'r'
0000000000017308         db  0x63 ; 'c'
0000000000017309         db  0x20 ; ' '
000000000001730a         db  0x30 ; '0'
000000000001730b         db  0x31 ; '1'
000000000001730c         db  0x3b ; ';'
000000000001730d         db  0x33 ; '3'
000000000001730e         db  0x31 ; '1'
000000000001730f         db  0x00 ; '.'
0000000000017310         db  0x2e ; '.'
0000000000017311         db  0x61 ; 'a'
0000000000017312         db  0x72 ; 'r'
0000000000017313         db  0x6a ; 'j'
0000000000017314         db  0x20 ; ' '
0000000000017315         db  0x30 ; '0'
0000000000017316         db  0x31 ; '1'
0000000000017317         db  0x3b ; ';'
0000000000017318         db  0x33 ; '3'
0000000000017319         db  0x31 ; '1'
000000000001731a         db  0x00 ; '.'
000000000001731b         db  0x2e ; '.'
000000000001731c         db  0x74 ; 't'
000000000001731d         db  0x61 ; 'a'
000000000001731e         db  0x7a ; 'z'
000000000001731f         db  0x20 ; ' '
0000000000017320         db  0x30 ; '0'
0000000000017321         db  0x31 ; '1'
0000000000017322         db  0x3b ; ';'
0000000000017323         db  0x33 ; '3'
0000000000017324         db  0x31 ; '1'
0000000000017325         db  0x00 ; '.'
0000000000017326         db  0x2e ; '.'
0000000000017327         db  0x6c ; 'l'
0000000000017328         db  0x68 ; 'h'
0000000000017329         db  0x61 ; 'a'
000000000001732a         db  0x20 ; ' '
000000000001732b         db  0x30 ; '0'
000000000001732c         db  0x31 ; '1'
000000000001732d         db  0x3b ; ';'
000000000001732e         db  0x33 ; '3'
000000000001732f         db  0x31 ; '1'
0000000000017330         db  0x00 ; '.'
0000000000017331         db  0x2e ; '.'
0000000000017332         db  0x6c ; 'l'
0000000000017333         db  0x7a ; 'z'
0000000000017334         db  0x34 ; '4'
0000000000017335         db  0x20 ; ' '
0000000000017336         db  0x30 ; '0'
0000000000017337         db  0x31 ; '1'
0000000000017338         db  0x3b ; ';'
0000000000017339         db  0x33 ; '3'
000000000001733a         db  0x31 ; '1'
000000000001733b         db  0x00 ; '.'
000000000001733c         db  0x2e ; '.'
000000000001733d         db  0x6c ; 'l'
000000000001733e         db  0x7a ; 'z'
000000000001733f         db  0x68 ; 'h'
0000000000017340         db  0x20 ; ' '
0000000000017341         db  0x30 ; '0'
0000000000017342         db  0x31 ; '1'
0000000000017343         db  0x3b ; ';'
0000000000017344         db  0x33 ; '3'
0000000000017345         db  0x31 ; '1'
0000000000017346         db  0x00 ; '.'
0000000000017347         db  0x2e ; '.'
0000000000017348         db  0x6c ; 'l'
0000000000017349         db  0x7a ; 'z'
000000000001734a         db  0x6d ; 'm'
000000000001734b         db  0x61 ; 'a'
000000000001734c         db  0x20 ; ' '
000000000001734d         db  0x30 ; '0'
000000000001734e         db  0x31 ; '1'
000000000001734f         db  0x3b ; ';'
0000000000017350         db  0x33 ; '3'
0000000000017351         db  0x31 ; '1'
0000000000017352         db  0x00 ; '.'
0000000000017353         db  0x2e ; '.'
0000000000017354         db  0x74 ; 't'
0000000000017355         db  0x6c ; 'l'
0000000000017356         db  0x7a ; 'z'
0000000000017357         db  0x20 ; ' '
0000000000017358         db  0x30 ; '0'
0000000000017359         db  0x31 ; '1'
000000000001735a         db  0x3b ; ';'
000000000001735b         db  0x33 ; '3'
000000000001735c         db  0x31 ; '1'
000000000001735d         db  0x00 ; '.'
000000000001735e         db  0x2e ; '.'
000000000001735f         db  0x74 ; 't'
0000000000017360         db  0x78 ; 'x'
0000000000017361         db  0x7a ; 'z'
0000000000017362         db  0x20 ; ' '
0000000000017363         db  0x30 ; '0'
0000000000017364         db  0x31 ; '1'
0000000000017365         db  0x3b ; ';'
0000000000017366         db  0x33 ; '3'
0000000000017367         db  0x31 ; '1'
0000000000017368         db  0x00 ; '.'
0000000000017369         db  0x2e ; '.'
000000000001736a         db  0x74 ; 't'
000000000001736b         db  0x7a ; 'z'
000000000001736c         db  0x6f ; 'o'
000000000001736d         db  0x20 ; ' '
000000000001736e         db  0x30 ; '0'
000000000001736f         db  0x31 ; '1'
0000000000017370         db  0x3b ; ';'
0000000000017371         db  0x33 ; '3'
0000000000017372         db  0x31 ; '1'
0000000000017373         db  0x00 ; '.'
0000000000017374         db  0x2e ; '.'
0000000000017375         db  0x74 ; 't'
0000000000017376         db  0x37 ; '7'
0000000000017377         db  0x7a ; 'z'
0000000000017378         db  0x20 ; ' '
0000000000017379         db  0x30 ; '0'
000000000001737a         db  0x31 ; '1'
000000000001737b         db  0x3b ; ';'
000000000001737c         db  0x33 ; '3'
000000000001737d         db  0x31 ; '1'
000000000001737e         db  0x00 ; '.'
000000000001737f         db  0x2e ; '.'
0000000000017380         db  0x7a ; 'z'
0000000000017381         db  0x69 ; 'i'
0000000000017382         db  0x70 ; 'p'
0000000000017383         db  0x20 ; ' '
0000000000017384         db  0x30 ; '0'
0000000000017385         db  0x31 ; '1'
0000000000017386         db  0x3b ; ';'
0000000000017387         db  0x33 ; '3'
0000000000017388         db  0x31 ; '1'
0000000000017389         db  0x00 ; '.'
000000000001738a         db  0x2e ; '.'
000000000001738b         db  0x7a ; 'z'
000000000001738c         db  0x20 ; ' '
000000000001738d         db  0x30 ; '0'
000000000001738e         db  0x31 ; '1'
000000000001738f         db  0x3b ; ';'
0000000000017390         db  0x33 ; '3'
0000000000017391         db  0x31 ; '1'
0000000000017392         db  0x00 ; '.'
0000000000017393         db  0x2e ; '.'
0000000000017394         db  0x64 ; 'd'
0000000000017395         db  0x7a ; 'z'
0000000000017396         db  0x20 ; ' '
0000000000017397         db  0x30 ; '0'
0000000000017398         db  0x31 ; '1'
0000000000017399         db  0x3b ; ';'
000000000001739a         db  0x33 ; '3'
000000000001739b         db  0x31 ; '1'
000000000001739c         db  0x00 ; '.'
000000000001739d         db  0x2e ; '.'
000000000001739e         db  0x67 ; 'g'
000000000001739f         db  0x7a ; 'z'
00000000000173a0         db  0x20 ; ' '
00000000000173a1         db  0x30 ; '0'
00000000000173a2         db  0x31 ; '1'
00000000000173a3         db  0x3b ; ';'
00000000000173a4         db  0x33 ; '3'
00000000000173a5         db  0x31 ; '1'
00000000000173a6         db  0x00 ; '.'
00000000000173a7         db  0x2e ; '.'
00000000000173a8         db  0x6c ; 'l'
00000000000173a9         db  0x72 ; 'r'
00000000000173aa         db  0x7a ; 'z'
00000000000173ab         db  0x20 ; ' '
00000000000173ac         db  0x30 ; '0'
00000000000173ad         db  0x31 ; '1'
00000000000173ae         db  0x3b ; ';'
00000000000173af         db  0x33 ; '3'
00000000000173b0         db  0x31 ; '1'
00000000000173b1         db  0x00 ; '.'
00000000000173b2         db  0x2e ; '.'
00000000000173b3         db  0x6c ; 'l'
00000000000173b4         db  0x7a ; 'z'
00000000000173b5         db  0x20 ; ' '
00000000000173b6         db  0x30 ; '0'
00000000000173b7         db  0x31 ; '1'
00000000000173b8         db  0x3b ; ';'
00000000000173b9         db  0x33 ; '3'
00000000000173ba         db  0x31 ; '1'
00000000000173bb         db  0x00 ; '.'
00000000000173bc         db  0x2e ; '.'
00000000000173bd         db  0x6c ; 'l'
00000000000173be         db  0x7a ; 'z'
00000000000173bf         db  0x6f ; 'o'
00000000000173c0         db  0x20 ; ' '
00000000000173c1         db  0x30 ; '0'
00000000000173c2         db  0x31 ; '1'
00000000000173c3         db  0x3b ; ';'
00000000000173c4         db  0x33 ; '3'
00000000000173c5         db  0x31 ; '1'
00000000000173c6         db  0x00 ; '.'
00000000000173c7         db  0x2e ; '.'
00000000000173c8         db  0x78 ; 'x'
00000000000173c9         db  0x7a ; 'z'
00000000000173ca         db  0x20 ; ' '
00000000000173cb         db  0x30 ; '0'
00000000000173cc         db  0x31 ; '1'
00000000000173cd         db  0x3b ; ';'
00000000000173ce         db  0x33 ; '3'
00000000000173cf         db  0x31 ; '1'
00000000000173d0         db  0x00 ; '.'
00000000000173d1         db  0x2e ; '.'
00000000000173d2         db  0x7a ; 'z'
00000000000173d3         db  0x73 ; 's'
00000000000173d4         db  0x74 ; 't'
00000000000173d5         db  0x20 ; ' '
00000000000173d6         db  0x30 ; '0'
00000000000173d7         db  0x31 ; '1'
00000000000173d8         db  0x3b ; ';'
00000000000173d9         db  0x33 ; '3'
00000000000173da         db  0x31 ; '1'
00000000000173db         db  0x00 ; '.'
00000000000173dc         db  0x2e ; '.'
00000000000173dd         db  0x74 ; 't'
00000000000173de         db  0x7a ; 'z'
00000000000173df         db  0x73 ; 's'
00000000000173e0         db  0x74 ; 't'
00000000000173e1         db  0x20 ; ' '
00000000000173e2         db  0x30 ; '0'
00000000000173e3         db  0x31 ; '1'
00000000000173e4         db  0x3b ; ';'
00000000000173e5         db  0x33 ; '3'
00000000000173e6         db  0x31 ; '1'
00000000000173e7         db  0x00 ; '.'
00000000000173e8         db  0x2e ; '.'
00000000000173e9         db  0x62 ; 'b'
00000000000173ea         db  0x7a ; 'z'
00000000000173eb         db  0x32 ; '2'
00000000000173ec         db  0x20 ; ' '
00000000000173ed         db  0x30 ; '0'
00000000000173ee         db  0x31 ; '1'
00000000000173ef         db  0x3b ; ';'
00000000000173f0         db  0x33 ; '3'
00000000000173f1         db  0x31 ; '1'
00000000000173f2         db  0x00 ; '.'
00000000000173f3         db  0x2e ; '.'
00000000000173f4         db  0x62 ; 'b'
00000000000173f5         db  0x7a ; 'z'
00000000000173f6         db  0x20 ; ' '
00000000000173f7         db  0x30 ; '0'
00000000000173f8         db  0x31 ; '1'
00000000000173f9         db  0x3b ; ';'
00000000000173fa         db  0x33 ; '3'
00000000000173fb         db  0x31 ; '1'
00000000000173fc         db  0x00 ; '.'
00000000000173fd         db  0x2e ; '.'
00000000000173fe         db  0x74 ; 't'
00000000000173ff         db  0x62 ; 'b'
0000000000017400         db  0x7a ; 'z'
0000000000017401         db  0x20 ; ' '
0000000000017402         db  0x30 ; '0'
0000000000017403         db  0x31 ; '1'
0000000000017404         db  0x3b ; ';'
0000000000017405         db  0x33 ; '3'
0000000000017406         db  0x31 ; '1'
0000000000017407         db  0x00 ; '.'
0000000000017408         db  0x2e ; '.'
0000000000017409         db  0x74 ; 't'
000000000001740a         db  0x62 ; 'b'
000000000001740b         db  0x7a ; 'z'
000000000001740c         db  0x32 ; '2'
000000000001740d         db  0x20 ; ' '
000000000001740e         db  0x30 ; '0'
000000000001740f         db  0x31 ; '1'
0000000000017410         db  0x3b ; ';'
0000000000017411         db  0x33 ; '3'
0000000000017412         db  0x31 ; '1'
0000000000017413         db  0x00 ; '.'
0000000000017414         db  0x2e ; '.'
0000000000017415         db  0x74 ; 't'
0000000000017416         db  0x7a ; 'z'
0000000000017417         db  0x20 ; ' '
0000000000017418         db  0x30 ; '0'
0000000000017419         db  0x31 ; '1'
000000000001741a         db  0x3b ; ';'
000000000001741b         db  0x33 ; '3'
000000000001741c         db  0x31 ; '1'
000000000001741d         db  0x00 ; '.'
000000000001741e         db  0x2e ; '.'
000000000001741f         db  0x64 ; 'd'
0000000000017420         db  0x65 ; 'e'
0000000000017421         db  0x62 ; 'b'
0000000000017422         db  0x20 ; ' '
0000000000017423         db  0x30 ; '0'
0000000000017424         db  0x31 ; '1'
0000000000017425         db  0x3b ; ';'
0000000000017426         db  0x33 ; '3'
0000000000017427         db  0x31 ; '1'
0000000000017428         db  0x00 ; '.'
0000000000017429         db  0x2e ; '.'
000000000001742a         db  0x72 ; 'r'
000000000001742b         db  0x70 ; 'p'
000000000001742c         db  0x6d ; 'm'
000000000001742d         db  0x20 ; ' '
000000000001742e         db  0x30 ; '0'
000000000001742f         db  0x31 ; '1'
0000000000017430         db  0x3b ; ';'
0000000000017431         db  0x33 ; '3'
0000000000017432         db  0x31 ; '1'
0000000000017433         db  0x00 ; '.'
0000000000017434         db  0x2e ; '.'
0000000000017435         db  0x6a ; 'j'
0000000000017436         db  0x61 ; 'a'
0000000000017437         db  0x72 ; 'r'
0000000000017438         db  0x20 ; ' '
0000000000017439         db  0x30 ; '0'
000000000001743a         db  0x31 ; '1'
000000000001743b         db  0x3b ; ';'
000000000001743c         db  0x33 ; '3'
000000000001743d         db  0x31 ; '1'
000000000001743e         db  0x00 ; '.'
000000000001743f         db  0x2e ; '.'
0000000000017440         db  0x77 ; 'w'
0000000000017441         db  0x61 ; 'a'
0000000000017442         db  0x72 ; 'r'
0000000000017443         db  0x20 ; ' '
0000000000017444         db  0x30 ; '0'
0000000000017445         db  0x31 ; '1'
0000000000017446         db  0x3b ; ';'
0000000000017447         db  0x33 ; '3'
0000000000017448         db  0x31 ; '1'
0000000000017449         db  0x00 ; '.'
000000000001744a         db  0x2e ; '.'
000000000001744b         db  0x65 ; 'e'
000000000001744c         db  0x61 ; 'a'
000000000001744d         db  0x72 ; 'r'
000000000001744e         db  0x20 ; ' '
000000000001744f         db  0x30 ; '0'
0000000000017450         db  0x31 ; '1'
0000000000017451         db  0x3b ; ';'
0000000000017452         db  0x33 ; '3'
0000000000017453         db  0x31 ; '1'
0000000000017454         db  0x00 ; '.'
0000000000017455         db  0x2e ; '.'
0000000000017456         db  0x73 ; 's'
0000000000017457         db  0x61 ; 'a'
0000000000017458         db  0x72 ; 'r'
0000000000017459         db  0x20 ; ' '
000000000001745a         db  0x30 ; '0'
000000000001745b         db  0x31 ; '1'
000000000001745c         db  0x3b ; ';'
000000000001745d         db  0x33 ; '3'
000000000001745e         db  0x31 ; '1'
000000000001745f         db  0x00 ; '.'
0000000000017460         db  0x2e ; '.'
0000000000017461         db  0x72 ; 'r'
0000000000017462         db  0x61 ; 'a'
0000000000017463         db  0x72 ; 'r'
0000000000017464         db  0x20 ; ' '
0000000000017465         db  0x30 ; '0'
0000000000017466         db  0x31 ; '1'
0000000000017467         db  0x3b ; ';'
0000000000017468         db  0x33 ; '3'
0000000000017469         db  0x31 ; '1'
000000000001746a         db  0x00 ; '.'
000000000001746b         db  0x2e ; '.'
000000000001746c         db  0x61 ; 'a'
000000000001746d         db  0x6c ; 'l'
000000000001746e         db  0x7a ; 'z'
000000000001746f         db  0x20 ; ' '
0000000000017470         db  0x30 ; '0'
0000000000017471         db  0x31 ; '1'
0000000000017472         db  0x3b ; ';'
0000000000017473         db  0x33 ; '3'
0000000000017474         db  0x31 ; '1'
0000000000017475         db  0x00 ; '.'
0000000000017476         db  0x2e ; '.'
0000000000017477         db  0x61 ; 'a'
0000000000017478         db  0x63 ; 'c'
0000000000017479         db  0x65 ; 'e'
000000000001747a         db  0x20 ; ' '
000000000001747b         db  0x30 ; '0'
000000000001747c         db  0x31 ; '1'
000000000001747d         db  0x3b ; ';'
000000000001747e         db  0x33 ; '3'
000000000001747f         db  0x31 ; '1'
0000000000017480         db  0x00 ; '.'
0000000000017481         db  0x2e ; '.'
0000000000017482         db  0x7a ; 'z'
0000000000017483         db  0x6f ; 'o'
0000000000017484         db  0x6f ; 'o'
0000000000017485         db  0x20 ; ' '
0000000000017486         db  0x30 ; '0'
0000000000017487         db  0x31 ; '1'
0000000000017488         db  0x3b ; ';'
0000000000017489         db  0x33 ; '3'
000000000001748a         db  0x31 ; '1'
000000000001748b         db  0x00 ; '.'
000000000001748c         db  0x2e ; '.'
000000000001748d         db  0x63 ; 'c'
000000000001748e         db  0x70 ; 'p'
000000000001748f         db  0x69 ; 'i'
0000000000017490         db  0x6f ; 'o'
0000000000017491         db  0x20 ; ' '
0000000000017492         db  0x30 ; '0'
0000000000017493         db  0x31 ; '1'
0000000000017494         db  0x3b ; ';'
0000000000017495         db  0x33 ; '3'
0000000000017496         db  0x31 ; '1'
0000000000017497         db  0x00 ; '.'
0000000000017498         db  0x2e ; '.'
0000000000017499         db  0x37 ; '7'
000000000001749a         db  0x7a ; 'z'
000000000001749b         db  0x20 ; ' '
000000000001749c         db  0x30 ; '0'
000000000001749d         db  0x31 ; '1'
000000000001749e         db  0x3b ; ';'
000000000001749f         db  0x33 ; '3'
00000000000174a0         db  0x31 ; '1'
00000000000174a1         db  0x00 ; '.'
00000000000174a2         db  0x2e ; '.'
00000000000174a3         db  0x72 ; 'r'
00000000000174a4         db  0x7a ; 'z'
00000000000174a5         db  0x20 ; ' '
00000000000174a6         db  0x30 ; '0'
00000000000174a7         db  0x31 ; '1'
00000000000174a8         db  0x3b ; ';'
00000000000174a9         db  0x33 ; '3'
00000000000174aa         db  0x31 ; '1'
00000000000174ab         db  0x00 ; '.'
00000000000174ac         db  0x2e ; '.'
00000000000174ad         db  0x63 ; 'c'
00000000000174ae         db  0x61 ; 'a'
00000000000174af         db  0x62 ; 'b'
00000000000174b0         db  0x20 ; ' '
00000000000174b1         db  0x30 ; '0'
00000000000174b2         db  0x31 ; '1'
00000000000174b3         db  0x3b ; ';'
00000000000174b4         db  0x33 ; '3'
00000000000174b5         db  0x31 ; '1'
00000000000174b6         db  0x00 ; '.'
00000000000174b7         db  0x2e ; '.'
00000000000174b8         db  0x77 ; 'w'
00000000000174b9         db  0x69 ; 'i'
00000000000174ba         db  0x6d ; 'm'
00000000000174bb         db  0x20 ; ' '
00000000000174bc         db  0x30 ; '0'
00000000000174bd         db  0x31 ; '1'
00000000000174be         db  0x3b ; ';'
00000000000174bf         db  0x33 ; '3'
00000000000174c0         db  0x31 ; '1'
00000000000174c1         db  0x00 ; '.'
00000000000174c2         db  0x2e ; '.'
00000000000174c3         db  0x73 ; 's'
00000000000174c4         db  0x77 ; 'w'
00000000000174c5         db  0x6d ; 'm'
00000000000174c6         db  0x20 ; ' '
00000000000174c7         db  0x30 ; '0'
00000000000174c8         db  0x31 ; '1'
00000000000174c9         db  0x3b ; ';'
00000000000174ca         db  0x33 ; '3'
00000000000174cb         db  0x31 ; '1'
00000000000174cc         db  0x00 ; '.'
00000000000174cd         db  0x2e ; '.'
00000000000174ce         db  0x64 ; 'd'
00000000000174cf         db  0x77 ; 'w'
00000000000174d0         db  0x6d ; 'm'
00000000000174d1         db  0x20 ; ' '
00000000000174d2         db  0x30 ; '0'
00000000000174d3         db  0x31 ; '1'
00000000000174d4         db  0x3b ; ';'
00000000000174d5         db  0x33 ; '3'
00000000000174d6         db  0x31 ; '1'
00000000000174d7         db  0x00 ; '.'
00000000000174d8         db  0x2e ; '.'
00000000000174d9         db  0x65 ; 'e'
00000000000174da         db  0x73 ; 's'
00000000000174db         db  0x64 ; 'd'
00000000000174dc         db  0x20 ; ' '
00000000000174dd         db  0x30 ; '0'
00000000000174de         db  0x31 ; '1'
00000000000174df         db  0x3b ; ';'
00000000000174e0         db  0x33 ; '3'
00000000000174e1         db  0x31 ; '1'
00000000000174e2         db  0x00 ; '.'
00000000000174e3         db  0x23 ; '#'
00000000000174e4         db  0x20 ; ' '
00000000000174e5         db  0x69 ; 'i'
00000000000174e6         db  0x6d ; 'm'
00000000000174e7         db  0x61 ; 'a'
00000000000174e8         db  0x67 ; 'g'
00000000000174e9         db  0x65 ; 'e'
00000000000174ea         db  0x20 ; ' '
00000000000174eb         db  0x66 ; 'f'
00000000000174ec         db  0x6f ; 'o'
00000000000174ed         db  0x72 ; 'r'
00000000000174ee         db  0x6d ; 'm'
00000000000174ef         db  0x61 ; 'a'
00000000000174f0         db  0x74 ; 't'
00000000000174f1         db  0x73 ; 's'
00000000000174f2         db  0x00 ; '.'
00000000000174f3         db  0x2e ; '.'
00000000000174f4         db  0x6a ; 'j'
00000000000174f5         db  0x70 ; 'p'
00000000000174f6         db  0x67 ; 'g'
00000000000174f7         db  0x20 ; ' '
00000000000174f8         db  0x30 ; '0'
00000000000174f9         db  0x31 ; '1'
00000000000174fa         db  0x3b ; ';'
00000000000174fb         db  0x33 ; '3'
00000000000174fc         db  0x35 ; '5'
00000000000174fd         db  0x00 ; '.'
00000000000174fe         db  0x2e ; '.'
00000000000174ff         db  0x6a ; 'j'
0000000000017500         db  0x70 ; 'p'
0000000000017501         db  0x65 ; 'e'
0000000000017502         db  0x67 ; 'g'
0000000000017503         db  0x20 ; ' '
0000000000017504         db  0x30 ; '0'
0000000000017505         db  0x31 ; '1'
0000000000017506         db  0x3b ; ';'
0000000000017507         db  0x33 ; '3'
0000000000017508         db  0x35 ; '5'
0000000000017509         db  0x00 ; '.'
000000000001750a         db  0x2e ; '.'
000000000001750b         db  0x6d ; 'm'
000000000001750c         db  0x6a ; 'j'
000000000001750d         db  0x70 ; 'p'
000000000001750e         db  0x67 ; 'g'
000000000001750f         db  0x20 ; ' '
0000000000017510         db  0x30 ; '0'
0000000000017511         db  0x31 ; '1'
0000000000017512         db  0x3b ; ';'
0000000000017513         db  0x33 ; '3'
0000000000017514         db  0x35 ; '5'
0000000000017515         db  0x00 ; '.'
0000000000017516         db  0x2e ; '.'
0000000000017517         db  0x6d ; 'm'
0000000000017518         db  0x6a ; 'j'
0000000000017519         db  0x70 ; 'p'
000000000001751a         db  0x65 ; 'e'
000000000001751b         db  0x67 ; 'g'
000000000001751c         db  0x20 ; ' '
000000000001751d         db  0x30 ; '0'
000000000001751e         db  0x31 ; '1'
000000000001751f         db  0x3b ; ';'
0000000000017520         db  0x33 ; '3'
0000000000017521         db  0x35 ; '5'
0000000000017522         db  0x00 ; '.'
0000000000017523         db  0x2e ; '.'
0000000000017524         db  0x67 ; 'g'
0000000000017525         db  0x69 ; 'i'
0000000000017526         db  0x66 ; 'f'
0000000000017527         db  0x20 ; ' '
0000000000017528         db  0x30 ; '0'
0000000000017529         db  0x31 ; '1'
000000000001752a         db  0x3b ; ';'
000000000001752b         db  0x33 ; '3'
000000000001752c         db  0x35 ; '5'
000000000001752d         db  0x00 ; '.'
000000000001752e         db  0x2e ; '.'
000000000001752f         db  0x62 ; 'b'
0000000000017530         db  0x6d ; 'm'
0000000000017531         db  0x70 ; 'p'
0000000000017532         db  0x20 ; ' '
0000000000017533         db  0x30 ; '0'
0000000000017534         db  0x31 ; '1'
0000000000017535         db  0x3b ; ';'
0000000000017536         db  0x33 ; '3'
0000000000017537         db  0x35 ; '5'
0000000000017538         db  0x00 ; '.'
0000000000017539         db  0x2e ; '.'
000000000001753a         db  0x70 ; 'p'
000000000001753b         db  0x62 ; 'b'
000000000001753c         db  0x6d ; 'm'
000000000001753d         db  0x20 ; ' '
000000000001753e         db  0x30 ; '0'
000000000001753f         db  0x31 ; '1'
0000000000017540         db  0x3b ; ';'
0000000000017541         db  0x33 ; '3'
0000000000017542         db  0x35 ; '5'
0000000000017543         db  0x00 ; '.'
0000000000017544         db  0x2e ; '.'
0000000000017545         db  0x70 ; 'p'
0000000000017546         db  0x67 ; 'g'
0000000000017547         db  0x6d ; 'm'
0000000000017548         db  0x20 ; ' '
0000000000017549         db  0x30 ; '0'
000000000001754a         db  0x31 ; '1'
000000000001754b         db  0x3b ; ';'
000000000001754c         db  0x33 ; '3'
000000000001754d         db  0x35 ; '5'
000000000001754e         db  0x00 ; '.'
000000000001754f         db  0x2e ; '.'
0000000000017550         db  0x70 ; 'p'
0000000000017551         db  0x70 ; 'p'
0000000000017552         db  0x6d ; 'm'
0000000000017553         db  0x20 ; ' '
0000000000017554         db  0x30 ; '0'
0000000000017555         db  0x31 ; '1'
0000000000017556         db  0x3b ; ';'
0000000000017557         db  0x33 ; '3'
0000000000017558         db  0x35 ; '5'
0000000000017559         db  0x00 ; '.'
000000000001755a         db  0x2e ; '.'
000000000001755b         db  0x74 ; 't'
000000000001755c         db  0x67 ; 'g'
000000000001755d         db  0x61 ; 'a'
000000000001755e         db  0x20 ; ' '
000000000001755f         db  0x30 ; '0'
0000000000017560         db  0x31 ; '1'
0000000000017561         db  0x3b ; ';'
0000000000017562         db  0x33 ; '3'
0000000000017563         db  0x35 ; '5'
0000000000017564         db  0x00 ; '.'
0000000000017565         db  0x2e ; '.'
0000000000017566         db  0x78 ; 'x'
0000000000017567         db  0x62 ; 'b'
0000000000017568         db  0x6d ; 'm'
0000000000017569         db  0x20 ; ' '
000000000001756a         db  0x30 ; '0'
000000000001756b         db  0x31 ; '1'
000000000001756c         db  0x3b ; ';'
000000000001756d         db  0x33 ; '3'
000000000001756e         db  0x35 ; '5'
000000000001756f         db  0x00 ; '.'
0000000000017570         db  0x2e ; '.'
0000000000017571         db  0x78 ; 'x'
0000000000017572         db  0x70 ; 'p'
0000000000017573         db  0x6d ; 'm'
0000000000017574         db  0x20 ; ' '
0000000000017575         db  0x30 ; '0'
0000000000017576         db  0x31 ; '1'
0000000000017577         db  0x3b ; ';'
0000000000017578         db  0x33 ; '3'
0000000000017579         db  0x35 ; '5'
000000000001757a         db  0x00 ; '.'
000000000001757b         db  0x2e ; '.'
000000000001757c         db  0x74 ; 't'
000000000001757d         db  0x69 ; 'i'
000000000001757e         db  0x66 ; 'f'
000000000001757f         db  0x20 ; ' '
0000000000017580         db  0x30 ; '0'
0000000000017581         db  0x31 ; '1'
0000000000017582         db  0x3b ; ';'
0000000000017583         db  0x33 ; '3'
0000000000017584         db  0x35 ; '5'
0000000000017585         db  0x00 ; '.'
0000000000017586         db  0x2e ; '.'
0000000000017587         db  0x74 ; 't'
0000000000017588         db  0x69 ; 'i'
0000000000017589         db  0x66 ; 'f'
000000000001758a         db  0x66 ; 'f'
000000000001758b         db  0x20 ; ' '
000000000001758c         db  0x30 ; '0'
000000000001758d         db  0x31 ; '1'
000000000001758e         db  0x3b ; ';'
000000000001758f         db  0x33 ; '3'
0000000000017590         db  0x35 ; '5'
0000000000017591         db  0x00 ; '.'
0000000000017592         db  0x2e ; '.'
0000000000017593         db  0x70 ; 'p'
0000000000017594         db  0x6e ; 'n'
0000000000017595         db  0x67 ; 'g'
0000000000017596         db  0x20 ; ' '
0000000000017597         db  0x30 ; '0'
0000000000017598         db  0x31 ; '1'
0000000000017599         db  0x3b ; ';'
000000000001759a         db  0x33 ; '3'
000000000001759b         db  0x35 ; '5'
000000000001759c         db  0x00 ; '.'
000000000001759d         db  0x2e ; '.'
000000000001759e         db  0x73 ; 's'
000000000001759f         db  0x76 ; 'v'
00000000000175a0         db  0x67 ; 'g'
00000000000175a1         db  0x20 ; ' '
00000000000175a2         db  0x30 ; '0'
00000000000175a3         db  0x31 ; '1'
00000000000175a4         db  0x3b ; ';'
00000000000175a5         db  0x33 ; '3'
00000000000175a6         db  0x35 ; '5'
00000000000175a7         db  0x00 ; '.'
00000000000175a8         db  0x2e ; '.'
00000000000175a9         db  0x73 ; 's'
00000000000175aa         db  0x76 ; 'v'
00000000000175ab         db  0x67 ; 'g'
00000000000175ac         db  0x7a ; 'z'
00000000000175ad         db  0x20 ; ' '
00000000000175ae         db  0x30 ; '0'
00000000000175af         db  0x31 ; '1'
00000000000175b0         db  0x3b ; ';'
00000000000175b1         db  0x33 ; '3'
00000000000175b2         db  0x35 ; '5'
00000000000175b3         db  0x00 ; '.'
00000000000175b4         db  0x2e ; '.'
00000000000175b5         db  0x6d ; 'm'
00000000000175b6         db  0x6e ; 'n'
00000000000175b7         db  0x67 ; 'g'
00000000000175b8         db  0x20 ; ' '
00000000000175b9         db  0x30 ; '0'
00000000000175ba         db  0x31 ; '1'
00000000000175bb         db  0x3b ; ';'
00000000000175bc         db  0x33 ; '3'
00000000000175bd         db  0x35 ; '5'
00000000000175be         db  0x00 ; '.'
00000000000175bf         db  0x2e ; '.'
00000000000175c0         db  0x70 ; 'p'
00000000000175c1         db  0x63 ; 'c'
00000000000175c2         db  0x78 ; 'x'
00000000000175c3         db  0x20 ; ' '
00000000000175c4         db  0x30 ; '0'
00000000000175c5         db  0x31 ; '1'
00000000000175c6         db  0x3b ; ';'
00000000000175c7         db  0x33 ; '3'
00000000000175c8         db  0x35 ; '5'
00000000000175c9         db  0x00 ; '.'
00000000000175ca         db  0x2e ; '.'
00000000000175cb         db  0x6d ; 'm'
00000000000175cc         db  0x6f ; 'o'
00000000000175cd         db  0x76 ; 'v'
00000000000175ce         db  0x20 ; ' '
00000000000175cf         db  0x30 ; '0'
00000000000175d0         db  0x31 ; '1'
00000000000175d1         db  0x3b ; ';'
00000000000175d2         db  0x33 ; '3'
00000000000175d3         db  0x35 ; '5'
00000000000175d4         db  0x00 ; '.'
00000000000175d5         db  0x2e ; '.'
00000000000175d6         db  0x6d ; 'm'
00000000000175d7         db  0x70 ; 'p'
00000000000175d8         db  0x67 ; 'g'
00000000000175d9         db  0x20 ; ' '
00000000000175da         db  0x30 ; '0'
00000000000175db         db  0x31 ; '1'
00000000000175dc         db  0x3b ; ';'
00000000000175dd         db  0x33 ; '3'
00000000000175de         db  0x35 ; '5'
00000000000175df         db  0x00 ; '.'
00000000000175e0         db  0x2e ; '.'
00000000000175e1         db  0x6d ; 'm'
00000000000175e2         db  0x70 ; 'p'
00000000000175e3         db  0x65 ; 'e'
00000000000175e4         db  0x67 ; 'g'
00000000000175e5         db  0x20 ; ' '
00000000000175e6         db  0x30 ; '0'
00000000000175e7         db  0x31 ; '1'
00000000000175e8         db  0x3b ; ';'
00000000000175e9         db  0x33 ; '3'
00000000000175ea         db  0x35 ; '5'
00000000000175eb         db  0x00 ; '.'
00000000000175ec         db  0x2e ; '.'
00000000000175ed         db  0x6d ; 'm'
00000000000175ee         db  0x32 ; '2'
00000000000175ef         db  0x76 ; 'v'
00000000000175f0         db  0x20 ; ' '
00000000000175f1         db  0x30 ; '0'
00000000000175f2         db  0x31 ; '1'
00000000000175f3         db  0x3b ; ';'
00000000000175f4         db  0x33 ; '3'
00000000000175f5         db  0x35 ; '5'
00000000000175f6         db  0x00 ; '.'
00000000000175f7         db  0x2e ; '.'
00000000000175f8         db  0x6d ; 'm'
00000000000175f9         db  0x6b ; 'k'
00000000000175fa         db  0x76 ; 'v'
00000000000175fb         db  0x20 ; ' '
00000000000175fc         db  0x30 ; '0'
00000000000175fd         db  0x31 ; '1'
00000000000175fe         db  0x3b ; ';'
00000000000175ff         db  0x33 ; '3'
0000000000017600         db  0x35 ; '5'
0000000000017601         db  0x00 ; '.'
0000000000017602         db  0x2e ; '.'
0000000000017603         db  0x77 ; 'w'
0000000000017604         db  0x65 ; 'e'
0000000000017605         db  0x62 ; 'b'
0000000000017606         db  0x6d ; 'm'
0000000000017607         db  0x20 ; ' '
0000000000017608         db  0x30 ; '0'
0000000000017609         db  0x31 ; '1'
000000000001760a         db  0x3b ; ';'
000000000001760b         db  0x33 ; '3'
000000000001760c         db  0x35 ; '5'
000000000001760d         db  0x00 ; '.'
000000000001760e         db  0x2e ; '.'
000000000001760f         db  0x6f ; 'o'
0000000000017610         db  0x67 ; 'g'
0000000000017611         db  0x6d ; 'm'
0000000000017612         db  0x20 ; ' '
0000000000017613         db  0x30 ; '0'
0000000000017614         db  0x31 ; '1'
0000000000017615         db  0x3b ; ';'
0000000000017616         db  0x33 ; '3'
0000000000017617         db  0x35 ; '5'
0000000000017618         db  0x00 ; '.'
0000000000017619         db  0x2e ; '.'
000000000001761a         db  0x6d ; 'm'
000000000001761b         db  0x70 ; 'p'
000000000001761c         db  0x34 ; '4'
000000000001761d         db  0x20 ; ' '
000000000001761e         db  0x30 ; '0'
000000000001761f         db  0x31 ; '1'
0000000000017620         db  0x3b ; ';'
0000000000017621         db  0x33 ; '3'
0000000000017622         db  0x35 ; '5'
0000000000017623         db  0x00 ; '.'
0000000000017624         db  0x2e ; '.'
0000000000017625         db  0x6d ; 'm'
0000000000017626         db  0x34 ; '4'
0000000000017627         db  0x76 ; 'v'
0000000000017628         db  0x20 ; ' '
0000000000017629         db  0x30 ; '0'
000000000001762a         db  0x31 ; '1'
000000000001762b         db  0x3b ; ';'
000000000001762c         db  0x33 ; '3'
000000000001762d         db  0x35 ; '5'
000000000001762e         db  0x00 ; '.'
000000000001762f         db  0x2e ; '.'
0000000000017630         db  0x6d ; 'm'
0000000000017631         db  0x70 ; 'p'
0000000000017632         db  0x34 ; '4'
0000000000017633         db  0x76 ; 'v'
0000000000017634         db  0x20 ; ' '
0000000000017635         db  0x30 ; '0'
0000000000017636         db  0x31 ; '1'
0000000000017637         db  0x3b ; ';'
0000000000017638         db  0x33 ; '3'
0000000000017639         db  0x35 ; '5'
000000000001763a         db  0x00 ; '.'
000000000001763b         db  0x2e ; '.'
000000000001763c         db  0x76 ; 'v'
000000000001763d         db  0x6f ; 'o'
000000000001763e         db  0x62 ; 'b'
000000000001763f         db  0x20 ; ' '
0000000000017640         db  0x30 ; '0'
0000000000017641         db  0x31 ; '1'
0000000000017642         db  0x3b ; ';'
0000000000017643         db  0x33 ; '3'
0000000000017644         db  0x35 ; '5'
0000000000017645         db  0x00 ; '.'
0000000000017646         db  0x2e ; '.'
0000000000017647         db  0x71 ; 'q'
0000000000017648         db  0x74 ; 't'
0000000000017649         db  0x20 ; ' '
000000000001764a         db  0x30 ; '0'
000000000001764b         db  0x31 ; '1'
000000000001764c         db  0x3b ; ';'
000000000001764d         db  0x33 ; '3'
000000000001764e         db  0x35 ; '5'
000000000001764f         db  0x00 ; '.'
0000000000017650         db  0x2e ; '.'
0000000000017651         db  0x6e ; 'n'
0000000000017652         db  0x75 ; 'u'
0000000000017653         db  0x76 ; 'v'
0000000000017654         db  0x20 ; ' '
0000000000017655         db  0x30 ; '0'
0000000000017656         db  0x31 ; '1'
0000000000017657         db  0x3b ; ';'
0000000000017658         db  0x33 ; '3'
0000000000017659         db  0x35 ; '5'
000000000001765a         db  0x00 ; '.'
000000000001765b         db  0x2e ; '.'
000000000001765c         db  0x77 ; 'w'
000000000001765d         db  0x6d ; 'm'
000000000001765e         db  0x76 ; 'v'
000000000001765f         db  0x20 ; ' '
0000000000017660         db  0x30 ; '0'
0000000000017661         db  0x31 ; '1'
0000000000017662         db  0x3b ; ';'
0000000000017663         db  0x33 ; '3'
0000000000017664         db  0x35 ; '5'
0000000000017665         db  0x00 ; '.'
0000000000017666         db  0x2e ; '.'
0000000000017667         db  0x61 ; 'a'
0000000000017668         db  0x73 ; 's'
0000000000017669         db  0x66 ; 'f'
000000000001766a         db  0x20 ; ' '
000000000001766b         db  0x30 ; '0'
000000000001766c         db  0x31 ; '1'
000000000001766d         db  0x3b ; ';'
000000000001766e         db  0x33 ; '3'
000000000001766f         db  0x35 ; '5'
0000000000017670         db  0x00 ; '.'
0000000000017671         db  0x2e ; '.'
0000000000017672         db  0x72 ; 'r'
0000000000017673         db  0x6d ; 'm'
0000000000017674         db  0x20 ; ' '
0000000000017675         db  0x30 ; '0'
0000000000017676         db  0x31 ; '1'
0000000000017677         db  0x3b ; ';'
0000000000017678         db  0x33 ; '3'
0000000000017679         db  0x35 ; '5'
000000000001767a         db  0x00 ; '.'
000000000001767b         db  0x2e ; '.'
000000000001767c         db  0x72 ; 'r'
000000000001767d         db  0x6d ; 'm'
000000000001767e         db  0x76 ; 'v'
000000000001767f         db  0x62 ; 'b'
0000000000017680         db  0x20 ; ' '
0000000000017681         db  0x30 ; '0'
0000000000017682         db  0x31 ; '1'
0000000000017683         db  0x3b ; ';'
0000000000017684         db  0x33 ; '3'
0000000000017685         db  0x35 ; '5'
0000000000017686         db  0x00 ; '.'
0000000000017687         db  0x2e ; '.'
0000000000017688         db  0x66 ; 'f'
0000000000017689         db  0x6c ; 'l'
000000000001768a         db  0x63 ; 'c'
000000000001768b         db  0x20 ; ' '
000000000001768c         db  0x30 ; '0'
000000000001768d         db  0x31 ; '1'
000000000001768e         db  0x3b ; ';'
000000000001768f         db  0x33 ; '3'
0000000000017690         db  0x35 ; '5'
0000000000017691         db  0x00 ; '.'
0000000000017692         db  0x2e ; '.'
0000000000017693         db  0x61 ; 'a'
0000000000017694         db  0x76 ; 'v'
0000000000017695         db  0x69 ; 'i'
0000000000017696         db  0x20 ; ' '
0000000000017697         db  0x30 ; '0'
0000000000017698         db  0x31 ; '1'
0000000000017699         db  0x3b ; ';'
000000000001769a         db  0x33 ; '3'
000000000001769b         db  0x35 ; '5'
000000000001769c         db  0x00 ; '.'
000000000001769d         db  0x2e ; '.'
000000000001769e         db  0x66 ; 'f'
000000000001769f         db  0x6c ; 'l'
00000000000176a0         db  0x69 ; 'i'
00000000000176a1         db  0x20 ; ' '
00000000000176a2         db  0x30 ; '0'
00000000000176a3         db  0x31 ; '1'
00000000000176a4         db  0x3b ; ';'
00000000000176a5         db  0x33 ; '3'
00000000000176a6         db  0x35 ; '5'
00000000000176a7         db  0x00 ; '.'
00000000000176a8         db  0x2e ; '.'
00000000000176a9         db  0x66 ; 'f'
00000000000176aa         db  0x6c ; 'l'
00000000000176ab         db  0x76 ; 'v'
00000000000176ac         db  0x20 ; ' '
00000000000176ad         db  0x30 ; '0'
00000000000176ae         db  0x31 ; '1'
00000000000176af         db  0x3b ; ';'
00000000000176b0         db  0x33 ; '3'
00000000000176b1         db  0x35 ; '5'
00000000000176b2         db  0x00 ; '.'
00000000000176b3         db  0x2e ; '.'
00000000000176b4         db  0x67 ; 'g'
00000000000176b5         db  0x6c ; 'l'
00000000000176b6         db  0x20 ; ' '
00000000000176b7         db  0x30 ; '0'
00000000000176b8         db  0x31 ; '1'
00000000000176b9         db  0x3b ; ';'
00000000000176ba         db  0x33 ; '3'
00000000000176bb         db  0x35 ; '5'
00000000000176bc         db  0x00 ; '.'
00000000000176bd         db  0x2e ; '.'
00000000000176be         db  0x64 ; 'd'
00000000000176bf         db  0x6c ; 'l'
00000000000176c0         db  0x20 ; ' '
00000000000176c1         db  0x30 ; '0'
00000000000176c2         db  0x31 ; '1'
00000000000176c3         db  0x3b ; ';'
00000000000176c4         db  0x33 ; '3'
00000000000176c5         db  0x35 ; '5'
00000000000176c6         db  0x00 ; '.'
00000000000176c7         db  0x2e ; '.'
00000000000176c8         db  0x78 ; 'x'
00000000000176c9         db  0x63 ; 'c'
00000000000176ca         db  0x66 ; 'f'
00000000000176cb         db  0x20 ; ' '
00000000000176cc         db  0x30 ; '0'
00000000000176cd         db  0x31 ; '1'
00000000000176ce         db  0x3b ; ';'
00000000000176cf         db  0x33 ; '3'
00000000000176d0         db  0x35 ; '5'
00000000000176d1         db  0x00 ; '.'
00000000000176d2         db  0x2e ; '.'
00000000000176d3         db  0x78 ; 'x'
00000000000176d4         db  0x77 ; 'w'
00000000000176d5         db  0x64 ; 'd'
00000000000176d6         db  0x20 ; ' '
00000000000176d7         db  0x30 ; '0'
00000000000176d8         db  0x31 ; '1'
00000000000176d9         db  0x3b ; ';'
00000000000176da         db  0x33 ; '3'
00000000000176db         db  0x35 ; '5'
00000000000176dc         db  0x00 ; '.'
00000000000176dd         db  0x2e ; '.'
00000000000176de         db  0x79 ; 'y'
00000000000176df         db  0x75 ; 'u'
00000000000176e0         db  0x76 ; 'v'
00000000000176e1         db  0x20 ; ' '
00000000000176e2         db  0x30 ; '0'
00000000000176e3         db  0x31 ; '1'
00000000000176e4         db  0x3b ; ';'
00000000000176e5         db  0x33 ; '3'
00000000000176e6         db  0x35 ; '5'
00000000000176e7         db  0x00 ; '.'
00000000000176e8         db  0x2e ; '.'
00000000000176e9         db  0x63 ; 'c'
00000000000176ea         db  0x67 ; 'g'
00000000000176eb         db  0x6d ; 'm'
00000000000176ec         db  0x20 ; ' '
00000000000176ed         db  0x30 ; '0'
00000000000176ee         db  0x31 ; '1'
00000000000176ef         db  0x3b ; ';'
00000000000176f0         db  0x33 ; '3'
00000000000176f1         db  0x35 ; '5'
00000000000176f2         db  0x00 ; '.'
00000000000176f3         db  0x2e ; '.'
00000000000176f4         db  0x65 ; 'e'
00000000000176f5         db  0x6d ; 'm'
00000000000176f6         db  0x66 ; 'f'
00000000000176f7         db  0x20 ; ' '
00000000000176f8         db  0x30 ; '0'
00000000000176f9         db  0x31 ; '1'
00000000000176fa         db  0x3b ; ';'
00000000000176fb         db  0x33 ; '3'
00000000000176fc         db  0x35 ; '5'
00000000000176fd         db  0x00 ; '.'
00000000000176fe         db  0x23 ; '#'
00000000000176ff         db  0x20 ; ' '
0000000000017700         db  0x68 ; 'h'
0000000000017701         db  0x74 ; 't'
0000000000017702         db  0x74 ; 't'
0000000000017703         db  0x70 ; 'p'
0000000000017704         db  0x73 ; 's'
0000000000017705         db  0x3a ; ':'
0000000000017706         db  0x2f ; '/'
0000000000017707         db  0x2f ; '/'
0000000000017708         db  0x77 ; 'w'
0000000000017709         db  0x69 ; 'i'
000000000001770a         db  0x6b ; 'k'
000000000001770b         db  0x69 ; 'i'
000000000001770c         db  0x2e ; '.'
000000000001770d         db  0x78 ; 'x'
000000000001770e         db  0x69 ; 'i'
000000000001770f         db  0x70 ; 'p'
0000000000017710         db  0x68 ; 'h'
0000000000017711         db  0x2e ; '.'
0000000000017712         db  0x6f ; 'o'
0000000000017713         db  0x72 ; 'r'
0000000000017714         db  0x67 ; 'g'
0000000000017715         db  0x2f ; '/'
0000000000017716         db  0x4d ; 'M'
0000000000017717         db  0x49 ; 'I'
0000000000017718         db  0x4d ; 'M'
0000000000017719         db  0x45 ; 'E'
000000000001771a         db  0x5f ; '_'
000000000001771b         db  0x54 ; 'T'
000000000001771c         db  0x79 ; 'y'
000000000001771d         db  0x70 ; 'p'
000000000001771e         db  0x65 ; 'e'
000000000001771f         db  0x73 ; 's'
0000000000017720         db  0x5f ; '_'
0000000000017721         db  0x61 ; 'a'
0000000000017722         db  0x6e ; 'n'
0000000000017723         db  0x64 ; 'd'
0000000000017724         db  0x5f ; '_'
0000000000017725         db  0x46 ; 'F'
0000000000017726         db  0x69 ; 'i'
0000000000017727         db  0x6c ; 'l'
0000000000017728         db  0x65 ; 'e'
0000000000017729         db  0x5f ; '_'
000000000001772a         db  0x45 ; 'E'
000000000001772b         db  0x78 ; 'x'
000000000001772c         db  0x74 ; 't'
000000000001772d         db  0x65 ; 'e'
000000000001772e         db  0x6e ; 'n'
000000000001772f         db  0x73 ; 's'
0000000000017730         db  0x69 ; 'i'
0000000000017731         db  0x6f ; 'o'
0000000000017732         db  0x6e ; 'n'
0000000000017733         db  0x73 ; 's'
0000000000017734         db  0x00 ; '.'
0000000000017735         db  0x2e ; '.'
0000000000017736         db  0x6f ; 'o'
0000000000017737         db  0x67 ; 'g'
0000000000017738         db  0x76 ; 'v'
0000000000017739         db  0x20 ; ' '
000000000001773a         db  0x30 ; '0'
000000000001773b         db  0x31 ; '1'
000000000001773c         db  0x3b ; ';'
000000000001773d         db  0x33 ; '3'
000000000001773e         db  0x35 ; '5'
000000000001773f         db  0x00 ; '.'
0000000000017740         db  0x2e ; '.'
0000000000017741         db  0x6f ; 'o'
0000000000017742         db  0x67 ; 'g'
0000000000017743         db  0x78 ; 'x'
0000000000017744         db  0x20 ; ' '
0000000000017745         db  0x30 ; '0'
0000000000017746         db  0x31 ; '1'
0000000000017747         db  0x3b ; ';'
0000000000017748         db  0x33 ; '3'
0000000000017749         db  0x35 ; '5'
000000000001774a         db  0x00 ; '.'
000000000001774b         db  0x23 ; '#'
000000000001774c         db  0x20 ; ' '
000000000001774d         db  0x61 ; 'a'
000000000001774e         db  0x75 ; 'u'
000000000001774f         db  0x64 ; 'd'
0000000000017750         db  0x69 ; 'i'
0000000000017751         db  0x6f ; 'o'
0000000000017752         db  0x20 ; ' '
0000000000017753         db  0x66 ; 'f'
0000000000017754         db  0x6f ; 'o'
0000000000017755         db  0x72 ; 'r'
0000000000017756         db  0x6d ; 'm'
0000000000017757         db  0x61 ; 'a'
0000000000017758         db  0x74 ; 't'
0000000000017759         db  0x73 ; 's'
000000000001775a         db  0x00 ; '.'
000000000001775b         db  0x2e ; '.'
000000000001775c         db  0x61 ; 'a'
000000000001775d         db  0x61 ; 'a'
000000000001775e         db  0x63 ; 'c'
000000000001775f         db  0x20 ; ' '
0000000000017760         db  0x30 ; '0'
0000000000017761         db  0x30 ; '0'
0000000000017762         db  0x3b ; ';'
0000000000017763         db  0x33 ; '3'
0000000000017764         db  0x36 ; '6'
0000000000017765         db  0x00 ; '.'
0000000000017766         db  0x2e ; '.'
0000000000017767         db  0x61 ; 'a'
0000000000017768         db  0x75 ; 'u'
0000000000017769         db  0x20 ; ' '
000000000001776a         db  0x30 ; '0'
000000000001776b         db  0x30 ; '0'
000000000001776c         db  0x3b ; ';'
000000000001776d         db  0x33 ; '3'
000000000001776e         db  0x36 ; '6'
000000000001776f         db  0x00 ; '.'
0000000000017770         db  0x2e ; '.'
0000000000017771         db  0x66 ; 'f'
0000000000017772         db  0x6c ; 'l'
0000000000017773         db  0x61 ; 'a'
0000000000017774         db  0x63 ; 'c'
0000000000017775         db  0x20 ; ' '
0000000000017776         db  0x30 ; '0'
0000000000017777         db  0x30 ; '0'
0000000000017778         db  0x3b ; ';'
0000000000017779         db  0x33 ; '3'
000000000001777a         db  0x36 ; '6'
000000000001777b         db  0x00 ; '.'
000000000001777c         db  0x2e ; '.'
000000000001777d         db  0x6d ; 'm'
000000000001777e         db  0x34 ; '4'
000000000001777f         db  0x61 ; 'a'
0000000000017780         db  0x20 ; ' '
0000000000017781         db  0x30 ; '0'
0000000000017782         db  0x30 ; '0'
0000000000017783         db  0x3b ; ';'
0000000000017784         db  0x33 ; '3'
0000000000017785         db  0x36 ; '6'
0000000000017786         db  0x00 ; '.'
0000000000017787         db  0x2e ; '.'
0000000000017788         db  0x6d ; 'm'
0000000000017789         db  0x69 ; 'i'
000000000001778a         db  0x64 ; 'd'
000000000001778b         db  0x20 ; ' '
000000000001778c         db  0x30 ; '0'
000000000001778d         db  0x30 ; '0'
000000000001778e         db  0x3b ; ';'
000000000001778f         db  0x33 ; '3'
0000000000017790         db  0x36 ; '6'
0000000000017791         db  0x00 ; '.'
0000000000017792         db  0x2e ; '.'
0000000000017793         db  0x6d ; 'm'
0000000000017794         db  0x69 ; 'i'
0000000000017795         db  0x64 ; 'd'
0000000000017796         db  0x69 ; 'i'
0000000000017797         db  0x20 ; ' '
0000000000017798         db  0x30 ; '0'
0000000000017799         db  0x30 ; '0'
000000000001779a         db  0x3b ; ';'
000000000001779b         db  0x33 ; '3'
000000000001779c         db  0x36 ; '6'
000000000001779d         db  0x00 ; '.'
000000000001779e         db  0x2e ; '.'
000000000001779f         db  0x6d ; 'm'
00000000000177a0         db  0x6b ; 'k'
00000000000177a1         db  0x61 ; 'a'
00000000000177a2         db  0x20 ; ' '
00000000000177a3         db  0x30 ; '0'
00000000000177a4         db  0x30 ; '0'
00000000000177a5         db  0x3b ; ';'
00000000000177a6         db  0x33 ; '3'
00000000000177a7         db  0x36 ; '6'
00000000000177a8         db  0x00 ; '.'
00000000000177a9         db  0x2e ; '.'
00000000000177aa         db  0x6d ; 'm'
00000000000177ab         db  0x70 ; 'p'
00000000000177ac         db  0x33 ; '3'
00000000000177ad         db  0x20 ; ' '
00000000000177ae         db  0x30 ; '0'
00000000000177af         db  0x30 ; '0'
00000000000177b0         db  0x3b ; ';'
00000000000177b1         db  0x33 ; '3'
00000000000177b2         db  0x36 ; '6'
00000000000177b3         db  0x00 ; '.'
00000000000177b4         db  0x2e ; '.'
00000000000177b5         db  0x6d ; 'm'
00000000000177b6         db  0x70 ; 'p'
00000000000177b7         db  0x63 ; 'c'
00000000000177b8         db  0x20 ; ' '
00000000000177b9         db  0x30 ; '0'
00000000000177ba         db  0x30 ; '0'
00000000000177bb         db  0x3b ; ';'
00000000000177bc         db  0x33 ; '3'
00000000000177bd         db  0x36 ; '6'
00000000000177be         db  0x00 ; '.'
00000000000177bf         db  0x2e ; '.'
00000000000177c0         db  0x6f ; 'o'
00000000000177c1         db  0x67 ; 'g'
00000000000177c2         db  0x67 ; 'g'
00000000000177c3         db  0x20 ; ' '
00000000000177c4         db  0x30 ; '0'
00000000000177c5         db  0x30 ; '0'
00000000000177c6         db  0x3b ; ';'
00000000000177c7         db  0x33 ; '3'
00000000000177c8         db  0x36 ; '6'
00000000000177c9         db  0x00 ; '.'
00000000000177ca         db  0x2e ; '.'
00000000000177cb         db  0x72 ; 'r'
00000000000177cc         db  0x61 ; 'a'
00000000000177cd         db  0x20 ; ' '
00000000000177ce         db  0x30 ; '0'
00000000000177cf         db  0x30 ; '0'
00000000000177d0         db  0x3b ; ';'
00000000000177d1         db  0x33 ; '3'
00000000000177d2         db  0x36 ; '6'
00000000000177d3         db  0x00 ; '.'
00000000000177d4         db  0x2e ; '.'
00000000000177d5         db  0x77 ; 'w'
00000000000177d6         db  0x61 ; 'a'
00000000000177d7         db  0x76 ; 'v'
00000000000177d8         db  0x20 ; ' '
00000000000177d9         db  0x30 ; '0'
00000000000177da         db  0x30 ; '0'
00000000000177db         db  0x3b ; ';'
00000000000177dc         db  0x33 ; '3'
00000000000177dd         db  0x36 ; '6'
00000000000177de         db  0x00 ; '.'
00000000000177df         db  0x23 ; '#'
00000000000177e0         db  0x20 ; ' '
00000000000177e1         db  0x68 ; 'h'
00000000000177e2         db  0x74 ; 't'
00000000000177e3         db  0x74 ; 't'
00000000000177e4         db  0x70 ; 'p'
00000000000177e5         db  0x73 ; 's'
00000000000177e6         db  0x3a ; ':'
00000000000177e7         db  0x2f ; '/'
00000000000177e8         db  0x2f ; '/'
00000000000177e9         db  0x77 ; 'w'
00000000000177ea         db  0x69 ; 'i'
00000000000177eb         db  0x6b ; 'k'
00000000000177ec         db  0x69 ; 'i'
00000000000177ed         db  0x2e ; '.'
00000000000177ee         db  0x78 ; 'x'
00000000000177ef         db  0x69 ; 'i'
00000000000177f0         db  0x70 ; 'p'
00000000000177f1         db  0x68 ; 'h'
00000000000177f2         db  0x2e ; '.'
00000000000177f3         db  0x6f ; 'o'
00000000000177f4         db  0x72 ; 'r'
00000000000177f5         db  0x67 ; 'g'
00000000000177f6         db  0x2f ; '/'
00000000000177f7         db  0x4d ; 'M'
00000000000177f8         db  0x49 ; 'I'
00000000000177f9         db  0x4d ; 'M'
00000000000177fa         db  0x45 ; 'E'
00000000000177fb         db  0x5f ; '_'
00000000000177fc         db  0x54 ; 'T'
00000000000177fd         db  0x79 ; 'y'
00000000000177fe         db  0x70 ; 'p'
00000000000177ff         db  0x65 ; 'e'
0000000000017800         db  0x73 ; 's'
0000000000017801         db  0x5f ; '_'
0000000000017802         db  0x61 ; 'a'
0000000000017803         db  0x6e ; 'n'
0000000000017804         db  0x64 ; 'd'
0000000000017805         db  0x5f ; '_'
0000000000017806         db  0x46 ; 'F'
0000000000017807         db  0x69 ; 'i'
0000000000017808         db  0x6c ; 'l'
0000000000017809         db  0x65 ; 'e'
000000000001780a         db  0x5f ; '_'
000000000001780b         db  0x45 ; 'E'
000000000001780c         db  0x78 ; 'x'
000000000001780d         db  0x74 ; 't'
000000000001780e         db  0x65 ; 'e'
000000000001780f         db  0x6e ; 'n'
0000000000017810         db  0x73 ; 's'
0000000000017811         db  0x69 ; 'i'
0000000000017812         db  0x6f ; 'o'
0000000000017813         db  0x6e ; 'n'
0000000000017814         db  0x73 ; 's'
0000000000017815         db  0x00 ; '.'
0000000000017816         db  0x2e ; '.'
0000000000017817         db  0x6f ; 'o'
0000000000017818         db  0x67 ; 'g'
0000000000017819         db  0x61 ; 'a'
000000000001781a         db  0x20 ; ' '
000000000001781b         db  0x30 ; '0'
000000000001781c         db  0x30 ; '0'
000000000001781d         db  0x3b ; ';'
000000000001781e         db  0x33 ; '3'
000000000001781f         db  0x36 ; '6'
0000000000017820         db  0x00 ; '.'
0000000000017821         db  0x2e ; '.'
0000000000017822         db  0x6f ; 'o'
0000000000017823         db  0x70 ; 'p'
0000000000017824         db  0x75 ; 'u'
0000000000017825         db  0x73 ; 's'
0000000000017826         db  0x20 ; ' '
0000000000017827         db  0x30 ; '0'
0000000000017828         db  0x30 ; '0'
0000000000017829         db  0x3b ; ';'
000000000001782a         db  0x33 ; '3'
000000000001782b         db  0x36 ; '6'
000000000001782c         db  0x00 ; '.'
000000000001782d         db  0x2e ; '.'
000000000001782e         db  0x73 ; 's'
000000000001782f         db  0x70 ; 'p'
0000000000017830         db  0x78 ; 'x'
0000000000017831         db  0x20 ; ' '
0000000000017832         db  0x30 ; '0'
0000000000017833         db  0x30 ; '0'
0000000000017834         db  0x3b ; ';'
0000000000017835         db  0x33 ; '3'
0000000000017836         db  0x36 ; '6'
0000000000017837         db  0x00 ; '.'
0000000000017838         db  0x2e ; '.'
0000000000017839         db  0x78 ; 'x'
000000000001783a         db  0x73 ; 's'
000000000001783b         db  0x70 ; 'p'
000000000001783c         db  0x66 ; 'f'
000000000001783d         db  0x20 ; ' '
000000000001783e         db  0x30 ; '0'
000000000001783f         db  0x30 ; '0'
0000000000017840         db  0x3b ; ';'
0000000000017841         db  0x33 ; '3'
0000000000017842         db  0x36 ; '6'
0000000000017843         db  0x00 ; '.'
0000000000017844         db  0x30 ; '0'                                         ; DATA XREF=is_colored+47
0000000000017845         db  0x30 ; '0'
0000000000017846         db  0x00 ; '.'
                     aSss:
0000000000017847         db         "%.*s%s%s", 0                               ; DATA XREF=abformat_init+517
                     a02x:
0000000000017850         db         "%%%02x", 0                                 ; DATA XREF=file_escape+144
                     aCoreutils831sr:
0000000000017857         db         "../coreutils-8.31/src/ls.c", 0             ; DATA XREF=main+6478, main+6509, main+6540, sort_files+366
                     aSorttypeSortve:
0000000000017872         db         "sort_type != sort_version", 0              ; DATA XREF=sort_files+373
000000000001788c         db  0x20 ; ' '                                         ; DATA XREF=dired_dump_obstack+87
000000000001788d         db  0x25 ; '%'                                         ; DATA XREF=format_user_width+36, gobble_file.constprop.52+2833
000000000001788e         db  0x6c ; 'l'
000000000001788f         db  0x75 ; 'u'
0000000000017890         db  0x00 ; '.'
                     aLu:
0000000000017891         db         "%*lu ", 0                                  ; DATA XREF=format_user_or_group+163
0000000000017897         db  0x3f ; '?'                                         ; DATA XREF=format_user+1, print_file_name_and_frills+55, print_file_name_and_frills+129, print_long_format+163, print_long_format+302, print_long_format+425, print_long_format+797, print_long_format+1232, print_long_format+1741, print_long_format+2532
0000000000017898         db  0x00 ; '.'
0000000000017899         db  0x1b ; '.'                                         ; DATA XREF=quote_name+262
000000000001789a         db  0x5d ; ']'
000000000001789b         db  0x38 ; '8'
000000000001789c         db  0x3b ; ';'
000000000001789d         db  0x3b ; ';'
000000000001789e         db  0x66 ; 'f'
000000000001789f         db  0x69 ; 'i'
00000000000178a0         db  0x6c ; 'l'
00000000000178a1         db  0x65 ; 'e'
00000000000178a2         db  0x3a ; ':'
00000000000178a3         db  0x2f ; '/'
00000000000178a4         db  0x2f ; '/'
00000000000178a5         db  0x25 ; '%'
00000000000178a6         db  0x73 ; 's'
00000000000178a7         db  0x25 ; '%'
00000000000178a8         db  0x73 ; 's'
00000000000178a9         db  0x25 ; '%'
00000000000178aa         db  0x73 ; 's'
00000000000178ab         db  0x07 ; '.'
00000000000178ac         db  0x00 ; '.'
00000000000178ad         db  0x1b ; '.'                                         ; DATA XREF=quote_name+476
00000000000178ae         db  0x5d ; ']'
00000000000178af         db  0x38 ; '8'
00000000000178b0         db  0x3b ; ';'
00000000000178b1         db  0x3b ; ';'
00000000000178b2         db  0x07 ; '.'
00000000000178b3         db  0x00 ; '.'                                         ; DATA XREF=main+43, main+995, main+3239, main+5337, set_line_length+4, rev_strcmp_df_extension+183, rev_strcmp_df_extension+243, quote_name+255, xstrcoll_extension+40, rev_xstrcoll_extension+41, strcmp_extension+48
                     aSS:
00000000000178b4         db         "%s %*s ", 0                                ; DATA XREF=print_long_format+449
00000000000178bc         db  0x20 ; ' '                                         ; DATA XREF=print_long_format+1583, print_dir+1519, print_dir+1626
00000000000178bd         db  0x20 ; ' '
00000000000178be         db  0x00 ; '.'
                     aSS_178bf:        // aSS
00000000000178bf         db         "%*s, %*s ", 0                              ; DATA XREF=print_long_format+2219
00000000000178c9         db  0x20 ; ' '                                         ; DATA XREF=print_long_format+1282
00000000000178ca         db  0x2d ; '-'
00000000000178cb         db  0x3e ; '>'
00000000000178cc         db  0x20 ; ' '
00000000000178cd         db  0x00 ; '.'
                     aErrorCanonical:
00000000000178ce         db         "error canonicalizing %s", 0                ; DATA XREF=gobble_file.constprop.52+1412, print_dir+1579
                     aCannotAccessS:
00000000000178e6         db         "cannot access %s", 0                       ; DATA XREF=gobble_file.constprop.52+1224, gobble_file.constprop.52+3054
                     aCannotReadSymb:
00000000000178f7         db         "cannot read symbolic link %s", 0           ; DATA XREF=gobble_file.constprop.52+3104
                     aCannotOpenDire:
0000000000017914         db         "cannot open directory %s", 0               ; DATA XREF=print_dir+1408
                     aReadingDirecto:
000000000001792d         db         "reading directory %s", 0                   ; DATA XREF=print_dir+856
                     aClosingDirecto:
0000000000017942         db         "closing directory %s", 0                   ; DATA XREF=print_dir+1472
                     aTotal:
0000000000017957         db         "total", 0                                  ; DATA XREF=print_dir+972
000000000001795d         db  0x76 ; 'v'                                         ; DATA XREF=main+1386, usage+1258
000000000001795e         db  0x64 ; 'd'                                         ; DATA XREF=main+1393, usage+1265
000000000001795f         db  0x69 ; 'i'
0000000000017960         db  0x72 ; 'r'
0000000000017961         db  0x00 ; '.'
                     aTestInvocation:
0000000000017962         db         "test invocation", 0                        ; DATA XREF=usage+1276
                     aMulticallInvoc:
0000000000017972         db         "Multi-call invocation", 0                  ; DATA XREF=usage+1351
                     aSha224sum:
0000000000017988         db         "sha224sum", 0                              ; DATA XREF=usage+1375
                     aSha2Utilities:
0000000000017992         db         "sha2 utilities", 0                         ; DATA XREF=usage+1392
                     aSha256sum:
00000000000179a1         db         "sha256sum", 0                              ; DATA XREF=usage+1283
                     aSha384sum:
00000000000179ab         db         "sha384sum", 0                              ; DATA XREF=usage+1335
                     aSha512sum:
00000000000179b5         db         "sha512sum", 0                              ; DATA XREF=usage+1363
                     aNsOnlineHelpSn:
00000000000179bf         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+1459
00000000000179d6         db  0x47 ; 'G'                                         ; DATA XREF=main+1431, usage+1487, usage+1676, emit_bug_reporting_address+68
00000000000179d7         db  0x4e ; 'N'
00000000000179d8         db  0x55 ; 'U'
00000000000179d9         db  0x20 ; ' '
                     aCoreutils:
00000000000179da         db         "coreutils", 0                              ; DATA XREF=main+67, main+79, usage+1323
00000000000179e4         db  0x65 ; 'e'                                         ; DATA XREF=usage+1526, usage+1715
00000000000179e5         db  0x6e ; 'n'
00000000000179e6         db  0x5f ; '_'
00000000000179e7         db  0x00 ; '.'
                     aFullDocumentat:
00000000000179e8         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+1554, usage+1739
                     aFulliso:
0000000000017a03         db         "full-iso", 0                               ; DATA XREF=main+1970, main+6089
0000000000017a0c         db  0x6c ; 'l'                                         ; DATA XREF=main+5608
0000000000017a0d         db  0x63 ; 'c'
0000000000017a0e         db  0x00 ; '.'
                     aUsrlocalsharel:
0000000000017a0f         db         "/usr/local/share/locale", 0                ; DATA XREF=main+60
                     aQuotingstyle:
0000000000017a27         db         "QUOTING_STYLE", 0                          ; DATA XREF=main+232
                     aColumns:
0000000000017a35         db         "COLUMNS", 0                                ; DATA XREF=main+427
                     aTabsize:
0000000000017a3d         db         "TABSIZE", 0                                ; DATA XREF=main+514
                     aInvalidLineWid:
0000000000017a45         db         "invalid line width", 0                     ; DATA XREF=main+2394
                     aSS_17a58:        // aSS
0000000000017a58         db         "%s: %s", 0                                 ; DATA XREF=main+2416, close_stdout+108, xnumtoumax+125
0000000000017a5f         db  0x2e ; '.'                                         ; DATA XREF=main+1289
0000000000017a60         db  0x2a ; '*'                                         ; DATA XREF=main+1251
0000000000017a61         db  0x7e ; '~'
0000000000017a62         db  0x00 ; '.'
                     aInvalidTabSize:
0000000000017a63         db         "invalid tab size", 0                       ; DATA XREF=main+965
                     aSort:
0000000000017a74         db         "--sort", 0                                 ; DATA XREF=main+1559
                     aTime:
0000000000017a7b         db         "--time", 0                                 ; DATA XREF=main+1492
                     aFormat:
0000000000017a82         db         "--format", 0                               ; DATA XREF=main+2010
                     aColor:
0000000000017a8b         db         "--color", 0                                ; DATA XREF=main+2116
                     aHyperlink:
0000000000017a93         db         "--hyperlink", 0                            ; DATA XREF=main+1834
                     aIndicatorstyle_17a9f:        // aIndicatorstyle
0000000000017a9f         db         "--indicator-style", 0                      ; DATA XREF=main+1758
                     aQuotingstyle_17ab1:        // aQuotingstyle
0000000000017ab1         db         "--quoting-style", 0                        ; DATA XREF=main+1690
                     aDavidMackenzie:
0000000000017ac1         db         "David MacKenzie", 0                        ; DATA XREF=main+1415
                     aRichardMStallm:
0000000000017ad1         db         "Richard M. Stallman", 0                    ; DATA XREF=main+1424
                     aLsblocksize:
0000000000017ae5         db         "LS_BLOCK_SIZE", 0                          ; DATA XREF=main+4171
0000000000017af3         db  0x2a ; '*'                                         ; DATA XREF=main+2759
0000000000017af4         db  0x3d ; '='
0000000000017af5         db  0x3e ; '>'
0000000000017af6         db  0x40 ; '@'
0000000000017af7         db  0x7c ; '|'
0000000000017af8         db  0x00 ; '.'
                     aTimestyle:
0000000000017af9         db         "TIME_STYLE", 0                             ; DATA XREF=main+5349
                     aInvalidTimeSty:
0000000000017b04         db         "invalid time style format %s", 0           ; DATA XREF=main+6429
                     aTimeStyle:
0000000000017b21         db         "time style", 0                             ; DATA XREF=main+6020
                     aValidArguments_17b2c:        // aValidArguments
0000000000017b2c         db         "Valid arguments are:\n", 0                 ; DATA XREF=main+6052
                     aPosixsn:
0000000000017b42         db         "  - [posix-]%s\n", 0                       ; DATA XREF=main+6033
                     aYmdHmsnZ:
0000000000017b52         db         "%Y-%m-%d %H:%M:%S.%N %z", 0                ; DATA XREF=main+5887
0000000000017b6a         db  0x25 ; '%'                                         ; DATA XREF=main+6352
0000000000017b6b         db  0x59 ; 'Y'
0000000000017b6c         db  0x2d ; '-'
                     aMdHm:
0000000000017b6d         db         "%m-%d %H:%M", 0                            ; DATA XREF=main+6333
                     aYmd:
0000000000017b79         db         "%Y-%m-%d ", 0                              ; DATA XREF=main+6319
                     aLscolors:
0000000000017b83         db         "LS_COLORS", 0                              ; DATA XREF=main+4657
                     aColorterm:
0000000000017b8d         db         "COLORTERM", 0                              ; DATA XREF=main+4688
                     aTerm:
0000000000017b97         db         "TERM ", 0                                  ; DATA XREF=main+4801
                     aUnrecognizedPr:
0000000000017b9d         db         "unrecognized prefix: %s", 0                ; DATA XREF=main+5668
                     aTarget:
0000000000017bb5         db         "target", 0                                 ; DATA XREF=main+5806
0000000000017bbc         db  0x54 ; 'T'                                         ; DATA XREF=main+3115, setenv_TZ+8, setenv_TZ+32, set_tz+7
0000000000017bbd         db  0x5a ; 'Z'
0000000000017bbe         db  0x00 ; '.'
                     aFound:
0000000000017bbf         db         "found", 0                                  ; DATA XREF=main+6516
                     aDired:
0000000000017bc5         db         "//DIRED//", 0                              ; DATA XREF=main+4577
                     aSubdired:
0000000000017bcf         db         "//SUBDIRED//", 0                           ; DATA XREF=main+4596
0000000000017bdc         db  0x79 ; 'y'
0000000000017bdd         db  0x65 ; 'e'
0000000000017bde         db  0x73 ; 's'
0000000000017bdf         db  0x00 ; '.'
                     aForce:
0000000000017be0         db         "force", 0
                     aNever:
0000000000017be6         db         "never", 0
0000000000017bec         db  0x6e ; 'n'
0000000000017bed         db  0x6f ; 'o'
0000000000017bee         db  0x00 ; '.'
                     aNone:
0000000000017bef         db         "none", 0
                     aAuto:
0000000000017bf4         db         "auto", 0
                     aIftty:
0000000000017bf9         db         "if-tty", 0
                     aAtime:
0000000000017c00         db         "atime", 0
                     aAccess:
0000000000017c06         db         "access", 0
0000000000017c0d         db  0x75 ; 'u'
0000000000017c0e         db  0x73 ; 's'
0000000000017c0f         db  0x65 ; 'e'
0000000000017c10         db  0x00 ; '.'
                     aCtime:
0000000000017c11         db         "ctime", 0
                     aStatus:
0000000000017c17         db         "status", 0
                     aExtension:
0000000000017c1e         db         "extension", 0
                     aVerbose:
0000000000017c28         db         "verbose", 0
                     aLong:
0000000000017c30         db         "long", 0
                     aCommas:
0000000000017c35         db         "commas", 0
                     aHorizontal:
0000000000017c3c         db         "horizontal", 0
                     aAcross:
0000000000017c47         db         "across", 0
                     aVertical:
0000000000017c4e         db         "vertical", 0
                     aSinglecolumn:
0000000000017c57         db         "single-column", 0
                     aDirectory:
0000000000017c65         db         "directory", 0
                     aDired_17c6f:        // aDired
0000000000017c6f         db         "dired", 0
                     aFulltime:
0000000000017c75         db         "full-time", 0
                     aGroupdirectori_17c7f:        // aGroupdirectori
0000000000017c7f         db         "group-directories-first", 0
                     aHumanreadable:
0000000000017c97         db         "human-readable", 0
                     aInode:
0000000000017ca6         db         "inode", 0
                     aKibibytes:
0000000000017cac         db         "kibibytes", 0
                     aNumericuidgid:
0000000000017cb6         db         "numeric-uid-gid", 0
                     aNogroup:
0000000000017cc6         db         "no-group", 0
                     aHidecontrolcha:
0000000000017ccf         db         "hide-control-chars", 0
                     aReverse:
0000000000017ce2         db         "reverse", 0
                     aAlmostall:
0000000000017cea         db         "almost-all", 0
                     aIgnorebackups:
0000000000017cf5         db         "ignore-backups", 0
                     aClassify:
0000000000017d04         db         "classify", 0
                     aFiletype:
0000000000017d0d         db         "file-type", 0
0000000000017d17         db  0x73 ; 's'
0000000000017d18         db  0x69 ; 'i'
0000000000017d19         db  0x00 ; '.'
                     aDereferencecom_17d1a:        // aDereferencecom
0000000000017d1a         db         "dereference-command-line", 0
                     aHide:
0000000000017d33         db         "hide", 0
                     aIgnore:
0000000000017d38         db         "ignore", 0
                     aDereference:
0000000000017d3f         db         "dereference", 0
                     aLiteral:
0000000000017d4b         db         "literal", 0
                     aQuotename:
0000000000017d53         db         "quote-name", 0
                     aRecursive:
0000000000017d5e         db         "recursive", 0
                     aShowcontrolcha:
0000000000017d68         db         "show-control-chars", 0
                     aTabsize_17d7b:        // aTabsize
0000000000017d7b         db         "tabsize", 0
                     aTimestyle_17d83:        // aTimestyle
0000000000017d83         db         "time-style", 0
                     aBlocksize_17d8e:        // aBlocksize
0000000000017d8e         db         "block-size", 0
                     aContext:
0000000000017d99         db         "context", 0
                     aAuthor:
0000000000017da1         db         "author", 0
                     aHelp:
0000000000017da8         db         "help", 0
                     aBEY:
0000000000017dad         db         "%b %e  %Y", 0                              ; DATA XREF=long_time_format
                     aBEHm:
0000000000017db7         db         "%b %e %H:%M", 0                            ; DATA XREF=qword_220048
0000000000017dc3         db  0x1b ; '.'                                         ; DATA XREF=qword_220068
0000000000017dc4         db  0x5b ; '['                                         ; DATA XREF=usage+1290
0000000000017dc5         db  0x00 ; '.'
                     a0134:
0000000000017dc6         db         "01;34", 0
                     a0136:
0000000000017dcc         db         "01;36", 0                                  ; DATA XREF=qword_2200d8
                     a0135:
0000000000017dd2         db         "01;35", 0
                     a0133:
0000000000017dd8         db         "01;33", 0
                     a0132:
0000000000017dde         db         "01;32", 0
                     a3741:
0000000000017de4         db         "37;41", 0
                     a3043:
0000000000017dea         db         "30;43", 0
                     a3744:
0000000000017df0         db         "37;44", 0
                     a3442:
0000000000017df6         db         "34;42", 0
                     a3042:
0000000000017dfc         db         "30;42", 0
                     a3041:
0000000000017e02         db         "30;41", 0
0000000000017e08         db  0x1b ; '.'
0000000000017e09         db  0x5b ; '['
0000000000017e0a         db  0x4b ; 'K'
0000000000017e0b         db  0x00 ; '.'
0000000000017e0c         db  0x72 ; 'r'
0000000000017e0d         db  0x63 ; 'c'
0000000000017e0e         db  0x00 ; '.'
0000000000017e0f         db  0x65 ; 'e'
0000000000017e10         db  0x63 ; 'c'
0000000000017e11         db  0x00 ; '.'
0000000000017e12         db  0x66 ; 'f'
0000000000017e13         db  0x69 ; 'i'
0000000000017e14         db  0x00 ; '.'
0000000000017e15         db  0x64 ; 'd'
0000000000017e16         db  0x69 ; 'i'
0000000000017e17         db  0x00 ; '.'
0000000000017e18         db  0x6c ; 'l'
0000000000017e19         db  0x6e ; 'n'
0000000000017e1a         db  0x00 ; '.'
0000000000017e1b         db  0x70 ; 'p'
0000000000017e1c         db  0x69 ; 'i'
0000000000017e1d         db  0x00 ; '.'
0000000000017e1e         db  0x62 ; 'b'
0000000000017e1f         db  0x64 ; 'd'
0000000000017e20         db  0x00 ; '.'
0000000000017e21         db  0x63 ; 'c'
0000000000017e22         db  0x64 ; 'd'
0000000000017e23         db  0x00 ; '.'
0000000000017e24         db  0x6d ; 'm'
0000000000017e25         db  0x69 ; 'i'
0000000000017e26         db  0x00 ; '.'
0000000000017e27         db  0x65 ; 'e'
0000000000017e28         db  0x78 ; 'x'
0000000000017e29         db  0x00 ; '.'
0000000000017e2a         db  0x64 ; 'd'
0000000000017e2b         db  0x6f ; 'o'
0000000000017e2c         db  0x00 ; '.'
0000000000017e2d         db  0x73 ; 's'
0000000000017e2e         db  0x75 ; 'u'
0000000000017e2f         db  0x00 ; '.'
0000000000017e30         db  0x73 ; 's'
0000000000017e31         db  0x67 ; 'g'
0000000000017e32         db  0x00 ; '.'
0000000000017e33         db  0x6f ; 'o'
0000000000017e34         db  0x77 ; 'w'
0000000000017e35         db  0x00 ; '.'
0000000000017e36         db  0x74 ; 't'
0000000000017e37         db  0x77 ; 'w'
0000000000017e38         db  0x00 ; '.'
0000000000017e39         db  0x63 ; 'c'
0000000000017e3a         db  0x61 ; 'a'
0000000000017e3b         db  0x00 ; '.'
0000000000017e3c         db  0x6d ; 'm'
0000000000017e3d         db  0x68 ; 'h'
0000000000017e3e         db  0x00 ; '.'
0000000000017e3f         db  0x63 ; 'c'
0000000000017e40         db  0x6c ; 'l'
0000000000017e41         db  0x00 ; '.'
                     aSlash:
0000000000017e42         db         "slash", 0
                     aLongiso:
0000000000017e48         db         "long-iso", 0
0000000000017e51         align      8
                     aCannotDetermin:
0000000000017e58         db         "cannot determine device and inode of %s", 0 ; DATA XREF=print_dir+134
                     aSNotListingAlr:
0000000000017e80         db         "%s: not listing already-listed directory", 0 ; DATA XREF=print_dir+334
0000000000017ea9         align      16
                     aTrySHelpForMor:
0000000000017eb0         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+48
0000000000017ed7         align      8
                     aUsageSOptionFi:
0000000000017ed8         db         "Usage: %s [OPTION]... [FILE]...\n", 0      ; DATA XREF=usage+95
0000000000017ef9         align      256
                     aListInformatio:
0000000000017f00         db         "List information about the FILEs (the current directory by default).\nSort entries alphabetically if none of -cftuvSUX nor --sort is specified.\n", 0 ; DATA XREF=usage+141
                     aNmandatoryArgu:
0000000000017f90         db         "\nMandatory arguments to long options are mandatory for short options too.\n", 0 ; DATA XREF=usage+178
0000000000017fdb         align      32
                     aAAllDoNotIgnor:
0000000000017fe0         db         "  -a, --all                  do not ignore entries starting with .\n  -A, --almost-all           do not list implied . and ..\n      --author               with -l, print the author of each file\n  -b, --escape               print C-style escapes for nongraph" ; DATA XREF=usage+215
00000000000180e0         db         "ic characters\n", 0
00000000000180ef         align      16
                     aBlocksizesizeW:
00000000000180f0         db         "      --block-size=SIZE      with -l, scale sizes by SIZE when printing them;\n                               e.g., '--block-size=M'; see SIZE format below\n", 0 ; DATA XREF=usage+252
000000000001818c         align      16
                     aBIgnorebackups:
0000000000018190         db         "  -B, --ignore-backups       do not list implied entries ending with ~\n  -c                         with -lt: sort by, and show, ctime (time of last\n                               modification of file status information);\n                               wit" ; DATA XREF=usage+289
0000000000018290         db         "h -l: show ctime and sort by name;\n                               otherwise: sort by ctime, newest first\n", 0
00000000000182fa         align      256
                     aCListEntriesBy:
0000000000018300         db         "  -C                         list entries by columns\n      --color[=WHEN]         colorize the output; WHEN can be 'always' (default\n                               if omitted), 'auto', or 'never'; more info below\n  -d, --directory            list directori" ; DATA XREF=usage+326
0000000000018400         db         "es themselves, not their contents\n  -D, --dired                generate output designed for Emacs' dired mode\n", 0
000000000001846f         align      16
                     aFDoNotSortEnab:
0000000000018470         db         "  -f                         do not sort, enable -aU, disable -ls --color\n  -F, --classify             append indicator (one of */=>@|) to entries\n      --file-type            likewise, except do not append '*'\n      --format=WORD          across -x, comma" ; DATA XREF=usage+363
0000000000018570         db         "s -m, horizontal -x, long -l,\n                               single-column -1, verbose -l, vertical -C\n      --full-time            like -l --time-style=full-iso\n", 0
0000000000018613         align      8
                     aGLikeLButDoNot:
0000000000018618         db         "  -g                         like -l, but do not list owner\n", 0 ; DATA XREF=usage+400
0000000000018655         align      8
                     aGroupdirectori:
0000000000018658         db         "      --group-directories-first\n                             group directories before files;\n                               can be augmented with a --sort option, but any\n                               use of --sort=none (-U) disables grouping\n", 0 ; DATA XREF=usage+437
000000000001874d         align      16
                     aGNogroupInALon:
0000000000018750         db         "  -G, --no-group             in a long listing, don't print group names\n", 0 ; DATA XREF=usage+474
0000000000018799         align      32
                     aHHumanreadable:
00000000000187a0         db         "  -h, --human-readable       with -l and -s, print sizes like 1K 234M 2G etc.\n      --si                   likewise, but use powers of 1000 not 1024\n", 0 ; DATA XREF=usage+511
0000000000018836         align      8
                     aHDereferenceco:
0000000000018838         db         "  -H, --dereference-command-line\n                             follow symbolic links listed on the command line\n      --dereference-command-line-symlink-to-dir\n                             follow each command line symbolic link\n                             " ; DATA XREF=usage+548
0000000000018938         db         "  that points to a directory\n      --hide=PATTERN         do not list implied entries matching shell PATTERN\n                               (overridden by -a or -A)\n", 0
00000000000189de         align      32
                     aHyperlinkwhenH:
00000000000189e0         db         "      --hyperlink[=WHEN]     hyperlink file names; WHEN can be 'always'\n                               (default if omitted), 'auto', or 'never'\n", 0 ; DATA XREF=usage+585
0000000000018a71         align      8
                     aIndicatorstyle:
0000000000018a78         db         "      --indicator-style=WORD  append indicator with style WORD to entry names:\n                               none (default), slash (-p),\n                               file-type (--file-type), classify (-F)\n  -i, --inode                print the index num" ; DATA XREF=usage+622
0000000000018b78         db         "ber of each file\n  -I, --ignore=PATTERN       do not list implied entries matching shell PATTERN\n", 0
0000000000018bda         align      32
                     aKKibibytesDefa:
0000000000018be0         db         "  -k, --kibibytes            default to 1024-byte blocks for disk usage;\n                               used only with -s and per directory totals\n", 0 ; DATA XREF=usage+659
0000000000018c74         align      8
                     aLUseALongListi:
0000000000018c78         db         "  -l                         use a long listing format\n  -L, --dereference          when showing file information for a symbolic\n                               link, show information for the file the link\n                               references rather th" ; DATA XREF=usage+696
0000000000018d78         db         "an for the link itself\n  -m                         fill width with a comma separated list of entries\n", 0
0000000000018ddf         align      32
                     aNNumericuidgid:
0000000000018de0         db         "  -n, --numeric-uid-gid      like -l, but list numeric user and group IDs\n  -N, --literal              print entry names without quoting\n  -o                         like -l, but do not list group information\n  -p, --indicator-style=slash\n                 " ; DATA XREF=usage+733
0000000000018ee0         db         "            append / indicator to directories\n", 0
0000000000018f0f         align      16
                     aQHidecontrolch:
0000000000018f10         db         "  -q, --hide-control-chars   print ? instead of nongraphic characters\n      --show-control-chars   show nongraphic characters as-is (the default,\n                               unless program is 'ls' and output is a terminal)\n  -Q, --quote-name           e" ; DATA XREF=usage+770
0000000000019010         db         "nclose entry names in double quotes\n      --quoting-style=WORD   use quoting style WORD for entry names:\n                               literal, locale, shell, shell-always,\n                               shell-escape, shell-escape-always, c, escape\n      "
0000000000019110         db         "                         (overrides QUOTING_STYLE environment variable)\n", 0
0000000000019159         align      32
                     aRReverseRevers:
0000000000019160         db         "  -r, --reverse              reverse order while sorting\n  -R, --recursive            list subdirectories recursively\n  -s, --size                 print the allocated size of each file, in blocks\n", 0 ; DATA XREF=usage+807
0000000000019225         align      8
                     aSSortByFileSiz:
0000000000019228         db         "  -S                         sort by file size, largest first\n      --sort=WORD            sort by WORD instead of name: none (-U), size (-S),\n                               time (-t), version (-v), extension (-X)\n      --time=WORD            with -l, show" ; DATA XREF=usage+844
0000000000019328         db         " time as WORD instead of default\n                               modification time: atime or access or use (-u);\n                               ctime or status (-c); also use specified time\n                               as sort key if --sort=time (newest f"
0000000000019428         db         "irst)\n", 0
000000000001942f         align      16
                     aTimestyletimes:
0000000000019430         db         "      --time-style=TIME_STYLE  time/date format with -l; see TIME_STYLE below\n", 0 ; DATA XREF=usage+881
000000000001947f         align      128
                     aTSortByModific:
0000000000019480         db         "  -t                         sort by modification time, newest first\n  -T, --tabsize=COLS         assume tab stops at each COLS instead of 8\n", 0 ; DATA XREF=usage+918
000000000001950e         align      16
                     aUWithLtSortByA:
0000000000019510         db         "  -u                         with -lt: sort by, and show, access time;\n                               with -l: show access time and sort by name;\n                               otherwise: sort by access time, newest first\n  -U                         do no" ; DATA XREF=usage+955
0000000000019610         db         "t sort; list entries in directory order\n  -v                         natural sort of (version) numbers within text\n", 0
0000000000019684         align      8
                     aWWidthcolsSetO:
0000000000019688         db         "  -w, --width=COLS           set output width to COLS.  0 means no limit\n  -x                         list entries by lines instead of by columns\n  -X                         sort alphabetically by entry extension\n  -Z, --context              print any sec" ; DATA XREF=usage+992
0000000000019788         db         "urity context of each file\n  -1                         list one file per line.  Avoid '\n' with -q or -b\n", 0
00000000000197f3         align      8
                     aHelpDisplayThi:
00000000000197f8         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+1029
0000000000019825         align      8
                     aVersionOutputV:
0000000000019828         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+1066
000000000001985e         align      32
                     aNtheSizeArgume:
0000000000019860         db         "\nThe SIZE argument is an integer and optional unit (example: 10K is 10*1024).\nUnits are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).\nBinary prefixes can be used, too: KiB=K, MiB=M, and so on.\n", 0 ; DATA XREF=usage+1103
0000000000019934         align      8
                     aNtheTimestyleA:
0000000000019938         db         "\nThe TIME_STYLE argument can be full-iso, long-iso, iso, locale, or +FORMAT.\nFORMAT is interpreted like in date(1).  If FORMAT is FORMAT1<newline>FORMAT2,\nthen FORMAT1 applies to non-recent files and FORMAT2 to recent files.\nTIME_STYLE prefixed with 'posix" ; DATA XREF=usage+1140
0000000000019a38         db         "-' takes effect only outside the POSIX locale.\nAlso the TIME_STYLE environment variable sets the default style to use.\n", 0
                     aNusingColorToD:
0000000000019ab0         db         "\nUsing color to distinguish file types is disabled both by default and\nwith --color=never.  With --color=auto, ls emits color codes only when\nstandard output is connected to a terminal.  The LS_COLORS environment\nvariable can change the settings.  Use the " ; DATA XREF=usage+1177
0000000000019bb0         db         "dircolors command to set it.\n", 0
0000000000019bce         align      16
                     aNexitStatusn0I:
0000000000019bd0         db         "\nExit status:\n 0  if OK,\n 1  if minor problems (e.g., cannot access subdirectory),\n 2  if serious trouble (e.g., cannot access command-line argument).\n", 0 ; DATA XREF=usage+1214
                     aHttpswwwgnuorg:
0000000000019c68         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+1480, usage+1573, usage+1669, usage+1761, emit_bug_reporting_address+61
                     aReportAnyTrans:
0000000000019c90         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+1808
0000000000019cd7         align      8
                     aOrAvailableLoc:
0000000000019cd8         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+1619
0000000000019d0b         align      16
                     aIgnoringInvali_19d10:        // aIgnoringInvali
0000000000019d10         db         "ignoring invalid value of environment variable QUOTING_STYLE: %s", 0 ; DATA XREF=main+3706
0000000000019d51         align      8
                     aIgnoringInvali_19d58:        // aIgnoringInvali
0000000000019d58         db         "ignoring invalid width in environment variable COLUMNS: %s", 0 ; DATA XREF=main+3781
0000000000019d93         align      8
                     aIgnoringInvali:
0000000000019d98         db         "ignoring invalid tab size in environment variable TABSIZE: %s", 0 ; DATA XREF=main+4981
0000000000019dd6         align      8
                     aAbcdfghiklmnop:
0000000000019dd8         db         "abcdfghiklmnopqrstuvw:xABCDFGHI:LNQRST:UXZ1", 0 ; DATA XREF=main+623
0000000000019e04         align      8
                     aFormatEgHmForA:
0000000000019e08         db         "  - +FORMAT (e.g., +%H:%M) for a 'date'-style format\n", 0 ; DATA XREF=main+6137
0000000000019e3e         align      64
                     aDevinosizeObst:
0000000000019e40         db         "dev_ino_size <= obstack_object_size (&dev_ino_obstack)", 0 ; DATA XREF=main+6485
0000000000019e77         align      8
                     aDiredoptionsQu:
0000000000019e78         db         "//DIRED-OPTIONS// --quoting-style=%s\n", 0 ; DATA XREF=main+4629
0000000000019e9e         align      32
                     aHashgetnentrie:
0000000000019ea0         db         "hash_get_n_entries (active_dir_set) == 0", 0 ; DATA XREF=main+6547
0000000000019ec9         align      16
                     aUnparsableValu:
0000000000019ed0         db         "unparsable value for LS_COLORS environment variable", 0 ; DATA XREF=main+5707
0000000000019f04         align      8
                     aDereferencecom:
0000000000019f08         db         "dereference-command-line-symlink-to-dir", 0
                     a831:
0000000000019f30         db         "8.31", 0                                   ; DATA XREF=Version
                     aInvalidArgumen:
0000000000019f35         db         "invalid argument %s for %s", 0             ; DATA XREF=argmatch_invalid+96
                     aAmbiguousArgum:
0000000000019f50         db         "ambiguous argument %s for %s", 0           ; DATA XREF=argmatch_invalid+21
                     aValidArguments:
0000000000019f6d         db         "Valid arguments are:", 0                   ; DATA XREF=argmatch_valid+18
                     aNS:
0000000000019f82         db         "\n  - %s", 0                               ; DATA XREF=argmatch_valid+102
0000000000019f8a         db  0x2c ; ','                                         ; DATA XREF=argmatch_valid+181
0000000000019f8b         db  0x20 ; ' '
0000000000019f8c         db  0x25 ; '%'                                         ; DATA XREF=abformat_init+593, gobble_file.constprop.52+2332, close_stdout+143, same_nameat.part.0+223, same_nameat.part.0+263, xalloc_die+29
0000000000019f8d         db  0x73 ; 's'
0000000000019f8e         db  0x00 ; '.'
                     aWriteError:
0000000000019f8f         db         "write error", 0                            ; DATA XREF=close_stdout+67
0000000000019f9b         db  0x2e ; '.'                                         ; DATA XREF=filevercmp+138
0000000000019f9c         db  0x2e ; '.'                                         ; DATA XREF=main+3838, main+4098, filevercmp+77, human_readable+132
0000000000019f9d         db  0x00 ; '.'
0000000000019f9e         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
0000000000019f9f         db  0x00 ; '.'
                     aPosix:
0000000000019fa0         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aEntriesLun:
0000000000019fa6         db         "# entries:         %lu\n", 0               ; DATA XREF=hash_print_statistics+101
                     aBucketsLun:
0000000000019fbe         db         "# buckets:         %lu\n", 0               ; DATA XREF=hash_print_statistics+123
                     aMaxBucketLengt:
0000000000019fd6         db         "max bucket length: %lu\n", 0               ; DATA XREF=hash_print_statistics+232
0000000000019fee         align      16
                     aBucketsUsedLu2:
0000000000019ff0         db         "# buckets used:    %lu (%.2f%%)\n", 0      ; DATA XREF=hash_print_statistics+188
000000000001a011         db  0x00 ; '.'
000000000001a012         db  0x00 ; '.'
000000000001a013         db  0x00 ; '.'
000000000001a014         db  0x00 ; '.'
000000000001a015         db  0x00 ; '.'
000000000001a016         db  0x00 ; '.'
000000000001a017         db  0x00 ; '.'
000000000001a018         db  0x00 ; '.'
000000000001a019         db  0x00 ; '.'
000000000001a01a         db  0x00 ; '.'
000000000001a01b         db  0x00 ; '.'
000000000001a01c         db  0x00 ; '.'
000000000001a01d         db  0x00 ; '.'
000000000001a01e         db  0x00 ; '.'
000000000001a01f         db  0x00 ; '.'
                     default_tuning:
000000000001a020         db  0x00 ; '.'                                         ; DATA XREF=check_tuning.isra.0+3, hash_initialize+272
000000000001a021         db  0x00 ; '.'
000000000001a022         db  0x00 ; '.'
000000000001a023         db  0x00 ; '.'
000000000001a024         db  0x00 ; '.'
000000000001a025         db  0x00 ; '.'
000000000001a026         db  0x80 ; '.'
000000000001a027         db  0x3f ; '?'
000000000001a028         db  0xcd ; '.'
000000000001a029         db  0xcc ; '.'
000000000001a02a         db  0x4c ; 'L'
000000000001a02b         db  0x3f ; '?'
000000000001a02c         db  0xf4 ; '.'
000000000001a02d         db  0xfd ; '.'
000000000001a02e         db  0xb4 ; '.'
000000000001a02f         db  0x3f ; '?'
000000000001a030         db  0x00 ; '.'
000000000001a031         db  0x00 ; '.'
000000000001a032         db  0x00 ; '.'
000000000001a033         db  0x00 ; '.'
                     float_1a034:        // float
000000000001a034         dd         0.1f                                        ; DATA XREF=check_tuning.isra.0+25, check_tuning.isra.0+74
                     float_1a038:        // float
000000000001a038         dd         0.9f                                        ; DATA XREF=check_tuning.isra.0+34
                     float_1a03c:        // float
000000000001a03c         dd         1.1f                                        ; DATA XREF=check_tuning.isra.0+52
                     float_1a040:        // float
000000000001a040         dd         0.0f                                        ; DATA XREF=check_tuning.isra.0+65
                     float_1a044:        // float
000000000001a044         dd         1.0f                                        ; DATA XREF=check_tuning.isra.0+92
                     float_1a048:        // float
000000000001a048         dd         0.8f                                        ; DATA XREF=hash_initialize+290
                     float_1a04c:        // float
000000000001a04c         dd         1.84467e+19f                                ; DATA XREF=hash_initialize+318, hash_rehash+64, hash_insert_if_absent+413, adjust_value.part.0+66, adjust_value.part.0+192, human_readable+243, human_readable+268, human_readable+290
                     float_1a050:        // float
000000000001a050         dd         9.22337e+18f                                ; DATA XREF=hash_initialize+327, hash_initialize+336, hash_rehash+77, hash_rehash+90, hash_insert_if_absent+422, hash_insert_if_absent+608, hash_delete+250, hash_delete+400, adjust_value.part.0
000000000001a054         align      2
000000000001a05e         db  0x59 ; 'Y'
000000000001a05f         db  0x40 ; '@'
                     a0lf:
000000000001a060         db         "%.0Lf", 0                                  ; DATA XREF=human_readable+784, human_readable+1865
                     a1lf:
000000000001a066         db         "%.1Lf", 0                                  ; DATA XREF=human_readable+417, human_readable+1780
                     aBlocksize:
000000000001a06c         db         "BLOCKSIZE", 0                              ; DATA XREF=human_options+344
                     aPosixlycorrect:
000000000001a076         db         "POSIXLY_CORRECT", 0                        ; DATA XREF=human_options+269, human_options+368
                     aEeggkkmmppttyy:
000000000001a086         db         "eEgGkKmMpPtTyYzZ0", 0                      ; DATA XREF=human_options+152
                     block_size_opts:
000000000001a098         db  0xb0 ; '.'                                         ; DATA XREF=human_options+60, human_options+91
000000000001a099         db  0x00 ; '.'
000000000001a09a         db  0x00 ; '.'
000000000001a09b         db  0x00 ; '.'
000000000001a09c         db  0x90 ; '.'
000000000001a09d         db  0x00 ; '.'
000000000001a09e         db  0x00 ; '.'
000000000001a09f         db  0x00 ; '.'
                     power_letter:
000000000001a0a0         db  0x00 ; '.'                                         ; DATA XREF=human_readable+972
000000000001a0a1         db  0x4b ; 'K'
000000000001a0a2         db  0x4d ; 'M'
000000000001a0a3         db  0x47 ; 'G'
000000000001a0a4         db  0x54 ; 'T'
000000000001a0a5         db  0x50 ; 'P'
000000000001a0a6         db  0x45 ; 'E'
000000000001a0a7         db  0x5a ; 'Z'
000000000001a0a8         db  0x59 ; 'Y'
000000000001a0a9         db  0x00 ; '.'
000000000001a0aa         db  0x00 ; '.'
000000000001a0ab         db  0x00 ; '.'
                     dword_1a0ac:
000000000001a0ac         dd         0x41200000                                  ; DATA XREF=human_readable+508, human_readable+1851, human_readable+1928
000000000001a0b0         db  0xff ; '.'                                         ; DATA XREF=human_readable+393, human_readable+766, human_readable+1936
000000000001a0b1         db  0xff ; '.'
000000000001a0b2         db  0xff ; '.'
000000000001a0b3         db  0xff ; '.'
000000000001a0b4         db  0xff ; '.'
000000000001a0b5         db  0xff ; '.'
000000000001a0b6         db  0xff ; '.'
000000000001a0b7         db  0xff ; '.'
000000000001a0b8         db  0x3e ; '>'
000000000001a0b9         db  0x40 ; '@'
000000000001a0ba         db  0x00 ; '.'
000000000001a0bb         db  0x00 ; '.'
000000000001a0bc         db  0x00 ; '.'
000000000001a0bd         db  0x00 ; '.'
000000000001a0be         db  0x00 ; '.'
000000000001a0bf         db  0x00 ; '.'
                     aHms:
000000000001a0c0         db         "%H:%M:%S", 0                               ; DATA XREF=sub_10bf0+347
                     aYmd_1a0c9:        // aYmd
000000000001a0c9         db         "%Y-%m-%d", 0                               ; DATA XREF=sub_112b0+1122, sub_11d69+422
                     aMdy:
000000000001a0d2         db         "%m/%d/%y", 0                               ; DATA XREF=sub_112b0+1070
000000000001a0db         db  0x00 ; '.'
000000000001a0dc         db  0x55 ; 'U'                                         ; DATA XREF=__strftime_internal+509
000000000001a0dd         db  0x76 ; 'v'
000000000001a0de         db  0xff ; '.'
000000000001a0df         db  0xff ; '.'
000000000001a0e0         db  0xb4 ; '.'
000000000001a0e1         db  0x66 ; 'f'
000000000001a0e2         db  0xff ; '.'
000000000001a0e3         db  0xff ; '.'
000000000001a0e4         db  0xb4 ; '.'
000000000001a0e5         db  0x66 ; 'f'
000000000001a0e6         db  0xff ; '.'
000000000001a0e7         db  0xff ; '.'
000000000001a0e8         db  0xb4 ; '.'
000000000001a0e9         db  0x66 ; 'f'
000000000001a0ea         db  0xff ; '.'
000000000001a0eb         db  0xff ; '.'
000000000001a0ec         db  0xb4 ; '.'
000000000001a0ed         db  0x66 ; 'f'
000000000001a0ee         db  0xff ; '.'
000000000001a0ef         db  0xff ; '.'
000000000001a0f0         db  0xb4 ; '.'
000000000001a0f1         db  0x66 ; 'f'
000000000001a0f2         db  0xff ; '.'
000000000001a0f3         db  0xff ; '.'
000000000001a0f4         db  0xb4 ; '.'
000000000001a0f5         db  0x66 ; 'f'
000000000001a0f6         db  0xff ; '.'
000000000001a0f7         db  0xff ; '.'
000000000001a0f8         db  0xb4 ; '.'
000000000001a0f9         db  0x66 ; 'f'
000000000001a0fa         db  0xff ; '.'
000000000001a0fb         db  0xff ; '.'
000000000001a0fc         db  0xb4 ; '.'
000000000001a0fd         db  0x66 ; 'f'
000000000001a0fe         db  0xff ; '.'
000000000001a0ff         db  0xff ; '.'
000000000001a100         db  0xb4 ; '.'
000000000001a101         db  0x66 ; 'f'
000000000001a102         db  0xff ; '.'
000000000001a103         db  0xff ; '.'
000000000001a104         db  0xb4 ; '.'
000000000001a105         db  0x66 ; 'f'
000000000001a106         db  0xff ; '.'
000000000001a107         db  0xff ; '.'
000000000001a108         db  0xb4 ; '.'
000000000001a109         db  0x66 ; 'f'
000000000001a10a         db  0xff ; '.'
000000000001a10b         db  0xff ; '.'
000000000001a10c         db  0xb4 ; '.'
000000000001a10d         db  0x66 ; 'f'
000000000001a10e         db  0xff ; '.'
000000000001a10f         db  0xff ; '.'
000000000001a110         db  0xb4 ; '.'
000000000001a111         db  0x66 ; 'f'
000000000001a112         db  0xff ; '.'
000000000001a113         db  0xff ; '.'
000000000001a114         db  0xb4 ; '.'
000000000001a115         db  0x66 ; 'f'
000000000001a116         db  0xff ; '.'
000000000001a117         db  0xff ; '.'
000000000001a118         db  0xb4 ; '.'
000000000001a119         db  0x66 ; 'f'
000000000001a11a         db  0xff ; '.'
000000000001a11b         db  0xff ; '.'
000000000001a11c         db  0xb4 ; '.'
000000000001a11d         db  0x66 ; 'f'
000000000001a11e         db  0xff ; '.'
000000000001a11f         db  0xff ; '.'
000000000001a120         db  0xb4 ; '.'
000000000001a121         db  0x66 ; 'f'
000000000001a122         db  0xff ; '.'
000000000001a123         db  0xff ; '.'
000000000001a124         db  0xb4 ; '.'
000000000001a125         db  0x66 ; 'f'
000000000001a126         db  0xff ; '.'
000000000001a127         db  0xff ; '.'
000000000001a128         db  0xb4 ; '.'
000000000001a129         db  0x66 ; 'f'
000000000001a12a         db  0xff ; '.'
000000000001a12b         db  0xff ; '.'
000000000001a12c         db  0xb4 ; '.'
000000000001a12d         db  0x66 ; 'f'
000000000001a12e         db  0xff ; '.'
000000000001a12f         db  0xff ; '.'
000000000001a130         db  0xb4 ; '.'
000000000001a131         db  0x66 ; 'f'
000000000001a132         db  0xff ; '.'
000000000001a133         db  0xff ; '.'
000000000001a134         db  0xb4 ; '.'
000000000001a135         db  0x66 ; 'f'
000000000001a136         db  0xff ; '.'
000000000001a137         db  0xff ; '.'
000000000001a138         db  0xb4 ; '.'
000000000001a139         db  0x66 ; 'f'
000000000001a13a         db  0xff ; '.'
000000000001a13b         db  0xff ; '.'
000000000001a13c         db  0xb4 ; '.'
000000000001a13d         db  0x66 ; 'f'
000000000001a13e         db  0xff ; '.'
000000000001a13f         db  0xff ; '.'
000000000001a140         db  0xb4 ; '.'
000000000001a141         db  0x66 ; 'f'
000000000001a142         db  0xff ; '.'
000000000001a143         db  0xff ; '.'
000000000001a144         db  0xb4 ; '.'
000000000001a145         db  0x66 ; 'f'
000000000001a146         db  0xff ; '.'
000000000001a147         db  0xff ; '.'
000000000001a148         db  0xb4 ; '.'
000000000001a149         db  0x66 ; 'f'
000000000001a14a         db  0xff ; '.'
000000000001a14b         db  0xff ; '.'
000000000001a14c         db  0xb4 ; '.'
000000000001a14d         db  0x66 ; 'f'
000000000001a14e         db  0xff ; '.'
000000000001a14f         db  0xff ; '.'
000000000001a150         db  0xb4 ; '.'
000000000001a151         db  0x66 ; 'f'
000000000001a152         db  0xff ; '.'
000000000001a153         db  0xff ; '.'
000000000001a154         db  0xb4 ; '.'
000000000001a155         db  0x66 ; 'f'
000000000001a156         db  0xff ; '.'
000000000001a157         db  0xff ; '.'
000000000001a158         db  0xb4 ; '.'
000000000001a159         db  0x66 ; 'f'
000000000001a15a         db  0xff ; '.'
000000000001a15b         db  0xff ; '.'
000000000001a15c         db  0xb4 ; '.'
000000000001a15d         db  0x66 ; 'f'
000000000001a15e         db  0xff ; '.'
000000000001a15f         db  0xff ; '.'
000000000001a160         db  0xb4 ; '.'
000000000001a161         db  0x66 ; 'f'
000000000001a162         db  0xff ; '.'
000000000001a163         db  0xff ; '.'
000000000001a164         db  0xb4 ; '.'
000000000001a165         db  0x66 ; 'f'
000000000001a166         db  0xff ; '.'
000000000001a167         db  0xff ; '.'
000000000001a168         db  0xb4 ; '.'
000000000001a169         db  0x66 ; 'f'
000000000001a16a         db  0xff ; '.'
000000000001a16b         db  0xff ; '.'
000000000001a16c         db  0xb4 ; '.'
000000000001a16d         db  0x66 ; 'f'
000000000001a16e         db  0xff ; '.'
000000000001a16f         db  0xff ; '.'
000000000001a170         db  0xe2 ; '.'
000000000001a171         db  0x6b ; 'k'
000000000001a172         db  0xff ; '.'
000000000001a173         db  0xff ; '.'
000000000001a174         db  0xb4 ; '.'
000000000001a175         db  0x66 ; 'f'
000000000001a176         db  0xff ; '.'
000000000001a177         db  0xff ; '.'
000000000001a178         db  0xb4 ; '.'
000000000001a179         db  0x66 ; 'f'
000000000001a17a         db  0xff ; '.'
000000000001a17b         db  0xff ; '.'
000000000001a17c         db  0xb4 ; '.'
000000000001a17d         db  0x66 ; 'f'
000000000001a17e         db  0xff ; '.'
000000000001a17f         db  0xff ; '.'
000000000001a180         db  0xb4 ; '.'
000000000001a181         db  0x66 ; 'f'
000000000001a182         db  0xff ; '.'
000000000001a183         db  0xff ; '.'
000000000001a184         db  0xb4 ; '.'
000000000001a185         db  0x66 ; 'f'
000000000001a186         db  0xff ; '.'
000000000001a187         db  0xff ; '.'
000000000001a188         db  0xb4 ; '.'
000000000001a189         db  0x66 ; 'f'
000000000001a18a         db  0xff ; '.'
000000000001a18b         db  0xff ; '.'
000000000001a18c         db  0xb4 ; '.'
000000000001a18d         db  0x66 ; 'f'
000000000001a18e         db  0xff ; '.'
000000000001a18f         db  0xff ; '.'
000000000001a190         db  0xb4 ; '.'
000000000001a191         db  0x66 ; 'f'
000000000001a192         db  0xff ; '.'
000000000001a193         db  0xff ; '.'
000000000001a194         db  0xb4 ; '.'
000000000001a195         db  0x66 ; 'f'
000000000001a196         db  0xff ; '.'
000000000001a197         db  0xff ; '.'
000000000001a198         db  0xb4 ; '.'
000000000001a199         db  0x66 ; 'f'
000000000001a19a         db  0xff ; '.'
000000000001a19b         db  0xff ; '.'
000000000001a19c         db  0xb4 ; '.'
000000000001a19d         db  0x66 ; 'f'
000000000001a19e         db  0xff ; '.'
000000000001a19f         db  0xff ; '.'
000000000001a1a0         db  0xb4 ; '.'
000000000001a1a1         db  0x66 ; 'f'
000000000001a1a2         db  0xff ; '.'
000000000001a1a3         db  0xff ; '.'
000000000001a1a4         db  0xb4 ; '.'
000000000001a1a5         db  0x66 ; 'f'
000000000001a1a6         db  0xff ; '.'
000000000001a1a7         db  0xff ; '.'
000000000001a1a8         db  0xb4 ; '.'
000000000001a1a9         db  0x66 ; 'f'
000000000001a1aa         db  0xff ; '.'
000000000001a1ab         db  0xff ; '.'
000000000001a1ac         db  0xb4 ; '.'
000000000001a1ad         db  0x66 ; 'f'
000000000001a1ae         db  0xff ; '.'
000000000001a1af         db  0xff ; '.'
000000000001a1b0         db  0xb4 ; '.'
000000000001a1b1         db  0x66 ; 'f'
000000000001a1b2         db  0xff ; '.'
000000000001a1b3         db  0xff ; '.'
000000000001a1b4         db  0xb4 ; '.'
000000000001a1b5         db  0x66 ; 'f'
000000000001a1b6         db  0xff ; '.'
000000000001a1b7         db  0xff ; '.'
000000000001a1b8         db  0xb4 ; '.'
000000000001a1b9         db  0x66 ; 'f'
000000000001a1ba         db  0xff ; '.'
000000000001a1bb         db  0xff ; '.'
000000000001a1bc         db  0xb4 ; '.'
000000000001a1bd         db  0x66 ; 'f'
000000000001a1be         db  0xff ; '.'
000000000001a1bf         db  0xff ; '.'
000000000001a1c0         db  0xb4 ; '.'
000000000001a1c1         db  0x66 ; 'f'
000000000001a1c2         db  0xff ; '.'
000000000001a1c3         db  0xff ; '.'
000000000001a1c4         db  0xdb ; '.'
000000000001a1c5         db  0x72 ; 'r'
000000000001a1c6         db  0xff ; '.'
000000000001a1c7         db  0xff ; '.'
000000000001a1c8         db  0xb4 ; '.'
000000000001a1c9         db  0x66 ; 'f'
000000000001a1ca         db  0xff ; '.'
000000000001a1cb         db  0xff ; '.'
000000000001a1cc         db  0xb4 ; '.'
000000000001a1cd         db  0x66 ; 'f'
000000000001a1ce         db  0xff ; '.'
000000000001a1cf         db  0xff ; '.'
000000000001a1d0         db  0xb4 ; '.'
000000000001a1d1         db  0x66 ; 'f'
000000000001a1d2         db  0xff ; '.'
000000000001a1d3         db  0xff ; '.'
000000000001a1d4         db  0xb4 ; '.'
000000000001a1d5         db  0x66 ; 'f'
000000000001a1d6         db  0xff ; '.'
000000000001a1d7         db  0xff ; '.'
000000000001a1d8         db  0xb4 ; '.'
000000000001a1d9         db  0x66 ; 'f'
000000000001a1da         db  0xff ; '.'
000000000001a1db         db  0xff ; '.'
000000000001a1dc         db  0xb4 ; '.'
000000000001a1dd         db  0x66 ; 'f'
000000000001a1de         db  0xff ; '.'
000000000001a1df         db  0xff ; '.'
000000000001a1e0         db  0x6a ; 'j'
000000000001a1e1         db  0x69 ; 'i'
000000000001a1e2         db  0xff ; '.'
000000000001a1e3         db  0xff ; '.'
000000000001a1e4         db  0x42 ; 'B'
000000000001a1e5         db  0x75 ; 'u'
000000000001a1e6         db  0xff ; '.'
000000000001a1e7         db  0xff ; '.'
000000000001a1e8         db  0x5f ; '_'
000000000001a1e9         db  0x75 ; 'u'
000000000001a1ea         db  0xff ; '.'
000000000001a1eb         db  0xff ; '.'
000000000001a1ec         db  0xf9 ; '.'
000000000001a1ed         db  0x75 ; 'u'
000000000001a1ee         db  0xff ; '.'
000000000001a1ef         db  0xff ; '.'
000000000001a1f0         db  0xb4 ; '.'
000000000001a1f1         db  0x66 ; 'f'
000000000001a1f2         db  0xff ; '.'
000000000001a1f3         db  0xff ; '.'
000000000001a1f4         db  0x1b ; '.'
000000000001a1f5         db  0x76 ; 'v'
000000000001a1f6         db  0xff ; '.'
000000000001a1f7         db  0xff ; '.'
000000000001a1f8         db  0x01 ; '.'
000000000001a1f9         db  0x73 ; 's'
000000000001a1fa         db  0xff ; '.'
000000000001a1fb         db  0xff ; '.'
000000000001a1fc         db  0x96 ; '.'
000000000001a1fd         db  0x76 ; 'v'
000000000001a1fe         db  0xff ; '.'
000000000001a1ff         db  0xff ; '.'
000000000001a200         db  0x12 ; '.'
000000000001a201         db  0x77 ; 'w'
000000000001a202         db  0xff ; '.'
000000000001a203         db  0xff ; '.'
000000000001a204         db  0xb4 ; '.'
000000000001a205         db  0x66 ; 'f'
000000000001a206         db  0xff ; '.'
000000000001a207         db  0xff ; '.'
000000000001a208         db  0xb4 ; '.'
000000000001a209         db  0x66 ; 'f'
000000000001a20a         db  0xff ; '.'
000000000001a20b         db  0xff ; '.'
000000000001a20c         db  0xb4 ; '.'
000000000001a20d         db  0x66 ; 'f'
000000000001a20e         db  0xff ; '.'
000000000001a20f         db  0xff ; '.'
000000000001a210         db  0xae ; '.'
000000000001a211         db  0x76 ; 'v'
000000000001a212         db  0xff ; '.'
000000000001a213         db  0xff ; '.'
000000000001a214         db  0xc6 ; '.'
000000000001a215         db  0x76 ; 'v'
000000000001a216         db  0xff ; '.'
000000000001a217         db  0xff ; '.'
000000000001a218         db  0xb4 ; '.'
000000000001a219         db  0x66 ; 'f'
000000000001a21a         db  0xff ; '.'
000000000001a21b         db  0xff ; '.'
000000000001a21c         db  0xa7 ; '.'
000000000001a21d         db  0x6a ; 'j'
000000000001a21e         db  0xff ; '.'
000000000001a21f         db  0xff ; '.'
000000000001a220         db  0xb4 ; '.'
000000000001a221         db  0x66 ; 'f'
000000000001a222         db  0xff ; '.'
000000000001a223         db  0xff ; '.'
000000000001a224         db  0xc2 ; '.'
000000000001a225         db  0x6a ; 'j'
000000000001a226         db  0xff ; '.'
000000000001a227         db  0xff ; '.'
000000000001a228         db  0xaa ; '.'
000000000001a229         db  0x69 ; 'i'
000000000001a22a         db  0xff ; '.'
000000000001a22b         db  0xff ; '.'
000000000001a22c         db  0x6f ; 'o'
000000000001a22d         db  0x6c ; 'l'
000000000001a22e         db  0xff ; '.'
000000000001a22f         db  0xff ; '.'
000000000001a230         db  0x88 ; '.'
000000000001a231         db  0x6c ; 'l'
000000000001a232         db  0xff ; '.'
000000000001a233         db  0xff ; '.'
000000000001a234         db  0x01 ; '.'
000000000001a235         db  0x73 ; 's'
000000000001a236         db  0xff ; '.'
000000000001a237         db  0xff ; '.'
000000000001a238         db  0xfd ; '.'
000000000001a239         db  0x74 ; 't'
000000000001a23a         db  0xff ; '.'
000000000001a23b         db  0xff ; '.'
000000000001a23c         db  0x1c ; '.'
000000000001a23d         db  0x68 ; 'h'
000000000001a23e         db  0xff ; '.'
000000000001a23f         db  0xff ; '.'
000000000001a240         db  0xbb ; '.'
000000000001a241         db  0x6c ; 'l'
000000000001a242         db  0xff ; '.'
000000000001a243         db  0xff ; '.'
000000000001a244         db  0x14 ; '.'
000000000001a245         db  0x6d ; 'm'
000000000001a246         db  0xff ; '.'
000000000001a247         db  0xff ; '.'
000000000001a248         db  0xb4 ; '.'
000000000001a249         db  0x66 ; 'f'
000000000001a24a         db  0xff ; '.'
000000000001a24b         db  0xff ; '.'
000000000001a24c         db  0xb4 ; '.'
000000000001a24d         db  0x66 ; 'f'
000000000001a24e         db  0xff ; '.'
000000000001a24f         db  0xff ; '.'
000000000001a250         db  0xb4 ; '.'
000000000001a251         db  0x66 ; 'f'
000000000001a252         db  0xff ; '.'
000000000001a253         db  0xff ; '.'
000000000001a254         db  0xb4 ; '.'
000000000001a255         db  0x66 ; 'f'
000000000001a256         db  0xff ; '.'
000000000001a257         db  0xff ; '.'
000000000001a258         db  0xb4 ; '.'
000000000001a259         db  0x66 ; 'f'
000000000001a25a         db  0xff ; '.'
000000000001a25b         db  0xff ; '.'
000000000001a25c         db  0xb4 ; '.'
000000000001a25d         db  0x66 ; 'f'
000000000001a25e         db  0xff ; '.'
000000000001a25f         db  0xff ; '.'
000000000001a260         db  0x6a ; 'j'
000000000001a261         db  0x69 ; 'i'
000000000001a262         db  0xff ; '.'
000000000001a263         db  0xff ; '.'
000000000001a264         db  0x6b ; 'k'
000000000001a265         db  0x6e ; 'n'
000000000001a266         db  0xff ; '.'
000000000001a267         db  0xff ; '.'
000000000001a268         db  0x1c ; '.'
000000000001a269         db  0x68 ; 'h'
000000000001a26a         db  0xff ; '.'
000000000001a26b         db  0xff ; '.'
000000000001a26c         db  0x98 ; '.'
000000000001a26d         db  0x74 ; 't'
000000000001a26e         db  0xff ; '.'
000000000001a26f         db  0xff ; '.'
000000000001a270         db  0x4d ; 'M'
000000000001a271         db  0x78 ; 'x'
000000000001a272         db  0xff ; '.'
000000000001a273         db  0xff ; '.'
000000000001a274         db  0xb4 ; '.'
000000000001a275         db  0x66 ; 'f'
000000000001a276         db  0xff ; '.'
000000000001a277         db  0xff ; '.'
000000000001a278         db  0x01 ; '.'
000000000001a279         db  0x73 ; 's'
000000000001a27a         db  0xff ; '.'
000000000001a27b         db  0xff ; '.'
000000000001a27c         db  0x6b ; 'k'
000000000001a27d         db  0x6e ; 'n'
000000000001a27e         db  0xff ; '.'
000000000001a27f         db  0xff ; '.'
000000000001a280         db  0xb4 ; '.'
000000000001a281         db  0x66 ; 'f'
000000000001a282         db  0xff ; '.'
000000000001a283         db  0xff ; '.'
000000000001a284         db  0x0a ; '.'
000000000001a285         db  0x78 ; 'x'
000000000001a286         db  0xff ; '.'
000000000001a287         db  0xff ; '.'
000000000001a288         db  0x3a ; ':'
000000000001a289         db  0x78 ; 'x'
000000000001a28a         db  0xff ; '.'
000000000001a28b         db  0xff ; '.'
000000000001a28c         db  0x2a ; '*'
000000000001a28d         db  0x77 ; 'w'
000000000001a28e         db  0xff ; '.'
000000000001a28f         db  0xff ; '.'
000000000001a290         db  0x51 ; 'Q'
000000000001a291         db  0x77 ; 'w'
000000000001a292         db  0xff ; '.'
000000000001a293         db  0xff ; '.'
000000000001a294         db  0x81 ; '.'
000000000001a295         db  0x77 ; 'w'
000000000001a296         db  0xff ; '.'
000000000001a297         db  0xff ; '.'
000000000001a298         db  0xb4 ; '.'
000000000001a299         db  0x66 ; 'f'
000000000001a29a         db  0xff ; '.'
000000000001a29b         db  0xff ; '.'
000000000001a29c         db  0x03 ; '.'
000000000001a29d         db  0x78 ; 'x'
000000000001a29e         db  0xff ; '.'
000000000001a29f         db  0xff ; '.'
000000000001a2a0         db  0x64 ; 'd'
000000000001a2a1         db  0x6f ; 'o'
000000000001a2a2         db  0xff ; '.'
000000000001a2a3         db  0xff ; '.'
000000000001a2a4         db  0x26 ; '&'
000000000001a2a5         db  0x68 ; 'h'
000000000001a2a6         db  0xff ; '.'
000000000001a2a7         db  0xff ; '.'
000000000001a2a8         db  0xd4 ; '.'
000000000001a2a9         db  0x71 ; 'q'
000000000001a2aa         db  0xff ; '.'
000000000001a2ab         db  0xff ; '.'
000000000001a2ac         db  0x1f ; '.'
000000000001a2ad         db  0x6a ; 'j'
000000000001a2ae         db  0xff ; '.'
000000000001a2af         db  0xff ; '.'
000000000001a2b0         db  0xb0 ; '.'
000000000001a2b1         db  0x74 ; 't'
000000000001a2b2         db  0xff ; '.'
000000000001a2b3         db  0xff ; '.'
000000000001a2b4         db  0xb4 ; '.'
000000000001a2b5         db  0x66 ; 'f'
000000000001a2b6         db  0xff ; '.'
000000000001a2b7         db  0xff ; '.'
000000000001a2b8         db  0xe5 ; '.'
000000000001a2b9         db  0x74 ; 't'
000000000001a2ba         db  0xff ; '.'
000000000001a2bb         db  0xff ; '.'
000000000001a2bc         db  0x1c ; '.'
000000000001a2bd         db  0x68 ; 'h'
000000000001a2be         db  0xff ; '.'
000000000001a2bf         db  0xff ; '.'
000000000001a2c0         db  0x01 ; '.'
000000000001a2c1         db  0x6e ; 'n'
000000000001a2c2         db  0xff ; '.'
000000000001a2c3         db  0xff ; '.'
000000000001a2c4         db  0x90 ; '.'
000000000001a2c5         db  0x6e ; 'n'
000000000001a2c6         db  0xff ; '.'
000000000001a2c7         db  0xff ; '.'
                     aANullArgv0WasP:
000000000001a2c8         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
000000000001a300         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
000000000001a308         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
000000000001a309         db  0x74 ; 't'
000000000001a30a         db  0x2d ; '-'
000000000001a30b         db  0x00 ; '.'
000000000001a30c         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
000000000001a30d         db  0x80 ; '.'
000000000001a30e         db  0x98 ; '.'
000000000001a30f         db  0x00 ; '.'
000000000001a310         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
000000000001a311         db  0x80 ; '.'
000000000001a312         db  0x99 ; '.'
000000000001a313         db  0x00 ; '.'
000000000001a314         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
000000000001a315         db  0x07 ; '.'
000000000001a316         db  0x65 ; 'e'
000000000001a317         db  0x00 ; '.'
000000000001a318         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
000000000001a319         db  0xaf ; '.'
000000000001a31a         db  0x00 ; '.'
000000000001a31b         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_12920+1451, sub_12920+1493, sub_12920+2429
000000000001a31c         db  0x00 ; '.'
000000000001a31d         db  0x60 ; '`'                                         ; DATA XREF=sub_12920+1627, sub_12920+1654
000000000001a31e         db  0x00 ; '.'
                     aShell:
000000000001a31f         db         "shell", 0
                     aShellalways:
000000000001a325         db         "shell-always", 0
000000000001a332         db  0x73 ; 's'
000000000001a333         db  0x68 ; 'h'
000000000001a334         db  0x65 ; 'e'
000000000001a335         db  0x6c ; 'l'
000000000001a336         db  0x6c ; 'l'
000000000001a337         db  0x2d ; '-'
                     aEscape:
000000000001a338         db         "escape", 0
000000000001a33f         db  0x73 ; 's'
000000000001a340         db  0x68 ; 'h'
000000000001a341         db  0x65 ; 'e'
000000000001a342         db  0x6c ; 'l'
000000000001a343         db  0x6c ; 'l'
000000000001a344         db  0x2d ; '-'
000000000001a345         db  0x65 ; 'e'
000000000001a346         db  0x73 ; 's'
000000000001a347         db  0x63 ; 'c'
000000000001a348         db  0x61 ; 'a'
000000000001a349         db  0x70 ; 'p'
000000000001a34a         db  0x65 ; 'e'
000000000001a34b         db  0x2d ; '-'
                     aAlways:
000000000001a34c         db         "always", 0
                     aCmaybe:
000000000001a353         db         "c-maybe", 0
                     aClocale:
000000000001a35b         db         "clocale", 0
000000000001a363         align      128
                     switch_table_1a380:        // switch_table
000000000001a380         dd         quotearg_buffer_restyled.loc_1301a-switch_table_1a380, quotearg_buffer_restyled.loc_12273-switch_table_1a380, quotearg_buffer_restyled.loc_13248-switch_table_1a380, quotearg_buffer_restyled.loc_13054-switch_table_1a380 ; switch table used at 0x12271 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
000000000001a390         dd         quotearg_buffer_restyled.loc_12e44-switch_table_1a380, quotearg_buffer_restyled.loc_12ea0-switch_table_1a380, quotearg_buffer_restyled.loc_12ef5-switch_table_1a380, quotearg_buffer_restyled.loc_12f3a-switch_table_1a380
000000000001a3a0         dd         3 dup (quotearg_buffer_restyled.loc_12f74-switch_table_1a380)
000000000001a3ac         db  0x44 ; 'D'                                         ; DATA XREF=quotearg_buffer_restyled+477
000000000001a3ad         db  0x82 ; '.'
000000000001a3ae         db  0xff ; '.'
000000000001a3af         db  0xff ; '.'
000000000001a3b0         db  0x2c ; ','
000000000001a3b1         db  0x83 ; '.'
000000000001a3b2         db  0xff ; '.'
000000000001a3b3         db  0xff ; '.'
000000000001a3b4         db  0x2c ; ','
000000000001a3b5         db  0x83 ; '.'
000000000001a3b6         db  0xff ; '.'
000000000001a3b7         db  0xff ; '.'
000000000001a3b8         db  0x2c ; ','
000000000001a3b9         db  0x83 ; '.'
000000000001a3ba         db  0xff ; '.'
000000000001a3bb         db  0xff ; '.'
000000000001a3bc         db  0x2c ; ','
000000000001a3bd         db  0x83 ; '.'
000000000001a3be         db  0xff ; '.'
000000000001a3bf         db  0xff ; '.'
000000000001a3c0         db  0x2c ; ','
000000000001a3c1         db  0x83 ; '.'
000000000001a3c2         db  0xff ; '.'
000000000001a3c3         db  0xff ; '.'
000000000001a3c4         db  0x2c ; ','
000000000001a3c5         db  0x83 ; '.'
000000000001a3c6         db  0xff ; '.'
000000000001a3c7         db  0xff ; '.'
000000000001a3c8         db  0x84 ; '.'
000000000001a3c9         db  0x82 ; '.'
000000000001a3ca         db  0xff ; '.'
000000000001a3cb         db  0xff ; '.'
000000000001a3cc         db  0x8c ; '.'
000000000001a3cd         db  0x81 ; '.'
000000000001a3ce         db  0xff ; '.'
000000000001a3cf         db  0xff ; '.'
000000000001a3d0         db  0x4c ; 'L'
000000000001a3d1         db  0x81 ; '.'
000000000001a3d2         db  0xff ; '.'
000000000001a3d3         db  0xff ; '.'
000000000001a3d4         db  0x14 ; '.'
000000000001a3d5         db  0x83 ; '.'
000000000001a3d6         db  0xff ; '.'
000000000001a3d7         db  0xff ; '.'
000000000001a3d8         db  0x04 ; '.'
000000000001a3d9         db  0x83 ; '.'
000000000001a3da         db  0xff ; '.'
000000000001a3db         db  0xff ; '.'
000000000001a3dc         db  0xf4 ; '.'
000000000001a3dd         db  0x82 ; '.'
000000000001a3de         db  0xff ; '.'
000000000001a3df         db  0xff ; '.'
000000000001a3e0         db  0xe4 ; '.'
000000000001a3e1         db  0x82 ; '.'
000000000001a3e2         db  0xff ; '.'
000000000001a3e3         db  0xff ; '.'
000000000001a3e4         db  0x2c ; ','
000000000001a3e5         db  0x83 ; '.'
000000000001a3e6         db  0xff ; '.'
000000000001a3e7         db  0xff ; '.'
000000000001a3e8         db  0x2c ; ','
000000000001a3e9         db  0x83 ; '.'
000000000001a3ea         db  0xff ; '.'
000000000001a3eb         db  0xff ; '.'
000000000001a3ec         db  0x2c ; ','
000000000001a3ed         db  0x83 ; '.'
000000000001a3ee         db  0xff ; '.'
000000000001a3ef         db  0xff ; '.'
000000000001a3f0         db  0x2c ; ','
000000000001a3f1         db  0x83 ; '.'
000000000001a3f2         db  0xff ; '.'
000000000001a3f3         db  0xff ; '.'
000000000001a3f4         db  0x2c ; ','
000000000001a3f5         db  0x83 ; '.'
000000000001a3f6         db  0xff ; '.'
000000000001a3f7         db  0xff ; '.'
000000000001a3f8         db  0x2c ; ','
000000000001a3f9         db  0x83 ; '.'
000000000001a3fa         db  0xff ; '.'
000000000001a3fb         db  0xff ; '.'
000000000001a3fc         db  0x2c ; ','
000000000001a3fd         db  0x83 ; '.'
000000000001a3fe         db  0xff ; '.'
000000000001a3ff         db  0xff ; '.'
000000000001a400         db  0x2c ; ','
000000000001a401         db  0x83 ; '.'
000000000001a402         db  0xff ; '.'
000000000001a403         db  0xff ; '.'
000000000001a404         db  0x2c ; ','
000000000001a405         db  0x83 ; '.'
000000000001a406         db  0xff ; '.'
000000000001a407         db  0xff ; '.'
000000000001a408         db  0x2c ; ','
000000000001a409         db  0x83 ; '.'
000000000001a40a         db  0xff ; '.'
000000000001a40b         db  0xff ; '.'
000000000001a40c         db  0x2c ; ','
000000000001a40d         db  0x83 ; '.'
000000000001a40e         db  0xff ; '.'
000000000001a40f         db  0xff ; '.'
000000000001a410         db  0x2c ; ','
000000000001a411         db  0x83 ; '.'
000000000001a412         db  0xff ; '.'
000000000001a413         db  0xff ; '.'
000000000001a414         db  0x2c ; ','
000000000001a415         db  0x83 ; '.'
000000000001a416         db  0xff ; '.'
000000000001a417         db  0xff ; '.'
000000000001a418         db  0x2c ; ','
000000000001a419         db  0x83 ; '.'
000000000001a41a         db  0xff ; '.'
000000000001a41b         db  0xff ; '.'
000000000001a41c         db  0x2c ; ','
000000000001a41d         db  0x83 ; '.'
000000000001a41e         db  0xff ; '.'
000000000001a41f         db  0xff ; '.'
000000000001a420         db  0x2c ; ','
000000000001a421         db  0x83 ; '.'
000000000001a422         db  0xff ; '.'
000000000001a423         db  0xff ; '.'
000000000001a424         db  0x2c ; ','
000000000001a425         db  0x83 ; '.'
000000000001a426         db  0xff ; '.'
000000000001a427         db  0xff ; '.'
000000000001a428         db  0x2c ; ','
000000000001a429         db  0x83 ; '.'
000000000001a42a         db  0xff ; '.'
000000000001a42b         db  0xff ; '.'
000000000001a42c         db  0xd4 ; '.'
000000000001a42d         db  0x82 ; '.'
000000000001a42e         db  0xff ; '.'
000000000001a42f         db  0xff ; '.'
000000000001a430         db  0xc4 ; '.'
000000000001a431         db  0x82 ; '.'
000000000001a432         db  0xff ; '.'
000000000001a433         db  0xff ; '.'
000000000001a434         db  0xc4 ; '.'
000000000001a435         db  0x82 ; '.'
000000000001a436         db  0xff ; '.'
000000000001a437         db  0xff ; '.'
000000000001a438         db  0x94 ; '.'
000000000001a439         db  0x82 ; '.'
000000000001a43a         db  0xff ; '.'
000000000001a43b         db  0xff ; '.'
000000000001a43c         db  0xc4 ; '.'
000000000001a43d         db  0x82 ; '.'
000000000001a43e         db  0xff ; '.'
000000000001a43f         db  0xff ; '.'
000000000001a440         db  0x6c ; 'l'
000000000001a441         db  0x82 ; '.'
000000000001a442         db  0xff ; '.'
000000000001a443         db  0xff ; '.'
000000000001a444         db  0xc4 ; '.'
000000000001a445         db  0x82 ; '.'
000000000001a446         db  0xff ; '.'
000000000001a447         db  0xff ; '.'
000000000001a448         db  0x27 ; '''
000000000001a449         db  0x81 ; '.'
000000000001a44a         db  0xff ; '.'
000000000001a44b         db  0xff ; '.'
000000000001a44c         db  0xc4 ; '.'
000000000001a44d         db  0x82 ; '.'
000000000001a44e         db  0xff ; '.'
000000000001a44f         db  0xff ; '.'
000000000001a450         db  0xc4 ; '.'
000000000001a451         db  0x82 ; '.'
000000000001a452         db  0xff ; '.'
000000000001a453         db  0xff ; '.'
000000000001a454         db  0xc4 ; '.'
000000000001a455         db  0x82 ; '.'
000000000001a456         db  0xff ; '.'
000000000001a457         db  0xff ; '.'
000000000001a458         db  0x6c ; 'l'
000000000001a459         db  0x82 ; '.'
000000000001a45a         db  0xff ; '.'
000000000001a45b         db  0xff ; '.'
000000000001a45c         db  0x6c ; 'l'
000000000001a45d         db  0x82 ; '.'
000000000001a45e         db  0xff ; '.'
000000000001a45f         db  0xff ; '.'
000000000001a460         db  0x6c ; 'l'
000000000001a461         db  0x82 ; '.'
000000000001a462         db  0xff ; '.'
000000000001a463         db  0xff ; '.'
000000000001a464         db  0x6c ; 'l'
000000000001a465         db  0x82 ; '.'
000000000001a466         db  0xff ; '.'
000000000001a467         db  0xff ; '.'
000000000001a468         db  0x6c ; 'l'
000000000001a469         db  0x82 ; '.'
000000000001a46a         db  0xff ; '.'
000000000001a46b         db  0xff ; '.'
000000000001a46c         db  0x6c ; 'l'
000000000001a46d         db  0x82 ; '.'
000000000001a46e         db  0xff ; '.'
000000000001a46f         db  0xff ; '.'
000000000001a470         db  0x6c ; 'l'
000000000001a471         db  0x82 ; '.'
000000000001a472         db  0xff ; '.'
000000000001a473         db  0xff ; '.'
000000000001a474         db  0x6c ; 'l'
000000000001a475         db  0x82 ; '.'
000000000001a476         db  0xff ; '.'
000000000001a477         db  0xff ; '.'
000000000001a478         db  0x6c ; 'l'
000000000001a479         db  0x82 ; '.'
000000000001a47a         db  0xff ; '.'
000000000001a47b         db  0xff ; '.'
000000000001a47c         db  0x6c ; 'l'
000000000001a47d         db  0x82 ; '.'
000000000001a47e         db  0xff ; '.'
000000000001a47f         db  0xff ; '.'
000000000001a480         db  0x6c ; 'l'
000000000001a481         db  0x82 ; '.'
000000000001a482         db  0xff ; '.'
000000000001a483         db  0xff ; '.'
000000000001a484         db  0x6c ; 'l'
000000000001a485         db  0x82 ; '.'
000000000001a486         db  0xff ; '.'
000000000001a487         db  0xff ; '.'
000000000001a488         db  0x6c ; 'l'
000000000001a489         db  0x82 ; '.'
000000000001a48a         db  0xff ; '.'
000000000001a48b         db  0xff ; '.'
000000000001a48c         db  0x6c ; 'l'
000000000001a48d         db  0x82 ; '.'
000000000001a48e         db  0xff ; '.'
000000000001a48f         db  0xff ; '.'
000000000001a490         db  0x6c ; 'l'
000000000001a491         db  0x82 ; '.'
000000000001a492         db  0xff ; '.'
000000000001a493         db  0xff ; '.'
000000000001a494         db  0x6c ; 'l'
000000000001a495         db  0x82 ; '.'
000000000001a496         db  0xff ; '.'
000000000001a497         db  0xff ; '.'
000000000001a498         db  0xc4 ; '.'
000000000001a499         db  0x82 ; '.'
000000000001a49a         db  0xff ; '.'
000000000001a49b         db  0xff ; '.'
000000000001a49c         db  0xc4 ; '.'
000000000001a49d         db  0x82 ; '.'
000000000001a49e         db  0xff ; '.'
000000000001a49f         db  0xff ; '.'
000000000001a4a0         db  0xc4 ; '.'
000000000001a4a1         db  0x82 ; '.'
000000000001a4a2         db  0xff ; '.'
000000000001a4a3         db  0xff ; '.'
000000000001a4a4         db  0xc4 ; '.'
000000000001a4a5         db  0x82 ; '.'
000000000001a4a6         db  0xff ; '.'
000000000001a4a7         db  0xff ; '.'
000000000001a4a8         db  0xf7 ; '.'
000000000001a4a9         db  0x80 ; '.'
000000000001a4aa         db  0xff ; '.'
000000000001a4ab         db  0xff ; '.'
000000000001a4ac         db  0x2c ; ','
000000000001a4ad         db  0x83 ; '.'
000000000001a4ae         db  0xff ; '.'
000000000001a4af         db  0xff ; '.'
000000000001a4b0         db  0x6c ; 'l'
000000000001a4b1         db  0x82 ; '.'
000000000001a4b2         db  0xff ; '.'
000000000001a4b3         db  0xff ; '.'
000000000001a4b4         db  0x6c ; 'l'
000000000001a4b5         db  0x82 ; '.'
000000000001a4b6         db  0xff ; '.'
000000000001a4b7         db  0xff ; '.'
000000000001a4b8         db  0x6c ; 'l'
000000000001a4b9         db  0x82 ; '.'
000000000001a4ba         db  0xff ; '.'
000000000001a4bb         db  0xff ; '.'
000000000001a4bc         db  0x6c ; 'l'
000000000001a4bd         db  0x82 ; '.'
000000000001a4be         db  0xff ; '.'
000000000001a4bf         db  0xff ; '.'
000000000001a4c0         db  0x6c ; 'l'
000000000001a4c1         db  0x82 ; '.'
000000000001a4c2         db  0xff ; '.'
000000000001a4c3         db  0xff ; '.'
000000000001a4c4         db  0x6c ; 'l'
000000000001a4c5         db  0x82 ; '.'
000000000001a4c6         db  0xff ; '.'
000000000001a4c7         db  0xff ; '.'
000000000001a4c8         db  0x6c ; 'l'
000000000001a4c9         db  0x82 ; '.'
000000000001a4ca         db  0xff ; '.'
000000000001a4cb         db  0xff ; '.'
000000000001a4cc         db  0x6c ; 'l'
000000000001a4cd         db  0x82 ; '.'
000000000001a4ce         db  0xff ; '.'
000000000001a4cf         db  0xff ; '.'
000000000001a4d0         db  0x6c ; 'l'
000000000001a4d1         db  0x82 ; '.'
000000000001a4d2         db  0xff ; '.'
000000000001a4d3         db  0xff ; '.'
000000000001a4d4         db  0x6c ; 'l'
000000000001a4d5         db  0x82 ; '.'
000000000001a4d6         db  0xff ; '.'
000000000001a4d7         db  0xff ; '.'
000000000001a4d8         db  0x6c ; 'l'
000000000001a4d9         db  0x82 ; '.'
000000000001a4da         db  0xff ; '.'
000000000001a4db         db  0xff ; '.'
000000000001a4dc         db  0x6c ; 'l'
000000000001a4dd         db  0x82 ; '.'
000000000001a4de         db  0xff ; '.'
000000000001a4df         db  0xff ; '.'
000000000001a4e0         db  0x6c ; 'l'
000000000001a4e1         db  0x82 ; '.'
000000000001a4e2         db  0xff ; '.'
000000000001a4e3         db  0xff ; '.'
000000000001a4e4         db  0x6c ; 'l'
000000000001a4e5         db  0x82 ; '.'
000000000001a4e6         db  0xff ; '.'
000000000001a4e7         db  0xff ; '.'
000000000001a4e8         db  0x6c ; 'l'
000000000001a4e9         db  0x82 ; '.'
000000000001a4ea         db  0xff ; '.'
000000000001a4eb         db  0xff ; '.'
000000000001a4ec         db  0x6c ; 'l'
000000000001a4ed         db  0x82 ; '.'
000000000001a4ee         db  0xff ; '.'
000000000001a4ef         db  0xff ; '.'
000000000001a4f0         db  0x6c ; 'l'
000000000001a4f1         db  0x82 ; '.'
000000000001a4f2         db  0xff ; '.'
000000000001a4f3         db  0xff ; '.'
000000000001a4f4         db  0x6c ; 'l'
000000000001a4f5         db  0x82 ; '.'
000000000001a4f6         db  0xff ; '.'
000000000001a4f7         db  0xff ; '.'
000000000001a4f8         db  0x6c ; 'l'
000000000001a4f9         db  0x82 ; '.'
000000000001a4fa         db  0xff ; '.'
000000000001a4fb         db  0xff ; '.'
000000000001a4fc         db  0x6c ; 'l'
000000000001a4fd         db  0x82 ; '.'
000000000001a4fe         db  0xff ; '.'
000000000001a4ff         db  0xff ; '.'
000000000001a500         db  0x6c ; 'l'
000000000001a501         db  0x82 ; '.'
000000000001a502         db  0xff ; '.'
000000000001a503         db  0xff ; '.'
000000000001a504         db  0x6c ; 'l'
000000000001a505         db  0x82 ; '.'
000000000001a506         db  0xff ; '.'
000000000001a507         db  0xff ; '.'
000000000001a508         db  0x6c ; 'l'
000000000001a509         db  0x82 ; '.'
000000000001a50a         db  0xff ; '.'
000000000001a50b         db  0xff ; '.'
000000000001a50c         db  0x6c ; 'l'
000000000001a50d         db  0x82 ; '.'
000000000001a50e         db  0xff ; '.'
000000000001a50f         db  0xff ; '.'
000000000001a510         db  0x6c ; 'l'
000000000001a511         db  0x82 ; '.'
000000000001a512         db  0xff ; '.'
000000000001a513         db  0xff ; '.'
000000000001a514         db  0x6c ; 'l'
000000000001a515         db  0x82 ; '.'
000000000001a516         db  0xff ; '.'
000000000001a517         db  0xff ; '.'
000000000001a518         db  0xc4 ; '.'
000000000001a519         db  0x82 ; '.'
000000000001a51a         db  0xff ; '.'
000000000001a51b         db  0xff ; '.'
000000000001a51c         db  0x9c ; '.'
000000000001a51d         db  0x81 ; '.'
000000000001a51e         db  0xff ; '.'
000000000001a51f         db  0xff ; '.'
000000000001a520         db  0x6c ; 'l'
000000000001a521         db  0x82 ; '.'
000000000001a522         db  0xff ; '.'
000000000001a523         db  0xff ; '.'
000000000001a524         db  0xc4 ; '.'
000000000001a525         db  0x82 ; '.'
000000000001a526         db  0xff ; '.'
000000000001a527         db  0xff ; '.'
000000000001a528         db  0x6c ; 'l'
000000000001a529         db  0x82 ; '.'
000000000001a52a         db  0xff ; '.'
000000000001a52b         db  0xff ; '.'
000000000001a52c         db  0xc4 ; '.'
000000000001a52d         db  0x82 ; '.'
000000000001a52e         db  0xff ; '.'
000000000001a52f         db  0xff ; '.'
000000000001a530         db  0x6c ; 'l'
000000000001a531         db  0x82 ; '.'
000000000001a532         db  0xff ; '.'
000000000001a533         db  0xff ; '.'
000000000001a534         db  0x6c ; 'l'
000000000001a535         db  0x82 ; '.'
000000000001a536         db  0xff ; '.'
000000000001a537         db  0xff ; '.'
000000000001a538         db  0x6c ; 'l'
000000000001a539         db  0x82 ; '.'
000000000001a53a         db  0xff ; '.'
000000000001a53b         db  0xff ; '.'
000000000001a53c         db  0x6c ; 'l'
000000000001a53d         db  0x82 ; '.'
000000000001a53e         db  0xff ; '.'
000000000001a53f         db  0xff ; '.'
000000000001a540         db  0x6c ; 'l'
000000000001a541         db  0x82 ; '.'
000000000001a542         db  0xff ; '.'
000000000001a543         db  0xff ; '.'
000000000001a544         db  0x6c ; 'l'
000000000001a545         db  0x82 ; '.'
000000000001a546         db  0xff ; '.'
000000000001a547         db  0xff ; '.'
000000000001a548         db  0x6c ; 'l'
000000000001a549         db  0x82 ; '.'
000000000001a54a         db  0xff ; '.'
000000000001a54b         db  0xff ; '.'
000000000001a54c         db  0x6c ; 'l'
000000000001a54d         db  0x82 ; '.'
000000000001a54e         db  0xff ; '.'
000000000001a54f         db  0xff ; '.'
000000000001a550         db  0x6c ; 'l'
000000000001a551         db  0x82 ; '.'
000000000001a552         db  0xff ; '.'
000000000001a553         db  0xff ; '.'
000000000001a554         db  0x6c ; 'l'
000000000001a555         db  0x82 ; '.'
000000000001a556         db  0xff ; '.'
000000000001a557         db  0xff ; '.'
000000000001a558         db  0x6c ; 'l'
000000000001a559         db  0x82 ; '.'
000000000001a55a         db  0xff ; '.'
000000000001a55b         db  0xff ; '.'
000000000001a55c         db  0x6c ; 'l'
000000000001a55d         db  0x82 ; '.'
000000000001a55e         db  0xff ; '.'
000000000001a55f         db  0xff ; '.'
000000000001a560         db  0x6c ; 'l'
000000000001a561         db  0x82 ; '.'
000000000001a562         db  0xff ; '.'
000000000001a563         db  0xff ; '.'
000000000001a564         db  0x6c ; 'l'
000000000001a565         db  0x82 ; '.'
000000000001a566         db  0xff ; '.'
000000000001a567         db  0xff ; '.'
000000000001a568         db  0x6c ; 'l'
000000000001a569         db  0x82 ; '.'
000000000001a56a         db  0xff ; '.'
000000000001a56b         db  0xff ; '.'
000000000001a56c         db  0x6c ; 'l'
000000000001a56d         db  0x82 ; '.'
000000000001a56e         db  0xff ; '.'
000000000001a56f         db  0xff ; '.'
000000000001a570         db  0x6c ; 'l'
000000000001a571         db  0x82 ; '.'
000000000001a572         db  0xff ; '.'
000000000001a573         db  0xff ; '.'
000000000001a574         db  0x6c ; 'l'
000000000001a575         db  0x82 ; '.'
000000000001a576         db  0xff ; '.'
000000000001a577         db  0xff ; '.'
000000000001a578         db  0x6c ; 'l'
000000000001a579         db  0x82 ; '.'
000000000001a57a         db  0xff ; '.'
000000000001a57b         db  0xff ; '.'
000000000001a57c         db  0x6c ; 'l'
000000000001a57d         db  0x82 ; '.'
000000000001a57e         db  0xff ; '.'
000000000001a57f         db  0xff ; '.'
000000000001a580         db  0x6c ; 'l'
000000000001a581         db  0x82 ; '.'
000000000001a582         db  0xff ; '.'
000000000001a583         db  0xff ; '.'
000000000001a584         db  0x6c ; 'l'
000000000001a585         db  0x82 ; '.'
000000000001a586         db  0xff ; '.'
000000000001a587         db  0xff ; '.'
000000000001a588         db  0x6c ; 'l'
000000000001a589         db  0x82 ; '.'
000000000001a58a         db  0xff ; '.'
000000000001a58b         db  0xff ; '.'
000000000001a58c         db  0x6c ; 'l'
000000000001a58d         db  0x82 ; '.'
000000000001a58e         db  0xff ; '.'
000000000001a58f         db  0xff ; '.'
000000000001a590         db  0x6c ; 'l'
000000000001a591         db  0x82 ; '.'
000000000001a592         db  0xff ; '.'
000000000001a593         db  0xff ; '.'
000000000001a594         db  0x6c ; 'l'
000000000001a595         db  0x82 ; '.'
000000000001a596         db  0xff ; '.'
000000000001a597         db  0xff ; '.'
000000000001a598         db  0x27 ; '''
000000000001a599         db  0x80 ; '.'
000000000001a59a         db  0xff ; '.'
000000000001a59b         db  0xff ; '.'
000000000001a59c         db  0xc4 ; '.'
000000000001a59d         db  0x82 ; '.'
000000000001a59e         db  0xff ; '.'
000000000001a59f         db  0xff ; '.'
000000000001a5a0         db  0x27 ; '''
000000000001a5a1         db  0x80 ; '.'
000000000001a5a2         db  0xff ; '.'
000000000001a5a3         db  0xff ; '.'
000000000001a5a4         db  0x94 ; '.'
000000000001a5a5         db  0x82 ; '.'
000000000001a5a6         db  0xff ; '.'
000000000001a5a7         db  0xff ; '.'
000000000001a5a8         db  0x18 ; '.'                                         ; DATA XREF=sub_126c0+137
000000000001a5a9         db  0x82 ; '.'
000000000001a5aa         db  0xff ; '.'
000000000001a5ab         db  0xff ; '.'
000000000001a5ac         db  0x28 ; '('
000000000001a5ad         db  0x81 ; '.'
000000000001a5ae         db  0xff ; '.'
000000000001a5af         db  0xff ; '.'
000000000001a5b0         db  0x28 ; '('
000000000001a5b1         db  0x81 ; '.'
000000000001a5b2         db  0xff ; '.'
000000000001a5b3         db  0xff ; '.'
000000000001a5b4         db  0x28 ; '('
000000000001a5b5         db  0x81 ; '.'
000000000001a5b6         db  0xff ; '.'
000000000001a5b7         db  0xff ; '.'
000000000001a5b8         db  0x28 ; '('
000000000001a5b9         db  0x81 ; '.'
000000000001a5ba         db  0xff ; '.'
000000000001a5bb         db  0xff ; '.'
000000000001a5bc         db  0x28 ; '('
000000000001a5bd         db  0x81 ; '.'
000000000001a5be         db  0xff ; '.'
000000000001a5bf         db  0xff ; '.'
000000000001a5c0         db  0x28 ; '('
000000000001a5c1         db  0x81 ; '.'
000000000001a5c2         db  0xff ; '.'
000000000001a5c3         db  0xff ; '.'
000000000001a5c4         db  0x08 ; '.'
000000000001a5c5         db  0x82 ; '.'
000000000001a5c6         db  0xff ; '.'
000000000001a5c7         db  0xff ; '.'
000000000001a5c8         db  0x58 ; 'X'
000000000001a5c9         db  0x83 ; '.'
000000000001a5ca         db  0xff ; '.'
000000000001a5cb         db  0xff ; '.'
000000000001a5cc         db  0x40 ; '@'
000000000001a5cd         db  0x83 ; '.'
000000000001a5ce         db  0xff ; '.'
000000000001a5cf         db  0xff ; '.'
000000000001a5d0         db  0xf0 ; '.'
000000000001a5d1         db  0x81 ; '.'
000000000001a5d2         db  0xff ; '.'
000000000001a5d3         db  0xff ; '.'
000000000001a5d4         db  0x30 ; '0'
000000000001a5d5         db  0x83 ; '.'
000000000001a5d6         db  0xff ; '.'
000000000001a5d7         db  0xff ; '.'
000000000001a5d8         db  0xd8 ; '.'
000000000001a5d9         db  0x81 ; '.'
000000000001a5da         db  0xff ; '.'
000000000001a5db         db  0xff ; '.'
000000000001a5dc         db  0x18 ; '.'
000000000001a5dd         db  0x83 ; '.'
000000000001a5de         db  0xff ; '.'
000000000001a5df         db  0xff ; '.'
000000000001a5e0         db  0x28 ; '('
000000000001a5e1         db  0x81 ; '.'
000000000001a5e2         db  0xff ; '.'
000000000001a5e3         db  0xff ; '.'
000000000001a5e4         db  0x28 ; '('
000000000001a5e5         db  0x81 ; '.'
000000000001a5e6         db  0xff ; '.'
000000000001a5e7         db  0xff ; '.'
000000000001a5e8         db  0x28 ; '('
000000000001a5e9         db  0x81 ; '.'
000000000001a5ea         db  0xff ; '.'
000000000001a5eb         db  0xff ; '.'
000000000001a5ec         db  0x28 ; '('
000000000001a5ed         db  0x81 ; '.'
000000000001a5ee         db  0xff ; '.'
000000000001a5ef         db  0xff ; '.'
000000000001a5f0         db  0x28 ; '('
000000000001a5f1         db  0x81 ; '.'
000000000001a5f2         db  0xff ; '.'
000000000001a5f3         db  0xff ; '.'
000000000001a5f4         db  0x28 ; '('
000000000001a5f5         db  0x81 ; '.'
000000000001a5f6         db  0xff ; '.'
000000000001a5f7         db  0xff ; '.'
000000000001a5f8         db  0x28 ; '('
000000000001a5f9         db  0x81 ; '.'
000000000001a5fa         db  0xff ; '.'
000000000001a5fb         db  0xff ; '.'
000000000001a5fc         db  0x28 ; '('
000000000001a5fd         db  0x81 ; '.'
000000000001a5fe         db  0xff ; '.'
000000000001a5ff         db  0xff ; '.'
000000000001a600         db  0x28 ; '('
000000000001a601         db  0x81 ; '.'
000000000001a602         db  0xff ; '.'
000000000001a603         db  0xff ; '.'
000000000001a604         db  0x28 ; '('
000000000001a605         db  0x81 ; '.'
000000000001a606         db  0xff ; '.'
000000000001a607         db  0xff ; '.'
000000000001a608         db  0x28 ; '('
000000000001a609         db  0x81 ; '.'
000000000001a60a         db  0xff ; '.'
000000000001a60b         db  0xff ; '.'
000000000001a60c         db  0x28 ; '('
000000000001a60d         db  0x81 ; '.'
000000000001a60e         db  0xff ; '.'
000000000001a60f         db  0xff ; '.'
000000000001a610         db  0x28 ; '('
000000000001a611         db  0x81 ; '.'
000000000001a612         db  0xff ; '.'
000000000001a613         db  0xff ; '.'
000000000001a614         db  0x28 ; '('
000000000001a615         db  0x81 ; '.'
000000000001a616         db  0xff ; '.'
000000000001a617         db  0xff ; '.'
000000000001a618         db  0x28 ; '('
000000000001a619         db  0x81 ; '.'
000000000001a61a         db  0xff ; '.'
000000000001a61b         db  0xff ; '.'
000000000001a61c         db  0x28 ; '('
000000000001a61d         db  0x81 ; '.'
000000000001a61e         db  0xff ; '.'
000000000001a61f         db  0xff ; '.'
000000000001a620         db  0x28 ; '('
000000000001a621         db  0x81 ; '.'
000000000001a622         db  0xff ; '.'
000000000001a623         db  0xff ; '.'
000000000001a624         db  0x28 ; '('
000000000001a625         db  0x81 ; '.'
000000000001a626         db  0xff ; '.'
000000000001a627         db  0xff ; '.'
000000000001a628         db  0x00 ; '.'
000000000001a629         db  0x83 ; '.'
000000000001a62a         db  0xff ; '.'
000000000001a62b         db  0xff ; '.'
000000000001a62c         db  0xe8 ; '.'
000000000001a62d         db  0x82 ; '.'
000000000001a62e         db  0xff ; '.'
000000000001a62f         db  0xff ; '.'
000000000001a630         db  0xe8 ; '.'
000000000001a631         db  0x82 ; '.'
000000000001a632         db  0xff ; '.'
000000000001a633         db  0xff ; '.'
000000000001a634         db  0xd0 ; '.'
000000000001a635         db  0x82 ; '.'
000000000001a636         db  0xff ; '.'
000000000001a637         db  0xff ; '.'
000000000001a638         db  0xe8 ; '.'
000000000001a639         db  0x82 ; '.'
000000000001a63a         db  0xff ; '.'
000000000001a63b         db  0xff ; '.'
000000000001a63c         db  0xb8 ; '.'
000000000001a63d         db  0x82 ; '.'
000000000001a63e         db  0xff ; '.'
000000000001a63f         db  0xff ; '.'
000000000001a640         db  0xe8 ; '.'
000000000001a641         db  0x82 ; '.'
000000000001a642         db  0xff ; '.'
000000000001a643         db  0xff ; '.'
000000000001a644         db  0x28 ; '('
000000000001a645         db  0x7f ; '.'
000000000001a646         db  0xff ; '.'
000000000001a647         db  0xff ; '.'
000000000001a648         db  0xe8 ; '.'
000000000001a649         db  0x82 ; '.'
000000000001a64a         db  0xff ; '.'
000000000001a64b         db  0xff ; '.'
000000000001a64c         db  0xe8 ; '.'
000000000001a64d         db  0x82 ; '.'
000000000001a64e         db  0xff ; '.'
000000000001a64f         db  0xff ; '.'
000000000001a650         db  0xe8 ; '.'
000000000001a651         db  0x82 ; '.'
000000000001a652         db  0xff ; '.'
000000000001a653         db  0xff ; '.'
000000000001a654         db  0xb8 ; '.'
000000000001a655         db  0x82 ; '.'
000000000001a656         db  0xff ; '.'
000000000001a657         db  0xff ; '.'
000000000001a658         db  0xb8 ; '.'
000000000001a659         db  0x82 ; '.'
000000000001a65a         db  0xff ; '.'
000000000001a65b         db  0xff ; '.'
000000000001a65c         db  0xb8 ; '.'
000000000001a65d         db  0x82 ; '.'
000000000001a65e         db  0xff ; '.'
000000000001a65f         db  0xff ; '.'
000000000001a660         db  0xb8 ; '.'
000000000001a661         db  0x82 ; '.'
000000000001a662         db  0xff ; '.'
000000000001a663         db  0xff ; '.'
000000000001a664         db  0xb8 ; '.'
000000000001a665         db  0x82 ; '.'
000000000001a666         db  0xff ; '.'
000000000001a667         db  0xff ; '.'
000000000001a668         db  0xb8 ; '.'
000000000001a669         db  0x82 ; '.'
000000000001a66a         db  0xff ; '.'
000000000001a66b         db  0xff ; '.'
000000000001a66c         db  0xb8 ; '.'
000000000001a66d         db  0x82 ; '.'
000000000001a66e         db  0xff ; '.'
000000000001a66f         db  0xff ; '.'
000000000001a670         db  0xb8 ; '.'
000000000001a671         db  0x82 ; '.'
000000000001a672         db  0xff ; '.'
000000000001a673         db  0xff ; '.'
000000000001a674         db  0xb8 ; '.'
000000000001a675         db  0x82 ; '.'
000000000001a676         db  0xff ; '.'
000000000001a677         db  0xff ; '.'
000000000001a678         db  0xb8 ; '.'
000000000001a679         db  0x82 ; '.'
000000000001a67a         db  0xff ; '.'
000000000001a67b         db  0xff ; '.'
000000000001a67c         db  0xb8 ; '.'
000000000001a67d         db  0x82 ; '.'
000000000001a67e         db  0xff ; '.'
000000000001a67f         db  0xff ; '.'
000000000001a680         db  0xb8 ; '.'
000000000001a681         db  0x82 ; '.'
000000000001a682         db  0xff ; '.'
000000000001a683         db  0xff ; '.'
000000000001a684         db  0xb8 ; '.'
000000000001a685         db  0x82 ; '.'
000000000001a686         db  0xff ; '.'
000000000001a687         db  0xff ; '.'
000000000001a688         db  0xb8 ; '.'
000000000001a689         db  0x82 ; '.'
000000000001a68a         db  0xff ; '.'
000000000001a68b         db  0xff ; '.'
000000000001a68c         db  0xb8 ; '.'
000000000001a68d         db  0x82 ; '.'
000000000001a68e         db  0xff ; '.'
000000000001a68f         db  0xff ; '.'
000000000001a690         db  0xb8 ; '.'
000000000001a691         db  0x82 ; '.'
000000000001a692         db  0xff ; '.'
000000000001a693         db  0xff ; '.'
000000000001a694         db  0xe8 ; '.'
000000000001a695         db  0x82 ; '.'
000000000001a696         db  0xff ; '.'
000000000001a697         db  0xff ; '.'
000000000001a698         db  0xe8 ; '.'
000000000001a699         db  0x82 ; '.'
000000000001a69a         db  0xff ; '.'
000000000001a69b         db  0xff ; '.'
000000000001a69c         db  0xe8 ; '.'
000000000001a69d         db  0x82 ; '.'
000000000001a69e         db  0xff ; '.'
000000000001a69f         db  0xff ; '.'
000000000001a6a0         db  0xe8 ; '.'
000000000001a6a1         db  0x82 ; '.'
000000000001a6a2         db  0xff ; '.'
000000000001a6a3         db  0xff ; '.'
000000000001a6a4         db  0xf8 ; '.'
000000000001a6a5         db  0x7e ; '~'
000000000001a6a6         db  0xff ; '.'
000000000001a6a7         db  0xff ; '.'
000000000001a6a8         db  0x28 ; '('
000000000001a6a9         db  0x81 ; '.'
000000000001a6aa         db  0xff ; '.'
000000000001a6ab         db  0xff ; '.'
000000000001a6ac         db  0xb8 ; '.'
000000000001a6ad         db  0x82 ; '.'
000000000001a6ae         db  0xff ; '.'
000000000001a6af         db  0xff ; '.'
000000000001a6b0         db  0xb8 ; '.'
000000000001a6b1         db  0x82 ; '.'
000000000001a6b2         db  0xff ; '.'
000000000001a6b3         db  0xff ; '.'
000000000001a6b4         db  0xb8 ; '.'
000000000001a6b5         db  0x82 ; '.'
000000000001a6b6         db  0xff ; '.'
000000000001a6b7         db  0xff ; '.'
000000000001a6b8         db  0xb8 ; '.'
000000000001a6b9         db  0x82 ; '.'
000000000001a6ba         db  0xff ; '.'
000000000001a6bb         db  0xff ; '.'
000000000001a6bc         db  0xb8 ; '.'
000000000001a6bd         db  0x82 ; '.'
000000000001a6be         db  0xff ; '.'
000000000001a6bf         db  0xff ; '.'
000000000001a6c0         db  0xb8 ; '.'
000000000001a6c1         db  0x82 ; '.'
000000000001a6c2         db  0xff ; '.'
000000000001a6c3         db  0xff ; '.'
000000000001a6c4         db  0xb8 ; '.'
000000000001a6c5         db  0x82 ; '.'
000000000001a6c6         db  0xff ; '.'
000000000001a6c7         db  0xff ; '.'
000000000001a6c8         db  0xb8 ; '.'
000000000001a6c9         db  0x82 ; '.'
000000000001a6ca         db  0xff ; '.'
000000000001a6cb         db  0xff ; '.'
000000000001a6cc         db  0xb8 ; '.'
000000000001a6cd         db  0x82 ; '.'
000000000001a6ce         db  0xff ; '.'
000000000001a6cf         db  0xff ; '.'
000000000001a6d0         db  0xb8 ; '.'
000000000001a6d1         db  0x82 ; '.'
000000000001a6d2         db  0xff ; '.'
000000000001a6d3         db  0xff ; '.'
000000000001a6d4         db  0xb8 ; '.'
000000000001a6d5         db  0x82 ; '.'
000000000001a6d6         db  0xff ; '.'
000000000001a6d7         db  0xff ; '.'
000000000001a6d8         db  0xb8 ; '.'
000000000001a6d9         db  0x82 ; '.'
000000000001a6da         db  0xff ; '.'
000000000001a6db         db  0xff ; '.'
000000000001a6dc         db  0xb8 ; '.'
000000000001a6dd         db  0x82 ; '.'
000000000001a6de         db  0xff ; '.'
000000000001a6df         db  0xff ; '.'
000000000001a6e0         db  0xb8 ; '.'
000000000001a6e1         db  0x82 ; '.'
000000000001a6e2         db  0xff ; '.'
000000000001a6e3         db  0xff ; '.'
000000000001a6e4         db  0xb8 ; '.'
000000000001a6e5         db  0x82 ; '.'
000000000001a6e6         db  0xff ; '.'
000000000001a6e7         db  0xff ; '.'
000000000001a6e8         db  0xb8 ; '.'
000000000001a6e9         db  0x82 ; '.'
000000000001a6ea         db  0xff ; '.'
000000000001a6eb         db  0xff ; '.'
000000000001a6ec         db  0xb8 ; '.'
000000000001a6ed         db  0x82 ; '.'
000000000001a6ee         db  0xff ; '.'
000000000001a6ef         db  0xff ; '.'
000000000001a6f0         db  0xb8 ; '.'
000000000001a6f1         db  0x82 ; '.'
000000000001a6f2         db  0xff ; '.'
000000000001a6f3         db  0xff ; '.'
000000000001a6f4         db  0xb8 ; '.'
000000000001a6f5         db  0x82 ; '.'
000000000001a6f6         db  0xff ; '.'
000000000001a6f7         db  0xff ; '.'
000000000001a6f8         db  0xb8 ; '.'
000000000001a6f9         db  0x82 ; '.'
000000000001a6fa         db  0xff ; '.'
000000000001a6fb         db  0xff ; '.'
000000000001a6fc         db  0xb8 ; '.'
000000000001a6fd         db  0x82 ; '.'
000000000001a6fe         db  0xff ; '.'
000000000001a6ff         db  0xff ; '.'
000000000001a700         db  0xb8 ; '.'
000000000001a701         db  0x82 ; '.'
000000000001a702         db  0xff ; '.'
000000000001a703         db  0xff ; '.'
000000000001a704         db  0xb8 ; '.'
000000000001a705         db  0x82 ; '.'
000000000001a706         db  0xff ; '.'
000000000001a707         db  0xff ; '.'
000000000001a708         db  0xb8 ; '.'
000000000001a709         db  0x82 ; '.'
000000000001a70a         db  0xff ; '.'
000000000001a70b         db  0xff ; '.'
000000000001a70c         db  0xb8 ; '.'
000000000001a70d         db  0x82 ; '.'
000000000001a70e         db  0xff ; '.'
000000000001a70f         db  0xff ; '.'
000000000001a710         db  0xb8 ; '.'
000000000001a711         db  0x82 ; '.'
000000000001a712         db  0xff ; '.'
000000000001a713         db  0xff ; '.'
000000000001a714         db  0xe8 ; '.'
000000000001a715         db  0x82 ; '.'
000000000001a716         db  0xff ; '.'
000000000001a717         db  0xff ; '.'
000000000001a718         db  0xb8 ; '.'
000000000001a719         db  0x81 ; '.'
000000000001a71a         db  0xff ; '.'
000000000001a71b         db  0xff ; '.'
000000000001a71c         db  0xb8 ; '.'
000000000001a71d         db  0x82 ; '.'
000000000001a71e         db  0xff ; '.'
000000000001a71f         db  0xff ; '.'
000000000001a720         db  0xe8 ; '.'
000000000001a721         db  0x82 ; '.'
000000000001a722         db  0xff ; '.'
000000000001a723         db  0xff ; '.'
000000000001a724         db  0xb8 ; '.'
000000000001a725         db  0x82 ; '.'
000000000001a726         db  0xff ; '.'
000000000001a727         db  0xff ; '.'
000000000001a728         db  0xe8 ; '.'
000000000001a729         db  0x82 ; '.'
000000000001a72a         db  0xff ; '.'
000000000001a72b         db  0xff ; '.'
000000000001a72c         db  0xb8 ; '.'
000000000001a72d         db  0x82 ; '.'
000000000001a72e         db  0xff ; '.'
000000000001a72f         db  0xff ; '.'
000000000001a730         db  0xb8 ; '.'
000000000001a731         db  0x82 ; '.'
000000000001a732         db  0xff ; '.'
000000000001a733         db  0xff ; '.'
000000000001a734         db  0xb8 ; '.'
000000000001a735         db  0x82 ; '.'
000000000001a736         db  0xff ; '.'
000000000001a737         db  0xff ; '.'
000000000001a738         db  0xb8 ; '.'
000000000001a739         db  0x82 ; '.'
000000000001a73a         db  0xff ; '.'
000000000001a73b         db  0xff ; '.'
000000000001a73c         db  0xb8 ; '.'
000000000001a73d         db  0x82 ; '.'
000000000001a73e         db  0xff ; '.'
000000000001a73f         db  0xff ; '.'
000000000001a740         db  0xb8 ; '.'
000000000001a741         db  0x82 ; '.'
000000000001a742         db  0xff ; '.'
000000000001a743         db  0xff ; '.'
000000000001a744         db  0xb8 ; '.'
000000000001a745         db  0x82 ; '.'
000000000001a746         db  0xff ; '.'
000000000001a747         db  0xff ; '.'
000000000001a748         db  0xb8 ; '.'
000000000001a749         db  0x82 ; '.'
000000000001a74a         db  0xff ; '.'
000000000001a74b         db  0xff ; '.'
000000000001a74c         db  0xb8 ; '.'
000000000001a74d         db  0x82 ; '.'
000000000001a74e         db  0xff ; '.'
000000000001a74f         db  0xff ; '.'
000000000001a750         db  0xb8 ; '.'
000000000001a751         db  0x82 ; '.'
000000000001a752         db  0xff ; '.'
000000000001a753         db  0xff ; '.'
000000000001a754         db  0xb8 ; '.'
000000000001a755         db  0x82 ; '.'
000000000001a756         db  0xff ; '.'
000000000001a757         db  0xff ; '.'
000000000001a758         db  0xb8 ; '.'
000000000001a759         db  0x82 ; '.'
000000000001a75a         db  0xff ; '.'
000000000001a75b         db  0xff ; '.'
000000000001a75c         db  0xb8 ; '.'
000000000001a75d         db  0x82 ; '.'
000000000001a75e         db  0xff ; '.'
000000000001a75f         db  0xff ; '.'
000000000001a760         db  0xb8 ; '.'
000000000001a761         db  0x82 ; '.'
000000000001a762         db  0xff ; '.'
000000000001a763         db  0xff ; '.'
000000000001a764         db  0xb8 ; '.'
000000000001a765         db  0x82 ; '.'
000000000001a766         db  0xff ; '.'
000000000001a767         db  0xff ; '.'
000000000001a768         db  0xb8 ; '.'
000000000001a769         db  0x82 ; '.'
000000000001a76a         db  0xff ; '.'
000000000001a76b         db  0xff ; '.'
000000000001a76c         db  0xb8 ; '.'
000000000001a76d         db  0x82 ; '.'
000000000001a76e         db  0xff ; '.'
000000000001a76f         db  0xff ; '.'
000000000001a770         db  0xb8 ; '.'
000000000001a771         db  0x82 ; '.'
000000000001a772         db  0xff ; '.'
000000000001a773         db  0xff ; '.'
000000000001a774         db  0xb8 ; '.'
000000000001a775         db  0x82 ; '.'
000000000001a776         db  0xff ; '.'
000000000001a777         db  0xff ; '.'
000000000001a778         db  0xb8 ; '.'
000000000001a779         db  0x82 ; '.'
000000000001a77a         db  0xff ; '.'
000000000001a77b         db  0xff ; '.'
000000000001a77c         db  0xb8 ; '.'
000000000001a77d         db  0x82 ; '.'
000000000001a77e         db  0xff ; '.'
000000000001a77f         db  0xff ; '.'
000000000001a780         db  0xb8 ; '.'
000000000001a781         db  0x82 ; '.'
000000000001a782         db  0xff ; '.'
000000000001a783         db  0xff ; '.'
000000000001a784         db  0xb8 ; '.'
000000000001a785         db  0x82 ; '.'
000000000001a786         db  0xff ; '.'
000000000001a787         db  0xff ; '.'
000000000001a788         db  0xb8 ; '.'
000000000001a789         db  0x82 ; '.'
000000000001a78a         db  0xff ; '.'
000000000001a78b         db  0xff ; '.'
000000000001a78c         db  0xb8 ; '.'
000000000001a78d         db  0x82 ; '.'
000000000001a78e         db  0xff ; '.'
000000000001a78f         db  0xff ; '.'
000000000001a790         db  0xb8 ; '.'
000000000001a791         db  0x82 ; '.'
000000000001a792         db  0xff ; '.'
000000000001a793         db  0xff ; '.'
000000000001a794         db  0x28 ; '('
000000000001a795         db  0x7e ; '~'
000000000001a796         db  0xff ; '.'
000000000001a797         db  0xff ; '.'
000000000001a798         db  0xe8 ; '.'
000000000001a799         db  0x82 ; '.'
000000000001a79a         db  0xff ; '.'
000000000001a79b         db  0xff ; '.'
000000000001a79c         db  0x28 ; '('
000000000001a79d         db  0x7e ; '~'
000000000001a79e         db  0xff ; '.'
000000000001a79f         db  0xff ; '.'
000000000001a7a0         db  0xd0 ; '.'
000000000001a7a1         db  0x82 ; '.'
000000000001a7a2         db  0xff ; '.'
000000000001a7a3         db  0xff ; '.'
000000000001a7a4         db  0x00 ; '.'
000000000001a7a5         db  0x00 ; '.'
000000000001a7a6         db  0x00 ; '.'
000000000001a7a7         db  0x00 ; '.'
000000000001a7a8         db  0x00 ; '.'
000000000001a7a9         db  0x00 ; '.'
000000000001a7aa         db  0x00 ; '.'
000000000001a7ab         db  0x00 ; '.'
000000000001a7ac         db  0x00 ; '.'
000000000001a7ad         db  0x00 ; '.'
000000000001a7ae         db  0x00 ; '.'
000000000001a7af         db  0x00 ; '.'
000000000001a7b0         db  0x00 ; '.'
000000000001a7b1         db  0x00 ; '.'
000000000001a7b2         db  0x00 ; '.'
000000000001a7b3         db  0x00 ; '.'
000000000001a7b4         db  0x00 ; '.'
000000000001a7b5         db  0x00 ; '.'
000000000001a7b6         db  0x00 ; '.'
000000000001a7b7         db  0x00 ; '.'
000000000001a7b8         db  0x00 ; '.'
000000000001a7b9         db  0x00 ; '.'
000000000001a7ba         db  0x00 ; '.'
000000000001a7bb         db  0x00 ; '.'
000000000001a7bc         db  0x00 ; '.'
000000000001a7bd         db  0x00 ; '.'
000000000001a7be         db  0x00 ; '.'
000000000001a7bf         db  0x00 ; '.'
                     quoting_style_vals:
000000000001a7c0         db  0x00 ; '.'                                         ; DATA XREF=main+373, main+408, main+1676, main+1708
000000000001a7c1         db  0x00 ; '.'
000000000001a7c2         db  0x00 ; '.'
000000000001a7c3         db  0x00 ; '.'
000000000001a7c4         db  0x01 ; '.'
000000000001a7c5         db  0x00 ; '.'
000000000001a7c6         db  0x00 ; '.'
000000000001a7c7         db  0x00 ; '.'
000000000001a7c8         db  0x02 ; '.'
000000000001a7c9         db  0x00 ; '.'
000000000001a7ca         db  0x00 ; '.'
000000000001a7cb         db  0x00 ; '.'
000000000001a7cc         db  0x03 ; '.'
000000000001a7cd         db  0x00 ; '.'
000000000001a7ce         db  0x00 ; '.'
000000000001a7cf         db  0x00 ; '.'
000000000001a7d0         db  0x04 ; '.'
000000000001a7d1         db  0x00 ; '.'
000000000001a7d2         db  0x00 ; '.'
000000000001a7d3         db  0x00 ; '.'
000000000001a7d4         db  0x05 ; '.'
000000000001a7d5         db  0x00 ; '.'
000000000001a7d6         db  0x00 ; '.'
000000000001a7d7         db  0x00 ; '.'
000000000001a7d8         db  0x06 ; '.'
000000000001a7d9         db  0x00 ; '.'
000000000001a7da         db  0x00 ; '.'
000000000001a7db         db  0x00 ; '.'
000000000001a7dc         db  0x07 ; '.'
000000000001a7dd         db  0x00 ; '.'
000000000001a7de         db  0x00 ; '.'
000000000001a7df         db  0x00 ; '.'
000000000001a7e0         db  0x08 ; '.'
000000000001a7e1         db  0x00 ; '.'
000000000001a7e2         db  0x00 ; '.'
000000000001a7e3         db  0x00 ; '.'
000000000001a7e4         db  0x09 ; '.'
000000000001a7e5         db  0x00 ; '.'
000000000001a7e6         db  0x00 ; '.'
000000000001a7e7         db  0x00 ; '.'
                     aSSSn:
000000000001a7e8         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
000000000001a7f4         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
000000000001a7fb         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
000000000001a7fc         db  0x43 ; 'C'
000000000001a7fd         db  0x29 ; ')'
000000000001a7fe         db  0x00 ; '.'
                     aWrittenBySn:
000000000001a7ff         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
000000000001a80f         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
000000000001a826         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
000000000001a842         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
000000000001a857         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
000000000001a86d         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
000000000001a881         align      8
                     aNlicenseGplv3G:
000000000001a888         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
000000000001a954         align      8
                     aWrittenBySSSna:
000000000001a958         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_1a978:        // aWrittenBySSSns
000000000001a978         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
000000000001a99c         align      32
                     aWrittenBySSSns_1a9a0:        // aWrittenBySSSns
000000000001a9a0         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_1a9c8:        // aWrittenBySSSns
000000000001a9c8         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
000000000001a9f4         align      8
                     aWrittenBySSSns_1a9f8:        // aWrittenBySSSns
000000000001a9f8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
000000000001aa28         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
000000000001aa5c         align      32
                     aWrittenBySSSns_1aa60:        // aWrittenBySSSns
000000000001aa60         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
000000000001aa9c         align      32
                     aGeneralHelpUsi:
000000000001aaa0         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
000000000001aae1         align      4
                     switch_table_1aae4:        // switch_table
000000000001aae4         dd         version_etc_arn.loc_14096-switch_table_1aae4, version_etc_arn.loc_14128-switch_table_1aae4, version_etc_arn.loc_14168-switch_table_1aae4, version_etc_arn.loc_141b0-switch_table_1aae4 ; switch table used at 0x14014 containing 10 entries, DATA XREF=version_etc_arn+150
000000000001aaf4         dd         version_etc_arn.loc_14200-switch_table_1aae4, version_etc_arn.loc_14258-switch_table_1aae4, version_etc_arn.loc_14288-switch_table_1aae4, version_etc_arn.loc_142f0-switch_table_1aae4
000000000001ab04         dd         version_etc_arn.loc_14020-switch_table_1aae4, version_etc_arn.loc_140d0-switch_table_1aae4
000000000001ab0c         align      32
                     version_etc_copyright:
000000000001ab20         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
000000000001ab4f         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die, print_and_abort
                     aCoreutils831li:
000000000001ab60         db         "../coreutils-8.31/lib/xstrtol.c", 0        ; DATA XREF=xstrtoul+908, xstrtoumax+908
                     a0StrtolbaseStr:
000000000001ab80         db         "0 <= strtol_base && strtol_base <= 36", 0  ; DATA XREF=xstrtoul+915, xstrtoumax+915
000000000001aba6         align      8
                     switch_table_1aba8:        // switch_table
000000000001aba8         dd         xstrtoul.loc_14d86-switch_table_1aba8, 2 dup (xstrtoul.loc_14c7c-switch_table_1aba8), xstrtoul.loc_14d63-switch_table_1aba8, xstrtoul.loc_14c7c-switch_table_1aba8 ; switch table used at 0x14c36 containing 54 entries, DATA XREF=xstrtoul+452
000000000001abbc         dd         xstrtoul.loc_14d9c-switch_table_1aba8, 3 dup (xstrtoul.loc_14c7c-switch_table_1aba8), xstrtoul.loc_14d1f-switch_table_1aba8, xstrtoul.loc_14c7c-switch_table_1aba8
000000000001abd4         dd         xstrtoul.loc_14c38-switch_table_1aba8, 2 dup (xstrtoul.loc_14c7c-switch_table_1aba8), xstrtoul.loc_14d40-switch_table_1aba8, 3 dup (xstrtoul.loc_14c7c-switch_table_1aba8)
000000000001abf0         dd         xstrtoul.loc_14cff-switch_table_1aba8, 4 dup (xstrtoul.loc_14c7c-switch_table_1aba8), xstrtoul.loc_14cda-switch_table_1aba8, xstrtoul.loc_14cb4-switch_table_1aba8
000000000001ac0c         dd         7 dup (xstrtoul.loc_14c7c-switch_table_1aba8), xstrtoul.loc_14c9d-switch_table_1aba8, xstrtoul.loc_14c60-switch_table_1aba8, 3 dup (xstrtoul.loc_14c7c-switch_table_1aba8)
000000000001ac3c         dd         xstrtoul.loc_14d9c-switch_table_1aba8, 3 dup (xstrtoul.loc_14c7c-switch_table_1aba8), xstrtoul.loc_14d1f-switch_table_1aba8, xstrtoul.loc_14c7c-switch_table_1aba8
000000000001ac54         dd         xstrtoul.loc_14c38-switch_table_1aba8, 6 dup (xstrtoul.loc_14c7c-switch_table_1aba8), xstrtoul.loc_14cff-switch_table_1aba8, 2 dup (xstrtoul.loc_14c7c-switch_table_1aba8)
000000000001ac7c         dd         xstrtoul.loc_14c87-switch_table_1aba8
                     __PRETTY_FUNCTION__.4162:
000000000001ac80         db         "xstrtoul", 0                               ; DATA XREF=xstrtoul+901
                     aInvalidSsArgum:
000000000001ac89         db         "invalid %s%s argument '%s'", 0             ; DATA XREF=xstrtol_fatal+135
                     aSsArgumentSToo:
000000000001aca4         db         "%s%s argument '%s' too large", 0           ; DATA XREF=xstrtol_fatal+51
000000000001acc1         db  0x2d ; '-'                                         ; DATA XREF=xstrtol_fatal+72, xstrtol_fatal+146
000000000001acc2         db  0x2d ; '-'
000000000001acc3         db  0x00 ; '.'
000000000001acc4         db  0x00 ; '.'
000000000001acc5         db  0x00 ; '.'
000000000001acc6         db  0x00 ; '.'
000000000001acc7         db  0x00 ; '.'
                     aInvalidSuffixI:
000000000001acc8         db         "invalid suffix in %s%s argument '%s'", 0   ; DATA XREF=xstrtol_fatal+123
000000000001aced         align      16
                     switch_table_1acf0:        // switch_table
000000000001acf0         dd         xstrtoumax.loc_15256-switch_table_1acf0, 2 dup (xstrtoumax.loc_1514c-switch_table_1acf0), xstrtoumax.loc_15233-switch_table_1acf0, xstrtoumax.loc_1514c-switch_table_1acf0 ; switch table used at 0x15106 containing 54 entries, DATA XREF=xstrtoumax+452
000000000001ad04         dd         xstrtoumax.loc_1526c-switch_table_1acf0, 3 dup (xstrtoumax.loc_1514c-switch_table_1acf0), xstrtoumax.loc_151ef-switch_table_1acf0, xstrtoumax.loc_1514c-switch_table_1acf0
000000000001ad1c         dd         xstrtoumax.loc_15108-switch_table_1acf0, 2 dup (xstrtoumax.loc_1514c-switch_table_1acf0), xstrtoumax.loc_15210-switch_table_1acf0, 3 dup (xstrtoumax.loc_1514c-switch_table_1acf0)
000000000001ad38         dd         xstrtoumax.loc_151cf-switch_table_1acf0, 4 dup (xstrtoumax.loc_1514c-switch_table_1acf0), xstrtoumax.loc_151aa-switch_table_1acf0, xstrtoumax.loc_15184-switch_table_1acf0
000000000001ad54         dd         7 dup (xstrtoumax.loc_1514c-switch_table_1acf0), xstrtoumax.loc_1516d-switch_table_1acf0, xstrtoumax.loc_15130-switch_table_1acf0, 3 dup (xstrtoumax.loc_1514c-switch_table_1acf0)
000000000001ad84         dd         xstrtoumax.loc_1526c-switch_table_1acf0, 3 dup (xstrtoumax.loc_1514c-switch_table_1acf0), xstrtoumax.loc_151ef-switch_table_1acf0, xstrtoumax.loc_1514c-switch_table_1acf0
000000000001ad9c         dd         xstrtoumax.loc_15108-switch_table_1acf0, 6 dup (xstrtoumax.loc_1514c-switch_table_1acf0), xstrtoumax.loc_151cf-switch_table_1acf0, 2 dup (xstrtoumax.loc_1514c-switch_table_1acf0)
000000000001adc4         dd         xstrtoumax.loc_15157-switch_table_1acf0
                     __PRETTY_FUNCTION__.4162_1adc8:        // __PRETTY_FUNCTION__.4162
000000000001adc8         db         "xstrtoumax", 0                             ; DATA XREF=xstrtoumax+901
                     aAscii:
000000000001add3         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
000000000001add9         db  0x00 ; '.'
000000000001adda         db  0x00 ; '.'
000000000001addb         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0x1addc; 0x1b650[ (2164 bytes)
        ; File offset : [110044; 112208[ (2164 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

000000000001addc         db  0x01 ; '.'
000000000001addd         db  0x1b ; '.'
000000000001adde         db  0x03 ; '.'
000000000001addf         db  0x3b ; ';'
000000000001ade0         db  0x70 ; 'p'
000000000001ade1         db  0x08 ; '.'
000000000001ade2         db  0x00 ; '.'
000000000001ade3         db  0x00 ; '.'
000000000001ade4         db  0x0d ; '.'
000000000001ade5         db  0x01 ; '.'
000000000001ade6         db  0x00 ; '.'
000000000001ade7         db  0x00 ; '.'
000000000001ade8         db  0x54 ; 'T'
000000000001ade9         db  0x84 ; '.'
000000000001adea         db  0xfe ; '.'
000000000001adeb         db  0xff ; '.'
000000000001adec         db  0xbc ; '.'
000000000001aded         db  0x08 ; '.'
000000000001adee         db  0x00 ; '.'
000000000001adef         db  0x00 ; '.'
000000000001adf0         db  0xa4 ; '.'
000000000001adf1         db  0x8a ; '.'
000000000001adf2         db  0xfe ; '.'
000000000001adf3         db  0xff ; '.'
000000000001adf4         db  0xe4 ; '.'
000000000001adf5         db  0x08 ; '.'
000000000001adf6         db  0x00 ; '.'
000000000001adf7         db  0x00 ; '.'
000000000001adf8         db  0xc4 ; '.'
000000000001adf9         db  0x8a ; '.'
000000000001adfa         db  0xfe ; '.'
000000000001adfb         db  0xff ; '.'
000000000001adfc         db  0x28 ; '('
000000000001adfd         db  0x17 ; '.'
000000000001adfe         db  0x00 ; '.'
000000000001adff         db  0x00 ; '.'
000000000001ae00         db  0x94 ; '.'
000000000001ae01         db  0xa4 ; '.'
000000000001ae02         db  0xfe ; '.'
000000000001ae03         db  0xff ; '.'
000000000001ae04         db  0x8c ; '.'
000000000001ae05         db  0x08 ; '.'
000000000001ae06         db  0x00 ; '.'
000000000001ae07         db  0x00 ; '.'
000000000001ae08         db  0xa4 ; '.'
000000000001ae09         db  0xa5 ; '.'
000000000001ae0a         db  0xfe ; '.'
000000000001ae0b         db  0xff ; '.'
000000000001ae0c         db  0xfc ; '.'
000000000001ae0d         db  0x08 ; '.'
000000000001ae0e         db  0x00 ; '.'
000000000001ae0f         db  0x00 ; '.'
000000000001ae10         db  0xb4 ; '.'
000000000001ae11         db  0xa5 ; '.'
000000000001ae12         db  0xfe ; '.'
000000000001ae13         db  0xff ; '.'
000000000001ae14         db  0x10 ; '.'
000000000001ae15         db  0x09 ; '.'
000000000001ae16         db  0x00 ; '.'
000000000001ae17         db  0x00 ; '.'
000000000001ae18         db  0xd4 ; '.'
000000000001ae19         db  0xa5 ; '.'
000000000001ae1a         db  0xfe ; '.'
000000000001ae1b         db  0xff ; '.'
000000000001ae1c         db  0x24 ; '$'
000000000001ae1d         db  0x09 ; '.'
000000000001ae1e         db  0x00 ; '.'
000000000001ae1f         db  0x00 ; '.'
000000000001ae20         db  0xf4 ; '.'
000000000001ae21         db  0xa5 ; '.'
000000000001ae22         db  0xfe ; '.'
000000000001ae23         db  0xff ; '.'
000000000001ae24         db  0x38 ; '8'
000000000001ae25         db  0x09 ; '.'
000000000001ae26         db  0x00 ; '.'
000000000001ae27         db  0x00 ; '.'
000000000001ae28         db  0x04 ; '.'
000000000001ae29         db  0xa6 ; '.'
000000000001ae2a         db  0xfe ; '.'
000000000001ae2b         db  0xff ; '.'
000000000001ae2c         db  0x4c ; 'L'
000000000001ae2d         db  0x09 ; '.'
000000000001ae2e         db  0x00 ; '.'
000000000001ae2f         db  0x00 ; '.'
000000000001ae30         db  0x94 ; '.'
000000000001ae31         db  0xa8 ; '.'
000000000001ae32         db  0xfe ; '.'
000000000001ae33         db  0xff ; '.'
000000000001ae34         db  0x94 ; '.'
000000000001ae35         db  0x09 ; '.'
000000000001ae36         db  0x00 ; '.'
000000000001ae37         db  0x00 ; '.'
000000000001ae38         db  0xf4 ; '.'
000000000001ae39         db  0xa8 ; '.'
000000000001ae3a         db  0xfe ; '.'
000000000001ae3b         db  0xff ; '.'
000000000001ae3c         db  0xa8 ; '.'
000000000001ae3d         db  0x09 ; '.'
000000000001ae3e         db  0x00 ; '.'
000000000001ae3f         db  0x00 ; '.'
000000000001ae40         db  0x74 ; 't'
000000000001ae41         db  0xa9 ; '.'
000000000001ae42         db  0xfe ; '.'
000000000001ae43         db  0xff ; '.'
000000000001ae44         db  0xc4 ; '.'
000000000001ae45         db  0x09 ; '.'
000000000001ae46         db  0x00 ; '.'
000000000001ae47         db  0x00 ; '.'
000000000001ae48         db  0xf4 ; '.'
000000000001ae49         db  0xab ; '.'
000000000001ae4a         db  0xfe ; '.'
000000000001ae4b         db  0xff ; '.'
000000000001ae4c         db  0x28 ; '('
000000000001ae4d         db  0x0a ; '.'
000000000001ae4e         db  0x00 ; '.'
000000000001ae4f         db  0x00 ; '.'
000000000001ae50         db  0x64 ; 'd'
000000000001ae51         db  0xac ; '.'
000000000001ae52         db  0xfe ; '.'
000000000001ae53         db  0xff ; '.'
000000000001ae54         db  0x60 ; '`'
000000000001ae55         db  0x0a ; '.'
000000000001ae56         db  0x00 ; '.'
000000000001ae57         db  0x00 ; '.'
000000000001ae58         db  0xa4 ; '.'
000000000001ae59         db  0xac ; '.'
000000000001ae5a         db  0xfe ; '.'
000000000001ae5b         db  0xff ; '.'
000000000001ae5c         db  0x74 ; 't'
000000000001ae5d         db  0x0a ; '.'
000000000001ae5e         db  0x00 ; '.'
000000000001ae5f         db  0x00 ; '.'
000000000001ae60         db  0xe4 ; '.'
000000000001ae61         db  0xac ; '.'
000000000001ae62         db  0xfe ; '.'
000000000001ae63         db  0xff ; '.'
000000000001ae64         db  0x88 ; '.'
000000000001ae65         db  0x0a ; '.'
000000000001ae66         db  0x00 ; '.'
000000000001ae67         db  0x00 ; '.'
000000000001ae68         db  0xf4 ; '.'
000000000001ae69         db  0xac ; '.'
000000000001ae6a         db  0xfe ; '.'
000000000001ae6b         db  0xff ; '.'
000000000001ae6c         db  0x9c ; '.'
000000000001ae6d         db  0x0a ; '.'
000000000001ae6e         db  0x00 ; '.'
000000000001ae6f         db  0x00 ; '.'
000000000001ae70         db  0x04 ; '.'
000000000001ae71         db  0xad ; '.'
000000000001ae72         db  0xfe ; '.'
000000000001ae73         db  0xff ; '.'
000000000001ae74         db  0xb0 ; '.'
000000000001ae75         db  0x0a ; '.'
000000000001ae76         db  0x00 ; '.'
000000000001ae77         db  0x00 ; '.'
000000000001ae78         db  0x84 ; '.'
000000000001ae79         db  0xad ; '.'
000000000001ae7a         db  0xfe ; '.'
000000000001ae7b         db  0xff ; '.'
000000000001ae7c         db  0xdc ; '.'
000000000001ae7d         db  0x0a ; '.'
000000000001ae7e         db  0x00 ; '.'
000000000001ae7f         db  0x00 ; '.'
000000000001ae80         db  0x64 ; 'd'
000000000001ae81         db  0xae ; '.'
000000000001ae82         db  0xfe ; '.'
000000000001ae83         db  0xff ; '.'
000000000001ae84         db  0x1c ; '.'
000000000001ae85         db  0x0b ; '.'
000000000001ae86         db  0x00 ; '.'
000000000001ae87         db  0x00 ; '.'
000000000001ae88         db  0x04 ; '.'
000000000001ae89         db  0xb0 ; '.'
000000000001ae8a         db  0xfe ; '.'
000000000001ae8b         db  0xff ; '.'
000000000001ae8c         db  0x3c ; '<'
000000000001ae8d         db  0x0b ; '.'
000000000001ae8e         db  0x00 ; '.'
000000000001ae8f         db  0x00 ; '.'
000000000001ae90         db  0x34 ; '4'
000000000001ae91         db  0xb0 ; '.'
000000000001ae92         db  0xfe ; '.'
000000000001ae93         db  0xff ; '.'
000000000001ae94         db  0x64 ; 'd'
000000000001ae95         db  0x0b ; '.'
000000000001ae96         db  0x00 ; '.'
000000000001ae97         db  0x00 ; '.'
000000000001ae98         db  0x64 ; 'd'
000000000001ae99         db  0xb0 ; '.'
000000000001ae9a         db  0xfe ; '.'
000000000001ae9b         db  0xff ; '.'
000000000001ae9c         db  0x78 ; 'x'
000000000001ae9d         db  0x0b ; '.'
000000000001ae9e         db  0x00 ; '.'
000000000001ae9f         db  0x00 ; '.'
000000000001aea0         db  0xa4 ; '.'
000000000001aea1         db  0xb0 ; '.'
000000000001aea2         db  0xfe ; '.'
000000000001aea3         db  0xff ; '.'
000000000001aea4         db  0x8c ; '.'
000000000001aea5         db  0x0b ; '.'
000000000001aea6         db  0x00 ; '.'
000000000001aea7         db  0x00 ; '.'
000000000001aea8         db  0xb4 ; '.'
000000000001aea9         db  0xb0 ; '.'
000000000001aeaa         db  0xfe ; '.'
000000000001aeab         db  0xff ; '.'
000000000001aeac         db  0xa0 ; '.'
000000000001aead         db  0x0b ; '.'
000000000001aeae         db  0x00 ; '.'
000000000001aeaf         db  0x00 ; '.'
000000000001aeb0         db  0xc4 ; '.'
000000000001aeb1         db  0xb0 ; '.'
000000000001aeb2         db  0xfe ; '.'
000000000001aeb3         db  0xff ; '.'
000000000001aeb4         db  0xb4 ; '.'
000000000001aeb5         db  0x0b ; '.'
000000000001aeb6         db  0x00 ; '.'
000000000001aeb7         db  0x00 ; '.'
000000000001aeb8         db  0xd4 ; '.'
000000000001aeb9         db  0xb0 ; '.'
000000000001aeba         db  0xfe ; '.'
000000000001aebb         db  0xff ; '.'
000000000001aebc         db  0xc8 ; '.'
000000000001aebd         db  0x0b ; '.'
000000000001aebe         db  0x00 ; '.'
000000000001aebf         db  0x00 ; '.'
000000000001aec0         db  0xe4 ; '.'
000000000001aec1         db  0xb0 ; '.'
000000000001aec2         db  0xfe ; '.'
000000000001aec3         db  0xff ; '.'
000000000001aec4         db  0xdc ; '.'
000000000001aec5         db  0x0b ; '.'
000000000001aec6         db  0x00 ; '.'
000000000001aec7         db  0x00 ; '.'
000000000001aec8         db  0x64 ; 'd'
000000000001aec9         db  0xb2 ; '.'
000000000001aeca         db  0xfe ; '.'
000000000001aecb         db  0xff ; '.'
000000000001aecc         db  0x28 ; '('
000000000001aecd         db  0x0c ; '.'
000000000001aece         db  0x00 ; '.'
000000000001aecf         db  0x00 ; '.'
000000000001aed0         db  0x34 ; '4'
000000000001aed1         db  0xb3 ; '.'
000000000001aed2         db  0xfe ; '.'
000000000001aed3         db  0xff ; '.'
000000000001aed4         db  0x64 ; 'd'
000000000001aed5         db  0x0c ; '.'
000000000001aed6         db  0x00 ; '.'
000000000001aed7         db  0x00 ; '.'
000000000001aed8         db  0x04 ; '.'
000000000001aed9         db  0xb4 ; '.'
000000000001aeda         db  0xfe ; '.'
000000000001aedb         db  0xff ; '.'
000000000001aedc         db  0x9c ; '.'
000000000001aedd         db  0x0c ; '.'
000000000001aede         db  0x00 ; '.'
000000000001aedf         db  0x00 ; '.'
000000000001aee0         db  0xc4 ; '.'
000000000001aee1         db  0xb4 ; '.'
000000000001aee2         db  0xfe ; '.'
000000000001aee3         db  0xff ; '.'
000000000001aee4         db  0xc8 ; '.'
000000000001aee5         db  0x0c ; '.'
000000000001aee6         db  0x00 ; '.'
000000000001aee7         db  0x00 ; '.'
000000000001aee8         db  0x04 ; '.'
000000000001aee9         db  0xb5 ; '.'
000000000001aeea         db  0xfe ; '.'
000000000001aeeb         db  0xff ; '.'
000000000001aeec         db  0xec ; '.'
000000000001aeed         db  0x0c ; '.'
000000000001aeee         db  0x00 ; '.'
000000000001aeef         db  0x00 ; '.'
000000000001aef0         db  0x24 ; '$'
000000000001aef1         db  0xb5 ; '.'
000000000001aef2         db  0xfe ; '.'
000000000001aef3         db  0xff ; '.'
000000000001aef4         db  0x00 ; '.'
000000000001aef5         db  0x0d ; '.'
000000000001aef6         db  0x00 ; '.'
000000000001aef7         db  0x00 ; '.'
000000000001aef8         db  0x94 ; '.'
000000000001aef9         db  0xb5 ; '.'
000000000001aefa         db  0xfe ; '.'
000000000001aefb         db  0xff ; '.'
000000000001aefc         db  0x38 ; '8'
000000000001aefd         db  0x0d ; '.'
000000000001aefe         db  0x00 ; '.'
000000000001aeff         db  0x00 ; '.'
000000000001af00         db  0x34 ; '4'
000000000001af01         db  0xb6 ; '.'
000000000001af02         db  0xfe ; '.'
000000000001af03         db  0xff ; '.'
000000000001af04         db  0x4c ; 'L'
000000000001af05         db  0x0d ; '.'
000000000001af06         db  0x00 ; '.'
000000000001af07         db  0x00 ; '.'
000000000001af08         db  0xd4 ; '.'
000000000001af09         db  0xb6 ; '.'
000000000001af0a         db  0xfe ; '.'
000000000001af0b         db  0xff ; '.'
000000000001af0c         db  0x60 ; '`'
000000000001af0d         db  0x0d ; '.'
000000000001af0e         db  0x00 ; '.'
000000000001af0f         db  0x00 ; '.'
000000000001af10         db  0x74 ; 't'
000000000001af11         db  0xb7 ; '.'
000000000001af12         db  0xfe ; '.'
000000000001af13         db  0xff ; '.'
000000000001af14         db  0x74 ; 't'
000000000001af15         db  0x0d ; '.'
000000000001af16         db  0x00 ; '.'
000000000001af17         db  0x00 ; '.'
000000000001af18         db  0x14 ; '.'
000000000001af19         db  0xb8 ; '.'
000000000001af1a         db  0xfe ; '.'
000000000001af1b         db  0xff ; '.'
000000000001af1c         db  0x88 ; '.'
000000000001af1d         db  0x0d ; '.'
000000000001af1e         db  0x00 ; '.'
000000000001af1f         db  0x00 ; '.'
000000000001af20         db  0xa4 ; '.'
000000000001af21         db  0xb8 ; '.'
000000000001af22         db  0xfe ; '.'
000000000001af23         db  0xff ; '.'
000000000001af24         db  0x9c ; '.'
000000000001af25         db  0x0d ; '.'
000000000001af26         db  0x00 ; '.'
000000000001af27         db  0x00 ; '.'
000000000001af28         db  0x34 ; '4'
000000000001af29         db  0xb9 ; '.'
000000000001af2a         db  0xfe ; '.'
000000000001af2b         db  0xff ; '.'
000000000001af2c         db  0xb0 ; '.'
000000000001af2d         db  0x0d ; '.'
000000000001af2e         db  0x00 ; '.'
000000000001af2f         db  0x00 ; '.'
000000000001af30         db  0xc4 ; '.'
000000000001af31         db  0xb9 ; '.'
000000000001af32         db  0xfe ; '.'
000000000001af33         db  0xff ; '.'
000000000001af34         db  0xc4 ; '.'
000000000001af35         db  0x0d ; '.'
000000000001af36         db  0x00 ; '.'
000000000001af37         db  0x00 ; '.'
000000000001af38         db  0x54 ; 'T'
000000000001af39         db  0xba ; '.'
000000000001af3a         db  0xfe ; '.'
000000000001af3b         db  0xff ; '.'
000000000001af3c         db  0xd8 ; '.'
000000000001af3d         db  0x0d ; '.'
000000000001af3e         db  0x00 ; '.'
000000000001af3f         db  0x00 ; '.'
000000000001af40         db  0x54 ; 'T'
000000000001af41         db  0xbb ; '.'
000000000001af42         db  0xfe ; '.'
000000000001af43         db  0xff ; '.'
000000000001af44         db  0xec ; '.'
000000000001af45         db  0x0d ; '.'
000000000001af46         db  0x00 ; '.'
000000000001af47         db  0x00 ; '.'
000000000001af48         db  0xa4 ; '.'
000000000001af49         db  0xbb ; '.'
000000000001af4a         db  0xfe ; '.'
000000000001af4b         db  0xff ; '.'
000000000001af4c         db  0x08 ; '.'
000000000001af4d         db  0x0e ; '.'
000000000001af4e         db  0x00 ; '.'
000000000001af4f         db  0x00 ; '.'
000000000001af50         db  0x54 ; 'T'
000000000001af51         db  0xbc ; '.'
000000000001af52         db  0xfe ; '.'
000000000001af53         db  0xff ; '.'
000000000001af54         db  0x1c ; '.'
000000000001af55         db  0x0e ; '.'
000000000001af56         db  0x00 ; '.'
000000000001af57         db  0x00 ; '.'
000000000001af58         db  0xe4 ; '.'
000000000001af59         db  0xbc ; '.'
000000000001af5a         db  0xfe ; '.'
000000000001af5b         db  0xff ; '.'
000000000001af5c         db  0x30 ; '0'
000000000001af5d         db  0x0e ; '.'
000000000001af5e         db  0x00 ; '.'
000000000001af5f         db  0x00 ; '.'
000000000001af60         db  0x74 ; 't'
000000000001af61         db  0xbd ; '.'
000000000001af62         db  0xfe ; '.'
000000000001af63         db  0xff ; '.'
000000000001af64         db  0x44 ; 'D'
000000000001af65         db  0x0e ; '.'
000000000001af66         db  0x00 ; '.'
000000000001af67         db  0x00 ; '.'
000000000001af68         db  0x74 ; 't'
000000000001af69         db  0xbe ; '.'
000000000001af6a         db  0xfe ; '.'
000000000001af6b         db  0xff ; '.'
000000000001af6c         db  0x84 ; '.'
000000000001af6d         db  0x0e ; '.'
000000000001af6e         db  0x00 ; '.'
000000000001af6f         db  0x00 ; '.'
000000000001af70         db  0x44 ; 'D'
000000000001af71         db  0xc0 ; '.'
000000000001af72         db  0xfe ; '.'
000000000001af73         db  0xff ; '.'
000000000001af74         db  0xd0 ; '.'
000000000001af75         db  0x0e ; '.'
000000000001af76         db  0x00 ; '.'
000000000001af77         db  0x00 ; '.'
000000000001af78         db  0x94 ; '.'
000000000001af79         db  0xc0 ; '.'
000000000001af7a         db  0xfe ; '.'
000000000001af7b         db  0xff ; '.'
000000000001af7c         db  0xe8 ; '.'
000000000001af7d         db  0x0e ; '.'
000000000001af7e         db  0x00 ; '.'
000000000001af7f         db  0x00 ; '.'
000000000001af80         db  0x04 ; '.'
000000000001af81         db  0xc1 ; '.'
000000000001af82         db  0xfe ; '.'
000000000001af83         db  0xff ; '.'
000000000001af84         db  0x04 ; '.'
000000000001af85         db  0x0f ; '.'
000000000001af86         db  0x00 ; '.'
000000000001af87         db  0x00 ; '.'
000000000001af88         db  0xf4 ; '.'
000000000001af89         db  0xc1 ; '.'
000000000001af8a         db  0xfe ; '.'
000000000001af8b         db  0xff ; '.'
000000000001af8c         db  0x30 ; '0'
000000000001af8d         db  0x0f ; '.'
000000000001af8e         db  0x00 ; '.'
000000000001af8f         db  0x00 ; '.'
000000000001af90         db  0x44 ; 'D'
000000000001af91         db  0xc2 ; '.'
000000000001af92         db  0xfe ; '.'
000000000001af93         db  0xff ; '.'
000000000001af94         db  0x50 ; 'P'
000000000001af95         db  0x0f ; '.'
000000000001af96         db  0x00 ; '.'
000000000001af97         db  0x00 ; '.'
000000000001af98         db  0xb4 ; '.'
000000000001af99         db  0xc6 ; '.'
000000000001af9a         db  0xfe ; '.'
000000000001af9b         db  0xff ; '.'
000000000001af9c         db  0xa0 ; '.'
000000000001af9d         db  0x0f ; '.'
000000000001af9e         db  0x00 ; '.'
000000000001af9f         db  0x00 ; '.'
000000000001afa0         db  0xc4 ; '.'
000000000001afa1         db  0xca ; '.'
000000000001afa2         db  0xfe ; '.'
000000000001afa3         db  0xff ; '.'
000000000001afa4         db  0xf0 ; '.'
000000000001afa5         db  0x0f ; '.'
000000000001afa6         db  0x00 ; '.'
000000000001afa7         db  0x00 ; '.'
000000000001afa8         db  0x24 ; '$'
000000000001afa9         db  0xcf ; '.'
000000000001afaa         db  0xfe ; '.'
000000000001afab         db  0xff ; '.'
000000000001afac         db  0x54 ; 'T'
000000000001afad         db  0x10 ; '.'
000000000001afae         db  0x00 ; '.'
000000000001afaf         db  0x00 ; '.'
000000000001afb0         db  0xb4 ; '.'
000000000001afb1         db  0xd0 ; '.'
000000000001afb2         db  0xfe ; '.'
000000000001afb3         db  0xff ; '.'
000000000001afb4         db  0x84 ; '.'
000000000001afb5         db  0x10 ; '.'
000000000001afb6         db  0x00 ; '.'
000000000001afb7         db  0x00 ; '.'
000000000001afb8         db  0xc4 ; '.'
000000000001afb9         db  0xda ; '.'
000000000001afba         db  0xfe ; '.'
000000000001afbb         db  0xff ; '.'
000000000001afbc         db  0xf8 ; '.'
000000000001afbd         db  0x10 ; '.'
000000000001afbe         db  0x00 ; '.'
000000000001afbf         db  0x00 ; '.'
000000000001afc0         db  0x54 ; 'T'
000000000001afc1         db  0xdb ; '.'
000000000001afc2         db  0xfe ; '.'
000000000001afc3         db  0xff ; '.'
000000000001afc4         db  0x24 ; '$'
000000000001afc5         db  0x11 ; '.'
000000000001afc6         db  0x00 ; '.'
000000000001afc7         db  0x00 ; '.'
000000000001afc8         db  0x04 ; '.'
000000000001afc9         db  0xdd ; '.'
000000000001afca         db  0xfe ; '.'
000000000001afcb         db  0xff ; '.'
000000000001afcc         db  0x50 ; 'P'
000000000001afcd         db  0x11 ; '.'
000000000001afce         db  0x00 ; '.'
000000000001afcf         db  0x00 ; '.'
000000000001afd0         db  0x14 ; '.'
000000000001afd1         db  0xe0 ; '.'
000000000001afd2         db  0xfe ; '.'
000000000001afd3         db  0xff ; '.'
000000000001afd4         db  0x90 ; '.'
000000000001afd5         db  0x11 ; '.'
000000000001afd6         db  0x00 ; '.'
000000000001afd7         db  0x00 ; '.'
000000000001afd8         db  0xc4 ; '.'
000000000001afd9         db  0xe1 ; '.'
000000000001afda         db  0xfe ; '.'
000000000001afdb         db  0xff ; '.'
000000000001afdc         db  0xf4 ; '.'
000000000001afdd         db  0x11 ; '.'
000000000001afde         db  0x00 ; '.'
000000000001afdf         db  0x00 ; '.'
000000000001afe0         db  0xa4 ; '.'
000000000001afe1         db  0xe5 ; '.'
000000000001afe2         db  0xfe ; '.'
000000000001afe3         db  0xff ; '.'
000000000001afe4         db  0xb0 ; '.'
000000000001afe5         db  0x12 ; '.'
000000000001afe6         db  0x00 ; '.'
000000000001afe7         db  0x00 ; '.'
000000000001afe8         db  0x54 ; 'T'
000000000001afe9         db  0xe6 ; '.'
000000000001afea         db  0xfe ; '.'
000000000001afeb         db  0xff ; '.'
000000000001afec         db  0xc4 ; '.'
000000000001afed         db  0x12 ; '.'
000000000001afee         db  0x00 ; '.'
000000000001afef         db  0x00 ; '.'
000000000001aff0         db  0x14 ; '.'
000000000001aff1         db  0xe7 ; '.'
000000000001aff2         db  0xfe ; '.'
000000000001aff3         db  0xff ; '.'
000000000001aff4         db  0xd8 ; '.'
000000000001aff5         db  0x12 ; '.'
000000000001aff6         db  0x00 ; '.'
000000000001aff7         db  0x00 ; '.'
000000000001aff8         db  0xe4 ; '.'
000000000001aff9         db  0xe7 ; '.'
000000000001affa         db  0xfe ; '.'
000000000001affb         db  0xff ; '.'
000000000001affc         db  0x04 ; '.'
000000000001affd         db  0x13 ; '.'
000000000001affe         db  0x00 ; '.'
000000000001afff         db  0x00 ; '.'
000000000001b000         db  0xb4 ; '.'
000000000001b001         db  0xe8 ; '.'
000000000001b002         db  0xfe ; '.'
000000000001b003         db  0xff ; '.'
000000000001b004         db  0x30 ; '0'
000000000001b005         db  0x13 ; '.'
000000000001b006         db  0x00 ; '.'
000000000001b007         db  0x00 ; '.'
000000000001b008         db  0x14 ; '.'
000000000001b009         db  0xf6 ; '.'
000000000001b00a         db  0xfe ; '.'
000000000001b00b         db  0xff ; '.'
000000000001b00c         db  0x60 ; '`'
000000000001b00d         db  0x13 ; '.'
000000000001b00e         db  0x00 ; '.'
000000000001b00f         db  0x00 ; '.'
000000000001b010         db  0xd4 ; '.'
000000000001b011         db  0xfc ; '.'
000000000001b012         db  0xfe ; '.'
000000000001b013         db  0xff ; '.'
000000000001b014         db  0xc0 ; '.'
000000000001b015         db  0x13 ; '.'
000000000001b016         db  0x00 ; '.'
000000000001b017         db  0x00 ; '.'
000000000001b018         db  0x24 ; '$'
000000000001b019         db  0xfd ; '.'
000000000001b01a         db  0xfe ; '.'
000000000001b01b         db  0xff ; '.'
000000000001b01c         db  0xd4 ; '.'
000000000001b01d         db  0x13 ; '.'
000000000001b01e         db  0x00 ; '.'
000000000001b01f         db  0x00 ; '.'
000000000001b020         db  0x64 ; 'd'
000000000001b021         db  0xfd ; '.'
000000000001b022         db  0xfe ; '.'
000000000001b023         db  0xff ; '.'
000000000001b024         db  0xe8 ; '.'
000000000001b025         db  0x13 ; '.'
000000000001b026         db  0x00 ; '.'
000000000001b027         db  0x00 ; '.'
000000000001b028         db  0xa4 ; '.'
000000000001b029         db  0xfd ; '.'
000000000001b02a         db  0xfe ; '.'
000000000001b02b         db  0xff ; '.'
000000000001b02c         db  0xfc ; '.'
000000000001b02d         db  0x13 ; '.'
000000000001b02e         db  0x00 ; '.'
000000000001b02f         db  0x00 ; '.'
000000000001b030         db  0xe4 ; '.'
000000000001b031         db  0xfd ; '.'
000000000001b032         db  0xfe ; '.'
000000000001b033         db  0xff ; '.'
000000000001b034         db  0x10 ; '.'
000000000001b035         db  0x14 ; '.'
000000000001b036         db  0x00 ; '.'
000000000001b037         db  0x00 ; '.'
000000000001b038         db  0x24 ; '$'
000000000001b039         db  0xfe ; '.'
000000000001b03a         db  0xfe ; '.'
000000000001b03b         db  0xff ; '.'
000000000001b03c         db  0x24 ; '$'
000000000001b03d         db  0x14 ; '.'
000000000001b03e         db  0x00 ; '.'
000000000001b03f         db  0x00 ; '.'
000000000001b040         db  0x74 ; 't'
000000000001b041         db  0xfe ; '.'
000000000001b042         db  0xfe ; '.'
000000000001b043         db  0xff ; '.'
000000000001b044         db  0x38 ; '8'
000000000001b045         db  0x14 ; '.'
000000000001b046         db  0x00 ; '.'
000000000001b047         db  0x00 ; '.'
000000000001b048         db  0xe4 ; '.'
000000000001b049         db  0xfe ; '.'
000000000001b04a         db  0xfe ; '.'
000000000001b04b         db  0xff ; '.'
000000000001b04c         db  0x70 ; 'p'
000000000001b04d         db  0x14 ; '.'
000000000001b04e         db  0x00 ; '.'
000000000001b04f         db  0x00 ; '.'
000000000001b050         db  0x54 ; 'T'
000000000001b051         db  0xff ; '.'
000000000001b052         db  0xfe ; '.'
000000000001b053         db  0xff ; '.'
000000000001b054         db  0xa8 ; '.'
000000000001b055         db  0x14 ; '.'
000000000001b056         db  0x00 ; '.'
000000000001b057         db  0x00 ; '.'
000000000001b058         db  0x94 ; '.'
000000000001b059         db  0xff ; '.'
000000000001b05a         db  0xfe ; '.'
000000000001b05b         db  0xff ; '.'
000000000001b05c         db  0xbc ; '.'
000000000001b05d         db  0x14 ; '.'
000000000001b05e         db  0x00 ; '.'
000000000001b05f         db  0x00 ; '.'
000000000001b060         db  0xd4 ; '.'
000000000001b061         db  0xff ; '.'
000000000001b062         db  0xfe ; '.'
000000000001b063         db  0xff ; '.'
000000000001b064         db  0xd0 ; '.'
000000000001b065         db  0x14 ; '.'
000000000001b066         db  0x00 ; '.'
000000000001b067         db  0x00 ; '.'
000000000001b068         db  0x24 ; '$'
000000000001b069         db  0x00 ; '.'
000000000001b06a         db  0xff ; '.'
000000000001b06b         db  0xff ; '.'
000000000001b06c         db  0xe4 ; '.'
000000000001b06d         db  0x14 ; '.'
000000000001b06e         db  0x00 ; '.'
000000000001b06f         db  0x00 ; '.'
000000000001b070         db  0x64 ; 'd'
000000000001b071         db  0x00 ; '.'
000000000001b072         db  0xff ; '.'
000000000001b073         db  0xff ; '.'
000000000001b074         db  0xf8 ; '.'
000000000001b075         db  0x14 ; '.'
000000000001b076         db  0x00 ; '.'
000000000001b077         db  0x00 ; '.'
000000000001b078         db  0xa4 ; '.'
000000000001b079         db  0x00 ; '.'
000000000001b07a         db  0xff ; '.'
000000000001b07b         db  0xff ; '.'
000000000001b07c         db  0x0c ; '.'
000000000001b07d         db  0x15 ; '.'
000000000001b07e         db  0x00 ; '.'
000000000001b07f         db  0x00 ; '.'
000000000001b080         db  0xf4 ; '.'
000000000001b081         db  0x00 ; '.'
000000000001b082         db  0xff ; '.'
000000000001b083         db  0xff ; '.'
000000000001b084         db  0x20 ; ' '
000000000001b085         db  0x15 ; '.'
000000000001b086         db  0x00 ; '.'
000000000001b087         db  0x00 ; '.'
000000000001b088         db  0xa4 ; '.'
000000000001b089         db  0x01 ; '.'
000000000001b08a         db  0xff ; '.'
000000000001b08b         db  0xff ; '.'
000000000001b08c         db  0x34 ; '4'
000000000001b08d         db  0x15 ; '.'
000000000001b08e         db  0x00 ; '.'
000000000001b08f         db  0x00 ; '.'
000000000001b090         db  0x54 ; 'T'
000000000001b091         db  0x02 ; '.'
000000000001b092         db  0xff ; '.'
000000000001b093         db  0xff ; '.'
000000000001b094         db  0x48 ; 'H'
000000000001b095         db  0x15 ; '.'
000000000001b096         db  0x00 ; '.'
000000000001b097         db  0x00 ; '.'
000000000001b098         db  0x14 ; '.'
000000000001b099         db  0x03 ; '.'
000000000001b09a         db  0xff ; '.'
000000000001b09b         db  0xff ; '.'
000000000001b09c         db  0x5c ; '\'
000000000001b09d         db  0x15 ; '.'
000000000001b09e         db  0x00 ; '.'
000000000001b09f         db  0x00 ; '.'
000000000001b0a0         db  0xc4 ; '.'
000000000001b0a1         db  0x03 ; '.'
000000000001b0a2         db  0xff ; '.'
000000000001b0a3         db  0xff ; '.'
000000000001b0a4         db  0x70 ; 'p'
000000000001b0a5         db  0x15 ; '.'
000000000001b0a6         db  0x00 ; '.'
000000000001b0a7         db  0x00 ; '.'
000000000001b0a8         db  0x74 ; 't'
000000000001b0a9         db  0x04 ; '.'
000000000001b0aa         db  0xff ; '.'
000000000001b0ab         db  0xff ; '.'
000000000001b0ac         db  0x84 ; '.'
000000000001b0ad         db  0x15 ; '.'
000000000001b0ae         db  0x00 ; '.'
000000000001b0af         db  0x00 ; '.'
000000000001b0b0         db  0x34 ; '4'
000000000001b0b1         db  0x05 ; '.'
000000000001b0b2         db  0xff ; '.'
000000000001b0b3         db  0xff ; '.'
000000000001b0b4         db  0x98 ; '.'
000000000001b0b5         db  0x15 ; '.'
000000000001b0b6         db  0x00 ; '.'
000000000001b0b7         db  0x00 ; '.'
000000000001b0b8         db  0xb4 ; '.'
000000000001b0b9         db  0x05 ; '.'
000000000001b0ba         db  0xff ; '.'
000000000001b0bb         db  0xff ; '.'
000000000001b0bc         db  0xd0 ; '.'
000000000001b0bd         db  0x15 ; '.'
000000000001b0be         db  0x00 ; '.'
000000000001b0bf         db  0x00 ; '.'
000000000001b0c0         db  0x34 ; '4'
000000000001b0c1         db  0x06 ; '.'
000000000001b0c2         db  0xff ; '.'
000000000001b0c3         db  0xff ; '.'
000000000001b0c4         db  0x08 ; '.'
000000000001b0c5         db  0x16 ; '.'
000000000001b0c6         db  0x00 ; '.'
000000000001b0c7         db  0x00 ; '.'
000000000001b0c8         db  0x24 ; '$'
000000000001b0c9         db  0x07 ; '.'
000000000001b0ca         db  0xff ; '.'
000000000001b0cb         db  0xff ; '.'
000000000001b0cc         db  0x44 ; 'D'
000000000001b0cd         db  0x16 ; '.'
000000000001b0ce         db  0x00 ; '.'
000000000001b0cf         db  0x00 ; '.'
000000000001b0d0         db  0x14 ; '.'
000000000001b0d1         db  0x08 ; '.'
000000000001b0d2         db  0xff ; '.'
000000000001b0d3         db  0xff ; '.'
000000000001b0d4         db  0x80 ; '.'
000000000001b0d5         db  0x16 ; '.'
000000000001b0d6         db  0x00 ; '.'
000000000001b0d7         db  0x00 ; '.'
000000000001b0d8         db  0xc4 ; '.'
000000000001b0d9         db  0x08 ; '.'
000000000001b0da         db  0xff ; '.'
000000000001b0db         db  0xff ; '.'
000000000001b0dc         db  0x94 ; '.'
000000000001b0dd         db  0x16 ; '.'
000000000001b0de         db  0x00 ; '.'
000000000001b0df         db  0x00 ; '.'
000000000001b0e0         db  0x74 ; 't'
000000000001b0e1         db  0x09 ; '.'
000000000001b0e2         db  0xff ; '.'
000000000001b0e3         db  0xff ; '.'
000000000001b0e4         db  0xa8 ; '.'
000000000001b0e5         db  0x16 ; '.'
000000000001b0e6         db  0x00 ; '.'
000000000001b0e7         db  0x00 ; '.'
000000000001b0e8         db  0x34 ; '4'
000000000001b0e9         db  0x0a ; '.'
000000000001b0ea         db  0xff ; '.'
000000000001b0eb         db  0xff ; '.'
000000000001b0ec         db  0xbc ; '.'
000000000001b0ed         db  0x16 ; '.'
000000000001b0ee         db  0x00 ; '.'
000000000001b0ef         db  0x00 ; '.'
000000000001b0f0         db  0x34 ; '4'
000000000001b0f1         db  0x0b ; '.'
000000000001b0f2         db  0xff ; '.'
000000000001b0f3         db  0xff ; '.'
000000000001b0f4         db  0xfc ; '.'
000000000001b0f5         db  0x16 ; '.'
000000000001b0f6         db  0x00 ; '.'
000000000001b0f7         db  0x00 ; '.'
000000000001b0f8         db  0x74 ; 't'
000000000001b0f9         db  0x12 ; '.'
000000000001b0fa         db  0xff ; '.'
000000000001b0fb         db  0xff ; '.'
000000000001b0fc         db  0x94 ; '.'
000000000001b0fd         db  0x17 ; '.'
000000000001b0fe         db  0x00 ; '.'
000000000001b0ff         db  0x00 ; '.'
000000000001b100         db  0x64 ; 'd'
000000000001b101         db  0x13 ; '.'
000000000001b102         db  0xff ; '.'
000000000001b103         db  0xff ; '.'
000000000001b104         db  0xe4 ; '.'
000000000001b105         db  0x17 ; '.'
000000000001b106         db  0x00 ; '.'
000000000001b107         db  0x00 ; '.'
000000000001b108         db  0x74 ; 't'
000000000001b109         db  0x13 ; '.'
000000000001b10a         db  0xff ; '.'
000000000001b10b         db  0xff ; '.'
000000000001b10c         db  0xf8 ; '.'
000000000001b10d         db  0x17 ; '.'
000000000001b10e         db  0x00 ; '.'
000000000001b10f         db  0x00 ; '.'
000000000001b110         db  0x94 ; '.'
000000000001b111         db  0x14 ; '.'
000000000001b112         db  0xff ; '.'
000000000001b113         db  0xff ; '.'
000000000001b114         db  0x44 ; 'D'
000000000001b115         db  0x18 ; '.'
000000000001b116         db  0x00 ; '.'
000000000001b117         db  0x00 ; '.'
000000000001b118         db  0x14 ; '.'
000000000001b119         db  0x15 ; '.'
000000000001b11a         db  0xff ; '.'
000000000001b11b         db  0xff ; '.'
000000000001b11c         db  0x70 ; 'p'
000000000001b11d         db  0x18 ; '.'
000000000001b11e         db  0x00 ; '.'
000000000001b11f         db  0x00 ; '.'
000000000001b120         db  0x34 ; '4'
000000000001b121         db  0x16 ; '.'
000000000001b122         db  0xff ; '.'
000000000001b123         db  0xff ; '.'
000000000001b124         db  0xd0 ; '.'
000000000001b125         db  0x18 ; '.'
000000000001b126         db  0x00 ; '.'
000000000001b127         db  0x00 ; '.'
000000000001b128         db  0xa4 ; '.'
000000000001b129         db  0x16 ; '.'
000000000001b12a         db  0xff ; '.'
000000000001b12b         db  0xff ; '.'
000000000001b12c         db  0x1c ; '.'
000000000001b12d         db  0x19 ; '.'
000000000001b12e         db  0x00 ; '.'
000000000001b12f         db  0x00 ; '.'
000000000001b130         db  0xf4 ; '.'
000000000001b131         db  0x16 ; '.'
000000000001b132         db  0xff ; '.'
000000000001b133         db  0xff ; '.'
000000000001b134         db  0x5c ; '\'
000000000001b135         db  0x19 ; '.'
000000000001b136         db  0x00 ; '.'
000000000001b137         db  0x00 ; '.'
000000000001b138         db  0x64 ; 'd'
000000000001b139         db  0x17 ; '.'
000000000001b13a         db  0xff ; '.'
000000000001b13b         db  0xff ; '.'
000000000001b13c         db  0x74 ; 't'
000000000001b13d         db  0x19 ; '.'
000000000001b13e         db  0x00 ; '.'
000000000001b13f         db  0x00 ; '.'
000000000001b140         db  0xa4 ; '.'
000000000001b141         db  0x1d ; '.'
000000000001b142         db  0xff ; '.'
000000000001b143         db  0xff ; '.'
000000000001b144         db  0xc4 ; '.'
000000000001b145         db  0x19 ; '.'
000000000001b146         db  0x00 ; '.'
000000000001b147         db  0x00 ; '.'
000000000001b148         db  0xb4 ; '.'
000000000001b149         db  0x1d ; '.'
000000000001b14a         db  0xff ; '.'
000000000001b14b         db  0xff ; '.'
000000000001b14c         db  0xd8 ; '.'
000000000001b14d         db  0x19 ; '.'
000000000001b14e         db  0x00 ; '.'
000000000001b14f         db  0x00 ; '.'
000000000001b150         db  0xc4 ; '.'
000000000001b151         db  0x1d ; '.'
000000000001b152         db  0xff ; '.'
000000000001b153         db  0xff ; '.'
000000000001b154         db  0xec ; '.'
000000000001b155         db  0x19 ; '.'
000000000001b156         db  0x00 ; '.'
000000000001b157         db  0x00 ; '.'
000000000001b158         db  0x74 ; 't'
000000000001b159         db  0x1e ; '.'
000000000001b15a         db  0xff ; '.'
000000000001b15b         db  0xff ; '.'
000000000001b15c         db  0x1c ; '.'
000000000001b15d         db  0x1a ; '.'
000000000001b15e         db  0x00 ; '.'
000000000001b15f         db  0x00 ; '.'
000000000001b160         db  0xd4 ; '.'
000000000001b161         db  0x1e ; '.'
000000000001b162         db  0xff ; '.'
000000000001b163         db  0xff ; '.'
000000000001b164         db  0x50 ; 'P'
000000000001b165         db  0x1a ; '.'
000000000001b166         db  0x00 ; '.'
000000000001b167         db  0x00 ; '.'
000000000001b168         db  0x34 ; '4'
000000000001b169         db  0x1f ; '.'
000000000001b16a         db  0xff ; '.'
000000000001b16b         db  0xff ; '.'
000000000001b16c         db  0x7c ; '|'
000000000001b16d         db  0x1a ; '.'
000000000001b16e         db  0x00 ; '.'
000000000001b16f         db  0x00 ; '.'
000000000001b170         db  0x94 ; '.'
000000000001b171         db  0x1f ; '.'
000000000001b172         db  0xff ; '.'
000000000001b173         db  0xff ; '.'
000000000001b174         db  0x90 ; '.'
000000000001b175         db  0x1a ; '.'
000000000001b176         db  0x00 ; '.'
000000000001b177         db  0x00 ; '.'
000000000001b178         db  0xe4 ; '.'
000000000001b179         db  0x1f ; '.'
000000000001b17a         db  0xff ; '.'
000000000001b17b         db  0xff ; '.'
000000000001b17c         db  0xbc ; '.'
000000000001b17d         db  0x1a ; '.'
000000000001b17e         db  0x00 ; '.'
000000000001b17f         db  0x00 ; '.'
000000000001b180         db  0xf4 ; '.'
000000000001b181         db  0x1f ; '.'
000000000001b182         db  0xff ; '.'
000000000001b183         db  0xff ; '.'
000000000001b184         db  0xd4 ; '.'
000000000001b185         db  0x1a ; '.'
000000000001b186         db  0x00 ; '.'
000000000001b187         db  0x00 ; '.'
000000000001b188         db  0x84 ; '.'
000000000001b189         db  0x20 ; ' '
000000000001b18a         db  0xff ; '.'
000000000001b18b         db  0xff ; '.'
000000000001b18c         db  0x34 ; '4'
000000000001b18d         db  0x1b ; '.'
000000000001b18e         db  0x00 ; '.'
000000000001b18f         db  0x00 ; '.'
000000000001b190         db  0xe4 ; '.'
000000000001b191         db  0x20 ; ' '
000000000001b192         db  0xff ; '.'
000000000001b193         db  0xff ; '.'
000000000001b194         db  0x54 ; 'T'
000000000001b195         db  0x1b ; '.'
000000000001b196         db  0x00 ; '.'
000000000001b197         db  0x00 ; '.'
000000000001b198         db  0x74 ; 't'
000000000001b199         db  0x22 ; '"'
000000000001b19a         db  0xff ; '.'
000000000001b19b         db  0xff ; '.'
000000000001b19c         db  0x68 ; 'h'
000000000001b19d         db  0x1b ; '.'
000000000001b19e         db  0x00 ; '.'
000000000001b19f         db  0x00 ; '.'
000000000001b1a0         db  0x84 ; '.'
000000000001b1a1         db  0x22 ; '"'
000000000001b1a2         db  0xff ; '.'
000000000001b1a3         db  0xff ; '.'
000000000001b1a4         db  0x7c ; '|'
000000000001b1a5         db  0x1b ; '.'
000000000001b1a6         db  0x00 ; '.'
000000000001b1a7         db  0x00 ; '.'
000000000001b1a8         db  0xa4 ; '.'
000000000001b1a9         db  0x22 ; '"'
000000000001b1aa         db  0xff ; '.'
000000000001b1ab         db  0xff ; '.'
000000000001b1ac         db  0x9c ; '.'
000000000001b1ad         db  0x1b ; '.'
000000000001b1ae         db  0x00 ; '.'
000000000001b1af         db  0x00 ; '.'
000000000001b1b0         db  0xa4 ; '.'
000000000001b1b1         db  0x23 ; '#'
000000000001b1b2         db  0xff ; '.'
000000000001b1b3         db  0xff ; '.'
000000000001b1b4         db  0xec ; '.'
000000000001b1b5         db  0x1b ; '.'
000000000001b1b6         db  0x00 ; '.'
000000000001b1b7         db  0x00 ; '.'
000000000001b1b8         db  0x74 ; 't'
000000000001b1b9         db  0x24 ; '$'
000000000001b1ba         db  0xff ; '.'
000000000001b1bb         db  0xff ; '.'
000000000001b1bc         db  0x00 ; '.'
000000000001b1bd         db  0x1c ; '.'
000000000001b1be         db  0x00 ; '.'
000000000001b1bf         db  0x00 ; '.'
000000000001b1c0         db  0xa4 ; '.'
000000000001b1c1         db  0x28 ; '('
000000000001b1c2         db  0xff ; '.'
000000000001b1c3         db  0xff ; '.'
000000000001b1c4         db  0x4c ; 'L'
000000000001b1c5         db  0x1c ; '.'
000000000001b1c6         db  0x00 ; '.'
000000000001b1c7         db  0x00 ; '.'
000000000001b1c8         db  0xb4 ; '.'
000000000001b1c9         db  0x28 ; '('
000000000001b1ca         db  0xff ; '.'
000000000001b1cb         db  0xff ; '.'
000000000001b1cc         db  0x60 ; '`'
000000000001b1cd         db  0x1c ; '.'
000000000001b1ce         db  0x00 ; '.'
000000000001b1cf         db  0x00 ; '.'
000000000001b1d0         db  0x04 ; '.'
000000000001b1d1         db  0x29 ; ')'
000000000001b1d2         db  0xff ; '.'
000000000001b1d3         db  0xff ; '.'
000000000001b1d4         db  0x7c ; '|'
000000000001b1d5         db  0x1c ; '.'
000000000001b1d6         db  0x00 ; '.'
000000000001b1d7         db  0x00 ; '.'
000000000001b1d8         db  0x64 ; 'd'
000000000001b1d9         db  0x29 ; ')'
000000000001b1da         db  0xff ; '.'
000000000001b1db         db  0xff ; '.'
000000000001b1dc         db  0x9c ; '.'
000000000001b1dd         db  0x1c ; '.'
000000000001b1de         db  0x00 ; '.'
000000000001b1df         db  0x00 ; '.'
000000000001b1e0         db  0x04 ; '.'
000000000001b1e1         db  0x2a ; '*'
000000000001b1e2         db  0xff ; '.'
000000000001b1e3         db  0xff ; '.'
000000000001b1e4         db  0xb0 ; '.'
000000000001b1e5         db  0x1c ; '.'
000000000001b1e6         db  0x00 ; '.'
000000000001b1e7         db  0x00 ; '.'
000000000001b1e8         db  0x14 ; '.'
000000000001b1e9         db  0x2a ; '*'
000000000001b1ea         db  0xff ; '.'
000000000001b1eb         db  0xff ; '.'
000000000001b1ec         db  0xc4 ; '.'
000000000001b1ed         db  0x1c ; '.'
000000000001b1ee         db  0x00 ; '.'
000000000001b1ef         db  0x00 ; '.'
000000000001b1f0         db  0x24 ; '$'
000000000001b1f1         db  0x2a ; '*'
000000000001b1f2         db  0xff ; '.'
000000000001b1f3         db  0xff ; '.'
000000000001b1f4         db  0xd8 ; '.'
000000000001b1f5         db  0x1c ; '.'
000000000001b1f6         db  0x00 ; '.'
000000000001b1f7         db  0x00 ; '.'
000000000001b1f8         db  0x54 ; 'T'
000000000001b1f9         db  0x2a ; '*'
000000000001b1fa         db  0xff ; '.'
000000000001b1fb         db  0xff ; '.'
000000000001b1fc         db  0xf4 ; '.'
000000000001b1fd         db  0x1c ; '.'
000000000001b1fe         db  0x00 ; '.'
000000000001b1ff         db  0x00 ; '.'
000000000001b200         db  0x74 ; 't'
000000000001b201         db  0x2b ; '+'
000000000001b202         db  0xff ; '.'
000000000001b203         db  0xff ; '.'
000000000001b204         db  0x54 ; 'T'
000000000001b205         db  0x1d ; '.'
000000000001b206         db  0x00 ; '.'
000000000001b207         db  0x00 ; '.'
000000000001b208         db  0xf4 ; '.'
000000000001b209         db  0x2b ; '+'
000000000001b20a         db  0xff ; '.'
000000000001b20b         db  0xff ; '.'
000000000001b20c         db  0x68 ; 'h'
000000000001b20d         db  0x1d ; '.'
000000000001b20e         db  0x00 ; '.'
000000000001b20f         db  0x00 ; '.'
000000000001b210         db  0x34 ; '4'
000000000001b211         db  0x2d ; '-'
000000000001b212         db  0xff ; '.'
000000000001b213         db  0xff ; '.'
000000000001b214         db  0xc8 ; '.'
000000000001b215         db  0x1d ; '.'
000000000001b216         db  0x00 ; '.'
000000000001b217         db  0x00 ; '.'
000000000001b218         db  0x44 ; 'D'
000000000001b219         db  0x2d ; '-'
000000000001b21a         db  0xff ; '.'
000000000001b21b         db  0xff ; '.'
000000000001b21c         db  0xdc ; '.'
000000000001b21d         db  0x1d ; '.'
000000000001b21e         db  0x00 ; '.'
000000000001b21f         db  0x00 ; '.'
000000000001b220         db  0x54 ; 'T'
000000000001b221         db  0x2d ; '-'
000000000001b222         db  0xff ; '.'
000000000001b223         db  0xff ; '.'
000000000001b224         db  0xf0 ; '.'
000000000001b225         db  0x1d ; '.'
000000000001b226         db  0x00 ; '.'
000000000001b227         db  0x00 ; '.'
000000000001b228         db  0x64 ; 'd'
000000000001b229         db  0x2d ; '-'
000000000001b22a         db  0xff ; '.'
000000000001b22b         db  0xff ; '.'
000000000001b22c         db  0x04 ; '.'
000000000001b22d         db  0x1e ; '.'
000000000001b22e         db  0x00 ; '.'
000000000001b22f         db  0x00 ; '.'
000000000001b230         db  0xb4 ; '.'
000000000001b231         db  0x2d ; '-'
000000000001b232         db  0xff ; '.'
000000000001b233         db  0xff ; '.'
000000000001b234         db  0x18 ; '.'
000000000001b235         db  0x1e ; '.'
000000000001b236         db  0x00 ; '.'
000000000001b237         db  0x00 ; '.'
000000000001b238         db  0x14 ; '.'
000000000001b239         db  0x2e ; '.'
000000000001b23a         db  0xff ; '.'
000000000001b23b         db  0xff ; '.'
000000000001b23c         db  0x2c ; ','
000000000001b23d         db  0x1e ; '.'
000000000001b23e         db  0x00 ; '.'
000000000001b23f         db  0x00 ; '.'
000000000001b240         db  0x64 ; 'd'
000000000001b241         db  0x2f ; '/'
000000000001b242         db  0xff ; '.'
000000000001b243         db  0xff ; '.'
000000000001b244         db  0x68 ; 'h'
000000000001b245         db  0x1e ; '.'
000000000001b246         db  0x00 ; '.'
000000000001b247         db  0x00 ; '.'
000000000001b248         db  0xc4 ; '.'
000000000001b249         db  0x2f ; '/'
000000000001b24a         db  0xff ; '.'
000000000001b24b         db  0xff ; '.'
000000000001b24c         db  0xa0 ; '.'
000000000001b24d         db  0x1e ; '.'
000000000001b24e         db  0x00 ; '.'
000000000001b24f         db  0x00 ; '.'
000000000001b250         db  0x14 ; '.'
000000000001b251         db  0x30 ; '0'
000000000001b252         db  0xff ; '.'
000000000001b253         db  0xff ; '.'
000000000001b254         db  0xb4 ; '.'
000000000001b255         db  0x1e ; '.'
000000000001b256         db  0x00 ; '.'
000000000001b257         db  0x00 ; '.'
000000000001b258         db  0x94 ; '.'
000000000001b259         db  0x30 ; '0'
000000000001b25a         db  0xff ; '.'
000000000001b25b         db  0xff ; '.'
000000000001b25c         db  0xe8 ; '.'
000000000001b25d         db  0x1e ; '.'
000000000001b25e         db  0x00 ; '.'
000000000001b25f         db  0x00 ; '.'
000000000001b260         db  0x04 ; '.'
000000000001b261         db  0x31 ; '1'
000000000001b262         db  0xff ; '.'
000000000001b263         db  0xff ; '.'
000000000001b264         db  0xfc ; '.'
000000000001b265         db  0x1e ; '.'
000000000001b266         db  0x00 ; '.'
000000000001b267         db  0x00 ; '.'
000000000001b268         db  0x74 ; 't'
000000000001b269         db  0x31 ; '1'
000000000001b26a         db  0xff ; '.'
000000000001b26b         db  0xff ; '.'
000000000001b26c         db  0x48 ; 'H'
000000000001b26d         db  0x1f ; '.'
000000000001b26e         db  0x00 ; '.'
000000000001b26f         db  0x00 ; '.'
000000000001b270         db  0xb4 ; '.'
000000000001b271         db  0x31 ; '1'
000000000001b272         db  0xff ; '.'
000000000001b273         db  0xff ; '.'
000000000001b274         db  0x5c ; '\'
000000000001b275         db  0x1f ; '.'
000000000001b276         db  0x00 ; '.'
000000000001b277         db  0x00 ; '.'
000000000001b278         db  0xd4 ; '.'
000000000001b279         db  0x31 ; '1'
000000000001b27a         db  0xff ; '.'
000000000001b27b         db  0xff ; '.'
000000000001b27c         db  0x70 ; 'p'
000000000001b27d         db  0x1f ; '.'
000000000001b27e         db  0x00 ; '.'
000000000001b27f         db  0x00 ; '.'
000000000001b280         db  0x94 ; '.'
000000000001b281         db  0x33 ; '3'
000000000001b282         db  0xff ; '.'
000000000001b283         db  0xff ; '.'
000000000001b284         db  0xbc ; '.'
000000000001b285         db  0x1f ; '.'
000000000001b286         db  0x00 ; '.'
000000000001b287         db  0x00 ; '.'
000000000001b288         db  0x24 ; '$'
000000000001b289         db  0x34 ; '4'
000000000001b28a         db  0xff ; '.'
000000000001b28b         db  0xff ; '.'
000000000001b28c         db  0xe8 ; '.'
000000000001b28d         db  0x1f ; '.'
000000000001b28e         db  0x00 ; '.'
000000000001b28f         db  0x00 ; '.'
000000000001b290         db  0x04 ; '.'
000000000001b291         db  0x35 ; '5'
000000000001b292         db  0xff ; '.'
000000000001b293         db  0xff ; '.'
000000000001b294         db  0x14 ; '.'
000000000001b295         db  0x20 ; ' '
000000000001b296         db  0x00 ; '.'
000000000001b297         db  0x00 ; '.'
000000000001b298         db  0x44 ; 'D'
000000000001b299         db  0x37 ; '7'
000000000001b29a         db  0xff ; '.'
000000000001b29b         db  0xff ; '.'
000000000001b29c         db  0x4c ; 'L'
000000000001b29d         db  0x20 ; ' '
000000000001b29e         db  0x00 ; '.'
000000000001b29f         db  0x00 ; '.'
000000000001b2a0         db  0xd4 ; '.'
000000000001b2a1         db  0x39 ; '9'
000000000001b2a2         db  0xff ; '.'
000000000001b2a3         db  0xff ; '.'
000000000001b2a4         db  0x88 ; '.'
000000000001b2a5         db  0x20 ; ' '
000000000001b2a6         db  0x00 ; '.'
000000000001b2a7         db  0x00 ; '.'
000000000001b2a8         db  0x34 ; '4'
000000000001b2a9         db  0x3a ; ':'
000000000001b2aa         db  0xff ; '.'
000000000001b2ab         db  0xff ; '.'
000000000001b2ac         db  0xac ; '.'
000000000001b2ad         db  0x20 ; ' '
000000000001b2ae         db  0x00 ; '.'
000000000001b2af         db  0x00 ; '.'
000000000001b2b0         db  0x44 ; 'D'
000000000001b2b1         db  0x3c ; '<'
000000000001b2b2         db  0xff ; '.'
000000000001b2b3         db  0xff ; '.'
000000000001b2b4         db  0xe4 ; '.'
000000000001b2b5         db  0x20 ; ' '
000000000001b2b6         db  0x00 ; '.'
000000000001b2b7         db  0x00 ; '.'
000000000001b2b8         db  0x74 ; 't'
000000000001b2b9         db  0x3c ; '<'
000000000001b2ba         db  0xff ; '.'
000000000001b2bb         db  0xff ; '.'
000000000001b2bc         db  0x0c ; '.'
000000000001b2bd         db  0x21 ; '!'
000000000001b2be         db  0x00 ; '.'
000000000001b2bf         db  0x00 ; '.'
000000000001b2c0         db  0x84 ; '.'
000000000001b2c1         db  0x3c ; '<'
000000000001b2c2         db  0xff ; '.'
000000000001b2c3         db  0xff ; '.'
000000000001b2c4         db  0x20 ; ' '
000000000001b2c5         db  0x21 ; '!'
000000000001b2c6         db  0x00 ; '.'
000000000001b2c7         db  0x00 ; '.'
000000000001b2c8         db  0xb4 ; '.'
000000000001b2c9         db  0x3c ; '<'
000000000001b2ca         db  0xff ; '.'
000000000001b2cb         db  0xff ; '.'
000000000001b2cc         db  0x38 ; '8'
000000000001b2cd         db  0x21 ; '!'
000000000001b2ce         db  0x00 ; '.'
000000000001b2cf         db  0x00 ; '.'
000000000001b2d0         db  0xf4 ; '.'
000000000001b2d1         db  0x3c ; '<'
000000000001b2d2         db  0xff ; '.'
000000000001b2d3         db  0xff ; '.'
000000000001b2d4         db  0x50 ; 'P'
000000000001b2d5         db  0x21 ; '!'
000000000001b2d6         db  0x00 ; '.'
000000000001b2d7         db  0x00 ; '.'
000000000001b2d8         db  0x14 ; '.'
000000000001b2d9         db  0x3d ; '='
000000000001b2da         db  0xff ; '.'
000000000001b2db         db  0xff ; '.'
000000000001b2dc         db  0x6c ; 'l'
000000000001b2dd         db  0x21 ; '!'
000000000001b2de         db  0x00 ; '.'
000000000001b2df         db  0x00 ; '.'
000000000001b2e0         db  0xe4 ; '.'
000000000001b2e1         db  0x3d ; '='
000000000001b2e2         db  0xff ; '.'
000000000001b2e3         db  0xff ; '.'
000000000001b2e4         db  0x80 ; '.'
000000000001b2e5         db  0x21 ; '!'
000000000001b2e6         db  0x00 ; '.'
000000000001b2e7         db  0x00 ; '.'
000000000001b2e8         db  0xf4 ; '.'
000000000001b2e9         db  0x47 ; 'G'
000000000001b2ea         db  0xff ; '.'
000000000001b2eb         db  0xff ; '.'
000000000001b2ec         db  0x28 ; '('
000000000001b2ed         db  0x22 ; '"'
000000000001b2ee         db  0x00 ; '.'
000000000001b2ef         db  0x00 ; '.'
000000000001b2f0         db  0xe4 ; '.'
000000000001b2f1         db  0x49 ; 'I'
000000000001b2f2         db  0xff ; '.'
000000000001b2f3         db  0xff ; '.'
000000000001b2f4         db  0x64 ; 'd'
000000000001b2f5         db  0x22 ; '"'
000000000001b2f6         db  0x00 ; '.'
000000000001b2f7         db  0x00 ; '.'
000000000001b2f8         db  0x84 ; '.'
000000000001b2f9         db  0x4a ; 'J'
000000000001b2fa         db  0xff ; '.'
000000000001b2fb         db  0xff ; '.'
000000000001b2fc         db  0x94 ; '.'
000000000001b2fd         db  0x22 ; '"'
000000000001b2fe         db  0x00 ; '.'
000000000001b2ff         db  0x00 ; '.'
000000000001b300         db  0x84 ; '.'
000000000001b301         db  0x4b ; 'K'
000000000001b302         db  0xff ; '.'
000000000001b303         db  0xff ; '.'
000000000001b304         db  0xcc ; '.'
000000000001b305         db  0x22 ; '"'
000000000001b306         db  0x00 ; '.'
000000000001b307         db  0x00 ; '.'
000000000001b308         db  0x24 ; '$'
000000000001b309         db  0x4c ; 'L'
000000000001b30a         db  0xff ; '.'
000000000001b30b         db  0xff ; '.'
000000000001b30c         db  0xfc ; '.'
000000000001b30d         db  0x22 ; '"'
000000000001b30e         db  0x00 ; '.'
000000000001b30f         db  0x00 ; '.'
000000000001b310         db  0x24 ; '$'
000000000001b311         db  0x4d ; 'M'
000000000001b312         db  0xff ; '.'
000000000001b313         db  0xff ; '.'
000000000001b314         db  0x34 ; '4'
000000000001b315         db  0x23 ; '#'
000000000001b316         db  0x00 ; '.'
000000000001b317         db  0x00 ; '.'
000000000001b318         db  0xc4 ; '.'
000000000001b319         db  0x4d ; 'M'
000000000001b31a         db  0xff ; '.'
000000000001b31b         db  0xff ; '.'
000000000001b31c         db  0x4c ; 'L'
000000000001b31d         db  0x23 ; '#'
000000000001b31e         db  0x00 ; '.'
000000000001b31f         db  0x00 ; '.'
000000000001b320         db  0x14 ; '.'
000000000001b321         db  0x4e ; 'N'
000000000001b322         db  0xff ; '.'
000000000001b323         db  0xff ; '.'
000000000001b324         db  0x64 ; 'd'
000000000001b325         db  0x23 ; '#'
000000000001b326         db  0x00 ; '.'
000000000001b327         db  0x00 ; '.'
000000000001b328         db  0xe4 ; '.'
000000000001b329         db  0x51 ; 'Q'
000000000001b32a         db  0xff ; '.'
000000000001b32b         db  0xff ; '.'
000000000001b32c         db  0xb0 ; '.'
000000000001b32d         db  0x23 ; '#'
000000000001b32e         db  0x00 ; '.'
000000000001b32f         db  0x00 ; '.'
000000000001b330         db  0x84 ; '.'
000000000001b331         db  0x52 ; 'R'
000000000001b332         db  0xff ; '.'
000000000001b333         db  0xff ; '.'
000000000001b334         db  0xfc ; '.'
000000000001b335         db  0x23 ; '#'
000000000001b336         db  0x00 ; '.'
000000000001b337         db  0x00 ; '.'
000000000001b338         db  0x44 ; 'D'
000000000001b339         db  0x54 ; 'T'
000000000001b33a         db  0xff ; '.'
000000000001b33b         db  0xff ; '.'
000000000001b33c         db  0x48 ; 'H'
000000000001b33d         db  0x24 ; '$'
000000000001b33e         db  0x00 ; '.'
000000000001b33f         db  0x00 ; '.'
000000000001b340         db  0x74 ; 't'
000000000001b341         db  0x54 ; 'T'
000000000001b342         db  0xff ; '.'
000000000001b343         db  0xff ; '.'
000000000001b344         db  0x74 ; 't'
000000000001b345         db  0x24 ; '$'
000000000001b346         db  0x00 ; '.'
000000000001b347         db  0x00 ; '.'
000000000001b348         db  0xb4 ; '.'
000000000001b349         db  0x56 ; 'V'
000000000001b34a         db  0xff ; '.'
000000000001b34b         db  0xff ; '.'
000000000001b34c         db  0xd8 ; '.'
000000000001b34d         db  0x24 ; '$'
000000000001b34e         db  0x00 ; '.'
000000000001b34f         db  0x00 ; '.'
000000000001b350         db  0xc4 ; '.'
000000000001b351         db  0x56 ; 'V'
000000000001b352         db  0xff ; '.'
000000000001b353         db  0xff ; '.'
000000000001b354         db  0xec ; '.'
000000000001b355         db  0x24 ; '$'
000000000001b356         db  0x00 ; '.'
000000000001b357         db  0x00 ; '.'
000000000001b358         db  0x14 ; '.'
000000000001b359         db  0x57 ; 'W'
000000000001b35a         db  0xff ; '.'
000000000001b35b         db  0xff ; '.'
000000000001b35c         db  0x18 ; '.'
000000000001b35d         db  0x25 ; '%'
000000000001b35e         db  0x00 ; '.'
000000000001b35f         db  0x00 ; '.'
000000000001b360         db  0x64 ; 'd'
000000000001b361         db  0x57 ; 'W'
000000000001b362         db  0xff ; '.'
000000000001b363         db  0xff ; '.'
000000000001b364         db  0x44 ; 'D'
000000000001b365         db  0x25 ; '%'
000000000001b366         db  0x00 ; '.'
000000000001b367         db  0x00 ; '.'
000000000001b368         db  0x24 ; '$'
000000000001b369         db  0x72 ; 'r'
000000000001b36a         db  0xff ; '.'
000000000001b36b         db  0xff ; '.'
000000000001b36c         db  0xbc ; '.'
000000000001b36d         db  0x25 ; '%'
000000000001b36e         db  0x00 ; '.'
000000000001b36f         db  0x00 ; '.'
000000000001b370         db  0x74 ; 't'
000000000001b371         db  0x72 ; 'r'
000000000001b372         db  0xff ; '.'
000000000001b373         db  0xff ; '.'
000000000001b374         db  0xec ; '.'
000000000001b375         db  0x25 ; '%'
000000000001b376         db  0x00 ; '.'
000000000001b377         db  0x00 ; '.'
000000000001b378         db  0x14 ; '.'
000000000001b379         db  0x73 ; 's'
000000000001b37a         db  0xff ; '.'
000000000001b37b         db  0xff ; '.'
000000000001b37c         db  0x0c ; '.'
000000000001b37d         db  0x26 ; '&'
000000000001b37e         db  0x00 ; '.'
000000000001b37f         db  0x00 ; '.'
000000000001b380         db  0x04 ; '.'
000000000001b381         db  0x74 ; 't'
000000000001b382         db  0xff ; '.'
000000000001b383         db  0xff ; '.'
000000000001b384         db  0x50 ; 'P'
000000000001b385         db  0x26 ; '&'
000000000001b386         db  0x00 ; '.'
000000000001b387         db  0x00 ; '.'
000000000001b388         db  0x44 ; 'D'
000000000001b389         db  0x86 ; '.'
000000000001b38a         db  0xff ; '.'
000000000001b38b         db  0xff ; '.'
000000000001b38c         db  0xc8 ; '.'
000000000001b38d         db  0x26 ; '&'
000000000001b38e         db  0x00 ; '.'
000000000001b38f         db  0x00 ; '.'
000000000001b390         db  0xf4 ; '.'
000000000001b391         db  0x87 ; '.'
000000000001b392         db  0xff ; '.'
000000000001b393         db  0xff ; '.'
000000000001b394         db  0x34 ; '4'
000000000001b395         db  0x27 ; '''
000000000001b396         db  0x00 ; '.'
000000000001b397         db  0x00 ; '.'
000000000001b398         db  0x34 ; '4'
000000000001b399         db  0x88 ; '.'
000000000001b39a         db  0xff ; '.'
000000000001b39b         db  0xff ; '.'
000000000001b39c         db  0x60 ; '`'
000000000001b39d         db  0x27 ; '''
000000000001b39e         db  0x00 ; '.'
000000000001b39f         db  0x00 ; '.'
000000000001b3a0         db  0x54 ; 'T'
000000000001b3a1         db  0x88 ; '.'
000000000001b3a2         db  0xff ; '.'
000000000001b3a3         db  0xff ; '.'
000000000001b3a4         db  0x74 ; 't'
000000000001b3a5         db  0x27 ; '''
000000000001b3a6         db  0x00 ; '.'
000000000001b3a7         db  0x00 ; '.'
000000000001b3a8         db  0x74 ; 't'
000000000001b3a9         db  0x88 ; '.'
000000000001b3aa         db  0xff ; '.'
000000000001b3ab         db  0xff ; '.'
000000000001b3ac         db  0x88 ; '.'
000000000001b3ad         db  0x27 ; '''
000000000001b3ae         db  0x00 ; '.'
000000000001b3af         db  0x00 ; '.'
000000000001b3b0         db  0xb4 ; '.'
000000000001b3b1         db  0x88 ; '.'
000000000001b3b2         db  0xff ; '.'
000000000001b3b3         db  0xff ; '.'
000000000001b3b4         db  0x9c ; '.'
000000000001b3b5         db  0x27 ; '''
000000000001b3b6         db  0x00 ; '.'
000000000001b3b7         db  0x00 ; '.'
000000000001b3b8         db  0xd4 ; '.'
000000000001b3b9         db  0x88 ; '.'
000000000001b3ba         db  0xff ; '.'
000000000001b3bb         db  0xff ; '.'
000000000001b3bc         db  0xb0 ; '.'
000000000001b3bd         db  0x27 ; '''
000000000001b3be         db  0x00 ; '.'
000000000001b3bf         db  0x00 ; '.'
000000000001b3c0         db  0x04 ; '.'
000000000001b3c1         db  0x89 ; '.'
000000000001b3c2         db  0xff ; '.'
000000000001b3c3         db  0xff ; '.'
000000000001b3c4         db  0xc4 ; '.'
000000000001b3c5         db  0x27 ; '''
000000000001b3c6         db  0x00 ; '.'
000000000001b3c7         db  0x00 ; '.'
000000000001b3c8         db  0x84 ; '.'
000000000001b3c9         db  0x89 ; '.'
000000000001b3ca         db  0xff ; '.'
000000000001b3cb         db  0xff ; '.'
000000000001b3cc         db  0x18 ; '.'
000000000001b3cd         db  0x28 ; '('
000000000001b3ce         db  0x00 ; '.'
000000000001b3cf         db  0x00 ; '.'
000000000001b3d0         db  0x74 ; 't'
000000000001b3d1         db  0x8a ; '.'
000000000001b3d2         db  0xff ; '.'
000000000001b3d3         db  0xff ; '.'
000000000001b3d4         db  0x84 ; '.'
000000000001b3d5         db  0x28 ; '('
000000000001b3d6         db  0x00 ; '.'
000000000001b3d7         db  0x00 ; '.'
000000000001b3d8         db  0x84 ; '.'
000000000001b3d9         db  0x8a ; '.'
000000000001b3da         db  0xff ; '.'
000000000001b3db         db  0xff ; '.'
000000000001b3dc         db  0x98 ; '.'
000000000001b3dd         db  0x28 ; '('
000000000001b3de         db  0x00 ; '.'
000000000001b3df         db  0x00 ; '.'
000000000001b3e0         db  0x24 ; '$'
000000000001b3e1         db  0x8b ; '.'
000000000001b3e2         db  0xff ; '.'
000000000001b3e3         db  0xff ; '.'
000000000001b3e4         db  0xc4 ; '.'
000000000001b3e5         db  0x28 ; '('
000000000001b3e6         db  0x00 ; '.'
000000000001b3e7         db  0x00 ; '.'
000000000001b3e8         db  0x44 ; 'D'
000000000001b3e9         db  0x8b ; '.'
000000000001b3ea         db  0xff ; '.'
000000000001b3eb         db  0xff ; '.'
000000000001b3ec         db  0xd8 ; '.'
000000000001b3ed         db  0x28 ; '('
000000000001b3ee         db  0x00 ; '.'
000000000001b3ef         db  0x00 ; '.'
000000000001b3f0         db  0x54 ; 'T'
000000000001b3f1         db  0x8b ; '.'
000000000001b3f2         db  0xff ; '.'
000000000001b3f3         db  0xff ; '.'
000000000001b3f4         db  0xec ; '.'
000000000001b3f5         db  0x28 ; '('
000000000001b3f6         db  0x00 ; '.'
000000000001b3f7         db  0x00 ; '.'
000000000001b3f8         db  0x74 ; 't'
000000000001b3f9         db  0x8b ; '.'
000000000001b3fa         db  0xff ; '.'
000000000001b3fb         db  0xff ; '.'
000000000001b3fc         db  0x00 ; '.'
000000000001b3fd         db  0x29 ; ')'
000000000001b3fe         db  0x00 ; '.'
000000000001b3ff         db  0x00 ; '.'
000000000001b400         db  0x94 ; '.'
000000000001b401         db  0x8b ; '.'
000000000001b402         db  0xff ; '.'
000000000001b403         db  0xff ; '.'
000000000001b404         db  0x14 ; '.'
000000000001b405         db  0x29 ; ')'
000000000001b406         db  0x00 ; '.'
000000000001b407         db  0x00 ; '.'
000000000001b408         db  0x24 ; '$'
000000000001b409         db  0x8c ; '.'
000000000001b40a         db  0xff ; '.'
000000000001b40b         db  0xff ; '.'
000000000001b40c         db  0x30 ; '0'
000000000001b40d         db  0x29 ; ')'
000000000001b40e         db  0x00 ; '.'
000000000001b40f         db  0x00 ; '.'
000000000001b410         db  0xb4 ; '.'
000000000001b411         db  0x8c ; '.'
000000000001b412         db  0xff ; '.'
000000000001b413         db  0xff ; '.'
000000000001b414         db  0x4c ; 'L'
000000000001b415         db  0x29 ; ')'
000000000001b416         db  0x00 ; '.'
000000000001b417         db  0x00 ; '.'
000000000001b418         db  0xc4 ; '.'
000000000001b419         db  0x8c ; '.'
000000000001b41a         db  0xff ; '.'
000000000001b41b         db  0xff ; '.'
000000000001b41c         db  0x60 ; '`'
000000000001b41d         db  0x29 ; ')'
000000000001b41e         db  0x00 ; '.'
000000000001b41f         db  0x00 ; '.'
000000000001b420         db  0xd4 ; '.'
000000000001b421         db  0x8c ; '.'
000000000001b422         db  0xff ; '.'
000000000001b423         db  0xff ; '.'
000000000001b424         db  0x74 ; 't'
000000000001b425         db  0x29 ; ')'
000000000001b426         db  0x00 ; '.'
000000000001b427         db  0x00 ; '.'
000000000001b428         db  0x74 ; 't'
000000000001b429         db  0x8d ; '.'
000000000001b42a         db  0xff ; '.'
000000000001b42b         db  0xff ; '.'
000000000001b42c         db  0x90 ; '.'
000000000001b42d         db  0x29 ; ')'
000000000001b42e         db  0x00 ; '.'
000000000001b42f         db  0x00 ; '.'
000000000001b430         db  0x84 ; '.'
000000000001b431         db  0x8d ; '.'
000000000001b432         db  0xff ; '.'
000000000001b433         db  0xff ; '.'
000000000001b434         db  0xa4 ; '.'
000000000001b435         db  0x29 ; ')'
000000000001b436         db  0x00 ; '.'
000000000001b437         db  0x00 ; '.'
000000000001b438         db  0xa4 ; '.'
000000000001b439         db  0x8d ; '.'
000000000001b43a         db  0xff ; '.'
000000000001b43b         db  0xff ; '.'
000000000001b43c         db  0xb8 ; '.'
000000000001b43d         db  0x29 ; ')'
000000000001b43e         db  0x00 ; '.'
000000000001b43f         db  0x00 ; '.'
000000000001b440         db  0xb4 ; '.'
000000000001b441         db  0x8d ; '.'
000000000001b442         db  0xff ; '.'
000000000001b443         db  0xff ; '.'
000000000001b444         db  0xcc ; '.'
000000000001b445         db  0x29 ; ')'
000000000001b446         db  0x00 ; '.'
000000000001b447         db  0x00 ; '.'
000000000001b448         db  0x44 ; 'D'
000000000001b449         db  0x8e ; '.'
000000000001b44a         db  0xff ; '.'
000000000001b44b         db  0xff ; '.'
000000000001b44c         db  0xe8 ; '.'
000000000001b44d         db  0x29 ; ')'
000000000001b44e         db  0x00 ; '.'
000000000001b44f         db  0x00 ; '.'
000000000001b450         db  0xe4 ; '.'
000000000001b451         db  0x8e ; '.'
000000000001b452         db  0xff ; '.'
000000000001b453         db  0xff ; '.'
000000000001b454         db  0x04 ; '.'
000000000001b455         db  0x2a ; '*'
000000000001b456         db  0x00 ; '.'
000000000001b457         db  0x00 ; '.'
000000000001b458         db  0xf4 ; '.'
000000000001b459         db  0x8e ; '.'
000000000001b45a         db  0xff ; '.'
000000000001b45b         db  0xff ; '.'
000000000001b45c         db  0x18 ; '.'
000000000001b45d         db  0x2a ; '*'
000000000001b45e         db  0x00 ; '.'
000000000001b45f         db  0x00 ; '.'
000000000001b460         db  0x14 ; '.'
000000000001b461         db  0x8f ; '.'
000000000001b462         db  0xff ; '.'
000000000001b463         db  0xff ; '.'
000000000001b464         db  0x2c ; ','
000000000001b465         db  0x2a ; '*'
000000000001b466         db  0x00 ; '.'
000000000001b467         db  0x00 ; '.'
000000000001b468         db  0x34 ; '4'
000000000001b469         db  0x8f ; '.'
000000000001b46a         db  0xff ; '.'
000000000001b46b         db  0xff ; '.'
000000000001b46c         db  0x40 ; '@'
000000000001b46d         db  0x2a ; '*'
000000000001b46e         db  0x00 ; '.'
000000000001b46f         db  0x00 ; '.'
000000000001b470         db  0x44 ; 'D'
000000000001b471         db  0x8f ; '.'
000000000001b472         db  0xff ; '.'
000000000001b473         db  0xff ; '.'
000000000001b474         db  0x54 ; 'T'
000000000001b475         db  0x2a ; '*'
000000000001b476         db  0x00 ; '.'
000000000001b477         db  0x00 ; '.'
000000000001b478         db  0x64 ; 'd'
000000000001b479         db  0x8f ; '.'
000000000001b47a         db  0xff ; '.'
000000000001b47b         db  0xff ; '.'
000000000001b47c         db  0x68 ; 'h'
000000000001b47d         db  0x2a ; '*'
000000000001b47e         db  0x00 ; '.'
000000000001b47f         db  0x00 ; '.'
000000000001b480         db  0x84 ; '.'
000000000001b481         db  0x8f ; '.'
000000000001b482         db  0xff ; '.'
000000000001b483         db  0xff ; '.'
000000000001b484         db  0x7c ; '|'
000000000001b485         db  0x2a ; '*'
000000000001b486         db  0x00 ; '.'
000000000001b487         db  0x00 ; '.'
000000000001b488         db  0xa4 ; '.'
000000000001b489         db  0x8f ; '.'
000000000001b48a         db  0xff ; '.'
000000000001b48b         db  0xff ; '.'
000000000001b48c         db  0x94 ; '.'
000000000001b48d         db  0x2a ; '*'
000000000001b48e         db  0x00 ; '.'
000000000001b48f         db  0x00 ; '.'
000000000001b490         db  0xd4 ; '.'
000000000001b491         db  0x90 ; '.'
000000000001b492         db  0xff ; '.'
000000000001b493         db  0xff ; '.'
000000000001b494         db  0xd0 ; '.'
000000000001b495         db  0x2a ; '*'
000000000001b496         db  0x00 ; '.'
000000000001b497         db  0x00 ; '.'
000000000001b498         db  0x74 ; 't'
000000000001b499         db  0x91 ; '.'
000000000001b49a         db  0xff ; '.'
000000000001b49b         db  0xff ; '.'
000000000001b49c         db  0x30 ; '0'
000000000001b49d         db  0x2b ; '+'
000000000001b49e         db  0x00 ; '.'
000000000001b49f         db  0x00 ; '.'
000000000001b4a0         db  0x94 ; '.'
000000000001b4a1         db  0x91 ; '.'
000000000001b4a2         db  0xff ; '.'
000000000001b4a3         db  0xff ; '.'
000000000001b4a4         db  0x44 ; 'D'
000000000001b4a5         db  0x2b ; '+'
000000000001b4a6         db  0x00 ; '.'
000000000001b4a7         db  0x00 ; '.'
000000000001b4a8         db  0xb4 ; '.'
000000000001b4a9         db  0x95 ; '.'
000000000001b4aa         db  0xff ; '.'
000000000001b4ab         db  0xff ; '.'
000000000001b4ac         db  0x58 ; 'X'
000000000001b4ad         db  0x2c ; ','
000000000001b4ae         db  0x00 ; '.'
000000000001b4af         db  0x00 ; '.'
000000000001b4b0         db  0xd4 ; '.'
000000000001b4b1         db  0x95 ; '.'
000000000001b4b2         db  0xff ; '.'
000000000001b4b3         db  0xff ; '.'
000000000001b4b4         db  0x6c ; 'l'
000000000001b4b5         db  0x2c ; ','
000000000001b4b6         db  0x00 ; '.'
000000000001b4b7         db  0x00 ; '.'
000000000001b4b8         db  0x54 ; 'T'
000000000001b4b9         db  0x96 ; '.'
000000000001b4ba         db  0xff ; '.'
000000000001b4bb         db  0xff ; '.'
000000000001b4bc         db  0x88 ; '.'
000000000001b4bd         db  0x2c ; ','
000000000001b4be         db  0x00 ; '.'
000000000001b4bf         db  0x00 ; '.'
000000000001b4c0         db  0x34 ; '4'
000000000001b4c1         db  0x97 ; '.'
000000000001b4c2         db  0xff ; '.'
000000000001b4c3         db  0xff ; '.'
000000000001b4c4         db  0xb4 ; '.'
000000000001b4c5         db  0x2c ; ','
000000000001b4c6         db  0x00 ; '.'
000000000001b4c7         db  0x00 ; '.'
000000000001b4c8         db  0xb4 ; '.'
000000000001b4c9         db  0x97 ; '.'
000000000001b4ca         db  0xff ; '.'
000000000001b4cb         db  0xff ; '.'
000000000001b4cc         db  0xd4 ; '.'
000000000001b4cd         db  0x2c ; ','
000000000001b4ce         db  0x00 ; '.'
000000000001b4cf         db  0x00 ; '.'
000000000001b4d0         db  0xd4 ; '.'
000000000001b4d1         db  0x97 ; '.'
000000000001b4d2         db  0xff ; '.'
000000000001b4d3         db  0xff ; '.'
000000000001b4d4         db  0xf0 ; '.'
000000000001b4d5         db  0x2c ; ','
000000000001b4d6         db  0x00 ; '.'
000000000001b4d7         db  0x00 ; '.'
000000000001b4d8         db  0x04 ; '.'
000000000001b4d9         db  0x98 ; '.'
000000000001b4da         db  0xff ; '.'
000000000001b4db         db  0xff ; '.'
000000000001b4dc         db  0x04 ; '.'
000000000001b4dd         db  0x2d ; '-'
000000000001b4de         db  0x00 ; '.'
000000000001b4df         db  0x00 ; '.'
000000000001b4e0         db  0x14 ; '.'
000000000001b4e1         db  0x98 ; '.'
000000000001b4e2         db  0xff ; '.'
000000000001b4e3         db  0xff ; '.'
000000000001b4e4         db  0x18 ; '.'
000000000001b4e5         db  0x2d ; '-'
000000000001b4e6         db  0x00 ; '.'
000000000001b4e7         db  0x00 ; '.'
000000000001b4e8         db  0x54 ; 'T'
000000000001b4e9         db  0x98 ; '.'
000000000001b4ea         db  0xff ; '.'
000000000001b4eb         db  0xff ; '.'
000000000001b4ec         db  0x3c ; '<'
000000000001b4ed         db  0x2d ; '-'
000000000001b4ee         db  0x00 ; '.'
000000000001b4ef         db  0x00 ; '.'
000000000001b4f0         db  0x84 ; '.'
000000000001b4f1         db  0x98 ; '.'
000000000001b4f2         db  0xff ; '.'
000000000001b4f3         db  0xff ; '.'
000000000001b4f4         db  0x50 ; 'P'
000000000001b4f5         db  0x2d ; '-'
000000000001b4f6         db  0x00 ; '.'
000000000001b4f7         db  0x00 ; '.'
000000000001b4f8         db  0x14 ; '.'
000000000001b4f9         db  0x99 ; '.'
000000000001b4fa         db  0xff ; '.'
000000000001b4fb         db  0xff ; '.'
000000000001b4fc         db  0x68 ; 'h'
000000000001b4fd         db  0x2d ; '-'
000000000001b4fe         db  0x00 ; '.'
000000000001b4ff         db  0x00 ; '.'
000000000001b500         db  0x64 ; 'd'
000000000001b501         db  0x99 ; '.'
000000000001b502         db  0xff ; '.'
000000000001b503         db  0xff ; '.'
000000000001b504         db  0x80 ; '.'
000000000001b505         db  0x2d ; '-'
000000000001b506         db  0x00 ; '.'
000000000001b507         db  0x00 ; '.'
000000000001b508         db  0x84 ; '.'
000000000001b509         db  0x99 ; '.'
000000000001b50a         db  0xff ; '.'
000000000001b50b         db  0xff ; '.'
000000000001b50c         db  0x9c ; '.'
000000000001b50d         db  0x2d ; '-'
000000000001b50e         db  0x00 ; '.'
000000000001b50f         db  0x00 ; '.'
000000000001b510         db  0xb4 ; '.'
000000000001b511         db  0x99 ; '.'
000000000001b512         db  0xff ; '.'
000000000001b513         db  0xff ; '.'
000000000001b514         db  0xb8 ; '.'
000000000001b515         db  0x2d ; '-'
000000000001b516         db  0x00 ; '.'
000000000001b517         db  0x00 ; '.'
000000000001b518         db  0xe4 ; '.'
000000000001b519         db  0x99 ; '.'
000000000001b51a         db  0xff ; '.'
000000000001b51b         db  0xff ; '.'
000000000001b51c         db  0xe0 ; '.'
000000000001b51d         db  0x2d ; '-'
000000000001b51e         db  0x00 ; '.'
000000000001b51f         db  0x00 ; '.'
000000000001b520         db  0x04 ; '.'
000000000001b521         db  0x9a ; '.'
000000000001b522         db  0xff ; '.'
000000000001b523         db  0xff ; '.'
000000000001b524         db  0xfc ; '.'
000000000001b525         db  0x2d ; '-'
000000000001b526         db  0x00 ; '.'
000000000001b527         db  0x00 ; '.'
000000000001b528         db  0x44 ; 'D'
000000000001b529         db  0x9a ; '.'
000000000001b52a         db  0xff ; '.'
000000000001b52b         db  0xff ; '.'
000000000001b52c         db  0x14 ; '.'
000000000001b52d         db  0x2e ; '.'
000000000001b52e         db  0x00 ; '.'
000000000001b52f         db  0x00 ; '.'
000000000001b530         db  0x44 ; 'D'
000000000001b531         db  0x9b ; '.'
000000000001b532         db  0xff ; '.'
000000000001b533         db  0xff ; '.'
000000000001b534         db  0x60 ; '`'
000000000001b535         db  0x2e ; '.'
000000000001b536         db  0x00 ; '.'
000000000001b537         db  0x00 ; '.'
000000000001b538         db  0x74 ; 't'
000000000001b539         db  0x9b ; '.'
000000000001b53a         db  0xff ; '.'
000000000001b53b         db  0xff ; '.'
000000000001b53c         db  0x7c ; '|'
000000000001b53d         db  0x2e ; '.'
000000000001b53e         db  0x00 ; '.'
000000000001b53f         db  0x00 ; '.'
000000000001b540         db  0xa4 ; '.'
000000000001b541         db  0x9b ; '.'
000000000001b542         db  0xff ; '.'
000000000001b543         db  0xff ; '.'
000000000001b544         db  0x9c ; '.'
000000000001b545         db  0x2e ; '.'
000000000001b546         db  0x00 ; '.'
000000000001b547         db  0x00 ; '.'
000000000001b548         db  0x84 ; '.'
000000000001b549         db  0x9c ; '.'
000000000001b54a         db  0xff ; '.'
000000000001b54b         db  0xff ; '.'
000000000001b54c         db  0xe4 ; '.'
000000000001b54d         db  0x2e ; '.'
000000000001b54e         db  0x00 ; '.'
000000000001b54f         db  0x00 ; '.'
000000000001b550         db  0xa4 ; '.'
000000000001b551         db  0xa0 ; '.'
000000000001b552         db  0xff ; '.'
000000000001b553         db  0xff ; '.'
000000000001b554         db  0x34 ; '4'
000000000001b555         db  0x2f ; '/'
000000000001b556         db  0x00 ; '.'
000000000001b557         db  0x00 ; '.'
000000000001b558         db  0x54 ; 'T'
000000000001b559         db  0xa1 ; '.'
000000000001b55a         db  0xff ; '.'
000000000001b55b         db  0xff ; '.'
000000000001b55c         db  0x5c ; '\'
000000000001b55d         db  0x2f ; '/'
000000000001b55e         db  0x00 ; '.'
000000000001b55f         db  0x00 ; '.'
000000000001b560         db  0x74 ; 't'
000000000001b561         db  0xa5 ; '.'
000000000001b562         db  0xff ; '.'
000000000001b563         db  0xff ; '.'
000000000001b564         db  0xac ; '.'
000000000001b565         db  0x2f ; '/'
000000000001b566         db  0x00 ; '.'
000000000001b567         db  0x00 ; '.'
000000000001b568         db  0x04 ; '.'
000000000001b569         db  0xa6 ; '.'
000000000001b56a         db  0xff ; '.'
000000000001b56b         db  0xff ; '.'
000000000001b56c         db  0xec ; '.'
000000000001b56d         db  0x2f ; '/'
000000000001b56e         db  0x00 ; '.'
000000000001b56f         db  0x00 ; '.'
000000000001b570         db  0x44 ; 'D'
000000000001b571         db  0xa6 ; '.'
000000000001b572         db  0xff ; '.'
000000000001b573         db  0xff ; '.'
000000000001b574         db  0x00 ; '.'
000000000001b575         db  0x30 ; '0'
000000000001b576         db  0x00 ; '.'
000000000001b577         db  0x00 ; '.'
000000000001b578         db  0x64 ; 'd'
000000000001b579         db  0xa6 ; '.'
000000000001b57a         db  0xff ; '.'
000000000001b57b         db  0xff ; '.'
000000000001b57c         db  0x14 ; '.'
000000000001b57d         db  0x30 ; '0'
000000000001b57e         db  0x00 ; '.'
000000000001b57f         db  0x00 ; '.'
000000000001b580         db  0x84 ; '.'
000000000001b581         db  0xa6 ; '.'
000000000001b582         db  0xff ; '.'
000000000001b583         db  0xff ; '.'
000000000001b584         db  0x28 ; '('
000000000001b585         db  0x30 ; '0'
000000000001b586         db  0x00 ; '.'
000000000001b587         db  0x00 ; '.'
000000000001b588         db  0x14 ; '.'
000000000001b589         db  0xa7 ; '.'
000000000001b58a         db  0xff ; '.'
000000000001b58b         db  0xff ; '.'
000000000001b58c         db  0x58 ; 'X'
000000000001b58d         db  0x30 ; '0'
000000000001b58e         db  0x00 ; '.'
000000000001b58f         db  0x00 ; '.'
000000000001b590         db  0x34 ; '4'
000000000001b591         db  0xa7 ; '.'
000000000001b592         db  0xff ; '.'
000000000001b593         db  0xff ; '.'
000000000001b594         db  0x6c ; 'l'
000000000001b595         db  0x30 ; '0'
000000000001b596         db  0x00 ; '.'
000000000001b597         db  0x00 ; '.'
000000000001b598         db  0x54 ; 'T'
000000000001b599         db  0xa7 ; '.'
000000000001b59a         db  0xff ; '.'
000000000001b59b         db  0xff ; '.'
000000000001b59c         db  0x80 ; '.'
000000000001b59d         db  0x30 ; '0'
000000000001b59e         db  0x00 ; '.'
000000000001b59f         db  0x00 ; '.'
000000000001b5a0         db  0x44 ; 'D'
000000000001b5a1         db  0xa8 ; '.'
000000000001b5a2         db  0xff ; '.'
000000000001b5a3         db  0xff ; '.'
000000000001b5a4         db  0xc0 ; '.'
000000000001b5a5         db  0x30 ; '0'
000000000001b5a6         db  0x00 ; '.'
000000000001b5a7         db  0x00 ; '.'
000000000001b5a8         db  0x84 ; '.'
000000000001b5a9         db  0xa8 ; '.'
000000000001b5aa         db  0xff ; '.'
000000000001b5ab         db  0xff ; '.'
000000000001b5ac         db  0xd4 ; '.'
000000000001b5ad         db  0x30 ; '0'
000000000001b5ae         db  0x00 ; '.'
000000000001b5af         db  0x00 ; '.'
000000000001b5b0         db  0xf4 ; '.'
000000000001b5b1         db  0xa8 ; '.'
000000000001b5b2         db  0xff ; '.'
000000000001b5b3         db  0xff ; '.'
000000000001b5b4         db  0x0c ; '.'
000000000001b5b5         db  0x31 ; '1'
000000000001b5b6         db  0x00 ; '.'
000000000001b5b7         db  0x00 ; '.'
000000000001b5b8         db  0x24 ; '$'
000000000001b5b9         db  0xa9 ; '.'
000000000001b5ba         db  0xff ; '.'
000000000001b5bb         db  0xff ; '.'
000000000001b5bc         db  0x24 ; '$'
000000000001b5bd         db  0x31 ; '1'
000000000001b5be         db  0x00 ; '.'
000000000001b5bf         db  0x00 ; '.'
000000000001b5c0         db  0x54 ; 'T'
000000000001b5c1         db  0xa9 ; '.'
000000000001b5c2         db  0xff ; '.'
000000000001b5c3         db  0xff ; '.'
000000000001b5c4         db  0x38 ; '8'
000000000001b5c5         db  0x31 ; '1'
000000000001b5c6         db  0x00 ; '.'
000000000001b5c7         db  0x00 ; '.'
000000000001b5c8         db  0x84 ; '.'
000000000001b5c9         db  0xa9 ; '.'
000000000001b5ca         db  0xff ; '.'
000000000001b5cb         db  0xff ; '.'
000000000001b5cc         db  0x54 ; 'T'
000000000001b5cd         db  0x31 ; '1'
000000000001b5ce         db  0x00 ; '.'
000000000001b5cf         db  0x00 ; '.'
000000000001b5d0         db  0xe4 ; '.'
000000000001b5d1         db  0xa9 ; '.'
000000000001b5d2         db  0xff ; '.'
000000000001b5d3         db  0xff ; '.'
000000000001b5d4         db  0x90 ; '.'
000000000001b5d5         db  0x31 ; '1'
000000000001b5d6         db  0x00 ; '.'
000000000001b5d7         db  0x00 ; '.'
000000000001b5d8         db  0x74 ; 't'
000000000001b5d9         db  0xaa ; '.'
000000000001b5da         db  0xff ; '.'
000000000001b5db         db  0xff ; '.'
000000000001b5dc         db  0xc8 ; '.'
000000000001b5dd         db  0x31 ; '1'
000000000001b5de         db  0x00 ; '.'
000000000001b5df         db  0x00 ; '.'
000000000001b5e0         db  0xb4 ; '.'
000000000001b5e1         db  0xab ; '.'
000000000001b5e2         db  0xff ; '.'
000000000001b5e3         db  0xff ; '.'
000000000001b5e4         db  0x14 ; '.'
000000000001b5e5         db  0x32 ; '2'
000000000001b5e6         db  0x00 ; '.'
000000000001b5e7         db  0x00 ; '.'
000000000001b5e8         db  0x94 ; '.'
000000000001b5e9         db  0xac ; '.'
000000000001b5ea         db  0xff ; '.'
000000000001b5eb         db  0xff ; '.'
000000000001b5ec         db  0x68 ; 'h'
000000000001b5ed         db  0x32 ; '2'
000000000001b5ee         db  0x00 ; '.'
000000000001b5ef         db  0x00 ; '.'
000000000001b5f0         db  0xa4 ; '.'
000000000001b5f1         db  0xac ; '.'
000000000001b5f2         db  0xff ; '.'
000000000001b5f3         db  0xff ; '.'
000000000001b5f4         db  0x7c ; '|'
000000000001b5f5         db  0x32 ; '2'
000000000001b5f6         db  0x00 ; '.'
000000000001b5f7         db  0x00 ; '.'
000000000001b5f8         db  0x54 ; 'T'
000000000001b5f9         db  0xad ; '.'
000000000001b5fa         db  0xff ; '.'
000000000001b5fb         db  0xff ; '.'
000000000001b5fc         db  0xdc ; '.'
000000000001b5fd         db  0x32 ; '2'
000000000001b5fe         db  0x00 ; '.'
000000000001b5ff         db  0x00 ; '.'
000000000001b600         db  0xa4 ; '.'
000000000001b601         db  0xae ; '.'
000000000001b602         db  0xff ; '.'
000000000001b603         db  0xff ; '.'
000000000001b604         db  0x14 ; '.'
000000000001b605         db  0x33 ; '3'
000000000001b606         db  0x00 ; '.'
000000000001b607         db  0x00 ; '.'
000000000001b608         db  0x24 ; '$'
000000000001b609         db  0xaf ; '.'
000000000001b60a         db  0xff ; '.'
000000000001b60b         db  0xff ; '.'
000000000001b60c         db  0x64 ; 'd'
000000000001b60d         db  0x33 ; '3'
000000000001b60e         db  0x00 ; '.'
000000000001b60f         db  0x00 ; '.'
000000000001b610         db  0x44 ; 'D'
000000000001b611         db  0xaf ; '.'
000000000001b612         db  0xff ; '.'
000000000001b613         db  0xff ; '.'
000000000001b614         db  0x84 ; '.'
000000000001b615         db  0x33 ; '3'
000000000001b616         db  0x00 ; '.'
000000000001b617         db  0x00 ; '.'
000000000001b618         db  0x84 ; '.'
000000000001b619         db  0xaf ; '.'
000000000001b61a         db  0xff ; '.'
000000000001b61b         db  0xff ; '.'
000000000001b61c         db  0x9c ; '.'
000000000001b61d         db  0x33 ; '3'
000000000001b61e         db  0x00 ; '.'
000000000001b61f         db  0x00 ; '.'
000000000001b620         db  0xc4 ; '.'
000000000001b621         db  0xaf ; '.'
000000000001b622         db  0xff ; '.'
000000000001b623         db  0xff ; '.'
000000000001b624         db  0xbc ; '.'
000000000001b625         db  0x33 ; '3'
000000000001b626         db  0x00 ; '.'
000000000001b627         db  0x00 ; '.'
000000000001b628         db  0x44 ; 'D'
000000000001b629         db  0xb0 ; '.'
000000000001b62a         db  0xff ; '.'
000000000001b62b         db  0xff ; '.'
000000000001b62c         db  0xf4 ; '.'
000000000001b62d         db  0x33 ; '3'
000000000001b62e         db  0x00 ; '.'
000000000001b62f         db  0x00 ; '.'
000000000001b630         db  0x84 ; '.'
000000000001b631         db  0xb0 ; '.'
000000000001b632         db  0xff ; '.'
000000000001b633         db  0xff ; '.'
000000000001b634         db  0x14 ; '.'
000000000001b635         db  0x34 ; '4'
000000000001b636         db  0x00 ; '.'
000000000001b637         db  0x00 ; '.'
000000000001b638         db  0xe4 ; '.'
000000000001b639         db  0xb0 ; '.'
000000000001b63a         db  0xff ; '.'
000000000001b63b         db  0xff ; '.'
000000000001b63c         db  0x44 ; 'D'
000000000001b63d         db  0x34 ; '4'
000000000001b63e         db  0x00 ; '.'
000000000001b63f         db  0x00 ; '.'
000000000001b640         db  0x54 ; 'T'
000000000001b641         db  0xb1 ; '.'
000000000001b642         db  0xff ; '.'
000000000001b643         db  0xff ; '.'
000000000001b644         db  0x8c ; '.'
000000000001b645         db  0x34 ; '4'
000000000001b646         db  0x00 ; '.'
000000000001b647         db  0x00 ; '.'
000000000001b648         db  0x64 ; 'd'
000000000001b649         db  0xb1 ; '.'
000000000001b64a         db  0xff ; '.'
000000000001b64b         db  0xff ; '.'
000000000001b64c         db  0xa4 ; '.'
000000000001b64d         db  0x34 ; '4'
000000000001b64e         db  0x00 ; '.'
000000000001b64f         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x1b650; 0x1e298[ (11336 bytes)
        ; File offset : [112208; 123544[ (11336 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

000000000001b650         dd         0x00000014                                  ; Length of the record
000000000001b654         dd         0x00000000                                  ; CIE ID
000000000001b658         db         0x01                                        ; Version
000000000001b659         db         "zR", 0                                     ; Augmentation String
000000000001b65c         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
000000000001b65d         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
000000000001b65e         db         0x10                                        ; Return address register
000000000001b65f         db         0x01                                        ; Augmentation data length
000000000001b660         db         0x1b                                        ; FDE encoding
000000000001b661         db  0x0c ; '.'
000000000001b662         db  0x07 ; '.'
000000000001b663         db  0x08 ; '.'
000000000001b664         db  0x90 ; '.'
000000000001b665         db  0x01 ; '.'
000000000001b666         db  0x07 ; '.'
000000000001b667         db  0x10 ; '.'
000000000001b668         dd         0x00000014                                  ; Length of the record
000000000001b66c         dd         0x0000001c                                  ; FDE: parent CIE at 0x1b650 (FDE encoding = 0x1B)
000000000001b670         db         0x00, 0x9c, 0xfe, 0xff                      ; begin 0x5270
000000000001b674         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x529b)
000000000001b678         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b679         align      128
000000000001b680         dd         0x00000014                                  ; Length of the record
000000000001b684         dd         0x00000000                                  ; CIE ID
000000000001b688         db         0x01                                        ; Version
000000000001b689         db         "zR", 0                                     ; Augmentation String
000000000001b68c         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
000000000001b68d         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
000000000001b68e         db         0x10                                        ; Return address register
000000000001b68f         db         0x01                                        ; Augmentation data length
000000000001b690         db         0x1b                                        ; FDE encoding
000000000001b691         db  0x0c ; '.'
000000000001b692         db  0x07 ; '.'
000000000001b693         db  0x08 ; '.'
000000000001b694         db  0x90 ; '.'
000000000001b695         db  0x01 ; '.'
000000000001b696         db  0x00 ; '.'
000000000001b697         db  0x00 ; '.'
000000000001b698         dd         0x00000024                                  ; Length of the record
000000000001b69c         dd         0x0000001c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001b6a0         db         0x90, 0x7b, 0xfe, 0xff                      ; begin 0x3230
000000000001b6a4         db         0x50, 0x06, 2 dup (0x00)                    ; length 0x650 (end at 0x3880)
000000000001b6a8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b6a9         db  0x0e ; '.'
000000000001b6aa         db  0x10 ; '.'
000000000001b6ab         db  0x46 ; 'F'
000000000001b6ac         db  0x0e ; '.'
000000000001b6ad         db  0x18 ; '.'
000000000001b6ae         db  0x4a ; 'J'
000000000001b6af         db  0x0f ; '.'
000000000001b6b0         db  0x0b ; '.'
000000000001b6b1         db  0x77 ; 'w'
000000000001b6b2         db  0x08 ; '.'
000000000001b6b3         db  0x80 ; '.'
000000000001b6b4         db  0x00 ; '.'
000000000001b6b5         db  0x3f ; '?'
000000000001b6b6         db  0x1a ; '.'
000000000001b6b7         db  0x3b ; ';'
000000000001b6b8         db  0x2a ; '*'
000000000001b6b9         db  0x33 ; '3'
000000000001b6ba         db  0x24 ; '$'
000000000001b6bb         db  0x22 ; '"'
000000000001b6bc         db  0x00 ; '.'
000000000001b6bd         db  0x00 ; '.'
000000000001b6be         db  0x00 ; '.'
000000000001b6bf         db  0x00 ; '.'
000000000001b6c0         dd         0x00000014                                  ; Length of the record
000000000001b6c4         dd         0x00000044                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001b6c8         db         0xb8, 0x81, 0xfe, 0xff                      ; begin 0x3880
000000000001b6cc         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x3898)
000000000001b6d0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b6d1         align      8
000000000001b6d8         dd         0x00000010                                  ; Length of the record
000000000001b6dc         dd         0x0000005c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001b6e0         db         0xa0, 0x9c, 0xfe, 0xff                      ; begin 0x5380
000000000001b6e4         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x538c)
000000000001b6e8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b6e9         align      4
000000000001b6ec         dd         0x00000010                                  ; Length of the record
000000000001b6f0         dd         0x00000070                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001b6f4         db         2 dup (0x9c), 0xfe, 0xff                    ; begin 0x5390
000000000001b6f8         db         0x1c, 3 dup (0x00)                          ; length 0x1c (end at 0x53ac)
000000000001b6fc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b6fd         align      256
000000000001b700         dd         0x00000010                                  ; Length of the record
000000000001b704         dd         0x00000084                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001b708         db         0xa8, 0x9c, 0xfe, 0xff                      ; begin 0x53b0
000000000001b70c         db         0x12, 3 dup (0x00)                          ; length 0x12 (end at 0x53c2)
000000000001b710         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b711         align      4
000000000001b714         dd         0x00000010                                  ; Length of the record
000000000001b718         dd         0x00000098                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001b71c         db         0xb4, 0x9c, 0xfe, 0xff                      ; begin 0x53d0
000000000001b720         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x53d5)
000000000001b724         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b725         align      8
000000000001b728         dd         0x00000044                                  ; Length of the record
000000000001b72c         dd         0x000000ac                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001b730         db         0xb0, 0x9c, 0xfe, 0xff                      ; begin 0x53e0
000000000001b734         db         0x8a, 0x02, 2 dup (0x00)                    ; length 0x28a (end at 0x566a)
000000000001b738         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b739         db  0x4f ; 'O'
000000000001b73a         db  0x0e ; '.'
000000000001b73b         db  0x10 ; '.'
000000000001b73c         db  0x8f ; '.'
000000000001b73d         db  0x02 ; '.'
000000000001b73e         db  0x45 ; 'E'
000000000001b73f         db  0x0e ; '.'
000000000001b740         db  0x18 ; '.'
000000000001b741         db  0x8e ; '.'
000000000001b742         db  0x03 ; '.'
000000000001b743         db  0x47 ; 'G'
000000000001b744         db  0x0e ; '.'
000000000001b745         db  0x20 ; ' '
000000000001b746         db  0x8d ; '.'
000000000001b747         db  0x04 ; '.'
000000000001b748         db  0x42 ; 'B'
000000000001b749         db  0x0e ; '.'
000000000001b74a         db  0x28 ; '('
000000000001b74b         db  0x8c ; '.'
000000000001b74c         db  0x05 ; '.'
000000000001b74d         db  0x44 ; 'D'
000000000001b74e         db  0x0e ; '.'
000000000001b74f         db  0x30 ; '0'
000000000001b750         db  0x86 ; '.'
000000000001b751         db  0x06 ; '.'
000000000001b752         db  0x4b ; 'K'
000000000001b753         db  0x0e ; '.'
000000000001b754         db  0x38 ; '8'
000000000001b755         db  0x83 ; '.'
000000000001b756         db  0x07 ; '.'
000000000001b757         db  0x02 ; '.'
000000000001b758         db  0xdd ; '.'
000000000001b759         db  0x0a ; '.'
000000000001b75a         db  0x0e ; '.'
000000000001b75b         db  0x30 ; '0'
000000000001b75c         db  0x41 ; 'A'
000000000001b75d         db  0x0e ; '.'
000000000001b75e         db  0x28 ; '('
000000000001b75f         db  0x42 ; 'B'
000000000001b760         db  0x0e ; '.'
000000000001b761         db  0x20 ; ' '
000000000001b762         db  0x42 ; 'B'
000000000001b763         db  0x0e ; '.'
000000000001b764         db  0x18 ; '.'
000000000001b765         db  0x42 ; 'B'
000000000001b766         db  0x0e ; '.'
000000000001b767         db  0x10 ; '.'
000000000001b768         db  0x42 ; 'B'
000000000001b769         db  0x0e ; '.'
000000000001b76a         db  0x08 ; '.'
000000000001b76b         db  0x46 ; 'F'
000000000001b76c         db  0x0b ; '.'
000000000001b76d         db  0x00 ; '.'
000000000001b76e         db  0x00 ; '.'
000000000001b76f         db  0x00 ; '.'
000000000001b770         dd         0x00000010                                  ; Length of the record
000000000001b774         dd         0x000000f4                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001b778         db         0xf8, 0x9e, 0xfe, 0xff                      ; begin 0x5670
000000000001b77c         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x56c7)
000000000001b780         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b781         align      4
000000000001b784         dd         0x00000018                                  ; Length of the record
000000000001b788         dd         0x00000108                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001b78c         db         0x44, 0x9f, 0xfe, 0xff                      ; begin 0x56d0
000000000001b790         db         0x7f, 3 dup (0x00)                          ; length 0x7f (end at 0x574f)
000000000001b794         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b795         db  0x44 ; 'D'
000000000001b796         db  0x0e ; '.'
000000000001b797         db  0x20 ; ' '
000000000001b798         db  0x02 ; '.'
000000000001b799         db  0x42 ; 'B'
000000000001b79a         db  0x0a ; '.'
000000000001b79b         db  0x0e ; '.'
000000000001b79c         db  0x08 ; '.'
000000000001b79d         db  0x4a ; 'J'
000000000001b79e         db  0x0b ; '.'
000000000001b79f         db  0x00 ; '.'
000000000001b7a0         dd         0x00000060                                  ; Length of the record
000000000001b7a4         dd         0x00000124                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001b7a8         db         0xa8, 0x9f, 0xfe, 0xff                      ; begin 0x5750
000000000001b7ac         db         0x71, 0x02, 2 dup (0x00)                    ; length 0x271 (end at 0x59c1)
000000000001b7b0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b7b1         db  0x42 ; 'B'
000000000001b7b2         db  0x0e ; '.'
000000000001b7b3         db  0x10 ; '.'
000000000001b7b4         db  0x8f ; '.'
000000000001b7b5         db  0x02 ; '.'
000000000001b7b6         db  0x42 ; 'B'
000000000001b7b7         db  0x0e ; '.'
000000000001b7b8         db  0x18 ; '.'
000000000001b7b9         db  0x8e ; '.'
000000000001b7ba         db  0x03 ; '.'
000000000001b7bb         db  0x44 ; 'D'
000000000001b7bc         db  0x0e ; '.'
000000000001b7bd         db  0x20 ; ' '
000000000001b7be         db  0x8d ; '.'
000000000001b7bf         db  0x04 ; '.'
000000000001b7c0         db  0x42 ; 'B'
000000000001b7c1         db  0x0e ; '.'
000000000001b7c2         db  0x28 ; '('
000000000001b7c3         db  0x8c ; '.'
000000000001b7c4         db  0x05 ; '.'
000000000001b7c5         db  0x41 ; 'A'
000000000001b7c6         db  0x0e ; '.'
000000000001b7c7         db  0x30 ; '0'
000000000001b7c8         db  0x86 ; '.'
000000000001b7c9         db  0x06 ; '.'
000000000001b7ca         db  0x41 ; 'A'
000000000001b7cb         db  0x0e ; '.'
000000000001b7cc         db  0x38 ; '8'
000000000001b7cd         db  0x83 ; '.'
000000000001b7ce         db  0x07 ; '.'
000000000001b7cf         db  0x47 ; 'G'
000000000001b7d0         db  0x0e ; '.'
000000000001b7d1         db  0x90 ; '.'
000000000001b7d2         db  0x0d ; '.'
000000000001b7d3         db  0x03 ; '.'
000000000001b7d4         db  0x73 ; 's'
000000000001b7d5         db  0x01 ; '.'
000000000001b7d6         db  0x0a ; '.'
000000000001b7d7         db  0x0e ; '.'
000000000001b7d8         db  0x38 ; '8'
000000000001b7d9         db  0x41 ; 'A'
000000000001b7da         db  0x0e ; '.'
000000000001b7db         db  0x30 ; '0'
000000000001b7dc         db  0x41 ; 'A'
000000000001b7dd         db  0x0e ; '.'
000000000001b7de         db  0x28 ; '('
000000000001b7df         db  0x42 ; 'B'
000000000001b7e0         db  0x0e ; '.'
000000000001b7e1         db  0x20 ; ' '
000000000001b7e2         db  0x42 ; 'B'
000000000001b7e3         db  0x0e ; '.'
000000000001b7e4         db  0x18 ; '.'
000000000001b7e5         db  0x42 ; 'B'
000000000001b7e6         db  0x0e ; '.'
000000000001b7e7         db  0x10 ; '.'
000000000001b7e8         db  0x42 ; 'B'
000000000001b7e9         db  0x0e ; '.'
000000000001b7ea         db  0x08 ; '.'
000000000001b7eb         db  0x41 ; 'A'
000000000001b7ec         db  0x0b ; '.'
000000000001b7ed         db  0x02 ; '.'
000000000001b7ee         db  0x74 ; 't'
000000000001b7ef         db  0x0e ; '.'
000000000001b7f0         db  0x98 ; '.'
000000000001b7f1         db  0x0d ; '.'
000000000001b7f2         db  0x57 ; 'W'
000000000001b7f3         db  0x0e ; '.'
000000000001b7f4         db  0xa0 ; '.'
000000000001b7f5         db  0x0d ; '.'
000000000001b7f6         db  0x41 ; 'A'
000000000001b7f7         db  0x0e ; '.'
000000000001b7f8         db  0xa8 ; '.'
000000000001b7f9         db  0x0d ; '.'
000000000001b7fa         db  0x47 ; 'G'
000000000001b7fb         db  0x0e ; '.'
000000000001b7fc         db  0xb0 ; '.'
000000000001b7fd         db  0x0d ; '.'
000000000001b7fe         db  0x4e ; 'N'
000000000001b7ff         db  0x0e ; '.'
000000000001b800         db  0x90 ; '.'
000000000001b801         db  0x0d ; '.'
000000000001b802         db  0x00 ; '.'
000000000001b803         db  0x00 ; '.'
000000000001b804         dd         0x00000034                                  ; Length of the record
000000000001b808         dd         0x00000188                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001b80c         db         0xc4, 0xa1, 0xfe, 0xff                      ; begin 0x59d0
000000000001b810         db         0x66, 3 dup (0x00)                          ; length 0x66 (end at 0x5a36)
000000000001b814         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b815         db  0x42 ; 'B'
000000000001b816         db  0x0e ; '.'
000000000001b817         db  0x10 ; '.'
000000000001b818         db  0x8d ; '.'
000000000001b819         db  0x02 ; '.'
000000000001b81a         db  0x42 ; 'B'
000000000001b81b         db  0x0e ; '.'
000000000001b81c         db  0x18 ; '.'
000000000001b81d         db  0x8c ; '.'
000000000001b81e         db  0x03 ; '.'
000000000001b81f         db  0x44 ; 'D'
000000000001b820         db  0x0e ; '.'
000000000001b821         db  0x20 ; ' '
000000000001b822         db  0x86 ; '.'
000000000001b823         db  0x04 ; '.'
000000000001b824         db  0x41 ; 'A'
000000000001b825         db  0x0e ; '.'
000000000001b826         db  0x28 ; '('
000000000001b827         db  0x83 ; '.'
000000000001b828         db  0x05 ; '.'
000000000001b829         db  0x4f ; 'O'
000000000001b82a         db  0x0e ; '.'
000000000001b82b         db  0x30 ; '0'
000000000001b82c         db  0x02 ; '.'
000000000001b82d         db  0x47 ; 'G'
000000000001b82e         db  0x0e ; '.'
000000000001b82f         db  0x28 ; '('
000000000001b830         db  0x41 ; 'A'
000000000001b831         db  0x0e ; '.'
000000000001b832         db  0x20 ; ' '
000000000001b833         db  0x41 ; 'A'
000000000001b834         db  0x0e ; '.'
000000000001b835         db  0x18 ; '.'
000000000001b836         db  0x42 ; 'B'
000000000001b837         db  0x0e ; '.'
000000000001b838         db  0x10 ; '.'
000000000001b839         db  0x42 ; 'B'
000000000001b83a         db  0x0e ; '.'
000000000001b83b         db  0x08 ; '.'
000000000001b83c         dd         0x00000010                                  ; Length of the record
000000000001b840         dd         0x000001c0                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001b844         db         0xfc, 0xa1, 0xfe, 0xff                      ; begin 0x5a40
000000000001b848         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x5a76)
000000000001b84c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b84d         align      16
000000000001b850         dd         0x00000010                                  ; Length of the record
000000000001b854         dd         0x000001d4                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001b858         db         0x28, 0xa2, 0xfe, 0xff                      ; begin 0x5a80
000000000001b85c         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x5ab6)
000000000001b860         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b861         align      4
000000000001b864         dd         0x00000010                                  ; Length of the record
000000000001b868         dd         0x000001e8                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001b86c         db         0x54, 0xa2, 0xfe, 0xff                      ; begin 0x5ac0
000000000001b870         db         0x0b, 3 dup (0x00)                          ; length 0xb (end at 0x5acb)
000000000001b874         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b875         align      8
000000000001b878         dd         0x00000010                                  ; Length of the record
000000000001b87c         dd         0x000001fc                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001b880         db         0x50, 0xa2, 0xfe, 0xff                      ; begin 0x5ad0
000000000001b884         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x5ade)
000000000001b888         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b889         align      4
000000000001b88c         dd         0x00000028                                  ; Length of the record
000000000001b890         dd         0x00000210                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001b894         db         0x4c, 0xa2, 0xfe, 0xff                      ; begin 0x5ae0
000000000001b898         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x5b58)
000000000001b89c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b89d         db  0x41 ; 'A'
000000000001b89e         db  0x0e ; '.'
000000000001b89f         db  0x10 ; '.'
000000000001b8a0         db  0x86 ; '.'
000000000001b8a1         db  0x02 ; '.'
000000000001b8a2         db  0x41 ; 'A'
000000000001b8a3         db  0x0e ; '.'
000000000001b8a4         db  0x18 ; '.'
000000000001b8a5         db  0x83 ; '.'
000000000001b8a6         db  0x03 ; '.'
000000000001b8a7         db  0x56 ; 'V'
000000000001b8a8         db  0x0e ; '.'
000000000001b8a9         db  0x30 ; '0'
000000000001b8aa         db  0x02 ; '.'
000000000001b8ab         db  0x43 ; 'C'
000000000001b8ac         db  0x0a ; '.'
000000000001b8ad         db  0x0e ; '.'
000000000001b8ae         db  0x18 ; '.'
000000000001b8af         db  0x41 ; 'A'
000000000001b8b0         db  0x0e ; '.'
000000000001b8b1         db  0x10 ; '.'
000000000001b8b2         db  0x41 ; 'A'
000000000001b8b3         db  0x0e ; '.'
000000000001b8b4         db  0x08 ; '.'
000000000001b8b5         db  0x43 ; 'C'
000000000001b8b6         db  0x0b ; '.'
000000000001b8b7         db  0x00 ; '.'
000000000001b8b8         dd         0x0000003c                                  ; Length of the record
000000000001b8bc         dd         0x0000023c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001b8c0         db         0xa0, 0xa2, 0xfe, 0xff                      ; begin 0x5b60
000000000001b8c4         db         0xd1, 3 dup (0x00)                          ; length 0xd1 (end at 0x5c31)
000000000001b8c8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b8c9         db  0x42 ; 'B'
000000000001b8ca         db  0x0e ; '.'
000000000001b8cb         db  0x10 ; '.'
000000000001b8cc         db  0x8e ; '.'
000000000001b8cd         db  0x02 ; '.'
000000000001b8ce         db  0x42 ; 'B'
000000000001b8cf         db  0x0e ; '.'
000000000001b8d0         db  0x18 ; '.'
000000000001b8d1         db  0x8d ; '.'
000000000001b8d2         db  0x03 ; '.'
000000000001b8d3         db  0x42 ; 'B'
000000000001b8d4         db  0x0e ; '.'
000000000001b8d5         db  0x20 ; ' '
000000000001b8d6         db  0x8c ; '.'
000000000001b8d7         db  0x04 ; '.'
000000000001b8d8         db  0x41 ; 'A'
000000000001b8d9         db  0x0e ; '.'
000000000001b8da         db  0x28 ; '('
000000000001b8db         db  0x86 ; '.'
000000000001b8dc         db  0x05 ; '.'
000000000001b8dd         db  0x44 ; 'D'
000000000001b8de         db  0x0e ; '.'
000000000001b8df         db  0x30 ; '0'
000000000001b8e0         db  0x83 ; '.'
000000000001b8e1         db  0x06 ; '.'
000000000001b8e2         db  0x02 ; '.'
000000000001b8e3         db  0x7b ; '{'
000000000001b8e4         db  0x0a ; '.'
000000000001b8e5         db  0x0e ; '.'
000000000001b8e6         db  0x28 ; '('
000000000001b8e7         db  0x41 ; 'A'
000000000001b8e8         db  0x0e ; '.'
000000000001b8e9         db  0x20 ; ' '
000000000001b8ea         db  0x42 ; 'B'
000000000001b8eb         db  0x0e ; '.'
000000000001b8ec         db  0x18 ; '.'
000000000001b8ed         db  0x42 ; 'B'
000000000001b8ee         db  0x0e ; '.'
000000000001b8ef         db  0x10 ; '.'
000000000001b8f0         db  0x42 ; 'B'
000000000001b8f1         db  0x0e ; '.'
000000000001b8f2         db  0x08 ; '.'
000000000001b8f3         db  0x43 ; 'C'
000000000001b8f4         db  0x0b ; '.'
000000000001b8f5         db  0x00 ; '.'
000000000001b8f6         db  0x00 ; '.'
000000000001b8f7         db  0x00 ; '.'
000000000001b8f8         dd         0x0000001c                                  ; Length of the record
000000000001b8fc         dd         0x0000027c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001b900         db         0x40, 0xa3, 0xfe, 0xff                      ; begin 0x5c40
000000000001b904         db         0x92, 0x01, 2 dup (0x00)                    ; length 0x192 (end at 0x5dd2)
000000000001b908         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b909         db  0x41 ; 'A'
000000000001b90a         db  0x0e ; '.'
000000000001b90b         db  0x10 ; '.'
000000000001b90c         db  0x83 ; '.'
000000000001b90d         db  0x02 ; '.'
000000000001b90e         db  0x03 ; '.'
000000000001b90f         db  0x0c ; '.'
000000000001b910         db  0x01 ; '.'
000000000001b911         db  0x0a ; '.'
000000000001b912         db  0x0e ; '.'
000000000001b913         db  0x08 ; '.'
000000000001b914         db  0x43 ; 'C'
000000000001b915         db  0x0b ; '.'
000000000001b916         db  0x00 ; '.'
000000000001b917         db  0x00 ; '.'
000000000001b918         dd         0x00000024                                  ; Length of the record
000000000001b91c         dd         0x0000029c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001b920         db         0xc0, 0xa4, 0xfe, 0xff                      ; begin 0x5de0
000000000001b924         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x5e08)
000000000001b928         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b929         db  0x41 ; 'A'
000000000001b92a         db  0x0e ; '.'
000000000001b92b         db  0x10 ; '.'
000000000001b92c         db  0x86 ; '.'
000000000001b92d         db  0x02 ; '.'
000000000001b92e         db  0x41 ; 'A'
000000000001b92f         db  0x0e ; '.'
000000000001b930         db  0x18 ; '.'
000000000001b931         db  0x83 ; '.'
000000000001b932         db  0x03 ; '.'
000000000001b933         db  0x4a ; 'J'
000000000001b934         db  0x0e ; '.'
000000000001b935         db  0x20 ; ' '
000000000001b936         db  0x4f ; 'O'
000000000001b937         db  0x0e ; '.'
000000000001b938         db  0x18 ; '.'
000000000001b939         db  0x47 ; 'G'
000000000001b93a         db  0x0e ; '.'
000000000001b93b         db  0x10 ; '.'
000000000001b93c         db  0x41 ; 'A'
000000000001b93d         db  0x0e ; '.'
000000000001b93e         db  0x08 ; '.'
000000000001b93f         db  0x00 ; '.'
000000000001b940         dd         0x00000010                                  ; Length of the record
000000000001b944         dd         0x000002c4                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001b948         db         0xc8, 0xa4, 0xfe, 0xff                      ; begin 0x5e10
000000000001b94c         db         0x26, 3 dup (0x00)                          ; length 0x26 (end at 0x5e36)
000000000001b950         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b951         align      4
000000000001b954         dd         0x00000010                                  ; Length of the record
000000000001b958         dd         0x000002d8                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001b95c         db         0xe4, 0xa4, 0xfe, 0xff                      ; begin 0x5e40
000000000001b960         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x5e76)
000000000001b964         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b965         align      8
000000000001b968         dd         0x00000010                                  ; Length of the record
000000000001b96c         dd         0x000002ec                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001b970         db         0x10, 0xa5, 0xfe, 0xff                      ; begin 0x5e80
000000000001b974         db         0x0b, 3 dup (0x00)                          ; length 0xb (end at 0x5e8b)
000000000001b978         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b979         align      4
000000000001b97c         dd         0x00000010                                  ; Length of the record
000000000001b980         dd         0x00000300                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001b984         db         0x0c, 0xa5, 0xfe, 0xff                      ; begin 0x5e90
000000000001b988         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x5e9e)
000000000001b98c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b98d         align      16
000000000001b990         dd         0x00000010                                  ; Length of the record
000000000001b994         dd         0x00000314                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001b998         db         0x08, 0xa5, 0xfe, 0xff                      ; begin 0x5ea0
000000000001b99c         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x5eae)
000000000001b9a0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b9a1         align      4
000000000001b9a4         dd         0x00000010                                  ; Length of the record
000000000001b9a8         dd         0x00000328                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001b9ac         db         0x04, 0xa5, 0xfe, 0xff                      ; begin 0x5eb0
000000000001b9b0         db         0x0b, 3 dup (0x00)                          ; length 0xb (end at 0x5ebb)
000000000001b9b4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b9b5         align      8
000000000001b9b8         dd         0x00000048                                  ; Length of the record
000000000001b9bc         dd         0x0000033c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001b9c0         db         0x00, 0xa5, 0xfe, 0xff                      ; begin 0x5ec0
000000000001b9c4         db         0x7b, 0x01, 2 dup (0x00)                    ; length 0x17b (end at 0x603b)
000000000001b9c8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001b9c9         db  0x42 ; 'B'
000000000001b9ca         db  0x0e ; '.'
000000000001b9cb         db  0x10 ; '.'
000000000001b9cc         db  0x8f ; '.'
000000000001b9cd         db  0x02 ; '.'
000000000001b9ce         db  0x42 ; 'B'
000000000001b9cf         db  0x0e ; '.'
000000000001b9d0         db  0x18 ; '.'
000000000001b9d1         db  0x8e ; '.'
000000000001b9d2         db  0x03 ; '.'
000000000001b9d3         db  0x45 ; 'E'
000000000001b9d4         db  0x0e ; '.'
000000000001b9d5         db  0x20 ; ' '
000000000001b9d6         db  0x8d ; '.'
000000000001b9d7         db  0x04 ; '.'
000000000001b9d8         db  0x42 ; 'B'
000000000001b9d9         db  0x0e ; '.'
000000000001b9da         db  0x28 ; '('
000000000001b9db         db  0x8c ; '.'
000000000001b9dc         db  0x05 ; '.'
000000000001b9dd         db  0x45 ; 'E'
000000000001b9de         db  0x0e ; '.'
000000000001b9df         db  0x30 ; '0'
000000000001b9e0         db  0x86 ; '.'
000000000001b9e1         db  0x06 ; '.'
000000000001b9e2         db  0x41 ; 'A'
000000000001b9e3         db  0x0e ; '.'
000000000001b9e4         db  0x38 ; '8'
000000000001b9e5         db  0x83 ; '.'
000000000001b9e6         db  0x07 ; '.'
000000000001b9e7         db  0x44 ; 'D'
000000000001b9e8         db  0x0e ; '.'
000000000001b9e9         db  0x40 ; '@'
000000000001b9ea         db  0x02 ; '.'
000000000001b9eb         db  0xae ; '.'
000000000001b9ec         db  0x0a ; '.'
000000000001b9ed         db  0x0e ; '.'
000000000001b9ee         db  0x38 ; '8'
000000000001b9ef         db  0x41 ; 'A'
000000000001b9f0         db  0x0e ; '.'
000000000001b9f1         db  0x30 ; '0'
000000000001b9f2         db  0x41 ; 'A'
000000000001b9f3         db  0x0e ; '.'
000000000001b9f4         db  0x28 ; '('
000000000001b9f5         db  0x42 ; 'B'
000000000001b9f6         db  0x0e ; '.'
000000000001b9f7         db  0x20 ; ' '
000000000001b9f8         db  0x42 ; 'B'
000000000001b9f9         db  0x0e ; '.'
000000000001b9fa         db  0x18 ; '.'
000000000001b9fb         db  0x42 ; 'B'
000000000001b9fc         db  0x0e ; '.'
000000000001b9fd         db  0x10 ; '.'
000000000001b9fe         db  0x42 ; 'B'
000000000001b9ff         db  0x0e ; '.'
000000000001ba00         db  0x08 ; '.'
000000000001ba01         db  0x43 ; 'C'
000000000001ba02         db  0x0b ; '.'
000000000001ba03         db  0x00 ; '.'
000000000001ba04         dd         0x00000038                                  ; Length of the record
000000000001ba08         dd         0x00000388                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001ba0c         db         0x34, 0xa6, 0xfe, 0xff                      ; begin 0x6040
000000000001ba10         db         0xc6, 3 dup (0x00)                          ; length 0xc6 (end at 0x6106)
000000000001ba14         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001ba15         db  0x4b ; 'K'
000000000001ba16         db  0x0e ; '.'
000000000001ba17         db  0x10 ; '.'
000000000001ba18         db  0x8c ; '.'
000000000001ba19         db  0x02 ; '.'
000000000001ba1a         db  0x44 ; 'D'
000000000001ba1b         db  0x0e ; '.'
000000000001ba1c         db  0x18 ; '.'
000000000001ba1d         db  0x86 ; '.'
000000000001ba1e         db  0x03 ; '.'
000000000001ba1f         db  0x41 ; 'A'
000000000001ba20         db  0x0e ; '.'
000000000001ba21         db  0x20 ; ' '
000000000001ba22         db  0x83 ; '.'
000000000001ba23         db  0x04 ; '.'
000000000001ba24         db  0x02 ; '.'
000000000001ba25         db  0x7e ; '~'
000000000001ba26         db  0x0a ; '.'
000000000001ba27         db  0x0e ; '.'
000000000001ba28         db  0x18 ; '.'
000000000001ba29         db  0x41 ; 'A'
000000000001ba2a         db  0x0e ; '.'
000000000001ba2b         db  0x10 ; '.'
000000000001ba2c         db  0x42 ; 'B'
000000000001ba2d         db  0x0e ; '.'
000000000001ba2e         db  0x08 ; '.'
000000000001ba2f         db  0x47 ; 'G'
000000000001ba30         db  0x0b ; '.'
000000000001ba31         db  0x50 ; 'P'
000000000001ba32         db  0x0e ; '.'
000000000001ba33         db  0x08 ; '.'
000000000001ba34         db  0xc3 ; '.'
000000000001ba35         db  0xc6 ; '.'
000000000001ba36         db  0xcc ; '.'
000000000001ba37         db  0x48 ; 'H'
000000000001ba38         db  0x0e ; '.'
000000000001ba39         db  0x20 ; ' '
000000000001ba3a         db  0x83 ; '.'
000000000001ba3b         db  0x04 ; '.'
000000000001ba3c         db  0x86 ; '.'
000000000001ba3d         db  0x03 ; '.'
000000000001ba3e         db  0x8c ; '.'
000000000001ba3f         db  0x02 ; '.'
000000000001ba40         dd         0x00000034                                  ; Length of the record
000000000001ba44         dd         0x000003c4                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001ba48         db         0xc8, 0xa6, 0xfe, 0xff                      ; begin 0x6110
000000000001ba4c         db         0xc9, 3 dup (0x00)                          ; length 0xc9 (end at 0x61d9)
000000000001ba50         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001ba51         db  0x42 ; 'B'
000000000001ba52         db  0x0e ; '.'
000000000001ba53         db  0x10 ; '.'
000000000001ba54         db  0x8c ; '.'
000000000001ba55         db  0x02 ; '.'
000000000001ba56         db  0x41 ; 'A'
000000000001ba57         db  0x0e ; '.'
000000000001ba58         db  0x18 ; '.'
000000000001ba59         db  0x86 ; '.'
000000000001ba5a         db  0x03 ; '.'
000000000001ba5b         db  0x41 ; 'A'
000000000001ba5c         db  0x0e ; '.'
000000000001ba5d         db  0x20 ; ' '
000000000001ba5e         db  0x83 ; '.'
000000000001ba5f         db  0x04 ; '.'
000000000001ba60         db  0x02 ; '.'
000000000001ba61         db  0xa4 ; '.'
000000000001ba62         db  0x0a ; '.'
000000000001ba63         db  0x0e ; '.'
000000000001ba64         db  0x18 ; '.'
000000000001ba65         db  0x41 ; 'A'
000000000001ba66         db  0x0e ; '.'
000000000001ba67         db  0x10 ; '.'
000000000001ba68         db  0x42 ; 'B'
000000000001ba69         db  0x0e ; '.'
000000000001ba6a         db  0x08 ; '.'
000000000001ba6b         db  0x41 ; 'A'
000000000001ba6c         db  0x0b ; '.'
000000000001ba6d         db  0x50 ; 'P'
000000000001ba6e         db  0x0e ; '.'
000000000001ba6f         db  0x18 ; '.'
000000000001ba70         db  0x41 ; 'A'
000000000001ba71         db  0x0e ; '.'
000000000001ba72         db  0x10 ; '.'
000000000001ba73         db  0x42 ; 'B'
000000000001ba74         db  0x0e ; '.'
000000000001ba75         db  0x08 ; '.'
000000000001ba76         db  0x00 ; '.'
000000000001ba77         db  0x00 ; '.'
000000000001ba78         dd         0x00000028                                  ; Length of the record
000000000001ba7c         dd         0x000003fc                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001ba80         db         0x60, 0xa7, 0xfe, 0xff                      ; begin 0x61e0
000000000001ba84         db         0xbb, 3 dup (0x00)                          ; length 0xbb (end at 0x629b)
000000000001ba88         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001ba89         db  0x41 ; 'A'
000000000001ba8a         db  0x0e ; '.'
000000000001ba8b         db  0x10 ; '.'
000000000001ba8c         db  0x86 ; '.'
000000000001ba8d         db  0x02 ; '.'
000000000001ba8e         db  0x41 ; 'A'
000000000001ba8f         db  0x0e ; '.'
000000000001ba90         db  0x18 ; '.'
000000000001ba91         db  0x83 ; '.'
000000000001ba92         db  0x03 ; '.'
000000000001ba93         db  0x46 ; 'F'
000000000001ba94         db  0x0e ; '.'
000000000001ba95         db  0x20 ; ' '
000000000001ba96         db  0x02 ; '.'
000000000001ba97         db  0x7b ; '{'
000000000001ba98         db  0x0a ; '.'
000000000001ba99         db  0x0e ; '.'
000000000001ba9a         db  0x18 ; '.'
000000000001ba9b         db  0x41 ; 'A'
000000000001ba9c         db  0x0e ; '.'
000000000001ba9d         db  0x10 ; '.'
000000000001ba9e         db  0x41 ; 'A'
000000000001ba9f         db  0x0e ; '.'
000000000001baa0         db  0x08 ; '.'
000000000001baa1         db  0x4b ; 'K'
000000000001baa2         db  0x0b ; '.'
000000000001baa3         db  0x00 ; '.'
000000000001baa4         dd         0x00000020                                  ; Length of the record
000000000001baa8         dd         0x00000428                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001baac         db         0xf4, 0xa7, 0xfe, 0xff                      ; begin 0x62a0
000000000001bab0         db         0x3f, 3 dup (0x00)                          ; length 0x3f (end at 0x62df)
000000000001bab4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bab5         db  0x41 ; 'A'
000000000001bab6         db  0x0e ; '.'
000000000001bab7         db  0x10 ; '.'
000000000001bab8         db  0x83 ; '.'
000000000001bab9         db  0x02 ; '.'
000000000001baba         db  0x4d ; 'M'
000000000001babb         db  0x0e ; '.'
000000000001babc         db  0x20 ; ' '
000000000001babd         db  0x53 ; 'S'
000000000001babe         db  0x0a ; '.'
000000000001babf         db  0x0e ; '.'
000000000001bac0         db  0x10 ; '.'
000000000001bac1         db  0x46 ; 'F'
000000000001bac2         db  0x0e ; '.'
000000000001bac3         db  0x08 ; '.'
000000000001bac4         db  0x49 ; 'I'
000000000001bac5         db  0x0b ; '.'
000000000001bac6         db  0x00 ; '.'
000000000001bac7         db  0x00 ; '.'
000000000001bac8         dd         0x00000010                                  ; Length of the record
000000000001bacc         dd         0x0000044c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001bad0         db         0x10, 0xa8, 0xfe, 0xff                      ; begin 0x62e0
000000000001bad4         db         0x1b, 3 dup (0x00)                          ; length 0x1b (end at 0x62fb)
000000000001bad8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bad9         align      4
000000000001badc         dd         0x00000034                                  ; Length of the record
000000000001bae0         dd         0x00000460                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001bae4         db         0x1c, 0xa8, 0xfe, 0xff                      ; begin 0x6300
000000000001bae8         db         0x61, 3 dup (0x00)                          ; length 0x61 (end at 0x6361)
000000000001baec         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001baed         db  0x42 ; 'B'
000000000001baee         db  0x0e ; '.'
000000000001baef         db  0x10 ; '.'
000000000001baf0         db  0x8c ; '.'
000000000001baf1         db  0x02 ; '.'
000000000001baf2         db  0x41 ; 'A'
000000000001baf3         db  0x0e ; '.'
000000000001baf4         db  0x18 ; '.'
000000000001baf5         db  0x86 ; '.'
000000000001baf6         db  0x03 ; '.'
000000000001baf7         db  0x44 ; 'D'
000000000001baf8         db  0x0e ; '.'
000000000001baf9         db  0x20 ; ' '
000000000001bafa         db  0x83 ; '.'
000000000001bafb         db  0x04 ; '.'
000000000001bafc         db  0x77 ; 'w'
000000000001bafd         db  0x0a ; '.'
000000000001bafe         db  0x0e ; '.'
000000000001baff         db  0x18 ; '.'
000000000001bb00         db  0x41 ; 'A'
000000000001bb01         db  0x0e ; '.'
000000000001bb02         db  0x10 ; '.'
000000000001bb03         db  0x42 ; 'B'
000000000001bb04         db  0x0e ; '.'
000000000001bb05         db  0x08 ; '.'
000000000001bb06         db  0x47 ; 'G'
000000000001bb07         db  0x0b ; '.'
000000000001bb08         db  0x4b ; 'K'
000000000001bb09         db  0x0e ; '.'
000000000001bb0a         db  0x18 ; '.'
000000000001bb0b         db  0x4b ; 'K'
000000000001bb0c         db  0x0e ; '.'
000000000001bb0d         db  0x10 ; '.'
000000000001bb0e         db  0x42 ; 'B'
000000000001bb0f         db  0x0e ; '.'
000000000001bb10         db  0x08 ; '.'
000000000001bb11         db  0x00 ; '.'
000000000001bb12         db  0x00 ; '.'
000000000001bb13         db  0x00 ; '.'
000000000001bb14         dd         0x00000010                                  ; Length of the record
000000000001bb18         dd         0x00000498                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001bb1c         db         0x54, 0xa8, 0xfe, 0xff                      ; begin 0x6370
000000000001bb20         db         0x9e, 3 dup (0x00)                          ; length 0x9e (end at 0x640e)
000000000001bb24         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bb25         align      8
000000000001bb28         dd         0x00000010                                  ; Length of the record
000000000001bb2c         dd         0x000004ac                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001bb30         db         0xe0, 0xa8, 0xfe, 0xff                      ; begin 0x6410
000000000001bb34         db         0x99, 3 dup (0x00)                          ; length 0x99 (end at 0x64a9)
000000000001bb38         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bb39         align      4
000000000001bb3c         dd         0x00000010                                  ; Length of the record
000000000001bb40         dd         0x000004c0                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001bb44         db         0x6c, 0xa9, 0xfe, 0xff                      ; begin 0x64b0
000000000001bb48         db         0x9e, 3 dup (0x00)                          ; length 0x9e (end at 0x654e)
000000000001bb4c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bb4d         align      16
000000000001bb50         dd         0x00000010                                  ; Length of the record
000000000001bb54         dd         0x000004d4                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001bb58         db         0xf8, 0xa9, 0xfe, 0xff                      ; begin 0x6550
000000000001bb5c         db         0x99, 3 dup (0x00)                          ; length 0x99 (end at 0x65e9)
000000000001bb60         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bb61         align      4
000000000001bb64         dd         0x00000010                                  ; Length of the record
000000000001bb68         dd         0x000004e8                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001bb6c         db         0x84, 0xaa, 0xfe, 0xff                      ; begin 0x65f0
000000000001bb70         db         0x8d, 3 dup (0x00)                          ; length 0x8d (end at 0x667d)
000000000001bb74         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bb75         align      8
000000000001bb78         dd         0x00000010                                  ; Length of the record
000000000001bb7c         dd         0x000004fc                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001bb80         db         0x00, 0xab, 0xfe, 0xff                      ; begin 0x6680
000000000001bb84         db         0x8d, 3 dup (0x00)                          ; length 0x8d (end at 0x670d)
000000000001bb88         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bb89         align      4
000000000001bb8c         dd         0x00000010                                  ; Length of the record
000000000001bb90         dd         0x00000510                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001bb94         db         0x7c, 0xab, 0xfe, 0xff                      ; begin 0x6710
000000000001bb98         db         0x8d, 3 dup (0x00)                          ; length 0x8d (end at 0x679d)
000000000001bb9c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bb9d         align      32
000000000001bba0         dd         0x00000010                                  ; Length of the record
000000000001bba4         dd         0x00000524                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001bba8         db         0xf8, 0xab, 0xfe, 0xff                      ; begin 0x67a0
000000000001bbac         db         0x8d, 3 dup (0x00)                          ; length 0x8d (end at 0x682d)
000000000001bbb0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bbb1         align      4
000000000001bbb4         dd         0x00000010                                  ; Length of the record
000000000001bbb8         dd         0x00000538                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001bbbc         db         0x74, 0xac, 0xfe, 0xff                      ; begin 0x6830
000000000001bbc0         db         0xfa, 3 dup (0x00)                          ; length 0xfa (end at 0x692a)
000000000001bbc4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bbc5         align      8
000000000001bbc8         dd         0x00000018                                  ; Length of the record
000000000001bbcc         dd         0x0000054c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001bbd0         db         0x60, 0xad, 0xfe, 0xff                      ; begin 0x6930
000000000001bbd4         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x697a)
000000000001bbd8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bbd9         db  0x41 ; 'A'
000000000001bbda         db  0x0e ; '.'
000000000001bbdb         db  0x10 ; '.'
000000000001bbdc         db  0x83 ; '.'
000000000001bbdd         db  0x02 ; '.'
000000000001bbde         db  0x78 ; 'x'
000000000001bbdf         db  0x0a ; '.'
000000000001bbe0         db  0x0e ; '.'
000000000001bbe1         db  0x08 ; '.'
000000000001bbe2         db  0x47 ; 'G'
000000000001bbe3         db  0x0b ; '.'
000000000001bbe4         dd         0x00000010                                  ; Length of the record
000000000001bbe8         dd         0x00000568                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001bbec         db         0x94, 0xad, 0xfe, 0xff                      ; begin 0x6980
000000000001bbf0         db         0xa8, 3 dup (0x00)                          ; length 0xa8 (end at 0x6a28)
000000000001bbf4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bbf5         align      8
000000000001bbf8         dd         0x00000010                                  ; Length of the record
000000000001bbfc         dd         0x0000057c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001bc00         db         0x30, 0xae, 0xfe, 0xff                      ; begin 0x6a30
000000000001bc04         db         0x8d, 3 dup (0x00)                          ; length 0x8d (end at 0x6abd)
000000000001bc08         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bc09         align      4
000000000001bc0c         dd         0x00000010                                  ; Length of the record
000000000001bc10         dd         0x00000590                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001bc14         db         0xac, 0xae, 0xfe, 0xff                      ; begin 0x6ac0
000000000001bc18         db         0x8d, 3 dup (0x00)                          ; length 0x8d (end at 0x6b4d)
000000000001bc1c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bc1d         align      32
000000000001bc20         dd         0x0000003c                                  ; Length of the record
000000000001bc24         dd         0x000005a4                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001bc28         db         0x28, 0xaf, 0xfe, 0xff                      ; begin 0x6b50
000000000001bc2c         db         0xfe, 3 dup (0x00)                          ; length 0xfe (end at 0x6c4e)
000000000001bc30         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bc31         db  0x02 ; '.'
000000000001bc32         db  0x8a ; '.'
000000000001bc33         db  0x0e ; '.'
000000000001bc34         db  0x10 ; '.'
000000000001bc35         db  0x8c ; '.'
000000000001bc36         db  0x02 ; '.'
000000000001bc37         db  0x41 ; 'A'
000000000001bc38         db  0x0e ; '.'
000000000001bc39         db  0x18 ; '.'
000000000001bc3a         db  0x86 ; '.'
000000000001bc3b         db  0x03 ; '.'
000000000001bc3c         db  0x41 ; 'A'
000000000001bc3d         db  0x0e ; '.'
000000000001bc3e         db  0x20 ; ' '
000000000001bc3f         db  0x83 ; '.'
000000000001bc40         db  0x04 ; '.'
000000000001bc41         db  0x02 ; '.'
000000000001bc42         db  0x4f ; 'O'
000000000001bc43         db  0x0a ; '.'
000000000001bc44         db  0xc3 ; '.'
000000000001bc45         db  0x0e ; '.'
000000000001bc46         db  0x18 ; '.'
000000000001bc47         db  0x41 ; 'A'
000000000001bc48         db  0xc6 ; '.'
000000000001bc49         db  0x0e ; '.'
000000000001bc4a         db  0x10 ; '.'
000000000001bc4b         db  0x42 ; 'B'
000000000001bc4c         db  0xcc ; '.'
000000000001bc4d         db  0x0e ; '.'
000000000001bc4e         db  0x08 ; '.'
000000000001bc4f         db  0x4a ; 'J'
000000000001bc50         db  0x0b ; '.'
000000000001bc51         db  0x41 ; 'A'
000000000001bc52         db  0x0a ; '.'
000000000001bc53         db  0x0e ; '.'
000000000001bc54         db  0x18 ; '.'
000000000001bc55         db  0x41 ; 'A'
000000000001bc56         db  0x0e ; '.'
000000000001bc57         db  0x10 ; '.'
000000000001bc58         db  0x42 ; 'B'
000000000001bc59         db  0x0e ; '.'
000000000001bc5a         db  0x08 ; '.'
000000000001bc5b         db  0x44 ; 'D'
000000000001bc5c         db  0x0b ; '.'
000000000001bc5d         db  0x00 ; '.'
000000000001bc5e         db  0x00 ; '.'
000000000001bc5f         db  0x00 ; '.'
000000000001bc60         dd         0x00000048                                  ; Length of the record
000000000001bc64         dd         0x000005e4                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001bc68         db         0xe8, 0xaf, 0xfe, 0xff                      ; begin 0x6c50
000000000001bc6c         db         0xce, 0x01, 2 dup (0x00)                    ; length 0x1ce (end at 0x6e1e)
000000000001bc70         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bc71         db  0x42 ; 'B'
000000000001bc72         db  0x0e ; '.'
000000000001bc73         db  0x10 ; '.'
000000000001bc74         db  0x8f ; '.'
000000000001bc75         db  0x02 ; '.'
000000000001bc76         db  0x42 ; 'B'
000000000001bc77         db  0x0e ; '.'
000000000001bc78         db  0x18 ; '.'
000000000001bc79         db  0x8e ; '.'
000000000001bc7a         db  0x03 ; '.'
000000000001bc7b         db  0x42 ; 'B'
000000000001bc7c         db  0x0e ; '.'
000000000001bc7d         db  0x20 ; ' '
000000000001bc7e         db  0x8d ; '.'
000000000001bc7f         db  0x04 ; '.'
000000000001bc80         db  0x42 ; 'B'
000000000001bc81         db  0x0e ; '.'
000000000001bc82         db  0x28 ; '('
000000000001bc83         db  0x8c ; '.'
000000000001bc84         db  0x05 ; '.'
000000000001bc85         db  0x41 ; 'A'
000000000001bc86         db  0x0e ; '.'
000000000001bc87         db  0x30 ; '0'
000000000001bc88         db  0x86 ; '.'
000000000001bc89         db  0x06 ; '.'
000000000001bc8a         db  0x41 ; 'A'
000000000001bc8b         db  0x0e ; '.'
000000000001bc8c         db  0x38 ; '8'
000000000001bc8d         db  0x83 ; '.'
000000000001bc8e         db  0x07 ; '.'
000000000001bc8f         db  0x47 ; 'G'
000000000001bc90         db  0x0e ; '.'
000000000001bc91         db  0xe0 ; '.'
000000000001bc92         db  0x01 ; '.'
000000000001bc93         db  0x02 ; '.'
000000000001bc94         db  0x7c ; '|'
000000000001bc95         db  0x0a ; '.'
000000000001bc96         db  0x0e ; '.'
000000000001bc97         db  0x38 ; '8'
000000000001bc98         db  0x41 ; 'A'
000000000001bc99         db  0x0e ; '.'
000000000001bc9a         db  0x30 ; '0'
000000000001bc9b         db  0x41 ; 'A'
000000000001bc9c         db  0x0e ; '.'
000000000001bc9d         db  0x28 ; '('
000000000001bc9e         db  0x42 ; 'B'
000000000001bc9f         db  0x0e ; '.'
000000000001bca0         db  0x20 ; ' '
000000000001bca1         db  0x42 ; 'B'
000000000001bca2         db  0x0e ; '.'
000000000001bca3         db  0x18 ; '.'
000000000001bca4         db  0x42 ; 'B'
000000000001bca5         db  0x0e ; '.'
000000000001bca6         db  0x10 ; '.'
000000000001bca7         db  0x42 ; 'B'
000000000001bca8         db  0x0e ; '.'
000000000001bca9         db  0x08 ; '.'
000000000001bcaa         db  0x49 ; 'I'
000000000001bcab         db  0x0b ; '.'
000000000001bcac         dd         0x00000014                                  ; Length of the record
000000000001bcb0         dd         0x00000630                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001bcb4         db         0x6c, 0xb1, 0xfe, 0xff                      ; begin 0x6e20
000000000001bcb8         db         0x41, 3 dup (0x00)                          ; length 0x41 (end at 0x6e61)
000000000001bcbc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bcbd         db  0x63 ; 'c'
000000000001bcbe         db  0x0e ; '.'
000000000001bcbf         db  0x10 ; '.'
000000000001bcc0         db  0x5c ; '\'
000000000001bcc1         db  0x0e ; '.'
000000000001bcc2         db  0x08 ; '.'
000000000001bcc3         db  0x00 ; '.'
000000000001bcc4         dd         0x00000018                                  ; Length of the record
000000000001bcc8         dd         0x00000648                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001bccc         db         0xa4, 0xb1, 0xfe, 0xff                      ; begin 0x6e70
000000000001bcd0         db         0x61, 3 dup (0x00)                          ; length 0x61 (end at 0x6ed1)
000000000001bcd4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bcd5         db  0x48 ; 'H'
000000000001bcd6         db  0x0e ; '.'
000000000001bcd7         db  0x10 ; '.'
000000000001bcd8         db  0x83 ; '.'
000000000001bcd9         db  0x02 ; '.'
000000000001bcda         db  0x52 ; 'R'
000000000001bcdb         db  0x0a ; '.'
000000000001bcdc         db  0x0e ; '.'
000000000001bcdd         db  0x08 ; '.'
000000000001bcde         db  0x56 ; 'V'
000000000001bcdf         db  0x0b ; '.'
000000000001bce0         dd         0x00000028                                  ; Length of the record
000000000001bce4         dd         0x00000664                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001bce8         db         0xf8, 0xb1, 0xfe, 0xff                      ; begin 0x6ee0
000000000001bcec         db         0xea, 3 dup (0x00)                          ; length 0xea (end at 0x6fca)
000000000001bcf0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bcf1         db  0x41 ; 'A'
000000000001bcf2         db  0x0e ; '.'
000000000001bcf3         db  0x10 ; '.'
000000000001bcf4         db  0x86 ; '.'
000000000001bcf5         db  0x02 ; '.'
000000000001bcf6         db  0x41 ; 'A'
000000000001bcf7         db  0x0e ; '.'
000000000001bcf8         db  0x18 ; '.'
000000000001bcf9         db  0x83 ; '.'
000000000001bcfa         db  0x03 ; '.'
000000000001bcfb         db  0x47 ; 'G'
000000000001bcfc         db  0x0e ; '.'
000000000001bcfd         db  0xb0 ; '.'
000000000001bcfe         db  0x01 ; '.'
000000000001bcff         db  0x02 ; '.'
000000000001bd00         db  0xd9 ; '.'
000000000001bd01         db  0x0a ; '.'
000000000001bd02         db  0x0e ; '.'
000000000001bd03         db  0x18 ; '.'
000000000001bd04         db  0x41 ; 'A'
000000000001bd05         db  0x0e ; '.'
000000000001bd06         db  0x10 ; '.'
000000000001bd07         db  0x41 ; 'A'
000000000001bd08         db  0x0e ; '.'
000000000001bd09         db  0x08 ; '.'
000000000001bd0a         db  0x41 ; 'A'
000000000001bd0b         db  0x0b ; '.'
000000000001bd0c         dd         0x0000001c                                  ; Length of the record
000000000001bd10         dd         0x00000690                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001bd14         db         0xbc, 0xb2, 0xfe, 0xff                      ; begin 0x6fd0
000000000001bd18         db         0x50, 3 dup (0x00)                          ; length 0x50 (end at 0x7020)
000000000001bd1c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bd1d         db  0x4d ; 'M'
000000000001bd1e         db  0x0e ; '.'
000000000001bd1f         db  0x10 ; '.'
000000000001bd20         db  0x52 ; 'R'
000000000001bd21         db  0x0e ; '.'
000000000001bd22         db  0x08 ; '.'
000000000001bd23         db  0x49 ; 'I'
000000000001bd24         db  0x0e ; '.'
000000000001bd25         db  0x10 ; '.'
000000000001bd26         db  0x63 ; 'c'
000000000001bd27         db  0x0e ; '.'
000000000001bd28         db  0x08 ; '.'
000000000001bd29         db  0x00 ; '.'
000000000001bd2a         db  0x00 ; '.'
000000000001bd2b         db  0x00 ; '.'
000000000001bd2c         dd         0x0000004c                                  ; Length of the record
000000000001bd30         dd         0x000006b0                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001bd34         db         0xec, 0xb2, 0xfe, 0xff                      ; begin 0x7020
000000000001bd38         db         0x69, 0x04, 2 dup (0x00)                    ; length 0x469 (end at 0x7489)
000000000001bd3c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bd3d         db  0x42 ; 'B'
000000000001bd3e         db  0x0e ; '.'
000000000001bd3f         db  0x10 ; '.'
000000000001bd40         db  0x8f ; '.'
000000000001bd41         db  0x02 ; '.'
000000000001bd42         db  0x42 ; 'B'
000000000001bd43         db  0x0e ; '.'
000000000001bd44         db  0x18 ; '.'
000000000001bd45         db  0x8e ; '.'
000000000001bd46         db  0x03 ; '.'
000000000001bd47         db  0x45 ; 'E'
000000000001bd48         db  0x0e ; '.'
000000000001bd49         db  0x20 ; ' '
000000000001bd4a         db  0x8d ; '.'
000000000001bd4b         db  0x04 ; '.'
000000000001bd4c         db  0x42 ; 'B'
000000000001bd4d         db  0x0e ; '.'
000000000001bd4e         db  0x28 ; '('
000000000001bd4f         db  0x8c ; '.'
000000000001bd50         db  0x05 ; '.'
000000000001bd51         db  0x44 ; 'D'
000000000001bd52         db  0x0e ; '.'
000000000001bd53         db  0x30 ; '0'
000000000001bd54         db  0x86 ; '.'
000000000001bd55         db  0x06 ; '.'
000000000001bd56         db  0x41 ; 'A'
000000000001bd57         db  0x0e ; '.'
000000000001bd58         db  0x38 ; '8'
000000000001bd59         db  0x83 ; '.'
000000000001bd5a         db  0x07 ; '.'
000000000001bd5b         db  0x46 ; 'F'
000000000001bd5c         db  0x0e ; '.'
000000000001bd5d         db  0xa0 ; '.'
000000000001bd5e         db  0x01 ; '.'
000000000001bd5f         db  0x03 ; '.'
000000000001bd60         db  0x72 ; 'r'
000000000001bd61         db  0x01 ; '.'
000000000001bd62         db  0x0a ; '.'
000000000001bd63         db  0x0e ; '.'
000000000001bd64         db  0x38 ; '8'
000000000001bd65         db  0x41 ; 'A'
000000000001bd66         db  0x0e ; '.'
000000000001bd67         db  0x30 ; '0'
000000000001bd68         db  0x41 ; 'A'
000000000001bd69         db  0x0e ; '.'
000000000001bd6a         db  0x28 ; '('
000000000001bd6b         db  0x42 ; 'B'
000000000001bd6c         db  0x0e ; '.'
000000000001bd6d         db  0x20 ; ' '
000000000001bd6e         db  0x42 ; 'B'
000000000001bd6f         db  0x0e ; '.'
000000000001bd70         db  0x18 ; '.'
000000000001bd71         db  0x42 ; 'B'
000000000001bd72         db  0x0e ; '.'
000000000001bd73         db  0x10 ; '.'
000000000001bd74         db  0x42 ; 'B'
000000000001bd75         db  0x0e ; '.'
000000000001bd76         db  0x08 ; '.'
000000000001bd77         db  0x46 ; 'F'
000000000001bd78         db  0x0b ; '.'
000000000001bd79         db  0x00 ; '.'
000000000001bd7a         db  0x00 ; '.'
000000000001bd7b         db  0x00 ; '.'
000000000001bd7c         dd         0x0000004c                                  ; Length of the record
000000000001bd80         dd         0x00000700                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001bd84         db         0x0c, 0xb7, 0xfe, 0xff                      ; begin 0x7490
000000000001bd88         db         0x01, 0x04, 2 dup (0x00)                    ; length 0x401 (end at 0x7891)
000000000001bd8c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bd8d         db  0x42 ; 'B'
000000000001bd8e         db  0x0e ; '.'
000000000001bd8f         db  0x10 ; '.'
000000000001bd90         db  0x8f ; '.'
000000000001bd91         db  0x02 ; '.'
000000000001bd92         db  0x42 ; 'B'
000000000001bd93         db  0x0e ; '.'
000000000001bd94         db  0x18 ; '.'
000000000001bd95         db  0x8e ; '.'
000000000001bd96         db  0x03 ; '.'
000000000001bd97         db  0x45 ; 'E'
000000000001bd98         db  0x0e ; '.'
000000000001bd99         db  0x20 ; ' '
000000000001bd9a         db  0x8d ; '.'
000000000001bd9b         db  0x04 ; '.'
000000000001bd9c         db  0x42 ; 'B'
000000000001bd9d         db  0x0e ; '.'
000000000001bd9e         db  0x28 ; '('
000000000001bd9f         db  0x8c ; '.'
000000000001bda0         db  0x05 ; '.'
000000000001bda1         db  0x44 ; 'D'
000000000001bda2         db  0x0e ; '.'
000000000001bda3         db  0x30 ; '0'
000000000001bda4         db  0x86 ; '.'
000000000001bda5         db  0x06 ; '.'
000000000001bda6         db  0x41 ; 'A'
000000000001bda7         db  0x0e ; '.'
000000000001bda8         db  0x38 ; '8'
000000000001bda9         db  0x83 ; '.'
000000000001bdaa         db  0x07 ; '.'
000000000001bdab         db  0x50 ; 'P'
000000000001bdac         db  0x0e ; '.'
000000000001bdad         db  0x80 ; '.'
000000000001bdae         db  0x41 ; 'A'
000000000001bdaf         db  0x03 ; '.'
000000000001bdb0         db  0x3b ; ';'
000000000001bdb1         db  0x02 ; '.'
000000000001bdb2         db  0x0a ; '.'
000000000001bdb3         db  0x0e ; '.'
000000000001bdb4         db  0x38 ; '8'
000000000001bdb5         db  0x41 ; 'A'
000000000001bdb6         db  0x0e ; '.'
000000000001bdb7         db  0x30 ; '0'
000000000001bdb8         db  0x41 ; 'A'
000000000001bdb9         db  0x0e ; '.'
000000000001bdba         db  0x28 ; '('
000000000001bdbb         db  0x42 ; 'B'
000000000001bdbc         db  0x0e ; '.'
000000000001bdbd         db  0x20 ; ' '
000000000001bdbe         db  0x42 ; 'B'
000000000001bdbf         db  0x0e ; '.'
000000000001bdc0         db  0x18 ; '.'
000000000001bdc1         db  0x42 ; 'B'
000000000001bdc2         db  0x0e ; '.'
000000000001bdc3         db  0x10 ; '.'
000000000001bdc4         db  0x42 ; 'B'
000000000001bdc5         db  0x0e ; '.'
000000000001bdc6         db  0x08 ; '.'
000000000001bdc7         db  0x4b ; 'K'
000000000001bdc8         db  0x0b ; '.'
000000000001bdc9         db  0x00 ; '.'
000000000001bdca         db  0x00 ; '.'
000000000001bdcb         db  0x00 ; '.'
000000000001bdcc         dd         0x00000060                                  ; Length of the record
000000000001bdd0         dd         0x00000750                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001bdd4         db         0xcc, 0xba, 0xfe, 0xff                      ; begin 0x78a0
000000000001bdd8         db         0x58, 0x04, 2 dup (0x00)                    ; length 0x458 (end at 0x7cf8)
000000000001bddc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bddd         db  0x42 ; 'B'
000000000001bdde         db  0x0e ; '.'
000000000001bddf         db  0x10 ; '.'
000000000001bde0         db  0x8f ; '.'
000000000001bde1         db  0x02 ; '.'
000000000001bde2         db  0x42 ; 'B'
000000000001bde3         db  0x0e ; '.'
000000000001bde4         db  0x18 ; '.'
000000000001bde5         db  0x8e ; '.'
000000000001bde6         db  0x03 ; '.'
000000000001bde7         db  0x45 ; 'E'
000000000001bde8         db  0x0e ; '.'
000000000001bde9         db  0x20 ; ' '
000000000001bdea         db  0x8d ; '.'
000000000001bdeb         db  0x04 ; '.'
000000000001bdec         db  0x42 ; 'B'
000000000001bded         db  0x0e ; '.'
000000000001bdee         db  0x28 ; '('
000000000001bdef         db  0x8c ; '.'
000000000001bdf0         db  0x05 ; '.'
000000000001bdf1         db  0x44 ; 'D'
000000000001bdf2         db  0x0e ; '.'
000000000001bdf3         db  0x30 ; '0'
000000000001bdf4         db  0x86 ; '.'
000000000001bdf5         db  0x06 ; '.'
000000000001bdf6         db  0x41 ; 'A'
000000000001bdf7         db  0x0e ; '.'
000000000001bdf8         db  0x38 ; '8'
000000000001bdf9         db  0x83 ; '.'
000000000001bdfa         db  0x07 ; '.'
000000000001bdfb         db  0x4a ; 'J'
000000000001bdfc         db  0x0e ; '.'
000000000001bdfd         db  0x50 ; 'P'
000000000001bdfe         db  0x6a ; 'j'
000000000001bdff         db  0x0e ; '.'
000000000001be00         db  0x58 ; 'X'
000000000001be01         db  0x48 ; 'H'
000000000001be02         db  0x0e ; '.'
000000000001be03         db  0x60 ; '`'
000000000001be04         db  0x5a ; 'Z'
000000000001be05         db  0x0e ; '.'
000000000001be06         db  0x58 ; 'X'
000000000001be07         db  0x41 ; 'A'
000000000001be08         db  0x0e ; '.'
000000000001be09         db  0x50 ; 'P'
000000000001be0a         db  0x44 ; 'D'
000000000001be0b         db  0x0a ; '.'
000000000001be0c         db  0x0e ; '.'
000000000001be0d         db  0x38 ; '8'
000000000001be0e         db  0x44 ; 'D'
000000000001be0f         db  0x0e ; '.'
000000000001be10         db  0x30 ; '0'
000000000001be11         db  0x41 ; 'A'
000000000001be12         db  0x0e ; '.'
000000000001be13         db  0x28 ; '('
000000000001be14         db  0x42 ; 'B'
000000000001be15         db  0x0e ; '.'
000000000001be16         db  0x20 ; ' '
000000000001be17         db  0x42 ; 'B'
000000000001be18         db  0x0e ; '.'
000000000001be19         db  0x18 ; '.'
000000000001be1a         db  0x42 ; 'B'
000000000001be1b         db  0x0e ; '.'
000000000001be1c         db  0x10 ; '.'
000000000001be1d         db  0x42 ; 'B'
000000000001be1e         db  0x0e ; '.'
000000000001be1f         db  0x08 ; '.'
000000000001be20         db  0x48 ; 'H'
000000000001be21         db  0x0b ; '.'
000000000001be22         db  0x02 ; '.'
000000000001be23         db  0xbe ; '.'
000000000001be24         db  0x0e ; '.'
000000000001be25         db  0x58 ; 'X'
000000000001be26         db  0x48 ; 'H'
000000000001be27         db  0x0e ; '.'
000000000001be28         db  0x60 ; '`'
000000000001be29         db  0x64 ; 'd'
000000000001be2a         db  0x0e ; '.'
000000000001be2b         db  0x58 ; 'X'
000000000001be2c         db  0x41 ; 'A'
000000000001be2d         db  0x0e ; '.'
000000000001be2e         db  0x50 ; 'P'
000000000001be2f         db  0x00 ; '.'
000000000001be30         dd         0x0000002c                                  ; Length of the record
000000000001be34         dd         0x000007b4                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001be38         db         0xc8, 0xbe, 0xfe, 0xff                      ; begin 0x7d00
000000000001be3c         db         0x8d, 0x01, 2 dup (0x00)                    ; length 0x18d (end at 0x7e8d)
000000000001be40         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001be41         db  0x41 ; 'A'
000000000001be42         db  0x0e ; '.'
000000000001be43         db  0x10 ; '.'
000000000001be44         db  0x86 ; '.'
000000000001be45         db  0x02 ; '.'
000000000001be46         db  0x41 ; 'A'
000000000001be47         db  0x0e ; '.'
000000000001be48         db  0x18 ; '.'
000000000001be49         db  0x83 ; '.'
000000000001be4a         db  0x03 ; '.'
000000000001be4b         db  0x4d ; 'M'
000000000001be4c         db  0x0e ; '.'
000000000001be4d         db  0xc0 ; '.'
000000000001be4e         db  0x05 ; '.'
000000000001be4f         db  0x03 ; '.'
000000000001be50         db  0x2b ; '+'
000000000001be51         db  0x01 ; '.'
000000000001be52         db  0x0a ; '.'
000000000001be53         db  0x0e ; '.'
000000000001be54         db  0x18 ; '.'
000000000001be55         db  0x41 ; 'A'
000000000001be56         db  0x0e ; '.'
000000000001be57         db  0x10 ; '.'
000000000001be58         db  0x41 ; 'A'
000000000001be59         db  0x0e ; '.'
000000000001be5a         db  0x08 ; '.'
000000000001be5b         db  0x44 ; 'D'
000000000001be5c         db  0x0b ; '.'
000000000001be5d         db  0x00 ; '.'
000000000001be5e         db  0x00 ; '.'
000000000001be5f         db  0x00 ; '.'
000000000001be60         dd         0x00000070                                  ; Length of the record
000000000001be64         dd         0x000007e4                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001be68         db         0x28, 0xc0, 0xfe, 0xff                      ; begin 0x7e90
000000000001be6c         db         0x0b, 0x0a, 2 dup (0x00)                    ; length 0xa0b (end at 0x889b)
000000000001be70         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001be71         db  0x42 ; 'B'
000000000001be72         db  0x0e ; '.'
000000000001be73         db  0x10 ; '.'
000000000001be74         db  0x8f ; '.'
000000000001be75         db  0x02 ; '.'
000000000001be76         db  0x42 ; 'B'
000000000001be77         db  0x0e ; '.'
000000000001be78         db  0x18 ; '.'
000000000001be79         db  0x8e ; '.'
000000000001be7a         db  0x03 ; '.'
000000000001be7b         db  0x42 ; 'B'
000000000001be7c         db  0x0e ; '.'
000000000001be7d         db  0x20 ; ' '
000000000001be7e         db  0x8d ; '.'
000000000001be7f         db  0x04 ; '.'
000000000001be80         db  0x42 ; 'B'
000000000001be81         db  0x0e ; '.'
000000000001be82         db  0x28 ; '('
000000000001be83         db  0x8c ; '.'
000000000001be84         db  0x05 ; '.'
000000000001be85         db  0x41 ; 'A'
000000000001be86         db  0x0e ; '.'
000000000001be87         db  0x30 ; '0'
000000000001be88         db  0x86 ; '.'
000000000001be89         db  0x06 ; '.'
000000000001be8a         db  0x41 ; 'A'
000000000001be8b         db  0x0e ; '.'
000000000001be8c         db  0x38 ; '8'
000000000001be8d         db  0x83 ; '.'
000000000001be8e         db  0x07 ; '.'
000000000001be8f         db  0x4a ; 'J'
000000000001be90         db  0x0e ; '.'
000000000001be91         db  0xe0 ; '.'
000000000001be92         db  0x26 ; '&'
000000000001be93         db  0x03 ; '.'
000000000001be94         db  0xa6 ; '.'
000000000001be95         db  0x01 ; '.'
000000000001be96         db  0x0e ; '.'
000000000001be97         db  0xe8 ; '.'
000000000001be98         db  0x26 ; '&'
000000000001be99         db  0x4f ; 'O'
000000000001be9a         db  0x0e ; '.'
000000000001be9b         db  0xf0 ; '.'
000000000001be9c         db  0x26 ; '&'
000000000001be9d         db  0x6d ; 'm'
000000000001be9e         db  0x0e ; '.'
000000000001be9f         db  0xe8 ; '.'
000000000001bea0         db  0x26 ; '&'
000000000001bea1         db  0x42 ; 'B'
000000000001bea2         db  0x0e ; '.'
000000000001bea3         db  0xe0 ; '.'
000000000001bea4         db  0x26 ; '&'
000000000001bea5         db  0x03 ; '.'
000000000001bea6         db  0xe5 ; '.'
000000000001bea7         db  0x01 ; '.'
000000000001bea8         db  0x0a ; '.'
000000000001bea9         db  0x0e ; '.'
000000000001beaa         db  0x38 ; '8'
000000000001beab         db  0x41 ; 'A'
000000000001beac         db  0x0e ; '.'
000000000001bead         db  0x30 ; '0'
000000000001beae         db  0x41 ; 'A'
000000000001beaf         db  0x0e ; '.'
000000000001beb0         db  0x28 ; '('
000000000001beb1         db  0x42 ; 'B'
000000000001beb2         db  0x0e ; '.'
000000000001beb3         db  0x20 ; ' '
000000000001beb4         db  0x42 ; 'B'
000000000001beb5         db  0x0e ; '.'
000000000001beb6         db  0x18 ; '.'
000000000001beb7         db  0x42 ; 'B'
000000000001beb8         db  0x0e ; '.'
000000000001beb9         db  0x10 ; '.'
000000000001beba         db  0x42 ; 'B'
000000000001bebb         db  0x0e ; '.'
000000000001bebc         db  0x08 ; '.'
000000000001bebd         db  0x49 ; 'I'
000000000001bebe         db  0x0b ; '.'
000000000001bebf         db  0x03 ; '.'
000000000001bec0         db  0xae ; '.'
000000000001bec1         db  0x04 ; '.'
000000000001bec2         db  0x0e ; '.'
000000000001bec3         db  0xe8 ; '.'
000000000001bec4         db  0x26 ; '&'
000000000001bec5         db  0x4d ; 'M'
000000000001bec6         db  0x0e ; '.'
000000000001bec7         db  0xf0 ; '.'
000000000001bec8         db  0x26 ; '&'
000000000001bec9         db  0x68 ; 'h'
000000000001beca         db  0x0e ; '.'
000000000001becb         db  0xe8 ; '.'
000000000001becc         db  0x26 ; '&'
000000000001becd         db  0x41 ; 'A'
000000000001bece         db  0x0e ; '.'
000000000001becf         db  0xe0 ; '.'
000000000001bed0         db  0x26 ; '&'
000000000001bed1         db  0x00 ; '.'
000000000001bed2         db  0x00 ; '.'
000000000001bed3         db  0x00 ; '.'
000000000001bed4         dd         0x00000028                                  ; Length of the record
000000000001bed8         dd         0x00000858                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001bedc         db         0xc4, 0xc9, 0xfe, 0xff                      ; begin 0x88a0
000000000001bee0         db         0x85, 3 dup (0x00)                          ; length 0x85 (end at 0x8925)
000000000001bee4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bee5         db  0x41 ; 'A'
000000000001bee6         db  0x0e ; '.'
000000000001bee7         db  0x10 ; '.'
000000000001bee8         db  0x86 ; '.'
000000000001bee9         db  0x02 ; '.'
000000000001beea         db  0x41 ; 'A'
000000000001beeb         db  0x0e ; '.'
000000000001beec         db  0x18 ; '.'
000000000001beed         db  0x83 ; '.'
000000000001beee         db  0x03 ; '.'
000000000001beef         db  0x52 ; 'R'
000000000001bef0         db  0x0e ; '.'
000000000001bef1         db  0xd0 ; '.'
000000000001bef2         db  0x40 ; '@'
000000000001bef3         db  0x02 ; '.'
000000000001bef4         db  0x69 ; 'i'
000000000001bef5         db  0x0a ; '.'
000000000001bef6         db  0x0e ; '.'
000000000001bef7         db  0x18 ; '.'
000000000001bef8         db  0x41 ; 'A'
000000000001bef9         db  0x0e ; '.'
000000000001befa         db  0x10 ; '.'
000000000001befb         db  0x41 ; 'A'
000000000001befc         db  0x0e ; '.'
000000000001befd         db  0x08 ; '.'
000000000001befe         db  0x41 ; 'A'
000000000001beff         db  0x0b ; '.'
000000000001bf00         dd         0x00000028                                  ; Length of the record
000000000001bf04         dd         0x00000884                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001bf08         db         0x28, 0xca, 0xfe, 0xff                      ; begin 0x8930
000000000001bf0c         db         0xa7, 0x01, 2 dup (0x00)                    ; length 0x1a7 (end at 0x8ad7)
000000000001bf10         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bf11         db  0x41 ; 'A'
000000000001bf12         db  0x0e ; '.'
000000000001bf13         db  0x10 ; '.'
000000000001bf14         db  0x86 ; '.'
000000000001bf15         db  0x02 ; '.'
000000000001bf16         db  0x41 ; 'A'
000000000001bf17         db  0x0e ; '.'
000000000001bf18         db  0x18 ; '.'
000000000001bf19         db  0x83 ; '.'
000000000001bf1a         db  0x03 ; '.'
000000000001bf1b         db  0x4a ; 'J'
000000000001bf1c         db  0x0e ; '.'
000000000001bf1d         db  0xc0 ; '.'
000000000001bf1e         db  0x05 ; '.'
000000000001bf1f         db  0x02 ; '.'
000000000001bf20         db  0xc4 ; '.'
000000000001bf21         db  0x0a ; '.'
000000000001bf22         db  0x0e ; '.'
000000000001bf23         db  0x18 ; '.'
000000000001bf24         db  0x41 ; 'A'
000000000001bf25         db  0x0e ; '.'
000000000001bf26         db  0x10 ; '.'
000000000001bf27         db  0x41 ; 'A'
000000000001bf28         db  0x0e ; '.'
000000000001bf29         db  0x08 ; '.'
000000000001bf2a         db  0x46 ; 'F'
000000000001bf2b         db  0x0b ; '.'
000000000001bf2c         dd         0x0000003c                                  ; Length of the record
000000000001bf30         dd         0x000008b0                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001bf34         db         0xac, 0xcb, 0xfe, 0xff                      ; begin 0x8ae0
000000000001bf38         db         0x07, 0x03, 2 dup (0x00)                    ; length 0x307 (end at 0x8de7)
000000000001bf3c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bf3d         db  0x50 ; 'P'
000000000001bf3e         db  0x0e ; '.'
000000000001bf3f         db  0x10 ; '.'
000000000001bf40         db  0x8e ; '.'
000000000001bf41         db  0x02 ; '.'
000000000001bf42         db  0x42 ; 'B'
000000000001bf43         db  0x0e ; '.'
000000000001bf44         db  0x18 ; '.'
000000000001bf45         db  0x8d ; '.'
000000000001bf46         db  0x03 ; '.'
000000000001bf47         db  0x42 ; 'B'
000000000001bf48         db  0x0e ; '.'
000000000001bf49         db  0x20 ; ' '
000000000001bf4a         db  0x8c ; '.'
000000000001bf4b         db  0x04 ; '.'
000000000001bf4c         db  0x41 ; 'A'
000000000001bf4d         db  0x0e ; '.'
000000000001bf4e         db  0x28 ; '('
000000000001bf4f         db  0x86 ; '.'
000000000001bf50         db  0x05 ; '.'
000000000001bf51         db  0x47 ; 'G'
000000000001bf52         db  0x0e ; '.'
000000000001bf53         db  0x30 ; '0'
000000000001bf54         db  0x83 ; '.'
000000000001bf55         db  0x06 ; '.'
000000000001bf56         db  0x03 ; '.'
000000000001bf57         db  0x8c ; '.'
000000000001bf58         db  0x02 ; '.'
000000000001bf59         db  0x0a ; '.'
000000000001bf5a         db  0x0e ; '.'
000000000001bf5b         db  0x28 ; '('
000000000001bf5c         db  0x41 ; 'A'
000000000001bf5d         db  0x0e ; '.'
000000000001bf5e         db  0x20 ; ' '
000000000001bf5f         db  0x42 ; 'B'
000000000001bf60         db  0x0e ; '.'
000000000001bf61         db  0x18 ; '.'
000000000001bf62         db  0x42 ; 'B'
000000000001bf63         db  0x0e ; '.'
000000000001bf64         db  0x10 ; '.'
000000000001bf65         db  0x42 ; 'B'
000000000001bf66         db  0x0e ; '.'
000000000001bf67         db  0x08 ; '.'
000000000001bf68         db  0x41 ; 'A'
000000000001bf69         db  0x0b ; '.'
000000000001bf6a         db  0x00 ; '.'
000000000001bf6b         db  0x00 ; '.'
000000000001bf6c         dd         0x00000060                                  ; Length of the record
000000000001bf70         dd         0x000008f0                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001bf74         db         0x7c, 0xce, 0xfe, 0xff                      ; begin 0x8df0
000000000001bf78         db         0xa8, 0x01, 2 dup (0x00)                    ; length 0x1a8 (end at 0x8f98)
000000000001bf7c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bf7d         db  0x42 ; 'B'
000000000001bf7e         db  0x0e ; '.'
000000000001bf7f         db  0x10 ; '.'
000000000001bf80         db  0x8f ; '.'
000000000001bf81         db  0x02 ; '.'
000000000001bf82         db  0x42 ; 'B'
000000000001bf83         db  0x0e ; '.'
000000000001bf84         db  0x18 ; '.'
000000000001bf85         db  0x8e ; '.'
000000000001bf86         db  0x03 ; '.'
000000000001bf87         db  0x42 ; 'B'
000000000001bf88         db  0x0e ; '.'
000000000001bf89         db  0x20 ; ' '
000000000001bf8a         db  0x8d ; '.'
000000000001bf8b         db  0x04 ; '.'
000000000001bf8c         db  0x42 ; 'B'
000000000001bf8d         db  0x0e ; '.'
000000000001bf8e         db  0x28 ; '('
000000000001bf8f         db  0x8c ; '.'
000000000001bf90         db  0x05 ; '.'
000000000001bf91         db  0x41 ; 'A'
000000000001bf92         db  0x0e ; '.'
000000000001bf93         db  0x30 ; '0'
000000000001bf94         db  0x86 ; '.'
000000000001bf95         db  0x06 ; '.'
000000000001bf96         db  0x41 ; 'A'
000000000001bf97         db  0x0e ; '.'
000000000001bf98         db  0x38 ; '8'
000000000001bf99         db  0x83 ; '.'
000000000001bf9a         db  0x07 ; '.'
000000000001bf9b         db  0x44 ; 'D'
000000000001bf9c         db  0x0e ; '.'
000000000001bf9d         db  0x50 ; 'P'
000000000001bf9e         db  0x03 ; '.'
000000000001bf9f         db  0x2a ; '*'
000000000001bfa0         db  0x01 ; '.'
000000000001bfa1         db  0x0a ; '.'
000000000001bfa2         db  0x0e ; '.'
000000000001bfa3         db  0x38 ; '8'
000000000001bfa4         db  0x41 ; 'A'
000000000001bfa5         db  0x0e ; '.'
000000000001bfa6         db  0x30 ; '0'
000000000001bfa7         db  0x41 ; 'A'
000000000001bfa8         db  0x0e ; '.'
000000000001bfa9         db  0x28 ; '('
000000000001bfaa         db  0x42 ; 'B'
000000000001bfab         db  0x0e ; '.'
000000000001bfac         db  0x20 ; ' '
000000000001bfad         db  0x42 ; 'B'
000000000001bfae         db  0x0e ; '.'
000000000001bfaf         db  0x18 ; '.'
000000000001bfb0         db  0x42 ; 'B'
000000000001bfb1         db  0x0e ; '.'
000000000001bfb2         db  0x10 ; '.'
000000000001bfb3         db  0x42 ; 'B'
000000000001bfb4         db  0x0e ; '.'
000000000001bfb5         db  0x08 ; '.'
000000000001bfb6         db  0x46 ; 'F'
000000000001bfb7         db  0x0b ; '.'
000000000001bfb8         db  0x02 ; '.'
000000000001bfb9         db  0x4c ; 'L'
000000000001bfba         db  0x0e ; '.'
000000000001bfbb         db  0x38 ; '8'
000000000001bfbc         db  0x46 ; 'F'
000000000001bfbd         db  0x0e ; '.'
000000000001bfbe         db  0x30 ; '0'
000000000001bfbf         db  0x41 ; 'A'
000000000001bfc0         db  0x0e ; '.'
000000000001bfc1         db  0x28 ; '('
000000000001bfc2         db  0x42 ; 'B'
000000000001bfc3         db  0x0e ; '.'
000000000001bfc4         db  0x20 ; ' '
000000000001bfc5         db  0x42 ; 'B'
000000000001bfc6         db  0x0e ; '.'
000000000001bfc7         db  0x18 ; '.'
000000000001bfc8         db  0x42 ; 'B'
000000000001bfc9         db  0x0e ; '.'
000000000001bfca         db  0x10 ; '.'
000000000001bfcb         db  0x42 ; 'B'
000000000001bfcc         db  0x0e ; '.'
000000000001bfcd         db  0x08 ; '.'
000000000001bfce         db  0x00 ; '.'
000000000001bfcf         db  0x00 ; '.'
000000000001bfd0         dd         0x000000b8                                  ; Length of the record
000000000001bfd4         dd         0x00000954                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001bfd8         db         0xc8, 0xcf, 0xfe, 0xff                      ; begin 0x8fa0
000000000001bfdc         db         0xda, 0x03, 2 dup (0x00)                    ; length 0x3da (end at 0x937a)
000000000001bfe0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001bfe1         db  0x4f ; 'O'
000000000001bfe2         db  0x0e ; '.'
000000000001bfe3         db  0x10 ; '.'
000000000001bfe4         db  0x8f ; '.'
000000000001bfe5         db  0x02 ; '.'
000000000001bfe6         db  0x42 ; 'B'
000000000001bfe7         db  0x0e ; '.'
000000000001bfe8         db  0x18 ; '.'
000000000001bfe9         db  0x8e ; '.'
000000000001bfea         db  0x03 ; '.'
000000000001bfeb         db  0x49 ; 'I'
000000000001bfec         db  0x0e ; '.'
000000000001bfed         db  0x20 ; ' '
000000000001bfee         db  0x8d ; '.'
000000000001bfef         db  0x04 ; '.'
000000000001bff0         db  0x42 ; 'B'
000000000001bff1         db  0x0e ; '.'
000000000001bff2         db  0x28 ; '('
000000000001bff3         db  0x8c ; '.'
000000000001bff4         db  0x05 ; '.'
000000000001bff5         db  0x41 ; 'A'
000000000001bff6         db  0x0e ; '.'
000000000001bff7         db  0x30 ; '0'
000000000001bff8         db  0x86 ; '.'
000000000001bff9         db  0x06 ; '.'
000000000001bffa         db  0x41 ; 'A'
000000000001bffb         db  0x0e ; '.'
000000000001bffc         db  0x38 ; '8'
000000000001bffd         db  0x83 ; '.'
000000000001bffe         db  0x07 ; '.'
000000000001bfff         db  0x44 ; 'D'
000000000001c000         db  0x0e ; '.'
000000000001c001         db  0x70 ; 'p'
000000000001c002         db  0x03 ; '.'
000000000001c003         db  0x17 ; '.'
000000000001c004         db  0x01 ; '.'
000000000001c005         db  0x0a ; '.'
000000000001c006         db  0x0e ; '.'
000000000001c007         db  0x38 ; '8'
000000000001c008         db  0x41 ; 'A'
000000000001c009         db  0xc3 ; '.'
000000000001c00a         db  0x0e ; '.'
000000000001c00b         db  0x30 ; '0'
000000000001c00c         db  0x41 ; 'A'
000000000001c00d         db  0xc6 ; '.'
000000000001c00e         db  0x0e ; '.'
000000000001c00f         db  0x28 ; '('
000000000001c010         db  0x42 ; 'B'
000000000001c011         db  0xcc ; '.'
000000000001c012         db  0x0e ; '.'
000000000001c013         db  0x20 ; ' '
000000000001c014         db  0x42 ; 'B'
000000000001c015         db  0xcd ; '.'
000000000001c016         db  0x0e ; '.'
000000000001c017         db  0x18 ; '.'
000000000001c018         db  0x42 ; 'B'
000000000001c019         db  0xce ; '.'
000000000001c01a         db  0x0e ; '.'
000000000001c01b         db  0x10 ; '.'
000000000001c01c         db  0x42 ; 'B'
000000000001c01d         db  0xcf ; '.'
000000000001c01e         db  0x0e ; '.'
000000000001c01f         db  0x08 ; '.'
000000000001c020         db  0x4d ; 'M'
000000000001c021         db  0x0b ; '.'
000000000001c022         db  0x02 ; '.'
000000000001c023         db  0x53 ; 'S'
000000000001c024         db  0x0a ; '.'
000000000001c025         db  0x0e ; '.'
000000000001c026         db  0x38 ; '8'
000000000001c027         db  0x41 ; 'A'
000000000001c028         db  0x0e ; '.'
000000000001c029         db  0x30 ; '0'
000000000001c02a         db  0x41 ; 'A'
000000000001c02b         db  0x0e ; '.'
000000000001c02c         db  0x28 ; '('
000000000001c02d         db  0x42 ; 'B'
000000000001c02e         db  0x0e ; '.'
000000000001c02f         db  0x20 ; ' '
000000000001c030         db  0x42 ; 'B'
000000000001c031         db  0x0e ; '.'
000000000001c032         db  0x18 ; '.'
000000000001c033         db  0x42 ; 'B'
000000000001c034         db  0x0e ; '.'
000000000001c035         db  0x10 ; '.'
000000000001c036         db  0x42 ; 'B'
000000000001c037         db  0x0e ; '.'
000000000001c038         db  0x08 ; '.'
000000000001c039         db  0x43 ; 'C'
000000000001c03a         db  0x0b ; '.'
000000000001c03b         db  0x03 ; '.'
000000000001c03c         db  0x1c ; '.'
000000000001c03d         db  0x01 ; '.'
000000000001c03e         db  0x0a ; '.'
000000000001c03f         db  0x0e ; '.'
000000000001c040         db  0x38 ; '8'
000000000001c041         db  0x41 ; 'A'
000000000001c042         db  0x0e ; '.'
000000000001c043         db  0x30 ; '0'
000000000001c044         db  0x41 ; 'A'
000000000001c045         db  0x0e ; '.'
000000000001c046         db  0x28 ; '('
000000000001c047         db  0x42 ; 'B'
000000000001c048         db  0x0e ; '.'
000000000001c049         db  0x20 ; ' '
000000000001c04a         db  0x42 ; 'B'
000000000001c04b         db  0x0e ; '.'
000000000001c04c         db  0x18 ; '.'
000000000001c04d         db  0x42 ; 'B'
000000000001c04e         db  0x0e ; '.'
000000000001c04f         db  0x10 ; '.'
000000000001c050         db  0x42 ; 'B'
000000000001c051         db  0x0e ; '.'
000000000001c052         db  0x08 ; '.'
000000000001c053         db  0x4a ; 'J'
000000000001c054         db  0x0b ; '.'
000000000001c055         db  0x02 ; '.'
000000000001c056         db  0x78 ; 'x'
000000000001c057         db  0x0e ; '.'
000000000001c058         db  0x08 ; '.'
000000000001c059         db  0xc3 ; '.'
000000000001c05a         db  0xc6 ; '.'
000000000001c05b         db  0xcc ; '.'
000000000001c05c         db  0xcd ; '.'
000000000001c05d         db  0xce ; '.'
000000000001c05e         db  0xcf ; '.'
000000000001c05f         db  0x48 ; 'H'
000000000001c060         db  0x0e ; '.'
000000000001c061         db  0x70 ; 'p'
000000000001c062         db  0x83 ; '.'
000000000001c063         db  0x07 ; '.'
000000000001c064         db  0x86 ; '.'
000000000001c065         db  0x06 ; '.'
000000000001c066         db  0x8c ; '.'
000000000001c067         db  0x05 ; '.'
000000000001c068         db  0x8d ; '.'
000000000001c069         db  0x04 ; '.'
000000000001c06a         db  0x8e ; '.'
000000000001c06b         db  0x03 ; '.'
000000000001c06c         db  0x8f ; '.'
000000000001c06d         db  0x02 ; '.'
000000000001c06e         db  0x02 ; '.'
000000000001c06f         db  0x66 ; 'f'
000000000001c070         db  0x0e ; '.'
000000000001c071         db  0x38 ; '8'
000000000001c072         db  0x46 ; 'F'
000000000001c073         db  0xc3 ; '.'
000000000001c074         db  0x0e ; '.'
000000000001c075         db  0x30 ; '0'
000000000001c076         db  0x41 ; 'A'
000000000001c077         db  0xc6 ; '.'
000000000001c078         db  0x0e ; '.'
000000000001c079         db  0x28 ; '('
000000000001c07a         db  0x42 ; 'B'
000000000001c07b         db  0xcc ; '.'
000000000001c07c         db  0x0e ; '.'
000000000001c07d         db  0x20 ; ' '
000000000001c07e         db  0x42 ; 'B'
000000000001c07f         db  0xcd ; '.'
000000000001c080         db  0x0e ; '.'
000000000001c081         db  0x18 ; '.'
000000000001c082         db  0x42 ; 'B'
000000000001c083         db  0xce ; '.'
000000000001c084         db  0x0e ; '.'
000000000001c085         db  0x10 ; '.'
000000000001c086         db  0x42 ; 'B'
000000000001c087         db  0xcf ; '.'
000000000001c088         db  0x0e ; '.'
000000000001c089         db  0x08 ; '.'
000000000001c08a         db  0x00 ; '.'
000000000001c08b         db  0x00 ; '.'
000000000001c08c         dd         0x00000010                                  ; Length of the record
000000000001c090         dd         0x00000a10                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c094         db         0xec, 0xd2, 0xfe, 0xff                      ; begin 0x9380
000000000001c098         db         0xa8, 3 dup (0x00)                          ; length 0xa8 (end at 0x9428)
000000000001c09c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c09d         align      32
000000000001c0a0         dd         0x00000010                                  ; Length of the record
000000000001c0a4         dd         0x00000a24                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c0a8         db         0x88, 0xd3, 0xfe, 0xff                      ; begin 0x9430
000000000001c0ac         db         0xb4, 3 dup (0x00)                          ; length 0xb4 (end at 0x94e4)
000000000001c0b0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c0b1         align      4
000000000001c0b4         dd         0x00000028                                  ; Length of the record
000000000001c0b8         dd         0x00000a38                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c0bc         db         0x34, 0xd4, 0xfe, 0xff                      ; begin 0x94f0
000000000001c0c0         db         0xc9, 3 dup (0x00)                          ; length 0xc9 (end at 0x95b9)
000000000001c0c4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c0c5         db  0x49 ; 'I'
000000000001c0c6         db  0x0e ; '.'
000000000001c0c7         db  0x10 ; '.'
000000000001c0c8         db  0x8c ; '.'
000000000001c0c9         db  0x02 ; '.'
000000000001c0ca         db  0x41 ; 'A'
000000000001c0cb         db  0x0e ; '.'
000000000001c0cc         db  0x18 ; '.'
000000000001c0cd         db  0x86 ; '.'
000000000001c0ce         db  0x03 ; '.'
000000000001c0cf         db  0x41 ; 'A'
000000000001c0d0         db  0x0e ; '.'
000000000001c0d1         db  0x20 ; ' '
000000000001c0d2         db  0x83 ; '.'
000000000001c0d3         db  0x04 ; '.'
000000000001c0d4         db  0x7d ; '}'
000000000001c0d5         db  0x0e ; '.'
000000000001c0d6         db  0x18 ; '.'
000000000001c0d7         db  0x53 ; 'S'
000000000001c0d8         db  0x0e ; '.'
000000000001c0d9         db  0x10 ; '.'
000000000001c0da         db  0x02 ; '.'
000000000001c0db         db  0x6d ; 'm'
000000000001c0dc         db  0x0e ; '.'
000000000001c0dd         db  0x08 ; '.'
000000000001c0de         db  0x00 ; '.'
000000000001c0df         db  0x00 ; '.'
000000000001c0e0         dd         0x00000028                                  ; Length of the record
000000000001c0e4         dd         0x00000a64                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c0e8         db         0xd8, 0xd4, 0xfe, 0xff                      ; begin 0x95c0
000000000001c0ec         db         0xc1, 3 dup (0x00)                          ; length 0xc1 (end at 0x9681)
000000000001c0f0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c0f1         db  0x41 ; 'A'
000000000001c0f2         db  0x0e ; '.'
000000000001c0f3         db  0x10 ; '.'
000000000001c0f4         db  0x86 ; '.'
000000000001c0f5         db  0x02 ; '.'
000000000001c0f6         db  0x41 ; 'A'
000000000001c0f7         db  0x0e ; '.'
000000000001c0f8         db  0x18 ; '.'
000000000001c0f9         db  0x83 ; '.'
000000000001c0fa         db  0x03 ; '.'
000000000001c0fb         db  0x46 ; 'F'
000000000001c0fc         db  0x0e ; '.'
000000000001c0fd         db  0x40 ; '@'
000000000001c0fe         db  0x02 ; '.'
000000000001c0ff         db  0x8a ; '.'
000000000001c100         db  0x0a ; '.'
000000000001c101         db  0x0e ; '.'
000000000001c102         db  0x18 ; '.'
000000000001c103         db  0x41 ; 'A'
000000000001c104         db  0x0e ; '.'
000000000001c105         db  0x10 ; '.'
000000000001c106         db  0x41 ; 'A'
000000000001c107         db  0x0e ; '.'
000000000001c108         db  0x08 ; '.'
000000000001c109         db  0x44 ; 'D'
000000000001c10a         db  0x0b ; '.'
000000000001c10b         db  0x00 ; '.'
000000000001c10c         dd         0x0000002c                                  ; Length of the record
000000000001c110         dd         0x00000a90                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c114         db         0x7c, 0xd5, 0xfe, 0xff                      ; begin 0x9690
000000000001c118         db         0x58, 0x0d, 2 dup (0x00)                    ; length 0xd58 (end at 0xa3e8)
000000000001c11c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c11d         db  0x41 ; 'A'
000000000001c11e         db  0x0e ; '.'
000000000001c11f         db  0x10 ; '.'
000000000001c120         db  0x86 ; '.'
000000000001c121         db  0x02 ; '.'
000000000001c122         db  0x43 ; 'C'
000000000001c123         db  0x0d ; '.'
000000000001c124         db  0x06 ; '.'
000000000001c125         db  0x48 ; 'H'
000000000001c126         db  0x8f ; '.'
000000000001c127         db  0x03 ; '.'
000000000001c128         db  0x8e ; '.'
000000000001c129         db  0x04 ; '.'
000000000001c12a         db  0x8d ; '.'
000000000001c12b         db  0x05 ; '.'
000000000001c12c         db  0x8c ; '.'
000000000001c12d         db  0x06 ; '.'
000000000001c12e         db  0x51 ; 'Q'
000000000001c12f         db  0x83 ; '.'
000000000001c130         db  0x07 ; '.'
000000000001c131         db  0x03 ; '.'
000000000001c132         db  0x08 ; '.'
000000000001c133         db  0x03 ; '.'
000000000001c134         db  0x0a ; '.'
000000000001c135         db  0x0c ; '.'
000000000001c136         db  0x07 ; '.'
000000000001c137         db  0x08 ; '.'
000000000001c138         db  0x4b ; 'K'
000000000001c139         db  0x0b ; '.'
000000000001c13a         db  0x00 ; '.'
000000000001c13b         db  0x00 ; '.'
000000000001c13c         dd         0x0000005c                                  ; Length of the record
000000000001c140         dd         0x00000ac0                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c144         db         0xac, 0xe2, 0xfe, 0xff                      ; begin 0xa3f0
000000000001c148         db         0xb4, 0x06, 2 dup (0x00)                    ; length 0x6b4 (end at 0xaaa4)
000000000001c14c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c14d         db  0x42 ; 'B'
000000000001c14e         db  0x0e ; '.'
000000000001c14f         db  0x10 ; '.'
000000000001c150         db  0x8f ; '.'
000000000001c151         db  0x02 ; '.'
000000000001c152         db  0x42 ; 'B'
000000000001c153         db  0x0e ; '.'
000000000001c154         db  0x18 ; '.'
000000000001c155         db  0x8e ; '.'
000000000001c156         db  0x03 ; '.'
000000000001c157         db  0x45 ; 'E'
000000000001c158         db  0x0e ; '.'
000000000001c159         db  0x20 ; ' '
000000000001c15a         db  0x8d ; '.'
000000000001c15b         db  0x04 ; '.'
000000000001c15c         db  0x42 ; 'B'
000000000001c15d         db  0x0e ; '.'
000000000001c15e         db  0x28 ; '('
000000000001c15f         db  0x8c ; '.'
000000000001c160         db  0x05 ; '.'
000000000001c161         db  0x41 ; 'A'
000000000001c162         db  0x0e ; '.'
000000000001c163         db  0x30 ; '0'
000000000001c164         db  0x86 ; '.'
000000000001c165         db  0x06 ; '.'
000000000001c166         db  0x41 ; 'A'
000000000001c167         db  0x0e ; '.'
000000000001c168         db  0x38 ; '8'
000000000001c169         db  0x83 ; '.'
000000000001c16a         db  0x07 ; '.'
000000000001c16b         db  0x4a ; 'J'
000000000001c16c         db  0x0e ; '.'
000000000001c16d         db  0x80 ; '.'
000000000001c16e         db  0x07 ; '.'
000000000001c16f         db  0x02 ; '.'
000000000001c170         db  0xb8 ; '.'
000000000001c171         db  0x0a ; '.'
000000000001c172         db  0x0e ; '.'
000000000001c173         db  0x38 ; '8'
000000000001c174         db  0x41 ; 'A'
000000000001c175         db  0x0e ; '.'
000000000001c176         db  0x30 ; '0'
000000000001c177         db  0x41 ; 'A'
000000000001c178         db  0x0e ; '.'
000000000001c179         db  0x28 ; '('
000000000001c17a         db  0x42 ; 'B'
000000000001c17b         db  0x0e ; '.'
000000000001c17c         db  0x20 ; ' '
000000000001c17d         db  0x42 ; 'B'
000000000001c17e         db  0x0e ; '.'
000000000001c17f         db  0x18 ; '.'
000000000001c180         db  0x42 ; 'B'
000000000001c181         db  0x0e ; '.'
000000000001c182         db  0x10 ; '.'
000000000001c183         db  0x42 ; 'B'
000000000001c184         db  0x0e ; '.'
000000000001c185         db  0x08 ; '.'
000000000001c186         db  0x47 ; 'G'
000000000001c187         db  0x0b ; '.'
000000000001c188         db  0x03 ; '.'
000000000001c189         db  0x1d ; '.'
000000000001c18a         db  0x02 ; '.'
000000000001c18b         db  0x0e ; '.'
000000000001c18c         db  0x88 ; '.'
000000000001c18d         db  0x07 ; '.'
000000000001c18e         db  0x47 ; 'G'
000000000001c18f         db  0x0e ; '.'
000000000001c190         db  0x90 ; '.'
000000000001c191         db  0x07 ; '.'
000000000001c192         db  0x75 ; 'u'
000000000001c193         db  0x0e ; '.'
000000000001c194         db  0x88 ; '.'
000000000001c195         db  0x07 ; '.'
000000000001c196         db  0x49 ; 'I'
000000000001c197         db  0x0e ; '.'
000000000001c198         db  0x80 ; '.'
000000000001c199         db  0x07 ; '.'
000000000001c19a         db  0x00 ; '.'
000000000001c19b         db  0x00 ; '.'
000000000001c19c         dd         0x00000010                                  ; Length of the record
000000000001c1a0         dd         0x00000b20                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c1a4         db         0x0c, 0xe9, 0xfe, 0xff                      ; begin 0xaab0
000000000001c1a8         db         0x46, 3 dup (0x00)                          ; length 0x46 (end at 0xaaf6)
000000000001c1ac         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c1ad         align      16
000000000001c1b0         dd         0x00000010                                  ; Length of the record
000000000001c1b4         dd         0x00000b34                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c1b8         db         0x48, 0xe9, 0xfe, 0xff                      ; begin 0xab00
000000000001c1bc         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0xab36)
000000000001c1c0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c1c1         align      4
000000000001c1c4         dd         0x00000010                                  ; Length of the record
000000000001c1c8         dd         0x00000b48                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c1cc         db         0x74, 0xe9, 0xfe, 0xff                      ; begin 0xab40
000000000001c1d0         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0xab76)
000000000001c1d4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c1d5         align      8
000000000001c1d8         dd         0x00000010                                  ; Length of the record
000000000001c1dc         dd         0x00000b5c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c1e0         db         0xa0, 0xe9, 0xfe, 0xff                      ; begin 0xab80
000000000001c1e4         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0xabb6)
000000000001c1e8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c1e9         align      4
000000000001c1ec         dd         0x00000010                                  ; Length of the record
000000000001c1f0         dd         0x00000b70                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c1f4         db         0xcc, 0xe9, 0xfe, 0xff                      ; begin 0xabc0
000000000001c1f8         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0xabf6)
000000000001c1fc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c1fd         align      512
000000000001c200         dd         0x00000010                                  ; Length of the record
000000000001c204         dd         0x00000b84                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c208         db         0xf8, 0xe9, 0xfe, 0xff                      ; begin 0xac00
000000000001c20c         db         0x46, 3 dup (0x00)                          ; length 0x46 (end at 0xac46)
000000000001c210         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c211         align      4
000000000001c214         dd         0x00000034                                  ; Length of the record
000000000001c218         dd         0x00000b98                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c21c         db         0x34, 0xea, 0xfe, 0xff                      ; begin 0xac50
000000000001c220         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0xacb5)
000000000001c224         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c225         db  0x42 ; 'B'
000000000001c226         db  0x0e ; '.'
000000000001c227         db  0x10 ; '.'
000000000001c228         db  0x8c ; '.'
000000000001c229         db  0x02 ; '.'
000000000001c22a         db  0x41 ; 'A'
000000000001c22b         db  0x0e ; '.'
000000000001c22c         db  0x18 ; '.'
000000000001c22d         db  0x86 ; '.'
000000000001c22e         db  0x03 ; '.'
000000000001c22f         db  0x44 ; 'D'
000000000001c230         db  0x0e ; '.'
000000000001c231         db  0x20 ; ' '
000000000001c232         db  0x83 ; '.'
000000000001c233         db  0x04 ; '.'
000000000001c234         db  0x02 ; '.'
000000000001c235         db  0x46 ; 'F'
000000000001c236         db  0x0a ; '.'
000000000001c237         db  0x0e ; '.'
000000000001c238         db  0x18 ; '.'
000000000001c239         db  0x49 ; 'I'
000000000001c23a         db  0x0e ; '.'
000000000001c23b         db  0x10 ; '.'
000000000001c23c         db  0x42 ; 'B'
000000000001c23d         db  0x0e ; '.'
000000000001c23e         db  0x08 ; '.'
000000000001c23f         db  0x48 ; 'H'
000000000001c240         db  0x0b ; '.'
000000000001c241         db  0x41 ; 'A'
000000000001c242         db  0x0e ; '.'
000000000001c243         db  0x18 ; '.'
000000000001c244         db  0x41 ; 'A'
000000000001c245         db  0x0e ; '.'
000000000001c246         db  0x10 ; '.'
000000000001c247         db  0x42 ; 'B'
000000000001c248         db  0x0e ; '.'
000000000001c249         db  0x08 ; '.'
000000000001c24a         db  0x00 ; '.'
000000000001c24b         db  0x00 ; '.'
000000000001c24c         dd         0x00000034                                  ; Length of the record
000000000001c250         dd         0x00000bd0                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c254         db         0x6c, 0xea, 0xfe, 0xff                      ; begin 0xacc0
000000000001c258         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0xad25)
000000000001c25c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c25d         db  0x42 ; 'B'
000000000001c25e         db  0x0e ; '.'
000000000001c25f         db  0x10 ; '.'
000000000001c260         db  0x8c ; '.'
000000000001c261         db  0x02 ; '.'
000000000001c262         db  0x41 ; 'A'
000000000001c263         db  0x0e ; '.'
000000000001c264         db  0x18 ; '.'
000000000001c265         db  0x86 ; '.'
000000000001c266         db  0x03 ; '.'
000000000001c267         db  0x44 ; 'D'
000000000001c268         db  0x0e ; '.'
000000000001c269         db  0x20 ; ' '
000000000001c26a         db  0x83 ; '.'
000000000001c26b         db  0x04 ; '.'
000000000001c26c         db  0x02 ; '.'
000000000001c26d         db  0x47 ; 'G'
000000000001c26e         db  0x0a ; '.'
000000000001c26f         db  0x0e ; '.'
000000000001c270         db  0x18 ; '.'
000000000001c271         db  0x49 ; 'I'
000000000001c272         db  0x0e ; '.'
000000000001c273         db  0x10 ; '.'
000000000001c274         db  0x42 ; 'B'
000000000001c275         db  0x0e ; '.'
000000000001c276         db  0x08 ; '.'
000000000001c277         db  0x47 ; 'G'
000000000001c278         db  0x0b ; '.'
000000000001c279         db  0x41 ; 'A'
000000000001c27a         db  0x0e ; '.'
000000000001c27b         db  0x18 ; '.'
000000000001c27c         db  0x41 ; 'A'
000000000001c27d         db  0x0e ; '.'
000000000001c27e         db  0x10 ; '.'
000000000001c27f         db  0x42 ; 'B'
000000000001c280         db  0x0e ; '.'
000000000001c281         db  0x08 ; '.'
000000000001c282         db  0x00 ; '.'
000000000001c283         db  0x00 ; '.'
000000000001c284         dd         0x00000010                                  ; Length of the record
000000000001c288         dd         0x00000c08                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c28c         db         0xa4, 0xea, 0xfe, 0xff                      ; begin 0xad30
000000000001c290         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0xad66)
000000000001c294         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c295         align      8
000000000001c298         dd         0x00000010                                  ; Length of the record
000000000001c29c         dd         0x00000c1c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c2a0         db         0xd0, 0xea, 0xfe, 0xff                      ; begin 0xad70
000000000001c2a4         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0xada6)
000000000001c2a8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c2a9         align      4
000000000001c2ac         dd         0x00000010                                  ; Length of the record
000000000001c2b0         dd         0x00000c30                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c2b4         db         0xfc, 0xea, 0xfe, 0xff                      ; begin 0xadb0
000000000001c2b8         db         0x46, 3 dup (0x00)                          ; length 0x46 (end at 0xadf6)
000000000001c2bc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c2bd         align      64
000000000001c2c0         dd         0x00000010                                  ; Length of the record
000000000001c2c4         dd         0x00000c44                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c2c8         db         0x38, 0xeb, 0xfe, 0xff                      ; begin 0xae00
000000000001c2cc         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0xae36)
000000000001c2d0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c2d1         align      4
000000000001c2d4         dd         0x00000010                                  ; Length of the record
000000000001c2d8         dd         0x00000c58                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c2dc         db         0x64, 0xeb, 0xfe, 0xff                      ; begin 0xae40
000000000001c2e0         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0xae76)
000000000001c2e4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c2e5         align      8
000000000001c2e8         dd         0x00000010                                  ; Length of the record
000000000001c2ec         dd         0x00000c6c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c2f0         db         0x90, 0xeb, 0xfe, 0xff                      ; begin 0xae80
000000000001c2f4         db         0x46, 3 dup (0x00)                          ; length 0x46 (end at 0xaec6)
000000000001c2f8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c2f9         align      4
000000000001c2fc         dd         0x00000010                                  ; Length of the record
000000000001c300         dd         0x00000c80                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c304         db         0xcc, 0xeb, 0xfe, 0xff                      ; begin 0xaed0
000000000001c308         db         0xa8, 3 dup (0x00)                          ; length 0xa8 (end at 0xaf78)
000000000001c30c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c30d         align      16
000000000001c310         dd         0x00000010                                  ; Length of the record
000000000001c314         dd         0x00000c94                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c318         db         0x68, 0xec, 0xfe, 0xff                      ; begin 0xaf80
000000000001c31c         db         0xa8, 3 dup (0x00)                          ; length 0xa8 (end at 0xb028)
000000000001c320         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c321         align      4
000000000001c324         dd         0x00000010                                  ; Length of the record
000000000001c328         dd         0x00000ca8                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c32c         db         0x04, 0xed, 0xfe, 0xff                      ; begin 0xb030
000000000001c330         db         0xb4, 3 dup (0x00)                          ; length 0xb4 (end at 0xb0e4)
000000000001c334         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c335         align      8
000000000001c338         dd         0x00000010                                  ; Length of the record
000000000001c33c         dd         0x00000cbc                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c340         db         0xb0, 0xed, 0xfe, 0xff                      ; begin 0xb0f0
000000000001c344         db         0xa8, 3 dup (0x00)                          ; length 0xa8 (end at 0xb198)
000000000001c348         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c349         align      4
000000000001c34c         dd         0x00000010                                  ; Length of the record
000000000001c350         dd         0x00000cd0                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c354         db         0x4c, 0xee, 0xfe, 0xff                      ; begin 0xb1a0
000000000001c358         db         0xa8, 3 dup (0x00)                          ; length 0xa8 (end at 0xb248)
000000000001c35c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c35d         align      32
000000000001c360         dd         0x00000010                                  ; Length of the record
000000000001c364         dd         0x00000ce4                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c368         db         0xe8, 0xee, 0xfe, 0xff                      ; begin 0xb250
000000000001c36c         db         0xb4, 3 dup (0x00)                          ; length 0xb4 (end at 0xb304)
000000000001c370         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c371         align      4
000000000001c374         dd         0x00000034                                  ; Length of the record
000000000001c378         dd         0x00000cf8                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c37c         db         0x94, 0xef, 0xfe, 0xff                      ; begin 0xb310
000000000001c380         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0xb390)
000000000001c384         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c385         db  0x42 ; 'B'
000000000001c386         db  0x0e ; '.'
000000000001c387         db  0x10 ; '.'
000000000001c388         db  0x8c ; '.'
000000000001c389         db  0x02 ; '.'
000000000001c38a         db  0x41 ; 'A'
000000000001c38b         db  0x0e ; '.'
000000000001c38c         db  0x18 ; '.'
000000000001c38d         db  0x86 ; '.'
000000000001c38e         db  0x03 ; '.'
000000000001c38f         db  0x44 ; 'D'
000000000001c390         db  0x0e ; '.'
000000000001c391         db  0x20 ; ' '
000000000001c392         db  0x83 ; '.'
000000000001c393         db  0x04 ; '.'
000000000001c394         db  0x02 ; '.'
000000000001c395         db  0x47 ; 'G'
000000000001c396         db  0x0a ; '.'
000000000001c397         db  0x0e ; '.'
000000000001c398         db  0x18 ; '.'
000000000001c399         db  0x47 ; 'G'
000000000001c39a         db  0x0e ; '.'
000000000001c39b         db  0x10 ; '.'
000000000001c39c         db  0x42 ; 'B'
000000000001c39d         db  0x0e ; '.'
000000000001c39e         db  0x08 ; '.'
000000000001c39f         db  0x49 ; 'I'
000000000001c3a0         db  0x0b ; '.'
000000000001c3a1         db  0x5c ; '\'
000000000001c3a2         db  0x0e ; '.'
000000000001c3a3         db  0x18 ; '.'
000000000001c3a4         db  0x41 ; 'A'
000000000001c3a5         db  0x0e ; '.'
000000000001c3a6         db  0x10 ; '.'
000000000001c3a7         db  0x42 ; 'B'
000000000001c3a8         db  0x0e ; '.'
000000000001c3a9         db  0x08 ; '.'
000000000001c3aa         db  0x00 ; '.'
000000000001c3ab         db  0x00 ; '.'
000000000001c3ac         dd         0x00000034                                  ; Length of the record
000000000001c3b0         dd         0x00000d30                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c3b4         db         0xdc, 0xef, 0xfe, 0xff                      ; begin 0xb390
000000000001c3b8         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0xb410)
000000000001c3bc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c3bd         db  0x42 ; 'B'
000000000001c3be         db  0x0e ; '.'
000000000001c3bf         db  0x10 ; '.'
000000000001c3c0         db  0x8c ; '.'
000000000001c3c1         db  0x02 ; '.'
000000000001c3c2         db  0x41 ; 'A'
000000000001c3c3         db  0x0e ; '.'
000000000001c3c4         db  0x18 ; '.'
000000000001c3c5         db  0x86 ; '.'
000000000001c3c6         db  0x03 ; '.'
000000000001c3c7         db  0x44 ; 'D'
000000000001c3c8         db  0x0e ; '.'
000000000001c3c9         db  0x20 ; ' '
000000000001c3ca         db  0x83 ; '.'
000000000001c3cb         db  0x04 ; '.'
000000000001c3cc         db  0x02 ; '.'
000000000001c3cd         db  0x47 ; 'G'
000000000001c3ce         db  0x0a ; '.'
000000000001c3cf         db  0x0e ; '.'
000000000001c3d0         db  0x18 ; '.'
000000000001c3d1         db  0x47 ; 'G'
000000000001c3d2         db  0x0e ; '.'
000000000001c3d3         db  0x10 ; '.'
000000000001c3d4         db  0x42 ; 'B'
000000000001c3d5         db  0x0e ; '.'
000000000001c3d6         db  0x08 ; '.'
000000000001c3d7         db  0x49 ; 'I'
000000000001c3d8         db  0x0b ; '.'
000000000001c3d9         db  0x5c ; '\'
000000000001c3da         db  0x0e ; '.'
000000000001c3db         db  0x18 ; '.'
000000000001c3dc         db  0x41 ; 'A'
000000000001c3dd         db  0x0e ; '.'
000000000001c3de         db  0x10 ; '.'
000000000001c3df         db  0x42 ; 'B'
000000000001c3e0         db  0x0e ; '.'
000000000001c3e1         db  0x08 ; '.'
000000000001c3e2         db  0x00 ; '.'
000000000001c3e3         db  0x00 ; '.'
000000000001c3e4         dd         0x00000038                                  ; Length of the record
000000000001c3e8         dd         0x00000d68                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c3ec         db         0x24, 0xf0, 0xfe, 0xff                      ; begin 0xb410
000000000001c3f0         db         0xed, 3 dup (0x00)                          ; length 0xed (end at 0xb4fd)
000000000001c3f4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c3f5         db  0x02 ; '.'
000000000001c3f6         db  0x8a ; '.'
000000000001c3f7         db  0x0e ; '.'
000000000001c3f8         db  0x10 ; '.'
000000000001c3f9         db  0x8c ; '.'
000000000001c3fa         db  0x02 ; '.'
000000000001c3fb         db  0x41 ; 'A'
000000000001c3fc         db  0x0e ; '.'
000000000001c3fd         db  0x18 ; '.'
000000000001c3fe         db  0x86 ; '.'
000000000001c3ff         db  0x03 ; '.'
000000000001c400         db  0x44 ; 'D'
000000000001c401         db  0x0e ; '.'
000000000001c402         db  0x20 ; ' '
000000000001c403         db  0x83 ; '.'
000000000001c404         db  0x04 ; '.'
000000000001c405         db  0x02 ; '.'
000000000001c406         db  0x4d ; 'M'
000000000001c407         db  0x0a ; '.'
000000000001c408         db  0xc3 ; '.'
000000000001c409         db  0x0e ; '.'
000000000001c40a         db  0x18 ; '.'
000000000001c40b         db  0x41 ; 'A'
000000000001c40c         db  0xc6 ; '.'
000000000001c40d         db  0x0e ; '.'
000000000001c40e         db  0x10 ; '.'
000000000001c40f         db  0x42 ; 'B'
000000000001c410         db  0xcc ; '.'
000000000001c411         db  0x0e ; '.'
000000000001c412         db  0x08 ; '.'
000000000001c413         db  0x49 ; 'I'
000000000001c414         db  0x0b ; '.'
000000000001c415         db  0x41 ; 'A'
000000000001c416         db  0x0e ; '.'
000000000001c417         db  0x18 ; '.'
000000000001c418         db  0x41 ; 'A'
000000000001c419         db  0x0e ; '.'
000000000001c41a         db  0x10 ; '.'
000000000001c41b         db  0x42 ; 'B'
000000000001c41c         db  0x0e ; '.'
000000000001c41d         db  0x08 ; '.'
000000000001c41e         db  0x00 ; '.'
000000000001c41f         db  0x00 ; '.'
000000000001c420         dd         0x00000038                                  ; Length of the record
000000000001c424         dd         0x00000da4                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c428         db         0xd8, 0xf0, 0xfe, 0xff                      ; begin 0xb500
000000000001c42c         db         0xed, 3 dup (0x00)                          ; length 0xed (end at 0xb5ed)
000000000001c430         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c431         db  0x02 ; '.'
000000000001c432         db  0x8a ; '.'
000000000001c433         db  0x0e ; '.'
000000000001c434         db  0x10 ; '.'
000000000001c435         db  0x8c ; '.'
000000000001c436         db  0x02 ; '.'
000000000001c437         db  0x41 ; 'A'
000000000001c438         db  0x0e ; '.'
000000000001c439         db  0x18 ; '.'
000000000001c43a         db  0x86 ; '.'
000000000001c43b         db  0x03 ; '.'
000000000001c43c         db  0x44 ; 'D'
000000000001c43d         db  0x0e ; '.'
000000000001c43e         db  0x20 ; ' '
000000000001c43f         db  0x83 ; '.'
000000000001c440         db  0x04 ; '.'
000000000001c441         db  0x02 ; '.'
000000000001c442         db  0x4c ; 'L'
000000000001c443         db  0x0a ; '.'
000000000001c444         db  0xc3 ; '.'
000000000001c445         db  0x0e ; '.'
000000000001c446         db  0x18 ; '.'
000000000001c447         db  0x41 ; 'A'
000000000001c448         db  0xc6 ; '.'
000000000001c449         db  0x0e ; '.'
000000000001c44a         db  0x10 ; '.'
000000000001c44b         db  0x42 ; 'B'
000000000001c44c         db  0xcc ; '.'
000000000001c44d         db  0x0e ; '.'
000000000001c44e         db  0x08 ; '.'
000000000001c44f         db  0x4a ; 'J'
000000000001c450         db  0x0b ; '.'
000000000001c451         db  0x41 ; 'A'
000000000001c452         db  0x0e ; '.'
000000000001c453         db  0x18 ; '.'
000000000001c454         db  0x41 ; 'A'
000000000001c455         db  0x0e ; '.'
000000000001c456         db  0x10 ; '.'
000000000001c457         db  0x42 ; 'B'
000000000001c458         db  0x0e ; '.'
000000000001c459         db  0x08 ; '.'
000000000001c45a         db  0x00 ; '.'
000000000001c45b         db  0x00 ; '.'
000000000001c45c         dd         0x00000010                                  ; Length of the record
000000000001c460         dd         0x00000de0                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c464         db         0x8c, 0xf1, 0xfe, 0xff                      ; begin 0xb5f0
000000000001c468         db         0xa8, 3 dup (0x00)                          ; length 0xa8 (end at 0xb698)
000000000001c46c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c46d         align      16
000000000001c470         dd         0x00000010                                  ; Length of the record
000000000001c474         dd         0x00000df4                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c478         db         0x28, 0xf2, 0xfe, 0xff                      ; begin 0xb6a0
000000000001c47c         db         0xa8, 3 dup (0x00)                          ; length 0xa8 (end at 0xb748)
000000000001c480         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c481         align      4
000000000001c484         dd         0x00000010                                  ; Length of the record
000000000001c488         dd         0x00000e08                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c48c         db         0xc4, 0xf2, 0xfe, 0xff                      ; begin 0xb750
000000000001c490         db         0xb4, 3 dup (0x00)                          ; length 0xb4 (end at 0xb804)
000000000001c494         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c495         align      8
000000000001c498         dd         0x0000003c                                  ; Length of the record
000000000001c49c         dd         0x00000e1c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c4a0         db         0x70, 0xf3, 0xfe, 0xff                      ; begin 0xb810
000000000001c4a4         db         0xfe, 3 dup (0x00)                          ; length 0xfe (end at 0xb90e)
000000000001c4a8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c4a9         db  0x02 ; '.'
000000000001c4aa         db  0x8a ; '.'
000000000001c4ab         db  0x0e ; '.'
000000000001c4ac         db  0x10 ; '.'
000000000001c4ad         db  0x8c ; '.'
000000000001c4ae         db  0x02 ; '.'
000000000001c4af         db  0x41 ; 'A'
000000000001c4b0         db  0x0e ; '.'
000000000001c4b1         db  0x18 ; '.'
000000000001c4b2         db  0x86 ; '.'
000000000001c4b3         db  0x03 ; '.'
000000000001c4b4         db  0x41 ; 'A'
000000000001c4b5         db  0x0e ; '.'
000000000001c4b6         db  0x20 ; ' '
000000000001c4b7         db  0x83 ; '.'
000000000001c4b8         db  0x04 ; '.'
000000000001c4b9         db  0x02 ; '.'
000000000001c4ba         db  0x4f ; 'O'
000000000001c4bb         db  0x0a ; '.'
000000000001c4bc         db  0xc3 ; '.'
000000000001c4bd         db  0x0e ; '.'
000000000001c4be         db  0x18 ; '.'
000000000001c4bf         db  0x41 ; 'A'
000000000001c4c0         db  0xc6 ; '.'
000000000001c4c1         db  0x0e ; '.'
000000000001c4c2         db  0x10 ; '.'
000000000001c4c3         db  0x42 ; 'B'
000000000001c4c4         db  0xcc ; '.'
000000000001c4c5         db  0x0e ; '.'
000000000001c4c6         db  0x08 ; '.'
000000000001c4c7         db  0x4a ; 'J'
000000000001c4c8         db  0x0b ; '.'
000000000001c4c9         db  0x41 ; 'A'
000000000001c4ca         db  0x0a ; '.'
000000000001c4cb         db  0x0e ; '.'
000000000001c4cc         db  0x18 ; '.'
000000000001c4cd         db  0x41 ; 'A'
000000000001c4ce         db  0x0e ; '.'
000000000001c4cf         db  0x10 ; '.'
000000000001c4d0         db  0x42 ; 'B'
000000000001c4d1         db  0x0e ; '.'
000000000001c4d2         db  0x08 ; '.'
000000000001c4d3         db  0x44 ; 'D'
000000000001c4d4         db  0x0b ; '.'
000000000001c4d5         db  0x00 ; '.'
000000000001c4d6         db  0x00 ; '.'
000000000001c4d7         db  0x00 ; '.'
000000000001c4d8         dd         0x00000028                                  ; Length of the record
000000000001c4dc         dd         0x00000e5c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c4e0         db         0x30, 0xf4, 0xfe, 0xff                      ; begin 0xb910
000000000001c4e4         db         0x33, 0x07, 2 dup (0x00)                    ; length 0x733 (end at 0xc043)
000000000001c4e8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c4e9         db  0x42 ; 'B'
000000000001c4ea         db  0x0e ; '.'
000000000001c4eb         db  0x10 ; '.'
000000000001c4ec         db  0x8d ; '.'
000000000001c4ed         db  0x02 ; '.'
000000000001c4ee         db  0x42 ; 'B'
000000000001c4ef         db  0x0e ; '.'
000000000001c4f0         db  0x18 ; '.'
000000000001c4f1         db  0x8c ; '.'
000000000001c4f2         db  0x03 ; '.'
000000000001c4f3         db  0x46 ; 'F'
000000000001c4f4         db  0x0e ; '.'
000000000001c4f5         db  0x20 ; ' '
000000000001c4f6         db  0x86 ; '.'
000000000001c4f7         db  0x04 ; '.'
000000000001c4f8         db  0x41 ; 'A'
000000000001c4f9         db  0x0e ; '.'
000000000001c4fa         db  0x28 ; '('
000000000001c4fb         db  0x83 ; '.'
000000000001c4fc         db  0x05 ; '.'
000000000001c4fd         db  0x4a ; 'J'
000000000001c4fe         db  0x0e ; '.'
000000000001c4ff         db  0xb0 ; '.'
000000000001c500         db  0x01 ; '.'
000000000001c501         db  0x00 ; '.'
000000000001c502         db  0x00 ; '.'
000000000001c503         db  0x00 ; '.'
000000000001c504         dd         0x00000068                                  ; Length of the record
000000000001c508         dd         0x00000e88                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c50c         db         0x94, 0x73, 0xfe, 0xff                      ; begin 0x38a0
000000000001c510         db         0xc9, 0x19, 2 dup (0x00)                    ; length 0x19c9 (end at 0x5269)
000000000001c514         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c515         db  0x42 ; 'B'
000000000001c516         db  0x0e ; '.'
000000000001c517         db  0x10 ; '.'
000000000001c518         db  0x8f ; '.'
000000000001c519         db  0x02 ; '.'
000000000001c51a         db  0x42 ; 'B'
000000000001c51b         db  0x0e ; '.'
000000000001c51c         db  0x18 ; '.'
000000000001c51d         db  0x8e ; '.'
000000000001c51e         db  0x03 ; '.'
000000000001c51f         db  0x42 ; 'B'
000000000001c520         db  0x0e ; '.'
000000000001c521         db  0x20 ; ' '
000000000001c522         db  0x8d ; '.'
000000000001c523         db  0x04 ; '.'
000000000001c524         db  0x42 ; 'B'
000000000001c525         db  0x0e ; '.'
000000000001c526         db  0x28 ; '('
000000000001c527         db  0x8c ; '.'
000000000001c528         db  0x05 ; '.'
000000000001c529         db  0x41 ; 'A'
000000000001c52a         db  0x0e ; '.'
000000000001c52b         db  0x30 ; '0'
000000000001c52c         db  0x86 ; '.'
000000000001c52d         db  0x06 ; '.'
000000000001c52e         db  0x41 ; 'A'
000000000001c52f         db  0x0e ; '.'
000000000001c530         db  0x38 ; '8'
000000000001c531         db  0x83 ; '.'
000000000001c532         db  0x07 ; '.'
000000000001c533         db  0x49 ; 'I'
000000000001c534         db  0x0e ; '.'
000000000001c535         db  0x90 ; '.'
000000000001c536         db  0x01 ; '.'
000000000001c537         db  0x03 ; '.'
000000000001c538         db  0xc9 ; '.'
000000000001c539         db  0x03 ; '.'
000000000001c53a         db  0x0e ; '.'
000000000001c53b         db  0x98 ; '.'
000000000001c53c         db  0x01 ; '.'
000000000001c53d         db  0x50 ; 'P'
000000000001c53e         db  0x0e ; '.'
000000000001c53f         db  0xa0 ; '.'
000000000001c540         db  0x01 ; '.'
000000000001c541         db  0x58 ; 'X'
000000000001c542         db  0x0e ; '.'
000000000001c543         db  0x98 ; '.'
000000000001c544         db  0x01 ; '.'
000000000001c545         db  0x41 ; 'A'
000000000001c546         db  0x0e ; '.'
000000000001c547         db  0x90 ; '.'
000000000001c548         db  0x01 ; '.'
000000000001c549         db  0x03 ; '.'
000000000001c54a         db  0x7b ; '{'
000000000001c54b         db  0x01 ; '.'
000000000001c54c         db  0x0a ; '.'
000000000001c54d         db  0x0e ; '.'
000000000001c54e         db  0x98 ; '.'
000000000001c54f         db  0x01 ; '.'
000000000001c550         db  0x50 ; 'P'
000000000001c551         db  0x0e ; '.'
000000000001c552         db  0xa0 ; '.'
000000000001c553         db  0x01 ; '.'
000000000001c554         db  0x5c ; '\'
000000000001c555         db  0x0b ; '.'
000000000001c556         db  0x03 ; '.'
000000000001c557         db  0xa0 ; '.'
000000000001c558         db  0x08 ; '.'
000000000001c559         db  0x0a ; '.'
000000000001c55a         db  0x0e ; '.'
000000000001c55b         db  0x38 ; '8'
000000000001c55c         db  0x41 ; 'A'
000000000001c55d         db  0x0e ; '.'
000000000001c55e         db  0x30 ; '0'
000000000001c55f         db  0x41 ; 'A'
000000000001c560         db  0x0e ; '.'
000000000001c561         db  0x28 ; '('
000000000001c562         db  0x42 ; 'B'
000000000001c563         db  0x0e ; '.'
000000000001c564         db  0x20 ; ' '
000000000001c565         db  0x42 ; 'B'
000000000001c566         db  0x0e ; '.'
000000000001c567         db  0x18 ; '.'
000000000001c568         db  0x42 ; 'B'
000000000001c569         db  0x0e ; '.'
000000000001c56a         db  0x10 ; '.'
000000000001c56b         db  0x42 ; 'B'
000000000001c56c         db  0x0e ; '.'
000000000001c56d         db  0x08 ; '.'
000000000001c56e         db  0x41 ; 'A'
000000000001c56f         db  0x0b ; '.'
000000000001c570         dd         0x0000004c                                  ; Length of the record
000000000001c574         dd         0x00000ef4                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c578         db         0xd8, 0xfa, 0xfe, 0xff                      ; begin 0xc050
000000000001c57c         db         0xef, 3 dup (0x00)                          ; length 0xef (end at 0xc13f)
000000000001c580         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c581         db  0x42 ; 'B'
000000000001c582         db  0x0e ; '.'
000000000001c583         db  0x10 ; '.'
000000000001c584         db  0x8f ; '.'
000000000001c585         db  0x02 ; '.'
000000000001c586         db  0x42 ; 'B'
000000000001c587         db  0x0e ; '.'
000000000001c588         db  0x18 ; '.'
000000000001c589         db  0x8e ; '.'
000000000001c58a         db  0x03 ; '.'
000000000001c58b         db  0x47 ; 'G'
000000000001c58c         db  0x0e ; '.'
000000000001c58d         db  0x20 ; ' '
000000000001c58e         db  0x8d ; '.'
000000000001c58f         db  0x04 ; '.'
000000000001c590         db  0x42 ; 'B'
000000000001c591         db  0x0e ; '.'
000000000001c592         db  0x28 ; '('
000000000001c593         db  0x8c ; '.'
000000000001c594         db  0x05 ; '.'
000000000001c595         db  0x44 ; 'D'
000000000001c596         db  0x0e ; '.'
000000000001c597         db  0x30 ; '0'
000000000001c598         db  0x86 ; '.'
000000000001c599         db  0x06 ; '.'
000000000001c59a         db  0x41 ; 'A'
000000000001c59b         db  0x0e ; '.'
000000000001c59c         db  0x38 ; '8'
000000000001c59d         db  0x83 ; '.'
000000000001c59e         db  0x07 ; '.'
000000000001c59f         db  0x5c ; '\'
000000000001c5a0         db  0x0e ; '.'
000000000001c5a1         db  0x40 ; '@'
000000000001c5a2         db  0x02 ; '.'
000000000001c5a3         db  0x61 ; 'a'
000000000001c5a4         db  0x0a ; '.'
000000000001c5a5         db  0x0e ; '.'
000000000001c5a6         db  0x38 ; '8'
000000000001c5a7         db  0x44 ; 'D'
000000000001c5a8         db  0x0e ; '.'
000000000001c5a9         db  0x30 ; '0'
000000000001c5aa         db  0x41 ; 'A'
000000000001c5ab         db  0x0e ; '.'
000000000001c5ac         db  0x28 ; '('
000000000001c5ad         db  0x42 ; 'B'
000000000001c5ae         db  0x0e ; '.'
000000000001c5af         db  0x20 ; ' '
000000000001c5b0         db  0x42 ; 'B'
000000000001c5b1         db  0x0e ; '.'
000000000001c5b2         db  0x18 ; '.'
000000000001c5b3         db  0x42 ; 'B'
000000000001c5b4         db  0x0e ; '.'
000000000001c5b5         db  0x10 ; '.'
000000000001c5b6         db  0x42 ; 'B'
000000000001c5b7         db  0x0e ; '.'
000000000001c5b8         db  0x08 ; '.'
000000000001c5b9         db  0x44 ; 'D'
000000000001c5ba         db  0x0b ; '.'
000000000001c5bb         db  0x00 ; '.'
000000000001c5bc         db  0x00 ; '.'
000000000001c5bd         db  0x00 ; '.'
000000000001c5be         db  0x00 ; '.'
000000000001c5bf         db  0x00 ; '.'
000000000001c5c0         dd         0x00000010                                  ; Length of the record
000000000001c5c4         dd         0x00000f44                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c5c8         db         0x78, 0xfb, 0xfe, 0xff                      ; begin 0xc140
000000000001c5cc         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0xc14a)
000000000001c5d0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c5d1         align      4
000000000001c5d4         dd         0x00000048                                  ; Length of the record
000000000001c5d8         dd         0x00000f58                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c5dc         db         0x74, 0xfb, 0xfe, 0xff                      ; begin 0xc150
000000000001c5e0         db         0x16, 0x01, 2 dup (0x00)                    ; length 0x116 (end at 0xc266)
000000000001c5e4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c5e5         db  0x42 ; 'B'
000000000001c5e6         db  0x0e ; '.'
000000000001c5e7         db  0x10 ; '.'
000000000001c5e8         db  0x8f ; '.'
000000000001c5e9         db  0x02 ; '.'
000000000001c5ea         db  0x42 ; 'B'
000000000001c5eb         db  0x0e ; '.'
000000000001c5ec         db  0x18 ; '.'
000000000001c5ed         db  0x8e ; '.'
000000000001c5ee         db  0x03 ; '.'
000000000001c5ef         db  0x45 ; 'E'
000000000001c5f0         db  0x0e ; '.'
000000000001c5f1         db  0x20 ; ' '
000000000001c5f2         db  0x8d ; '.'
000000000001c5f3         db  0x04 ; '.'
000000000001c5f4         db  0x42 ; 'B'
000000000001c5f5         db  0x0e ; '.'
000000000001c5f6         db  0x28 ; '('
000000000001c5f7         db  0x8c ; '.'
000000000001c5f8         db  0x05 ; '.'
000000000001c5f9         db  0x44 ; 'D'
000000000001c5fa         db  0x0e ; '.'
000000000001c5fb         db  0x30 ; '0'
000000000001c5fc         db  0x86 ; '.'
000000000001c5fd         db  0x06 ; '.'
000000000001c5fe         db  0x41 ; 'A'
000000000001c5ff         db  0x0e ; '.'
000000000001c600         db  0x38 ; '8'
000000000001c601         db  0x83 ; '.'
000000000001c602         db  0x07 ; '.'
000000000001c603         db  0x47 ; 'G'
000000000001c604         db  0x0e ; '.'
000000000001c605         db  0x60 ; '`'
000000000001c606         db  0x02 ; '.'
000000000001c607         db  0xde ; '.'
000000000001c608         db  0x0a ; '.'
000000000001c609         db  0x0e ; '.'
000000000001c60a         db  0x38 ; '8'
000000000001c60b         db  0x41 ; 'A'
000000000001c60c         db  0x0e ; '.'
000000000001c60d         db  0x30 ; '0'
000000000001c60e         db  0x41 ; 'A'
000000000001c60f         db  0x0e ; '.'
000000000001c610         db  0x28 ; '('
000000000001c611         db  0x42 ; 'B'
000000000001c612         db  0x0e ; '.'
000000000001c613         db  0x20 ; ' '
000000000001c614         db  0x42 ; 'B'
000000000001c615         db  0x0e ; '.'
000000000001c616         db  0x18 ; '.'
000000000001c617         db  0x42 ; 'B'
000000000001c618         db  0x0e ; '.'
000000000001c619         db  0x10 ; '.'
000000000001c61a         db  0x42 ; 'B'
000000000001c61b         db  0x0e ; '.'
000000000001c61c         db  0x08 ; '.'
000000000001c61d         db  0x41 ; 'A'
000000000001c61e         db  0x0b ; '.'
000000000001c61f         db  0x00 ; '.'
000000000001c620         dd         0x00000028                                  ; Length of the record
000000000001c624         dd         0x00000fa4                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c628         db         0x48, 0xfc, 0xfe, 0xff                      ; begin 0xc270
000000000001c62c         db         0x73, 3 dup (0x00)                          ; length 0x73 (end at 0xc2e3)
000000000001c630         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c631         db  0x46 ; 'F'
000000000001c632         db  0x0e ; '.'
000000000001c633         db  0x10 ; '.'
000000000001c634         db  0x8c ; '.'
000000000001c635         db  0x02 ; '.'
000000000001c636         db  0x46 ; 'F'
000000000001c637         db  0x0e ; '.'
000000000001c638         db  0x18 ; '.'
000000000001c639         db  0x86 ; '.'
000000000001c63a         db  0x03 ; '.'
000000000001c63b         db  0x44 ; 'D'
000000000001c63c         db  0x0e ; '.'
000000000001c63d         db  0x20 ; ' '
000000000001c63e         db  0x83 ; '.'
000000000001c63f         db  0x04 ; '.'
000000000001c640         db  0x7f ; '.'
000000000001c641         db  0x0a ; '.'
000000000001c642         db  0x0e ; '.'
000000000001c643         db  0x18 ; '.'
000000000001c644         db  0x41 ; 'A'
000000000001c645         db  0x0e ; '.'
000000000001c646         db  0x10 ; '.'
000000000001c647         db  0x42 ; 'B'
000000000001c648         db  0x0e ; '.'
000000000001c649         db  0x08 ; '.'
000000000001c64a         db  0x4e ; 'N'
000000000001c64b         db  0x0b ; '.'
000000000001c64c         dd         0x0000005c                                  ; Length of the record
000000000001c650         dd         0x00000fd0                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c654         db         0x9c, 0xfc, 0xfe, 0xff                      ; begin 0xc2f0
000000000001c658         db         0x20, 0x01, 2 dup (0x00)                    ; length 0x120 (end at 0xc410)
000000000001c65c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c65d         db  0x42 ; 'B'
000000000001c65e         db  0x0e ; '.'
000000000001c65f         db  0x10 ; '.'
000000000001c660         db  0x8f ; '.'
000000000001c661         db  0x02 ; '.'
000000000001c662         db  0x42 ; 'B'
000000000001c663         db  0x0e ; '.'
000000000001c664         db  0x18 ; '.'
000000000001c665         db  0x8e ; '.'
000000000001c666         db  0x03 ; '.'
000000000001c667         db  0x45 ; 'E'
000000000001c668         db  0x0e ; '.'
000000000001c669         db  0x20 ; ' '
000000000001c66a         db  0x8d ; '.'
000000000001c66b         db  0x04 ; '.'
000000000001c66c         db  0x42 ; 'B'
000000000001c66d         db  0x0e ; '.'
000000000001c66e         db  0x28 ; '('
000000000001c66f         db  0x8c ; '.'
000000000001c670         db  0x05 ; '.'
000000000001c671         db  0x43 ; 'C'
000000000001c672         db  0x0e ; '.'
000000000001c673         db  0x30 ; '0'
000000000001c674         db  0x86 ; '.'
000000000001c675         db  0x06 ; '.'
000000000001c676         db  0x41 ; 'A'
000000000001c677         db  0x0e ; '.'
000000000001c678         db  0x38 ; '8'
000000000001c679         db  0x83 ; '.'
000000000001c67a         db  0x07 ; '.'
000000000001c67b         db  0x56 ; 'V'
000000000001c67c         db  0x0e ; '.'
000000000001c67d         db  0x40 ; '@'
000000000001c67e         db  0x02 ; '.'
000000000001c67f         db  0xd3 ; '.'
000000000001c680         db  0x0a ; '.'
000000000001c681         db  0x0e ; '.'
000000000001c682         db  0x38 ; '8'
000000000001c683         db  0x41 ; 'A'
000000000001c684         db  0x0e ; '.'
000000000001c685         db  0x30 ; '0'
000000000001c686         db  0x41 ; 'A'
000000000001c687         db  0x0e ; '.'
000000000001c688         db  0x28 ; '('
000000000001c689         db  0x42 ; 'B'
000000000001c68a         db  0x0e ; '.'
000000000001c68b         db  0x20 ; ' '
000000000001c68c         db  0x42 ; 'B'
000000000001c68d         db  0x0e ; '.'
000000000001c68e         db  0x18 ; '.'
000000000001c68f         db  0x42 ; 'B'
000000000001c690         db  0x0e ; '.'
000000000001c691         db  0x10 ; '.'
000000000001c692         db  0x42 ; 'B'
000000000001c693         db  0x0e ; '.'
000000000001c694         db  0x08 ; '.'
000000000001c695         db  0x46 ; 'F'
000000000001c696         db  0x0b ; '.'
000000000001c697         db  0x44 ; 'D'
000000000001c698         db  0x0e ; '.'
000000000001c699         db  0x38 ; '8'
000000000001c69a         db  0x46 ; 'F'
000000000001c69b         db  0x0e ; '.'
000000000001c69c         db  0x30 ; '0'
000000000001c69d         db  0x41 ; 'A'
000000000001c69e         db  0x0e ; '.'
000000000001c69f         db  0x28 ; '('
000000000001c6a0         db  0x42 ; 'B'
000000000001c6a1         db  0x0e ; '.'
000000000001c6a2         db  0x20 ; ' '
000000000001c6a3         db  0x42 ; 'B'
000000000001c6a4         db  0x0e ; '.'
000000000001c6a5         db  0x18 ; '.'
000000000001c6a6         db  0x42 ; 'B'
000000000001c6a7         db  0x0e ; '.'
000000000001c6a8         db  0x10 ; '.'
000000000001c6a9         db  0x42 ; 'B'
000000000001c6aa         db  0x0e ; '.'
000000000001c6ab         db  0x08 ; '.'
000000000001c6ac         dd         0x00000048                                  ; Length of the record
000000000001c6b0         dd         0x00001030                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c6b4         db         0x5c, 0xfd, 0xfe, 0xff                      ; begin 0xc410
000000000001c6b8         db         0x6d, 3 dup (0x00)                          ; length 0x6d (end at 0xc47d)
000000000001c6bc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c6bd         db  0x42 ; 'B'
000000000001c6be         db  0x0e ; '.'
000000000001c6bf         db  0x10 ; '.'
000000000001c6c0         db  0x8f ; '.'
000000000001c6c1         db  0x02 ; '.'
000000000001c6c2         db  0x42 ; 'B'
000000000001c6c3         db  0x0e ; '.'
000000000001c6c4         db  0x18 ; '.'
000000000001c6c5         db  0x8e ; '.'
000000000001c6c6         db  0x03 ; '.'
000000000001c6c7         db  0x45 ; 'E'
000000000001c6c8         db  0x0e ; '.'
000000000001c6c9         db  0x20 ; ' '
000000000001c6ca         db  0x8d ; '.'
000000000001c6cb         db  0x04 ; '.'
000000000001c6cc         db  0x42 ; 'B'
000000000001c6cd         db  0x0e ; '.'
000000000001c6ce         db  0x28 ; '('
000000000001c6cf         db  0x8c ; '.'
000000000001c6d0         db  0x05 ; '.'
000000000001c6d1         db  0x44 ; 'D'
000000000001c6d2         db  0x0e ; '.'
000000000001c6d3         db  0x30 ; '0'
000000000001c6d4         db  0x86 ; '.'
000000000001c6d5         db  0x06 ; '.'
000000000001c6d6         db  0x41 ; 'A'
000000000001c6d7         db  0x0e ; '.'
000000000001c6d8         db  0x38 ; '8'
000000000001c6d9         db  0x83 ; '.'
000000000001c6da         db  0x07 ; '.'
000000000001c6db         db  0x50 ; 'P'
000000000001c6dc         db  0x0e ; '.'
000000000001c6dd         db  0x40 ; '@'
000000000001c6de         db  0x5a ; 'Z'
000000000001c6df         db  0x0a ; '.'
000000000001c6e0         db  0x0e ; '.'
000000000001c6e1         db  0x38 ; '8'
000000000001c6e2         db  0x41 ; 'A'
000000000001c6e3         db  0x0e ; '.'
000000000001c6e4         db  0x30 ; '0'
000000000001c6e5         db  0x41 ; 'A'
000000000001c6e6         db  0x0e ; '.'
000000000001c6e7         db  0x28 ; '('
000000000001c6e8         db  0x42 ; 'B'
000000000001c6e9         db  0x0e ; '.'
000000000001c6ea         db  0x20 ; ' '
000000000001c6eb         db  0x42 ; 'B'
000000000001c6ec         db  0x0e ; '.'
000000000001c6ed         db  0x18 ; '.'
000000000001c6ee         db  0x42 ; 'B'
000000000001c6ef         db  0x0e ; '.'
000000000001c6f0         db  0x10 ; '.'
000000000001c6f1         db  0x42 ; 'B'
000000000001c6f2         db  0x0e ; '.'
000000000001c6f3         db  0x08 ; '.'
000000000001c6f4         db  0x41 ; 'A'
000000000001c6f5         db  0x0b ; '.'
000000000001c6f6         db  0x00 ; '.'
000000000001c6f7         db  0x00 ; '.'
000000000001c6f8         dd         0x0000003c                                  ; Length of the record
000000000001c6fc         dd         0x0000107c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c700         db         0x80, 0xfd, 0xfe, 0xff                      ; begin 0xc480
000000000001c704         db         0x4d, 3 dup (0x00)                          ; length 0x4d (end at 0xc4cd)
000000000001c708         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c709         db  0x42 ; 'B'
000000000001c70a         db  0x0e ; '.'
000000000001c70b         db  0x10 ; '.'
000000000001c70c         db  0x8e ; '.'
000000000001c70d         db  0x02 ; '.'
000000000001c70e         db  0x42 ; 'B'
000000000001c70f         db  0x0e ; '.'
000000000001c710         db  0x18 ; '.'
000000000001c711         db  0x8d ; '.'
000000000001c712         db  0x03 ; '.'
000000000001c713         db  0x42 ; 'B'
000000000001c714         db  0x0e ; '.'
000000000001c715         db  0x20 ; ' '
000000000001c716         db  0x8c ; '.'
000000000001c717         db  0x04 ; '.'
000000000001c718         db  0x41 ; 'A'
000000000001c719         db  0x0e ; '.'
000000000001c71a         db  0x28 ; '('
000000000001c71b         db  0x86 ; '.'
000000000001c71c         db  0x05 ; '.'
000000000001c71d         db  0x41 ; 'A'
000000000001c71e         db  0x0e ; '.'
000000000001c71f         db  0x30 ; '0'
000000000001c720         db  0x83 ; '.'
000000000001c721         db  0x06 ; '.'
000000000001c722         db  0x7a ; 'z'
000000000001c723         db  0x0e ; '.'
000000000001c724         db  0x28 ; '('
000000000001c725         db  0x44 ; 'D'
000000000001c726         db  0x0e ; '.'
000000000001c727         db  0x20 ; ' '
000000000001c728         db  0x42 ; 'B'
000000000001c729         db  0x0e ; '.'
000000000001c72a         db  0x18 ; '.'
000000000001c72b         db  0x42 ; 'B'
000000000001c72c         db  0x0e ; '.'
000000000001c72d         db  0x10 ; '.'
000000000001c72e         db  0x42 ; 'B'
000000000001c72f         db  0x0e ; '.'
000000000001c730         db  0x08 ; '.'
000000000001c731         db  0x00 ; '.'
000000000001c732         db  0x00 ; '.'
000000000001c733         db  0x00 ; '.'
000000000001c734         db  0x00 ; '.'
000000000001c735         db  0x00 ; '.'
000000000001c736         db  0x00 ; '.'
000000000001c737         db  0x00 ; '.'
000000000001c738         dd         0x00000014                                  ; Length of the record
000000000001c73c         dd         0x000010bc                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c740         db         0x90, 0xfd, 0xfe, 0xff                      ; begin 0xc4d0
000000000001c744         db         0x63, 3 dup (0x00)                          ; length 0x63 (end at 0xc533)
000000000001c748         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c749         align      16
000000000001c750         dd         0x0000004c                                  ; Length of the record
000000000001c754         dd         0x000010d4                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c758         db         0xe8, 0xfd, 0xfe, 0xff                      ; begin 0xc540
000000000001c75c         db         0x36, 0x06, 2 dup (0x00)                    ; length 0x636 (end at 0xcb76)
000000000001c760         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c761         db  0x42 ; 'B'
000000000001c762         db  0x0e ; '.'
000000000001c763         db  0x10 ; '.'
000000000001c764         db  0x8f ; '.'
000000000001c765         db  0x02 ; '.'
000000000001c766         db  0x42 ; 'B'
000000000001c767         db  0x0e ; '.'
000000000001c768         db  0x18 ; '.'
000000000001c769         db  0x8e ; '.'
000000000001c76a         db  0x03 ; '.'
000000000001c76b         db  0x42 ; 'B'
000000000001c76c         db  0x0e ; '.'
000000000001c76d         db  0x20 ; ' '
000000000001c76e         db  0x8d ; '.'
000000000001c76f         db  0x04 ; '.'
000000000001c770         db  0x42 ; 'B'
000000000001c771         db  0x0e ; '.'
000000000001c772         db  0x28 ; '('
000000000001c773         db  0x8c ; '.'
000000000001c774         db  0x05 ; '.'
000000000001c775         db  0x41 ; 'A'
000000000001c776         db  0x0e ; '.'
000000000001c777         db  0x30 ; '0'
000000000001c778         db  0x86 ; '.'
000000000001c779         db  0x06 ; '.'
000000000001c77a         db  0x41 ; 'A'
000000000001c77b         db  0x0e ; '.'
000000000001c77c         db  0x38 ; '8'
000000000001c77d         db  0x83 ; '.'
000000000001c77e         db  0x07 ; '.'
000000000001c77f         db  0x47 ; 'G'
000000000001c780         db  0x0e ; '.'
000000000001c781         db  0xa0 ; '.'
000000000001c782         db  0x02 ; '.'
000000000001c783         db  0x03 ; '.'
000000000001c784         db  0x30 ; '0'
000000000001c785         db  0x02 ; '.'
000000000001c786         db  0x0a ; '.'
000000000001c787         db  0x0e ; '.'
000000000001c788         db  0x38 ; '8'
000000000001c789         db  0x41 ; 'A'
000000000001c78a         db  0x0e ; '.'
000000000001c78b         db  0x30 ; '0'
000000000001c78c         db  0x41 ; 'A'
000000000001c78d         db  0x0e ; '.'
000000000001c78e         db  0x28 ; '('
000000000001c78f         db  0x42 ; 'B'
000000000001c790         db  0x0e ; '.'
000000000001c791         db  0x20 ; ' '
000000000001c792         db  0x42 ; 'B'
000000000001c793         db  0x0e ; '.'
000000000001c794         db  0x18 ; '.'
000000000001c795         db  0x42 ; 'B'
000000000001c796         db  0x0e ; '.'
000000000001c797         db  0x10 ; '.'
000000000001c798         db  0x42 ; 'B'
000000000001c799         db  0x0e ; '.'
000000000001c79a         db  0x08 ; '.'
000000000001c79b         db  0x45 ; 'E'
000000000001c79c         db  0x0b ; '.'
000000000001c79d         db  0x00 ; '.'
000000000001c79e         db  0x00 ; '.'
000000000001c79f         db  0x00 ; '.'
000000000001c7a0         dd         0x00000010                                  ; Length of the record
000000000001c7a4         dd         0x00001124                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c7a8         db         0xd8, 0x03, 2 dup (0xff)                    ; begin 0xcb80
000000000001c7ac         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0xcb88)
000000000001c7b0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c7b1         align      4
000000000001c7b4         dd         0x00000010                                  ; Length of the record
000000000001c7b8         dd         0x00001138                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c7bc         db         0xd4, 0x03, 2 dup (0xff)                    ; begin 0xcb90
000000000001c7c0         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0xcb98)
000000000001c7c4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c7c5         align      8
000000000001c7c8         dd         0x0000002c                                  ; Length of the record
000000000001c7cc         dd         0x0000114c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c7d0         db         0xd0, 0x03, 2 dup (0xff)                    ; begin 0xcba0
000000000001c7d4         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0xcc44)
000000000001c7d8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c7d9         db  0x41 ; 'A'
000000000001c7da         db  0x0e ; '.'
000000000001c7db         db  0x10 ; '.'
000000000001c7dc         db  0x86 ; '.'
000000000001c7dd         db  0x02 ; '.'
000000000001c7de         db  0x41 ; 'A'
000000000001c7df         db  0x0e ; '.'
000000000001c7e0         db  0x18 ; '.'
000000000001c7e1         db  0x83 ; '.'
000000000001c7e2         db  0x03 ; '.'
000000000001c7e3         db  0x44 ; 'D'
000000000001c7e4         db  0x0e ; '.'
000000000001c7e5         db  0x20 ; ' '
000000000001c7e6         db  0x7a ; 'z'
000000000001c7e7         db  0x0a ; '.'
000000000001c7e8         db  0x0e ; '.'
000000000001c7e9         db  0x18 ; '.'
000000000001c7ea         db  0x41 ; 'A'
000000000001c7eb         db  0x0e ; '.'
000000000001c7ec         db  0x10 ; '.'
000000000001c7ed         db  0x41 ; 'A'
000000000001c7ee         db  0x0e ; '.'
000000000001c7ef         db  0x08 ; '.'
000000000001c7f0         db  0x41 ; 'A'
000000000001c7f1         db  0x0b ; '.'
000000000001c7f2         db  0x00 ; '.'
000000000001c7f3         db  0x00 ; '.'
000000000001c7f4         db  0x00 ; '.'
000000000001c7f5         db  0x00 ; '.'
000000000001c7f6         db  0x00 ; '.'
000000000001c7f7         db  0x00 ; '.'
000000000001c7f8         dd         0x00000030                                  ; Length of the record
000000000001c7fc         dd         0x0000117c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c800         db         0x50, 0x04, 2 dup (0xff)                    ; begin 0xcc50
000000000001c804         db         0x5d, 3 dup (0x00)                          ; length 0x5d (end at 0xccad)
000000000001c808         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c809         db  0x41 ; 'A'
000000000001c80a         db  0x0e ; '.'
000000000001c80b         db  0x10 ; '.'
000000000001c80c         db  0x86 ; '.'
000000000001c80d         db  0x02 ; '.'
000000000001c80e         db  0x41 ; 'A'
000000000001c80f         db  0x0e ; '.'
000000000001c810         db  0x18 ; '.'
000000000001c811         db  0x83 ; '.'
000000000001c812         db  0x03 ; '.'
000000000001c813         db  0x49 ; 'I'
000000000001c814         db  0x0e ; '.'
000000000001c815         db  0x20 ; ' '
000000000001c816         db  0x7c ; '|'
000000000001c817         db  0x0a ; '.'
000000000001c818         db  0x0e ; '.'
000000000001c819         db  0x18 ; '.'
000000000001c81a         db  0x44 ; 'D'
000000000001c81b         db  0x0e ; '.'
000000000001c81c         db  0x10 ; '.'
000000000001c81d         db  0x41 ; 'A'
000000000001c81e         db  0x0e ; '.'
000000000001c81f         db  0x08 ; '.'
000000000001c820         db  0x44 ; 'D'
000000000001c821         db  0x0b ; '.'
000000000001c822         db  0x44 ; 'D'
000000000001c823         db  0x0e ; '.'
000000000001c824         db  0x18 ; '.'
000000000001c825         db  0x47 ; 'G'
000000000001c826         db  0x0e ; '.'
000000000001c827         db  0x10 ; '.'
000000000001c828         db  0x41 ; 'A'
000000000001c829         db  0x0e ; '.'
000000000001c82a         db  0x08 ; '.'
000000000001c82b         db  0x00 ; '.'
000000000001c82c         dd         0x00000028                                  ; Length of the record
000000000001c830         dd         0x000011b0                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c834         db         0x7c, 0x04, 2 dup (0xff)                    ; begin 0xccb0
000000000001c838         db         0x5a, 3 dup (0x00)                          ; length 0x5a (end at 0xcd0a)
000000000001c83c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c83d         db  0x41 ; 'A'
000000000001c83e         db  0x0e ; '.'
000000000001c83f         db  0x10 ; '.'
000000000001c840         db  0x86 ; '.'
000000000001c841         db  0x02 ; '.'
000000000001c842         db  0x41 ; 'A'
000000000001c843         db  0x0e ; '.'
000000000001c844         db  0x18 ; '.'
000000000001c845         db  0x83 ; '.'
000000000001c846         db  0x03 ; '.'
000000000001c847         db  0x47 ; 'G'
000000000001c848         db  0x0e ; '.'
000000000001c849         db  0x20 ; ' '
000000000001c84a         db  0x02 ; '.'
000000000001c84b         db  0x41 ; 'A'
000000000001c84c         db  0x0a ; '.'
000000000001c84d         db  0x0e ; '.'
000000000001c84e         db  0x18 ; '.'
000000000001c84f         db  0x44 ; 'D'
000000000001c850         db  0x0e ; '.'
000000000001c851         db  0x10 ; '.'
000000000001c852         db  0x41 ; 'A'
000000000001c853         db  0x0e ; '.'
000000000001c854         db  0x08 ; '.'
000000000001c855         db  0x41 ; 'A'
000000000001c856         db  0x0b ; '.'
000000000001c857         db  0x00 ; '.'
000000000001c858         dd         0x00000010                                  ; Length of the record
000000000001c85c         dd         0x000011dc                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c860         db         0xb0, 0x04, 2 dup (0xff)                    ; begin 0xcd10
000000000001c864         db         0x5c, 3 dup (0x00)                          ; length 0x5c (end at 0xcd6c)
000000000001c868         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c869         align      4
000000000001c86c         dd         0x00000028                                  ; Length of the record
000000000001c870         dd         0x000011f0                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c874         db         0xfc, 0x04, 2 dup (0xff)                    ; begin 0xcd70
000000000001c878         db         0x47, 3 dup (0x00)                          ; length 0x47 (end at 0xcdb7)
000000000001c87c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c87d         db  0x41 ; 'A'
000000000001c87e         db  0x0e ; '.'
000000000001c87f         db  0x10 ; '.'
000000000001c880         db  0x83 ; '.'
000000000001c881         db  0x02 ; '.'
000000000001c882         db  0x5a ; 'Z'
000000000001c883         db  0x0a ; '.'
000000000001c884         db  0x0e ; '.'
000000000001c885         db  0x08 ; '.'
000000000001c886         db  0x45 ; 'E'
000000000001c887         db  0x0b ; '.'
000000000001c888         db  0x5d ; ']'
000000000001c889         db  0x0a ; '.'
000000000001c88a         db  0x0e ; '.'
000000000001c88b         db  0x08 ; '.'
000000000001c88c         db  0x43 ; 'C'
000000000001c88d         db  0x0b ; '.'
000000000001c88e         db  0x46 ; 'F'
000000000001c88f         db  0x0e ; '.'
000000000001c890         db  0x08 ; '.'
000000000001c891         db  0x00 ; '.'
000000000001c892         db  0x00 ; '.'
000000000001c893         db  0x00 ; '.'
000000000001c894         db  0x00 ; '.'
000000000001c895         db  0x00 ; '.'
000000000001c896         db  0x00 ; '.'
000000000001c897         db  0x00 ; '.'
000000000001c898         dd         0x00000014                                  ; Length of the record
000000000001c89c         dd         0x0000121c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c8a0         db         0x20, 0x05, 2 dup (0xff)                    ; begin 0xcdc0
000000000001c8a4         db         0x03, 3 dup (0x00)                          ; length 0x3 (end at 0xcdc3)
000000000001c8a8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c8a9         align      16
000000000001c8b0         dd         0x0000005c                                  ; Length of the record
000000000001c8b4         dd         0x00001234                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c8b8         db         0x18, 0x05, 2 dup (0xff)                    ; begin 0xcdd0
000000000001c8bc         db         0x87, 3 dup (0x00)                          ; length 0x87 (end at 0xce57)
000000000001c8c0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c8c1         db  0x47 ; 'G'
000000000001c8c2         db  0x0e ; '.'
000000000001c8c3         db  0x10 ; '.'
000000000001c8c4         db  0x8d ; '.'
000000000001c8c5         db  0x02 ; '.'
000000000001c8c6         db  0x42 ; 'B'
000000000001c8c7         db  0x0e ; '.'
000000000001c8c8         db  0x18 ; '.'
000000000001c8c9         db  0x8c ; '.'
000000000001c8ca         db  0x03 ; '.'
000000000001c8cb         db  0x44 ; 'D'
000000000001c8cc         db  0x0e ; '.'
000000000001c8cd         db  0x20 ; ' '
000000000001c8ce         db  0x86 ; '.'
000000000001c8cf         db  0x04 ; '.'
000000000001c8d0         db  0x41 ; 'A'
000000000001c8d1         db  0x0e ; '.'
000000000001c8d2         db  0x28 ; '('
000000000001c8d3         db  0x83 ; '.'
000000000001c8d4         db  0x05 ; '.'
000000000001c8d5         db  0x4f ; 'O'
000000000001c8d6         db  0x0e ; '.'
000000000001c8d7         db  0x30 ; '0'
000000000001c8d8         db  0x7c ; '|'
000000000001c8d9         db  0x0a ; '.'
000000000001c8da         db  0x0e ; '.'
000000000001c8db         db  0x28 ; '('
000000000001c8dc         db  0x44 ; 'D'
000000000001c8dd         db  0xc3 ; '.'
000000000001c8de         db  0x0e ; '.'
000000000001c8df         db  0x20 ; ' '
000000000001c8e0         db  0x41 ; 'A'
000000000001c8e1         db  0xc6 ; '.'
000000000001c8e2         db  0x0e ; '.'
000000000001c8e3         db  0x18 ; '.'
000000000001c8e4         db  0x42 ; 'B'
000000000001c8e5         db  0xcc ; '.'
000000000001c8e6         db  0x0e ; '.'
000000000001c8e7         db  0x10 ; '.'
000000000001c8e8         db  0x42 ; 'B'
000000000001c8e9         db  0xcd ; '.'
000000000001c8ea         db  0x0e ; '.'
000000000001c8eb         db  0x08 ; '.'
000000000001c8ec         db  0x4e ; 'N'
000000000001c8ed         db  0x0b ; '.'
000000000001c8ee         db  0x44 ; 'D'
000000000001c8ef         db  0x0e ; '.'
000000000001c8f0         db  0x28 ; '('
000000000001c8f1         db  0x41 ; 'A'
000000000001c8f2         db  0x0e ; '.'
000000000001c8f3         db  0x20 ; ' '
000000000001c8f4         db  0x41 ; 'A'
000000000001c8f5         db  0x0e ; '.'
000000000001c8f6         db  0x18 ; '.'
000000000001c8f7         db  0x42 ; 'B'
000000000001c8f8         db  0x0e ; '.'
000000000001c8f9         db  0x10 ; '.'
000000000001c8fa         db  0x42 ; 'B'
000000000001c8fb         db  0x0e ; '.'
000000000001c8fc         db  0x08 ; '.'
000000000001c8fd         db  0x46 ; 'F'
000000000001c8fe         db  0xc3 ; '.'
000000000001c8ff         db  0xc6 ; '.'
000000000001c900         db  0xcc ; '.'
000000000001c901         db  0xcd ; '.'
000000000001c902         db  0x42 ; 'B'
000000000001c903         db  0x0e ; '.'
000000000001c904         db  0x30 ; '0'
000000000001c905         db  0x83 ; '.'
000000000001c906         db  0x05 ; '.'
000000000001c907         db  0x86 ; '.'
000000000001c908         db  0x04 ; '.'
000000000001c909         db  0x8c ; '.'
000000000001c90a         db  0x03 ; '.'
000000000001c90b         db  0x8d ; '.'
000000000001c90c         db  0x02 ; '.'
000000000001c90d         db  0x00 ; '.'
000000000001c90e         db  0x00 ; '.'
000000000001c90f         db  0x00 ; '.'
000000000001c910         dd         0x0000001c                                  ; Length of the record
000000000001c914         dd         0x00001294                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c918         db         0x48, 0x05, 2 dup (0xff)                    ; begin 0xce60
000000000001c91c         db         0x56, 3 dup (0x00)                          ; length 0x56 (end at 0xceb6)
000000000001c920         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c921         db  0x44 ; 'D'
000000000001c922         db  0x0e ; '.'
000000000001c923         db  0x30 ; '0'
000000000001c924         db  0x02 ; '.'
000000000001c925         db  0x4c ; 'L'
000000000001c926         db  0x0a ; '.'
000000000001c927         db  0x0e ; '.'
000000000001c928         db  0x08 ; '.'
000000000001c929         db  0x41 ; 'A'
000000000001c92a         db  0x0b ; '.'
000000000001c92b         db  0x00 ; '.'
000000000001c92c         db  0x00 ; '.'
000000000001c92d         db  0x00 ; '.'
000000000001c92e         db  0x00 ; '.'
000000000001c92f         db  0x00 ; '.'
000000000001c930         dd         0x00000010                                  ; Length of the record
000000000001c934         dd         0x000012b4                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c938         db         0x88, 0x05, 2 dup (0xff)                    ; begin 0xcec0
000000000001c93c         db         0x83, 0x01, 2 dup (0x00)                    ; length 0x183 (end at 0xd043)
000000000001c940         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c941         align      4
000000000001c944         dd         0x00000010                                  ; Length of the record
000000000001c948         dd         0x000012c8                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c94c         db         0x04, 0x07, 2 dup (0xff)                    ; begin 0xd050
000000000001c950         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0xd058)
000000000001c954         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c955         align      8
000000000001c958         dd         0x0000001c                                  ; Length of the record
000000000001c95c         dd         0x000012dc                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c960         db         0x00, 0x07, 2 dup (0xff)                    ; begin 0xd060
000000000001c964         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0xd078)
000000000001c968         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c969         db  0x44 ; 'D'
000000000001c96a         db  0x0e ; '.'
000000000001c96b         db  0x10 ; '.'
000000000001c96c         db  0x4e ; 'N'
000000000001c96d         db  0x0a ; '.'
000000000001c96e         db  0x0e ; '.'
000000000001c96f         db  0x08 ; '.'
000000000001c970         db  0x41 ; 'A'
000000000001c971         db  0x0b ; '.'
000000000001c972         db  0x00 ; '.'
000000000001c973         db  0x00 ; '.'
000000000001c974         db  0x00 ; '.'
000000000001c975         db  0x00 ; '.'
000000000001c976         db  0x00 ; '.'
000000000001c977         db  0x00 ; '.'
000000000001c978         dd         0x0000004c                                  ; Length of the record
000000000001c97c         dd         0x000012fc                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c980         db         0x00, 0x07, 2 dup (0xff)                    ; begin 0xd080
000000000001c984         db         0xff, 3 dup (0x00)                          ; length 0xff (end at 0xd17f)
000000000001c988         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c989         db  0x42 ; 'B'
000000000001c98a         db  0x0e ; '.'
000000000001c98b         db  0x10 ; '.'
000000000001c98c         db  0x8f ; '.'
000000000001c98d         db  0x02 ; '.'
000000000001c98e         db  0x42 ; 'B'
000000000001c98f         db  0x0e ; '.'
000000000001c990         db  0x18 ; '.'
000000000001c991         db  0x8e ; '.'
000000000001c992         db  0x03 ; '.'
000000000001c993         db  0x45 ; 'E'
000000000001c994         db  0x0e ; '.'
000000000001c995         db  0x20 ; ' '
000000000001c996         db  0x8d ; '.'
000000000001c997         db  0x04 ; '.'
000000000001c998         db  0x42 ; 'B'
000000000001c999         db  0x0e ; '.'
000000000001c99a         db  0x28 ; '('
000000000001c99b         db  0x8c ; '.'
000000000001c99c         db  0x05 ; '.'
000000000001c99d         db  0x44 ; 'D'
000000000001c99e         db  0x0e ; '.'
000000000001c99f         db  0x30 ; '0'
000000000001c9a0         db  0x86 ; '.'
000000000001c9a1         db  0x06 ; '.'
000000000001c9a2         db  0x41 ; 'A'
000000000001c9a3         db  0x0e ; '.'
000000000001c9a4         db  0x38 ; '8'
000000000001c9a5         db  0x83 ; '.'
000000000001c9a6         db  0x07 ; '.'
000000000001c9a7         db  0x47 ; 'G'
000000000001c9a8         db  0x0e ; '.'
000000000001c9a9         db  0x50 ; 'P'
000000000001c9aa         db  0x02 ; '.'
000000000001c9ab         db  0xc3 ; '.'
000000000001c9ac         db  0x0a ; '.'
000000000001c9ad         db  0x0e ; '.'
000000000001c9ae         db  0x38 ; '8'
000000000001c9af         db  0x44 ; 'D'
000000000001c9b0         db  0x0e ; '.'
000000000001c9b1         db  0x30 ; '0'
000000000001c9b2         db  0x41 ; 'A'
000000000001c9b3         db  0x0e ; '.'
000000000001c9b4         db  0x28 ; '('
000000000001c9b5         db  0x42 ; 'B'
000000000001c9b6         db  0x0e ; '.'
000000000001c9b7         db  0x20 ; ' '
000000000001c9b8         db  0x42 ; 'B'
000000000001c9b9         db  0x0e ; '.'
000000000001c9ba         db  0x18 ; '.'
000000000001c9bb         db  0x42 ; 'B'
000000000001c9bc         db  0x0e ; '.'
000000000001c9bd         db  0x10 ; '.'
000000000001c9be         db  0x42 ; 'B'
000000000001c9bf         db  0x0e ; '.'
000000000001c9c0         db  0x08 ; '.'
000000000001c9c1         db  0x49 ; 'I'
000000000001c9c2         db  0x0b ; '.'
000000000001c9c3         db  0x00 ; '.'
000000000001c9c4         db  0x00 ; '.'
000000000001c9c5         db  0x00 ; '.'
000000000001c9c6         db  0x00 ; '.'
000000000001c9c7         db  0x00 ; '.'
000000000001c9c8         dd         0x00000010                                  ; Length of the record
000000000001c9cc         dd         0x0000134c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c9d0         db         0xb0, 0x07, 2 dup (0xff)                    ; begin 0xd180
000000000001c9d4         db         0xc3, 3 dup (0x00)                          ; length 0xc3 (end at 0xd243)
000000000001c9d8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c9d9         align      4
000000000001c9dc         dd         0x00000048                                  ; Length of the record
000000000001c9e0         dd         0x00001360                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001c9e4         db         0x6c, 0x08, 2 dup (0xff)                    ; begin 0xd250
000000000001c9e8         db         0x30, 0x04, 2 dup (0x00)                    ; length 0x430 (end at 0xd680)
000000000001c9ec         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001c9ed         db  0x42 ; 'B'
000000000001c9ee         db  0x0e ; '.'
000000000001c9ef         db  0x10 ; '.'
000000000001c9f0         db  0x8f ; '.'
000000000001c9f1         db  0x02 ; '.'
000000000001c9f2         db  0x42 ; 'B'
000000000001c9f3         db  0x0e ; '.'
000000000001c9f4         db  0x18 ; '.'
000000000001c9f5         db  0x8e ; '.'
000000000001c9f6         db  0x03 ; '.'
000000000001c9f7         db  0x42 ; 'B'
000000000001c9f8         db  0x0e ; '.'
000000000001c9f9         db  0x20 ; ' '
000000000001c9fa         db  0x8d ; '.'
000000000001c9fb         db  0x04 ; '.'
000000000001c9fc         db  0x42 ; 'B'
000000000001c9fd         db  0x0e ; '.'
000000000001c9fe         db  0x28 ; '('
000000000001c9ff         db  0x8c ; '.'
000000000001ca00         db  0x05 ; '.'
000000000001ca01         db  0x41 ; 'A'
000000000001ca02         db  0x0e ; '.'
000000000001ca03         db  0x30 ; '0'
000000000001ca04         db  0x86 ; '.'
000000000001ca05         db  0x06 ; '.'
000000000001ca06         db  0x41 ; 'A'
000000000001ca07         db  0x0e ; '.'
000000000001ca08         db  0x38 ; '8'
000000000001ca09         db  0x83 ; '.'
000000000001ca0a         db  0x07 ; '.'
000000000001ca0b         db  0x4a ; 'J'
000000000001ca0c         db  0x0e ; '.'
000000000001ca0d         db  0x70 ; 'p'
000000000001ca0e         db  0x03 ; '.'
000000000001ca0f         db  0x7f ; '.'
000000000001ca10         db  0x02 ; '.'
000000000001ca11         db  0x0a ; '.'
000000000001ca12         db  0x0e ; '.'
000000000001ca13         db  0x38 ; '8'
000000000001ca14         db  0x41 ; 'A'
000000000001ca15         db  0x0e ; '.'
000000000001ca16         db  0x30 ; '0'
000000000001ca17         db  0x41 ; 'A'
000000000001ca18         db  0x0e ; '.'
000000000001ca19         db  0x28 ; '('
000000000001ca1a         db  0x42 ; 'B'
000000000001ca1b         db  0x0e ; '.'
000000000001ca1c         db  0x20 ; ' '
000000000001ca1d         db  0x42 ; 'B'
000000000001ca1e         db  0x0e ; '.'
000000000001ca1f         db  0x18 ; '.'
000000000001ca20         db  0x42 ; 'B'
000000000001ca21         db  0x0e ; '.'
000000000001ca22         db  0x10 ; '.'
000000000001ca23         db  0x42 ; 'B'
000000000001ca24         db  0x0e ; '.'
000000000001ca25         db  0x08 ; '.'
000000000001ca26         db  0x43 ; 'C'
000000000001ca27         db  0x0b ; '.'
000000000001ca28         dd         0x00000010                                  ; Length of the record
000000000001ca2c         dd         0x000013ac                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001ca30         db         0x50, 0x0c, 2 dup (0xff)                    ; begin 0xd680
000000000001ca34         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0xd68a)
000000000001ca38         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001ca39         align      4
000000000001ca3c         dd         0x00000018                                  ; Length of the record
000000000001ca40         dd         0x000013c0                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001ca44         db         0x4c, 0x0c, 2 dup (0xff)                    ; begin 0xd690
000000000001ca48         db         0x41, 3 dup (0x00)                          ; length 0x41 (end at 0xd6d1)
000000000001ca4c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001ca4d         db  0x44 ; 'D'
000000000001ca4e         db  0x0e ; '.'
000000000001ca4f         db  0x30 ; '0'
000000000001ca50         db  0x77 ; 'w'
000000000001ca51         db  0x0a ; '.'
000000000001ca52         db  0x0e ; '.'
000000000001ca53         db  0x08 ; '.'
000000000001ca54         db  0x41 ; 'A'
000000000001ca55         db  0x0b ; '.'
000000000001ca56         db  0x00 ; '.'
000000000001ca57         db  0x00 ; '.'
000000000001ca58         dd         0x0000001c                                  ; Length of the record
000000000001ca5c         dd         0x000013dc                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001ca60         db         0x80, 0x0c, 2 dup (0xff)                    ; begin 0xd6e0
000000000001ca64         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0xd740)
000000000001ca68         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001ca69         db  0x44 ; 'D'
000000000001ca6a         db  0x0e ; '.'
000000000001ca6b         db  0x10 ; '.'
000000000001ca6c         db  0x75 ; 'u'
000000000001ca6d         db  0x0a ; '.'
000000000001ca6e         db  0x0e ; '.'
000000000001ca6f         db  0x08 ; '.'
000000000001ca70         db  0x47 ; 'G'
000000000001ca71         db  0x0b ; '.'
000000000001ca72         db  0x5f ; '_'
000000000001ca73         db  0x0e ; '.'
000000000001ca74         db  0x08 ; '.'
000000000001ca75         db  0x00 ; '.'
000000000001ca76         db  0x00 ; '.'
000000000001ca77         db  0x00 ; '.'
000000000001ca78         dd         0x00000010                                  ; Length of the record
000000000001ca7c         dd         0x000013fc                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001ca80         db         0xc0, 0x0c, 2 dup (0xff)                    ; begin 0xd740
000000000001ca84         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0xd7d3)
000000000001ca88         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001ca89         align      4
000000000001ca8c         dd         0x00000010                                  ; Length of the record
000000000001ca90         dd         0x00001410                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001ca94         db         0x4c, 0x0d, 2 dup (0xff)                    ; begin 0xd7e0
000000000001ca98         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0xd7f0)
000000000001ca9c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001ca9d         align      32
000000000001caa0         dd         0x00000010                                  ; Length of the record
000000000001caa4         dd         0x00001424                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001caa8         db         0x48, 0x0d, 2 dup (0xff)                    ; begin 0xd7f0
000000000001caac         db         0x07, 3 dup (0x00)                          ; length 0x7 (end at 0xd7f7)
000000000001cab0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001cab1         align      4
000000000001cab4         dd         0x00000018                                  ; Length of the record
000000000001cab8         dd         0x00001438                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001cabc         db         0x44, 0x0d, 2 dup (0xff)                    ; begin 0xd800
000000000001cac0         db         0x22, 3 dup (0x00)                          ; length 0x22 (end at 0xd822)
000000000001cac4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001cac5         db  0x41 ; 'A'
000000000001cac6         db  0x0e ; '.'
000000000001cac7         db  0x10 ; '.'
000000000001cac8         db  0x83 ; '.'
000000000001cac9         db  0x02 ; '.'
000000000001caca         db  0x5b ; '['
000000000001cacb         db  0x0a ; '.'
000000000001cacc         db  0x0e ; '.'
000000000001cacd         db  0x08 ; '.'
000000000001cace         db  0x41 ; 'A'
000000000001cacf         db  0x0b ; '.'
000000000001cad0         dd         0x0000005c                                  ; Length of the record
000000000001cad4         dd         0x00001454                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001cad8         db         0x58, 0x0d, 2 dup (0xff)                    ; begin 0xd830
000000000001cadc         db         0x1e, 0x01, 2 dup (0x00)                    ; length 0x11e (end at 0xd94e)
000000000001cae0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001cae1         db  0x42 ; 'B'
000000000001cae2         db  0x0e ; '.'
000000000001cae3         db  0x10 ; '.'
000000000001cae4         db  0x8e ; '.'
000000000001cae5         db  0x02 ; '.'
000000000001cae6         db  0x42 ; 'B'
000000000001cae7         db  0x0e ; '.'
000000000001cae8         db  0x18 ; '.'
000000000001cae9         db  0x8d ; '.'
000000000001caea         db  0x03 ; '.'
000000000001caeb         db  0x45 ; 'E'
000000000001caec         db  0x0e ; '.'
000000000001caed         db  0x20 ; ' '
000000000001caee         db  0x8c ; '.'
000000000001caef         db  0x04 ; '.'
000000000001caf0         db  0x41 ; 'A'
000000000001caf1         db  0x0e ; '.'
000000000001caf2         db  0x28 ; '('
000000000001caf3         db  0x86 ; '.'
000000000001caf4         db  0x05 ; '.'
000000000001caf5         db  0x44 ; 'D'
000000000001caf6         db  0x0e ; '.'
000000000001caf7         db  0x30 ; '0'
000000000001caf8         db  0x83 ; '.'
000000000001caf9         db  0x06 ; '.'
000000000001cafa         db  0x02 ; '.'
000000000001cafb         db  0xa1 ; '.'
000000000001cafc         db  0x0a ; '.'
000000000001cafd         db  0x0e ; '.'
000000000001cafe         db  0x28 ; '('
000000000001caff         db  0x44 ; 'D'
000000000001cb00         db  0x0e ; '.'
000000000001cb01         db  0x20 ; ' '
000000000001cb02         db  0x42 ; 'B'
000000000001cb03         db  0x0e ; '.'
000000000001cb04         db  0x18 ; '.'
000000000001cb05         db  0x42 ; 'B'
000000000001cb06         db  0x0e ; '.'
000000000001cb07         db  0x10 ; '.'
000000000001cb08         db  0x42 ; 'B'
000000000001cb09         db  0x0e ; '.'
000000000001cb0a         db  0x08 ; '.'
000000000001cb0b         db  0x47 ; 'G'
000000000001cb0c         db  0x0b ; '.'
000000000001cb0d         db  0x71 ; 'q'
000000000001cb0e         db  0x0a ; '.'
000000000001cb0f         db  0x0e ; '.'
000000000001cb10         db  0x28 ; '('
000000000001cb11         db  0x41 ; 'A'
000000000001cb12         db  0x0e ; '.'
000000000001cb13         db  0x20 ; ' '
000000000001cb14         db  0x42 ; 'B'
000000000001cb15         db  0x0e ; '.'
000000000001cb16         db  0x18 ; '.'
000000000001cb17         db  0x42 ; 'B'
000000000001cb18         db  0x0e ; '.'
000000000001cb19         db  0x10 ; '.'
000000000001cb1a         db  0x42 ; 'B'
000000000001cb1b         db  0x0e ; '.'
000000000001cb1c         db  0x08 ; '.'
000000000001cb1d         db  0x48 ; 'H'
000000000001cb1e         db  0x0b ; '.'
000000000001cb1f         db  0x53 ; 'S'
000000000001cb20         db  0x0e ; '.'
000000000001cb21         db  0x28 ; '('
000000000001cb22         db  0x44 ; 'D'
000000000001cb23         db  0x0e ; '.'
000000000001cb24         db  0x20 ; ' '
000000000001cb25         db  0x42 ; 'B'
000000000001cb26         db  0x0e ; '.'
000000000001cb27         db  0x18 ; '.'
000000000001cb28         db  0x42 ; 'B'
000000000001cb29         db  0x0e ; '.'
000000000001cb2a         db  0x10 ; '.'
000000000001cb2b         db  0x42 ; 'B'
000000000001cb2c         db  0x0e ; '.'
000000000001cb2d         db  0x08 ; '.'
000000000001cb2e         db  0x00 ; '.'
000000000001cb2f         db  0x00 ; '.'
000000000001cb30         dd         0x00000010                                  ; Length of the record
000000000001cb34         dd         0x000014b4                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001cb38         db         0x18, 0x0e, 2 dup (0xff)                    ; begin 0xd950
000000000001cb3c         db         0x77, 3 dup (0x00)                          ; length 0x77 (end at 0xd9c7)
000000000001cb40         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001cb41         align      4
000000000001cb44         dd         0x0000005c                                  ; Length of the record
000000000001cb48         dd         0x000014c8                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001cb4c         db         0x84, 0x0e, 2 dup (0xff)                    ; begin 0xd9d0
000000000001cb50         db         0x40, 0x01, 2 dup (0x00)                    ; length 0x140 (end at 0xdb10)
000000000001cb54         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001cb55         db  0x42 ; 'B'
000000000001cb56         db  0x0e ; '.'
000000000001cb57         db  0x10 ; '.'
000000000001cb58         db  0x8f ; '.'
000000000001cb59         db  0x02 ; '.'
000000000001cb5a         db  0x42 ; 'B'
000000000001cb5b         db  0x0e ; '.'
000000000001cb5c         db  0x18 ; '.'
000000000001cb5d         db  0x8e ; '.'
000000000001cb5e         db  0x03 ; '.'
000000000001cb5f         db  0x42 ; 'B'
000000000001cb60         db  0x0e ; '.'
000000000001cb61         db  0x20 ; ' '
000000000001cb62         db  0x8d ; '.'
000000000001cb63         db  0x04 ; '.'
000000000001cb64         db  0x42 ; 'B'
000000000001cb65         db  0x0e ; '.'
000000000001cb66         db  0x28 ; '('
000000000001cb67         db  0x8c ; '.'
000000000001cb68         db  0x05 ; '.'
000000000001cb69         db  0x41 ; 'A'
000000000001cb6a         db  0x0e ; '.'
000000000001cb6b         db  0x30 ; '0'
000000000001cb6c         db  0x86 ; '.'
000000000001cb6d         db  0x06 ; '.'
000000000001cb6e         db  0x41 ; 'A'
000000000001cb6f         db  0x0e ; '.'
000000000001cb70         db  0x38 ; '8'
000000000001cb71         db  0x83 ; '.'
000000000001cb72         db  0x07 ; '.'
000000000001cb73         db  0x44 ; 'D'
000000000001cb74         db  0x0e ; '.'
000000000001cb75         db  0x40 ; '@'
000000000001cb76         db  0x02 ; '.'
000000000001cb77         db  0xee ; '.'
000000000001cb78         db  0x0a ; '.'
000000000001cb79         db  0x0e ; '.'
000000000001cb7a         db  0x38 ; '8'
000000000001cb7b         db  0x46 ; 'F'
000000000001cb7c         db  0x0e ; '.'
000000000001cb7d         db  0x30 ; '0'
000000000001cb7e         db  0x41 ; 'A'
000000000001cb7f         db  0x0e ; '.'
000000000001cb80         db  0x28 ; '('
000000000001cb81         db  0x42 ; 'B'
000000000001cb82         db  0x0e ; '.'
000000000001cb83         db  0x20 ; ' '
000000000001cb84         db  0x42 ; 'B'
000000000001cb85         db  0x0e ; '.'
000000000001cb86         db  0x18 ; '.'
000000000001cb87         db  0x42 ; 'B'
000000000001cb88         db  0x0e ; '.'
000000000001cb89         db  0x10 ; '.'
000000000001cb8a         db  0x42 ; 'B'
000000000001cb8b         db  0x0e ; '.'
000000000001cb8c         db  0x08 ; '.'
000000000001cb8d         db  0x45 ; 'E'
000000000001cb8e         db  0x0b ; '.'
000000000001cb8f         db  0x63 ; 'c'
000000000001cb90         db  0x0e ; '.'
000000000001cb91         db  0x38 ; '8'
000000000001cb92         db  0x43 ; 'C'
000000000001cb93         db  0x0e ; '.'
000000000001cb94         db  0x30 ; '0'
000000000001cb95         db  0x41 ; 'A'
000000000001cb96         db  0x0e ; '.'
000000000001cb97         db  0x28 ; '('
000000000001cb98         db  0x42 ; 'B'
000000000001cb99         db  0x0e ; '.'
000000000001cb9a         db  0x20 ; ' '
000000000001cb9b         db  0x42 ; 'B'
000000000001cb9c         db  0x0e ; '.'
000000000001cb9d         db  0x18 ; '.'
000000000001cb9e         db  0x42 ; 'B'
000000000001cb9f         db  0x0e ; '.'
000000000001cba0         db  0x10 ; '.'
000000000001cba1         db  0x42 ; 'B'
000000000001cba2         db  0x0e ; '.'
000000000001cba3         db  0x08 ; '.'
000000000001cba4         dd         0x00000010                                  ; Length of the record
000000000001cba8         dd         0x00001528                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001cbac         db         0x64, 0x0f, 2 dup (0xff)                    ; begin 0xdb10
000000000001cbb0         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0xdb15)
000000000001cbb4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001cbb5         align      8
000000000001cbb8         dd         0x00000010                                  ; Length of the record
000000000001cbbc         dd         0x0000153c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001cbc0         db         0x60, 0x0f, 2 dup (0xff)                    ; begin 0xdb20
000000000001cbc4         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0xdb25)
000000000001cbc8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001cbc9         align      4
000000000001cbcc         dd         0x00000010                                  ; Length of the record
000000000001cbd0         dd         0x00001550                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001cbd4         db         0x5c, 0x0f, 2 dup (0xff)                    ; begin 0xdb30
000000000001cbd8         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0xdb35)
000000000001cbdc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001cbdd         align      32
000000000001cbe0         dd         0x00000010                                  ; Length of the record
000000000001cbe4         dd         0x00001564                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001cbe8         db         0x58, 0x0f, 2 dup (0xff)                    ; begin 0xdb40
000000000001cbec         db         0x49, 3 dup (0x00)                          ; length 0x49 (end at 0xdb89)
000000000001cbf0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001cbf1         align      4
000000000001cbf4         dd         0x00000010                                  ; Length of the record
000000000001cbf8         dd         0x00001578                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001cbfc         db         0x94, 0x0f, 2 dup (0xff)                    ; begin 0xdb90
000000000001cc00         db         0x58, 3 dup (0x00)                          ; length 0x58 (end at 0xdbe8)
000000000001cc04         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001cc05         align      8
000000000001cc08         dd         0x00000038                                  ; Length of the record
000000000001cc0c         dd         0x0000158c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001cc10         db         0xe0, 0x0f, 2 dup (0xff)                    ; begin 0xdbf0
000000000001cc14         db         0x47, 0x01, 2 dup (0x00)                    ; length 0x147 (end at 0xdd37)
000000000001cc18         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001cc19         db  0x42 ; 'B'
000000000001cc1a         db  0x0e ; '.'
000000000001cc1b         db  0x10 ; '.'
000000000001cc1c         db  0x8d ; '.'
000000000001cc1d         db  0x02 ; '.'
000000000001cc1e         db  0x42 ; 'B'
000000000001cc1f         db  0x0e ; '.'
000000000001cc20         db  0x18 ; '.'
000000000001cc21         db  0x8c ; '.'
000000000001cc22         db  0x03 ; '.'
000000000001cc23         db  0x44 ; 'D'
000000000001cc24         db  0x0e ; '.'
000000000001cc25         db  0x20 ; ' '
000000000001cc26         db  0x86 ; '.'
000000000001cc27         db  0x04 ; '.'
000000000001cc28         db  0x41 ; 'A'
000000000001cc29         db  0x0e ; '.'
000000000001cc2a         db  0x28 ; '('
000000000001cc2b         db  0x83 ; '.'
000000000001cc2c         db  0x05 ; '.'
000000000001cc2d         db  0x46 ; 'F'
000000000001cc2e         db  0x0e ; '.'
000000000001cc2f         db  0x30 ; '0'
000000000001cc30         db  0x02 ; '.'
000000000001cc31         db  0xcd ; '.'
000000000001cc32         db  0x0a ; '.'
000000000001cc33         db  0x0e ; '.'
000000000001cc34         db  0x28 ; '('
000000000001cc35         db  0x47 ; 'G'
000000000001cc36         db  0x0e ; '.'
000000000001cc37         db  0x20 ; ' '
000000000001cc38         db  0x41 ; 'A'
000000000001cc39         db  0x0e ; '.'
000000000001cc3a         db  0x18 ; '.'
000000000001cc3b         db  0x42 ; 'B'
000000000001cc3c         db  0x0e ; '.'
000000000001cc3d         db  0x10 ; '.'
000000000001cc3e         db  0x42 ; 'B'
000000000001cc3f         db  0x0e ; '.'
000000000001cc40         db  0x08 ; '.'
000000000001cc41         db  0x58 ; 'X'
000000000001cc42         db  0x0b ; '.'
000000000001cc43         db  0x00 ; '.'
000000000001cc44         dd         0x00000034                                  ; Length of the record
000000000001cc48         dd         0x000015c8                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001cc4c         db         0xf4, 0x10, 2 dup (0xff)                    ; begin 0xdd40
000000000001cc50         db         0x5b, 3 dup (0x00)                          ; length 0x5b (end at 0xdd9b)
000000000001cc54         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001cc55         db  0x42 ; 'B'
000000000001cc56         db  0x0e ; '.'
000000000001cc57         db  0x10 ; '.'
000000000001cc58         db  0x8c ; '.'
000000000001cc59         db  0x02 ; '.'
000000000001cc5a         db  0x41 ; 'A'
000000000001cc5b         db  0x0e ; '.'
000000000001cc5c         db  0x18 ; '.'
000000000001cc5d         db  0x86 ; '.'
000000000001cc5e         db  0x03 ; '.'
000000000001cc5f         db  0x44 ; 'D'
000000000001cc60         db  0x0e ; '.'
000000000001cc61         db  0x20 ; ' '
000000000001cc62         db  0x83 ; '.'
000000000001cc63         db  0x04 ; '.'
000000000001cc64         db  0x79 ; 'y'
000000000001cc65         db  0x0a ; '.'
000000000001cc66         db  0x0e ; '.'
000000000001cc67         db  0x18 ; '.'
000000000001cc68         db  0x44 ; 'D'
000000000001cc69         db  0x0e ; '.'
000000000001cc6a         db  0x10 ; '.'
000000000001cc6b         db  0x42 ; 'B'
000000000001cc6c         db  0x0e ; '.'
000000000001cc6d         db  0x08 ; '.'
000000000001cc6e         db  0x4a ; 'J'
000000000001cc6f         db  0x0b ; '.'
000000000001cc70         db  0x44 ; 'D'
000000000001cc71         db  0x0e ; '.'
000000000001cc72         db  0x18 ; '.'
000000000001cc73         db  0x41 ; 'A'
000000000001cc74         db  0x0e ; '.'
000000000001cc75         db  0x10 ; '.'
000000000001cc76         db  0x45 ; 'E'
000000000001cc77         db  0x0e ; '.'
000000000001cc78         db  0x08 ; '.'
000000000001cc79         db  0x00 ; '.'
000000000001cc7a         db  0x00 ; '.'
000000000001cc7b         db  0x00 ; '.'
000000000001cc7c         dd         0x00000010                                  ; Length of the record
000000000001cc80         dd         0x00001600                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001cc84         db         0x1c, 0x11, 2 dup (0xff)                    ; begin 0xdda0
000000000001cc88         db         0x41, 3 dup (0x00)                          ; length 0x41 (end at 0xdde1)
000000000001cc8c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001cc8d         db  0x7c ; '|'
000000000001cc8e         db  0x0e ; '.'
000000000001cc8f         db  0x10 ; '.'
000000000001cc90         dd         0x00000030                                  ; Length of the record
000000000001cc94         dd         0x00001614                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001cc98         db         0x58, 0x11, 2 dup (0xff)                    ; begin 0xddf0
000000000001cc9c         db         0x72, 3 dup (0x00)                          ; length 0x72 (end at 0xde62)
000000000001cca0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001cca1         db  0x41 ; 'A'
000000000001cca2         db  0x0e ; '.'
000000000001cca3         db  0x10 ; '.'
000000000001cca4         db  0x86 ; '.'
000000000001cca5         db  0x02 ; '.'
000000000001cca6         db  0x41 ; 'A'
000000000001cca7         db  0x0e ; '.'
000000000001cca8         db  0x18 ; '.'
000000000001cca9         db  0x83 ; '.'
000000000001ccaa         db  0x03 ; '.'
000000000001ccab         db  0x4a ; 'J'
000000000001ccac         db  0x0e ; '.'
000000000001ccad         db  0x20 ; ' '
000000000001ccae         db  0x02 ; '.'
000000000001ccaf         db  0x53 ; 'S'
000000000001ccb0         db  0x0a ; '.'
000000000001ccb1         db  0x0e ; '.'
000000000001ccb2         db  0x18 ; '.'
000000000001ccb3         db  0x41 ; 'A'
000000000001ccb4         db  0x0e ; '.'
000000000001ccb5         db  0x10 ; '.'
000000000001ccb6         db  0x41 ; 'A'
000000000001ccb7         db  0x0e ; '.'
000000000001ccb8         db  0x08 ; '.'
000000000001ccb9         db  0x47 ; 'G'
000000000001ccba         db  0x0b ; '.'
000000000001ccbb         db  0x47 ; 'G'
000000000001ccbc         db  0x0e ; '.'
000000000001ccbd         db  0x18 ; '.'
000000000001ccbe         db  0x41 ; 'A'
000000000001ccbf         db  0x0e ; '.'
000000000001ccc0         db  0x10 ; '.'
000000000001ccc1         db  0x41 ; 'A'
000000000001ccc2         db  0x0e ; '.'
000000000001ccc3         db  0x08 ; '.'
000000000001ccc4         dd         0x00000010                                  ; Length of the record
000000000001ccc8         dd         0x00001648                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001cccc         db         0xa4, 0x11, 2 dup (0xff)                    ; begin 0xde70
000000000001ccd0         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0xded5)
000000000001ccd4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001ccd5         align      8
000000000001ccd8         dd         0x00000048                                  ; Length of the record
000000000001ccdc         dd         0x0000165c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001cce0         db         0x00, 0x12, 2 dup (0xff)                    ; begin 0xdee0
000000000001cce4         db         0x6a, 3 dup (0x00)                          ; length 0x6a (end at 0xdf4a)
000000000001cce8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001cce9         db  0x42 ; 'B'
000000000001ccea         db  0x0e ; '.'
000000000001cceb         db  0x10 ; '.'
000000000001ccec         db  0x8f ; '.'
000000000001cced         db  0x02 ; '.'
000000000001ccee         db  0x42 ; 'B'
000000000001ccef         db  0x0e ; '.'
000000000001ccf0         db  0x18 ; '.'
000000000001ccf1         db  0x8e ; '.'
000000000001ccf2         db  0x03 ; '.'
000000000001ccf3         db  0x42 ; 'B'
000000000001ccf4         db  0x0e ; '.'
000000000001ccf5         db  0x20 ; ' '
000000000001ccf6         db  0x8d ; '.'
000000000001ccf7         db  0x04 ; '.'
000000000001ccf8         db  0x42 ; 'B'
000000000001ccf9         db  0x0e ; '.'
000000000001ccfa         db  0x28 ; '('
000000000001ccfb         db  0x8c ; '.'
000000000001ccfc         db  0x05 ; '.'
000000000001ccfd         db  0x41 ; 'A'
000000000001ccfe         db  0x0e ; '.'
000000000001ccff         db  0x30 ; '0'
000000000001cd00         db  0x86 ; '.'
000000000001cd01         db  0x06 ; '.'
000000000001cd02         db  0x41 ; 'A'
000000000001cd03         db  0x0e ; '.'
000000000001cd04         db  0x38 ; '8'
000000000001cd05         db  0x83 ; '.'
000000000001cd06         db  0x07 ; '.'
000000000001cd07         db  0x44 ; 'D'
000000000001cd08         db  0x0e ; '.'
000000000001cd09         db  0x40 ; '@'
000000000001cd0a         db  0x02 ; '.'
000000000001cd0b         db  0x4a ; 'J'
000000000001cd0c         db  0x0a ; '.'
000000000001cd0d         db  0x0e ; '.'
000000000001cd0e         db  0x38 ; '8'
000000000001cd0f         db  0x44 ; 'D'
000000000001cd10         db  0x0e ; '.'
000000000001cd11         db  0x30 ; '0'
000000000001cd12         db  0x41 ; 'A'
000000000001cd13         db  0x0e ; '.'
000000000001cd14         db  0x28 ; '('
000000000001cd15         db  0x42 ; 'B'
000000000001cd16         db  0x0e ; '.'
000000000001cd17         db  0x20 ; ' '
000000000001cd18         db  0x42 ; 'B'
000000000001cd19         db  0x0e ; '.'
000000000001cd1a         db  0x18 ; '.'
000000000001cd1b         db  0x42 ; 'B'
000000000001cd1c         db  0x0e ; '.'
000000000001cd1d         db  0x10 ; '.'
000000000001cd1e         db  0x42 ; 'B'
000000000001cd1f         db  0x0e ; '.'
000000000001cd20         db  0x08 ; '.'
000000000001cd21         db  0x41 ; 'A'
000000000001cd22         db  0x0b ; '.'
000000000001cd23         db  0x00 ; '.'
000000000001cd24         dd         0x00000010                                  ; Length of the record
000000000001cd28         dd         0x000016a8                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001cd2c         db         0x24, 0x12, 2 dup (0xff)                    ; begin 0xdf50
000000000001cd30         db         0x31, 3 dup (0x00)                          ; length 0x31 (end at 0xdf81)
000000000001cd34         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001cd35         align      8
000000000001cd38         dd         0x00000010                                  ; Length of the record
000000000001cd3c         dd         0x000016bc                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001cd40         db         0x50, 0x12, 2 dup (0xff)                    ; begin 0xdf90
000000000001cd44         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0xdfb0)
000000000001cd48         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001cd49         align      4
000000000001cd4c         dd         0x00000048                                  ; Length of the record
000000000001cd50         dd         0x000016d0                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001cd54         db         0x5c, 0x12, 2 dup (0xff)                    ; begin 0xdfb0
000000000001cd58         db         0xb4, 0x01, 2 dup (0x00)                    ; length 0x1b4 (end at 0xe164)
000000000001cd5c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001cd5d         db  0x42 ; 'B'
000000000001cd5e         db  0x0e ; '.'
000000000001cd5f         db  0x10 ; '.'
000000000001cd60         db  0x8f ; '.'
000000000001cd61         db  0x02 ; '.'
000000000001cd62         db  0x42 ; 'B'
000000000001cd63         db  0x0e ; '.'
000000000001cd64         db  0x18 ; '.'
000000000001cd65         db  0x8e ; '.'
000000000001cd66         db  0x03 ; '.'
000000000001cd67         db  0x49 ; 'I'
000000000001cd68         db  0x0e ; '.'
000000000001cd69         db  0x20 ; ' '
000000000001cd6a         db  0x8d ; '.'
000000000001cd6b         db  0x04 ; '.'
000000000001cd6c         db  0x42 ; 'B'
000000000001cd6d         db  0x0e ; '.'
000000000001cd6e         db  0x28 ; '('
000000000001cd6f         db  0x8c ; '.'
000000000001cd70         db  0x05 ; '.'
000000000001cd71         db  0x44 ; 'D'
000000000001cd72         db  0x0e ; '.'
000000000001cd73         db  0x30 ; '0'
000000000001cd74         db  0x86 ; '.'
000000000001cd75         db  0x06 ; '.'
000000000001cd76         db  0x41 ; 'A'
000000000001cd77         db  0x0e ; '.'
000000000001cd78         db  0x38 ; '8'
000000000001cd79         db  0x83 ; '.'
000000000001cd7a         db  0x07 ; '.'
000000000001cd7b         db  0x52 ; 'R'
000000000001cd7c         db  0x0e ; '.'
000000000001cd7d         db  0x40 ; '@'
000000000001cd7e         db  0x02 ; '.'
000000000001cd7f         db  0xd8 ; '.'
000000000001cd80         db  0x0a ; '.'
000000000001cd81         db  0x0e ; '.'
000000000001cd82         db  0x38 ; '8'
000000000001cd83         db  0x44 ; 'D'
000000000001cd84         db  0x0e ; '.'
000000000001cd85         db  0x30 ; '0'
000000000001cd86         db  0x41 ; 'A'
000000000001cd87         db  0x0e ; '.'
000000000001cd88         db  0x28 ; '('
000000000001cd89         db  0x42 ; 'B'
000000000001cd8a         db  0x0e ; '.'
000000000001cd8b         db  0x20 ; ' '
000000000001cd8c         db  0x42 ; 'B'
000000000001cd8d         db  0x0e ; '.'
000000000001cd8e         db  0x18 ; '.'
000000000001cd8f         db  0x42 ; 'B'
000000000001cd90         db  0x0e ; '.'
000000000001cd91         db  0x10 ; '.'
000000000001cd92         db  0x42 ; 'B'
000000000001cd93         db  0x0e ; '.'
000000000001cd94         db  0x08 ; '.'
000000000001cd95         db  0x45 ; 'E'
000000000001cd96         db  0x0b ; '.'
000000000001cd97         db  0x00 ; '.'
000000000001cd98         dd         0x00000028                                  ; Length of the record
000000000001cd9c         dd         0x0000171c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001cda0         db         0xd0, 0x13, 2 dup (0xff)                    ; begin 0xe170
000000000001cda4         db         0x90, 3 dup (0x00)                          ; length 0x90 (end at 0xe200)
000000000001cda8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001cda9         db  0x42 ; 'B'
000000000001cdaa         db  0x0e ; '.'
000000000001cdab         db  0x10 ; '.'
000000000001cdac         db  0x8c ; '.'
000000000001cdad         db  0x02 ; '.'
000000000001cdae         db  0x41 ; 'A'
000000000001cdaf         db  0x0e ; '.'
000000000001cdb0         db  0x18 ; '.'
000000000001cdb1         db  0x86 ; '.'
000000000001cdb2         db  0x03 ; '.'
000000000001cdb3         db  0x44 ; 'D'
000000000001cdb4         db  0x0e ; '.'
000000000001cdb5         db  0x20 ; ' '
000000000001cdb6         db  0x83 ; '.'
000000000001cdb7         db  0x04 ; '.'
000000000001cdb8         db  0x02 ; '.'
000000000001cdb9         db  0x85 ; '.'
000000000001cdba         db  0x0e ; '.'
000000000001cdbb         db  0x18 ; '.'
000000000001cdbc         db  0x41 ; 'A'
000000000001cdbd         db  0x0e ; '.'
000000000001cdbe         db  0x10 ; '.'
000000000001cdbf         db  0x42 ; 'B'
000000000001cdc0         db  0x0e ; '.'
000000000001cdc1         db  0x08 ; '.'
000000000001cdc2         db  0x00 ; '.'
000000000001cdc3         db  0x00 ; '.'
000000000001cdc4         dd         0x00000028                                  ; Length of the record
000000000001cdc8         dd         0x00001748                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001cdcc         db         0x34, 0x14, 2 dup (0xff)                    ; begin 0xe200
000000000001cdd0         db         0xd6, 3 dup (0x00)                          ; length 0xd6 (end at 0xe2d6)
000000000001cdd4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001cdd5         db  0x42 ; 'B'
000000000001cdd6         db  0x0e ; '.'
000000000001cdd7         db  0x10 ; '.'
000000000001cdd8         db  0x8c ; '.'
000000000001cdd9         db  0x02 ; '.'
000000000001cdda         db  0x41 ; 'A'
000000000001cddb         db  0x0e ; '.'
000000000001cddc         db  0x18 ; '.'
000000000001cddd         db  0x86 ; '.'
000000000001cdde         db  0x03 ; '.'
000000000001cddf         db  0x44 ; 'D'
000000000001cde0         db  0x0e ; '.'
000000000001cde1         db  0x20 ; ' '
000000000001cde2         db  0x83 ; '.'
000000000001cde3         db  0x04 ; '.'
000000000001cde4         db  0x02 ; '.'
000000000001cde5         db  0xc4 ; '.'
000000000001cde6         db  0x0e ; '.'
000000000001cde7         db  0x18 ; '.'
000000000001cde8         db  0x44 ; 'D'
000000000001cde9         db  0x0e ; '.'
000000000001cdea         db  0x10 ; '.'
000000000001cdeb         db  0x42 ; 'B'
000000000001cdec         db  0x0e ; '.'
000000000001cded         db  0x08 ; '.'
000000000001cdee         db  0x00 ; '.'
000000000001cdef         db  0x00 ; '.'
000000000001cdf0         dd         0x00000034                                  ; Length of the record
000000000001cdf4         dd         0x00001774                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001cdf8         db         0xe8, 0x14, 2 dup (0xff)                    ; begin 0xe2e0
000000000001cdfc         db         0x3e, 0x02, 2 dup (0x00)                    ; length 0x23e (end at 0xe51e)
000000000001ce00         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001ce01         db  0x42 ; 'B'
000000000001ce02         db  0x0e ; '.'
000000000001ce03         db  0x10 ; '.'
000000000001ce04         db  0x8c ; '.'
000000000001ce05         db  0x02 ; '.'
000000000001ce06         db  0x41 ; 'A'
000000000001ce07         db  0x0e ; '.'
000000000001ce08         db  0x18 ; '.'
000000000001ce09         db  0x86 ; '.'
000000000001ce0a         db  0x03 ; '.'
000000000001ce0b         db  0x44 ; 'D'
000000000001ce0c         db  0x0e ; '.'
000000000001ce0d         db  0x20 ; ' '
000000000001ce0e         db  0x83 ; '.'
000000000001ce0f         db  0x04 ; '.'
000000000001ce10         db  0x44 ; 'D'
000000000001ce11         db  0x0e ; '.'
000000000001ce12         db  0x80 ; '.'
000000000001ce13         db  0x01 ; '.'
000000000001ce14         db  0x03 ; '.'
000000000001ce15         db  0x91 ; '.'
000000000001ce16         db  0x01 ; '.'
000000000001ce17         db  0x0a ; '.'
000000000001ce18         db  0x0e ; '.'
000000000001ce19         db  0x20 ; ' '
000000000001ce1a         db  0x41 ; 'A'
000000000001ce1b         db  0x0e ; '.'
000000000001ce1c         db  0x18 ; '.'
000000000001ce1d         db  0x41 ; 'A'
000000000001ce1e         db  0x0e ; '.'
000000000001ce1f         db  0x10 ; '.'
000000000001ce20         db  0x42 ; 'B'
000000000001ce21         db  0x0e ; '.'
000000000001ce22         db  0x08 ; '.'
000000000001ce23         db  0x48 ; 'H'
000000000001ce24         db  0x0b ; '.'
000000000001ce25         db  0x00 ; '.'
000000000001ce26         db  0x00 ; '.'
000000000001ce27         db  0x00 ; '.'
000000000001ce28         dd         0x00000038                                  ; Length of the record
000000000001ce2c         dd         0x000017ac                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001ce30         db         0xf0, 0x16, 2 dup (0xff)                    ; begin 0xe520
000000000001ce34         db         0x84, 0x02, 2 dup (0x00)                    ; length 0x284 (end at 0xe7a4)
000000000001ce38         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001ce39         db  0x42 ; 'B'
000000000001ce3a         db  0x0e ; '.'
000000000001ce3b         db  0x10 ; '.'
000000000001ce3c         db  0x8d ; '.'
000000000001ce3d         db  0x02 ; '.'
000000000001ce3e         db  0x42 ; 'B'
000000000001ce3f         db  0x0e ; '.'
000000000001ce40         db  0x18 ; '.'
000000000001ce41         db  0x8c ; '.'
000000000001ce42         db  0x03 ; '.'
000000000001ce43         db  0x41 ; 'A'
000000000001ce44         db  0x0e ; '.'
000000000001ce45         db  0x20 ; ' '
000000000001ce46         db  0x86 ; '.'
000000000001ce47         db  0x04 ; '.'
000000000001ce48         db  0x41 ; 'A'
000000000001ce49         db  0x0e ; '.'
000000000001ce4a         db  0x28 ; '('
000000000001ce4b         db  0x83 ; '.'
000000000001ce4c         db  0x05 ; '.'
000000000001ce4d         db  0x44 ; 'D'
000000000001ce4e         db  0x0e ; '.'
000000000001ce4f         db  0x40 ; '@'
000000000001ce50         db  0x02 ; '.'
000000000001ce51         db  0x5a ; 'Z'
000000000001ce52         db  0x0a ; '.'
000000000001ce53         db  0x0e ; '.'
000000000001ce54         db  0x28 ; '('
000000000001ce55         db  0x41 ; 'A'
000000000001ce56         db  0x0e ; '.'
000000000001ce57         db  0x20 ; ' '
000000000001ce58         db  0x41 ; 'A'
000000000001ce59         db  0x0e ; '.'
000000000001ce5a         db  0x18 ; '.'
000000000001ce5b         db  0x42 ; 'B'
000000000001ce5c         db  0x0e ; '.'
000000000001ce5d         db  0x10 ; '.'
000000000001ce5e         db  0x42 ; 'B'
000000000001ce5f         db  0x0e ; '.'
000000000001ce60         db  0x08 ; '.'
000000000001ce61         db  0x46 ; 'F'
000000000001ce62         db  0x0b ; '.'
000000000001ce63         db  0x00 ; '.'
000000000001ce64         dd         0x00000020                                  ; Length of the record
000000000001ce68         dd         0x000017e8                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001ce6c         db         0x44, 0x19, 2 dup (0xff)                    ; begin 0xe7b0
000000000001ce70         db         0x59, 3 dup (0x00)                          ; length 0x59 (end at 0xe809)
000000000001ce74         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001ce75         db  0x41 ; 'A'
000000000001ce76         db  0x0e ; '.'
000000000001ce77         db  0x10 ; '.'
000000000001ce78         db  0x83 ; '.'
000000000001ce79         db  0x02 ; '.'
000000000001ce7a         db  0x47 ; 'G'
000000000001ce7b         db  0x0e ; '.'
000000000001ce7c         db  0x20 ; ' '
000000000001ce7d         db  0x7c ; '|'
000000000001ce7e         db  0x0a ; '.'
000000000001ce7f         db  0x0e ; '.'
000000000001ce80         db  0x10 ; '.'
000000000001ce81         db  0x41 ; 'A'
000000000001ce82         db  0x0e ; '.'
000000000001ce83         db  0x08 ; '.'
000000000001ce84         db  0x4b ; 'K'
000000000001ce85         db  0x0b ; '.'
000000000001ce86         db  0x00 ; '.'
000000000001ce87         db  0x00 ; '.'
000000000001ce88         dd         0x00000034                                  ; Length of the record
000000000001ce8c         dd         0x0000180c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001ce90         db         0x80, 0x19, 2 dup (0xff)                    ; begin 0xe810
000000000001ce94         db         0x03, 0x02, 2 dup (0x00)                    ; length 0x203 (end at 0xea13)
000000000001ce98         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001ce99         db  0x42 ; 'B'
000000000001ce9a         db  0x0e ; '.'
000000000001ce9b         db  0x10 ; '.'
000000000001ce9c         db  0x8c ; '.'
000000000001ce9d         db  0x02 ; '.'
000000000001ce9e         db  0x41 ; 'A'
000000000001ce9f         db  0x0e ; '.'
000000000001cea0         db  0x18 ; '.'
000000000001cea1         db  0x86 ; '.'
000000000001cea2         db  0x03 ; '.'
000000000001cea3         db  0x46 ; 'F'
000000000001cea4         db  0x0e ; '.'
000000000001cea5         db  0x20 ; ' '
000000000001cea6         db  0x83 ; '.'
000000000001cea7         db  0x04 ; '.'
000000000001cea8         db  0x47 ; 'G'
000000000001cea9         db  0x0e ; '.'
000000000001ceaa         db  0x30 ; '0'
000000000001ceab         db  0x02 ; '.'
000000000001ceac         db  0x4a ; 'J'
000000000001cead         db  0x0a ; '.'
000000000001ceae         db  0x0e ; '.'
000000000001ceaf         db  0x20 ; ' '
000000000001ceb0         db  0x41 ; 'A'
000000000001ceb1         db  0x0e ; '.'
000000000001ceb2         db  0x18 ; '.'
000000000001ceb3         db  0x41 ; 'A'
000000000001ceb4         db  0x0e ; '.'
000000000001ceb5         db  0x10 ; '.'
000000000001ceb6         db  0x42 ; 'B'
000000000001ceb7         db  0x0e ; '.'
000000000001ceb8         db  0x08 ; '.'
000000000001ceb9         db  0x42 ; 'B'
000000000001ceba         db  0x0b ; '.'
000000000001cebb         db  0x00 ; '.'
000000000001cebc         db  0x00 ; '.'
000000000001cebd         db  0x00 ; '.'
000000000001cebe         db  0x00 ; '.'
000000000001cebf         db  0x00 ; '.'
000000000001cec0         dd         0x00000024                                  ; Length of the record
000000000001cec4         dd         0x00001844                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001cec8         db         0x58, 0x1b, 2 dup (0xff)                    ; begin 0xea20
000000000001cecc         db         0x27, 3 dup (0x00)                          ; length 0x27 (end at 0xea47)
000000000001ced0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001ced1         db  0x41 ; 'A'
000000000001ced2         db  0x0e ; '.'
000000000001ced3         db  0x10 ; '.'
000000000001ced4         db  0x86 ; '.'
000000000001ced5         db  0x02 ; '.'
000000000001ced6         db  0x41 ; 'A'
000000000001ced7         db  0x0e ; '.'
000000000001ced8         db  0x18 ; '.'
000000000001ced9         db  0x83 ; '.'
000000000001ceda         db  0x03 ; '.'
000000000001cedb         db  0x4a ; 'J'
000000000001cedc         db  0x0e ; '.'
000000000001cedd         db  0x20 ; ' '
000000000001cede         db  0x52 ; 'R'
000000000001cedf         db  0x0e ; '.'
000000000001cee0         db  0x18 ; '.'
000000000001cee1         db  0x44 ; 'D'
000000000001cee2         db  0x0e ; '.'
000000000001cee3         db  0x10 ; '.'
000000000001cee4         db  0x41 ; 'A'
000000000001cee5         db  0x0e ; '.'
000000000001cee6         db  0x08 ; '.'
000000000001cee7         db  0x00 ; '.'
000000000001cee8         dd         0x00000010                                  ; Length of the record
000000000001ceec         dd         0x0000186c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001cef0         db         0x60, 0x1b, 2 dup (0xff)                    ; begin 0xea50
000000000001cef4         db         0x0d, 3 dup (0x00)                          ; length 0xd (end at 0xea5d)
000000000001cef8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001cef9         align      4
000000000001cefc         dd         0x00000014                                  ; Length of the record
000000000001cf00         dd         0x00001880                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001cf04         db         0x5c, 0x1b, 2 dup (0xff)                    ; begin 0xea60
000000000001cf08         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0xea8e)
000000000001cf0c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001cf0d         db  0x5e ; '^'
000000000001cf0e         db  0x0e ; '.'
000000000001cf0f         db  0x10 ; '.'
000000000001cf10         db  0x4f ; 'O'
000000000001cf11         db  0x0e ; '.'
000000000001cf12         db  0x08 ; '.'
000000000001cf13         db  0x00 ; '.'
000000000001cf14         dd         0x00000014                                  ; Length of the record
000000000001cf18         dd         0x00001898                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001cf1c         db         0x74, 0x1b, 2 dup (0xff)                    ; begin 0xea90
000000000001cf20         db         0x33, 3 dup (0x00)                          ; length 0x33 (end at 0xeac3)
000000000001cf24         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001cf25         db  0x5e ; '^'
000000000001cf26         db  0x0e ; '.'
000000000001cf27         db  0x10 ; '.'
000000000001cf28         db  0x54 ; 'T'
000000000001cf29         db  0x0e ; '.'
000000000001cf2a         db  0x08 ; '.'
000000000001cf2b         db  0x00 ; '.'
000000000001cf2c         dd         0x00000018                                  ; Length of the record
000000000001cf30         dd         0x000018b0                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001cf34         db         0x9c, 0x1b, 2 dup (0xff)                    ; begin 0xead0
000000000001cf38         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0xeae5)
000000000001cf3c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001cf3d         db  0x41 ; 'A'
000000000001cf3e         db  0x0e ; '.'
000000000001cf3f         db  0x10 ; '.'
000000000001cf40         db  0x83 ; '.'
000000000001cf41         db  0x02 ; '.'
000000000001cf42         db  0x4f ; 'O'
000000000001cf43         db  0x0e ; '.'
000000000001cf44         db  0x08 ; '.'
000000000001cf45         db  0x00 ; '.'
000000000001cf46         db  0x00 ; '.'
000000000001cf47         db  0x00 ; '.'
000000000001cf48         dd         0x00000010                                  ; Length of the record
000000000001cf4c         dd         0x000018cc                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001cf50         db         0xa0, 0x1b, 2 dup (0xff)                    ; begin 0xeaf0
000000000001cf54         db         0xc7, 3 dup (0x00)                          ; length 0xc7 (end at 0xebb7)
000000000001cf58         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001cf59         align      4
000000000001cf5c         dd         0x000000a4                                  ; Length of the record
000000000001cf60         dd         0x000018e0                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001cf64         db         0x5c, 0x1c, 2 dup (0xff)                    ; begin 0xebc0
000000000001cf68         db         0x07, 0x0a, 2 dup (0x00)                    ; length 0xa07 (end at 0xf5c7)
000000000001cf6c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001cf6d         db  0x42 ; 'B'
000000000001cf6e         db  0x0e ; '.'
000000000001cf6f         db  0x10 ; '.'
000000000001cf70         db  0x8f ; '.'
000000000001cf71         db  0x02 ; '.'
000000000001cf72         db  0x42 ; 'B'
000000000001cf73         db  0x0e ; '.'
000000000001cf74         db  0x18 ; '.'
000000000001cf75         db  0x8e ; '.'
000000000001cf76         db  0x03 ; '.'
000000000001cf77         db  0x44 ; 'D'
000000000001cf78         db  0x0e ; '.'
000000000001cf79         db  0x20 ; ' '
000000000001cf7a         db  0x8d ; '.'
000000000001cf7b         db  0x04 ; '.'
000000000001cf7c         db  0x42 ; 'B'
000000000001cf7d         db  0x0e ; '.'
000000000001cf7e         db  0x28 ; '('
000000000001cf7f         db  0x8c ; '.'
000000000001cf80         db  0x05 ; '.'
000000000001cf81         db  0x44 ; 'D'
000000000001cf82         db  0x0e ; '.'
000000000001cf83         db  0x30 ; '0'
000000000001cf84         db  0x86 ; '.'
000000000001cf85         db  0x06 ; '.'
000000000001cf86         db  0x41 ; 'A'
000000000001cf87         db  0x0e ; '.'
000000000001cf88         db  0x38 ; '8'
000000000001cf89         db  0x83 ; '.'
000000000001cf8a         db  0x07 ; '.'
000000000001cf8b         db  0x54 ; 'T'
000000000001cf8c         db  0x0e ; '.'
000000000001cf8d         db  0xd0 ; '.'
000000000001cf8e         db  0x01 ; '.'
000000000001cf8f         db  0x03 ; '.'
000000000001cf90         db  0x7e ; '~'
000000000001cf91         db  0x01 ; '.'
000000000001cf92         db  0x0e ; '.'
000000000001cf93         db  0xe0 ; '.'
000000000001cf94         db  0x01 ; '.'
000000000001cf95         db  0x6e ; 'n'
000000000001cf96         db  0x0e ; '.'
000000000001cf97         db  0xd8 ; '.'
000000000001cf98         db  0x01 ; '.'
000000000001cf99         db  0x41 ; 'A'
000000000001cf9a         db  0x0e ; '.'
000000000001cf9b         db  0xd0 ; '.'
000000000001cf9c         db  0x01 ; '.'
000000000001cf9d         db  0x03 ; '.'
000000000001cf9e         db  0x40 ; '@'
000000000001cf9f         db  0x01 ; '.'
000000000001cfa0         db  0x0e ; '.'
000000000001cfa1         db  0xe0 ; '.'
000000000001cfa2         db  0x01 ; '.'
000000000001cfa3         db  0x75 ; 'u'
000000000001cfa4         db  0x0e ; '.'
000000000001cfa5         db  0xd8 ; '.'
000000000001cfa6         db  0x01 ; '.'
000000000001cfa7         db  0x41 ; 'A'
000000000001cfa8         db  0x0e ; '.'
000000000001cfa9         db  0xd0 ; '.'
000000000001cfaa         db  0x01 ; '.'
000000000001cfab         db  0x02 ; '.'
000000000001cfac         db  0xea ; '.'
000000000001cfad         db  0x0a ; '.'
000000000001cfae         db  0x0e ; '.'
000000000001cfaf         db  0x38 ; '8'
000000000001cfb0         db  0x41 ; 'A'
000000000001cfb1         db  0x0e ; '.'
000000000001cfb2         db  0x30 ; '0'
000000000001cfb3         db  0x41 ; 'A'
000000000001cfb4         db  0x0e ; '.'
000000000001cfb5         db  0x28 ; '('
000000000001cfb6         db  0x42 ; 'B'
000000000001cfb7         db  0x0e ; '.'
000000000001cfb8         db  0x20 ; ' '
000000000001cfb9         db  0x42 ; 'B'
000000000001cfba         db  0x0e ; '.'
000000000001cfbb         db  0x18 ; '.'
000000000001cfbc         db  0x42 ; 'B'
000000000001cfbd         db  0x0e ; '.'
000000000001cfbe         db  0x10 ; '.'
000000000001cfbf         db  0x42 ; 'B'
000000000001cfc0         db  0x0e ; '.'
000000000001cfc1         db  0x08 ; '.'
000000000001cfc2         db  0x46 ; 'F'
000000000001cfc3         db  0x0b ; '.'
000000000001cfc4         db  0x03 ; '.'
000000000001cfc5         db  0x2c ; ','
000000000001cfc6         db  0x01 ; '.'
000000000001cfc7         db  0x0e ; '.'
000000000001cfc8         db  0xe0 ; '.'
000000000001cfc9         db  0x01 ; '.'
000000000001cfca         db  0x52 ; 'R'
000000000001cfcb         db  0x0e ; '.'
000000000001cfcc         db  0xd8 ; '.'
000000000001cfcd         db  0x01 ; '.'
000000000001cfce         db  0x41 ; 'A'
000000000001cfcf         db  0x0e ; '.'
000000000001cfd0         db  0xd0 ; '.'
000000000001cfd1         db  0x01 ; '.'
000000000001cfd2         db  0x55 ; 'U'
000000000001cfd3         db  0x0e ; '.'
000000000001cfd4         db  0xe0 ; '.'
000000000001cfd5         db  0x01 ; '.'
000000000001cfd6         db  0x4d ; 'M'
000000000001cfd7         db  0x0e ; '.'
000000000001cfd8         db  0xd8 ; '.'
000000000001cfd9         db  0x01 ; '.'
000000000001cfda         db  0x42 ; 'B'
000000000001cfdb         db  0x0e ; '.'
000000000001cfdc         db  0xd0 ; '.'
000000000001cfdd         db  0x01 ; '.'
000000000001cfde         db  0x03 ; '.'
000000000001cfdf         db  0x51 ; 'Q'
000000000001cfe0         db  0x01 ; '.'
000000000001cfe1         db  0x0e ; '.'
000000000001cfe2         db  0xe0 ; '.'
000000000001cfe3         db  0x01 ; '.'
000000000001cfe4         db  0x77 ; 'w'
000000000001cfe5         db  0x0e ; '.'
000000000001cfe6         db  0xd8 ; '.'
000000000001cfe7         db  0x01 ; '.'
000000000001cfe8         db  0x41 ; 'A'
000000000001cfe9         db  0x0e ; '.'
000000000001cfea         db  0xd0 ; '.'
000000000001cfeb         db  0x01 ; '.'
000000000001cfec         db  0x5d ; ']'
000000000001cfed         db  0x0e ; '.'
000000000001cfee         db  0xe0 ; '.'
000000000001cfef         db  0x01 ; '.'
000000000001cff0         db  0x71 ; 'q'
000000000001cff1         db  0x0e ; '.'
000000000001cff2         db  0xd8 ; '.'
000000000001cff3         db  0x01 ; '.'
000000000001cff4         db  0x45 ; 'E'
000000000001cff5         db  0x0e ; '.'
000000000001cff6         db  0xd0 ; '.'
000000000001cff7         db  0x01 ; '.'
000000000001cff8         db  0x63 ; 'c'
000000000001cff9         db  0x0e ; '.'
000000000001cffa         db  0xe0 ; '.'
000000000001cffb         db  0x01 ; '.'
000000000001cffc         db  0x4c ; 'L'
000000000001cffd         db  0x0e ; '.'
000000000001cffe         db  0xd8 ; '.'
000000000001cfff         db  0x01 ; '.'
000000000001d000         db  0x42 ; 'B'
000000000001d001         db  0x0e ; '.'
000000000001d002         db  0xd0 ; '.'
000000000001d003         db  0x01 ; '.'
000000000001d004         dd         0x00000038                                  ; Length of the record
000000000001d008         dd         0x00001988                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d00c         db         0xc4, 0x25, 2 dup (0xff)                    ; begin 0xf5d0
000000000001d010         db         0xe6, 0x01, 2 dup (0x00)                    ; length 0x1e6 (end at 0xf7b6)
000000000001d014         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d015         db  0x42 ; 'B'
000000000001d016         db  0x0e ; '.'
000000000001d017         db  0x10 ; '.'
000000000001d018         db  0x8d ; '.'
000000000001d019         db  0x02 ; '.'
000000000001d01a         db  0x42 ; 'B'
000000000001d01b         db  0x0e ; '.'
000000000001d01c         db  0x18 ; '.'
000000000001d01d         db  0x8c ; '.'
000000000001d01e         db  0x03 ; '.'
000000000001d01f         db  0x44 ; 'D'
000000000001d020         db  0x0e ; '.'
000000000001d021         db  0x20 ; ' '
000000000001d022         db  0x86 ; '.'
000000000001d023         db  0x04 ; '.'
000000000001d024         db  0x41 ; 'A'
000000000001d025         db  0x0e ; '.'
000000000001d026         db  0x28 ; '('
000000000001d027         db  0x83 ; '.'
000000000001d028         db  0x05 ; '.'
000000000001d029         db  0x4a ; 'J'
000000000001d02a         db  0x0e ; '.'
000000000001d02b         db  0x40 ; '@'
000000000001d02c         db  0x02 ; '.'
000000000001d02d         db  0x7a ; 'z'
000000000001d02e         db  0x0a ; '.'
000000000001d02f         db  0x0e ; '.'
000000000001d030         db  0x28 ; '('
000000000001d031         db  0x41 ; 'A'
000000000001d032         db  0x0e ; '.'
000000000001d033         db  0x20 ; ' '
000000000001d034         db  0x41 ; 'A'
000000000001d035         db  0x0e ; '.'
000000000001d036         db  0x18 ; '.'
000000000001d037         db  0x42 ; 'B'
000000000001d038         db  0x0e ; '.'
000000000001d039         db  0x10 ; '.'
000000000001d03a         db  0x42 ; 'B'
000000000001d03b         db  0x0e ; '.'
000000000001d03c         db  0x08 ; '.'
000000000001d03d         db  0x45 ; 'E'
000000000001d03e         db  0x0b ; '.'
000000000001d03f         db  0x00 ; '.'
000000000001d040         dd         0x0000002c                                  ; Length of the record
000000000001d044         dd         0x000019c4                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d048         db         0x78, 0x27, 2 dup (0xff)                    ; begin 0xf7c0
000000000001d04c         db         0x94, 3 dup (0x00)                          ; length 0x94 (end at 0xf854)
000000000001d050         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d051         db  0x42 ; 'B'
000000000001d052         db  0x0e ; '.'
000000000001d053         db  0x10 ; '.'
000000000001d054         db  0x8c ; '.'
000000000001d055         db  0x02 ; '.'
000000000001d056         db  0x41 ; 'A'
000000000001d057         db  0x0e ; '.'
000000000001d058         db  0x18 ; '.'
000000000001d059         db  0x86 ; '.'
000000000001d05a         db  0x03 ; '.'
000000000001d05b         db  0x41 ; 'A'
000000000001d05c         db  0x0e ; '.'
000000000001d05d         db  0x20 ; ' '
000000000001d05e         db  0x83 ; '.'
000000000001d05f         db  0x04 ; '.'
000000000001d060         db  0x02 ; '.'
000000000001d061         db  0x87 ; '.'
000000000001d062         db  0x0a ; '.'
000000000001d063         db  0x0e ; '.'
000000000001d064         db  0x18 ; '.'
000000000001d065         db  0x41 ; 'A'
000000000001d066         db  0x0e ; '.'
000000000001d067         db  0x10 ; '.'
000000000001d068         db  0x42 ; 'B'
000000000001d069         db  0x0e ; '.'
000000000001d06a         db  0x08 ; '.'
000000000001d06b         db  0x42 ; 'B'
000000000001d06c         db  0x0b ; '.'
000000000001d06d         db  0x00 ; '.'
000000000001d06e         db  0x00 ; '.'
000000000001d06f         db  0x00 ; '.'
000000000001d070         dd         0x00000034                                  ; Length of the record
000000000001d074         dd         0x000019f4                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d078         db         0xe8, 0x27, 2 dup (0xff)                    ; begin 0xf860
000000000001d07c         db         0xf9, 3 dup (0x00)                          ; length 0xf9 (end at 0xf959)
000000000001d080         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d081         db  0x42 ; 'B'
000000000001d082         db  0x0e ; '.'
000000000001d083         db  0x10 ; '.'
000000000001d084         db  0x8c ; '.'
000000000001d085         db  0x02 ; '.'
000000000001d086         db  0x41 ; 'A'
000000000001d087         db  0x0e ; '.'
000000000001d088         db  0x18 ; '.'
000000000001d089         db  0x86 ; '.'
000000000001d08a         db  0x03 ; '.'
000000000001d08b         db  0x44 ; 'D'
000000000001d08c         db  0x0e ; '.'
000000000001d08d         db  0x20 ; ' '
000000000001d08e         db  0x83 ; '.'
000000000001d08f         db  0x04 ; '.'
000000000001d090         db  0x7c ; '|'
000000000001d091         db  0x0a ; '.'
000000000001d092         db  0x0e ; '.'
000000000001d093         db  0x18 ; '.'
000000000001d094         db  0x41 ; 'A'
000000000001d095         db  0x0e ; '.'
000000000001d096         db  0x10 ; '.'
000000000001d097         db  0x42 ; 'B'
000000000001d098         db  0x0e ; '.'
000000000001d099         db  0x08 ; '.'
000000000001d09a         db  0x4a ; 'J'
000000000001d09b         db  0x0b ; '.'
000000000001d09c         db  0x78 ; 'x'
000000000001d09d         db  0x0a ; '.'
000000000001d09e         db  0x0e ; '.'
000000000001d09f         db  0x18 ; '.'
000000000001d0a0         db  0x43 ; 'C'
000000000001d0a1         db  0x0e ; '.'
000000000001d0a2         db  0x10 ; '.'
000000000001d0a3         db  0x42 ; 'B'
000000000001d0a4         db  0x0e ; '.'
000000000001d0a5         db  0x08 ; '.'
000000000001d0a6         db  0x43 ; 'C'
000000000001d0a7         db  0x0b ; '.'
000000000001d0a8         dd         0x0000002c                                  ; Length of the record
000000000001d0ac         dd         0x00001a2c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d0b0         db         0xb0, 0x28, 2 dup (0xff)                    ; begin 0xf960
000000000001d0b4         db         0x94, 3 dup (0x00)                          ; length 0x94 (end at 0xf9f4)
000000000001d0b8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d0b9         db  0x42 ; 'B'
000000000001d0ba         db  0x0e ; '.'
000000000001d0bb         db  0x10 ; '.'
000000000001d0bc         db  0x8c ; '.'
000000000001d0bd         db  0x02 ; '.'
000000000001d0be         db  0x41 ; 'A'
000000000001d0bf         db  0x0e ; '.'
000000000001d0c0         db  0x18 ; '.'
000000000001d0c1         db  0x86 ; '.'
000000000001d0c2         db  0x03 ; '.'
000000000001d0c3         db  0x41 ; 'A'
000000000001d0c4         db  0x0e ; '.'
000000000001d0c5         db  0x20 ; ' '
000000000001d0c6         db  0x83 ; '.'
000000000001d0c7         db  0x04 ; '.'
000000000001d0c8         db  0x02 ; '.'
000000000001d0c9         db  0x87 ; '.'
000000000001d0ca         db  0x0a ; '.'
000000000001d0cb         db  0x0e ; '.'
000000000001d0cc         db  0x18 ; '.'
000000000001d0cd         db  0x41 ; 'A'
000000000001d0ce         db  0x0e ; '.'
000000000001d0cf         db  0x10 ; '.'
000000000001d0d0         db  0x42 ; 'B'
000000000001d0d1         db  0x0e ; '.'
000000000001d0d2         db  0x08 ; '.'
000000000001d0d3         db  0x42 ; 'B'
000000000001d0d4         db  0x0b ; '.'
000000000001d0d5         db  0x00 ; '.'
000000000001d0d6         db  0x00 ; '.'
000000000001d0d7         db  0x00 ; '.'
000000000001d0d8         dd         0x00000034                                  ; Length of the record
000000000001d0dc         dd         0x00001a5c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d0e0         db         0x20, 0x29, 2 dup (0xff)                    ; begin 0xfa00
000000000001d0e4         db         0xf9, 3 dup (0x00)                          ; length 0xf9 (end at 0xfaf9)
000000000001d0e8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d0e9         db  0x42 ; 'B'
000000000001d0ea         db  0x0e ; '.'
000000000001d0eb         db  0x10 ; '.'
000000000001d0ec         db  0x8c ; '.'
000000000001d0ed         db  0x02 ; '.'
000000000001d0ee         db  0x41 ; 'A'
000000000001d0ef         db  0x0e ; '.'
000000000001d0f0         db  0x18 ; '.'
000000000001d0f1         db  0x86 ; '.'
000000000001d0f2         db  0x03 ; '.'
000000000001d0f3         db  0x44 ; 'D'
000000000001d0f4         db  0x0e ; '.'
000000000001d0f5         db  0x20 ; ' '
000000000001d0f6         db  0x83 ; '.'
000000000001d0f7         db  0x04 ; '.'
000000000001d0f8         db  0x7c ; '|'
000000000001d0f9         db  0x0a ; '.'
000000000001d0fa         db  0x0e ; '.'
000000000001d0fb         db  0x18 ; '.'
000000000001d0fc         db  0x41 ; 'A'
000000000001d0fd         db  0x0e ; '.'
000000000001d0fe         db  0x10 ; '.'
000000000001d0ff         db  0x42 ; 'B'
000000000001d100         db  0x0e ; '.'
000000000001d101         db  0x08 ; '.'
000000000001d102         db  0x4a ; 'J'
000000000001d103         db  0x0b ; '.'
000000000001d104         db  0x78 ; 'x'
000000000001d105         db  0x0a ; '.'
000000000001d106         db  0x0e ; '.'
000000000001d107         db  0x18 ; '.'
000000000001d108         db  0x43 ; 'C'
000000000001d109         db  0x0e ; '.'
000000000001d10a         db  0x10 ; '.'
000000000001d10b         db  0x42 ; 'B'
000000000001d10c         db  0x0e ; '.'
000000000001d10d         db  0x08 ; '.'
000000000001d10e         db  0x43 ; 'C'
000000000001d10f         db  0x0b ; '.'
000000000001d110         dd         0x00000014                                  ; Length of the record
000000000001d114         dd         0x00001a94                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d118         db         0xe8, 0x29, 2 dup (0xff)                    ; begin 0xfb00
000000000001d11c         db         0x9c, 3 dup (0x00)                          ; length 0x9c (end at 0xfb9c)
000000000001d120         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d121         align      8
000000000001d128         dd         0x00000014                                  ; Length of the record
000000000001d12c         dd         0x00001aac                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d130         db         0x70, 0x2a, 2 dup (0xff)                    ; begin 0xfba0
000000000001d134         db         0x42, 3 dup (0x00)                          ; length 0x42 (end at 0xfbe2)
000000000001d138         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d139         align      64
000000000001d140         dd         0x00000048                                  ; Length of the record
000000000001d144         dd         0x00001ac4                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d148         db         0xa8, 0x2a, 2 dup (0xff)                    ; begin 0xfbf0
000000000001d14c         db         0xc4, 0x03, 2 dup (0x00)                    ; length 0x3c4 (end at 0xffb4)
000000000001d150         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d151         db  0x42 ; 'B'
000000000001d152         db  0x0e ; '.'
000000000001d153         db  0x10 ; '.'
000000000001d154         db  0x8f ; '.'
000000000001d155         db  0x02 ; '.'
000000000001d156         db  0x42 ; 'B'
000000000001d157         db  0x0e ; '.'
000000000001d158         db  0x18 ; '.'
000000000001d159         db  0x8e ; '.'
000000000001d15a         db  0x03 ; '.'
000000000001d15b         db  0x45 ; 'E'
000000000001d15c         db  0x0e ; '.'
000000000001d15d         db  0x20 ; ' '
000000000001d15e         db  0x8d ; '.'
000000000001d15f         db  0x04 ; '.'
000000000001d160         db  0x42 ; 'B'
000000000001d161         db  0x0e ; '.'
000000000001d162         db  0x28 ; '('
000000000001d163         db  0x8c ; '.'
000000000001d164         db  0x05 ; '.'
000000000001d165         db  0x44 ; 'D'
000000000001d166         db  0x0e ; '.'
000000000001d167         db  0x30 ; '0'
000000000001d168         db  0x86 ; '.'
000000000001d169         db  0x06 ; '.'
000000000001d16a         db  0x41 ; 'A'
000000000001d16b         db  0x0e ; '.'
000000000001d16c         db  0x38 ; '8'
000000000001d16d         db  0x83 ; '.'
000000000001d16e         db  0x07 ; '.'
000000000001d16f         db  0x4a ; 'J'
000000000001d170         db  0x0e ; '.'
000000000001d171         db  0x70 ; 'p'
000000000001d172         db  0x03 ; '.'
000000000001d173         db  0x2e ; '.'
000000000001d174         db  0x01 ; '.'
000000000001d175         db  0x0a ; '.'
000000000001d176         db  0x0e ; '.'
000000000001d177         db  0x38 ; '8'
000000000001d178         db  0x44 ; 'D'
000000000001d179         db  0x0e ; '.'
000000000001d17a         db  0x30 ; '0'
000000000001d17b         db  0x41 ; 'A'
000000000001d17c         db  0x0e ; '.'
000000000001d17d         db  0x28 ; '('
000000000001d17e         db  0x42 ; 'B'
000000000001d17f         db  0x0e ; '.'
000000000001d180         db  0x20 ; ' '
000000000001d181         db  0x42 ; 'B'
000000000001d182         db  0x0e ; '.'
000000000001d183         db  0x18 ; '.'
000000000001d184         db  0x42 ; 'B'
000000000001d185         db  0x0e ; '.'
000000000001d186         db  0x10 ; '.'
000000000001d187         db  0x42 ; 'B'
000000000001d188         db  0x0e ; '.'
000000000001d189         db  0x08 ; '.'
000000000001d18a         db  0x4b ; 'K'
000000000001d18b         db  0x0b ; '.'
000000000001d18c         dd         0x00000048                                  ; Length of the record
000000000001d190         dd         0x00001b10                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d194         db         0x2c, 0x2e, 2 dup (0xff)                    ; begin 0xffc0
000000000001d198         db         0x9d, 3 dup (0x00)                          ; length 0x9d (end at 0x1005d)
000000000001d19c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d19d         db  0x42 ; 'B'
000000000001d19e         db  0x0e ; '.'
000000000001d19f         db  0x10 ; '.'
000000000001d1a0         db  0x8f ; '.'
000000000001d1a1         db  0x02 ; '.'
000000000001d1a2         db  0x42 ; 'B'
000000000001d1a3         db  0x0e ; '.'
000000000001d1a4         db  0x18 ; '.'
000000000001d1a5         db  0x8e ; '.'
000000000001d1a6         db  0x03 ; '.'
000000000001d1a7         db  0x45 ; 'E'
000000000001d1a8         db  0x0e ; '.'
000000000001d1a9         db  0x20 ; ' '
000000000001d1aa         db  0x8d ; '.'
000000000001d1ab         db  0x04 ; '.'
000000000001d1ac         db  0x42 ; 'B'
000000000001d1ad         db  0x0e ; '.'
000000000001d1ae         db  0x28 ; '('
000000000001d1af         db  0x8c ; '.'
000000000001d1b0         db  0x05 ; '.'
000000000001d1b1         db  0x44 ; 'D'
000000000001d1b2         db  0x0e ; '.'
000000000001d1b3         db  0x30 ; '0'
000000000001d1b4         db  0x86 ; '.'
000000000001d1b5         db  0x06 ; '.'
000000000001d1b6         db  0x41 ; 'A'
000000000001d1b7         db  0x0e ; '.'
000000000001d1b8         db  0x38 ; '8'
000000000001d1b9         db  0x83 ; '.'
000000000001d1ba         db  0x07 ; '.'
000000000001d1bb         db  0x47 ; 'G'
000000000001d1bc         db  0x0e ; '.'
000000000001d1bd         db  0x50 ; 'P'
000000000001d1be         db  0x02 ; '.'
000000000001d1bf         db  0x59 ; 'Y'
000000000001d1c0         db  0x0a ; '.'
000000000001d1c1         db  0x0e ; '.'
000000000001d1c2         db  0x38 ; '8'
000000000001d1c3         db  0x44 ; 'D'
000000000001d1c4         db  0x0e ; '.'
000000000001d1c5         db  0x30 ; '0'
000000000001d1c6         db  0x41 ; 'A'
000000000001d1c7         db  0x0e ; '.'
000000000001d1c8         db  0x28 ; '('
000000000001d1c9         db  0x42 ; 'B'
000000000001d1ca         db  0x0e ; '.'
000000000001d1cb         db  0x20 ; ' '
000000000001d1cc         db  0x42 ; 'B'
000000000001d1cd         db  0x0e ; '.'
000000000001d1ce         db  0x18 ; '.'
000000000001d1cf         db  0x42 ; 'B'
000000000001d1d0         db  0x0e ; '.'
000000000001d1d1         db  0x10 ; '.'
000000000001d1d2         db  0x42 ; 'B'
000000000001d1d3         db  0x0e ; '.'
000000000001d1d4         db  0x08 ; '.'
000000000001d1d5         db  0x43 ; 'C'
000000000001d1d6         db  0x0b ; '.'
000000000001d1d7         db  0x00 ; '.'
000000000001d1d8         dd         0x00000048                                  ; Length of the record
000000000001d1dc         dd         0x00001b5c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d1e0         db         0x80, 0x2e, 2 dup (0xff)                    ; begin 0x10060
000000000001d1e4         db         0xbf, 0x01, 2 dup (0x00)                    ; length 0x1bf (end at 0x1021f)
000000000001d1e8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d1e9         db  0x42 ; 'B'
000000000001d1ea         db  0x0e ; '.'
000000000001d1eb         db  0x10 ; '.'
000000000001d1ec         db  0x8f ; '.'
000000000001d1ed         db  0x02 ; '.'
000000000001d1ee         db  0x42 ; 'B'
000000000001d1ef         db  0x0e ; '.'
000000000001d1f0         db  0x18 ; '.'
000000000001d1f1         db  0x8e ; '.'
000000000001d1f2         db  0x03 ; '.'
000000000001d1f3         db  0x42 ; 'B'
000000000001d1f4         db  0x0e ; '.'
000000000001d1f5         db  0x20 ; ' '
000000000001d1f6         db  0x8d ; '.'
000000000001d1f7         db  0x04 ; '.'
000000000001d1f8         db  0x42 ; 'B'
000000000001d1f9         db  0x0e ; '.'
000000000001d1fa         db  0x28 ; '('
000000000001d1fb         db  0x8c ; '.'
000000000001d1fc         db  0x05 ; '.'
000000000001d1fd         db  0x45 ; 'E'
000000000001d1fe         db  0x0e ; '.'
000000000001d1ff         db  0x30 ; '0'
000000000001d200         db  0x86 ; '.'
000000000001d201         db  0x06 ; '.'
000000000001d202         db  0x41 ; 'A'
000000000001d203         db  0x0e ; '.'
000000000001d204         db  0x38 ; '8'
000000000001d205         db  0x83 ; '.'
000000000001d206         db  0x07 ; '.'
000000000001d207         db  0x47 ; 'G'
000000000001d208         db  0x0e ; '.'
000000000001d209         db  0x70 ; 'p'
000000000001d20a         db  0x03 ; '.'
000000000001d20b         db  0x2e ; '.'
000000000001d20c         db  0x01 ; '.'
000000000001d20d         db  0x0a ; '.'
000000000001d20e         db  0x0e ; '.'
000000000001d20f         db  0x38 ; '8'
000000000001d210         db  0x41 ; 'A'
000000000001d211         db  0x0e ; '.'
000000000001d212         db  0x30 ; '0'
000000000001d213         db  0x41 ; 'A'
000000000001d214         db  0x0e ; '.'
000000000001d215         db  0x28 ; '('
000000000001d216         db  0x42 ; 'B'
000000000001d217         db  0x0e ; '.'
000000000001d218         db  0x20 ; ' '
000000000001d219         db  0x42 ; 'B'
000000000001d21a         db  0x0e ; '.'
000000000001d21b         db  0x18 ; '.'
000000000001d21c         db  0x42 ; 'B'
000000000001d21d         db  0x0e ; '.'
000000000001d21e         db  0x10 ; '.'
000000000001d21f         db  0x42 ; 'B'
000000000001d220         db  0x0e ; '.'
000000000001d221         db  0x08 ; '.'
000000000001d222         db  0x43 ; 'C'
000000000001d223         db  0x0b ; '.'
000000000001d224         dd         0x00000028                                  ; Length of the record
000000000001d228         dd         0x00001ba8                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d22c         db         0xf4, 0x2f, 2 dup (0xff)                    ; begin 0x10220
000000000001d230         db         0x23, 3 dup (0x00)                          ; length 0x23 (end at 0x10243)
000000000001d234         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d235         db  0x41 ; 'A'
000000000001d236         db  0x0e ; '.'
000000000001d237         db  0x10 ; '.'
000000000001d238         db  0x86 ; '.'
000000000001d239         db  0x02 ; '.'
000000000001d23a         db  0x41 ; 'A'
000000000001d23b         db  0x0e ; '.'
000000000001d23c         db  0x18 ; '.'
000000000001d23d         db  0x83 ; '.'
000000000001d23e         db  0x03 ; '.'
000000000001d23f         db  0x49 ; 'I'
000000000001d240         db  0x0e ; '.'
000000000001d241         db  0x20 ; ' '
000000000001d242         db  0x49 ; 'I'
000000000001d243         db  0x0e ; '.'
000000000001d244         db  0x18 ; '.'
000000000001d245         db  0x46 ; 'F'
000000000001d246         db  0x0e ; '.'
000000000001d247         db  0x10 ; '.'
000000000001d248         db  0x41 ; 'A'
000000000001d249         db  0x0e ; '.'
000000000001d24a         db  0x08 ; '.'
000000000001d24b         db  0x00 ; '.'
000000000001d24c         db  0x00 ; '.'
000000000001d24d         db  0x00 ; '.'
000000000001d24e         db  0x00 ; '.'
000000000001d24f         db  0x00 ; '.'
000000000001d250         dd         0x00000060                                  ; Length of the record
000000000001d254         dd         0x00001bd4                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d258         db         0xf8, 0x2f, 2 dup (0xff)                    ; begin 0x10250
000000000001d25c         db         0x3a, 0x02, 2 dup (0x00)                    ; length 0x23a (end at 0x1048a)
000000000001d260         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d261         db  0x42 ; 'B'
000000000001d262         db  0x0e ; '.'
000000000001d263         db  0x10 ; '.'
000000000001d264         db  0x8f ; '.'
000000000001d265         db  0x02 ; '.'
000000000001d266         db  0x42 ; 'B'
000000000001d267         db  0x0e ; '.'
000000000001d268         db  0x18 ; '.'
000000000001d269         db  0x8e ; '.'
000000000001d26a         db  0x03 ; '.'
000000000001d26b         db  0x42 ; 'B'
000000000001d26c         db  0x0e ; '.'
000000000001d26d         db  0x20 ; ' '
000000000001d26e         db  0x8d ; '.'
000000000001d26f         db  0x04 ; '.'
000000000001d270         db  0x42 ; 'B'
000000000001d271         db  0x0e ; '.'
000000000001d272         db  0x28 ; '('
000000000001d273         db  0x8c ; '.'
000000000001d274         db  0x05 ; '.'
000000000001d275         db  0x44 ; 'D'
000000000001d276         db  0x0e ; '.'
000000000001d277         db  0x30 ; '0'
000000000001d278         db  0x86 ; '.'
000000000001d279         db  0x06 ; '.'
000000000001d27a         db  0x41 ; 'A'
000000000001d27b         db  0x0e ; '.'
000000000001d27c         db  0x38 ; '8'
000000000001d27d         db  0x83 ; '.'
000000000001d27e         db  0x07 ; '.'
000000000001d27f         db  0x47 ; 'G'
000000000001d280         db  0x0e ; '.'
000000000001d281         db  0x70 ; 'p'
000000000001d282         db  0x70 ; 'p'
000000000001d283         db  0x0a ; '.'
000000000001d284         db  0x0e ; '.'
000000000001d285         db  0x38 ; '8'
000000000001d286         db  0x41 ; 'A'
000000000001d287         db  0x0e ; '.'
000000000001d288         db  0x30 ; '0'
000000000001d289         db  0x41 ; 'A'
000000000001d28a         db  0x0e ; '.'
000000000001d28b         db  0x28 ; '('
000000000001d28c         db  0x42 ; 'B'
000000000001d28d         db  0x0e ; '.'
000000000001d28e         db  0x20 ; ' '
000000000001d28f         db  0x42 ; 'B'
000000000001d290         db  0x0e ; '.'
000000000001d291         db  0x18 ; '.'
000000000001d292         db  0x42 ; 'B'
000000000001d293         db  0x0e ; '.'
000000000001d294         db  0x10 ; '.'
000000000001d295         db  0x42 ; 'B'
000000000001d296         db  0x0e ; '.'
000000000001d297         db  0x08 ; '.'
000000000001d298         db  0x42 ; 'B'
000000000001d299         db  0x0b ; '.'
000000000001d29a         db  0x02 ; '.'
000000000001d29b         db  0xd8 ; '.'
000000000001d29c         db  0x0a ; '.'
000000000001d29d         db  0x0e ; '.'
000000000001d29e         db  0x38 ; '8'
000000000001d29f         db  0x41 ; 'A'
000000000001d2a0         db  0x0e ; '.'
000000000001d2a1         db  0x30 ; '0'
000000000001d2a2         db  0x44 ; 'D'
000000000001d2a3         db  0x0e ; '.'
000000000001d2a4         db  0x28 ; '('
000000000001d2a5         db  0x4e ; 'N'
000000000001d2a6         db  0x0e ; '.'
000000000001d2a7         db  0x20 ; ' '
000000000001d2a8         db  0x42 ; 'B'
000000000001d2a9         db  0x0e ; '.'
000000000001d2aa         db  0x18 ; '.'
000000000001d2ab         db  0x42 ; 'B'
000000000001d2ac         db  0x0e ; '.'
000000000001d2ad         db  0x10 ; '.'
000000000001d2ae         db  0x42 ; 'B'
000000000001d2af         db  0x0e ; '.'
000000000001d2b0         db  0x08 ; '.'
000000000001d2b1         db  0x4f ; 'O'
000000000001d2b2         db  0x0b ; '.'
000000000001d2b3         db  0x00 ; '.'
000000000001d2b4         dd         0x00000010                                  ; Length of the record
000000000001d2b8         dd         0x00001c38                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d2bc         db         0xd4, 0x31, 2 dup (0xff)                    ; begin 0x10490
000000000001d2c0         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x1049f)
000000000001d2c4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d2c5         align      8
000000000001d2c8         dd         0x00000028                                  ; Length of the record
000000000001d2cc         dd         0x00001c4c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d2d0         db         0xd0, 0x31, 2 dup (0xff)                    ; begin 0x104a0
000000000001d2d4         db         0x41, 3 dup (0x00)                          ; length 0x41 (end at 0x104e1)
000000000001d2d8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d2d9         db  0x45 ; 'E'
000000000001d2da         db  0x0e ; '.'
000000000001d2db         db  0x10 ; '.'
000000000001d2dc         db  0x8c ; '.'
000000000001d2dd         db  0x02 ; '.'
000000000001d2de         db  0x41 ; 'A'
000000000001d2df         db  0x0e ; '.'
000000000001d2e0         db  0x18 ; '.'
000000000001d2e1         db  0x86 ; '.'
000000000001d2e2         db  0x03 ; '.'
000000000001d2e3         db  0x44 ; 'D'
000000000001d2e4         db  0x0e ; '.'
000000000001d2e5         db  0x20 ; ' '
000000000001d2e6         db  0x83 ; '.'
000000000001d2e7         db  0x04 ; '.'
000000000001d2e8         db  0x73 ; 's'
000000000001d2e9         db  0x0e ; '.'
000000000001d2ea         db  0x18 ; '.'
000000000001d2eb         db  0x41 ; 'A'
000000000001d2ec         db  0x0e ; '.'
000000000001d2ed         db  0x10 ; '.'
000000000001d2ee         db  0x42 ; 'B'
000000000001d2ef         db  0x0e ; '.'
000000000001d2f0         db  0x08 ; '.'
000000000001d2f1         db  0x00 ; '.'
000000000001d2f2         db  0x00 ; '.'
000000000001d2f3         db  0x00 ; '.'
000000000001d2f4         dd         0x00000028                                  ; Length of the record
000000000001d2f8         dd         0x00001c78                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d2fc         db         0xf4, 0x31, 2 dup (0xff)                    ; begin 0x104f0
000000000001d300         db         0x41, 3 dup (0x00)                          ; length 0x41 (end at 0x10531)
000000000001d304         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d305         db  0x45 ; 'E'
000000000001d306         db  0x0e ; '.'
000000000001d307         db  0x10 ; '.'
000000000001d308         db  0x8c ; '.'
000000000001d309         db  0x02 ; '.'
000000000001d30a         db  0x41 ; 'A'
000000000001d30b         db  0x0e ; '.'
000000000001d30c         db  0x18 ; '.'
000000000001d30d         db  0x86 ; '.'
000000000001d30e         db  0x03 ; '.'
000000000001d30f         db  0x44 ; 'D'
000000000001d310         db  0x0e ; '.'
000000000001d311         db  0x20 ; ' '
000000000001d312         db  0x83 ; '.'
000000000001d313         db  0x04 ; '.'
000000000001d314         db  0x73 ; 's'
000000000001d315         db  0x0e ; '.'
000000000001d316         db  0x18 ; '.'
000000000001d317         db  0x41 ; 'A'
000000000001d318         db  0x0e ; '.'
000000000001d319         db  0x10 ; '.'
000000000001d31a         db  0x42 ; 'B'
000000000001d31b         db  0x0e ; '.'
000000000001d31c         db  0x08 ; '.'
000000000001d31d         db  0x00 ; '.'
000000000001d31e         db  0x00 ; '.'
000000000001d31f         db  0x00 ; '.'
000000000001d320         dd         0x00000074                                  ; Length of the record
000000000001d324         dd         0x00001ca4                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d328         db         0x18, 0x32, 2 dup (0xff)                    ; begin 0x10540
000000000001d32c         db         0xb2, 0x1a, 2 dup (0x00)                    ; length 0x1ab2 (end at 0x11ff2)
000000000001d330         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d331         db  0x42 ; 'B'
000000000001d332         db  0x0e ; '.'
000000000001d333         db  0x10 ; '.'
000000000001d334         db  0x8f ; '.'
000000000001d335         db  0x02 ; '.'
000000000001d336         db  0x42 ; 'B'
000000000001d337         db  0x0e ; '.'
000000000001d338         db  0x18 ; '.'
000000000001d339         db  0x8e ; '.'
000000000001d33a         db  0x03 ; '.'
000000000001d33b         db  0x45 ; 'E'
000000000001d33c         db  0x0e ; '.'
000000000001d33d         db  0x20 ; ' '
000000000001d33e         db  0x8d ; '.'
000000000001d33f         db  0x04 ; '.'
000000000001d340         db  0x42 ; 'B'
000000000001d341         db  0x0e ; '.'
000000000001d342         db  0x28 ; '('
000000000001d343         db  0x8c ; '.'
000000000001d344         db  0x05 ; '.'
000000000001d345         db  0x44 ; 'D'
000000000001d346         db  0x0e ; '.'
000000000001d347         db  0x30 ; '0'
000000000001d348         db  0x86 ; '.'
000000000001d349         db  0x06 ; '.'
000000000001d34a         db  0x41 ; 'A'
000000000001d34b         db  0x0e ; '.'
000000000001d34c         db  0x38 ; '8'
000000000001d34d         db  0x83 ; '.'
000000000001d34e         db  0x07 ; '.'
000000000001d34f         db  0x4a ; 'J'
000000000001d350         db  0x0e ; '.'
000000000001d351         db  0x80 ; '.'
000000000001d352         db  0x0a ; '.'
000000000001d353         db  0x02 ; '.'
000000000001d354         db  0xd6 ; '.'
000000000001d355         db  0x0a ; '.'
000000000001d356         db  0x0e ; '.'
000000000001d357         db  0x38 ; '8'
000000000001d358         db  0x41 ; 'A'
000000000001d359         db  0x0e ; '.'
000000000001d35a         db  0x30 ; '0'
000000000001d35b         db  0x41 ; 'A'
000000000001d35c         db  0x0e ; '.'
000000000001d35d         db  0x28 ; '('
000000000001d35e         db  0x42 ; 'B'
000000000001d35f         db  0x0e ; '.'
000000000001d360         db  0x20 ; ' '
000000000001d361         db  0x42 ; 'B'
000000000001d362         db  0x0e ; '.'
000000000001d363         db  0x18 ; '.'
000000000001d364         db  0x42 ; 'B'
000000000001d365         db  0x0e ; '.'
000000000001d366         db  0x10 ; '.'
000000000001d367         db  0x42 ; 'B'
000000000001d368         db  0x0e ; '.'
000000000001d369         db  0x08 ; '.'
000000000001d36a         db  0x46 ; 'F'
000000000001d36b         db  0x0b ; '.'
000000000001d36c         db  0x03 ; '.'
000000000001d36d         db  0x99 ; '.'
000000000001d36e         db  0x05 ; '.'
000000000001d36f         db  0x0e ; '.'
000000000001d370         db  0x88 ; '.'
000000000001d371         db  0x0a ; '.'
000000000001d372         db  0x44 ; 'D'
000000000001d373         db  0x0e ; '.'
000000000001d374         db  0x90 ; '.'
000000000001d375         db  0x0a ; '.'
000000000001d376         db  0x44 ; 'D'
000000000001d377         db  0x0e ; '.'
000000000001d378         db  0x98 ; '.'
000000000001d379         db  0x0a ; '.'
000000000001d37a         db  0x45 ; 'E'
000000000001d37b         db  0x0e ; '.'
000000000001d37c         db  0xa0 ; '.'
000000000001d37d         db  0x0a ; '.'
000000000001d37e         db  0x4e ; 'N'
000000000001d37f         db  0x0e ; '.'
000000000001d380         db  0x80 ; '.'
000000000001d381         db  0x0a ; '.'
000000000001d382         db  0x02 ; '.'
000000000001d383         db  0x98 ; '.'
000000000001d384         db  0x0e ; '.'
000000000001d385         db  0x88 ; '.'
000000000001d386         db  0x0a ; '.'
000000000001d387         db  0x44 ; 'D'
000000000001d388         db  0x0e ; '.'
000000000001d389         db  0x90 ; '.'
000000000001d38a         db  0x0a ; '.'
000000000001d38b         db  0x44 ; 'D'
000000000001d38c         db  0x0e ; '.'
000000000001d38d         db  0x98 ; '.'
000000000001d38e         db  0x0a ; '.'
000000000001d38f         db  0x45 ; 'E'
000000000001d390         db  0x0e ; '.'
000000000001d391         db  0xa0 ; '.'
000000000001d392         db  0x0a ; '.'
000000000001d393         db  0x5d ; ']'
000000000001d394         db  0x0e ; '.'
000000000001d395         db  0x80 ; '.'
000000000001d396         db  0x0a ; '.'
000000000001d397         db  0x00 ; '.'
000000000001d398         dd         0x0000002c                                  ; Length of the record
000000000001d39c         dd         0x00001d1c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d3a0         db         0x60, 0x4c, 2 dup (0xff)                    ; begin 0x12000
000000000001d3a4         db         0x4e, 3 dup (0x00)                          ; length 0x4e (end at 0x1204e)
000000000001d3a8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d3a9         db  0x44 ; 'D'
000000000001d3aa         db  0x0e ; '.'
000000000001d3ab         db  0x20 ; ' '
000000000001d3ac         db  0x57 ; 'W'
000000000001d3ad         db  0x0e ; '.'
000000000001d3ae         db  0x28 ; '('
000000000001d3af         db  0x45 ; 'E'
000000000001d3b0         db  0x0e ; '.'
000000000001d3b1         db  0x30 ; '0'
000000000001d3b2         db  0x49 ; 'I'
000000000001d3b3         db  0x0e ; '.'
000000000001d3b4         db  0x38 ; '8'
000000000001d3b5         db  0x42 ; 'B'
000000000001d3b6         db  0x0e ; '.'
000000000001d3b7         db  0x40 ; '@'
000000000001d3b8         db  0x49 ; 'I'
000000000001d3b9         db  0x0e ; '.'
000000000001d3ba         db  0x20 ; ' '
000000000001d3bb         db  0x54 ; 'T'
000000000001d3bc         db  0x0a ; '.'
000000000001d3bd         db  0x0e ; '.'
000000000001d3be         db  0x08 ; '.'
000000000001d3bf         db  0x41 ; 'A'
000000000001d3c0         db  0x0b ; '.'
000000000001d3c1         db  0x00 ; '.'
000000000001d3c2         db  0x00 ; '.'
000000000001d3c3         db  0x00 ; '.'
000000000001d3c4         db  0x00 ; '.'
000000000001d3c5         db  0x00 ; '.'
000000000001d3c6         db  0x00 ; '.'
000000000001d3c7         db  0x00 ; '.'
000000000001d3c8         dd         0x0000001c                                  ; Length of the record
000000000001d3cc         dd         0x00001d4c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d3d0         db         0x80, 0x4c, 2 dup (0xff)                    ; begin 0x12050
000000000001d3d4         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x120ef)
000000000001d3d8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d3d9         db  0x44 ; 'D'
000000000001d3da         db  0x0e ; '.'
000000000001d3db         db  0x10 ; '.'
000000000001d3dc         db  0x83 ; '.'
000000000001d3dd         db  0x02 ; '.'
000000000001d3de         db  0x02 ; '.'
000000000001d3df         db  0x78 ; 'x'
000000000001d3e0         db  0x0a ; '.'
000000000001d3e1         db  0x0e ; '.'
000000000001d3e2         db  0x08 ; '.'
000000000001d3e3         db  0x41 ; 'A'
000000000001d3e4         db  0x0b ; '.'
000000000001d3e5         db  0x00 ; '.'
000000000001d3e6         db  0x00 ; '.'
000000000001d3e7         db  0x00 ; '.'
000000000001d3e8         dd         0x00000040                                  ; Length of the record
000000000001d3ec         dd         0x00001d6c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d3f0         db         0x00, 0x4d, 2 dup (0xff)                    ; begin 0x120f0
000000000001d3f4         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x121d7)
000000000001d3f8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d3f9         db  0x41 ; 'A'
000000000001d3fa         db  0x0e ; '.'
000000000001d3fb         db  0x10 ; '.'
000000000001d3fc         db  0x86 ; '.'
000000000001d3fd         db  0x02 ; '.'
000000000001d3fe         db  0x41 ; 'A'
000000000001d3ff         db  0x0e ; '.'
000000000001d400         db  0x18 ; '.'
000000000001d401         db  0x83 ; '.'
000000000001d402         db  0x03 ; '.'
000000000001d403         db  0x49 ; 'I'
000000000001d404         db  0x0e ; '.'
000000000001d405         db  0x20 ; ' '
000000000001d406         db  0x6e ; 'n'
000000000001d407         db  0x0a ; '.'
000000000001d408         db  0x0e ; '.'
000000000001d409         db  0x18 ; '.'
000000000001d40a         db  0x41 ; 'A'
000000000001d40b         db  0x0e ; '.'
000000000001d40c         db  0x10 ; '.'
000000000001d40d         db  0x41 ; 'A'
000000000001d40e         db  0x0e ; '.'
000000000001d40f         db  0x08 ; '.'
000000000001d410         db  0x45 ; 'E'
000000000001d411         db  0x0b ; '.'
000000000001d412         db  0x02 ; '.'
000000000001d413         db  0x4a ; 'J'
000000000001d414         db  0x0a ; '.'
000000000001d415         db  0x0e ; '.'
000000000001d416         db  0x18 ; '.'
000000000001d417         db  0x41 ; 'A'
000000000001d418         db  0x0e ; '.'
000000000001d419         db  0x10 ; '.'
000000000001d41a         db  0x41 ; 'A'
000000000001d41b         db  0x0e ; '.'
000000000001d41c         db  0x08 ; '.'
000000000001d41d         db  0x44 ; 'D'
000000000001d41e         db  0x0b ; '.'
000000000001d41f         db  0x02 ; '.'
000000000001d420         db  0x54 ; 'T'
000000000001d421         db  0x0e ; '.'
000000000001d422         db  0x18 ; '.'
000000000001d423         db  0x41 ; 'A'
000000000001d424         db  0x0e ; '.'
000000000001d425         db  0x10 ; '.'
000000000001d426         db  0x41 ; 'A'
000000000001d427         db  0x0e ; '.'
000000000001d428         db  0x08 ; '.'
000000000001d429         db  0x00 ; '.'
000000000001d42a         db  0x00 ; '.'
000000000001d42b         db  0x00 ; '.'
000000000001d42c         dd         0x00000074                                  ; Length of the record
000000000001d430         dd         0x00001db0                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d434         db         0xac, 0x4d, 2 dup (0xff)                    ; begin 0x121e0
000000000001d438         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x13414)
000000000001d43c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d43d         db  0x42 ; 'B'
000000000001d43e         db  0x0e ; '.'
000000000001d43f         db  0x10 ; '.'
000000000001d440         db  0x8f ; '.'
000000000001d441         db  0x02 ; '.'
000000000001d442         db  0x42 ; 'B'
000000000001d443         db  0x0e ; '.'
000000000001d444         db  0x18 ; '.'
000000000001d445         db  0x8e ; '.'
000000000001d446         db  0x03 ; '.'
000000000001d447         db  0x45 ; 'E'
000000000001d448         db  0x0e ; '.'
000000000001d449         db  0x20 ; ' '
000000000001d44a         db  0x8d ; '.'
000000000001d44b         db  0x04 ; '.'
000000000001d44c         db  0x42 ; 'B'
000000000001d44d         db  0x0e ; '.'
000000000001d44e         db  0x28 ; '('
000000000001d44f         db  0x8c ; '.'
000000000001d450         db  0x05 ; '.'
000000000001d451         db  0x44 ; 'D'
000000000001d452         db  0x0e ; '.'
000000000001d453         db  0x30 ; '0'
000000000001d454         db  0x86 ; '.'
000000000001d455         db  0x06 ; '.'
000000000001d456         db  0x41 ; 'A'
000000000001d457         db  0x0e ; '.'
000000000001d458         db  0x38 ; '8'
000000000001d459         db  0x83 ; '.'
000000000001d45a         db  0x07 ; '.'
000000000001d45b         db  0x53 ; 'S'
000000000001d45c         db  0x0e ; '.'
000000000001d45d         db  0xf0 ; '.'
000000000001d45e         db  0x01 ; '.'
000000000001d45f         db  0x03 ; '.'
000000000001d460         db  0x81 ; '.'
000000000001d461         db  0x0b ; '.'
000000000001d462         db  0x0e ; '.'
000000000001d463         db  0xf8 ; '.'
000000000001d464         db  0x01 ; '.'
000000000001d465         db  0x4a ; 'J'
000000000001d466         db  0x0e ; '.'
000000000001d467         db  0x80 ; '.'
000000000001d468         db  0x02 ; '.'
000000000001d469         db  0x44 ; 'D'
000000000001d46a         db  0x0e ; '.'
000000000001d46b         db  0x88 ; '.'
000000000001d46c         db  0x02 ; '.'
000000000001d46d         db  0x45 ; 'E'
000000000001d46e         db  0x0e ; '.'
000000000001d46f         db  0x90 ; '.'
000000000001d470         db  0x02 ; '.'
000000000001d471         db  0x5f ; '_'
000000000001d472         db  0x0e ; '.'
000000000001d473         db  0xf0 ; '.'
000000000001d474         db  0x01 ; '.'
000000000001d475         db  0x64 ; 'd'
000000000001d476         db  0x0a ; '.'
000000000001d477         db  0x0e ; '.'
000000000001d478         db  0x38 ; '8'
000000000001d479         db  0x41 ; 'A'
000000000001d47a         db  0x0e ; '.'
000000000001d47b         db  0x30 ; '0'
000000000001d47c         db  0x41 ; 'A'
000000000001d47d         db  0x0e ; '.'
000000000001d47e         db  0x28 ; '('
000000000001d47f         db  0x42 ; 'B'
000000000001d480         db  0x0e ; '.'
000000000001d481         db  0x20 ; ' '
000000000001d482         db  0x42 ; 'B'
000000000001d483         db  0x0e ; '.'
000000000001d484         db  0x18 ; '.'
000000000001d485         db  0x42 ; 'B'
000000000001d486         db  0x0e ; '.'
000000000001d487         db  0x10 ; '.'
000000000001d488         db  0x42 ; 'B'
000000000001d489         db  0x0e ; '.'
000000000001d48a         db  0x08 ; '.'
000000000001d48b         db  0x44 ; 'D'
000000000001d48c         db  0x0b ; '.'
000000000001d48d         db  0x03 ; '.'
000000000001d48e         db  0x99 ; '.'
000000000001d48f         db  0x05 ; '.'
000000000001d490         db  0x0e ; '.'
000000000001d491         db  0xf8 ; '.'
000000000001d492         db  0x01 ; '.'
000000000001d493         db  0x4d ; 'M'
000000000001d494         db  0x0e ; '.'
000000000001d495         db  0x80 ; '.'
000000000001d496         db  0x02 ; '.'
000000000001d497         db  0x44 ; 'D'
000000000001d498         db  0x0e ; '.'
000000000001d499         db  0x88 ; '.'
000000000001d49a         db  0x02 ; '.'
000000000001d49b         db  0x47 ; 'G'
000000000001d49c         db  0x0e ; '.'
000000000001d49d         db  0x90 ; '.'
000000000001d49e         db  0x02 ; '.'
000000000001d49f         db  0x5b ; '['
000000000001d4a0         db  0x0e ; '.'
000000000001d4a1         db  0xf0 ; '.'
000000000001d4a2         db  0x01 ; '.'
000000000001d4a3         db  0x00 ; '.'
000000000001d4a4         dd         0x00000068                                  ; Length of the record
000000000001d4a8         dd         0x00001e28                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d4ac         db         0x74, 0x5f, 2 dup (0xff)                    ; begin 0x13420
000000000001d4b0         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x135cb)
000000000001d4b4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d4b5         db  0x42 ; 'B'
000000000001d4b6         db  0x0e ; '.'
000000000001d4b7         db  0x10 ; '.'
000000000001d4b8         db  0x8f ; '.'
000000000001d4b9         db  0x02 ; '.'
000000000001d4ba         db  0x42 ; 'B'
000000000001d4bb         db  0x0e ; '.'
000000000001d4bc         db  0x18 ; '.'
000000000001d4bd         db  0x8e ; '.'
000000000001d4be         db  0x03 ; '.'
000000000001d4bf         db  0x45 ; 'E'
000000000001d4c0         db  0x0e ; '.'
000000000001d4c1         db  0x20 ; ' '
000000000001d4c2         db  0x8d ; '.'
000000000001d4c3         db  0x04 ; '.'
000000000001d4c4         db  0x42 ; 'B'
000000000001d4c5         db  0x0e ; '.'
000000000001d4c6         db  0x28 ; '('
000000000001d4c7         db  0x8c ; '.'
000000000001d4c8         db  0x05 ; '.'
000000000001d4c9         db  0x44 ; 'D'
000000000001d4ca         db  0x0e ; '.'
000000000001d4cb         db  0x30 ; '0'
000000000001d4cc         db  0x86 ; '.'
000000000001d4cd         db  0x06 ; '.'
000000000001d4ce         db  0x41 ; 'A'
000000000001d4cf         db  0x0e ; '.'
000000000001d4d0         db  0x38 ; '8'
000000000001d4d1         db  0x83 ; '.'
000000000001d4d2         db  0x07 ; '.'
000000000001d4d3         db  0x47 ; 'G'
000000000001d4d4         db  0x0e ; '.'
000000000001d4d5         db  0x60 ; '`'
000000000001d4d6         db  0x02 ; '.'
000000000001d4d7         db  0x99 ; '.'
000000000001d4d8         db  0x0e ; '.'
000000000001d4d9         db  0x68 ; 'h'
000000000001d4da         db  0x5f ; '_'
000000000001d4db         db  0x0e ; '.'
000000000001d4dc         db  0x70 ; 'p'
000000000001d4dd         db  0x46 ; 'F'
000000000001d4de         db  0x0e ; '.'
000000000001d4df         db  0x78 ; 'x'
000000000001d4e0         db  0x42 ; 'B'
000000000001d4e1         db  0x0e ; '.'
000000000001d4e2         db  0x80 ; '.'
000000000001d4e3         db  0x01 ; '.'
000000000001d4e4         db  0x59 ; 'Y'
000000000001d4e5         db  0x0e ; '.'
000000000001d4e6         db  0x60 ; '`'
000000000001d4e7         db  0x02 ; '.'
000000000001d4e8         db  0x40 ; '@'
000000000001d4e9         db  0x0e ; '.'
000000000001d4ea         db  0x68 ; 'h'
000000000001d4eb         db  0x4b ; 'K'
000000000001d4ec         db  0x0e ; '.'
000000000001d4ed         db  0x70 ; 'p'
000000000001d4ee         db  0x43 ; 'C'
000000000001d4ef         db  0x0e ; '.'
000000000001d4f0         db  0x78 ; 'x'
000000000001d4f1         db  0x45 ; 'E'
000000000001d4f2         db  0x0e ; '.'
000000000001d4f3         db  0x80 ; '.'
000000000001d4f4         db  0x01 ; '.'
000000000001d4f5         db  0x5e ; '^'
000000000001d4f6         db  0x0e ; '.'
000000000001d4f7         db  0x60 ; '`'
000000000001d4f8         db  0x4c ; 'L'
000000000001d4f9         db  0x0a ; '.'
000000000001d4fa         db  0x0e ; '.'
000000000001d4fb         db  0x38 ; '8'
000000000001d4fc         db  0x44 ; 'D'
000000000001d4fd         db  0x0e ; '.'
000000000001d4fe         db  0x30 ; '0'
000000000001d4ff         db  0x41 ; 'A'
000000000001d500         db  0x0e ; '.'
000000000001d501         db  0x28 ; '('
000000000001d502         db  0x42 ; 'B'
000000000001d503         db  0x0e ; '.'
000000000001d504         db  0x20 ; ' '
000000000001d505         db  0x42 ; 'B'
000000000001d506         db  0x0e ; '.'
000000000001d507         db  0x18 ; '.'
000000000001d508         db  0x42 ; 'B'
000000000001d509         db  0x0e ; '.'
000000000001d50a         db  0x10 ; '.'
000000000001d50b         db  0x42 ; 'B'
000000000001d50c         db  0x0e ; '.'
000000000001d50d         db  0x08 ; '.'
000000000001d50e         db  0x46 ; 'F'
000000000001d50f         db  0x0b ; '.'
000000000001d510         dd         0x00000028                                  ; Length of the record
000000000001d514         dd         0x00001e94                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d518         db         0xb8, 0x60, 2 dup (0xff)                    ; begin 0x135d0
000000000001d51c         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x13606)
000000000001d520         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d521         db  0x42 ; 'B'
000000000001d522         db  0x0e ; '.'
000000000001d523         db  0x10 ; '.'
000000000001d524         db  0x8c ; '.'
000000000001d525         db  0x02 ; '.'
000000000001d526         db  0x41 ; 'A'
000000000001d527         db  0x0e ; '.'
000000000001d528         db  0x18 ; '.'
000000000001d529         db  0x86 ; '.'
000000000001d52a         db  0x03 ; '.'
000000000001d52b         db  0x41 ; 'A'
000000000001d52c         db  0x0e ; '.'
000000000001d52d         db  0x20 ; ' '
000000000001d52e         db  0x83 ; '.'
000000000001d52f         db  0x04 ; '.'
000000000001d530         db  0x6e ; 'n'
000000000001d531         db  0x0e ; '.'
000000000001d532         db  0x18 ; '.'
000000000001d533         db  0x41 ; 'A'
000000000001d534         db  0x0e ; '.'
000000000001d535         db  0x10 ; '.'
000000000001d536         db  0x42 ; 'B'
000000000001d537         db  0x0e ; '.'
000000000001d538         db  0x08 ; '.'
000000000001d539         db  0x00 ; '.'
000000000001d53a         db  0x00 ; '.'
000000000001d53b         db  0x00 ; '.'
000000000001d53c         dd         0x00000010                                  ; Length of the record
000000000001d540         dd         0x00001ec0                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d544         db         0xcc, 0x60, 2 dup (0xff)                    ; begin 0x13610
000000000001d548         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x13621)
000000000001d54c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d54d         align      16
000000000001d550         dd         0x00000010                                  ; Length of the record
000000000001d554         dd         0x00001ed4                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d558         db         0xd8, 0x60, 2 dup (0xff)                    ; begin 0x13630
000000000001d55c         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x13641)
000000000001d560         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d561         align      4
000000000001d564         dd         0x00000010                                  ; Length of the record
000000000001d568         dd         0x00001ee8                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d56c         db         0xe4, 0x60, 2 dup (0xff)                    ; begin 0x13650
000000000001d570         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x13685)
000000000001d574         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d575         align      8
000000000001d578         dd         0x00000010                                  ; Length of the record
000000000001d57c         dd         0x00001efc                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d580         db         0x10, 0x61, 2 dup (0xff)                    ; begin 0x13690
000000000001d584         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x136a5)
000000000001d588         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d589         align      4
000000000001d58c         dd         0x00000010                                  ; Length of the record
000000000001d590         dd         0x00001f10                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d594         db         0x1c, 0x61, 2 dup (0xff)                    ; begin 0x136b0
000000000001d598         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x136e0)
000000000001d59c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d59d         db  0x6b ; 'k'
000000000001d59e         db  0x0e ; '.'
000000000001d59f         db  0x10 ; '.'
000000000001d5a0         dd         0x00000050                                  ; Length of the record
000000000001d5a4         dd         0x00001f24                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d5a8         db         0x38, 0x61, 2 dup (0xff)                    ; begin 0x136e0
000000000001d5ac         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x13754)
000000000001d5b0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d5b1         db  0x42 ; 'B'
000000000001d5b2         db  0x0e ; '.'
000000000001d5b3         db  0x10 ; '.'
000000000001d5b4         db  0x8f ; '.'
000000000001d5b5         db  0x02 ; '.'
000000000001d5b6         db  0x42 ; 'B'
000000000001d5b7         db  0x0e ; '.'
000000000001d5b8         db  0x18 ; '.'
000000000001d5b9         db  0x8e ; '.'
000000000001d5ba         db  0x03 ; '.'
000000000001d5bb         db  0x49 ; 'I'
000000000001d5bc         db  0x0e ; '.'
000000000001d5bd         db  0x20 ; ' '
000000000001d5be         db  0x8d ; '.'
000000000001d5bf         db  0x04 ; '.'
000000000001d5c0         db  0x42 ; 'B'
000000000001d5c1         db  0x0e ; '.'
000000000001d5c2         db  0x28 ; '('
000000000001d5c3         db  0x8c ; '.'
000000000001d5c4         db  0x05 ; '.'
000000000001d5c5         db  0x44 ; 'D'
000000000001d5c6         db  0x0e ; '.'
000000000001d5c7         db  0x30 ; '0'
000000000001d5c8         db  0x86 ; '.'
000000000001d5c9         db  0x06 ; '.'
000000000001d5ca         db  0x41 ; 'A'
000000000001d5cb         db  0x0e ; '.'
000000000001d5cc         db  0x38 ; '8'
000000000001d5cd         db  0x83 ; '.'
000000000001d5ce         db  0x07 ; '.'
000000000001d5cf         db  0x4d ; 'M'
000000000001d5d0         db  0x0e ; '.'
000000000001d5d1         db  0x50 ; 'P'
000000000001d5d2         db  0x5f ; '_'
000000000001d5d3         db  0x0e ; '.'
000000000001d5d4         db  0x58 ; 'X'
000000000001d5d5         db  0x47 ; 'G'
000000000001d5d6         db  0x0e ; '.'
000000000001d5d7         db  0x60 ; '`'
000000000001d5d8         db  0x46 ; 'F'
000000000001d5d9         db  0x0e ; '.'
000000000001d5da         db  0x68 ; 'h'
000000000001d5db         db  0x44 ; 'D'
000000000001d5dc         db  0x0e ; '.'
000000000001d5dd         db  0x70 ; 'p'
000000000001d5de         db  0x58 ; 'X'
000000000001d5df         db  0x0e ; '.'
000000000001d5e0         db  0x38 ; '8'
000000000001d5e1         db  0x41 ; 'A'
000000000001d5e2         db  0x0e ; '.'
000000000001d5e3         db  0x30 ; '0'
000000000001d5e4         db  0x41 ; 'A'
000000000001d5e5         db  0x0e ; '.'
000000000001d5e6         db  0x28 ; '('
000000000001d5e7         db  0x42 ; 'B'
000000000001d5e8         db  0x0e ; '.'
000000000001d5e9         db  0x20 ; ' '
000000000001d5ea         db  0x42 ; 'B'
000000000001d5eb         db  0x0e ; '.'
000000000001d5ec         db  0x18 ; '.'
000000000001d5ed         db  0x42 ; 'B'
000000000001d5ee         db  0x0e ; '.'
000000000001d5ef         db  0x10 ; '.'
000000000001d5f0         db  0x42 ; 'B'
000000000001d5f1         db  0x0e ; '.'
000000000001d5f2         db  0x08 ; '.'
000000000001d5f3         db  0x00 ; '.'
000000000001d5f4         dd         0x00000068                                  ; Length of the record
000000000001d5f8         dd         0x00001f78                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d5fc         db         0x64, 0x61, 2 dup (0xff)                    ; begin 0x13760
000000000001d600         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x13843)
000000000001d604         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d605         db  0x42 ; 'B'
000000000001d606         db  0x0e ; '.'
000000000001d607         db  0x10 ; '.'
000000000001d608         db  0x8f ; '.'
000000000001d609         db  0x02 ; '.'
000000000001d60a         db  0x42 ; 'B'
000000000001d60b         db  0x0e ; '.'
000000000001d60c         db  0x18 ; '.'
000000000001d60d         db  0x8e ; '.'
000000000001d60e         db  0x03 ; '.'
000000000001d60f         db  0x49 ; 'I'
000000000001d610         db  0x0e ; '.'
000000000001d611         db  0x20 ; ' '
000000000001d612         db  0x8d ; '.'
000000000001d613         db  0x04 ; '.'
000000000001d614         db  0x42 ; 'B'
000000000001d615         db  0x0e ; '.'
000000000001d616         db  0x28 ; '('
000000000001d617         db  0x8c ; '.'
000000000001d618         db  0x05 ; '.'
000000000001d619         db  0x44 ; 'D'
000000000001d61a         db  0x0e ; '.'
000000000001d61b         db  0x30 ; '0'
000000000001d61c         db  0x86 ; '.'
000000000001d61d         db  0x06 ; '.'
000000000001d61e         db  0x41 ; 'A'
000000000001d61f         db  0x0e ; '.'
000000000001d620         db  0x38 ; '8'
000000000001d621         db  0x83 ; '.'
000000000001d622         db  0x07 ; '.'
000000000001d623         db  0x4d ; 'M'
000000000001d624         db  0x0e ; '.'
000000000001d625         db  0x70 ; 'p'
000000000001d626         db  0x65 ; 'e'
000000000001d627         db  0x0e ; '.'
000000000001d628         db  0x78 ; 'x'
000000000001d629         db  0x4d ; 'M'
000000000001d62a         db  0x0e ; '.'
000000000001d62b         db  0x80 ; '.'
000000000001d62c         db  0x01 ; '.'
000000000001d62d         db  0x46 ; 'F'
000000000001d62e         db  0x0e ; '.'
000000000001d62f         db  0x88 ; '.'
000000000001d630         db  0x01 ; '.'
000000000001d631         db  0x42 ; 'B'
000000000001d632         db  0x0e ; '.'
000000000001d633         db  0x90 ; '.'
000000000001d634         db  0x01 ; '.'
000000000001d635         db  0x5e ; '^'
000000000001d636         db  0x0e ; '.'
000000000001d637         db  0x70 ; 'p'
000000000001d638         db  0x56 ; 'V'
000000000001d639         db  0x0e ; '.'
000000000001d63a         db  0x78 ; 'x'
000000000001d63b         db  0x43 ; 'C'
000000000001d63c         db  0x0e ; '.'
000000000001d63d         db  0x80 ; '.'
000000000001d63e         db  0x01 ; '.'
000000000001d63f         db  0x43 ; 'C'
000000000001d640         db  0x0e ; '.'
000000000001d641         db  0x88 ; '.'
000000000001d642         db  0x01 ; '.'
000000000001d643         db  0x56 ; 'V'
000000000001d644         db  0x0e ; '.'
000000000001d645         db  0x90 ; '.'
000000000001d646         db  0x01 ; '.'
000000000001d647         db  0x52 ; 'R'
000000000001d648         db  0x0e ; '.'
000000000001d649         db  0x70 ; 'p'
000000000001d64a         db  0x5b ; '['
000000000001d64b         db  0x0e ; '.'
000000000001d64c         db  0x38 ; '8'
000000000001d64d         db  0x41 ; 'A'
000000000001d64e         db  0x0e ; '.'
000000000001d64f         db  0x30 ; '0'
000000000001d650         db  0x41 ; 'A'
000000000001d651         db  0x0e ; '.'
000000000001d652         db  0x28 ; '('
000000000001d653         db  0x42 ; 'B'
000000000001d654         db  0x0e ; '.'
000000000001d655         db  0x20 ; ' '
000000000001d656         db  0x42 ; 'B'
000000000001d657         db  0x0e ; '.'
000000000001d658         db  0x18 ; '.'
000000000001d659         db  0x42 ; 'B'
000000000001d65a         db  0x0e ; '.'
000000000001d65b         db  0x10 ; '.'
000000000001d65c         db  0x42 ; 'B'
000000000001d65d         db  0x0e ; '.'
000000000001d65e         db  0x08 ; '.'
000000000001d65f         db  0x00 ; '.'
000000000001d660         dd         0x00000010                                  ; Length of the record
000000000001d664         dd         0x00001fe4                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d668         db         0xe8, 0x61, 2 dup (0xff)                    ; begin 0x13850
000000000001d66c         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x1385a)
000000000001d670         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d671         align      4
000000000001d674         dd         0x00000028                                  ; Length of the record
000000000001d678         dd         0x00001ff8                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d67c         db         0xe4, 0x61, 2 dup (0xff)                    ; begin 0x13860
000000000001d680         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x138f3)
000000000001d684         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d685         db  0x48 ; 'H'
000000000001d686         db  0x0e ; '.'
000000000001d687         db  0x10 ; '.'
000000000001d688         db  0x8c ; '.'
000000000001d689         db  0x02 ; '.'
000000000001d68a         db  0x48 ; 'H'
000000000001d68b         db  0x0e ; '.'
000000000001d68c         db  0x18 ; '.'
000000000001d68d         db  0x86 ; '.'
000000000001d68e         db  0x03 ; '.'
000000000001d68f         db  0x41 ; 'A'
000000000001d690         db  0x0e ; '.'
000000000001d691         db  0x20 ; ' '
000000000001d692         db  0x83 ; '.'
000000000001d693         db  0x04 ; '.'
000000000001d694         db  0x02 ; '.'
000000000001d695         db  0x74 ; 't'
000000000001d696         db  0x0e ; '.'
000000000001d697         db  0x18 ; '.'
000000000001d698         db  0x4b ; 'K'
000000000001d699         db  0x0e ; '.'
000000000001d69a         db  0x10 ; '.'
000000000001d69b         db  0x42 ; 'B'
000000000001d69c         db  0x0e ; '.'
000000000001d69d         db  0x08 ; '.'
000000000001d69e         db  0x00 ; '.'
000000000001d69f         db  0x00 ; '.'
000000000001d6a0         dd         0x00000010                                  ; Length of the record
000000000001d6a4         dd         0x00002024                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d6a8         db         0x58, 0x62, 2 dup (0xff)                    ; begin 0x13900
000000000001d6ac         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x13913)
000000000001d6b0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d6b1         align      4
000000000001d6b4         dd         0x00000010                                  ; Length of the record
000000000001d6b8         dd         0x00002038                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d6bc         db         0x64, 0x62, 2 dup (0xff)                    ; begin 0x13920
000000000001d6c0         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x1392c)
000000000001d6c4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d6c5         align      8
000000000001d6c8         dd         0x00000010                                  ; Length of the record
000000000001d6cc         dd         0x0000204c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d6d0         db         0x60, 0x62, 2 dup (0xff)                    ; begin 0x13930
000000000001d6d4         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x13948)
000000000001d6d8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d6d9         align      4
000000000001d6dc         dd         0x00000010                                  ; Length of the record
000000000001d6e0         dd         0x00002060                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d6e4         db         0x6c, 0x62, 2 dup (0xff)                    ; begin 0x13950
000000000001d6e8         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x13964)
000000000001d6ec         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d6ed         align      16
000000000001d6f0         dd         0x00000018                                  ; Length of the record
000000000001d6f4         dd         0x00002074                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d6f8         db         0x78, 0x62, 2 dup (0xff)                    ; begin 0x13970
000000000001d6fc         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x139fe)
000000000001d700         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d701         db  0x44 ; 'D'
000000000001d702         db  0x0e ; '.'
000000000001d703         db  0x50 ; 'P'
000000000001d704         db  0x02 ; '.'
000000000001d705         db  0x7f ; '.'
000000000001d706         db  0x0a ; '.'
000000000001d707         db  0x0e ; '.'
000000000001d708         db  0x08 ; '.'
000000000001d709         db  0x41 ; 'A'
000000000001d70a         db  0x0b ; '.'
000000000001d70b         db  0x00 ; '.'
000000000001d70c         dd         0x00000018                                  ; Length of the record
000000000001d710         dd         0x00002090                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d714         db         0xec, 0x62, 2 dup (0xff)                    ; begin 0x13a00
000000000001d718         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x13a8a)
000000000001d71c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d71d         db  0x44 ; 'D'
000000000001d71e         db  0x0e ; '.'
000000000001d71f         db  0x50 ; 'P'
000000000001d720         db  0x02 ; '.'
000000000001d721         db  0x7b ; '{'
000000000001d722         db  0x0a ; '.'
000000000001d723         db  0x0e ; '.'
000000000001d724         db  0x08 ; '.'
000000000001d725         db  0x41 ; 'A'
000000000001d726         db  0x0b ; '.'
000000000001d727         db  0x00 ; '.'
000000000001d728         dd         0x00000010                                  ; Length of the record
000000000001d72c         dd         0x000020ac                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d730         db         0x60, 0x63, 2 dup (0xff)                    ; begin 0x13a90
000000000001d734         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x13a9c)
000000000001d738         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d739         align      4
000000000001d73c         dd         0x00000010                                  ; Length of the record
000000000001d740         dd         0x000020c0                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d744         db         0x5c, 0x63, 2 dup (0xff)                    ; begin 0x13aa0
000000000001d748         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x13aaf)
000000000001d74c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d74d         align      16
000000000001d750         dd         0x00000018                                  ; Length of the record
000000000001d754         dd         0x000020d4                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d758         db         0x58, 0x63, 2 dup (0xff)                    ; begin 0x13ab0
000000000001d75c         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x13b48)
000000000001d760         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d761         db  0x44 ; 'D'
000000000001d762         db  0x0e ; '.'
000000000001d763         db  0x50 ; 'P'
000000000001d764         db  0x02 ; '.'
000000000001d765         db  0x8e ; '.'
000000000001d766         db  0x0a ; '.'
000000000001d767         db  0x0e ; '.'
000000000001d768         db  0x08 ; '.'
000000000001d769         db  0x41 ; 'A'
000000000001d76a         db  0x0b ; '.'
000000000001d76b         db  0x00 ; '.'
000000000001d76c         dd         0x00000010                                  ; Length of the record
000000000001d770         dd         0x000020f0                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d774         db         0xdc, 0x63, 2 dup (0xff)                    ; begin 0x13b50
000000000001d778         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x13b60)
000000000001d77c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d77d         align      128
000000000001d780         dd         0x00000010                                  ; Length of the record
000000000001d784         dd         0x00002104                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d788         db         0xd8, 0x63, 2 dup (0xff)                    ; begin 0x13b60
000000000001d78c         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x13b71)
000000000001d790         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d791         align      4
000000000001d794         dd         0x00000010                                  ; Length of the record
000000000001d798         dd         0x00002118                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d79c         db         0xe4, 0x63, 2 dup (0xff)                    ; begin 0x13b80
000000000001d7a0         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x13b8a)
000000000001d7a4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d7a5         align      8
000000000001d7a8         dd         0x00000018                                  ; Length of the record
000000000001d7ac         dd         0x0000212c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d7b0         db         0xe0, 0x63, 2 dup (0xff)                    ; begin 0x13b90
000000000001d7b4         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x13c1e)
000000000001d7b8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d7b9         db  0x44 ; 'D'
000000000001d7ba         db  0x0e ; '.'
000000000001d7bb         db  0x50 ; 'P'
000000000001d7bc         db  0x02 ; '.'
000000000001d7bd         db  0x7f ; '.'
000000000001d7be         db  0x0a ; '.'
000000000001d7bf         db  0x0e ; '.'
000000000001d7c0         db  0x08 ; '.'
000000000001d7c1         db  0x41 ; 'A'
000000000001d7c2         db  0x0b ; '.'
000000000001d7c3         db  0x00 ; '.'
000000000001d7c4         dd         0x00000018                                  ; Length of the record
000000000001d7c8         dd         0x00002148                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d7cc         db         0x54, 0x64, 2 dup (0xff)                    ; begin 0x13c20
000000000001d7d0         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x13cb1)
000000000001d7d4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d7d5         db  0x44 ; 'D'
000000000001d7d6         db  0x0e ; '.'
000000000001d7d7         db  0x50 ; 'P'
000000000001d7d8         db  0x02 ; '.'
000000000001d7d9         db  0x82 ; '.'
000000000001d7da         db  0x0a ; '.'
000000000001d7db         db  0x0e ; '.'
000000000001d7dc         db  0x08 ; '.'
000000000001d7dd         db  0x41 ; 'A'
000000000001d7de         db  0x0b ; '.'
000000000001d7df         db  0x00 ; '.'
000000000001d7e0         dd         0x00000010                                  ; Length of the record
000000000001d7e4         dd         0x00002164                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d7e8         db         0xd8, 0x64, 2 dup (0xff)                    ; begin 0x13cc0
000000000001d7ec         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x13ccc)
000000000001d7f0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d7f1         align      4
000000000001d7f4         dd         0x00000010                                  ; Length of the record
000000000001d7f8         dd         0x00002178                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d7fc         db         0xd4, 0x64, 2 dup (0xff)                    ; begin 0x13cd0
000000000001d800         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x13ce7)
000000000001d804         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d805         align      8
000000000001d808         dd         0x00000010                                  ; Length of the record
000000000001d80c         dd         0x0000218c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d810         db         0xe0, 0x64, 2 dup (0xff)                    ; begin 0x13cf0
000000000001d814         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x13d03)
000000000001d818         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d819         align      4
000000000001d81c         dd         0x00000010                                  ; Length of the record
000000000001d820         dd         0x000021a0                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d824         db         0xec, 0x64, 2 dup (0xff)                    ; begin 0x13d10
000000000001d828         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x13d1c)
000000000001d82c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d82d         align      16
000000000001d830         dd         0x00000010                                  ; Length of the record
000000000001d834         dd         0x000021b4                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d838         db         0xe8, 0x64, 2 dup (0xff)                    ; begin 0x13d20
000000000001d83c         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x13d34)
000000000001d840         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d841         align      4
000000000001d844         dd         0x00000010                                  ; Length of the record
000000000001d848         dd         0x000021c8                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d84c         db         0xf4, 0x64, 2 dup (0xff)                    ; begin 0x13d40
000000000001d850         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x13d53)
000000000001d854         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d855         align      8
000000000001d858         dd         0x00000014                                  ; Length of the record
000000000001d85c         dd         0x000021dc                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d860         db         0x00, 0x65, 2 dup (0xff)                    ; begin 0x13d60
000000000001d864         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x13d78)
000000000001d868         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d869         align      16
000000000001d870         dd         0x00000038                                  ; Length of the record
000000000001d874         dd         0x000021f4                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d878         db         0x08, 0x65, 2 dup (0xff)                    ; begin 0x13d80
000000000001d87c         db         0x27, 0x01, 2 dup (0x00)                    ; length 0x127 (end at 0x13ea7)
000000000001d880         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d881         db  0x42 ; 'B'
000000000001d882         db  0x0e ; '.'
000000000001d883         db  0x10 ; '.'
000000000001d884         db  0x8d ; '.'
000000000001d885         db  0x02 ; '.'
000000000001d886         db  0x42 ; 'B'
000000000001d887         db  0x0e ; '.'
000000000001d888         db  0x18 ; '.'
000000000001d889         db  0x8c ; '.'
000000000001d88a         db  0x03 ; '.'
000000000001d88b         db  0x44 ; 'D'
000000000001d88c         db  0x0e ; '.'
000000000001d88d         db  0x20 ; ' '
000000000001d88e         db  0x86 ; '.'
000000000001d88f         db  0x04 ; '.'
000000000001d890         db  0x41 ; 'A'
000000000001d891         db  0x0e ; '.'
000000000001d892         db  0x28 ; '('
000000000001d893         db  0x83 ; '.'
000000000001d894         db  0x05 ; '.'
000000000001d895         db  0x4f ; 'O'
000000000001d896         db  0x0e ; '.'
000000000001d897         db  0xe0 ; '.'
000000000001d898         db  0x02 ; '.'
000000000001d899         db  0x02 ; '.'
000000000001d89a         db  0xb5 ; '.'
000000000001d89b         db  0x0a ; '.'
000000000001d89c         db  0x0e ; '.'
000000000001d89d         db  0x28 ; '('
000000000001d89e         db  0x41 ; 'A'
000000000001d89f         db  0x0e ; '.'
000000000001d8a0         db  0x20 ; ' '
000000000001d8a1         db  0x41 ; 'A'
000000000001d8a2         db  0x0e ; '.'
000000000001d8a3         db  0x18 ; '.'
000000000001d8a4         db  0x42 ; 'B'
000000000001d8a5         db  0x0e ; '.'
000000000001d8a6         db  0x10 ; '.'
000000000001d8a7         db  0x42 ; 'B'
000000000001d8a8         db  0x0e ; '.'
000000000001d8a9         db  0x08 ; '.'
000000000001d8aa         db  0x45 ; 'E'
000000000001d8ab         db  0x0b ; '.'
000000000001d8ac         dd         0x0000005c                                  ; Length of the record
000000000001d8b0         dd         0x00002230                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d8b4         db         0xfc, 0x65, 2 dup (0xff)                    ; begin 0x13eb0
000000000001d8b8         db         0x92, 3 dup (0x00)                          ; length 0x92 (end at 0x13f42)
000000000001d8bc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d8bd         db  0x42 ; 'B'
000000000001d8be         db  0x0e ; '.'
000000000001d8bf         db  0x10 ; '.'
000000000001d8c0         db  0x8f ; '.'
000000000001d8c1         db  0x02 ; '.'
000000000001d8c2         db  0x42 ; 'B'
000000000001d8c3         db  0x0e ; '.'
000000000001d8c4         db  0x18 ; '.'
000000000001d8c5         db  0x8e ; '.'
000000000001d8c6         db  0x03 ; '.'
000000000001d8c7         db  0x45 ; 'E'
000000000001d8c8         db  0x0e ; '.'
000000000001d8c9         db  0x20 ; ' '
000000000001d8ca         db  0x8d ; '.'
000000000001d8cb         db  0x04 ; '.'
000000000001d8cc         db  0x42 ; 'B'
000000000001d8cd         db  0x0e ; '.'
000000000001d8ce         db  0x28 ; '('
000000000001d8cf         db  0x8c ; '.'
000000000001d8d0         db  0x05 ; '.'
000000000001d8d1         db  0x41 ; 'A'
000000000001d8d2         db  0x0e ; '.'
000000000001d8d3         db  0x30 ; '0'
000000000001d8d4         db  0x86 ; '.'
000000000001d8d5         db  0x06 ; '.'
000000000001d8d6         db  0x41 ; 'A'
000000000001d8d7         db  0x0e ; '.'
000000000001d8d8         db  0x38 ; '8'
000000000001d8d9         db  0x83 ; '.'
000000000001d8da         db  0x07 ; '.'
000000000001d8db         db  0x4a ; 'J'
000000000001d8dc         db  0x0e ; '.'
000000000001d8dd         db  0x50 ; 'P'
000000000001d8de         db  0x76 ; 'v'
000000000001d8df         db  0x0a ; '.'
000000000001d8e0         db  0x0e ; '.'
000000000001d8e1         db  0x38 ; '8'
000000000001d8e2         db  0x43 ; 'C'
000000000001d8e3         db  0x0e ; '.'
000000000001d8e4         db  0x30 ; '0'
000000000001d8e5         db  0x41 ; 'A'
000000000001d8e6         db  0x0e ; '.'
000000000001d8e7         db  0x28 ; '('
000000000001d8e8         db  0x42 ; 'B'
000000000001d8e9         db  0x0e ; '.'
000000000001d8ea         db  0x20 ; ' '
000000000001d8eb         db  0x42 ; 'B'
000000000001d8ec         db  0x0e ; '.'
000000000001d8ed         db  0x18 ; '.'
000000000001d8ee         db  0x42 ; 'B'
000000000001d8ef         db  0x0e ; '.'
000000000001d8f0         db  0x10 ; '.'
000000000001d8f1         db  0x42 ; 'B'
000000000001d8f2         db  0x0e ; '.'
000000000001d8f3         db  0x08 ; '.'
000000000001d8f4         db  0x47 ; 'G'
000000000001d8f5         db  0x0b ; '.'
000000000001d8f6         db  0x5a ; 'Z'
000000000001d8f7         db  0x0e ; '.'
000000000001d8f8         db  0x38 ; '8'
000000000001d8f9         db  0x4a ; 'J'
000000000001d8fa         db  0x0e ; '.'
000000000001d8fb         db  0x30 ; '0'
000000000001d8fc         db  0x41 ; 'A'
000000000001d8fd         db  0x0e ; '.'
000000000001d8fe         db  0x28 ; '('
000000000001d8ff         db  0x42 ; 'B'
000000000001d900         db  0x0e ; '.'
000000000001d901         db  0x20 ; ' '
000000000001d902         db  0x42 ; 'B'
000000000001d903         db  0x0e ; '.'
000000000001d904         db  0x18 ; '.'
000000000001d905         db  0x42 ; 'B'
000000000001d906         db  0x0e ; '.'
000000000001d907         db  0x10 ; '.'
000000000001d908         db  0x42 ; 'B'
000000000001d909         db  0x0e ; '.'
000000000001d90a         db  0x08 ; '.'
000000000001d90b         db  0x00 ; '.'
000000000001d90c         dd         0x00000010                                  ; Length of the record
000000000001d910         dd         0x00002290                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d914         db         0x3c, 0x66, 2 dup (0xff)                    ; begin 0x13f50
000000000001d918         db         0x12, 3 dup (0x00)                          ; length 0x12 (end at 0x13f62)
000000000001d91c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d91d         align      32
000000000001d920         dd         0x00000110                                  ; Length of the record
000000000001d924         dd         0x000022a4                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001d928         db         0x48, 0x66, 2 dup (0xff)                    ; begin 0x13f70
000000000001d92c         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x14387)
000000000001d930         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001d931         db  0x42 ; 'B'
000000000001d932         db  0x0e ; '.'
000000000001d933         db  0x10 ; '.'
000000000001d934         db  0x8f ; '.'
000000000001d935         db  0x02 ; '.'
000000000001d936         db  0x42 ; 'B'
000000000001d937         db  0x0e ; '.'
000000000001d938         db  0x18 ; '.'
000000000001d939         db  0x8e ; '.'
000000000001d93a         db  0x03 ; '.'
000000000001d93b         db  0x42 ; 'B'
000000000001d93c         db  0x0e ; '.'
000000000001d93d         db  0x20 ; ' '
000000000001d93e         db  0x8d ; '.'
000000000001d93f         db  0x04 ; '.'
000000000001d940         db  0x42 ; 'B'
000000000001d941         db  0x0e ; '.'
000000000001d942         db  0x28 ; '('
000000000001d943         db  0x8c ; '.'
000000000001d944         db  0x05 ; '.'
000000000001d945         db  0x44 ; 'D'
000000000001d946         db  0x0e ; '.'
000000000001d947         db  0x30 ; '0'
000000000001d948         db  0x86 ; '.'
000000000001d949         db  0x06 ; '.'
000000000001d94a         db  0x41 ; 'A'
000000000001d94b         db  0x0e ; '.'
000000000001d94c         db  0x38 ; '8'
000000000001d94d         db  0x83 ; '.'
000000000001d94e         db  0x07 ; '.'
000000000001d94f         db  0x4a ; 'J'
000000000001d950         db  0x0e ; '.'
000000000001d951         db  0x60 ; '`'
000000000001d952         db  0x02 ; '.'
000000000001d953         db  0xdd ; '.'
000000000001d954         db  0x0e ; '.'
000000000001d955         db  0x68 ; 'h'
000000000001d956         db  0x57 ; 'W'
000000000001d957         db  0x0e ; '.'
000000000001d958         db  0x70 ; 'p'
000000000001d959         db  0x42 ; 'B'
000000000001d95a         db  0x0e ; '.'
000000000001d95b         db  0x78 ; 'x'
000000000001d95c         db  0x42 ; 'B'
000000000001d95d         db  0x0e ; '.'
000000000001d95e         db  0x80 ; '.'
000000000001d95f         db  0x01 ; '.'
000000000001d960         db  0x42 ; 'B'
000000000001d961         db  0x0e ; '.'
000000000001d962         db  0x88 ; '.'
000000000001d963         db  0x01 ; '.'
000000000001d964         db  0x42 ; 'B'
000000000001d965         db  0x0e ; '.'
000000000001d966         db  0x90 ; '.'
000000000001d967         db  0x01 ; '.'
000000000001d968         db  0x53 ; 'S'
000000000001d969         db  0x0e ; '.'
000000000001d96a         db  0x60 ; '`'
000000000001d96b         db  0x44 ; 'D'
000000000001d96c         db  0x0a ; '.'
000000000001d96d         db  0x0e ; '.'
000000000001d96e         db  0x38 ; '8'
000000000001d96f         db  0x41 ; 'A'
000000000001d970         db  0x0e ; '.'
000000000001d971         db  0x30 ; '0'
000000000001d972         db  0x41 ; 'A'
000000000001d973         db  0x0e ; '.'
000000000001d974         db  0x28 ; '('
000000000001d975         db  0x42 ; 'B'
000000000001d976         db  0x0e ; '.'
000000000001d977         db  0x20 ; ' '
000000000001d978         db  0x42 ; 'B'
000000000001d979         db  0x0e ; '.'
000000000001d97a         db  0x18 ; '.'
000000000001d97b         db  0x42 ; 'B'
000000000001d97c         db  0x0e ; '.'
000000000001d97d         db  0x10 ; '.'
000000000001d97e         db  0x42 ; 'B'
000000000001d97f         db  0x0e ; '.'
000000000001d980         db  0x08 ; '.'
000000000001d981         db  0x44 ; 'D'
000000000001d982         db  0x0b ; '.'
000000000001d983         db  0x02 ; '.'
000000000001d984         db  0x78 ; 'x'
000000000001d985         db  0x0a ; '.'
000000000001d986         db  0x0e ; '.'
000000000001d987         db  0x68 ; 'h'
000000000001d988         db  0x48 ; 'H'
000000000001d989         db  0x0b ; '.'
000000000001d98a         db  0x5a ; 'Z'
000000000001d98b         db  0x0a ; '.'
000000000001d98c         db  0x0e ; '.'
000000000001d98d         db  0x38 ; '8'
000000000001d98e         db  0x47 ; 'G'
000000000001d98f         db  0x0e ; '.'
000000000001d990         db  0x30 ; '0'
000000000001d991         db  0x41 ; 'A'
000000000001d992         db  0x0e ; '.'
000000000001d993         db  0x28 ; '('
000000000001d994         db  0x42 ; 'B'
000000000001d995         db  0x0e ; '.'
000000000001d996         db  0x20 ; ' '
000000000001d997         db  0x42 ; 'B'
000000000001d998         db  0x0e ; '.'
000000000001d999         db  0x18 ; '.'
000000000001d99a         db  0x42 ; 'B'
000000000001d99b         db  0x0e ; '.'
000000000001d99c         db  0x10 ; '.'
000000000001d99d         db  0x42 ; 'B'
000000000001d99e         db  0x0e ; '.'
000000000001d99f         db  0x08 ; '.'
000000000001d9a0         db  0x56 ; 'V'
000000000001d9a1         db  0x0b ; '.'
000000000001d9a2         db  0x5e ; '^'
000000000001d9a3         db  0x0a ; '.'
000000000001d9a4         db  0x0e ; '.'
000000000001d9a5         db  0x38 ; '8'
000000000001d9a6         db  0x52 ; 'R'
000000000001d9a7         db  0x0e ; '.'
000000000001d9a8         db  0x30 ; '0'
000000000001d9a9         db  0x41 ; 'A'
000000000001d9aa         db  0x0e ; '.'
000000000001d9ab         db  0x28 ; '('
000000000001d9ac         db  0x42 ; 'B'
000000000001d9ad         db  0x0e ; '.'
000000000001d9ae         db  0x20 ; ' '
000000000001d9af         db  0x42 ; 'B'
000000000001d9b0         db  0x0e ; '.'
000000000001d9b1         db  0x18 ; '.'
000000000001d9b2         db  0x42 ; 'B'
000000000001d9b3         db  0x0e ; '.'
000000000001d9b4         db  0x10 ; '.'
000000000001d9b5         db  0x42 ; 'B'
000000000001d9b6         db  0x0e ; '.'
000000000001d9b7         db  0x08 ; '.'
000000000001d9b8         db  0x4f ; 'O'
000000000001d9b9         db  0x0b ; '.'
000000000001d9ba         db  0x62 ; 'b'
000000000001d9bb         db  0x0a ; '.'
000000000001d9bc         db  0x0e ; '.'
000000000001d9bd         db  0x38 ; '8'
000000000001d9be         db  0x50 ; 'P'
000000000001d9bf         db  0x0e ; '.'
000000000001d9c0         db  0x30 ; '0'
000000000001d9c1         db  0x41 ; 'A'
000000000001d9c2         db  0x0e ; '.'
000000000001d9c3         db  0x28 ; '('
000000000001d9c4         db  0x42 ; 'B'
000000000001d9c5         db  0x0e ; '.'
000000000001d9c6         db  0x20 ; ' '
000000000001d9c7         db  0x42 ; 'B'
000000000001d9c8         db  0x0e ; '.'
000000000001d9c9         db  0x18 ; '.'
000000000001d9ca         db  0x42 ; 'B'
000000000001d9cb         db  0x0e ; '.'
000000000001d9cc         db  0x10 ; '.'
000000000001d9cd         db  0x42 ; 'B'
000000000001d9ce         db  0x0e ; '.'
000000000001d9cf         db  0x08 ; '.'
000000000001d9d0         db  0x55 ; 'U'
000000000001d9d1         db  0x0b ; '.'
000000000001d9d2         db  0x66 ; 'f'
000000000001d9d3         db  0x0e ; '.'
000000000001d9d4         db  0x68 ; 'h'
000000000001d9d5         db  0x42 ; 'B'
000000000001d9d6         db  0x0e ; '.'
000000000001d9d7         db  0x70 ; 'p'
000000000001d9d8         db  0x5c ; '\'
000000000001d9d9         db  0x0e ; '.'
000000000001d9da         db  0x68 ; 'h'
000000000001d9db         db  0x41 ; 'A'
000000000001d9dc         db  0x0e ; '.'
000000000001d9dd         db  0x60 ; '`'
000000000001d9de         db  0x44 ; 'D'
000000000001d9df         db  0x0a ; '.'
000000000001d9e0         db  0x0e ; '.'
000000000001d9e1         db  0x38 ; '8'
000000000001d9e2         db  0x41 ; 'A'
000000000001d9e3         db  0x0e ; '.'
000000000001d9e4         db  0x30 ; '0'
000000000001d9e5         db  0x41 ; 'A'
000000000001d9e6         db  0x0e ; '.'
000000000001d9e7         db  0x28 ; '('
000000000001d9e8         db  0x42 ; 'B'
000000000001d9e9         db  0x0e ; '.'
000000000001d9ea         db  0x20 ; ' '
000000000001d9eb         db  0x42 ; 'B'
000000000001d9ec         db  0x0e ; '.'
000000000001d9ed         db  0x18 ; '.'
000000000001d9ee         db  0x42 ; 'B'
000000000001d9ef         db  0x0e ; '.'
000000000001d9f0         db  0x10 ; '.'
000000000001d9f1         db  0x42 ; 'B'
000000000001d9f2         db  0x0e ; '.'
000000000001d9f3         db  0x08 ; '.'
000000000001d9f4         db  0x45 ; 'E'
000000000001d9f5         db  0x0b ; '.'
000000000001d9f6         db  0x68 ; 'h'
000000000001d9f7         db  0x0a ; '.'
000000000001d9f8         db  0x0e ; '.'
000000000001d9f9         db  0x68 ; 'h'
000000000001d9fa         db  0x48 ; 'H'
000000000001d9fb         db  0x0b ; '.'
000000000001d9fc         db  0x72 ; 'r'
000000000001d9fd         db  0x0e ; '.'
000000000001d9fe         db  0x68 ; 'h'
000000000001d9ff         db  0x45 ; 'E'
000000000001da00         db  0x0e ; '.'
000000000001da01         db  0x70 ; 'p'
000000000001da02         db  0x42 ; 'B'
000000000001da03         db  0x0e ; '.'
000000000001da04         db  0x78 ; 'x'
000000000001da05         db  0x42 ; 'B'
000000000001da06         db  0x0e ; '.'
000000000001da07         db  0x80 ; '.'
000000000001da08         db  0x01 ; '.'
000000000001da09         db  0x5e ; '^'
000000000001da0a         db  0x0e ; '.'
000000000001da0b         db  0x60 ; '`'
000000000001da0c         db  0x44 ; 'D'
000000000001da0d         db  0x0a ; '.'
000000000001da0e         db  0x0e ; '.'
000000000001da0f         db  0x38 ; '8'
000000000001da10         db  0x41 ; 'A'
000000000001da11         db  0x0e ; '.'
000000000001da12         db  0x30 ; '0'
000000000001da13         db  0x41 ; 'A'
000000000001da14         db  0x0e ; '.'
000000000001da15         db  0x28 ; '('
000000000001da16         db  0x42 ; 'B'
000000000001da17         db  0x0e ; '.'
000000000001da18         db  0x20 ; ' '
000000000001da19         db  0x42 ; 'B'
000000000001da1a         db  0x0e ; '.'
000000000001da1b         db  0x18 ; '.'
000000000001da1c         db  0x42 ; 'B'
000000000001da1d         db  0x0e ; '.'
000000000001da1e         db  0x10 ; '.'
000000000001da1f         db  0x42 ; 'B'
000000000001da20         db  0x0e ; '.'
000000000001da21         db  0x08 ; '.'
000000000001da22         db  0x41 ; 'A'
000000000001da23         db  0x0b ; '.'
000000000001da24         db  0x79 ; 'y'
000000000001da25         db  0x0a ; '.'
000000000001da26         db  0x0e ; '.'
000000000001da27         db  0x68 ; 'h'
000000000001da28         db  0x42 ; 'B'
000000000001da29         db  0x0e ; '.'
000000000001da2a         db  0x70 ; 'p'
000000000001da2b         db  0x42 ; 'B'
000000000001da2c         db  0x0e ; '.'
000000000001da2d         db  0x78 ; 'x'
000000000001da2e         db  0x42 ; 'B'
000000000001da2f         db  0x0e ; '.'
000000000001da30         db  0x80 ; '.'
000000000001da31         db  0x01 ; '.'
000000000001da32         db  0x51 ; 'Q'
000000000001da33         db  0x0b ; '.'
000000000001da34         dd         0x00000010                                  ; Length of the record
000000000001da38         dd         0x000023b8                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001da3c         db         0x54, 0x69, 2 dup (0xff)                    ; begin 0x14390
000000000001da40         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x143b0)
000000000001da44         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001da45         align      8
000000000001da48         dd         0x00000018                                  ; Length of the record
000000000001da4c         dd         0x000023cc                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001da50         db         0x60, 0x69, 2 dup (0xff)                    ; begin 0x143b0
000000000001da54         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x14428)
000000000001da58         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001da59         db  0x44 ; 'D'
000000000001da5a         db  0x0e ; '.'
000000000001da5b         db  0x70 ; 'p'
000000000001da5c         db  0x02 ; '.'
000000000001da5d         db  0x60 ; '`'
000000000001da5e         db  0x0a ; '.'
000000000001da5f         db  0x0e ; '.'
000000000001da60         db  0x08 ; '.'
000000000001da61         db  0x41 ; 'A'
000000000001da62         db  0x0b ; '.'
000000000001da63         db  0x00 ; '.'
000000000001da64         dd         0x00000028                                  ; Length of the record
000000000001da68         dd         0x000023e8                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001da6c         db         0xc4, 0x69, 2 dup (0xff)                    ; begin 0x14430
000000000001da70         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x14505)
000000000001da74         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001da75         db  0x41 ; 'A'
000000000001da76         db  0x0e ; '.'
000000000001da77         db  0x10 ; '.'
000000000001da78         db  0x86 ; '.'
000000000001da79         db  0x02 ; '.'
000000000001da7a         db  0x41 ; 'A'
000000000001da7b         db  0x0e ; '.'
000000000001da7c         db  0x18 ; '.'
000000000001da7d         db  0x83 ; '.'
000000000001da7e         db  0x03 ; '.'
000000000001da7f         db  0x50 ; 'P'
000000000001da80         db  0x0e ; '.'
000000000001da81         db  0xd0 ; '.'
000000000001da82         db  0x01 ; '.'
000000000001da83         db  0x02 ; '.'
000000000001da84         db  0xab ; '.'
000000000001da85         db  0x0a ; '.'
000000000001da86         db  0x0e ; '.'
000000000001da87         db  0x18 ; '.'
000000000001da88         db  0x41 ; 'A'
000000000001da89         db  0x0e ; '.'
000000000001da8a         db  0x10 ; '.'
000000000001da8b         db  0x41 ; 'A'
000000000001da8c         db  0x0e ; '.'
000000000001da8d         db  0x08 ; '.'
000000000001da8e         db  0x41 ; 'A'
000000000001da8f         db  0x0b ; '.'
000000000001da90         dd         0x0000001c                                  ; Length of the record
000000000001da94         dd         0x00002414                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001da98         db         0x78, 0x6a, 2 dup (0xff)                    ; begin 0x14510
000000000001da9c         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x14590)
000000000001daa0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001daa1         db  0x41 ; 'A'
000000000001daa2         db  0x0e ; '.'
000000000001daa3         db  0x10 ; '.'
000000000001daa4         db  0x83 ; '.'
000000000001daa5         db  0x02 ; '.'
000000000001daa6         db  0x02 ; '.'
000000000001daa7         db  0x7a ; 'z'
000000000001daa8         db  0x0e ; '.'
000000000001daa9         db  0x08 ; '.'
000000000001daaa         db  0x00 ; '.'
000000000001daab         db  0x00 ; '.'
000000000001daac         db  0x00 ; '.'
000000000001daad         db  0x00 ; '.'
000000000001daae         db  0x00 ; '.'
000000000001daaf         db  0x00 ; '.'
000000000001dab0         dd         0x00000018                                  ; Length of the record
000000000001dab4         dd         0x00002434                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001dab8         db         0xd8, 0x6a, 2 dup (0xff)                    ; begin 0x14590
000000000001dabc         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x145aa)
000000000001dac0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001dac1         db  0x41 ; 'A'
000000000001dac2         db  0x0e ; '.'
000000000001dac3         db  0x10 ; '.'
000000000001dac4         db  0x83 ; '.'
000000000001dac5         db  0x02 ; '.'
000000000001dac6         db  0x53 ; 'S'
000000000001dac7         db  0x0a ; '.'
000000000001dac8         db  0x0e ; '.'
000000000001dac9         db  0x08 ; '.'
000000000001daca         db  0x41 ; 'A'
000000000001dacb         db  0x0b ; '.'
000000000001dacc         dd         0x00000010                                  ; Length of the record
000000000001dad0         dd         0x00002450                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001dad4         db         0xdc, 0x6a, 2 dup (0xff)                    ; begin 0x145b0
000000000001dad8         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x145d4)
000000000001dadc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001dadd         db  0x5f ; '_'
000000000001dade         db  0x0e ; '.'
000000000001dadf         db  0x10 ; '.'
000000000001dae0         dd         0x00000010                                  ; Length of the record
000000000001dae4         dd         0x00002464                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001dae8         db         0xf8, 0x6a, 2 dup (0xff)                    ; begin 0x145e0
000000000001daec         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x145e2)
000000000001daf0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001daf1         align      4
000000000001daf4         dd         0x00000020                                  ; Length of the record
000000000001daf8         dd         0x00002478                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001dafc         db         0xf4, 0x6a, 2 dup (0xff)                    ; begin 0x145f0
000000000001db00         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x14626)
000000000001db04         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001db05         db  0x44 ; 'D'
000000000001db06         db  0x0e ; '.'
000000000001db07         db  0x10 ; '.'
000000000001db08         db  0x83 ; '.'
000000000001db09         db  0x02 ; '.'
000000000001db0a         db  0x5d ; ']'
000000000001db0b         db  0x0a ; '.'
000000000001db0c         db  0x0e ; '.'
000000000001db0d         db  0x08 ; '.'
000000000001db0e         db  0x47 ; 'G'
000000000001db0f         db  0x0b ; '.'
000000000001db10         db  0x48 ; 'H'
000000000001db11         db  0x0a ; '.'
000000000001db12         db  0x0e ; '.'
000000000001db13         db  0x08 ; '.'
000000000001db14         db  0x41 ; 'A'
000000000001db15         db  0x0b ; '.'
000000000001db16         db  0x00 ; '.'
000000000001db17         db  0x00 ; '.'
000000000001db18         dd         0x00000010                                  ; Length of the record
000000000001db1c         dd         0x0000249c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001db20         db         0x10, 0x6b, 2 dup (0xff)                    ; begin 0x14630
000000000001db24         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x14654)
000000000001db28         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001db29         db  0x5f ; '_'
000000000001db2a         db  0x0e ; '.'
000000000001db2b         db  0x10 ; '.'
000000000001db2c         dd         0x00000014                                  ; Length of the record
000000000001db30         dd         0x000024b0                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001db34         db         0x2c, 0x6b, 2 dup (0xff)                    ; begin 0x14660
000000000001db38         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x146e2)
000000000001db3c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001db3d         db  0x02 ; '.'
000000000001db3e         db  0x5f ; '_'
000000000001db3f         db  0x0e ; '.'
000000000001db40         db  0x10 ; '.'
000000000001db41         db  0x49 ; 'I'
000000000001db42         db  0x0e ; '.'
000000000001db43         db  0x08 ; '.'
000000000001db44         dd         0x00000014                                  ; Length of the record
000000000001db48         dd         0x000024c8                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001db4c         db         0xa4, 0x6b, 2 dup (0xff)                    ; begin 0x146f0
000000000001db50         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x1473a)
000000000001db54         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001db55         db  0x02 ; '.'
000000000001db56         db  0x45 ; 'E'
000000000001db57         db  0x0e ; '.'
000000000001db58         db  0x10 ; '.'
000000000001db59         db  0x00 ; '.'
000000000001db5a         db  0x00 ; '.'
000000000001db5b         db  0x00 ; '.'
000000000001db5c         dd         0x00000018                                  ; Length of the record
000000000001db60         dd         0x000024e0                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001db64         db         0xdc, 0x6b, 2 dup (0xff)                    ; begin 0x14740
000000000001db68         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x14757)
000000000001db6c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001db6d         db  0x41 ; 'A'
000000000001db6e         db  0x0e ; '.'
000000000001db6f         db  0x10 ; '.'
000000000001db70         db  0x83 ; '.'
000000000001db71         db  0x02 ; '.'
000000000001db72         db  0x51 ; 'Q'
000000000001db73         db  0x0e ; '.'
000000000001db74         db  0x08 ; '.'
000000000001db75         db  0x00 ; '.'
000000000001db76         db  0x00 ; '.'
000000000001db77         db  0x00 ; '.'
000000000001db78         dd         0x00000018                                  ; Length of the record
000000000001db7c         dd         0x000024fc                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001db80         db         0xe0, 0x6b, 2 dup (0xff)                    ; begin 0x14760
000000000001db84         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x1478e)
000000000001db88         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001db89         db  0x47 ; 'G'
000000000001db8a         db  0x0e ; '.'
000000000001db8b         db  0x10 ; '.'
000000000001db8c         db  0x61 ; 'a'
000000000001db8d         db  0x0a ; '.'
000000000001db8e         db  0x0e ; '.'
000000000001db8f         db  0x08 ; '.'
000000000001db90         db  0x41 ; 'A'
000000000001db91         db  0x0b ; '.'
000000000001db92         db  0x00 ; '.'
000000000001db93         db  0x00 ; '.'
000000000001db94         dd         0x00000024                                  ; Length of the record
000000000001db98         dd         0x00002518                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001db9c         db         0xf4, 0x6b, 2 dup (0xff)                    ; begin 0x14790
000000000001dba0         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x147b8)
000000000001dba4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001dba5         db  0x41 ; 'A'
000000000001dba6         db  0x0e ; '.'
000000000001dba7         db  0x10 ; '.'
000000000001dba8         db  0x86 ; '.'
000000000001dba9         db  0x02 ; '.'
000000000001dbaa         db  0x41 ; 'A'
000000000001dbab         db  0x0e ; '.'
000000000001dbac         db  0x18 ; '.'
000000000001dbad         db  0x83 ; '.'
000000000001dbae         db  0x03 ; '.'
000000000001dbaf         db  0x4d ; 'M'
000000000001dbb0         db  0x0e ; '.'
000000000001dbb1         db  0x20 ; ' '
000000000001dbb2         db  0x49 ; 'I'
000000000001dbb3         db  0x0e ; '.'
000000000001dbb4         db  0x18 ; '.'
000000000001dbb5         db  0x47 ; 'G'
000000000001dbb6         db  0x0e ; '.'
000000000001dbb7         db  0x10 ; '.'
000000000001dbb8         db  0x41 ; 'A'
000000000001dbb9         db  0x0e ; '.'
000000000001dbba         db  0x08 ; '.'
000000000001dbbb         db  0x00 ; '.'
000000000001dbbc         dd         0x00000018                                  ; Length of the record
000000000001dbc0         dd         0x00002540                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001dbc4         db         0xfc, 0x6b, 2 dup (0xff)                    ; begin 0x147c0
000000000001dbc8         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x147d3)
000000000001dbcc         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001dbcd         db  0x41 ; 'A'
000000000001dbce         db  0x0e ; '.'
000000000001dbcf         db  0x10 ; '.'
000000000001dbd0         db  0x83 ; '.'
000000000001dbd1         db  0x02 ; '.'
000000000001dbd2         db  0x50 ; 'P'
000000000001dbd3         db  0x0e ; '.'
000000000001dbd4         db  0x08 ; '.'
000000000001dbd5         db  0x00 ; '.'
000000000001dbd6         db  0x00 ; '.'
000000000001dbd7         db  0x00 ; '.'
000000000001dbd8         dd         0x00000014                                  ; Length of the record
000000000001dbdc         dd         0x0000255c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001dbe0         db         0x00, 0x6c, 2 dup (0xff)                    ; begin 0x147e0
000000000001dbe4         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x14815)
000000000001dbe8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001dbe9         db  0x4b ; 'K'
000000000001dbea         db  0x0e ; '.'
000000000001dbeb         db  0x10 ; '.'
000000000001dbec         db  0x00 ; '.'
000000000001dbed         db  0x00 ; '.'
000000000001dbee         db  0x00 ; '.'
000000000001dbef         db  0x00 ; '.'
000000000001dbf0         dd         0x00000048                                  ; Length of the record
000000000001dbf4         dd         0x00002574                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001dbf8         db         0x28, 0x6c, 2 dup (0xff)                    ; begin 0x14820
000000000001dbfc         db         0x00, 0x01, 2 dup (0x00)                    ; length 0x100 (end at 0x14920)
000000000001dc00         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001dc01         db  0x42 ; 'B'
000000000001dc02         db  0x0e ; '.'
000000000001dc03         db  0x10 ; '.'
000000000001dc04         db  0x8f ; '.'
000000000001dc05         db  0x02 ; '.'
000000000001dc06         db  0x42 ; 'B'
000000000001dc07         db  0x0e ; '.'
000000000001dc08         db  0x18 ; '.'
000000000001dc09         db  0x8e ; '.'
000000000001dc0a         db  0x03 ; '.'
000000000001dc0b         db  0x45 ; 'E'
000000000001dc0c         db  0x0e ; '.'
000000000001dc0d         db  0x20 ; ' '
000000000001dc0e         db  0x8d ; '.'
000000000001dc0f         db  0x04 ; '.'
000000000001dc10         db  0x42 ; 'B'
000000000001dc11         db  0x0e ; '.'
000000000001dc12         db  0x28 ; '('
000000000001dc13         db  0x8c ; '.'
000000000001dc14         db  0x05 ; '.'
000000000001dc15         db  0x44 ; 'D'
000000000001dc16         db  0x0e ; '.'
000000000001dc17         db  0x30 ; '0'
000000000001dc18         db  0x86 ; '.'
000000000001dc19         db  0x06 ; '.'
000000000001dc1a         db  0x41 ; 'A'
000000000001dc1b         db  0x0e ; '.'
000000000001dc1c         db  0x38 ; '8'
000000000001dc1d         db  0x83 ; '.'
000000000001dc1e         db  0x07 ; '.'
000000000001dc1f         db  0x4e ; 'N'
000000000001dc20         db  0x0e ; '.'
000000000001dc21         db  0x50 ; 'P'
000000000001dc22         db  0x02 ; '.'
000000000001dc23         db  0x9d ; '.'
000000000001dc24         db  0x0a ; '.'
000000000001dc25         db  0x0e ; '.'
000000000001dc26         db  0x38 ; '8'
000000000001dc27         db  0x41 ; 'A'
000000000001dc28         db  0x0e ; '.'
000000000001dc29         db  0x30 ; '0'
000000000001dc2a         db  0x41 ; 'A'
000000000001dc2b         db  0x0e ; '.'
000000000001dc2c         db  0x28 ; '('
000000000001dc2d         db  0x42 ; 'B'
000000000001dc2e         db  0x0e ; '.'
000000000001dc2f         db  0x20 ; ' '
000000000001dc30         db  0x42 ; 'B'
000000000001dc31         db  0x0e ; '.'
000000000001dc32         db  0x18 ; '.'
000000000001dc33         db  0x42 ; 'B'
000000000001dc34         db  0x0e ; '.'
000000000001dc35         db  0x10 ; '.'
000000000001dc36         db  0x42 ; 'B'
000000000001dc37         db  0x0e ; '.'
000000000001dc38         db  0x08 ; '.'
000000000001dc39         db  0x4b ; 'K'
000000000001dc3a         db  0x0b ; '.'
000000000001dc3b         db  0x00 ; '.'
000000000001dc3c         dd         0x00000018                                  ; Length of the record
000000000001dc40         dd         0x000025c0                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001dc44         db         0xdc, 0x6c, 2 dup (0xff)                    ; begin 0x14920
000000000001dc48         db         0x21, 3 dup (0x00)                          ; length 0x21 (end at 0x14941)
000000000001dc4c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001dc4d         db  0x44 ; 'D'
000000000001dc4e         db  0x0e ; '.'
000000000001dc4f         db  0x18 ; '.'
000000000001dc50         db  0x42 ; 'B'
000000000001dc51         db  0x0e ; '.'
000000000001dc52         db  0x20 ; ' '
000000000001dc53         db  0x5a ; 'Z'
000000000001dc54         db  0x0e ; '.'
000000000001dc55         db  0x08 ; '.'
000000000001dc56         db  0x00 ; '.'
000000000001dc57         db  0x00 ; '.'
000000000001dc58         dd         0x0000001c                                  ; Length of the record
000000000001dc5c         dd         0x000025dc                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001dc60         db         0xf0, 0x6c, 2 dup (0xff)                    ; begin 0x14950
000000000001dc64         db         0x2f, 3 dup (0x00)                          ; length 0x2f (end at 0x1497f)
000000000001dc68         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001dc69         db  0x41 ; 'A'
000000000001dc6a         db  0x0e ; '.'
000000000001dc6b         db  0x10 ; '.'
000000000001dc6c         db  0x83 ; '.'
000000000001dc6d         db  0x02 ; '.'
000000000001dc6e         db  0x55 ; 'U'
000000000001dc6f         db  0x0a ; '.'
000000000001dc70         db  0x0e ; '.'
000000000001dc71         db  0x08 ; '.'
000000000001dc72         db  0x4a ; 'J'
000000000001dc73         db  0x0b ; '.'
000000000001dc74         db  0x00 ; '.'
000000000001dc75         db  0x00 ; '.'
000000000001dc76         db  0x00 ; '.'
000000000001dc77         db  0x00 ; '.'
000000000001dc78         dd         0x00000044                                  ; Length of the record
000000000001dc7c         dd         0x000025fc                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001dc80         db         0x00, 0x6d, 2 dup (0xff)                    ; begin 0x14980
000000000001dc84         db         0xd1, 3 dup (0x00)                          ; length 0xd1 (end at 0x14a51)
000000000001dc88         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001dc89         db  0x42 ; 'B'
000000000001dc8a         db  0x0e ; '.'
000000000001dc8b         db  0x10 ; '.'
000000000001dc8c         db  0x8e ; '.'
000000000001dc8d         db  0x02 ; '.'
000000000001dc8e         db  0x42 ; 'B'
000000000001dc8f         db  0x0e ; '.'
000000000001dc90         db  0x18 ; '.'
000000000001dc91         db  0x8d ; '.'
000000000001dc92         db  0x03 ; '.'
000000000001dc93         db  0x4c ; 'L'
000000000001dc94         db  0x0e ; '.'
000000000001dc95         db  0x20 ; ' '
000000000001dc96         db  0x8c ; '.'
000000000001dc97         db  0x04 ; '.'
000000000001dc98         db  0x41 ; 'A'
000000000001dc99         db  0x0e ; '.'
000000000001dc9a         db  0x28 ; '('
000000000001dc9b         db  0x86 ; '.'
000000000001dc9c         db  0x05 ; '.'
000000000001dc9d         db  0x41 ; 'A'
000000000001dc9e         db  0x0e ; '.'
000000000001dc9f         db  0x30 ; '0'
000000000001dca0         db  0x83 ; '.'
000000000001dca1         db  0x06 ; '.'
000000000001dca2         db  0x46 ; 'F'
000000000001dca3         db  0x0e ; '.'
000000000001dca4         db  0x40 ; '@'
000000000001dca5         db  0x02 ; '.'
000000000001dca6         db  0x77 ; 'w'
000000000001dca7         db  0x0a ; '.'
000000000001dca8         db  0x0e ; '.'
000000000001dca9         db  0x30 ; '0'
000000000001dcaa         db  0x41 ; 'A'
000000000001dcab         db  0x0e ; '.'
000000000001dcac         db  0x28 ; '('
000000000001dcad         db  0x41 ; 'A'
000000000001dcae         db  0x0e ; '.'
000000000001dcaf         db  0x20 ; ' '
000000000001dcb0         db  0x42 ; 'B'
000000000001dcb1         db  0x0e ; '.'
000000000001dcb2         db  0x18 ; '.'
000000000001dcb3         db  0x42 ; 'B'
000000000001dcb4         db  0x0e ; '.'
000000000001dcb5         db  0x10 ; '.'
000000000001dcb6         db  0x42 ; 'B'
000000000001dcb7         db  0x0e ; '.'
000000000001dcb8         db  0x08 ; '.'
000000000001dcb9         db  0x49 ; 'I'
000000000001dcba         db  0x0b ; '.'
000000000001dcbb         db  0x00 ; '.'
000000000001dcbc         db  0x00 ; '.'
000000000001dcbd         db  0x00 ; '.'
000000000001dcbe         db  0x00 ; '.'
000000000001dcbf         db  0x00 ; '.'
000000000001dcc0         dd         0x0000004c                                  ; Length of the record
000000000001dcc4         dd         0x00002644                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001dcc8         db         0x98, 0x6d, 2 dup (0xff)                    ; begin 0x14a60
000000000001dccc         db         0x1c, 0x04, 2 dup (0x00)                    ; length 0x41c (end at 0x14e7c)
000000000001dcd0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001dcd1         db  0x42 ; 'B'
000000000001dcd2         db  0x0e ; '.'
000000000001dcd3         db  0x10 ; '.'
000000000001dcd4         db  0x8f ; '.'
000000000001dcd5         db  0x02 ; '.'
000000000001dcd6         db  0x42 ; 'B'
000000000001dcd7         db  0x0e ; '.'
000000000001dcd8         db  0x18 ; '.'
000000000001dcd9         db  0x8e ; '.'
000000000001dcda         db  0x03 ; '.'
000000000001dcdb         db  0x42 ; 'B'
000000000001dcdc         db  0x0e ; '.'
000000000001dcdd         db  0x20 ; ' '
000000000001dcde         db  0x8d ; '.'
000000000001dcdf         db  0x04 ; '.'
000000000001dce0         db  0x42 ; 'B'
000000000001dce1         db  0x0e ; '.'
000000000001dce2         db  0x28 ; '('
000000000001dce3         db  0x8c ; '.'
000000000001dce4         db  0x05 ; '.'
000000000001dce5         db  0x41 ; 'A'
000000000001dce6         db  0x0e ; '.'
000000000001dce7         db  0x30 ; '0'
000000000001dce8         db  0x86 ; '.'
000000000001dce9         db  0x06 ; '.'
000000000001dcea         db  0x41 ; 'A'
000000000001dceb         db  0x0e ; '.'
000000000001dcec         db  0x38 ; '8'
000000000001dced         db  0x83 ; '.'
000000000001dcee         db  0x07 ; '.'
000000000001dcef         db  0x44 ; 'D'
000000000001dcf0         db  0x0e ; '.'
000000000001dcf1         db  0x60 ; '`'
000000000001dcf2         db  0x02 ; '.'
000000000001dcf3         db  0xe9 ; '.'
000000000001dcf4         db  0x0a ; '.'
000000000001dcf5         db  0x0e ; '.'
000000000001dcf6         db  0x38 ; '8'
000000000001dcf7         db  0x41 ; 'A'
000000000001dcf8         db  0x0e ; '.'
000000000001dcf9         db  0x30 ; '0'
000000000001dcfa         db  0x41 ; 'A'
000000000001dcfb         db  0x0e ; '.'
000000000001dcfc         db  0x28 ; '('
000000000001dcfd         db  0x42 ; 'B'
000000000001dcfe         db  0x0e ; '.'
000000000001dcff         db  0x20 ; ' '
000000000001dd00         db  0x42 ; 'B'
000000000001dd01         db  0x0e ; '.'
000000000001dd02         db  0x18 ; '.'
000000000001dd03         db  0x42 ; 'B'
000000000001dd04         db  0x0e ; '.'
000000000001dd05         db  0x10 ; '.'
000000000001dd06         db  0x42 ; 'B'
000000000001dd07         db  0x0e ; '.'
000000000001dd08         db  0x08 ; '.'
000000000001dd09         db  0x47 ; 'G'
000000000001dd0a         db  0x0b ; '.'
000000000001dd0b         db  0x00 ; '.'
000000000001dd0c         db  0x00 ; '.'
000000000001dd0d         db  0x00 ; '.'
000000000001dd0e         db  0x00 ; '.'
000000000001dd0f         db  0x00 ; '.'
000000000001dd10         dd         0x00000024                                  ; Length of the record
000000000001dd14         dd         0x00002694                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001dd18         db         0x68, 0x71, 2 dup (0xff)                    ; begin 0x14e80
000000000001dd1c         db         0xac, 3 dup (0x00)                          ; length 0xac (end at 0x14f2c)
000000000001dd20         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001dd21         db  0x42 ; 'B'
000000000001dd22         db  0x0e ; '.'
000000000001dd23         db  0x10 ; '.'
000000000001dd24         db  0x8d ; '.'
000000000001dd25         db  0x02 ; '.'
000000000001dd26         db  0x42 ; 'B'
000000000001dd27         db  0x0e ; '.'
000000000001dd28         db  0x18 ; '.'
000000000001dd29         db  0x8c ; '.'
000000000001dd2a         db  0x03 ; '.'
000000000001dd2b         db  0x44 ; 'D'
000000000001dd2c         db  0x0e ; '.'
000000000001dd2d         db  0x20 ; ' '
000000000001dd2e         db  0x86 ; '.'
000000000001dd2f         db  0x04 ; '.'
000000000001dd30         db  0x41 ; 'A'
000000000001dd31         db  0x0e ; '.'
000000000001dd32         db  0x28 ; '('
000000000001dd33         db  0x83 ; '.'
000000000001dd34         db  0x05 ; '.'
000000000001dd35         db  0x47 ; 'G'
000000000001dd36         db  0x0e ; '.'
000000000001dd37         db  0x40 ; '@'
000000000001dd38         dd         0x0000004c                                  ; Length of the record
000000000001dd3c         dd         0x000026bc                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001dd40         db         0xf0, 0x71, 2 dup (0xff)                    ; begin 0x14f30
000000000001dd44         db         0x1c, 0x04, 2 dup (0x00)                    ; length 0x41c (end at 0x1534c)
000000000001dd48         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001dd49         db  0x42 ; 'B'
000000000001dd4a         db  0x0e ; '.'
000000000001dd4b         db  0x10 ; '.'
000000000001dd4c         db  0x8f ; '.'
000000000001dd4d         db  0x02 ; '.'
000000000001dd4e         db  0x42 ; 'B'
000000000001dd4f         db  0x0e ; '.'
000000000001dd50         db  0x18 ; '.'
000000000001dd51         db  0x8e ; '.'
000000000001dd52         db  0x03 ; '.'
000000000001dd53         db  0x42 ; 'B'
000000000001dd54         db  0x0e ; '.'
000000000001dd55         db  0x20 ; ' '
000000000001dd56         db  0x8d ; '.'
000000000001dd57         db  0x04 ; '.'
000000000001dd58         db  0x42 ; 'B'
000000000001dd59         db  0x0e ; '.'
000000000001dd5a         db  0x28 ; '('
000000000001dd5b         db  0x8c ; '.'
000000000001dd5c         db  0x05 ; '.'
000000000001dd5d         db  0x41 ; 'A'
000000000001dd5e         db  0x0e ; '.'
000000000001dd5f         db  0x30 ; '0'
000000000001dd60         db  0x86 ; '.'
000000000001dd61         db  0x06 ; '.'
000000000001dd62         db  0x41 ; 'A'
000000000001dd63         db  0x0e ; '.'
000000000001dd64         db  0x38 ; '8'
000000000001dd65         db  0x83 ; '.'
000000000001dd66         db  0x07 ; '.'
000000000001dd67         db  0x44 ; 'D'
000000000001dd68         db  0x0e ; '.'
000000000001dd69         db  0x60 ; '`'
000000000001dd6a         db  0x02 ; '.'
000000000001dd6b         db  0xe9 ; '.'
000000000001dd6c         db  0x0a ; '.'
000000000001dd6d         db  0x0e ; '.'
000000000001dd6e         db  0x38 ; '8'
000000000001dd6f         db  0x41 ; 'A'
000000000001dd70         db  0x0e ; '.'
000000000001dd71         db  0x30 ; '0'
000000000001dd72         db  0x41 ; 'A'
000000000001dd73         db  0x0e ; '.'
000000000001dd74         db  0x28 ; '('
000000000001dd75         db  0x42 ; 'B'
000000000001dd76         db  0x0e ; '.'
000000000001dd77         db  0x20 ; ' '
000000000001dd78         db  0x42 ; 'B'
000000000001dd79         db  0x0e ; '.'
000000000001dd7a         db  0x18 ; '.'
000000000001dd7b         db  0x42 ; 'B'
000000000001dd7c         db  0x0e ; '.'
000000000001dd7d         db  0x10 ; '.'
000000000001dd7e         db  0x42 ; 'B'
000000000001dd7f         db  0x0e ; '.'
000000000001dd80         db  0x08 ; '.'
000000000001dd81         db  0x47 ; 'G'
000000000001dd82         db  0x0b ; '.'
000000000001dd83         db  0x00 ; '.'
000000000001dd84         db  0x00 ; '.'
000000000001dd85         db  0x00 ; '.'
000000000001dd86         db  0x00 ; '.'
000000000001dd87         db  0x00 ; '.'
000000000001dd88         dd         0x0000003c                                  ; Length of the record
000000000001dd8c         dd         0x0000270c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001dd90         db         0xc0, 0x75, 2 dup (0xff)                    ; begin 0x15350
000000000001dd94         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x153d3)
000000000001dd98         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001dd99         db  0x42 ; 'B'
000000000001dd9a         db  0x0e ; '.'
000000000001dd9b         db  0x10 ; '.'
000000000001dd9c         db  0x8d ; '.'
000000000001dd9d         db  0x02 ; '.'
000000000001dd9e         db  0x42 ; 'B'
000000000001dd9f         db  0x0e ; '.'
000000000001dda0         db  0x18 ; '.'
000000000001dda1         db  0x8c ; '.'
000000000001dda2         db  0x03 ; '.'
000000000001dda3         db  0x44 ; 'D'
000000000001dda4         db  0x0e ; '.'
000000000001dda5         db  0x20 ; ' '
000000000001dda6         db  0x86 ; '.'
000000000001dda7         db  0x04 ; '.'
000000000001dda8         db  0x41 ; 'A'
000000000001dda9         db  0x0e ; '.'
000000000001ddaa         db  0x28 ; '('
000000000001ddab         db  0x83 ; '.'
000000000001ddac         db  0x05 ; '.'
000000000001ddad         db  0x4a ; 'J'
000000000001ddae         db  0x0e ; '.'
000000000001ddaf         db  0x40 ; '@'
000000000001ddb0         db  0x02 ; '.'
000000000001ddb1         db  0x64 ; 'd'
000000000001ddb2         db  0x0a ; '.'
000000000001ddb3         db  0x0e ; '.'
000000000001ddb4         db  0x28 ; '('
000000000001ddb5         db  0x41 ; 'A'
000000000001ddb6         db  0x0e ; '.'
000000000001ddb7         db  0x20 ; ' '
000000000001ddb8         db  0x41 ; 'A'
000000000001ddb9         db  0x0e ; '.'
000000000001ddba         db  0x18 ; '.'
000000000001ddbb         db  0x42 ; 'B'
000000000001ddbc         db  0x0e ; '.'
000000000001ddbd         db  0x10 ; '.'
000000000001ddbe         db  0x42 ; 'B'
000000000001ddbf         db  0x0e ; '.'
000000000001ddc0         db  0x08 ; '.'
000000000001ddc1         db  0x41 ; 'A'
000000000001ddc2         db  0x0b ; '.'
000000000001ddc3         db  0x00 ; '.'
000000000001ddc4         db  0x00 ; '.'
000000000001ddc5         db  0x00 ; '.'
000000000001ddc6         db  0x00 ; '.'
000000000001ddc7         db  0x00 ; '.'
000000000001ddc8         dd         0x00000010                                  ; Length of the record
000000000001ddcc         dd         0x0000274c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001ddd0         db         0x10, 0x76, 2 dup (0xff)                    ; begin 0x153e0
000000000001ddd4         db         0x3f, 3 dup (0x00)                          ; length 0x3f (end at 0x1541f)
000000000001ddd8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001ddd9         db  0x4b ; 'K'
000000000001ddda         db  0x0e ; '.'
000000000001dddb         db  0x10 ; '.'
000000000001dddc         dd         0x00000010                                  ; Length of the record
000000000001dde0         dd         0x00002760                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001dde4         db         0x3c, 0x76, 2 dup (0xff)                    ; begin 0x15420
000000000001dde8         db         0x16, 3 dup (0x00)                          ; length 0x16 (end at 0x15436)
000000000001ddec         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001dded         align      16
000000000001ddf0         dd         0x00000010                                  ; Length of the record
000000000001ddf4         dd         0x00002774                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001ddf8         db         0x48, 0x76, 2 dup (0xff)                    ; begin 0x15440
000000000001ddfc         db         0x16, 3 dup (0x00)                          ; length 0x16 (end at 0x15456)
000000000001de00         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001de01         align      4
000000000001de04         dd         0x0000002c                                  ; Length of the record
000000000001de08         dd         0x00002788                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001de0c         db         0x54, 0x76, 2 dup (0xff)                    ; begin 0x15460
000000000001de10         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x154e3)
000000000001de14         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001de15         db  0x45 ; 'E'
000000000001de16         db  0x0e ; '.'
000000000001de17         db  0x10 ; '.'
000000000001de18         db  0x8c ; '.'
000000000001de19         db  0x02 ; '.'
000000000001de1a         db  0x41 ; 'A'
000000000001de1b         db  0x0e ; '.'
000000000001de1c         db  0x18 ; '.'
000000000001de1d         db  0x86 ; '.'
000000000001de1e         db  0x03 ; '.'
000000000001de1f         db  0x41 ; 'A'
000000000001de20         db  0x0e ; '.'
000000000001de21         db  0x20 ; ' '
000000000001de22         db  0x83 ; '.'
000000000001de23         db  0x04 ; '.'
000000000001de24         db  0x02 ; '.'
000000000001de25         db  0x62 ; 'b'
000000000001de26         db  0x0a ; '.'
000000000001de27         db  0x0e ; '.'
000000000001de28         db  0x18 ; '.'
000000000001de29         db  0x41 ; 'A'
000000000001de2a         db  0x0e ; '.'
000000000001de2b         db  0x10 ; '.'
000000000001de2c         db  0x42 ; 'B'
000000000001de2d         db  0x0e ; '.'
000000000001de2e         db  0x08 ; '.'
000000000001de2f         db  0x44 ; 'D'
000000000001de30         db  0x0b ; '.'
000000000001de31         db  0x00 ; '.'
000000000001de32         db  0x00 ; '.'
000000000001de33         db  0x00 ; '.'
000000000001de34         dd         0x00000010                                  ; Length of the record
000000000001de38         dd         0x000027b8                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001de3c         db         0xb4, 0x76, 2 dup (0xff)                    ; begin 0x154f0
000000000001de40         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x15501)
000000000001de44         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001de45         align      8
000000000001de48         dd         0x00000010                                  ; Length of the record
000000000001de4c         dd         0x000027cc                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001de50         db         0xc0, 0x76, 2 dup (0xff)                    ; begin 0x15510
000000000001de54         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x15525)
000000000001de58         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001de59         align      4
000000000001de5c         dd         0x0000003c                                  ; Length of the record
000000000001de60         dd         0x000027e0                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001de64         db         0xcc, 0x76, 2 dup (0xff)                    ; begin 0x15530
000000000001de68         db         0xeb, 3 dup (0x00)                          ; length 0xeb (end at 0x1561b)
000000000001de6c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001de6d         db  0x42 ; 'B'
000000000001de6e         db  0x0e ; '.'
000000000001de6f         db  0x10 ; '.'
000000000001de70         db  0x8e ; '.'
000000000001de71         db  0x02 ; '.'
000000000001de72         db  0x42 ; 'B'
000000000001de73         db  0x0e ; '.'
000000000001de74         db  0x18 ; '.'
000000000001de75         db  0x8d ; '.'
000000000001de76         db  0x03 ; '.'
000000000001de77         db  0x44 ; 'D'
000000000001de78         db  0x0e ; '.'
000000000001de79         db  0x20 ; ' '
000000000001de7a         db  0x8c ; '.'
000000000001de7b         db  0x04 ; '.'
000000000001de7c         db  0x41 ; 'A'
000000000001de7d         db  0x0e ; '.'
000000000001de7e         db  0x28 ; '('
000000000001de7f         db  0x86 ; '.'
000000000001de80         db  0x05 ; '.'
000000000001de81         db  0x41 ; 'A'
000000000001de82         db  0x0e ; '.'
000000000001de83         db  0x30 ; '0'
000000000001de84         db  0x83 ; '.'
000000000001de85         db  0x06 ; '.'
000000000001de86         db  0x02 ; '.'
000000000001de87         db  0xbd ; '.'
000000000001de88         db  0x0a ; '.'
000000000001de89         db  0x0e ; '.'
000000000001de8a         db  0x28 ; '('
000000000001de8b         db  0x41 ; 'A'
000000000001de8c         db  0x0e ; '.'
000000000001de8d         db  0x20 ; ' '
000000000001de8e         db  0x42 ; 'B'
000000000001de8f         db  0x0e ; '.'
000000000001de90         db  0x18 ; '.'
000000000001de91         db  0x42 ; 'B'
000000000001de92         db  0x0e ; '.'
000000000001de93         db  0x10 ; '.'
000000000001de94         db  0x42 ; 'B'
000000000001de95         db  0x0e ; '.'
000000000001de96         db  0x08 ; '.'
000000000001de97         db  0x42 ; 'B'
000000000001de98         db  0x0b ; '.'
000000000001de99         db  0x00 ; '.'
000000000001de9a         db  0x00 ; '.'
000000000001de9b         db  0x00 ; '.'
000000000001de9c         dd         0x00000010                                  ; Length of the record
000000000001dea0         dd         0x00002820                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001dea4         db         0x7c, 0x77, 2 dup (0xff)                    ; begin 0x15620
000000000001dea8         db         0x38, 3 dup (0x00)                          ; length 0x38 (end at 0x15658)
000000000001deac         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001dead         align      16
000000000001deb0         dd         0x00000034                                  ; Length of the record
000000000001deb4         dd         0x00002834                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001deb8         db         0xa8, 0x77, 2 dup (0xff)                    ; begin 0x15660
000000000001debc         db         0x6a, 3 dup (0x00)                          ; length 0x6a (end at 0x156ca)
000000000001dec0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001dec1         db  0x42 ; 'B'
000000000001dec2         db  0x0e ; '.'
000000000001dec3         db  0x10 ; '.'
000000000001dec4         db  0x8c ; '.'
000000000001dec5         db  0x02 ; '.'
000000000001dec6         db  0x41 ; 'A'
000000000001dec7         db  0x0e ; '.'
000000000001dec8         db  0x18 ; '.'
000000000001dec9         db  0x86 ; '.'
000000000001deca         db  0x03 ; '.'
000000000001decb         db  0x44 ; 'D'
000000000001decc         db  0x0e ; '.'
000000000001decd         db  0x20 ; ' '
000000000001dece         db  0x83 ; '.'
000000000001decf         db  0x04 ; '.'
000000000001ded0         db  0x7c ; '|'
000000000001ded1         db  0x0a ; '.'
000000000001ded2         db  0x0e ; '.'
000000000001ded3         db  0x18 ; '.'
000000000001ded4         db  0x41 ; 'A'
000000000001ded5         db  0x0e ; '.'
000000000001ded6         db  0x10 ; '.'
000000000001ded7         db  0x42 ; 'B'
000000000001ded8         db  0x0e ; '.'
000000000001ded9         db  0x08 ; '.'
000000000001deda         db  0x4a ; 'J'
000000000001dedb         db  0x0b ; '.'
000000000001dedc         db  0x51 ; 'Q'
000000000001dedd         db  0x0a ; '.'
000000000001dede         db  0x0e ; '.'
000000000001dedf         db  0x18 ; '.'
000000000001dee0         db  0x41 ; 'A'
000000000001dee1         db  0x0e ; '.'
000000000001dee2         db  0x10 ; '.'
000000000001dee3         db  0x42 ; 'B'
000000000001dee4         db  0x0e ; '.'
000000000001dee5         db  0x08 ; '.'
000000000001dee6         db  0x41 ; 'A'
000000000001dee7         db  0x0b ; '.'
000000000001dee8         dd         0x00000014                                  ; Length of the record
000000000001deec         dd         0x0000286c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001def0         db         0xe0, 0x77, 2 dup (0xff)                    ; begin 0x156d0
000000000001def4         db         0x2a, 3 dup (0x00)                          ; length 0x2a (end at 0x156fa)
000000000001def8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001def9         align      256
000000000001df00         dd         0x00000010                                  ; Length of the record
000000000001df04         dd         0x00002884                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001df08         db         0xf8, 0x77, 2 dup (0xff)                    ; begin 0x15700
000000000001df0c         db         0x2c, 3 dup (0x00)                          ; length 0x2c (end at 0x1572c)
000000000001df10         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001df11         align      4
000000000001df14         dd         0x00000018                                  ; Length of the record
000000000001df18         dd         0x00002898                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001df1c         db         0x14, 0x78, 2 dup (0xff)                    ; begin 0x15730
000000000001df20         db         0x2a, 3 dup (0x00)                          ; length 0x2a (end at 0x1575a)
000000000001df24         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001df25         db  0x46 ; 'F'
000000000001df26         db  0x0e ; '.'
000000000001df27         db  0x10 ; '.'
000000000001df28         db  0x83 ; '.'
000000000001df29         db  0x02 ; '.'
000000000001df2a         db  0x5b ; '['
000000000001df2b         db  0x0e ; '.'
000000000001df2c         db  0x08 ; '.'
000000000001df2d         db  0x47 ; 'G'
000000000001df2e         db  0xc3 ; '.'
000000000001df2f         db  0x00 ; '.'
000000000001df30         dd         0x00000038                                  ; Length of the record
000000000001df34         dd         0x000028b4                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001df38         db         0x28, 0x78, 2 dup (0xff)                    ; begin 0x15760
000000000001df3c         db         0x5d, 3 dup (0x00)                          ; length 0x5d (end at 0x157bd)
000000000001df40         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001df41         db  0x42 ; 'B'
000000000001df42         db  0x0e ; '.'
000000000001df43         db  0x10 ; '.'
000000000001df44         db  0x8d ; '.'
000000000001df45         db  0x02 ; '.'
000000000001df46         db  0x42 ; 'B'
000000000001df47         db  0x0e ; '.'
000000000001df48         db  0x18 ; '.'
000000000001df49         db  0x8c ; '.'
000000000001df4a         db  0x03 ; '.'
000000000001df4b         db  0x41 ; 'A'
000000000001df4c         db  0x0e ; '.'
000000000001df4d         db  0x20 ; ' '
000000000001df4e         db  0x86 ; '.'
000000000001df4f         db  0x04 ; '.'
000000000001df50         db  0x41 ; 'A'
000000000001df51         db  0x0e ; '.'
000000000001df52         db  0x28 ; '('
000000000001df53         db  0x83 ; '.'
000000000001df54         db  0x05 ; '.'
000000000001df55         db  0x47 ; 'G'
000000000001df56         db  0x0e ; '.'
000000000001df57         db  0x30 ; '0'
000000000001df58         db  0x75 ; 'u'
000000000001df59         db  0x0a ; '.'
000000000001df5a         db  0x0e ; '.'
000000000001df5b         db  0x28 ; '('
000000000001df5c         db  0x44 ; 'D'
000000000001df5d         db  0x0e ; '.'
000000000001df5e         db  0x20 ; ' '
000000000001df5f         db  0x41 ; 'A'
000000000001df60         db  0x0e ; '.'
000000000001df61         db  0x18 ; '.'
000000000001df62         db  0x42 ; 'B'
000000000001df63         db  0x0e ; '.'
000000000001df64         db  0x10 ; '.'
000000000001df65         db  0x42 ; 'B'
000000000001df66         db  0x0e ; '.'
000000000001df67         db  0x08 ; '.'
000000000001df68         db  0x45 ; 'E'
000000000001df69         db  0x0b ; '.'
000000000001df6a         db  0x00 ; '.'
000000000001df6b         db  0x00 ; '.'
000000000001df6c         dd         0x00000034                                  ; Length of the record
000000000001df70         dd         0x000028f0                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001df74         db         0x4c, 0x78, 2 dup (0xff)                    ; begin 0x157c0
000000000001df78         db         0x8f, 3 dup (0x00)                          ; length 0x8f (end at 0x1584f)
000000000001df7c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001df7d         db  0x45 ; 'E'
000000000001df7e         db  0x0e ; '.'
000000000001df7f         db  0x10 ; '.'
000000000001df80         db  0x8c ; '.'
000000000001df81         db  0x02 ; '.'
000000000001df82         db  0x41 ; 'A'
000000000001df83         db  0x0e ; '.'
000000000001df84         db  0x18 ; '.'
000000000001df85         db  0x86 ; '.'
000000000001df86         db  0x03 ; '.'
000000000001df87         db  0x41 ; 'A'
000000000001df88         db  0x0e ; '.'
000000000001df89         db  0x20 ; ' '
000000000001df8a         db  0x83 ; '.'
000000000001df8b         db  0x04 ; '.'
000000000001df8c         db  0x02 ; '.'
000000000001df8d         db  0x58 ; 'X'
000000000001df8e         db  0x0a ; '.'
000000000001df8f         db  0x0e ; '.'
000000000001df90         db  0x18 ; '.'
000000000001df91         db  0x41 ; 'A'
000000000001df92         db  0x0e ; '.'
000000000001df93         db  0x10 ; '.'
000000000001df94         db  0x42 ; 'B'
000000000001df95         db  0x0e ; '.'
000000000001df96         db  0x08 ; '.'
000000000001df97         db  0x46 ; 'F'
000000000001df98         db  0x0b ; '.'
000000000001df99         db  0x63 ; 'c'
000000000001df9a         db  0x0e ; '.'
000000000001df9b         db  0x18 ; '.'
000000000001df9c         db  0x41 ; 'A'
000000000001df9d         db  0x0e ; '.'
000000000001df9e         db  0x10 ; '.'
000000000001df9f         db  0x42 ; 'B'
000000000001dfa0         db  0x0e ; '.'
000000000001dfa1         db  0x08 ; '.'
000000000001dfa2         db  0x00 ; '.'
000000000001dfa3         db  0x00 ; '.'
000000000001dfa4         dd         0x00000048                                  ; Length of the record
000000000001dfa8         dd         0x00002928                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001dfac         db         0xa4, 0x78, 2 dup (0xff)                    ; begin 0x15850
000000000001dfb0         db         0x36, 0x01, 2 dup (0x00)                    ; length 0x136 (end at 0x15986)
000000000001dfb4         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001dfb5         db  0x42 ; 'B'
000000000001dfb6         db  0x0e ; '.'
000000000001dfb7         db  0x10 ; '.'
000000000001dfb8         db  0x8f ; '.'
000000000001dfb9         db  0x02 ; '.'
000000000001dfba         db  0x42 ; 'B'
000000000001dfbb         db  0x0e ; '.'
000000000001dfbc         db  0x18 ; '.'
000000000001dfbd         db  0x8e ; '.'
000000000001dfbe         db  0x03 ; '.'
000000000001dfbf         db  0x47 ; 'G'
000000000001dfc0         db  0x0e ; '.'
000000000001dfc1         db  0x20 ; ' '
000000000001dfc2         db  0x8d ; '.'
000000000001dfc3         db  0x04 ; '.'
000000000001dfc4         db  0x42 ; 'B'
000000000001dfc5         db  0x0e ; '.'
000000000001dfc6         db  0x28 ; '('
000000000001dfc7         db  0x8c ; '.'
000000000001dfc8         db  0x05 ; '.'
000000000001dfc9         db  0x41 ; 'A'
000000000001dfca         db  0x0e ; '.'
000000000001dfcb         db  0x30 ; '0'
000000000001dfcc         db  0x86 ; '.'
000000000001dfcd         db  0x06 ; '.'
000000000001dfce         db  0x41 ; 'A'
000000000001dfcf         db  0x0e ; '.'
000000000001dfd0         db  0x38 ; '8'
000000000001dfd1         db  0x83 ; '.'
000000000001dfd2         db  0x07 ; '.'
000000000001dfd3         db  0x44 ; 'D'
000000000001dfd4         db  0x0e ; '.'
000000000001dfd5         db  0x40 ; '@'
000000000001dfd6         db  0x02 ; '.'
000000000001dfd7         db  0xa1 ; '.'
000000000001dfd8         db  0x0a ; '.'
000000000001dfd9         db  0x0e ; '.'
000000000001dfda         db  0x38 ; '8'
000000000001dfdb         db  0x41 ; 'A'
000000000001dfdc         db  0x0e ; '.'
000000000001dfdd         db  0x30 ; '0'
000000000001dfde         db  0x41 ; 'A'
000000000001dfdf         db  0x0e ; '.'
000000000001dfe0         db  0x28 ; '('
000000000001dfe1         db  0x42 ; 'B'
000000000001dfe2         db  0x0e ; '.'
000000000001dfe3         db  0x20 ; ' '
000000000001dfe4         db  0x42 ; 'B'
000000000001dfe5         db  0x0e ; '.'
000000000001dfe6         db  0x18 ; '.'
000000000001dfe7         db  0x42 ; 'B'
000000000001dfe8         db  0x0e ; '.'
000000000001dfe9         db  0x10 ; '.'
000000000001dfea         db  0x42 ; 'B'
000000000001dfeb         db  0x0e ; '.'
000000000001dfec         db  0x08 ; '.'
000000000001dfed         db  0x42 ; 'B'
000000000001dfee         db  0x0b ; '.'
000000000001dfef         db  0x00 ; '.'
000000000001dff0         dd         0x00000050                                  ; Length of the record
000000000001dff4         dd         0x00002974                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001dff8         db         0x98, 0x79, 2 dup (0xff)                    ; begin 0x15990
000000000001dffc         db         0xdf, 3 dup (0x00)                          ; length 0xdf (end at 0x15a6f)
000000000001e000         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001e001         db  0x42 ; 'B'
000000000001e002         db  0x0e ; '.'
000000000001e003         db  0x10 ; '.'
000000000001e004         db  0x8c ; '.'
000000000001e005         db  0x02 ; '.'
000000000001e006         db  0x41 ; 'A'
000000000001e007         db  0x0e ; '.'
000000000001e008         db  0x18 ; '.'
000000000001e009         db  0x86 ; '.'
000000000001e00a         db  0x03 ; '.'
000000000001e00b         db  0x44 ; 'D'
000000000001e00c         db  0x0e ; '.'
000000000001e00d         db  0x20 ; ' '
000000000001e00e         db  0x83 ; '.'
000000000001e00f         db  0x04 ; '.'
000000000001e010         db  0x4b ; 'K'
000000000001e011         db  0x0e ; '.'
000000000001e012         db  0x30 ; '0'
000000000001e013         db  0x02 ; '.'
000000000001e014         db  0x6f ; 'o'
000000000001e015         db  0x0a ; '.'
000000000001e016         db  0x0e ; '.'
000000000001e017         db  0x20 ; ' '
000000000001e018         db  0x44 ; 'D'
000000000001e019         db  0x0e ; '.'
000000000001e01a         db  0x18 ; '.'
000000000001e01b         db  0x41 ; 'A'
000000000001e01c         db  0x0e ; '.'
000000000001e01d         db  0x10 ; '.'
000000000001e01e         db  0x42 ; 'B'
000000000001e01f         db  0x0e ; '.'
000000000001e020         db  0x08 ; '.'
000000000001e021         db  0x48 ; 'H'
000000000001e022         db  0x0b ; '.'
000000000001e023         db  0x5a ; 'Z'
000000000001e024         db  0x0a ; '.'
000000000001e025         db  0x0e ; '.'
000000000001e026         db  0x20 ; ' '
000000000001e027         db  0x44 ; 'D'
000000000001e028         db  0x0e ; '.'
000000000001e029         db  0x18 ; '.'
000000000001e02a         db  0x41 ; 'A'
000000000001e02b         db  0x0e ; '.'
000000000001e02c         db  0x10 ; '.'
000000000001e02d         db  0x42 ; 'B'
000000000001e02e         db  0x0e ; '.'
000000000001e02f         db  0x08 ; '.'
000000000001e030         db  0x47 ; 'G'
000000000001e031         db  0x0b ; '.'
000000000001e032         db  0x54 ; 'T'
000000000001e033         db  0x0a ; '.'
000000000001e034         db  0x0e ; '.'
000000000001e035         db  0x20 ; ' '
000000000001e036         db  0x44 ; 'D'
000000000001e037         db  0x0e ; '.'
000000000001e038         db  0x18 ; '.'
000000000001e039         db  0x41 ; 'A'
000000000001e03a         db  0x0e ; '.'
000000000001e03b         db  0x10 ; '.'
000000000001e03c         db  0x42 ; 'B'
000000000001e03d         db  0x0e ; '.'
000000000001e03e         db  0x08 ; '.'
000000000001e03f         db  0x45 ; 'E'
000000000001e040         db  0x0b ; '.'
000000000001e041         db  0x00 ; '.'
000000000001e042         db  0x00 ; '.'
000000000001e043         db  0x00 ; '.'
000000000001e044         dd         0x00000010                                  ; Length of the record
000000000001e048         dd         0x000029c8                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001e04c         db         0x24, 0x7a, 2 dup (0xff)                    ; begin 0x15a70
000000000001e050         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x15a7c)
000000000001e054         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001e055         align      8
000000000001e058         dd         0x0000005c                                  ; Length of the record
000000000001e05c         dd         0x000029dc                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001e060         db         0x20, 0x7a, 2 dup (0xff)                    ; begin 0x15a80
000000000001e064         db         0xa3, 3 dup (0x00)                          ; length 0xa3 (end at 0x15b23)
000000000001e068         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001e069         db  0x42 ; 'B'
000000000001e06a         db  0x0e ; '.'
000000000001e06b         db  0x10 ; '.'
000000000001e06c         db  0x8d ; '.'
000000000001e06d         db  0x02 ; '.'
000000000001e06e         db  0x42 ; 'B'
000000000001e06f         db  0x0e ; '.'
000000000001e070         db  0x18 ; '.'
000000000001e071         db  0x8c ; '.'
000000000001e072         db  0x03 ; '.'
000000000001e073         db  0x41 ; 'A'
000000000001e074         db  0x0e ; '.'
000000000001e075         db  0x20 ; ' '
000000000001e076         db  0x86 ; '.'
000000000001e077         db  0x04 ; '.'
000000000001e078         db  0x41 ; 'A'
000000000001e079         db  0x0e ; '.'
000000000001e07a         db  0x28 ; '('
000000000001e07b         db  0x83 ; '.'
000000000001e07c         db  0x05 ; '.'
000000000001e07d         db  0x47 ; 'G'
000000000001e07e         db  0x0e ; '.'
000000000001e07f         db  0x30 ; '0'
000000000001e080         db  0x02 ; '.'
000000000001e081         db  0x41 ; 'A'
000000000001e082         db  0x0a ; '.'
000000000001e083         db  0x0e ; '.'
000000000001e084         db  0x28 ; '('
000000000001e085         db  0x44 ; 'D'
000000000001e086         db  0x0e ; '.'
000000000001e087         db  0x20 ; ' '
000000000001e088         db  0x41 ; 'A'
000000000001e089         db  0x0e ; '.'
000000000001e08a         db  0x18 ; '.'
000000000001e08b         db  0x42 ; 'B'
000000000001e08c         db  0x0e ; '.'
000000000001e08d         db  0x10 ; '.'
000000000001e08e         db  0x42 ; 'B'
000000000001e08f         db  0x0e ; '.'
000000000001e090         db  0x08 ; '.'
000000000001e091         db  0x49 ; 'I'
000000000001e092         db  0x0b ; '.'
000000000001e093         db  0x52 ; 'R'
000000000001e094         db  0x0a ; '.'
000000000001e095         db  0x0e ; '.'
000000000001e096         db  0x28 ; '('
000000000001e097         db  0x43 ; 'C'
000000000001e098         db  0x0e ; '.'
000000000001e099         db  0x20 ; ' '
000000000001e09a         db  0x41 ; 'A'
000000000001e09b         db  0x0e ; '.'
000000000001e09c         db  0x18 ; '.'
000000000001e09d         db  0x42 ; 'B'
000000000001e09e         db  0x0e ; '.'
000000000001e09f         db  0x10 ; '.'
000000000001e0a0         db  0x42 ; 'B'
000000000001e0a1         db  0x0e ; '.'
000000000001e0a2         db  0x08 ; '.'
000000000001e0a3         db  0x46 ; 'F'
000000000001e0a4         db  0x0b ; '.'
000000000001e0a5         db  0x44 ; 'D'
000000000001e0a6         db  0x0a ; '.'
000000000001e0a7         db  0x0e ; '.'
000000000001e0a8         db  0x28 ; '('
000000000001e0a9         db  0x47 ; 'G'
000000000001e0aa         db  0x0e ; '.'
000000000001e0ab         db  0x20 ; ' '
000000000001e0ac         db  0x41 ; 'A'
000000000001e0ad         db  0x0e ; '.'
000000000001e0ae         db  0x18 ; '.'
000000000001e0af         db  0x42 ; 'B'
000000000001e0b0         db  0x0e ; '.'
000000000001e0b1         db  0x10 ; '.'
000000000001e0b2         db  0x42 ; 'B'
000000000001e0b3         db  0x0e ; '.'
000000000001e0b4         db  0x08 ; '.'
000000000001e0b5         db  0x45 ; 'E'
000000000001e0b6         db  0x0b ; '.'
000000000001e0b7         db  0x00 ; '.'
000000000001e0b8         dd         0x00000034                                  ; Length of the record
000000000001e0bc         dd         0x00002a3c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001e0c0         db         0x70, 0x7a, 2 dup (0xff)                    ; begin 0x15b30
000000000001e0c4         db         0x41, 0x01, 2 dup (0x00)                    ; length 0x141 (end at 0x15c71)
000000000001e0c8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001e0c9         db  0x42 ; 'B'
000000000001e0ca         db  0x0e ; '.'
000000000001e0cb         db  0x10 ; '.'
000000000001e0cc         db  0x8c ; '.'
000000000001e0cd         db  0x02 ; '.'
000000000001e0ce         db  0x41 ; 'A'
000000000001e0cf         db  0x0e ; '.'
000000000001e0d0         db  0x18 ; '.'
000000000001e0d1         db  0x86 ; '.'
000000000001e0d2         db  0x03 ; '.'
000000000001e0d3         db  0x41 ; 'A'
000000000001e0d4         db  0x0e ; '.'
000000000001e0d5         db  0x20 ; ' '
000000000001e0d6         db  0x83 ; '.'
000000000001e0d7         db  0x04 ; '.'
000000000001e0d8         db  0x47 ; 'G'
000000000001e0d9         db  0x0e ; '.'
000000000001e0da         db  0x70 ; 'p'
000000000001e0db         db  0x02 ; '.'
000000000001e0dc         db  0x8b ; '.'
000000000001e0dd         db  0x0a ; '.'
000000000001e0de         db  0x0e ; '.'
000000000001e0df         db  0x20 ; ' '
000000000001e0e0         db  0x41 ; 'A'
000000000001e0e1         db  0x0e ; '.'
000000000001e0e2         db  0x18 ; '.'
000000000001e0e3         db  0x41 ; 'A'
000000000001e0e4         db  0x0e ; '.'
000000000001e0e5         db  0x10 ; '.'
000000000001e0e6         db  0x42 ; 'B'
000000000001e0e7         db  0x0e ; '.'
000000000001e0e8         db  0x08 ; '.'
000000000001e0e9         db  0x46 ; 'F'
000000000001e0ea         db  0x0b ; '.'
000000000001e0eb         db  0x00 ; '.'
000000000001e0ec         db  0x00 ; '.'
000000000001e0ed         db  0x00 ; '.'
000000000001e0ee         db  0x00 ; '.'
000000000001e0ef         db  0x00 ; '.'
000000000001e0f0         dd         0x0000004c                                  ; Length of the record
000000000001e0f4         dd         0x00002a74                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001e0f8         db         0x88, 0x7b, 2 dup (0xff)                    ; begin 0x15c80
000000000001e0fc         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x15cfd)
000000000001e100         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001e101         db  0x42 ; 'B'
000000000001e102         db  0x0e ; '.'
000000000001e103         db  0x10 ; '.'
000000000001e104         db  0x8c ; '.'
000000000001e105         db  0x02 ; '.'
000000000001e106         db  0x41 ; 'A'
000000000001e107         db  0x0e ; '.'
000000000001e108         db  0x18 ; '.'
000000000001e109         db  0x86 ; '.'
000000000001e10a         db  0x03 ; '.'
000000000001e10b         db  0x44 ; 'D'
000000000001e10c         db  0x0e ; '.'
000000000001e10d         db  0x20 ; ' '
000000000001e10e         db  0x83 ; '.'
000000000001e10f         db  0x04 ; '.'
000000000001e110         db  0x69 ; 'i'
000000000001e111         db  0x0a ; '.'
000000000001e112         db  0x0e ; '.'
000000000001e113         db  0x18 ; '.'
000000000001e114         db  0x41 ; 'A'
000000000001e115         db  0x0e ; '.'
000000000001e116         db  0x10 ; '.'
000000000001e117         db  0x42 ; 'B'
000000000001e118         db  0x0e ; '.'
000000000001e119         db  0x08 ; '.'
000000000001e11a         db  0x45 ; 'E'
000000000001e11b         db  0x0b ; '.'
000000000001e11c         db  0x55 ; 'U'
000000000001e11d         db  0x0a ; '.'
000000000001e11e         db  0x0e ; '.'
000000000001e11f         db  0x18 ; '.'
000000000001e120         db  0x41 ; 'A'
000000000001e121         db  0x0e ; '.'
000000000001e122         db  0x10 ; '.'
000000000001e123         db  0x42 ; 'B'
000000000001e124         db  0x0e ; '.'
000000000001e125         db  0x08 ; '.'
000000000001e126         db  0x48 ; 'H'
000000000001e127         db  0x0b ; '.'
000000000001e128         db  0x41 ; 'A'
000000000001e129         db  0x0a ; '.'
000000000001e12a         db  0x0e ; '.'
000000000001e12b         db  0x18 ; '.'
000000000001e12c         db  0x46 ; 'F'
000000000001e12d         db  0x0e ; '.'
000000000001e12e         db  0x10 ; '.'
000000000001e12f         db  0x42 ; 'B'
000000000001e130         db  0x0e ; '.'
000000000001e131         db  0x08 ; '.'
000000000001e132         db  0x47 ; 'G'
000000000001e133         db  0x0b ; '.'
000000000001e134         db  0x49 ; 'I'
000000000001e135         db  0x0e ; '.'
000000000001e136         db  0x18 ; '.'
000000000001e137         db  0x41 ; 'A'
000000000001e138         db  0x0e ; '.'
000000000001e139         db  0x10 ; '.'
000000000001e13a         db  0x42 ; 'B'
000000000001e13b         db  0x0e ; '.'
000000000001e13c         db  0x08 ; '.'
000000000001e13d         db  0x00 ; '.'
000000000001e13e         db  0x00 ; '.'
000000000001e13f         db  0x00 ; '.'
000000000001e140         dd         0x0000001c                                  ; Length of the record
000000000001e144         dd         0x00002ac4                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001e148         db         0xb8, 0x7b, 2 dup (0xff)                    ; begin 0x15d00
000000000001e14c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x15d18)
000000000001e150         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001e151         db  0x44 ; 'D'
000000000001e152         db  0x0e ; '.'
000000000001e153         db  0x10 ; '.'
000000000001e154         db  0x4e ; 'N'
000000000001e155         db  0x0a ; '.'
000000000001e156         db  0x0e ; '.'
000000000001e157         db  0x08 ; '.'
000000000001e158         db  0x41 ; 'A'
000000000001e159         db  0x0b ; '.'
000000000001e15a         db  0x00 ; '.'
000000000001e15b         db  0x00 ; '.'
000000000001e15c         db  0x00 ; '.'
000000000001e15d         db  0x00 ; '.'
000000000001e15e         db  0x00 ; '.'
000000000001e15f         db  0x00 ; '.'
000000000001e160         dd         0x00000014                                  ; Length of the record
000000000001e164         dd         0x00002ae4                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001e168         db         0xb8, 0x7b, 2 dup (0xff)                    ; begin 0x15d20
000000000001e16c         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x15d56)
000000000001e170         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001e171         align      8
000000000001e178         dd         0x0000001c                                  ; Length of the record
000000000001e17c         dd         0x00002afc                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001e180         db         0xe0, 0x7b, 2 dup (0xff)                    ; begin 0x15d60
000000000001e184         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x15d9c)
000000000001e188         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001e189         db  0x44 ; 'D'
000000000001e18a         db  0x0e ; '.'
000000000001e18b         db  0x10 ; '.'
000000000001e18c         db  0x61 ; 'a'
000000000001e18d         db  0x0a ; '.'
000000000001e18e         db  0x0e ; '.'
000000000001e18f         db  0x08 ; '.'
000000000001e190         db  0x4b ; 'K'
000000000001e191         db  0x0b ; '.'
000000000001e192         db  0x4b ; 'K'
000000000001e193         db  0x0e ; '.'
000000000001e194         db  0x08 ; '.'
000000000001e195         db  0x00 ; '.'
000000000001e196         db  0x00 ; '.'
000000000001e197         db  0x00 ; '.'
000000000001e198         dd         0x00000034                                  ; Length of the record
000000000001e19c         dd         0x00002b1c                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001e1a0         db         0x00, 0x7c, 2 dup (0xff)                    ; begin 0x15da0
000000000001e1a4         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x15e1b)
000000000001e1a8         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001e1a9         db  0x42 ; 'B'
000000000001e1aa         db  0x0e ; '.'
000000000001e1ab         db  0x10 ; '.'
000000000001e1ac         db  0x8c ; '.'
000000000001e1ad         db  0x02 ; '.'
000000000001e1ae         db  0x41 ; 'A'
000000000001e1af         db  0x0e ; '.'
000000000001e1b0         db  0x18 ; '.'
000000000001e1b1         db  0x86 ; '.'
000000000001e1b2         db  0x03 ; '.'
000000000001e1b3         db  0x41 ; 'A'
000000000001e1b4         db  0x0e ; '.'
000000000001e1b5         db  0x20 ; ' '
000000000001e1b6         db  0x83 ; '.'
000000000001e1b7         db  0x04 ; '.'
000000000001e1b8         db  0x7d ; '}'
000000000001e1b9         db  0x0a ; '.'
000000000001e1ba         db  0x0e ; '.'
000000000001e1bb         db  0x18 ; '.'
000000000001e1bc         db  0x41 ; 'A'
000000000001e1bd         db  0x0e ; '.'
000000000001e1be         db  0x10 ; '.'
000000000001e1bf         db  0x42 ; 'B'
000000000001e1c0         db  0x0e ; '.'
000000000001e1c1         db  0x08 ; '.'
000000000001e1c2         db  0x44 ; 'D'
000000000001e1c3         db  0x0b ; '.'
000000000001e1c4         db  0x60 ; '`'
000000000001e1c5         db  0x0a ; '.'
000000000001e1c6         db  0x0e ; '.'
000000000001e1c7         db  0x18 ; '.'
000000000001e1c8         db  0x41 ; 'A'
000000000001e1c9         db  0x0e ; '.'
000000000001e1ca         db  0x10 ; '.'
000000000001e1cb         db  0x42 ; 'B'
000000000001e1cc         db  0x0e ; '.'
000000000001e1cd         db  0x08 ; '.'
000000000001e1ce         db  0x45 ; 'E'
000000000001e1cf         db  0x0b ; '.'
000000000001e1d0         dd         0x0000001c                                  ; Length of the record
000000000001e1d4         dd         0x00002b54                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001e1d8         db         0x48, 0x7c, 2 dup (0xff)                    ; begin 0x15e20
000000000001e1dc         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x15e60)
000000000001e1e0         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001e1e1         db  0x44 ; 'D'
000000000001e1e2         db  0x0e ; '.'
000000000001e1e3         db  0x10 ; '.'
000000000001e1e4         db  0x83 ; '.'
000000000001e1e5         db  0x02 ; '.'
000000000001e1e6         db  0x5a ; 'Z'
000000000001e1e7         db  0x0a ; '.'
000000000001e1e8         db  0x0e ; '.'
000000000001e1e9         db  0x08 ; '.'
000000000001e1ea         db  0x4a ; 'J'
000000000001e1eb         db  0x0b ; '.'
000000000001e1ec         db  0x53 ; 'S'
000000000001e1ed         db  0x0e ; '.'
000000000001e1ee         db  0x08 ; '.'
000000000001e1ef         db  0x00 ; '.'
000000000001e1f0         dd         0x0000002c                                  ; Length of the record
000000000001e1f4         dd         0x00002b74                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001e1f8         db         0x68, 0x7c, 2 dup (0xff)                    ; begin 0x15e60
000000000001e1fc         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x15eb7)
000000000001e200         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001e201         db  0x63 ; 'c'
000000000001e202         db  0x0e ; '.'
000000000001e203         db  0x10 ; '.'
000000000001e204         db  0x8c ; '.'
000000000001e205         db  0x02 ; '.'
000000000001e206         db  0x41 ; 'A'
000000000001e207         db  0x0e ; '.'
000000000001e208         db  0x18 ; '.'
000000000001e209         db  0x86 ; '.'
000000000001e20a         db  0x03 ; '.'
000000000001e20b         db  0x44 ; 'D'
000000000001e20c         db  0x0e ; '.'
000000000001e20d         db  0x20 ; ' '
000000000001e20e         db  0x83 ; '.'
000000000001e20f         db  0x04 ; '.'
000000000001e210         db  0x6b ; 'k'
000000000001e211         db  0x0e ; '.'
000000000001e212         db  0x18 ; '.'
000000000001e213         db  0x41 ; 'A'
000000000001e214         db  0x0e ; '.'
000000000001e215         db  0x10 ; '.'
000000000001e216         db  0x42 ; 'B'
000000000001e217         db  0x0e ; '.'
000000000001e218         db  0x08 ; '.'
000000000001e219         db  0x00 ; '.'
000000000001e21a         db  0x00 ; '.'
000000000001e21b         db  0x00 ; '.'
000000000001e21c         db  0x00 ; '.'
000000000001e21d         db  0x00 ; '.'
000000000001e21e         db  0x00 ; '.'
000000000001e21f         db  0x00 ; '.'
000000000001e220         dd         0x00000044                                  ; Length of the record
000000000001e224         dd         0x00002ba4                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001e228         db         0x98, 0x7c, 2 dup (0xff)                    ; begin 0x15ec0
000000000001e22c         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x15f25)
000000000001e230         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001e231         db  0x42 ; 'B'
000000000001e232         db  0x0e ; '.'
000000000001e233         db  0x10 ; '.'
000000000001e234         db  0x8f ; '.'
000000000001e235         db  0x02 ; '.'
000000000001e236         db  0x42 ; 'B'
000000000001e237         db  0x0e ; '.'
000000000001e238         db  0x18 ; '.'
000000000001e239         db  0x8e ; '.'
000000000001e23a         db  0x03 ; '.'
000000000001e23b         db  0x45 ; 'E'
000000000001e23c         db  0x0e ; '.'
000000000001e23d         db  0x20 ; ' '
000000000001e23e         db  0x8d ; '.'
000000000001e23f         db  0x04 ; '.'
000000000001e240         db  0x42 ; 'B'
000000000001e241         db  0x0e ; '.'
000000000001e242         db  0x28 ; '('
000000000001e243         db  0x8c ; '.'
000000000001e244         db  0x05 ; '.'
000000000001e245         db  0x48 ; 'H'
000000000001e246         db  0x0e ; '.'
000000000001e247         db  0x30 ; '0'
000000000001e248         db  0x86 ; '.'
000000000001e249         db  0x06 ; '.'
000000000001e24a         db  0x48 ; 'H'
000000000001e24b         db  0x0e ; '.'
000000000001e24c         db  0x38 ; '8'
000000000001e24d         db  0x83 ; '.'
000000000001e24e         db  0x07 ; '.'
000000000001e24f         db  0x4d ; 'M'
000000000001e250         db  0x0e ; '.'
000000000001e251         db  0x40 ; '@'
000000000001e252         db  0x72 ; 'r'
000000000001e253         db  0x0e ; '.'
000000000001e254         db  0x38 ; '8'
000000000001e255         db  0x41 ; 'A'
000000000001e256         db  0x0e ; '.'
000000000001e257         db  0x30 ; '0'
000000000001e258         db  0x41 ; 'A'
000000000001e259         db  0x0e ; '.'
000000000001e25a         db  0x28 ; '('
000000000001e25b         db  0x42 ; 'B'
000000000001e25c         db  0x0e ; '.'
000000000001e25d         db  0x20 ; ' '
000000000001e25e         db  0x42 ; 'B'
000000000001e25f         db  0x0e ; '.'
000000000001e260         db  0x18 ; '.'
000000000001e261         db  0x42 ; 'B'
000000000001e262         db  0x0e ; '.'
000000000001e263         db  0x10 ; '.'
000000000001e264         db  0x42 ; 'B'
000000000001e265         db  0x0e ; '.'
000000000001e266         db  0x08 ; '.'
000000000001e267         db  0x00 ; '.'
000000000001e268         dd         0x00000014                                  ; Length of the record
000000000001e26c         dd         0x00002bec                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001e270         db         0xc0, 0x7c, 2 dup (0xff)                    ; begin 0x15f30
000000000001e274         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x15f32)
000000000001e278         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001e279         align      128
000000000001e280         dd         0x00000010                                  ; Length of the record
000000000001e284         dd         0x00002c04                                  ; FDE: parent CIE at 0x1b680 (FDE encoding = 0x1B)
000000000001e288         db         0xb8, 0x7c, 2 dup (0xff)                    ; begin 0x15f40
000000000001e28c         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x15f4e)
000000000001e290         db         0x00                                        ; Augmentation length (LEB128=0)
000000000001e291         align      8


        ; Segment Segment 3
        ; Range: [0x21f050; 0x221558[ (9480 bytes)
        ; File offset : [127056; 131688[ (4632 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x21f050; 0x21f058[ (8 bytes)
        ; File offset : [127056; 127064[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
000000000021f050         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x21f058; 0x21f060[ (8 bytes)
        ; File offset : [127064; 127072[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
000000000021f058         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x21f060; 0x21fa98[ (2616 bytes)
        ; File offset : [127072; 129688[ (2616 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     sort_functions:
000000000021f060         db  0x80 ; '.'                                         ; DATA XREF=sort_files+252
000000000021f061         db  0x5e ; '^'
000000000021f062         db  0x00 ; '.'
000000000021f063         db  0x00 ; '.'
000000000021f064         db  0x00 ; '.'
000000000021f065         db  0x00 ; '.'
000000000021f066         db  0x00 ; '.'
000000000021f067         db  0x00 ; '.'
000000000021f068         db  0xf0 ; '.'
000000000021f069         db  0x65 ; 'e'
000000000021f06a         db  0x00 ; '.'
000000000021f06b         db  0x00 ; '.'
000000000021f06c         db  0x00 ; '.'
000000000021f06d         db  0x00 ; '.'
000000000021f06e         db  0x00 ; '.'
000000000021f06f         db  0x00 ; '.'
000000000021f070         db  0x90 ; '.'
000000000021f071         db  0x5e ; '^'
000000000021f072         db  0x00 ; '.'
000000000021f073         db  0x00 ; '.'
000000000021f074         db  0x00 ; '.'
000000000021f075         db  0x00 ; '.'
000000000021f076         db  0x00 ; '.'
000000000021f077         db  0x00 ; '.'
000000000021f078         db  0x10 ; '.'
000000000021f079         db  0x67 ; 'g'
000000000021f07a         db  0x00 ; '.'
000000000021f07b         db  0x00 ; '.'
000000000021f07c         db  0x00 ; '.'
000000000021f07d         db  0x00 ; '.'
000000000021f07e         db  0x00 ; '.'
000000000021f07f         db  0x00 ; '.'
000000000021f080         db  0xc0 ; '.'
000000000021f081         db  0x5a ; 'Z'
000000000021f082         db  0x00 ; '.'
000000000021f083         db  0x00 ; '.'
000000000021f084         db  0x00 ; '.'
000000000021f085         db  0x00 ; '.'
000000000021f086         db  0x00 ; '.'
000000000021f087         db  0x00 ; '.'
000000000021f088         db  0x80 ; '.'
000000000021f089         db  0x66 ; 'f'
000000000021f08a         db  0x00 ; '.'
000000000021f08b         db  0x00 ; '.'
000000000021f08c         db  0x00 ; '.'
000000000021f08d         db  0x00 ; '.'
000000000021f08e         db  0x00 ; '.'
000000000021f08f         db  0x00 ; '.'
000000000021f090         db  0xd0 ; '.'
000000000021f091         db  0x5a ; 'Z'
000000000021f092         db  0x00 ; '.'
000000000021f093         db  0x00 ; '.'
000000000021f094         db  0x00 ; '.'
000000000021f095         db  0x00 ; '.'
000000000021f096         db  0x00 ; '.'
000000000021f097         db  0x00 ; '.'
000000000021f098         db  0xa0 ; '.'
000000000021f099         db  0x67 ; 'g'
000000000021f09a         db  0x00 ; '.'
000000000021f09b         db  0x00 ; '.'
000000000021f09c         db  0x00 ; '.'
000000000021f09d         db  0x00 ; '.'
000000000021f09e         db  0x00 ; '.'
000000000021f09f         db  0x00 ; '.'
000000000021f0a0         db  0x50 ; 'P'
000000000021f0a1         db  0xac ; '.'
000000000021f0a2         db  0x00 ; '.'
000000000021f0a3         db  0x00 ; '.'
000000000021f0a4         db  0x00 ; '.'
000000000021f0a5         db  0x00 ; '.'
000000000021f0a6         db  0x00 ; '.'
000000000021f0a7         db  0x00 ; '.'
000000000021f0a8         db  0x00 ; '.'
000000000021f0a9         db  0xb5 ; '.'
000000000021f0aa         db  0x00 ; '.'
000000000021f0ab         db  0x00 ; '.'
000000000021f0ac         db  0x00 ; '.'
000000000021f0ad         db  0x00 ; '.'
000000000021f0ae         db  0x00 ; '.'
000000000021f0af         db  0x00 ; '.'
000000000021f0b0         db  0xc0 ; '.'
000000000021f0b1         db  0xac ; '.'
000000000021f0b2         db  0x00 ; '.'
000000000021f0b3         db  0x00 ; '.'
000000000021f0b4         db  0x00 ; '.'
000000000021f0b5         db  0x00 ; '.'
000000000021f0b6         db  0x00 ; '.'
000000000021f0b7         db  0x00 ; '.'
000000000021f0b8         db  0x10 ; '.'
000000000021f0b9         db  0xb4 ; '.'
000000000021f0ba         db  0x00 ; '.'
000000000021f0bb         db  0x00 ; '.'
000000000021f0bc         db  0x00 ; '.'
000000000021f0bd         db  0x00 ; '.'
000000000021f0be         db  0x00 ; '.'
000000000021f0bf         db  0x00 ; '.'
000000000021f0c0         db  0x10 ; '.'
000000000021f0c1         db  0xb3 ; '.'
000000000021f0c2         db  0x00 ; '.'
000000000021f0c3         db  0x00 ; '.'
000000000021f0c4         db  0x00 ; '.'
000000000021f0c5         db  0x00 ; '.'
000000000021f0c6         db  0x00 ; '.'
000000000021f0c7         db  0x00 ; '.'
000000000021f0c8         db  0x10 ; '.'
000000000021f0c9         db  0xb8 ; '.'
000000000021f0ca         db  0x00 ; '.'
000000000021f0cb         db  0x00 ; '.'
000000000021f0cc         db  0x00 ; '.'
000000000021f0cd         db  0x00 ; '.'
000000000021f0ce         db  0x00 ; '.'
000000000021f0cf         db  0x00 ; '.'
000000000021f0d0         db  0x90 ; '.'
000000000021f0d1         db  0xb3 ; '.'
000000000021f0d2         db  0x00 ; '.'
000000000021f0d3         db  0x00 ; '.'
000000000021f0d4         db  0x00 ; '.'
000000000021f0d5         db  0x00 ; '.'
000000000021f0d6         db  0x00 ; '.'
000000000021f0d7         db  0x00 ; '.'
000000000021f0d8         db  0x50 ; 'P'
000000000021f0d9         db  0x6b ; 'k'
000000000021f0da         db  0x00 ; '.'
000000000021f0db         db  0x00 ; '.'
000000000021f0dc         db  0x00 ; '.'
000000000021f0dd         db  0x00 ; '.'
000000000021f0de         db  0x00 ; '.'
000000000021f0df         db  0x00 ; '.'
000000000021f0e0         db  0x10 ; '.'
000000000021f0e1         db  0x5e ; '^'
000000000021f0e2         db  0x00 ; '.'
000000000021f0e3         db  0x00 ; '.'
000000000021f0e4         db  0x00 ; '.'
000000000021f0e5         db  0x00 ; '.'
000000000021f0e6         db  0x00 ; '.'
000000000021f0e7         db  0x00 ; '.'
000000000021f0e8         db  0x70 ; 'p'
000000000021f0e9         db  0x63 ; 'c'
000000000021f0ea         db  0x00 ; '.'
000000000021f0eb         db  0x00 ; '.'
000000000021f0ec         db  0x00 ; '.'
000000000021f0ed         db  0x00 ; '.'
000000000021f0ee         db  0x00 ; '.'
000000000021f0ef         db  0x00 ; '.'
000000000021f0f0         db  0x40 ; '@'
000000000021f0f1         db  0x5e ; '^'
000000000021f0f2         db  0x00 ; '.'
000000000021f0f3         db  0x00 ; '.'
000000000021f0f4         db  0x00 ; '.'
000000000021f0f5         db  0x00 ; '.'
000000000021f0f6         db  0x00 ; '.'
000000000021f0f7         db  0x00 ; '.'
000000000021f0f8         db  0xb0 ; '.'
000000000021f0f9         db  0x64 ; 'd'
000000000021f0fa         db  0x00 ; '.'
000000000021f0fb         db  0x00 ; '.'
000000000021f0fc         db  0x00 ; '.'
000000000021f0fd         db  0x00 ; '.'
000000000021f0fe         db  0x00 ; '.'
000000000021f0ff         db  0x00 ; '.'
000000000021f100         db  0x40 ; '@'
000000000021f101         db  0x5a ; 'Z'
000000000021f102         db  0x00 ; '.'
000000000021f103         db  0x00 ; '.'
000000000021f104         db  0x00 ; '.'
000000000021f105         db  0x00 ; '.'
000000000021f106         db  0x00 ; '.'
000000000021f107         db  0x00 ; '.'
000000000021f108         db  0x10 ; '.'
000000000021f109         db  0x64 ; 'd'
000000000021f10a         db  0x00 ; '.'
000000000021f10b         db  0x00 ; '.'
000000000021f10c         db  0x00 ; '.'
000000000021f10d         db  0x00 ; '.'
000000000021f10e         db  0x00 ; '.'
000000000021f10f         db  0x00 ; '.'
000000000021f110         db  0x80 ; '.'
000000000021f111         db  0x5a ; 'Z'
000000000021f112         db  0x00 ; '.'
000000000021f113         db  0x00 ; '.'
000000000021f114         db  0x00 ; '.'
000000000021f115         db  0x00 ; '.'
000000000021f116         db  0x00 ; '.'
000000000021f117         db  0x00 ; '.'
000000000021f118         db  0x50 ; 'P'
000000000021f119         db  0x65 ; 'e'
000000000021f11a         db  0x00 ; '.'
000000000021f11b         db  0x00 ; '.'
000000000021f11c         db  0x00 ; '.'
000000000021f11d         db  0x00 ; '.'
000000000021f11e         db  0x00 ; '.'
000000000021f11f         db  0x00 ; '.'
000000000021f120         db  0xb0 ; '.'
000000000021f121         db  0x5e ; '^'
000000000021f122         db  0x00 ; '.'
000000000021f123         db  0x00 ; '.'
000000000021f124         db  0x00 ; '.'
000000000021f125         db  0x00 ; '.'
000000000021f126         db  0x00 ; '.'
000000000021f127         db  0x00 ; '.'
000000000021f128         db  0xc0 ; '.'
000000000021f129         db  0x6a ; 'j'
000000000021f12a         db  0x00 ; '.'
000000000021f12b         db  0x00 ; '.'
000000000021f12c         db  0x00 ; '.'
000000000021f12d         db  0x00 ; '.'
000000000021f12e         db  0x00 ; '.'
000000000021f12f         db  0x00 ; '.'
000000000021f130         db  0xa0 ; '.'
000000000021f131         db  0x5e ; '^'
000000000021f132         db  0x00 ; '.'
000000000021f133         db  0x00 ; '.'
000000000021f134         db  0x00 ; '.'
000000000021f135         db  0x00 ; '.'
000000000021f136         db  0x00 ; '.'
000000000021f137         db  0x00 ; '.'
000000000021f138         db  0x30 ; '0'
000000000021f139         db  0x6a ; 'j'
000000000021f13a         db  0x00 ; '.'
000000000021f13b         db  0x00 ; '.'
000000000021f13c         db  0x00 ; '.'
000000000021f13d         db  0x00 ; '.'
000000000021f13e         db  0x00 ; '.'
000000000021f13f         db  0x00 ; '.'
000000000021f140         db  0x00 ; '.'
000000000021f141         db  0x00 ; '.'
000000000021f142         db  0x00 ; '.'
000000000021f143         db  0x00 ; '.'
000000000021f144         db  0x00 ; '.'
000000000021f145         db  0x00 ; '.'
000000000021f146         db  0x00 ; '.'
000000000021f147         db  0x00 ; '.'
000000000021f148         db  0x00 ; '.'
000000000021f149         db  0x00 ; '.'
000000000021f14a         db  0x00 ; '.'
000000000021f14b         db  0x00 ; '.'
000000000021f14c         db  0x00 ; '.'
000000000021f14d         db  0x00 ; '.'
000000000021f14e         db  0x00 ; '.'
000000000021f14f         db  0x00 ; '.'
000000000021f150         db  0x00 ; '.'
000000000021f151         db  0x00 ; '.'
000000000021f152         db  0x00 ; '.'
000000000021f153         db  0x00 ; '.'
000000000021f154         db  0x00 ; '.'
000000000021f155         db  0x00 ; '.'
000000000021f156         db  0x00 ; '.'
000000000021f157         db  0x00 ; '.'
000000000021f158         db  0x00 ; '.'
000000000021f159         db  0x00 ; '.'
000000000021f15a         db  0x00 ; '.'
000000000021f15b         db  0x00 ; '.'
000000000021f15c         db  0x00 ; '.'
000000000021f15d         db  0x00 ; '.'
000000000021f15e         db  0x00 ; '.'
000000000021f15f         db  0x00 ; '.'
000000000021f160         db  0x40 ; '@'
000000000021f161         db  0xab ; '.'
000000000021f162         db  0x00 ; '.'
000000000021f163         db  0x00 ; '.'
000000000021f164         db  0x00 ; '.'
000000000021f165         db  0x00 ; '.'
000000000021f166         db  0x00 ; '.'
000000000021f167         db  0x00 ; '.'
000000000021f168         db  0x80 ; '.'
000000000021f169         db  0xaf ; '.'
000000000021f16a         db  0x00 ; '.'
000000000021f16b         db  0x00 ; '.'
000000000021f16c         db  0x00 ; '.'
000000000021f16d         db  0x00 ; '.'
000000000021f16e         db  0x00 ; '.'
000000000021f16f         db  0x00 ; '.'
000000000021f170         db  0x80 ; '.'
000000000021f171         db  0xab ; '.'
000000000021f172         db  0x00 ; '.'
000000000021f173         db  0x00 ; '.'
000000000021f174         db  0x00 ; '.'
000000000021f175         db  0x00 ; '.'
000000000021f176         db  0x00 ; '.'
000000000021f177         db  0x00 ; '.'
000000000021f178         db  0xf0 ; '.'
000000000021f179         db  0xb0 ; '.'
000000000021f17a         db  0x00 ; '.'
000000000021f17b         db  0x00 ; '.'
000000000021f17c         db  0x00 ; '.'
000000000021f17d         db  0x00 ; '.'
000000000021f17e         db  0x00 ; '.'
000000000021f17f         db  0x00 ; '.'
000000000021f180         db  0x40 ; '@'
000000000021f181         db  0xae ; '.'
000000000021f182         db  0x00 ; '.'
000000000021f183         db  0x00 ; '.'
000000000021f184         db  0x00 ; '.'
000000000021f185         db  0x00 ; '.'
000000000021f186         db  0x00 ; '.'
000000000021f187         db  0x00 ; '.'
000000000021f188         db  0x80 ; '.'
000000000021f189         db  0x69 ; 'i'
000000000021f18a         db  0x00 ; '.'
000000000021f18b         db  0x00 ; '.'
000000000021f18c         db  0x00 ; '.'
000000000021f18d         db  0x00 ; '.'
000000000021f18e         db  0x00 ; '.'
000000000021f18f         db  0x00 ; '.'
000000000021f190         db  0x70 ; 'p'
000000000021f191         db  0xad ; '.'
000000000021f192         db  0x00 ; '.'
000000000021f193         db  0x00 ; '.'
000000000021f194         db  0x00 ; '.'
000000000021f195         db  0x00 ; '.'
000000000021f196         db  0x00 ; '.'
000000000021f197         db  0x00 ; '.'
000000000021f198         db  0xa0 ; '.'
000000000021f199         db  0xb6 ; '.'
000000000021f19a         db  0x00 ; '.'
000000000021f19b         db  0x00 ; '.'
000000000021f19c         db  0x00 ; '.'
000000000021f19d         db  0x00 ; '.'
000000000021f19e         db  0x00 ; '.'
000000000021f19f         db  0x00 ; '.'
000000000021f1a0         db  0xb0 ; '.'
000000000021f1a1         db  0xaa ; '.'
000000000021f1a2         db  0x00 ; '.'
000000000021f1a3         db  0x00 ; '.'
000000000021f1a4         db  0x00 ; '.'
000000000021f1a5         db  0x00 ; '.'
000000000021f1a6         db  0x00 ; '.'
000000000021f1a7         db  0x00 ; '.'
000000000021f1a8         db  0x50 ; 'P'
000000000021f1a9         db  0xb2 ; '.'
000000000021f1aa         db  0x00 ; '.'
000000000021f1ab         db  0x00 ; '.'
000000000021f1ac         db  0x00 ; '.'
000000000021f1ad         db  0x00 ; '.'
000000000021f1ae         db  0x00 ; '.'
000000000021f1af         db  0x00 ; '.'
000000000021f1b0         db  0x00 ; '.'
000000000021f1b1         db  0xac ; '.'
000000000021f1b2         db  0x00 ; '.'
000000000021f1b3         db  0x00 ; '.'
000000000021f1b4         db  0x00 ; '.'
000000000021f1b5         db  0x00 ; '.'
000000000021f1b6         db  0x00 ; '.'
000000000021f1b7         db  0x00 ; '.'
000000000021f1b8         db  0x30 ; '0'
000000000021f1b9         db  0xb0 ; '.'
000000000021f1ba         db  0x00 ; '.'
000000000021f1bb         db  0x00 ; '.'
000000000021f1bc         db  0x00 ; '.'
000000000021f1bd         db  0x00 ; '.'
000000000021f1be         db  0x00 ; '.'
000000000021f1bf         db  0x00 ; '.'
000000000021f1c0         db  0x80 ; '.'
000000000021f1c1         db  0xae ; '.'
000000000021f1c2         db  0x00 ; '.'
000000000021f1c3         db  0x00 ; '.'
000000000021f1c4         db  0x00 ; '.'
000000000021f1c5         db  0x00 ; '.'
000000000021f1c6         db  0x00 ; '.'
000000000021f1c7         db  0x00 ; '.'
000000000021f1c8         db  0x50 ; 'P'
000000000021f1c9         db  0xb7 ; '.'
000000000021f1ca         db  0x00 ; '.'
000000000021f1cb         db  0x00 ; '.'
000000000021f1cc         db  0x00 ; '.'
000000000021f1cd         db  0x00 ; '.'
000000000021f1ce         db  0x00 ; '.'
000000000021f1cf         db  0x00 ; '.'
000000000021f1d0         db  0xb0 ; '.'
000000000021f1d1         db  0xad ; '.'
000000000021f1d2         db  0x00 ; '.'
000000000021f1d3         db  0x00 ; '.'
000000000021f1d4         db  0x00 ; '.'
000000000021f1d5         db  0x00 ; '.'
000000000021f1d6         db  0x00 ; '.'
000000000021f1d7         db  0x00 ; '.'
000000000021f1d8         db  0x30 ; '0'
000000000021f1d9         db  0x94 ; '.'
000000000021f1da         db  0x00 ; '.'
000000000021f1db         db  0x00 ; '.'
000000000021f1dc         db  0x00 ; '.'
000000000021f1dd         db  0x00 ; '.'
000000000021f1de         db  0x00 ; '.'
000000000021f1df         db  0x00 ; '.'
000000000021f1e0         db  0x00 ; '.'
000000000021f1e1         db  0xab ; '.'
000000000021f1e2         db  0x00 ; '.'
000000000021f1e3         db  0x00 ; '.'
000000000021f1e4         db  0x00 ; '.'
000000000021f1e5         db  0x00 ; '.'
000000000021f1e6         db  0x00 ; '.'
000000000021f1e7         db  0x00 ; '.'
000000000021f1e8         db  0xd0 ; '.'
000000000021f1e9         db  0xae ; '.'
000000000021f1ea         db  0x00 ; '.'
000000000021f1eb         db  0x00 ; '.'
000000000021f1ec         db  0x00 ; '.'
000000000021f1ed         db  0x00 ; '.'
000000000021f1ee         db  0x00 ; '.'
000000000021f1ef         db  0x00 ; '.'
000000000021f1f0         db  0xc0 ; '.'
000000000021f1f1         db  0xab ; '.'
000000000021f1f2         db  0x00 ; '.'
000000000021f1f3         db  0x00 ; '.'
000000000021f1f4         db  0x00 ; '.'
000000000021f1f5         db  0x00 ; '.'
000000000021f1f6         db  0x00 ; '.'
000000000021f1f7         db  0x00 ; '.'
000000000021f1f8         db  0xa0 ; '.'
000000000021f1f9         db  0xb1 ; '.'
000000000021f1fa         db  0x00 ; '.'
000000000021f1fb         db  0x00 ; '.'
000000000021f1fc         db  0x00 ; '.'
000000000021f1fd         db  0x00 ; '.'
000000000021f1fe         db  0x00 ; '.'
000000000021f1ff         db  0x00 ; '.'
000000000021f200         db  0x00 ; '.'
000000000021f201         db  0xae ; '.'
000000000021f202         db  0x00 ; '.'
000000000021f203         db  0x00 ; '.'
000000000021f204         db  0x00 ; '.'
000000000021f205         db  0x00 ; '.'
000000000021f206         db  0x00 ; '.'
000000000021f207         db  0x00 ; '.'
000000000021f208         db  0xf0 ; '.'
000000000021f209         db  0xb5 ; '.'
000000000021f20a         db  0x00 ; '.'
000000000021f20b         db  0x00 ; '.'
000000000021f20c         db  0x00 ; '.'
000000000021f20d         db  0x00 ; '.'
000000000021f20e         db  0x00 ; '.'
000000000021f20f         db  0x00 ; '.'
000000000021f210         db  0x30 ; '0'
000000000021f211         db  0xad ; '.'
000000000021f212         db  0x00 ; '.'
000000000021f213         db  0x00 ; '.'
000000000021f214         db  0x00 ; '.'
000000000021f215         db  0x00 ; '.'
000000000021f216         db  0x00 ; '.'
000000000021f217         db  0x00 ; '.'
000000000021f218         db  0x80 ; '.'
000000000021f219         db  0x93 ; '.'
000000000021f21a         db  0x00 ; '.'
000000000021f21b         db  0x00 ; '.'
000000000021f21c         db  0x00 ; '.'
000000000021f21d         db  0x00 ; '.'
000000000021f21e         db  0x00 ; '.'
000000000021f21f         db  0x00 ; '.'
                     when_args:
000000000021f220         db  0x4c ; 'L'                                         ; DATA XREF=main+1820, main+2102
000000000021f221         db  0xa3 ; '.'
000000000021f222         db  0x01 ; '.'
000000000021f223         db  0x00 ; '.'
000000000021f224         db  0x00 ; '.'
000000000021f225         db  0x00 ; '.'
000000000021f226         db  0x00 ; '.'
000000000021f227         db  0x00 ; '.'
000000000021f228         db  0xdc ; '.'
000000000021f229         db  0x7b ; '{'
000000000021f22a         db  0x01 ; '.'
000000000021f22b         db  0x00 ; '.'
000000000021f22c         db  0x00 ; '.'
000000000021f22d         db  0x00 ; '.'
000000000021f22e         db  0x00 ; '.'
000000000021f22f         db  0x00 ; '.'
000000000021f230         db  0xe0 ; '.'
000000000021f231         db  0x7b ; '{'
000000000021f232         db  0x01 ; '.'
000000000021f233         db  0x00 ; '.'
000000000021f234         db  0x00 ; '.'
000000000021f235         db  0x00 ; '.'
000000000021f236         db  0x00 ; '.'
000000000021f237         db  0x00 ; '.'
000000000021f238         db  0xe6 ; '.'
000000000021f239         db  0x7b ; '{'
000000000021f23a         db  0x01 ; '.'
000000000021f23b         db  0x00 ; '.'
000000000021f23c         db  0x00 ; '.'
000000000021f23d         db  0x00 ; '.'
000000000021f23e         db  0x00 ; '.'
000000000021f23f         db  0x00 ; '.'
000000000021f240         db  0xec ; '.'
000000000021f241         db  0x7b ; '{'
000000000021f242         db  0x01 ; '.'
000000000021f243         db  0x00 ; '.'
000000000021f244         db  0x00 ; '.'
000000000021f245         db  0x00 ; '.'
000000000021f246         db  0x00 ; '.'
000000000021f247         db  0x00 ; '.'
000000000021f248         db  0xef ; '.'
000000000021f249         db  0x7b ; '{'
000000000021f24a         db  0x01 ; '.'
000000000021f24b         db  0x00 ; '.'
000000000021f24c         db  0x00 ; '.'
000000000021f24d         db  0x00 ; '.'
000000000021f24e         db  0x00 ; '.'
000000000021f24f         db  0x00 ; '.'
000000000021f250         db  0xf4 ; '.'
000000000021f251         db  0x7b ; '{'
000000000021f252         db  0x01 ; '.'
000000000021f253         db  0x00 ; '.'
000000000021f254         db  0x00 ; '.'
000000000021f255         db  0x00 ; '.'
000000000021f256         db  0x00 ; '.'
000000000021f257         db  0x00 ; '.'
000000000021f258         db  0xfc ; '.'
000000000021f259         db  0x7b ; '{'
000000000021f25a         db  0x01 ; '.'
000000000021f25b         db  0x00 ; '.'
000000000021f25c         db  0x00 ; '.'
000000000021f25d         db  0x00 ; '.'
000000000021f25e         db  0x00 ; '.'
000000000021f25f         db  0x00 ; '.'
000000000021f260         db  0xf9 ; '.'
000000000021f261         db  0x7b ; '{'
000000000021f262         db  0x01 ; '.'
000000000021f263         db  0x00 ; '.'
000000000021f264         db  0x00 ; '.'
000000000021f265         db  0x00 ; '.'
000000000021f266         db  0x00 ; '.'
000000000021f267         db  0x00 ; '.'
000000000021f268         db  0x00 ; '.'
000000000021f269         db  0x00 ; '.'
000000000021f26a         db  0x00 ; '.'
000000000021f26b         db  0x00 ; '.'
000000000021f26c         db  0x00 ; '.'
000000000021f26d         db  0x00 ; '.'
000000000021f26e         db  0x00 ; '.'
000000000021f26f         db  0x00 ; '.'
000000000021f270         db  0x00 ; '.'
000000000021f271         db  0x00 ; '.'
000000000021f272         db  0x00 ; '.'
000000000021f273         db  0x00 ; '.'
000000000021f274         db  0x00 ; '.'
000000000021f275         db  0x00 ; '.'
000000000021f276         db  0x00 ; '.'
000000000021f277         db  0x00 ; '.'
000000000021f278         db  0x00 ; '.'
000000000021f279         db  0x00 ; '.'
000000000021f27a         db  0x00 ; '.'
000000000021f27b         db  0x00 ; '.'
000000000021f27c         db  0x00 ; '.'
000000000021f27d         db  0x00 ; '.'
000000000021f27e         db  0x00 ; '.'
000000000021f27f         db  0x00 ; '.'
                     time_args:
000000000021f280         db  0x00 ; '.'                                         ; DATA XREF=main+1478
000000000021f281         db  0x7c ; '|'
000000000021f282         db  0x01 ; '.'
000000000021f283         db  0x00 ; '.'
000000000021f284         db  0x00 ; '.'
000000000021f285         db  0x00 ; '.'
000000000021f286         db  0x00 ; '.'
000000000021f287         db  0x00 ; '.'
000000000021f288         db  0x06 ; '.'
000000000021f289         db  0x7c ; '|'
000000000021f28a         db  0x01 ; '.'
000000000021f28b         db  0x00 ; '.'
000000000021f28c         db  0x00 ; '.'
000000000021f28d         db  0x00 ; '.'
000000000021f28e         db  0x00 ; '.'
000000000021f28f         db  0x00 ; '.'
000000000021f290         db  0x0d ; '.'
000000000021f291         db  0x7c ; '|'
000000000021f292         db  0x01 ; '.'
000000000021f293         db  0x00 ; '.'
000000000021f294         db  0x00 ; '.'
000000000021f295         db  0x00 ; '.'
000000000021f296         db  0x00 ; '.'
000000000021f297         db  0x00 ; '.'
000000000021f298         db  0x11 ; '.'
000000000021f299         db  0x7c ; '|'
000000000021f29a         db  0x01 ; '.'
000000000021f29b         db  0x00 ; '.'
000000000021f29c         db  0x00 ; '.'
000000000021f29d         db  0x00 ; '.'
000000000021f29e         db  0x00 ; '.'
000000000021f29f         db  0x00 ; '.'
000000000021f2a0         db  0x17 ; '.'
000000000021f2a1         db  0x7c ; '|'
000000000021f2a2         db  0x01 ; '.'
000000000021f2a3         db  0x00 ; '.'
000000000021f2a4         db  0x00 ; '.'
000000000021f2a5         db  0x00 ; '.'
000000000021f2a6         db  0x00 ; '.'
000000000021f2a7         db  0x00 ; '.'
000000000021f2a8         db  0x00 ; '.'
000000000021f2a9         db  0x00 ; '.'
000000000021f2aa         db  0x00 ; '.'
000000000021f2ab         db  0x00 ; '.'
000000000021f2ac         db  0x00 ; '.'
000000000021f2ad         db  0x00 ; '.'
000000000021f2ae         db  0x00 ; '.'
000000000021f2af         db  0x00 ; '.'
000000000021f2b0         db  0x00 ; '.'
000000000021f2b1         db  0x00 ; '.'
000000000021f2b2         db  0x00 ; '.'
000000000021f2b3         db  0x00 ; '.'
000000000021f2b4         db  0x00 ; '.'
000000000021f2b5         db  0x00 ; '.'
000000000021f2b6         db  0x00 ; '.'
000000000021f2b7         db  0x00 ; '.'
000000000021f2b8         db  0x00 ; '.'
000000000021f2b9         db  0x00 ; '.'
000000000021f2ba         db  0x00 ; '.'
000000000021f2bb         db  0x00 ; '.'
000000000021f2bc         db  0x00 ; '.'
000000000021f2bd         db  0x00 ; '.'
000000000021f2be         db  0x00 ; '.'
000000000021f2bf         db  0x00 ; '.'
                     sort_args:
000000000021f2c0         db  0xef ; '.'                                         ; DATA XREF=main+1545
000000000021f2c1         db  0x7b ; '{'
000000000021f2c2         db  0x01 ; '.'
000000000021f2c3         db  0x00 ; '.'
000000000021f2c4         db  0x00 ; '.'
000000000021f2c5         db  0x00 ; '.'
000000000021f2c6         db  0x00 ; '.'
000000000021f2c7         db  0x00 ; '.'
000000000021f2c8         db  0x7d ; '}'
000000000021f2c9         db  0x7a ; 'z'
000000000021f2ca         db  0x01 ; '.'
000000000021f2cb         db  0x00 ; '.'
000000000021f2cc         db  0x00 ; '.'
000000000021f2cd         db  0x00 ; '.'
000000000021f2ce         db  0x00 ; '.'
000000000021f2cf         db  0x00 ; '.'
000000000021f2d0         db  0x6f ; 'o'
000000000021f2d1         db  0x7a ; 'z'
000000000021f2d2         db  0x01 ; '.'
000000000021f2d3         db  0x00 ; '.'
000000000021f2d4         db  0x00 ; '.'
000000000021f2d5         db  0x00 ; '.'
000000000021f2d6         db  0x00 ; '.'
000000000021f2d7         db  0x00 ; '.'
000000000021f2d8         db  0x1e ; '.'
000000000021f2d9         db  0x7c ; '|'
000000000021f2da         db  0x01 ; '.'
000000000021f2db         db  0x00 ; '.'
000000000021f2dc         db  0x00 ; '.'
000000000021f2dd         db  0x00 ; '.'
000000000021f2de         db  0x00 ; '.'
000000000021f2df         db  0x00 ; '.'
000000000021f2e0         db  0x84 ; '.'
000000000021f2e1         db  0x78 ; 'x'
000000000021f2e2         db  0x01 ; '.'
000000000021f2e3         db  0x00 ; '.'
000000000021f2e4         db  0x00 ; '.'
000000000021f2e5         db  0x00 ; '.'
000000000021f2e6         db  0x00 ; '.'
000000000021f2e7         db  0x00 ; '.'
000000000021f2e8         db  0x00 ; '.'
000000000021f2e9         db  0x00 ; '.'
000000000021f2ea         db  0x00 ; '.'
000000000021f2eb         db  0x00 ; '.'
000000000021f2ec         db  0x00 ; '.'
000000000021f2ed         db  0x00 ; '.'
000000000021f2ee         db  0x00 ; '.'
000000000021f2ef         db  0x00 ; '.'
000000000021f2f0         db  0x00 ; '.'
000000000021f2f1         db  0x00 ; '.'
000000000021f2f2         db  0x00 ; '.'
000000000021f2f3         db  0x00 ; '.'
000000000021f2f4         db  0x00 ; '.'
000000000021f2f5         db  0x00 ; '.'
000000000021f2f6         db  0x00 ; '.'
000000000021f2f7         db  0x00 ; '.'
000000000021f2f8         db  0x00 ; '.'
000000000021f2f9         db  0x00 ; '.'
000000000021f2fa         db  0x00 ; '.'
000000000021f2fb         db  0x00 ; '.'
000000000021f2fc         db  0x00 ; '.'
000000000021f2fd         db  0x00 ; '.'
000000000021f2fe         db  0x00 ; '.'
000000000021f2ff         db  0x00 ; '.'
                     format_args:
000000000021f300         db  0x28 ; '('                                         ; DATA XREF=main+1996
000000000021f301         db  0x7c ; '|'
000000000021f302         db  0x01 ; '.'
000000000021f303         db  0x00 ; '.'
000000000021f304         db  0x00 ; '.'
000000000021f305         db  0x00 ; '.'
000000000021f306         db  0x00 ; '.'
000000000021f307         db  0x00 ; '.'
000000000021f308         db  0x30 ; '0'
000000000021f309         db  0x7c ; '|'
000000000021f30a         db  0x01 ; '.'
000000000021f30b         db  0x00 ; '.'
000000000021f30c         db  0x00 ; '.'
000000000021f30d         db  0x00 ; '.'
000000000021f30e         db  0x00 ; '.'
000000000021f30f         db  0x00 ; '.'
000000000021f310         db  0x35 ; '5'
000000000021f311         db  0x7c ; '|'
000000000021f312         db  0x01 ; '.'
000000000021f313         db  0x00 ; '.'
000000000021f314         db  0x00 ; '.'
000000000021f315         db  0x00 ; '.'
000000000021f316         db  0x00 ; '.'
000000000021f317         db  0x00 ; '.'
000000000021f318         db  0x3c ; '<'
000000000021f319         db  0x7c ; '|'
000000000021f31a         db  0x01 ; '.'
000000000021f31b         db  0x00 ; '.'
000000000021f31c         db  0x00 ; '.'
000000000021f31d         db  0x00 ; '.'
000000000021f31e         db  0x00 ; '.'
000000000021f31f         db  0x00 ; '.'
000000000021f320         db  0x47 ; 'G'
000000000021f321         db  0x7c ; '|'
000000000021f322         db  0x01 ; '.'
000000000021f323         db  0x00 ; '.'
000000000021f324         db  0x00 ; '.'
000000000021f325         db  0x00 ; '.'
000000000021f326         db  0x00 ; '.'
000000000021f327         db  0x00 ; '.'
000000000021f328         db  0x4e ; 'N'
000000000021f329         db  0x7c ; '|'
000000000021f32a         db  0x01 ; '.'
000000000021f32b         db  0x00 ; '.'
000000000021f32c         db  0x00 ; '.'
000000000021f32d         db  0x00 ; '.'
000000000021f32e         db  0x00 ; '.'
000000000021f32f         db  0x00 ; '.'
000000000021f330         db  0x57 ; 'W'
000000000021f331         db  0x7c ; '|'
000000000021f332         db  0x01 ; '.'
000000000021f333         db  0x00 ; '.'
000000000021f334         db  0x00 ; '.'
000000000021f335         db  0x00 ; '.'
000000000021f336         db  0x00 ; '.'
000000000021f337         db  0x00 ; '.'
000000000021f338         db  0x00 ; '.'
000000000021f339         db  0x00 ; '.'
000000000021f33a         db  0x00 ; '.'
000000000021f33b         db  0x00 ; '.'
000000000021f33c         db  0x00 ; '.'
000000000021f33d         db  0x00 ; '.'
000000000021f33e         db  0x00 ; '.'
000000000021f33f         db  0x00 ; '.'
                     long_options:
000000000021f340         db  0xf1 ; '.'                                         ; DATA XREF=main+616, main+6575
000000000021f341         db  0x7c ; '|'
000000000021f342         db  0x01 ; '.'
000000000021f343         db  0x00 ; '.'
000000000021f344         db  0x00 ; '.'
000000000021f345         db  0x00 ; '.'
000000000021f346         db  0x00 ; '.'
000000000021f347         db  0x00 ; '.'
000000000021f348         db  0x00 ; '.'
000000000021f349         db  0x00 ; '.'
000000000021f34a         db  0x00 ; '.'
000000000021f34b         db  0x00 ; '.'
000000000021f34c         db  0x00 ; '.'
000000000021f34d         db  0x00 ; '.'
000000000021f34e         db  0x00 ; '.'
000000000021f34f         db  0x00 ; '.'
000000000021f350         db  0x00 ; '.'
000000000021f351         db  0x00 ; '.'
000000000021f352         db  0x00 ; '.'
000000000021f353         db  0x00 ; '.'
000000000021f354         db  0x00 ; '.'
000000000021f355         db  0x00 ; '.'
000000000021f356         db  0x00 ; '.'
000000000021f357         db  0x00 ; '.'
000000000021f358         db  0x61 ; 'a'
000000000021f359         db  0x00 ; '.'
000000000021f35a         db  0x00 ; '.'
000000000021f35b         db  0x00 ; '.'
000000000021f35c         db  0x00 ; '.'
000000000021f35d         db  0x00 ; '.'
000000000021f35e         db  0x00 ; '.'
000000000021f35f         db  0x00 ; '.'
000000000021f360         db  0x38 ; '8'
000000000021f361         db  0xa3 ; '.'
000000000021f362         db  0x01 ; '.'
000000000021f363         db  0x00 ; '.'
000000000021f364         db  0x00 ; '.'
000000000021f365         db  0x00 ; '.'
000000000021f366         db  0x00 ; '.'
000000000021f367         db  0x00 ; '.'
000000000021f368         db  0x00 ; '.'
000000000021f369         db  0x00 ; '.'
000000000021f36a         db  0x00 ; '.'
000000000021f36b         db  0x00 ; '.'
000000000021f36c         db  0x00 ; '.'
000000000021f36d         db  0x00 ; '.'
000000000021f36e         db  0x00 ; '.'
000000000021f36f         db  0x00 ; '.'
000000000021f370         db  0x00 ; '.'
000000000021f371         db  0x00 ; '.'
000000000021f372         db  0x00 ; '.'
000000000021f373         db  0x00 ; '.'
000000000021f374         db  0x00 ; '.'
000000000021f375         db  0x00 ; '.'
000000000021f376         db  0x00 ; '.'
000000000021f377         db  0x00 ; '.'
000000000021f378         db  0x62 ; 'b'
000000000021f379         db  0x00 ; '.'
000000000021f37a         db  0x00 ; '.'
000000000021f37b         db  0x00 ; '.'
000000000021f37c         db  0x00 ; '.'
000000000021f37d         db  0x00 ; '.'
000000000021f37e         db  0x00 ; '.'
000000000021f37f         db  0x00 ; '.'
000000000021f380         db  0x65 ; 'e'
000000000021f381         db  0x7c ; '|'
000000000021f382         db  0x01 ; '.'
000000000021f383         db  0x00 ; '.'
000000000021f384         db  0x00 ; '.'
000000000021f385         db  0x00 ; '.'
000000000021f386         db  0x00 ; '.'
000000000021f387         db  0x00 ; '.'
000000000021f388         db  0x00 ; '.'
000000000021f389         db  0x00 ; '.'
000000000021f38a         db  0x00 ; '.'
000000000021f38b         db  0x00 ; '.'
000000000021f38c         db  0x00 ; '.'
000000000021f38d         db  0x00 ; '.'
000000000021f38e         db  0x00 ; '.'
000000000021f38f         db  0x00 ; '.'
000000000021f390         db  0x00 ; '.'
000000000021f391         db  0x00 ; '.'
000000000021f392         db  0x00 ; '.'
000000000021f393         db  0x00 ; '.'
000000000021f394         db  0x00 ; '.'
000000000021f395         db  0x00 ; '.'
000000000021f396         db  0x00 ; '.'
000000000021f397         db  0x00 ; '.'
000000000021f398         db  0x64 ; 'd'
000000000021f399         db  0x00 ; '.'
000000000021f39a         db  0x00 ; '.'
000000000021f39b         db  0x00 ; '.'
000000000021f39c         db  0x00 ; '.'
000000000021f39d         db  0x00 ; '.'
000000000021f39e         db  0x00 ; '.'
000000000021f39f         db  0x00 ; '.'
000000000021f3a0         db  0x6f ; 'o'
000000000021f3a1         db  0x7c ; '|'
000000000021f3a2         db  0x01 ; '.'
000000000021f3a3         db  0x00 ; '.'
000000000021f3a4         db  0x00 ; '.'
000000000021f3a5         db  0x00 ; '.'
000000000021f3a6         db  0x00 ; '.'
000000000021f3a7         db  0x00 ; '.'
000000000021f3a8         db  0x00 ; '.'
000000000021f3a9         db  0x00 ; '.'
000000000021f3aa         db  0x00 ; '.'
000000000021f3ab         db  0x00 ; '.'
000000000021f3ac         db  0x00 ; '.'
000000000021f3ad         db  0x00 ; '.'
000000000021f3ae         db  0x00 ; '.'
000000000021f3af         db  0x00 ; '.'
000000000021f3b0         db  0x00 ; '.'
000000000021f3b1         db  0x00 ; '.'
000000000021f3b2         db  0x00 ; '.'
000000000021f3b3         db  0x00 ; '.'
000000000021f3b4         db  0x00 ; '.'
000000000021f3b5         db  0x00 ; '.'
000000000021f3b6         db  0x00 ; '.'
000000000021f3b7         db  0x00 ; '.'
000000000021f3b8         db  0x44 ; 'D'
000000000021f3b9         db  0x00 ; '.'
000000000021f3ba         db  0x00 ; '.'
000000000021f3bb         db  0x00 ; '.'
000000000021f3bc         db  0x00 ; '.'
000000000021f3bd         db  0x00 ; '.'
000000000021f3be         db  0x00 ; '.'
000000000021f3bf         db  0x00 ; '.'
000000000021f3c0         db  0x75 ; 'u'
000000000021f3c1         db  0x7c ; '|'
000000000021f3c2         db  0x01 ; '.'
000000000021f3c3         db  0x00 ; '.'
000000000021f3c4         db  0x00 ; '.'
000000000021f3c5         db  0x00 ; '.'
000000000021f3c6         db  0x00 ; '.'
000000000021f3c7         db  0x00 ; '.'
000000000021f3c8         db  0x00 ; '.'
000000000021f3c9         db  0x00 ; '.'
000000000021f3ca         db  0x00 ; '.'
000000000021f3cb         db  0x00 ; '.'
000000000021f3cc         db  0x00 ; '.'
000000000021f3cd         db  0x00 ; '.'
000000000021f3ce         db  0x00 ; '.'
000000000021f3cf         db  0x00 ; '.'
000000000021f3d0         db  0x00 ; '.'
000000000021f3d1         db  0x00 ; '.'
000000000021f3d2         db  0x00 ; '.'
000000000021f3d3         db  0x00 ; '.'
000000000021f3d4         db  0x00 ; '.'
000000000021f3d5         db  0x00 ; '.'
000000000021f3d6         db  0x00 ; '.'
000000000021f3d7         db  0x00 ; '.'
000000000021f3d8         db  0x86 ; '.'
000000000021f3d9         db  0x00 ; '.'
000000000021f3da         db  0x00 ; '.'
000000000021f3db         db  0x00 ; '.'
000000000021f3dc         db  0x00 ; '.'
000000000021f3dd         db  0x00 ; '.'
000000000021f3de         db  0x00 ; '.'
000000000021f3df         db  0x00 ; '.'
000000000021f3e0         db  0x7f ; '.'
000000000021f3e1         db  0x7c ; '|'
000000000021f3e2         db  0x01 ; '.'
000000000021f3e3         db  0x00 ; '.'
000000000021f3e4         db  0x00 ; '.'
000000000021f3e5         db  0x00 ; '.'
000000000021f3e6         db  0x00 ; '.'
000000000021f3e7         db  0x00 ; '.'
000000000021f3e8         db  0x00 ; '.'
000000000021f3e9         db  0x00 ; '.'
000000000021f3ea         db  0x00 ; '.'
000000000021f3eb         db  0x00 ; '.'
000000000021f3ec         db  0x00 ; '.'
000000000021f3ed         db  0x00 ; '.'
000000000021f3ee         db  0x00 ; '.'
000000000021f3ef         db  0x00 ; '.'
000000000021f3f0         db  0x00 ; '.'
000000000021f3f1         db  0x00 ; '.'
000000000021f3f2         db  0x00 ; '.'
000000000021f3f3         db  0x00 ; '.'
000000000021f3f4         db  0x00 ; '.'
000000000021f3f5         db  0x00 ; '.'
000000000021f3f6         db  0x00 ; '.'
000000000021f3f7         db  0x00 ; '.'
000000000021f3f8         db  0x87 ; '.'
000000000021f3f9         db  0x00 ; '.'
000000000021f3fa         db  0x00 ; '.'
000000000021f3fb         db  0x00 ; '.'
000000000021f3fc         db  0x00 ; '.'
000000000021f3fd         db  0x00 ; '.'
000000000021f3fe         db  0x00 ; '.'
000000000021f3ff         db  0x00 ; '.'
000000000021f400         db  0x97 ; '.'
000000000021f401         db  0x7c ; '|'
000000000021f402         db  0x01 ; '.'
000000000021f403         db  0x00 ; '.'
000000000021f404         db  0x00 ; '.'
000000000021f405         db  0x00 ; '.'
000000000021f406         db  0x00 ; '.'
000000000021f407         db  0x00 ; '.'
000000000021f408         db  0x00 ; '.'
000000000021f409         db  0x00 ; '.'
000000000021f40a         db  0x00 ; '.'
000000000021f40b         db  0x00 ; '.'
000000000021f40c         db  0x00 ; '.'
000000000021f40d         db  0x00 ; '.'
000000000021f40e         db  0x00 ; '.'
000000000021f40f         db  0x00 ; '.'
000000000021f410         db  0x00 ; '.'
000000000021f411         db  0x00 ; '.'
000000000021f412         db  0x00 ; '.'
000000000021f413         db  0x00 ; '.'
000000000021f414         db  0x00 ; '.'
000000000021f415         db  0x00 ; '.'
000000000021f416         db  0x00 ; '.'
000000000021f417         db  0x00 ; '.'
000000000021f418         db  0x68 ; 'h'
000000000021f419         db  0x00 ; '.'
000000000021f41a         db  0x00 ; '.'
000000000021f41b         db  0x00 ; '.'
000000000021f41c         db  0x00 ; '.'
000000000021f41d         db  0x00 ; '.'
000000000021f41e         db  0x00 ; '.'
000000000021f41f         db  0x00 ; '.'
000000000021f420         db  0xa6 ; '.'
000000000021f421         db  0x7c ; '|'
000000000021f422         db  0x01 ; '.'
000000000021f423         db  0x00 ; '.'
000000000021f424         db  0x00 ; '.'
000000000021f425         db  0x00 ; '.'
000000000021f426         db  0x00 ; '.'
000000000021f427         db  0x00 ; '.'
000000000021f428         db  0x00 ; '.'
000000000021f429         db  0x00 ; '.'
000000000021f42a         db  0x00 ; '.'
000000000021f42b         db  0x00 ; '.'
000000000021f42c         db  0x00 ; '.'
000000000021f42d         db  0x00 ; '.'
000000000021f42e         db  0x00 ; '.'
000000000021f42f         db  0x00 ; '.'
000000000021f430         db  0x00 ; '.'
000000000021f431         db  0x00 ; '.'
000000000021f432         db  0x00 ; '.'
000000000021f433         db  0x00 ; '.'
000000000021f434         db  0x00 ; '.'
000000000021f435         db  0x00 ; '.'
000000000021f436         db  0x00 ; '.'
000000000021f437         db  0x00 ; '.'
000000000021f438         db  0x69 ; 'i'
000000000021f439         db  0x00 ; '.'
000000000021f43a         db  0x00 ; '.'
000000000021f43b         db  0x00 ; '.'
000000000021f43c         db  0x00 ; '.'
000000000021f43d         db  0x00 ; '.'
000000000021f43e         db  0x00 ; '.'
000000000021f43f         db  0x00 ; '.'
000000000021f440         db  0xac ; '.'
000000000021f441         db  0x7c ; '|'
000000000021f442         db  0x01 ; '.'
000000000021f443         db  0x00 ; '.'
000000000021f444         db  0x00 ; '.'
000000000021f445         db  0x00 ; '.'
000000000021f446         db  0x00 ; '.'
000000000021f447         db  0x00 ; '.'
000000000021f448         db  0x00 ; '.'
000000000021f449         db  0x00 ; '.'
000000000021f44a         db  0x00 ; '.'
000000000021f44b         db  0x00 ; '.'
000000000021f44c         db  0x00 ; '.'
000000000021f44d         db  0x00 ; '.'
000000000021f44e         db  0x00 ; '.'
000000000021f44f         db  0x00 ; '.'
000000000021f450         db  0x00 ; '.'
000000000021f451         db  0x00 ; '.'
000000000021f452         db  0x00 ; '.'
000000000021f453         db  0x00 ; '.'
000000000021f454         db  0x00 ; '.'
000000000021f455         db  0x00 ; '.'
000000000021f456         db  0x00 ; '.'
000000000021f457         db  0x00 ; '.'
000000000021f458         db  0x6b ; 'k'
000000000021f459         db  0x00 ; '.'
000000000021f45a         db  0x00 ; '.'
000000000021f45b         db  0x00 ; '.'
000000000021f45c         db  0x00 ; '.'
000000000021f45d         db  0x00 ; '.'
000000000021f45e         db  0x00 ; '.'
000000000021f45f         db  0x00 ; '.'
000000000021f460         db  0xb6 ; '.'
000000000021f461         db  0x7c ; '|'
000000000021f462         db  0x01 ; '.'
000000000021f463         db  0x00 ; '.'
000000000021f464         db  0x00 ; '.'
000000000021f465         db  0x00 ; '.'
000000000021f466         db  0x00 ; '.'
000000000021f467         db  0x00 ; '.'
000000000021f468         db  0x00 ; '.'
000000000021f469         db  0x00 ; '.'
000000000021f46a         db  0x00 ; '.'
000000000021f46b         db  0x00 ; '.'
000000000021f46c         db  0x00 ; '.'
000000000021f46d         db  0x00 ; '.'
000000000021f46e         db  0x00 ; '.'
000000000021f46f         db  0x00 ; '.'
000000000021f470         db  0x00 ; '.'
000000000021f471         db  0x00 ; '.'
000000000021f472         db  0x00 ; '.'
000000000021f473         db  0x00 ; '.'
000000000021f474         db  0x00 ; '.'
000000000021f475         db  0x00 ; '.'
000000000021f476         db  0x00 ; '.'
000000000021f477         db  0x00 ; '.'
000000000021f478         db  0x6e ; 'n'
000000000021f479         db  0x00 ; '.'
000000000021f47a         db  0x00 ; '.'
000000000021f47b         db  0x00 ; '.'
000000000021f47c         db  0x00 ; '.'
000000000021f47d         db  0x00 ; '.'
000000000021f47e         db  0x00 ; '.'
000000000021f47f         db  0x00 ; '.'
000000000021f480         db  0xc6 ; '.'
000000000021f481         db  0x7c ; '|'
000000000021f482         db  0x01 ; '.'
000000000021f483         db  0x00 ; '.'
000000000021f484         db  0x00 ; '.'
000000000021f485         db  0x00 ; '.'
000000000021f486         db  0x00 ; '.'
000000000021f487         db  0x00 ; '.'
000000000021f488         db  0x00 ; '.'
000000000021f489         db  0x00 ; '.'
000000000021f48a         db  0x00 ; '.'
000000000021f48b         db  0x00 ; '.'
000000000021f48c         db  0x00 ; '.'
000000000021f48d         db  0x00 ; '.'
000000000021f48e         db  0x00 ; '.'
000000000021f48f         db  0x00 ; '.'
000000000021f490         db  0x00 ; '.'
000000000021f491         db  0x00 ; '.'
000000000021f492         db  0x00 ; '.'
000000000021f493         db  0x00 ; '.'
000000000021f494         db  0x00 ; '.'
000000000021f495         db  0x00 ; '.'
000000000021f496         db  0x00 ; '.'
000000000021f497         db  0x00 ; '.'
000000000021f498         db  0x47 ; 'G'
000000000021f499         db  0x00 ; '.'
000000000021f49a         db  0x00 ; '.'
000000000021f49b         db  0x00 ; '.'
000000000021f49c         db  0x00 ; '.'
000000000021f49d         db  0x00 ; '.'
000000000021f49e         db  0x00 ; '.'
000000000021f49f         db  0x00 ; '.'
000000000021f4a0         db  0xcf ; '.'
000000000021f4a1         db  0x7c ; '|'
000000000021f4a2         db  0x01 ; '.'
000000000021f4a3         db  0x00 ; '.'
000000000021f4a4         db  0x00 ; '.'
000000000021f4a5         db  0x00 ; '.'
000000000021f4a6         db  0x00 ; '.'
000000000021f4a7         db  0x00 ; '.'
000000000021f4a8         db  0x00 ; '.'
000000000021f4a9         db  0x00 ; '.'
000000000021f4aa         db  0x00 ; '.'
000000000021f4ab         db  0x00 ; '.'
000000000021f4ac         db  0x00 ; '.'
000000000021f4ad         db  0x00 ; '.'
000000000021f4ae         db  0x00 ; '.'
000000000021f4af         db  0x00 ; '.'
000000000021f4b0         db  0x00 ; '.'
000000000021f4b1         db  0x00 ; '.'
000000000021f4b2         db  0x00 ; '.'
000000000021f4b3         db  0x00 ; '.'
000000000021f4b4         db  0x00 ; '.'
000000000021f4b5         db  0x00 ; '.'
000000000021f4b6         db  0x00 ; '.'
000000000021f4b7         db  0x00 ; '.'
000000000021f4b8         db  0x71 ; 'q'
000000000021f4b9         db  0x00 ; '.'
000000000021f4ba         db  0x00 ; '.'
000000000021f4bb         db  0x00 ; '.'
000000000021f4bc         db  0x00 ; '.'
000000000021f4bd         db  0x00 ; '.'
000000000021f4be         db  0x00 ; '.'
000000000021f4bf         db  0x00 ; '.'
000000000021f4c0         db  0xe2 ; '.'
000000000021f4c1         db  0x7c ; '|'
000000000021f4c2         db  0x01 ; '.'
000000000021f4c3         db  0x00 ; '.'
000000000021f4c4         db  0x00 ; '.'
000000000021f4c5         db  0x00 ; '.'
000000000021f4c6         db  0x00 ; '.'
000000000021f4c7         db  0x00 ; '.'
000000000021f4c8         db  0x00 ; '.'
000000000021f4c9         db  0x00 ; '.'
000000000021f4ca         db  0x00 ; '.'
000000000021f4cb         db  0x00 ; '.'
000000000021f4cc         db  0x00 ; '.'
000000000021f4cd         db  0x00 ; '.'
000000000021f4ce         db  0x00 ; '.'
000000000021f4cf         db  0x00 ; '.'
000000000021f4d0         db  0x00 ; '.'
000000000021f4d1         db  0x00 ; '.'
000000000021f4d2         db  0x00 ; '.'
000000000021f4d3         db  0x00 ; '.'
000000000021f4d4         db  0x00 ; '.'
000000000021f4d5         db  0x00 ; '.'
000000000021f4d6         db  0x00 ; '.'
000000000021f4d7         db  0x00 ; '.'
000000000021f4d8         db  0x72 ; 'r'
000000000021f4d9         db  0x00 ; '.'
000000000021f4da         db  0x00 ; '.'
000000000021f4db         db  0x00 ; '.'
000000000021f4dc         db  0x00 ; '.'
000000000021f4dd         db  0x00 ; '.'
000000000021f4de         db  0x00 ; '.'
000000000021f4df         db  0x00 ; '.'
000000000021f4e0         db  0x6f ; 'o'
000000000021f4e1         db  0x7a ; 'z'
000000000021f4e2         db  0x01 ; '.'
000000000021f4e3         db  0x00 ; '.'
000000000021f4e4         db  0x00 ; '.'
000000000021f4e5         db  0x00 ; '.'
000000000021f4e6         db  0x00 ; '.'
000000000021f4e7         db  0x00 ; '.'
000000000021f4e8         db  0x00 ; '.'
000000000021f4e9         db  0x00 ; '.'
000000000021f4ea         db  0x00 ; '.'
000000000021f4eb         db  0x00 ; '.'
000000000021f4ec         db  0x00 ; '.'
000000000021f4ed         db  0x00 ; '.'
000000000021f4ee         db  0x00 ; '.'
000000000021f4ef         db  0x00 ; '.'
000000000021f4f0         db  0x00 ; '.'
000000000021f4f1         db  0x00 ; '.'
000000000021f4f2         db  0x00 ; '.'
000000000021f4f3         db  0x00 ; '.'
000000000021f4f4         db  0x00 ; '.'
000000000021f4f5         db  0x00 ; '.'
000000000021f4f6         db  0x00 ; '.'
000000000021f4f7         db  0x00 ; '.'
000000000021f4f8         db  0x73 ; 's'
000000000021f4f9         db  0x00 ; '.'
000000000021f4fa         db  0x00 ; '.'
000000000021f4fb         db  0x00 ; '.'
000000000021f4fc         db  0x00 ; '.'
000000000021f4fd         db  0x00 ; '.'
000000000021f4fe         db  0x00 ; '.'
000000000021f4ff         db  0x00 ; '.'
000000000021f500         db  0x52 ; 'R'
000000000021f501         db  0x7a ; 'z'
000000000021f502         db  0x01 ; '.'
000000000021f503         db  0x00 ; '.'
000000000021f504         db  0x00 ; '.'
000000000021f505         db  0x00 ; '.'
000000000021f506         db  0x00 ; '.'
000000000021f507         db  0x00 ; '.'
000000000021f508         db  0x01 ; '.'
000000000021f509         db  0x00 ; '.'
000000000021f50a         db  0x00 ; '.'
000000000021f50b         db  0x00 ; '.'
000000000021f50c         db  0x00 ; '.'
000000000021f50d         db  0x00 ; '.'
000000000021f50e         db  0x00 ; '.'
000000000021f50f         db  0x00 ; '.'
000000000021f510         db  0x00 ; '.'
000000000021f511         db  0x00 ; '.'
000000000021f512         db  0x00 ; '.'
000000000021f513         db  0x00 ; '.'
000000000021f514         db  0x00 ; '.'
000000000021f515         db  0x00 ; '.'
000000000021f516         db  0x00 ; '.'
000000000021f517         db  0x00 ; '.'
000000000021f518         db  0x77 ; 'w'
000000000021f519         db  0x00 ; '.'
000000000021f51a         db  0x00 ; '.'
000000000021f51b         db  0x00 ; '.'
000000000021f51c         db  0x00 ; '.'
000000000021f51d         db  0x00 ; '.'
000000000021f51e         db  0x00 ; '.'
000000000021f51f         db  0x00 ; '.'
000000000021f520         db  0xea ; '.'
000000000021f521         db  0x7c ; '|'
000000000021f522         db  0x01 ; '.'
000000000021f523         db  0x00 ; '.'
000000000021f524         db  0x00 ; '.'
000000000021f525         db  0x00 ; '.'
000000000021f526         db  0x00 ; '.'
000000000021f527         db  0x00 ; '.'
000000000021f528         db  0x00 ; '.'
000000000021f529         db  0x00 ; '.'
000000000021f52a         db  0x00 ; '.'
000000000021f52b         db  0x00 ; '.'
000000000021f52c         db  0x00 ; '.'
000000000021f52d         db  0x00 ; '.'
000000000021f52e         db  0x00 ; '.'
000000000021f52f         db  0x00 ; '.'
000000000021f530         db  0x00 ; '.'
000000000021f531         db  0x00 ; '.'
000000000021f532         db  0x00 ; '.'
000000000021f533         db  0x00 ; '.'
000000000021f534         db  0x00 ; '.'
000000000021f535         db  0x00 ; '.'
000000000021f536         db  0x00 ; '.'
000000000021f537         db  0x00 ; '.'
000000000021f538         db  0x41 ; 'A'
000000000021f539         db  0x00 ; '.'
000000000021f53a         db  0x00 ; '.'
000000000021f53b         db  0x00 ; '.'
000000000021f53c         db  0x00 ; '.'
000000000021f53d         db  0x00 ; '.'
000000000021f53e         db  0x00 ; '.'
000000000021f53f         db  0x00 ; '.'
000000000021f540         db  0xf5 ; '.'
000000000021f541         db  0x7c ; '|'
000000000021f542         db  0x01 ; '.'
000000000021f543         db  0x00 ; '.'
000000000021f544         db  0x00 ; '.'
000000000021f545         db  0x00 ; '.'
000000000021f546         db  0x00 ; '.'
000000000021f547         db  0x00 ; '.'
000000000021f548         db  0x00 ; '.'
000000000021f549         db  0x00 ; '.'
000000000021f54a         db  0x00 ; '.'
000000000021f54b         db  0x00 ; '.'
000000000021f54c         db  0x00 ; '.'
000000000021f54d         db  0x00 ; '.'
000000000021f54e         db  0x00 ; '.'
000000000021f54f         db  0x00 ; '.'
000000000021f550         db  0x00 ; '.'
000000000021f551         db  0x00 ; '.'
000000000021f552         db  0x00 ; '.'
000000000021f553         db  0x00 ; '.'
000000000021f554         db  0x00 ; '.'
000000000021f555         db  0x00 ; '.'
000000000021f556         db  0x00 ; '.'
000000000021f557         db  0x00 ; '.'
000000000021f558         db  0x42 ; 'B'
000000000021f559         db  0x00 ; '.'
000000000021f55a         db  0x00 ; '.'
000000000021f55b         db  0x00 ; '.'
000000000021f55c         db  0x00 ; '.'
000000000021f55d         db  0x00 ; '.'
000000000021f55e         db  0x00 ; '.'
000000000021f55f         db  0x00 ; '.'
000000000021f560         db  0x04 ; '.'
000000000021f561         db  0x7d ; '}'
000000000021f562         db  0x01 ; '.'
000000000021f563         db  0x00 ; '.'
000000000021f564         db  0x00 ; '.'
000000000021f565         db  0x00 ; '.'
000000000021f566         db  0x00 ; '.'
000000000021f567         db  0x00 ; '.'
000000000021f568         db  0x00 ; '.'
000000000021f569         db  0x00 ; '.'
000000000021f56a         db  0x00 ; '.'
000000000021f56b         db  0x00 ; '.'
000000000021f56c         db  0x00 ; '.'
000000000021f56d         db  0x00 ; '.'
000000000021f56e         db  0x00 ; '.'
000000000021f56f         db  0x00 ; '.'
000000000021f570         db  0x00 ; '.'
000000000021f571         db  0x00 ; '.'
000000000021f572         db  0x00 ; '.'
000000000021f573         db  0x00 ; '.'
000000000021f574         db  0x00 ; '.'
000000000021f575         db  0x00 ; '.'
000000000021f576         db  0x00 ; '.'
000000000021f577         db  0x00 ; '.'
000000000021f578         db  0x46 ; 'F'
000000000021f579         db  0x00 ; '.'
000000000021f57a         db  0x00 ; '.'
000000000021f57b         db  0x00 ; '.'
000000000021f57c         db  0x00 ; '.'
000000000021f57d         db  0x00 ; '.'
000000000021f57e         db  0x00 ; '.'
000000000021f57f         db  0x00 ; '.'
000000000021f580         db  0x0d ; '.'
000000000021f581         db  0x7d ; '}'
000000000021f582         db  0x01 ; '.'
000000000021f583         db  0x00 ; '.'
000000000021f584         db  0x00 ; '.'
000000000021f585         db  0x00 ; '.'
000000000021f586         db  0x00 ; '.'
000000000021f587         db  0x00 ; '.'
000000000021f588         db  0x00 ; '.'
000000000021f589         db  0x00 ; '.'
000000000021f58a         db  0x00 ; '.'
000000000021f58b         db  0x00 ; '.'
000000000021f58c         db  0x00 ; '.'
000000000021f58d         db  0x00 ; '.'
000000000021f58e         db  0x00 ; '.'
000000000021f58f         db  0x00 ; '.'
000000000021f590         db  0x00 ; '.'
000000000021f591         db  0x00 ; '.'
000000000021f592         db  0x00 ; '.'
000000000021f593         db  0x00 ; '.'
000000000021f594         db  0x00 ; '.'
000000000021f595         db  0x00 ; '.'
000000000021f596         db  0x00 ; '.'
000000000021f597         db  0x00 ; '.'
000000000021f598         db  0x84 ; '.'
000000000021f599         db  0x00 ; '.'
000000000021f59a         db  0x00 ; '.'
000000000021f59b         db  0x00 ; '.'
000000000021f59c         db  0x00 ; '.'
000000000021f59d         db  0x00 ; '.'
000000000021f59e         db  0x00 ; '.'
000000000021f59f         db  0x00 ; '.'
000000000021f5a0         db  0x17 ; '.'
000000000021f5a1         db  0x7d ; '}'
000000000021f5a2         db  0x01 ; '.'
000000000021f5a3         db  0x00 ; '.'
000000000021f5a4         db  0x00 ; '.'
000000000021f5a5         db  0x00 ; '.'
000000000021f5a6         db  0x00 ; '.'
000000000021f5a7         db  0x00 ; '.'
000000000021f5a8         db  0x00 ; '.'
000000000021f5a9         db  0x00 ; '.'
000000000021f5aa         db  0x00 ; '.'
000000000021f5ab         db  0x00 ; '.'
000000000021f5ac         db  0x00 ; '.'
000000000021f5ad         db  0x00 ; '.'
000000000021f5ae         db  0x00 ; '.'
000000000021f5af         db  0x00 ; '.'
000000000021f5b0         db  0x00 ; '.'
000000000021f5b1         db  0x00 ; '.'
000000000021f5b2         db  0x00 ; '.'
000000000021f5b3         db  0x00 ; '.'
000000000021f5b4         db  0x00 ; '.'
000000000021f5b5         db  0x00 ; '.'
000000000021f5b6         db  0x00 ; '.'
000000000021f5b7         db  0x00 ; '.'
000000000021f5b8         db  0x8d ; '.'
000000000021f5b9         db  0x00 ; '.'
000000000021f5ba         db  0x00 ; '.'
000000000021f5bb         db  0x00 ; '.'
000000000021f5bc         db  0x00 ; '.'
000000000021f5bd         db  0x00 ; '.'
000000000021f5be         db  0x00 ; '.'
000000000021f5bf         db  0x00 ; '.'
000000000021f5c0         db  0x1a ; '.'
000000000021f5c1         db  0x7d ; '}'
000000000021f5c2         db  0x01 ; '.'
000000000021f5c3         db  0x00 ; '.'
000000000021f5c4         db  0x00 ; '.'
000000000021f5c5         db  0x00 ; '.'
000000000021f5c6         db  0x00 ; '.'
000000000021f5c7         db  0x00 ; '.'
000000000021f5c8         db  0x00 ; '.'
000000000021f5c9         db  0x00 ; '.'
000000000021f5ca         db  0x00 ; '.'
000000000021f5cb         db  0x00 ; '.'
000000000021f5cc         db  0x00 ; '.'
000000000021f5cd         db  0x00 ; '.'
000000000021f5ce         db  0x00 ; '.'
000000000021f5cf         db  0x00 ; '.'
000000000021f5d0         db  0x00 ; '.'
000000000021f5d1         db  0x00 ; '.'
000000000021f5d2         db  0x00 ; '.'
000000000021f5d3         db  0x00 ; '.'
000000000021f5d4         db  0x00 ; '.'
000000000021f5d5         db  0x00 ; '.'
000000000021f5d6         db  0x00 ; '.'
000000000021f5d7         db  0x00 ; '.'
000000000021f5d8         db  0x48 ; 'H'
000000000021f5d9         db  0x00 ; '.'
000000000021f5da         db  0x00 ; '.'
000000000021f5db         db  0x00 ; '.'
000000000021f5dc         db  0x00 ; '.'
000000000021f5dd         db  0x00 ; '.'
000000000021f5de         db  0x00 ; '.'
000000000021f5df         db  0x00 ; '.'
000000000021f5e0         db  0x08 ; '.'
000000000021f5e1         db  0x9f ; '.'
000000000021f5e2         db  0x01 ; '.'
000000000021f5e3         db  0x00 ; '.'
000000000021f5e4         db  0x00 ; '.'
000000000021f5e5         db  0x00 ; '.'
000000000021f5e6         db  0x00 ; '.'
000000000021f5e7         db  0x00 ; '.'
000000000021f5e8         db  0x00 ; '.'
000000000021f5e9         db  0x00 ; '.'
000000000021f5ea         db  0x00 ; '.'
000000000021f5eb         db  0x00 ; '.'
000000000021f5ec         db  0x00 ; '.'
000000000021f5ed         db  0x00 ; '.'
000000000021f5ee         db  0x00 ; '.'
000000000021f5ef         db  0x00 ; '.'
000000000021f5f0         db  0x00 ; '.'
000000000021f5f1         db  0x00 ; '.'
000000000021f5f2         db  0x00 ; '.'
000000000021f5f3         db  0x00 ; '.'
000000000021f5f4         db  0x00 ; '.'
000000000021f5f5         db  0x00 ; '.'
000000000021f5f6         db  0x00 ; '.'
000000000021f5f7         db  0x00 ; '.'
000000000021f5f8         db  0x83 ; '.'
000000000021f5f9         db  0x00 ; '.'
000000000021f5fa         db  0x00 ; '.'
000000000021f5fb         db  0x00 ; '.'
000000000021f5fc         db  0x00 ; '.'
000000000021f5fd         db  0x00 ; '.'
000000000021f5fe         db  0x00 ; '.'
000000000021f5ff         db  0x00 ; '.'
000000000021f600         db  0x33 ; '3'
000000000021f601         db  0x7d ; '}'
000000000021f602         db  0x01 ; '.'
000000000021f603         db  0x00 ; '.'
000000000021f604         db  0x00 ; '.'
000000000021f605         db  0x00 ; '.'
000000000021f606         db  0x00 ; '.'
000000000021f607         db  0x00 ; '.'
000000000021f608         db  0x01 ; '.'
000000000021f609         db  0x00 ; '.'
000000000021f60a         db  0x00 ; '.'
000000000021f60b         db  0x00 ; '.'
000000000021f60c         db  0x00 ; '.'
000000000021f60d         db  0x00 ; '.'
000000000021f60e         db  0x00 ; '.'
000000000021f60f         db  0x00 ; '.'
000000000021f610         db  0x00 ; '.'
000000000021f611         db  0x00 ; '.'
000000000021f612         db  0x00 ; '.'
000000000021f613         db  0x00 ; '.'
000000000021f614         db  0x00 ; '.'
000000000021f615         db  0x00 ; '.'
000000000021f616         db  0x00 ; '.'
000000000021f617         db  0x00 ; '.'
000000000021f618         db  0x88 ; '.'
000000000021f619         db  0x00 ; '.'
000000000021f61a         db  0x00 ; '.'
000000000021f61b         db  0x00 ; '.'
000000000021f61c         db  0x00 ; '.'
000000000021f61d         db  0x00 ; '.'
000000000021f61e         db  0x00 ; '.'
000000000021f61f         db  0x00 ; '.'
000000000021f620         db  0x38 ; '8'
000000000021f621         db  0x7d ; '}'
000000000021f622         db  0x01 ; '.'
000000000021f623         db  0x00 ; '.'
000000000021f624         db  0x00 ; '.'
000000000021f625         db  0x00 ; '.'
000000000021f626         db  0x00 ; '.'
000000000021f627         db  0x00 ; '.'
000000000021f628         db  0x01 ; '.'
000000000021f629         db  0x00 ; '.'
000000000021f62a         db  0x00 ; '.'
000000000021f62b         db  0x00 ; '.'
000000000021f62c         db  0x00 ; '.'
000000000021f62d         db  0x00 ; '.'
000000000021f62e         db  0x00 ; '.'
000000000021f62f         db  0x00 ; '.'
000000000021f630         db  0x00 ; '.'
000000000021f631         db  0x00 ; '.'
000000000021f632         db  0x00 ; '.'
000000000021f633         db  0x00 ; '.'
000000000021f634         db  0x00 ; '.'
000000000021f635         db  0x00 ; '.'
000000000021f636         db  0x00 ; '.'
000000000021f637         db  0x00 ; '.'
000000000021f638         db  0x49 ; 'I'
000000000021f639         db  0x00 ; '.'
000000000021f63a         db  0x00 ; '.'
000000000021f63b         db  0x00 ; '.'
000000000021f63c         db  0x00 ; '.'
000000000021f63d         db  0x00 ; '.'
000000000021f63e         db  0x00 ; '.'
000000000021f63f         db  0x00 ; '.'
000000000021f640         db  0xa1 ; '.'
000000000021f641         db  0x7a ; 'z'
000000000021f642         db  0x01 ; '.'
000000000021f643         db  0x00 ; '.'
000000000021f644         db  0x00 ; '.'
000000000021f645         db  0x00 ; '.'
000000000021f646         db  0x00 ; '.'
000000000021f647         db  0x00 ; '.'
000000000021f648         db  0x01 ; '.'
000000000021f649         db  0x00 ; '.'
000000000021f64a         db  0x00 ; '.'
000000000021f64b         db  0x00 ; '.'
000000000021f64c         db  0x00 ; '.'
000000000021f64d         db  0x00 ; '.'
000000000021f64e         db  0x00 ; '.'
000000000021f64f         db  0x00 ; '.'
000000000021f650         db  0x00 ; '.'
000000000021f651         db  0x00 ; '.'
000000000021f652         db  0x00 ; '.'
000000000021f653         db  0x00 ; '.'
000000000021f654         db  0x00 ; '.'
000000000021f655         db  0x00 ; '.'
000000000021f656         db  0x00 ; '.'
000000000021f657         db  0x00 ; '.'
000000000021f658         db  0x8a ; '.'
000000000021f659         db  0x00 ; '.'
000000000021f65a         db  0x00 ; '.'
000000000021f65b         db  0x00 ; '.'
000000000021f65c         db  0x00 ; '.'
000000000021f65d         db  0x00 ; '.'
000000000021f65e         db  0x00 ; '.'
000000000021f65f         db  0x00 ; '.'
000000000021f660         db  0x3f ; '?'
000000000021f661         db  0x7d ; '}'
000000000021f662         db  0x01 ; '.'
000000000021f663         db  0x00 ; '.'
000000000021f664         db  0x00 ; '.'
000000000021f665         db  0x00 ; '.'
000000000021f666         db  0x00 ; '.'
000000000021f667         db  0x00 ; '.'
000000000021f668         db  0x00 ; '.'
000000000021f669         db  0x00 ; '.'
000000000021f66a         db  0x00 ; '.'
000000000021f66b         db  0x00 ; '.'
000000000021f66c         db  0x00 ; '.'
000000000021f66d         db  0x00 ; '.'
000000000021f66e         db  0x00 ; '.'
000000000021f66f         db  0x00 ; '.'
000000000021f670         db  0x00 ; '.'
000000000021f671         db  0x00 ; '.'
000000000021f672         db  0x00 ; '.'
000000000021f673         db  0x00 ; '.'
000000000021f674         db  0x00 ; '.'
000000000021f675         db  0x00 ; '.'
000000000021f676         db  0x00 ; '.'
000000000021f677         db  0x00 ; '.'
000000000021f678         db  0x4c ; 'L'
000000000021f679         db  0x00 ; '.'
000000000021f67a         db  0x00 ; '.'
000000000021f67b         db  0x00 ; '.'
000000000021f67c         db  0x00 ; '.'
000000000021f67d         db  0x00 ; '.'
000000000021f67e         db  0x00 ; '.'
000000000021f67f         db  0x00 ; '.'
000000000021f680         db  0x4b ; 'K'
000000000021f681         db  0x7d ; '}'
000000000021f682         db  0x01 ; '.'
000000000021f683         db  0x00 ; '.'
000000000021f684         db  0x00 ; '.'
000000000021f685         db  0x00 ; '.'
000000000021f686         db  0x00 ; '.'
000000000021f687         db  0x00 ; '.'
000000000021f688         db  0x00 ; '.'
000000000021f689         db  0x00 ; '.'
000000000021f68a         db  0x00 ; '.'
000000000021f68b         db  0x00 ; '.'
000000000021f68c         db  0x00 ; '.'
000000000021f68d         db  0x00 ; '.'
000000000021f68e         db  0x00 ; '.'
000000000021f68f         db  0x00 ; '.'
000000000021f690         db  0x00 ; '.'
000000000021f691         db  0x00 ; '.'
000000000021f692         db  0x00 ; '.'
000000000021f693         db  0x00 ; '.'
000000000021f694         db  0x00 ; '.'
000000000021f695         db  0x00 ; '.'
000000000021f696         db  0x00 ; '.'
000000000021f697         db  0x00 ; '.'
000000000021f698         db  0x4e ; 'N'
000000000021f699         db  0x00 ; '.'
000000000021f69a         db  0x00 ; '.'
000000000021f69b         db  0x00 ; '.'
000000000021f69c         db  0x00 ; '.'
000000000021f69d         db  0x00 ; '.'
000000000021f69e         db  0x00 ; '.'
000000000021f69f         db  0x00 ; '.'
000000000021f6a0         db  0x53 ; 'S'
000000000021f6a1         db  0x7d ; '}'
000000000021f6a2         db  0x01 ; '.'
000000000021f6a3         db  0x00 ; '.'
000000000021f6a4         db  0x00 ; '.'
000000000021f6a5         db  0x00 ; '.'
000000000021f6a6         db  0x00 ; '.'
000000000021f6a7         db  0x00 ; '.'
000000000021f6a8         db  0x00 ; '.'
000000000021f6a9         db  0x00 ; '.'
000000000021f6aa         db  0x00 ; '.'
000000000021f6ab         db  0x00 ; '.'
000000000021f6ac         db  0x00 ; '.'
000000000021f6ad         db  0x00 ; '.'
000000000021f6ae         db  0x00 ; '.'
000000000021f6af         db  0x00 ; '.'
000000000021f6b0         db  0x00 ; '.'
000000000021f6b1         db  0x00 ; '.'
000000000021f6b2         db  0x00 ; '.'
000000000021f6b3         db  0x00 ; '.'
000000000021f6b4         db  0x00 ; '.'
000000000021f6b5         db  0x00 ; '.'
000000000021f6b6         db  0x00 ; '.'
000000000021f6b7         db  0x00 ; '.'
000000000021f6b8         db  0x51 ; 'Q'
000000000021f6b9         db  0x00 ; '.'
000000000021f6ba         db  0x00 ; '.'
000000000021f6bb         db  0x00 ; '.'
000000000021f6bc         db  0x00 ; '.'
000000000021f6bd         db  0x00 ; '.'
000000000021f6be         db  0x00 ; '.'
000000000021f6bf         db  0x00 ; '.'
000000000021f6c0         db  0xb3 ; '.'
000000000021f6c1         db  0x7a ; 'z'
000000000021f6c2         db  0x01 ; '.'
000000000021f6c3         db  0x00 ; '.'
000000000021f6c4         db  0x00 ; '.'
000000000021f6c5         db  0x00 ; '.'
000000000021f6c6         db  0x00 ; '.'
000000000021f6c7         db  0x00 ; '.'
000000000021f6c8         db  0x01 ; '.'
000000000021f6c9         db  0x00 ; '.'
000000000021f6ca         db  0x00 ; '.'
000000000021f6cb         db  0x00 ; '.'
000000000021f6cc         db  0x00 ; '.'
000000000021f6cd         db  0x00 ; '.'
000000000021f6ce         db  0x00 ; '.'
000000000021f6cf         db  0x00 ; '.'
000000000021f6d0         db  0x00 ; '.'
000000000021f6d1         db  0x00 ; '.'
000000000021f6d2         db  0x00 ; '.'
000000000021f6d3         db  0x00 ; '.'
000000000021f6d4         db  0x00 ; '.'
000000000021f6d5         db  0x00 ; '.'
000000000021f6d6         db  0x00 ; '.'
000000000021f6d7         db  0x00 ; '.'
000000000021f6d8         db  0x8b ; '.'
000000000021f6d9         db  0x00 ; '.'
000000000021f6da         db  0x00 ; '.'
000000000021f6db         db  0x00 ; '.'
000000000021f6dc         db  0x00 ; '.'
000000000021f6dd         db  0x00 ; '.'
000000000021f6de         db  0x00 ; '.'
000000000021f6df         db  0x00 ; '.'
000000000021f6e0         db  0x5e ; '^'
000000000021f6e1         db  0x7d ; '}'
000000000021f6e2         db  0x01 ; '.'
000000000021f6e3         db  0x00 ; '.'
000000000021f6e4         db  0x00 ; '.'
000000000021f6e5         db  0x00 ; '.'
000000000021f6e6         db  0x00 ; '.'
000000000021f6e7         db  0x00 ; '.'
000000000021f6e8         db  0x00 ; '.'
000000000021f6e9         db  0x00 ; '.'
000000000021f6ea         db  0x00 ; '.'
000000000021f6eb         db  0x00 ; '.'
000000000021f6ec         db  0x00 ; '.'
000000000021f6ed         db  0x00 ; '.'
000000000021f6ee         db  0x00 ; '.'
000000000021f6ef         db  0x00 ; '.'
000000000021f6f0         db  0x00 ; '.'
000000000021f6f1         db  0x00 ; '.'
000000000021f6f2         db  0x00 ; '.'
000000000021f6f3         db  0x00 ; '.'
000000000021f6f4         db  0x00 ; '.'
000000000021f6f5         db  0x00 ; '.'
000000000021f6f6         db  0x00 ; '.'
000000000021f6f7         db  0x00 ; '.'
000000000021f6f8         db  0x52 ; 'R'
000000000021f6f9         db  0x00 ; '.'
000000000021f6fa         db  0x00 ; '.'
000000000021f6fb         db  0x00 ; '.'
000000000021f6fc         db  0x00 ; '.'
000000000021f6fd         db  0x00 ; '.'
000000000021f6fe         db  0x00 ; '.'
000000000021f6ff         db  0x00 ; '.'
000000000021f700         db  0x84 ; '.'
000000000021f701         db  0x7a ; 'z'
000000000021f702         db  0x01 ; '.'
000000000021f703         db  0x00 ; '.'
000000000021f704         db  0x00 ; '.'
000000000021f705         db  0x00 ; '.'
000000000021f706         db  0x00 ; '.'
000000000021f707         db  0x00 ; '.'
000000000021f708         db  0x01 ; '.'
000000000021f709         db  0x00 ; '.'
000000000021f70a         db  0x00 ; '.'
000000000021f70b         db  0x00 ; '.'
000000000021f70c         db  0x00 ; '.'
000000000021f70d         db  0x00 ; '.'
000000000021f70e         db  0x00 ; '.'
000000000021f70f         db  0x00 ; '.'
000000000021f710         db  0x00 ; '.'
000000000021f711         db  0x00 ; '.'
000000000021f712         db  0x00 ; '.'
000000000021f713         db  0x00 ; '.'
000000000021f714         db  0x00 ; '.'
000000000021f715         db  0x00 ; '.'
000000000021f716         db  0x00 ; '.'
000000000021f717         db  0x00 ; '.'
000000000021f718         db  0x85 ; '.'
000000000021f719         db  0x00 ; '.'
000000000021f71a         db  0x00 ; '.'
000000000021f71b         db  0x00 ; '.'
000000000021f71c         db  0x00 ; '.'
000000000021f71d         db  0x00 ; '.'
000000000021f71e         db  0x00 ; '.'
000000000021f71f         db  0x00 ; '.'
000000000021f720         db  0x68 ; 'h'
000000000021f721         db  0x7d ; '}'
000000000021f722         db  0x01 ; '.'
000000000021f723         db  0x00 ; '.'
000000000021f724         db  0x00 ; '.'
000000000021f725         db  0x00 ; '.'
000000000021f726         db  0x00 ; '.'
000000000021f727         db  0x00 ; '.'
000000000021f728         db  0x00 ; '.'
000000000021f729         db  0x00 ; '.'
000000000021f72a         db  0x00 ; '.'
000000000021f72b         db  0x00 ; '.'
000000000021f72c         db  0x00 ; '.'
000000000021f72d         db  0x00 ; '.'
000000000021f72e         db  0x00 ; '.'
000000000021f72f         db  0x00 ; '.'
000000000021f730         db  0x00 ; '.'
000000000021f731         db  0x00 ; '.'
000000000021f732         db  0x00 ; '.'
000000000021f733         db  0x00 ; '.'
000000000021f734         db  0x00 ; '.'
000000000021f735         db  0x00 ; '.'
000000000021f736         db  0x00 ; '.'
000000000021f737         db  0x00 ; '.'
000000000021f738         db  0x8c ; '.'
000000000021f739         db  0x00 ; '.'
000000000021f73a         db  0x00 ; '.'
000000000021f73b         db  0x00 ; '.'
000000000021f73c         db  0x00 ; '.'
000000000021f73d         db  0x00 ; '.'
000000000021f73e         db  0x00 ; '.'
000000000021f73f         db  0x00 ; '.'
000000000021f740         db  0x76 ; 'v'
000000000021f741         db  0x7a ; 'z'
000000000021f742         db  0x01 ; '.'
000000000021f743         db  0x00 ; '.'
000000000021f744         db  0x00 ; '.'
000000000021f745         db  0x00 ; '.'
000000000021f746         db  0x00 ; '.'
000000000021f747         db  0x00 ; '.'
000000000021f748         db  0x01 ; '.'
000000000021f749         db  0x00 ; '.'
000000000021f74a         db  0x00 ; '.'
000000000021f74b         db  0x00 ; '.'
000000000021f74c         db  0x00 ; '.'
000000000021f74d         db  0x00 ; '.'
000000000021f74e         db  0x00 ; '.'
000000000021f74f         db  0x00 ; '.'
000000000021f750         db  0x00 ; '.'
000000000021f751         db  0x00 ; '.'
000000000021f752         db  0x00 ; '.'
000000000021f753         db  0x00 ; '.'
000000000021f754         db  0x00 ; '.'
000000000021f755         db  0x00 ; '.'
000000000021f756         db  0x00 ; '.'
000000000021f757         db  0x00 ; '.'
000000000021f758         db  0x8e ; '.'
000000000021f759         db  0x00 ; '.'
000000000021f75a         db  0x00 ; '.'
000000000021f75b         db  0x00 ; '.'
000000000021f75c         db  0x00 ; '.'
000000000021f75d         db  0x00 ; '.'
000000000021f75e         db  0x00 ; '.'
000000000021f75f         db  0x00 ; '.'
000000000021f760         db  0x7b ; '{'
000000000021f761         db  0x7d ; '}'
000000000021f762         db  0x01 ; '.'
000000000021f763         db  0x00 ; '.'
000000000021f764         db  0x00 ; '.'
000000000021f765         db  0x00 ; '.'
000000000021f766         db  0x00 ; '.'
000000000021f767         db  0x00 ; '.'
000000000021f768         db  0x01 ; '.'
000000000021f769         db  0x00 ; '.'
000000000021f76a         db  0x00 ; '.'
000000000021f76b         db  0x00 ; '.'
000000000021f76c         db  0x00 ; '.'
000000000021f76d         db  0x00 ; '.'
000000000021f76e         db  0x00 ; '.'
000000000021f76f         db  0x00 ; '.'
000000000021f770         db  0x00 ; '.'
000000000021f771         db  0x00 ; '.'
000000000021f772         db  0x00 ; '.'
000000000021f773         db  0x00 ; '.'
000000000021f774         db  0x00 ; '.'
000000000021f775         db  0x00 ; '.'
000000000021f776         db  0x00 ; '.'
000000000021f777         db  0x00 ; '.'
000000000021f778         db  0x54 ; 'T'
000000000021f779         db  0x00 ; '.'
000000000021f77a         db  0x00 ; '.'
000000000021f77b         db  0x00 ; '.'
000000000021f77c         db  0x00 ; '.'
000000000021f77d         db  0x00 ; '.'
000000000021f77e         db  0x00 ; '.'
000000000021f77f         db  0x00 ; '.'
000000000021f780         db  0x7d ; '}'
000000000021f781         db  0x7a ; 'z'
000000000021f782         db  0x01 ; '.'
000000000021f783         db  0x00 ; '.'
000000000021f784         db  0x00 ; '.'
000000000021f785         db  0x00 ; '.'
000000000021f786         db  0x00 ; '.'
000000000021f787         db  0x00 ; '.'
000000000021f788         db  0x01 ; '.'
000000000021f789         db  0x00 ; '.'
000000000021f78a         db  0x00 ; '.'
000000000021f78b         db  0x00 ; '.'
000000000021f78c         db  0x00 ; '.'
000000000021f78d         db  0x00 ; '.'
000000000021f78e         db  0x00 ; '.'
000000000021f78f         db  0x00 ; '.'
000000000021f790         db  0x00 ; '.'
000000000021f791         db  0x00 ; '.'
000000000021f792         db  0x00 ; '.'
000000000021f793         db  0x00 ; '.'
000000000021f794         db  0x00 ; '.'
000000000021f795         db  0x00 ; '.'
000000000021f796         db  0x00 ; '.'
000000000021f797         db  0x00 ; '.'
000000000021f798         db  0x8f ; '.'
000000000021f799         db  0x00 ; '.'
000000000021f79a         db  0x00 ; '.'
000000000021f79b         db  0x00 ; '.'
000000000021f79c         db  0x00 ; '.'
000000000021f79d         db  0x00 ; '.'
000000000021f79e         db  0x00 ; '.'
000000000021f79f         db  0x00 ; '.'
000000000021f7a0         db  0x83 ; '.'
000000000021f7a1         db  0x7d ; '}'
000000000021f7a2         db  0x01 ; '.'
000000000021f7a3         db  0x00 ; '.'
000000000021f7a4         db  0x00 ; '.'
000000000021f7a5         db  0x00 ; '.'
000000000021f7a6         db  0x00 ; '.'
000000000021f7a7         db  0x00 ; '.'
000000000021f7a8         db  0x01 ; '.'
000000000021f7a9         db  0x00 ; '.'
000000000021f7aa         db  0x00 ; '.'
000000000021f7ab         db  0x00 ; '.'
000000000021f7ac         db  0x00 ; '.'
000000000021f7ad         db  0x00 ; '.'
000000000021f7ae         db  0x00 ; '.'
000000000021f7af         db  0x00 ; '.'
000000000021f7b0         db  0x00 ; '.'
000000000021f7b1         db  0x00 ; '.'
000000000021f7b2         db  0x00 ; '.'
000000000021f7b3         db  0x00 ; '.'
000000000021f7b4         db  0x00 ; '.'
000000000021f7b5         db  0x00 ; '.'
000000000021f7b6         db  0x00 ; '.'
000000000021f7b7         db  0x00 ; '.'
000000000021f7b8         db  0x90 ; '.'
000000000021f7b9         db  0x00 ; '.'
000000000021f7ba         db  0x00 ; '.'
000000000021f7bb         db  0x00 ; '.'
000000000021f7bc         db  0x00 ; '.'
000000000021f7bd         db  0x00 ; '.'
000000000021f7be         db  0x00 ; '.'
000000000021f7bf         db  0x00 ; '.'
000000000021f7c0         db  0x8d ; '.'
000000000021f7c1         db  0x7a ; 'z'
000000000021f7c2         db  0x01 ; '.'
000000000021f7c3         db  0x00 ; '.'
000000000021f7c4         db  0x00 ; '.'
000000000021f7c5         db  0x00 ; '.'
000000000021f7c6         db  0x00 ; '.'
000000000021f7c7         db  0x00 ; '.'
000000000021f7c8         db  0x02 ; '.'
000000000021f7c9         db  0x00 ; '.'
000000000021f7ca         db  0x00 ; '.'
000000000021f7cb         db  0x00 ; '.'
000000000021f7cc         db  0x00 ; '.'
000000000021f7cd         db  0x00 ; '.'
000000000021f7ce         db  0x00 ; '.'
000000000021f7cf         db  0x00 ; '.'
000000000021f7d0         db  0x00 ; '.'
000000000021f7d1         db  0x00 ; '.'
000000000021f7d2         db  0x00 ; '.'
000000000021f7d3         db  0x00 ; '.'
000000000021f7d4         db  0x00 ; '.'
000000000021f7d5         db  0x00 ; '.'
000000000021f7d6         db  0x00 ; '.'
000000000021f7d7         db  0x00 ; '.'
000000000021f7d8         db  0x82 ; '.'
000000000021f7d9         db  0x00 ; '.'
000000000021f7da         db  0x00 ; '.'
000000000021f7db         db  0x00 ; '.'
000000000021f7dc         db  0x00 ; '.'
000000000021f7dd         db  0x00 ; '.'
000000000021f7de         db  0x00 ; '.'
000000000021f7df         db  0x00 ; '.'
000000000021f7e0         db  0x95 ; '.'
000000000021f7e1         db  0x7a ; 'z'
000000000021f7e2         db  0x01 ; '.'
000000000021f7e3         db  0x00 ; '.'
000000000021f7e4         db  0x00 ; '.'
000000000021f7e5         db  0x00 ; '.'
000000000021f7e6         db  0x00 ; '.'
000000000021f7e7         db  0x00 ; '.'
000000000021f7e8         db  0x02 ; '.'
000000000021f7e9         db  0x00 ; '.'
000000000021f7ea         db  0x00 ; '.'
000000000021f7eb         db  0x00 ; '.'
000000000021f7ec         db  0x00 ; '.'
000000000021f7ed         db  0x00 ; '.'
000000000021f7ee         db  0x00 ; '.'
000000000021f7ef         db  0x00 ; '.'
000000000021f7f0         db  0x00 ; '.'
000000000021f7f1         db  0x00 ; '.'
000000000021f7f2         db  0x00 ; '.'
000000000021f7f3         db  0x00 ; '.'
000000000021f7f4         db  0x00 ; '.'
000000000021f7f5         db  0x00 ; '.'
000000000021f7f6         db  0x00 ; '.'
000000000021f7f7         db  0x00 ; '.'
000000000021f7f8         db  0x89 ; '.'
000000000021f7f9         db  0x00 ; '.'
000000000021f7fa         db  0x00 ; '.'
000000000021f7fb         db  0x00 ; '.'
000000000021f7fc         db  0x00 ; '.'
000000000021f7fd         db  0x00 ; '.'
000000000021f7fe         db  0x00 ; '.'
000000000021f7ff         db  0x00 ; '.'
000000000021f800         db  0x8e ; '.'
000000000021f801         db  0x7d ; '}'
000000000021f802         db  0x01 ; '.'
000000000021f803         db  0x00 ; '.'
000000000021f804         db  0x00 ; '.'
000000000021f805         db  0x00 ; '.'
000000000021f806         db  0x00 ; '.'
000000000021f807         db  0x00 ; '.'
000000000021f808         db  0x01 ; '.'
000000000021f809         db  0x00 ; '.'
000000000021f80a         db  0x00 ; '.'
000000000021f80b         db  0x00 ; '.'
000000000021f80c         db  0x00 ; '.'
000000000021f80d         db  0x00 ; '.'
000000000021f80e         db  0x00 ; '.'
000000000021f80f         db  0x00 ; '.'
000000000021f810         db  0x00 ; '.'
000000000021f811         db  0x00 ; '.'
000000000021f812         db  0x00 ; '.'
000000000021f813         db  0x00 ; '.'
000000000021f814         db  0x00 ; '.'
000000000021f815         db  0x00 ; '.'
000000000021f816         db  0x00 ; '.'
000000000021f817         db  0x00 ; '.'
000000000021f818         db  0x81 ; '.'
000000000021f819         db  0x00 ; '.'
000000000021f81a         db  0x00 ; '.'
000000000021f81b         db  0x00 ; '.'
000000000021f81c         db  0x00 ; '.'
000000000021f81d         db  0x00 ; '.'
000000000021f81e         db  0x00 ; '.'
000000000021f81f         db  0x00 ; '.'
000000000021f820         db  0x99 ; '.'
000000000021f821         db  0x7d ; '}'
000000000021f822         db  0x01 ; '.'
000000000021f823         db  0x00 ; '.'
000000000021f824         db  0x00 ; '.'
000000000021f825         db  0x00 ; '.'
000000000021f826         db  0x00 ; '.'
000000000021f827         db  0x00 ; '.'
000000000021f828         db  0x00 ; '.'
000000000021f829         db  0x00 ; '.'
000000000021f82a         db  0x00 ; '.'
000000000021f82b         db  0x00 ; '.'
000000000021f82c         db  0x00 ; '.'
000000000021f82d         db  0x00 ; '.'
000000000021f82e         db  0x00 ; '.'
000000000021f82f         db  0x00 ; '.'
000000000021f830         db  0x00 ; '.'
000000000021f831         db  0x00 ; '.'
000000000021f832         db  0x00 ; '.'
000000000021f833         db  0x00 ; '.'
000000000021f834         db  0x00 ; '.'
000000000021f835         db  0x00 ; '.'
000000000021f836         db  0x00 ; '.'
000000000021f837         db  0x00 ; '.'
000000000021f838         db  0x5a ; 'Z'
000000000021f839         db  0x00 ; '.'
000000000021f83a         db  0x00 ; '.'
000000000021f83b         db  0x00 ; '.'
000000000021f83c         db  0x00 ; '.'
000000000021f83d         db  0x00 ; '.'
000000000021f83e         db  0x00 ; '.'
000000000021f83f         db  0x00 ; '.'
000000000021f840         db  0xa1 ; '.'
000000000021f841         db  0x7d ; '}'
000000000021f842         db  0x01 ; '.'
000000000021f843         db  0x00 ; '.'
000000000021f844         db  0x00 ; '.'
000000000021f845         db  0x00 ; '.'
000000000021f846         db  0x00 ; '.'
000000000021f847         db  0x00 ; '.'
000000000021f848         db  0x00 ; '.'
000000000021f849         db  0x00 ; '.'
000000000021f84a         db  0x00 ; '.'
000000000021f84b         db  0x00 ; '.'
000000000021f84c         db  0x00 ; '.'
000000000021f84d         db  0x00 ; '.'
000000000021f84e         db  0x00 ; '.'
000000000021f84f         db  0x00 ; '.'
000000000021f850         db  0x00 ; '.'
000000000021f851         db  0x00 ; '.'
000000000021f852         db  0x00 ; '.'
000000000021f853         db  0x00 ; '.'
000000000021f854         db  0x00 ; '.'
000000000021f855         db  0x00 ; '.'
000000000021f856         db  0x00 ; '.'
000000000021f857         db  0x00 ; '.'
000000000021f858         db  0x80 ; '.'
000000000021f859         db  0x00 ; '.'
000000000021f85a         db  0x00 ; '.'
000000000021f85b         db  0x00 ; '.'
000000000021f85c         db  0x00 ; '.'
000000000021f85d         db  0x00 ; '.'
000000000021f85e         db  0x00 ; '.'
000000000021f85f         db  0x00 ; '.'
000000000021f860         db  0xa8 ; '.'
000000000021f861         db  0x7d ; '}'
000000000021f862         db  0x01 ; '.'
000000000021f863         db  0x00 ; '.'
000000000021f864         db  0x00 ; '.'
000000000021f865         db  0x00 ; '.'
000000000021f866         db  0x00 ; '.'
000000000021f867         db  0x00 ; '.'
000000000021f868         db  0x00 ; '.'
000000000021f869         db  0x00 ; '.'
000000000021f86a         db  0x00 ; '.'
000000000021f86b         db  0x00 ; '.'
000000000021f86c         db  0x00 ; '.'
000000000021f86d         db  0x00 ; '.'
000000000021f86e         db  0x00 ; '.'
000000000021f86f         db  0x00 ; '.'
000000000021f870         db  0x00 ; '.'
000000000021f871         db  0x00 ; '.'
000000000021f872         db  0x00 ; '.'
000000000021f873         db  0x00 ; '.'
000000000021f874         db  0x00 ; '.'
000000000021f875         db  0x00 ; '.'
000000000021f876         db  0x00 ; '.'
000000000021f877         db  0x00 ; '.'
000000000021f878         db  0x7e ; '~'
000000000021f879         db  0xff ; '.'
000000000021f87a         db  0xff ; '.'
000000000021f87b         db  0xff ; '.'
000000000021f87c         db  0x00 ; '.'
000000000021f87d         db  0x00 ; '.'
000000000021f87e         db  0x00 ; '.'
000000000021f87f         db  0x00 ; '.'
000000000021f880         db  0x84 ; '.'
000000000021f881         db  0x78 ; 'x'
000000000021f882         db  0x01 ; '.'
000000000021f883         db  0x00 ; '.'
000000000021f884         db  0x00 ; '.'
000000000021f885         db  0x00 ; '.'
000000000021f886         db  0x00 ; '.'
000000000021f887         db  0x00 ; '.'
000000000021f888         db  0x00 ; '.'
000000000021f889         db  0x00 ; '.'
000000000021f88a         db  0x00 ; '.'
000000000021f88b         db  0x00 ; '.'
000000000021f88c         db  0x00 ; '.'
000000000021f88d         db  0x00 ; '.'
000000000021f88e         db  0x00 ; '.'
000000000021f88f         db  0x00 ; '.'
000000000021f890         db  0x00 ; '.'
000000000021f891         db  0x00 ; '.'
000000000021f892         db  0x00 ; '.'
000000000021f893         db  0x00 ; '.'
000000000021f894         db  0x00 ; '.'
000000000021f895         db  0x00 ; '.'
000000000021f896         db  0x00 ; '.'
000000000021f897         db  0x00 ; '.'
000000000021f898         db  0x7d ; '}'
000000000021f899         db  0xff ; '.'
000000000021f89a         db  0xff ; '.'
000000000021f89b         db  0xff ; '.'
000000000021f89c         db  0x00 ; '.'
000000000021f89d         db  0x00 ; '.'
000000000021f89e         db  0x00 ; '.'
000000000021f89f         db  0x00 ; '.'
000000000021f8a0         db  0x00 ; '.'
000000000021f8a1         db  0x00 ; '.'
000000000021f8a2         db  0x00 ; '.'
000000000021f8a3         db  0x00 ; '.'
000000000021f8a4         db  0x00 ; '.'
000000000021f8a5         db  0x00 ; '.'
000000000021f8a6         db  0x00 ; '.'
000000000021f8a7         db  0x00 ; '.'
000000000021f8a8         db  0x00 ; '.'
000000000021f8a9         db  0x00 ; '.'
000000000021f8aa         db  0x00 ; '.'
000000000021f8ab         db  0x00 ; '.'
000000000021f8ac         db  0x00 ; '.'
000000000021f8ad         db  0x00 ; '.'
000000000021f8ae         db  0x00 ; '.'
000000000021f8af         db  0x00 ; '.'
000000000021f8b0         db  0x00 ; '.'
000000000021f8b1         db  0x00 ; '.'
000000000021f8b2         db  0x00 ; '.'
000000000021f8b3         db  0x00 ; '.'
000000000021f8b4         db  0x00 ; '.'
000000000021f8b5         db  0x00 ; '.'
000000000021f8b6         db  0x00 ; '.'
000000000021f8b7         db  0x00 ; '.'
000000000021f8b8         db  0x00 ; '.'
000000000021f8b9         db  0x00 ; '.'
000000000021f8ba         db  0x00 ; '.'
000000000021f8bb         db  0x00 ; '.'
000000000021f8bc         db  0x00 ; '.'
000000000021f8bd         db  0x00 ; '.'
000000000021f8be         db  0x00 ; '.'
000000000021f8bf         db  0x00 ; '.'
                     indicator_name:
000000000021f8c0         db  0x0c ; '.'                                         ; DATA XREF=main+5467
000000000021f8c1         db  0x7a ; 'z'
000000000021f8c2         db  0x01 ; '.'
000000000021f8c3         db  0x00 ; '.'
000000000021f8c4         db  0x00 ; '.'
000000000021f8c5         db  0x00 ; '.'
000000000021f8c6         db  0x00 ; '.'
000000000021f8c7         db  0x00 ; '.'
000000000021f8c8         db  0x0c ; '.'
000000000021f8c9         db  0x7e ; '~'
000000000021f8ca         db  0x01 ; '.'
000000000021f8cb         db  0x00 ; '.'
000000000021f8cc         db  0x00 ; '.'
000000000021f8cd         db  0x00 ; '.'
000000000021f8ce         db  0x00 ; '.'
000000000021f8cf         db  0x00 ; '.'
000000000021f8d0         db  0x0f ; '.'
000000000021f8d1         db  0x7e ; '~'
000000000021f8d2         db  0x01 ; '.'
000000000021f8d3         db  0x00 ; '.'
000000000021f8d4         db  0x00 ; '.'
000000000021f8d5         db  0x00 ; '.'
000000000021f8d6         db  0x00 ; '.'
000000000021f8d7         db  0x00 ; '.'
000000000021f8d8         db  0xdf ; '.'
000000000021f8d9         db  0x7c ; '|'
000000000021f8da         db  0x01 ; '.'
000000000021f8db         db  0x00 ; '.'
000000000021f8dc         db  0x00 ; '.'
000000000021f8dd         db  0x00 ; '.'
000000000021f8de         db  0x00 ; '.'
000000000021f8df         db  0x00 ; '.'
000000000021f8e0         db  0xec ; '.'
000000000021f8e1         db  0x7b ; '{'
000000000021f8e2         db  0x01 ; '.'
000000000021f8e3         db  0x00 ; '.'
000000000021f8e4         db  0x00 ; '.'
000000000021f8e5         db  0x00 ; '.'
000000000021f8e6         db  0x00 ; '.'
000000000021f8e7         db  0x00 ; '.'
000000000021f8e8         db  0x12 ; '.'
000000000021f8e9         db  0x7e ; '~'
000000000021f8ea         db  0x01 ; '.'
000000000021f8eb         db  0x00 ; '.'
000000000021f8ec         db  0x00 ; '.'
000000000021f8ed         db  0x00 ; '.'
000000000021f8ee         db  0x00 ; '.'
000000000021f8ef         db  0x00 ; '.'
000000000021f8f0         db  0x15 ; '.'
000000000021f8f1         db  0x7e ; '~'
000000000021f8f2         db  0x01 ; '.'
000000000021f8f3         db  0x00 ; '.'
000000000021f8f4         db  0x00 ; '.'
000000000021f8f5         db  0x00 ; '.'
000000000021f8f6         db  0x00 ; '.'
000000000021f8f7         db  0x00 ; '.'
000000000021f8f8         db  0x18 ; '.'
000000000021f8f9         db  0x7e ; '~'
000000000021f8fa         db  0x01 ; '.'
000000000021f8fb         db  0x00 ; '.'
000000000021f8fc         db  0x00 ; '.'
000000000021f8fd         db  0x00 ; '.'
000000000021f8fe         db  0x00 ; '.'
000000000021f8ff         db  0x00 ; '.'
000000000021f900         db  0x1b ; '.'
000000000021f901         db  0x7e ; '~'
000000000021f902         db  0x01 ; '.'
000000000021f903         db  0x00 ; '.'
000000000021f904         db  0x00 ; '.'
000000000021f905         db  0x00 ; '.'
000000000021f906         db  0x00 ; '.'
000000000021f907         db  0x00 ; '.'
000000000021f908         db  0x4e ; 'N'
000000000021f909         db  0x7e ; '~'
000000000021f90a         db  0x01 ; '.'
000000000021f90b         db  0x00 ; '.'
000000000021f90c         db  0x00 ; '.'
000000000021f90d         db  0x00 ; '.'
000000000021f90e         db  0x00 ; '.'
000000000021f90f         db  0x00 ; '.'
000000000021f910         db  0x1e ; '.'
000000000021f911         db  0x7e ; '~'
000000000021f912         db  0x01 ; '.'
000000000021f913         db  0x00 ; '.'
000000000021f914         db  0x00 ; '.'
000000000021f915         db  0x00 ; '.'
000000000021f916         db  0x00 ; '.'
000000000021f917         db  0x00 ; '.'
000000000021f918         db  0x21 ; '!'
000000000021f919         db  0x7e ; '~'
000000000021f91a         db  0x01 ; '.'
000000000021f91b         db  0x00 ; '.'
000000000021f91c         db  0x00 ; '.'
000000000021f91d         db  0x00 ; '.'
000000000021f91e         db  0x00 ; '.'
000000000021f91f         db  0x00 ; '.'
000000000021f920         db  0x24 ; '$'
000000000021f921         db  0x7e ; '~'
000000000021f922         db  0x01 ; '.'
000000000021f923         db  0x00 ; '.'
000000000021f924         db  0x00 ; '.'
000000000021f925         db  0x00 ; '.'
000000000021f926         db  0x00 ; '.'
000000000021f927         db  0x00 ; '.'
000000000021f928         db  0xa5 ; '.'
000000000021f929         db  0x7d ; '}'
000000000021f92a         db  0x01 ; '.'
000000000021f92b         db  0x00 ; '.'
000000000021f92c         db  0x00 ; '.'
000000000021f92d         db  0x00 ; '.'
000000000021f92e         db  0x00 ; '.'
000000000021f92f         db  0x00 ; '.'
000000000021f930         db  0x27 ; '''
000000000021f931         db  0x7e ; '~'
000000000021f932         db  0x01 ; '.'
000000000021f933         db  0x00 ; '.'
000000000021f934         db  0x00 ; '.'
000000000021f935         db  0x00 ; '.'
000000000021f936         db  0x00 ; '.'
000000000021f937         db  0x00 ; '.'
000000000021f938         db  0x2a ; '*'
000000000021f939         db  0x7e ; '~'
000000000021f93a         db  0x01 ; '.'
000000000021f93b         db  0x00 ; '.'
000000000021f93c         db  0x00 ; '.'
000000000021f93d         db  0x00 ; '.'
000000000021f93e         db  0x00 ; '.'
000000000021f93f         db  0x00 ; '.'
000000000021f940         db  0x2d ; '-'
000000000021f941         db  0x7e ; '~'
000000000021f942         db  0x01 ; '.'
000000000021f943         db  0x00 ; '.'
000000000021f944         db  0x00 ; '.'
000000000021f945         db  0x00 ; '.'
000000000021f946         db  0x00 ; '.'
000000000021f947         db  0x00 ; '.'
000000000021f948         db  0x30 ; '0'
000000000021f949         db  0x7e ; '~'
000000000021f94a         db  0x01 ; '.'
000000000021f94b         db  0x00 ; '.'
000000000021f94c         db  0x00 ; '.'
000000000021f94d         db  0x00 ; '.'
000000000021f94e         db  0x00 ; '.'
000000000021f94f         db  0x00 ; '.'
000000000021f950         db  0x94 ; '.'
000000000021f951         db  0x7c ; '|'
000000000021f952         db  0x01 ; '.'
000000000021f953         db  0x00 ; '.'
000000000021f954         db  0x00 ; '.'
000000000021f955         db  0x00 ; '.'
000000000021f956         db  0x00 ; '.'
000000000021f957         db  0x00 ; '.'
000000000021f958         db  0x33 ; '3'
000000000021f959         db  0x7e ; '~'
000000000021f95a         db  0x01 ; '.'
000000000021f95b         db  0x00 ; '.'
000000000021f95c         db  0x00 ; '.'
000000000021f95d         db  0x00 ; '.'
000000000021f95e         db  0x00 ; '.'
000000000021f95f         db  0x00 ; '.'
000000000021f960         db  0x36 ; '6'
000000000021f961         db  0x7e ; '~'
000000000021f962         db  0x01 ; '.'
000000000021f963         db  0x00 ; '.'
000000000021f964         db  0x00 ; '.'
000000000021f965         db  0x00 ; '.'
000000000021f966         db  0x00 ; '.'
000000000021f967         db  0x00 ; '.'
000000000021f968         db  0x39 ; '9'
000000000021f969         db  0x7e ; '~'
000000000021f96a         db  0x01 ; '.'
000000000021f96b         db  0x00 ; '.'
000000000021f96c         db  0x00 ; '.'
000000000021f96d         db  0x00 ; '.'
000000000021f96e         db  0x00 ; '.'
000000000021f96f         db  0x00 ; '.'
000000000021f970         db  0x3c ; '<'
000000000021f971         db  0x7e ; '~'
000000000021f972         db  0x01 ; '.'
000000000021f973         db  0x00 ; '.'
000000000021f974         db  0x00 ; '.'
000000000021f975         db  0x00 ; '.'
000000000021f976         db  0x00 ; '.'
000000000021f977         db  0x00 ; '.'
000000000021f978         db  0x3f ; '?'
000000000021f979         db  0x7e ; '~'
000000000021f97a         db  0x01 ; '.'
000000000021f97b         db  0x00 ; '.'
000000000021f97c         db  0x00 ; '.'
000000000021f97d         db  0x00 ; '.'
000000000021f97e         db  0x00 ; '.'
000000000021f97f         db  0x00 ; '.'
000000000021f980         db  0x00 ; '.'
000000000021f981         db  0x00 ; '.'
000000000021f982         db  0x00 ; '.'
000000000021f983         db  0x00 ; '.'
000000000021f984         db  0x00 ; '.'
000000000021f985         db  0x00 ; '.'
000000000021f986         db  0x00 ; '.'
000000000021f987         db  0x00 ; '.'
000000000021f988         db  0x00 ; '.'
000000000021f989         db  0x00 ; '.'
000000000021f98a         db  0x00 ; '.'
000000000021f98b         db  0x00 ; '.'
000000000021f98c         db  0x00 ; '.'
000000000021f98d         db  0x00 ; '.'
000000000021f98e         db  0x00 ; '.'
000000000021f98f         db  0x00 ; '.'
000000000021f990         db  0x00 ; '.'
000000000021f991         db  0x00 ; '.'
000000000021f992         db  0x00 ; '.'
000000000021f993         db  0x00 ; '.'
000000000021f994         db  0x00 ; '.'
000000000021f995         db  0x00 ; '.'
000000000021f996         db  0x00 ; '.'
000000000021f997         db  0x00 ; '.'
000000000021f998         db  0x00 ; '.'
000000000021f999         db  0x00 ; '.'
000000000021f99a         db  0x00 ; '.'
000000000021f99b         db  0x00 ; '.'
000000000021f99c         db  0x00 ; '.'
000000000021f99d         db  0x00 ; '.'
000000000021f99e         db  0x00 ; '.'
000000000021f99f         db  0x00 ; '.'
                     indicator_style_args:
000000000021f9a0         db  0xef ; '.'                                         ; DATA XREF=main+1744
000000000021f9a1         db  0x7b ; '{'
000000000021f9a2         db  0x01 ; '.'
000000000021f9a3         db  0x00 ; '.'
000000000021f9a4         db  0x00 ; '.'
000000000021f9a5         db  0x00 ; '.'
000000000021f9a6         db  0x00 ; '.'
000000000021f9a7         db  0x00 ; '.'
000000000021f9a8         db  0x42 ; 'B'
000000000021f9a9         db  0x7e ; '~'
000000000021f9aa         db  0x01 ; '.'
000000000021f9ab         db  0x00 ; '.'
000000000021f9ac         db  0x00 ; '.'
000000000021f9ad         db  0x00 ; '.'
000000000021f9ae         db  0x00 ; '.'
000000000021f9af         db  0x00 ; '.'
000000000021f9b0         db  0x0d ; '.'
000000000021f9b1         db  0x7d ; '}'
000000000021f9b2         db  0x01 ; '.'
000000000021f9b3         db  0x00 ; '.'
000000000021f9b4         db  0x00 ; '.'
000000000021f9b5         db  0x00 ; '.'
000000000021f9b6         db  0x00 ; '.'
000000000021f9b7         db  0x00 ; '.'
000000000021f9b8         db  0x04 ; '.'
000000000021f9b9         db  0x7d ; '}'
000000000021f9ba         db  0x01 ; '.'
000000000021f9bb         db  0x00 ; '.'
000000000021f9bc         db  0x00 ; '.'
000000000021f9bd         db  0x00 ; '.'
000000000021f9be         db  0x00 ; '.'
000000000021f9bf         db  0x00 ; '.'
000000000021f9c0         db  0x00 ; '.'
000000000021f9c1         db  0x00 ; '.'
000000000021f9c2         db  0x00 ; '.'
000000000021f9c3         db  0x00 ; '.'
000000000021f9c4         db  0x00 ; '.'
000000000021f9c5         db  0x00 ; '.'
000000000021f9c6         db  0x00 ; '.'
000000000021f9c7         db  0x00 ; '.'
000000000021f9c8         db  0x00 ; '.'
000000000021f9c9         db  0x00 ; '.'
000000000021f9ca         db  0x00 ; '.'
000000000021f9cb         db  0x00 ; '.'
000000000021f9cc         db  0x00 ; '.'
000000000021f9cd         db  0x00 ; '.'
000000000021f9ce         db  0x00 ; '.'
000000000021f9cf         db  0x00 ; '.'
000000000021f9d0         db  0x00 ; '.'
000000000021f9d1         db  0x00 ; '.'
000000000021f9d2         db  0x00 ; '.'
000000000021f9d3         db  0x00 ; '.'
000000000021f9d4         db  0x00 ; '.'
000000000021f9d5         db  0x00 ; '.'
000000000021f9d6         db  0x00 ; '.'
000000000021f9d7         db  0x00 ; '.'
000000000021f9d8         db  0x00 ; '.'
000000000021f9d9         db  0x00 ; '.'
000000000021f9da         db  0x00 ; '.'
000000000021f9db         db  0x00 ; '.'
000000000021f9dc         db  0x00 ; '.'
000000000021f9dd         db  0x00 ; '.'
000000000021f9de         db  0x00 ; '.'
000000000021f9df         db  0x00 ; '.'
                     time_style_args:
000000000021f9e0         db  0x03 ; '.'                                         ; DATA XREF=main+5074, main+6077
000000000021f9e1         db  0x7a ; 'z'
000000000021f9e2         db  0x01 ; '.'
000000000021f9e3         db  0x00 ; '.'
000000000021f9e4         db  0x00 ; '.'
000000000021f9e5         db  0x00 ; '.'
000000000021f9e6         db  0x00 ; '.'
000000000021f9e7         db  0x00 ; '.'
000000000021f9e8         db  0x48 ; 'H'
000000000021f9e9         db  0x7e ; '~'
000000000021f9ea         db  0x01 ; '.'
000000000021f9eb         db  0x00 ; '.'
000000000021f9ec         db  0x00 ; '.'
000000000021f9ed         db  0x00 ; '.'
000000000021f9ee         db  0x00 ; '.'
000000000021f9ef         db  0x00 ; '.'
000000000021f9f0         db  0x4d ; 'M'
000000000021f9f1         db  0x7e ; '~'
000000000021f9f2         db  0x01 ; '.'
000000000021f9f3         db  0x00 ; '.'
000000000021f9f4         db  0x00 ; '.'
000000000021f9f5         db  0x00 ; '.'
000000000021f9f6         db  0x00 ; '.'
000000000021f9f7         db  0x00 ; '.'
000000000021f9f8         db  0x20 ; ' '
000000000021f9f9         db  0x7a ; 'z'
000000000021f9fa         db  0x01 ; '.'
000000000021f9fb         db  0x00 ; '.'
000000000021f9fc         db  0x00 ; '.'
000000000021f9fd         db  0x00 ; '.'
000000000021f9fe         db  0x00 ; '.'
000000000021f9ff         db  0x00 ; '.'
000000000021fa00         db  0x00 ; '.'
000000000021fa01         db  0x00 ; '.'
000000000021fa02         db  0x00 ; '.'
000000000021fa03         db  0x00 ; '.'
000000000021fa04         db  0x00 ; '.'
000000000021fa05         db  0x00 ; '.'
000000000021fa06         db  0x00 ; '.'
000000000021fa07         db  0x00 ; '.'
000000000021fa08         db  0x00 ; '.'
000000000021fa09         db  0x00 ; '.'
000000000021fa0a         db  0x00 ; '.'
000000000021fa0b         db  0x00 ; '.'
000000000021fa0c         db  0x00 ; '.'
000000000021fa0d         db  0x00 ; '.'
000000000021fa0e         db  0x00 ; '.'
000000000021fa0f         db  0x00 ; '.'
                     block_size_args:
000000000021fa10         db  0x97 ; '.'                                         ; DATA XREF=human_options+67
000000000021fa11         db  0x7c ; '|'
000000000021fa12         db  0x01 ; '.'
000000000021fa13         db  0x00 ; '.'
000000000021fa14         db  0x00 ; '.'
000000000021fa15         db  0x00 ; '.'
000000000021fa16         db  0x00 ; '.'
000000000021fa17         db  0x00 ; '.'
000000000021fa18         db  0x17 ; '.'
000000000021fa19         db  0x7d ; '}'
000000000021fa1a         db  0x01 ; '.'
000000000021fa1b         db  0x00 ; '.'
000000000021fa1c         db  0x00 ; '.'
000000000021fa1d         db  0x00 ; '.'
000000000021fa1e         db  0x00 ; '.'
000000000021fa1f         db  0x00 ; '.'
000000000021fa20         db  0x00 ; '.'
000000000021fa21         db  0x00 ; '.'
000000000021fa22         db  0x00 ; '.'
000000000021fa23         db  0x00 ; '.'
000000000021fa24         db  0x00 ; '.'
000000000021fa25         db  0x00 ; '.'
000000000021fa26         db  0x00 ; '.'
000000000021fa27         db  0x00 ; '.'
000000000021fa28         db  0x00 ; '.'
000000000021fa29         db  0x00 ; '.'
000000000021fa2a         db  0x00 ; '.'
000000000021fa2b         db  0x00 ; '.'
000000000021fa2c         db  0x00 ; '.'
000000000021fa2d         db  0x00 ; '.'
000000000021fa2e         db  0x00 ; '.'
000000000021fa2f         db  0x00 ; '.'
000000000021fa30         db  0x00 ; '.'
000000000021fa31         db  0x00 ; '.'
000000000021fa32         db  0x00 ; '.'
000000000021fa33         db  0x00 ; '.'
000000000021fa34         db  0x00 ; '.'
000000000021fa35         db  0x00 ; '.'
000000000021fa36         db  0x00 ; '.'
000000000021fa37         db  0x00 ; '.'
000000000021fa38         db  0x00 ; '.'
000000000021fa39         db  0x00 ; '.'
000000000021fa3a         db  0x00 ; '.'
000000000021fa3b         db  0x00 ; '.'
000000000021fa3c         db  0x00 ; '.'
000000000021fa3d         db  0x00 ; '.'
000000000021fa3e         db  0x00 ; '.'
000000000021fa3f         db  0x00 ; '.'
                     quoting_style_args:
000000000021fa40         db  0x4b ; 'K'                                         ; DATA XREF=main+380, main+1683, main+4620
000000000021fa41         db  0x7d ; '}'
000000000021fa42         db  0x01 ; '.'
000000000021fa43         db  0x00 ; '.'
000000000021fa44         db  0x00 ; '.'
000000000021fa45         db  0x00 ; '.'
000000000021fa46         db  0x00 ; '.'
000000000021fa47         db  0x00 ; '.'
000000000021fa48         db  0x1f ; '.'
000000000021fa49         db  0xa3 ; '.'
000000000021fa4a         db  0x01 ; '.'
000000000021fa4b         db  0x00 ; '.'
000000000021fa4c         db  0x00 ; '.'
000000000021fa4d         db  0x00 ; '.'
000000000021fa4e         db  0x00 ; '.'
000000000021fa4f         db  0x00 ; '.'
000000000021fa50         db  0x25 ; '%'
000000000021fa51         db  0xa3 ; '.'
000000000021fa52         db  0x01 ; '.'
000000000021fa53         db  0x00 ; '.'
000000000021fa54         db  0x00 ; '.'
000000000021fa55         db  0x00 ; '.'
000000000021fa56         db  0x00 ; '.'
000000000021fa57         db  0x00 ; '.'
000000000021fa58         db  0x32 ; '2'
000000000021fa59         db  0xa3 ; '.'
000000000021fa5a         db  0x01 ; '.'
000000000021fa5b         db  0x00 ; '.'
000000000021fa5c         db  0x00 ; '.'
000000000021fa5d         db  0x00 ; '.'
000000000021fa5e         db  0x00 ; '.'
000000000021fa5f         db  0x00 ; '.'
000000000021fa60         db  0x3f ; '?'
000000000021fa61         db  0xa3 ; '.'
000000000021fa62         db  0x01 ; '.'
000000000021fa63         db  0x00 ; '.'
000000000021fa64         db  0x00 ; '.'
000000000021fa65         db  0x00 ; '.'
000000000021fa66         db  0x00 ; '.'
000000000021fa67         db  0x00 ; '.'
000000000021fa68         db  0x70 ; 'p'
000000000021fa69         db  0x78 ; 'x'
000000000021fa6a         db  0x01 ; '.'
000000000021fa6b         db  0x00 ; '.'
000000000021fa6c         db  0x00 ; '.'
000000000021fa6d         db  0x00 ; '.'
000000000021fa6e         db  0x00 ; '.'
000000000021fa6f         db  0x00 ; '.'
000000000021fa70         db  0x53 ; 'S'
000000000021fa71         db  0xa3 ; '.'
000000000021fa72         db  0x01 ; '.'
000000000021fa73         db  0x00 ; '.'
000000000021fa74         db  0x00 ; '.'
000000000021fa75         db  0x00 ; '.'
000000000021fa76         db  0x00 ; '.'
000000000021fa77         db  0x00 ; '.'
000000000021fa78         db  0x38 ; '8'
000000000021fa79         db  0xa3 ; '.'
000000000021fa7a         db  0x01 ; '.'
000000000021fa7b         db  0x00 ; '.'
000000000021fa7c         db  0x00 ; '.'
000000000021fa7d         db  0x00 ; '.'
000000000021fa7e         db  0x00 ; '.'
000000000021fa7f         db  0x00 ; '.'
000000000021fa80         db  0x20 ; ' '
000000000021fa81         db  0x7a ; 'z'
000000000021fa82         db  0x01 ; '.'
000000000021fa83         db  0x00 ; '.'
000000000021fa84         db  0x00 ; '.'
000000000021fa85         db  0x00 ; '.'
000000000021fa86         db  0x00 ; '.'
000000000021fa87         db  0x00 ; '.'
000000000021fa88         db  0x5b ; '['
000000000021fa89         db  0xa3 ; '.'
000000000021fa8a         db  0x01 ; '.'
000000000021fa8b         db  0x00 ; '.'
000000000021fa8c         db  0x00 ; '.'
000000000021fa8d         db  0x00 ; '.'
000000000021fa8e         db  0x00 ; '.'
000000000021fa8f         db  0x00 ; '.'
000000000021fa90         db  0x00 ; '.'
000000000021fa91         db  0x00 ; '.'
000000000021fa92         db  0x00 ; '.'
000000000021fa93         db  0x00 ; '.'
000000000021fa94         db  0x00 ; '.'
000000000021fa95         db  0x00 ; '.'
000000000021fa96         db  0x00 ; '.'
000000000021fa97         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x21fa98; 0x21fc88[ (496 bytes)
        ; File offset : [129688; 130184[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
000000000021fa98         db  0x01 ; '.'
000000000021fa99         db  0x00 ; '.'
000000000021fa9a         db  0x00 ; '.'
000000000021fa9b         db  0x00 ; '.'
000000000021fa9c         db  0x00 ; '.'
000000000021fa9d         db  0x00 ; '.'
000000000021fa9e         db  0x00 ; '.'
000000000021fa9f         db  0x00 ; '.'
000000000021faa0         db  0x01 ; '.'
000000000021faa1         db  0x00 ; '.'
000000000021faa2         db  0x00 ; '.'
000000000021faa3         db  0x00 ; '.'
000000000021faa4         db  0x00 ; '.'
000000000021faa5         db  0x00 ; '.'
000000000021faa6         db  0x00 ; '.'
000000000021faa7         db  0x00 ; '.'
000000000021faa8         db  0x0c ; '.'
000000000021faa9         db  0x00 ; '.'
000000000021faaa         db  0x00 ; '.'
000000000021faab         db  0x00 ; '.'
000000000021faac         db  0x00 ; '.'
000000000021faad         db  0x00 ; '.'
000000000021faae         db  0x00 ; '.'
000000000021faaf         db  0x00 ; '.'
000000000021fab0         db  0x10 ; '.'
000000000021fab1         db  0x32 ; '2'
000000000021fab2         db  0x00 ; '.'
000000000021fab3         db  0x00 ; '.'
000000000021fab4         db  0x00 ; '.'
000000000021fab5         db  0x00 ; '.'
000000000021fab6         db  0x00 ; '.'
000000000021fab7         db  0x00 ; '.'
000000000021fab8         db  0x0d ; '.'
000000000021fab9         db  0x00 ; '.'
000000000021faba         db  0x00 ; '.'
000000000021fabb         db  0x00 ; '.'
000000000021fabc         db  0x00 ; '.'
000000000021fabd         db  0x00 ; '.'
000000000021fabe         db  0x00 ; '.'
000000000021fabf         db  0x00 ; '.'
000000000021fac0         db  0x50 ; 'P'
000000000021fac1         db  0x5f ; '_'
000000000021fac2         db  0x01 ; '.'
000000000021fac3         db  0x00 ; '.'
000000000021fac4         db  0x00 ; '.'
000000000021fac5         db  0x00 ; '.'
000000000021fac6         db  0x00 ; '.'
000000000021fac7         db  0x00 ; '.'
000000000021fac8         db  0x19 ; '.'
000000000021fac9         db  0x00 ; '.'
000000000021faca         db  0x00 ; '.'
000000000021facb         db  0x00 ; '.'
000000000021facc         db  0x00 ; '.'
000000000021facd         db  0x00 ; '.'
000000000021face         db  0x00 ; '.'
000000000021facf         db  0x00 ; '.'
000000000021fad0         db  0x50 ; 'P'
000000000021fad1         db  0xf0 ; '.'
000000000021fad2         db  0x21 ; '!'
000000000021fad3         db  0x00 ; '.'
000000000021fad4         db  0x00 ; '.'
000000000021fad5         db  0x00 ; '.'
000000000021fad6         db  0x00 ; '.'
000000000021fad7         db  0x00 ; '.'
000000000021fad8         db  0x1b ; '.'
000000000021fad9         db  0x00 ; '.'
000000000021fada         db  0x00 ; '.'
000000000021fadb         db  0x00 ; '.'
000000000021fadc         db  0x00 ; '.'
000000000021fadd         db  0x00 ; '.'
000000000021fade         db  0x00 ; '.'
000000000021fadf         db  0x00 ; '.'
000000000021fae0         db  0x08 ; '.'
000000000021fae1         db  0x00 ; '.'
000000000021fae2         db  0x00 ; '.'
000000000021fae3         db  0x00 ; '.'
000000000021fae4         db  0x00 ; '.'
000000000021fae5         db  0x00 ; '.'
000000000021fae6         db  0x00 ; '.'
000000000021fae7         db  0x00 ; '.'
000000000021fae8         db  0x1a ; '.'
000000000021fae9         db  0x00 ; '.'
000000000021faea         db  0x00 ; '.'
000000000021faeb         db  0x00 ; '.'
000000000021faec         db  0x00 ; '.'
000000000021faed         db  0x00 ; '.'
000000000021faee         db  0x00 ; '.'
000000000021faef         db  0x00 ; '.'
000000000021faf0         db  0x58 ; 'X'
000000000021faf1         db  0xf0 ; '.'
000000000021faf2         db  0x21 ; '!'
000000000021faf3         db  0x00 ; '.'
000000000021faf4         db  0x00 ; '.'
000000000021faf5         db  0x00 ; '.'
000000000021faf6         db  0x00 ; '.'
000000000021faf7         db  0x00 ; '.'
000000000021faf8         db  0x1c ; '.'
000000000021faf9         db  0x00 ; '.'
000000000021fafa         db  0x00 ; '.'
000000000021fafb         db  0x00 ; '.'
000000000021fafc         db  0x00 ; '.'
000000000021fafd         db  0x00 ; '.'
000000000021fafe         db  0x00 ; '.'
000000000021faff         db  0x00 ; '.'
000000000021fb00         db  0x08 ; '.'
000000000021fb01         db  0x00 ; '.'
000000000021fb02         db  0x00 ; '.'
000000000021fb03         db  0x00 ; '.'
000000000021fb04         db  0x00 ; '.'
000000000021fb05         db  0x00 ; '.'
000000000021fb06         db  0x00 ; '.'
000000000021fb07         db  0x00 ; '.'
000000000021fb08         db  0xf5 ; '.'
000000000021fb09         db  0xfe ; '.'
000000000021fb0a         db  0xff ; '.'
000000000021fb0b         db  0x6f ; 'o'
000000000021fb0c         db  0x00 ; '.'
000000000021fb0d         db  0x00 ; '.'
000000000021fb0e         db  0x00 ; '.'
000000000021fb0f         db  0x00 ; '.'
000000000021fb10         db  0x98 ; '.'
000000000021fb11         db  0x02 ; '.'
000000000021fb12         db  0x00 ; '.'
000000000021fb13         db  0x00 ; '.'
000000000021fb14         db  0x00 ; '.'
000000000021fb15         db  0x00 ; '.'
000000000021fb16         db  0x00 ; '.'
000000000021fb17         db  0x00 ; '.'
000000000021fb18         db  0x05 ; '.'
000000000021fb19         db  0x00 ; '.'
000000000021fb1a         db  0x00 ; '.'
000000000021fb1b         db  0x00 ; '.'
000000000021fb1c         db  0x00 ; '.'
000000000021fb1d         db  0x00 ; '.'
000000000021fb1e         db  0x00 ; '.'
000000000021fb1f         db  0x00 ; '.'
000000000021fb20         db  0x88 ; '.'
000000000021fb21         db  0x0e ; '.'
000000000021fb22         db  0x00 ; '.'
000000000021fb23         db  0x00 ; '.'
000000000021fb24         db  0x00 ; '.'
000000000021fb25         db  0x00 ; '.'
000000000021fb26         db  0x00 ; '.'
000000000021fb27         db  0x00 ; '.'
000000000021fb28         db  0x06 ; '.'
000000000021fb29         db  0x00 ; '.'
000000000021fb2a         db  0x00 ; '.'
000000000021fb2b         db  0x00 ; '.'
000000000021fb2c         db  0x00 ; '.'
000000000021fb2d         db  0x00 ; '.'
000000000021fb2e         db  0x00 ; '.'
000000000021fb2f         db  0x00 ; '.'
000000000021fb30         db  0x00 ; '.'
000000000021fb31         db  0x03 ; '.'
000000000021fb32         db  0x00 ; '.'
000000000021fb33         db  0x00 ; '.'
000000000021fb34         db  0x00 ; '.'
000000000021fb35         db  0x00 ; '.'
000000000021fb36         db  0x00 ; '.'
000000000021fb37         db  0x00 ; '.'
000000000021fb38         db  0x0a ; '.'
000000000021fb39         db  0x00 ; '.'
000000000021fb3a         db  0x00 ; '.'
000000000021fb3b         db  0x00 ; '.'
000000000021fb3c         db  0x00 ; '.'
000000000021fb3d         db  0x00 ; '.'
000000000021fb3e         db  0x00 ; '.'
000000000021fb3f         db  0x00 ; '.'
000000000021fb40         db  0x6e ; 'n'
000000000021fb41         db  0x05 ; '.'
000000000021fb42         db  0x00 ; '.'
000000000021fb43         db  0x00 ; '.'
000000000021fb44         db  0x00 ; '.'
000000000021fb45         db  0x00 ; '.'
000000000021fb46         db  0x00 ; '.'
000000000021fb47         db  0x00 ; '.'
000000000021fb48         db  0x0b ; '.'
000000000021fb49         db  0x00 ; '.'
000000000021fb4a         db  0x00 ; '.'
000000000021fb4b         db  0x00 ; '.'
000000000021fb4c         db  0x00 ; '.'
000000000021fb4d         db  0x00 ; '.'
000000000021fb4e         db  0x00 ; '.'
000000000021fb4f         db  0x00 ; '.'
000000000021fb50         db  0x18 ; '.'
000000000021fb51         db  0x00 ; '.'
000000000021fb52         db  0x00 ; '.'
000000000021fb53         db  0x00 ; '.'
000000000021fb54         db  0x00 ; '.'
000000000021fb55         db  0x00 ; '.'
000000000021fb56         db  0x00 ; '.'
000000000021fb57         db  0x00 ; '.'
000000000021fb58         db  0x15 ; '.'
000000000021fb59         db  0x00 ; '.'
000000000021fb5a         db  0x00 ; '.'
000000000021fb5b         db  0x00 ; '.'
000000000021fb5c         db  0x00 ; '.'
000000000021fb5d         db  0x00 ; '.'
000000000021fb5e         db  0x00 ; '.'
000000000021fb5f         db  0x00 ; '.'
000000000021fb60         db  0x00 ; '.'
000000000021fb61         db  0x00 ; '.'
000000000021fb62         db  0x00 ; '.'
000000000021fb63         db  0x00 ; '.'
000000000021fb64         db  0x00 ; '.'
000000000021fb65         db  0x00 ; '.'
000000000021fb66         db  0x00 ; '.'
000000000021fb67         db  0x00 ; '.'
000000000021fb68         db  0x03 ; '.'
000000000021fb69         db  0x00 ; '.'
000000000021fb6a         db  0x00 ; '.'
000000000021fb6b         db  0x00 ; '.'
000000000021fb6c         db  0x00 ; '.'
000000000021fb6d         db  0x00 ; '.'
000000000021fb6e         db  0x00 ; '.'
000000000021fb6f         db  0x00 ; '.'
000000000021fb70         db  0x88 ; '.'
000000000021fb71         db  0xfc ; '.'
000000000021fb72         db  0x21 ; '!'
000000000021fb73         db  0x00 ; '.'
000000000021fb74         db  0x00 ; '.'
000000000021fb75         db  0x00 ; '.'
000000000021fb76         db  0x00 ; '.'
000000000021fb77         db  0x00 ; '.'
000000000021fb78         db  0x02 ; '.'
000000000021fb79         db  0x00 ; '.'
000000000021fb7a         db  0x00 ; '.'
000000000021fb7b         db  0x00 ; '.'
000000000021fb7c         db  0x00 ; '.'
000000000021fb7d         db  0x00 ; '.'
000000000021fb7e         db  0x00 ; '.'
000000000021fb7f         db  0x00 ; '.'
000000000021fb80         db  0x60 ; '`'
000000000021fb81         db  0x09 ; '.'
000000000021fb82         db  0x00 ; '.'
000000000021fb83         db  0x00 ; '.'
000000000021fb84         db  0x00 ; '.'
000000000021fb85         db  0x00 ; '.'
000000000021fb86         db  0x00 ; '.'
000000000021fb87         db  0x00 ; '.'
000000000021fb88         db  0x14 ; '.'
000000000021fb89         db  0x00 ; '.'
000000000021fb8a         db  0x00 ; '.'
000000000021fb8b         db  0x00 ; '.'
000000000021fb8c         db  0x00 ; '.'
000000000021fb8d         db  0x00 ; '.'
000000000021fb8e         db  0x00 ; '.'
000000000021fb8f         db  0x00 ; '.'
000000000021fb90         db  0x07 ; '.'
000000000021fb91         db  0x00 ; '.'
000000000021fb92         db  0x00 ; '.'
000000000021fb93         db  0x00 ; '.'
000000000021fb94         db  0x00 ; '.'
000000000021fb95         db  0x00 ; '.'
000000000021fb96         db  0x00 ; '.'
000000000021fb97         db  0x00 ; '.'
000000000021fb98         db  0x17 ; '.'
000000000021fb99         db  0x00 ; '.'
000000000021fb9a         db  0x00 ; '.'
000000000021fb9b         db  0x00 ; '.'
000000000021fb9c         db  0x00 ; '.'
000000000021fb9d         db  0x00 ; '.'
000000000021fb9e         db  0x00 ; '.'
000000000021fb9f         db  0x00 ; '.'
000000000021fba0         db  0xb0 ; '.'
000000000021fba1         db  0x28 ; '('
000000000021fba2         db  0x00 ; '.'
000000000021fba3         db  0x00 ; '.'
000000000021fba4         db  0x00 ; '.'
000000000021fba5         db  0x00 ; '.'
000000000021fba6         db  0x00 ; '.'
000000000021fba7         db  0x00 ; '.'
000000000021fba8         db  0x07 ; '.'
000000000021fba9         db  0x00 ; '.'
000000000021fbaa         db  0x00 ; '.'
000000000021fbab         db  0x00 ; '.'
000000000021fbac         db  0x00 ; '.'
000000000021fbad         db  0x00 ; '.'
000000000021fbae         db  0x00 ; '.'
000000000021fbaf         db  0x00 ; '.'
000000000021fbb0         db  0x60 ; '`'
000000000021fbb1         db  0x15 ; '.'
000000000021fbb2         db  0x00 ; '.'
000000000021fbb3         db  0x00 ; '.'
000000000021fbb4         db  0x00 ; '.'
000000000021fbb5         db  0x00 ; '.'
000000000021fbb6         db  0x00 ; '.'
000000000021fbb7         db  0x00 ; '.'
000000000021fbb8         db  0x08 ; '.'
000000000021fbb9         db  0x00 ; '.'
000000000021fbba         db  0x00 ; '.'
000000000021fbbb         db  0x00 ; '.'
000000000021fbbc         db  0x00 ; '.'
000000000021fbbd         db  0x00 ; '.'
000000000021fbbe         db  0x00 ; '.'
000000000021fbbf         db  0x00 ; '.'
000000000021fbc0         db  0x50 ; 'P'
000000000021fbc1         db  0x13 ; '.'
000000000021fbc2         db  0x00 ; '.'
000000000021fbc3         db  0x00 ; '.'
000000000021fbc4         db  0x00 ; '.'
000000000021fbc5         db  0x00 ; '.'
000000000021fbc6         db  0x00 ; '.'
000000000021fbc7         db  0x00 ; '.'
000000000021fbc8         db  0x09 ; '.'
000000000021fbc9         db  0x00 ; '.'
000000000021fbca         db  0x00 ; '.'
000000000021fbcb         db  0x00 ; '.'
000000000021fbcc         db  0x00 ; '.'
000000000021fbcd         db  0x00 ; '.'
000000000021fbce         db  0x00 ; '.'
000000000021fbcf         db  0x00 ; '.'
000000000021fbd0         db  0x18 ; '.'
000000000021fbd1         db  0x00 ; '.'
000000000021fbd2         db  0x00 ; '.'
000000000021fbd3         db  0x00 ; '.'
000000000021fbd4         db  0x00 ; '.'
000000000021fbd5         db  0x00 ; '.'
000000000021fbd6         db  0x00 ; '.'
000000000021fbd7         db  0x00 ; '.'
000000000021fbd8         db  0x1e ; '.'
000000000021fbd9         db  0x00 ; '.'
000000000021fbda         db  0x00 ; '.'
000000000021fbdb         db  0x00 ; '.'
000000000021fbdc         db  0x00 ; '.'
000000000021fbdd         db  0x00 ; '.'
000000000021fbde         db  0x00 ; '.'
000000000021fbdf         db  0x00 ; '.'
000000000021fbe0         db  0x08 ; '.'
000000000021fbe1         db  0x00 ; '.'
000000000021fbe2         db  0x00 ; '.'
000000000021fbe3         db  0x00 ; '.'
000000000021fbe4         db  0x00 ; '.'
000000000021fbe5         db  0x00 ; '.'
000000000021fbe6         db  0x00 ; '.'
000000000021fbe7         db  0x00 ; '.'
000000000021fbe8         db  0xfb ; '.'
000000000021fbe9         db  0xff ; '.'
000000000021fbea         db  0xff ; '.'
000000000021fbeb         db  0x6f ; 'o'
000000000021fbec         db  0x00 ; '.'
000000000021fbed         db  0x00 ; '.'
000000000021fbee         db  0x00 ; '.'
000000000021fbef         db  0x00 ; '.'
000000000021fbf0         db  0x01 ; '.'
000000000021fbf1         db  0x00 ; '.'
000000000021fbf2         db  0x00 ; '.'
000000000021fbf3         db  0x08 ; '.'
000000000021fbf4         db  0x00 ; '.'
000000000021fbf5         db  0x00 ; '.'
000000000021fbf6         db  0x00 ; '.'
000000000021fbf7         db  0x00 ; '.'
000000000021fbf8         db  0xfe ; '.'
000000000021fbf9         db  0xff ; '.'
000000000021fbfa         db  0xff ; '.'
000000000021fbfb         db  0x6f ; 'o'
000000000021fbfc         db  0x00 ; '.'
000000000021fbfd         db  0x00 ; '.'
000000000021fbfe         db  0x00 ; '.'
000000000021fbff         db  0x00 ; '.'
000000000021fc00         db  0xf0 ; '.'
000000000021fc01         db  0x14 ; '.'
000000000021fc02         db  0x00 ; '.'
000000000021fc03         db  0x00 ; '.'
000000000021fc04         db  0x00 ; '.'
000000000021fc05         db  0x00 ; '.'
000000000021fc06         db  0x00 ; '.'
000000000021fc07         db  0x00 ; '.'
000000000021fc08         db  0xff ; '.'
000000000021fc09         db  0xff ; '.'
000000000021fc0a         db  0xff ; '.'
000000000021fc0b         db  0x6f ; 'o'
000000000021fc0c         db  0x00 ; '.'
000000000021fc0d         db  0x00 ; '.'
000000000021fc0e         db  0x00 ; '.'
000000000021fc0f         db  0x00 ; '.'
000000000021fc10         db  0x01 ; '.'
000000000021fc11         db  0x00 ; '.'
000000000021fc12         db  0x00 ; '.'
000000000021fc13         db  0x00 ; '.'
000000000021fc14         db  0x00 ; '.'
000000000021fc15         db  0x00 ; '.'
000000000021fc16         db  0x00 ; '.'
000000000021fc17         db  0x00 ; '.'
000000000021fc18         db  0xf0 ; '.'
000000000021fc19         db  0xff ; '.'
000000000021fc1a         db  0xff ; '.'
000000000021fc1b         db  0x6f ; 'o'
000000000021fc1c         db  0x00 ; '.'
000000000021fc1d         db  0x00 ; '.'
000000000021fc1e         db  0x00 ; '.'
000000000021fc1f         db  0x00 ; '.'
000000000021fc20         db  0xf6 ; '.'
000000000021fc21         db  0x13 ; '.'
000000000021fc22         db  0x00 ; '.'
000000000021fc23         db  0x00 ; '.'
000000000021fc24         db  0x00 ; '.'
000000000021fc25         db  0x00 ; '.'
000000000021fc26         db  0x00 ; '.'
000000000021fc27         db  0x00 ; '.'
000000000021fc28         db  0xf9 ; '.'
000000000021fc29         db  0xff ; '.'
000000000021fc2a         db  0xff ; '.'
000000000021fc2b         db  0x6f ; 'o'
000000000021fc2c         db  0x00 ; '.'
000000000021fc2d         db  0x00 ; '.'
000000000021fc2e         db  0x00 ; '.'
000000000021fc2f         db  0x00 ; '.'
000000000021fc30         db  0xc1 ; '.'
000000000021fc31         db  0x00 ; '.'
000000000021fc32         db  0x00 ; '.'
000000000021fc33         db  0x00 ; '.'
000000000021fc34         db  0x00 ; '.'
000000000021fc35         db  0x00 ; '.'
000000000021fc36         db  0x00 ; '.'
000000000021fc37         db  0x00 ; '.'
000000000021fc38         db  0x00 ; '.'
000000000021fc39         db  0x00 ; '.'
000000000021fc3a         db  0x00 ; '.'
000000000021fc3b         db  0x00 ; '.'
000000000021fc3c         db  0x00 ; '.'
000000000021fc3d         db  0x00 ; '.'
000000000021fc3e         db  0x00 ; '.'
000000000021fc3f         db  0x00 ; '.'
000000000021fc40         db  0x00 ; '.'
000000000021fc41         db  0x00 ; '.'
000000000021fc42         db  0x00 ; '.'
000000000021fc43         db  0x00 ; '.'
000000000021fc44         db  0x00 ; '.'
000000000021fc45         db  0x00 ; '.'
000000000021fc46         db  0x00 ; '.'
000000000021fc47         db  0x00 ; '.'
000000000021fc48         db  0x00 ; '.'
000000000021fc49         db  0x00 ; '.'
000000000021fc4a         db  0x00 ; '.'
000000000021fc4b         db  0x00 ; '.'
000000000021fc4c         db  0x00 ; '.'
000000000021fc4d         db  0x00 ; '.'
000000000021fc4e         db  0x00 ; '.'
000000000021fc4f         db  0x00 ; '.'
000000000021fc50         db  0x00 ; '.'
000000000021fc51         db  0x00 ; '.'
000000000021fc52         db  0x00 ; '.'
000000000021fc53         db  0x00 ; '.'
000000000021fc54         db  0x00 ; '.'
000000000021fc55         db  0x00 ; '.'
000000000021fc56         db  0x00 ; '.'
000000000021fc57         db  0x00 ; '.'
000000000021fc58         db  0x00 ; '.'
000000000021fc59         db  0x00 ; '.'
000000000021fc5a         db  0x00 ; '.'
000000000021fc5b         db  0x00 ; '.'
000000000021fc5c         db  0x00 ; '.'
000000000021fc5d         db  0x00 ; '.'
000000000021fc5e         db  0x00 ; '.'
000000000021fc5f         db  0x00 ; '.'
000000000021fc60         db  0x00 ; '.'
000000000021fc61         db  0x00 ; '.'
000000000021fc62         db  0x00 ; '.'
000000000021fc63         db  0x00 ; '.'
000000000021fc64         db  0x00 ; '.'
000000000021fc65         db  0x00 ; '.'
000000000021fc66         db  0x00 ; '.'
000000000021fc67         db  0x00 ; '.'
000000000021fc68         db  0x00 ; '.'
000000000021fc69         db  0x00 ; '.'
000000000021fc6a         db  0x00 ; '.'
000000000021fc6b         db  0x00 ; '.'
000000000021fc6c         db  0x00 ; '.'
000000000021fc6d         db  0x00 ; '.'
000000000021fc6e         db  0x00 ; '.'
000000000021fc6f         db  0x00 ; '.'
000000000021fc70         db  0x00 ; '.'
000000000021fc71         db  0x00 ; '.'
000000000021fc72         db  0x00 ; '.'
000000000021fc73         db  0x00 ; '.'
000000000021fc74         db  0x00 ; '.'
000000000021fc75         db  0x00 ; '.'
000000000021fc76         db  0x00 ; '.'
000000000021fc77         db  0x00 ; '.'
000000000021fc78         db  0x00 ; '.'
000000000021fc79         db  0x00 ; '.'
000000000021fc7a         db  0x00 ; '.'
000000000021fc7b         db  0x00 ; '.'
000000000021fc7c         db  0x00 ; '.'
000000000021fc7d         db  0x00 ; '.'
000000000021fc7e         db  0x00 ; '.'
000000000021fc7f         db  0x00 ; '.'
000000000021fc80         db  0x00 ; '.'
000000000021fc81         db  0x00 ; '.'
000000000021fc82         db  0x00 ; '.'
000000000021fc83         db  0x00 ; '.'
000000000021fc84         db  0x00 ; '.'
000000000021fc85         db  0x00 ; '.'
000000000021fc86         db  0x00 ; '.'
000000000021fc87         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x21fc88; 0x21fff8[ (880 bytes)
        ; File offset : [130184; 131064[ (880 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
000000000021fc88         db  0x98 ; '.'
000000000021fc89         db  0xfa ; '.'
000000000021fc8a         db  0x21 ; '!'
000000000021fc8b         db  0x00 ; '.'
000000000021fc8c         db  0x00 ; '.'
000000000021fc8d         db  0x00 ; '.'
000000000021fc8e         db  0x00 ; '.'
000000000021fc8f         db  0x00 ; '.'
                     qword_21fc90:
000000000021fc90         dq         0x0000000000000000                          ; DATA XREF=0x3230
000000000021fc98         db  0x00 ; '.'                                         ; DATA XREF=0x3236
000000000021fc99         db  0x00 ; '.'
000000000021fc9a         db  0x00 ; '.'
000000000021fc9b         db  0x00 ; '.'
000000000021fc9c         db  0x00 ; '.'
000000000021fc9d         db  0x00 ; '.'
000000000021fc9e         db  0x00 ; '.'
000000000021fc9f         db  0x00 ; '.'
                     __ctype_toupper_loc@GOT:        // __ctype_toupper_loc
000000000021fca0         dq         0x0000000000221560                          ; DATA XREF=j___ctype_toupper_loc
                     getenv@GOT:        // getenv
000000000021fca8         dq         0x0000000000221568                          ; DATA XREF=j_getenv
                     sigprocmask@GOT:        // sigprocmask
000000000021fcb0         dq         0x0000000000221570                          ; DATA XREF=j_sigprocmask
                     __snprintf_chk@GOT:        // __snprintf_chk
000000000021fcb8         dq         0x0000000000221578                          ; DATA XREF=j___snprintf_chk
                     raise@GOT:        // raise
000000000021fcc0         dq         0x0000000000221580                          ; DATA XREF=j_raise
                     abort@GOT:        // abort
000000000021fcc8         dq         0x0000000000221590                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
000000000021fcd0         dq         0x0000000000221598                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
000000000021fcd8         dq         0x00000000002215a0                          ; DATA XREF=j_strncmp
                     localtime_r@GOT:        // localtime_r
000000000021fce0         dq         0x00000000002215b0                          ; DATA XREF=j_localtime_r
                     _exit@GOT:        // _exit
000000000021fce8         dq         0x00000000002215b8                          ; DATA XREF=j__exit
                     strcpy@GOT:        // strcpy
000000000021fcf0         dq         0x00000000002215c0                          ; DATA XREF=j_strcpy
                     __fpending@GOT:        // __fpending
000000000021fcf8         dq         0x00000000002215c8                          ; DATA XREF=j___fpending
                     isatty@GOT:        // isatty
000000000021fd00         dq         0x00000000002215d0                          ; DATA XREF=j_isatty
                     sigaction@GOT:        // sigaction
000000000021fd08         dq         0x00000000002215d8                          ; DATA XREF=j_sigaction
                     iswcntrl@GOT:        // iswcntrl
000000000021fd10         dq         0x00000000002215e0                          ; DATA XREF=j_iswcntrl
                     wcswidth@GOT:        // wcswidth
000000000021fd18         dq         0x00000000002215e8                          ; DATA XREF=j_wcswidth
                     localeconv@GOT:        // localeconv
000000000021fd20         dq         0x00000000002215f0                          ; DATA XREF=j_localeconv
                     mbstowcs@GOT:        // mbstowcs
000000000021fd28         dq         0x00000000002215f8                          ; DATA XREF=j_mbstowcs
                     readlink@GOT:        // readlink
000000000021fd30         dq         0x0000000000221600                          ; DATA XREF=j_readlink
                     clock_gettime@GOT:        // clock_gettime
000000000021fd38         dq         0x0000000000221608                          ; DATA XREF=j_clock_gettime
                     setenv@GOT:        // setenv
000000000021fd40         dq         0x0000000000221610                          ; DATA XREF=j_setenv
                     textdomain@GOT:        // textdomain
000000000021fd48         dq         0x0000000000221618                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
000000000021fd50         dq         0x0000000000221620                          ; DATA XREF=j_fclose
                     opendir@GOT:        // opendir
000000000021fd58         dq         0x0000000000221628                          ; DATA XREF=j_opendir
                     getpwuid@GOT:        // getpwuid
000000000021fd60         dq         0x0000000000221630                          ; DATA XREF=j_getpwuid
                     bindtextdomain@GOT:        // bindtextdomain
000000000021fd68         dq         0x0000000000221638                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
000000000021fd70         dq         0x0000000000221640                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
000000000021fd78         dq         0x0000000000221648                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
000000000021fd80         dq         0x0000000000221650                          ; DATA XREF=j_strlen
                     __lxstat@GOT:        // __lxstat
000000000021fd88         dq         0x0000000000221658                          ; DATA XREF=j___lxstat
                     __stack_chk_fail@GOT:        // __stack_chk_fail
000000000021fd90         dq         0x0000000000221660                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
000000000021fd98         dq         0x0000000000221668                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
000000000021fda0         dq         0x0000000000221670                          ; DATA XREF=j_mbrtowc
                     strchr@GOT:        // strchr
000000000021fda8         dq         0x0000000000221678                          ; DATA XREF=j_strchr
                     getgrgid@GOT:        // getgrgid
000000000021fdb0         dq         0x0000000000221680                          ; DATA XREF=j_getgrgid
                     __fxstatat@GOT:        // __fxstatat
000000000021fdb8         dq         0x0000000000221688                          ; DATA XREF=j___fxstatat
                     snprintf@GOT:        // snprintf
000000000021fdc0         dq         0x0000000000221690                          ; DATA XREF=j_snprintf
                     __overflow@GOT:        // __overflow
000000000021fdc8         dq         0x0000000000221698                          ; DATA XREF=j___overflow
                     strrchr@GOT:        // strrchr
000000000021fdd0         dq         0x00000000002216a0                          ; DATA XREF=j_strrchr
                     gmtime_r@GOT:        // gmtime_r
000000000021fdd8         dq         0x00000000002216a8                          ; DATA XREF=j_gmtime_r
                     lseek@GOT:        // lseek
000000000021fde0         dq         0x00000000002216b0                          ; DATA XREF=j_lseek
                     __assert_fail@GOT:        // __assert_fail
000000000021fde8         dq         0x00000000002216b8                          ; DATA XREF=j___assert_fail
                     __strtoul_internal@GOT:        // __strtoul_internal
000000000021fdf0         dq         0x00000000002216c0                          ; DATA XREF=j___strtoul_internal
                     fnmatch@GOT:        // fnmatch
000000000021fdf8         dq         0x00000000002216c8                          ; DATA XREF=j_fnmatch
                     memset@GOT:        // memset
000000000021fe00         dq         0x00000000002216d0                          ; DATA XREF=j_memset
                     ioctl@GOT:        // ioctl
000000000021fe08         dq         0x00000000002216d8                          ; DATA XREF=j_ioctl
                     getcwd@GOT:        // getcwd
000000000021fe10         dq         0x00000000002216e0                          ; DATA XREF=j_getcwd
                     strspn@GOT:        // strspn
000000000021fe18         dq         0x00000000002216e8                          ; DATA XREF=j_strspn
                     closedir@GOT:        // closedir
000000000021fe20         dq         0x00000000002216f0                          ; DATA XREF=j_closedir
                     memcmp@GOT:        // memcmp
000000000021fe28         dq         0x0000000000221700                          ; DATA XREF=j_memcmp
                     _setjmp@GOT:        // _setjmp
000000000021fe30         dq         0x0000000000221708                          ; DATA XREF=j__setjmp
                     fputs_unlocked@GOT:        // fputs_unlocked
000000000021fe38         dq         0x0000000000221710                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
000000000021fe40         dq         0x0000000000221718                          ; DATA XREF=j_calloc
                     strcmp@GOT:        // strcmp
000000000021fe48         dq         0x0000000000221720                          ; DATA XREF=j_strcmp
                     signal@GOT:        // signal
000000000021fe50         dq         0x0000000000221728                          ; DATA XREF=j_signal
                     dirfd@GOT:        // dirfd
000000000021fe58         dq         0x0000000000221730                          ; DATA XREF=j_dirfd
                     getpwnam@GOT:        // getpwnam
000000000021fe60         dq         0x0000000000221738                          ; DATA XREF=j_getpwnam
                     __memcpy_chk@GOT:        // __memcpy_chk
000000000021fe68         dq         0x0000000000221740                          ; DATA XREF=j___memcpy_chk
                     sigemptyset@GOT:        // sigemptyset
000000000021fe70         dq         0x0000000000221748                          ; DATA XREF=j_sigemptyset
                     memcpy@GOT:        // memcpy
000000000021fe78         dq         0x0000000000221758                          ; DATA XREF=j_memcpy
                     getgrnam@GOT:        // getgrnam
000000000021fe80         dq         0x0000000000221760                          ; DATA XREF=j_getgrnam
                     tzset@GOT:        // tzset
000000000021fe88         dq         0x0000000000221768                          ; DATA XREF=j_tzset
                     fileno@GOT:        // fileno
000000000021fe90         dq         0x0000000000221770                          ; DATA XREF=j_fileno
                     tcgetpgrp@GOT:        // tcgetpgrp
000000000021fe98         dq         0x0000000000221778                          ; DATA XREF=j_tcgetpgrp
                     __xstat@GOT:        // __xstat
000000000021fea0         dq         0x0000000000221780                          ; DATA XREF=j___xstat
                     readdir@GOT:        // readdir
000000000021fea8         dq         0x0000000000221788                          ; DATA XREF=j_readdir
                     wcwidth@GOT:        // wcwidth
000000000021feb0         dq         0x0000000000221790                          ; DATA XREF=j_wcwidth
                     fflush@GOT:        // fflush
000000000021feb8         dq         0x00000000002217a0                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
000000000021fec0         dq         0x00000000002217a8                          ; DATA XREF=j_nl_langinfo
                     __fxstat@GOT:        // __fxstat
000000000021fec8         dq         0x00000000002217b0                          ; DATA XREF=j___fxstat
                     strcoll@GOT:        // strcoll
000000000021fed0         dq         0x00000000002217b8                          ; DATA XREF=j_strcoll
                     mktime@GOT:        // mktime
000000000021fed8         dq         0x00000000002217c0                          ; DATA XREF=j_mktime
                     __freading@GOT:        // __freading
000000000021fee0         dq         0x00000000002217c8                          ; DATA XREF=j___freading
                     fwrite_unlocked@GOT:        // fwrite_unlocked
000000000021fee8         dq         0x00000000002217d0                          ; DATA XREF=j_fwrite_unlocked
                     realloc@GOT:        // realloc
000000000021fef0         dq         0x00000000002217d8                          ; DATA XREF=j_realloc
                     stpncpy@GOT:        // stpncpy
000000000021fef8         dq         0x00000000002217e0                          ; DATA XREF=j_stpncpy
                     setlocale@GOT:        // setlocale
000000000021ff00         dq         0x00000000002217e8                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
000000000021ff08         dq         0x00000000002217f0                          ; DATA XREF=j___printf_chk
                     timegm@GOT:        // timegm
000000000021ff10         dq         0x00000000002217f8                          ; DATA XREF=j_timegm
                     strftime@GOT:        // strftime
000000000021ff18         dq         0x0000000000221800                          ; DATA XREF=j_strftime
                     mempcpy@GOT:        // mempcpy
000000000021ff20         dq         0x0000000000221808                          ; DATA XREF=j_mempcpy
                     memmove@GOT:        // memmove
000000000021ff28         dq         0x0000000000221810                          ; DATA XREF=j_memmove
                     error@GOT:        // error
000000000021ff30         dq         0x0000000000221818                          ; DATA XREF=j_error
                     fseeko@GOT:        // fseeko
000000000021ff38         dq         0x0000000000221820                          ; DATA XREF=j_fseeko
                     unsetenv@GOT:        // unsetenv
000000000021ff40         dq         0x0000000000221828                          ; DATA XREF=j_unsetenv
                     strtoul@GOT:        // strtoul
000000000021ff48         dq         0x0000000000221830                          ; DATA XREF=j_strtoul
                     __cxa_atexit@GOT:        // __cxa_atexit
000000000021ff50         dq         0x0000000000221838                          ; DATA XREF=j___cxa_atexit
                     wcstombs@GOT:        // wcstombs
000000000021ff58         dq         0x0000000000221840                          ; DATA XREF=j_wcstombs
                     gethostname@GOT:        // gethostname
000000000021ff60         dq         0x0000000000221848                          ; DATA XREF=j_gethostname
                     sigismember@GOT:        // sigismember
000000000021ff68         dq         0x0000000000221850                          ; DATA XREF=j_sigismember
                     exit@GOT:        // exit
000000000021ff70         dq         0x0000000000221858                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
000000000021ff78         dq         0x0000000000221860                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
000000000021ff80         dq         0x0000000000221868                          ; DATA XREF=j___fprintf_chk
                     fflush_unlocked@GOT:        // fflush_unlocked
000000000021ff88         dq         0x0000000000221878                          ; DATA XREF=j_fflush_unlocked
                     mbsinit@GOT:        // mbsinit
000000000021ff90         dq         0x0000000000221880                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
000000000021ff98         dq         0x0000000000221888                          ; DATA XREF=j_iswprint
                     sigaddset@GOT:        // sigaddset
000000000021ffa0         dq         0x0000000000221898                          ; DATA XREF=j_sigaddset
                     __ctype_tolower_loc@GOT:        // __ctype_tolower_loc
000000000021ffa8         dq         0x00000000002218a0                          ; DATA XREF=j___ctype_tolower_loc
                     __ctype_b_loc@GOT:        // __ctype_b_loc
000000000021ffb0         dq         0x00000000002218a8                          ; DATA XREF=j___ctype_b_loc
                     __sprintf_chk@GOT:        // __sprintf_chk
000000000021ffb8         dq         0x00000000002218b0                          ; DATA XREF=j___sprintf_chk
                     qword_21ffc0:
000000000021ffc0         dq         0x0000000000000000                          ; DATA XREF=sub_3880, main+3085, main+4404
                     qword_21ffc8:
000000000021ffc8         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
000000000021ffd0         db  0x00 ; '.'                                         ; DATA XREF=_start+36
000000000021ffd1         db  0x00 ; '.'
000000000021ffd2         db  0x00 ; '.'
000000000021ffd3         db  0x00 ; '.'
000000000021ffd4         db  0x00 ; '.'
000000000021ffd5         db  0x00 ; '.'
000000000021ffd6         db  0x00 ; '.'
000000000021ffd7         db  0x00 ; '.'
                     qword_21ffd8:
000000000021ffd8         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_21ffe0:
000000000021ffe0         dq         0x0000000000000000                          ; DATA XREF=sub_3888, main+3092, main+4411
                     qword_21ffe8:
000000000021ffe8         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_21fff0:
000000000021fff0         dq         0x0000000000000000                          ; DATA XREF=j_qword_21fff0, __do_global_dtors_aux+9
000000000021fff8         db  0x00 ; '.'
000000000021fff9         db  0x00 ; '.'
000000000021fffa         db  0x00 ; '.'
000000000021fffb         db  0x00 ; '.'
000000000021fffc         db  0x00 ; '.'
000000000021fffd         db  0x00 ; '.'
000000000021fffe         db  0x00 ; '.'
000000000021ffff         db  0x00 ; '.'


        ; Section .data
        ; Range: [0x220000; 0x220268[ (616 bytes)
        ; File offset : [131072; 131688[ (616 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

0000000000220000         db  0x00 ; '.'
0000000000220001         db  0x00 ; '.'
0000000000220002         db  0x00 ; '.'
0000000000220003         db  0x00 ; '.'
0000000000220004         db  0x00 ; '.'
0000000000220005         db  0x00 ; '.'
0000000000220006         db  0x00 ; '.'
0000000000220007         db  0x00 ; '.'
                     __dso_handle:
0000000000220008         dq         0x0000000000220008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     first.10256:
0000000000220010         db         0x01                                        ; DATA XREF=print_dir+656, print_dir+712
0000000000220011         align      4
                     width.10774:
0000000000220014         dd         0xffffffff                                  ; DATA XREF=print_long_format+810, print_long_format+2382, print_long_format+2398, print_long_format+2507
                     file_output_block_size:
0000000000220018         dq         0x0000000000000001                          ; DATA XREF=main+752, main+1634, main+2227, main+4236, print_long_format+660, gobble_file.constprop.52+2100
                     print_group:
0000000000220020         db         0x01                                        ; DATA XREF=main+1180, main+2320, print_long_format+519, print_long_format+582, gobble_file.constprop.52+658
                     print_owner:
0000000000220021         db         0x01                                        ; DATA XREF=main+778, print_long_format+510, print_long_format+569, gobble_file.constprop.52+645
                     UNKNOWN_SECURITY_CONTEXT:
0000000000220022         db  0x3f ; '?'                                         ; DATA XREF=gobble_file.constprop.52+475
0000000000220023         db  0x00 ; '.'
0000000000220024         db  0x00 ; '.'
0000000000220025         db  0x00 ; '.'
0000000000220026         db  0x00 ; '.'
0000000000220027         db  0x00 ; '.'
0000000000220028         db  0x00 ; '.'
0000000000220029         db  0x00 ; '.'
000000000022002a         db  0x00 ; '.'
000000000022002b         db  0x00 ; '.'
000000000022002c         db  0x00 ; '.'
000000000022002d         db  0x00 ; '.'
000000000022002e         db  0x00 ; '.'
000000000022002f         db  0x00 ; '.'
0000000000220030         db  0x00 ; '.'
0000000000220031         db  0x00 ; '.'
0000000000220032         db  0x00 ; '.'
0000000000220033         db  0x00 ; '.'
0000000000220034         db  0x00 ; '.'
0000000000220035         db  0x00 ; '.'
0000000000220036         db  0x00 ; '.'
0000000000220037         db  0x00 ; '.'
0000000000220038         db  0x00 ; '.'
0000000000220039         db  0x00 ; '.'
000000000022003a         db  0x00 ; '.'
000000000022003b         db  0x00 ; '.'
000000000022003c         db  0x00 ; '.'
000000000022003d         db  0x00 ; '.'
000000000022003e         db  0x00 ; '.'
000000000022003f         db  0x00 ; '.'
                     long_time_format:
0000000000220040         dq         0x0000000000017dad                          ; "%b %e  %Y", DATA XREF=main+5149, main+5182, main+5445, main+5901, main+6326, main+6366, abformat_init+48, abformat_init+423, print_long_format+2272, print_long_format+2341
                     qword_220048:
0000000000220048         dq         0x0000000000017db7                          ; "%b %e %H:%M", DATA XREF=main+5168, main+5194, main+5452, main+5894, main+6340, main+6359
0000000000220050         align      32
                     color_indicator:
0000000000220060         dq         0x0000000000000002                          ; DATA XREF=main+3868, main+3896, main+6239, is_colored, prep_non_filename_text+24, process_signals+150, set_normal_color+40, quote_name+138, quote_name+824, print_name_with_quoting+263
                     qword_220068:
0000000000220068         dq         0x0000000000017dc3                          ; DATA XREF=main+3878
                     qword_220070:
0000000000220070         dq         0x0000000000000001                          ; DATA XREF=main+3908, main+5843, prep_non_filename_text+52, process_signals+162, set_normal_color+64, quote_name+158, quote_name+836
                     qword_220078:
0000000000220078         dq         0x00000000000179bd                          ; DATA XREF=main+5857
0000000000220080         db  0x00 ; '.'                                         ; DATA XREF=prep_non_filename_text+10
0000000000220081         db  0x00 ; '.'
0000000000220082         db  0x00 ; '.'
0000000000220083         db  0x00 ; '.'
0000000000220084         db  0x00 ; '.'
0000000000220085         db  0x00 ; '.'
0000000000220086         db  0x00 ; '.'
0000000000220087         db  0x00 ; '.'
                     qword_220088:
0000000000220088         dq         0x0000000000000000                          ; DATA XREF=prep_non_filename_text
0000000000220090         db  0x01 ; '.'                                         ; DATA XREF=prep_non_filename_text+40
0000000000220091         db  0x00 ; '.'
0000000000220092         db  0x00 ; '.'
0000000000220093         db  0x00 ; '.'
0000000000220094         db  0x00 ; '.'
0000000000220095         db  0x00 ; '.'
0000000000220096         db  0x00 ; '.'
0000000000220097         db  0x00 ; '.'
0000000000220098         db  0x45 ; 'E'
0000000000220099         db  0x78 ; 'x'
000000000022009a         db  0x01 ; '.'
000000000022009b         db  0x00 ; '.'
000000000022009c         db  0x00 ; '.'
000000000022009d         db  0x00 ; '.'
000000000022009e         db  0x00 ; '.'
000000000022009f         db  0x00 ; '.'
00000000002200a0         db  0x00 ; '.'                                         ; DATA XREF=set_normal_color+52
00000000002200a1         db  0x00 ; '.'
00000000002200a2         db  0x00 ; '.'
00000000002200a3         db  0x00 ; '.'
00000000002200a4         db  0x00 ; '.'
00000000002200a5         db  0x00 ; '.'
00000000002200a6         db  0x00 ; '.'
00000000002200a7         db  0x00 ; '.'
00000000002200a8         db  0x00 ; '.'
00000000002200a9         db  0x00 ; '.'
00000000002200aa         db  0x00 ; '.'
00000000002200ab         db  0x00 ; '.'
00000000002200ac         db  0x00 ; '.'
00000000002200ad         db  0x00 ; '.'
00000000002200ae         db  0x00 ; '.'
00000000002200af         db  0x00 ; '.'
00000000002200b0         db  0x00 ; '.'
00000000002200b1         db  0x00 ; '.'
00000000002200b2         db  0x00 ; '.'
00000000002200b3         db  0x00 ; '.'
00000000002200b4         db  0x00 ; '.'
00000000002200b5         db  0x00 ; '.'
00000000002200b6         db  0x00 ; '.'
00000000002200b7         db  0x00 ; '.'
00000000002200b8         db  0x00 ; '.'
00000000002200b9         db  0x00 ; '.'
00000000002200ba         db  0x00 ; '.'
00000000002200bb         db  0x00 ; '.'
00000000002200bc         db  0x00 ; '.'
00000000002200bd         db  0x00 ; '.'
00000000002200be         db  0x00 ; '.'
00000000002200bf         db  0x00 ; '.'
00000000002200c0         db  0x05 ; '.'
00000000002200c1         db  0x00 ; '.'
00000000002200c2         db  0x00 ; '.'
00000000002200c3         db  0x00 ; '.'
00000000002200c4         db  0x00 ; '.'
00000000002200c5         db  0x00 ; '.'
00000000002200c6         db  0x00 ; '.'
00000000002200c7         db  0x00 ; '.'
00000000002200c8         db  0xc6 ; '.'
00000000002200c9         db  0x7d ; '}'
00000000002200ca         db  0x01 ; '.'
00000000002200cb         db  0x00 ; '.'
00000000002200cc         db  0x00 ; '.'
00000000002200cd         db  0x00 ; '.'
00000000002200ce         db  0x00 ; '.'
00000000002200cf         db  0x00 ; '.'
                     qword_2200d0:
00000000002200d0         dq         0x0000000000000005                          ; DATA XREF=main+5785
                     qword_2200d8:
00000000002200d8         dq         0x0000000000017dcc                          ; "01;36", DATA XREF=main+5799
00000000002200e0         db  0x02 ; '.'
00000000002200e1         db  0x00 ; '.'
00000000002200e2         db  0x00 ; '.'
00000000002200e3         db  0x00 ; '.'
00000000002200e4         db  0x00 ; '.'
00000000002200e5         db  0x00 ; '.'
00000000002200e6         db  0x00 ; '.'
00000000002200e7         db  0x00 ; '.'
00000000002200e8         db  0xdb ; '.'
00000000002200e9         db  0x7d ; '}'
00000000002200ea         db  0x01 ; '.'
00000000002200eb         db  0x00 ; '.'
00000000002200ec         db  0x00 ; '.'
00000000002200ed         db  0x00 ; '.'
00000000002200ee         db  0x00 ; '.'
00000000002200ef         db  0x00 ; '.'
00000000002200f0         db  0x05 ; '.'
00000000002200f1         db  0x00 ; '.'
00000000002200f2         db  0x00 ; '.'
00000000002200f3         db  0x00 ; '.'
00000000002200f4         db  0x00 ; '.'
00000000002200f5         db  0x00 ; '.'
00000000002200f6         db  0x00 ; '.'
00000000002200f7         db  0x00 ; '.'
00000000002200f8         db  0xd2 ; '.'
00000000002200f9         db  0x7d ; '}'
00000000002200fa         db  0x01 ; '.'
00000000002200fb         db  0x00 ; '.'
00000000002200fc         db  0x00 ; '.'
00000000002200fd         db  0x00 ; '.'
00000000002200fe         db  0x00 ; '.'
00000000002200ff         db  0x00 ; '.'
0000000000220100         db  0x05 ; '.'
0000000000220101         db  0x00 ; '.'
0000000000220102         db  0x00 ; '.'
0000000000220103         db  0x00 ; '.'
0000000000220104         db  0x00 ; '.'
0000000000220105         db  0x00 ; '.'
0000000000220106         db  0x00 ; '.'
0000000000220107         db  0x00 ; '.'
0000000000220108         db  0xd8 ; '.'
0000000000220109         db  0x7d ; '}'
000000000022010a         db  0x01 ; '.'
000000000022010b         db  0x00 ; '.'
000000000022010c         db  0x00 ; '.'
000000000022010d         db  0x00 ; '.'
000000000022010e         db  0x00 ; '.'
000000000022010f         db  0x00 ; '.'
0000000000220110         db  0x05 ; '.'
0000000000220111         db  0x00 ; '.'
0000000000220112         db  0x00 ; '.'
0000000000220113         db  0x00 ; '.'
0000000000220114         db  0x00 ; '.'
0000000000220115         db  0x00 ; '.'
0000000000220116         db  0x00 ; '.'
0000000000220117         db  0x00 ; '.'
0000000000220118         db  0xd8 ; '.'
0000000000220119         db  0x7d ; '}'
000000000022011a         db  0x01 ; '.'
000000000022011b         db  0x00 ; '.'
000000000022011c         db  0x00 ; '.'
000000000022011d         db  0x00 ; '.'
000000000022011e         db  0x00 ; '.'
000000000022011f         db  0x00 ; '.'
0000000000220120         db  0x00 ; '.'
0000000000220121         db  0x00 ; '.'
0000000000220122         db  0x00 ; '.'
0000000000220123         db  0x00 ; '.'
0000000000220124         db  0x00 ; '.'
0000000000220125         db  0x00 ; '.'
0000000000220126         db  0x00 ; '.'
0000000000220127         db  0x00 ; '.'
0000000000220128         db  0x00 ; '.'
0000000000220129         db  0x00 ; '.'
000000000022012a         db  0x00 ; '.'
000000000022012b         db  0x00 ; '.'
000000000022012c         db  0x00 ; '.'
000000000022012d         db  0x00 ; '.'
000000000022012e         db  0x00 ; '.'
000000000022012f         db  0x00 ; '.'
0000000000220130         db  0x00 ; '.'
0000000000220131         db  0x00 ; '.'
0000000000220132         db  0x00 ; '.'
0000000000220133         db  0x00 ; '.'
0000000000220134         db  0x00 ; '.'
0000000000220135         db  0x00 ; '.'
0000000000220136         db  0x00 ; '.'
0000000000220137         db  0x00 ; '.'
0000000000220138         db  0x00 ; '.'
0000000000220139         db  0x00 ; '.'
000000000022013a         db  0x00 ; '.'
000000000022013b         db  0x00 ; '.'
000000000022013c         db  0x00 ; '.'
000000000022013d         db  0x00 ; '.'
000000000022013e         db  0x00 ; '.'
000000000022013f         db  0x00 ; '.'
0000000000220140         db  0x05 ; '.'
0000000000220141         db  0x00 ; '.'
0000000000220142         db  0x00 ; '.'
0000000000220143         db  0x00 ; '.'
0000000000220144         db  0x00 ; '.'
0000000000220145         db  0x00 ; '.'
0000000000220146         db  0x00 ; '.'
0000000000220147         db  0x00 ; '.'
0000000000220148         db  0xde ; '.'
0000000000220149         db  0x7d ; '}'
000000000022014a         db  0x01 ; '.'
000000000022014b         db  0x00 ; '.'
000000000022014c         db  0x00 ; '.'
000000000022014d         db  0x00 ; '.'
000000000022014e         db  0x00 ; '.'
000000000022014f         db  0x00 ; '.'
0000000000220150         db  0x05 ; '.'
0000000000220151         db  0x00 ; '.'
0000000000220152         db  0x00 ; '.'
0000000000220153         db  0x00 ; '.'
0000000000220154         db  0x00 ; '.'
0000000000220155         db  0x00 ; '.'
0000000000220156         db  0x00 ; '.'
0000000000220157         db  0x00 ; '.'
0000000000220158         db  0xd2 ; '.'
0000000000220159         db  0x7d ; '}'
000000000022015a         db  0x01 ; '.'
000000000022015b         db  0x00 ; '.'
000000000022015c         db  0x00 ; '.'
000000000022015d         db  0x00 ; '.'
000000000022015e         db  0x00 ; '.'
000000000022015f         db  0x00 ; '.'
0000000000220160         db  0x05 ; '.'
0000000000220161         db  0x00 ; '.'
0000000000220162         db  0x00 ; '.'
0000000000220163         db  0x00 ; '.'
0000000000220164         db  0x00 ; '.'
0000000000220165         db  0x00 ; '.'
0000000000220166         db  0x00 ; '.'
0000000000220167         db  0x00 ; '.'
0000000000220168         db  0xe4 ; '.'
0000000000220169         db  0x7d ; '}'
000000000022016a         db  0x01 ; '.'
000000000022016b         db  0x00 ; '.'
000000000022016c         db  0x00 ; '.'
000000000022016d         db  0x00 ; '.'
000000000022016e         db  0x00 ; '.'
000000000022016f         db  0x00 ; '.'
0000000000220170         db  0x05 ; '.'
0000000000220171         db  0x00 ; '.'
0000000000220172         db  0x00 ; '.'
0000000000220173         db  0x00 ; '.'
0000000000220174         db  0x00 ; '.'
0000000000220175         db  0x00 ; '.'
0000000000220176         db  0x00 ; '.'
0000000000220177         db  0x00 ; '.'
0000000000220178         db  0xea ; '.'
0000000000220179         db  0x7d ; '}'
000000000022017a         db  0x01 ; '.'
000000000022017b         db  0x00 ; '.'
000000000022017c         db  0x00 ; '.'
000000000022017d         db  0x00 ; '.'
000000000022017e         db  0x00 ; '.'
000000000022017f         db  0x00 ; '.'
0000000000220180         db  0x05 ; '.'
0000000000220181         db  0x00 ; '.'
0000000000220182         db  0x00 ; '.'
0000000000220183         db  0x00 ; '.'
0000000000220184         db  0x00 ; '.'
0000000000220185         db  0x00 ; '.'
0000000000220186         db  0x00 ; '.'
0000000000220187         db  0x00 ; '.'
0000000000220188         db  0xf0 ; '.'
0000000000220189         db  0x7d ; '}'
000000000022018a         db  0x01 ; '.'
000000000022018b         db  0x00 ; '.'
000000000022018c         db  0x00 ; '.'
000000000022018d         db  0x00 ; '.'
000000000022018e         db  0x00 ; '.'
000000000022018f         db  0x00 ; '.'
0000000000220190         db  0x05 ; '.'
0000000000220191         db  0x00 ; '.'
0000000000220192         db  0x00 ; '.'
0000000000220193         db  0x00 ; '.'
0000000000220194         db  0x00 ; '.'
0000000000220195         db  0x00 ; '.'
0000000000220196         db  0x00 ; '.'
0000000000220197         db  0x00 ; '.'
0000000000220198         db  0xf6 ; '.'
0000000000220199         db  0x7d ; '}'
000000000022019a         db  0x01 ; '.'
000000000022019b         db  0x00 ; '.'
000000000022019c         db  0x00 ; '.'
000000000022019d         db  0x00 ; '.'
000000000022019e         db  0x00 ; '.'
000000000022019f         db  0x00 ; '.'
00000000002201a0         db  0x05 ; '.'
00000000002201a1         db  0x00 ; '.'
00000000002201a2         db  0x00 ; '.'
00000000002201a3         db  0x00 ; '.'
00000000002201a4         db  0x00 ; '.'
00000000002201a5         db  0x00 ; '.'
00000000002201a6         db  0x00 ; '.'
00000000002201a7         db  0x00 ; '.'
00000000002201a8         db  0xfc ; '.'
00000000002201a9         db  0x7d ; '}'
00000000002201aa         db  0x01 ; '.'
00000000002201ab         db  0x00 ; '.'
00000000002201ac         db  0x00 ; '.'
00000000002201ad         db  0x00 ; '.'
00000000002201ae         db  0x00 ; '.'
00000000002201af         db  0x00 ; '.'
00000000002201b0         db  0x05 ; '.'
00000000002201b1         db  0x00 ; '.'
00000000002201b2         db  0x00 ; '.'
00000000002201b3         db  0x00 ; '.'
00000000002201b4         db  0x00 ; '.'
00000000002201b5         db  0x00 ; '.'
00000000002201b6         db  0x00 ; '.'
00000000002201b7         db  0x00 ; '.'
00000000002201b8         db  0x02 ; '.'
00000000002201b9         db  0x7e ; '~'
00000000002201ba         db  0x01 ; '.'
00000000002201bb         db  0x00 ; '.'
00000000002201bc         db  0x00 ; '.'
00000000002201bd         db  0x00 ; '.'
00000000002201be         db  0x00 ; '.'
00000000002201bf         db  0x00 ; '.'
00000000002201c0         db  0x00 ; '.'
00000000002201c1         db  0x00 ; '.'
00000000002201c2         db  0x00 ; '.'
00000000002201c3         db  0x00 ; '.'
00000000002201c4         db  0x00 ; '.'
00000000002201c5         db  0x00 ; '.'
00000000002201c6         db  0x00 ; '.'
00000000002201c7         db  0x00 ; '.'
00000000002201c8         db  0x00 ; '.'
00000000002201c9         db  0x00 ; '.'
00000000002201ca         db  0x00 ; '.'
00000000002201cb         db  0x00 ; '.'
00000000002201cc         db  0x00 ; '.'
00000000002201cd         db  0x00 ; '.'
00000000002201ce         db  0x00 ; '.'
00000000002201cf         db  0x00 ; '.'
00000000002201d0         db  0x03 ; '.'                                         ; DATA XREF=print_name_with_quoting+402
00000000002201d1         db  0x00 ; '.'
00000000002201d2         db  0x00 ; '.'
00000000002201d3         db  0x00 ; '.'
00000000002201d4         db  0x00 ; '.'
00000000002201d5         db  0x00 ; '.'
00000000002201d6         db  0x00 ; '.'
00000000002201d7         db  0x00 ; '.'
00000000002201d8         db  0x08 ; '.'
00000000002201d9         db  0x7e ; '~'
00000000002201da         db  0x01 ; '.'
00000000002201db         db  0x00 ; '.'
00000000002201dc         db  0x00 ; '.'
00000000002201dd         db  0x00 ; '.'
00000000002201de         db  0x00 ; '.'
00000000002201df         db  0x00 ; '.'
                     ls_mode:
00000000002201e0         dd         0x00000002                                  ; DATA XREF=main+147, main+1358, usage+1244
00000000002201e4         align      8
                     Version:
00000000002201e8         dq         0x0000000000019f30                          ; "8.31", DATA XREF=main+1364
                     argmatch_die:
00000000002201f0         dq         0x000000000000c140                          ; DATA XREF=main+1464, main+1531, main+1662, main+1730, main+1813, main+1982, main+2095
                     exit_failure:
00000000002201f8         dd         0x00000001                                  ; DATA XREF=main+98, close_stdout+130, xalloc_die+23, xstrtol_fatal+35, print_and_abort+52
00000000002201fc         db  0x00 ; '.'
00000000002201fd         db  0x00 ; '.'
00000000002201fe         db  0x00 ; '.'
00000000002201ff         db  0x00 ; '.'
                     quote_quoting_options:
0000000000220200         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
0000000000220201         db  0x00 ; '.'
0000000000220202         db  0x00 ; '.'
0000000000220203         db  0x00 ; '.'
0000000000220204         db  0x00 ; '.'
0000000000220205         db  0x00 ; '.'
0000000000220206         db  0x00 ; '.'
0000000000220207         db  0x00 ; '.'
0000000000220208         db  0x00 ; '.'
0000000000220209         db  0x00 ; '.'
000000000022020a         db  0x00 ; '.'
000000000022020b         db  0x00 ; '.'
000000000022020c         db  0x00 ; '.'
000000000022020d         db  0x00 ; '.'
000000000022020e         db  0x00 ; '.'
000000000022020f         db  0x00 ; '.'
0000000000220210         db  0x00 ; '.'
0000000000220211         db  0x00 ; '.'
0000000000220212         db  0x00 ; '.'
0000000000220213         db  0x00 ; '.'
0000000000220214         db  0x00 ; '.'
0000000000220215         db  0x00 ; '.'
0000000000220216         db  0x00 ; '.'
0000000000220217         db  0x00 ; '.'
0000000000220218         db  0x00 ; '.'
0000000000220219         db  0x00 ; '.'
000000000022021a         db  0x00 ; '.'
000000000022021b         db  0x00 ; '.'
000000000022021c         db  0x00 ; '.'
000000000022021d         db  0x00 ; '.'
000000000022021e         db  0x00 ; '.'
000000000022021f         db  0x00 ; '.'
0000000000220220         db  0x00 ; '.'
0000000000220221         db  0x00 ; '.'
0000000000220222         db  0x00 ; '.'
0000000000220223         db  0x00 ; '.'
0000000000220224         db  0x00 ; '.'
0000000000220225         db  0x00 ; '.'
0000000000220226         db  0x00 ; '.'
0000000000220227         db  0x00 ; '.'
0000000000220228         db  0x00 ; '.'
0000000000220229         db  0x00 ; '.'
000000000022022a         db  0x00 ; '.'
000000000022022b         db  0x00 ; '.'
000000000022022c         db  0x00 ; '.'
000000000022022d         db  0x00 ; '.'
000000000022022e         db  0x00 ; '.'
000000000022022f         db  0x00 ; '.'
0000000000220230         db  0x00 ; '.'
0000000000220231         db  0x00 ; '.'
0000000000220232         db  0x00 ; '.'
0000000000220233         db  0x00 ; '.'
0000000000220234         db  0x00 ; '.'
0000000000220235         db  0x00 ; '.'
0000000000220236         db  0x00 ; '.'
0000000000220237         db  0x00 ; '.'
                     nslots:
0000000000220238         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000022023c         align      64
                     slotvec:
0000000000220240         dq         0x0000000000220250                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
0000000000220248         db  0x00 ; '.'
0000000000220249         db  0x00 ; '.'
000000000022024a         db  0x00 ; '.'
000000000022024b         db  0x00 ; '.'
000000000022024c         db  0x00 ; '.'
000000000022024d         db  0x00 ; '.'
000000000022024e         db  0x00 ; '.'
000000000022024f         db  0x00 ; '.'
                     slotvec0:
0000000000220250         dq         1.26481e-321, 1.10343e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec
                     obstack_alloc_failed_handler:
0000000000220260         db  0xe0 ; '.'                                         ; DATA XREF=_obstack_begin_worker+125, _obstack_newchunk+229
0000000000220261         db  0x53 ; 'S'
0000000000220262         db  0x01 ; '.'
0000000000220263         db  0x00 ; '.'
0000000000220264         db  0x00 ; '.'
0000000000220265         db  0x00 ; '.'
0000000000220266         db  0x00 ; '.'
0000000000220267         db  0x00 ; '.'
                     __TMC_END__:
0000000000220268         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7
0000000000220269         db  0x00 ; '.'
000000000022026a         db  0x00 ; '.'
000000000022026b         db  0x00 ; '.'
000000000022026c         db  0x00 ; '.'
000000000022026d         db  0x00 ; '.'
000000000022026e         db  0x00 ; '.'
000000000022026f         db  0x00 ; '.'
0000000000220270         db  0x00 ; '.'
0000000000220271         db  0x00 ; '.'
0000000000220272         db  0x00 ; '.'
0000000000220273         db  0x00 ; '.'
0000000000220274         db  0x00 ; '.'
0000000000220275         db  0x00 ; '.'
0000000000220276         db  0x00 ; '.'
0000000000220277         db  0x00 ; '.'
0000000000220278         db  0x00 ; '.'
0000000000220279         db  0x00 ; '.'
000000000022027a         db  0x00 ; '.'
000000000022027b         db  0x00 ; '.'
000000000022027c         db  0x00 ; '.'
000000000022027d         db  0x00 ; '.'
000000000022027e         db  0x00 ; '.'
000000000022027f         db  0x00 ; '.'


        ; Section .bss
        ; Range: [0x220280; 0x221558[ (4824 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
0000000000220280         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+102
0000000000220281         db  0x00 ; '.'
0000000000220282         db  0x00 ; '.'
0000000000220283         db  0x00 ; '.'
0000000000220284         db  0x00 ; '.'
0000000000220285         db  0x00 ; '.'
0000000000220286         db  0x00 ; '.'
0000000000220287         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
0000000000220288         db  0x00 ; '.'                                         ; DATA XREF=main+1408, main+3920, main+4518, indent+93, dired_dump_obstack+98, dired_dump_obstack+139, format_user_or_group+27, format_user_or_group+72, print_type_indicator+16, put_indicator+26, process_signals+40
0000000000220289         db  0x00 ; '.'
000000000022028a         db  0x00 ; '.'
000000000022028b         db  0x00 ; '.'
000000000022028c         db  0x00 ; '.'
000000000022028d         db  0x00 ; '.'
000000000022028e         db  0x00 ; '.'
000000000022028f         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
0000000000220290         db  0x00 ; '.'                                         ; DATA XREF=main+2985
0000000000220291         db  0x00 ; '.'
0000000000220292         db  0x00 ; '.'
0000000000220293         db  0x00 ; '.'
0000000000220294         db  0x00 ; '.'
0000000000220295         db  0x00 ; '.'
0000000000220296         db  0x00 ; '.'
0000000000220297         db  0x00 ; '.'
                     optarg@@GLIBC_2.2.5:
0000000000220298         db  0x00 ; '.'                                         ; DATA XREF=main+988, main+1112, main+1452, main+1471, main+1538, main+1669, main+1737, main+1797, main+1915, main+1989, main+2079
0000000000220299         db  0x00 ; '.'
000000000022029a         db  0x00 ; '.'
000000000022029b         db  0x00 ; '.'
000000000022029c         db  0x00 ; '.'
000000000022029d         db  0x00 ; '.'
000000000022029e         db  0x00 ; '.'
000000000022029f         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
00000000002202a0         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
00000000002202a1         db  0x00 ; '.'
00000000002202a2         db  0x00 ; '.'
00000000002202a3         db  0x00 ; '.'
00000000002202a4         db  0x00 ; '.'
00000000002202a5         db  0x00 ; '.'
00000000002202a6         db  0x00 ; '.'
00000000002202a7         db  0x00 ; '.'
00000000002202a8         db  0x00 ; '.'
00000000002202a9         db  0x00 ; '.'
00000000002202aa         db  0x00 ; '.'
00000000002202ab         db  0x00 ; '.'
00000000002202ac         db  0x00 ; '.'
00000000002202ad         db  0x00 ; '.'
00000000002202ae         db  0x00 ; '.'
00000000002202af         db  0x00 ; '.'
00000000002202b0         db  0x00 ; '.'
00000000002202b1         db  0x00 ; '.'
00000000002202b2         db  0x00 ; '.'
00000000002202b3         db  0x00 ; '.'
00000000002202b4         db  0x00 ; '.'
00000000002202b5         db  0x00 ; '.'
00000000002202b6         db  0x00 ; '.'
00000000002202b7         db  0x00 ; '.'
00000000002202b8         db  0x00 ; '.'
00000000002202b9         db  0x00 ; '.'
00000000002202ba         db  0x00 ; '.'
00000000002202bb         db  0x00 ; '.'
00000000002202bc         db  0x00 ; '.'
00000000002202bd         db  0x00 ; '.'
00000000002202be         db  0x00 ; '.'
00000000002202bf         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
00000000002202c0         db  0x00 ; '.'                                         ; DATA XREF=main+6045, main+6096, main+6130, usage+62, argmatch_valid+37, argmatch_valid+95, argmatch_valid+174, argmatch_valid+216, close_stdout+44, set_program_name+125, print_and_abort+23
00000000002202c1         db  0x00 ; '.'
00000000002202c2         db  0x00 ; '.'
00000000002202c3         db  0x00 ; '.'
00000000002202c4         db  0x00 ; '.'
00000000002202c5         db  0x00 ; '.'
00000000002202c6         db  0x00 ; '.'
00000000002202c7         db  0x00 ; '.'
                     completed.7697:
00000000002202c8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
00000000002202c9         db  0x00 ; '.'
00000000002202ca         db  0x00 ; '.'
00000000002202cb         db  0x00 ; '.'
00000000002202cc         db  0x00 ; '.'
00000000002202cd         db  0x00 ; '.'
00000000002202ce         db  0x00 ; '.'
00000000002202cf         db  0x00 ; '.'
00000000002202d0         db  0x00 ; '.'
00000000002202d1         db  0x00 ; '.'
00000000002202d2         db  0x00 ; '.'
00000000002202d3         db  0x00 ; '.'
00000000002202d4         db  0x00 ; '.'
00000000002202d5         db  0x00 ; '.'
00000000002202d6         db  0x00 ; '.'
00000000002202d7         db  0x00 ; '.'
00000000002202d8         db  0x00 ; '.'
00000000002202d9         db  0x00 ; '.'
00000000002202da         db  0x00 ; '.'
00000000002202db         db  0x00 ; '.'
00000000002202dc         db  0x00 ; '.'
00000000002202dd         db  0x00 ; '.'
00000000002202de         db  0x00 ; '.'
00000000002202df         db  0x00 ; '.'
                     column_info_alloc.11173:
00000000002202e0         db  0x00 ; '.'                                         ; DATA XREF=calculate_columns+35, calculate_columns+134, calculate_columns+249, calculate_columns+322
00000000002202e1         db  0x00 ; '.'
00000000002202e2         db  0x00 ; '.'
00000000002202e3         db  0x00 ; '.'
00000000002202e4         db  0x00 ; '.'
00000000002202e5         db  0x00 ; '.'
00000000002202e6         db  0x00 ; '.'
00000000002202e7         db  0x00 ; '.'
                     unsupported_device.10320:
00000000002202e8         db  0x00 ; '.'                                         ; DATA XREF=gobble_file.constprop.52+2224, gobble_file.constprop.52+3380
00000000002202e9         db  0x00 ; '.'
00000000002202ea         db  0x00 ; '.'
00000000002202eb         db  0x00 ; '.'
00000000002202ec         db  0x00 ; '.'
00000000002202ed         db  0x00 ; '.'
00000000002202ee         db  0x00 ; '.'
00000000002202ef         db  0x00 ; '.'
                     unsupported_device.10314:
00000000002202f0         db  0x00 ; '.'                                         ; DATA XREF=gobble_file.constprop.52+443, gobble_file.constprop.52+461
00000000002202f1         db  0x00 ; '.'
00000000002202f2         db  0x00 ; '.'
00000000002202f3         db  0x00 ; '.'
00000000002202f4         db  0x00 ; '.'
00000000002202f5         db  0x00 ; '.'
00000000002202f6         db  0x00 ; '.'
00000000002202f7         db  0x00 ; '.'
                     unsupported_device.10326:
00000000002202f8         db  0x00 ; '.'                                         ; DATA XREF=gobble_file.constprop.52+1320, gobble_file.constprop.52+1335
00000000002202f9         db  0x00 ; '.'
00000000002202fa         db  0x00 ; '.'
00000000002202fb         db  0x00 ; '.'
00000000002202fc         db  0x00 ; '.'
00000000002202fd         db  0x00 ; '.'
00000000002202fe         db  0x00 ; '.'
00000000002202ff         db  0x00 ; '.'
                     failed_strcoll:
0000000000220300         db  0x00 ; '.'                                         ; DATA XREF=sort_files+95
0000000000220301         db  0x00 ; '.'
0000000000220302         db  0x00 ; '.'
0000000000220303         db  0x00 ; '.'
0000000000220304         db  0x00 ; '.'
0000000000220305         db  0x00 ; '.'
0000000000220306         db  0x00 ; '.'
0000000000220307         db  0x00 ; '.'
0000000000220308         db  0x00 ; '.'
0000000000220309         db  0x00 ; '.'
000000000022030a         db  0x00 ; '.'
000000000022030b         db  0x00 ; '.'
000000000022030c         db  0x00 ; '.'
000000000022030d         db  0x00 ; '.'
000000000022030e         db  0x00 ; '.'
000000000022030f         db  0x00 ; '.'
0000000000220310         db  0x00 ; '.'
0000000000220311         db  0x00 ; '.'
0000000000220312         db  0x00 ; '.'
0000000000220313         db  0x00 ; '.'
0000000000220314         db  0x00 ; '.'
0000000000220315         db  0x00 ; '.'
0000000000220316         db  0x00 ; '.'
0000000000220317         db  0x00 ; '.'
0000000000220318         db  0x00 ; '.'
0000000000220319         db  0x00 ; '.'
000000000022031a         db  0x00 ; '.'
000000000022031b         db  0x00 ; '.'
000000000022031c         db  0x00 ; '.'
000000000022031d         db  0x00 ; '.'
000000000022031e         db  0x00 ; '.'
000000000022031f         db  0x00 ; '.'
0000000000220320         db  0x00 ; '.'
0000000000220321         db  0x00 ; '.'
0000000000220322         db  0x00 ; '.'
0000000000220323         db  0x00 ; '.'
0000000000220324         db  0x00 ; '.'
0000000000220325         db  0x00 ; '.'
0000000000220326         db  0x00 ; '.'
0000000000220327         db  0x00 ; '.'
0000000000220328         db  0x00 ; '.'
0000000000220329         db  0x00 ; '.'
000000000022032a         db  0x00 ; '.'
000000000022032b         db  0x00 ; '.'
000000000022032c         db  0x00 ; '.'
000000000022032d         db  0x00 ; '.'
000000000022032e         db  0x00 ; '.'
000000000022032f         db  0x00 ; '.'
0000000000220330         db  0x00 ; '.'
0000000000220331         db  0x00 ; '.'
0000000000220332         db  0x00 ; '.'
0000000000220333         db  0x00 ; '.'
0000000000220334         db  0x00 ; '.'
0000000000220335         db  0x00 ; '.'
0000000000220336         db  0x00 ; '.'
0000000000220337         db  0x00 ; '.'
0000000000220338         db  0x00 ; '.'
0000000000220339         db  0x00 ; '.'
000000000022033a         db  0x00 ; '.'
000000000022033b         db  0x00 ; '.'
000000000022033c         db  0x00 ; '.'
000000000022033d         db  0x00 ; '.'
000000000022033e         db  0x00 ; '.'
000000000022033f         db  0x00 ; '.'
0000000000220340         db  0x00 ; '.'
0000000000220341         db  0x00 ; '.'
0000000000220342         db  0x00 ; '.'
0000000000220343         db  0x00 ; '.'
0000000000220344         db  0x00 ; '.'
0000000000220345         db  0x00 ; '.'
0000000000220346         db  0x00 ; '.'
0000000000220347         db  0x00 ; '.'
0000000000220348         db  0x00 ; '.'
0000000000220349         db  0x00 ; '.'
000000000022034a         db  0x00 ; '.'
000000000022034b         db  0x00 ; '.'
000000000022034c         db  0x00 ; '.'
000000000022034d         db  0x00 ; '.'
000000000022034e         db  0x00 ; '.'
000000000022034f         db  0x00 ; '.'
0000000000220350         db  0x00 ; '.'
0000000000220351         db  0x00 ; '.'
0000000000220352         db  0x00 ; '.'
0000000000220353         db  0x00 ; '.'
0000000000220354         db  0x00 ; '.'
0000000000220355         db  0x00 ; '.'
0000000000220356         db  0x00 ; '.'
0000000000220357         db  0x00 ; '.'
0000000000220358         db  0x00 ; '.'
0000000000220359         db  0x00 ; '.'
000000000022035a         db  0x00 ; '.'
000000000022035b         db  0x00 ; '.'
000000000022035c         db  0x00 ; '.'
000000000022035d         db  0x00 ; '.'
000000000022035e         db  0x00 ; '.'
000000000022035f         db  0x00 ; '.'
0000000000220360         db  0x00 ; '.'
0000000000220361         db  0x00 ; '.'
0000000000220362         db  0x00 ; '.'
0000000000220363         db  0x00 ; '.'
0000000000220364         db  0x00 ; '.'
0000000000220365         db  0x00 ; '.'
0000000000220366         db  0x00 ; '.'
0000000000220367         db  0x00 ; '.'
0000000000220368         db  0x00 ; '.'
0000000000220369         db  0x00 ; '.'
000000000022036a         db  0x00 ; '.'
000000000022036b         db  0x00 ; '.'
000000000022036c         db  0x00 ; '.'
000000000022036d         db  0x00 ; '.'
000000000022036e         db  0x00 ; '.'
000000000022036f         db  0x00 ; '.'
0000000000220370         db  0x00 ; '.'
0000000000220371         db  0x00 ; '.'
0000000000220372         db  0x00 ; '.'
0000000000220373         db  0x00 ; '.'
0000000000220374         db  0x00 ; '.'
0000000000220375         db  0x00 ; '.'
0000000000220376         db  0x00 ; '.'
0000000000220377         db  0x00 ; '.'
0000000000220378         db  0x00 ; '.'
0000000000220379         db  0x00 ; '.'
000000000022037a         db  0x00 ; '.'
000000000022037b         db  0x00 ; '.'
000000000022037c         db  0x00 ; '.'
000000000022037d         db  0x00 ; '.'
000000000022037e         db  0x00 ; '.'
000000000022037f         db  0x00 ; '.'
0000000000220380         db  0x00 ; '.'
0000000000220381         db  0x00 ; '.'
0000000000220382         db  0x00 ; '.'
0000000000220383         db  0x00 ; '.'
0000000000220384         db  0x00 ; '.'
0000000000220385         db  0x00 ; '.'
0000000000220386         db  0x00 ; '.'
0000000000220387         db  0x00 ; '.'
0000000000220388         db  0x00 ; '.'
0000000000220389         db  0x00 ; '.'
000000000022038a         db  0x00 ; '.'
000000000022038b         db  0x00 ; '.'
000000000022038c         db  0x00 ; '.'
000000000022038d         db  0x00 ; '.'
000000000022038e         db  0x00 ; '.'
000000000022038f         db  0x00 ; '.'
0000000000220390         db  0x00 ; '.'
0000000000220391         db  0x00 ; '.'
0000000000220392         db  0x00 ; '.'
0000000000220393         db  0x00 ; '.'
0000000000220394         db  0x00 ; '.'
0000000000220395         db  0x00 ; '.'
0000000000220396         db  0x00 ; '.'
0000000000220397         db  0x00 ; '.'
0000000000220398         db  0x00 ; '.'
0000000000220399         db  0x00 ; '.'
000000000022039a         db  0x00 ; '.'
000000000022039b         db  0x00 ; '.'
000000000022039c         db  0x00 ; '.'
000000000022039d         db  0x00 ; '.'
000000000022039e         db  0x00 ; '.'
000000000022039f         db  0x00 ; '.'
00000000002203a0         db  0x00 ; '.'
00000000002203a1         db  0x00 ; '.'
00000000002203a2         db  0x00 ; '.'
00000000002203a3         db  0x00 ; '.'
00000000002203a4         db  0x00 ; '.'
00000000002203a5         db  0x00 ; '.'
00000000002203a6         db  0x00 ; '.'
00000000002203a7         db  0x00 ; '.'
00000000002203a8         db  0x00 ; '.'
00000000002203a9         db  0x00 ; '.'
00000000002203aa         db  0x00 ; '.'
00000000002203ab         db  0x00 ; '.'
00000000002203ac         db  0x00 ; '.'
00000000002203ad         db  0x00 ; '.'
00000000002203ae         db  0x00 ; '.'
00000000002203af         db  0x00 ; '.'
00000000002203b0         db  0x00 ; '.'
00000000002203b1         db  0x00 ; '.'
00000000002203b2         db  0x00 ; '.'
00000000002203b3         db  0x00 ; '.'
00000000002203b4         db  0x00 ; '.'
00000000002203b5         db  0x00 ; '.'
00000000002203b6         db  0x00 ; '.'
00000000002203b7         db  0x00 ; '.'
00000000002203b8         db  0x00 ; '.'
00000000002203b9         db  0x00 ; '.'
00000000002203ba         db  0x00 ; '.'
00000000002203bb         db  0x00 ; '.'
00000000002203bc         db  0x00 ; '.'
00000000002203bd         db  0x00 ; '.'
00000000002203be         db  0x00 ; '.'
00000000002203bf         db  0x00 ; '.'
00000000002203c0         db  0x00 ; '.'
00000000002203c1         db  0x00 ; '.'
00000000002203c2         db  0x00 ; '.'
00000000002203c3         db  0x00 ; '.'
00000000002203c4         db  0x00 ; '.'
00000000002203c5         db  0x00 ; '.'
00000000002203c6         db  0x00 ; '.'
00000000002203c7         db  0x00 ; '.'
                     use_abformat:
00000000002203c8         db  0x00 ; '.'                                         ; DATA XREF=abformat_init+347, print_long_format+1488, print_long_format+2327
00000000002203c9         db  0x00 ; '.'
00000000002203ca         db  0x00 ; '.'
00000000002203cb         db  0x00 ; '.'
00000000002203cc         db  0x00 ; '.'
00000000002203cd         db  0x00 ; '.'
00000000002203ce         db  0x00 ; '.'
00000000002203cf         db  0x00 ; '.'
00000000002203d0         db  0x00 ; '.'
00000000002203d1         db  0x00 ; '.'
00000000002203d2         db  0x00 ; '.'
00000000002203d3         db  0x00 ; '.'
00000000002203d4         db  0x00 ; '.'
00000000002203d5         db  0x00 ; '.'
00000000002203d6         db  0x00 ; '.'
00000000002203d7         db  0x00 ; '.'
00000000002203d8         db  0x00 ; '.'
00000000002203d9         db  0x00 ; '.'
00000000002203da         db  0x00 ; '.'
00000000002203db         db  0x00 ; '.'
00000000002203dc         db  0x00 ; '.'
00000000002203dd         db  0x00 ; '.'
00000000002203de         db  0x00 ; '.'
00000000002203df         db  0x00 ; '.'
                     abformat:
00000000002203e0         db  0x00 ; '.'                                         ; DATA XREF=abformat_init+459, print_long_format+1524, print_long_format+2472
00000000002203e1         db  0x00 ; '.'
00000000002203e2         db  0x00 ; '.'
00000000002203e3         db  0x00 ; '.'
00000000002203e4         db  0x00 ; '.'
00000000002203e5         db  0x00 ; '.'
00000000002203e6         db  0x00 ; '.'
00000000002203e7         db  0x00 ; '.'
00000000002203e8         db  0x00 ; '.'
00000000002203e9         db  0x00 ; '.'
00000000002203ea         db  0x00 ; '.'
00000000002203eb         db  0x00 ; '.'
00000000002203ec         db  0x00 ; '.'
00000000002203ed         db  0x00 ; '.'
00000000002203ee         db  0x00 ; '.'
00000000002203ef         db  0x00 ; '.'
00000000002203f0         db  0x00 ; '.'
00000000002203f1         db  0x00 ; '.'
00000000002203f2         db  0x00 ; '.'
00000000002203f3         db  0x00 ; '.'
00000000002203f4         db  0x00 ; '.'
00000000002203f5         db  0x00 ; '.'
00000000002203f6         db  0x00 ; '.'
00000000002203f7         db  0x00 ; '.'
00000000002203f8         db  0x00 ; '.'
00000000002203f9         db  0x00 ; '.'
00000000002203fa         db  0x00 ; '.'
00000000002203fb         db  0x00 ; '.'
00000000002203fc         db  0x00 ; '.'
00000000002203fd         db  0x00 ; '.'
00000000002203fe         db  0x00 ; '.'
00000000002203ff         db  0x00 ; '.'
0000000000220400         db  0x00 ; '.'
0000000000220401         db  0x00 ; '.'
0000000000220402         db  0x00 ; '.'
0000000000220403         db  0x00 ; '.'
0000000000220404         db  0x00 ; '.'
0000000000220405         db  0x00 ; '.'
0000000000220406         db  0x00 ; '.'
0000000000220407         db  0x00 ; '.'
0000000000220408         db  0x00 ; '.'
0000000000220409         db  0x00 ; '.'
000000000022040a         db  0x00 ; '.'
000000000022040b         db  0x00 ; '.'
000000000022040c         db  0x00 ; '.'
000000000022040d         db  0x00 ; '.'
000000000022040e         db  0x00 ; '.'
000000000022040f         db  0x00 ; '.'
0000000000220410         db  0x00 ; '.'
0000000000220411         db  0x00 ; '.'
0000000000220412         db  0x00 ; '.'
0000000000220413         db  0x00 ; '.'
0000000000220414         db  0x00 ; '.'
0000000000220415         db  0x00 ; '.'
0000000000220416         db  0x00 ; '.'
0000000000220417         db  0x00 ; '.'
0000000000220418         db  0x00 ; '.'
0000000000220419         db  0x00 ; '.'
000000000022041a         db  0x00 ; '.'
000000000022041b         db  0x00 ; '.'
000000000022041c         db  0x00 ; '.'
000000000022041d         db  0x00 ; '.'
000000000022041e         db  0x00 ; '.'
000000000022041f         db  0x00 ; '.'
0000000000220420         db  0x00 ; '.'
0000000000220421         db  0x00 ; '.'
0000000000220422         db  0x00 ; '.'
0000000000220423         db  0x00 ; '.'
0000000000220424         db  0x00 ; '.'
0000000000220425         db  0x00 ; '.'
0000000000220426         db  0x00 ; '.'
0000000000220427         db  0x00 ; '.'
0000000000220428         db  0x00 ; '.'
0000000000220429         db  0x00 ; '.'
000000000022042a         db  0x00 ; '.'
000000000022042b         db  0x00 ; '.'
000000000022042c         db  0x00 ; '.'
000000000022042d         db  0x00 ; '.'
000000000022042e         db  0x00 ; '.'
000000000022042f         db  0x00 ; '.'
0000000000220430         db  0x00 ; '.'
0000000000220431         db  0x00 ; '.'
0000000000220432         db  0x00 ; '.'
0000000000220433         db  0x00 ; '.'
0000000000220434         db  0x00 ; '.'
0000000000220435         db  0x00 ; '.'
0000000000220436         db  0x00 ; '.'
0000000000220437         db  0x00 ; '.'
0000000000220438         db  0x00 ; '.'
0000000000220439         db  0x00 ; '.'
000000000022043a         db  0x00 ; '.'
000000000022043b         db  0x00 ; '.'
000000000022043c         db  0x00 ; '.'
000000000022043d         db  0x00 ; '.'
000000000022043e         db  0x00 ; '.'
000000000022043f         db  0x00 ; '.'
0000000000220440         db  0x00 ; '.'
0000000000220441         db  0x00 ; '.'
0000000000220442         db  0x00 ; '.'
0000000000220443         db  0x00 ; '.'
0000000000220444         db  0x00 ; '.'
0000000000220445         db  0x00 ; '.'
0000000000220446         db  0x00 ; '.'
0000000000220447         db  0x00 ; '.'
0000000000220448         db  0x00 ; '.'
0000000000220449         db  0x00 ; '.'
000000000022044a         db  0x00 ; '.'
000000000022044b         db  0x00 ; '.'
000000000022044c         db  0x00 ; '.'
000000000022044d         db  0x00 ; '.'
000000000022044e         db  0x00 ; '.'
000000000022044f         db  0x00 ; '.'
0000000000220450         db  0x00 ; '.'
0000000000220451         db  0x00 ; '.'
0000000000220452         db  0x00 ; '.'
0000000000220453         db  0x00 ; '.'
0000000000220454         db  0x00 ; '.'
0000000000220455         db  0x00 ; '.'
0000000000220456         db  0x00 ; '.'
0000000000220457         db  0x00 ; '.'
0000000000220458         db  0x00 ; '.'
0000000000220459         db  0x00 ; '.'
000000000022045a         db  0x00 ; '.'
000000000022045b         db  0x00 ; '.'
000000000022045c         db  0x00 ; '.'
000000000022045d         db  0x00 ; '.'
000000000022045e         db  0x00 ; '.'
000000000022045f         db  0x00 ; '.'
0000000000220460         db  0x00 ; '.'
0000000000220461         db  0x00 ; '.'
0000000000220462         db  0x00 ; '.'
0000000000220463         db  0x00 ; '.'
0000000000220464         db  0x00 ; '.'
0000000000220465         db  0x00 ; '.'
0000000000220466         db  0x00 ; '.'
0000000000220467         db  0x00 ; '.'
0000000000220468         db  0x00 ; '.'
0000000000220469         db  0x00 ; '.'
000000000022046a         db  0x00 ; '.'
000000000022046b         db  0x00 ; '.'
000000000022046c         db  0x00 ; '.'
000000000022046d         db  0x00 ; '.'
000000000022046e         db  0x00 ; '.'
000000000022046f         db  0x00 ; '.'
0000000000220470         db  0x00 ; '.'
0000000000220471         db  0x00 ; '.'
0000000000220472         db  0x00 ; '.'
0000000000220473         db  0x00 ; '.'
0000000000220474         db  0x00 ; '.'
0000000000220475         db  0x00 ; '.'
0000000000220476         db  0x00 ; '.'
0000000000220477         db  0x00 ; '.'
0000000000220478         db  0x00 ; '.'
0000000000220479         db  0x00 ; '.'
000000000022047a         db  0x00 ; '.'
000000000022047b         db  0x00 ; '.'
000000000022047c         db  0x00 ; '.'
000000000022047d         db  0x00 ; '.'
000000000022047e         db  0x00 ; '.'
000000000022047f         db  0x00 ; '.'
0000000000220480         db  0x00 ; '.'
0000000000220481         db  0x00 ; '.'
0000000000220482         db  0x00 ; '.'
0000000000220483         db  0x00 ; '.'
0000000000220484         db  0x00 ; '.'
0000000000220485         db  0x00 ; '.'
0000000000220486         db  0x00 ; '.'
0000000000220487         db  0x00 ; '.'
0000000000220488         db  0x00 ; '.'
0000000000220489         db  0x00 ; '.'
000000000022048a         db  0x00 ; '.'
000000000022048b         db  0x00 ; '.'
000000000022048c         db  0x00 ; '.'
000000000022048d         db  0x00 ; '.'
000000000022048e         db  0x00 ; '.'
000000000022048f         db  0x00 ; '.'
0000000000220490         db  0x00 ; '.'
0000000000220491         db  0x00 ; '.'
0000000000220492         db  0x00 ; '.'
0000000000220493         db  0x00 ; '.'
0000000000220494         db  0x00 ; '.'
0000000000220495         db  0x00 ; '.'
0000000000220496         db  0x00 ; '.'
0000000000220497         db  0x00 ; '.'
0000000000220498         db  0x00 ; '.'
0000000000220499         db  0x00 ; '.'
000000000022049a         db  0x00 ; '.'
000000000022049b         db  0x00 ; '.'
000000000022049c         db  0x00 ; '.'
000000000022049d         db  0x00 ; '.'
000000000022049e         db  0x00 ; '.'
000000000022049f         db  0x00 ; '.'
00000000002204a0         db  0x00 ; '.'
00000000002204a1         db  0x00 ; '.'
00000000002204a2         db  0x00 ; '.'
00000000002204a3         db  0x00 ; '.'
00000000002204a4         db  0x00 ; '.'
00000000002204a5         db  0x00 ; '.'
00000000002204a6         db  0x00 ; '.'
00000000002204a7         db  0x00 ; '.'
00000000002204a8         db  0x00 ; '.'
00000000002204a9         db  0x00 ; '.'
00000000002204aa         db  0x00 ; '.'
00000000002204ab         db  0x00 ; '.'
00000000002204ac         db  0x00 ; '.'
00000000002204ad         db  0x00 ; '.'
00000000002204ae         db  0x00 ; '.'
00000000002204af         db  0x00 ; '.'
00000000002204b0         db  0x00 ; '.'
00000000002204b1         db  0x00 ; '.'
00000000002204b2         db  0x00 ; '.'
00000000002204b3         db  0x00 ; '.'
00000000002204b4         db  0x00 ; '.'
00000000002204b5         db  0x00 ; '.'
00000000002204b6         db  0x00 ; '.'
00000000002204b7         db  0x00 ; '.'
00000000002204b8         db  0x00 ; '.'
00000000002204b9         db  0x00 ; '.'
00000000002204ba         db  0x00 ; '.'
00000000002204bb         db  0x00 ; '.'
00000000002204bc         db  0x00 ; '.'
00000000002204bd         db  0x00 ; '.'
00000000002204be         db  0x00 ; '.'
00000000002204bf         db  0x00 ; '.'
00000000002204c0         db  0x00 ; '.'
00000000002204c1         db  0x00 ; '.'
00000000002204c2         db  0x00 ; '.'
00000000002204c3         db  0x00 ; '.'
00000000002204c4         db  0x00 ; '.'
00000000002204c5         db  0x00 ; '.'
00000000002204c6         db  0x00 ; '.'
00000000002204c7         db  0x00 ; '.'
00000000002204c8         db  0x00 ; '.'
00000000002204c9         db  0x00 ; '.'
00000000002204ca         db  0x00 ; '.'
00000000002204cb         db  0x00 ; '.'
00000000002204cc         db  0x00 ; '.'
00000000002204cd         db  0x00 ; '.'
00000000002204ce         db  0x00 ; '.'
00000000002204cf         db  0x00 ; '.'
00000000002204d0         db  0x00 ; '.'
00000000002204d1         db  0x00 ; '.'
00000000002204d2         db  0x00 ; '.'
00000000002204d3         db  0x00 ; '.'
00000000002204d4         db  0x00 ; '.'
00000000002204d5         db  0x00 ; '.'
00000000002204d6         db  0x00 ; '.'
00000000002204d7         db  0x00 ; '.'
00000000002204d8         db  0x00 ; '.'
00000000002204d9         db  0x00 ; '.'
00000000002204da         db  0x00 ; '.'
00000000002204db         db  0x00 ; '.'
00000000002204dc         db  0x00 ; '.'
00000000002204dd         db  0x00 ; '.'
00000000002204de         db  0x00 ; '.'
00000000002204df         db  0x00 ; '.'
00000000002204e0         db  0x00 ; '.'
00000000002204e1         db  0x00 ; '.'
00000000002204e2         db  0x00 ; '.'
00000000002204e3         db  0x00 ; '.'
00000000002204e4         db  0x00 ; '.'
00000000002204e5         db  0x00 ; '.'
00000000002204e6         db  0x00 ; '.'
00000000002204e7         db  0x00 ; '.'
00000000002204e8         db  0x00 ; '.'
00000000002204e9         db  0x00 ; '.'
00000000002204ea         db  0x00 ; '.'
00000000002204eb         db  0x00 ; '.'
00000000002204ec         db  0x00 ; '.'
00000000002204ed         db  0x00 ; '.'
00000000002204ee         db  0x00 ; '.'
00000000002204ef         db  0x00 ; '.'
00000000002204f0         db  0x00 ; '.'
00000000002204f1         db  0x00 ; '.'
00000000002204f2         db  0x00 ; '.'
00000000002204f3         db  0x00 ; '.'
00000000002204f4         db  0x00 ; '.'
00000000002204f5         db  0x00 ; '.'
00000000002204f6         db  0x00 ; '.'
00000000002204f7         db  0x00 ; '.'
00000000002204f8         db  0x00 ; '.'
00000000002204f9         db  0x00 ; '.'
00000000002204fa         db  0x00 ; '.'
00000000002204fb         db  0x00 ; '.'
00000000002204fc         db  0x00 ; '.'
00000000002204fd         db  0x00 ; '.'
00000000002204fe         db  0x00 ; '.'
00000000002204ff         db  0x00 ; '.'
0000000000220500         db  0x00 ; '.'
0000000000220501         db  0x00 ; '.'
0000000000220502         db  0x00 ; '.'
0000000000220503         db  0x00 ; '.'
0000000000220504         db  0x00 ; '.'
0000000000220505         db  0x00 ; '.'
0000000000220506         db  0x00 ; '.'
0000000000220507         db  0x00 ; '.'
0000000000220508         db  0x00 ; '.'
0000000000220509         db  0x00 ; '.'
000000000022050a         db  0x00 ; '.'
000000000022050b         db  0x00 ; '.'
000000000022050c         db  0x00 ; '.'
000000000022050d         db  0x00 ; '.'
000000000022050e         db  0x00 ; '.'
000000000022050f         db  0x00 ; '.'
0000000000220510         db  0x00 ; '.'
0000000000220511         db  0x00 ; '.'
0000000000220512         db  0x00 ; '.'
0000000000220513         db  0x00 ; '.'
0000000000220514         db  0x00 ; '.'
0000000000220515         db  0x00 ; '.'
0000000000220516         db  0x00 ; '.'
0000000000220517         db  0x00 ; '.'
0000000000220518         db  0x00 ; '.'
0000000000220519         db  0x00 ; '.'
000000000022051a         db  0x00 ; '.'
000000000022051b         db  0x00 ; '.'
000000000022051c         db  0x00 ; '.'
000000000022051d         db  0x00 ; '.'
000000000022051e         db  0x00 ; '.'
000000000022051f         db  0x00 ; '.'
0000000000220520         db  0x00 ; '.'
0000000000220521         db  0x00 ; '.'
0000000000220522         db  0x00 ; '.'
0000000000220523         db  0x00 ; '.'
0000000000220524         db  0x00 ; '.'
0000000000220525         db  0x00 ; '.'
0000000000220526         db  0x00 ; '.'
0000000000220527         db  0x00 ; '.'
0000000000220528         db  0x00 ; '.'
0000000000220529         db  0x00 ; '.'
000000000022052a         db  0x00 ; '.'
000000000022052b         db  0x00 ; '.'
000000000022052c         db  0x00 ; '.'
000000000022052d         db  0x00 ; '.'
000000000022052e         db  0x00 ; '.'
000000000022052f         db  0x00 ; '.'
0000000000220530         db  0x00 ; '.'
0000000000220531         db  0x00 ; '.'
0000000000220532         db  0x00 ; '.'
0000000000220533         db  0x00 ; '.'
0000000000220534         db  0x00 ; '.'
0000000000220535         db  0x00 ; '.'
0000000000220536         db  0x00 ; '.'
0000000000220537         db  0x00 ; '.'
0000000000220538         db  0x00 ; '.'
0000000000220539         db  0x00 ; '.'
000000000022053a         db  0x00 ; '.'
000000000022053b         db  0x00 ; '.'
000000000022053c         db  0x00 ; '.'
000000000022053d         db  0x00 ; '.'
000000000022053e         db  0x00 ; '.'
000000000022053f         db  0x00 ; '.'
0000000000220540         db  0x00 ; '.'
0000000000220541         db  0x00 ; '.'
0000000000220542         db  0x00 ; '.'
0000000000220543         db  0x00 ; '.'
0000000000220544         db  0x00 ; '.'
0000000000220545         db  0x00 ; '.'
0000000000220546         db  0x00 ; '.'
0000000000220547         db  0x00 ; '.'
0000000000220548         db  0x00 ; '.'
0000000000220549         db  0x00 ; '.'
000000000022054a         db  0x00 ; '.'
000000000022054b         db  0x00 ; '.'
000000000022054c         db  0x00 ; '.'
000000000022054d         db  0x00 ; '.'
000000000022054e         db  0x00 ; '.'
000000000022054f         db  0x00 ; '.'
0000000000220550         db  0x00 ; '.'
0000000000220551         db  0x00 ; '.'
0000000000220552         db  0x00 ; '.'
0000000000220553         db  0x00 ; '.'
0000000000220554         db  0x00 ; '.'
0000000000220555         db  0x00 ; '.'
0000000000220556         db  0x00 ; '.'
0000000000220557         db  0x00 ; '.'
0000000000220558         db  0x00 ; '.'
0000000000220559         db  0x00 ; '.'
000000000022055a         db  0x00 ; '.'
000000000022055b         db  0x00 ; '.'
000000000022055c         db  0x00 ; '.'
000000000022055d         db  0x00 ; '.'
000000000022055e         db  0x00 ; '.'
000000000022055f         db  0x00 ; '.'
0000000000220560         db  0x00 ; '.'
0000000000220561         db  0x00 ; '.'
0000000000220562         db  0x00 ; '.'
0000000000220563         db  0x00 ; '.'
0000000000220564         db  0x00 ; '.'
0000000000220565         db  0x00 ; '.'
0000000000220566         db  0x00 ; '.'
0000000000220567         db  0x00 ; '.'
0000000000220568         db  0x00 ; '.'
0000000000220569         db  0x00 ; '.'
000000000022056a         db  0x00 ; '.'
000000000022056b         db  0x00 ; '.'
000000000022056c         db  0x00 ; '.'
000000000022056d         db  0x00 ; '.'
000000000022056e         db  0x00 ; '.'
000000000022056f         db  0x00 ; '.'
0000000000220570         db  0x00 ; '.'
0000000000220571         db  0x00 ; '.'
0000000000220572         db  0x00 ; '.'
0000000000220573         db  0x00 ; '.'
0000000000220574         db  0x00 ; '.'
0000000000220575         db  0x00 ; '.'
0000000000220576         db  0x00 ; '.'
0000000000220577         db  0x00 ; '.'
0000000000220578         db  0x00 ; '.'
0000000000220579         db  0x00 ; '.'
000000000022057a         db  0x00 ; '.'
000000000022057b         db  0x00 ; '.'
000000000022057c         db  0x00 ; '.'
000000000022057d         db  0x00 ; '.'
000000000022057e         db  0x00 ; '.'
000000000022057f         db  0x00 ; '.'
0000000000220580         db  0x00 ; '.'
0000000000220581         db  0x00 ; '.'
0000000000220582         db  0x00 ; '.'
0000000000220583         db  0x00 ; '.'
0000000000220584         db  0x00 ; '.'
0000000000220585         db  0x00 ; '.'
0000000000220586         db  0x00 ; '.'
0000000000220587         db  0x00 ; '.'
0000000000220588         db  0x00 ; '.'
0000000000220589         db  0x00 ; '.'
000000000022058a         db  0x00 ; '.'
000000000022058b         db  0x00 ; '.'
000000000022058c         db  0x00 ; '.'
000000000022058d         db  0x00 ; '.'
000000000022058e         db  0x00 ; '.'
000000000022058f         db  0x00 ; '.'
0000000000220590         db  0x00 ; '.'
0000000000220591         db  0x00 ; '.'
0000000000220592         db  0x00 ; '.'
0000000000220593         db  0x00 ; '.'
0000000000220594         db  0x00 ; '.'
0000000000220595         db  0x00 ; '.'
0000000000220596         db  0x00 ; '.'
0000000000220597         db  0x00 ; '.'
0000000000220598         db  0x00 ; '.'
0000000000220599         db  0x00 ; '.'
000000000022059a         db  0x00 ; '.'
000000000022059b         db  0x00 ; '.'
000000000022059c         db  0x00 ; '.'
000000000022059d         db  0x00 ; '.'
000000000022059e         db  0x00 ; '.'
000000000022059f         db  0x00 ; '.'
00000000002205a0         db  0x00 ; '.'
00000000002205a1         db  0x00 ; '.'
00000000002205a2         db  0x00 ; '.'
00000000002205a3         db  0x00 ; '.'
00000000002205a4         db  0x00 ; '.'
00000000002205a5         db  0x00 ; '.'
00000000002205a6         db  0x00 ; '.'
00000000002205a7         db  0x00 ; '.'
00000000002205a8         db  0x00 ; '.'
00000000002205a9         db  0x00 ; '.'
00000000002205aa         db  0x00 ; '.'
00000000002205ab         db  0x00 ; '.'
00000000002205ac         db  0x00 ; '.'
00000000002205ad         db  0x00 ; '.'
00000000002205ae         db  0x00 ; '.'
00000000002205af         db  0x00 ; '.'
00000000002205b0         db  0x00 ; '.'
00000000002205b1         db  0x00 ; '.'
00000000002205b2         db  0x00 ; '.'
00000000002205b3         db  0x00 ; '.'
00000000002205b4         db  0x00 ; '.'
00000000002205b5         db  0x00 ; '.'
00000000002205b6         db  0x00 ; '.'
00000000002205b7         db  0x00 ; '.'
00000000002205b8         db  0x00 ; '.'
00000000002205b9         db  0x00 ; '.'
00000000002205ba         db  0x00 ; '.'
00000000002205bb         db  0x00 ; '.'
00000000002205bc         db  0x00 ; '.'
00000000002205bd         db  0x00 ; '.'
00000000002205be         db  0x00 ; '.'
00000000002205bf         db  0x00 ; '.'
00000000002205c0         db  0x00 ; '.'
00000000002205c1         db  0x00 ; '.'
00000000002205c2         db  0x00 ; '.'
00000000002205c3         db  0x00 ; '.'
00000000002205c4         db  0x00 ; '.'
00000000002205c5         db  0x00 ; '.'
00000000002205c6         db  0x00 ; '.'
00000000002205c7         db  0x00 ; '.'
00000000002205c8         db  0x00 ; '.'
00000000002205c9         db  0x00 ; '.'
00000000002205ca         db  0x00 ; '.'
00000000002205cb         db  0x00 ; '.'
00000000002205cc         db  0x00 ; '.'
00000000002205cd         db  0x00 ; '.'
00000000002205ce         db  0x00 ; '.'
00000000002205cf         db  0x00 ; '.'
00000000002205d0         db  0x00 ; '.'
00000000002205d1         db  0x00 ; '.'
00000000002205d2         db  0x00 ; '.'
00000000002205d3         db  0x00 ; '.'
00000000002205d4         db  0x00 ; '.'
00000000002205d5         db  0x00 ; '.'
00000000002205d6         db  0x00 ; '.'
00000000002205d7         db  0x00 ; '.'
00000000002205d8         db  0x00 ; '.'
00000000002205d9         db  0x00 ; '.'
00000000002205da         db  0x00 ; '.'
00000000002205db         db  0x00 ; '.'
00000000002205dc         db  0x00 ; '.'
00000000002205dd         db  0x00 ; '.'
00000000002205de         db  0x00 ; '.'
00000000002205df         db  0x00 ; '.'
00000000002205e0         db  0x00 ; '.'
00000000002205e1         db  0x00 ; '.'
00000000002205e2         db  0x00 ; '.'
00000000002205e3         db  0x00 ; '.'
00000000002205e4         db  0x00 ; '.'
00000000002205e5         db  0x00 ; '.'
00000000002205e6         db  0x00 ; '.'
00000000002205e7         db  0x00 ; '.'
00000000002205e8         db  0x00 ; '.'
00000000002205e9         db  0x00 ; '.'
00000000002205ea         db  0x00 ; '.'
00000000002205eb         db  0x00 ; '.'
00000000002205ec         db  0x00 ; '.'
00000000002205ed         db  0x00 ; '.'
00000000002205ee         db  0x00 ; '.'
00000000002205ef         db  0x00 ; '.'
00000000002205f0         db  0x00 ; '.'
00000000002205f1         db  0x00 ; '.'
00000000002205f2         db  0x00 ; '.'
00000000002205f3         db  0x00 ; '.'
00000000002205f4         db  0x00 ; '.'
00000000002205f5         db  0x00 ; '.'
00000000002205f6         db  0x00 ; '.'
00000000002205f7         db  0x00 ; '.'
00000000002205f8         db  0x00 ; '.'
00000000002205f9         db  0x00 ; '.'
00000000002205fa         db  0x00 ; '.'
00000000002205fb         db  0x00 ; '.'
00000000002205fc         db  0x00 ; '.'
00000000002205fd         db  0x00 ; '.'
00000000002205fe         db  0x00 ; '.'
00000000002205ff         db  0x00 ; '.'
0000000000220600         db  0x00 ; '.'
0000000000220601         db  0x00 ; '.'
0000000000220602         db  0x00 ; '.'
0000000000220603         db  0x00 ; '.'
0000000000220604         db  0x00 ; '.'
0000000000220605         db  0x00 ; '.'
0000000000220606         db  0x00 ; '.'
0000000000220607         db  0x00 ; '.'
0000000000220608         db  0x00 ; '.'
0000000000220609         db  0x00 ; '.'
000000000022060a         db  0x00 ; '.'
000000000022060b         db  0x00 ; '.'
000000000022060c         db  0x00 ; '.'
000000000022060d         db  0x00 ; '.'
000000000022060e         db  0x00 ; '.'
000000000022060f         db  0x00 ; '.'
0000000000220610         db  0x00 ; '.'
0000000000220611         db  0x00 ; '.'
0000000000220612         db  0x00 ; '.'
0000000000220613         db  0x00 ; '.'
0000000000220614         db  0x00 ; '.'
0000000000220615         db  0x00 ; '.'
0000000000220616         db  0x00 ; '.'
0000000000220617         db  0x00 ; '.'
0000000000220618         db  0x00 ; '.'
0000000000220619         db  0x00 ; '.'
000000000022061a         db  0x00 ; '.'
000000000022061b         db  0x00 ; '.'
000000000022061c         db  0x00 ; '.'
000000000022061d         db  0x00 ; '.'
000000000022061e         db  0x00 ; '.'
000000000022061f         db  0x00 ; '.'
0000000000220620         db  0x00 ; '.'
0000000000220621         db  0x00 ; '.'
0000000000220622         db  0x00 ; '.'
0000000000220623         db  0x00 ; '.'
0000000000220624         db  0x00 ; '.'
0000000000220625         db  0x00 ; '.'
0000000000220626         db  0x00 ; '.'
0000000000220627         db  0x00 ; '.'
0000000000220628         db  0x00 ; '.'
0000000000220629         db  0x00 ; '.'
000000000022062a         db  0x00 ; '.'
000000000022062b         db  0x00 ; '.'
000000000022062c         db  0x00 ; '.'
000000000022062d         db  0x00 ; '.'
000000000022062e         db  0x00 ; '.'
000000000022062f         db  0x00 ; '.'
0000000000220630         db  0x00 ; '.'
0000000000220631         db  0x00 ; '.'
0000000000220632         db  0x00 ; '.'
0000000000220633         db  0x00 ; '.'
0000000000220634         db  0x00 ; '.'
0000000000220635         db  0x00 ; '.'
0000000000220636         db  0x00 ; '.'
0000000000220637         db  0x00 ; '.'
0000000000220638         db  0x00 ; '.'
0000000000220639         db  0x00 ; '.'
000000000022063a         db  0x00 ; '.'
000000000022063b         db  0x00 ; '.'
000000000022063c         db  0x00 ; '.'
000000000022063d         db  0x00 ; '.'
000000000022063e         db  0x00 ; '.'
000000000022063f         db  0x00 ; '.'
0000000000220640         db  0x00 ; '.'
0000000000220641         db  0x00 ; '.'
0000000000220642         db  0x00 ; '.'
0000000000220643         db  0x00 ; '.'
0000000000220644         db  0x00 ; '.'
0000000000220645         db  0x00 ; '.'
0000000000220646         db  0x00 ; '.'
0000000000220647         db  0x00 ; '.'
0000000000220648         db  0x00 ; '.'
0000000000220649         db  0x00 ; '.'
000000000022064a         db  0x00 ; '.'
000000000022064b         db  0x00 ; '.'
000000000022064c         db  0x00 ; '.'
000000000022064d         db  0x00 ; '.'
000000000022064e         db  0x00 ; '.'
000000000022064f         db  0x00 ; '.'
0000000000220650         db  0x00 ; '.'
0000000000220651         db  0x00 ; '.'
0000000000220652         db  0x00 ; '.'
0000000000220653         db  0x00 ; '.'
0000000000220654         db  0x00 ; '.'
0000000000220655         db  0x00 ; '.'
0000000000220656         db  0x00 ; '.'
0000000000220657         db  0x00 ; '.'
0000000000220658         db  0x00 ; '.'
0000000000220659         db  0x00 ; '.'
000000000022065a         db  0x00 ; '.'
000000000022065b         db  0x00 ; '.'
000000000022065c         db  0x00 ; '.'
000000000022065d         db  0x00 ; '.'
000000000022065e         db  0x00 ; '.'
000000000022065f         db  0x00 ; '.'
0000000000220660         db  0x00 ; '.'
0000000000220661         db  0x00 ; '.'
0000000000220662         db  0x00 ; '.'
0000000000220663         db  0x00 ; '.'
0000000000220664         db  0x00 ; '.'
0000000000220665         db  0x00 ; '.'
0000000000220666         db  0x00 ; '.'
0000000000220667         db  0x00 ; '.'
0000000000220668         db  0x00 ; '.'
0000000000220669         db  0x00 ; '.'
000000000022066a         db  0x00 ; '.'
000000000022066b         db  0x00 ; '.'
000000000022066c         db  0x00 ; '.'
000000000022066d         db  0x00 ; '.'
000000000022066e         db  0x00 ; '.'
000000000022066f         db  0x00 ; '.'
0000000000220670         db  0x00 ; '.'
0000000000220671         db  0x00 ; '.'
0000000000220672         db  0x00 ; '.'
0000000000220673         db  0x00 ; '.'
0000000000220674         db  0x00 ; '.'
0000000000220675         db  0x00 ; '.'
0000000000220676         db  0x00 ; '.'
0000000000220677         db  0x00 ; '.'
0000000000220678         db  0x00 ; '.'
0000000000220679         db  0x00 ; '.'
000000000022067a         db  0x00 ; '.'
000000000022067b         db  0x00 ; '.'
000000000022067c         db  0x00 ; '.'
000000000022067d         db  0x00 ; '.'
000000000022067e         db  0x00 ; '.'
000000000022067f         db  0x00 ; '.'
0000000000220680         db  0x00 ; '.'
0000000000220681         db  0x00 ; '.'
0000000000220682         db  0x00 ; '.'
0000000000220683         db  0x00 ; '.'
0000000000220684         db  0x00 ; '.'
0000000000220685         db  0x00 ; '.'
0000000000220686         db  0x00 ; '.'
0000000000220687         db  0x00 ; '.'
0000000000220688         db  0x00 ; '.'
0000000000220689         db  0x00 ; '.'
000000000022068a         db  0x00 ; '.'
000000000022068b         db  0x00 ; '.'
000000000022068c         db  0x00 ; '.'
000000000022068d         db  0x00 ; '.'
000000000022068e         db  0x00 ; '.'
000000000022068f         db  0x00 ; '.'
0000000000220690         db  0x00 ; '.'
0000000000220691         db  0x00 ; '.'
0000000000220692         db  0x00 ; '.'
0000000000220693         db  0x00 ; '.'
0000000000220694         db  0x00 ; '.'
0000000000220695         db  0x00 ; '.'
0000000000220696         db  0x00 ; '.'
0000000000220697         db  0x00 ; '.'
0000000000220698         db  0x00 ; '.'
0000000000220699         db  0x00 ; '.'
000000000022069a         db  0x00 ; '.'
000000000022069b         db  0x00 ; '.'
000000000022069c         db  0x00 ; '.'
000000000022069d         db  0x00 ; '.'
000000000022069e         db  0x00 ; '.'
000000000022069f         db  0x00 ; '.'
00000000002206a0         db  0x00 ; '.'
00000000002206a1         db  0x00 ; '.'
00000000002206a2         db  0x00 ; '.'
00000000002206a3         db  0x00 ; '.'
00000000002206a4         db  0x00 ; '.'
00000000002206a5         db  0x00 ; '.'
00000000002206a6         db  0x00 ; '.'
00000000002206a7         db  0x00 ; '.'
00000000002206a8         db  0x00 ; '.'
00000000002206a9         db  0x00 ; '.'
00000000002206aa         db  0x00 ; '.'
00000000002206ab         db  0x00 ; '.'
00000000002206ac         db  0x00 ; '.'
00000000002206ad         db  0x00 ; '.'
00000000002206ae         db  0x00 ; '.'
00000000002206af         db  0x00 ; '.'
00000000002206b0         db  0x00 ; '.'
00000000002206b1         db  0x00 ; '.'
00000000002206b2         db  0x00 ; '.'
00000000002206b3         db  0x00 ; '.'
00000000002206b4         db  0x00 ; '.'
00000000002206b5         db  0x00 ; '.'
00000000002206b6         db  0x00 ; '.'
00000000002206b7         db  0x00 ; '.'
00000000002206b8         db  0x00 ; '.'
00000000002206b9         db  0x00 ; '.'
00000000002206ba         db  0x00 ; '.'
00000000002206bb         db  0x00 ; '.'
00000000002206bc         db  0x00 ; '.'
00000000002206bd         db  0x00 ; '.'
00000000002206be         db  0x00 ; '.'
00000000002206bf         db  0x00 ; '.'
00000000002206c0         db  0x00 ; '.'
00000000002206c1         db  0x00 ; '.'
00000000002206c2         db  0x00 ; '.'
00000000002206c3         db  0x00 ; '.'
00000000002206c4         db  0x00 ; '.'
00000000002206c5         db  0x00 ; '.'
00000000002206c6         db  0x00 ; '.'
00000000002206c7         db  0x00 ; '.'
00000000002206c8         db  0x00 ; '.'
00000000002206c9         db  0x00 ; '.'
00000000002206ca         db  0x00 ; '.'
00000000002206cb         db  0x00 ; '.'
00000000002206cc         db  0x00 ; '.'
00000000002206cd         db  0x00 ; '.'
00000000002206ce         db  0x00 ; '.'
00000000002206cf         db  0x00 ; '.'
00000000002206d0         db  0x00 ; '.'
00000000002206d1         db  0x00 ; '.'
00000000002206d2         db  0x00 ; '.'
00000000002206d3         db  0x00 ; '.'
00000000002206d4         db  0x00 ; '.'
00000000002206d5         db  0x00 ; '.'
00000000002206d6         db  0x00 ; '.'
00000000002206d7         db  0x00 ; '.'
00000000002206d8         db  0x00 ; '.'
00000000002206d9         db  0x00 ; '.'
00000000002206da         db  0x00 ; '.'
00000000002206db         db  0x00 ; '.'
00000000002206dc         db  0x00 ; '.'
00000000002206dd         db  0x00 ; '.'
00000000002206de         db  0x00 ; '.'
00000000002206df         db  0x00 ; '.'
00000000002206e0         db  0x00 ; '.'
00000000002206e1         db  0x00 ; '.'
00000000002206e2         db  0x00 ; '.'
00000000002206e3         db  0x00 ; '.'
00000000002206e4         db  0x00 ; '.'
00000000002206e5         db  0x00 ; '.'
00000000002206e6         db  0x00 ; '.'
00000000002206e7         db  0x00 ; '.'
00000000002206e8         db  0x00 ; '.'
00000000002206e9         db  0x00 ; '.'
00000000002206ea         db  0x00 ; '.'
00000000002206eb         db  0x00 ; '.'
00000000002206ec         db  0x00 ; '.'
00000000002206ed         db  0x00 ; '.'
00000000002206ee         db  0x00 ; '.'
00000000002206ef         db  0x00 ; '.'
00000000002206f0         db  0x00 ; '.'
00000000002206f1         db  0x00 ; '.'
00000000002206f2         db  0x00 ; '.'
00000000002206f3         db  0x00 ; '.'
00000000002206f4         db  0x00 ; '.'
00000000002206f5         db  0x00 ; '.'
00000000002206f6         db  0x00 ; '.'
00000000002206f7         db  0x00 ; '.'
00000000002206f8         db  0x00 ; '.'
00000000002206f9         db  0x00 ; '.'
00000000002206fa         db  0x00 ; '.'
00000000002206fb         db  0x00 ; '.'
00000000002206fc         db  0x00 ; '.'
00000000002206fd         db  0x00 ; '.'
00000000002206fe         db  0x00 ; '.'
00000000002206ff         db  0x00 ; '.'
0000000000220700         db  0x00 ; '.'
0000000000220701         db  0x00 ; '.'
0000000000220702         db  0x00 ; '.'
0000000000220703         db  0x00 ; '.'
0000000000220704         db  0x00 ; '.'
0000000000220705         db  0x00 ; '.'
0000000000220706         db  0x00 ; '.'
0000000000220707         db  0x00 ; '.'
0000000000220708         db  0x00 ; '.'
0000000000220709         db  0x00 ; '.'
000000000022070a         db  0x00 ; '.'
000000000022070b         db  0x00 ; '.'
000000000022070c         db  0x00 ; '.'
000000000022070d         db  0x00 ; '.'
000000000022070e         db  0x00 ; '.'
000000000022070f         db  0x00 ; '.'
0000000000220710         db  0x00 ; '.'
0000000000220711         db  0x00 ; '.'
0000000000220712         db  0x00 ; '.'
0000000000220713         db  0x00 ; '.'
0000000000220714         db  0x00 ; '.'
0000000000220715         db  0x00 ; '.'
0000000000220716         db  0x00 ; '.'
0000000000220717         db  0x00 ; '.'
0000000000220718         db  0x00 ; '.'
0000000000220719         db  0x00 ; '.'
000000000022071a         db  0x00 ; '.'
000000000022071b         db  0x00 ; '.'
000000000022071c         db  0x00 ; '.'
000000000022071d         db  0x00 ; '.'
000000000022071e         db  0x00 ; '.'
000000000022071f         db  0x00 ; '.'
0000000000220720         db  0x00 ; '.'
0000000000220721         db  0x00 ; '.'
0000000000220722         db  0x00 ; '.'
0000000000220723         db  0x00 ; '.'
0000000000220724         db  0x00 ; '.'
0000000000220725         db  0x00 ; '.'
0000000000220726         db  0x00 ; '.'
0000000000220727         db  0x00 ; '.'
0000000000220728         db  0x00 ; '.'
0000000000220729         db  0x00 ; '.'
000000000022072a         db  0x00 ; '.'
000000000022072b         db  0x00 ; '.'
000000000022072c         db  0x00 ; '.'
000000000022072d         db  0x00 ; '.'
000000000022072e         db  0x00 ; '.'
000000000022072f         db  0x00 ; '.'
0000000000220730         db  0x00 ; '.'
0000000000220731         db  0x00 ; '.'
0000000000220732         db  0x00 ; '.'
0000000000220733         db  0x00 ; '.'
0000000000220734         db  0x00 ; '.'
0000000000220735         db  0x00 ; '.'
0000000000220736         db  0x00 ; '.'
0000000000220737         db  0x00 ; '.'
0000000000220738         db  0x00 ; '.'
0000000000220739         db  0x00 ; '.'
000000000022073a         db  0x00 ; '.'
000000000022073b         db  0x00 ; '.'
000000000022073c         db  0x00 ; '.'
000000000022073d         db  0x00 ; '.'
000000000022073e         db  0x00 ; '.'
000000000022073f         db  0x00 ; '.'
0000000000220740         db  0x00 ; '.'
0000000000220741         db  0x00 ; '.'
0000000000220742         db  0x00 ; '.'
0000000000220743         db  0x00 ; '.'
0000000000220744         db  0x00 ; '.'
0000000000220745         db  0x00 ; '.'
0000000000220746         db  0x00 ; '.'
0000000000220747         db  0x00 ; '.'
0000000000220748         db  0x00 ; '.'
0000000000220749         db  0x00 ; '.'
000000000022074a         db  0x00 ; '.'
000000000022074b         db  0x00 ; '.'
000000000022074c         db  0x00 ; '.'
000000000022074d         db  0x00 ; '.'
000000000022074e         db  0x00 ; '.'
000000000022074f         db  0x00 ; '.'
0000000000220750         db  0x00 ; '.'
0000000000220751         db  0x00 ; '.'
0000000000220752         db  0x00 ; '.'
0000000000220753         db  0x00 ; '.'
0000000000220754         db  0x00 ; '.'
0000000000220755         db  0x00 ; '.'
0000000000220756         db  0x00 ; '.'
0000000000220757         db  0x00 ; '.'
0000000000220758         db  0x00 ; '.'
0000000000220759         db  0x00 ; '.'
000000000022075a         db  0x00 ; '.'
000000000022075b         db  0x00 ; '.'
000000000022075c         db  0x00 ; '.'
000000000022075d         db  0x00 ; '.'
000000000022075e         db  0x00 ; '.'
000000000022075f         db  0x00 ; '.'
0000000000220760         db  0x00 ; '.'
0000000000220761         db  0x00 ; '.'
0000000000220762         db  0x00 ; '.'
0000000000220763         db  0x00 ; '.'
0000000000220764         db  0x00 ; '.'
0000000000220765         db  0x00 ; '.'
0000000000220766         db  0x00 ; '.'
0000000000220767         db  0x00 ; '.'
0000000000220768         db  0x00 ; '.'
0000000000220769         db  0x00 ; '.'
000000000022076a         db  0x00 ; '.'
000000000022076b         db  0x00 ; '.'
000000000022076c         db  0x00 ; '.'
000000000022076d         db  0x00 ; '.'
000000000022076e         db  0x00 ; '.'
000000000022076f         db  0x00 ; '.'
0000000000220770         db  0x00 ; '.'
0000000000220771         db  0x00 ; '.'
0000000000220772         db  0x00 ; '.'
0000000000220773         db  0x00 ; '.'
0000000000220774         db  0x00 ; '.'
0000000000220775         db  0x00 ; '.'
0000000000220776         db  0x00 ; '.'
0000000000220777         db  0x00 ; '.'
0000000000220778         db  0x00 ; '.'
0000000000220779         db  0x00 ; '.'
000000000022077a         db  0x00 ; '.'
000000000022077b         db  0x00 ; '.'
000000000022077c         db  0x00 ; '.'
000000000022077d         db  0x00 ; '.'
000000000022077e         db  0x00 ; '.'
000000000022077f         db  0x00 ; '.'
0000000000220780         db  0x00 ; '.'
0000000000220781         db  0x00 ; '.'
0000000000220782         db  0x00 ; '.'
0000000000220783         db  0x00 ; '.'
0000000000220784         db  0x00 ; '.'
0000000000220785         db  0x00 ; '.'
0000000000220786         db  0x00 ; '.'
0000000000220787         db  0x00 ; '.'
0000000000220788         db  0x00 ; '.'
0000000000220789         db  0x00 ; '.'
000000000022078a         db  0x00 ; '.'
000000000022078b         db  0x00 ; '.'
000000000022078c         db  0x00 ; '.'
000000000022078d         db  0x00 ; '.'
000000000022078e         db  0x00 ; '.'
000000000022078f         db  0x00 ; '.'
0000000000220790         db  0x00 ; '.'
0000000000220791         db  0x00 ; '.'
0000000000220792         db  0x00 ; '.'
0000000000220793         db  0x00 ; '.'
0000000000220794         db  0x00 ; '.'
0000000000220795         db  0x00 ; '.'
0000000000220796         db  0x00 ; '.'
0000000000220797         db  0x00 ; '.'
0000000000220798         db  0x00 ; '.'
0000000000220799         db  0x00 ; '.'
000000000022079a         db  0x00 ; '.'
000000000022079b         db  0x00 ; '.'
000000000022079c         db  0x00 ; '.'
000000000022079d         db  0x00 ; '.'
000000000022079e         db  0x00 ; '.'
000000000022079f         db  0x00 ; '.'
00000000002207a0         db  0x00 ; '.'
00000000002207a1         db  0x00 ; '.'
00000000002207a2         db  0x00 ; '.'
00000000002207a3         db  0x00 ; '.'
00000000002207a4         db  0x00 ; '.'
00000000002207a5         db  0x00 ; '.'
00000000002207a6         db  0x00 ; '.'
00000000002207a7         db  0x00 ; '.'
00000000002207a8         db  0x00 ; '.'
00000000002207a9         db  0x00 ; '.'
00000000002207aa         db  0x00 ; '.'
00000000002207ab         db  0x00 ; '.'
00000000002207ac         db  0x00 ; '.'
00000000002207ad         db  0x00 ; '.'
00000000002207ae         db  0x00 ; '.'
00000000002207af         db  0x00 ; '.'
00000000002207b0         db  0x00 ; '.'
00000000002207b1         db  0x00 ; '.'
00000000002207b2         db  0x00 ; '.'
00000000002207b3         db  0x00 ; '.'
00000000002207b4         db  0x00 ; '.'
00000000002207b5         db  0x00 ; '.'
00000000002207b6         db  0x00 ; '.'
00000000002207b7         db  0x00 ; '.'
00000000002207b8         db  0x00 ; '.'
00000000002207b9         db  0x00 ; '.'
00000000002207ba         db  0x00 ; '.'
00000000002207bb         db  0x00 ; '.'
00000000002207bc         db  0x00 ; '.'
00000000002207bd         db  0x00 ; '.'
00000000002207be         db  0x00 ; '.'
00000000002207bf         db  0x00 ; '.'
00000000002207c0         db  0x00 ; '.'
00000000002207c1         db  0x00 ; '.'
00000000002207c2         db  0x00 ; '.'
00000000002207c3         db  0x00 ; '.'
00000000002207c4         db  0x00 ; '.'
00000000002207c5         db  0x00 ; '.'
00000000002207c6         db  0x00 ; '.'
00000000002207c7         db  0x00 ; '.'
00000000002207c8         db  0x00 ; '.'
00000000002207c9         db  0x00 ; '.'
00000000002207ca         db  0x00 ; '.'
00000000002207cb         db  0x00 ; '.'
00000000002207cc         db  0x00 ; '.'
00000000002207cd         db  0x00 ; '.'
00000000002207ce         db  0x00 ; '.'
00000000002207cf         db  0x00 ; '.'
00000000002207d0         db  0x00 ; '.'
00000000002207d1         db  0x00 ; '.'
00000000002207d2         db  0x00 ; '.'
00000000002207d3         db  0x00 ; '.'
00000000002207d4         db  0x00 ; '.'
00000000002207d5         db  0x00 ; '.'
00000000002207d6         db  0x00 ; '.'
00000000002207d7         db  0x00 ; '.'
00000000002207d8         db  0x00 ; '.'
00000000002207d9         db  0x00 ; '.'
00000000002207da         db  0x00 ; '.'
00000000002207db         db  0x00 ; '.'
00000000002207dc         db  0x00 ; '.'
00000000002207dd         db  0x00 ; '.'
00000000002207de         db  0x00 ; '.'
00000000002207df         db  0x00 ; '.'
00000000002207e0         db  0x00 ; '.'
00000000002207e1         db  0x00 ; '.'
00000000002207e2         db  0x00 ; '.'
00000000002207e3         db  0x00 ; '.'
00000000002207e4         db  0x00 ; '.'
00000000002207e5         db  0x00 ; '.'
00000000002207e6         db  0x00 ; '.'
00000000002207e7         db  0x00 ; '.'
00000000002207e8         db  0x00 ; '.'
00000000002207e9         db  0x00 ; '.'
00000000002207ea         db  0x00 ; '.'
00000000002207eb         db  0x00 ; '.'
00000000002207ec         db  0x00 ; '.'
00000000002207ed         db  0x00 ; '.'
00000000002207ee         db  0x00 ; '.'
00000000002207ef         db  0x00 ; '.'
00000000002207f0         db  0x00 ; '.'
00000000002207f1         db  0x00 ; '.'
00000000002207f2         db  0x00 ; '.'
00000000002207f3         db  0x00 ; '.'
00000000002207f4         db  0x00 ; '.'
00000000002207f5         db  0x00 ; '.'
00000000002207f6         db  0x00 ; '.'
00000000002207f7         db  0x00 ; '.'
00000000002207f8         db  0x00 ; '.'
00000000002207f9         db  0x00 ; '.'
00000000002207fa         db  0x00 ; '.'
00000000002207fb         db  0x00 ; '.'
00000000002207fc         db  0x00 ; '.'
00000000002207fd         db  0x00 ; '.'
00000000002207fe         db  0x00 ; '.'
00000000002207ff         db  0x00 ; '.'
0000000000220800         db  0x00 ; '.'
0000000000220801         db  0x00 ; '.'
0000000000220802         db  0x00 ; '.'
0000000000220803         db  0x00 ; '.'
0000000000220804         db  0x00 ; '.'
0000000000220805         db  0x00 ; '.'
0000000000220806         db  0x00 ; '.'
0000000000220807         db  0x00 ; '.'
0000000000220808         db  0x00 ; '.'
0000000000220809         db  0x00 ; '.'
000000000022080a         db  0x00 ; '.'
000000000022080b         db  0x00 ; '.'
000000000022080c         db  0x00 ; '.'
000000000022080d         db  0x00 ; '.'
000000000022080e         db  0x00 ; '.'
000000000022080f         db  0x00 ; '.'
0000000000220810         db  0x00 ; '.'
0000000000220811         db  0x00 ; '.'
0000000000220812         db  0x00 ; '.'
0000000000220813         db  0x00 ; '.'
0000000000220814         db  0x00 ; '.'
0000000000220815         db  0x00 ; '.'
0000000000220816         db  0x00 ; '.'
0000000000220817         db  0x00 ; '.'
0000000000220818         db  0x00 ; '.'
0000000000220819         db  0x00 ; '.'
000000000022081a         db  0x00 ; '.'
000000000022081b         db  0x00 ; '.'
000000000022081c         db  0x00 ; '.'
000000000022081d         db  0x00 ; '.'
000000000022081e         db  0x00 ; '.'
000000000022081f         db  0x00 ; '.'
0000000000220820         db  0x00 ; '.'
0000000000220821         db  0x00 ; '.'
0000000000220822         db  0x00 ; '.'
0000000000220823         db  0x00 ; '.'
0000000000220824         db  0x00 ; '.'
0000000000220825         db  0x00 ; '.'
0000000000220826         db  0x00 ; '.'
0000000000220827         db  0x00 ; '.'
0000000000220828         db  0x00 ; '.'
0000000000220829         db  0x00 ; '.'
000000000022082a         db  0x00 ; '.'
000000000022082b         db  0x00 ; '.'
000000000022082c         db  0x00 ; '.'
000000000022082d         db  0x00 ; '.'
000000000022082e         db  0x00 ; '.'
000000000022082f         db  0x00 ; '.'
0000000000220830         db  0x00 ; '.'
0000000000220831         db  0x00 ; '.'
0000000000220832         db  0x00 ; '.'
0000000000220833         db  0x00 ; '.'
0000000000220834         db  0x00 ; '.'
0000000000220835         db  0x00 ; '.'
0000000000220836         db  0x00 ; '.'
0000000000220837         db  0x00 ; '.'
0000000000220838         db  0x00 ; '.'
0000000000220839         db  0x00 ; '.'
000000000022083a         db  0x00 ; '.'
000000000022083b         db  0x00 ; '.'
000000000022083c         db  0x00 ; '.'
000000000022083d         db  0x00 ; '.'
000000000022083e         db  0x00 ; '.'
000000000022083f         db  0x00 ; '.'
0000000000220840         db  0x00 ; '.'
0000000000220841         db  0x00 ; '.'
0000000000220842         db  0x00 ; '.'
0000000000220843         db  0x00 ; '.'
0000000000220844         db  0x00 ; '.'
0000000000220845         db  0x00 ; '.'
0000000000220846         db  0x00 ; '.'
0000000000220847         db  0x00 ; '.'
0000000000220848         db  0x00 ; '.'
0000000000220849         db  0x00 ; '.'
000000000022084a         db  0x00 ; '.'
000000000022084b         db  0x00 ; '.'
000000000022084c         db  0x00 ; '.'
000000000022084d         db  0x00 ; '.'
000000000022084e         db  0x00 ; '.'
000000000022084f         db  0x00 ; '.'
0000000000220850         db  0x00 ; '.'
0000000000220851         db  0x00 ; '.'
0000000000220852         db  0x00 ; '.'
0000000000220853         db  0x00 ; '.'
0000000000220854         db  0x00 ; '.'
0000000000220855         db  0x00 ; '.'
0000000000220856         db  0x00 ; '.'
0000000000220857         db  0x00 ; '.'
0000000000220858         db  0x00 ; '.'
0000000000220859         db  0x00 ; '.'
000000000022085a         db  0x00 ; '.'
000000000022085b         db  0x00 ; '.'
000000000022085c         db  0x00 ; '.'
000000000022085d         db  0x00 ; '.'
000000000022085e         db  0x00 ; '.'
000000000022085f         db  0x00 ; '.'
0000000000220860         db  0x00 ; '.'
0000000000220861         db  0x00 ; '.'
0000000000220862         db  0x00 ; '.'
0000000000220863         db  0x00 ; '.'
0000000000220864         db  0x00 ; '.'
0000000000220865         db  0x00 ; '.'
0000000000220866         db  0x00 ; '.'
0000000000220867         db  0x00 ; '.'
0000000000220868         db  0x00 ; '.'
0000000000220869         db  0x00 ; '.'
000000000022086a         db  0x00 ; '.'
000000000022086b         db  0x00 ; '.'
000000000022086c         db  0x00 ; '.'
000000000022086d         db  0x00 ; '.'
000000000022086e         db  0x00 ; '.'
000000000022086f         db  0x00 ; '.'
0000000000220870         db  0x00 ; '.'
0000000000220871         db  0x00 ; '.'
0000000000220872         db  0x00 ; '.'
0000000000220873         db  0x00 ; '.'
0000000000220874         db  0x00 ; '.'
0000000000220875         db  0x00 ; '.'
0000000000220876         db  0x00 ; '.'
0000000000220877         db  0x00 ; '.'
0000000000220878         db  0x00 ; '.'
0000000000220879         db  0x00 ; '.'
000000000022087a         db  0x00 ; '.'
000000000022087b         db  0x00 ; '.'
000000000022087c         db  0x00 ; '.'
000000000022087d         db  0x00 ; '.'
000000000022087e         db  0x00 ; '.'
000000000022087f         db  0x00 ; '.'
0000000000220880         db  0x00 ; '.'
0000000000220881         db  0x00 ; '.'
0000000000220882         db  0x00 ; '.'
0000000000220883         db  0x00 ; '.'
0000000000220884         db  0x00 ; '.'
0000000000220885         db  0x00 ; '.'
0000000000220886         db  0x00 ; '.'
0000000000220887         db  0x00 ; '.'
0000000000220888         db  0x00 ; '.'
0000000000220889         db  0x00 ; '.'
000000000022088a         db  0x00 ; '.'
000000000022088b         db  0x00 ; '.'
000000000022088c         db  0x00 ; '.'
000000000022088d         db  0x00 ; '.'
000000000022088e         db  0x00 ; '.'
000000000022088f         db  0x00 ; '.'
0000000000220890         db  0x00 ; '.'
0000000000220891         db  0x00 ; '.'
0000000000220892         db  0x00 ; '.'
0000000000220893         db  0x00 ; '.'
0000000000220894         db  0x00 ; '.'
0000000000220895         db  0x00 ; '.'
0000000000220896         db  0x00 ; '.'
0000000000220897         db  0x00 ; '.'
0000000000220898         db  0x00 ; '.'
0000000000220899         db  0x00 ; '.'
000000000022089a         db  0x00 ; '.'
000000000022089b         db  0x00 ; '.'
000000000022089c         db  0x00 ; '.'
000000000022089d         db  0x00 ; '.'
000000000022089e         db  0x00 ; '.'
000000000022089f         db  0x00 ; '.'
00000000002208a0         db  0x00 ; '.'
00000000002208a1         db  0x00 ; '.'
00000000002208a2         db  0x00 ; '.'
00000000002208a3         db  0x00 ; '.'
00000000002208a4         db  0x00 ; '.'
00000000002208a5         db  0x00 ; '.'
00000000002208a6         db  0x00 ; '.'
00000000002208a7         db  0x00 ; '.'
00000000002208a8         db  0x00 ; '.'
00000000002208a9         db  0x00 ; '.'
00000000002208aa         db  0x00 ; '.'
00000000002208ab         db  0x00 ; '.'
00000000002208ac         db  0x00 ; '.'
00000000002208ad         db  0x00 ; '.'
00000000002208ae         db  0x00 ; '.'
00000000002208af         db  0x00 ; '.'
00000000002208b0         db  0x00 ; '.'
00000000002208b1         db  0x00 ; '.'
00000000002208b2         db  0x00 ; '.'
00000000002208b3         db  0x00 ; '.'
00000000002208b4         db  0x00 ; '.'
00000000002208b5         db  0x00 ; '.'
00000000002208b6         db  0x00 ; '.'
00000000002208b7         db  0x00 ; '.'
00000000002208b8         db  0x00 ; '.'
00000000002208b9         db  0x00 ; '.'
00000000002208ba         db  0x00 ; '.'
00000000002208bb         db  0x00 ; '.'
00000000002208bc         db  0x00 ; '.'
00000000002208bd         db  0x00 ; '.'
00000000002208be         db  0x00 ; '.'
00000000002208bf         db  0x00 ; '.'
00000000002208c0         db  0x00 ; '.'
00000000002208c1         db  0x00 ; '.'
00000000002208c2         db  0x00 ; '.'
00000000002208c3         db  0x00 ; '.'
00000000002208c4         db  0x00 ; '.'
00000000002208c5         db  0x00 ; '.'
00000000002208c6         db  0x00 ; '.'
00000000002208c7         db  0x00 ; '.'
00000000002208c8         db  0x00 ; '.'
00000000002208c9         db  0x00 ; '.'
00000000002208ca         db  0x00 ; '.'
00000000002208cb         db  0x00 ; '.'
00000000002208cc         db  0x00 ; '.'
00000000002208cd         db  0x00 ; '.'
00000000002208ce         db  0x00 ; '.'
00000000002208cf         db  0x00 ; '.'
00000000002208d0         db  0x00 ; '.'
00000000002208d1         db  0x00 ; '.'
00000000002208d2         db  0x00 ; '.'
00000000002208d3         db  0x00 ; '.'
00000000002208d4         db  0x00 ; '.'
00000000002208d5         db  0x00 ; '.'
00000000002208d6         db  0x00 ; '.'
00000000002208d7         db  0x00 ; '.'
00000000002208d8         db  0x00 ; '.'
00000000002208d9         db  0x00 ; '.'
00000000002208da         db  0x00 ; '.'
00000000002208db         db  0x00 ; '.'
00000000002208dc         db  0x00 ; '.'
00000000002208dd         db  0x00 ; '.'
00000000002208de         db  0x00 ; '.'
00000000002208df         db  0x00 ; '.'
00000000002208e0         db  0x00 ; '.'
00000000002208e1         db  0x00 ; '.'
00000000002208e2         db  0x00 ; '.'
00000000002208e3         db  0x00 ; '.'
00000000002208e4         db  0x00 ; '.'
00000000002208e5         db  0x00 ; '.'
00000000002208e6         db  0x00 ; '.'
00000000002208e7         db  0x00 ; '.'
00000000002208e8         db  0x00 ; '.'
00000000002208e9         db  0x00 ; '.'
00000000002208ea         db  0x00 ; '.'
00000000002208eb         db  0x00 ; '.'
00000000002208ec         db  0x00 ; '.'
00000000002208ed         db  0x00 ; '.'
00000000002208ee         db  0x00 ; '.'
00000000002208ef         db  0x00 ; '.'
00000000002208f0         db  0x00 ; '.'
00000000002208f1         db  0x00 ; '.'
00000000002208f2         db  0x00 ; '.'
00000000002208f3         db  0x00 ; '.'
00000000002208f4         db  0x00 ; '.'
00000000002208f5         db  0x00 ; '.'
00000000002208f6         db  0x00 ; '.'
00000000002208f7         db  0x00 ; '.'
00000000002208f8         db  0x00 ; '.'
00000000002208f9         db  0x00 ; '.'
00000000002208fa         db  0x00 ; '.'
00000000002208fb         db  0x00 ; '.'
00000000002208fc         db  0x00 ; '.'
00000000002208fd         db  0x00 ; '.'
00000000002208fe         db  0x00 ; '.'
00000000002208ff         db  0x00 ; '.'
0000000000220900         db  0x00 ; '.'
0000000000220901         db  0x00 ; '.'
0000000000220902         db  0x00 ; '.'
0000000000220903         db  0x00 ; '.'
0000000000220904         db  0x00 ; '.'
0000000000220905         db  0x00 ; '.'
0000000000220906         db  0x00 ; '.'
0000000000220907         db  0x00 ; '.'
0000000000220908         db  0x00 ; '.'
0000000000220909         db  0x00 ; '.'
000000000022090a         db  0x00 ; '.'
000000000022090b         db  0x00 ; '.'
000000000022090c         db  0x00 ; '.'
000000000022090d         db  0x00 ; '.'
000000000022090e         db  0x00 ; '.'
000000000022090f         db  0x00 ; '.'
0000000000220910         db  0x00 ; '.'
0000000000220911         db  0x00 ; '.'
0000000000220912         db  0x00 ; '.'
0000000000220913         db  0x00 ; '.'
0000000000220914         db  0x00 ; '.'
0000000000220915         db  0x00 ; '.'
0000000000220916         db  0x00 ; '.'
0000000000220917         db  0x00 ; '.'
0000000000220918         db  0x00 ; '.'
0000000000220919         db  0x00 ; '.'
000000000022091a         db  0x00 ; '.'
000000000022091b         db  0x00 ; '.'
000000000022091c         db  0x00 ; '.'
000000000022091d         db  0x00 ; '.'
000000000022091e         db  0x00 ; '.'
000000000022091f         db  0x00 ; '.'
0000000000220920         db  0x00 ; '.'
0000000000220921         db  0x00 ; '.'
0000000000220922         db  0x00 ; '.'
0000000000220923         db  0x00 ; '.'
0000000000220924         db  0x00 ; '.'
0000000000220925         db  0x00 ; '.'
0000000000220926         db  0x00 ; '.'
0000000000220927         db  0x00 ; '.'
0000000000220928         db  0x00 ; '.'
0000000000220929         db  0x00 ; '.'
000000000022092a         db  0x00 ; '.'
000000000022092b         db  0x00 ; '.'
000000000022092c         db  0x00 ; '.'
000000000022092d         db  0x00 ; '.'
000000000022092e         db  0x00 ; '.'
000000000022092f         db  0x00 ; '.'
0000000000220930         db  0x00 ; '.'
0000000000220931         db  0x00 ; '.'
0000000000220932         db  0x00 ; '.'
0000000000220933         db  0x00 ; '.'
0000000000220934         db  0x00 ; '.'
0000000000220935         db  0x00 ; '.'
0000000000220936         db  0x00 ; '.'
0000000000220937         db  0x00 ; '.'
0000000000220938         db  0x00 ; '.'
0000000000220939         db  0x00 ; '.'
000000000022093a         db  0x00 ; '.'
000000000022093b         db  0x00 ; '.'
000000000022093c         db  0x00 ; '.'
000000000022093d         db  0x00 ; '.'
000000000022093e         db  0x00 ; '.'
000000000022093f         db  0x00 ; '.'
0000000000220940         db  0x00 ; '.'
0000000000220941         db  0x00 ; '.'
0000000000220942         db  0x00 ; '.'
0000000000220943         db  0x00 ; '.'
0000000000220944         db  0x00 ; '.'
0000000000220945         db  0x00 ; '.'
0000000000220946         db  0x00 ; '.'
0000000000220947         db  0x00 ; '.'
0000000000220948         db  0x00 ; '.'
0000000000220949         db  0x00 ; '.'
000000000022094a         db  0x00 ; '.'
000000000022094b         db  0x00 ; '.'
000000000022094c         db  0x00 ; '.'
000000000022094d         db  0x00 ; '.'
000000000022094e         db  0x00 ; '.'
000000000022094f         db  0x00 ; '.'
0000000000220950         db  0x00 ; '.'
0000000000220951         db  0x00 ; '.'
0000000000220952         db  0x00 ; '.'
0000000000220953         db  0x00 ; '.'
0000000000220954         db  0x00 ; '.'
0000000000220955         db  0x00 ; '.'
0000000000220956         db  0x00 ; '.'
0000000000220957         db  0x00 ; '.'
0000000000220958         db  0x00 ; '.'
0000000000220959         db  0x00 ; '.'
000000000022095a         db  0x00 ; '.'
000000000022095b         db  0x00 ; '.'
000000000022095c         db  0x00 ; '.'
000000000022095d         db  0x00 ; '.'
000000000022095e         db  0x00 ; '.'
000000000022095f         db  0x00 ; '.'
0000000000220960         db  0x00 ; '.'
0000000000220961         db  0x00 ; '.'
0000000000220962         db  0x00 ; '.'
0000000000220963         db  0x00 ; '.'
0000000000220964         db  0x00 ; '.'
0000000000220965         db  0x00 ; '.'
0000000000220966         db  0x00 ; '.'
0000000000220967         db  0x00 ; '.'
0000000000220968         db  0x00 ; '.'
0000000000220969         db  0x00 ; '.'
000000000022096a         db  0x00 ; '.'
000000000022096b         db  0x00 ; '.'
000000000022096c         db  0x00 ; '.'
000000000022096d         db  0x00 ; '.'
000000000022096e         db  0x00 ; '.'
000000000022096f         db  0x00 ; '.'
0000000000220970         db  0x00 ; '.'
0000000000220971         db  0x00 ; '.'
0000000000220972         db  0x00 ; '.'
0000000000220973         db  0x00 ; '.'
0000000000220974         db  0x00 ; '.'
0000000000220975         db  0x00 ; '.'
0000000000220976         db  0x00 ; '.'
0000000000220977         db  0x00 ; '.'
0000000000220978         db  0x00 ; '.'
0000000000220979         db  0x00 ; '.'
000000000022097a         db  0x00 ; '.'
000000000022097b         db  0x00 ; '.'
000000000022097c         db  0x00 ; '.'
000000000022097d         db  0x00 ; '.'
000000000022097e         db  0x00 ; '.'
000000000022097f         db  0x00 ; '.'
0000000000220980         db  0x00 ; '.'
0000000000220981         db  0x00 ; '.'
0000000000220982         db  0x00 ; '.'
0000000000220983         db  0x00 ; '.'
0000000000220984         db  0x00 ; '.'
0000000000220985         db  0x00 ; '.'
0000000000220986         db  0x00 ; '.'
0000000000220987         db  0x00 ; '.'
0000000000220988         db  0x00 ; '.'
0000000000220989         db  0x00 ; '.'
000000000022098a         db  0x00 ; '.'
000000000022098b         db  0x00 ; '.'
000000000022098c         db  0x00 ; '.'
000000000022098d         db  0x00 ; '.'
000000000022098e         db  0x00 ; '.'
000000000022098f         db  0x00 ; '.'
0000000000220990         db  0x00 ; '.'
0000000000220991         db  0x00 ; '.'
0000000000220992         db  0x00 ; '.'
0000000000220993         db  0x00 ; '.'
0000000000220994         db  0x00 ; '.'
0000000000220995         db  0x00 ; '.'
0000000000220996         db  0x00 ; '.'
0000000000220997         db  0x00 ; '.'
0000000000220998         db  0x00 ; '.'
0000000000220999         db  0x00 ; '.'
000000000022099a         db  0x00 ; '.'
000000000022099b         db  0x00 ; '.'
000000000022099c         db  0x00 ; '.'
000000000022099d         db  0x00 ; '.'
000000000022099e         db  0x00 ; '.'
000000000022099f         db  0x00 ; '.'
00000000002209a0         db  0x00 ; '.'
00000000002209a1         db  0x00 ; '.'
00000000002209a2         db  0x00 ; '.'
00000000002209a3         db  0x00 ; '.'
00000000002209a4         db  0x00 ; '.'
00000000002209a5         db  0x00 ; '.'
00000000002209a6         db  0x00 ; '.'
00000000002209a7         db  0x00 ; '.'
00000000002209a8         db  0x00 ; '.'
00000000002209a9         db  0x00 ; '.'
00000000002209aa         db  0x00 ; '.'
00000000002209ab         db  0x00 ; '.'
00000000002209ac         db  0x00 ; '.'
00000000002209ad         db  0x00 ; '.'
00000000002209ae         db  0x00 ; '.'
00000000002209af         db  0x00 ; '.'
00000000002209b0         db  0x00 ; '.'
00000000002209b1         db  0x00 ; '.'
00000000002209b2         db  0x00 ; '.'
00000000002209b3         db  0x00 ; '.'
00000000002209b4         db  0x00 ; '.'
00000000002209b5         db  0x00 ; '.'
00000000002209b6         db  0x00 ; '.'
00000000002209b7         db  0x00 ; '.'
00000000002209b8         db  0x00 ; '.'
00000000002209b9         db  0x00 ; '.'
00000000002209ba         db  0x00 ; '.'
00000000002209bb         db  0x00 ; '.'
00000000002209bc         db  0x00 ; '.'
00000000002209bd         db  0x00 ; '.'
00000000002209be         db  0x00 ; '.'
00000000002209bf         db  0x00 ; '.'
00000000002209c0         db  0x00 ; '.'
00000000002209c1         db  0x00 ; '.'
00000000002209c2         db  0x00 ; '.'
00000000002209c3         db  0x00 ; '.'
00000000002209c4         db  0x00 ; '.'
00000000002209c5         db  0x00 ; '.'
00000000002209c6         db  0x00 ; '.'
00000000002209c7         db  0x00 ; '.'
00000000002209c8         db  0x00 ; '.'
00000000002209c9         db  0x00 ; '.'
00000000002209ca         db  0x00 ; '.'
00000000002209cb         db  0x00 ; '.'
00000000002209cc         db  0x00 ; '.'
00000000002209cd         db  0x00 ; '.'
00000000002209ce         db  0x00 ; '.'
00000000002209cf         db  0x00 ; '.'
00000000002209d0         db  0x00 ; '.'
00000000002209d1         db  0x00 ; '.'
00000000002209d2         db  0x00 ; '.'
00000000002209d3         db  0x00 ; '.'
00000000002209d4         db  0x00 ; '.'
00000000002209d5         db  0x00 ; '.'
00000000002209d6         db  0x00 ; '.'
00000000002209d7         db  0x00 ; '.'
00000000002209d8         db  0x00 ; '.'
00000000002209d9         db  0x00 ; '.'
00000000002209da         db  0x00 ; '.'
00000000002209db         db  0x00 ; '.'
00000000002209dc         db  0x00 ; '.'
00000000002209dd         db  0x00 ; '.'
00000000002209de         db  0x00 ; '.'
00000000002209df         db  0x00 ; '.'
00000000002209e0         db  0x00 ; '.'
00000000002209e1         db  0x00 ; '.'
00000000002209e2         db  0x00 ; '.'
00000000002209e3         db  0x00 ; '.'
00000000002209e4         db  0x00 ; '.'
00000000002209e5         db  0x00 ; '.'
00000000002209e6         db  0x00 ; '.'
00000000002209e7         db  0x00 ; '.'
00000000002209e8         db  0x00 ; '.'
00000000002209e9         db  0x00 ; '.'
00000000002209ea         db  0x00 ; '.'
00000000002209eb         db  0x00 ; '.'
00000000002209ec         db  0x00 ; '.'
00000000002209ed         db  0x00 ; '.'
00000000002209ee         db  0x00 ; '.'
00000000002209ef         db  0x00 ; '.'
00000000002209f0         db  0x00 ; '.'
00000000002209f1         db  0x00 ; '.'
00000000002209f2         db  0x00 ; '.'
00000000002209f3         db  0x00 ; '.'
00000000002209f4         db  0x00 ; '.'
00000000002209f5         db  0x00 ; '.'
00000000002209f6         db  0x00 ; '.'
00000000002209f7         db  0x00 ; '.'
00000000002209f8         db  0x00 ; '.'
00000000002209f9         db  0x00 ; '.'
00000000002209fa         db  0x00 ; '.'
00000000002209fb         db  0x00 ; '.'
00000000002209fc         db  0x00 ; '.'
00000000002209fd         db  0x00 ; '.'
00000000002209fe         db  0x00 ; '.'
00000000002209ff         db  0x00 ; '.'
0000000000220a00         db  0x00 ; '.'
0000000000220a01         db  0x00 ; '.'
0000000000220a02         db  0x00 ; '.'
0000000000220a03         db  0x00 ; '.'
0000000000220a04         db  0x00 ; '.'
0000000000220a05         db  0x00 ; '.'
0000000000220a06         db  0x00 ; '.'
0000000000220a07         db  0x00 ; '.'
0000000000220a08         db  0x00 ; '.'
0000000000220a09         db  0x00 ; '.'
0000000000220a0a         db  0x00 ; '.'
0000000000220a0b         db  0x00 ; '.'
0000000000220a0c         db  0x00 ; '.'
0000000000220a0d         db  0x00 ; '.'
0000000000220a0e         db  0x00 ; '.'
0000000000220a0f         db  0x00 ; '.'
0000000000220a10         db  0x00 ; '.'
0000000000220a11         db  0x00 ; '.'
0000000000220a12         db  0x00 ; '.'
0000000000220a13         db  0x00 ; '.'
0000000000220a14         db  0x00 ; '.'
0000000000220a15         db  0x00 ; '.'
0000000000220a16         db  0x00 ; '.'
0000000000220a17         db  0x00 ; '.'
0000000000220a18         db  0x00 ; '.'
0000000000220a19         db  0x00 ; '.'
0000000000220a1a         db  0x00 ; '.'
0000000000220a1b         db  0x00 ; '.'
0000000000220a1c         db  0x00 ; '.'
0000000000220a1d         db  0x00 ; '.'
0000000000220a1e         db  0x00 ; '.'
0000000000220a1f         db  0x00 ; '.'
0000000000220a20         db  0x00 ; '.'
0000000000220a21         db  0x00 ; '.'
0000000000220a22         db  0x00 ; '.'
0000000000220a23         db  0x00 ; '.'
0000000000220a24         db  0x00 ; '.'
0000000000220a25         db  0x00 ; '.'
0000000000220a26         db  0x00 ; '.'
0000000000220a27         db  0x00 ; '.'
0000000000220a28         db  0x00 ; '.'
0000000000220a29         db  0x00 ; '.'
0000000000220a2a         db  0x00 ; '.'
0000000000220a2b         db  0x00 ; '.'
0000000000220a2c         db  0x00 ; '.'
0000000000220a2d         db  0x00 ; '.'
0000000000220a2e         db  0x00 ; '.'
0000000000220a2f         db  0x00 ; '.'
0000000000220a30         db  0x00 ; '.'
0000000000220a31         db  0x00 ; '.'
0000000000220a32         db  0x00 ; '.'
0000000000220a33         db  0x00 ; '.'
0000000000220a34         db  0x00 ; '.'
0000000000220a35         db  0x00 ; '.'
0000000000220a36         db  0x00 ; '.'
0000000000220a37         db  0x00 ; '.'
0000000000220a38         db  0x00 ; '.'
0000000000220a39         db  0x00 ; '.'
0000000000220a3a         db  0x00 ; '.'
0000000000220a3b         db  0x00 ; '.'
0000000000220a3c         db  0x00 ; '.'
0000000000220a3d         db  0x00 ; '.'
0000000000220a3e         db  0x00 ; '.'
0000000000220a3f         db  0x00 ; '.'
0000000000220a40         db  0x00 ; '.'
0000000000220a41         db  0x00 ; '.'
0000000000220a42         db  0x00 ; '.'
0000000000220a43         db  0x00 ; '.'
0000000000220a44         db  0x00 ; '.'
0000000000220a45         db  0x00 ; '.'
0000000000220a46         db  0x00 ; '.'
0000000000220a47         db  0x00 ; '.'
0000000000220a48         db  0x00 ; '.'
0000000000220a49         db  0x00 ; '.'
0000000000220a4a         db  0x00 ; '.'
0000000000220a4b         db  0x00 ; '.'
0000000000220a4c         db  0x00 ; '.'
0000000000220a4d         db  0x00 ; '.'
0000000000220a4e         db  0x00 ; '.'
0000000000220a4f         db  0x00 ; '.'
0000000000220a50         db  0x00 ; '.'
0000000000220a51         db  0x00 ; '.'
0000000000220a52         db  0x00 ; '.'
0000000000220a53         db  0x00 ; '.'
0000000000220a54         db  0x00 ; '.'
0000000000220a55         db  0x00 ; '.'
0000000000220a56         db  0x00 ; '.'
0000000000220a57         db  0x00 ; '.'
0000000000220a58         db  0x00 ; '.'
0000000000220a59         db  0x00 ; '.'
0000000000220a5a         db  0x00 ; '.'
0000000000220a5b         db  0x00 ; '.'
0000000000220a5c         db  0x00 ; '.'
0000000000220a5d         db  0x00 ; '.'
0000000000220a5e         db  0x00 ; '.'
0000000000220a5f         db  0x00 ; '.'
0000000000220a60         db  0x00 ; '.'
0000000000220a61         db  0x00 ; '.'
0000000000220a62         db  0x00 ; '.'
0000000000220a63         db  0x00 ; '.'
0000000000220a64         db  0x00 ; '.'
0000000000220a65         db  0x00 ; '.'
0000000000220a66         db  0x00 ; '.'
0000000000220a67         db  0x00 ; '.'
0000000000220a68         db  0x00 ; '.'
0000000000220a69         db  0x00 ; '.'
0000000000220a6a         db  0x00 ; '.'
0000000000220a6b         db  0x00 ; '.'
0000000000220a6c         db  0x00 ; '.'
0000000000220a6d         db  0x00 ; '.'
0000000000220a6e         db  0x00 ; '.'
0000000000220a6f         db  0x00 ; '.'
0000000000220a70         db  0x00 ; '.'
0000000000220a71         db  0x00 ; '.'
0000000000220a72         db  0x00 ; '.'
0000000000220a73         db  0x00 ; '.'
0000000000220a74         db  0x00 ; '.'
0000000000220a75         db  0x00 ; '.'
0000000000220a76         db  0x00 ; '.'
0000000000220a77         db  0x00 ; '.'
0000000000220a78         db  0x00 ; '.'
0000000000220a79         db  0x00 ; '.'
0000000000220a7a         db  0x00 ; '.'
0000000000220a7b         db  0x00 ; '.'
0000000000220a7c         db  0x00 ; '.'
0000000000220a7d         db  0x00 ; '.'
0000000000220a7e         db  0x00 ; '.'
0000000000220a7f         db  0x00 ; '.'
0000000000220a80         db  0x00 ; '.'
0000000000220a81         db  0x00 ; '.'
0000000000220a82         db  0x00 ; '.'
0000000000220a83         db  0x00 ; '.'
0000000000220a84         db  0x00 ; '.'
0000000000220a85         db  0x00 ; '.'
0000000000220a86         db  0x00 ; '.'
0000000000220a87         db  0x00 ; '.'
0000000000220a88         db  0x00 ; '.'
0000000000220a89         db  0x00 ; '.'
0000000000220a8a         db  0x00 ; '.'
0000000000220a8b         db  0x00 ; '.'
0000000000220a8c         db  0x00 ; '.'
0000000000220a8d         db  0x00 ; '.'
0000000000220a8e         db  0x00 ; '.'
0000000000220a8f         db  0x00 ; '.'
0000000000220a90         db  0x00 ; '.'
0000000000220a91         db  0x00 ; '.'
0000000000220a92         db  0x00 ; '.'
0000000000220a93         db  0x00 ; '.'
0000000000220a94         db  0x00 ; '.'
0000000000220a95         db  0x00 ; '.'
0000000000220a96         db  0x00 ; '.'
0000000000220a97         db  0x00 ; '.'
0000000000220a98         db  0x00 ; '.'
0000000000220a99         db  0x00 ; '.'
0000000000220a9a         db  0x00 ; '.'
0000000000220a9b         db  0x00 ; '.'
0000000000220a9c         db  0x00 ; '.'
0000000000220a9d         db  0x00 ; '.'
0000000000220a9e         db  0x00 ; '.'
0000000000220a9f         db  0x00 ; '.'
0000000000220aa0         db  0x00 ; '.'
0000000000220aa1         db  0x00 ; '.'
0000000000220aa2         db  0x00 ; '.'
0000000000220aa3         db  0x00 ; '.'
0000000000220aa4         db  0x00 ; '.'
0000000000220aa5         db  0x00 ; '.'
0000000000220aa6         db  0x00 ; '.'
0000000000220aa7         db  0x00 ; '.'
0000000000220aa8         db  0x00 ; '.'
0000000000220aa9         db  0x00 ; '.'
0000000000220aaa         db  0x00 ; '.'
0000000000220aab         db  0x00 ; '.'
0000000000220aac         db  0x00 ; '.'
0000000000220aad         db  0x00 ; '.'
0000000000220aae         db  0x00 ; '.'
0000000000220aaf         db  0x00 ; '.'
0000000000220ab0         db  0x00 ; '.'
0000000000220ab1         db  0x00 ; '.'
0000000000220ab2         db  0x00 ; '.'
0000000000220ab3         db  0x00 ; '.'
0000000000220ab4         db  0x00 ; '.'
0000000000220ab5         db  0x00 ; '.'
0000000000220ab6         db  0x00 ; '.'
0000000000220ab7         db  0x00 ; '.'
0000000000220ab8         db  0x00 ; '.'
0000000000220ab9         db  0x00 ; '.'
0000000000220aba         db  0x00 ; '.'
0000000000220abb         db  0x00 ; '.'
0000000000220abc         db  0x00 ; '.'
0000000000220abd         db  0x00 ; '.'
0000000000220abe         db  0x00 ; '.'
0000000000220abf         db  0x00 ; '.'
0000000000220ac0         db  0x00 ; '.'
0000000000220ac1         db  0x00 ; '.'
0000000000220ac2         db  0x00 ; '.'
0000000000220ac3         db  0x00 ; '.'
0000000000220ac4         db  0x00 ; '.'
0000000000220ac5         db  0x00 ; '.'
0000000000220ac6         db  0x00 ; '.'
0000000000220ac7         db  0x00 ; '.'
0000000000220ac8         db  0x00 ; '.'
0000000000220ac9         db  0x00 ; '.'
0000000000220aca         db  0x00 ; '.'
0000000000220acb         db  0x00 ; '.'
0000000000220acc         db  0x00 ; '.'
0000000000220acd         db  0x00 ; '.'
0000000000220ace         db  0x00 ; '.'
0000000000220acf         db  0x00 ; '.'
0000000000220ad0         db  0x00 ; '.'
0000000000220ad1         db  0x00 ; '.'
0000000000220ad2         db  0x00 ; '.'
0000000000220ad3         db  0x00 ; '.'
0000000000220ad4         db  0x00 ; '.'
0000000000220ad5         db  0x00 ; '.'
0000000000220ad6         db  0x00 ; '.'
0000000000220ad7         db  0x00 ; '.'
0000000000220ad8         db  0x00 ; '.'
0000000000220ad9         db  0x00 ; '.'
0000000000220ada         db  0x00 ; '.'
0000000000220adb         db  0x00 ; '.'
0000000000220adc         db  0x00 ; '.'
0000000000220add         db  0x00 ; '.'
0000000000220ade         db  0x00 ; '.'
0000000000220adf         db  0x00 ; '.'
0000000000220ae0         db  0x00 ; '.'
0000000000220ae1         db  0x00 ; '.'
0000000000220ae2         db  0x00 ; '.'
0000000000220ae3         db  0x00 ; '.'
0000000000220ae4         db  0x00 ; '.'
0000000000220ae5         db  0x00 ; '.'
0000000000220ae6         db  0x00 ; '.'
0000000000220ae7         db  0x00 ; '.'
0000000000220ae8         db  0x00 ; '.'
0000000000220ae9         db  0x00 ; '.'
0000000000220aea         db  0x00 ; '.'
0000000000220aeb         db  0x00 ; '.'
0000000000220aec         db  0x00 ; '.'
0000000000220aed         db  0x00 ; '.'
0000000000220aee         db  0x00 ; '.'
0000000000220aef         db  0x00 ; '.'
0000000000220af0         db  0x00 ; '.'
0000000000220af1         db  0x00 ; '.'
0000000000220af2         db  0x00 ; '.'
0000000000220af3         db  0x00 ; '.'
0000000000220af4         db  0x00 ; '.'
0000000000220af5         db  0x00 ; '.'
0000000000220af6         db  0x00 ; '.'
0000000000220af7         db  0x00 ; '.'
0000000000220af8         db  0x00 ; '.'
0000000000220af9         db  0x00 ; '.'
0000000000220afa         db  0x00 ; '.'
0000000000220afb         db  0x00 ; '.'
0000000000220afc         db  0x00 ; '.'
0000000000220afd         db  0x00 ; '.'
0000000000220afe         db  0x00 ; '.'
0000000000220aff         db  0x00 ; '.'
0000000000220b00         db  0x00 ; '.'
0000000000220b01         db  0x00 ; '.'
0000000000220b02         db  0x00 ; '.'
0000000000220b03         db  0x00 ; '.'
0000000000220b04         db  0x00 ; '.'
0000000000220b05         db  0x00 ; '.'
0000000000220b06         db  0x00 ; '.'
0000000000220b07         db  0x00 ; '.'
0000000000220b08         db  0x00 ; '.'
0000000000220b09         db  0x00 ; '.'
0000000000220b0a         db  0x00 ; '.'
0000000000220b0b         db  0x00 ; '.'
0000000000220b0c         db  0x00 ; '.'
0000000000220b0d         db  0x00 ; '.'
0000000000220b0e         db  0x00 ; '.'
0000000000220b0f         db  0x00 ; '.'
0000000000220b10         db  0x00 ; '.'
0000000000220b11         db  0x00 ; '.'
0000000000220b12         db  0x00 ; '.'
0000000000220b13         db  0x00 ; '.'
0000000000220b14         db  0x00 ; '.'
0000000000220b15         db  0x00 ; '.'
0000000000220b16         db  0x00 ; '.'
0000000000220b17         db  0x00 ; '.'
0000000000220b18         db  0x00 ; '.'
0000000000220b19         db  0x00 ; '.'
0000000000220b1a         db  0x00 ; '.'
0000000000220b1b         db  0x00 ; '.'
0000000000220b1c         db  0x00 ; '.'
0000000000220b1d         db  0x00 ; '.'
0000000000220b1e         db  0x00 ; '.'
0000000000220b1f         db  0x00 ; '.'
0000000000220b20         db  0x00 ; '.'
0000000000220b21         db  0x00 ; '.'
0000000000220b22         db  0x00 ; '.'
0000000000220b23         db  0x00 ; '.'
0000000000220b24         db  0x00 ; '.'
0000000000220b25         db  0x00 ; '.'
0000000000220b26         db  0x00 ; '.'
0000000000220b27         db  0x00 ; '.'
0000000000220b28         db  0x00 ; '.'
0000000000220b29         db  0x00 ; '.'
0000000000220b2a         db  0x00 ; '.'
0000000000220b2b         db  0x00 ; '.'
0000000000220b2c         db  0x00 ; '.'
0000000000220b2d         db  0x00 ; '.'
0000000000220b2e         db  0x00 ; '.'
0000000000220b2f         db  0x00 ; '.'
0000000000220b30         db  0x00 ; '.'
0000000000220b31         db  0x00 ; '.'
0000000000220b32         db  0x00 ; '.'
0000000000220b33         db  0x00 ; '.'
0000000000220b34         db  0x00 ; '.'
0000000000220b35         db  0x00 ; '.'
0000000000220b36         db  0x00 ; '.'
0000000000220b37         db  0x00 ; '.'
0000000000220b38         db  0x00 ; '.'
0000000000220b39         db  0x00 ; '.'
0000000000220b3a         db  0x00 ; '.'
0000000000220b3b         db  0x00 ; '.'
0000000000220b3c         db  0x00 ; '.'
0000000000220b3d         db  0x00 ; '.'
0000000000220b3e         db  0x00 ; '.'
0000000000220b3f         db  0x00 ; '.'
0000000000220b40         db  0x00 ; '.'
0000000000220b41         db  0x00 ; '.'
0000000000220b42         db  0x00 ; '.'
0000000000220b43         db  0x00 ; '.'
0000000000220b44         db  0x00 ; '.'
0000000000220b45         db  0x00 ; '.'
0000000000220b46         db  0x00 ; '.'
0000000000220b47         db  0x00 ; '.'
0000000000220b48         db  0x00 ; '.'
0000000000220b49         db  0x00 ; '.'
0000000000220b4a         db  0x00 ; '.'
0000000000220b4b         db  0x00 ; '.'
0000000000220b4c         db  0x00 ; '.'
0000000000220b4d         db  0x00 ; '.'
0000000000220b4e         db  0x00 ; '.'
0000000000220b4f         db  0x00 ; '.'
0000000000220b50         db  0x00 ; '.'
0000000000220b51         db  0x00 ; '.'
0000000000220b52         db  0x00 ; '.'
0000000000220b53         db  0x00 ; '.'
0000000000220b54         db  0x00 ; '.'
0000000000220b55         db  0x00 ; '.'
0000000000220b56         db  0x00 ; '.'
0000000000220b57         db  0x00 ; '.'
0000000000220b58         db  0x00 ; '.'
0000000000220b59         db  0x00 ; '.'
0000000000220b5a         db  0x00 ; '.'
0000000000220b5b         db  0x00 ; '.'
0000000000220b5c         db  0x00 ; '.'
0000000000220b5d         db  0x00 ; '.'
0000000000220b5e         db  0x00 ; '.'
0000000000220b5f         db  0x00 ; '.'
0000000000220b60         db  0x00 ; '.'
0000000000220b61         db  0x00 ; '.'
0000000000220b62         db  0x00 ; '.'
0000000000220b63         db  0x00 ; '.'
0000000000220b64         db  0x00 ; '.'
0000000000220b65         db  0x00 ; '.'
0000000000220b66         db  0x00 ; '.'
0000000000220b67         db  0x00 ; '.'
0000000000220b68         db  0x00 ; '.'
0000000000220b69         db  0x00 ; '.'
0000000000220b6a         db  0x00 ; '.'
0000000000220b6b         db  0x00 ; '.'
0000000000220b6c         db  0x00 ; '.'
0000000000220b6d         db  0x00 ; '.'
0000000000220b6e         db  0x00 ; '.'
0000000000220b6f         db  0x00 ; '.'
0000000000220b70         db  0x00 ; '.'
0000000000220b71         db  0x00 ; '.'
0000000000220b72         db  0x00 ; '.'
0000000000220b73         db  0x00 ; '.'
0000000000220b74         db  0x00 ; '.'
0000000000220b75         db  0x00 ; '.'
0000000000220b76         db  0x00 ; '.'
0000000000220b77         db  0x00 ; '.'
0000000000220b78         db  0x00 ; '.'
0000000000220b79         db  0x00 ; '.'
0000000000220b7a         db  0x00 ; '.'
0000000000220b7b         db  0x00 ; '.'
0000000000220b7c         db  0x00 ; '.'
0000000000220b7d         db  0x00 ; '.'
0000000000220b7e         db  0x00 ; '.'
0000000000220b7f         db  0x00 ; '.'
0000000000220b80         db  0x00 ; '.'
0000000000220b81         db  0x00 ; '.'
0000000000220b82         db  0x00 ; '.'
0000000000220b83         db  0x00 ; '.'
0000000000220b84         db  0x00 ; '.'
0000000000220b85         db  0x00 ; '.'
0000000000220b86         db  0x00 ; '.'
0000000000220b87         db  0x00 ; '.'
0000000000220b88         db  0x00 ; '.'
0000000000220b89         db  0x00 ; '.'
0000000000220b8a         db  0x00 ; '.'
0000000000220b8b         db  0x00 ; '.'
0000000000220b8c         db  0x00 ; '.'
0000000000220b8d         db  0x00 ; '.'
0000000000220b8e         db  0x00 ; '.'
0000000000220b8f         db  0x00 ; '.'
0000000000220b90         db  0x00 ; '.'
0000000000220b91         db  0x00 ; '.'
0000000000220b92         db  0x00 ; '.'
0000000000220b93         db  0x00 ; '.'
0000000000220b94         db  0x00 ; '.'
0000000000220b95         db  0x00 ; '.'
0000000000220b96         db  0x00 ; '.'
0000000000220b97         db  0x00 ; '.'
0000000000220b98         db  0x00 ; '.'
0000000000220b99         db  0x00 ; '.'
0000000000220b9a         db  0x00 ; '.'
0000000000220b9b         db  0x00 ; '.'
0000000000220b9c         db  0x00 ; '.'
0000000000220b9d         db  0x00 ; '.'
0000000000220b9e         db  0x00 ; '.'
0000000000220b9f         db  0x00 ; '.'
0000000000220ba0         db  0x00 ; '.'
0000000000220ba1         db  0x00 ; '.'
0000000000220ba2         db  0x00 ; '.'
0000000000220ba3         db  0x00 ; '.'
0000000000220ba4         db  0x00 ; '.'
0000000000220ba5         db  0x00 ; '.'
0000000000220ba6         db  0x00 ; '.'
0000000000220ba7         db  0x00 ; '.'
0000000000220ba8         db  0x00 ; '.'
0000000000220ba9         db  0x00 ; '.'
0000000000220baa         db  0x00 ; '.'
0000000000220bab         db  0x00 ; '.'
0000000000220bac         db  0x00 ; '.'
0000000000220bad         db  0x00 ; '.'
0000000000220bae         db  0x00 ; '.'
0000000000220baf         db  0x00 ; '.'
0000000000220bb0         db  0x00 ; '.'
0000000000220bb1         db  0x00 ; '.'
0000000000220bb2         db  0x00 ; '.'
0000000000220bb3         db  0x00 ; '.'
0000000000220bb4         db  0x00 ; '.'
0000000000220bb5         db  0x00 ; '.'
0000000000220bb6         db  0x00 ; '.'
0000000000220bb7         db  0x00 ; '.'
0000000000220bb8         db  0x00 ; '.'
0000000000220bb9         db  0x00 ; '.'
0000000000220bba         db  0x00 ; '.'
0000000000220bbb         db  0x00 ; '.'
0000000000220bbc         db  0x00 ; '.'
0000000000220bbd         db  0x00 ; '.'
0000000000220bbe         db  0x00 ; '.'
0000000000220bbf         db  0x00 ; '.'
0000000000220bc0         db  0x00 ; '.'
0000000000220bc1         db  0x00 ; '.'
0000000000220bc2         db  0x00 ; '.'
0000000000220bc3         db  0x00 ; '.'
0000000000220bc4         db  0x00 ; '.'
0000000000220bc5         db  0x00 ; '.'
0000000000220bc6         db  0x00 ; '.'
0000000000220bc7         db  0x00 ; '.'
0000000000220bc8         db  0x00 ; '.'
0000000000220bc9         db  0x00 ; '.'
0000000000220bca         db  0x00 ; '.'
0000000000220bcb         db  0x00 ; '.'
0000000000220bcc         db  0x00 ; '.'
0000000000220bcd         db  0x00 ; '.'
0000000000220bce         db  0x00 ; '.'
0000000000220bcf         db  0x00 ; '.'
0000000000220bd0         db  0x00 ; '.'
0000000000220bd1         db  0x00 ; '.'
0000000000220bd2         db  0x00 ; '.'
0000000000220bd3         db  0x00 ; '.'
0000000000220bd4         db  0x00 ; '.'
0000000000220bd5         db  0x00 ; '.'
0000000000220bd6         db  0x00 ; '.'
0000000000220bd7         db  0x00 ; '.'
0000000000220bd8         db  0x00 ; '.'
0000000000220bd9         db  0x00 ; '.'
0000000000220bda         db  0x00 ; '.'
0000000000220bdb         db  0x00 ; '.'
0000000000220bdc         db  0x00 ; '.'
0000000000220bdd         db  0x00 ; '.'
0000000000220bde         db  0x00 ; '.'
0000000000220bdf         db  0x00 ; '.'
0000000000220be0         db  0x00 ; '.'
0000000000220be1         db  0x00 ; '.'
0000000000220be2         db  0x00 ; '.'
0000000000220be3         db  0x00 ; '.'
0000000000220be4         db  0x00 ; '.'
0000000000220be5         db  0x00 ; '.'
0000000000220be6         db  0x00 ; '.'
0000000000220be7         db  0x00 ; '.'
0000000000220be8         db  0x00 ; '.'
0000000000220be9         db  0x00 ; '.'
0000000000220bea         db  0x00 ; '.'
0000000000220beb         db  0x00 ; '.'
0000000000220bec         db  0x00 ; '.'
0000000000220bed         db  0x00 ; '.'
0000000000220bee         db  0x00 ; '.'
0000000000220bef         db  0x00 ; '.'
0000000000220bf0         db  0x00 ; '.'
0000000000220bf1         db  0x00 ; '.'
0000000000220bf2         db  0x00 ; '.'
0000000000220bf3         db  0x00 ; '.'
0000000000220bf4         db  0x00 ; '.'
0000000000220bf5         db  0x00 ; '.'
0000000000220bf6         db  0x00 ; '.'
0000000000220bf7         db  0x00 ; '.'
0000000000220bf8         db  0x00 ; '.'
0000000000220bf9         db  0x00 ; '.'
0000000000220bfa         db  0x00 ; '.'
0000000000220bfb         db  0x00 ; '.'
0000000000220bfc         db  0x00 ; '.'
0000000000220bfd         db  0x00 ; '.'
0000000000220bfe         db  0x00 ; '.'
0000000000220bff         db  0x00 ; '.'
0000000000220c00         db  0x00 ; '.'
0000000000220c01         db  0x00 ; '.'
0000000000220c02         db  0x00 ; '.'
0000000000220c03         db  0x00 ; '.'
0000000000220c04         db  0x00 ; '.'
0000000000220c05         db  0x00 ; '.'
0000000000220c06         db  0x00 ; '.'
0000000000220c07         db  0x00 ; '.'
0000000000220c08         db  0x00 ; '.'
0000000000220c09         db  0x00 ; '.'
0000000000220c0a         db  0x00 ; '.'
0000000000220c0b         db  0x00 ; '.'
0000000000220c0c         db  0x00 ; '.'
0000000000220c0d         db  0x00 ; '.'
0000000000220c0e         db  0x00 ; '.'
0000000000220c0f         db  0x00 ; '.'
0000000000220c10         db  0x00 ; '.'
0000000000220c11         db  0x00 ; '.'
0000000000220c12         db  0x00 ; '.'
0000000000220c13         db  0x00 ; '.'
0000000000220c14         db  0x00 ; '.'
0000000000220c15         db  0x00 ; '.'
0000000000220c16         db  0x00 ; '.'
0000000000220c17         db  0x00 ; '.'
0000000000220c18         db  0x00 ; '.'
0000000000220c19         db  0x00 ; '.'
0000000000220c1a         db  0x00 ; '.'
0000000000220c1b         db  0x00 ; '.'
0000000000220c1c         db  0x00 ; '.'
0000000000220c1d         db  0x00 ; '.'
0000000000220c1e         db  0x00 ; '.'
0000000000220c1f         db  0x00 ; '.'
0000000000220c20         db  0x00 ; '.'
0000000000220c21         db  0x00 ; '.'
0000000000220c22         db  0x00 ; '.'
0000000000220c23         db  0x00 ; '.'
0000000000220c24         db  0x00 ; '.'
0000000000220c25         db  0x00 ; '.'
0000000000220c26         db  0x00 ; '.'
0000000000220c27         db  0x00 ; '.'
0000000000220c28         db  0x00 ; '.'
0000000000220c29         db  0x00 ; '.'
0000000000220c2a         db  0x00 ; '.'
0000000000220c2b         db  0x00 ; '.'
0000000000220c2c         db  0x00 ; '.'
0000000000220c2d         db  0x00 ; '.'
0000000000220c2e         db  0x00 ; '.'
0000000000220c2f         db  0x00 ; '.'
0000000000220c30         db  0x00 ; '.'
0000000000220c31         db  0x00 ; '.'
0000000000220c32         db  0x00 ; '.'
0000000000220c33         db  0x00 ; '.'
0000000000220c34         db  0x00 ; '.'
0000000000220c35         db  0x00 ; '.'
0000000000220c36         db  0x00 ; '.'
0000000000220c37         db  0x00 ; '.'
0000000000220c38         db  0x00 ; '.'
0000000000220c39         db  0x00 ; '.'
0000000000220c3a         db  0x00 ; '.'
0000000000220c3b         db  0x00 ; '.'
0000000000220c3c         db  0x00 ; '.'
0000000000220c3d         db  0x00 ; '.'
0000000000220c3e         db  0x00 ; '.'
0000000000220c3f         db  0x00 ; '.'
0000000000220c40         db  0x00 ; '.'
0000000000220c41         db  0x00 ; '.'
0000000000220c42         db  0x00 ; '.'
0000000000220c43         db  0x00 ; '.'
0000000000220c44         db  0x00 ; '.'
0000000000220c45         db  0x00 ; '.'
0000000000220c46         db  0x00 ; '.'
0000000000220c47         db  0x00 ; '.'
0000000000220c48         db  0x00 ; '.'
0000000000220c49         db  0x00 ; '.'
0000000000220c4a         db  0x00 ; '.'
0000000000220c4b         db  0x00 ; '.'
0000000000220c4c         db  0x00 ; '.'
0000000000220c4d         db  0x00 ; '.'
0000000000220c4e         db  0x00 ; '.'
0000000000220c4f         db  0x00 ; '.'
0000000000220c50         db  0x00 ; '.'
0000000000220c51         db  0x00 ; '.'
0000000000220c52         db  0x00 ; '.'
0000000000220c53         db  0x00 ; '.'
0000000000220c54         db  0x00 ; '.'
0000000000220c55         db  0x00 ; '.'
0000000000220c56         db  0x00 ; '.'
0000000000220c57         db  0x00 ; '.'
0000000000220c58         db  0x00 ; '.'
0000000000220c59         db  0x00 ; '.'
0000000000220c5a         db  0x00 ; '.'
0000000000220c5b         db  0x00 ; '.'
0000000000220c5c         db  0x00 ; '.'
0000000000220c5d         db  0x00 ; '.'
0000000000220c5e         db  0x00 ; '.'
0000000000220c5f         db  0x00 ; '.'
0000000000220c60         db  0x00 ; '.'
0000000000220c61         db  0x00 ; '.'
0000000000220c62         db  0x00 ; '.'
0000000000220c63         db  0x00 ; '.'
0000000000220c64         db  0x00 ; '.'
0000000000220c65         db  0x00 ; '.'
0000000000220c66         db  0x00 ; '.'
0000000000220c67         db  0x00 ; '.'
0000000000220c68         db  0x00 ; '.'
0000000000220c69         db  0x00 ; '.'
0000000000220c6a         db  0x00 ; '.'
0000000000220c6b         db  0x00 ; '.'
0000000000220c6c         db  0x00 ; '.'
0000000000220c6d         db  0x00 ; '.'
0000000000220c6e         db  0x00 ; '.'
0000000000220c6f         db  0x00 ; '.'
0000000000220c70         db  0x00 ; '.'
0000000000220c71         db  0x00 ; '.'
0000000000220c72         db  0x00 ; '.'
0000000000220c73         db  0x00 ; '.'
0000000000220c74         db  0x00 ; '.'
0000000000220c75         db  0x00 ; '.'
0000000000220c76         db  0x00 ; '.'
0000000000220c77         db  0x00 ; '.'
0000000000220c78         db  0x00 ; '.'
0000000000220c79         db  0x00 ; '.'
0000000000220c7a         db  0x00 ; '.'
0000000000220c7b         db  0x00 ; '.'
0000000000220c7c         db  0x00 ; '.'
0000000000220c7d         db  0x00 ; '.'
0000000000220c7e         db  0x00 ; '.'
0000000000220c7f         db  0x00 ; '.'
0000000000220c80         db  0x00 ; '.'
0000000000220c81         db  0x00 ; '.'
0000000000220c82         db  0x00 ; '.'
0000000000220c83         db  0x00 ; '.'
0000000000220c84         db  0x00 ; '.'
0000000000220c85         db  0x00 ; '.'
0000000000220c86         db  0x00 ; '.'
0000000000220c87         db  0x00 ; '.'
0000000000220c88         db  0x00 ; '.'
0000000000220c89         db  0x00 ; '.'
0000000000220c8a         db  0x00 ; '.'
0000000000220c8b         db  0x00 ; '.'
0000000000220c8c         db  0x00 ; '.'
0000000000220c8d         db  0x00 ; '.'
0000000000220c8e         db  0x00 ; '.'
0000000000220c8f         db  0x00 ; '.'
0000000000220c90         db  0x00 ; '.'
0000000000220c91         db  0x00 ; '.'
0000000000220c92         db  0x00 ; '.'
0000000000220c93         db  0x00 ; '.'
0000000000220c94         db  0x00 ; '.'
0000000000220c95         db  0x00 ; '.'
0000000000220c96         db  0x00 ; '.'
0000000000220c97         db  0x00 ; '.'
0000000000220c98         db  0x00 ; '.'
0000000000220c99         db  0x00 ; '.'
0000000000220c9a         db  0x00 ; '.'
0000000000220c9b         db  0x00 ; '.'
0000000000220c9c         db  0x00 ; '.'
0000000000220c9d         db  0x00 ; '.'
0000000000220c9e         db  0x00 ; '.'
0000000000220c9f         db  0x00 ; '.'
0000000000220ca0         db  0x00 ; '.'
0000000000220ca1         db  0x00 ; '.'
0000000000220ca2         db  0x00 ; '.'
0000000000220ca3         db  0x00 ; '.'
0000000000220ca4         db  0x00 ; '.'
0000000000220ca5         db  0x00 ; '.'
0000000000220ca6         db  0x00 ; '.'
0000000000220ca7         db  0x00 ; '.'
0000000000220ca8         db  0x00 ; '.'
0000000000220ca9         db  0x00 ; '.'
0000000000220caa         db  0x00 ; '.'
0000000000220cab         db  0x00 ; '.'
0000000000220cac         db  0x00 ; '.'
0000000000220cad         db  0x00 ; '.'
0000000000220cae         db  0x00 ; '.'
0000000000220caf         db  0x00 ; '.'
0000000000220cb0         db  0x00 ; '.'
0000000000220cb1         db  0x00 ; '.'
0000000000220cb2         db  0x00 ; '.'
0000000000220cb3         db  0x00 ; '.'
0000000000220cb4         db  0x00 ; '.'
0000000000220cb5         db  0x00 ; '.'
0000000000220cb6         db  0x00 ; '.'
0000000000220cb7         db  0x00 ; '.'
0000000000220cb8         db  0x00 ; '.'
0000000000220cb9         db  0x00 ; '.'
0000000000220cba         db  0x00 ; '.'
0000000000220cbb         db  0x00 ; '.'
0000000000220cbc         db  0x00 ; '.'
0000000000220cbd         db  0x00 ; '.'
0000000000220cbe         db  0x00 ; '.'
0000000000220cbf         db  0x00 ; '.'
0000000000220cc0         db  0x00 ; '.'
0000000000220cc1         db  0x00 ; '.'
0000000000220cc2         db  0x00 ; '.'
0000000000220cc3         db  0x00 ; '.'
0000000000220cc4         db  0x00 ; '.'
0000000000220cc5         db  0x00 ; '.'
0000000000220cc6         db  0x00 ; '.'
0000000000220cc7         db  0x00 ; '.'
0000000000220cc8         db  0x00 ; '.'
0000000000220cc9         db  0x00 ; '.'
0000000000220cca         db  0x00 ; '.'
0000000000220ccb         db  0x00 ; '.'
0000000000220ccc         db  0x00 ; '.'
0000000000220ccd         db  0x00 ; '.'
0000000000220cce         db  0x00 ; '.'
0000000000220ccf         db  0x00 ; '.'
0000000000220cd0         db  0x00 ; '.'
0000000000220cd1         db  0x00 ; '.'
0000000000220cd2         db  0x00 ; '.'
0000000000220cd3         db  0x00 ; '.'
0000000000220cd4         db  0x00 ; '.'
0000000000220cd5         db  0x00 ; '.'
0000000000220cd6         db  0x00 ; '.'
0000000000220cd7         db  0x00 ; '.'
0000000000220cd8         db  0x00 ; '.'
0000000000220cd9         db  0x00 ; '.'
0000000000220cda         db  0x00 ; '.'
0000000000220cdb         db  0x00 ; '.'
0000000000220cdc         db  0x00 ; '.'
0000000000220cdd         db  0x00 ; '.'
0000000000220cde         db  0x00 ; '.'
0000000000220cdf         db  0x00 ; '.'
0000000000220ce0         db  0x00 ; '.'
0000000000220ce1         db  0x00 ; '.'
0000000000220ce2         db  0x00 ; '.'
0000000000220ce3         db  0x00 ; '.'
0000000000220ce4         db  0x00 ; '.'
0000000000220ce5         db  0x00 ; '.'
0000000000220ce6         db  0x00 ; '.'
0000000000220ce7         db  0x00 ; '.'
0000000000220ce8         db  0x00 ; '.'
0000000000220ce9         db  0x00 ; '.'
0000000000220cea         db  0x00 ; '.'
0000000000220ceb         db  0x00 ; '.'
0000000000220cec         db  0x00 ; '.'
0000000000220ced         db  0x00 ; '.'
0000000000220cee         db  0x00 ; '.'
0000000000220cef         db  0x00 ; '.'
0000000000220cf0         db  0x00 ; '.'
0000000000220cf1         db  0x00 ; '.'
0000000000220cf2         db  0x00 ; '.'
0000000000220cf3         db  0x00 ; '.'
0000000000220cf4         db  0x00 ; '.'
0000000000220cf5         db  0x00 ; '.'
0000000000220cf6         db  0x00 ; '.'
0000000000220cf7         db  0x00 ; '.'
0000000000220cf8         db  0x00 ; '.'
0000000000220cf9         db  0x00 ; '.'
0000000000220cfa         db  0x00 ; '.'
0000000000220cfb         db  0x00 ; '.'
0000000000220cfc         db  0x00 ; '.'
0000000000220cfd         db  0x00 ; '.'
0000000000220cfe         db  0x00 ; '.'
0000000000220cff         db  0x00 ; '.'
0000000000220d00         db  0x00 ; '.'
0000000000220d01         db  0x00 ; '.'
0000000000220d02         db  0x00 ; '.'
0000000000220d03         db  0x00 ; '.'
0000000000220d04         db  0x00 ; '.'
0000000000220d05         db  0x00 ; '.'
0000000000220d06         db  0x00 ; '.'
0000000000220d07         db  0x00 ; '.'
0000000000220d08         db  0x00 ; '.'
0000000000220d09         db  0x00 ; '.'
0000000000220d0a         db  0x00 ; '.'
0000000000220d0b         db  0x00 ; '.'
0000000000220d0c         db  0x00 ; '.'
0000000000220d0d         db  0x00 ; '.'
0000000000220d0e         db  0x00 ; '.'
0000000000220d0f         db  0x00 ; '.'
0000000000220d10         db  0x00 ; '.'
0000000000220d11         db  0x00 ; '.'
0000000000220d12         db  0x00 ; '.'
0000000000220d13         db  0x00 ; '.'
0000000000220d14         db  0x00 ; '.'
0000000000220d15         db  0x00 ; '.'
0000000000220d16         db  0x00 ; '.'
0000000000220d17         db  0x00 ; '.'
0000000000220d18         db  0x00 ; '.'
0000000000220d19         db  0x00 ; '.'
0000000000220d1a         db  0x00 ; '.'
0000000000220d1b         db  0x00 ; '.'
0000000000220d1c         db  0x00 ; '.'
0000000000220d1d         db  0x00 ; '.'
0000000000220d1e         db  0x00 ; '.'
0000000000220d1f         db  0x00 ; '.'
0000000000220d20         db  0x00 ; '.'
0000000000220d21         db  0x00 ; '.'
0000000000220d22         db  0x00 ; '.'
0000000000220d23         db  0x00 ; '.'
0000000000220d24         db  0x00 ; '.'
0000000000220d25         db  0x00 ; '.'
0000000000220d26         db  0x00 ; '.'
0000000000220d27         db  0x00 ; '.'
0000000000220d28         db  0x00 ; '.'
0000000000220d29         db  0x00 ; '.'
0000000000220d2a         db  0x00 ; '.'
0000000000220d2b         db  0x00 ; '.'
0000000000220d2c         db  0x00 ; '.'
0000000000220d2d         db  0x00 ; '.'
0000000000220d2e         db  0x00 ; '.'
0000000000220d2f         db  0x00 ; '.'
0000000000220d30         db  0x00 ; '.'
0000000000220d31         db  0x00 ; '.'
0000000000220d32         db  0x00 ; '.'
0000000000220d33         db  0x00 ; '.'
0000000000220d34         db  0x00 ; '.'
0000000000220d35         db  0x00 ; '.'
0000000000220d36         db  0x00 ; '.'
0000000000220d37         db  0x00 ; '.'
0000000000220d38         db  0x00 ; '.'
0000000000220d39         db  0x00 ; '.'
0000000000220d3a         db  0x00 ; '.'
0000000000220d3b         db  0x00 ; '.'
0000000000220d3c         db  0x00 ; '.'
0000000000220d3d         db  0x00 ; '.'
0000000000220d3e         db  0x00 ; '.'
0000000000220d3f         db  0x00 ; '.'
0000000000220d40         db  0x00 ; '.'
0000000000220d41         db  0x00 ; '.'
0000000000220d42         db  0x00 ; '.'
0000000000220d43         db  0x00 ; '.'
0000000000220d44         db  0x00 ; '.'
0000000000220d45         db  0x00 ; '.'
0000000000220d46         db  0x00 ; '.'
0000000000220d47         db  0x00 ; '.'
0000000000220d48         db  0x00 ; '.'
0000000000220d49         db  0x00 ; '.'
0000000000220d4a         db  0x00 ; '.'
0000000000220d4b         db  0x00 ; '.'
0000000000220d4c         db  0x00 ; '.'
0000000000220d4d         db  0x00 ; '.'
0000000000220d4e         db  0x00 ; '.'
0000000000220d4f         db  0x00 ; '.'
0000000000220d50         db  0x00 ; '.'
0000000000220d51         db  0x00 ; '.'
0000000000220d52         db  0x00 ; '.'
0000000000220d53         db  0x00 ; '.'
0000000000220d54         db  0x00 ; '.'
0000000000220d55         db  0x00 ; '.'
0000000000220d56         db  0x00 ; '.'
0000000000220d57         db  0x00 ; '.'
0000000000220d58         db  0x00 ; '.'
0000000000220d59         db  0x00 ; '.'
0000000000220d5a         db  0x00 ; '.'
0000000000220d5b         db  0x00 ; '.'
0000000000220d5c         db  0x00 ; '.'
0000000000220d5d         db  0x00 ; '.'
0000000000220d5e         db  0x00 ; '.'
0000000000220d5f         db  0x00 ; '.'
0000000000220d60         db  0x00 ; '.'
0000000000220d61         db  0x00 ; '.'
0000000000220d62         db  0x00 ; '.'
0000000000220d63         db  0x00 ; '.'
0000000000220d64         db  0x00 ; '.'
0000000000220d65         db  0x00 ; '.'
0000000000220d66         db  0x00 ; '.'
0000000000220d67         db  0x00 ; '.'
0000000000220d68         db  0x00 ; '.'
0000000000220d69         db  0x00 ; '.'
0000000000220d6a         db  0x00 ; '.'
0000000000220d6b         db  0x00 ; '.'
0000000000220d6c         db  0x00 ; '.'
0000000000220d6d         db  0x00 ; '.'
0000000000220d6e         db  0x00 ; '.'
0000000000220d6f         db  0x00 ; '.'
0000000000220d70         db  0x00 ; '.'
0000000000220d71         db  0x00 ; '.'
0000000000220d72         db  0x00 ; '.'
0000000000220d73         db  0x00 ; '.'
0000000000220d74         db  0x00 ; '.'
0000000000220d75         db  0x00 ; '.'
0000000000220d76         db  0x00 ; '.'
0000000000220d77         db  0x00 ; '.'
0000000000220d78         db  0x00 ; '.'
0000000000220d79         db  0x00 ; '.'
0000000000220d7a         db  0x00 ; '.'
0000000000220d7b         db  0x00 ; '.'
0000000000220d7c         db  0x00 ; '.'
0000000000220d7d         db  0x00 ; '.'
0000000000220d7e         db  0x00 ; '.'
0000000000220d7f         db  0x00 ; '.'
0000000000220d80         db  0x00 ; '.'
0000000000220d81         db  0x00 ; '.'
0000000000220d82         db  0x00 ; '.'
0000000000220d83         db  0x00 ; '.'
0000000000220d84         db  0x00 ; '.'
0000000000220d85         db  0x00 ; '.'
0000000000220d86         db  0x00 ; '.'
0000000000220d87         db  0x00 ; '.'
0000000000220d88         db  0x00 ; '.'
0000000000220d89         db  0x00 ; '.'
0000000000220d8a         db  0x00 ; '.'
0000000000220d8b         db  0x00 ; '.'
0000000000220d8c         db  0x00 ; '.'
0000000000220d8d         db  0x00 ; '.'
0000000000220d8e         db  0x00 ; '.'
0000000000220d8f         db  0x00 ; '.'
0000000000220d90         db  0x00 ; '.'
0000000000220d91         db  0x00 ; '.'
0000000000220d92         db  0x00 ; '.'
0000000000220d93         db  0x00 ; '.'
0000000000220d94         db  0x00 ; '.'
0000000000220d95         db  0x00 ; '.'
0000000000220d96         db  0x00 ; '.'
0000000000220d97         db  0x00 ; '.'
0000000000220d98         db  0x00 ; '.'
0000000000220d99         db  0x00 ; '.'
0000000000220d9a         db  0x00 ; '.'
0000000000220d9b         db  0x00 ; '.'
0000000000220d9c         db  0x00 ; '.'
0000000000220d9d         db  0x00 ; '.'
0000000000220d9e         db  0x00 ; '.'
0000000000220d9f         db  0x00 ; '.'
0000000000220da0         db  0x00 ; '.'
0000000000220da1         db  0x00 ; '.'
0000000000220da2         db  0x00 ; '.'
0000000000220da3         db  0x00 ; '.'
0000000000220da4         db  0x00 ; '.'
0000000000220da5         db  0x00 ; '.'
0000000000220da6         db  0x00 ; '.'
0000000000220da7         db  0x00 ; '.'
0000000000220da8         db  0x00 ; '.'
0000000000220da9         db  0x00 ; '.'
0000000000220daa         db  0x00 ; '.'
0000000000220dab         db  0x00 ; '.'
0000000000220dac         db  0x00 ; '.'
0000000000220dad         db  0x00 ; '.'
0000000000220dae         db  0x00 ; '.'
0000000000220daf         db  0x00 ; '.'
0000000000220db0         db  0x00 ; '.'
0000000000220db1         db  0x00 ; '.'
0000000000220db2         db  0x00 ; '.'
0000000000220db3         db  0x00 ; '.'
0000000000220db4         db  0x00 ; '.'
0000000000220db5         db  0x00 ; '.'
0000000000220db6         db  0x00 ; '.'
0000000000220db7         db  0x00 ; '.'
0000000000220db8         db  0x00 ; '.'
0000000000220db9         db  0x00 ; '.'
0000000000220dba         db  0x00 ; '.'
0000000000220dbb         db  0x00 ; '.'
0000000000220dbc         db  0x00 ; '.'
0000000000220dbd         db  0x00 ; '.'
0000000000220dbe         db  0x00 ; '.'
0000000000220dbf         db  0x00 ; '.'
0000000000220dc0         db  0x00 ; '.'
0000000000220dc1         db  0x00 ; '.'
0000000000220dc2         db  0x00 ; '.'
0000000000220dc3         db  0x00 ; '.'
0000000000220dc4         db  0x00 ; '.'
0000000000220dc5         db  0x00 ; '.'
0000000000220dc6         db  0x00 ; '.'
0000000000220dc7         db  0x00 ; '.'
0000000000220dc8         db  0x00 ; '.'
0000000000220dc9         db  0x00 ; '.'
0000000000220dca         db  0x00 ; '.'
0000000000220dcb         db  0x00 ; '.'
0000000000220dcc         db  0x00 ; '.'
0000000000220dcd         db  0x00 ; '.'
0000000000220dce         db  0x00 ; '.'
0000000000220dcf         db  0x00 ; '.'
0000000000220dd0         db  0x00 ; '.'
0000000000220dd1         db  0x00 ; '.'
0000000000220dd2         db  0x00 ; '.'
0000000000220dd3         db  0x00 ; '.'
0000000000220dd4         db  0x00 ; '.'
0000000000220dd5         db  0x00 ; '.'
0000000000220dd6         db  0x00 ; '.'
0000000000220dd7         db  0x00 ; '.'
0000000000220dd8         db  0x00 ; '.'
0000000000220dd9         db  0x00 ; '.'
0000000000220dda         db  0x00 ; '.'
0000000000220ddb         db  0x00 ; '.'
0000000000220ddc         db  0x00 ; '.'
0000000000220ddd         db  0x00 ; '.'
0000000000220dde         db  0x00 ; '.'
0000000000220ddf         db  0x00 ; '.'
0000000000220de0         db  0x00 ; '.'
0000000000220de1         db  0x00 ; '.'
0000000000220de2         db  0x00 ; '.'
0000000000220de3         db  0x00 ; '.'
0000000000220de4         db  0x00 ; '.'
0000000000220de5         db  0x00 ; '.'
0000000000220de6         db  0x00 ; '.'
0000000000220de7         db  0x00 ; '.'
0000000000220de8         db  0x00 ; '.'
0000000000220de9         db  0x00 ; '.'
0000000000220dea         db  0x00 ; '.'
0000000000220deb         db  0x00 ; '.'
0000000000220dec         db  0x00 ; '.'
0000000000220ded         db  0x00 ; '.'
0000000000220dee         db  0x00 ; '.'
0000000000220def         db  0x00 ; '.'
0000000000220df0         db  0x00 ; '.'
0000000000220df1         db  0x00 ; '.'
0000000000220df2         db  0x00 ; '.'
0000000000220df3         db  0x00 ; '.'
0000000000220df4         db  0x00 ; '.'
0000000000220df5         db  0x00 ; '.'
0000000000220df6         db  0x00 ; '.'
0000000000220df7         db  0x00 ; '.'
0000000000220df8         db  0x00 ; '.'
0000000000220df9         db  0x00 ; '.'
0000000000220dfa         db  0x00 ; '.'
0000000000220dfb         db  0x00 ; '.'
0000000000220dfc         db  0x00 ; '.'
0000000000220dfd         db  0x00 ; '.'
0000000000220dfe         db  0x00 ; '.'
0000000000220dff         db  0x00 ; '.'
0000000000220e00         db  0x00 ; '.'
0000000000220e01         db  0x00 ; '.'
0000000000220e02         db  0x00 ; '.'
0000000000220e03         db  0x00 ; '.'
0000000000220e04         db  0x00 ; '.'
0000000000220e05         db  0x00 ; '.'
0000000000220e06         db  0x00 ; '.'
0000000000220e07         db  0x00 ; '.'
0000000000220e08         db  0x00 ; '.'
0000000000220e09         db  0x00 ; '.'
0000000000220e0a         db  0x00 ; '.'
0000000000220e0b         db  0x00 ; '.'
0000000000220e0c         db  0x00 ; '.'
0000000000220e0d         db  0x00 ; '.'
0000000000220e0e         db  0x00 ; '.'
0000000000220e0f         db  0x00 ; '.'
0000000000220e10         db  0x00 ; '.'
0000000000220e11         db  0x00 ; '.'
0000000000220e12         db  0x00 ; '.'
0000000000220e13         db  0x00 ; '.'
0000000000220e14         db  0x00 ; '.'
0000000000220e15         db  0x00 ; '.'
0000000000220e16         db  0x00 ; '.'
0000000000220e17         db  0x00 ; '.'
0000000000220e18         db  0x00 ; '.'
0000000000220e19         db  0x00 ; '.'
0000000000220e1a         db  0x00 ; '.'
0000000000220e1b         db  0x00 ; '.'
0000000000220e1c         db  0x00 ; '.'
0000000000220e1d         db  0x00 ; '.'
0000000000220e1e         db  0x00 ; '.'
0000000000220e1f         db  0x00 ; '.'
0000000000220e20         db  0x00 ; '.'
0000000000220e21         db  0x00 ; '.'
0000000000220e22         db  0x00 ; '.'
0000000000220e23         db  0x00 ; '.'
0000000000220e24         db  0x00 ; '.'
0000000000220e25         db  0x00 ; '.'
0000000000220e26         db  0x00 ; '.'
0000000000220e27         db  0x00 ; '.'
0000000000220e28         db  0x00 ; '.'
0000000000220e29         db  0x00 ; '.'
0000000000220e2a         db  0x00 ; '.'
0000000000220e2b         db  0x00 ; '.'
0000000000220e2c         db  0x00 ; '.'
0000000000220e2d         db  0x00 ; '.'
0000000000220e2e         db  0x00 ; '.'
0000000000220e2f         db  0x00 ; '.'
0000000000220e30         db  0x00 ; '.'
0000000000220e31         db  0x00 ; '.'
0000000000220e32         db  0x00 ; '.'
0000000000220e33         db  0x00 ; '.'
0000000000220e34         db  0x00 ; '.'
0000000000220e35         db  0x00 ; '.'
0000000000220e36         db  0x00 ; '.'
0000000000220e37         db  0x00 ; '.'
0000000000220e38         db  0x00 ; '.'
0000000000220e39         db  0x00 ; '.'
0000000000220e3a         db  0x00 ; '.'
0000000000220e3b         db  0x00 ; '.'
0000000000220e3c         db  0x00 ; '.'
0000000000220e3d         db  0x00 ; '.'
0000000000220e3e         db  0x00 ; '.'
0000000000220e3f         db  0x00 ; '.'
0000000000220e40         db  0x00 ; '.'
0000000000220e41         db  0x00 ; '.'
0000000000220e42         db  0x00 ; '.'
0000000000220e43         db  0x00 ; '.'
0000000000220e44         db  0x00 ; '.'
0000000000220e45         db  0x00 ; '.'
0000000000220e46         db  0x00 ; '.'
0000000000220e47         db  0x00 ; '.'
0000000000220e48         db  0x00 ; '.'
0000000000220e49         db  0x00 ; '.'
0000000000220e4a         db  0x00 ; '.'
0000000000220e4b         db  0x00 ; '.'
0000000000220e4c         db  0x00 ; '.'
0000000000220e4d         db  0x00 ; '.'
0000000000220e4e         db  0x00 ; '.'
0000000000220e4f         db  0x00 ; '.'
0000000000220e50         db  0x00 ; '.'
0000000000220e51         db  0x00 ; '.'
0000000000220e52         db  0x00 ; '.'
0000000000220e53         db  0x00 ; '.'
0000000000220e54         db  0x00 ; '.'
0000000000220e55         db  0x00 ; '.'
0000000000220e56         db  0x00 ; '.'
0000000000220e57         db  0x00 ; '.'
0000000000220e58         db  0x00 ; '.'
0000000000220e59         db  0x00 ; '.'
0000000000220e5a         db  0x00 ; '.'
0000000000220e5b         db  0x00 ; '.'
0000000000220e5c         db  0x00 ; '.'
0000000000220e5d         db  0x00 ; '.'
0000000000220e5e         db  0x00 ; '.'
0000000000220e5f         db  0x00 ; '.'
0000000000220e60         db  0x00 ; '.'
0000000000220e61         db  0x00 ; '.'
0000000000220e62         db  0x00 ; '.'
0000000000220e63         db  0x00 ; '.'
0000000000220e64         db  0x00 ; '.'
0000000000220e65         db  0x00 ; '.'
0000000000220e66         db  0x00 ; '.'
0000000000220e67         db  0x00 ; '.'
0000000000220e68         db  0x00 ; '.'
0000000000220e69         db  0x00 ; '.'
0000000000220e6a         db  0x00 ; '.'
0000000000220e6b         db  0x00 ; '.'
0000000000220e6c         db  0x00 ; '.'
0000000000220e6d         db  0x00 ; '.'
0000000000220e6e         db  0x00 ; '.'
0000000000220e6f         db  0x00 ; '.'
0000000000220e70         db  0x00 ; '.'
0000000000220e71         db  0x00 ; '.'
0000000000220e72         db  0x00 ; '.'
0000000000220e73         db  0x00 ; '.'
0000000000220e74         db  0x00 ; '.'
0000000000220e75         db  0x00 ; '.'
0000000000220e76         db  0x00 ; '.'
0000000000220e77         db  0x00 ; '.'
0000000000220e78         db  0x00 ; '.'
0000000000220e79         db  0x00 ; '.'
0000000000220e7a         db  0x00 ; '.'
0000000000220e7b         db  0x00 ; '.'
0000000000220e7c         db  0x00 ; '.'
0000000000220e7d         db  0x00 ; '.'
0000000000220e7e         db  0x00 ; '.'
0000000000220e7f         db  0x00 ; '.'
0000000000220e80         db  0x00 ; '.'
0000000000220e81         db  0x00 ; '.'
0000000000220e82         db  0x00 ; '.'
0000000000220e83         db  0x00 ; '.'
0000000000220e84         db  0x00 ; '.'
0000000000220e85         db  0x00 ; '.'
0000000000220e86         db  0x00 ; '.'
0000000000220e87         db  0x00 ; '.'
0000000000220e88         db  0x00 ; '.'
0000000000220e89         db  0x00 ; '.'
0000000000220e8a         db  0x00 ; '.'
0000000000220e8b         db  0x00 ; '.'
0000000000220e8c         db  0x00 ; '.'
0000000000220e8d         db  0x00 ; '.'
0000000000220e8e         db  0x00 ; '.'
0000000000220e8f         db  0x00 ; '.'
0000000000220e90         db  0x00 ; '.'
0000000000220e91         db  0x00 ; '.'
0000000000220e92         db  0x00 ; '.'
0000000000220e93         db  0x00 ; '.'
0000000000220e94         db  0x00 ; '.'
0000000000220e95         db  0x00 ; '.'
0000000000220e96         db  0x00 ; '.'
0000000000220e97         db  0x00 ; '.'
0000000000220e98         db  0x00 ; '.'
0000000000220e99         db  0x00 ; '.'
0000000000220e9a         db  0x00 ; '.'
0000000000220e9b         db  0x00 ; '.'
0000000000220e9c         db  0x00 ; '.'
0000000000220e9d         db  0x00 ; '.'
0000000000220e9e         db  0x00 ; '.'
0000000000220e9f         db  0x00 ; '.'
0000000000220ea0         db  0x00 ; '.'
0000000000220ea1         db  0x00 ; '.'
0000000000220ea2         db  0x00 ; '.'
0000000000220ea3         db  0x00 ; '.'
0000000000220ea4         db  0x00 ; '.'
0000000000220ea5         db  0x00 ; '.'
0000000000220ea6         db  0x00 ; '.'
0000000000220ea7         db  0x00 ; '.'
0000000000220ea8         db  0x00 ; '.'
0000000000220ea9         db  0x00 ; '.'
0000000000220eaa         db  0x00 ; '.'
0000000000220eab         db  0x00 ; '.'
0000000000220eac         db  0x00 ; '.'
0000000000220ead         db  0x00 ; '.'
0000000000220eae         db  0x00 ; '.'
0000000000220eaf         db  0x00 ; '.'
0000000000220eb0         db  0x00 ; '.'
0000000000220eb1         db  0x00 ; '.'
0000000000220eb2         db  0x00 ; '.'
0000000000220eb3         db  0x00 ; '.'
0000000000220eb4         db  0x00 ; '.'
0000000000220eb5         db  0x00 ; '.'
0000000000220eb6         db  0x00 ; '.'
0000000000220eb7         db  0x00 ; '.'
0000000000220eb8         db  0x00 ; '.'
0000000000220eb9         db  0x00 ; '.'
0000000000220eba         db  0x00 ; '.'
0000000000220ebb         db  0x00 ; '.'
0000000000220ebc         db  0x00 ; '.'
0000000000220ebd         db  0x00 ; '.'
0000000000220ebe         db  0x00 ; '.'
0000000000220ebf         db  0x00 ; '.'
0000000000220ec0         db  0x00 ; '.'
0000000000220ec1         db  0x00 ; '.'
0000000000220ec2         db  0x00 ; '.'
0000000000220ec3         db  0x00 ; '.'
0000000000220ec4         db  0x00 ; '.'
0000000000220ec5         db  0x00 ; '.'
0000000000220ec6         db  0x00 ; '.'
0000000000220ec7         db  0x00 ; '.'
0000000000220ec8         db  0x00 ; '.'
0000000000220ec9         db  0x00 ; '.'
0000000000220eca         db  0x00 ; '.'
0000000000220ecb         db  0x00 ; '.'
0000000000220ecc         db  0x00 ; '.'
0000000000220ecd         db  0x00 ; '.'
0000000000220ece         db  0x00 ; '.'
0000000000220ecf         db  0x00 ; '.'
0000000000220ed0         db  0x00 ; '.'
0000000000220ed1         db  0x00 ; '.'
0000000000220ed2         db  0x00 ; '.'
0000000000220ed3         db  0x00 ; '.'
0000000000220ed4         db  0x00 ; '.'
0000000000220ed5         db  0x00 ; '.'
0000000000220ed6         db  0x00 ; '.'
0000000000220ed7         db  0x00 ; '.'
0000000000220ed8         db  0x00 ; '.'
0000000000220ed9         db  0x00 ; '.'
0000000000220eda         db  0x00 ; '.'
0000000000220edb         db  0x00 ; '.'
0000000000220edc         db  0x00 ; '.'
0000000000220edd         db  0x00 ; '.'
0000000000220ede         db  0x00 ; '.'
0000000000220edf         db  0x00 ; '.'
0000000000220ee0         db  0x00 ; '.'
0000000000220ee1         db  0x00 ; '.'
0000000000220ee2         db  0x00 ; '.'
0000000000220ee3         db  0x00 ; '.'
0000000000220ee4         db  0x00 ; '.'
0000000000220ee5         db  0x00 ; '.'
0000000000220ee6         db  0x00 ; '.'
0000000000220ee7         db  0x00 ; '.'
0000000000220ee8         db  0x00 ; '.'
0000000000220ee9         db  0x00 ; '.'
0000000000220eea         db  0x00 ; '.'
0000000000220eeb         db  0x00 ; '.'
0000000000220eec         db  0x00 ; '.'
0000000000220eed         db  0x00 ; '.'
0000000000220eee         db  0x00 ; '.'
0000000000220eef         db  0x00 ; '.'
0000000000220ef0         db  0x00 ; '.'
0000000000220ef1         db  0x00 ; '.'
0000000000220ef2         db  0x00 ; '.'
0000000000220ef3         db  0x00 ; '.'
0000000000220ef4         db  0x00 ; '.'
0000000000220ef5         db  0x00 ; '.'
0000000000220ef6         db  0x00 ; '.'
0000000000220ef7         db  0x00 ; '.'
0000000000220ef8         db  0x00 ; '.'
0000000000220ef9         db  0x00 ; '.'
0000000000220efa         db  0x00 ; '.'
0000000000220efb         db  0x00 ; '.'
0000000000220efc         db  0x00 ; '.'
0000000000220efd         db  0x00 ; '.'
0000000000220efe         db  0x00 ; '.'
0000000000220eff         db  0x00 ; '.'
0000000000220f00         db  0x00 ; '.'
0000000000220f01         db  0x00 ; '.'
0000000000220f02         db  0x00 ; '.'
0000000000220f03         db  0x00 ; '.'
0000000000220f04         db  0x00 ; '.'
0000000000220f05         db  0x00 ; '.'
0000000000220f06         db  0x00 ; '.'
0000000000220f07         db  0x00 ; '.'
0000000000220f08         db  0x00 ; '.'
0000000000220f09         db  0x00 ; '.'
0000000000220f0a         db  0x00 ; '.'
0000000000220f0b         db  0x00 ; '.'
0000000000220f0c         db  0x00 ; '.'
0000000000220f0d         db  0x00 ; '.'
0000000000220f0e         db  0x00 ; '.'
0000000000220f0f         db  0x00 ; '.'
0000000000220f10         db  0x00 ; '.'
0000000000220f11         db  0x00 ; '.'
0000000000220f12         db  0x00 ; '.'
0000000000220f13         db  0x00 ; '.'
0000000000220f14         db  0x00 ; '.'
0000000000220f15         db  0x00 ; '.'
0000000000220f16         db  0x00 ; '.'
0000000000220f17         db  0x00 ; '.'
0000000000220f18         db  0x00 ; '.'
0000000000220f19         db  0x00 ; '.'
0000000000220f1a         db  0x00 ; '.'
0000000000220f1b         db  0x00 ; '.'
0000000000220f1c         db  0x00 ; '.'
0000000000220f1d         db  0x00 ; '.'
0000000000220f1e         db  0x00 ; '.'
0000000000220f1f         db  0x00 ; '.'
0000000000220f20         db  0x00 ; '.'
0000000000220f21         db  0x00 ; '.'
0000000000220f22         db  0x00 ; '.'
0000000000220f23         db  0x00 ; '.'
0000000000220f24         db  0x00 ; '.'
0000000000220f25         db  0x00 ; '.'
0000000000220f26         db  0x00 ; '.'
0000000000220f27         db  0x00 ; '.'
0000000000220f28         db  0x00 ; '.'
0000000000220f29         db  0x00 ; '.'
0000000000220f2a         db  0x00 ; '.'
0000000000220f2b         db  0x00 ; '.'
0000000000220f2c         db  0x00 ; '.'
0000000000220f2d         db  0x00 ; '.'
0000000000220f2e         db  0x00 ; '.'
0000000000220f2f         db  0x00 ; '.'
0000000000220f30         db  0x00 ; '.'
0000000000220f31         db  0x00 ; '.'
0000000000220f32         db  0x00 ; '.'
0000000000220f33         db  0x00 ; '.'
0000000000220f34         db  0x00 ; '.'
0000000000220f35         db  0x00 ; '.'
0000000000220f36         db  0x00 ; '.'
0000000000220f37         db  0x00 ; '.'
0000000000220f38         db  0x00 ; '.'
0000000000220f39         db  0x00 ; '.'
0000000000220f3a         db  0x00 ; '.'
0000000000220f3b         db  0x00 ; '.'
0000000000220f3c         db  0x00 ; '.'
0000000000220f3d         db  0x00 ; '.'
0000000000220f3e         db  0x00 ; '.'
0000000000220f3f         db  0x00 ; '.'
0000000000220f40         db  0x00 ; '.'
0000000000220f41         db  0x00 ; '.'
0000000000220f42         db  0x00 ; '.'
0000000000220f43         db  0x00 ; '.'
0000000000220f44         db  0x00 ; '.'
0000000000220f45         db  0x00 ; '.'
0000000000220f46         db  0x00 ; '.'
0000000000220f47         db  0x00 ; '.'
0000000000220f48         db  0x00 ; '.'
0000000000220f49         db  0x00 ; '.'
0000000000220f4a         db  0x00 ; '.'
0000000000220f4b         db  0x00 ; '.'
0000000000220f4c         db  0x00 ; '.'
0000000000220f4d         db  0x00 ; '.'
0000000000220f4e         db  0x00 ; '.'
0000000000220f4f         db  0x00 ; '.'
0000000000220f50         db  0x00 ; '.'
0000000000220f51         db  0x00 ; '.'
0000000000220f52         db  0x00 ; '.'
0000000000220f53         db  0x00 ; '.'
0000000000220f54         db  0x00 ; '.'
0000000000220f55         db  0x00 ; '.'
0000000000220f56         db  0x00 ; '.'
0000000000220f57         db  0x00 ; '.'
0000000000220f58         db  0x00 ; '.'
0000000000220f59         db  0x00 ; '.'
0000000000220f5a         db  0x00 ; '.'
0000000000220f5b         db  0x00 ; '.'
0000000000220f5c         db  0x00 ; '.'
0000000000220f5d         db  0x00 ; '.'
0000000000220f5e         db  0x00 ; '.'
0000000000220f5f         db  0x00 ; '.'
0000000000220f60         db  0x00 ; '.'
0000000000220f61         db  0x00 ; '.'
0000000000220f62         db  0x00 ; '.'
0000000000220f63         db  0x00 ; '.'
0000000000220f64         db  0x00 ; '.'
0000000000220f65         db  0x00 ; '.'
0000000000220f66         db  0x00 ; '.'
0000000000220f67         db  0x00 ; '.'
0000000000220f68         db  0x00 ; '.'
0000000000220f69         db  0x00 ; '.'
0000000000220f6a         db  0x00 ; '.'
0000000000220f6b         db  0x00 ; '.'
0000000000220f6c         db  0x00 ; '.'
0000000000220f6d         db  0x00 ; '.'
0000000000220f6e         db  0x00 ; '.'
0000000000220f6f         db  0x00 ; '.'
0000000000220f70         db  0x00 ; '.'
0000000000220f71         db  0x00 ; '.'
0000000000220f72         db  0x00 ; '.'
0000000000220f73         db  0x00 ; '.'
0000000000220f74         db  0x00 ; '.'
0000000000220f75         db  0x00 ; '.'
0000000000220f76         db  0x00 ; '.'
0000000000220f77         db  0x00 ; '.'
0000000000220f78         db  0x00 ; '.'
0000000000220f79         db  0x00 ; '.'
0000000000220f7a         db  0x00 ; '.'
0000000000220f7b         db  0x00 ; '.'
0000000000220f7c         db  0x00 ; '.'
0000000000220f7d         db  0x00 ; '.'
0000000000220f7e         db  0x00 ; '.'
0000000000220f7f         db  0x00 ; '.'
0000000000220f80         db  0x00 ; '.'
0000000000220f81         db  0x00 ; '.'
0000000000220f82         db  0x00 ; '.'
0000000000220f83         db  0x00 ; '.'
0000000000220f84         db  0x00 ; '.'
0000000000220f85         db  0x00 ; '.'
0000000000220f86         db  0x00 ; '.'
0000000000220f87         db  0x00 ; '.'
0000000000220f88         db  0x00 ; '.'
0000000000220f89         db  0x00 ; '.'
0000000000220f8a         db  0x00 ; '.'
0000000000220f8b         db  0x00 ; '.'
0000000000220f8c         db  0x00 ; '.'
0000000000220f8d         db  0x00 ; '.'
0000000000220f8e         db  0x00 ; '.'
0000000000220f8f         db  0x00 ; '.'
0000000000220f90         db  0x00 ; '.'
0000000000220f91         db  0x00 ; '.'
0000000000220f92         db  0x00 ; '.'
0000000000220f93         db  0x00 ; '.'
0000000000220f94         db  0x00 ; '.'
0000000000220f95         db  0x00 ; '.'
0000000000220f96         db  0x00 ; '.'
0000000000220f97         db  0x00 ; '.'
0000000000220f98         db  0x00 ; '.'
0000000000220f99         db  0x00 ; '.'
0000000000220f9a         db  0x00 ; '.'
0000000000220f9b         db  0x00 ; '.'
0000000000220f9c         db  0x00 ; '.'
0000000000220f9d         db  0x00 ; '.'
0000000000220f9e         db  0x00 ; '.'
0000000000220f9f         db  0x00 ; '.'
0000000000220fa0         db  0x00 ; '.'
0000000000220fa1         db  0x00 ; '.'
0000000000220fa2         db  0x00 ; '.'
0000000000220fa3         db  0x00 ; '.'
0000000000220fa4         db  0x00 ; '.'
0000000000220fa5         db  0x00 ; '.'
0000000000220fa6         db  0x00 ; '.'
0000000000220fa7         db  0x00 ; '.'
0000000000220fa8         db  0x00 ; '.'
0000000000220fa9         db  0x00 ; '.'
0000000000220faa         db  0x00 ; '.'
0000000000220fab         db  0x00 ; '.'
0000000000220fac         db  0x00 ; '.'
0000000000220fad         db  0x00 ; '.'
0000000000220fae         db  0x00 ; '.'
0000000000220faf         db  0x00 ; '.'
0000000000220fb0         db  0x00 ; '.'
0000000000220fb1         db  0x00 ; '.'
0000000000220fb2         db  0x00 ; '.'
0000000000220fb3         db  0x00 ; '.'
0000000000220fb4         db  0x00 ; '.'
0000000000220fb5         db  0x00 ; '.'
0000000000220fb6         db  0x00 ; '.'
0000000000220fb7         db  0x00 ; '.'
0000000000220fb8         db  0x00 ; '.'
0000000000220fb9         db  0x00 ; '.'
0000000000220fba         db  0x00 ; '.'
0000000000220fbb         db  0x00 ; '.'
0000000000220fbc         db  0x00 ; '.'
0000000000220fbd         db  0x00 ; '.'
0000000000220fbe         db  0x00 ; '.'
0000000000220fbf         db  0x00 ; '.'
0000000000220fc0         db  0x00 ; '.'
0000000000220fc1         db  0x00 ; '.'
0000000000220fc2         db  0x00 ; '.'
0000000000220fc3         db  0x00 ; '.'
0000000000220fc4         db  0x00 ; '.'
0000000000220fc5         db  0x00 ; '.'
0000000000220fc6         db  0x00 ; '.'
0000000000220fc7         db  0x00 ; '.'
0000000000220fc8         db  0x00 ; '.'
0000000000220fc9         db  0x00 ; '.'
0000000000220fca         db  0x00 ; '.'
0000000000220fcb         db  0x00 ; '.'
0000000000220fcc         db  0x00 ; '.'
0000000000220fcd         db  0x00 ; '.'
0000000000220fce         db  0x00 ; '.'
0000000000220fcf         db  0x00 ; '.'
0000000000220fd0         db  0x00 ; '.'
0000000000220fd1         db  0x00 ; '.'
0000000000220fd2         db  0x00 ; '.'
0000000000220fd3         db  0x00 ; '.'
0000000000220fd4         db  0x00 ; '.'
0000000000220fd5         db  0x00 ; '.'
0000000000220fd6         db  0x00 ; '.'
0000000000220fd7         db  0x00 ; '.'
0000000000220fd8         db  0x00 ; '.'
0000000000220fd9         db  0x00 ; '.'
0000000000220fda         db  0x00 ; '.'
0000000000220fdb         db  0x00 ; '.'
0000000000220fdc         db  0x00 ; '.'
0000000000220fdd         db  0x00 ; '.'
0000000000220fde         db  0x00 ; '.'
0000000000220fdf         db  0x00 ; '.'
                     RFC3986:
0000000000220fe0         db  0x00 ; '.'                                         ; DATA XREF=main+4280, file_escape+61
0000000000220fe1         db  0x00 ; '.'
0000000000220fe2         db  0x00 ; '.'
0000000000220fe3         db  0x00 ; '.'
0000000000220fe4         db  0x00 ; '.'
0000000000220fe5         db  0x00 ; '.'
0000000000220fe6         db  0x00 ; '.'
0000000000220fe7         db  0x00 ; '.'
0000000000220fe8         db  0x00 ; '.'
0000000000220fe9         db  0x00 ; '.'
0000000000220fea         db  0x00 ; '.'
0000000000220feb         db  0x00 ; '.'
0000000000220fec         db  0x00 ; '.'
0000000000220fed         db  0x00 ; '.'
0000000000220fee         db  0x00 ; '.'
0000000000220fef         db  0x00 ; '.'
0000000000220ff0         db  0x00 ; '.'
0000000000220ff1         db  0x00 ; '.'
0000000000220ff2         db  0x00 ; '.'
0000000000220ff3         db  0x00 ; '.'
0000000000220ff4         db  0x00 ; '.'
0000000000220ff5         db  0x00 ; '.'
0000000000220ff6         db  0x00 ; '.'
0000000000220ff7         db  0x00 ; '.'
0000000000220ff8         db  0x00 ; '.'
0000000000220ff9         db  0x00 ; '.'
0000000000220ffa         db  0x00 ; '.'
0000000000220ffb         db  0x00 ; '.'
0000000000220ffc         db  0x00 ; '.'
0000000000220ffd         db  0x00 ; '.'
0000000000220ffe         db  0x00 ; '.'
0000000000220fff         db  0x00 ; '.'
0000000000221000         db  0x00 ; '.'
0000000000221001         db  0x00 ; '.'
0000000000221002         db  0x00 ; '.'
0000000000221003         db  0x00 ; '.'
0000000000221004         db  0x00 ; '.'
0000000000221005         db  0x00 ; '.'
0000000000221006         db  0x00 ; '.'
0000000000221007         db  0x00 ; '.'
0000000000221008         db  0x00 ; '.'
0000000000221009         db  0x00 ; '.'
000000000022100a         db  0x00 ; '.'
000000000022100b         db  0x00 ; '.'
000000000022100c         db  0x00 ; '.'
000000000022100d         db  0x00 ; '.'
000000000022100e         db  0x00 ; '.'
000000000022100f         db  0x00 ; '.'
0000000000221010         db  0x00 ; '.'
0000000000221011         db  0x00 ; '.'
0000000000221012         db  0x00 ; '.'
0000000000221013         db  0x00 ; '.'
0000000000221014         db  0x00 ; '.'
0000000000221015         db  0x00 ; '.'
0000000000221016         db  0x00 ; '.'
0000000000221017         db  0x00 ; '.'
0000000000221018         db  0x00 ; '.'
0000000000221019         db  0x00 ; '.'
000000000022101a         db  0x00 ; '.'
000000000022101b         db  0x00 ; '.'
000000000022101c         db  0x00 ; '.'
000000000022101d         db  0x00 ; '.'
000000000022101e         db  0x00 ; '.'
000000000022101f         db  0x00 ; '.'
0000000000221020         db  0x00 ; '.'
0000000000221021         db  0x00 ; '.'
0000000000221022         db  0x00 ; '.'
0000000000221023         db  0x00 ; '.'
0000000000221024         db  0x00 ; '.'
0000000000221025         db  0x00 ; '.'
0000000000221026         db  0x00 ; '.'
0000000000221027         db  0x00 ; '.'
0000000000221028         db  0x00 ; '.'
0000000000221029         db  0x00 ; '.'
000000000022102a         db  0x00 ; '.'
000000000022102b         db  0x00 ; '.'
000000000022102c         db  0x00 ; '.'
000000000022102d         db  0x00 ; '.'
000000000022102e         db  0x00 ; '.'
000000000022102f         db  0x00 ; '.'
0000000000221030         db  0x00 ; '.'
0000000000221031         db  0x00 ; '.'
0000000000221032         db  0x00 ; '.'
0000000000221033         db  0x00 ; '.'
0000000000221034         db  0x00 ; '.'
0000000000221035         db  0x00 ; '.'
0000000000221036         db  0x00 ; '.'
0000000000221037         db  0x00 ; '.'
0000000000221038         db  0x00 ; '.'
0000000000221039         db  0x00 ; '.'
000000000022103a         db  0x00 ; '.'
000000000022103b         db  0x00 ; '.'
000000000022103c         db  0x00 ; '.'
000000000022103d         db  0x00 ; '.'
000000000022103e         db  0x00 ; '.'
000000000022103f         db  0x00 ; '.'
0000000000221040         db  0x00 ; '.'
0000000000221041         db  0x00 ; '.'
0000000000221042         db  0x00 ; '.'
0000000000221043         db  0x00 ; '.'
0000000000221044         db  0x00 ; '.'
0000000000221045         db  0x00 ; '.'
0000000000221046         db  0x00 ; '.'
0000000000221047         db  0x00 ; '.'
0000000000221048         db  0x00 ; '.'
0000000000221049         db  0x00 ; '.'
000000000022104a         db  0x00 ; '.'
000000000022104b         db  0x00 ; '.'
000000000022104c         db  0x00 ; '.'
000000000022104d         db  0x00 ; '.'
000000000022104e         db  0x00 ; '.'
000000000022104f         db  0x00 ; '.'
0000000000221050         db  0x00 ; '.'
0000000000221051         db  0x00 ; '.'
0000000000221052         db  0x00 ; '.'
0000000000221053         db  0x00 ; '.'
0000000000221054         db  0x00 ; '.'
0000000000221055         db  0x00 ; '.'
0000000000221056         db  0x00 ; '.'
0000000000221057         db  0x00 ; '.'
0000000000221058         db  0x00 ; '.'
0000000000221059         db  0x00 ; '.'
000000000022105a         db  0x00 ; '.'
000000000022105b         db  0x00 ; '.'
000000000022105c         db  0x00 ; '.'
000000000022105d         db  0x00 ; '.'
000000000022105e         db  0x00 ; '.'
000000000022105f         db  0x00 ; '.'
0000000000221060         db  0x00 ; '.'
0000000000221061         db  0x00 ; '.'
0000000000221062         db  0x00 ; '.'
0000000000221063         db  0x00 ; '.'
0000000000221064         db  0x00 ; '.'
0000000000221065         db  0x00 ; '.'
0000000000221066         db  0x00 ; '.'
0000000000221067         db  0x00 ; '.'
0000000000221068         db  0x00 ; '.'
0000000000221069         db  0x00 ; '.'
000000000022106a         db  0x00 ; '.'
000000000022106b         db  0x00 ; '.'
000000000022106c         db  0x00 ; '.'
000000000022106d         db  0x00 ; '.'
000000000022106e         db  0x00 ; '.'
000000000022106f         db  0x00 ; '.'
0000000000221070         db  0x00 ; '.'
0000000000221071         db  0x00 ; '.'
0000000000221072         db  0x00 ; '.'
0000000000221073         db  0x00 ; '.'
0000000000221074         db  0x00 ; '.'
0000000000221075         db  0x00 ; '.'
0000000000221076         db  0x00 ; '.'
0000000000221077         db  0x00 ; '.'
0000000000221078         db  0x00 ; '.'
0000000000221079         db  0x00 ; '.'
000000000022107a         db  0x00 ; '.'
000000000022107b         db  0x00 ; '.'
000000000022107c         db  0x00 ; '.'
000000000022107d         db  0x00 ; '.'
000000000022107e         db  0x00 ; '.'
000000000022107f         db  0x00 ; '.'
0000000000221080         db  0x00 ; '.'
0000000000221081         db  0x00 ; '.'
0000000000221082         db  0x00 ; '.'
0000000000221083         db  0x00 ; '.'
0000000000221084         db  0x00 ; '.'
0000000000221085         db  0x00 ; '.'
0000000000221086         db  0x00 ; '.'
0000000000221087         db  0x00 ; '.'
0000000000221088         db  0x00 ; '.'
0000000000221089         db  0x00 ; '.'
000000000022108a         db  0x00 ; '.'
000000000022108b         db  0x00 ; '.'
000000000022108c         db  0x00 ; '.'
000000000022108d         db  0x00 ; '.'
000000000022108e         db  0x00 ; '.'
000000000022108f         db  0x00 ; '.'
0000000000221090         db  0x00 ; '.'
0000000000221091         db  0x00 ; '.'
0000000000221092         db  0x00 ; '.'
0000000000221093         db  0x00 ; '.'
0000000000221094         db  0x00 ; '.'
0000000000221095         db  0x00 ; '.'
0000000000221096         db  0x00 ; '.'
0000000000221097         db  0x00 ; '.'
0000000000221098         db  0x00 ; '.'
0000000000221099         db  0x00 ; '.'
000000000022109a         db  0x00 ; '.'
000000000022109b         db  0x00 ; '.'
000000000022109c         db  0x00 ; '.'
000000000022109d         db  0x00 ; '.'
000000000022109e         db  0x00 ; '.'
000000000022109f         db  0x00 ; '.'
00000000002210a0         db  0x00 ; '.'
00000000002210a1         db  0x00 ; '.'
00000000002210a2         db  0x00 ; '.'
00000000002210a3         db  0x00 ; '.'
00000000002210a4         db  0x00 ; '.'
00000000002210a5         db  0x00 ; '.'
00000000002210a6         db  0x00 ; '.'
00000000002210a7         db  0x00 ; '.'
00000000002210a8         db  0x00 ; '.'
00000000002210a9         db  0x00 ; '.'
00000000002210aa         db  0x00 ; '.'
00000000002210ab         db  0x00 ; '.'
00000000002210ac         db  0x00 ; '.'
00000000002210ad         db  0x00 ; '.'
00000000002210ae         db  0x00 ; '.'
00000000002210af         db  0x00 ; '.'
00000000002210b0         db  0x00 ; '.'
00000000002210b1         db  0x00 ; '.'
00000000002210b2         db  0x00 ; '.'
00000000002210b3         db  0x00 ; '.'
00000000002210b4         db  0x00 ; '.'
00000000002210b5         db  0x00 ; '.'
00000000002210b6         db  0x00 ; '.'
00000000002210b7         db  0x00 ; '.'
00000000002210b8         db  0x00 ; '.'
00000000002210b9         db  0x00 ; '.'
00000000002210ba         db  0x00 ; '.'
00000000002210bb         db  0x00 ; '.'
00000000002210bc         db  0x00 ; '.'
00000000002210bd         db  0x00 ; '.'
00000000002210be         db  0x00 ; '.'
00000000002210bf         db  0x00 ; '.'
00000000002210c0         db  0x00 ; '.'
00000000002210c1         db  0x00 ; '.'
00000000002210c2         db  0x00 ; '.'
00000000002210c3         db  0x00 ; '.'
00000000002210c4         db  0x00 ; '.'
00000000002210c5         db  0x00 ; '.'
00000000002210c6         db  0x00 ; '.'
00000000002210c7         db  0x00 ; '.'
00000000002210c8         db  0x00 ; '.'
00000000002210c9         db  0x00 ; '.'
00000000002210ca         db  0x00 ; '.'
00000000002210cb         db  0x00 ; '.'
00000000002210cc         db  0x00 ; '.'
00000000002210cd         db  0x00 ; '.'
00000000002210ce         db  0x00 ; '.'
00000000002210cf         db  0x00 ; '.'
00000000002210d0         db  0x00 ; '.'
00000000002210d1         db  0x00 ; '.'
00000000002210d2         db  0x00 ; '.'
00000000002210d3         db  0x00 ; '.'
00000000002210d4         db  0x00 ; '.'
00000000002210d5         db  0x00 ; '.'
00000000002210d6         db  0x00 ; '.'
00000000002210d7         db  0x00 ; '.'
00000000002210d8         db  0x00 ; '.'
00000000002210d9         db  0x00 ; '.'
00000000002210da         db  0x00 ; '.'
00000000002210db         db  0x00 ; '.'
00000000002210dc         db  0x00 ; '.'
00000000002210dd         db  0x00 ; '.'
00000000002210de         db  0x00 ; '.'
00000000002210df         db  0x00 ; '.'
                     dev_ino_obstack:
00000000002210e0         db  0x00 ; '.'                                         ; DATA XREF=main+3099, print_dir+429
00000000002210e1         db  0x00 ; '.'
00000000002210e2         db  0x00 ; '.'
00000000002210e3         db  0x00 ; '.'
00000000002210e4         db  0x00 ; '.'
00000000002210e5         db  0x00 ; '.'
00000000002210e6         db  0x00 ; '.'
00000000002210e7         db  0x00 ; '.'
00000000002210e8         db  0x00 ; '.'
00000000002210e9         db  0x00 ; '.'
00000000002210ea         db  0x00 ; '.'
00000000002210eb         db  0x00 ; '.'
00000000002210ec         db  0x00 ; '.'
00000000002210ed         db  0x00 ; '.'
00000000002210ee         db  0x00 ; '.'
00000000002210ef         db  0x00 ; '.'
                     qword_2210f0:
00000000002210f0         db  0x00 ; '.'                                         ; DATA XREF=main+3454
00000000002210f1         db  0x00 ; '.'
00000000002210f2         db  0x00 ; '.'
00000000002210f3         db  0x00 ; '.'
00000000002210f4         db  0x00 ; '.'
00000000002210f5         db  0x00 ; '.'
00000000002210f6         db  0x00 ; '.'
00000000002210f7         db  0x00 ; '.'
                     qword_2210f8:
00000000002210f8         db  0x00 ; '.'                                         ; DATA XREF=main+3444, main+3481, print_dir+396, print_dir+446, print_dir+457
00000000002210f9         db  0x00 ; '.'
00000000002210fa         db  0x00 ; '.'
00000000002210fb         db  0x00 ; '.'
00000000002210fc         db  0x00 ; '.'
00000000002210fd         db  0x00 ; '.'
00000000002210fe         db  0x00 ; '.'
00000000002210ff         db  0x00 ; '.'
                     qword_221100:
0000000000221100         db  0x00 ; '.'                                         ; DATA XREF=print_dir+403
0000000000221101         db  0x00 ; '.'
0000000000221102         db  0x00 ; '.'
0000000000221103         db  0x00 ; '.'
0000000000221104         db  0x00 ; '.'
0000000000221105         db  0x00 ; '.'
0000000000221106         db  0x00 ; '.'
0000000000221107         db  0x00 ; '.'
0000000000221108         db  0x00 ; '.'
0000000000221109         db  0x00 ; '.'
000000000022110a         db  0x00 ; '.'
000000000022110b         db  0x00 ; '.'
000000000022110c         db  0x00 ; '.'
000000000022110d         db  0x00 ; '.'
000000000022110e         db  0x00 ; '.'
000000000022110f         db  0x00 ; '.'
0000000000221110         db  0x00 ; '.'
0000000000221111         db  0x00 ; '.'
0000000000221112         db  0x00 ; '.'
0000000000221113         db  0x00 ; '.'
0000000000221114         db  0x00 ; '.'
0000000000221115         db  0x00 ; '.'
0000000000221116         db  0x00 ; '.'
0000000000221117         db  0x00 ; '.'
0000000000221118         db  0x00 ; '.'
0000000000221119         db  0x00 ; '.'
000000000022111a         db  0x00 ; '.'
000000000022111b         db  0x00 ; '.'
000000000022111c         db  0x00 ; '.'
000000000022111d         db  0x00 ; '.'
000000000022111e         db  0x00 ; '.'
000000000022111f         db  0x00 ; '.'
0000000000221120         db  0x00 ; '.'
0000000000221121         db  0x00 ; '.'
0000000000221122         db  0x00 ; '.'
0000000000221123         db  0x00 ; '.'
0000000000221124         db  0x00 ; '.'
0000000000221125         db  0x00 ; '.'
0000000000221126         db  0x00 ; '.'
0000000000221127         db  0x00 ; '.'
0000000000221128         db  0x00 ; '.'
0000000000221129         db  0x00 ; '.'
000000000022112a         db  0x00 ; '.'
000000000022112b         db  0x00 ; '.'
000000000022112c         db  0x00 ; '.'
000000000022112d         db  0x00 ; '.'
000000000022112e         db  0x00 ; '.'
000000000022112f         db  0x00 ; '.'
0000000000221130         db  0x00 ; '.'
0000000000221131         db  0x00 ; '.'
0000000000221132         db  0x00 ; '.'
0000000000221133         db  0x00 ; '.'
0000000000221134         db  0x00 ; '.'
0000000000221135         db  0x00 ; '.'
0000000000221136         db  0x00 ; '.'
0000000000221137         db  0x00 ; '.'
0000000000221138         db  0x00 ; '.'
0000000000221139         db  0x00 ; '.'
000000000022113a         db  0x00 ; '.'
000000000022113b         db  0x00 ; '.'
000000000022113c         db  0x00 ; '.'
000000000022113d         db  0x00 ; '.'
000000000022113e         db  0x00 ; '.'
000000000022113f         db  0x00 ; '.'
                     subdired_obstack:
0000000000221140         db  0x00 ; '.'                                         ; DATA XREF=main+4440, main+4589, print_dir+750
0000000000221141         db  0x00 ; '.'
0000000000221142         db  0x00 ; '.'
0000000000221143         db  0x00 ; '.'
0000000000221144         db  0x00 ; '.'
0000000000221145         db  0x00 ; '.'
0000000000221146         db  0x00 ; '.'
0000000000221147         db  0x00 ; '.'
0000000000221148         db  0x00 ; '.'
0000000000221149         db  0x00 ; '.'
000000000022114a         db  0x00 ; '.'
000000000022114b         db  0x00 ; '.'
000000000022114c         db  0x00 ; '.'
000000000022114d         db  0x00 ; '.'
000000000022114e         db  0x00 ; '.'
000000000022114f         db  0x00 ; '.'
0000000000221150         db  0x00 ; '.'
0000000000221151         db  0x00 ; '.'
0000000000221152         db  0x00 ; '.'
0000000000221153         db  0x00 ; '.'
0000000000221154         db  0x00 ; '.'
0000000000221155         db  0x00 ; '.'
0000000000221156         db  0x00 ; '.'
0000000000221157         db  0x00 ; '.'
0000000000221158         db  0x00 ; '.'
0000000000221159         db  0x00 ; '.'
000000000022115a         db  0x00 ; '.'
000000000022115b         db  0x00 ; '.'
000000000022115c         db  0x00 ; '.'
000000000022115d         db  0x00 ; '.'
000000000022115e         db  0x00 ; '.'
000000000022115f         db  0x00 ; '.'
0000000000221160         db  0x00 ; '.'
0000000000221161         db  0x00 ; '.'
0000000000221162         db  0x00 ; '.'
0000000000221163         db  0x00 ; '.'
0000000000221164         db  0x00 ; '.'
0000000000221165         db  0x00 ; '.'
0000000000221166         db  0x00 ; '.'
0000000000221167         db  0x00 ; '.'
0000000000221168         db  0x00 ; '.'
0000000000221169         db  0x00 ; '.'
000000000022116a         db  0x00 ; '.'
000000000022116b         db  0x00 ; '.'
000000000022116c         db  0x00 ; '.'
000000000022116d         db  0x00 ; '.'
000000000022116e         db  0x00 ; '.'
000000000022116f         db  0x00 ; '.'
0000000000221170         db  0x00 ; '.'
0000000000221171         db  0x00 ; '.'
0000000000221172         db  0x00 ; '.'
0000000000221173         db  0x00 ; '.'
0000000000221174         db  0x00 ; '.'
0000000000221175         db  0x00 ; '.'
0000000000221176         db  0x00 ; '.'
0000000000221177         db  0x00 ; '.'
0000000000221178         db  0x00 ; '.'
0000000000221179         db  0x00 ; '.'
000000000022117a         db  0x00 ; '.'
000000000022117b         db  0x00 ; '.'
000000000022117c         db  0x00 ; '.'
000000000022117d         db  0x00 ; '.'
000000000022117e         db  0x00 ; '.'
000000000022117f         db  0x00 ; '.'
0000000000221180         db  0x00 ; '.'
0000000000221181         db  0x00 ; '.'
0000000000221182         db  0x00 ; '.'
0000000000221183         db  0x00 ; '.'
0000000000221184         db  0x00 ; '.'
0000000000221185         db  0x00 ; '.'
0000000000221186         db  0x00 ; '.'
0000000000221187         db  0x00 ; '.'
0000000000221188         db  0x00 ; '.'
0000000000221189         db  0x00 ; '.'
000000000022118a         db  0x00 ; '.'
000000000022118b         db  0x00 ; '.'
000000000022118c         db  0x00 ; '.'
000000000022118d         db  0x00 ; '.'
000000000022118e         db  0x00 ; '.'
000000000022118f         db  0x00 ; '.'
0000000000221190         db  0x00 ; '.'
0000000000221191         db  0x00 ; '.'
0000000000221192         db  0x00 ; '.'
0000000000221193         db  0x00 ; '.'
0000000000221194         db  0x00 ; '.'
0000000000221195         db  0x00 ; '.'
0000000000221196         db  0x00 ; '.'
0000000000221197         db  0x00 ; '.'
0000000000221198         db  0x00 ; '.'
0000000000221199         db  0x00 ; '.'
000000000022119a         db  0x00 ; '.'
000000000022119b         db  0x00 ; '.'
000000000022119c         db  0x00 ; '.'
000000000022119d         db  0x00 ; '.'
000000000022119e         db  0x00 ; '.'
000000000022119f         db  0x00 ; '.'
                     dired_obstack:
00000000002211a0         db  0x00 ; '.'                                         ; DATA XREF=main+4418, main+4570, print_long_format+889
00000000002211a1         db  0x00 ; '.'
00000000002211a2         db  0x00 ; '.'
00000000002211a3         db  0x00 ; '.'
00000000002211a4         db  0x00 ; '.'
00000000002211a5         db  0x00 ; '.'
00000000002211a6         db  0x00 ; '.'
00000000002211a7         db  0x00 ; '.'
00000000002211a8         db  0x00 ; '.'
00000000002211a9         db  0x00 ; '.'
00000000002211aa         db  0x00 ; '.'
00000000002211ab         db  0x00 ; '.'
00000000002211ac         db  0x00 ; '.'
00000000002211ad         db  0x00 ; '.'
00000000002211ae         db  0x00 ; '.'
00000000002211af         db  0x00 ; '.'
00000000002211b0         db  0x00 ; '.'
00000000002211b1         db  0x00 ; '.'
00000000002211b2         db  0x00 ; '.'
00000000002211b3         db  0x00 ; '.'
00000000002211b4         db  0x00 ; '.'
00000000002211b5         db  0x00 ; '.'
00000000002211b6         db  0x00 ; '.'
00000000002211b7         db  0x00 ; '.'
00000000002211b8         db  0x00 ; '.'
00000000002211b9         db  0x00 ; '.'
00000000002211ba         db  0x00 ; '.'
00000000002211bb         db  0x00 ; '.'
00000000002211bc         db  0x00 ; '.'
00000000002211bd         db  0x00 ; '.'
00000000002211be         db  0x00 ; '.'
00000000002211bf         db  0x00 ; '.'
00000000002211c0         db  0x00 ; '.'
00000000002211c1         db  0x00 ; '.'
00000000002211c2         db  0x00 ; '.'
00000000002211c3         db  0x00 ; '.'
00000000002211c4         db  0x00 ; '.'
00000000002211c5         db  0x00 ; '.'
00000000002211c6         db  0x00 ; '.'
00000000002211c7         db  0x00 ; '.'
00000000002211c8         db  0x00 ; '.'
00000000002211c9         db  0x00 ; '.'
00000000002211ca         db  0x00 ; '.'
00000000002211cb         db  0x00 ; '.'
00000000002211cc         db  0x00 ; '.'
00000000002211cd         db  0x00 ; '.'
00000000002211ce         db  0x00 ; '.'
00000000002211cf         db  0x00 ; '.'
00000000002211d0         db  0x00 ; '.'
00000000002211d1         db  0x00 ; '.'
00000000002211d2         db  0x00 ; '.'
00000000002211d3         db  0x00 ; '.'
00000000002211d4         db  0x00 ; '.'
00000000002211d5         db  0x00 ; '.'
00000000002211d6         db  0x00 ; '.'
00000000002211d7         db  0x00 ; '.'
00000000002211d8         db  0x00 ; '.'
00000000002211d9         db  0x00 ; '.'
00000000002211da         db  0x00 ; '.'
00000000002211db         db  0x00 ; '.'
00000000002211dc         db  0x00 ; '.'
00000000002211dd         db  0x00 ; '.'
00000000002211de         db  0x00 ; '.'
00000000002211df         db  0x00 ; '.'
00000000002211e0         db  0x00 ; '.'
00000000002211e1         db  0x00 ; '.'
00000000002211e2         db  0x00 ; '.'
00000000002211e3         db  0x00 ; '.'
00000000002211e4         db  0x00 ; '.'
00000000002211e5         db  0x00 ; '.'
00000000002211e6         db  0x00 ; '.'
00000000002211e7         db  0x00 ; '.'
00000000002211e8         db  0x00 ; '.'
00000000002211e9         db  0x00 ; '.'
00000000002211ea         db  0x00 ; '.'
00000000002211eb         db  0x00 ; '.'
00000000002211ec         db  0x00 ; '.'
00000000002211ed         db  0x00 ; '.'
00000000002211ee         db  0x00 ; '.'
00000000002211ef         db  0x00 ; '.'
00000000002211f0         db  0x00 ; '.'
00000000002211f1         db  0x00 ; '.'
00000000002211f2         db  0x00 ; '.'
00000000002211f3         db  0x00 ; '.'
00000000002211f4         db  0x00 ; '.'
00000000002211f5         db  0x00 ; '.'
00000000002211f6         db  0x00 ; '.'
00000000002211f7         db  0x00 ; '.'
                     dired_pos:
00000000002211f8         db  0x00 ; '.'                                         ; DATA XREF=main+4550, format_user_or_group+108, format_user_or_group+120, print_type_indicator+43, quote_name+366, quote_name+409, quote_name+426, quote_name+744, quote_name+806, quote_name+921, print_long_format+562
00000000002211f9         db  0x00 ; '.'
00000000002211fa         db  0x00 ; '.'
00000000002211fb         db  0x00 ; '.'
00000000002211fc         db  0x00 ; '.'
00000000002211fd         db  0x00 ; '.'
00000000002211fe         db  0x00 ; '.'
00000000002211ff         db  0x00 ; '.'
                     max_idx:
0000000000221200         db  0x00 ; '.'                                         ; DATA XREF=main+2632, calculate_columns+7, calculate_columns+120
0000000000221201         db  0x00 ; '.'
0000000000221202         db  0x00 ; '.'
0000000000221203         db  0x00 ; '.'
0000000000221204         db  0x00 ; '.'
0000000000221205         db  0x00 ; '.'
0000000000221206         db  0x00 ; '.'
0000000000221207         db  0x00 ; '.'
                     column_info:
0000000000221208         db  0x00 ; '.'                                         ; DATA XREF=calculate_columns+51, calculate_columns+127, calculate_columns+261, calculate_columns+334, calculate_columns+466, calculate_columns+627, calculate_columns+731, print_current_files+84, sub_9150+31
0000000000221209         db  0x00 ; '.'
000000000022120a         db  0x00 ; '.'
000000000022120b         db  0x00 ; '.'
000000000022120c         db  0x00 ; '.'
000000000022120d         db  0x00 ; '.'
000000000022120e         db  0x00 ; '.'
000000000022120f         db  0x00 ; '.'
                     exit_status:
0000000000221210         db  0x00 ; '.'                                         ; DATA XREF=main+123, main+3644, file_failure+51, file_failure+72, file_failure+83, print_dir+381
0000000000221211         db  0x00 ; '.'
0000000000221212         db  0x00 ; '.'
0000000000221213         db  0x00 ; '.'
                     stop_signal_count:
0000000000221214         db  0x00 ; '.'                                         ; DATA XREF=main+3939, stophandler+10, stophandler+19, process_signals+75, process_signals+93, process_signals+131
0000000000221215         db  0x00 ; '.'
0000000000221216         db  0x00 ; '.'
0000000000221217         db  0x00 ; '.'
                     interrupt_signal:
0000000000221218         db  0x00 ; '.'                                         ; DATA XREF=main+3967, sighandler, sighandler+10, stophandler, process_signals+69, process_signals+121
0000000000221219         db  0x00 ; '.'
000000000022121a         db  0x00 ; '.'
000000000022121b         db  0x00 ; '.'
000000000022121c         db  0x00 ; '.'
000000000022121d         db  0x00 ; '.'
000000000022121e         db  0x00 ; '.'
000000000022121f         db  0x00 ; '.'
                     caught_signals:
0000000000221220         db  0x00 ; '.'                                         ; DATA XREF=signal_setup+53, signal_setup+167, signal_setup+183, signal_setup+251, signal_setup+276, process_signals+52
0000000000221221         db  0x00 ; '.'
0000000000221222         db  0x00 ; '.'
0000000000221223         db  0x00 ; '.'
0000000000221224         db  0x00 ; '.'
0000000000221225         db  0x00 ; '.'
0000000000221226         db  0x00 ; '.'
0000000000221227         db  0x00 ; '.'
0000000000221228         db  0x00 ; '.'
0000000000221229         db  0x00 ; '.'
000000000022122a         db  0x00 ; '.'
000000000022122b         db  0x00 ; '.'
000000000022122c         db  0x00 ; '.'
000000000022122d         db  0x00 ; '.'
000000000022122e         db  0x00 ; '.'
000000000022122f         db  0x00 ; '.'
0000000000221230         db  0x00 ; '.'                                         ; DATA XREF=signal_setup+295
0000000000221231         db  0x00 ; '.'
0000000000221232         db  0x00 ; '.'
0000000000221233         db  0x00 ; '.'
0000000000221234         db  0x00 ; '.'
0000000000221235         db  0x00 ; '.'
0000000000221236         db  0x00 ; '.'
0000000000221237         db  0x00 ; '.'
0000000000221238         db  0x00 ; '.'
0000000000221239         db  0x00 ; '.'
000000000022123a         db  0x00 ; '.'
000000000022123b         db  0x00 ; '.'
000000000022123c         db  0x00 ; '.'
000000000022123d         db  0x00 ; '.'
000000000022123e         db  0x00 ; '.'
000000000022123f         db  0x00 ; '.'
0000000000221240         db  0x00 ; '.'                                         ; DATA XREF=signal_setup+308
0000000000221241         db  0x00 ; '.'
0000000000221242         db  0x00 ; '.'
0000000000221243         db  0x00 ; '.'
0000000000221244         db  0x00 ; '.'
0000000000221245         db  0x00 ; '.'
0000000000221246         db  0x00 ; '.'
0000000000221247         db  0x00 ; '.'
0000000000221248         db  0x00 ; '.'
0000000000221249         db  0x00 ; '.'
000000000022124a         db  0x00 ; '.'
000000000022124b         db  0x00 ; '.'
000000000022124c         db  0x00 ; '.'
000000000022124d         db  0x00 ; '.'
000000000022124e         db  0x00 ; '.'
000000000022124f         db  0x00 ; '.'
0000000000221250         db  0x00 ; '.'                                         ; DATA XREF=signal_setup+321
0000000000221251         db  0x00 ; '.'
0000000000221252         db  0x00 ; '.'
0000000000221253         db  0x00 ; '.'
0000000000221254         db  0x00 ; '.'
0000000000221255         db  0x00 ; '.'
0000000000221256         db  0x00 ; '.'
0000000000221257         db  0x00 ; '.'
0000000000221258         db  0x00 ; '.'
0000000000221259         db  0x00 ; '.'
000000000022125a         db  0x00 ; '.'
000000000022125b         db  0x00 ; '.'
000000000022125c         db  0x00 ; '.'
000000000022125d         db  0x00 ; '.'
000000000022125e         db  0x00 ; '.'
000000000022125f         db  0x00 ; '.'
0000000000221260         db  0x00 ; '.'                                         ; DATA XREF=signal_setup+334
0000000000221261         db  0x00 ; '.'
0000000000221262         db  0x00 ; '.'
0000000000221263         db  0x00 ; '.'
0000000000221264         db  0x00 ; '.'
0000000000221265         db  0x00 ; '.'
0000000000221266         db  0x00 ; '.'
0000000000221267         db  0x00 ; '.'
0000000000221268         db  0x00 ; '.'
0000000000221269         db  0x00 ; '.'
000000000022126a         db  0x00 ; '.'
000000000022126b         db  0x00 ; '.'
000000000022126c         db  0x00 ; '.'
000000000022126d         db  0x00 ; '.'
000000000022126e         db  0x00 ; '.'
000000000022126f         db  0x00 ; '.'
0000000000221270         db  0x00 ; '.'                                         ; DATA XREF=signal_setup+347
0000000000221271         db  0x00 ; '.'
0000000000221272         db  0x00 ; '.'
0000000000221273         db  0x00 ; '.'
0000000000221274         db  0x00 ; '.'
0000000000221275         db  0x00 ; '.'
0000000000221276         db  0x00 ; '.'
0000000000221277         db  0x00 ; '.'
0000000000221278         db  0x00 ; '.'
0000000000221279         db  0x00 ; '.'
000000000022127a         db  0x00 ; '.'
000000000022127b         db  0x00 ; '.'
000000000022127c         db  0x00 ; '.'
000000000022127d         db  0x00 ; '.'
000000000022127e         db  0x00 ; '.'
000000000022127f         db  0x00 ; '.'
0000000000221280         db  0x00 ; '.'                                         ; DATA XREF=signal_setup+360
0000000000221281         db  0x00 ; '.'
0000000000221282         db  0x00 ; '.'
0000000000221283         db  0x00 ; '.'
0000000000221284         db  0x00 ; '.'
0000000000221285         db  0x00 ; '.'
0000000000221286         db  0x00 ; '.'
0000000000221287         db  0x00 ; '.'
0000000000221288         db  0x00 ; '.'
0000000000221289         db  0x00 ; '.'
000000000022128a         db  0x00 ; '.'
000000000022128b         db  0x00 ; '.'
000000000022128c         db  0x00 ; '.'
000000000022128d         db  0x00 ; '.'
000000000022128e         db  0x00 ; '.'
000000000022128f         db  0x00 ; '.'
0000000000221290         db  0x00 ; '.'                                         ; DATA XREF=signal_setup+373
0000000000221291         db  0x00 ; '.'
0000000000221292         db  0x00 ; '.'
0000000000221293         db  0x00 ; '.'
0000000000221294         db  0x00 ; '.'
0000000000221295         db  0x00 ; '.'
0000000000221296         db  0x00 ; '.'
0000000000221297         db  0x00 ; '.'
0000000000221298         db  0x00 ; '.'
0000000000221299         db  0x00 ; '.'
000000000022129a         db  0x00 ; '.'
000000000022129b         db  0x00 ; '.'
000000000022129c         db  0x00 ; '.'
000000000022129d         db  0x00 ; '.'
000000000022129e         db  0x00 ; '.'
000000000022129f         db  0x00 ; '.'
                     format_needs_type:
00000000002212a0         db  0x00 ; '.'                                         ; DATA XREF=main+3178, main+3184, gobble_file.constprop.52+859, gobble_file.constprop.52+886, gobble_file.constprop.52+979
                     format_needs_stat:
00000000002212a1         db  0x00 ; '.'                                         ; DATA XREF=main+3169, main+4024, gobble_file.constprop.52+825
00000000002212a2         db  0x00 ; '.'
00000000002212a3         db  0x00 ; '.'
00000000002212a4         db  0x00 ; '.'
00000000002212a5         db  0x00 ; '.'
00000000002212a6         db  0x00 ; '.'
00000000002212a7         db  0x00 ; '.'
                     localtz:
00000000002212a8         db  0x00 ; '.'                                         ; DATA XREF=main+3135, print_long_format+1381, print_long_format+1495, print_long_format+2293, print_long_format+2334
00000000002212a9         db  0x00 ; '.'
00000000002212aa         db  0x00 ; '.'
00000000002212ab         db  0x00 ; '.'
00000000002212ac         db  0x00 ; '.'
00000000002212ad         db  0x00 ; '.'
00000000002212ae         db  0x00 ; '.'
00000000002212af         db  0x00 ; '.'
                     line_length:
00000000002212b0         db  0x00 ; '.'                                         ; DATA XREF=main+434, main+507, main+2601, main+2671, set_line_length+80, set_line_length+108, print_name_with_quoting+354, calculate_columns+459, print_with_separator+88, print_with_separator+126, print_current_files+56
00000000002212b1         db  0x00 ; '.'
00000000002212b2         db  0x00 ; '.'
00000000002212b3         db  0x00 ; '.'
00000000002212b4         db  0x00 ; '.'
00000000002212b5         db  0x00 ; '.'
00000000002212b6         db  0x00 ; '.'
00000000002212b7         db  0x00 ; '.'
                     print_dir_name:
00000000002212b8         db  0x00 ; '.'                                         ; DATA XREF=main+133, main+3390, main+5045, print_dir+489
00000000002212b9         db  0x00 ; '.'
00000000002212ba         db  0x00 ; '.'
00000000002212bb         db  0x00 ; '.'
00000000002212bc         db  0x00 ; '.'
00000000002212bd         db  0x00 ; '.'
00000000002212be         db  0x00 ; '.'
00000000002212bf         db  0x00 ; '.'
                     tabsize:
00000000002212c0         db  0x00 ; '.'                                         ; DATA XREF=main+532, main+576, main+1020, main+2548, indent+86, indent+186
00000000002212c1         db  0x00 ; '.'
00000000002212c2         db  0x00 ; '.'
00000000002212c3         db  0x00 ; '.'
00000000002212c4         db  0x00 ; '.'
00000000002212c5         db  0x00 ; '.'
00000000002212c6         db  0x00 ; '.'
00000000002212c7         db  0x00 ; '.'
                     dirname_quoting_options:
00000000002212c8         db  0x00 ; '.'                                         ; DATA XREF=main+2835, print_dir+743
00000000002212c9         db  0x00 ; '.'
00000000002212ca         db  0x00 ; '.'
00000000002212cb         db  0x00 ; '.'
00000000002212cc         db  0x00 ; '.'
00000000002212cd         db  0x00 ; '.'
00000000002212ce         db  0x00 ; '.'
00000000002212cf         db  0x00 ; '.'
                     filename_quoting_options:
00000000002212d0         db  0x00 ; '.'                                         ; DATA XREF=main+2735, main+2784, main+4608, needs_quoting+24, print_name_with_quoting+57, print_name_with_quoting+300, length_of_file_name_and_frills+114
00000000002212d1         db  0x00 ; '.'
00000000002212d2         db  0x00 ; '.'
00000000002212d3         db  0x00 ; '.'
00000000002212d4         db  0x00 ; '.'
00000000002212d5         db  0x00 ; '.'
00000000002212d6         db  0x00 ; '.'
00000000002212d7         db  0x00 ; '.'
                     qmark_funny_chars:
00000000002212d8         db  0x00 ; '.'                                         ; DATA XREF=main+175, main+1650, main+2283, main+5285, quote_name_buf.constprop.54+70
00000000002212d9         db  0x00 ; '.'
00000000002212da         db  0x00 ; '.'
00000000002212db         db  0x00 ; '.'
00000000002212dc         db  0x00 ; '.'
00000000002212dd         db  0x00 ; '.'
00000000002212de         db  0x00 ; '.'
00000000002212df         db  0x00 ; '.'
                     hide_patterns:
00000000002212e0         db  0x00 ; '.'                                         ; DATA XREF=main+342, main+1925, main+1932, print_dir+577
00000000002212e1         db  0x00 ; '.'
00000000002212e2         db  0x00 ; '.'
00000000002212e3         db  0x00 ; '.'
00000000002212e4         db  0x00 ; '.'
00000000002212e5         db  0x00 ; '.'
00000000002212e6         db  0x00 ; '.'
00000000002212e7         db  0x00 ; '.'
                     ignore_patterns:
00000000002212e8         db  0x00 ; '.'                                         ; DATA XREF=main+331, main+1142, main+1153, main+1244, main+1263, main+1282, main+1303, print_dir+1232
00000000002212e9         db  0x00 ; '.'
00000000002212ea         db  0x00 ; '.'
00000000002212eb         db  0x00 ; '.'
00000000002212ec         db  0x00 ; '.'
00000000002212ed         db  0x00 ; '.'
00000000002212ee         db  0x00 ; '.'
00000000002212ef         db  0x00 ; '.'
                     ignore_mode:
00000000002212f0         db  0x00 ; '.'                                         ; DATA XREF=main+321, main+797, main+898, main+1315, print_dir+544
00000000002212f1         db  0x00 ; '.'
00000000002212f2         db  0x00 ; '.'
00000000002212f3         db  0x00 ; '.'
                     directories_first:
00000000002212f4         db  0x00 ; '.'                                         ; DATA XREF=main+1948, main+2998, main+4068, main+4866, sort_files+223
                     immediate_dirs:
00000000002212f5         db  0x00 ; '.'                                         ; DATA XREF=main+314, main+854, main+3825, main+4122, main+4472, gobble_file.constprop.52+2677
                     recursive:
00000000002212f6         db  0x00 ; '.'                                         ; DATA XREF=main+307, main+1054, main+3027, main+4017, print_dir+476, print_dir+923, print_dir+1370
00000000002212f7         db  0x00 ; '.'
                     dereference:
00000000002212f8         db  0x00 ; '.'                                         ; DATA XREF=main+297, main+1097, main+1165, main+2064, main+3014, main+4160, gobble_file.constprop.52+316, gobble_file.constprop.52+932, gobble_file.constprop.52+1155
00000000002212f9         db  0x00 ; '.'
00000000002212fa         db  0x00 ; '.'
00000000002212fb         db  0x00 ; '.'
                     print_inode:
00000000002212fc         db  0x00 ; '.'                                         ; DATA XREF=main+290, main+712, print_file_name_and_frills+39, print_long_format+141, print_long_format+1144, length_of_file_name_and_frills+31, gobble_file.constprop.52+731, gobble_file.constprop.52+848
                     check_symlink_mode:
00000000002212fd         db  0x00 ; '.'                                         ; DATA XREF=main+3007, gobble_file.constprop.52+958, gobble_file.constprop.52+2384, gobble_file.constprop.52+2560
00000000002212fe         db  0x00 ; '.'
00000000002212ff         db  0x00 ; '.'
                     color_buf:
0000000000221300         db  0x00 ; '.'                                         ; DATA XREF=main+5495, main+5740
0000000000221301         db  0x00 ; '.'
0000000000221302         db  0x00 ; '.'
0000000000221303         db  0x00 ; '.'
0000000000221304         db  0x00 ; '.'
0000000000221305         db  0x00 ; '.'
0000000000221306         db  0x00 ; '.'
0000000000221307         db  0x00 ; '.'
                     color_ext_list:
0000000000221308         db  0x00 ; '.'                                         ; DATA XREF=main+5752, main+5939, main+5966, print_name_with_quoting+648
0000000000221309         db  0x00 ; '.'
000000000022130a         db  0x00 ; '.'
000000000022130b         db  0x00 ; '.'
000000000022130c         db  0x00 ; '.'
000000000022130d         db  0x00 ; '.'
000000000022130e         db  0x00 ; '.'
000000000022130f         db  0x00 ; '.'
                     used_color:
0000000000221310         db  0x00 ; '.'                                         ; DATA XREF=main+3567, put_indicator, put_indicator+53, process_signals+141
                     print_hyperlink:
0000000000221311         db  0x00 ; '.'                                         ; DATA XREF=main+837, main+2569, main+2575, main+3204, main+4080, gobble_file.constprop.52+260, print_dir+727
                     print_with_color:
0000000000221312         db  0x00 ; '.'                                         ; DATA XREF=main+830, main+2162, main+2541, main+2978, main+3558, main+4042, main+4859, main+4879, main+5778, set_normal_color, print_name_with_quoting+29
0000000000221313         db  0x00 ; '.'
                     indicator_style:
0000000000221314         db  0x00 ; '.'                                         ; DATA XREF=main+280, main+1192, main+1786, main+2049, main+2295, main+2748, main+4055, main+4136, get_type_indicator+21, get_type_indicator+72, print_file_name_and_frills+248
0000000000221315         db  0x00 ; '.'
0000000000221316         db  0x00 ; '.'
0000000000221317         db  0x00 ; '.'
                     dired:
0000000000221318         db  0x00 ; '.'                                         ; DATA XREF=main+1207, main+2847, main+2869, main+3191, main+3580, quote_name+336, quote_name+419, print_long_format+493, print_dir+705, print_dir+959
0000000000221319         db  0x00 ; '.'
000000000022131a         db  0x00 ; '.'
000000000022131b         db  0x00 ; '.'
                     file_human_output_opts:
000000000022131c         db  0x00 ; '.'                                         ; DATA XREF=main+731, main+1613, main+2214, main+4223, print_long_format+675, gobble_file.constprop.52+2114
000000000022131d         db  0x00 ; '.'
000000000022131e         db  0x00 ; '.'
000000000022131f         db  0x00 ; '.'
                     output_block_size:
0000000000221320         db  0x00 ; '.'                                         ; DATA XREF=main+741, main+1623, main+2181, main+2220, main+2587, main+4183, main+4229, main+4264, print_file_name_and_frills+335, print_long_format+2036, length_of_file_name_and_frills+266
0000000000221321         db  0x00 ; '.'
0000000000221322         db  0x00 ; '.'
0000000000221323         db  0x00 ; '.'
0000000000221324         db  0x00 ; '.'
0000000000221325         db  0x00 ; '.'
0000000000221326         db  0x00 ; '.'
0000000000221327         db  0x00 ; '.'
                     human_output_opts:
0000000000221328         db  0x00 ; '.'                                         ; DATA XREF=main+721, main+1603, main+2188, main+2208, main+4190, main+4217, main+4254, print_file_name_and_frills+320, print_long_format+2051, length_of_file_name_and_frills+276, gobble_file.constprop.52+578
0000000000221329         db  0x00 ; '.'
000000000022132a         db  0x00 ; '.'
000000000022132b         db  0x00 ; '.'
                     print_block_size:
000000000022132c         db  0x00 ; '.'                                         ; DATA XREF=main+273, main+823, main+2259, main+4004, print_file_name_and_frills+113, print_long_format+291, length_of_file_name_and_frills+68, length_of_file_name_and_frills+218, gobble_file.constprop.52+562, print_dir+946, print_dir+1357
                     numeric_ids:
000000000022132d         db  0x00 ; '.'                                         ; DATA XREF=main+266, main+686, format_user+20, print_long_format+1755, format_user_width+24, gobble_file.constprop.52+2816
                     print_author:
000000000022132e         db  0x00 ; '.'                                         ; DATA XREF=main+2478, print_long_format+528, print_long_format+595, gobble_file.constprop.52+671
                     sort_reverse:
000000000022132f         db  0x00 ; '.'                                         ; DATA XREF=main+259, main+2271, sort_files+237
                     sort_type:
0000000000221330         db  0x00 ; '.'                                         ; DATA XREF=main+249, main+807, main+925, main+945, main+1034, main+1592, main+2239, main+2443, main+3142, main+5305, sort_files+82
0000000000221331         db  0x00 ; '.'
0000000000221332         db  0x00 ; '.'
0000000000221333         db  0x00 ; '.'
                     time_type:
0000000000221334         db  0x00 ; '.'                                         ; DATA XREF=main+239, main+866, main+1520, main+2463, main+2876, sort_files+214, print_long_format+93, print_long_format+1114
0000000000221335         db  0x00 ; '.'
0000000000221336         db  0x00 ; '.'
0000000000221337         db  0x00 ; '.'
                     format:
0000000000221338         db  0x00 ; '.'                                         ; DATA XREF=main+217, main+693, main+768, main+790, main+1219, main+1330, main+1343, main+1960, main+2038, main+2310, main+2332
0000000000221339         db  0x00 ; '.'
000000000022133a         db  0x00 ; '.'
000000000022133b         db  0x00 ; '.'
                     file_size_width:
000000000022133c         db  0x00 ; '.'                                         ; DATA XREF=print_long_format+694, print_long_format+2100, print_long_format+2251, clear_files+188, gobble_file.constprop.52+1791, gobble_file.constprop.52+2140, gobble_file.constprop.52+2152
000000000022133d         db  0x00 ; '.'
000000000022133e         db  0x00 ; '.'
000000000022133f         db  0x00 ; '.'
                     minor_device_number_width:
0000000000221340         db  0x00 ; '.'                                         ; DATA XREF=print_long_format+2086, print_long_format+2153, clear_files+178, gobble_file.constprop.52+1763, gobble_file.constprop.52+1773
0000000000221341         db  0x00 ; '.'
0000000000221342         db  0x00 ; '.'
0000000000221343         db  0x00 ; '.'
                     major_device_number_width:
0000000000221344         db  0x00 ; '.'                                         ; DATA XREF=print_long_format+2080, print_long_format+2210, clear_files+168, gobble_file.constprop.52+1714, gobble_file.constprop.52+1722, gobble_file.constprop.52+1781
0000000000221345         db  0x00 ; '.'
0000000000221346         db  0x00 ; '.'
0000000000221347         db  0x00 ; '.'
                     author_width:
0000000000221348         db  0x00 ; '.'                                         ; DATA XREF=print_long_format+1706, clear_files+148, gobble_file.constprop.52+2784, gobble_file.constprop.52+2796
0000000000221349         db  0x00 ; '.'
000000000022134a         db  0x00 ; '.'
000000000022134b         db  0x00 ; '.'
                     group_width:
000000000022134c         db  0x00 ; '.'                                         ; DATA XREF=print_long_format+1735, clear_files+138, gobble_file.constprop.52+2924, gobble_file.constprop.52+2936
000000000022134d         db  0x00 ; '.'
000000000022134e         db  0x00 ; '.'
000000000022134f         db  0x00 ; '.'
                     owner_width:
0000000000221350         db  0x00 ; '.'                                         ; DATA XREF=print_long_format+1818, clear_files+128, gobble_file.constprop.52+2728, gobble_file.constprop.52+2740
0000000000221351         db  0x00 ; '.'
0000000000221352         db  0x00 ; '.'
0000000000221353         db  0x00 ; '.'
                     scontext_width:
0000000000221354         db  0x00 ; '.'                                         ; DATA XREF=print_file_name_and_frills+205, print_long_format+1671, length_of_file_name_and_frills+321, clear_files+158, gobble_file.constprop.52+705, gobble_file.constprop.52+2080
0000000000221355         db  0x00 ; '.'
0000000000221356         db  0x00 ; '.'
0000000000221357         db  0x00 ; '.'
                     nlink_width:
0000000000221358         db  0x00 ; '.'                                         ; DATA XREF=print_long_format+442, clear_files+118, gobble_file.constprop.52+1624, gobble_file.constprop.52+1632
0000000000221359         db  0x00 ; '.'
000000000022135a         db  0x00 ; '.'
000000000022135b         db  0x00 ; '.'
                     block_size_width:
000000000022135c         db  0x00 ; '.'                                         ; DATA XREF=print_file_name_and_frills+153, print_long_format+315, length_of_file_name_and_frills+81, clear_files+108, gobble_file.constprop.52+617, gobble_file.constprop.52+625
000000000022135d         db  0x00 ; '.'
000000000022135e         db  0x00 ; '.'
000000000022135f         db  0x00 ; '.'
                     inode_number_width:
0000000000221360         db  0x00 ; '.'                                         ; DATA XREF=print_file_name_and_frills+88, print_long_format+193, length_of_file_name_and_frills+57, clear_files+98, gobble_file.constprop.52+1568, gobble_file.constprop.52+1580
0000000000221361         db  0x00 ; '.'
0000000000221362         db  0x00 ; '.'
0000000000221363         db  0x00 ; '.'
                     any_has_acl:
0000000000221364         db  0x00 ; '.'                                         ; DATA XREF=print_long_format+72, print_long_format+1021, clear_files+91, gobble_file.constprop.52+2287
                     print_scontext:
0000000000221365         db  0x00 ; '.'                                         ; DATA XREF=main+353, main+913, main+3991, print_file_name_and_frills+178, print_long_format+608, print_long_format+1888, length_of_file_name_and_frills+95, length_of_file_name_and_frills+344, gobble_file.constprop.52+425, gobble_file.constprop.52+684, gobble_file.constprop.52+2752
0000000000221366         db  0x00 ; '.'
0000000000221367         db  0x00 ; '.'
0000000000221368         db  0x00 ; '.'
0000000000221369         db  0x00 ; '.'
000000000022136a         db  0x00 ; '.'
000000000022136b         db  0x00 ; '.'
000000000022136c         db  0x00 ; '.'
000000000022136d         db  0x00 ; '.'
000000000022136e         db  0x00 ; '.'
000000000022136f         db  0x00 ; '.'
                     current_time:
0000000000221370         db  0x00 ; '.'                                         ; DATA XREF=main+140, print_long_format+1410, print_long_format+1936, print_long_format+1948
0000000000221371         db  0x00 ; '.'
0000000000221372         db  0x00 ; '.'
0000000000221373         db  0x00 ; '.'
0000000000221374         db  0x00 ; '.'
0000000000221375         db  0x00 ; '.'
0000000000221376         db  0x00 ; '.'
0000000000221377         db  0x00 ; '.'
                     qword_221378:
0000000000221378         db  0x00 ; '.'                                         ; DATA XREF=main+164, print_long_format+1431, print_long_format+1960
0000000000221379         db  0x00 ; '.'
000000000022137a         db  0x00 ; '.'
000000000022137b         db  0x00 ; '.'
000000000022137c         db  0x00 ; '.'
000000000022137d         db  0x00 ; '.'
000000000022137e         db  0x00 ; '.'
000000000022137f         db  0x00 ; '.'
                     pending_dirs:
0000000000221380         db  0x00 ; '.'                                         ; DATA XREF=main+153, main+3334, main+3397, main+3420, main+4504, main+4558, queue_directory+69, queue_directory+80
0000000000221381         db  0x00 ; '.'
0000000000221382         db  0x00 ; '.'
0000000000221383         db  0x00 ; '.'
0000000000221384         db  0x00 ; '.'
0000000000221385         db  0x00 ; '.'
0000000000221386         db  0x00 ; '.'
0000000000221387         db  0x00 ; '.'
                     hostname:
0000000000221388         db  0x00 ; '.'                                         ; DATA XREF=main+4392, quote_name+202
0000000000221389         db  0x00 ; '.'
000000000022138a         db  0x00 ; '.'
000000000022138b         db  0x00 ; '.'
000000000022138c         db  0x00 ; '.'
000000000022138d         db  0x00 ; '.'
000000000022138e         db  0x00 ; '.'
000000000022138f         db  0x00 ; '.'
                     color_symlink_as_referent:
0000000000221390         db  0x00 ; '.'                                         ; DATA XREF=main+4924, main+5831, print_name_with_quoting+135, print_name_with_quoting+223, gobble_file.constprop.52+945
0000000000221391         db  0x00 ; '.'
0000000000221392         db  0x00 ; '.'
0000000000221393         db  0x00 ; '.'
0000000000221394         db  0x00 ; '.'
0000000000221395         db  0x00 ; '.'
0000000000221396         db  0x00 ; '.'
0000000000221397         db  0x00 ; '.'
                     sorted_file_alloc:
0000000000221398         db  0x00 ; '.'                                         ; DATA XREF=sort_files+17, sort_files+347
0000000000221399         db  0x00 ; '.'
000000000022139a         db  0x00 ; '.'
000000000022139b         db  0x00 ; '.'
000000000022139c         db  0x00 ; '.'
000000000022139d         db  0x00 ; '.'
000000000022139e         db  0x00 ; '.'
000000000022139f         db  0x00 ; '.'
                     sorted_file:
00000000002213a0         db  0x00 ; '.'                                         ; DATA XREF=sort_files+46, sort_files+133, sort_files+199, sort_files+272, sort_files+336, extract_dirs_from_files+80, extract_dirs_from_files+133, calculate_columns+424, print_with_separator+96, print_current_files+96, print_current_files+203
00000000002213a1         db  0x00 ; '.'
00000000002213a2         db  0x00 ; '.'
00000000002213a3         db  0x00 ; '.'
00000000002213a4         db  0x00 ; '.'
00000000002213a5         db  0x00 ; '.'
00000000002213a6         db  0x00 ; '.'
00000000002213a7         db  0x00 ; '.'
                     align_variable_outer_quotes:
00000000002213a8         db  0x00 ; '.'                                         ; DATA XREF=main+2713, main+2719, quote_name_buf.constprop.54+309, quote_name_buf.constprop.54+408, quote_name_buf.constprop.54+731, quote_name_buf.constprop.54+776, quote_name_buf.constprop.54+987, quote_name+179, gobble_file.constprop.52+244
                     cwd_some_quoted:
00000000002213a9         db  0x00 ; '.'                                         ; DATA XREF=quote_name_buf.constprop.54+320, quote_name+624, clear_files+83, gobble_file.constprop.52+235, gobble_file.constprop.52+2061
00000000002213aa         db  0x00 ; '.'
00000000002213ab         db  0x00 ; '.'
00000000002213ac         db  0x00 ; '.'
00000000002213ad         db  0x00 ; '.'
00000000002213ae         db  0x00 ; '.'
00000000002213af         db  0x00 ; '.'
                     cwd_n_used:
00000000002213b0         db  0x00 ; '.'                                         ; DATA XREF=main+3251, main+3316, main+4485, sort_files+1, sort_files+126, sort_files+192, sort_files+329, extract_dirs_from_files+48, extract_dirs_from_files+121, extract_dirs_from_files+184, calculate_columns
00000000002213b1         db  0x00 ; '.'
00000000002213b2         db  0x00 ; '.'
00000000002213b3         db  0x00 ; '.'
00000000002213b4         db  0x00 ; '.'
00000000002213b5         db  0x00 ; '.'
00000000002213b6         db  0x00 ; '.'
00000000002213b7         db  0x00 ; '.'
                     cwd_n_alloc:
00000000002213b8         db  0x00 ; '.'                                         ; DATA XREF=main+3225, gobble_file.constprop.52+58, gobble_file.constprop.52+128
00000000002213b9         db  0x00 ; '.'
00000000002213ba         db  0x00 ; '.'
00000000002213bb         db  0x00 ; '.'
00000000002213bc         db  0x00 ; '.'
00000000002213bd         db  0x00 ; '.'
00000000002213be         db  0x00 ; '.'
00000000002213bf         db  0x00 ; '.'
                     cwd_file:
00000000002213c0         db  0x00 ; '.'                                         ; DATA XREF=main+3262, sort_files+39, sort_files+145, gobble_file.constprop.52+65, gobble_file.constprop.52+145
00000000002213c1         db  0x00 ; '.'
00000000002213c2         db  0x00 ; '.'
00000000002213c3         db  0x00 ; '.'
00000000002213c4         db  0x00 ; '.'
00000000002213c5         db  0x00 ; '.'
00000000002213c6         db  0x00 ; '.'
00000000002213c7         db  0x00 ; '.'
                     active_dir_set:
00000000002213c8         db  0x00 ; '.'                                         ; DATA XREF=main+3072, main+3427, main+3593, extract_dirs_from_files+26, print_dir+81, print_dir+272
00000000002213c9         db  0x00 ; '.'
00000000002213ca         db  0x00 ; '.'
00000000002213cb         db  0x00 ; '.'
00000000002213cc         db  0x00 ; '.'
00000000002213cd         db  0x00 ; '.'
00000000002213ce         db  0x00 ; '.'
00000000002213cf         db  0x00 ; '.'
                     ignore_EPIPE:
00000000002213d0         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
00000000002213d1         db  0x00 ; '.'
00000000002213d2         db  0x00 ; '.'
00000000002213d3         db  0x00 ; '.'
00000000002213d4         db  0x00 ; '.'
00000000002213d5         db  0x00 ; '.'
00000000002213d6         db  0x00 ; '.'
00000000002213d7         db  0x00 ; '.'
                     file_name:
00000000002213d8         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
00000000002213d9         db  0x00 ; '.'
00000000002213da         db  0x00 ; '.'
00000000002213db         db  0x00 ; '.'
00000000002213dc         db  0x00 ; '.'
00000000002213dd         db  0x00 ; '.'
00000000002213de         db  0x00 ; '.'
00000000002213df         db  0x00 ; '.'
                     nogroup_alist:
00000000002213e0         db  0x00 ; '.'                                         ; DATA XREF=getgidbyname+80, getgidbyname+224, getgidbyname+231
00000000002213e1         db  0x00 ; '.'
00000000002213e2         db  0x00 ; '.'
00000000002213e3         db  0x00 ; '.'
00000000002213e4         db  0x00 ; '.'
00000000002213e5         db  0x00 ; '.'
00000000002213e6         db  0x00 ; '.'
00000000002213e7         db  0x00 ; '.'
                     group_alist:
00000000002213e8         db  0x00 ; '.'                                         ; DATA XREF=getgroup+4, getgroup+110, getgroup+117, getgidbyname+7, getgidbyname+201, getgidbyname+208
00000000002213e9         db  0x00 ; '.'
00000000002213ea         db  0x00 ; '.'
00000000002213eb         db  0x00 ; '.'
00000000002213ec         db  0x00 ; '.'
00000000002213ed         db  0x00 ; '.'
00000000002213ee         db  0x00 ; '.'
00000000002213ef         db  0x00 ; '.'
                     nouser_alist:
00000000002213f0         db  0x00 ; '.'                                         ; DATA XREF=getuidbyname+80, getuidbyname+224, getuidbyname+231
00000000002213f1         db  0x00 ; '.'
00000000002213f2         db  0x00 ; '.'
00000000002213f3         db  0x00 ; '.'
00000000002213f4         db  0x00 ; '.'
00000000002213f5         db  0x00 ; '.'
00000000002213f6         db  0x00 ; '.'
00000000002213f7         db  0x00 ; '.'
                     user_alist:
00000000002213f8         db  0x00 ; '.'                                         ; DATA XREF=getuser+4, getuser+110, getuser+117, getuidbyname+7, getuidbyname+201, getuidbyname+208
00000000002213f9         db  0x00 ; '.'
00000000002213fa         db  0x00 ; '.'
00000000002213fb         db  0x00 ; '.'
00000000002213fc         db  0x00 ; '.'
00000000002213fd         db  0x00 ; '.'
00000000002213fe         db  0x00 ; '.'
00000000002213ff         db  0x00 ; '.'
                     program_name:
0000000000221400         db  0x00 ; '.'                                         ; DATA XREF=usage+21, set_program_name+109
0000000000221401         db  0x00 ; '.'
0000000000221402         db  0x00 ; '.'
0000000000221403         db  0x00 ; '.'
0000000000221404         db  0x00 ; '.'
0000000000221405         db  0x00 ; '.'
0000000000221406         db  0x00 ; '.'
0000000000221407         db  0x00 ; '.'
0000000000221408         db  0x00 ; '.'
0000000000221409         db  0x00 ; '.'
000000000022140a         db  0x00 ; '.'
000000000022140b         db  0x00 ; '.'
000000000022140c         db  0x00 ; '.'
000000000022140d         db  0x00 ; '.'
000000000022140e         db  0x00 ; '.'
000000000022140f         db  0x00 ; '.'
0000000000221410         db  0x00 ; '.'
0000000000221411         db  0x00 ; '.'
0000000000221412         db  0x00 ; '.'
0000000000221413         db  0x00 ; '.'
0000000000221414         db  0x00 ; '.'
0000000000221415         db  0x00 ; '.'
0000000000221416         db  0x00 ; '.'
0000000000221417         db  0x00 ; '.'
0000000000221418         db  0x00 ; '.'
0000000000221419         db  0x00 ; '.'
000000000022141a         db  0x00 ; '.'
000000000022141b         db  0x00 ; '.'
000000000022141c         db  0x00 ; '.'
000000000022141d         db  0x00 ; '.'
000000000022141e         db  0x00 ; '.'
000000000022141f         db  0x00 ; '.'
                     slot0:
0000000000221420         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
0000000000221421         db  0x00 ; '.'
0000000000221422         db  0x00 ; '.'
0000000000221423         db  0x00 ; '.'
0000000000221424         db  0x00 ; '.'
0000000000221425         db  0x00 ; '.'
0000000000221426         db  0x00 ; '.'
0000000000221427         db  0x00 ; '.'
0000000000221428         db  0x00 ; '.'
0000000000221429         db  0x00 ; '.'
000000000022142a         db  0x00 ; '.'
000000000022142b         db  0x00 ; '.'
000000000022142c         db  0x00 ; '.'
000000000022142d         db  0x00 ; '.'
000000000022142e         db  0x00 ; '.'
000000000022142f         db  0x00 ; '.'
0000000000221430         db  0x00 ; '.'
0000000000221431         db  0x00 ; '.'
0000000000221432         db  0x00 ; '.'
0000000000221433         db  0x00 ; '.'
0000000000221434         db  0x00 ; '.'
0000000000221435         db  0x00 ; '.'
0000000000221436         db  0x00 ; '.'
0000000000221437         db  0x00 ; '.'
0000000000221438         db  0x00 ; '.'
0000000000221439         db  0x00 ; '.'
000000000022143a         db  0x00 ; '.'
000000000022143b         db  0x00 ; '.'
000000000022143c         db  0x00 ; '.'
000000000022143d         db  0x00 ; '.'
000000000022143e         db  0x00 ; '.'
000000000022143f         db  0x00 ; '.'
0000000000221440         db  0x00 ; '.'
0000000000221441         db  0x00 ; '.'
0000000000221442         db  0x00 ; '.'
0000000000221443         db  0x00 ; '.'
0000000000221444         db  0x00 ; '.'
0000000000221445         db  0x00 ; '.'
0000000000221446         db  0x00 ; '.'
0000000000221447         db  0x00 ; '.'
0000000000221448         db  0x00 ; '.'
0000000000221449         db  0x00 ; '.'
000000000022144a         db  0x00 ; '.'
000000000022144b         db  0x00 ; '.'
000000000022144c         db  0x00 ; '.'
000000000022144d         db  0x00 ; '.'
000000000022144e         db  0x00 ; '.'
000000000022144f         db  0x00 ; '.'
0000000000221450         db  0x00 ; '.'
0000000000221451         db  0x00 ; '.'
0000000000221452         db  0x00 ; '.'
0000000000221453         db  0x00 ; '.'
0000000000221454         db  0x00 ; '.'
0000000000221455         db  0x00 ; '.'
0000000000221456         db  0x00 ; '.'
0000000000221457         db  0x00 ; '.'
0000000000221458         db  0x00 ; '.'
0000000000221459         db  0x00 ; '.'
000000000022145a         db  0x00 ; '.'
000000000022145b         db  0x00 ; '.'
000000000022145c         db  0x00 ; '.'
000000000022145d         db  0x00 ; '.'
000000000022145e         db  0x00 ; '.'
000000000022145f         db  0x00 ; '.'
0000000000221460         db  0x00 ; '.'
0000000000221461         db  0x00 ; '.'
0000000000221462         db  0x00 ; '.'
0000000000221463         db  0x00 ; '.'
0000000000221464         db  0x00 ; '.'
0000000000221465         db  0x00 ; '.'
0000000000221466         db  0x00 ; '.'
0000000000221467         db  0x00 ; '.'
0000000000221468         db  0x00 ; '.'
0000000000221469         db  0x00 ; '.'
000000000022146a         db  0x00 ; '.'
000000000022146b         db  0x00 ; '.'
000000000022146c         db  0x00 ; '.'
000000000022146d         db  0x00 ; '.'
000000000022146e         db  0x00 ; '.'
000000000022146f         db  0x00 ; '.'
0000000000221470         db  0x00 ; '.'
0000000000221471         db  0x00 ; '.'
0000000000221472         db  0x00 ; '.'
0000000000221473         db  0x00 ; '.'
0000000000221474         db  0x00 ; '.'
0000000000221475         db  0x00 ; '.'
0000000000221476         db  0x00 ; '.'
0000000000221477         db  0x00 ; '.'
0000000000221478         db  0x00 ; '.'
0000000000221479         db  0x00 ; '.'
000000000022147a         db  0x00 ; '.'
000000000022147b         db  0x00 ; '.'
000000000022147c         db  0x00 ; '.'
000000000022147d         db  0x00 ; '.'
000000000022147e         db  0x00 ; '.'
000000000022147f         db  0x00 ; '.'
0000000000221480         db  0x00 ; '.'
0000000000221481         db  0x00 ; '.'
0000000000221482         db  0x00 ; '.'
0000000000221483         db  0x00 ; '.'
0000000000221484         db  0x00 ; '.'
0000000000221485         db  0x00 ; '.'
0000000000221486         db  0x00 ; '.'
0000000000221487         db  0x00 ; '.'
0000000000221488         db  0x00 ; '.'
0000000000221489         db  0x00 ; '.'
000000000022148a         db  0x00 ; '.'
000000000022148b         db  0x00 ; '.'
000000000022148c         db  0x00 ; '.'
000000000022148d         db  0x00 ; '.'
000000000022148e         db  0x00 ; '.'
000000000022148f         db  0x00 ; '.'
0000000000221490         db  0x00 ; '.'
0000000000221491         db  0x00 ; '.'
0000000000221492         db  0x00 ; '.'
0000000000221493         db  0x00 ; '.'
0000000000221494         db  0x00 ; '.'
0000000000221495         db  0x00 ; '.'
0000000000221496         db  0x00 ; '.'
0000000000221497         db  0x00 ; '.'
0000000000221498         db  0x00 ; '.'
0000000000221499         db  0x00 ; '.'
000000000022149a         db  0x00 ; '.'
000000000022149b         db  0x00 ; '.'
000000000022149c         db  0x00 ; '.'
000000000022149d         db  0x00 ; '.'
000000000022149e         db  0x00 ; '.'
000000000022149f         db  0x00 ; '.'
00000000002214a0         db  0x00 ; '.'
00000000002214a1         db  0x00 ; '.'
00000000002214a2         db  0x00 ; '.'
00000000002214a3         db  0x00 ; '.'
00000000002214a4         db  0x00 ; '.'
00000000002214a5         db  0x00 ; '.'
00000000002214a6         db  0x00 ; '.'
00000000002214a7         db  0x00 ; '.'
00000000002214a8         db  0x00 ; '.'
00000000002214a9         db  0x00 ; '.'
00000000002214aa         db  0x00 ; '.'
00000000002214ab         db  0x00 ; '.'
00000000002214ac         db  0x00 ; '.'
00000000002214ad         db  0x00 ; '.'
00000000002214ae         db  0x00 ; '.'
00000000002214af         db  0x00 ; '.'
00000000002214b0         db  0x00 ; '.'
00000000002214b1         db  0x00 ; '.'
00000000002214b2         db  0x00 ; '.'
00000000002214b3         db  0x00 ; '.'
00000000002214b4         db  0x00 ; '.'
00000000002214b5         db  0x00 ; '.'
00000000002214b6         db  0x00 ; '.'
00000000002214b7         db  0x00 ; '.'
00000000002214b8         db  0x00 ; '.'
00000000002214b9         db  0x00 ; '.'
00000000002214ba         db  0x00 ; '.'
00000000002214bb         db  0x00 ; '.'
00000000002214bc         db  0x00 ; '.'
00000000002214bd         db  0x00 ; '.'
00000000002214be         db  0x00 ; '.'
00000000002214bf         db  0x00 ; '.'
00000000002214c0         db  0x00 ; '.'
00000000002214c1         db  0x00 ; '.'
00000000002214c2         db  0x00 ; '.'
00000000002214c3         db  0x00 ; '.'
00000000002214c4         db  0x00 ; '.'
00000000002214c5         db  0x00 ; '.'
00000000002214c6         db  0x00 ; '.'
00000000002214c7         db  0x00 ; '.'
00000000002214c8         db  0x00 ; '.'
00000000002214c9         db  0x00 ; '.'
00000000002214ca         db  0x00 ; '.'
00000000002214cb         db  0x00 ; '.'
00000000002214cc         db  0x00 ; '.'
00000000002214cd         db  0x00 ; '.'
00000000002214ce         db  0x00 ; '.'
00000000002214cf         db  0x00 ; '.'
00000000002214d0         db  0x00 ; '.'
00000000002214d1         db  0x00 ; '.'
00000000002214d2         db  0x00 ; '.'
00000000002214d3         db  0x00 ; '.'
00000000002214d4         db  0x00 ; '.'
00000000002214d5         db  0x00 ; '.'
00000000002214d6         db  0x00 ; '.'
00000000002214d7         db  0x00 ; '.'
00000000002214d8         db  0x00 ; '.'
00000000002214d9         db  0x00 ; '.'
00000000002214da         db  0x00 ; '.'
00000000002214db         db  0x00 ; '.'
00000000002214dc         db  0x00 ; '.'
00000000002214dd         db  0x00 ; '.'
00000000002214de         db  0x00 ; '.'
00000000002214df         db  0x00 ; '.'
00000000002214e0         db  0x00 ; '.'
00000000002214e1         db  0x00 ; '.'
00000000002214e2         db  0x00 ; '.'
00000000002214e3         db  0x00 ; '.'
00000000002214e4         db  0x00 ; '.'
00000000002214e5         db  0x00 ; '.'
00000000002214e6         db  0x00 ; '.'
00000000002214e7         db  0x00 ; '.'
00000000002214e8         db  0x00 ; '.'
00000000002214e9         db  0x00 ; '.'
00000000002214ea         db  0x00 ; '.'
00000000002214eb         db  0x00 ; '.'
00000000002214ec         db  0x00 ; '.'
00000000002214ed         db  0x00 ; '.'
00000000002214ee         db  0x00 ; '.'
00000000002214ef         db  0x00 ; '.'
00000000002214f0         db  0x00 ; '.'
00000000002214f1         db  0x00 ; '.'
00000000002214f2         db  0x00 ; '.'
00000000002214f3         db  0x00 ; '.'
00000000002214f4         db  0x00 ; '.'
00000000002214f5         db  0x00 ; '.'
00000000002214f6         db  0x00 ; '.'
00000000002214f7         db  0x00 ; '.'
00000000002214f8         db  0x00 ; '.'
00000000002214f9         db  0x00 ; '.'
00000000002214fa         db  0x00 ; '.'
00000000002214fb         db  0x00 ; '.'
00000000002214fc         db  0x00 ; '.'
00000000002214fd         db  0x00 ; '.'
00000000002214fe         db  0x00 ; '.'
00000000002214ff         db  0x00 ; '.'
0000000000221500         db  0x00 ; '.'
0000000000221501         db  0x00 ; '.'
0000000000221502         db  0x00 ; '.'
0000000000221503         db  0x00 ; '.'
0000000000221504         db  0x00 ; '.'
0000000000221505         db  0x00 ; '.'
0000000000221506         db  0x00 ; '.'
0000000000221507         db  0x00 ; '.'
0000000000221508         db  0x00 ; '.'
0000000000221509         db  0x00 ; '.'
000000000022150a         db  0x00 ; '.'
000000000022150b         db  0x00 ; '.'
000000000022150c         db  0x00 ; '.'
000000000022150d         db  0x00 ; '.'
000000000022150e         db  0x00 ; '.'
000000000022150f         db  0x00 ; '.'
0000000000221510         db  0x00 ; '.'
0000000000221511         db  0x00 ; '.'
0000000000221512         db  0x00 ; '.'
0000000000221513         db  0x00 ; '.'
0000000000221514         db  0x00 ; '.'
0000000000221515         db  0x00 ; '.'
0000000000221516         db  0x00 ; '.'
0000000000221517         db  0x00 ; '.'
0000000000221518         db  0x00 ; '.'
0000000000221519         db  0x00 ; '.'
000000000022151a         db  0x00 ; '.'
000000000022151b         db  0x00 ; '.'
000000000022151c         db  0x00 ; '.'
000000000022151d         db  0x00 ; '.'
000000000022151e         db  0x00 ; '.'
000000000022151f         db  0x00 ; '.'
                     default_quoting_options:
0000000000221520         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
0000000000221521         db  0x00 ; '.'
0000000000221522         db  0x00 ; '.'
0000000000221523         db  0x00 ; '.'
0000000000221524         db  0x00 ; '.'
0000000000221525         db  0x00 ; '.'
0000000000221526         db  0x00 ; '.'
0000000000221527         db  0x00 ; '.'
0000000000221528         db  0x00 ; '.'
0000000000221529         db  0x00 ; '.'
000000000022152a         db  0x00 ; '.'
000000000022152b         db  0x00 ; '.'
000000000022152c         db  0x00 ; '.'
000000000022152d         db  0x00 ; '.'
000000000022152e         db  0x00 ; '.'
000000000022152f         db  0x00 ; '.'
0000000000221530         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
0000000000221531         db  0x00 ; '.'
0000000000221532         db  0x00 ; '.'
0000000000221533         db  0x00 ; '.'
0000000000221534         db  0x00 ; '.'
0000000000221535         db  0x00 ; '.'
0000000000221536         db  0x00 ; '.'
0000000000221537         db  0x00 ; '.'
0000000000221538         db  0x00 ; '.'
0000000000221539         db  0x00 ; '.'
000000000022153a         db  0x00 ; '.'
000000000022153b         db  0x00 ; '.'
000000000022153c         db  0x00 ; '.'
000000000022153d         db  0x00 ; '.'
000000000022153e         db  0x00 ; '.'
000000000022153f         db  0x00 ; '.'
0000000000221540         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
0000000000221541         db  0x00 ; '.'
0000000000221542         db  0x00 ; '.'
0000000000221543         db  0x00 ; '.'
0000000000221544         db  0x00 ; '.'
0000000000221545         db  0x00 ; '.'
0000000000221546         db  0x00 ; '.'
0000000000221547         db  0x00 ; '.'
0000000000221548         db  0x00 ; '.'
0000000000221549         db  0x00 ; '.'
000000000022154a         db  0x00 ; '.'
000000000022154b         db  0x00 ; '.'
000000000022154c         db  0x00 ; '.'
000000000022154d         db  0x00 ; '.'
000000000022154e         db  0x00 ; '.'
000000000022154f         db  0x00 ; '.'
                     qword_221550:
0000000000221550         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
0000000000221551         db  0x00 ; '.'
0000000000221552         db  0x00 ; '.'
0000000000221553         db  0x00 ; '.'
0000000000221554         db  0x00 ; '.'
0000000000221555         db  0x00 ; '.'
0000000000221556         db  0x00 ; '.'
0000000000221557         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x221560; 0x221c10[ (1712 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x221560; 0x443170[ (2235408 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     __ctype_toupper_loc:
0000000000221560         extern function code                                   ; DATA XREF=__ctype_toupper_loc@GOT
                     getenv:
0000000000221568         extern function code                                   ; DATA XREF=getenv@GOT
                     sigprocmask:
0000000000221570         extern function code                                   ; DATA XREF=sigprocmask@GOT
                     __snprintf_chk:
0000000000221578         extern function code                                   ; DATA XREF=__snprintf_chk@GOT
                     raise:
0000000000221580         extern function code                                   ; DATA XREF=raise@GOT
                     free:
0000000000221588         extern function code
                     abort:
0000000000221590         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
0000000000221598         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
00000000002215a0         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
00000000002215a8         extern function code
                     localtime_r:
00000000002215b0         extern function code                                   ; DATA XREF=localtime_r@GOT
                     _exit:
00000000002215b8         extern function code                                   ; DATA XREF=_exit@GOT
                     strcpy:
00000000002215c0         extern function code                                   ; DATA XREF=strcpy@GOT
                     __fpending:
00000000002215c8         extern function code                                   ; DATA XREF=__fpending@GOT
                     isatty:
00000000002215d0         extern function code                                   ; DATA XREF=isatty@GOT
                     sigaction:
00000000002215d8         extern function code                                   ; DATA XREF=sigaction@GOT
                     iswcntrl:
00000000002215e0         extern function code                                   ; DATA XREF=iswcntrl@GOT
                     wcswidth:
00000000002215e8         extern function code                                   ; DATA XREF=wcswidth@GOT
                     localeconv:
00000000002215f0         extern function code                                   ; DATA XREF=localeconv@GOT
                     mbstowcs:
00000000002215f8         extern function code                                   ; DATA XREF=mbstowcs@GOT
                     readlink:
0000000000221600         extern function code                                   ; DATA XREF=readlink@GOT
                     clock_gettime:
0000000000221608         extern function code                                   ; DATA XREF=clock_gettime@GOT
                     setenv:
0000000000221610         extern function code                                   ; DATA XREF=setenv@GOT
                     textdomain:
0000000000221618         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
0000000000221620         extern function code                                   ; DATA XREF=fclose@GOT
                     opendir:
0000000000221628         extern function code                                   ; DATA XREF=opendir@GOT
                     getpwuid:
0000000000221630         extern function code                                   ; DATA XREF=getpwuid@GOT
                     bindtextdomain:
0000000000221638         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
0000000000221640         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
0000000000221648         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
0000000000221650         extern function code                                   ; DATA XREF=strlen@GOT
                     __lxstat:
0000000000221658         extern function code                                   ; DATA XREF=__lxstat@GOT
                     __stack_chk_fail:
0000000000221660         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
0000000000221668         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
0000000000221670         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     strchr:
0000000000221678         extern function code                                   ; DATA XREF=strchr@GOT
                     getgrgid:
0000000000221680         extern function code                                   ; DATA XREF=getgrgid@GOT
                     __fxstatat:
0000000000221688         extern function code                                   ; DATA XREF=__fxstatat@GOT
                     snprintf:
0000000000221690         extern function code                                   ; DATA XREF=snprintf@GOT
                     __overflow:
0000000000221698         extern function code                                   ; DATA XREF=__overflow@GOT
                     strrchr:
00000000002216a0         extern function code                                   ; DATA XREF=strrchr@GOT
                     gmtime_r:
00000000002216a8         extern function code                                   ; DATA XREF=gmtime_r@GOT
                     lseek:
00000000002216b0         extern function code                                   ; DATA XREF=lseek@GOT
                     __assert_fail:
00000000002216b8         extern function code                                   ; DATA XREF=__assert_fail@GOT
                     __strtoul_internal:
00000000002216c0         extern function code                                   ; DATA XREF=__strtoul_internal@GOT
                     fnmatch:
00000000002216c8         extern function code                                   ; DATA XREF=fnmatch@GOT
                     memset:
00000000002216d0         extern function code                                   ; DATA XREF=memset@GOT
                     ioctl:
00000000002216d8         extern function code                                   ; DATA XREF=ioctl@GOT
                     getcwd:
00000000002216e0         extern function code                                   ; DATA XREF=getcwd@GOT
                     strspn:
00000000002216e8         extern function code                                   ; DATA XREF=strspn@GOT
                     closedir:
00000000002216f0         extern function code                                   ; DATA XREF=closedir@GOT
                     __libc_start_main:
00000000002216f8         extern function code
                     memcmp:
0000000000221700         extern function code                                   ; DATA XREF=memcmp@GOT
                     _setjmp:
0000000000221708         extern function code                                   ; DATA XREF=_setjmp@GOT
                     fputs_unlocked:
0000000000221710         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
0000000000221718         extern function code                                   ; DATA XREF=calloc@GOT
                     strcmp:
0000000000221720         extern function code                                   ; DATA XREF=strcmp@GOT
                     signal:
0000000000221728         extern function code                                   ; DATA XREF=signal@GOT
                     dirfd:
0000000000221730         extern function code                                   ; DATA XREF=dirfd@GOT
                     getpwnam:
0000000000221738         extern function code                                   ; DATA XREF=getpwnam@GOT
                     __memcpy_chk:
0000000000221740         extern function code                                   ; DATA XREF=__memcpy_chk@GOT
                     sigemptyset:
0000000000221748         extern function code                                   ; DATA XREF=sigemptyset@GOT
                     __gmon_start__:
0000000000221750         extern function code
                     memcpy:
0000000000221758         extern function code                                   ; DATA XREF=memcpy@GOT
                     getgrnam:
0000000000221760         extern function code                                   ; DATA XREF=getgrnam@GOT
                     tzset:
0000000000221768         extern function code                                   ; DATA XREF=tzset@GOT
                     fileno:
0000000000221770         extern function code                                   ; DATA XREF=fileno@GOT
                     tcgetpgrp:
0000000000221778         extern function code                                   ; DATA XREF=tcgetpgrp@GOT
                     __xstat:
0000000000221780         extern function code                                   ; DATA XREF=__xstat@GOT
                     readdir:
0000000000221788         extern function code                                   ; DATA XREF=readdir@GOT
                     wcwidth:
0000000000221790         extern function code                                   ; DATA XREF=wcwidth@GOT
                     malloc:
0000000000221798         extern function code
                     fflush:
00000000002217a0         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
00000000002217a8         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __fxstat:
00000000002217b0         extern function code                                   ; DATA XREF=__fxstat@GOT
                     strcoll:
00000000002217b8         extern function code                                   ; DATA XREF=strcoll@GOT
                     mktime:
00000000002217c0         extern function code                                   ; DATA XREF=mktime@GOT
                     __freading:
00000000002217c8         extern function code                                   ; DATA XREF=__freading@GOT
                     fwrite_unlocked:
00000000002217d0         extern function code                                   ; DATA XREF=fwrite_unlocked@GOT
                     realloc:
00000000002217d8         extern function code                                   ; DATA XREF=realloc@GOT
                     stpncpy:
00000000002217e0         extern function code                                   ; DATA XREF=stpncpy@GOT
                     setlocale:
00000000002217e8         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
00000000002217f0         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     timegm:
00000000002217f8         extern function code                                   ; DATA XREF=timegm@GOT
                     strftime:
0000000000221800         extern function code                                   ; DATA XREF=strftime@GOT
                     mempcpy:
0000000000221808         extern function code                                   ; DATA XREF=mempcpy@GOT
                     memmove:
0000000000221810         extern function code                                   ; DATA XREF=memmove@GOT
                     error:
0000000000221818         extern function code                                   ; DATA XREF=error@GOT
                     fseeko:
0000000000221820         extern function code                                   ; DATA XREF=fseeko@GOT
                     unsetenv:
0000000000221828         extern function code                                   ; DATA XREF=unsetenv@GOT
                     strtoul:
0000000000221830         extern function code                                   ; DATA XREF=strtoul@GOT
                     __cxa_atexit:
0000000000221838         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     wcstombs:
0000000000221840         extern function code                                   ; DATA XREF=wcstombs@GOT
                     gethostname:
0000000000221848         extern function code                                   ; DATA XREF=gethostname@GOT
                     sigismember:
0000000000221850         extern function code                                   ; DATA XREF=sigismember@GOT
                     exit:
0000000000221858         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
0000000000221860         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
0000000000221868         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
0000000000221870         extern function code
                     fflush_unlocked:
0000000000221878         extern function code                                   ; DATA XREF=fflush_unlocked@GOT
                     mbsinit:
0000000000221880         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
0000000000221888         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
0000000000221890         extern function code
                     sigaddset:
0000000000221898         extern function code                                   ; DATA XREF=sigaddset@GOT
                     __ctype_tolower_loc:
00000000002218a0         extern function code                                   ; DATA XREF=__ctype_tolower_loc@GOT
                     __ctype_b_loc:
00000000002218a8         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     __sprintf_chk:
00000000002218b0         extern function code                                   ; DATA XREF=__sprintf_chk@GOT
                     __ctype_toupper_loc@@GLIBC_2.3:
00000000002218b8         extern function code
                     getenv@@GLIBC_2.2.5:
00000000002218c0         extern function code
                     sigprocmask@@GLIBC_2.2.5:
00000000002218c8         extern function code
                     __snprintf_chk@@GLIBC_2.3.4:
00000000002218d0         extern function code
                     raise@@GLIBC_2.2.5:
00000000002218d8         extern function code
                     free@@GLIBC_2.2.5:
00000000002218e0         extern function code
                     abort@@GLIBC_2.2.5:
00000000002218e8         extern function code
                     __errno_location@@GLIBC_2.2.5:
00000000002218f0         extern function code
                     strncmp@@GLIBC_2.2.5:
00000000002218f8         extern function code
                     _ITM_deregisterTMCloneTable_221900:        // _ITM_deregisterTMCloneTable
0000000000221900         extern function code
                     localtime_r@@GLIBC_2.2.5:
0000000000221908         extern function code
                     _exit@@GLIBC_2.2.5:
0000000000221910         extern function code
                     strcpy@@GLIBC_2.2.5:
0000000000221918         extern function code
                     __fpending@@GLIBC_2.2.5:
0000000000221920         extern function code
                     isatty@@GLIBC_2.2.5:
0000000000221928         extern function code
                     sigaction@@GLIBC_2.2.5:
0000000000221930         extern function code
                     iswcntrl@@GLIBC_2.2.5:
0000000000221938         extern function code
                     wcswidth@@GLIBC_2.2.5:
0000000000221940         extern function code
                     localeconv@@GLIBC_2.2.5:
0000000000221948         extern function code
                     mbstowcs@@GLIBC_2.2.5:
0000000000221950         extern function code
                     readlink@@GLIBC_2.2.5:
0000000000221958         extern function code
                     clock_gettime@@GLIBC_2.17:
0000000000221960         extern function code
                     setenv@@GLIBC_2.2.5:
0000000000221968         extern function code
                     textdomain@@GLIBC_2.2.5:
0000000000221970         extern function code
                     fclose@@GLIBC_2.2.5:
0000000000221978         extern function code
                     opendir@@GLIBC_2.2.5:
0000000000221980         extern function code
                     getpwuid@@GLIBC_2.2.5:
0000000000221988         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
0000000000221990         extern function code
                     dcgettext@@GLIBC_2.2.5:
0000000000221998         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
00000000002219a0         extern function code
                     strlen@@GLIBC_2.2.5:
00000000002219a8         extern function code
                     __lxstat@@GLIBC_2.2.5:
00000000002219b0         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
00000000002219b8         extern function code
                     getopt_long@@GLIBC_2.2.5:
00000000002219c0         extern function code
                     mbrtowc@@GLIBC_2.2.5:
00000000002219c8         extern function code
                     strchr@@GLIBC_2.2.5:
00000000002219d0         extern function code
                     getgrgid@@GLIBC_2.2.5:
00000000002219d8         extern function code
                     __fxstatat@@GLIBC_2.4:
00000000002219e0         extern function code
                     snprintf@@GLIBC_2.2.5:
00000000002219e8         extern function code
                     __overflow@@GLIBC_2.2.5:
00000000002219f0         extern function code
                     strrchr@@GLIBC_2.2.5:
00000000002219f8         extern function code
                     gmtime_r@@GLIBC_2.2.5:
0000000000221a00         extern function code
                     lseek@@GLIBC_2.2.5:
0000000000221a08         extern function code
                     __assert_fail@@GLIBC_2.2.5:
0000000000221a10         extern function code
                     __strtoul_internal@@GLIBC_2.2.5:
0000000000221a18         extern function code
                     fnmatch@@GLIBC_2.2.5:
0000000000221a20         extern function code
                     memset@@GLIBC_2.2.5:
0000000000221a28         extern function code
                     ioctl@@GLIBC_2.2.5:
0000000000221a30         extern function code
                     getcwd@@GLIBC_2.2.5:
0000000000221a38         extern function code
                     strspn@@GLIBC_2.2.5:
0000000000221a40         extern function code
                     closedir@@GLIBC_2.2.5:
0000000000221a48         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
0000000000221a50         extern function code
                     memcmp@@GLIBC_2.2.5:
0000000000221a58         extern function code
                     _setjmp@@GLIBC_2.2.5:
0000000000221a60         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
0000000000221a68         extern function code
                     calloc@@GLIBC_2.2.5:
0000000000221a70         extern function code
                     strcmp@@GLIBC_2.2.5:
0000000000221a78         extern function code
                     signal@@GLIBC_2.2.5:
0000000000221a80         extern function code
                     dirfd@@GLIBC_2.2.5:
0000000000221a88         extern function code
                     getpwnam@@GLIBC_2.2.5:
0000000000221a90         extern function code
                     __memcpy_chk@@GLIBC_2.3.4:
0000000000221a98         extern function code
                     sigemptyset@@GLIBC_2.2.5:
0000000000221aa0         extern function code
                     __gmon_start___221aa8:        // __gmon_start__
0000000000221aa8         extern function code
                     memcpy@@GLIBC_2.14:
0000000000221ab0         extern function code
                     getgrnam@@GLIBC_2.2.5:
0000000000221ab8         extern function code
                     tzset@@GLIBC_2.2.5:
0000000000221ac0         extern function code
                     fileno@@GLIBC_2.2.5:
0000000000221ac8         extern function code
                     tcgetpgrp@@GLIBC_2.2.5:
0000000000221ad0         extern function code
                     __xstat@@GLIBC_2.2.5:
0000000000221ad8         extern function code
                     readdir@@GLIBC_2.2.5:
0000000000221ae0         extern function code
                     wcwidth@@GLIBC_2.2.5:
0000000000221ae8         extern function code
                     malloc@@GLIBC_2.2.5:
0000000000221af0         extern function code
                     fflush@@GLIBC_2.2.5:
0000000000221af8         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
0000000000221b00         extern function code
                     __fxstat@@GLIBC_2.2.5:
0000000000221b08         extern function code
                     strcoll@@GLIBC_2.2.5:
0000000000221b10         extern function code
                     mktime@@GLIBC_2.2.5:
0000000000221b18         extern function code
                     __freading@@GLIBC_2.2.5:
0000000000221b20         extern function code
                     fwrite_unlocked@@GLIBC_2.2.5:
0000000000221b28         extern function code
                     realloc@@GLIBC_2.2.5:
0000000000221b30         extern function code
                     stpncpy@@GLIBC_2.2.5:
0000000000221b38         extern function code
                     setlocale@@GLIBC_2.2.5:
0000000000221b40         extern function code
                     __printf_chk@@GLIBC_2.3.4:
0000000000221b48         extern function code
                     timegm@@GLIBC_2.2.5:
0000000000221b50         extern function code
                     strftime@@GLIBC_2.2.5:
0000000000221b58         extern function code
                     mempcpy@@GLIBC_2.2.5:
0000000000221b60         extern function code
                     memmove@@GLIBC_2.2.5:
0000000000221b68         extern function code
                     error@@GLIBC_2.2.5:
0000000000221b70         extern function code
                     fseeko@@GLIBC_2.2.5:
0000000000221b78         extern function code
                     unsetenv@@GLIBC_2.2.5:
0000000000221b80         extern function code
                     strtoul@@GLIBC_2.2.5:
0000000000221b88         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
0000000000221b90         extern function code
                     wcstombs@@GLIBC_2.2.5:
0000000000221b98         extern function code
                     gethostname@@GLIBC_2.2.5:
0000000000221ba0         extern function code
                     sigismember@@GLIBC_2.2.5:
0000000000221ba8         extern function code
                     exit@@GLIBC_2.2.5:
0000000000221bb0         extern function code
                     fwrite@@GLIBC_2.2.5:
0000000000221bb8         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
0000000000221bc0         extern function code
                     _ITM_registerTMCloneTable_221bc8:        // _ITM_registerTMCloneTable
0000000000221bc8         extern function code
                     fflush_unlocked@@GLIBC_2.2.5:
0000000000221bd0         extern function code
                     mbsinit@@GLIBC_2.2.5:
0000000000221bd8         extern function code
                     iswprint@@GLIBC_2.2.5:
0000000000221be0         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
0000000000221be8         extern function code
                     sigaddset@@GLIBC_2.2.5:
0000000000221bf0         extern function code
                     __ctype_tolower_loc@@GLIBC_2.3:
0000000000221bf8         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
0000000000221c00         extern function code
                     __sprintf_chk@@GLIBC_2.3.4:
0000000000221c08         extern function code
