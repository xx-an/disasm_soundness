
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/id
        UUID: 9446050A-5348-8889-FFFC-9F48D2FDA494
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0x8300[ (33536 bytes)
        ; File offset : [0; 33536[ (33536 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0x40 ; '@'
0000000000000019         db  0x1f ; '.'
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0xc0 ; '.'
0000000000000029         db  0xd8 ; '.'
000000000000002a         db  0x02 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0x00 ; '.'
00000000000000d1         db  0x83 ; '.'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0x00 ; '.'
00000000000000d9         db  0x83 ; '.'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0x50 ; 'P'
00000000000000f1         db  0x8a ; '.'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0x50 ; 'P'
00000000000000f9         db  0x8a ; '.'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0x50 ; 'P'                                         ; DATA XREF=quotearg_free+87, rpl_fflush+18, slotvec0
0000000000000101         db  0x8a ; '.'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0x50 ; 'P'
0000000000000109         db  0x06 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0x48 ; 'H'
0000000000000111         db  0x08 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0xf8 ; '.'
0000000000000129         db  0x8b ; '.'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0xf8 ; '.'
0000000000000131         db  0x8b ; '.'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0xf8 ; '.'
0000000000000139         db  0x8b ; '.'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0x78 ; 'x'
0000000000000199         db  0x73 ; 's'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0x78 ; 'x'
00000000000001a1         db  0x73 ; 's'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0x78 ; 'x'
00000000000001a9         db  0x73 ; 's'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0x8c ; '.'
00000000000001b1         db  0x02 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0x8c ; '.'
00000000000001b9         db  0x02 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'                                         ; DATA XREF=xstrtoul+573
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0x50 ; 'P'
0000000000000209         db  0x8a ; '.'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0x50 ; 'P'
0000000000000211         db  0x8a ; '.'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0x50 ; 'P'
0000000000000219         db  0x8a ; '.'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0xb0 ; '.'
0000000000000221         db  0x05 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0xb0 ; '.'
0000000000000229         db  0x05 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0x94 ; '.'
0000000000000285         db  0x46 ; 'F'
0000000000000286         db  0x05 ; '.'
0000000000000287         db  0x0a ; '.'
0000000000000288         db  0x53 ; 'S'
0000000000000289         db  0x48 ; 'H'
000000000000028a         db  0x88 ; '.'
000000000000028b         db  0x89 ; '.'
000000000000028c         db  0xff ; '.'
000000000000028d         db  0xfc ; '.'
000000000000028e         db  0x9f ; '.'
000000000000028f         db  0x48 ; 'H'
0000000000000290         db  0xd2 ; '.'
0000000000000291         db  0xfd ; '.'
0000000000000292         db  0xa4 ; '.'
0000000000000293         db  0x94 ; '.'
0000000000000294         db  0x1c ; '.'
0000000000000295         db  0xb8 ; '.'
0000000000000296         db  0x62 ; 'b'
0000000000000297         db  0xf5 ; '.'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2d8[ (64 bytes)
        ; File offset : [664; 728[ (64 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x3e ; '>'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'
00000000000002a9         db  0x49 ; 'I'
00000000000002aa         db  0x41 ; 'A'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0x20 ; ' '
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x18 ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x3e ; '>'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x3f ; '?'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x44 ; 'D'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x96 ; '.'
00000000000002c5         db  0xa0 ; '.'
00000000000002c6         db  0x89 ; '.'
00000000000002c7         db  0x97 ; '.'
00000000000002c8         db  0xce ; '.'
00000000000002c9         db  0x2c ; ','
00000000000002ca         db  0x63 ; 'c'
00000000000002cb         db  0x72 ; 'r'
00000000000002cc         db  0xe4 ; '.'
00000000000002cd         db  0x62 ; 'b'
00000000000002ce         db  0x41 ; 'A'
00000000000002cf         db  0xf5 ; '.'
00000000000002d0         db  0x39 ; '9'
00000000000002d1         db  0xf2 ; '.'
00000000000002d2         db  0x8b ; '.'
00000000000002d3         db  0x1c ; '.'
00000000000002d4         db  0x33 ; '3'
00000000000002d5         db  0xc4 ; '.'
00000000000002d6         db  0xf7 ; '.'
00000000000002d7         db  0x12 ; '.'


        ; Section .dynsym
        ; Range: [0x2d8; 0x950[ (1656 bytes)
        ; File offset : [728; 2384[ (1656 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002d8         db  0x00 ; '.'
00000000000002d9         db  0x00 ; '.'
00000000000002da         db  0x00 ; '.'
00000000000002db         db  0x00 ; '.'
00000000000002dc         db  0x00 ; '.'
00000000000002dd         db  0x00 ; '.'
00000000000002de         db  0x00 ; '.'
00000000000002df         db  0x00 ; '.'
00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x14 ; '.'
00000000000002f1         db  0x01 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x12 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0x00 ; '.'
00000000000002f9         db  0x00 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x00 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x87 ; '.'
0000000000000309         db  0x01 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x12 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x00 ; '.'
0000000000000311         db  0x00 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x00 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x69 ; 'i'
0000000000000321         db  0x02 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x12 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0x00 ; '.'
0000000000000329         db  0x00 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x00 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x8c ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x12 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0x00 ; '.'
0000000000000341         db  0x00 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x00 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0xfc ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x12 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0x00 ; '.'
0000000000000359         db  0x00 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x00 ; '.'
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x31 ; '1'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x12 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0x00 ; '.'
0000000000000371         db  0x00 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x00 ; '.'
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0xcd ; '.'
0000000000000381         db  0x02 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x20 ; ' '
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0x00 ; '.'
0000000000000389         db  0x00 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x00 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x92 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x12 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0x00 ; '.'
00000000000003a1         db  0x00 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x00 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0xdb ; '.'
00000000000003b1         db  0x01 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x12 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0x00 ; '.'
00000000000003b9         db  0x00 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x00 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x1e ; '.'
00000000000003c9         db  0x02 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x12 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0x00 ; '.'
00000000000003d1         db  0x00 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x00 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x48 ; 'H'
00000000000003e1         db  0x01 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x12 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0x00 ; '.'                                         ; DATA XREF=xstrtoul+420
00000000000003e9         db  0x00 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x00 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x52 ; 'R'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x12 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0x00 ; '.'                                         ; DATA XREF=xstrtoul+437, xstrtoul+806, xstrtoul+878
0000000000000401         db  0x00 ; '.'
0000000000000402         db  0x00 ; '.'
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x00 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'
0000000000000407         db  0x00 ; '.'
0000000000000408         db  0x00 ; '.'
0000000000000409         db  0x00 ; '.'
000000000000040a         db  0x00 ; '.'
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x1a ; '.'
0000000000000411         db  0x02 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x12 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0x00 ; '.'
0000000000000419         db  0x00 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x00 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x48 ; 'H'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x12 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0x00 ; '.'
0000000000000431         db  0x00 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x00 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0xbe ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x12 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0x00 ; '.'
0000000000000449         db  0x00 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x00 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0xee ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x12 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0x00 ; '.'
0000000000000461         db  0x00 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x00 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x6a ; 'j'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x12 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x00 ; '.'
0000000000000479         db  0x00 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x00 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0xaa ; '.'
0000000000000489         db  0x01 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x12 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0x00 ; '.'
0000000000000491         db  0x00 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x00 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0xb9 ; '.'
00000000000004a1         db  0x01 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x12 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x00 ; '.'
00000000000004a9         db  0x00 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x00 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x29 ; ')'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x12 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0x00 ; '.'
00000000000004c1         db  0x00 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x00 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0xe6 ; '.'
00000000000004d1         db  0x01 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x12 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x00 ; '.'
00000000000004d9         db  0x00 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x00 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x5b ; '['
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x12 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0x00 ; '.'
00000000000004f1         db  0x00 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x00 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x4f ; 'O'
0000000000000501         db  0x02 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x12 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0x00 ; '.'
0000000000000509         db  0x00 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x00 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x40 ; '@'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x12 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0x00 ; '.'
0000000000000521         db  0x00 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x00 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x3b ; ';'
0000000000000531         db  0x01 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x12 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0x00 ; '.'
0000000000000539         db  0x00 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x00 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0xb0 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x12 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0x00 ; '.'
0000000000000551         db  0x00 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x00 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0xf5 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x12 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0x00 ; '.'
0000000000000569         db  0x00 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x00 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0xd3 ; '.'
0000000000000579         db  0x01 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x12 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0x00 ; '.'
0000000000000581         db  0x00 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x00 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x36 ; '6'
0000000000000591         db  0x02 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x12 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0x00 ; '.'
0000000000000599         db  0x00 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x00 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x0d ; '.'
00000000000005a9         db  0x01 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x12 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0x00 ; '.'
00000000000005b1         db  0x00 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x00 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x5a ; 'Z'
00000000000005c1         db  0x02 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x12 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0x00 ; '.'
00000000000005c9         db  0x00 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x00 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0xe7 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x12 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0x00 ; '.'
00000000000005e1         db  0x00 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x00 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0xde ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x12 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x00 ; '.'
00000000000005f9         db  0x00 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x00 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0xe9 ; '.'
0000000000000609         db  0x02 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x20 ; ' '
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x00 ; '.'
0000000000000611         db  0x00 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x00 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x41 ; 'A'
0000000000000621         db  0x01 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x12 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0x00 ; '.'
0000000000000629         db  0x00 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x00 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x2b ; '+'
0000000000000639         db  0x01 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x12 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x00 ; '.'
0000000000000641         db  0x00 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x00 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0xc5 ; '.'
0000000000000651         db  0x01 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x12 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x00 ; '.'
0000000000000659         db  0x00 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x00 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x66 ; 'f'
0000000000000669         db  0x01 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x12 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x00 ; '.'
0000000000000671         db  0x00 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x00 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0xa0 ; '.'
0000000000000681         db  0x01 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x12 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0x00 ; '.'
0000000000000689         db  0x00 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x00 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x57 ; 'W'
0000000000000699         db  0x01 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x12 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x00 ; '.'
00000000000006a1         db  0x00 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x00 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x0b ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x12 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x00 ; '.'
00000000000006b9         db  0x00 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x00 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x6d ; 'm'
00000000000006c9         db  0x01 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x12 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x00 ; '.'
00000000000006d1         db  0x00 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x00 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0xd5 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x12 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0x00 ; '.'
00000000000006e9         db  0x00 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x00 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0xb1 ; '.'
00000000000006f9         db  0x01 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x12 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x00 ; '.'
0000000000000701         db  0x00 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x00 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x8e ; '.'
0000000000000711         db  0x01 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x12 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x00 ; '.'
0000000000000719         db  0x00 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x00 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x84 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x12 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x00 ; '.'
0000000000000731         db  0x00 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x00 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x1f ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x12 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0x00 ; '.'
0000000000000749         db  0x00 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x00 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x12 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x12 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0x00 ; '.'
0000000000000761         db  0x00 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x00 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x64 ; 'd'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x12 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0x00 ; '.'
0000000000000779         db  0x00 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x00 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x29 ; ')'
0000000000000789         db  0x02 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x12 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x00 ; '.'
0000000000000791         db  0x00 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x00 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x48 ; 'H'
00000000000007a1         db  0x02 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x12 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0x00 ; '.'
00000000000007a9         db  0x00 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x00 ; '.'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x4f ; 'O'
00000000000007b9         db  0x01 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x12 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0x00 ; '.'
00000000000007c1         db  0x00 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x00 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x89 ; '.'
00000000000007d1         db  0x02 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x12 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x00 ; '.'
00000000000007d9         db  0x00 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x00 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x93 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x12 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0x00 ; '.'
00000000000007f1         db  0x00 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x00 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x00 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x00 ; '.'
00000000000007f9         db  0x00 ; '.'
00000000000007fa         db  0x00 ; '.'
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0xcc ; '.'
0000000000000801         db  0x01 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x12 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x00 ; '.'
0000000000000809         db  0x00 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x00 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x00 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0x00 ; '.'
0000000000000811         db  0x00 ; '.'
0000000000000812         db  0x00 ; '.'
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x1d ; '.'
0000000000000819         db  0x01 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x12 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0x00 ; '.'
0000000000000821         db  0x00 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x00 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x00 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0x00 ; '.'
0000000000000829         db  0x00 ; '.'
000000000000082a         db  0x00 ; '.'
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0xf8 ; '.'
0000000000000831         db  0x02 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x20 ; ' '
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x00 ; '.'
0000000000000839         db  0x00 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x00 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x00 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0x00 ; '.'
0000000000000841         db  0x00 ; '.'
0000000000000842         db  0x00 ; '.'
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x5e ; '^'
0000000000000849         db  0x01 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x12 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0x00 ; '.'
0000000000000851         db  0x00 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x00 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x00 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0x00 ; '.'
0000000000000859         db  0x00 ; '.'
000000000000085a         db  0x00 ; '.'
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x7b ; '{'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x12 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0x00 ; '.'
0000000000000869         db  0x00 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x00 ; '.'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x00 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0x00 ; '.'
0000000000000871         db  0x00 ; '.'
0000000000000872         db  0x00 ; '.'
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x0b ; '.'
0000000000000879         db  0x02 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x22 ; '"'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0x00 ; '.'
0000000000000881         db  0x00 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x00 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x00 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0x00 ; '.'
0000000000000889         db  0x00 ; '.'
000000000000088a         db  0x00 ; '.'
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x79 ; 'y'
0000000000000891         db  0x01 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x12 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0x00 ; '.'
0000000000000899         db  0x00 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x00 ; '.'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x00 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0x00 ; '.'
00000000000008a1         db  0x00 ; '.'
00000000000008a2         db  0x00 ; '.'
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x00 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x34 ; '4'
00000000000008a9         db  0x01 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x11 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x19 ; '.'
00000000000008af         db  0x00 ; '.'
00000000000008b0         db  0xa8 ; '.'
00000000000008b1         db  0x90 ; '.'
00000000000008b2         db  0x20 ; ' '
00000000000008b3         db  0x00 ; '.'
00000000000008b4         db  0x00 ; '.'
00000000000008b5         db  0x00 ; '.'
00000000000008b6         db  0x00 ; '.'
00000000000008b7         db  0x00 ; '.'
00000000000008b8         db  0x08 ; '.'
00000000000008b9         db  0x00 ; '.'
00000000000008ba         db  0x00 ; '.'
00000000000008bb         db  0x00 ; '.'
00000000000008bc         db  0x00 ; '.'
00000000000008bd         db  0x00 ; '.'
00000000000008be         db  0x00 ; '.'
00000000000008bf         db  0x00 ; '.'
00000000000008c0         db  0x6e ; 'n'
00000000000008c1         db  0x02 ; '.'
00000000000008c2         db  0x00 ; '.'
00000000000008c3         db  0x00 ; '.'
00000000000008c4         db  0x11 ; '.'
00000000000008c5         db  0x00 ; '.'
00000000000008c6         db  0x19 ; '.'
00000000000008c7         db  0x00 ; '.'
00000000000008c8         db  0xa0 ; '.'
00000000000008c9         db  0x90 ; '.'
00000000000008ca         db  0x20 ; ' '
00000000000008cb         db  0x00 ; '.'
00000000000008cc         db  0x00 ; '.'
00000000000008cd         db  0x00 ; '.'
00000000000008ce         db  0x00 ; '.'
00000000000008cf         db  0x00 ; '.'
00000000000008d0         db  0x08 ; '.'
00000000000008d1         db  0x00 ; '.'
00000000000008d2         db  0x00 ; '.'
00000000000008d3         db  0x00 ; '.'
00000000000008d4         db  0x00 ; '.'
00000000000008d5         db  0x00 ; '.'
00000000000008d6         db  0x00 ; '.'
00000000000008d7         db  0x00 ; '.'
00000000000008d8         db  0x98 ; '.'
00000000000008d9         db  0x00 ; '.'
00000000000008da         db  0x00 ; '.'
00000000000008db         db  0x00 ; '.'
00000000000008dc         db  0x21 ; '!'
00000000000008dd         db  0x00 ; '.'
00000000000008de         db  0x19 ; '.'
00000000000008df         db  0x00 ; '.'
00000000000008e0         db  0xb8 ; '.'
00000000000008e1         db  0x90 ; '.'
00000000000008e2         db  0x20 ; ' '
00000000000008e3         db  0x00 ; '.'
00000000000008e4         db  0x00 ; '.'
00000000000008e5         db  0x00 ; '.'
00000000000008e6         db  0x00 ; '.'
00000000000008e7         db  0x00 ; '.'
00000000000008e8         db  0x08 ; '.'
00000000000008e9         db  0x00 ; '.'
00000000000008ea         db  0x00 ; '.'
00000000000008eb         db  0x00 ; '.'
00000000000008ec         db  0x00 ; '.'
00000000000008ed         db  0x00 ; '.'
00000000000008ee         db  0x00 ; '.'
00000000000008ef         db  0x00 ; '.'
00000000000008f0         db  0x79 ; 'y'
00000000000008f1         db  0x02 ; '.'
00000000000008f2         db  0x00 ; '.'
00000000000008f3         db  0x00 ; '.'
00000000000008f4         db  0x11 ; '.'
00000000000008f5         db  0x00 ; '.'
00000000000008f6         db  0x19 ; '.'
00000000000008f7         db  0x00 ; '.'
00000000000008f8         db  0xb8 ; '.'
00000000000008f9         db  0x90 ; '.'
00000000000008fa         db  0x20 ; ' '
00000000000008fb         db  0x00 ; '.'
00000000000008fc         db  0x00 ; '.'
00000000000008fd         db  0x00 ; '.'
00000000000008fe         db  0x00 ; '.'
00000000000008ff         db  0x00 ; '.'
0000000000000900         db  0x08 ; '.'
0000000000000901         db  0x00 ; '.'
0000000000000902         db  0x00 ; '.'
0000000000000903         db  0x00 ; '.'
0000000000000904         db  0x00 ; '.'
0000000000000905         db  0x00 ; '.'
0000000000000906         db  0x00 ; '.'
0000000000000907         db  0x00 ; '.'
0000000000000908         db  0xed ; '.'
0000000000000909         db  0x01 ; '.'
000000000000090a         db  0x00 ; '.'
000000000000090b         db  0x00 ; '.'
000000000000090c         db  0x21 ; '!'
000000000000090d         db  0x00 ; '.'
000000000000090e         db  0x19 ; '.'
000000000000090f         db  0x00 ; '.'
0000000000000910         db  0xa0 ; '.'
0000000000000911         db  0x90 ; '.'
0000000000000912         db  0x20 ; ' '
0000000000000913         db  0x00 ; '.'
0000000000000914         db  0x00 ; '.'
0000000000000915         db  0x00 ; '.'
0000000000000916         db  0x00 ; '.'
0000000000000917         db  0x00 ; '.'
0000000000000918         db  0x08 ; '.'
0000000000000919         db  0x00 ; '.'
000000000000091a         db  0x00 ; '.'
000000000000091b         db  0x00 ; '.'
000000000000091c         db  0x00 ; '.'
000000000000091d         db  0x00 ; '.'
000000000000091e         db  0x00 ; '.'
000000000000091f         db  0x00 ; '.'
0000000000000920         db  0x99 ; '.'
0000000000000921         db  0x01 ; '.'
0000000000000922         db  0x00 ; '.'
0000000000000923         db  0x00 ; '.'
0000000000000924         db  0x11 ; '.'
0000000000000925         db  0x00 ; '.'
0000000000000926         db  0x19 ; '.'
0000000000000927         db  0x00 ; '.'
0000000000000928         db  0xc0 ; '.'
0000000000000929         db  0x90 ; '.'
000000000000092a         db  0x20 ; ' '
000000000000092b         db  0x00 ; '.'
000000000000092c         db  0x00 ; '.'
000000000000092d         db  0x00 ; '.'
000000000000092e         db  0x00 ; '.'
000000000000092f         db  0x00 ; '.'
0000000000000930         db  0x08 ; '.'
0000000000000931         db  0x00 ; '.'
0000000000000932         db  0x00 ; '.'
0000000000000933         db  0x00 ; '.'
0000000000000934         db  0x00 ; '.'
0000000000000935         db  0x00 ; '.'
0000000000000936         db  0x00 ; '.'
0000000000000937         db  0x00 ; '.'
0000000000000938         db  0x39 ; '9'
0000000000000939         db  0x00 ; '.'
000000000000093a         db  0x00 ; '.'
000000000000093b         db  0x00 ; '.'
000000000000093c         db  0x11 ; '.'
000000000000093d         db  0x00 ; '.'
000000000000093e         db  0x19 ; '.'
000000000000093f         db  0x00 ; '.'
0000000000000940         db  0xb0 ; '.'
0000000000000941         db  0x90 ; '.'
0000000000000942         db  0x20 ; ' '
0000000000000943         db  0x00 ; '.'
0000000000000944         db  0x00 ; '.'
0000000000000945         db  0x00 ; '.'
0000000000000946         db  0x00 ; '.'
0000000000000947         db  0x00 ; '.'
0000000000000948         db  0x04 ; '.'
0000000000000949         db  0x00 ; '.'
000000000000094a         db  0x00 ; '.'
000000000000094b         db  0x00 ; '.'
000000000000094c         db  0x00 ; '.'
000000000000094d         db  0x00 ; '.'
000000000000094e         db  0x00 ; '.'
000000000000094f         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0x950; 0xc62[ (786 bytes)
        ; File offset : [2384; 3170[ (786 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

0000000000000950         db  0x00 ; '.'
0000000000000951         db  0x6c ; 'l'
0000000000000952         db  0x69 ; 'i'
0000000000000953         db  0x62 ; 'b'
0000000000000954         db  0x63 ; 'c'
0000000000000955         db  0x2e ; '.'
0000000000000956         db  0x73 ; 's'
0000000000000957         db  0x6f ; 'o'
0000000000000958         db  0x2e ; '.'
0000000000000959         db  0x36 ; '6'
000000000000095a         db  0x00 ; '.'
000000000000095b         db  0x66 ; 'f'
000000000000095c         db  0x66 ; 'f'
000000000000095d         db  0x6c ; 'l'
000000000000095e         db  0x75 ; 'u'
000000000000095f         db  0x73 ; 's'
0000000000000960         db  0x68 ; 'h'
0000000000000961         db  0x00 ; '.'
0000000000000962         db  0x5f ; '_'
0000000000000963         db  0x5f ; '_'
0000000000000964         db  0x70 ; 'p'
0000000000000965         db  0x72 ; 'r'
0000000000000966         db  0x69 ; 'i'
0000000000000967         db  0x6e ; 'n'
0000000000000968         db  0x74 ; 't'
0000000000000969         db  0x66 ; 'f'
000000000000096a         db  0x5f ; '_'
000000000000096b         db  0x63 ; 'c'
000000000000096c         db  0x68 ; 'h'
000000000000096d         db  0x6b ; 'k'
000000000000096e         db  0x00 ; '.'
000000000000096f         db  0x73 ; 's'
0000000000000970         db  0x65 ; 'e'
0000000000000971         db  0x74 ; 't'
0000000000000972         db  0x6c ; 'l'
0000000000000973         db  0x6f ; 'o'
0000000000000974         db  0x63 ; 'c'
0000000000000975         db  0x61 ; 'a'
0000000000000976         db  0x6c ; 'l'
0000000000000977         db  0x65 ; 'e'
0000000000000978         db  0x00 ; '.'
0000000000000979         db  0x6d ; 'm'
000000000000097a         db  0x62 ; 'b'
000000000000097b         db  0x72 ; 'r'
000000000000097c         db  0x74 ; 't'
000000000000097d         db  0x6f ; 'o'
000000000000097e         db  0x77 ; 'w'
000000000000097f         db  0x63 ; 'c'
0000000000000980         db  0x00 ; '.'
0000000000000981         db  0x73 ; 's'
0000000000000982         db  0x74 ; 't'
0000000000000983         db  0x72 ; 'r'
0000000000000984         db  0x6e ; 'n'
0000000000000985         db  0x63 ; 'c'
0000000000000986         db  0x6d ; 'm'
0000000000000987         db  0x70 ; 'p'
0000000000000988         db  0x00 ; '.'
0000000000000989         db  0x6f ; 'o'
000000000000098a         db  0x70 ; 'p'
000000000000098b         db  0x74 ; 't'
000000000000098c         db  0x69 ; 'i'
000000000000098d         db  0x6e ; 'n'
000000000000098e         db  0x64 ; 'd'
000000000000098f         db  0x00 ; '.'
0000000000000990         db  0x73 ; 's'
0000000000000991         db  0x74 ; 't'
0000000000000992         db  0x72 ; 'r'
0000000000000993         db  0x72 ; 'r'
0000000000000994         db  0x63 ; 'c'
0000000000000995         db  0x68 ; 'h'
0000000000000996         db  0x72 ; 'r'
0000000000000997         db  0x00 ; '.'
0000000000000998         db  0x64 ; 'd'
0000000000000999         db  0x63 ; 'c'
000000000000099a         db  0x67 ; 'g'
000000000000099b         db  0x65 ; 'e'
000000000000099c         db  0x74 ; 't'
000000000000099d         db  0x74 ; 't'
000000000000099e         db  0x65 ; 'e'
000000000000099f         db  0x78 ; 'x'
00000000000009a0         db  0x74 ; 't'
00000000000009a1         db  0x00 ; '.'
00000000000009a2         db  0x67 ; 'g'
00000000000009a3         db  0x65 ; 'e'
00000000000009a4         db  0x74 ; 't'
00000000000009a5         db  0x70 ; 'p'
00000000000009a6         db  0x77 ; 'w'
00000000000009a7         db  0x75 ; 'u'
00000000000009a8         db  0x69 ; 'i'
00000000000009a9         db  0x64 ; 'd'
00000000000009aa         db  0x00 ; '.'
00000000000009ab         db  0x67 ; 'g'
00000000000009ac         db  0x65 ; 'e'
00000000000009ad         db  0x74 ; 't'
00000000000009ae         db  0x67 ; 'g'
00000000000009af         db  0x72 ; 'r'
00000000000009b0         db  0x67 ; 'g'
00000000000009b1         db  0x69 ; 'i'
00000000000009b2         db  0x64 ; 'd'
00000000000009b3         db  0x00 ; '.'
00000000000009b4         db  0x65 ; 'e'
00000000000009b5         db  0x72 ; 'r'
00000000000009b6         db  0x72 ; 'r'
00000000000009b7         db  0x6f ; 'o'
00000000000009b8         db  0x72 ; 'r'
00000000000009b9         db  0x00 ; '.'
00000000000009ba         db  0x5f ; '_'
00000000000009bb         db  0x5f ; '_'
00000000000009bc         db  0x73 ; 's'
00000000000009bd         db  0x74 ; 't'
00000000000009be         db  0x61 ; 'a'
00000000000009bf         db  0x63 ; 'c'
00000000000009c0         db  0x6b ; 'k'
00000000000009c1         db  0x5f ; '_'
00000000000009c2         db  0x63 ; 'c'
00000000000009c3         db  0x68 ; 'h'
00000000000009c4         db  0x6b ; 'k'
00000000000009c5         db  0x5f ; '_'
00000000000009c6         db  0x66 ; 'f'
00000000000009c7         db  0x61 ; 'a'
00000000000009c8         db  0x69 ; 'i'
00000000000009c9         db  0x6c ; 'l'
00000000000009ca         db  0x00 ; '.'
00000000000009cb         db  0x69 ; 'i'
00000000000009cc         db  0x73 ; 's'
00000000000009cd         db  0x77 ; 'w'
00000000000009ce         db  0x70 ; 'p'
00000000000009cf         db  0x72 ; 'r'
00000000000009d0         db  0x69 ; 'i'
00000000000009d1         db  0x6e ; 'n'
00000000000009d2         db  0x74 ; 't'
00000000000009d3         db  0x00 ; '.'
00000000000009d4         db  0x72 ; 'r'
00000000000009d5         db  0x65 ; 'e'
00000000000009d6         db  0x61 ; 'a'
00000000000009d7         db  0x6c ; 'l'
00000000000009d8         db  0x6c ; 'l'
00000000000009d9         db  0x6f ; 'o'
00000000000009da         db  0x63 ; 'c'
00000000000009db         db  0x00 ; '.'
00000000000009dc         db  0x61 ; 'a'
00000000000009dd         db  0x62 ; 'b'
00000000000009de         db  0x6f ; 'o'
00000000000009df         db  0x72 ; 'r'
00000000000009e0         db  0x74 ; 't'
00000000000009e1         db  0x00 ; '.'
00000000000009e2         db  0x5f ; '_'
00000000000009e3         db  0x65 ; 'e'
00000000000009e4         db  0x78 ; 'x'
00000000000009e5         db  0x69 ; 'i'
00000000000009e6         db  0x74 ; 't'
00000000000009e7         db  0x00 ; '.'
00000000000009e8         db  0x70 ; 'p'
00000000000009e9         db  0x72 ; 'r'
00000000000009ea         db  0x6f ; 'o'
00000000000009eb         db  0x67 ; 'g'
00000000000009ec         db  0x72 ; 'r'
00000000000009ed         db  0x61 ; 'a'
00000000000009ee         db  0x6d ; 'm'
00000000000009ef         db  0x5f ; '_'
00000000000009f0         db  0x69 ; 'i'
00000000000009f1         db  0x6e ; 'n'
00000000000009f2         db  0x76 ; 'v'
00000000000009f3         db  0x6f ; 'o'
00000000000009f4         db  0x63 ; 'c'
00000000000009f5         db  0x61 ; 'a'
00000000000009f6         db  0x74 ; 't'
00000000000009f7         db  0x69 ; 'i'
00000000000009f8         db  0x6f ; 'o'
00000000000009f9         db  0x6e ; 'n'
00000000000009fa         db  0x5f ; '_'
00000000000009fb         db  0x6e ; 'n'
00000000000009fc         db  0x61 ; 'a'
00000000000009fd         db  0x6d ; 'm'
00000000000009fe         db  0x65 ; 'e'
00000000000009ff         db  0x00 ; '.'
                     aAssertfail:
0000000000000a00         db         "__assert_fail", 0
0000000000000a0e         db  0x5f ; '_'
0000000000000a0f         db  0x5f ; '_'
0000000000000a10         db  0x63 ; 'c'
0000000000000a11         db  0x74 ; 't'
0000000000000a12         db  0x79 ; 'y'
0000000000000a13         db  0x70 ; 'p'
0000000000000a14         db  0x65 ; 'e'
0000000000000a15         db  0x5f ; '_'
0000000000000a16         db  0x67 ; 'g'
0000000000000a17         db  0x65 ; 'e'
0000000000000a18         db  0x74 ; 't'
0000000000000a19         db  0x5f ; '_'
0000000000000a1a         db  0x6d ; 'm'
0000000000000a1b         db  0x62 ; 'b'
0000000000000a1c         db  0x5f ; '_'
0000000000000a1d         db  0x63 ; 'c'
0000000000000a1e         db  0x75 ; 'u'
0000000000000a1f         db  0x72 ; 'r'
0000000000000a20         db  0x5f ; '_'
0000000000000a21         db  0x6d ; 'm'
0000000000000a22         db  0x61 ; 'a'
0000000000000a23         db  0x78 ; 'x'
0000000000000a24         db  0x00 ; '.'
0000000000000a25         db  0x65 ; 'e'
0000000000000a26         db  0x6e ; 'n'
0000000000000a27         db  0x64 ; 'd'
0000000000000a28         db  0x70 ; 'p'
0000000000000a29         db  0x77 ; 'w'
0000000000000a2a         db  0x65 ; 'e'
0000000000000a2b         db  0x6e ; 'n'
0000000000000a2c         db  0x74 ; 't'
0000000000000a2d         db  0x00 ; '.'
0000000000000a2e         db  0x67 ; 'g'
0000000000000a2f         db  0x65 ; 'e'
0000000000000a30         db  0x74 ; 't'
0000000000000a31         db  0x70 ; 'p'
0000000000000a32         db  0x77 ; 'w'
0000000000000a33         db  0x6e ; 'n'
0000000000000a34         db  0x61 ; 'a'
0000000000000a35         db  0x6d ; 'm'
0000000000000a36         db  0x00 ; '.'
0000000000000a37         db  0x63 ; 'c'
0000000000000a38         db  0x61 ; 'a'
0000000000000a39         db  0x6c ; 'l'
0000000000000a3a         db  0x6c ; 'l'
0000000000000a3b         db  0x6f ; 'o'
0000000000000a3c         db  0x63 ; 'c'
0000000000000a3d         db  0x00 ; '.'
0000000000000a3e         db  0x73 ; 's'
0000000000000a3f         db  0x74 ; 't'
0000000000000a40         db  0x72 ; 'r'
0000000000000a41         db  0x6c ; 'l'
0000000000000a42         db  0x65 ; 'e'
0000000000000a43         db  0x6e ; 'n'
0000000000000a44         db  0x00 ; '.'
0000000000000a45         db  0x6d ; 'm'
0000000000000a46         db  0x65 ; 'e'
0000000000000a47         db  0x6d ; 'm'
0000000000000a48         db  0x73 ; 's'
0000000000000a49         db  0x65 ; 'e'
0000000000000a4a         db  0x74 ; 't'
0000000000000a4b         db  0x00 ; '.'
0000000000000a4c         db  0x5f ; '_'
0000000000000a4d         db  0x5f ; '_'
0000000000000a4e         db  0x65 ; 'e'
0000000000000a4f         db  0x72 ; 'r'
0000000000000a50         db  0x72 ; 'r'
0000000000000a51         db  0x6e ; 'n'
0000000000000a52         db  0x6f ; 'o'
0000000000000a53         db  0x5f ; '_'
0000000000000a54         db  0x6c ; 'l'
0000000000000a55         db  0x6f ; 'o'
0000000000000a56         db  0x63 ; 'c'
0000000000000a57         db  0x61 ; 'a'
0000000000000a58         db  0x74 ; 't'
0000000000000a59         db  0x69 ; 'i'
0000000000000a5a         db  0x6f ; 'o'
0000000000000a5b         db  0x6e ; 'n'
0000000000000a5c         db  0x00 ; '.'
0000000000000a5d         db  0x6d ; 'm'
0000000000000a5e         db  0x65 ; 'e'
0000000000000a5f         db  0x6d ; 'm'
0000000000000a60         db  0x63 ; 'c'
0000000000000a61         db  0x6d ; 'm'
0000000000000a62         db  0x70 ; 'p'
0000000000000a63         db  0x00 ; '.'
0000000000000a64         db  0x65 ; 'e'
0000000000000a65         db  0x6e ; 'n'
0000000000000a66         db  0x64 ; 'd'
0000000000000a67         db  0x67 ; 'g'
0000000000000a68         db  0x72 ; 'r'
0000000000000a69         db  0x65 ; 'e'
0000000000000a6a         db  0x6e ; 'n'
0000000000000a6b         db  0x74 ; 't'
0000000000000a6c         db  0x00 ; '.'
0000000000000a6d         db  0x5f ; '_'
0000000000000a6e         db  0x5f ; '_'
0000000000000a6f         db  0x66 ; 'f'
0000000000000a70         db  0x70 ; 'p'
0000000000000a71         db  0x72 ; 'r'
0000000000000a72         db  0x69 ; 'i'
0000000000000a73         db  0x6e ; 'n'
0000000000000a74         db  0x74 ; 't'
0000000000000a75         db  0x66 ; 'f'
0000000000000a76         db  0x5f ; '_'
0000000000000a77         db  0x63 ; 'c'
0000000000000a78         db  0x68 ; 'h'
0000000000000a79         db  0x6b ; 'k'
0000000000000a7a         db  0x00 ; '.'
0000000000000a7b         db  0x67 ; 'g'
0000000000000a7c         db  0x65 ; 'e'
0000000000000a7d         db  0x74 ; 't'
0000000000000a7e         db  0x67 ; 'g'
0000000000000a7f         db  0x72 ; 'r'
0000000000000a80         db  0x6e ; 'n'
0000000000000a81         db  0x61 ; 'a'
0000000000000a82         db  0x6d ; 'm'
0000000000000a83         db  0x00 ; '.'
0000000000000a84         db  0x73 ; 's'
0000000000000a85         db  0x74 ; 't'
0000000000000a86         db  0x64 ; 'd'
0000000000000a87         db  0x6f ; 'o'
0000000000000a88         db  0x75 ; 'u'
0000000000000a89         db  0x74 ; 't'
0000000000000a8a         db  0x00 ; '.'
0000000000000a8b         db  0x6c ; 'l'
0000000000000a8c         db  0x73 ; 's'
0000000000000a8d         db  0x65 ; 'e'
0000000000000a8e         db  0x65 ; 'e'
0000000000000a8f         db  0x6b ; 'k'
0000000000000a90         db  0x00 ; '.'
0000000000000a91         db  0x6d ; 'm'
0000000000000a92         db  0x65 ; 'e'
0000000000000a93         db  0x6d ; 'm'
0000000000000a94         db  0x63 ; 'c'
0000000000000a95         db  0x70 ; 'p'
0000000000000a96         db  0x79 ; 'y'
0000000000000a97         db  0x00 ; '.'
0000000000000a98         db  0x66 ; 'f'
0000000000000a99         db  0x63 ; 'c'
0000000000000a9a         db  0x6c ; 'l'
0000000000000a9b         db  0x6f ; 'o'
0000000000000a9c         db  0x73 ; 's'
0000000000000a9d         db  0x65 ; 'e'
0000000000000a9e         db  0x00 ; '.'
0000000000000a9f         db  0x73 ; 's'
0000000000000aa0         db  0x74 ; 't'
0000000000000aa1         db  0x72 ; 'r'
0000000000000aa2         db  0x74 ; 't'
0000000000000aa3         db  0x6f ; 'o'
0000000000000aa4         db  0x75 ; 'u'
0000000000000aa5         db  0x6c ; 'l'
0000000000000aa6         db  0x00 ; '.'
0000000000000aa7         db  0x6d ; 'm'
0000000000000aa8         db  0x61 ; 'a'
0000000000000aa9         db  0x6c ; 'l'
0000000000000aaa         db  0x6c ; 'l'
0000000000000aab         db  0x6f ; 'o'
0000000000000aac         db  0x63 ; 'c'
0000000000000aad         db  0x00 ; '.'
0000000000000aae         db  0x6d ; 'm'
0000000000000aaf         db  0x62 ; 'b'
0000000000000ab0         db  0x73 ; 's'
0000000000000ab1         db  0x69 ; 'i'
0000000000000ab2         db  0x6e ; 'n'
0000000000000ab3         db  0x69 ; 'i'
0000000000000ab4         db  0x74 ; 't'
0000000000000ab5         db  0x00 ; '.'
0000000000000ab6         db  0x67 ; 'g'
0000000000000ab7         db  0x65 ; 'e'
0000000000000ab8         db  0x74 ; 't'
0000000000000ab9         db  0x67 ; 'g'
0000000000000aba         db  0x69 ; 'i'
0000000000000abb         db  0x64 ; 'd'
0000000000000abc         db  0x00 ; '.'
0000000000000abd         db  0x6e ; 'n'
0000000000000abe         db  0x6c ; 'l'
0000000000000abf         db  0x5f ; '_'
0000000000000ac0         db  0x6c ; 'l'
0000000000000ac1         db  0x61 ; 'a'
0000000000000ac2         db  0x6e ; 'n'
0000000000000ac3         db  0x67 ; 'g'
0000000000000ac4         db  0x69 ; 'i'
0000000000000ac5         db  0x6e ; 'n'
0000000000000ac6         db  0x66 ; 'f'
0000000000000ac7         db  0x6f ; 'o'
0000000000000ac8         db  0x00 ; '.'
0000000000000ac9         db  0x5f ; '_'
0000000000000aca         db  0x5f ; '_'
0000000000000acb         db  0x63 ; 'c'
0000000000000acc         db  0x74 ; 't'
0000000000000acd         db  0x79 ; 'y'
0000000000000ace         db  0x70 ; 'p'
0000000000000acf         db  0x65 ; 'e'
0000000000000ad0         db  0x5f ; '_'
0000000000000ad1         db  0x62 ; 'b'
0000000000000ad2         db  0x5f ; '_'
0000000000000ad3         db  0x6c ; 'l'
0000000000000ad4         db  0x6f ; 'o'
0000000000000ad5         db  0x63 ; 'c'
0000000000000ad6         db  0x00 ; '.'
0000000000000ad7         db  0x67 ; 'g'
0000000000000ad8         db  0x65 ; 'e'
0000000000000ad9         db  0x74 ; 't'
0000000000000ada         db  0x65 ; 'e'
0000000000000adb         db  0x6e ; 'n'
0000000000000adc         db  0x76 ; 'v'
0000000000000add         db  0x00 ; '.'
0000000000000ade         db  0x5f ; '_'
0000000000000adf         db  0x5f ; '_'
0000000000000ae0         db  0x66 ; 'f'
0000000000000ae1         db  0x72 ; 'r'
0000000000000ae2         db  0x65 ; 'e'
0000000000000ae3         db  0x61 ; 'a'
0000000000000ae4         db  0x64 ; 'd'
0000000000000ae5         db  0x69 ; 'i'
0000000000000ae6         db  0x6e ; 'n'
0000000000000ae7         db  0x67 ; 'g'
0000000000000ae8         db  0x00 ; '.'
0000000000000ae9         db  0x73 ; 's'
0000000000000aea         db  0x74 ; 't'
0000000000000aeb         db  0x64 ; 'd'
0000000000000aec         db  0x65 ; 'e'
0000000000000aed         db  0x72 ; 'r'
0000000000000aee         db  0x72 ; 'r'
0000000000000aef         db  0x00 ; '.'
0000000000000af0         db  0x67 ; 'g'
0000000000000af1         db  0x65 ; 'e'
0000000000000af2         db  0x74 ; 't'
0000000000000af3         db  0x67 ; 'g'
0000000000000af4         db  0x72 ; 'r'
0000000000000af5         db  0x6f ; 'o'
0000000000000af6         db  0x75 ; 'u'
0000000000000af7         db  0x70 ; 'p'
0000000000000af8         db  0x73 ; 's'
0000000000000af9         db  0x00 ; '.'
0000000000000afa         db  0x67 ; 'g'
0000000000000afb         db  0x65 ; 'e'
0000000000000afc         db  0x74 ; 't'
0000000000000afd         db  0x75 ; 'u'
0000000000000afe         db  0x69 ; 'i'
0000000000000aff         db  0x64 ; 'd'
0000000000000b00         db  0x00 ; '.'
0000000000000b01         db  0x67 ; 'g'
0000000000000b02         db  0x65 ; 'e'
0000000000000b03         db  0x74 ; 't'
0000000000000b04         db  0x65 ; 'e'
0000000000000b05         db  0x67 ; 'g'
0000000000000b06         db  0x69 ; 'i'
0000000000000b07         db  0x64 ; 'd'
0000000000000b08         db  0x00 ; '.'
0000000000000b09         db  0x67 ; 'g'
0000000000000b0a         db  0x65 ; 'e'
0000000000000b0b         db  0x74 ; 't'
0000000000000b0c         db  0x6f ; 'o'
0000000000000b0d         db  0x70 ; 'p'
0000000000000b0e         db  0x74 ; 't'
0000000000000b0f         db  0x5f ; '_'
0000000000000b10         db  0x6c ; 'l'
0000000000000b11         db  0x6f ; 'o'
0000000000000b12         db  0x6e ; 'n'
0000000000000b13         db  0x67 ; 'g'
0000000000000b14         db  0x00 ; '.'
0000000000000b15         db  0x66 ; 'f'
0000000000000b16         db  0x69 ; 'i'
0000000000000b17         db  0x6c ; 'l'
0000000000000b18         db  0x65 ; 'e'
0000000000000b19         db  0x6e ; 'n'
0000000000000b1a         db  0x6f ; 'o'
0000000000000b1b         db  0x00 ; '.'
0000000000000b1c         db  0x66 ; 'f'
0000000000000b1d         db  0x77 ; 'w'
0000000000000b1e         db  0x72 ; 'r'
0000000000000b1f         db  0x69 ; 'i'
0000000000000b20         db  0x74 ; 't'
0000000000000b21         db  0x65 ; 'e'
0000000000000b22         db  0x00 ; '.'
0000000000000b23         db  0x67 ; 'g'
0000000000000b24         db  0x65 ; 'e'
0000000000000b25         db  0x74 ; 't'
0000000000000b26         db  0x65 ; 'e'
0000000000000b27         db  0x75 ; 'u'
0000000000000b28         db  0x69 ; 'i'
0000000000000b29         db  0x64 ; 'd'
0000000000000b2a         db  0x00 ; '.'
0000000000000b2b         db  0x5f ; '_'
0000000000000b2c         db  0x5f ; '_'
0000000000000b2d         db  0x66 ; 'f'
0000000000000b2e         db  0x70 ; 'p'
0000000000000b2f         db  0x65 ; 'e'
0000000000000b30         db  0x6e ; 'n'
0000000000000b31         db  0x64 ; 'd'
0000000000000b32         db  0x69 ; 'i'
0000000000000b33         db  0x6e ; 'n'
0000000000000b34         db  0x67 ; 'g'
0000000000000b35         db  0x00 ; '.'
0000000000000b36         db  0x73 ; 's'
0000000000000b37         db  0x74 ; 't'
0000000000000b38         db  0x72 ; 'r'
0000000000000b39         db  0x63 ; 'c'
0000000000000b3a         db  0x68 ; 'h'
0000000000000b3b         db  0x72 ; 'r'
0000000000000b3c         db  0x00 ; '.'
0000000000000b3d         db  0x70 ; 'p'
0000000000000b3e         db  0x72 ; 'r'
0000000000000b3f         db  0x6f ; 'o'
0000000000000b40         db  0x67 ; 'g'
                     aRaminvocations:
0000000000000b41         db         "ram_invocation_short_name", 0
0000000000000b5b         db  0x5f ; '_'
0000000000000b5c         db  0x5f ; '_'
0000000000000b5d         db  0x63 ; 'c'
0000000000000b5e         db  0x78 ; 'x'
0000000000000b5f         db  0x61 ; 'a'
0000000000000b60         db  0x5f ; '_'
0000000000000b61         db  0x66 ; 'f'
0000000000000b62         db  0x69 ; 'i'
0000000000000b63         db  0x6e ; 'n'
0000000000000b64         db  0x61 ; 'a'
0000000000000b65         db  0x6c ; 'l'
0000000000000b66         db  0x69 ; 'i'
0000000000000b67         db  0x7a ; 'z'
0000000000000b68         db  0x65 ; 'e'
0000000000000b69         db  0x00 ; '.'
0000000000000b6a         db  0x62 ; 'b'
0000000000000b6b         db  0x69 ; 'i'
0000000000000b6c         db  0x6e ; 'n'
0000000000000b6d         db  0x64 ; 'd'
0000000000000b6e         db  0x74 ; 't'
0000000000000b6f         db  0x65 ; 'e'
0000000000000b70         db  0x78 ; 'x'
0000000000000b71         db  0x74 ; 't'
0000000000000b72         db  0x64 ; 'd'
0000000000000b73         db  0x6f ; 'o'
0000000000000b74         db  0x6d ; 'm'
0000000000000b75         db  0x61 ; 'a'
0000000000000b76         db  0x69 ; 'i'
0000000000000b77         db  0x6e ; 'n'
0000000000000b78         db  0x00 ; '.'
0000000000000b79         db  0x67 ; 'g'
0000000000000b7a         db  0x65 ; 'e'
0000000000000b7b         db  0x74 ; 't'
0000000000000b7c         db  0x67 ; 'g'
0000000000000b7d         db  0x72 ; 'r'
0000000000000b7e         db  0x6f ; 'o'
0000000000000b7f         db  0x75 ; 'u'
0000000000000b80         db  0x70 ; 'p'
0000000000000b81         db  0x6c ; 'l'
0000000000000b82         db  0x69 ; 'i'
0000000000000b83         db  0x73 ; 's'
0000000000000b84         db  0x74 ; 't'
0000000000000b85         db  0x00 ; '.'
0000000000000b86         db  0x5f ; '_'
0000000000000b87         db  0x5f ; '_'
0000000000000b88         db  0x6c ; 'l'
0000000000000b89         db  0x69 ; 'i'
0000000000000b8a         db  0x62 ; 'b'
0000000000000b8b         db  0x63 ; 'c'
0000000000000b8c         db  0x5f ; '_'
0000000000000b8d         db  0x73 ; 's'
0000000000000b8e         db  0x74 ; 't'
0000000000000b8f         db  0x61 ; 'a'
0000000000000b90         db  0x72 ; 'r'
0000000000000b91         db  0x74 ; 't'
0000000000000b92         db  0x5f ; '_'
0000000000000b93         db  0x6d ; 'm'
0000000000000b94         db  0x61 ; 'a'
0000000000000b95         db  0x69 ; 'i'
0000000000000b96         db  0x6e ; 'n'
0000000000000b97         db  0x00 ; '.'
0000000000000b98         db  0x66 ; 'f'
0000000000000b99         db  0x73 ; 's'
0000000000000b9a         db  0x65 ; 'e'
0000000000000b9b         db  0x65 ; 'e'
0000000000000b9c         db  0x6b ; 'k'
0000000000000b9d         db  0x6f ; 'o'
0000000000000b9e         db  0x00 ; '.'
0000000000000b9f         db  0x5f ; '_'
0000000000000ba0         db  0x5f ; '_'
0000000000000ba1         db  0x6f ; 'o'
0000000000000ba2         db  0x76 ; 'v'
0000000000000ba3         db  0x65 ; 'e'
0000000000000ba4         db  0x72 ; 'r'
0000000000000ba5         db  0x66 ; 'f'
0000000000000ba6         db  0x6c ; 'l'
0000000000000ba7         db  0x6f ; 'o'
0000000000000ba8         db  0x77 ; 'w'
0000000000000ba9         db  0x00 ; '.'
0000000000000baa         db  0x66 ; 'f'
0000000000000bab         db  0x70 ; 'p'
0000000000000bac         db  0x75 ; 'u'
0000000000000bad         db  0x74 ; 't'
0000000000000bae         db  0x73 ; 's'
0000000000000baf         db  0x5f ; '_'
0000000000000bb0         db  0x75 ; 'u'
0000000000000bb1         db  0x6e ; 'n'
0000000000000bb2         db  0x6c ; 'l'
0000000000000bb3         db  0x6f ; 'o'
0000000000000bb4         db  0x63 ; 'c'
0000000000000bb5         db  0x6b ; 'k'
0000000000000bb6         db  0x65 ; 'e'
0000000000000bb7         db  0x64 ; 'd'
0000000000000bb8         db  0x00 ; '.'
0000000000000bb9         db  0x66 ; 'f'
0000000000000bba         db  0x72 ; 'r'
0000000000000bbb         db  0x65 ; 'e'
0000000000000bbc         db  0x65 ; 'e'
0000000000000bbd         db  0x00 ; '.'
0000000000000bbe         db  0x5f ; '_'
0000000000000bbf         db  0x5f ; '_'
0000000000000bc0         db  0x70 ; 'p'
0000000000000bc1         db  0x72 ; 'r'
0000000000000bc2         db  0x6f ; 'o'
0000000000000bc3         db  0x67 ; 'g'
0000000000000bc4         db  0x6e ; 'n'
0000000000000bc5         db  0x61 ; 'a'
0000000000000bc6         db  0x6d ; 'm'
0000000000000bc7         db  0x65 ; 'e'
0000000000000bc8         db  0x00 ; '.'
0000000000000bc9         db  0x5f ; '_'
0000000000000bca         db  0x5f ; '_'
0000000000000bcb         db  0x70 ; 'p'
0000000000000bcc         db  0x72 ; 'r'
0000000000000bcd         db  0x6f ; 'o'
0000000000000bce         db  0x67 ; 'g'
0000000000000bcf         db  0x6e ; 'n'
0000000000000bd0         db  0x61 ; 'a'
0000000000000bd1         db  0x6d ; 'm'
0000000000000bd2         db  0x65 ; 'e'
0000000000000bd3         db  0x5f ; '_'
0000000000000bd4         db  0x66 ; 'f'
0000000000000bd5         db  0x75 ; 'u'
0000000000000bd6         db  0x6c ; 'l'
0000000000000bd7         db  0x6c ; 'l'
0000000000000bd8         db  0x00 ; '.'
0000000000000bd9         db  0x5f ; '_'
0000000000000bda         db  0x5f ; '_'
0000000000000bdb         db  0x63 ; 'c'
0000000000000bdc         db  0x78 ; 'x'
0000000000000bdd         db  0x61 ; 'a'
0000000000000bde         db  0x5f ; '_'
0000000000000bdf         db  0x61 ; 'a'
0000000000000be0         db  0x74 ; 't'
0000000000000be1         db  0x65 ; 'e'
0000000000000be2         db  0x78 ; 'x'
0000000000000be3         db  0x69 ; 'i'
0000000000000be4         db  0x74 ; 't'
0000000000000be5         db  0x00 ; '.'
0000000000000be6         db  0x47 ; 'G'
0000000000000be7         db  0x4c ; 'L'
0000000000000be8         db  0x49 ; 'I'
0000000000000be9         db  0x42 ; 'B'
0000000000000bea         db  0x43 ; 'C'
0000000000000beb         db  0x5f ; '_'
0000000000000bec         db  0x32 ; '2'
0000000000000bed         db  0x2e ; '.'
0000000000000bee         db  0x33 ; '3'
0000000000000bef         db  0x00 ; '.'
0000000000000bf0         db  0x47 ; 'G'
0000000000000bf1         db  0x4c ; 'L'
0000000000000bf2         db  0x49 ; 'I'
0000000000000bf3         db  0x42 ; 'B'
0000000000000bf4         db  0x43 ; 'C'
0000000000000bf5         db  0x5f ; '_'
0000000000000bf6         db  0x32 ; '2'
0000000000000bf7         db  0x2e ; '.'
0000000000000bf8         db  0x33 ; '3'
0000000000000bf9         db  0x2e ; '.'
0000000000000bfa         db  0x34 ; '4'
0000000000000bfb         db  0x00 ; '.'
0000000000000bfc         db  0x47 ; 'G'
0000000000000bfd         db  0x4c ; 'L'
0000000000000bfe         db  0x49 ; 'I'
0000000000000bff         db  0x42 ; 'B'
                     aC214:
0000000000000c00         db         "C_2.14", 0
0000000000000c07         db  0x47 ; 'G'
0000000000000c08         db  0x4c ; 'L'
0000000000000c09         db  0x49 ; 'I'
0000000000000c0a         db  0x42 ; 'B'
0000000000000c0b         db  0x43 ; 'C'
0000000000000c0c         db  0x5f ; '_'
0000000000000c0d         db  0x32 ; '2'
0000000000000c0e         db  0x2e ; '.'
0000000000000c0f         db  0x34 ; '4'
0000000000000c10         db  0x00 ; '.'
0000000000000c11         db  0x47 ; 'G'
0000000000000c12         db  0x4c ; 'L'
0000000000000c13         db  0x49 ; 'I'
0000000000000c14         db  0x42 ; 'B'
0000000000000c15         db  0x43 ; 'C'
0000000000000c16         db  0x5f ; '_'
0000000000000c17         db  0x32 ; '2'
0000000000000c18         db  0x2e ; '.'
0000000000000c19         db  0x32 ; '2'
0000000000000c1a         db  0x2e ; '.'
0000000000000c1b         db  0x35 ; '5'
0000000000000c1c         db  0x00 ; '.'
0000000000000c1d         db  0x5f ; '_'
0000000000000c1e         db  0x49 ; 'I'
0000000000000c1f         db  0x54 ; 'T'
0000000000000c20         db  0x4d ; 'M'
0000000000000c21         db  0x5f ; '_'
0000000000000c22         db  0x64 ; 'd'
0000000000000c23         db  0x65 ; 'e'
0000000000000c24         db  0x72 ; 'r'
0000000000000c25         db  0x65 ; 'e'
0000000000000c26         db  0x67 ; 'g'
0000000000000c27         db  0x69 ; 'i'
0000000000000c28         db  0x73 ; 's'
0000000000000c29         db  0x74 ; 't'
0000000000000c2a         db  0x65 ; 'e'
0000000000000c2b         db  0x72 ; 'r'
0000000000000c2c         db  0x54 ; 'T'
0000000000000c2d         db  0x4d ; 'M'
0000000000000c2e         db  0x43 ; 'C'
0000000000000c2f         db  0x6c ; 'l'
0000000000000c30         db  0x6f ; 'o'
0000000000000c31         db  0x6e ; 'n'
0000000000000c32         db  0x65 ; 'e'
0000000000000c33         db  0x54 ; 'T'
0000000000000c34         db  0x61 ; 'a'
0000000000000c35         db  0x62 ; 'b'
0000000000000c36         db  0x6c ; 'l'
0000000000000c37         db  0x65 ; 'e'
0000000000000c38         db  0x00 ; '.'
0000000000000c39         db  0x5f ; '_'
0000000000000c3a         db  0x5f ; '_'
0000000000000c3b         db  0x67 ; 'g'
0000000000000c3c         db  0x6d ; 'm'
0000000000000c3d         db  0x6f ; 'o'
0000000000000c3e         db  0x6e ; 'n'
0000000000000c3f         db  0x5f ; '_'
0000000000000c40         db  0x73 ; 's'
0000000000000c41         db  0x74 ; 't'
0000000000000c42         db  0x61 ; 'a'
0000000000000c43         db  0x72 ; 'r'
0000000000000c44         db  0x74 ; 't'
0000000000000c45         db  0x5f ; '_'
0000000000000c46         db  0x5f ; '_'
0000000000000c47         db  0x00 ; '.'
0000000000000c48         db  0x5f ; '_'
0000000000000c49         db  0x49 ; 'I'
0000000000000c4a         db  0x54 ; 'T'
0000000000000c4b         db  0x4d ; 'M'
0000000000000c4c         db  0x5f ; '_'
0000000000000c4d         db  0x72 ; 'r'
0000000000000c4e         db  0x65 ; 'e'
0000000000000c4f         db  0x67 ; 'g'
0000000000000c50         db  0x69 ; 'i'
0000000000000c51         db  0x73 ; 's'
0000000000000c52         db  0x74 ; 't'
0000000000000c53         db  0x65 ; 'e'
0000000000000c54         db  0x72 ; 'r'
0000000000000c55         db  0x54 ; 'T'
0000000000000c56         db  0x4d ; 'M'
0000000000000c57         db  0x43 ; 'C'
0000000000000c58         db  0x6c ; 'l'
0000000000000c59         db  0x6f ; 'o'
0000000000000c5a         db  0x6e ; 'n'
0000000000000c5b         db  0x65 ; 'e'
0000000000000c5c         db  0x54 ; 'T'
0000000000000c5d         db  0x61 ; 'a'
0000000000000c5e         db  0x62 ; 'b'
0000000000000c5f         db  0x6c ; 'l'
0000000000000c60         db  0x65 ; 'e'
0000000000000c61         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xc62; 0xcec[ (138 bytes)
        ; File offset : [3170; 3308[ (138 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000c62         db  0x00 ; '.'
0000000000000c63         db  0x00 ; '.'
0000000000000c64         db  0x02 ; '.'
0000000000000c65         db  0x00 ; '.'
0000000000000c66         db  0x02 ; '.'
0000000000000c67         db  0x00 ; '.'
0000000000000c68         db  0x02 ; '.'
0000000000000c69         db  0x00 ; '.'
0000000000000c6a         db  0x02 ; '.'
0000000000000c6b         db  0x00 ; '.'
0000000000000c6c         db  0x02 ; '.'
0000000000000c6d         db  0x00 ; '.'
0000000000000c6e         db  0x02 ; '.'
0000000000000c6f         db  0x00 ; '.'
0000000000000c70         db  0x00 ; '.'
0000000000000c71         db  0x00 ; '.'
0000000000000c72         db  0x02 ; '.'
0000000000000c73         db  0x00 ; '.'
0000000000000c74         db  0x02 ; '.'
0000000000000c75         db  0x00 ; '.'
0000000000000c76         db  0x02 ; '.'
0000000000000c77         db  0x00 ; '.'
0000000000000c78         db  0x02 ; '.'
0000000000000c79         db  0x00 ; '.'
0000000000000c7a         db  0x02 ; '.'
0000000000000c7b         db  0x00 ; '.'
0000000000000c7c         db  0x02 ; '.'
0000000000000c7d         db  0x00 ; '.'
0000000000000c7e         db  0x02 ; '.'
0000000000000c7f         db  0x00 ; '.'
0000000000000c80         db  0x02 ; '.'
0000000000000c81         db  0x00 ; '.'
0000000000000c82         db  0x02 ; '.'
0000000000000c83         db  0x00 ; '.'
0000000000000c84         db  0x03 ; '.'
0000000000000c85         db  0x00 ; '.'
0000000000000c86         db  0x02 ; '.'
0000000000000c87         db  0x00 ; '.'
0000000000000c88         db  0x02 ; '.'
0000000000000c89         db  0x00 ; '.'
0000000000000c8a         db  0x02 ; '.'
0000000000000c8b         db  0x00 ; '.'
0000000000000c8c         db  0x02 ; '.'
0000000000000c8d         db  0x00 ; '.'
0000000000000c8e         db  0x02 ; '.'
0000000000000c8f         db  0x00 ; '.'
0000000000000c90         db  0x02 ; '.'
0000000000000c91         db  0x00 ; '.'
0000000000000c92         db  0x02 ; '.'
0000000000000c93         db  0x00 ; '.'
0000000000000c94         db  0x02 ; '.'
0000000000000c95         db  0x00 ; '.'
0000000000000c96         db  0x02 ; '.'
0000000000000c97         db  0x00 ; '.'
0000000000000c98         db  0x02 ; '.'
0000000000000c99         db  0x00 ; '.'
0000000000000c9a         db  0x02 ; '.'
0000000000000c9b         db  0x00 ; '.'
0000000000000c9c         db  0x02 ; '.'
0000000000000c9d         db  0x00 ; '.'
0000000000000c9e         db  0x02 ; '.'
0000000000000c9f         db  0x00 ; '.'
0000000000000ca0         db  0x02 ; '.'
0000000000000ca1         db  0x00 ; '.'
0000000000000ca2         db  0x02 ; '.'
0000000000000ca3         db  0x00 ; '.'
0000000000000ca4         db  0x02 ; '.'
0000000000000ca5         db  0x00 ; '.'
0000000000000ca6         db  0x00 ; '.'
0000000000000ca7         db  0x00 ; '.'
0000000000000ca8         db  0x04 ; '.'
0000000000000ca9         db  0x00 ; '.'
0000000000000caa         db  0x02 ; '.'
0000000000000cab         db  0x00 ; '.'
0000000000000cac         db  0x02 ; '.'
0000000000000cad         db  0x00 ; '.'
0000000000000cae         db  0x02 ; '.'
0000000000000caf         db  0x00 ; '.'
0000000000000cb0         db  0x02 ; '.'
0000000000000cb1         db  0x00 ; '.'
0000000000000cb2         db  0x02 ; '.'
0000000000000cb3         db  0x00 ; '.'
0000000000000cb4         db  0x02 ; '.'
0000000000000cb5         db  0x00 ; '.'
0000000000000cb6         db  0x02 ; '.'
0000000000000cb7         db  0x00 ; '.'
0000000000000cb8         db  0x02 ; '.'
0000000000000cb9         db  0x00 ; '.'
0000000000000cba         db  0x02 ; '.'
0000000000000cbb         db  0x00 ; '.'
0000000000000cbc         db  0x02 ; '.'
0000000000000cbd         db  0x00 ; '.'
0000000000000cbe         db  0x02 ; '.'
0000000000000cbf         db  0x00 ; '.'
0000000000000cc0         db  0x02 ; '.'
0000000000000cc1         db  0x00 ; '.'
0000000000000cc2         db  0x05 ; '.'
0000000000000cc3         db  0x00 ; '.'
0000000000000cc4         db  0x02 ; '.'
0000000000000cc5         db  0x00 ; '.'
0000000000000cc6         db  0x02 ; '.'
0000000000000cc7         db  0x00 ; '.'
0000000000000cc8         db  0x02 ; '.'
0000000000000cc9         db  0x00 ; '.'
0000000000000cca         db  0x02 ; '.'
0000000000000ccb         db  0x00 ; '.'
0000000000000ccc         db  0x02 ; '.'
0000000000000ccd         db  0x00 ; '.'
0000000000000cce         db  0x02 ; '.'
0000000000000ccf         db  0x00 ; '.'
0000000000000cd0         db  0x02 ; '.'
0000000000000cd1         db  0x00 ; '.'
0000000000000cd2         db  0x05 ; '.'
0000000000000cd3         db  0x00 ; '.'
0000000000000cd4         db  0x00 ; '.'
0000000000000cd5         db  0x00 ; '.'
0000000000000cd6         db  0x02 ; '.'
0000000000000cd7         db  0x00 ; '.'
0000000000000cd8         db  0x02 ; '.'
0000000000000cd9         db  0x00 ; '.'
0000000000000cda         db  0x02 ; '.'
0000000000000cdb         db  0x00 ; '.'
0000000000000cdc         db  0x06 ; '.'
0000000000000cdd         db  0x00 ; '.'
0000000000000cde         db  0x02 ; '.'
0000000000000cdf         db  0x00 ; '.'
0000000000000ce0         db  0x02 ; '.'
0000000000000ce1         db  0x00 ; '.'
0000000000000ce2         db  0x02 ; '.'
0000000000000ce3         db  0x00 ; '.'
0000000000000ce4         db  0x02 ; '.'
0000000000000ce5         db  0x00 ; '.'
0000000000000ce6         db  0x02 ; '.'
0000000000000ce7         db  0x00 ; '.'
0000000000000ce8         db  0x02 ; '.'
0000000000000ce9         db  0x00 ; '.'
0000000000000cea         db  0x02 ; '.'
0000000000000ceb         db  0x00 ; '.'
0000000000000cec         db  0x00 ; '.'
0000000000000ced         db  0x00 ; '.'
0000000000000cee         db  0x00 ; '.'
0000000000000cef         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xcf0; 0xd50[ (96 bytes)
        ; File offset : [3312; 3408[ (96 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000cf0         db  0x01 ; '.'
0000000000000cf1         db  0x00 ; '.'
0000000000000cf2         db  0x05 ; '.'
0000000000000cf3         db  0x00 ; '.'
0000000000000cf4         db  0x01 ; '.'
0000000000000cf5         db  0x00 ; '.'
0000000000000cf6         db  0x00 ; '.'
0000000000000cf7         db  0x00 ; '.'
0000000000000cf8         db  0x10 ; '.'
0000000000000cf9         db  0x00 ; '.'
0000000000000cfa         db  0x00 ; '.'
0000000000000cfb         db  0x00 ; '.'
0000000000000cfc         db  0x00 ; '.'
0000000000000cfd         db  0x00 ; '.'
0000000000000cfe         db  0x00 ; '.'
0000000000000cff         db  0x00 ; '.'
0000000000000d00         db  0x13 ; '.'
0000000000000d01         db  0x69 ; 'i'
0000000000000d02         db  0x69 ; 'i'
0000000000000d03         db  0x0d ; '.'
0000000000000d04         db  0x00 ; '.'
0000000000000d05         db  0x00 ; '.'
0000000000000d06         db  0x06 ; '.'
0000000000000d07         db  0x00 ; '.'
0000000000000d08         db  0x96 ; '.'
0000000000000d09         db  0x02 ; '.'
0000000000000d0a         db  0x00 ; '.'
0000000000000d0b         db  0x00 ; '.'
0000000000000d0c         db  0x10 ; '.'
0000000000000d0d         db  0x00 ; '.'
0000000000000d0e         db  0x00 ; '.'
0000000000000d0f         db  0x00 ; '.'
0000000000000d10         db  0x74 ; 't'
0000000000000d11         db  0x19 ; '.'
0000000000000d12         db  0x69 ; 'i'
0000000000000d13         db  0x09 ; '.'
0000000000000d14         db  0x00 ; '.'
0000000000000d15         db  0x00 ; '.'
0000000000000d16         db  0x05 ; '.'
0000000000000d17         db  0x00 ; '.'
0000000000000d18         db  0xa0 ; '.'
0000000000000d19         db  0x02 ; '.'
0000000000000d1a         db  0x00 ; '.'
0000000000000d1b         db  0x00 ; '.'
0000000000000d1c         db  0x10 ; '.'
0000000000000d1d         db  0x00 ; '.'
0000000000000d1e         db  0x00 ; '.'
0000000000000d1f         db  0x00 ; '.'
0000000000000d20         db  0x94 ; '.'
0000000000000d21         db  0x91 ; '.'
0000000000000d22         db  0x96 ; '.'
0000000000000d23         db  0x06 ; '.'
0000000000000d24         db  0x00 ; '.'
0000000000000d25         db  0x00 ; '.'
0000000000000d26         db  0x04 ; '.'
0000000000000d27         db  0x00 ; '.'
0000000000000d28         db  0xac ; '.'
0000000000000d29         db  0x02 ; '.'
0000000000000d2a         db  0x00 ; '.'
0000000000000d2b         db  0x00 ; '.'
0000000000000d2c         db  0x10 ; '.'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x00 ; '.'
0000000000000d2f         db  0x00 ; '.'
0000000000000d30         db  0x14 ; '.'
0000000000000d31         db  0x69 ; 'i'
0000000000000d32         db  0x69 ; 'i'
0000000000000d33         db  0x0d ; '.'
0000000000000d34         db  0x00 ; '.'
0000000000000d35         db  0x00 ; '.'
0000000000000d36         db  0x03 ; '.'
0000000000000d37         db  0x00 ; '.'
0000000000000d38         db  0xb7 ; '.'
0000000000000d39         db  0x02 ; '.'
0000000000000d3a         db  0x00 ; '.'
0000000000000d3b         db  0x00 ; '.'
0000000000000d3c         db  0x10 ; '.'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x00 ; '.'
0000000000000d3f         db  0x00 ; '.'
0000000000000d40         db  0x75 ; 'u'
0000000000000d41         db  0x1a ; '.'
0000000000000d42         db  0x69 ; 'i'
0000000000000d43         db  0x09 ; '.'
0000000000000d44         db  0x00 ; '.'
0000000000000d45         db  0x00 ; '.'
0000000000000d46         db  0x02 ; '.'
0000000000000d47         db  0x00 ; '.'
0000000000000d48         db  0xc1 ; '.'
0000000000000d49         db  0x02 ; '.'
0000000000000d4a         db  0x00 ; '.'
0000000000000d4b         db  0x00 ; '.'
0000000000000d4c         db  0x00 ; '.'
0000000000000d4d         db  0x00 ; '.'
0000000000000d4e         db  0x00 ; '.'
0000000000000d4f         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xd50; 0x1098[ (840 bytes)
        ; File offset : [3408; 4248[ (840 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000d50         db  0x50 ; 'P'
0000000000000d51         db  0x8a ; '.'
0000000000000d52         db  0x20 ; ' '
0000000000000d53         db  0x00 ; '.'
0000000000000d54         db  0x00 ; '.'
0000000000000d55         db  0x00 ; '.'
0000000000000d56         db  0x00 ; '.'
0000000000000d57         db  0x00 ; '.'
0000000000000d58         db  0x08 ; '.'
0000000000000d59         db  0x00 ; '.'
0000000000000d5a         db  0x00 ; '.'
0000000000000d5b         db  0x00 ; '.'
0000000000000d5c         db  0x00 ; '.'
0000000000000d5d         db  0x00 ; '.'
0000000000000d5e         db  0x00 ; '.'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0x40 ; '@'
0000000000000d61         db  0x20 ; ' '
0000000000000d62         db  0x00 ; '.'
0000000000000d63         db  0x00 ; '.'
0000000000000d64         db  0x00 ; '.'
0000000000000d65         db  0x00 ; '.'
0000000000000d66         db  0x00 ; '.'
0000000000000d67         db  0x00 ; '.'
0000000000000d68         db  0x58 ; 'X'
0000000000000d69         db  0x8a ; '.'
0000000000000d6a         db  0x20 ; ' '
0000000000000d6b         db  0x00 ; '.'
0000000000000d6c         db  0x00 ; '.'
0000000000000d6d         db  0x00 ; '.'
0000000000000d6e         db  0x00 ; '.'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0x08 ; '.'
0000000000000d71         db  0x00 ; '.'
0000000000000d72         db  0x00 ; '.'
0000000000000d73         db  0x00 ; '.'
0000000000000d74         db  0x00 ; '.'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x00 ; '.'
0000000000000d77         db  0x00 ; '.'
0000000000000d78         db  0x00 ; '.'
0000000000000d79         db  0x20 ; ' '
0000000000000d7a         db  0x00 ; '.'
0000000000000d7b         db  0x00 ; '.'
0000000000000d7c         db  0x00 ; '.'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x00 ; '.'
0000000000000d7f         db  0x00 ; '.'
0000000000000d80         db  0x60 ; '`'
0000000000000d81         db  0x8a ; '.'
0000000000000d82         db  0x20 ; ' '
0000000000000d83         db  0x00 ; '.'
0000000000000d84         db  0x00 ; '.'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x00 ; '.'
0000000000000d87         db  0x00 ; '.'
0000000000000d88         db  0x08 ; '.'
0000000000000d89         db  0x00 ; '.'
0000000000000d8a         db  0x00 ; '.'
0000000000000d8b         db  0x00 ; '.'
0000000000000d8c         db  0x00 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x00 ; '.'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0x1f ; '.'
0000000000000d91         db  0x69 ; 'i'
0000000000000d92         db  0x00 ; '.'
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x00 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x00 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0x80 ; '.'
0000000000000d99         db  0x8a ; '.'
0000000000000d9a         db  0x20 ; ' '
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x00 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x00 ; '.'
0000000000000d9f         db  0x00 ; '.'
0000000000000da0         db  0x08 ; '.'
0000000000000da1         db  0x00 ; '.'
0000000000000da2         db  0x00 ; '.'
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x00 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x00 ; '.'
0000000000000da7         db  0x00 ; '.'
0000000000000da8         db  0xca ; '.'
0000000000000da9         db  0x6e ; 'n'
0000000000000daa         db  0x00 ; '.'
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x00 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x00 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0xa0 ; '.'
0000000000000db1         db  0x8a ; '.'
0000000000000db2         db  0x20 ; ' '
0000000000000db3         db  0x00 ; '.'
0000000000000db4         db  0x00 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x00 ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0x08 ; '.'
0000000000000db9         db  0x00 ; '.'
0000000000000dba         db  0x00 ; '.'
0000000000000dbb         db  0x00 ; '.'
0000000000000dbc         db  0x00 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x00 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0x27 ; '''
0000000000000dc1         db  0x69 ; 'i'
0000000000000dc2         db  0x00 ; '.'
0000000000000dc3         db  0x00 ; '.'
0000000000000dc4         db  0x00 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x00 ; '.'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0xc0 ; '.'
0000000000000dc9         db  0x8a ; '.'
0000000000000dca         db  0x20 ; ' '
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x00 ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x00 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0x08 ; '.'
0000000000000dd1         db  0x00 ; '.'
0000000000000dd2         db  0x00 ; '.'
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x00 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x00 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0x2e ; '.'
0000000000000dd9         db  0x69 ; 'i'
0000000000000dda         db  0x00 ; '.'
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x00 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x00 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0xe0 ; '.'
0000000000000de1         db  0x8a ; '.'
0000000000000de2         db  0x20 ; ' '
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x00 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x00 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0x08 ; '.'
0000000000000de9         db  0x00 ; '.'
0000000000000dea         db  0x00 ; '.'
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x00 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x00 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0x33 ; '3'
0000000000000df1         db  0x69 ; 'i'
0000000000000df2         db  0x00 ; '.'
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x00 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x00 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0x00 ; '.'
0000000000000df9         db  0x8b ; '.'
0000000000000dfa         db  0x20 ; ' '
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x00 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x00 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0x08 ; '.'
0000000000000e01         db  0x00 ; '.'
0000000000000e02         db  0x00 ; '.'
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x00 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x00 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0xb0 ; '.'
0000000000000e09         db  0x6e ; 'n'
0000000000000e0a         db  0x00 ; '.'
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x00 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x00 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0x20 ; ' '
0000000000000e11         db  0x8b ; '.'
0000000000000e12         db  0x20 ; ' '
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x00 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x00 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0x08 ; '.'
0000000000000e19         db  0x00 ; '.'
0000000000000e1a         db  0x00 ; '.'
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x00 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x00 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0x38 ; '8'
0000000000000e21         db  0x69 ; 'i'
0000000000000e22         db  0x00 ; '.'
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x00 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x00 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0x40 ; '@'
0000000000000e29         db  0x8b ; '.'
0000000000000e2a         db  0x20 ; ' '
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x00 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x00 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0x08 ; '.'
0000000000000e31         db  0x00 ; '.'
0000000000000e32         db  0x00 ; '.'
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0x3d ; '='
0000000000000e39         db  0x69 ; 'i'
0000000000000e3a         db  0x00 ; '.'
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x00 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x00 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0x60 ; '`'
0000000000000e41         db  0x8b ; '.'
0000000000000e42         db  0x20 ; ' '
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x00 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0x08 ; '.'
0000000000000e49         db  0x00 ; '.'
0000000000000e4a         db  0x00 ; '.'
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x00 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0x42 ; 'B'
0000000000000e51         db  0x69 ; 'i'
0000000000000e52         db  0x00 ; '.'
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x00 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x00 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0xa0 ; '.'
0000000000000e59         db  0x8b ; '.'
0000000000000e5a         db  0x20 ; ' '
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x00 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x00 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0x08 ; '.'
0000000000000e61         db  0x00 ; '.'
0000000000000e62         db  0x00 ; '.'
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x00 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0xe9 ; '.'
0000000000000e69         db  0x69 ; 'i'
0000000000000e6a         db  0x00 ; '.'
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x00 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x00 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0xa8 ; '.'
0000000000000e71         db  0x8b ; '.'
0000000000000e72         db  0x20 ; ' '
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x00 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0x08 ; '.'
0000000000000e79         db  0x00 ; '.'
0000000000000e7a         db  0x00 ; '.'
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x00 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0xf1 ; '.'
0000000000000e81         db  0x69 ; 'i'
0000000000000e82         db  0x00 ; '.'
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x00 ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0xb0 ; '.'
0000000000000e89         db  0x8b ; '.'
0000000000000e8a         db  0x20 ; ' '
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x00 ; '.'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0x08 ; '.'
0000000000000e91         db  0x00 ; '.'
0000000000000e92         db  0x00 ; '.'
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'
0000000000000e98         db  0xf7 ; '.'
0000000000000e99         db  0x69 ; 'i'
0000000000000e9a         db  0x00 ; '.'
0000000000000e9b         db  0x00 ; '.'
0000000000000e9c         db  0x00 ; '.'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x00 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0xb8 ; '.'
0000000000000ea1         db  0x8b ; '.'
0000000000000ea2         db  0x20 ; ' '
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x00 ; '.'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0x08 ; '.'
0000000000000ea9         db  0x00 ; '.'
0000000000000eaa         db  0x00 ; '.'
0000000000000eab         db  0x00 ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x00 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0x04 ; '.'
0000000000000eb1         db  0x6a ; 'j'
0000000000000eb2         db  0x00 ; '.'
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x00 ; '.'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0xc0 ; '.'
0000000000000eb9         db  0x8b ; '.'
0000000000000eba         db  0x20 ; ' '
0000000000000ebb         db  0x00 ; '.'
0000000000000ebc         db  0x00 ; '.'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x00 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0x08 ; '.'
0000000000000ec1         db  0x00 ; '.'
0000000000000ec2         db  0x00 ; '.'
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x00 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0x11 ; '.'
0000000000000ec9         db  0x6a ; 'j'
0000000000000eca         db  0x00 ; '.'
0000000000000ecb         db  0x00 ; '.'
0000000000000ecc         db  0x00 ; '.'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0xc8 ; '.'
0000000000000ed1         db  0x8b ; '.'
0000000000000ed2         db  0x20 ; ' '
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x00 ; '.'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0x08 ; '.'
0000000000000ed9         db  0x00 ; '.'
0000000000000eda         db  0x00 ; '.'
0000000000000edb         db  0x00 ; '.'
0000000000000edc         db  0x00 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0xc0 ; '.'
0000000000000ee1         db  0x6e ; 'n'
0000000000000ee2         db  0x00 ; '.'
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x00 ; '.'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0xd0 ; '.'
0000000000000ee9         db  0x8b ; '.'
0000000000000eea         db  0x20 ; ' '
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x00 ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x00 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0x08 ; '.'
0000000000000ef1         db  0x00 ; '.'
0000000000000ef2         db  0x00 ; '.'
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0x25 ; '%'
0000000000000ef9         db  0x6a ; 'j'
0000000000000efa         db  0x00 ; '.'
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x00 ; '.'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0xd8 ; '.'
0000000000000f01         db  0x8b ; '.'
0000000000000f02         db  0x20 ; ' '
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x00 ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0x08 ; '.'
0000000000000f09         db  0x00 ; '.'
0000000000000f0a         db  0x00 ; '.'
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x00 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0x0a ; '.'
0000000000000f11         db  0x6a ; 'j'
0000000000000f12         db  0x00 ; '.'
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x00 ; '.'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0xe0 ; '.'
0000000000000f19         db  0x8b ; '.'
0000000000000f1a         db  0x20 ; ' '
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x00 ; '.'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0x08 ; '.'
0000000000000f21         db  0x00 ; '.'
0000000000000f22         db  0x00 ; '.'
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x00 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0x75 ; 'u'
0000000000000f29         db  0x68 ; 'h'
0000000000000f2a         db  0x00 ; '.'
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x00 ; '.'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0xe8 ; '.'
0000000000000f31         db  0x8b ; '.'
0000000000000f32         db  0x20 ; ' '
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x00 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0x08 ; '.'
0000000000000f39         db  0x00 ; '.'
0000000000000f3a         db  0x00 ; '.'
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x00 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0x2d ; '-'
0000000000000f41         db  0x6a ; 'j'
0000000000000f42         db  0x00 ; '.'
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x00 ; '.'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0x08 ; '.'
0000000000000f49         db  0x90 ; '.'
0000000000000f4a         db  0x20 ; ' '
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x00 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0x08 ; '.'
0000000000000f51         db  0x00 ; '.'
0000000000000f52         db  0x00 ; '.'
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0x08 ; '.'
0000000000000f59         db  0x90 ; '.'
0000000000000f5a         db  0x20 ; ' '
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x00 ; '.'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0x18 ; '.'
0000000000000f61         db  0x90 ; '.'
0000000000000f62         db  0x20 ; ' '
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x00 ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0x08 ; '.'
0000000000000f69         db  0x00 ; '.'
0000000000000f6a         db  0x00 ; '.'
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0x72 ; 'r'
0000000000000f71         db  0x69 ; 'i'
0000000000000f72         db  0x00 ; '.'
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x00 ; '.'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0x80 ; '.'
0000000000000f79         db  0x90 ; '.'
0000000000000f7a         db  0x20 ; ' '
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x00 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0x08 ; '.'
0000000000000f81         db  0x00 ; '.'
0000000000000f82         db  0x00 ; '.'
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x00 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0x90 ; '.'
0000000000000f89         db  0x90 ; '.'
0000000000000f8a         db  0x20 ; ' '
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x00 ; '.'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0x98 ; '.'
0000000000000f91         db  0x90 ; '.'
0000000000000f92         db  0x20 ; ' '
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x00 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0x08 ; '.'
0000000000000f99         db  0x00 ; '.'
0000000000000f9a         db  0x00 ; '.'
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'
0000000000000fa0         db  0x60 ; '`'
0000000000000fa1         db  0x91 ; '.'
0000000000000fa2         db  0x20 ; ' '
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x00 ; '.'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0xc0 ; '.'
0000000000000fa9         db  0x8f ; '.'
0000000000000faa         db  0x20 ; ' '
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x00 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0x06 ; '.'
0000000000000fb1         db  0x00 ; '.'
0000000000000fb2         db  0x00 ; '.'
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x07 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0x00 ; '.'
0000000000000fb9         db  0x00 ; '.'
0000000000000fba         db  0x00 ; '.'
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x00 ; '.'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0xc8 ; '.'
0000000000000fc1         db  0x8f ; '.'
0000000000000fc2         db  0x20 ; ' '
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x00 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0x06 ; '.'
0000000000000fc9         db  0x00 ; '.'
0000000000000fca         db  0x00 ; '.'
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x1d ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0x00 ; '.'
0000000000000fd1         db  0x00 ; '.'
0000000000000fd2         db  0x00 ; '.'
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x00 ; '.'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0xd0 ; '.'
0000000000000fd9         db  0x8f ; '.'
0000000000000fda         db  0x20 ; ' '
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x00 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0x06 ; '.'
0000000000000fe1         db  0x00 ; '.'
0000000000000fe2         db  0x00 ; '.'
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x22 ; '"'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0x00 ; '.'
0000000000000fe9         db  0x00 ; '.'
0000000000000fea         db  0x00 ; '.'
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x00 ; '.'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0xd8 ; '.'
0000000000000ff1         db  0x8f ; '.'
0000000000000ff2         db  0x20 ; ' '
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x00 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0x06 ; '.'
0000000000000ff9         db  0x00 ; '.'
0000000000000ffa         db  0x00 ; '.'
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x39 ; '9'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'
0000000000001000         db  0x00 ; '.'
0000000000001001         db  0x00 ; '.'
0000000000001002         db  0x00 ; '.'
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x00 ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0xe0 ; '.'
0000000000001009         db  0x8f ; '.'
000000000000100a         db  0x20 ; ' '
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x00 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0x06 ; '.'
0000000000001011         db  0x00 ; '.'
0000000000001012         db  0x00 ; '.'
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x3c ; '<'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0x00 ; '.'
0000000000001019         db  0x00 ; '.'
000000000000101a         db  0x00 ; '.'
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x00 ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0xa0 ; '.'
0000000000001021         db  0x90 ; '.'
0000000000001022         db  0x20 ; ' '
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x00 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x05 ; '.'
0000000000001029         db  0x00 ; '.'
000000000000102a         db  0x00 ; '.'
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x3f ; '?'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0x00 ; '.'
0000000000001031         db  0x00 ; '.'
0000000000001032         db  0x00 ; '.'
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x00 ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0xa8 ; '.'
0000000000001039         db  0x90 ; '.'
000000000000103a         db  0x20 ; ' '
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x00 ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0x05 ; '.'
0000000000001041         db  0x00 ; '.'
0000000000001042         db  0x00 ; '.'
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x3e ; '>'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0x00 ; '.'
0000000000001049         db  0x00 ; '.'
000000000000104a         db  0x00 ; '.'
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x00 ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0xb0 ; '.'
0000000000001051         db  0x90 ; '.'
0000000000001052         db  0x20 ; ' '
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x00 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0x05 ; '.'
0000000000001059         db  0x00 ; '.'
000000000000105a         db  0x00 ; '.'
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x44 ; 'D'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0x00 ; '.'
0000000000001061         db  0x00 ; '.'
0000000000001062         db  0x00 ; '.'
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x00 ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0xb8 ; '.'
0000000000001069         db  0x90 ; '.'
000000000000106a         db  0x20 ; ' '
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x00 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0x05 ; '.'
0000000000001071         db  0x00 ; '.'
0000000000001072         db  0x00 ; '.'
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x41 ; 'A'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0x00 ; '.'
0000000000001079         db  0x00 ; '.'
000000000000107a         db  0x00 ; '.'
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x00 ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0xc0 ; '.'
0000000000001081         db  0x90 ; '.'
0000000000001082         db  0x20 ; ' '
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x00 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0x05 ; '.'
0000000000001089         db  0x00 ; '.'
000000000000108a         db  0x00 ; '.'
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x43 ; 'C'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0x00 ; '.'
0000000000001091         db  0x00 ; '.'
0000000000001092         db  0x00 ; '.'
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x00 ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0x1098; 0x15d8[ (1344 bytes)
        ; File offset : [4248; 5592[ (1344 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000001098         db  0x00 ; '.'
0000000000001099         db  0x8e ; '.'
000000000000109a         db  0x20 ; ' '
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x00 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0x07 ; '.'
00000000000010a1         db  0x00 ; '.'
00000000000010a2         db  0x00 ; '.'
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x01 ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0x00 ; '.'
00000000000010a9         db  0x00 ; '.'
00000000000010aa         db  0x00 ; '.'
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x00 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x08 ; '.'
00000000000010b1         db  0x8e ; '.'
00000000000010b2         db  0x20 ; ' '
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x00 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0x07 ; '.'
00000000000010b9         db  0x00 ; '.'
00000000000010ba         db  0x00 ; '.'
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x02 ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0x00 ; '.'
00000000000010c1         db  0x00 ; '.'
00000000000010c2         db  0x00 ; '.'
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x00 ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x10 ; '.'
00000000000010c9         db  0x8e ; '.'
00000000000010ca         db  0x20 ; ' '
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x00 ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0x07 ; '.'
00000000000010d1         db  0x00 ; '.'
00000000000010d2         db  0x00 ; '.'
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x03 ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0x00 ; '.'
00000000000010d9         db  0x00 ; '.'
00000000000010da         db  0x00 ; '.'
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x00 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x18 ; '.'
00000000000010e1         db  0x8e ; '.'
00000000000010e2         db  0x20 ; ' '
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x00 ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0x07 ; '.'
00000000000010e9         db  0x00 ; '.'
00000000000010ea         db  0x00 ; '.'
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x04 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0x00 ; '.'
00000000000010f1         db  0x00 ; '.'
00000000000010f2         db  0x00 ; '.'
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x00 ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0x20 ; ' '
00000000000010f9         db  0x8e ; '.'
00000000000010fa         db  0x20 ; ' '
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x00 ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0x07 ; '.'
0000000000001101         db  0x00 ; '.'
0000000000001102         db  0x00 ; '.'
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x05 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0x00 ; '.'
0000000000001109         db  0x00 ; '.'
000000000000110a         db  0x00 ; '.'
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x00 ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0x28 ; '('
0000000000001111         db  0x8e ; '.'
0000000000001112         db  0x20 ; ' '
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x00 ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0x07 ; '.'
0000000000001119         db  0x00 ; '.'
000000000000111a         db  0x00 ; '.'
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x06 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x00 ; '.'
0000000000001121         db  0x00 ; '.'
0000000000001122         db  0x00 ; '.'
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x00 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0x30 ; '0'
0000000000001129         db  0x8e ; '.'
000000000000112a         db  0x20 ; ' '
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x00 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0x07 ; '.'
0000000000001131         db  0x00 ; '.'
0000000000001132         db  0x00 ; '.'
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x08 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x00 ; '.'
0000000000001139         db  0x00 ; '.'
000000000000113a         db  0x00 ; '.'
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x00 ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0x38 ; '8'
0000000000001141         db  0x8e ; '.'
0000000000001142         db  0x20 ; ' '
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x00 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0x07 ; '.'
0000000000001149         db  0x00 ; '.'
000000000000114a         db  0x00 ; '.'
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x09 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x00 ; '.'
0000000000001151         db  0x00 ; '.'
0000000000001152         db  0x00 ; '.'
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x00 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0x40 ; '@'
0000000000001159         db  0x8e ; '.'
000000000000115a         db  0x20 ; ' '
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x00 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0x07 ; '.'
0000000000001161         db  0x00 ; '.'
0000000000001162         db  0x00 ; '.'
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x0a ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x00 ; '.'
0000000000001169         db  0x00 ; '.'
000000000000116a         db  0x00 ; '.'
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x00 ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0x48 ; 'H'
0000000000001171         db  0x8e ; '.'
0000000000001172         db  0x20 ; ' '
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x00 ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0x07 ; '.'
0000000000001179         db  0x00 ; '.'
000000000000117a         db  0x00 ; '.'
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x0b ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x00 ; '.'
0000000000001181         db  0x00 ; '.'
0000000000001182         db  0x00 ; '.'
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x00 ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x50 ; 'P'
0000000000001189         db  0x8e ; '.'
000000000000118a         db  0x20 ; ' '
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x00 ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0x07 ; '.'
0000000000001191         db  0x00 ; '.'
0000000000001192         db  0x00 ; '.'
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x0c ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0x00 ; '.'
0000000000001199         db  0x00 ; '.'
000000000000119a         db  0x00 ; '.'
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x00 ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x58 ; 'X'
00000000000011a1         db  0x8e ; '.'
00000000000011a2         db  0x20 ; ' '
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x00 ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0x07 ; '.'
00000000000011a9         db  0x00 ; '.'
00000000000011aa         db  0x00 ; '.'
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x0d ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0x00 ; '.'
00000000000011b1         db  0x00 ; '.'
00000000000011b2         db  0x00 ; '.'
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x00 ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x60 ; '`'
00000000000011b9         db  0x8e ; '.'
00000000000011ba         db  0x20 ; ' '
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x00 ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0x07 ; '.'
00000000000011c1         db  0x00 ; '.'
00000000000011c2         db  0x00 ; '.'
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x0e ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0x00 ; '.'
00000000000011c9         db  0x00 ; '.'
00000000000011ca         db  0x00 ; '.'
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x00 ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x68 ; 'h'
00000000000011d1         db  0x8e ; '.'
00000000000011d2         db  0x20 ; ' '
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x00 ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0x07 ; '.'
00000000000011d9         db  0x00 ; '.'
00000000000011da         db  0x00 ; '.'
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x0f ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0x00 ; '.'
00000000000011e1         db  0x00 ; '.'
00000000000011e2         db  0x00 ; '.'
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x00 ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x70 ; 'p'
00000000000011e9         db  0x8e ; '.'
00000000000011ea         db  0x20 ; ' '
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x00 ; '.'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0x07 ; '.'
00000000000011f1         db  0x00 ; '.'
00000000000011f2         db  0x00 ; '.'
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x10 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0x00 ; '.'
00000000000011f9         db  0x00 ; '.'
00000000000011fa         db  0x00 ; '.'
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x00 ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x78 ; 'x'
0000000000001201         db  0x8e ; '.'
0000000000001202         db  0x20 ; ' '
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x00 ; '.'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0x07 ; '.'
0000000000001209         db  0x00 ; '.'
000000000000120a         db  0x00 ; '.'
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x11 ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0x00 ; '.'
0000000000001211         db  0x00 ; '.'
0000000000001212         db  0x00 ; '.'
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x00 ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x80 ; '.'
0000000000001219         db  0x8e ; '.'
000000000000121a         db  0x20 ; ' '
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x00 ; '.'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0x07 ; '.'
0000000000001221         db  0x00 ; '.'
0000000000001222         db  0x00 ; '.'
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x12 ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0x00 ; '.'
0000000000001229         db  0x00 ; '.'
000000000000122a         db  0x00 ; '.'
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x00 ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x88 ; '.'
0000000000001231         db  0x8e ; '.'
0000000000001232         db  0x20 ; ' '
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x00 ; '.'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0x07 ; '.'
0000000000001239         db  0x00 ; '.'
000000000000123a         db  0x00 ; '.'
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x13 ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x00 ; '.'
0000000000001241         db  0x00 ; '.'
0000000000001242         db  0x00 ; '.'
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x00 ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x90 ; '.'
0000000000001249         db  0x8e ; '.'
000000000000124a         db  0x20 ; ' '
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x00 ; '.'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0x07 ; '.'
0000000000001251         db  0x00 ; '.'
0000000000001252         db  0x00 ; '.'
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x14 ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0x00 ; '.'
0000000000001259         db  0x00 ; '.'
000000000000125a         db  0x00 ; '.'
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x00 ; '.'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x98 ; '.'
0000000000001261         db  0x8e ; '.'
0000000000001262         db  0x20 ; ' '
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x00 ; '.'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x07 ; '.'
0000000000001269         db  0x00 ; '.'
000000000000126a         db  0x00 ; '.'
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x15 ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x00 ; '.'
0000000000001271         db  0x00 ; '.'
0000000000001272         db  0x00 ; '.'
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x00 ; '.'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0xa0 ; '.'
0000000000001279         db  0x8e ; '.'
000000000000127a         db  0x20 ; ' '
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x00 ; '.'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x07 ; '.'
0000000000001281         db  0x00 ; '.'
0000000000001282         db  0x00 ; '.'
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x16 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0x00 ; '.'
0000000000001289         db  0x00 ; '.'
000000000000128a         db  0x00 ; '.'
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x00 ; '.'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0xa8 ; '.'
0000000000001291         db  0x8e ; '.'
0000000000001292         db  0x20 ; ' '
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x00 ; '.'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x07 ; '.'
0000000000001299         db  0x00 ; '.'
000000000000129a         db  0x00 ; '.'
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x17 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0x00 ; '.'
00000000000012a1         db  0x00 ; '.'
00000000000012a2         db  0x00 ; '.'
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x00 ; '.'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0xb0 ; '.'
00000000000012a9         db  0x8e ; '.'
00000000000012aa         db  0x20 ; ' '
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x00 ; '.'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x07 ; '.'
00000000000012b1         db  0x00 ; '.'
00000000000012b2         db  0x00 ; '.'
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x18 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0x00 ; '.'
00000000000012b9         db  0x00 ; '.'
00000000000012ba         db  0x00 ; '.'
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x00 ; '.'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0xb8 ; '.'
00000000000012c1         db  0x8e ; '.'
00000000000012c2         db  0x20 ; ' '
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x00 ; '.'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0x07 ; '.'
00000000000012c9         db  0x00 ; '.'
00000000000012ca         db  0x00 ; '.'
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x19 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0x00 ; '.'
00000000000012d1         db  0x00 ; '.'
00000000000012d2         db  0x00 ; '.'
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x00 ; '.'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0xc0 ; '.'
00000000000012d9         db  0x8e ; '.'
00000000000012da         db  0x20 ; ' '
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x00 ; '.'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0x07 ; '.'
00000000000012e1         db  0x00 ; '.'
00000000000012e2         db  0x00 ; '.'
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x1a ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0x00 ; '.'
00000000000012e9         db  0x00 ; '.'
00000000000012ea         db  0x00 ; '.'
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x00 ; '.'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0xc8 ; '.'
00000000000012f1         db  0x8e ; '.'
00000000000012f2         db  0x20 ; ' '
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x00 ; '.'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x07 ; '.'
00000000000012f9         db  0x00 ; '.'
00000000000012fa         db  0x00 ; '.'
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x1b ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0x00 ; '.'
0000000000001301         db  0x00 ; '.'
0000000000001302         db  0x00 ; '.'
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x00 ; '.'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0xd0 ; '.'
0000000000001309         db  0x8e ; '.'
000000000000130a         db  0x20 ; ' '
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x00 ; '.'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0x07 ; '.'
0000000000001311         db  0x00 ; '.'
0000000000001312         db  0x00 ; '.'
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x1c ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0x00 ; '.'
0000000000001319         db  0x00 ; '.'
000000000000131a         db  0x00 ; '.'
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x00 ; '.'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0xd8 ; '.'
0000000000001321         db  0x8e ; '.'
0000000000001322         db  0x20 ; ' '
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x00 ; '.'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0x07 ; '.'
0000000000001329         db  0x00 ; '.'
000000000000132a         db  0x00 ; '.'
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x1e ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0x00 ; '.'
0000000000001331         db  0x00 ; '.'
0000000000001332         db  0x00 ; '.'
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x00 ; '.'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0xe0 ; '.'
0000000000001339         db  0x8e ; '.'
000000000000133a         db  0x20 ; ' '
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x00 ; '.'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0x07 ; '.'
0000000000001341         db  0x00 ; '.'
0000000000001342         db  0x00 ; '.'
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x1f ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0x00 ; '.'
0000000000001349         db  0x00 ; '.'
000000000000134a         db  0x00 ; '.'
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x00 ; '.'
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0xe8 ; '.'
0000000000001351         db  0x8e ; '.'
0000000000001352         db  0x20 ; ' '
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x00 ; '.'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0x07 ; '.'
0000000000001359         db  0x00 ; '.'
000000000000135a         db  0x00 ; '.'
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x20 ; ' '
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0x00 ; '.'
0000000000001361         db  0x00 ; '.'
0000000000001362         db  0x00 ; '.'
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x00 ; '.'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0xf0 ; '.'
0000000000001369         db  0x8e ; '.'
000000000000136a         db  0x20 ; ' '
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x00 ; '.'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0x07 ; '.'
0000000000001371         db  0x00 ; '.'
0000000000001372         db  0x00 ; '.'
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x21 ; '!'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x00 ; '.'
0000000000001379         db  0x00 ; '.'
000000000000137a         db  0x00 ; '.'
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x00 ; '.'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0xf8 ; '.'
0000000000001381         db  0x8e ; '.'
0000000000001382         db  0x20 ; ' '
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x00 ; '.'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0x07 ; '.'
0000000000001389         db  0x00 ; '.'
000000000000138a         db  0x00 ; '.'
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x23 ; '#'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x00 ; '.'
0000000000001391         db  0x00 ; '.'
0000000000001392         db  0x00 ; '.'
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x00 ; '.'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0x00 ; '.'
0000000000001399         db  0x8f ; '.'
000000000000139a         db  0x20 ; ' '
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x00 ; '.'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0x07 ; '.'
00000000000013a1         db  0x00 ; '.'
00000000000013a2         db  0x00 ; '.'
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x24 ; '$'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x00 ; '.'
00000000000013a9         db  0x00 ; '.'
00000000000013aa         db  0x00 ; '.'
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x00 ; '.'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x08 ; '.'
00000000000013b1         db  0x8f ; '.'
00000000000013b2         db  0x20 ; ' '
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x00 ; '.'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'
00000000000013b8         db  0x07 ; '.'
00000000000013b9         db  0x00 ; '.'
00000000000013ba         db  0x00 ; '.'
00000000000013bb         db  0x00 ; '.'
00000000000013bc         db  0x25 ; '%'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x00 ; '.'
00000000000013bf         db  0x00 ; '.'
00000000000013c0         db  0x00 ; '.'
00000000000013c1         db  0x00 ; '.'
00000000000013c2         db  0x00 ; '.'
00000000000013c3         db  0x00 ; '.'
00000000000013c4         db  0x00 ; '.'
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x00 ; '.'
00000000000013c7         db  0x00 ; '.'
00000000000013c8         db  0x10 ; '.'
00000000000013c9         db  0x8f ; '.'
00000000000013ca         db  0x20 ; ' '
00000000000013cb         db  0x00 ; '.'
00000000000013cc         db  0x00 ; '.'
00000000000013cd         db  0x00 ; '.'
00000000000013ce         db  0x00 ; '.'
00000000000013cf         db  0x00 ; '.'
00000000000013d0         db  0x07 ; '.'
00000000000013d1         db  0x00 ; '.'
00000000000013d2         db  0x00 ; '.'
00000000000013d3         db  0x00 ; '.'
00000000000013d4         db  0x26 ; '&'
00000000000013d5         db  0x00 ; '.'
00000000000013d6         db  0x00 ; '.'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0x00 ; '.'
00000000000013d9         db  0x00 ; '.'
00000000000013da         db  0x00 ; '.'
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x00 ; '.'
00000000000013dd         db  0x00 ; '.'
00000000000013de         db  0x00 ; '.'
00000000000013df         db  0x00 ; '.'
00000000000013e0         db  0x18 ; '.'
00000000000013e1         db  0x8f ; '.'
00000000000013e2         db  0x20 ; ' '
00000000000013e3         db  0x00 ; '.'
00000000000013e4         db  0x00 ; '.'
00000000000013e5         db  0x00 ; '.'
00000000000013e6         db  0x00 ; '.'
00000000000013e7         db  0x00 ; '.'
00000000000013e8         db  0x07 ; '.'
00000000000013e9         db  0x00 ; '.'
00000000000013ea         db  0x00 ; '.'
00000000000013eb         db  0x00 ; '.'
00000000000013ec         db  0x27 ; '''
00000000000013ed         db  0x00 ; '.'
00000000000013ee         db  0x00 ; '.'
00000000000013ef         db  0x00 ; '.'
00000000000013f0         db  0x00 ; '.'
00000000000013f1         db  0x00 ; '.'
00000000000013f2         db  0x00 ; '.'
00000000000013f3         db  0x00 ; '.'
00000000000013f4         db  0x00 ; '.'
00000000000013f5         db  0x00 ; '.'
00000000000013f6         db  0x00 ; '.'
00000000000013f7         db  0x00 ; '.'
00000000000013f8         db  0x20 ; ' '
00000000000013f9         db  0x8f ; '.'
00000000000013fa         db  0x20 ; ' '
00000000000013fb         db  0x00 ; '.'
00000000000013fc         db  0x00 ; '.'
00000000000013fd         db  0x00 ; '.'
00000000000013fe         db  0x00 ; '.'
00000000000013ff         db  0x00 ; '.'
0000000000001400         db  0x07 ; '.'
0000000000001401         db  0x00 ; '.'
0000000000001402         db  0x00 ; '.'
0000000000001403         db  0x00 ; '.'
0000000000001404         db  0x28 ; '('
0000000000001405         db  0x00 ; '.'
0000000000001406         db  0x00 ; '.'
0000000000001407         db  0x00 ; '.'
0000000000001408         db  0x00 ; '.'
0000000000001409         db  0x00 ; '.'
000000000000140a         db  0x00 ; '.'
000000000000140b         db  0x00 ; '.'
000000000000140c         db  0x00 ; '.'
000000000000140d         db  0x00 ; '.'
000000000000140e         db  0x00 ; '.'
000000000000140f         db  0x00 ; '.'
0000000000001410         db  0x28 ; '('
0000000000001411         db  0x8f ; '.'
0000000000001412         db  0x20 ; ' '
0000000000001413         db  0x00 ; '.'
0000000000001414         db  0x00 ; '.'
0000000000001415         db  0x00 ; '.'
0000000000001416         db  0x00 ; '.'
0000000000001417         db  0x00 ; '.'
0000000000001418         db  0x07 ; '.'
0000000000001419         db  0x00 ; '.'
000000000000141a         db  0x00 ; '.'
000000000000141b         db  0x00 ; '.'
000000000000141c         db  0x29 ; ')'
000000000000141d         db  0x00 ; '.'
000000000000141e         db  0x00 ; '.'
000000000000141f         db  0x00 ; '.'
0000000000001420         db  0x00 ; '.'
0000000000001421         db  0x00 ; '.'
0000000000001422         db  0x00 ; '.'
0000000000001423         db  0x00 ; '.'
0000000000001424         db  0x00 ; '.'
0000000000001425         db  0x00 ; '.'
0000000000001426         db  0x00 ; '.'
0000000000001427         db  0x00 ; '.'
0000000000001428         db  0x30 ; '0'
0000000000001429         db  0x8f ; '.'
000000000000142a         db  0x20 ; ' '
000000000000142b         db  0x00 ; '.'
000000000000142c         db  0x00 ; '.'
000000000000142d         db  0x00 ; '.'
000000000000142e         db  0x00 ; '.'
000000000000142f         db  0x00 ; '.'
0000000000001430         db  0x07 ; '.'
0000000000001431         db  0x00 ; '.'
0000000000001432         db  0x00 ; '.'
0000000000001433         db  0x00 ; '.'
0000000000001434         db  0x2a ; '*'
0000000000001435         db  0x00 ; '.'
0000000000001436         db  0x00 ; '.'
0000000000001437         db  0x00 ; '.'
0000000000001438         db  0x00 ; '.'
0000000000001439         db  0x00 ; '.'
000000000000143a         db  0x00 ; '.'
000000000000143b         db  0x00 ; '.'
000000000000143c         db  0x00 ; '.'
000000000000143d         db  0x00 ; '.'
000000000000143e         db  0x00 ; '.'
000000000000143f         db  0x00 ; '.'
0000000000001440         db  0x38 ; '8'
0000000000001441         db  0x8f ; '.'
0000000000001442         db  0x20 ; ' '
0000000000001443         db  0x00 ; '.'
0000000000001444         db  0x00 ; '.'
0000000000001445         db  0x00 ; '.'
0000000000001446         db  0x00 ; '.'
0000000000001447         db  0x00 ; '.'
0000000000001448         db  0x07 ; '.'
0000000000001449         db  0x00 ; '.'
000000000000144a         db  0x00 ; '.'
000000000000144b         db  0x00 ; '.'
000000000000144c         db  0x2b ; '+'
000000000000144d         db  0x00 ; '.'
000000000000144e         db  0x00 ; '.'
000000000000144f         db  0x00 ; '.'
0000000000001450         db  0x00 ; '.'
0000000000001451         db  0x00 ; '.'
0000000000001452         db  0x00 ; '.'
0000000000001453         db  0x00 ; '.'
0000000000001454         db  0x00 ; '.'
0000000000001455         db  0x00 ; '.'
0000000000001456         db  0x00 ; '.'
0000000000001457         db  0x00 ; '.'
0000000000001458         db  0x40 ; '@'
0000000000001459         db  0x8f ; '.'
000000000000145a         db  0x20 ; ' '
000000000000145b         db  0x00 ; '.'
000000000000145c         db  0x00 ; '.'
000000000000145d         db  0x00 ; '.'
000000000000145e         db  0x00 ; '.'
000000000000145f         db  0x00 ; '.'
0000000000001460         db  0x07 ; '.'
0000000000001461         db  0x00 ; '.'
0000000000001462         db  0x00 ; '.'
0000000000001463         db  0x00 ; '.'
0000000000001464         db  0x2c ; ','
0000000000001465         db  0x00 ; '.'
0000000000001466         db  0x00 ; '.'
0000000000001467         db  0x00 ; '.'
0000000000001468         db  0x00 ; '.'
0000000000001469         db  0x00 ; '.'
000000000000146a         db  0x00 ; '.'
000000000000146b         db  0x00 ; '.'
000000000000146c         db  0x00 ; '.'
000000000000146d         db  0x00 ; '.'
000000000000146e         db  0x00 ; '.'
000000000000146f         db  0x00 ; '.'
0000000000001470         db  0x48 ; 'H'
0000000000001471         db  0x8f ; '.'
0000000000001472         db  0x20 ; ' '
0000000000001473         db  0x00 ; '.'
0000000000001474         db  0x00 ; '.'
0000000000001475         db  0x00 ; '.'
0000000000001476         db  0x00 ; '.'
0000000000001477         db  0x00 ; '.'
0000000000001478         db  0x07 ; '.'
0000000000001479         db  0x00 ; '.'
000000000000147a         db  0x00 ; '.'
000000000000147b         db  0x00 ; '.'
000000000000147c         db  0x2d ; '-'
000000000000147d         db  0x00 ; '.'
000000000000147e         db  0x00 ; '.'
000000000000147f         db  0x00 ; '.'
0000000000001480         db  0x00 ; '.'
0000000000001481         db  0x00 ; '.'
0000000000001482         db  0x00 ; '.'
0000000000001483         db  0x00 ; '.'
0000000000001484         db  0x00 ; '.'
0000000000001485         db  0x00 ; '.'
0000000000001486         db  0x00 ; '.'
0000000000001487         db  0x00 ; '.'
0000000000001488         db  0x50 ; 'P'
0000000000001489         db  0x8f ; '.'
000000000000148a         db  0x20 ; ' '
000000000000148b         db  0x00 ; '.'
000000000000148c         db  0x00 ; '.'
000000000000148d         db  0x00 ; '.'
000000000000148e         db  0x00 ; '.'
000000000000148f         db  0x00 ; '.'
0000000000001490         db  0x07 ; '.'
0000000000001491         db  0x00 ; '.'
0000000000001492         db  0x00 ; '.'
0000000000001493         db  0x00 ; '.'
0000000000001494         db  0x2e ; '.'
0000000000001495         db  0x00 ; '.'
0000000000001496         db  0x00 ; '.'
0000000000001497         db  0x00 ; '.'
0000000000001498         db  0x00 ; '.'
0000000000001499         db  0x00 ; '.'
000000000000149a         db  0x00 ; '.'
000000000000149b         db  0x00 ; '.'
000000000000149c         db  0x00 ; '.'
000000000000149d         db  0x00 ; '.'
000000000000149e         db  0x00 ; '.'
000000000000149f         db  0x00 ; '.'
00000000000014a0         db  0x58 ; 'X'
00000000000014a1         db  0x8f ; '.'
00000000000014a2         db  0x20 ; ' '
00000000000014a3         db  0x00 ; '.'
00000000000014a4         db  0x00 ; '.'
00000000000014a5         db  0x00 ; '.'
00000000000014a6         db  0x00 ; '.'
00000000000014a7         db  0x00 ; '.'
00000000000014a8         db  0x07 ; '.'
00000000000014a9         db  0x00 ; '.'
00000000000014aa         db  0x00 ; '.'
00000000000014ab         db  0x00 ; '.'
00000000000014ac         db  0x2f ; '/'
00000000000014ad         db  0x00 ; '.'
00000000000014ae         db  0x00 ; '.'
00000000000014af         db  0x00 ; '.'
00000000000014b0         db  0x00 ; '.'
00000000000014b1         db  0x00 ; '.'
00000000000014b2         db  0x00 ; '.'
00000000000014b3         db  0x00 ; '.'
00000000000014b4         db  0x00 ; '.'
00000000000014b5         db  0x00 ; '.'
00000000000014b6         db  0x00 ; '.'
00000000000014b7         db  0x00 ; '.'
00000000000014b8         db  0x60 ; '`'
00000000000014b9         db  0x8f ; '.'
00000000000014ba         db  0x20 ; ' '
00000000000014bb         db  0x00 ; '.'
00000000000014bc         db  0x00 ; '.'
00000000000014bd         db  0x00 ; '.'
00000000000014be         db  0x00 ; '.'
00000000000014bf         db  0x00 ; '.'
00000000000014c0         db  0x07 ; '.'
00000000000014c1         db  0x00 ; '.'
00000000000014c2         db  0x00 ; '.'
00000000000014c3         db  0x00 ; '.'
00000000000014c4         db  0x30 ; '0'
00000000000014c5         db  0x00 ; '.'
00000000000014c6         db  0x00 ; '.'
00000000000014c7         db  0x00 ; '.'
00000000000014c8         db  0x00 ; '.'
00000000000014c9         db  0x00 ; '.'
00000000000014ca         db  0x00 ; '.'
00000000000014cb         db  0x00 ; '.'
00000000000014cc         db  0x00 ; '.'
00000000000014cd         db  0x00 ; '.'
00000000000014ce         db  0x00 ; '.'
00000000000014cf         db  0x00 ; '.'
00000000000014d0         db  0x68 ; 'h'
00000000000014d1         db  0x8f ; '.'
00000000000014d2         db  0x20 ; ' '
00000000000014d3         db  0x00 ; '.'
00000000000014d4         db  0x00 ; '.'
00000000000014d5         db  0x00 ; '.'
00000000000014d6         db  0x00 ; '.'
00000000000014d7         db  0x00 ; '.'
00000000000014d8         db  0x07 ; '.'
00000000000014d9         db  0x00 ; '.'
00000000000014da         db  0x00 ; '.'
00000000000014db         db  0x00 ; '.'
00000000000014dc         db  0x31 ; '1'
00000000000014dd         db  0x00 ; '.'
00000000000014de         db  0x00 ; '.'
00000000000014df         db  0x00 ; '.'
00000000000014e0         db  0x00 ; '.'
00000000000014e1         db  0x00 ; '.'
00000000000014e2         db  0x00 ; '.'
00000000000014e3         db  0x00 ; '.'
00000000000014e4         db  0x00 ; '.'
00000000000014e5         db  0x00 ; '.'
00000000000014e6         db  0x00 ; '.'
00000000000014e7         db  0x00 ; '.'
00000000000014e8         db  0x70 ; 'p'
00000000000014e9         db  0x8f ; '.'
00000000000014ea         db  0x20 ; ' '
00000000000014eb         db  0x00 ; '.'
00000000000014ec         db  0x00 ; '.'
00000000000014ed         db  0x00 ; '.'
00000000000014ee         db  0x00 ; '.'
00000000000014ef         db  0x00 ; '.'
00000000000014f0         db  0x07 ; '.'
00000000000014f1         db  0x00 ; '.'
00000000000014f2         db  0x00 ; '.'
00000000000014f3         db  0x00 ; '.'
00000000000014f4         db  0x32 ; '2'
00000000000014f5         db  0x00 ; '.'
00000000000014f6         db  0x00 ; '.'
00000000000014f7         db  0x00 ; '.'
00000000000014f8         db  0x00 ; '.'
00000000000014f9         db  0x00 ; '.'
00000000000014fa         db  0x00 ; '.'
00000000000014fb         db  0x00 ; '.'
00000000000014fc         db  0x00 ; '.'
00000000000014fd         db  0x00 ; '.'
00000000000014fe         db  0x00 ; '.'
00000000000014ff         db  0x00 ; '.'
0000000000001500         db  0x78 ; 'x'
0000000000001501         db  0x8f ; '.'
0000000000001502         db  0x20 ; ' '
0000000000001503         db  0x00 ; '.'
0000000000001504         db  0x00 ; '.'
0000000000001505         db  0x00 ; '.'
0000000000001506         db  0x00 ; '.'
0000000000001507         db  0x00 ; '.'
0000000000001508         db  0x07 ; '.'
0000000000001509         db  0x00 ; '.'
000000000000150a         db  0x00 ; '.'
000000000000150b         db  0x00 ; '.'
000000000000150c         db  0x33 ; '3'
000000000000150d         db  0x00 ; '.'
000000000000150e         db  0x00 ; '.'
000000000000150f         db  0x00 ; '.'
0000000000001510         db  0x00 ; '.'
0000000000001511         db  0x00 ; '.'
0000000000001512         db  0x00 ; '.'
0000000000001513         db  0x00 ; '.'
0000000000001514         db  0x00 ; '.'
0000000000001515         db  0x00 ; '.'
0000000000001516         db  0x00 ; '.'
0000000000001517         db  0x00 ; '.'
0000000000001518         db  0x80 ; '.'
0000000000001519         db  0x8f ; '.'
000000000000151a         db  0x20 ; ' '
000000000000151b         db  0x00 ; '.'
000000000000151c         db  0x00 ; '.'
000000000000151d         db  0x00 ; '.'
000000000000151e         db  0x00 ; '.'
000000000000151f         db  0x00 ; '.'
0000000000001520         db  0x07 ; '.'
0000000000001521         db  0x00 ; '.'
0000000000001522         db  0x00 ; '.'
0000000000001523         db  0x00 ; '.'
0000000000001524         db  0x34 ; '4'
0000000000001525         db  0x00 ; '.'
0000000000001526         db  0x00 ; '.'
0000000000001527         db  0x00 ; '.'
0000000000001528         db  0x00 ; '.'
0000000000001529         db  0x00 ; '.'
000000000000152a         db  0x00 ; '.'
000000000000152b         db  0x00 ; '.'
000000000000152c         db  0x00 ; '.'
000000000000152d         db  0x00 ; '.'
000000000000152e         db  0x00 ; '.'
000000000000152f         db  0x00 ; '.'
0000000000001530         db  0x88 ; '.'
0000000000001531         db  0x8f ; '.'
0000000000001532         db  0x20 ; ' '
0000000000001533         db  0x00 ; '.'
0000000000001534         db  0x00 ; '.'
0000000000001535         db  0x00 ; '.'
0000000000001536         db  0x00 ; '.'
0000000000001537         db  0x00 ; '.'
0000000000001538         db  0x07 ; '.'
0000000000001539         db  0x00 ; '.'
000000000000153a         db  0x00 ; '.'
000000000000153b         db  0x00 ; '.'
000000000000153c         db  0x35 ; '5'
000000000000153d         db  0x00 ; '.'
000000000000153e         db  0x00 ; '.'
000000000000153f         db  0x00 ; '.'
0000000000001540         db  0x00 ; '.'
0000000000001541         db  0x00 ; '.'
0000000000001542         db  0x00 ; '.'
0000000000001543         db  0x00 ; '.'
0000000000001544         db  0x00 ; '.'
0000000000001545         db  0x00 ; '.'
0000000000001546         db  0x00 ; '.'
0000000000001547         db  0x00 ; '.'
0000000000001548         db  0x90 ; '.'
0000000000001549         db  0x8f ; '.'
000000000000154a         db  0x20 ; ' '
000000000000154b         db  0x00 ; '.'
000000000000154c         db  0x00 ; '.'
000000000000154d         db  0x00 ; '.'
000000000000154e         db  0x00 ; '.'
000000000000154f         db  0x00 ; '.'
0000000000001550         db  0x07 ; '.'
0000000000001551         db  0x00 ; '.'
0000000000001552         db  0x00 ; '.'
0000000000001553         db  0x00 ; '.'
0000000000001554         db  0x36 ; '6'
0000000000001555         db  0x00 ; '.'
0000000000001556         db  0x00 ; '.'
0000000000001557         db  0x00 ; '.'
0000000000001558         db  0x00 ; '.'
0000000000001559         db  0x00 ; '.'
000000000000155a         db  0x00 ; '.'
000000000000155b         db  0x00 ; '.'
000000000000155c         db  0x00 ; '.'
000000000000155d         db  0x00 ; '.'
000000000000155e         db  0x00 ; '.'
000000000000155f         db  0x00 ; '.'
0000000000001560         db  0x98 ; '.'
0000000000001561         db  0x8f ; '.'
0000000000001562         db  0x20 ; ' '
0000000000001563         db  0x00 ; '.'
0000000000001564         db  0x00 ; '.'
0000000000001565         db  0x00 ; '.'
0000000000001566         db  0x00 ; '.'
0000000000001567         db  0x00 ; '.'
0000000000001568         db  0x07 ; '.'
0000000000001569         db  0x00 ; '.'
000000000000156a         db  0x00 ; '.'
000000000000156b         db  0x00 ; '.'
000000000000156c         db  0x37 ; '7'
000000000000156d         db  0x00 ; '.'
000000000000156e         db  0x00 ; '.'
000000000000156f         db  0x00 ; '.'
0000000000001570         db  0x00 ; '.'
0000000000001571         db  0x00 ; '.'
0000000000001572         db  0x00 ; '.'
0000000000001573         db  0x00 ; '.'
0000000000001574         db  0x00 ; '.'
0000000000001575         db  0x00 ; '.'
0000000000001576         db  0x00 ; '.'
0000000000001577         db  0x00 ; '.'
0000000000001578         db  0xa0 ; '.'
0000000000001579         db  0x8f ; '.'
000000000000157a         db  0x20 ; ' '
000000000000157b         db  0x00 ; '.'
000000000000157c         db  0x00 ; '.'
000000000000157d         db  0x00 ; '.'
000000000000157e         db  0x00 ; '.'
000000000000157f         db  0x00 ; '.'
0000000000001580         db  0x07 ; '.'
0000000000001581         db  0x00 ; '.'
0000000000001582         db  0x00 ; '.'
0000000000001583         db  0x00 ; '.'
0000000000001584         db  0x38 ; '8'
0000000000001585         db  0x00 ; '.'
0000000000001586         db  0x00 ; '.'
0000000000001587         db  0x00 ; '.'
0000000000001588         db  0x00 ; '.'
0000000000001589         db  0x00 ; '.'
000000000000158a         db  0x00 ; '.'
000000000000158b         db  0x00 ; '.'
000000000000158c         db  0x00 ; '.'
000000000000158d         db  0x00 ; '.'
000000000000158e         db  0x00 ; '.'
000000000000158f         db  0x00 ; '.'
0000000000001590         db  0xa8 ; '.'
0000000000001591         db  0x8f ; '.'
0000000000001592         db  0x20 ; ' '
0000000000001593         db  0x00 ; '.'
0000000000001594         db  0x00 ; '.'
0000000000001595         db  0x00 ; '.'
0000000000001596         db  0x00 ; '.'
0000000000001597         db  0x00 ; '.'
0000000000001598         db  0x07 ; '.'
0000000000001599         db  0x00 ; '.'
000000000000159a         db  0x00 ; '.'
000000000000159b         db  0x00 ; '.'
000000000000159c         db  0x3a ; ':'
000000000000159d         db  0x00 ; '.'
000000000000159e         db  0x00 ; '.'
000000000000159f         db  0x00 ; '.'
00000000000015a0         db  0x00 ; '.'
00000000000015a1         db  0x00 ; '.'
00000000000015a2         db  0x00 ; '.'
00000000000015a3         db  0x00 ; '.'
00000000000015a4         db  0x00 ; '.'
00000000000015a5         db  0x00 ; '.'
00000000000015a6         db  0x00 ; '.'
00000000000015a7         db  0x00 ; '.'
00000000000015a8         db  0xb0 ; '.'
00000000000015a9         db  0x8f ; '.'
00000000000015aa         db  0x20 ; ' '
00000000000015ab         db  0x00 ; '.'
00000000000015ac         db  0x00 ; '.'
00000000000015ad         db  0x00 ; '.'
00000000000015ae         db  0x00 ; '.'
00000000000015af         db  0x00 ; '.'
00000000000015b0         db  0x07 ; '.'
00000000000015b1         db  0x00 ; '.'
00000000000015b2         db  0x00 ; '.'
00000000000015b3         db  0x00 ; '.'
00000000000015b4         db  0x3b ; ';'
00000000000015b5         db  0x00 ; '.'
00000000000015b6         db  0x00 ; '.'
00000000000015b7         db  0x00 ; '.'
00000000000015b8         db  0x00 ; '.'
00000000000015b9         db  0x00 ; '.'
00000000000015ba         db  0x00 ; '.'
00000000000015bb         db  0x00 ; '.'
00000000000015bc         db  0x00 ; '.'
00000000000015bd         db  0x00 ; '.'
00000000000015be         db  0x00 ; '.'
00000000000015bf         db  0x00 ; '.'
00000000000015c0         db  0xb8 ; '.'
00000000000015c1         db  0x8f ; '.'
00000000000015c2         db  0x20 ; ' '
00000000000015c3         db  0x00 ; '.'
00000000000015c4         db  0x00 ; '.'
00000000000015c5         db  0x00 ; '.'
00000000000015c6         db  0x00 ; '.'
00000000000015c7         db  0x00 ; '.'
00000000000015c8         db  0x07 ; '.'
00000000000015c9         db  0x00 ; '.'
00000000000015ca         db  0x00 ; '.'
00000000000015cb         db  0x00 ; '.'
00000000000015cc         db  0x3d ; '='
00000000000015cd         db  0x00 ; '.'
00000000000015ce         db  0x00 ; '.'
00000000000015cf         db  0x00 ; '.'
00000000000015d0         db  0x00 ; '.'
00000000000015d1         db  0x00 ; '.'
00000000000015d2         db  0x00 ; '.'
00000000000015d3         db  0x00 ; '.'
00000000000015d4         db  0x00 ; '.'
00000000000015d5         db  0x00 ; '.'
00000000000015d6         db  0x00 ; '.'
00000000000015d7         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x15d8; 0x15ef[ (23 bytes)
        ; File offset : [5592; 5615[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
00000000000015d8         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
00000000000015dc         mov        rax, qword [qword_208fd0]                   ; qword_208fd0
00000000000015e3         test       rax, rax
00000000000015e6         je         loc_15ea

00000000000015e8         call       rax

                     loc_15ea:
00000000000015ea         add        rsp, 0x8                                    ; CODE XREF=_init+14
00000000000015ee         ret
                        ; endp
00000000000015ef         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x15f0; 0x1980[ (912 bytes)
        ; File offset : [5616; 6528[ (912 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_15f0:
00000000000015f0         push       qword [qword_208df0]                        ; Begin of unwind block (FDE at 0x7654), qword_208df0, CODE XREF=sub_1606+5
00000000000015f6         jmp        qword [qword_208df0+8]                      ; 0x208df8
                        ; endp
00000000000015fc         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_endgrent:        // endgrent
0000000000001600         jmp        qword [endgrent@GOT]                        ; endgrent, endgrent@GOT, CODE XREF=parse_with_separator+199, parse_with_separator+577, parse_with_separator+760
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1606:
0000000000001606         push       0x0
000000000000160b         jmp        loc_15f0


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getenv:        // getenv
0000000000001610         jmp        qword [getenv@GOT]                          ; getenv, getenv@GOT, CODE XREF=main+888
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1616:
0000000000001616         push       0x1
000000000000161b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
0000000000001620         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=main+683, print_stuff+744, print_group_list+334, quotearg_n_options+277, quotearg_free+55, quotearg_free+82, quotearg_free+120, parse_with_separator+265, parse_with_separator+273, parse_with_separator+609, parse_with_separator+617
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1626:
0000000000001626         push       0x2
000000000000162b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
0000000000001630         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=set_program_name+154, sub_3620+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1636:
0000000000001636         push       0x3
000000000000163b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
0000000000001640         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=main+522, main+705, main+722, main+739, main+902, main+986, main+1230, print_stuff+1038, print_stuff+1361, print_group_list+400, close_stdout+22
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1646:
0000000000001646         push       0x4
000000000000164b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
0000000000001650         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+588, usage+781
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1656:
0000000000001656         push       0x5
000000000000165b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
0000000000001660         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1666:
0000000000001666         push       0x6
000000000000166b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
0000000000001670         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1676:
0000000000001676         push       0x7
000000000000167b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
0000000000001680         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+71
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1686:
0000000000001686         push       0x8
000000000000168b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
0000000000001690         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1696:
0000000000001696         push       0x9
000000000000169b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getpwuid:        // getpwuid
00000000000016a0         jmp        qword [getpwuid@GOT]                        ; getpwuid, getpwuid@GOT, CODE XREF=main+612, print_stuff+274, print_stuff+524, print_stuff+938, print_group_list+62
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16a6:
00000000000016a6         push       0xa
00000000000016ab         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
00000000000016b0         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16b6:
00000000000016b6         push       0xb
00000000000016bb         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
00000000000016c0         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+514, main+955, main+1066, main+1178, main+1283, main+1319, main+1355, main+1391, main+1427, print_stuff+495, print_stuff+594
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16c6:
00000000000016c6         push       0xc
00000000000016cb         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
00000000000016d0         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16d6:
00000000000016d6         push       0xd
00000000000016db         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
00000000000016e0         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=quotearg_buffer_restyled+343, sub_3620+411, sub_3620+1742, xstrdup+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16e6:
00000000000016e6         push       0xe
00000000000016eb         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
00000000000016f0         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=print_stuff+1420, print_group_list+542, sub_3620+2739, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137, quotearg_n_custom_mem+140, parse_with_separator+949, version_etc_va+101, version_etc+192
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16f6:
00000000000016f6         push       0xf
00000000000016fb         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getuid:        // getuid
0000000000001700         jmp        qword [getuid@GOT]                          ; getuid, getuid@GOT, CODE XREF=main+1000, main+1134, main+1244
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1706:
0000000000001706         push       0x10
000000000000170b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
0000000000001710         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+114
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1716:
0000000000001716         push       0x11
000000000000171b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
0000000000001720         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1726:
0000000000001726         push       0x12
000000000000172b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strchr:        // strchr
0000000000001730         jmp        qword [strchr@GOT]                          ; strchr, strchr@GOT, CODE XREF=parse_user_spec+43, parse_user_spec+100, xstrtoul+291, xstrtoul+323, xstrtoul+380
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1736:
0000000000001736         push       0x13
000000000000173b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getgrgid:        // getgrgid
0000000000001740         jmp        qword [getgrgid@GOT]                        ; getgrgid, getgrgid@GOT, CODE XREF=print_stuff+623, print_stuff+834, print_stuff+1255, print_group+22, parse_with_separator+735
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1746:
0000000000001746         push       0x14
000000000000174b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___overflow:        // __overflow
0000000000001750         jmp        qword [__overflow@GOT]                      ; __overflow, __overflow@GOT, CODE XREF=print_stuff+760, print_stuff+1321, print_stuff+1394, print_stuff+1410, print_group_list+468, print_group_list+532
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1756:
0000000000001756         push       0x15
000000000000175b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
0000000000001760         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1766:
0000000000001766         push       0x16
000000000000176b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
0000000000001770         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1776:
0000000000001776         push       0x17
000000000000177b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___assert_fail:        // __assert_fail
0000000000001780         jmp        qword [__assert_fail@GOT]                   ; __assert_fail, __assert_fail@GOT, CODE XREF=xstrtoul+927
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1786:
0000000000001786         push       0x18
000000000000178b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
0000000000001790         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1796:
0000000000001796         push       0x19
000000000000179b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_geteuid:        // geteuid
00000000000017a0         jmp        qword [geteuid@GOT]                         ; geteuid, geteuid@GOT, CODE XREF=main+916, main+1094
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17a6:
00000000000017a6         push       0x1a
00000000000017ab         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
00000000000017b0         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=quotearg_buffer_restyled+410
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17b6:
00000000000017b6         push       0x1b
00000000000017bb         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
00000000000017c0         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=print_stuff+100, print_stuff+1187, print_stuff+1243, usage+157, usage+194, usage+231, usage+268, usage+312, usage+896, print_group+105, version_etc_arn+135
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17c6:
00000000000017c6         push       0x1c
00000000000017cb         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
00000000000017d0         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17d6:
00000000000017d6         push       0x1d
00000000000017db         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getpwnam:        // getpwnam
00000000000017e0         jmp        qword [getpwnam@GOT]                        ; getpwnam, getpwnam@GOT, CODE XREF=parse_with_separator+406
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17e6:
00000000000017e6         push       0x1e
00000000000017eb         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
00000000000017f0         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=xmemdup+35
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17f6:
00000000000017f6         push       0x1f
00000000000017fb         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getgrnam:        // getgrnam
0000000000001800         jmp        qword [getgrnam@GOT]                        ; getgrnam, getgrnam@GOT, CODE XREF=parse_with_separator+181
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1806:
0000000000001806         push       0x20
000000000000180b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
0000000000001810         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1816:
0000000000001816         push       0x21
000000000000181b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getgid:        // getgid
0000000000001820         jmp        qword [getgid@GOT]                          ; getgid, getgid@GOT, CODE XREF=main+784
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1826:
0000000000001826         push       0x22
000000000000182b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getgroups:        // getgroups
0000000000001830         jmp        qword [getgroups@GOT]                       ; getgroups, getgroups@GOT, CODE XREF=mgetgroups+252, mgetgroups+343, mgetgroups+512, mgetgroups+549
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1836:
0000000000001836         push       0x23
000000000000183b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
0000000000001840         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=xmalloc+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1846:
0000000000001846         push       0x24
000000000000184b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
0000000000001850         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1856:
0000000000001856         push       0x25
000000000000185b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
0000000000001860         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1866:
0000000000001866         push       0x26
000000000000186b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_endpwent:        // endpwent
0000000000001870         jmp        qword [endpwent@GOT]                        ; endpwent, endpwent@GOT, CODE XREF=parse_with_separator+447, parse_with_separator+491, parse_with_separator+893
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1876:
0000000000001876         push       0x27
000000000000187b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getegid:        // getegid
0000000000001880         jmp        qword [getegid@GOT]                         ; getegid, getegid@GOT, CODE XREF=main+753
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1886:
0000000000001886         push       0x28
000000000000188b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
0000000000001890         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1896:
0000000000001896         push       0x29
000000000000189b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
00000000000018a0         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17, realloc_groupbuf+29, mgetgroups+457
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18a6:
00000000000018a6         push       0x2a
00000000000018ab         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
00000000000018b0         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+40, usage+563, usage+756, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18b6:
00000000000018b6         push       0x2b
00000000000018bb         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
00000000000018c0         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=print_stuff+513, print_stuff+554, print_stuff+612, print_stuff+650, print_stuff+823, print_stuff+865, print_stuff+927, print_stuff+972, print_stuff+1282, usage+120, usage+551
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18c6:
00000000000018c6         push       0x2c
00000000000018cb         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
00000000000018d0         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+539, main+972, main+1083, main+1195, main+1300, main+1336, main+1372, main+1408, main+1444, print_stuff+1052, print_stuff+1121
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18d6:
00000000000018d6         push       0x2d
00000000000018db         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getgrouplist:        // getgrouplist
00000000000018e0         jmp        qword [getgrouplist@GOT]                    ; getgrouplist, getgrouplist@GOT, CODE XREF=mgetgroups+102
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18e6:
00000000000018e6         push       0x2e
00000000000018eb         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
00000000000018f0         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18f6:
00000000000018f6         push       0x2f
00000000000018fb         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strtoul:        // strtoul
0000000000001900         jmp        qword [strtoul@GOT]                         ; strtoul, strtoul@GOT, CODE XREF=xstrtoul+140
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1906:
0000000000001906         push       0x30
000000000000190b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000001910         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1916:
0000000000001916         push       0x31
000000000000191b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000001920         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+257, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1926:
0000000000001926         push       0x32
000000000000192b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
0000000000001930         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1936:
0000000000001936         push       0x33
000000000000193b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
0000000000001940         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642, version_etc_arn+718, version_etc_arn+872
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1946:
0000000000001946         push       0x34
000000000000194b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
0000000000001950         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_3620+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1956:
0000000000001956         push       0x35
000000000000195b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
0000000000001960         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_3620+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1966:
0000000000001966         push       0x36
000000000000196b         jmp        0x15f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
0000000000001970         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=sub_33c0+51, xstrtoul+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1976:
0000000000001976         push       0x37
000000000000197b         jmp        0x15f0
                        ; endp


        ; Section .plt.got
        ; Range: [0x1980; 0x1988[ (8 bytes)
        ; File offset : [6528; 6536[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_208fe0:        // qword_208fe0
0000000000001980         jmp        qword [qword_208fe0]                        ; qword, End of unwind block (FDE at 0x7654), Begin of unwind block (FDE at 0x767c), qword_208fe0, CODE XREF=__do_global_dtors_aux+30
                        ; endp
0000000000001986         align      8
0000000000001988         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x767c)
0000000000001989         db  0x00 ; '.'
000000000000198a         db  0x00 ; '.'
000000000000198b         db  0x00 ; '.'
000000000000198c         db  0x00 ; '.'
000000000000198d         db  0x00 ; '.'
000000000000198e         db  0x00 ; '.'
000000000000198f         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x1990; 0x620e[ (18558 bytes)
        ; File offset : [6544; 25102[ (18558 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     main:
0000000000001990         push       r14                                         ; Begin of unwind block (FDE at 0x7704), DATA XREF=_start+29
0000000000001992         push       r13
0000000000001994         push       r12
0000000000001996         push       rbp
0000000000001997         mov        ebp, edi
0000000000001999         push       rbx
000000000000199a         mov        rdi, qword [rsi]
000000000000199d         mov        rbx, rsi
00000000000019a0         lea        r12, qword [longopts]                       ; longopts
00000000000019a7         call       set_program_name                            ; set_program_name
00000000000019ac         lea        rsi, qword [aWrittenBySSAnd+27]             ; argument "__locale" for method j_setlocale, 0x6f29
00000000000019b3         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
00000000000019b8         call       j_setlocale                                 ; setlocale
00000000000019bd         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
00000000000019c4         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
00000000000019cb         call       j_bindtextdomain                            ; bindtextdomain
00000000000019d0         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
00000000000019d7         call       j_textdomain                                ; textdomain
00000000000019dc         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
00000000000019e3         call       atexit                                      ; atexit
00000000000019e8         nop        dword [rax+rax]

                     loc_19f0:
00000000000019f0         lea        rdx, qword [aAgnruzgz]                      ; argument "__shortopts" for method j_getopt_long, "agnruzGZ", CODE XREF=main+131, main+171, main+293, main+320, main+335, main+351, main+367
00000000000019f7         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
00000000000019fa         mov        rcx, r12                                    ; argument "__longopts" for method j_getopt_long
00000000000019fd         mov        rsi, rbx                                    ; argument "___argv" for method j_getopt_long
0000000000001a00         mov        edi, ebp                                    ; argument "___argc" for method j_getopt_long
0000000000001a02         call       j_getopt_long                               ; getopt_long
0000000000001a07         cmp        eax, 0xffffffff
0000000000001a0a         je         loc_1b04

0000000000001a10         cmp        eax, 0x61
0000000000001a13         je         loc_19f0

0000000000001a15         jle        loc_1a40

0000000000001a17         cmp        eax, 0x72
0000000000001a1a         je         loc_1ae8

0000000000001a20         jg         loc_1aa0

0000000000001a22         cmp        eax, 0x67
0000000000001a25         je         loc_1ad8

0000000000001a2b         cmp        eax, 0x6e
0000000000001a2e         jne        loc_1e40

0000000000001a34         mov        byte [use_name], 0x1                        ; use_name
0000000000001a3b         jmp        loc_19f0
0000000000001a3d         align      64

                     loc_1a40:
0000000000001a40         cmp        eax, 0xffffff7e                             ; CODE XREF=main+133
0000000000001a45         je         loc_1e4a

0000000000001a4b         jg         loc_1ac0

0000000000001a4d         cmp        eax, 0xffffff7d
0000000000001a52         jne        loc_1e40

0000000000001a58         sub        rsp, 0x8
0000000000001a5c         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001a63         mov        rcx, qword [Version]                        ; Version
0000000000001a6a         push       0x0
0000000000001a6c         lea        r9, qword [aDavidMackenzie]                 ; "David MacKenzie"
0000000000001a73         lea        r8, qword [aArnoldRobbins]                  ; "Arnold Robbins"
0000000000001a7a         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6837
0000000000001a81         lea        rsi, qword [aGroups+9]                      ; 0x67be
0000000000001a88         xor        eax, eax
0000000000001a8a         call       version_etc                                 ; version_etc
0000000000001a8f         xor        edi, edi                                    ; argument "__status" for method j_exit
0000000000001a91         call       j_exit                                      ; exit
                        ; endp
0000000000001a96         align      32

                     loc_1aa0:
0000000000001aa0         cmp        eax, 0x75                                   ; CODE XREF=main+144
0000000000001aa3         je         loc_1af8

0000000000001aa5         cmp        eax, 0x7a
0000000000001aa8         jne        loc_1e40

0000000000001aae         mov        byte [opt_zero], 0x1                        ; opt_zero
0000000000001ab5         jmp        loc_19f0
0000000000001aba         align      64

                     loc_1ac0:
0000000000001ac0         cmp        eax, 0x47                                   ; CODE XREF=main+187
0000000000001ac3         jne        loc_1e17

0000000000001ac9         mov        byte [just_group_list], 0x1                 ; just_group_list
0000000000001ad0         jmp        loc_19f0
0000000000001ad5         align      8

                     loc_1ad8:
0000000000001ad8         mov        byte [just_group], 0x1                      ; just_group, CODE XREF=main+149
0000000000001adf         jmp        loc_19f0
0000000000001ae4         align      8

                     loc_1ae8:
0000000000001ae8         mov        byte [use_real], 0x1                        ; use_real, CODE XREF=main+138
0000000000001aef         jmp        loc_19f0
0000000000001af4         align      8

                     loc_1af8:
0000000000001af8         mov        byte [just_user], 0x1                       ; just_user, CODE XREF=main+275
0000000000001aff         jmp        loc_19f0

                     loc_1b04:
0000000000001b04         movzx      ecx, byte [just_group]                      ; just_group, CODE XREF=main+122
0000000000001b0b         movzx      edx, byte [just_user]                       ; just_user
0000000000001b12         movzx      r14d, byte [just_group_list]                ; just_group_list
0000000000001b1a         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5
0000000000001b21         mov        r12d, edx
0000000000001b24         mov        r13d, ecx
0000000000001b27         add        edx, ecx
0000000000001b29         movzx      ecx, r14b
0000000000001b2d         sub        ebp, eax
0000000000001b2f         add        edx, ecx
0000000000001b31         movsxd     rbp, ebp
0000000000001b34         sub        edx, 0x1
0000000000001b37         jg         loc_1e85

0000000000001b3d         mov        ecx, r12d
0000000000001b40         or         cl, r13b
0000000000001b43         jne        loc_1b4e

0000000000001b45         test       r14b, r14b
0000000000001b48         je         loc_1cd1

                     loc_1b4e:
0000000000001b4e         test       rbp, rbp                                    ; CODE XREF=main+435
0000000000001b51         je         loc_1c45

                     loc_1b57:
0000000000001b57         cmp        rbp, 0x1                                    ; CODE XREF=main+875
0000000000001b5b         movsxd     rdx, eax
0000000000001b5e         lea        r12, qword [euid]                           ; euid
0000000000001b65         seta       byte [multiple_users]                       ; multiple_users
0000000000001b6c         add        rbp, rdx
0000000000001b6f         jmp        loc_1bc5

                     loc_1b71:
0000000000001b71         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+604, main+623

                     loc_1b78:
0000000000001b78         mov        rdi, qword [rbx+rax*8]                      ; CODE XREF=main+584
0000000000001b7c         call       quote                                       ; quote
0000000000001b81         lea        rsi, qword [aSNoSuchUser]                   ; argument "msgid" for method j_dcgettext, "%s: no such user"
0000000000001b88         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001b8d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001b8f         mov        r14, rax
0000000000001b92         call       j_dcgettext                                 ; dcgettext
0000000000001b97         mov        r13, rax
0000000000001b9a         call       j___errno_location                          ; __errno_location
0000000000001b9f         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001ba1         mov        rcx, r14
0000000000001ba4         mov        rdx, r13                                    ; argument "__format" for method j_error
0000000000001ba7         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001ba9         xor        eax, eax
0000000000001bab         call       j_error                                     ; error
0000000000001bb0         mov        byte [ok], 0x0                              ; ok

                     loc_1bb7:
0000000000001bb7         add        dword [optind@@GLIBC_2.2.5], 0x1            ; optind@@GLIBC_2.2.5, CODE XREF=main+688
0000000000001bbe         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5

                     loc_1bc5:
0000000000001bc5         movsxd     rdx, eax                                    ; CODE XREF=main+479
0000000000001bc8         cmp        rdx, rbp
0000000000001bcb         jae        loc_1cbb

0000000000001bd1         mov        rdi, qword [rbx+rdx*8]
0000000000001bd5         cmp        byte [rdi], 0x0
0000000000001bd8         je         loc_1b78

0000000000001bda         xor        r8d, r8d
0000000000001bdd         xor        ecx, ecx
0000000000001bdf         xor        edx, edx
0000000000001be1         mov        rsi, r12
0000000000001be4         call       parse_user_spec                             ; parse_user_spec
0000000000001be9         test       rax, rax
0000000000001bec         jne        loc_1b71

0000000000001bee         mov        edi, dword [euid]                           ; argument "__uid" for method j_getpwuid, euid
0000000000001bf4         call       j_getpwuid                                  ; getpwuid
0000000000001bf9         test       rax, rax
0000000000001bfc         mov        r13, rax
0000000000001bff         je         loc_1b71

0000000000001c05         mov        rdi, qword [rax]
0000000000001c08         call       xstrdup                                     ; xstrdup
0000000000001c0d         mov        r14, rax
0000000000001c10         mov        eax, dword [r13+0x10]
0000000000001c14         mov        rdi, r14
0000000000001c17         mov        dword [euid], eax                           ; euid
0000000000001c1d         mov        dword [ruid], eax                           ; ruid
0000000000001c23         mov        eax, dword [r13+0x14]
0000000000001c27         mov        dword [egid], eax                           ; egid
0000000000001c2d         mov        dword [rgid], eax                           ; rgid
0000000000001c33         call       print_stuff                                 ; print_stuff
0000000000001c38         mov        rdi, r14                                    ; argument "__ptr" for method j_free
0000000000001c3b         call       j_free                                      ; free
0000000000001c40         jmp        loc_1bb7

                     loc_1c45:
0000000000001c45         test       r12b, r12b                                  ; CODE XREF=main+449
0000000000001c48         jne        loc_1d61

                     loc_1c4e:
0000000000001c4e         or         r14d, r13d                                  ; CODE XREF=main+896
0000000000001c51         call       j___errno_location                          ; __errno_location
0000000000001c56         test       r14b, r14b
0000000000001c59         mov        rbx, rax
0000000000001c5c         je         loc_1dd0

                     loc_1c62:
0000000000001c62         call       j___errno_location                          ; __errno_location, CODE XREF=main+1108, main+1117
0000000000001c67         test       r13b, r13b
0000000000001c6a         mov        rbx, rax
0000000000001c6d         je         loc_1df8

                     loc_1c73:
0000000000001c73         call       j___errno_location                          ; __errno_location, CODE XREF=main+1032, main+1148
0000000000001c78         mov        dword [rax], 0x0
0000000000001c7e         mov        rbx, rax
0000000000001c81         call       j_getegid                                   ; getegid
0000000000001c86         mov        dword [egid], eax                           ; egid
0000000000001c8c         add        eax, 0x1
0000000000001c8f         jne        loc_1c9a

0000000000001c91         cmp        dword [rbx], 0x0
0000000000001c94         jne        loc_1f15

                     loc_1c9a:
0000000000001c9a         mov        dword [rbx], 0x0                            ; CODE XREF=main+767
0000000000001ca0         call       j_getgid                                    ; getgid
0000000000001ca5         mov        dword [rgid], eax                           ; rgid
0000000000001cab         add        eax, 0x1
0000000000001cae         je         loc_1da3

                     loc_1cb4:
0000000000001cb4         xor        edi, edi                                    ; CODE XREF=main+930, main+1014, main+1038, main+1046, main+1224
0000000000001cb6         call       print_stuff                                 ; print_stuff

                     loc_1cbb:
0000000000001cbb         movzx      eax, byte [ok]                              ; ok, CODE XREF=main+571
0000000000001cc2         pop        rbx
0000000000001cc3         pop        rbp
0000000000001cc4         pop        r12
0000000000001cc6         xor        eax, 0x1
0000000000001cc9         movzx      eax, al
0000000000001ccc         pop        r13
0000000000001cce         pop        r14
0000000000001cd0         ret
                        ; endp

                     loc_1cd1:
0000000000001cd1         cmp        byte [use_real], 0x0                        ; use_real, CODE XREF=main+440
0000000000001cd8         jne        loc_1ecd

0000000000001cde         cmp        byte [use_name], 0x0                        ; use_name
0000000000001ce5         jne        loc_1ecd

0000000000001ceb         cmp        byte [opt_zero], 0x0                        ; opt_zero
0000000000001cf2         jne        loc_1ea9

0000000000001cf8         test       rbp, rbp
0000000000001cfb         jne        loc_1b57

0000000000001d01         lea        rdi, qword [aPosixlycorrect]                ; argument "__name" for method j_getenv, "POSIXLY_CORRECT"
0000000000001d08         call       j_getenv                                    ; getenv
0000000000001d0d         test       r12b, r12b
0000000000001d10         je         loc_1c4e

                     loc_1d16:
0000000000001d16         call       j___errno_location                          ; __errno_location, CODE XREF=main+984
0000000000001d1b         mov        dword [rax], 0x0
0000000000001d21         mov        rbx, rax
0000000000001d24         call       j_geteuid                                   ; geteuid
0000000000001d29         mov        dword [euid], eax                           ; euid
0000000000001d2f         add        eax, 0x1
0000000000001d32         jne        loc_1cb4

0000000000001d34         cmp        dword [rbx], 0x0
0000000000001d37         je         loc_1e51

                     loc_1d3d:
0000000000001d3d         lea        rsi, qword [aCannotGetEffec]                ; argument "msgid" for method j_dcgettext, "cannot get effective UID", CODE XREF=main+1123
0000000000001d44         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001d49         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001d4b         call       j_dcgettext                                 ; dcgettext
0000000000001d50         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
0000000000001d52         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001d55         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001d5a         xor        eax, eax
0000000000001d5c         call       j_error                                     ; error

                     loc_1d61:
0000000000001d61         cmp        byte [use_real], 0x0                        ; use_real, CODE XREF=main+696
0000000000001d68         je         loc_1d16

0000000000001d6a         call       j___errno_location                          ; __errno_location
0000000000001d6f         mov        dword [rax], 0x0
0000000000001d75         mov        rbx, rax
0000000000001d78         call       j_getuid                                    ; getuid
0000000000001d7d         mov        dword [ruid], eax                           ; ruid
0000000000001d83         add        eax, 0x1
0000000000001d86         jne        loc_1cb4

                     loc_1d8c:
0000000000001d8c         cmp        dword [rbx], 0x0                            ; CODE XREF=main+1154, main+1264
0000000000001d8f         jne        loc_1ef1

                     loc_1d95:
0000000000001d95         test       r12b, r12b                                  ; CODE XREF=main+1258
0000000000001d98         je         loc_1c73

0000000000001d9e         jmp        loc_1cb4

                     loc_1da3:
0000000000001da3         cmp        dword [rbx], 0x0                            ; CODE XREF=main+798
0000000000001da6         je         loc_1cb4

0000000000001dac         lea        rsi, qword [aCannotGetRealG]                ; argument "msgid" for method j_dcgettext, "cannot get real GID"
0000000000001db3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001db8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001dba         call       j_dcgettext                                 ; dcgettext
0000000000001dbf         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
0000000000001dc1         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001dc4         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001dc9         xor        eax, eax
0000000000001dcb         call       j_error                                     ; error

                     loc_1dd0:
0000000000001dd0         mov        dword [rax], 0x0                            ; CODE XREF=main+716
0000000000001dd6         call       j_geteuid                                   ; geteuid
0000000000001ddb         mov        dword [euid], eax                           ; euid
0000000000001de1         add        eax, 0x1
0000000000001de4         jne        loc_1c62

0000000000001dea         cmp        dword [rbx], 0x0
0000000000001ded         je         loc_1c62

0000000000001df3         jmp        loc_1d3d

                     loc_1df8:
0000000000001df8         mov        dword [rax], 0x0                            ; CODE XREF=main+733
0000000000001dfe         call       j_getuid                                    ; getuid
0000000000001e03         mov        dword [ruid], eax                           ; ruid
0000000000001e09         add        eax, 0x1
0000000000001e0c         jne        loc_1c73

0000000000001e12         jmp        loc_1d8c

                     loc_1e17:
0000000000001e17         cmp        eax, 0x5a                                   ; CODE XREF=main+307
0000000000001e1a         jne        loc_1e40

0000000000001e1c         lea        rsi, qword [aContextZWorksO]                ; argument "msgid" for method j_dcgettext, "--context (-Z) works only on an SELinux-enabled kernel"
0000000000001e23         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001e28         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001e2a         call       j_dcgettext                                 ; dcgettext
0000000000001e2f         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001e31         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001e34         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001e39         xor        eax, eax
0000000000001e3b         call       j_error                                     ; error

                     loc_1e40:
0000000000001e40         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=main+158, main+194, main+280, main+1162
0000000000001e45         call       usage                                       ; usage

                     loc_1e4a:
0000000000001e4a         xor        edi, edi                                    ; argument #1 for method usage, CODE XREF=main+181
0000000000001e4c         call       usage                                       ; usage

                     loc_1e51:
0000000000001e51         cmp        byte [use_real], 0x0                        ; use_real, CODE XREF=main+935
0000000000001e58         je         loc_1cb4

0000000000001e5e         call       j___errno_location                          ; __errno_location
0000000000001e63         mov        dword [rax], 0x0
0000000000001e69         mov        rbx, rax
0000000000001e6c         call       j_getuid                                    ; getuid
0000000000001e71         mov        dword [ruid], eax                           ; ruid
0000000000001e77         add        eax, 0x1
0000000000001e7a         jne        loc_1d95

0000000000001e80         jmp        loc_1d8c

                     loc_1e85:
0000000000001e85         lea        rsi, qword [aCannotPrintOnl_6700]           ; argument "msgid" for method j_dcgettext, "cannot print \\\"only\\\" of more than one choice", CODE XREF=main+423
0000000000001e8c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001e91         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001e93         call       j_dcgettext                                 ; dcgettext
0000000000001e98         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001e9a         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001e9d         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001ea2         xor        eax, eax
0000000000001ea4         call       j_error                                     ; error

                     loc_1ea9:
0000000000001ea9         lea        rsi, qword [aOptionZeroNotP]                ; argument "msgid" for method j_dcgettext, "option --zero not permitted in default format", CODE XREF=main+866
0000000000001eb0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001eb5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001eb7         call       j_dcgettext                                 ; dcgettext
0000000000001ebc         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001ebe         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001ec1         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001ec6         xor        eax, eax
0000000000001ec8         call       j_error                                     ; error

                     loc_1ecd:
0000000000001ecd         lea        rsi, qword [aCannotPrintOnl]                ; argument "msgid" for method j_dcgettext, "cannot print only names or real IDs in default format", CODE XREF=main+840, main+853
0000000000001ed4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001ed9         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001edb         call       j_dcgettext                                 ; dcgettext
0000000000001ee0         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001ee2         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001ee5         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001eea         xor        eax, eax
0000000000001eec         call       j_error                                     ; error

                     loc_1ef1:
0000000000001ef1         lea        rsi, qword [aCannotGetRealU]                ; argument "msgid" for method j_dcgettext, "cannot get real UID", CODE XREF=main+1023
0000000000001ef8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001efd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001eff         call       j_dcgettext                                 ; dcgettext
0000000000001f04         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
0000000000001f06         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001f09         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001f0e         xor        eax, eax
0000000000001f10         call       j_error                                     ; error

                     loc_1f15:
0000000000001f15         lea        rsi, qword [aCannotGetEffec_68f2]           ; argument "msgid" for method j_dcgettext, "cannot get effective GID", CODE XREF=main+772
0000000000001f1c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001f21         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001f23         call       j_dcgettext                                 ; dcgettext
0000000000001f28         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
0000000000001f2a         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001f2d         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001f32         xor        eax, eax
0000000000001f34         call       j_error                                     ; error
0000000000001f39         nop        dword [rax]                                 ; End of unwind block (FDE at 0x7704)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
0000000000001f40         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x7624)
0000000000001f42         mov        r9, rdx
0000000000001f45         pop        rsi
0000000000001f46         mov        rdx, rsp
0000000000001f49         and        rsp, 0xfffffffffffffff0
0000000000001f4d         push       rax
0000000000001f4e         push       rsp
0000000000001f4f         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
0000000000001f56         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
0000000000001f5d         lea        rdi, qword [main]                           ; main
0000000000001f64         call       qword [qword_208fc0+8]                      ; 0x208fc8
0000000000001f6a         hlt
                        ; endp
0000000000001f6b         align      16                                          ; End of unwind block (FDE at 0x7624)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000001f70         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
0000000000001f77         push       rbp
0000000000001f78         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000001f7f         cmp        rax, rdi
0000000000001f82         mov        rbp, rsp
0000000000001f85         je         loc_1fa0

0000000000001f87         mov        rax, qword [qword_208fc0]                   ; qword_208fc0
0000000000001f8e         test       rax, rax
0000000000001f91         je         loc_1fa0

0000000000001f93         pop        rbp
0000000000001f94         jmp        rax
                        ; endp
0000000000001f96         align      32

                     loc_1fa0:
0000000000001fa0         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
0000000000001fa1         ret
                        ; endp
0000000000001fa2         align      16

                     register_tm_clones:
0000000000001fb0         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
0000000000001fb7         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000001fbe         push       rbp
0000000000001fbf         sub        rsi, rdi
0000000000001fc2         mov        rbp, rsp
0000000000001fc5         sar        rsi, 0x3
0000000000001fc9         mov        rax, rsi
0000000000001fcc         shr        rax, 0x3f
0000000000001fd0         add        rsi, rax
0000000000001fd3         sar        rsi, 0x1
0000000000001fd6         je         loc_1ff0

0000000000001fd8         mov        rax, qword [qword_208fd8]                   ; qword_208fd8
0000000000001fdf         test       rax, rax
0000000000001fe2         je         loc_1ff0

0000000000001fe4         pop        rbp
0000000000001fe5         jmp        rax
                        ; endp
0000000000001fe7         align      16

                     loc_1ff0:
0000000000001ff0         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000001ff1         ret
                        ; endp
0000000000001ff2         align      8192


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
0000000000002000         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
0000000000002007         jne        loc_2038

0000000000002009         cmp        qword [qword_208fe0], 0x0                   ; qword_208fe0
0000000000002011         push       rbp
0000000000002012         mov        rbp, rsp
0000000000002015         je         loc_2023

0000000000002017         mov        rdi, qword [__dso_handle]                   ; __dso_handle
000000000000201e         call       j_qword_208fe0                              ; qword_208fe0

                     loc_2023:
0000000000002023         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
0000000000002028         mov        byte [completed.7697], 0x1                  ; completed.7697
000000000000202f         pop        rbp
0000000000002030         ret
                        ; endp
0000000000002031         align      8

                     loc_2038:
0000000000002038         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
000000000000203a         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000002040         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000002041         mov        rbp, rsp
0000000000002044         pop        rbp
0000000000002045         jmp        register_tm_clones                          ; register_tm_clones
000000000000204a         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_38: int64_t, -56


                     print_stuff:
0000000000002050         push       r14                                         ; Begin of unwind block (FDE at 0x7694), CODE XREF=main+675, main+806
0000000000002052         push       r13
0000000000002054         push       r12
0000000000002056         push       rbp
0000000000002057         push       rbx
0000000000002058         sub        rsp, 0x10
000000000000205c         mov        rax, qword [fs:0x28]
0000000000002065         mov        qword [rsp+0x38+var_30], rax
000000000000206a         xor        eax, eax
000000000000206c         cmp        byte [just_user], 0x0                       ; just_user
0000000000002073         je         loc_2128

0000000000002079         cmp        byte [use_real], 0x0                        ; use_real
0000000000002080         mov        ebx, dword [euid]                           ; euid
0000000000002086         je         loc_208e

0000000000002088         mov        ebx, dword [ruid]                           ; ruid

                     loc_208e:
000000000000208e         cmp        byte [use_name], 0x0                        ; use_name, CODE XREF=print_stuff+54
0000000000002095         jne        loc_2160

                     loc_209b:
000000000000209b         lea        rsi, qword [buf.7126]                       ; buf.7126, CODE XREF=print_stuff+1133
00000000000020a2         mov        rdi, rbx
00000000000020a5         call       umaxtostr                                   ; umaxtostr
00000000000020aa         mov        rdi, rax

                     loc_20ad:
00000000000020ad         mov        rsi, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fputs_unlocked, stdout@@GLIBC_2.2.5, CODE XREF=print_stuff+291
00000000000020b4         call       j_fputs_unlocked                            ; fputs_unlocked

                     loc_20b9:
00000000000020b9         cmp        byte [opt_zero], 0x0                        ; opt_zero, CODE XREF=print_stuff+264, print_stuff+375, print_stuff+749, print_stuff+1064
00000000000020c0         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000020c7         mov        rax, qword [rdi+0x28]
00000000000020cb         mov        rdx, qword [rdi+0x30]
00000000000020cf         je         loc_21d0

00000000000020d5         cmp        byte [just_group_list], 0x0                 ; just_group_list
00000000000020dc         je         loc_20eb

00000000000020de         cmp        byte [multiple_users], 0x0                  ; multiple_users
00000000000020e5         jne        loc_21e0

                     loc_20eb:
00000000000020eb         xor        esi, esi                                    ; CODE XREF=print_stuff+140

                     loc_20ed:
00000000000020ed         cmp        rax, rdx                                    ; CODE XREF=print_stuff+389
00000000000020f0         jae        loc_2348

00000000000020f6         lea        rdx, qword [rax+1]
00000000000020fa         mov        qword [rdi+0x28], rdx
00000000000020fe         mov        byte [rax], sil

                     loc_2101:
0000000000002101         mov        rax, qword [rsp+0x38+var_30]                ; CODE XREF=print_stuff+452, print_stuff+765, print_stuff+1399
0000000000002106         xor        rax, qword [fs:0x28]
000000000000210f         jne        loc_25dc

0000000000002115         add        rsp, 0x10
0000000000002119         pop        rbx
000000000000211a         pop        rbp
000000000000211b         pop        r12
000000000000211d         pop        r13
000000000000211f         pop        r14
0000000000002121         ret
                        ; endp
0000000000002122         align      8

                     loc_2128:
0000000000002128         cmp        byte [just_group], 0x0                      ; just_group, CODE XREF=print_stuff+35
000000000000212f         je         loc_2180

0000000000002131         cmp        byte [use_real], 0x0                        ; use_real
0000000000002138         movzx      esi, byte [use_name]                        ; use_name
000000000000213f         mov        edi, dword [egid]                           ; egid
0000000000002145         je         loc_214d

0000000000002147         mov        edi, dword [rgid]                           ; rgid

                     loc_214d:
000000000000214d         call       print_group                                 ; print_group, CODE XREF=print_stuff+245
0000000000002152         and        byte [ok], al                               ; ok
0000000000002158         jmp        loc_20b9
000000000000215d         align      32

                     loc_2160:
0000000000002160         mov        edi, ebx                                    ; argument "__uid" for method j_getpwuid, CODE XREF=print_stuff+69
0000000000002162         call       j_getpwuid                                  ; getpwuid
0000000000002167         test       rax, rax
000000000000216a         je         loc_2480

0000000000002170         mov        rdi, qword [rax]
0000000000002173         jmp        loc_20ad
0000000000002178         align      128

                     loc_2180:
0000000000002180         cmp        byte [just_group_list], 0x0                 ; just_group_list, CODE XREF=print_stuff+223
0000000000002187         mov        rbx, rdi
000000000000218a         mov        esi, dword [ruid]                           ; ruid
0000000000002190         je         loc_2220

0000000000002196         xor        r9d, r9d
0000000000002199         cmp        byte [opt_zero], 0x0                        ; opt_zero
00000000000021a0         movzx      r8d, byte [use_name]                        ; use_name
00000000000021a8         mov        ecx, dword [egid]                           ; egid
00000000000021ae         mov        edx, dword [rgid]                           ; rgid
00000000000021b4         sete       r9b
00000000000021b8         shl        r9d, 0x5
00000000000021bc         call       print_group_list                            ; print_group_list
00000000000021c1         and        byte [ok], al                               ; ok
00000000000021c7         jmp        loc_20b9
00000000000021cc         align      16

                     loc_21d0:
00000000000021d0         mov        esi, 0xa                                    ; CODE XREF=print_stuff+127
00000000000021d5         jmp        loc_20ed
00000000000021da         align      32

                     loc_21e0:
00000000000021e0         cmp        rax, rdx                                    ; CODE XREF=print_stuff+149
00000000000021e3         jae        loc_25d0

00000000000021e9         lea        rdx, qword [rax+1]
00000000000021ed         mov        qword [rdi+0x28], rdx
00000000000021f1         mov        byte [rax], 0x0

                     loc_21f4:
00000000000021f4         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=print_stuff+1415
00000000000021fb         mov        rax, qword [rdi+0x28]
00000000000021ff         cmp        rax, qword [rdi+0x30]
0000000000002203         jae        loc_25c0

0000000000002209         lea        rdx, qword [rax+1]
000000000000220d         mov        qword [rdi+0x28], rdx
0000000000002211         mov        byte [rax], 0x0
0000000000002214         jmp        loc_2101
0000000000002219         align      32

                     loc_2220:
0000000000002220         mov        edi, esi                                    ; CODE XREF=print_stuff+320
0000000000002222         lea        rsi, qword [buf.7126]                       ; buf.7126
0000000000002229         call       umaxtostr                                   ; umaxtostr
000000000000222e         lea        rsi, qword [aUids]                          ; argument "msgid" for method j_dcgettext, "uid=%s"
0000000000002235         mov        rbp, rax
0000000000002238         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000223a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000223f         call       j_dcgettext                                 ; dcgettext
0000000000002244         mov        rdx, rbp
0000000000002247         mov        rsi, rax
000000000000224a         mov        edi, 0x1
000000000000224f         xor        eax, eax
0000000000002251         call       j___printf_chk                              ; __printf_chk
0000000000002256         mov        edi, dword [ruid]                           ; argument "__uid" for method j_getpwuid, ruid
000000000000225c         call       j_getpwuid                                  ; getpwuid
0000000000002261         test       rax, rax
0000000000002264         mov        rbp, rax
0000000000002267         je         loc_227f

0000000000002269         mov        rdx, qword [rax]
000000000000226c         lea        rsi, qword [aOptionZeroNotP+46]             ; 0x6796
0000000000002273         mov        edi, 0x1
0000000000002278         xor        eax, eax
000000000000227a         call       j___printf_chk                              ; __printf_chk

                     loc_227f:
000000000000227f         mov        edi, dword [rgid]                           ; rgid, CODE XREF=print_stuff+535
0000000000002285         lea        rsi, qword [buf.7122]                       ; buf.7122
000000000000228c         call       umaxtostr                                   ; umaxtostr
0000000000002291         lea        rsi, qword [aGids]                          ; argument "msgid" for method j_dcgettext, " gid=%s"
0000000000002298         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000229a         mov        r12, rax
000000000000229d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000022a2         call       j_dcgettext                                 ; dcgettext
00000000000022a7         mov        rdx, r12
00000000000022aa         mov        rsi, rax
00000000000022ad         mov        edi, 0x1
00000000000022b2         xor        eax, eax
00000000000022b4         call       j___printf_chk                              ; __printf_chk
00000000000022b9         mov        edi, dword [rgid]                           ; argument "__gid" for method j_getgrgid, rgid
00000000000022bf         call       j_getgrgid                                  ; getgrgid
00000000000022c4         test       rax, rax
00000000000022c7         je         loc_22df

00000000000022c9         mov        rdx, qword [rax]
00000000000022cc         lea        rsi, qword [aOptionZeroNotP+46]             ; 0x6796
00000000000022d3         mov        edi, 0x1
00000000000022d8         xor        eax, eax
00000000000022da         call       j___printf_chk                              ; __printf_chk

                     loc_22df:
00000000000022df         mov        edi, dword [euid]                           ; euid, CODE XREF=print_stuff+631
00000000000022e5         cmp        edi, dword [ruid]                           ; ruid
00000000000022eb         jne        loc_23c0

                     loc_22f1:
00000000000022f1         mov        edi, dword [egid]                           ; egid, CODE XREF=print_stuff+949, print_stuff+977
00000000000022f7         cmp        edi, dword [rgid]                           ; rgid
00000000000022fd         jne        loc_2358

                     loc_22ff:
00000000000022ff         test       rbx, rbx                                    ; CODE XREF=print_stuff+842, print_stuff+870
0000000000002302         mov        rdx, rsp
0000000000002305         je         loc_2430

000000000000230b         test       rbp, rbp
000000000000230e         mov        esi, 0xffffffff
0000000000002313         je         loc_2318

0000000000002315         mov        esi, dword [rbp+0x14]

                     loc_2318:
0000000000002318         mov        rdi, rbx                                    ; CODE XREF=print_stuff+707
000000000000231b         call       xgetgroups                                  ; xgetgroups
0000000000002320         test       eax, eax
0000000000002322         mov        r12d, eax
0000000000002325         js         loc_2580

                     loc_232b:
000000000000232b         test       r12d, r12d                                  ; CODE XREF=print_stuff+1010
000000000000232e         jne        loc_24c8

                     loc_2334:
0000000000002334         mov        rdi, qword [rsp+0x38+var_38]                ; argument "__ptr" for method j_free, CODE XREF=print_stuff+1293
0000000000002338         call       j_free                                      ; free
000000000000233d         jmp        loc_20b9
0000000000002342         align      8

                     loc_2348:
0000000000002348         call       j___overflow                                ; __overflow, CODE XREF=print_stuff+160
000000000000234d         jmp        loc_2101
0000000000002352         align      8

                     loc_2358:
0000000000002358         lea        rsi, qword [buf.7122]                       ; buf.7122, CODE XREF=print_stuff+685
000000000000235f         call       umaxtostr                                   ; umaxtostr
0000000000002364         lea        rsi, qword [aEgids]                         ; argument "msgid" for method j_dcgettext, " egid=%s"
000000000000236b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000236d         mov        r12, rax
0000000000002370         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002375         call       j_dcgettext                                 ; dcgettext
000000000000237a         mov        rdx, r12
000000000000237d         mov        rsi, rax
0000000000002380         mov        edi, 0x1
0000000000002385         xor        eax, eax
0000000000002387         call       j___printf_chk                              ; __printf_chk
000000000000238c         mov        edi, dword [egid]                           ; argument "__gid" for method j_getgrgid, egid
0000000000002392         call       j_getgrgid                                  ; getgrgid
0000000000002397         test       rax, rax
000000000000239a         je         loc_22ff

00000000000023a0         mov        rdx, qword [rax]
00000000000023a3         lea        rsi, qword [aOptionZeroNotP+46]             ; 0x6796
00000000000023aa         mov        edi, 0x1
00000000000023af         xor        eax, eax
00000000000023b1         call       j___printf_chk                              ; __printf_chk
00000000000023b6         jmp        loc_22ff
00000000000023bb         align      64

                     loc_23c0:
00000000000023c0         lea        rsi, qword [buf.7126]                       ; buf.7126, CODE XREF=print_stuff+667
00000000000023c7         call       umaxtostr                                   ; umaxtostr
00000000000023cc         lea        rsi, qword [aGids+8]                        ; argument "msgid" for method j_dcgettext, 0x67a3
00000000000023d3         mov        rbp, rax
00000000000023d6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000023d8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000023dd         call       j_dcgettext                                 ; dcgettext
00000000000023e2         mov        rdx, rbp
00000000000023e5         mov        rsi, rax
00000000000023e8         mov        edi, 0x1
00000000000023ed         xor        eax, eax
00000000000023ef         call       j___printf_chk                              ; __printf_chk
00000000000023f4         mov        edi, dword [euid]                           ; argument "__uid" for method j_getpwuid, euid
00000000000023fa         call       j_getpwuid                                  ; getpwuid
00000000000023ff         test       rax, rax
0000000000002402         mov        rbp, rax
0000000000002405         je         loc_22f1

000000000000240b         mov        rdx, qword [rax]
000000000000240e         lea        rsi, qword [aOptionZeroNotP+46]             ; 0x6796
0000000000002415         mov        edi, 0x1
000000000000241a         xor        eax, eax
000000000000241c         call       j___printf_chk                              ; __printf_chk
0000000000002421         jmp        loc_22f1
0000000000002426         align      16

                     loc_2430:
0000000000002430         mov        esi, dword [egid]                           ; egid, CODE XREF=print_stuff+693
0000000000002436         xor        edi, edi
0000000000002438         call       xgetgroups                                  ; xgetgroups
000000000000243d         test       eax, eax
000000000000243f         mov        r12d, eax
0000000000002442         jns        loc_232b

0000000000002448         lea        rsi, qword [aFailedToGetGro_6270]           ; argument "msgid" for method j_dcgettext, "failed to get groups for the current process"
000000000000244f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002454         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002456         call       j_dcgettext                                 ; dcgettext
000000000000245b         mov        rbx, rax
000000000000245e         call       j___errno_location                          ; __errno_location
0000000000002463         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002465         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000002468         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000246a         xor        eax, eax
000000000000246c         call       j_error                                     ; error

                     loc_2471:
0000000000002471         mov        byte [ok], 0x0                              ; ok, CODE XREF=print_stuff+1383
0000000000002478         jmp        loc_20b9
000000000000247d         align      128

                     loc_2480:
0000000000002480         lea        rsi, qword [buf.7126]                       ; buf.7126, CODE XREF=print_stuff+282
0000000000002487         mov        rdi, rbx
000000000000248a         call       umaxtostr                                   ; umaxtostr
000000000000248f         lea        rsi, qword [aCannotFindName]                ; argument "msgid" for method j_dcgettext, "cannot find name for user ID %s"
0000000000002496         mov        rbp, rax
0000000000002499         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000249e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000024a0         call       j_dcgettext                                 ; dcgettext
00000000000024a5         mov        rcx, rbp
00000000000024a8         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000024ab         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000024ad         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000024af         xor        eax, eax
00000000000024b1         call       j_error                                     ; error
00000000000024b6         mov        byte [ok], 0x0                              ; ok
00000000000024bd         jmp        loc_209b
00000000000024c2         align      8

                     loc_24c8:
00000000000024c8         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=print_stuff+734
00000000000024cf         lea        rsi, qword [aGroups]                        ; argument "msgid" for method j_dcgettext, " groups="
00000000000024d6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000024db         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000024dd         xor        ebp, ebp
00000000000024df         lea        r13, qword [buf.7122]                       ; buf.7122
00000000000024e6         call       j_dcgettext                                 ; dcgettext
00000000000024eb         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000024ee         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000024f1         xor        ebx, ebx
00000000000024f3         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000024f8         jmp        loc_250f
00000000000024fa         align      256

                     loc_2500:
0000000000002500         lea        rdx, qword [rax+1]                          ; CODE XREF=print_stuff+1314
0000000000002504         mov        qword [rdi+0x28], rdx
0000000000002508         mov        byte [rax], 0x2c

                     loc_250b:
000000000000250b         add        rbx, 0x4                                    ; CODE XREF=print_stuff+1326

                     loc_250f:
000000000000250f         mov        rax, qword [rsp+0x38+var_38]                ; CODE XREF=print_stuff+1192
0000000000002513         mov        r14, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000251a         mov        rsi, r13
000000000000251d         mov        edi, dword [rax+rbx]
0000000000002520         call       umaxtostr                                   ; umaxtostr
0000000000002525         mov        rsi, r14                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002528         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000252b         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002530         mov        rax, qword [rsp+0x38+var_38]
0000000000002534         mov        edi, dword [rax+rbx]                        ; argument "__gid" for method j_getgrgid
0000000000002537         call       j_getgrgid                                  ; getgrgid
000000000000253c         test       rax, rax
000000000000253f         je         loc_2557

0000000000002541         mov        rdx, qword [rax]
0000000000002544         lea        rsi, qword [aOptionZeroNotP+46]             ; 0x6796
000000000000254b         mov        edi, 0x1
0000000000002550         xor        eax, eax
0000000000002552         call       j___printf_chk                              ; __printf_chk

                     loc_2557:
0000000000002557         add        ebp, 0x1                                    ; CODE XREF=print_stuff+1263
000000000000255a         cmp        ebp, r12d
000000000000255d         je         loc_2334

0000000000002563         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000256a         mov        rax, qword [rdi+0x28]
000000000000256e         cmp        rax, qword [rdi+0x30]
0000000000002572         jb         loc_2500

0000000000002574         mov        esi, 0x2c                                   ; argument #2 for method j___overflow
0000000000002579         call       j___overflow                                ; __overflow
000000000000257e         jmp        loc_250b

                     loc_2580:
0000000000002580         mov        rdi, rbx                                    ; CODE XREF=print_stuff+725
0000000000002583         call       quote                                       ; quote
0000000000002588         lea        rsi, qword [aFailedToGetGro]                ; argument "msgid" for method j_dcgettext, "failed to get groups for user %s"
000000000000258f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002591         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002596         mov        rbp, rax
0000000000002599         call       j_dcgettext                                 ; dcgettext
000000000000259e         mov        rbx, rax
00000000000025a1         call       j___errno_location                          ; __errno_location
00000000000025a6         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000025a8         mov        rcx, rbp
00000000000025ab         mov        rdx, rbx                                    ; argument "__format" for method j_error
00000000000025ae         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000025b0         xor        eax, eax
00000000000025b2         call       j_error                                     ; error
00000000000025b7         jmp        loc_2471
00000000000025bc         align      64

                     loc_25c0:
00000000000025c0         xor        esi, esi                                    ; argument #2 for method j___overflow, CODE XREF=print_stuff+435
00000000000025c2         call       j___overflow                                ; __overflow
00000000000025c7         jmp        loc_2101
00000000000025cc         align      16

                     loc_25d0:
00000000000025d0         xor        esi, esi                                    ; argument #2 for method j___overflow, CODE XREF=print_stuff+403
00000000000025d2         call       j___overflow                                ; __overflow
00000000000025d7         jmp        loc_21f4

                     loc_25dc:
00000000000025dc         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=print_stuff+191
                        ; endp
00000000000025e1         align      16                                          ; End of unwind block (FDE at 0x7694)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
00000000000025f0         push       r13                                         ; Begin of unwind block (FDE at 0x76d8), CODE XREF=main+1205, main+1212
00000000000025f2         push       r12
00000000000025f4         mov        edx, 0x5
00000000000025f9         push       rbp
00000000000025fa         push       rbx
00000000000025fb         mov        ebp, edi
00000000000025fd         sub        rsp, 0x88
0000000000002604         mov        rbx, qword [program_name]                   ; program_name
000000000000260b         mov        rax, qword [fs:0x28]
0000000000002614         mov        qword [rsp+0xa8+var_30], rax
0000000000002619         xor        eax, eax
000000000000261b         test       edi, edi
000000000000261d         je         loc_264d

000000000000261f         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
0000000000002626         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002628         call       j_dcgettext                                 ; dcgettext
000000000000262d         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000002634         mov        rdx, rax
0000000000002637         mov        rcx, rbx
000000000000263a         mov        esi, 0x1
000000000000263f         xor        eax, eax
0000000000002641         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_2646:
0000000000002646         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+710
0000000000002648         call       j_exit                                      ; exit
                        ; endp

                     loc_264d:
000000000000264d         lea        rsi, qword [aUsageSOptionUs]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... [USER]...\\n", CODE XREF=usage+45
0000000000002654         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002656         call       j_dcgettext                                 ; dcgettext
000000000000265b         mov        rdx, rbx
000000000000265e         mov        rsi, rax
0000000000002661         mov        edi, 0x1
0000000000002666         xor        eax, eax
0000000000002668         call       j___printf_chk                              ; __printf_chk
000000000000266d         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002674         lea        rsi, qword [aPrintUserAndGr]                ; argument "msgid" for method j_dcgettext, "Print user and group information for each specified USER,\\nor (when USER omitted) for the current user.\\n\\n"
000000000000267b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002680         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002682         call       j_dcgettext                                 ; dcgettext
0000000000002687         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000268a         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000268d         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002692         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002699         lea        rsi, qword [aAIgnoreForComp]                ; argument "msgid" for method j_dcgettext, "  -a             ignore, for compatibility with other versions\\n  -Z, --context  print only the security context of the process\\n  -g, --group    print only the effective group ID\\n  -G, --groups   print all group IDs\\n  -n, --name     print a name instead of …"
00000000000026a0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000026a5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000026a7         call       j_dcgettext                                 ; dcgettext
00000000000026ac         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000026af         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000026b2         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000026b7         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000026be         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
00000000000026c5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000026ca         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000026cc         call       j_dcgettext                                 ; dcgettext
00000000000026d1         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000026d4         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000026d7         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000026dc         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000026e3         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
00000000000026ea         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000026ef         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000026f1         call       j_dcgettext                                 ; dcgettext
00000000000026f6         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000026f9         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000026fc         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002701         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002708         lea        rsi, qword [aNwithoutAnyOpt]                ; argument "msgid" for method j_dcgettext, "\\nWithout any OPTION, print some useful set of identified information.\\n"
000000000000270f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002714         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002716         call       j_dcgettext                                 ; dcgettext
000000000000271b         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000271e         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002721         lea        rbx, qword [aGroups+9]                      ; 0x67be
0000000000002728         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000272d         lea        rax, qword [aGroups+12]                     ; 0x67c1
0000000000002734         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
000000000000273b         mov        qword [rsp+0xa8+var_48], 0x0
0000000000002744         mov        qword [rsp+0xa8+var_40], 0x0
000000000000274d         mov        rdx, rsp
0000000000002750         mov        qword [rsp+0xa8+var_A8], rax
0000000000002754         lea        rax, qword [aTestInvocation]                ; "test invocation"
000000000000275b         mov        qword [rsp+0xa8+var_78], rcx
0000000000002760         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
0000000000002767         mov        qword [rsp+0xa8+var_A0], rax
000000000000276c         lea        rax, qword [aCoreutils]                     ; "coreutils"
0000000000002773         mov        qword [rsp+0xa8+var_68], rcx
0000000000002778         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
000000000000277f         mov        qword [rsp+0xa8+var_98], rax
0000000000002784         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
000000000000278b         mov        qword [rsp+0xa8+var_58], rcx
0000000000002790         mov        qword [rsp+0xa8+var_90], rax
0000000000002795         lea        rax, qword [aSha224sum]                     ; "sha224sum"
000000000000279c         mov        qword [rsp+0xa8+var_88], rax
00000000000027a1         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
00000000000027a8         mov        qword [rsp+0xa8+var_80], rax
00000000000027ad         mov        qword [rsp+0xa8+var_70], rax
00000000000027b2         mov        qword [rsp+0xa8+var_60], rax
00000000000027b7         mov        qword [rsp+0xa8+var_50], rax
00000000000027bc         nop        dword [rax]

                     loc_27c0:
00000000000027c0         add        rdx, 0x10                                   ; CODE XREF=usage+493
00000000000027c4         mov        rdi, qword [rdx]
00000000000027c7         test       rdi, rdi
00000000000027ca         je         loc_27df

00000000000027cc         mov        ecx, 0x3
00000000000027d1         mov        rsi, rbx
00000000000027d4         rep  cmpsb byte [rsi], byte [rdi]
00000000000027d6         seta       al
00000000000027d9         sbb        al, 0x0
00000000000027db         test       al, al
00000000000027dd         jne        loc_27c0

                     loc_27df:
00000000000027df         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+474
00000000000027e3         xor        edi, edi
00000000000027e5         mov        edx, 0x5
00000000000027ea         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
00000000000027f1         test       r12, r12
00000000000027f4         je         loc_28bb

00000000000027fa         call       j_dcgettext                                 ; dcgettext
00000000000027ff         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002806         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6837
000000000000280d         mov        rsi, rax
0000000000002810         mov        edi, 0x1
0000000000002815         xor        eax, eax
0000000000002817         call       j___printf_chk                              ; __printf_chk
000000000000281c         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
000000000000281e         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000002823         call       j_setlocale                                 ; setlocale
0000000000002828         test       rax, rax
000000000000282b         je         loc_2849

000000000000282d         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x6845
0000000000002834         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000002839         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
000000000000283c         call       j_strncmp                                   ; strncmp
0000000000002841         test       eax, eax
0000000000002843         jne        loc_2950

                     loc_2849:
0000000000002849         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+571, usage+901
0000000000002850         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002852         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002857         call       j_dcgettext                                 ; dcgettext
000000000000285c         lea        rcx, qword [aGroups+9]                      ; 0x67be
0000000000002863         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
000000000000286a         mov        rsi, rax
000000000000286d         mov        edi, 0x1
0000000000002872         xor        eax, eax
0000000000002874         call       j___printf_chk                              ; __printf_chk
0000000000002879         cmp        r12, rbx
000000000000287c         lea        rcx, qword [aMulticallInvoc+10]             ; 0x67dd
0000000000002883         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0x6f29
000000000000288a         cmove      rbx, rcx

                     loc_288e:
000000000000288e         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+852
0000000000002895         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002897         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000289c         call       j_dcgettext                                 ; dcgettext
00000000000028a1         mov        rcx, rbx
00000000000028a4         mov        rsi, rax
00000000000028a7         mov        rdx, r12
00000000000028aa         mov        edi, 0x1
00000000000028af         xor        eax, eax
00000000000028b1         call       j___printf_chk                              ; __printf_chk
00000000000028b6         jmp        loc_2646

                     loc_28bb:
00000000000028bb         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+516
00000000000028c0         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000028c7         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6837
00000000000028ce         mov        rsi, rax
00000000000028d1         mov        edi, 0x1
00000000000028d6         xor        eax, eax
00000000000028d8         call       j___printf_chk                              ; __printf_chk
00000000000028dd         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
00000000000028df         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
00000000000028e4         call       j_setlocale                                 ; setlocale
00000000000028e9         test       rax, rax
00000000000028ec         je         loc_2906

00000000000028ee         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x6845
00000000000028f5         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
00000000000028fa         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
00000000000028fd         call       j_strncmp                                   ; strncmp
0000000000002902         test       eax, eax
0000000000002904         jne        loc_2949

                     loc_2906:
0000000000002906         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+764
000000000000290d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002912         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002914         lea        r12, qword [aGroups+9]                      ; 0x67be
000000000000291b         lea        rbx, qword [aMulticallInvoc+10]             ; 0x67dd
0000000000002922         call       j_dcgettext                                 ; dcgettext
0000000000002927         lea        rcx, qword [aGroups+9]                      ; 0x67be
000000000000292e         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002935         mov        rsi, rax
0000000000002938         mov        edi, 0x1
000000000000293d         xor        eax, eax
000000000000293f         call       j___printf_chk                              ; __printf_chk
0000000000002944         jmp        loc_288e

                     loc_2949:
0000000000002949         lea        r12, qword [aGroups+9]                      ; 0x67be, CODE XREF=usage+788

                     loc_2950:
0000000000002950         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+595
0000000000002957         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
000000000000295e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002960         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002965         call       j_dcgettext                                 ; dcgettext
000000000000296a         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
000000000000296d         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002970         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002975         jmp        loc_2849
000000000000297a         align      128                                         ; End of unwind block (FDE at 0x76d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     print_group:
0000000000002980         push       rbp                                         ; Begin of unwind block (FDE at 0x774c), CODE XREF=print_stuff+253, print_group_list+97, print_group_list+164, print_group_list+309
0000000000002981         push       rbx
0000000000002982         mov        ebp, edi
0000000000002984         mov        ebx, 0x1
0000000000002989         sub        rsp, 0x8
000000000000298d         test       sil, sil
0000000000002990         je         loc_29d0

0000000000002992         mov        edi, ebp                                    ; argument "__gid" for method j_getgrgid
0000000000002994         mov        ebx, esi
0000000000002996         call       j_getgrgid                                  ; getgrgid
000000000000299b         test       rax, rax
000000000000299e         je         loc_29a8

00000000000029a0         mov        rdi, qword [rax]
00000000000029a3         jmp        loc_29e2
00000000000029a5         align      8

                     loc_29a8:
00000000000029a8         lea        rsi, qword [aCannotFindName_6950]           ; argument "msgid" for method j_dcgettext, "cannot find name for group ID %lu", CODE XREF=print_group+30
00000000000029af         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000029b4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000029b6         xor        ebx, ebx
00000000000029b8         call       j_dcgettext                                 ; dcgettext
00000000000029bd         mov        rcx, rbp
00000000000029c0         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000029c3         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000029c5         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000029c7         xor        eax, eax
00000000000029c9         call       j_error                                     ; error
00000000000029ce         nop

                     loc_29d0:
00000000000029d0         lea        rsi, qword [buf.6964]                       ; buf.6964, CODE XREF=print_group+16
00000000000029d7         mov        rdi, rbp
00000000000029da         call       umaxtostr                                   ; umaxtostr
00000000000029df         mov        rdi, rax

                     loc_29e2:
00000000000029e2         mov        rsi, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fputs_unlocked, stdout@@GLIBC_2.2.5, CODE XREF=print_group+35
00000000000029e9         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000029ee         add        rsp, 0x8
00000000000029f2         mov        eax, ebx
00000000000029f4         pop        rbx
00000000000029f5         pop        rbp
00000000000029f6         ret
                        ; endp
00000000000029f7         align      512                                         ; End of unwind block (FDE at 0x774c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_50: int32_t, -80
        ;    var_51: int8_t, -81


                     print_group_list:
0000000000002a00         push       r15                                         ; Begin of unwind block (FDE at 0x7774), CODE XREF=print_stuff+364
0000000000002a02         push       r14
0000000000002a04         mov        r14, rdi
0000000000002a07         push       r13
0000000000002a09         push       r12
0000000000002a0b         mov        r13d, r8d
0000000000002a0e         push       rbp
0000000000002a0f         push       rbx
0000000000002a10         mov        ebp, edx
0000000000002a12         mov        r12d, ecx
0000000000002a15         sub        rsp, 0x28
0000000000002a19         mov        rax, qword [fs:0x28]
0000000000002a22         mov        qword [rsp+0x58+var_40], rax
0000000000002a27         xor        eax, eax
0000000000002a29         test       rdi, rdi
0000000000002a2c         mov        byte [rsp+0x58+var_51], r9b
0000000000002a31         je         loc_2b80

0000000000002a37         mov        edi, esi                                    ; argument "__uid" for method j_getpwuid
0000000000002a39         mov        dword [rsp+0x58+var_4C], r9d
0000000000002a3e         call       j_getpwuid                                  ; getpwuid
0000000000002a43         mov        r9d, dword [rsp+0x58+var_4C]
0000000000002a48         test       rax, rax
0000000000002a4b         mov        r15, rax
0000000000002a4e         setne      byte [rsp+0x58+var_50]

                     loc_2a53:
0000000000002a53         movzx      r13d, r13b                                  ; CODE XREF=print_group_list+392
0000000000002a57         mov        edi, ebp
0000000000002a59         mov        dword [rsp+0x58+var_4C], r9d
0000000000002a5e         mov        esi, r13d
0000000000002a61         call       print_group                                 ; print_group
0000000000002a66         mov        ebx, eax
0000000000002a68         test       al, al
0000000000002a6a         movzx      eax, byte [rsp+0x58+var_50]
0000000000002a6f         cmove      eax, ebx
0000000000002a72         cmp        ebp, r12d
0000000000002a75         mov        ebx, eax
0000000000002a77         je         loc_2ab3

0000000000002a79         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002a80         mov        r9d, dword [rsp+0x58+var_4C]
0000000000002a85         mov        rax, qword [rdi+0x28]
0000000000002a89         cmp        rax, qword [rdi+0x30]
0000000000002a8d         jae        loc_2c10

0000000000002a93         lea        rdx, qword [rax+1]
0000000000002a97         mov        qword [rdi+0x28], rdx
0000000000002a9b         mov        byte [rax], r9b

                     loc_2a9e:
0000000000002a9e         mov        esi, r13d                                   ; CODE XREF=print_group_list+537
0000000000002aa1         mov        edi, r12d
0000000000002aa4         call       print_group                                 ; print_group
0000000000002aa9         test       al, al
0000000000002aab         mov        eax, 0x0
0000000000002ab0         cmove      ebx, eax

                     loc_2ab3:
0000000000002ab3         test       r15, r15                                    ; CODE XREF=print_group_list+119
0000000000002ab6         mov        esi, r12d
0000000000002ab9         je         loc_2abf

0000000000002abb         mov        esi, dword [r15+0x14]

                     loc_2abf:
0000000000002abf         lea        rdx, qword [rsp+0x58+var_48]                ; CODE XREF=print_group_list+185
0000000000002ac4         mov        rdi, r14
0000000000002ac7         call       xgetgroups                                  ; xgetgroups
0000000000002acc         test       eax, eax
0000000000002ace         js         loc_2b90

0000000000002ad4         mov        rdi, qword [rsp+0x58+var_48]
0000000000002ad9         je         loc_2b4e

0000000000002adb         sub        eax, 0x1
0000000000002ade         xor        r15d, r15d
0000000000002ae1         lea        r14, qword [0x4+rax*4]
0000000000002ae9         movzx      eax, byte [rsp+0x58+var_51]
0000000000002aee         mov        dword [rsp+0x58+var_50], eax
0000000000002af2         nop        word [rax+rax]

                     loc_2af8:
0000000000002af8         mov        eax, dword [rdi+r15]                        ; CODE XREF=print_group_list+332
0000000000002afc         cmp        eax, ebp
0000000000002afe         je         loc_2b45

0000000000002b00         cmp        eax, r12d
0000000000002b03         je         loc_2b45

0000000000002b05         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002b0c         mov        rax, qword [rdi+0x28]
0000000000002b10         cmp        rax, qword [rdi+0x30]
0000000000002b14         jae        loc_2bd0

0000000000002b1a         lea        rcx, qword [rax+1]
0000000000002b1e         mov        qword [rdi+0x28], rcx
0000000000002b22         movzx      ecx, byte [rsp+0x58+var_51]
0000000000002b27         mov        byte [rax], cl

                     loc_2b29:
0000000000002b29         mov        rax, qword [rsp+0x58+var_48]                ; CODE XREF=print_group_list+473
0000000000002b2e         mov        esi, r13d
0000000000002b31         mov        edi, dword [rax+r15]
0000000000002b35         call       print_group                                 ; print_group
0000000000002b3a         test       al, al
0000000000002b3c         mov        rdi, qword [rsp+0x58+var_48]
0000000000002b41         jne        loc_2b45

0000000000002b43         xor        ebx, ebx

                     loc_2b45:
0000000000002b45         add        r15, 0x4                                    ; CODE XREF=print_group_list+254, print_group_list+259, print_group_list+321
0000000000002b49         cmp        r14, r15
0000000000002b4c         jne        loc_2af8

                     loc_2b4e:
0000000000002b4e         call       j_free                                      ; free, CODE XREF=print_group_list+217

                     loc_2b53:
0000000000002b53         mov        rdx, qword [rsp+0x58+var_40]                ; CODE XREF=print_group_list+462, print_group_list+515
0000000000002b58         xor        rdx, qword [fs:0x28]
0000000000002b61         mov        eax, ebx
0000000000002b63         jne        loc_2c1e

0000000000002b69         add        rsp, 0x28
0000000000002b6d         pop        rbx
0000000000002b6e         pop        rbp
0000000000002b6f         pop        r12
0000000000002b71         pop        r13
0000000000002b73         pop        r14
0000000000002b75         pop        r15
0000000000002b77         ret
                        ; endp
0000000000002b78         align      128

                     loc_2b80:
0000000000002b80         xor        r15d, r15d                                  ; CODE XREF=print_group_list+49
0000000000002b83         mov        byte [rsp+0x58+var_50], 0x1
0000000000002b88         jmp        loc_2a53
0000000000002b8d         align      16

                     loc_2b90:
0000000000002b90         call       j___errno_location                          ; __errno_location, CODE XREF=print_group_list+206
0000000000002b95         test       r14, r14
0000000000002b98         mov        rbx, rax
0000000000002b9b         je         loc_2be0

0000000000002b9d         mov        rdi, r14
0000000000002ba0         call       quote                                       ; quote
0000000000002ba5         lea        rsi, qword [aFailedToGetGro]                ; argument "msgid" for method j_dcgettext, "failed to get groups for user %s"
0000000000002bac         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002bb1         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002bb3         mov        rbp, rax
0000000000002bb6         call       j_dcgettext                                 ; dcgettext
0000000000002bbb         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
0000000000002bbd         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002bc0         mov        rcx, rbp
0000000000002bc3         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002bc5         xor        eax, eax
0000000000002bc7         xor        ebx, ebx
0000000000002bc9         call       j_error                                     ; error
0000000000002bce         jmp        loc_2b53

                     loc_2bd0:
0000000000002bd0         mov        esi, dword [rsp+0x58+var_50]                ; argument #2 for method j___overflow, CODE XREF=print_group_list+276
0000000000002bd4         call       j___overflow                                ; __overflow
0000000000002bd9         jmp        loc_2b29
0000000000002bde         align      32

                     loc_2be0:
0000000000002be0         lea        rsi, qword [aFailedToGetGro_6270]           ; argument "msgid" for method j_dcgettext, "failed to get groups for the current process", CODE XREF=print_group_list+411
0000000000002be7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002bec         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002bee         call       j_dcgettext                                 ; dcgettext
0000000000002bf3         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
0000000000002bf5         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002bf8         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002bfa         xor        eax, eax
0000000000002bfc         xor        ebx, ebx
0000000000002bfe         call       j_error                                     ; error
0000000000002c03         jmp        loc_2b53
0000000000002c08         align      16

                     loc_2c10:
0000000000002c10         movzx      esi, r9b                                    ; argument #2 for method j___overflow, CODE XREF=print_group_list+141
0000000000002c14         call       j___overflow                                ; __overflow
0000000000002c19         jmp        loc_2a9e

                     loc_2c1e:
0000000000002c1e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=print_group_list+355
                        ; endp
0000000000002c23         align      16                                          ; End of unwind block (FDE at 0x7774)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
0000000000002c30         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0x77c4), file_name
0000000000002c37         ret
                        ; endp
0000000000002c38         align      64                                          ; End of unwind block (FDE at 0x77c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
0000000000002c40         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x77d8), ignore_EPIPE
0000000000002c47         ret
                        ; endp
0000000000002c48         align      16                                          ; End of unwind block (FDE at 0x77d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
0000000000002c50         push       rbp                                         ; Begin of unwind block (FDE at 0x77ec), DATA XREF=main+76
0000000000002c51         push       rbx
0000000000002c52         sub        rsp, 0x8
0000000000002c56         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002c5d         call       close_stream                                ; close_stream
0000000000002c62         test       eax, eax
0000000000002c64         je         loc_2c7c

0000000000002c66         call       j___errno_location                          ; __errno_location
0000000000002c6b         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
0000000000002c72         mov        rbx, rax
0000000000002c75         je         loc_2c93

0000000000002c77         cmp        dword [rax], 0x20
0000000000002c7a         jne        loc_2c93

                     loc_2c7c:
0000000000002c7c         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
0000000000002c83         call       close_stream                                ; close_stream
0000000000002c88         test       eax, eax
0000000000002c8a         jne        loc_2cd2

0000000000002c8c         add        rsp, 0x8
0000000000002c90         pop        rbx
0000000000002c91         pop        rbp
0000000000002c92         ret
                        ; endp

                     loc_2c93:
0000000000002c93         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
0000000000002c9a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002c9c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002ca1         call       j_dcgettext                                 ; dcgettext
0000000000002ca6         mov        rdi, qword [file_name]                      ; file_name
0000000000002cad         mov        rbp, rax
0000000000002cb0         test       rdi, rdi
0000000000002cb3         je         loc_2cdd

0000000000002cb5         call       quotearg_colon                              ; quotearg_colon
0000000000002cba         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
0000000000002cbc         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000002cc3         mov        rcx, rax
0000000000002cc6         mov        r8, rbp
0000000000002cc9         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002ccb         xor        eax, eax
0000000000002ccd         call       j_error                                     ; error

                     loc_2cd2:
0000000000002cd2         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
0000000000002cd8         call       j__exit                                     ; _exit
                        ; endp

                     loc_2cdd:
0000000000002cdd         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
0000000000002cdf         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x6987
0000000000002ce6         mov        rcx, rax
0000000000002ce9         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002ceb         xor        eax, eax
0000000000002ced         call       j_error                                     ; error
0000000000002cf2         jmp        loc_2cd2
0000000000002cf4         align      256                                         ; End of unwind block (FDE at 0x77ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     umaxtostr:
0000000000002d00         lea        rcx, qword [rsi+0x14]                       ; Begin of unwind block (FDE at 0x781c), CODE XREF=print_stuff+85, print_stuff+473, print_stuff+572, print_stuff+783, print_stuff+887, print_stuff+1082, print_stuff+1232, print_group+90, parse_with_separator+936
0000000000002d04         mov        byte [rsi+0x14], 0x0
0000000000002d08         movabs     rsi, 0xcccccccccccccccd
0000000000002d12         nop        word [rax+rax]

                     loc_2d18:
0000000000002d18         mov        rax, rdi                                    ; CODE XREF=umaxtostr+60
0000000000002d1b         sub        rcx, 0x1
0000000000002d1f         mul        rsi
0000000000002d22         shr        rdx, 0x3
0000000000002d26         lea        rax, qword [rdx+rdx*4]
0000000000002d2a         add        rax, rax
0000000000002d2d         sub        rdi, rax
0000000000002d30         add        edi, 0x30
0000000000002d33         test       rdx, rdx
0000000000002d36         mov        byte [rcx], dil
0000000000002d39         mov        rdi, rdx
0000000000002d3c         jne        loc_2d18

0000000000002d3e         mov        rax, rcx
0000000000002d41         ret
                        ; endp
0000000000002d42         align      16                                          ; End of unwind block (FDE at 0x781c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000002d50         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7834), CODE XREF=main+23
0000000000002d53         push       rbx
0000000000002d54         je         loc_2dcd

0000000000002d56         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
0000000000002d5b         mov        rbx, rdi
0000000000002d5e         call       j_strrchr                                   ; strrchr
0000000000002d63         test       rax, rax
0000000000002d66         je         loc_2dbd

0000000000002d68         lea        r8, qword [rax+1]
0000000000002d6c         mov        rdx, r8
0000000000002d6f         sub        rdx, rbx
0000000000002d72         cmp        rdx, 0x6
0000000000002d76         jle        loc_2dbd

0000000000002d78         lea        rsi, qword [rax-6]
0000000000002d7c         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000002d83         mov        ecx, 0x7
0000000000002d88         rep  cmpsb byte [rsi], byte [rdi]
0000000000002d8a         seta       dl
0000000000002d8d         sbb        dl, 0x0
0000000000002d90         test       dl, dl
0000000000002d92         jne        loc_2dbd

0000000000002d94         lea        rdi, qword [aLibs+8]                        ; 0x69d0
0000000000002d9b         mov        ecx, 0x3
0000000000002da0         mov        rsi, r8
0000000000002da3         mov        rbx, r8
0000000000002da6         rep  cmpsb byte [rsi], byte [rdi]
0000000000002da8         seta       dl
0000000000002dab         sbb        dl, 0x0
0000000000002dae         test       dl, dl
0000000000002db0         jne        loc_2dbd

0000000000002db2         lea        rbx, qword [rax+4]
0000000000002db6         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_2dbd:
0000000000002dbd         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
0000000000002dc4         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
0000000000002dcb         pop        rbx
0000000000002dcc         ret
                        ; endp

                     loc_2dcd:
0000000000002dcd         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
0000000000002dd4         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
0000000000002ddb         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
0000000000002de0         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
0000000000002de5         call       j_fwrite                                    ; fwrite
0000000000002dea         call       j_abort                                     ; abort
                        ; endp
0000000000002def         align      16                                          ; End of unwind block (FDE at 0x7834)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
0000000000002df0         push       rbp                                         ; Begin of unwind block (FDE at 0x7854), CODE XREF=sub_3620+2597, sub_3620+2619
0000000000002df1         push       rbx
0000000000002df2         mov        rbp, rdi
0000000000002df5         mov        ebx, esi
0000000000002df7         sub        rsp, 0x8
0000000000002dfb         call       locale_charset                              ; locale_charset
0000000000002e00         movzx      edx, byte [rax]
0000000000002e03         and        edx, 0xffffffdf
0000000000002e06         cmp        dl, 0x55
0000000000002e09         je         loc_2e80

0000000000002e0b         cmp        dl, 0x47
0000000000002e0e         je         loc_2e30

                     loc_2e10:
0000000000002e10         lea        rax, qword [aLibs+27]                       ; 0x69e3, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
0000000000002e17         lea        rdx, qword [aLibs+29]                       ; 0x69e5
0000000000002e1e         cmp        ebx, 0x9
0000000000002e21         cmovne     rax, rdx
0000000000002e25         add        rsp, 0x8
0000000000002e29         pop        rbx
0000000000002e2a         pop        rbp
0000000000002e2b         ret
                        ; endp
0000000000002e2c         align      16

                     loc_2e30:
0000000000002e30         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
0000000000002e34         and        edx, 0xffffffdf
0000000000002e37         cmp        dl, 0x42
0000000000002e3a         jne        loc_2e10

0000000000002e3c         cmp        byte [rax+2], 0x31
0000000000002e40         jne        loc_2e10

0000000000002e42         cmp        byte [rax+3], 0x38
0000000000002e46         jne        loc_2e10

0000000000002e48         cmp        byte [rax+4], 0x30
0000000000002e4c         jne        loc_2e10

0000000000002e4e         cmp        byte [rax+5], 0x33
0000000000002e52         jne        loc_2e10

0000000000002e54         cmp        byte [rax+6], 0x30
0000000000002e58         jne        loc_2e10

0000000000002e5a         cmp        byte [rax+7], 0x0
0000000000002e5e         jne        loc_2e10

0000000000002e60         cmp        byte [rbp], 0x60
0000000000002e64         lea        rax, qword [aLibs+20]                       ; 0x69dc
0000000000002e6b         lea        rdx, qword [aLibs+24]                       ; 0x69e0
0000000000002e72         cmovne     rax, rdx
0000000000002e76         add        rsp, 0x8
0000000000002e7a         pop        rbx
0000000000002e7b         pop        rbp
0000000000002e7c         ret
                        ; endp
0000000000002e7d         align      128

                     loc_2e80:
0000000000002e80         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
0000000000002e84         and        edx, 0xffffffdf
0000000000002e87         cmp        dl, 0x54
0000000000002e8a         jne        loc_2e10

0000000000002e8c         movzx      edx, byte [rax+2]
0000000000002e90         and        edx, 0xffffffdf
0000000000002e93         cmp        dl, 0x46
0000000000002e96         jne        loc_2e10

0000000000002e9c         cmp        byte [rax+3], 0x2d
0000000000002ea0         jne        loc_2e10

0000000000002ea6         cmp        byte [rax+4], 0x38
0000000000002eaa         jne        loc_2e10

0000000000002eb0         cmp        byte [rax+5], 0x0
0000000000002eb4         jne        loc_2e10

0000000000002eba         cmp        byte [rbp], 0x60
0000000000002ebe         lea        rax, qword [aLibs+12]                       ; 0x69d4
0000000000002ec5         lea        rdx, qword [aLibs+16]                       ; 0x69d8
0000000000002ecc         cmovne     rax, rdx
0000000000002ed0         add        rsp, 0x8
0000000000002ed4         pop        rbx
0000000000002ed5         pop        rbp
0000000000002ed6         ret
                        ; endp
0000000000002ed7         align      32                                          ; End of unwind block (FDE at 0x7854)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
0000000000002ee0         push       r15                                         ; Begin of unwind block (FDE at 0x7898), CODE XREF=sub_3620+1165, sub_3620+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
0000000000002ee2         push       r14
0000000000002ee4         mov        r15d, r8d
0000000000002ee7         push       r13
0000000000002ee9         push       r12
0000000000002eeb         mov        r14, rdi
0000000000002eee         push       rbp
0000000000002eef         push       rbx
0000000000002ef0         mov        ebx, r9d
0000000000002ef3         mov        r13, rsi
0000000000002ef6         mov        rbp, rcx
0000000000002ef9         and        ebx, 0x2
0000000000002efc         sub        rsp, 0xb8
0000000000002f03         mov        rax, qword [rsp+0xe8+arg_0]
0000000000002f0b         mov        qword [rsp+0xe8+var_D8], rdx
0000000000002f10         mov        dword [rsp+0xe8+var_E0], r8d
0000000000002f15         mov        dword [rsp+0xe8+var_70], r9d
0000000000002f1a         mov        qword [rsp+0xe8+var_C8], rax
0000000000002f1f         mov        rax, qword [rsp+0xe8+arg_8]
0000000000002f27         mov        qword [rsp+0xe8+var_80], rax
0000000000002f2c         mov        rax, qword [rsp+0xe8+arg_10]
0000000000002f34         mov        qword [rsp+0xe8+var_88], rax
0000000000002f39         mov        rax, qword [fs:0x28]
0000000000002f42         mov        qword [rsp+0xe8+var_40], rax
0000000000002f4a         xor        eax, eax
0000000000002f4c         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000002f51         cmp        r15d, 0xa
0000000000002f55         mov        qword [rsp+0xe8+var_90], rax
0000000000002f5a         ja         loc_410f

0000000000002f60         lea        rcx, qword [switch_table_6a40]              ; switch_table_6a40
0000000000002f67         mov        edx, r15d
0000000000002f6a         movsxd     rax, dword [rcx+rdx*4]
0000000000002f6e         add        rax, rcx
0000000000002f71         jmp        rax                                         ; switch statement using table at 0x6a40, with 11 cases, 0x2f73,0x3b44,0x3ba0,0x3bf5,0x3c3a,0x3c74,0x3d1a,0x3d54,0x3f48

                     loc_2f73:
0000000000002f73         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_3620+1318
0000000000002f78         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000002f7d         xor        r12d, r12d
0000000000002f80         mov        qword [rsp+0xe8+var_98], 0x0
0000000000002f89         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000002f8e         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_2f93:
0000000000002f93         lea        rax, qword [aLibs+29]                       ; 0x69e5, CODE XREF=sub_3620+1876
0000000000002f9a         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000002fa3         xor        r15d, r15d
0000000000002fa6         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000002fae         mov        qword [rsp+0xe8+var_A0], rax

                     loc_2fb3:
0000000000002fb3         xor        r11d, r11d                                  ; CODE XREF=sub_3620+180, sub_3620+1400, sub_3620+1488, sub_3620+1557, sub_3620+1615, sub_3620+1781, sub_3620+1839, sub_3620+2408, sub_3620+2485
0000000000002fb6         mov        rax, rbp
0000000000002fb9         mov        r8d, r12d
0000000000002fbc         mov        rbp, r11
0000000000002fbf         mov        r11, rax
0000000000002fc2         nop        word [rax+rax]

                     loc_2fc8:
0000000000002fc8         cmp        r11, rbp                                    ; CODE XREF=sub_30d0+194
0000000000002fcb         setne      r12b
0000000000002fcf         cmp        r11, 0xffffffffffffffff
0000000000002fd3         jne        loc_2fe2

0000000000002fd5         mov        rax, qword [rsp+0xe8+var_D8]
0000000000002fda         cmp        byte [rax+rbp], 0x0
0000000000002fde         setne      r12b

                     loc_2fe2:
0000000000002fe2         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
0000000000002fe5         je         loc_3640

0000000000002feb         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000002ff0         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000002ff5         lea        r9, qword [rdi+rbp]
0000000000002ff9         setne      al
0000000000002ffc         and        al, byte [rsp+0xe8+var_DB]
0000000000003000         mov        r10d, eax
0000000000003003         je         loc_30b0

0000000000003009         mov        rax, qword [rsp+0xe8+var_D0]
000000000000300e         test       rax, rax
0000000000003011         je         loc_3440

0000000000003017         cmp        r11, 0xffffffffffffffff
000000000000301b         lea        rbx, qword [rbp+rax]
0000000000003020         jne        loc_3050

0000000000003022         cmp        rax, 0x1
0000000000003026         jbe        loc_3050

0000000000003028         mov        byte [rsp+0xe8+var_B0], r8b
000000000000302d         mov        byte [rsp+0xe8+var_B8], r10b
0000000000003032         mov        qword [rsp+0xe8+var_C0], r9
0000000000003037         call       j_strlen                                    ; strlen
000000000000303c         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000003042         movzx      r10d, byte [rsp+0xe8+var_B8]
0000000000003048         mov        r11, rax
000000000000304b         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_3050:
0000000000003050         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
0000000000003053         mov        byte [rsp+0xe8+var_C0], r10b
0000000000003058         ja         loc_3610

000000000000305e         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
0000000000003063         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
0000000000003068         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
000000000000306b         mov        qword [rsp+0xe8+var_A8], r11
0000000000003070         mov        byte [rsp+0xe8+var_B0], r8b
0000000000003075         mov        qword [rsp+0xe8+var_B8], r9
000000000000307a         call       j_memcmp                                    ; memcmp
000000000000307f         test       eax, eax
0000000000003081         mov        r9, qword [rsp+0xe8+var_B8]
0000000000003086         movzx      r8d, byte [rsp+0xe8+var_B0]
000000000000308c         mov        r11, qword [rsp+0xe8+var_A8]
0000000000003091         jne        loc_3610

0000000000003097         cmp        byte [rsp+0xe8+var_D9], 0x0
000000000000309c         movzx      r10d, byte [rsp+0xe8+var_C0]
00000000000030a2         jne        loc_4025

00000000000030a8         nop        dword [rax+rax]

                     loc_30b0:
00000000000030b0         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_3600+19
00000000000030b4         cmp        bl, 0x7e
00000000000030b7         ja         loc_33d8

00000000000030bd         lea        rcx, qword [switch_table_6a40+44]           ; 0x6a6c
00000000000030c4         movzx      edx, bl
00000000000030c7         movsxd     rax, dword [rcx+rdx*4]
00000000000030cb         add        rax, rcx
00000000000030ce         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_30d0:
00000000000030d0         xor        r10d, r10d
00000000000030d3         cmp        r11, 0x1
00000000000030d7         setne      al
00000000000030da         cmp        r11, 0xffffffffffffffff
00000000000030de         jne        loc_30ec

00000000000030e0         mov        rax, qword [rsp+arg_8]
00000000000030e5         cmp        byte [rax+1], 0x0
00000000000030e9         setne      al

                     loc_30ec:
00000000000030ec         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_30d0+14
00000000000030f1         sete       dl
00000000000030f4         test       al, al
00000000000030f6         je         loc_3348

                     loc_30fc:
00000000000030fc         xor        r12d, r12d                                  ; CODE XREF=sub_3340+11
00000000000030ff         xor        eax, eax
0000000000003101         nop        dword [rax]
                        ; endp

                     loc_3108:
0000000000003108         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_32f0+50, sub_33c0+119
000000000000310d         jne        loc_3222

0000000000003113         test       dl, dl
0000000000003115         jne        loc_3222

                     loc_311b:
000000000000311b         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_31d0+87
0000000000003120         test       rsi, rsi
0000000000003123         je         loc_3139

0000000000003125         mov        edx, ebx
0000000000003127         shr        dl, 0x5
000000000000312a         movzx      edx, dl
000000000000312d         mov        edx, dword [rsi+rdx*4]
0000000000003130         bt         edx, ebx
0000000000003133         jb         loc_3283

                     loc_3139:
0000000000003139         test       r10b, r10b                                  ; CODE XREF=sub_30d0+83, sub_31d0+93
000000000000313c         jne        loc_3283

0000000000003142         xor        eax, 0x1
0000000000003145         add        rbp, 0x1
0000000000003149         and        eax, r8d

                     loc_314c:
000000000000314c         test       al, al                                      ; CODE XREF=sub_3620+936
000000000000314e         je         loc_3170

0000000000003150         cmp        r13, r15
0000000000003153         jbe        loc_315a

0000000000003155         mov        byte [r14+r15], 0x27

                     loc_315a:
000000000000315a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_30d0+131
000000000000315e         cmp        r13, rax
0000000000003161         jbe        loc_3169

0000000000003163         mov        byte [r14+r15+1], 0x27

                     loc_3169:
0000000000003169         add        r15, 0x2                                    ; CODE XREF=sub_30d0+145
000000000000316d         xor        r8d, r8d

                     loc_3170:
0000000000003170         cmp        r15, r13                                    ; CODE XREF=sub_30d0+126, sub_31d0+275, sub_3620+869
0000000000003173         jae        loc_3179

0000000000003175         mov        byte [r14+r15], bl

                     loc_3179:
0000000000003179         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_30d0+163
000000000000317e         add        r15, 0x1
0000000000003182         mov        eax, 0x0
0000000000003187         test       r12b, r12b
000000000000318a         cmove      edi, eax
000000000000318d         mov        byte [rsp+0xe8+var_DA], dil
0000000000003192         jmp        loc_2fc8
0000000000003197         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_31a0:
00000000000031a0         xor        r10d, r10d
00000000000031a3         mov        eax, dword [rsp+arg_0]
00000000000031a7         cmp        eax, 0x2
00000000000031aa         je         loc_3768

00000000000031b0         cmp        eax, 0x5
00000000000031b3         je         loc_3728

00000000000031b9         cmp        eax, 0x2
00000000000031bc         mov        ebx, 0x3f
00000000000031c1         sete       dl
00000000000031c4         xor        r12d, r12d
00000000000031c7         xor        eax, eax
00000000000031c9         jmp        sub_30d0+56
                        ; endp
00000000000031ce         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_31d0:
00000000000031d0         xor        r10d, r10d
00000000000031d3         cmp        dword [rsp+arg_0], 0x2
00000000000031d8         je         loc_36e0

00000000000031de         mov        byte [rsp+arg_74], r12b
00000000000031e3         xor        edx, edx
00000000000031e5         xor        eax, eax
00000000000031e7         mov        ebx, 0x27
00000000000031ec         jmp        sub_30d0+56
                        ; endp
00000000000031f1         nop        dword [rax]
00000000000031f8         mov        edx, 0x9
00000000000031fd         mov        ebx, 0x74

                     loc_3202:
0000000000003202         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3390+10, sub_3480+37, sub_35c0+53
0000000000003207         sete       al
000000000000320a         and        al, byte [rsp+arg_7]
000000000000320e         jne        sub_3340+30

0000000000003214         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_31d0+114
0000000000003219         jne        loc_3280

                     loc_321b:
000000000000321b         mov        ebx, edx                                    ; CODE XREF=sub_32f0+18
000000000000321d         xor        r12d, r12d
0000000000003220         xor        eax, eax
                        ; endp

                     loc_3222:
0000000000003222         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_30d0+61, sub_30d0+69
0000000000003227         jne        loc_311b

000000000000322d         jmp        loc_3139
0000000000003232         nop        word [rax+rax]
0000000000003238         mov        edx, 0x8
000000000000323d         mov        ebx, 0x62
0000000000003242         jmp        sub_31d0+68
0000000000003244         nop        dword [rax]
0000000000003248         cmp        dword [rsp+8], 0x2
000000000000324d         je         sub_3620                                    ; sub_3620
0000000000003253         cmp        byte [rsp+0xd], 0x0
0000000000003258         je         sub_3460+16

                     loc_325e:
000000000000325e         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3460+8
0000000000003263         je         loc_3470

0000000000003269         cmp        qword [rsp+arg_10], 0x0
000000000000326f         jne        loc_362b

0000000000003275         mov        ebx, 0x5c
000000000000327a         nop        word [rax+rax]
                        ; endp

                     loc_3280:
0000000000003280         xor        r12d, r12d                                  ; CODE XREF=sub_31d0+73, sub_35c0+29
                        ; endp

                     loc_3283:
0000000000003283         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_30d0+99, sub_30d0+108
0000000000003288         sete       dl
000000000000328b         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000003290         mov        eax, edx
0000000000003292         jne        loc_3ae8

0000000000003298         mov        eax, r8d
000000000000329b         xor        eax, 0x1
000000000000329e         and        al, dl
00000000000032a0         je         loc_32d1

00000000000032a2         cmp        r13, r15
00000000000032a5         jbe        loc_32ac

00000000000032a7         mov        byte [r14+r15], 0x27

                     loc_32ac:
00000000000032ac         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_31d0+213
00000000000032b0         cmp        r13, rdx
00000000000032b3         jbe        loc_32bb

00000000000032b5         mov        byte [r14+r15+1], 0x24

                     loc_32bb:
00000000000032bb         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_31d0+227
00000000000032bf         cmp        r13, rdx
00000000000032c2         jbe        loc_32ca

00000000000032c4         mov        byte [r14+r15+2], 0x27

                     loc_32ca:
00000000000032ca         add        r15, 0x3                                    ; CODE XREF=sub_31d0+242
00000000000032ce         mov        r8d, eax

                     loc_32d1:
00000000000032d1         cmp        r13, r15                                    ; CODE XREF=sub_31d0+208
00000000000032d4         jbe        loc_32db

00000000000032d6         mov        byte [r14+r15], 0x5c

                     loc_32db:
00000000000032db         add        r15, 0x1                                    ; CODE XREF=sub_31d0+260
00000000000032df         add        rbp, 0x1
00000000000032e3         jmp        loc_3170
00000000000032e8         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_32f0:
00000000000032f0         cmp        byte [rsp+arg_5], 0x0
00000000000032f5         jne        loc_34c3

00000000000032fb         xor        edx, edx
00000000000032fd         test       byte [rsp+arg_70], 0x1
0000000000003302         je         loc_321b

0000000000003308         add        rbp, 0x1
000000000000330c         jmp        quotearg_buffer_restyled+232
                        ; endp
0000000000003311         nop        dword [rax]
0000000000003318         cmp        dword [rsp+8], 0x2
000000000000331d         sete       dl
0000000000003320         xor        eax, eax
0000000000003322         jmp        sub_30d0+56
0000000000003327         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3330:
0000000000003330         mov        edx, 0x7
0000000000003335         mov        ebx, 0x61
000000000000333a         jmp        sub_31d0+68
                        ; endp
000000000000333f         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3340:
0000000000003340         cmp        dword [rsp+8], 0x2
0000000000003345         sete       dl
                        ; endp

                     loc_3348:
0000000000003348         test       rbp, rbp                                    ; CODE XREF=sub_30d0+38, sub_3560+35
000000000000334b         jne        loc_30fc

0000000000003351         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_3590+43
0000000000003356         and        al, dl
0000000000003358         je         sub_30d0+56

000000000000335e         mov        rbp, r11
0000000000003361         mov        dword [rsp+arg_0], 0x2
0000000000003369         jmp        sub_3620+1097
                        ; endp
000000000000336e         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3370:
0000000000003370         cmp        dword [rsp+arg_0], 0x2
0000000000003375         sete       dl
0000000000003378         xor        r12d, r12d
000000000000337b         jmp        sub_3340+17
                        ; endp
000000000000337d         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3380:
0000000000003380         cmp        dword [rsp+arg_0], 0x2
0000000000003385         mov        ebx, 0x20
000000000000338a         sete       dl
000000000000338d         jmp        sub_3340+17
                        ; endp
000000000000338f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3390:
0000000000003390         mov        edx, 0xd
0000000000003395         mov        ebx, 0x72
000000000000339a         jmp        loc_3202
000000000000339f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_33a0:
00000000000033a0         mov        edx, 0xc
00000000000033a5         mov        ebx, 0x66
00000000000033aa         jmp        sub_31d0+68
                        ; endp
00000000000033af         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_33b0:
00000000000033b0         mov        edx, 0xb
00000000000033b5         mov        ebx, 0x76
00000000000033ba         jmp        sub_31d0+68
                        ; endp
00000000000033bf         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_33c0:
00000000000033c0         mov        edx, 0xa
00000000000033c5         mov        ebx, 0x6e
00000000000033ca         jmp        sub_31d0+50
                        ; endp
00000000000033cf         align      16

                     loc_33d0:
00000000000033d0         xor        r10d, r10d                                  ; CODE XREF=sub_33c0+135
00000000000033d3         nop        dword [rax+rax]

                     loc_33d8:
00000000000033d8         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
00000000000033de         jne        loc_3788

00000000000033e4         mov        qword [rsp+0xe8+var_B0], r11
00000000000033e9         mov        byte [rsp+0xe8+var_B8], r8b
00000000000033ee         mov        byte [rsp+0xe8+var_C0], r10b
00000000000033f3         call       j___ctype_b_loc                             ; __ctype_b_loc
00000000000033f8         mov        rcx, qword [rax]
00000000000033fb         movzx      edx, bl
00000000000033fe         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000003404         movzx      r8d, byte [rsp+0xe8+var_B8]
000000000000340a         mov        r11, qword [rsp+0xe8+var_B0]
000000000000340f         mov        edi, 0x1
0000000000003414         movzx      eax, word [rcx+rdx*2]
0000000000003418         and        ax, 0x4000
000000000000341c         setne      r12b
0000000000003420         sete       al
0000000000003423         and        al, byte [rsp+0xe8+var_DB]

                     loc_3427:
0000000000003427         test       al, al                                      ; CODE XREF=sub_3620+2221
0000000000003429         jne        loc_3dc1

000000000000342f         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000003434         sete       dl
0000000000003437         jmp        loc_3108
000000000000343c         align      64

                     loc_3440:
0000000000003440         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
0000000000003444         cmp        bl, 0x7e
0000000000003447         ja         loc_33d0

0000000000003449         lea        rcx, qword [switch_table_6a40+552]          ; 0x6c68
0000000000003450         movzx      edx, bl
0000000000003453         movsxd     rax, dword [rcx+rdx*4]
0000000000003457         add        rax, rcx
000000000000345a         jmp        rax
                        ; endp
000000000000345c         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3460:
0000000000003460         xor        r10d, r10d
0000000000003463         cmp        byte [rsp+arg_5], 0x0
0000000000003468         jne        loc_325e

000000000000346e         nop

                     loc_3470:
0000000000003470         mov        edx, 0x5c                                   ; CODE XREF=sub_31d0+136, sub_31d0+147
0000000000003475         mov        ebx, 0x5c
000000000000347a         jmp        sub_31d0+68
                        ; endp
000000000000347f         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3480:
0000000000003480         mov        edx, 0xc
0000000000003485         xor        r10d, r10d
0000000000003488         mov        ebx, 0x66
000000000000348d         jmp        sub_31d0+68
                        ; endp
0000000000003492         nop        word [rax+rax]
0000000000003498         mov        edx, 0xa
000000000000349d         xor        r10d, r10d
00000000000034a0         mov        ebx, 0x6e
00000000000034a5         jmp        sub_31d0+50
00000000000034aa         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_34b0:
00000000000034b0         mov        ebx, 0x61
00000000000034b5         jmp        sub_31d0+176
                        ; endp
00000000000034ba         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_34c0:
00000000000034c0         xor        r10d, r10d
                        ; endp

                     loc_34c3:
00000000000034c3         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_32f0+5
00000000000034c8         sete       dl
00000000000034cb         cmp        byte [rsp+arg_7], 0x0
00000000000034d0         jne        loc_406a

00000000000034d6         mov        eax, r8d
00000000000034d9         mov        rcx, r15
00000000000034dc         xor        eax, 0x1
00000000000034df         and        al, dl
00000000000034e1         je         loc_3510

00000000000034e3         cmp        r13, r15
00000000000034e6         jbe        loc_34ed

00000000000034e8         mov        byte [r14+r15], 0x27

                     loc_34ed:
00000000000034ed         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_34c0+38
00000000000034f1         cmp        r13, rcx
00000000000034f4         jbe        loc_34fc

00000000000034f6         mov        byte [r14+r15+1], 0x24

                     loc_34fc:
00000000000034fc         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_34c0+52
0000000000003500         cmp        r13, rcx
0000000000003503         ja         loc_3b39

                     loc_3509:
0000000000003509         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_3620+1311
000000000000350d         mov        r8d, eax

                     loc_3510:
0000000000003510         cmp        r13, rcx                                    ; CODE XREF=sub_34c0+33
0000000000003513         jbe        loc_351a

0000000000003515         mov        byte [r14+rcx], 0x5c

                     loc_351a:
000000000000351a         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_34c0+83
000000000000351f         lea        r15, qword [rcx+1]
0000000000003523         je         loc_3b29

0000000000003529         lea        rax, qword [rbp+1]
000000000000352d         cmp        rax, r11
0000000000003530         jae        loc_354b

0000000000003532         mov        rax, qword [rsp+arg_8]
0000000000003537         movzx      eax, byte [rax+rbp+1]
000000000000353c         mov        byte [rsp+arg_20], al
0000000000003540         sub        eax, 0x30
0000000000003543         cmp        al, 0x9
0000000000003545         jbe        loc_3d79

                     loc_354b:
000000000000354b         mov        eax, r12d                                   ; CODE XREF=sub_34c0+112
000000000000354e         mov        ebx, 0x30
0000000000003553         xor        r12d, r12d
0000000000003556         jmp        sub_30d0+56
                        ; endp
000000000000355b         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3560:
0000000000003560         cmp        dword [rsp+arg_0], 0x2
0000000000003565         mov        r12d, r10d
0000000000003568         sete       dl
000000000000356b         xor        r10d, r10d
000000000000356e         xor        eax, eax
0000000000003570         jmp        sub_30d0+56
                        ; endp
0000000000003575         nop        dword [rax]
0000000000003578         cmp        dword [rsp+8], 0x2
000000000000357d         sete       dl
0000000000003580         xor        r10d, r10d
0000000000003583         jmp        sub_3340+8
0000000000003588         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3590:
0000000000003590         cmp        dword [rsp+8], 0x2
0000000000003595         sete       dl
0000000000003598         xor        r10d, r10d
000000000000359b         xor        r12d, r12d
000000000000359e         jmp        sub_3340+17
                        ; endp
00000000000035a3         nop        dword [rax+rax]
00000000000035a8         cmp        dword [rsp+8], 0x2
00000000000035ad         mov        r12d, r10d
00000000000035b0         mov        ebx, 0x20
00000000000035b5         sete       dl
00000000000035b8         xor        r10d, r10d
00000000000035bb         jmp        sub_3340+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_35c0:
00000000000035c0         mov        edx, 0xd
00000000000035c5         xor        r10d, r10d
00000000000035c8         mov        ebx, 0x72
00000000000035cd         jmp        sub_31d0+50
                        ; endp
00000000000035d2         nop        word [rax+rax]
00000000000035d8         mov        ebx, 0x76
00000000000035dd         jmp        sub_31d0+176
00000000000035e2         nop        word [rax+rax]
00000000000035e8         mov        edx, 0x9
00000000000035ed         xor        r10d, r10d
00000000000035f0         mov        ebx, 0x74
00000000000035f5         jmp        sub_31d0+50
00000000000035fa         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3600:
0000000000003600         mov        ebx, 0x62
0000000000003605         jmp        sub_31d0+176
                        ; endp
000000000000360a         nop        word [rax+rax]

                     loc_3610:
0000000000003610         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
0000000000003613         jmp        loc_30b0
0000000000003618         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_3620:
0000000000003620         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_31d0+125
0000000000003625         jne        sub_3620+2416
                        ; endp

                     loc_362b:
000000000000362b         add        rbp, 0x1                                    ; CODE XREF=sub_31d0+159
000000000000362f         mov        eax, r8d
0000000000003632         xor        r12d, r12d
0000000000003635         mov        ebx, 0x5c
000000000000363a         jmp        sub_30d0+124
                        ; endp
000000000000363f         align      64

                     loc_3640:
0000000000003640         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
0000000000003645         movzx      ebx, byte [rsp+0xe8+var_D9]
000000000000364a         mov        r12d, r8d
000000000000364d         mov        rbp, r11
0000000000003650         sete       dl
0000000000003653         mov        eax, ebx
0000000000003655         test       r15, r15
0000000000003658         sete       cl
000000000000365b         and        eax, edx
000000000000365d         and        al, cl
000000000000365f         jne        loc_40c6

0000000000003665         mov        eax, ebx
0000000000003667         xor        eax, 0x1
000000000000366a         and        dl, al
000000000000366c         je         loc_3fdc

0000000000003672         cmp        byte [rsp+0xe8+var_6C], 0x0
0000000000003677         je         loc_3fda

000000000000367d         cmp        byte [rsp+0xe8+var_DA], 0x0
0000000000003682         jne        loc_407d

0000000000003688         test       r13, r13
000000000000368b         sete       al
000000000000368e         cmp        qword [rsp+0xe8+var_98], 0x0
0000000000003694         setne      dl
0000000000003697         and        al, dl
0000000000003699         je         loc_40bc

000000000000369f         mov        r13, qword [rsp+0xe8+var_98]

                     loc_36a4:
00000000000036a4         lea        rbx, qword [aLibs+29]                       ; 0x69e5, CODE XREF=sub_3620+2781
00000000000036ab         mov        byte [r14], 0x27
00000000000036af         mov        dword [rsp+0xe8+var_E0], 0x2
00000000000036b7         mov        r15d, 0x1
00000000000036bd         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000036c6         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000036cb         mov        qword [rsp+0xe8+var_A0], rbx
00000000000036d0         mov        byte [rsp+0xe8+var_6C], al
00000000000036d4         jmp        loc_2fb3
00000000000036d9         align      32

                     loc_36e0:
00000000000036e0         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_31d0+8
00000000000036e5         jne        sub_3620+2416

00000000000036eb         test       r13, r13
00000000000036ee         je         loc_3af0

00000000000036f4         xor        edx, edx
00000000000036f6         cmp        qword [rsp+arg_48], 0x0
00000000000036fc         jne        loc_3af0

                     loc_3702:
0000000000003702         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_3620+1284, sub_3620+2794
0000000000003707         add        r15, 0x3
000000000000370b         xor        eax, eax
000000000000370d         mov        byte [rsp+arg_74], r12b
0000000000003712         xor        r8d, r8d
0000000000003715         mov        r13, rdx
0000000000003718         mov        ebx, 0x27
000000000000371d         jmp        sub_30d0+105
                        ; endp
0000000000003722         align      8

                     loc_3728:
0000000000003728         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_31a0+19
000000000000372d         je         loc_3750

000000000000372f         lea        rcx, qword [rbp+2]
0000000000003733         cmp        rcx, r11
0000000000003736         jae        loc_3750

0000000000003738         mov        rax, qword [rsp+arg_8]
000000000000373d         cmp        byte [rax+rbp+1], 0x3f
0000000000003742         je         loc_3ed2

0000000000003748         nop        dword [rax+rax]

                     loc_3750:
0000000000003750         xor        edx, edx                                    ; CODE XREF=sub_3620+269, sub_3620+278, sub_3620+2233, sub_3620+2253
0000000000003752         xor        r12d, r12d
0000000000003755         xor        eax, eax
0000000000003757         mov        ebx, 0x3f
000000000000375c         jmp        sub_30d0+56
                        ; endp
0000000000003761         align      8

                     loc_3768:
0000000000003768         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_31a0+10
000000000000376d         jne        loc_3f90

0000000000003773         xor        r12d, r12d
0000000000003776         xor        eax, eax
0000000000003778         mov        ebx, 0x3f
000000000000377d         jmp        sub_30d0+105
                        ; endp
0000000000003782         align      8

                     loc_3788:
0000000000003788         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_33c0+30
0000000000003790         cmp        r11, 0xffffffffffffffff
0000000000003794         mov        qword [rsp+0xe8+var_48], 0x0
00000000000037a0         mov        qword [rsp+0xe8+var_C0], rax
00000000000037a5         jne        loc_37d4

00000000000037a7         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
00000000000037ac         mov        byte [rsp+0xe8+var_A8], r8b
00000000000037b1         mov        byte [rsp+0xe8+var_B0], r10b
00000000000037b6         mov        qword [rsp+0xe8+var_B8], r9
00000000000037bb         call       j_strlen                                    ; strlen
00000000000037c0         movzx      r8d, byte [rsp+0xe8+var_A8]
00000000000037c6         movzx      r10d, byte [rsp+0xe8+var_B0]
00000000000037cc         mov        r11, rax
00000000000037cf         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_37d4:
00000000000037d4         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_3620+389
00000000000037dc         xor        ecx, ecx
00000000000037de         mov        byte [rsp+0xe8+var_6A], bl
00000000000037e2         mov        byte [rsp+0xe8+var_6B], r8b
00000000000037e7         mov        rbx, rcx
00000000000037ea         mov        qword [rsp+0xe8+var_60], r9
00000000000037f2         mov        qword [rsp+0xe8+var_B0], rax
00000000000037f7         mov        byte [rsp+0xe8+var_69], r10b
00000000000037fc         mov        qword [rsp+0xe8+var_68], r15
0000000000003804         mov        qword [rsp+0xe8+var_A8], r14
0000000000003809         mov        qword [rsp+0xe8+var_78], r13
000000000000380e         mov        qword [rsp+0xe8+var_B8], r11

                     loc_3813:
0000000000003813         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_3620+623
0000000000003818         lea        r14, qword [rbp+rbx]
000000000000381d         mov        rdx, qword [rsp+0xe8+var_B8]
0000000000003822         mov        rcx, qword [rsp+0xe8+var_C0]
0000000000003827         mov        rdi, qword [rsp+0xe8+var_B0]
000000000000382c         lea        r13, qword [rax+r14]
0000000000003830         sub        rdx, r14
0000000000003833         mov        rsi, r13
0000000000003836         call       rpl_mbrtowc                                 ; rpl_mbrtowc
000000000000383b         test       rax, rax
000000000000383e         mov        r15, rax
0000000000003841         je         loc_3891

0000000000003843         cmp        rax, 0xffffffffffffffff
0000000000003847         je         loc_3e65

000000000000384d         cmp        rax, 0xfffffffffffffffe
0000000000003851         je         loc_3df1

0000000000003857         cmp        dword [rsp+0xe8+var_E0], 0x2
000000000000385c         sete       al
000000000000385f         and        al, byte [rsp+0xe8+var_D9]
0000000000003863         jne        loc_3a00

                     loc_3869:
0000000000003869         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_3620+996, sub_3620+1031
0000000000003870         call       j_iswprint                                  ; iswprint
0000000000003875         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
000000000000387a         test       eax, eax
000000000000387c         mov        eax, 0x0
0000000000003881         cmove      r12d, eax
0000000000003885         add        rbx, r15
0000000000003888         call       j_mbsinit                                   ; mbsinit
000000000000388d         test       eax, eax
000000000000388f         je         loc_3813

                     loc_3891:
0000000000003891         mov        edx, r12d                                   ; CODE XREF=sub_3620+545
0000000000003894         mov        rdi, rbx
0000000000003897         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000389d         xor        edx, 0x1
00000000000038a0         movzx      ebx, byte [rsp+0xe8+var_6A]
00000000000038a5         movzx      r10d, byte [rsp+0xe8+var_69]
00000000000038ab         and        dl, byte [rsp+0xe8+var_DB]
00000000000038af         mov        r15, qword [rsp+0xe8+var_68]
00000000000038b7         mov        r14, qword [rsp+0xe8+var_A8]
00000000000038bc         mov        r13, qword [rsp+0xe8+var_78]
00000000000038c1         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_38c6:
00000000000038c6         cmp        rdi, 0x1                                    ; CODE XREF=sub_3620+2112, sub_3620+2168
00000000000038ca         jbe        loc_3ecb

                     loc_38d0:
00000000000038d0         mov        rcx, rdi                                    ; CODE XREF=sub_3620+1961
00000000000038d3         xor        esi, esi
00000000000038d5         movzx      r9d, byte [rsp+0xe8+var_D9]
00000000000038db         add        rcx, rbp
00000000000038de         mov        rdi, qword [rsp+0xe8+var_D8]
00000000000038e3         jmp        loc_399e
00000000000038e8         align      16

                     loc_38f0:
00000000000038f0         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3620+896
00000000000038f5         sete       al
00000000000038f8         test       r9b, r9b
00000000000038fb         jne        loc_3db0

0000000000003901         mov        esi, r8d
0000000000003904         xor        esi, 0x1
0000000000003907         and        al, sil
000000000000390a         je         loc_393b

000000000000390c         cmp        r13, r15
000000000000390f         jbe        loc_3916

0000000000003911         mov        byte [r14+r15], 0x27

                     loc_3916:
0000000000003916         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_3620+751
000000000000391a         cmp        r13, rsi
000000000000391d         jbe        loc_3925

000000000000391f         mov        byte [r14+r15+1], 0x24

                     loc_3925:
0000000000003925         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_3620+765
0000000000003929         cmp        r13, rsi
000000000000392c         jbe        loc_3934

000000000000392e         mov        byte [r14+r15+2], 0x27

                     loc_3934:
0000000000003934         add        r15, 0x3                                    ; CODE XREF=sub_3620+780
0000000000003938         mov        r8d, eax

                     loc_393b:
000000000000393b         cmp        r13, r15                                    ; CODE XREF=sub_3620+746
000000000000393e         jbe        loc_3945

0000000000003940         mov        byte [r14+r15], 0x5c

                     loc_3945:
0000000000003945         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3620+798
0000000000003949         cmp        r13, rax
000000000000394c         jbe        loc_395b

000000000000394e         mov        eax, ebx
0000000000003950         shr        al, 0x6
0000000000003953         add        eax, 0x30
0000000000003956         mov        byte [r14+r15+1], al

                     loc_395b:
000000000000395b         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3620+812
000000000000395f         cmp        r13, rax
0000000000003962         jbe        loc_3974

0000000000003964         mov        eax, ebx
0000000000003966         shr        al, 0x3
0000000000003969         and        eax, 0x7
000000000000396c         add        eax, 0x30
000000000000396f         mov        byte [r14+r15+2], al

                     loc_3974:
0000000000003974         and        ebx, 0x7                                    ; CODE XREF=sub_3620+834
0000000000003977         add        rbp, 0x1
000000000000397b         add        r15, 0x3
000000000000397f         add        ebx, 0x30
0000000000003982         cmp        rbp, rcx
0000000000003985         jae        loc_3170

000000000000398b         mov        esi, edx

                     loc_398d:
000000000000398d         cmp        r13, r15                                    ; CODE XREF=sub_3620+985, sub_3620+1969
0000000000003990         jbe        loc_3996

0000000000003992         mov        byte [r14+r15], bl

                     loc_3996:
0000000000003996         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_3620+880
000000000000399a         add        r15, 0x1

                     loc_399e:
000000000000399e         test       dl, dl                                      ; CODE XREF=sub_3620+707
00000000000039a0         jne        loc_38f0

00000000000039a6         mov        eax, esi
00000000000039a8         xor        eax, 0x1
00000000000039ab         and        eax, r8d
00000000000039ae         test       r10b, r10b
00000000000039b1         je         loc_39c1

00000000000039b3         cmp        r13, r15
00000000000039b6         jbe        loc_39bd

00000000000039b8         mov        byte [r14+r15], 0x5c

                     loc_39bd:
00000000000039bd         add        r15, 0x1                                    ; CODE XREF=sub_3620+918

                     loc_39c1:
00000000000039c1         add        rbp, 0x1                                    ; CODE XREF=sub_3620+913
00000000000039c5         cmp        rbp, rcx
00000000000039c8         jae        loc_314c

00000000000039ce         test       al, al
00000000000039d0         je         loc_3dce

00000000000039d6         cmp        r13, r15
00000000000039d9         jbe        loc_39e0

00000000000039db         mov        byte [r14+r15], 0x27

                     loc_39e0:
00000000000039e0         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3620+953
00000000000039e4         cmp        r13, rax
00000000000039e7         jbe        loc_39ef

00000000000039e9         mov        byte [r14+r15+1], 0x27

                     loc_39ef:
00000000000039ef         add        r15, 0x2                                    ; CODE XREF=sub_3620+967
00000000000039f3         xor        r10d, r10d
00000000000039f6         xor        r8d, r8d
00000000000039f9         jmp        loc_398d
00000000000039fb         align      512

                     loc_3a00:
0000000000003a00         cmp        r15, 0x1                                    ; CODE XREF=sub_3620+579
0000000000003a04         je         loc_3869

0000000000003a0a         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000003a0f         lea        rcx, qword [rdi+r15]
0000000000003a13         lea        rdx, qword [rdi+r14+1]
0000000000003a18         lea        r8, qword [rcx+r14]
0000000000003a1c         jmp        loc_3a2d
0000000000003a1e         align      32

                     loc_3a20:
0000000000003a20         add        rdx, 0x1                                    ; CODE XREF=sub_3620+1046, sub_3620+1072
0000000000003a24         cmp        r8, rdx
0000000000003a27         je         loc_3869

                     loc_3a2d:
0000000000003a2d         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_3620+1020
0000000000003a30         sub        ecx, 0x5b
0000000000003a33         cmp        cl, 0x21
0000000000003a36         ja         loc_3a20

0000000000003a38         mov        esi, 0x1
0000000000003a3d         shl        rsi, cl
0000000000003a40         mov        rcx, rsi
0000000000003a43         movabs     rsi, 0x20000002b
0000000000003a4d         test       rcx, rsi
0000000000003a50         je         loc_3a20

0000000000003a52         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003a57         mov        r13, qword [rsp+0xe8+var_78]
0000000000003a5c         mov        rbp, qword [rsp+0xe8+var_B8]
0000000000003a61         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_3a69:
0000000000003a69         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_3620+1227, sub_3620+1948, sub_3620+2585, sub_3620+2734
0000000000003a6e         je         loc_3a80

0000000000003a70         test       al, al
0000000000003a72         mov        eax, 0x4
0000000000003a77         cmove      eax, dword [rsp+0xe8+var_E0]
0000000000003a7c         mov        dword [rsp+0xe8+var_E0], eax

                     loc_3a80:
0000000000003a80         sub        rsp, 0x8                                    ; CODE XREF=sub_3620+1102
0000000000003a84         mov        rcx, rbp
0000000000003a87         mov        rsi, r13
0000000000003a8a         push       qword [rsp+0xf0+var_88]
0000000000003a8e         push       qword [rsp+0xf8+var_80]
0000000000003a92         mov        rdi, r14
0000000000003a95         push       0x0
0000000000003a97         mov        r9d, dword [rsp+0x108+var_70]
0000000000003a9f         mov        r8d, dword [rsp+0x108+var_E0]
0000000000003aa4         mov        rdx, qword [rsp+0x108+var_D8]
0000000000003aa9         and        r9d, 0xfffffffd
0000000000003aad         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003ab2         add        rsp, 0x20
0000000000003ab6         mov        r15, rax

                     loc_3ab9:
0000000000003ab9         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_3620+2549, sub_3620+2560, sub_3620+2711
0000000000003ac1         xor        rbx, qword [fs:0x28]
0000000000003aca         mov        rax, r15
0000000000003acd         jne        loc_40d3

0000000000003ad3         add        rsp, 0xb8
0000000000003ada         pop        rbx
0000000000003adb         pop        rbp
0000000000003adc         pop        r12
0000000000003ade         pop        r13
0000000000003ae0         pop        r14
0000000000003ae2         pop        r15
0000000000003ae4         ret
                        ; endp
0000000000003ae5         align      8

                     loc_3ae8:
0000000000003ae8         mov        rbp, r11                                    ; CODE XREF=sub_31d0+194
0000000000003aeb         jmp        loc_3a69

                     loc_3af0:
0000000000003af0         cmp        r13, r15                                    ; CODE XREF=sub_3620+206, sub_3620+220
0000000000003af3         jbe        loc_3afa

0000000000003af5         mov        byte [r14+r15], 0x27

                     loc_3afa:
0000000000003afa         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3620+1235
0000000000003afe         cmp        r13, rax
0000000000003b01         jbe        loc_3b09

0000000000003b03         mov        byte [r14+r15+1], 0x5c

                     loc_3b09:
0000000000003b09         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3620+1249
0000000000003b0d         cmp        r13, rax
0000000000003b10         jbe        loc_4102

0000000000003b16         mov        rdx, r13
0000000000003b19         mov        byte [r14+r15+2], 0x27
0000000000003b1f         mov        r13, qword [rsp+arg_48]
0000000000003b24         jmp        loc_3702

                     loc_3b29:
0000000000003b29         mov        eax, r12d                                   ; CODE XREF=sub_34c0+99
0000000000003b2c         mov        ebx, 0x30
0000000000003b31         xor        r12d, r12d
0000000000003b34         jmp        sub_30d0+105
                        ; endp

                     loc_3b39:
0000000000003b39         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_34c0+67
0000000000003b3f         jmp        loc_3509

                     loc_3b44:
0000000000003b44         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
0000000000003b46         jne        loc_2f73

0000000000003b4c         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_3b51:
0000000000003b51         test       r13, r13                                    ; CODE XREF=sub_3620+2749
0000000000003b54         jne        loc_40ea

0000000000003b5a         lea        rax, qword [aLibs+29]                       ; 0x69e5
0000000000003b61         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003b6a         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003b6f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003b74         xor        r12d, r12d
0000000000003b77         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003b7c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003b85         mov        qword [rsp+0xe8+var_A0], rax
0000000000003b8a         mov        r15d, 0x1
0000000000003b90         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000003b98         jmp        loc_2fb3
0000000000003b9d         align      32

                     loc_3ba0:
0000000000003ba0         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
0000000000003ba2         jne        loc_3f9d

0000000000003ba8         test       r13, r13
0000000000003bab         je         loc_3dd6

0000000000003bb1         mov        byte [r14], 0x22
0000000000003bb5         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003bba         xor        r12d, r12d
0000000000003bbd         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003bc2         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_3bcb:
0000000000003bcb         lea        rax, qword [aLibs+27]                       ; 0x69e3, CODE XREF=sub_3620+1996
0000000000003bd2         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003bd7         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003bdc         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003be5         mov        r15d, 0x1
0000000000003beb         mov        qword [rsp+0xe8+var_A0], rax
0000000000003bf0         jmp        loc_2fb3

                     loc_3bf5:
0000000000003bf5         lea        rax, qword [aLibs+27]                       ; case 6, 0x69e3, CODE XREF=quotearg_buffer_restyled+145
0000000000003bfc         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003c01         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003c06         xor        r12d, r12d
0000000000003c09         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003c12         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003c17         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003c1c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003c25         xor        r15d, r15d
0000000000003c28         mov        qword [rsp+0xe8+var_A0], rax
0000000000003c2d         mov        dword [rsp+0xe8+var_E0], 0x5
0000000000003c35         jmp        loc_2fb3

                     loc_3c3a:
0000000000003c3a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
0000000000003c3f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003c44         xor        r12d, r12d
0000000000003c47         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003c50         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003c55         xor        r15d, r15d
0000000000003c58         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003c5d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000003c66         mov        qword [rsp+0xe8+var_A0], 0x0
0000000000003c6f         jmp        loc_2fb3

                     loc_3c74:
0000000000003c74         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
0000000000003c79         je         loc_3cd1

0000000000003c7b         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0x69e7
0000000000003c82         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003c84         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003c89         call       j_dcgettext                                 ; dcgettext
0000000000003c8e         mov        rcx, rax
0000000000003c91         mov        qword [rsp+0xe8+var_80], rax
0000000000003c96         lea        rax, qword [aLibs+31]                       ; 0x69e7
0000000000003c9d         cmp        rcx, rax
0000000000003ca0         je         loc_403e

                     loc_3ca6:
0000000000003ca6         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x69e5, CODE XREF=sub_3620+2607
0000000000003cad         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003caf         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003cb4         call       j_dcgettext                                 ; dcgettext
0000000000003cb9         mov        rcx, rax
0000000000003cbc         mov        qword [rsp+0xe8+var_88], rax
0000000000003cc1         lea        rax, qword [aLibs+29]                       ; 0x69e5
0000000000003cc8         cmp        rcx, rax
0000000000003ccb         je         loc_4054

                     loc_3cd1:
0000000000003cd1         xor        r15d, r15d                                  ; CODE XREF=sub_3620+1625, sub_3620+2629
0000000000003cd4         test       ebx, ebx
0000000000003cd6         je         loc_3e9d

                     loc_3cdc:
0000000000003cdc         test       ebx, ebx                                    ; CODE XREF=sub_3620+2183, sub_3620+2214
0000000000003cde         mov        rbx, qword [rsp+0xe8+var_88]
0000000000003ce3         setne      byte [rsp+0xe8+var_D9]
0000000000003ce8         xor        r12d, r12d
0000000000003ceb         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
0000000000003cee         call       j_strlen                                    ; strlen
0000000000003cf3         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003cf8         mov        qword [rsp+0xe8+var_D0], rax
0000000000003cfd         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003d02         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003d07         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003d10         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003d15         jmp        loc_2fb3

                     loc_3d1a:
0000000000003d1a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
0000000000003d1f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003d24         xor        r12d, r12d
0000000000003d27         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003d30         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003d35         xor        r15d, r15d
0000000000003d38         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000003d3d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000003d46         mov        qword [rsp+0xe8+var_A0], 0x0
0000000000003d4f         jmp        loc_2fb3

                     loc_3d54:
0000000000003d54         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000003d59         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003d5e         xor        r12d, r12d
0000000000003d61         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003d6a         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003d6f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003d74         jmp        loc_2f93

                     loc_3d79:
0000000000003d79         cmp        r13, r15                                    ; CODE XREF=sub_34c0+133
0000000000003d7c         jbe        loc_3d83

0000000000003d7e         mov        byte [r14+r15], 0x30

                     loc_3d83:
0000000000003d83         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_3620+1884
0000000000003d87         cmp        r13, rax
0000000000003d8a         jbe        loc_3d92

0000000000003d8c         mov        byte [r14+rcx+2], 0x30

                     loc_3d92:
0000000000003d92         mov        eax, r12d                                   ; CODE XREF=sub_3620+1898
0000000000003d95         lea        r15, qword [rcx+3]
0000000000003d99         xor        r12d, r12d
0000000000003d9c         mov        ebx, 0x30
0000000000003da1         jmp        sub_30d0+56
                        ; endp
0000000000003da6         align      16

                     loc_3db0:
0000000000003db0         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_3620+731
0000000000003db5         mov        rbp, r11
0000000000003db8         mov        byte [rsp+0xe8+var_DB], bl
0000000000003dbc         jmp        loc_3a69

                     loc_3dc1:
0000000000003dc1         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_33c0+105
0000000000003dc6         xor        r12d, r12d
0000000000003dc9         jmp        loc_38d0

                     loc_3dce:
0000000000003dce         xor        r10d, r10d                                  ; CODE XREF=sub_3620+944
0000000000003dd1         jmp        loc_398d

                     loc_3dd6:
0000000000003dd6         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_3620+1419
0000000000003ddf         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003de4         xor        r12d, r12d
0000000000003de7         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003dec         jmp        loc_3bcb

                     loc_3df1:
0000000000003df1         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_3620+561
0000000000003df6         mov        rsi, r14
0000000000003df9         mov        rcx, r13
0000000000003dfc         mov        rax, rbx
0000000000003dff         mov        rdi, rbx
0000000000003e02         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000003e08         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003e0d         mov        r9, qword [rsp+0xe8+var_60]
0000000000003e15         cmp        rsi, r11
0000000000003e18         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000003e1e         mov        r15, qword [rsp+0xe8+var_68]
0000000000003e26         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003e2b         mov        r13, qword [rsp+0xe8+var_78]
0000000000003e30         jae        loc_3e58

0000000000003e32         cmp        byte [rcx], 0x0
0000000000003e35         jne        loc_3e47

0000000000003e37         jmp        loc_3e58
0000000000003e39         align      64

                     loc_3e40:
0000000000003e40         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_3620+2099
0000000000003e45         je         loc_3e55

                     loc_3e47:
0000000000003e47         add        rax, 0x1                                    ; CODE XREF=sub_3620+2069
0000000000003e4b         lea        rdx, qword [rbp+rax]
0000000000003e50         cmp        r11, rdx
0000000000003e53         ja         loc_3e40

                     loc_3e55:
0000000000003e55         mov        rdi, rax                                    ; CODE XREF=sub_3620+2085

                     loc_3e58:
0000000000003e58         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_3620+2064, sub_3620+2071
0000000000003e5d         xor        r12d, r12d
0000000000003e60         jmp        loc_38c6

                     loc_3e65:
0000000000003e65         mov        rdi, rbx                                    ; CODE XREF=sub_3620+551
0000000000003e68         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000003e6e         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003e73         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000003e79         mov        r15, qword [rsp+0xe8+var_68]
0000000000003e81         xor        r12d, r12d
0000000000003e84         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003e89         mov        r13, qword [rsp+0xe8+var_78]
0000000000003e8e         mov        r11, qword [rsp+0xe8+var_B8]
0000000000003e93         movzx      edx, byte [rsp+0xe8+var_DB]
0000000000003e98         jmp        loc_38c6

                     loc_3e9d:
0000000000003e9d         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_3620+1718
0000000000003ea2         movzx      eax, byte [rdx]
0000000000003ea5         test       al, al
0000000000003ea7         je         loc_3cdc

0000000000003ead         nop        dword [rax]

                     loc_3eb0:
0000000000003eb0         cmp        r13, r15                                    ; CODE XREF=sub_3620+2212
0000000000003eb3         jbe        loc_3eb9

0000000000003eb5         mov        byte [r14+r15], al

                     loc_3eb9:
0000000000003eb9         add        r15, 0x1                                    ; CODE XREF=sub_3620+2195
0000000000003ebd         movzx      eax, byte [rdx+r15]
0000000000003ec2         test       al, al
0000000000003ec4         jne        loc_3eb0

0000000000003ec6         jmp        loc_3cdc

                     loc_3ecb:
0000000000003ecb         mov        eax, edx                                    ; CODE XREF=sub_3620+682
0000000000003ecd         jmp        loc_3427

                     loc_3ed2:
0000000000003ed2         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_3620+290
0000000000003ed6         cmp        bl, 0x3e
0000000000003ed9         ja         loc_3750

0000000000003edf         movabs     rax, 0x7000a38200000000
0000000000003ee9         bt         rax, rbx
0000000000003eed         jae        loc_3750

0000000000003ef3         cmp        byte [rsp+arg_7], 0x0
0000000000003ef8         jne        loc_40e2

0000000000003efe         cmp        r13, r15
0000000000003f01         jbe        loc_3f08

0000000000003f03         mov        byte [r14+r15], 0x3f

                     loc_3f08:
0000000000003f08         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3620+2273
0000000000003f0c         cmp        r13, rax
0000000000003f0f         jbe        loc_3f17

0000000000003f11         mov        byte [r14+r15+1], 0x22

                     loc_3f17:
0000000000003f17         lea        rax, qword [r15+2]                          ; CODE XREF=sub_3620+2287
0000000000003f1b         cmp        r13, rax
0000000000003f1e         jbe        loc_3f26

0000000000003f20         mov        byte [r14+r15+2], 0x22

                     loc_3f26:
0000000000003f26         lea        rax, qword [r15+3]                          ; CODE XREF=sub_3620+2302
0000000000003f2a         cmp        r13, rax
0000000000003f2d         jbe        loc_3f35

0000000000003f2f         mov        byte [r14+r15+3], 0x3f

                     loc_3f35:
0000000000003f35         add        r15, 0x4                                    ; CODE XREF=sub_3620+2317
0000000000003f39         xor        edx, edx
0000000000003f3b         xor        r12d, r12d
0000000000003f3e         xor        eax, eax
0000000000003f40         mov        rbp, rcx
0000000000003f43         jmp        sub_30d0+56
                        ; endp

                     loc_3f48:
0000000000003f48         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
0000000000003f4a         je         loc_40d8

0000000000003f50         lea        rax, qword [aLibs+29]                       ; 0x69e5
0000000000003f57         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003f5c         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003f61         xor        r12d, r12d
0000000000003f64         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003f6d         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003f72         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000003f77         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003f80         xor        r15d, r15d
0000000000003f83         mov        qword [rsp+0xe8+var_A0], rax
0000000000003f88         jmp        loc_2fb3
0000000000003f8d         align      16

                     loc_3f90:
0000000000003f90         mov        rbp, r11                                    ; CODE XREF=sub_3620+333
0000000000003f93         movzx      eax, byte [rsp+arg_7]
0000000000003f98         jmp        sub_3620+1097
                        ; endp

                     loc_3f9d:
0000000000003f9d         lea        rax, qword [aLibs+27]                       ; 0x69e3, CODE XREF=sub_3620+1410
0000000000003fa4         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003fa9         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003fae         xor        r12d, r12d
0000000000003fb1         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003fba         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003fbf         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003fc4         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003fcd         xor        r15d, r15d
0000000000003fd0         mov        qword [rsp+0xe8+var_A0], rax
0000000000003fd5         jmp        loc_2fb3

                     loc_3fda:
0000000000003fda         mov        eax, edx                                    ; CODE XREF=sub_3620+87

                     loc_3fdc:
0000000000003fdc         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_3620+76, sub_3620+2721
0000000000003fe1         test       rbx, rbx
0000000000003fe4         je         loc_4012

0000000000003fe6         test       al, al
0000000000003fe8         je         loc_4012

0000000000003fea         movzx      ecx, byte [rbx]
0000000000003fed         mov        rax, rbx
0000000000003ff0         test       cl, cl
0000000000003ff2         je         loc_4012

0000000000003ff4         mov        rdx, r15
0000000000003ff7         sub        rax, r15

                     loc_3ffa:
0000000000003ffa         cmp        r13, rdx                                    ; CODE XREF=sub_3620+2541
0000000000003ffd         jbe        loc_4003

0000000000003fff         mov        byte [r14+rdx], cl

                     loc_4003:
0000000000004003         add        rdx, 0x1                                    ; CODE XREF=sub_3620+2525
0000000000004007         movzx      ecx, byte [rax+rdx]
000000000000400b         test       cl, cl
000000000000400d         jne        loc_3ffa

000000000000400f         mov        r15, rdx

                     loc_4012:
0000000000004012         cmp        r13, r15                                    ; CODE XREF=sub_3620+2500, sub_3620+2504, sub_3620+2514
0000000000004015         jbe        loc_3ab9

000000000000401b         mov        byte [r14+r15], 0x0
0000000000004020         jmp        loc_3ab9

                     loc_4025:
0000000000004025         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
000000000000402a         movzx      ebx, byte [rsp+0xe8+var_D9]
000000000000402f         mov        rbp, r11
0000000000004032         sete       al
0000000000004035         mov        byte [rsp+0xe8+var_DB], bl
0000000000004039         jmp        loc_3a69

                     loc_403e:
000000000000403e         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_3620+1664
0000000000004042         mov        rdi, rcx
0000000000004045         call       gettext_quote.part.1                        ; gettext_quote.part.1
000000000000404a         mov        qword [rsp+0xe8+var_80], rax
000000000000404f         jmp        loc_3ca6

                     loc_4054:
0000000000004054         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_3620+1707
0000000000004058         mov        rdi, rcx
000000000000405b         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000004060         mov        qword [rsp+0xe8+var_88], rax
0000000000004065         jmp        loc_3cd1

                     loc_406a:
000000000000406a         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_34c0+16
000000000000406f         mov        rbp, r11
0000000000004072         mov        eax, edx
0000000000004074         mov        byte [rsp+arg_5], bl
0000000000004078         jmp        sub_3620+1097
                        ; endp

                     loc_407d:
000000000000407d         sub        rsp, 0x8                                    ; CODE XREF=sub_3620+98
0000000000004081         mov        r8d, 0x5
0000000000004087         mov        rcx, r11
000000000000408a         push       qword [rsp+0xf0+var_88]
000000000000408e         push       qword [rsp+0xf8+var_80]
0000000000004092         mov        rdi, r14
0000000000004095         push       qword [rsp+0x100+var_C8]
0000000000004099         mov        r9d, dword [rsp+0x108+var_70]
00000000000040a1         mov        rdx, qword [rsp+0x108+var_D8]
00000000000040a6         mov        rsi, qword [rsp+0x108+var_98]
00000000000040ab         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000040b0         add        rsp, 0x20
00000000000040b4         mov        r15, rax
00000000000040b7         jmp        loc_3ab9

                     loc_40bc:
00000000000040bc         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_3620+121
00000000000040c1         jmp        loc_3fdc

                     loc_40c6:
00000000000040c6         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3620+63
00000000000040ce         jmp        loc_3a69

                     loc_40d3:
00000000000040d3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_3620+1197
                        ; endp

                     loc_40d8:
00000000000040d8         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_3620+2346
00000000000040dd         jmp        loc_3b51

                     loc_40e2:
00000000000040e2         mov        rbp, r11                                    ; CODE XREF=sub_3620+2264
00000000000040e5         jmp        sub_3620+1120
                        ; endp

                     loc_40ea:
00000000000040ea         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_3620+1332
00000000000040ef         xor        eax, eax
00000000000040f1         xor        r12d, r12d
00000000000040f4         mov        qword [rsp+0xe8+var_98], 0x0
00000000000040fd         jmp        loc_36a4

                     loc_4102:
0000000000004102         mov        rdx, r13                                    ; CODE XREF=sub_3620+1264
0000000000004105         mov        r13, qword [rsp+arg_48]
000000000000410a         jmp        loc_3702

                     loc_410f:
000000000000410f         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
0000000000004114         align      32                                          ; End of unwind block (FDE at 0x7898)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
0000000000004120         push       r15                                         ; Begin of unwind block (FDE at 0x7910), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
0000000000004122         push       r14
0000000000004124         movsxd     r15, edi
0000000000004127         push       r13
0000000000004129         push       r12
000000000000412b         mov        r14, rdx
000000000000412e         push       rbp
000000000000412f         push       rbx
0000000000004130         mov        rbp, rcx
0000000000004133         sub        rsp, 0x28
0000000000004137         mov        qword [rsp+0x58+var_50], rsi
000000000000413c         call       j___errno_location                          ; __errno_location
0000000000004141         mov        r13, rax
0000000000004144         mov        eax, dword [rax]
0000000000004146         test       r15d, r15d
0000000000004149         mov        rbx, qword [nslots+8]                       ; 0x209080
0000000000004150         mov        dword [rsp+0x58+var_40], eax
0000000000004154         js         loc_42c1

000000000000415a         cmp        dword [nslots], r15d                        ; nslots
0000000000004161         jg         loc_41c5

0000000000004163         cmp        r15d, 0x7fffffff
000000000000416a         je         loc_42c6

0000000000004170         lea        r12d, dword [r15+1]
0000000000004174         lea        rax, qword [slotvec0]                       ; slotvec0
000000000000417b         movsxd     rsi, r12d
000000000000417e         shl        rsi, 0x4
0000000000004182         cmp        rbx, rax
0000000000004185         je         loc_42a0

000000000000418b         mov        rdi, rbx                                    ; argument #1 for method xrealloc
000000000000418e         call       xrealloc                                    ; xrealloc
0000000000004193         mov        rbx, rax
0000000000004196         mov        qword [nslots+8], rax                       ; 0x209080

                     loc_419d:
000000000000419d         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
00000000000041a4         mov        edx, r12d
00000000000041a7         xor        esi, esi                                    ; argument "__c" for method j_memset
00000000000041a9         sub        edx, edi
00000000000041ab         shl        rdi, 0x4
00000000000041af         movsxd     rdx, edx
00000000000041b2         add        rdi, rbx                                    ; argument "__s" for method j_memset
00000000000041b5         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
00000000000041b9         call       j_memset                                    ; memset
00000000000041be         mov        dword [nslots], r12d                        ; nslots

                     loc_41c5:
00000000000041c5         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
00000000000041c8         shl        r15, 0x4
00000000000041cc         sub        rsp, 0x8
00000000000041d0         add        rbx, r15
00000000000041d3         lea        r15, qword [rbp+8]
00000000000041d7         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
00000000000041db         mov        r11, qword [rbx]
00000000000041de         mov        r12, qword [rbx+8]
00000000000041e2         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
00000000000041e5         or         eax, 0x1
00000000000041e8         mov        dword [rsp+0x60+var_3C], eax
00000000000041ec         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
00000000000041ef         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
00000000000041f2         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
00000000000041f5         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
00000000000041f7         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
00000000000041fa         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
00000000000041ff         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
0000000000004202         mov        qword [rsp+0x78+var_48], r11
0000000000004207         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000420c         add        rsp, 0x20
0000000000004210         mov        r11, qword [rsp+0x58+var_48]
0000000000004215         cmp        r11, rax
0000000000004218         ja         loc_4281

000000000000421a         lea        rsi, qword [rax+1]
000000000000421e         lea        rax, qword [slot0]                          ; slot0
0000000000004225         cmp        r12, rax
0000000000004228         mov        qword [rbx], rsi
000000000000422b         je         loc_423f

000000000000422d         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000004230         mov        qword [rsp+0x58+var_48], rsi
0000000000004235         call       j_free                                      ; free
000000000000423a         mov        rsi, qword [rsp+0x58+var_48]

                     loc_423f:
000000000000423f         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
0000000000004242         mov        qword [rsp+0x58+var_48], rsi
0000000000004247         call       xmalloc                                     ; xmalloc
000000000000424c         sub        rsp, 0x8
0000000000004250         mov        qword [rbx+8], rax
0000000000004254         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000004258         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
000000000000425b         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
000000000000425e         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000004261         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000004263         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
0000000000004268         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
000000000000426b         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000004270         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
0000000000004275         mov        r12, rax
0000000000004278         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000427d         add        rsp, 0x20

                     loc_4281:
0000000000004281         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
0000000000004285         mov        dword [r13], eax
0000000000004289         add        rsp, 0x28
000000000000428d         mov        rax, r12
0000000000004290         pop        rbx
0000000000004291         pop        rbp
0000000000004292         pop        r12
0000000000004294         pop        r13
0000000000004296         pop        r14
0000000000004298         pop        r15
000000000000429a         ret
                        ; endp
000000000000429b         align      32

                     loc_42a0:
00000000000042a0         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
00000000000042a2         call       xrealloc                                    ; xrealloc
00000000000042a7         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
00000000000042af         mov        rbx, rax
00000000000042b2         mov        qword [nslots+8], rax                       ; 0x209080
00000000000042b9         movups     xmmword [rax], xmm0
00000000000042bc         jmp        loc_419d

                     loc_42c1:
00000000000042c1         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_42c6:
00000000000042c6         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_42cb:
00000000000042cb         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x7910)
                     clone_quoting_options:
00000000000042d0         push       r12                                         ; Begin of unwind block (FDE at 0x797c)
00000000000042d2         push       rbp
00000000000042d3         push       rbx
00000000000042d4         mov        rbx, rdi
00000000000042d7         call       j___errno_location                          ; __errno_location
00000000000042dc         mov        r12d, dword [rax]
00000000000042df         mov        rbp, rax
00000000000042e2         lea        rax, qword [default_quoting_options]        ; default_quoting_options
00000000000042e9         test       rbx, rbx
00000000000042ec         mov        esi, 0x38                                   ; argument #2 for method xmemdup
00000000000042f1         cmove      rbx, rax
00000000000042f5         mov        rdi, rbx                                    ; argument #1 for method xmemdup
00000000000042f8         call       xmemdup                                     ; xmemdup
00000000000042fd         mov        dword [rbp], r12d
0000000000004301         pop        rbx
0000000000004302         pop        rbp
0000000000004303         pop        r12
0000000000004305         ret
                        ; endp
0000000000004306         align      16                                          ; End of unwind block (FDE at 0x797c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
0000000000004310         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x79a8), default_quoting_options
0000000000004317         test       rdi, rdi
000000000000431a         cmove      rdi, rax
000000000000431e         mov        eax, dword [rdi]
0000000000004320         ret
                        ; endp
0000000000004321         align      16                                          ; End of unwind block (FDE at 0x79a8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
0000000000004330         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x79bc), default_quoting_options
0000000000004337         test       rdi, rdi
000000000000433a         cmove      rdi, rax
000000000000433e         mov        dword [rdi], esi
0000000000004340         ret
                        ; endp
0000000000004341         align      16                                          ; End of unwind block (FDE at 0x79bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
0000000000004350         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x79d0), default_quoting_options
0000000000004357         test       rdi, rdi
000000000000435a         mov        ecx, esi
000000000000435c         cmove      rdi, rax
0000000000004360         mov        eax, esi
0000000000004362         and        ecx, 0x1f
0000000000004365         shr        al, 0x5
0000000000004368         movzx      eax, al
000000000000436b         lea        rdi, qword [rdi+rax*4+8]
0000000000004370         mov        esi, dword [rdi]
0000000000004372         mov        eax, esi
0000000000004374         shr        eax, cl
0000000000004376         xor        edx, eax
0000000000004378         and        eax, 0x1
000000000000437b         and        edx, 0x1
000000000000437e         shl        edx, cl
0000000000004380         xor        edx, esi
0000000000004382         mov        dword [rdi], edx
0000000000004384         ret
                        ; endp
0000000000004385         align      16                                          ; End of unwind block (FDE at 0x79d0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
0000000000004390         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x79e4), default_quoting_options
0000000000004397         test       rdi, rdi
000000000000439a         cmove      rdi, rax
000000000000439e         mov        eax, dword [rdi+4]
00000000000043a1         mov        dword [rdi+4], esi
00000000000043a4         ret
                        ; endp
00000000000043a5         align      16                                          ; End of unwind block (FDE at 0x79e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
00000000000043b0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x79f8), default_quoting_options
00000000000043b7         test       rdi, rdi
00000000000043ba         cmove      rdi, rax
00000000000043be         test       rsi, rsi
00000000000043c1         mov        dword [rdi], 0xa
00000000000043c7         je         loc_43d7

00000000000043c9         test       rdx, rdx
00000000000043cc         je         loc_43d7

00000000000043ce         mov        qword [rdi+0x28], rsi
00000000000043d2         mov        qword [rdi+0x30], rdx
00000000000043d6         ret
                        ; endp

                     loc_43d7:
00000000000043d7         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
00000000000043db         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
00000000000043e0         push       r15                                         ; End of unwind block (FDE at 0x79f8), Begin of unwind block (FDE at 0x7a0c)
00000000000043e2         push       r14
00000000000043e4         lea        rax, qword [default_quoting_options]        ; default_quoting_options
00000000000043eb         push       r13
00000000000043ed         push       r12
00000000000043ef         mov        r13, rdi
00000000000043f2         push       rbp
00000000000043f3         push       rbx
00000000000043f4         mov        rbx, r8
00000000000043f7         mov        r14, rsi
00000000000043fa         mov        r15, rdx
00000000000043fd         sub        rsp, 0x18
0000000000004401         test       r8, r8
0000000000004404         cmove      rbx, rax
0000000000004408         mov        qword [rsp+0x48+var_40], rcx
000000000000440d         call       j___errno_location                          ; __errno_location
0000000000004412         mov        r12d, dword [rax]
0000000000004415         mov        rbp, rax
0000000000004418         lea        rax, qword [rbx+8]
000000000000441c         sub        rsp, 0x8
0000000000004420         mov        r9d, dword [rbx+4]
0000000000004424         push       qword [rbx+0x30]
0000000000004427         mov        r8d, dword [rbx]
000000000000442a         push       qword [rbx+0x28]
000000000000442d         mov        rdx, r15
0000000000004430         push       rax
0000000000004431         mov        rcx, qword [rsp+0x68+var_40]
0000000000004436         mov        rsi, r14
0000000000004439         mov        rdi, r13
000000000000443c         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004441         mov        dword [rbp], r12d
0000000000004445         add        rsp, 0x38
0000000000004449         pop        rbx
000000000000444a         pop        rbp
000000000000444b         pop        r12
000000000000444d         pop        r13
000000000000444f         pop        r14
0000000000004451         pop        r15
0000000000004453         ret
                        ; endp
0000000000004454         align      32                                          ; End of unwind block (FDE at 0x7a0c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
0000000000004460         push       r15                                         ; Begin of unwind block (FDE at 0x7a60), CODE XREF=quotearg_alloc+5
0000000000004462         push       r14
0000000000004464         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000446b         push       r13
000000000000446d         push       r12
000000000000446f         mov        r12, rdx
0000000000004472         push       rbp
0000000000004473         push       rbx
0000000000004474         mov        rbx, rcx
0000000000004477         mov        r14, rdi
000000000000447a         mov        r15, rsi
000000000000447d         sub        rsp, 0x38
0000000000004481         test       rcx, rcx
0000000000004484         cmove      rbx, rax
0000000000004488         xor        ebp, ebp
000000000000448a         call       j___errno_location                          ; __errno_location
000000000000448f         test       r12, r12
0000000000004492         mov        r13, rax
0000000000004495         mov        eax, dword [rax]
0000000000004497         sete       bpl
000000000000449b         or         ebp, dword [rbx+4]
000000000000449e         lea        r10, qword [rbx+8]
00000000000044a2         sub        rsp, 0x8
00000000000044a6         mov        r8d, dword [rbx]
00000000000044a9         mov        rcx, r15
00000000000044ac         mov        dword [rsp+0x70+var_5C], eax
00000000000044b0         push       qword [rbx+0x30]
00000000000044b3         mov        rdx, r14
00000000000044b6         push       qword [rbx+0x28]
00000000000044b9         push       r10
00000000000044bb         xor        esi, esi
00000000000044bd         mov        r9d, ebp
00000000000044c0         xor        edi, edi
00000000000044c2         mov        qword [rsp+0x88+var_48], r10
00000000000044c7         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000044cc         lea        rsi, qword [rax+1]
00000000000044d0         mov        qword [rsp+0x88+var_40], rax
00000000000044d5         add        rsp, 0x20
00000000000044d9         mov        rdi, rsi
00000000000044dc         mov        qword [rsp+0x68+var_50], rsi
00000000000044e1         call       xmalloc                                     ; xmalloc
00000000000044e6         mov        qword [rsp+0x68+var_58], rax
00000000000044eb         sub        rsp, 0x8
00000000000044ef         push       qword [rbx+0x30]
00000000000044f2         push       qword [rbx+0x28]
00000000000044f5         mov        r10, qword [rsp+0x80+var_48]
00000000000044fa         mov        r9d, ebp
00000000000044fd         mov        r8d, dword [rbx]
0000000000004500         mov        rcx, r15
0000000000004503         mov        rdx, r14
0000000000004506         mov        rdi, rax
0000000000004509         push       r10
000000000000450b         mov        rsi, qword [rsp+0x88+var_50]
0000000000004510         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004515         mov        eax, dword [rsp+0x88+var_5C]
0000000000004519         add        rsp, 0x20
000000000000451d         test       r12, r12
0000000000004520         mov        dword [r13], eax
0000000000004524         je         loc_452f

0000000000004526         mov        r11, qword [rsp+0x68+var_40]
000000000000452b         mov        qword [r12], r11

                     loc_452f:
000000000000452f         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
0000000000004534         add        rsp, 0x38
0000000000004538         pop        rbx
0000000000004539         pop        rbp
000000000000453a         pop        r12
000000000000453c         pop        r13
000000000000453e         pop        r14
0000000000004540         pop        r15
0000000000004542         ret
                        ; endp
0000000000004543         align      16                                          ; End of unwind block (FDE at 0x7a60)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
0000000000004550         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x7acc)
0000000000004553         xor        edx, edx
0000000000004555         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
000000000000455a         align      32                                          ; End of unwind block (FDE at 0x7acc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
0000000000004560         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0x7ae0), nslots
0000000000004566         push       r12
0000000000004568         mov        r12, qword [nslots+8]                       ; 0x209080
000000000000456f         push       rbp
0000000000004570         push       rbx
0000000000004571         cmp        eax, 0x1
0000000000004574         jle        loc_45a1

0000000000004576         sub        eax, 0x2
0000000000004579         lea        rbx, qword [r12+0x18]
000000000000457e         shl        rax, 0x4
0000000000004582         lea        rbp, qword [r12+rax+0x28]
0000000000004587         nop        word [rax+rax]

                     loc_4590:
0000000000004590         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
0000000000004593         add        rbx, 0x10
0000000000004597         call       j_free                                      ; free
000000000000459c         cmp        rbx, rbp
000000000000459f         jne        loc_4590

                     loc_45a1:
00000000000045a1         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
00000000000045a6         lea        rbx, qword [slot0]                          ; slot0
00000000000045ad         cmp        rdi, rbx
00000000000045b0         je         loc_45c9

00000000000045b2         call       j_free                                      ; free
00000000000045b7         mov        qword [slotvec0], 0x100                     ; slotvec0
00000000000045c2         mov        qword [slotvec0+8], rbx                     ; 0x209098

                     loc_45c9:
00000000000045c9         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
00000000000045d0         cmp        r12, rbx
00000000000045d3         je         loc_45e4

00000000000045d5         mov        rdi, r12                                    ; argument "__ptr" for method j_free
00000000000045d8         call       j_free                                      ; free
00000000000045dd         mov        qword [nslots+8], rbx                       ; 0x209080

                     loc_45e4:
00000000000045e4         pop        rbx                                         ; CODE XREF=quotearg_free+115
00000000000045e5         mov        dword [nslots], 0x1                         ; nslots
00000000000045ef         pop        rbp
00000000000045f0         pop        r12
00000000000045f2         ret
                        ; endp
00000000000045f3         align      512                                         ; End of unwind block (FDE at 0x7ae0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
0000000000004600         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7b0c), default_quoting_options
0000000000004607         mov        rdx, 0xffffffffffffffff
000000000000460e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004613         align      32                                          ; End of unwind block (FDE at 0x7b0c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
0000000000004620         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7b20), default_quoting_options
0000000000004627         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000462c         align      16                                          ; End of unwind block (FDE at 0x7b20)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
0000000000004630         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7b34), default_quoting_options
0000000000004637         mov        rsi, rdi
000000000000463a         mov        rdx, 0xffffffffffffffff
0000000000004641         xor        edi, edi
0000000000004643         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004648         align      16                                          ; End of unwind block (FDE at 0x7b34)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
0000000000004650         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7b48), default_quoting_options
0000000000004657         mov        rdx, rsi
000000000000465a         mov        rsi, rdi
000000000000465d         xor        edi, edi
000000000000465f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004664         align      16                                          ; End of unwind block (FDE at 0x7b48)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
0000000000004670         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x7b5c)
0000000000004674         mov        rax, rdx
0000000000004677         mov        rdx, qword [fs:0x28]
0000000000004680         mov        qword [rsp+0x48+var_10], rdx
0000000000004685         xor        edx, edx
0000000000004687         cmp        esi, 0xa
000000000000468a         je         loc_46f4

000000000000468c         mov        dword [rsp+0x48+var_48], esi
000000000000468f         mov        rcx, rsp
0000000000004692         mov        rdx, 0xffffffffffffffff
0000000000004699         mov        rsi, rax
000000000000469c         mov        qword [rsp+0x48+var_44], 0x0
00000000000046a5         mov        qword [rsp+0x48+var_3C], 0x0
00000000000046ae         mov        qword [rsp+0x48+var_34], 0x0
00000000000046b7         mov        qword [rsp+0x48+var_2C], 0x0
00000000000046c0         mov        qword [rsp+0x48+var_24], 0x0
00000000000046c9         mov        qword [rsp+0x48+var_1C], 0x0
00000000000046d2         mov        dword [rsp+0x48+var_14], 0x0
00000000000046da         call       quotearg_n_options                          ; quotearg_n_options
00000000000046df         mov        rcx, qword [rsp+0x48+var_10]
00000000000046e4         xor        rcx, qword [fs:0x28]
00000000000046ed         jne        loc_46f9

00000000000046ef         add        rsp, 0x48
00000000000046f3         ret
                        ; endp

                     loc_46f4:
00000000000046f4         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_46f9:
00000000000046f9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
00000000000046fe         align      256                                         ; End of unwind block (FDE at 0x7b5c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
0000000000004700         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x7b78), CODE XREF=quotearg_style_mem+10
0000000000004704         mov        rax, rdx
0000000000004707         mov        rdx, rcx
000000000000470a         mov        rcx, qword [fs:0x28]
0000000000004713         mov        qword [rsp+0x48+var_10], rcx
0000000000004718         xor        ecx, ecx
000000000000471a         cmp        esi, 0xa
000000000000471d         je         loc_4780

000000000000471f         mov        dword [rsp+0x48+var_48], esi
0000000000004722         mov        rcx, rsp
0000000000004725         mov        rsi, rax
0000000000004728         mov        qword [rsp+0x48+var_44], 0x0
0000000000004731         mov        qword [rsp+0x48+var_3C], 0x0
000000000000473a         mov        qword [rsp+0x48+var_34], 0x0
0000000000004743         mov        qword [rsp+0x48+var_2C], 0x0
000000000000474c         mov        qword [rsp+0x48+var_24], 0x0
0000000000004755         mov        qword [rsp+0x48+var_1C], 0x0
000000000000475e         mov        dword [rsp+0x48+var_14], 0x0
0000000000004766         call       quotearg_n_options                          ; quotearg_n_options
000000000000476b         mov        rdx, qword [rsp+0x48+var_10]
0000000000004770         xor        rdx, qword [fs:0x28]
0000000000004779         jne        loc_4785

000000000000477b         add        rsp, 0x48
000000000000477f         ret
                        ; endp

                     loc_4780:
0000000000004780         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_4785:
0000000000004785         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
000000000000478a         align      16                                          ; End of unwind block (FDE at 0x7b78)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
0000000000004790         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x7b94)
0000000000004793         mov        esi, edi
0000000000004795         xor        edi, edi
0000000000004797         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
000000000000479c         align      32                                          ; End of unwind block (FDE at 0x7b94)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
00000000000047a0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x7ba8)
00000000000047a3         mov        rdx, rsi
00000000000047a6         mov        esi, edi
00000000000047a8         xor        edi, edi
00000000000047aa         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
00000000000047af         align      16                                          ; End of unwind block (FDE at 0x7ba8)

                     quotearg_char_mem:
00000000000047b0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x7bbc), CODE XREF=quotearg_char+11
00000000000047b4         mov        ecx, edx
00000000000047b6         mov        rax, qword [fs:0x28]
00000000000047bf         mov        qword [rsp+0x48+var_10], rax
00000000000047c4         xor        eax, eax
00000000000047c6         mov        rax, qword [qword_209290]                   ; qword_209290
00000000000047cd         mov        r8, rsp
00000000000047d0         and        ecx, 0x1f
00000000000047d3         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
00000000000047db         mov        qword [rsp+0x48+var_18], rax
00000000000047e0         mov        eax, edx
00000000000047e2         movaps     xmmword [rsp+0x48+var_48], xmm0
00000000000047e6         shr        al, 0x5
00000000000047e9         movzx      eax, al
00000000000047ec         lea        r9, qword [r8+rax*4+8]
00000000000047f1         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x209270
00000000000047f9         movaps     xmmword [rsp+0x48+var_38], xmm0
00000000000047fe         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x209280
0000000000004806         movaps     xmmword [rsp+0x48+var_28], xmm0
000000000000480b         mov        edx, dword [r9]
000000000000480e         mov        eax, edx
0000000000004810         shr        eax, cl
0000000000004812         not        eax
0000000000004814         and        eax, 0x1
0000000000004817         shl        eax, cl
0000000000004819         mov        rcx, r8
000000000000481c         xor        eax, edx
000000000000481e         mov        rdx, rsi
0000000000004821         mov        rsi, rdi
0000000000004824         mov        dword [r9], eax
0000000000004827         xor        edi, edi
0000000000004829         call       quotearg_n_options                          ; quotearg_n_options
000000000000482e         mov        rsi, qword [rsp+0x48+var_10]
0000000000004833         xor        rsi, qword [fs:0x28]
000000000000483c         jne        loc_4843

000000000000483e         add        rsp, 0x48
0000000000004842         ret
                        ; endp

                     loc_4843:
0000000000004843         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
0000000000004848         align      16                                          ; End of unwind block (FDE at 0x7bbc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
0000000000004850         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0x7bd8)
0000000000004854         mov        rsi, 0xffffffffffffffff
000000000000485b         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
0000000000004860         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0x7bd8), Begin of unwind block (FDE at 0x7bec), CODE XREF=close_stdout+101
0000000000004865         mov        rsi, 0xffffffffffffffff
000000000000486c         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000004871         align      128                                         ; End of unwind block (FDE at 0x7bec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
0000000000004880         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0x7c00)
0000000000004885         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
000000000000488a         align      16                                          ; End of unwind block (FDE at 0x7c00)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
0000000000004890         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x7c14)
0000000000004894         mov        rax, rdx
0000000000004897         mov        rdx, qword [fs:0x28]
00000000000048a0         mov        qword [rsp+0x48+var_10], rdx
00000000000048a5         xor        edx, edx
00000000000048a7         cmp        esi, 0xa
00000000000048aa         je         loc_4914

00000000000048ac         mov        dword [rsp+0x48+var_48], esi
00000000000048af         mov        rcx, rsp
00000000000048b2         mov        rdx, 0xffffffffffffffff
00000000000048b9         mov        rsi, rax
00000000000048bc         mov        qword [rsp+0x48+var_44], 0x0
00000000000048c5         mov        qword [rsp+0x48+var_3C], 0x4000000
00000000000048ce         mov        qword [rsp+0x48+var_34], 0x0
00000000000048d7         mov        qword [rsp+0x48+var_2C], 0x0
00000000000048e0         mov        qword [rsp+0x48+var_24], 0x0
00000000000048e9         mov        qword [rsp+0x48+var_1C], 0x0
00000000000048f2         mov        dword [rsp+0x48+var_14], 0x0
00000000000048fa         call       quotearg_n_options                          ; quotearg_n_options
00000000000048ff         mov        rcx, qword [rsp+0x48+var_10]
0000000000004904         xor        rcx, qword [fs:0x28]
000000000000490d         jne        loc_4919

000000000000490f         add        rsp, 0x48
0000000000004913         ret
                        ; endp

                     loc_4914:
0000000000004914         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_4919:
0000000000004919         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
000000000000491e         align      32                                          ; End of unwind block (FDE at 0x7c14)

                     quotearg_n_custom_mem:
0000000000004920         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x7c30), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
0000000000004924         mov        r9, rcx
0000000000004927         mov        rcx, qword [qword_209290]                   ; qword_209290
000000000000492e         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000004936         mov        rax, qword [fs:0x28]
000000000000493f         mov        qword [rsp+0x48+var_10], rax
0000000000004944         xor        eax, eax
0000000000004946         movaps     xmmword [rsp+0x48+var_48], xmm0
000000000000494a         test       rsi, rsi
000000000000494d         mov        qword [rsp+0x48+var_18], rcx
0000000000004952         mov        dword [rsp+0x48+var_48], 0xa
0000000000004959         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x209270
0000000000004961         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000004966         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x209280
000000000000496e         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000004973         je         loc_49a7

0000000000004975         test       rdx, rdx
0000000000004978         je         loc_49a7

000000000000497a         mov        qword [rsp+0x48+var_20], rsi
000000000000497f         mov        qword [rsp+0x48+var_18], rdx
0000000000004984         mov        rcx, rsp
0000000000004987         mov        rdx, r8
000000000000498a         mov        rsi, r9
000000000000498d         call       quotearg_n_options                          ; quotearg_n_options
0000000000004992         mov        rdi, qword [rsp+0x48+var_10]
0000000000004997         xor        rdi, qword [fs:0x28]
00000000000049a0         jne        loc_49ac

00000000000049a2         add        rsp, 0x48
00000000000049a6         ret
                        ; endp

                     loc_49a7:
00000000000049a7         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_49ac:
00000000000049ac         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
00000000000049b1         align      64                                          ; End of unwind block (FDE at 0x7c30)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom:
00000000000049c0         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0x7c4c)
00000000000049c7         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
00000000000049cc         align      16                                          ; End of unwind block (FDE at 0x7c4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
00000000000049d0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x7c60)
00000000000049d3         mov        r8, 0xffffffffffffffff
00000000000049da         mov        rdx, rsi
00000000000049dd         mov        rsi, rdi
00000000000049e0         xor        edi, edi
00000000000049e2         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
00000000000049e7         align      16                                          ; End of unwind block (FDE at 0x7c60)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
00000000000049f0         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0x7c74)
00000000000049f3         mov        rcx, rdx
00000000000049f6         mov        rdx, rsi
00000000000049f9         mov        rsi, rdi
00000000000049fc         xor        edi, edi
00000000000049fe         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004a03         align      16                                          ; End of unwind block (FDE at 0x7c74)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
0000000000004a10         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x7c88), quote_quoting_options
0000000000004a17         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004a1c         align      32                                          ; End of unwind block (FDE at 0x7c88)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
0000000000004a20         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x7c9c), quote_quoting_options
0000000000004a27         mov        rdx, rsi
0000000000004a2a         mov        rsi, rdi
0000000000004a2d         xor        edi, edi
0000000000004a2f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004a34         align      64                                          ; End of unwind block (FDE at 0x7c9c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
0000000000004a40         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x7cb0), quote_quoting_options
0000000000004a47         mov        rdx, 0xffffffffffffffff
0000000000004a4e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004a53         align      32                                          ; End of unwind block (FDE at 0x7cb0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
0000000000004a60         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x7cc4), quote_quoting_options, CODE XREF=main+492, print_stuff+1331, print_group_list+416
0000000000004a67         mov        rsi, rdi
0000000000004a6a         mov        rdx, 0xffffffffffffffff
0000000000004a71         xor        edi, edi
0000000000004a73         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004a78         align      128                                         ; End of unwind block (FDE at 0x7cc4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_58: int8_t, -88
        ;    var_60: int64_t, -96
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136


                     parse_with_separator:
0000000000004a80         push       r15                                         ; Begin of unwind block (FDE at 0x7cdc), CODE XREF=parse_user_spec+69, parse_user_spec+133, parse_user_spec+189
0000000000004a82         push       r14
0000000000004a84         mov        r10, rsi
0000000000004a87         push       r13
0000000000004a89         push       r12
0000000000004a8b         mov        r12, rcx
0000000000004a8e         push       rbp
0000000000004a8f         push       rbx
0000000000004a90         mov        r13, r8
0000000000004a93         mov        r14, r9
0000000000004a96         mov        r15d, 0xffffffff
0000000000004a9c         sub        rsp, 0x58
0000000000004aa0         mov        eax, dword [rdx]
0000000000004aa2         mov        rcx, qword [fs:0x28]
0000000000004aab         mov        qword [rsp+0x88+var_40], rcx
0000000000004ab0         xor        ecx, ecx
0000000000004ab2         test       r12, r12
0000000000004ab5         mov        qword [rsp+0x88+var_78], rdx
0000000000004aba         mov        dword [rsp+0x88+var_70], eax
0000000000004abe         je         loc_4ac4

0000000000004ac0         mov        r15d, dword [r12]

                     loc_4ac4:
0000000000004ac4         test       r13, r13                                    ; CODE XREF=parse_with_separator+62
0000000000004ac7         je         loc_4ad1

0000000000004ac9         mov        qword [r13], 0x0

                     loc_4ad1:
0000000000004ad1         test       r14, r14                                    ; CODE XREF=parse_with_separator+71
0000000000004ad4         je         loc_4add

0000000000004ad6         mov        qword [r14], 0x0

                     loc_4add:
0000000000004add         test       r10, r10                                    ; CODE XREF=parse_with_separator+84
0000000000004ae0         je         loc_4c78

0000000000004ae6         mov        rbx, r10
0000000000004ae9         sub        rbx, rdi
0000000000004aec         jne        loc_4bc0

0000000000004af2         cmp        byte [r10+1], 0x0
0000000000004af7         je         loc_4d08

0000000000004afd         add        r10, 0x1
0000000000004b01         mov        qword [rsp+0x88+var_88], 0x0
0000000000004b09         setne      byte [rsp+0x88+var_6A]
0000000000004b0e         mov        qword [rsp+0x88+var_80], r10
0000000000004b13         xor        ebp, ebp
0000000000004b15         xor        ebx, ebx

                     loc_4b17:
0000000000004b17         cmp        byte [rsp+0x88+var_6A], 0x0                 ; CODE XREF=parse_with_separator+452, parse_with_separator+496, parse_with_separator+898, parse_with_separator+964
0000000000004b1c         je         loc_4e10

0000000000004b22         mov        rax, qword [rsp+0x88+var_80]
0000000000004b27         cmp        byte [rax], 0x2b
0000000000004b2a         je         loc_4ca0

0000000000004b30         mov        rdi, qword [rsp+0x88+var_80]                ; argument "__name" for method j_getgrnam
0000000000004b35         call       j_getgrnam                                  ; getgrnam
0000000000004b3a         test       rax, rax
0000000000004b3d         je         loc_4ca0

0000000000004b43         mov        r15d, dword [rax+0x10]

                     loc_4b47:
0000000000004b47         call       j_endgrent                                  ; endgrent, CODE XREF=parse_with_separator+680
0000000000004b4c         mov        rdi, qword [rsp+0x88+var_80]
0000000000004b51         call       xstrdup                                     ; xstrdup
0000000000004b56         mov        rbx, rax

                     loc_4b59:
0000000000004b59         mov        r10, rbp                                    ; CODE XREF=parse_with_separator+923

                     loc_4b5c:
0000000000004b5c         mov        rax, qword [rsp+0x88+var_78]                ; CODE XREF=parse_with_separator+509, parse_with_separator+653
0000000000004b61         mov        esi, dword [rsp+0x88+var_70]
0000000000004b65         test       r12, r12
0000000000004b68         mov        dword [rax], esi
0000000000004b6a         je         loc_4b70

0000000000004b6c         mov        dword [r12], r15d

                     loc_4b70:
0000000000004b70         test       r13, r13                                    ; CODE XREF=parse_with_separator+234
0000000000004b73         je         loc_4b7c

0000000000004b75         mov        qword [r13], r10
0000000000004b79         xor        r10d, r10d

                     loc_4b7c:
0000000000004b7c         test       r14, r14                                    ; CODE XREF=parse_with_separator+243
0000000000004b7f         je         loc_4b86

0000000000004b81         mov        qword [r14], rbx
0000000000004b84         xor        ebx, ebx

                     loc_4b86:
0000000000004b86         mov        rdi, r10                                    ; argument "__ptr" for method j_free, CODE XREF=parse_with_separator+255
0000000000004b89         call       j_free                                      ; free
0000000000004b8e         mov        rdi, rbx                                    ; argument "__ptr" for method j_free
0000000000004b91         call       j_free                                      ; free
0000000000004b96         xor        eax, eax

                     loc_4b98:
0000000000004b98         mov        rdx, qword [rsp+0x88+var_40]                ; CODE XREF=parse_with_separator+638
0000000000004b9d         xor        rdx, qword [fs:0x28]
0000000000004ba6         jne        loc_4e35

0000000000004bac         add        rsp, 0x58
0000000000004bb0         pop        rbx
0000000000004bb1         pop        rbp
0000000000004bb2         pop        r12
0000000000004bb4         pop        r13
0000000000004bb6         pop        r14
0000000000004bb8         pop        r15
0000000000004bba         ret
                        ; endp
0000000000004bbb         align      64

                     loc_4bc0:
0000000000004bc0         lea        rsi, qword [rbx+1]                          ; CODE XREF=parse_with_separator+108
0000000000004bc4         mov        qword [rsp+0x88+var_88], r10
0000000000004bc8         call       xmemdup                                     ; xmemdup
0000000000004bcd         mov        r10, qword [rsp+0x88+var_88]
0000000000004bd1         mov        byte [rax+rbx], 0x0
0000000000004bd5         mov        rbp, rax
0000000000004bd8         cmp        byte [r10+1], 0x0
0000000000004bdd         jne        loc_4d30

                     loc_4be3:
0000000000004be3         test       rbp, rbp                                    ; CODE XREF=parse_with_separator+531
0000000000004be6         je         loc_4d08

0000000000004bec         mov        byte [rsp+0x88+var_6A], 0x0
0000000000004bf1         mov        eax, 0x1
0000000000004bf6         mov        qword [rsp+0x88+var_80], 0x0

                     loc_4bff:
0000000000004bff         test       r10, r10                                    ; CODE XREF=parse_with_separator+720
0000000000004c02         setne      r9b
0000000000004c06         and        r9d, eax
0000000000004c09         cmp        byte [rbp], 0x2b
0000000000004c0d         je         loc_4c50

0000000000004c0f         mov        rdi, rbp                                    ; argument "__name" for method j_getpwnam
0000000000004c12         mov        byte [rsp+0x88+var_88], r9b
0000000000004c16         call       j_getpwnam                                  ; getpwnam
0000000000004c1b         test       rax, rax
0000000000004c1e         movzx      r9d, byte [rsp+0x88+var_88]
0000000000004c23         je         loc_4c50

0000000000004c25         mov        ecx, dword [rax+0x10]
0000000000004c28         xor        ebx, ebx
0000000000004c2a         test       r9b, r9b
0000000000004c2d         mov        qword [rsp+0x88+var_88], 0x0
0000000000004c35         mov        dword [rsp+0x88+var_70], ecx
0000000000004c39         jne        loc_4d58

                     loc_4c3f:
0000000000004c3f         call       j_endpwent                                  ; endpwent, CODE XREF=parse_with_separator+773
0000000000004c44         jmp        loc_4b17
0000000000004c49         align      16

                     loc_4c50:
0000000000004c50         test       r9b, r9b                                    ; CODE XREF=parse_with_separator+397, parse_with_separator+419
0000000000004c53         je         loc_4d90

0000000000004c59         lea        rax, qword [aInvalidSpec]                   ; "invalid spec"
0000000000004c60         mov        byte [rsp+0x88+var_6A], 0x0
0000000000004c65         xor        ebx, ebx
0000000000004c67         mov        qword [rsp+0x88+var_88], rax
0000000000004c6b         call       j_endpwent                                  ; endpwent
0000000000004c70         jmp        loc_4b17
0000000000004c75         align      8

                     loc_4c78:
0000000000004c78         xor        ebx, ebx                                    ; CODE XREF=parse_with_separator+96
0000000000004c7a         cmp        byte [rdi], 0x0
0000000000004c7d         je         loc_4b5c

0000000000004c83         mov        qword [rsp+0x88+var_88], r10
0000000000004c87         call       xstrdup                                     ; xstrdup
0000000000004c8c         mov        r10, qword [rsp+0x88+var_88]
0000000000004c90         mov        rbp, rax
0000000000004c93         jmp        loc_4be3
0000000000004c98         align      32

                     loc_4ca0:
0000000000004ca0         mov        rdi, qword [rsp+0x88+var_80]                ; CODE XREF=parse_with_separator+170, parse_with_separator+189
0000000000004ca5         lea        rcx, qword [rsp+0x88+var_60]
0000000000004caa         lea        r8, qword [aWrittenBySSAnd+27]              ; 0x6f29
0000000000004cb1         xor        esi, esi
0000000000004cb3         mov        edx, 0xa
0000000000004cb8         call       xstrtoul                                    ; xstrtoul
0000000000004cbd         test       eax, eax
0000000000004cbf         je         loc_4d18

                     loc_4cc1:
0000000000004cc1         call       j_endgrent                                  ; endgrent, CODE XREF=parse_with_separator+686
0000000000004cc6         mov        rdi, qword [rsp+0x88+var_80]
0000000000004ccb         call       xstrdup                                     ; xstrdup
0000000000004cd0         mov        rbx, rax
0000000000004cd3         lea        rax, qword [aInvalidGroup]                  ; "invalid group"
0000000000004cda         mov        qword [rsp+0x88+var_88], rax

                     loc_4cde:
0000000000004cde         mov        rdi, rbp                                    ; argument "__ptr" for method j_free, CODE XREF=parse_with_separator+917
0000000000004ce1         call       j_free                                      ; free
0000000000004ce6         mov        rdi, rbx                                    ; argument "__ptr" for method j_free
0000000000004ce9         call       j_free                                      ; free
0000000000004cee         mov        rsi, qword [rsp+0x88+var_88]                ; argument "msgid" for method j_dcgettext
0000000000004cf2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004cf7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004cf9         call       j_dcgettext                                 ; dcgettext
0000000000004cfe         jmp        loc_4b98
0000000000004d03         align      8

                     loc_4d08:
0000000000004d08         xor        r10d, r10d                                  ; CODE XREF=parse_with_separator+119, parse_with_separator+358
0000000000004d0b         xor        ebx, ebx
0000000000004d0d         jmp        loc_4b5c
0000000000004d12         align      8

                     loc_4d18:
0000000000004d18         mov        rax, qword [rsp+0x88+var_60]                ; CODE XREF=parse_with_separator+575
0000000000004d1d         mov        edx, 0xfffffffe
0000000000004d22         cmp        rax, rdx
0000000000004d25         mov        r15d, eax
0000000000004d28         jbe        loc_4b47

0000000000004d2e         jmp        loc_4cc1

                     loc_4d30:
0000000000004d30         mov        rax, r10                                    ; CODE XREF=parse_with_separator+349
0000000000004d33         add        rax, 0x1
0000000000004d37         setne      byte [rsp+0x88+var_6A]
0000000000004d3c         test       rbp, rbp
0000000000004d3f         mov        qword [rsp+0x88+var_80], rax
0000000000004d44         je         loc_4e3a

0000000000004d4a         test       rax, rax
0000000000004d4d         sete       al
0000000000004d50         jmp        loc_4bff
0000000000004d55         align      8

                     loc_4d58:
0000000000004d58         mov        r15d, dword [rax+0x14]                      ; CODE XREF=parse_with_separator+441
0000000000004d5c         mov        edi, r15d                                   ; argument "__gid" for method j_getgrgid
0000000000004d5f         call       j_getgrgid                                  ; getgrgid
0000000000004d64         test       rax, rax
0000000000004d67         je         loc_4e20

0000000000004d6d         mov        rdi, qword [rax]

                     loc_4d70:
0000000000004d70         call       xstrdup                                     ; xstrdup, CODE XREF=parse_with_separator+944
0000000000004d75         mov        rbx, rax
0000000000004d78         call       j_endgrent                                  ; endgrent
0000000000004d7d         mov        qword [rsp+0x88+var_88], 0x0
0000000000004d85         jmp        loc_4c3f
0000000000004d8a         align      16

                     loc_4d90:
0000000000004d90         lea        rcx, qword [rsp+0x88+var_60]                ; CODE XREF=parse_with_separator+467
0000000000004d95         lea        r8, qword [aWrittenBySSAnd+27]              ; 0x6f29
0000000000004d9c         xor        esi, esi
0000000000004d9e         mov        edx, 0xa
0000000000004da3         mov        rdi, rbp
0000000000004da6         mov        byte [rsp+0x88+var_69], r9b
0000000000004dab         call       xstrtoul                                    ; xstrtoul
0000000000004db0         lea        rsi, qword [aInvalidUser]                   ; "invalid user"
0000000000004db7         test       eax, eax
0000000000004db9         movzx      r9d, byte [rsp+0x88+var_69]
0000000000004dbf         mov        qword [rsp+0x88+var_88], rsi
0000000000004dc3         jne        loc_4df6

0000000000004dc5         mov        rax, qword [rsp+0x88+var_60]
0000000000004dca         movzx      ecx, byte [rsp+0x88+var_6A]
0000000000004dcf         mov        edx, 0xfffffffe
0000000000004dd4         cmp        rax, rdx
0000000000004dd7         cmova      ecx, r9d
0000000000004ddb         mov        r9d, ecx
0000000000004dde         mov        ecx, dword [rsp+0x88+var_70]
0000000000004de2         cmovbe     ecx, eax
0000000000004de5         mov        eax, 0x0
0000000000004dea         cmova      rax, rsi
0000000000004dee         mov        dword [rsp+0x88+var_70], ecx
0000000000004df2         mov        qword [rsp+0x88+var_88], rax

                     loc_4df6:
0000000000004df6         mov        byte [rsp+0x88+var_6A], r9b                 ; CODE XREF=parse_with_separator+835
0000000000004dfb         xor        ebx, ebx
0000000000004dfd         call       j_endpwent                                  ; endpwent
0000000000004e02         jmp        loc_4b17
0000000000004e07         align      16

                     loc_4e10:
0000000000004e10         cmp        qword [rsp+0x88+var_88], 0x0                ; CODE XREF=parse_with_separator+156
0000000000004e15         jne        loc_4cde

0000000000004e1b         jmp        loc_4b59

                     loc_4e20:
0000000000004e20         lea        rsi, qword [rsp+0x88+var_58]                ; CODE XREF=parse_with_separator+743
0000000000004e25         mov        edi, r15d
0000000000004e28         call       umaxtostr                                   ; umaxtostr
0000000000004e2d         mov        rdi, rax
0000000000004e30         jmp        loc_4d70

                     loc_4e35:
0000000000004e35         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=parse_with_separator+294
                        ; endp

                     loc_4e3a:
0000000000004e3a         xor        ebx, ebx                                    ; CODE XREF=parse_with_separator+708
0000000000004e3c         mov        qword [rsp+0x88+var_88], 0x0
0000000000004e44         jmp        loc_4b17
0000000000004e49         align      16                                          ; End of unwind block (FDE at 0x7cdc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     parse_user_spec:
0000000000004e50         test       rdx, rdx                                    ; Begin of unwind block (FDE at 0x7d2c), CODE XREF=main+596
0000000000004e53         je         loc_4f00

0000000000004e59         push       r15
0000000000004e5b         push       r14
0000000000004e5d         mov        r14, rsi
0000000000004e60         push       r13
0000000000004e62         push       r12
0000000000004e64         mov        r13, r8
0000000000004e67         push       rbp
0000000000004e68         push       rbx
0000000000004e69         mov        r12, rcx
0000000000004e6c         mov        rbp, rdx
0000000000004e6f         mov        rbx, rdi
0000000000004e72         mov        esi, 0x3a                                   ; argument "__c" for method j_strchr
0000000000004e77         sub        rsp, 0x18
0000000000004e7b         call       j_strchr                                    ; strchr
0000000000004e80         mov        r9, r13
0000000000004e83         mov        r15, rax
0000000000004e86         mov        r8, r12
0000000000004e89         mov        rcx, rbp
0000000000004e8c         mov        rdx, r14
0000000000004e8f         mov        rsi, rax
0000000000004e92         mov        rdi, rbx
0000000000004e95         call       parse_with_separator                        ; parse_with_separator
0000000000004e9a         test       r15, r15
0000000000004e9d         mov        r10, rax
0000000000004ea0         jne        loc_4ee4

0000000000004ea2         test       rax, rax
0000000000004ea5         mov        qword [rsp+0x48+var_40], rax
0000000000004eaa         je         loc_4f18

0000000000004eac         mov        esi, 0x2e                                   ; argument "__c" for method j_strchr
0000000000004eb1         mov        rdi, rbx                                    ; argument "__s" for method j_strchr
0000000000004eb4         call       j_strchr                                    ; strchr
0000000000004eb9         test       rax, rax
0000000000004ebc         mov        r10, qword [rsp+0x48+var_40]
0000000000004ec1         je         loc_4ee4

0000000000004ec3         mov        r9, r13
0000000000004ec6         mov        r8, r12
0000000000004ec9         mov        rcx, rbp
0000000000004ecc         mov        rdx, r14
0000000000004ecf         mov        rsi, rax
0000000000004ed2         mov        rdi, rbx
0000000000004ed5         call       parse_with_separator                        ; parse_with_separator
0000000000004eda         test       rax, rax
0000000000004edd         mov        r10, qword [rsp+0x48+var_40]
0000000000004ee2         je         loc_4f18

                     loc_4ee4:
0000000000004ee4         add        rsp, 0x18                                   ; CODE XREF=parse_user_spec+80, parse_user_spec+113, parse_user_spec+203
0000000000004ee8         mov        rax, r10
0000000000004eeb         pop        rbx
0000000000004eec         pop        rbp
0000000000004eed         pop        r12
0000000000004eef         pop        r13
0000000000004ef1         pop        r14
0000000000004ef3         pop        r15
0000000000004ef5         ret
                        ; endp
0000000000004ef6         align      256

                     loc_4f00:
0000000000004f00         mov        r9, r8                                      ; CODE XREF=parse_user_spec+3
0000000000004f03         mov        rdx, rsi
0000000000004f06         mov        r8, rcx
0000000000004f09         xor        esi, esi
0000000000004f0b         xor        ecx, ecx
0000000000004f0d         jmp        parse_with_separator                        ; parse_with_separator
                        ; endp
0000000000004f12         align      8

                     loc_4f18:
0000000000004f18         xor        r10d, r10d                                  ; CODE XREF=parse_user_spec+90, parse_user_spec+146
0000000000004f1b         jmp        loc_4ee4
0000000000004f1d         align      32                                          ; End of unwind block (FDE at 0x7d2c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
0000000000004f20         push       r15                                         ; Begin of unwind block (FDE at 0x7d8c), CODE XREF=version_etc_va+75, version_etc+161
0000000000004f22         push       r14
0000000000004f24         push       r13
0000000000004f26         push       r12
0000000000004f28         mov        r12, r9
0000000000004f2b         push       rbp
0000000000004f2c         push       rbx
0000000000004f2d         mov        rbp, rdi
0000000000004f30         mov        rbx, r8
0000000000004f33         sub        rsp, 0x28
0000000000004f37         test       rsi, rsi
0000000000004f3a         je         loc_5058

0000000000004f40         mov        r8, rdx
0000000000004f43         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
0000000000004f4a         mov        r9, rcx
0000000000004f4d         xor        eax, eax
0000000000004f4f         mov        rcx, rsi
0000000000004f52         mov        esi, 0x1
0000000000004f57         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_4f5c:
0000000000004f5c         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0x6ee3, CODE XREF=version_etc_arn+337
0000000000004f63         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004f65         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004f6a         call       j_dcgettext                                 ; dcgettext
0000000000004f6f         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000004f76         mov        rcx, rax
0000000000004f79         mov        r8d, 0x7e3
0000000000004f7f         mov        esi, 0x1
0000000000004f84         mov        rdi, rbp
0000000000004f87         xor        eax, eax
0000000000004f89         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004f8e         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000004f95         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004f97         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004f9c         call       j_dcgettext                                 ; dcgettext
0000000000004fa1         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004fa4         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004fa7         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004fac         cmp        r12, 0x9
0000000000004fb0         ja         loc_52f0

0000000000004fb6         lea        rdx, qword [switch_table_71cc]              ; switch_table_71cc
0000000000004fbd         movsxd     rax, dword [rdx+r12*4]
0000000000004fc1         add        rax, rdx
0000000000004fc4         jmp        rax                                         ; switch statement using table at 0x71cc, with 10 cases, 0x4fd0,0x5046,0x5080,0x50d8,0x5118,0x5160,0x51b0,0x5208,0x5238,0x52a0
0000000000004fc6         align      16

                     loc_4fd0:
0000000000004fd0         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
0000000000004fd4         mov        rax, qword [rbx+0x10]
0000000000004fd8         lea        rsi, qword [aWrittenBySSSns_70e0]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
0000000000004fdf         mov        r8, qword [rbx+8]
0000000000004fe3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004fe8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004fea         mov        r13, qword [rbx+0x30]
0000000000004fee         mov        r12, qword [rbx+0x28]
0000000000004ff2         mov        qword [rsp+0x58+var_48], r9
0000000000004ff7         mov        r15, qword [rbx+0x20]
0000000000004ffb         mov        r14, qword [rbx+0x18]
0000000000004fff         mov        qword [rsp+0x58+var_58], rax
0000000000005003         mov        qword [rsp+0x58+var_50], r8
0000000000005008         mov        rbx, qword [rbx]
000000000000500b         call       j_dcgettext                                 ; dcgettext
0000000000005010         sub        rsp, 0x8

                     loc_5014:
0000000000005014         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
0000000000005019         mov        rdx, rax
000000000000501c         mov        rcx, rbx
000000000000501f         mov        esi, 0x1
0000000000005024         mov        rdi, rbp
0000000000005027         xor        eax, eax
0000000000005029         push       r9
000000000000502b         push       r13
000000000000502d         push       r12
000000000000502f         push       r15
0000000000005031         push       r14
0000000000005033         mov        r9, qword [rsp+0x88+var_58]
0000000000005038         mov        r8, qword [rsp+0x88+var_50]
000000000000503d         call       j___fprintf_chk                             ; __fprintf_chk
0000000000005042         add        rsp, 0x30

                     loc_5046:
0000000000005046         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
000000000000504a         pop        rbx
000000000000504b         pop        rbp
000000000000504c         pop        r12
000000000000504e         pop        r13
0000000000005050         pop        r14
0000000000005052         pop        r15
0000000000005054         ret
                        ; endp
0000000000005055         align      8

                     loc_5058:
0000000000005058         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
000000000000505b         mov        rcx, rdx
000000000000505e         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
0000000000005065         mov        esi, 0x1
000000000000506a         xor        eax, eax
000000000000506c         call       j___fprintf_chk                             ; __fprintf_chk
0000000000005071         jmp        loc_4f5c
0000000000005076         align      128

                     loc_5080:
0000000000005080         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
0000000000005084         mov        r9, qword [rbx+0x38]
0000000000005088         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
000000000000508f         mov        rax, qword [rbx+0x10]
0000000000005093         mov        r8, qword [rbx+8]
0000000000005097         mov        edx, 0x5
000000000000509c         mov        r13, qword [rbx+0x30]
00000000000050a0         mov        r12, qword [rbx+0x28]
00000000000050a4         mov        r15, qword [rbx+0x20]
00000000000050a8         mov        r14, qword [rbx+0x18]
00000000000050ac         mov        rbx, qword [rbx]
00000000000050af         mov        qword [rsp+0x58+var_40], r10
00000000000050b4         mov        qword [rsp+0x58+var_48], r9
00000000000050b9         mov        qword [rsp+0x58+var_58], rax
00000000000050bd         mov        qword [rsp+0x58+var_50], r8

                     loc_50c2:
00000000000050c2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
00000000000050c4         call       j_dcgettext                                 ; dcgettext
00000000000050c9         mov        r10, qword [rsp+0x58+var_40]
00000000000050ce         push       r10
00000000000050d0         jmp        loc_5014
00000000000050d5         align      8

                     loc_50d8:
00000000000050d8         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
00000000000050db         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
00000000000050e2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000050e7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000050e9         call       j_dcgettext                                 ; dcgettext
00000000000050ee         add        rsp, 0x28
00000000000050f2         mov        rcx, rbx
00000000000050f5         mov        rdi, rbp
00000000000050f8         pop        rbx
00000000000050f9         pop        rbp
00000000000050fa         pop        r12
00000000000050fc         pop        r13
00000000000050fe         pop        r14
0000000000005100         pop        r15
0000000000005102         mov        rdx, rax
0000000000005105         mov        esi, 0x1
000000000000510a         xor        eax, eax
000000000000510c         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000005111         align      8

                     loc_5118:
0000000000005118         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
000000000000511c         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
0000000000005123         mov        rbx, qword [rbx]
0000000000005126         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000512b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000512d         call       j_dcgettext                                 ; dcgettext
0000000000005132         add        rsp, 0x28
0000000000005136         mov        r8, r12
0000000000005139         mov        rcx, rbx
000000000000513c         mov        rdi, rbp
000000000000513f         mov        rdx, rax
0000000000005142         mov        esi, 0x1
0000000000005147         pop        rbx
0000000000005148         pop        rbp
0000000000005149         pop        r12
000000000000514b         pop        r13
000000000000514d         pop        r14
000000000000514f         pop        r15
0000000000005151         xor        eax, eax
0000000000005153         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000005158         align      32

                     loc_5160:
0000000000005160         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
0000000000005164         mov        r12, qword [rbx+8]
0000000000005168         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
000000000000516f         mov        rbx, qword [rbx]
0000000000005172         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005177         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005179         call       j_dcgettext                                 ; dcgettext
000000000000517e         add        rsp, 0x28
0000000000005182         mov        r9, r13
0000000000005185         mov        r8, r12
0000000000005188         mov        rcx, rbx
000000000000518b         mov        rdi, rbp
000000000000518e         mov        rdx, rax
0000000000005191         pop        rbx
0000000000005192         pop        rbp
0000000000005193         pop        r12
0000000000005195         pop        r13
0000000000005197         pop        r14
0000000000005199         pop        r15
000000000000519b         mov        esi, 0x1
00000000000051a0         xor        eax, eax
00000000000051a2         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
00000000000051a7         align      16

                     loc_51b0:
00000000000051b0         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
00000000000051b7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000051bc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000051be         mov        r14, qword [rbx+0x18]
00000000000051c2         mov        r13, qword [rbx+0x10]
00000000000051c6         mov        r12, qword [rbx+8]
00000000000051ca         mov        rbx, qword [rbx]
00000000000051cd         call       j_dcgettext                                 ; dcgettext
00000000000051d2         sub        rsp, 0x8

                     loc_51d6:
00000000000051d6         push       r14                                         ; CODE XREF=version_etc_arn+784
00000000000051d8         mov        rdx, rax
00000000000051db         mov        r9, r13
00000000000051de         mov        r8, r12
00000000000051e1         mov        rcx, rbx
00000000000051e4         mov        rdi, rbp
00000000000051e7         mov        esi, 0x1
00000000000051ec         xor        eax, eax
00000000000051ee         call       j___fprintf_chk                             ; __fprintf_chk
00000000000051f3         pop        rax
00000000000051f4         pop        rdx
00000000000051f5         add        rsp, 0x28
00000000000051f9         pop        rbx
00000000000051fa         pop        rbp
00000000000051fb         pop        r12
00000000000051fd         pop        r13
00000000000051ff         pop        r14
0000000000005201         pop        r15
0000000000005203         ret
                        ; endp
0000000000005204         align      8

                     loc_5208:
0000000000005208         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
000000000000520c         lea        rsi, qword [aWrittenBySSSns_7060]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
0000000000005213         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005218         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000521a         mov        r14, qword [rbx+0x18]
000000000000521e         mov        r13, qword [rbx+0x10]
0000000000005222         mov        r12, qword [rbx+8]
0000000000005226         mov        rbx, qword [rbx]
0000000000005229         call       j_dcgettext                                 ; dcgettext
000000000000522e         push       r15
0000000000005230         jmp        loc_51d6
0000000000005232         align      8

                     loc_5238:
0000000000005238         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
000000000000523c         mov        r12, qword [rbx+0x28]
0000000000005240         lea        rsi, qword [aWrittenBySSSns_7088]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
0000000000005247         mov        r15, qword [rbx+0x20]
000000000000524b         mov        r14, qword [rbx+0x18]
000000000000524f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005254         mov        r13, qword [rbx+0x10]
0000000000005258         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000525a         mov        rbx, qword [rbx]
000000000000525d         mov        qword [rsp+0x58+var_58], r8
0000000000005261         call       j_dcgettext                                 ; dcgettext
0000000000005266         sub        rsp, 0x8
000000000000526a         mov        r9, r13
000000000000526d         push       r12
000000000000526f         push       r15
0000000000005271         push       r14

                     loc_5273:
0000000000005273         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
0000000000005278         mov        rcx, rbx
000000000000527b         mov        rdx, rax
000000000000527e         mov        rdi, rbp
0000000000005281         mov        esi, 0x1
0000000000005286         xor        eax, eax
0000000000005288         call       j___fprintf_chk                             ; __fprintf_chk
000000000000528d         add        rsp, 0x20
0000000000005291         add        rsp, 0x28
0000000000005295         pop        rbx
0000000000005296         pop        rbp
0000000000005297         pop        r12
0000000000005299         pop        r13
000000000000529b         pop        r14
000000000000529d         pop        r15
000000000000529f         ret
                        ; endp

                     loc_52a0:
00000000000052a0         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
00000000000052a4         mov        r13, qword [rbx+0x30]
00000000000052a8         lea        rsi, qword [aWrittenBySSSns_70b0]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
00000000000052af         mov        r12, qword [rbx+0x28]
00000000000052b3         mov        r15, qword [rbx+0x20]
00000000000052b7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000052bc         mov        r14, qword [rbx+0x18]
00000000000052c0         mov        r8, qword [rbx+8]
00000000000052c4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000052c6         mov        qword [rsp+0x58+var_50], r9
00000000000052cb         mov        rbx, qword [rbx]
00000000000052ce         mov        qword [rsp+0x58+var_58], r8
00000000000052d2         call       j_dcgettext                                 ; dcgettext
00000000000052d7         push       r13
00000000000052d9         push       r12
00000000000052db         push       r15
00000000000052dd         push       r14
00000000000052df         mov        r9, qword [rsp+0x78+var_50]
00000000000052e4         jmp        loc_5273
00000000000052e6         align      16

                     loc_52f0:
00000000000052f0         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
00000000000052f4         mov        r9, qword [rbx+0x38]
00000000000052f8         mov        edx, 0x5
00000000000052fd         mov        rax, qword [rbx+0x10]
0000000000005301         mov        r8, qword [rbx+8]
0000000000005305         lea        rsi, qword [aWrittenBySSSns_7148]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
000000000000530c         mov        r13, qword [rbx+0x30]
0000000000005310         mov        r12, qword [rbx+0x28]
0000000000005314         mov        r15, qword [rbx+0x20]
0000000000005318         mov        r14, qword [rbx+0x18]
000000000000531c         mov        qword [rsp+0x58+var_40], r10
0000000000005321         mov        qword [rsp+0x58+var_48], r9
0000000000005326         mov        qword [rsp+0x58+var_58], rax
000000000000532a         mov        qword [rsp+0x58+var_50], r8
000000000000532f         mov        rbx, qword [rbx]
0000000000005332         jmp        loc_50c2
0000000000005337         align      64                                          ; End of unwind block (FDE at 0x7d8c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
0000000000005340         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0x7ea0)
0000000000005343         cmp        qword [r8], 0x0
0000000000005347         je         j_version_etc_arn                           ; version_etc_arn

0000000000005349         nop        dword [rax]

                     loc_5350:
0000000000005350         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
0000000000005354         cmp        qword [r8+r9*8], 0x0
0000000000005359         jne        loc_5350

                     j_version_etc_arn:        // version_etc_arn
000000000000535b         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
0000000000005360         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0x7ea0), Begin of unwind block (FDE at 0x7eb4)
0000000000005364         mov        r10, r8
0000000000005367         xor        r9d, r9d
000000000000536a         mov        rax, qword [fs:0x28]
0000000000005373         mov        qword [rsp+0x68+var_10], rax
0000000000005378         xor        eax, eax
000000000000537a         mov        r8, rsp
000000000000537d         nop        dword [rax]

                     loc_5380:
0000000000005380         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000005383         cmp        eax, 0x2f
0000000000005386         ja         loc_53ca

0000000000005388         mov        r11d, eax
000000000000538b         add        r11, qword [r10+0x10]
000000000000538f         add        eax, 0x8
0000000000005392         mov        dword [r10], eax

                     loc_5395:
0000000000005395         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000005398         test       rax, rax
000000000000539b         mov        qword [r8+r9*8], rax
000000000000539f         je         loc_53ab

00000000000053a1         add        r9, 0x1
00000000000053a5         cmp        r9, 0xa
00000000000053a9         jne        loc_5380

                     loc_53ab:
00000000000053ab         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
00000000000053b0         mov        rax, qword [rsp+0x68+var_10]
00000000000053b5         xor        rax, qword [fs:0x28]
00000000000053be         jne        loc_53c5

00000000000053c0         add        rsp, 0x68
00000000000053c4         ret
                        ; endp

                     loc_53c5:
00000000000053c5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_53ca:
00000000000053ca         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
00000000000053ce         lea        rax, qword [r11+8]
00000000000053d2         mov        qword [r10+8], rax
00000000000053d6         jmp        loc_5395
00000000000053d8         align      32                                          ; End of unwind block (FDE at 0x7eb4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
00000000000053e0         push       rbp                                         ; Begin of unwind block (FDE at 0x7ed0), CODE XREF=main+250
00000000000053e1         push       rbx
00000000000053e2         mov        r10d, 0x20
00000000000053e8         xor        r11d, r11d
00000000000053eb         sub        rsp, 0xb8
00000000000053f2         mov        rax, qword [fs:0x28]
00000000000053fb         mov        qword [rsp+0xc8+var_50], rax
0000000000005400         xor        eax, eax
0000000000005402         lea        rax, qword [rsp+0xc8+arg_0]
000000000000540a         mov        qword [rsp+0xc8+var_28], r8
0000000000005412         lea        rbx, qword [rsp+0xc8+arg_0]
000000000000541a         lea        r8, qword [rsp+0xc8+var_A8]
000000000000541f         mov        qword [rsp+0xc8+var_20], r9
0000000000005427         mov        dword [rsp+0xc8+var_C0], 0x20
000000000000542f         mov        qword [rsp+0xc8+var_B8], rax
0000000000005434         lea        rax, qword [rsp+0xc8+var_48]
000000000000543c         xor        r9d, r9d
000000000000543f         mov        qword [rsp+0xc8+var_B0], rax
0000000000005444         mov        rbp, rax
0000000000005447         nop        word [rax+rax]

                     loc_5450:
0000000000005450         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
0000000000005454         ja         loc_54ac

0000000000005456         mov        eax, r10d
0000000000005459         mov        r11d, 0x1
000000000000545f         add        r10d, 0x8
0000000000005463         add        rax, rbp

                     loc_5466:
0000000000005466         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
0000000000005469         test       rax, rax
000000000000546c         mov        qword [r8+r9*8], rax
0000000000005470         je         loc_547c

0000000000005472         add        r9, 0x1
0000000000005476         cmp        r9, 0xa
000000000000547a         jne        loc_5450

                     loc_547c:
000000000000547c         test       r11b, r11b                                  ; CODE XREF=version_etc+144
000000000000547f         jne        loc_54a5

                     loc_5481:
0000000000005481         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000005486         mov        rax, qword [rsp+0xc8+var_50]
000000000000548b         xor        rax, qword [fs:0x28]
0000000000005494         jne        loc_54a0

0000000000005496         add        rsp, 0xb8
000000000000549d         pop        rbx
000000000000549e         pop        rbp
000000000000549f         ret
                        ; endp

                     loc_54a0:
00000000000054a0         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_54a5:
00000000000054a5         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
00000000000054aa         jmp        loc_5481

                     loc_54ac:
00000000000054ac         mov        rax, rbx                                    ; CODE XREF=version_etc+116
00000000000054af         add        rbx, 0x8
00000000000054b3         jmp        loc_5466
00000000000054b5         align      64                                          ; End of unwind block (FDE at 0x7ed0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
00000000000054c0         push       rbx                                         ; Begin of unwind block (FDE at 0x7efc)
00000000000054c1         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
00000000000054c8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000054cd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000054cf         call       j_dcgettext                                 ; dcgettext
00000000000054d4         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
00000000000054db         mov        rsi, rax
00000000000054de         mov        edi, 0x1
00000000000054e3         xor        eax, eax
00000000000054e5         call       j___printf_chk                              ; __printf_chk
00000000000054ea         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
00000000000054f1         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000054f6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000054f8         call       j_dcgettext                                 ; dcgettext
00000000000054fd         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000005504         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6837
000000000000550b         mov        rsi, rax
000000000000550e         mov        edi, 0x1
0000000000005513         xor        eax, eax
0000000000005515         call       j___printf_chk                              ; __printf_chk
000000000000551a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000005521         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
0000000000005528         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000552a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000552f         call       j_dcgettext                                 ; dcgettext
0000000000005534         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000005537         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000553a         pop        rbx
000000000000553b         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
0000000000005540         push       rbx                                         ; End of unwind block (FDE at 0x7efc), Begin of unwind block (FDE at 0x7f1c), CODE XREF=quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15
0000000000005541         mov        rbx, rdi
0000000000005544         call       j_malloc                                    ; malloc
0000000000005549         test       rax, rax
000000000000554c         jne        loc_5553

000000000000554e         test       rbx, rbx
0000000000005551         jne        loc_5555

                     loc_5553:
0000000000005553         pop        rbx                                         ; CODE XREF=xmalloc+12
0000000000005554         ret
                        ; endp

                     loc_5555:
0000000000005555         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_555a:
000000000000555a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x7f1c)
                     xnmalloc:
0000000000005560         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x7f38)
0000000000005563         mul        rsi
0000000000005566         mov        rdi, rax
0000000000005569         seto       al
000000000000556c         test       rdi, rdi
000000000000556f         js         loc_557b

0000000000005571         movzx      eax, al
0000000000005574         test       rax, rax
0000000000005577         jne        loc_557b

0000000000005579         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_557b:
000000000000557b         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
000000000000557f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5584:
0000000000005584         nop                                                    ; End of unwind block (FDE at 0x7f38)
0000000000005586         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000005590         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0x7f4c)
                        ; endp
0000000000005592         align      32                                          ; End of unwind block (FDE at 0x7f4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
00000000000055a0         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x7f60), CODE XREF=quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
00000000000055a3         push       rbx
00000000000055a4         mov        rbx, rsi
00000000000055a7         jne        loc_55ae

00000000000055a9         test       rdi, rdi
00000000000055ac         jne        loc_55c8

                     loc_55ae:
00000000000055ae         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
00000000000055b1         call       j_realloc                                   ; realloc
00000000000055b6         test       rax, rax
00000000000055b9         jne        loc_55c0

00000000000055bb         test       rbx, rbx
00000000000055be         jne        loc_55d1

                     loc_55c0:
00000000000055c0         pop        rbx                                         ; CODE XREF=xrealloc+25
00000000000055c1         ret
                        ; endp
00000000000055c2         align      8

                     loc_55c8:
00000000000055c8         call       j_free                                      ; free, CODE XREF=xrealloc+12
00000000000055cd         xor        eax, eax
00000000000055cf         pop        rbx
00000000000055d0         ret
                        ; endp

                     loc_55d1:
00000000000055d1         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_55d6:
00000000000055d6         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x7f60)
                     xnrealloc:
00000000000055e0         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x7f84)
00000000000055e3         mul        rdx
00000000000055e6         mov        rsi, rax
00000000000055e9         seto       al
00000000000055ec         test       rsi, rsi
00000000000055ef         js         loc_55fb

00000000000055f1         movzx      eax, al
00000000000055f4         test       rax, rax
00000000000055f7         jne        loc_55fb

00000000000055f9         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_55fb:
00000000000055fb         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
00000000000055ff         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5604:
0000000000005604         nop                                                    ; End of unwind block (FDE at 0x7f84)
0000000000005606         nop        word [cs:rax+rax]
                     x2nrealloc:
0000000000005610         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7f98)
0000000000005613         mov        r9, rdx
0000000000005616         mov        rcx, qword [rsi]
0000000000005619         je         loc_5650

000000000000561b         xor        edx, edx
000000000000561d         movabs     rax, 0x5555555555555554
0000000000005627         div        r9
000000000000562a         cmp        rax, rcx
000000000000562d         jbe        loc_566b

000000000000562f         mov        rax, rcx
0000000000005632         shr        rax, 0x1
0000000000005635         lea        rcx, qword [rax+rcx+1]

                     loc_563a:
000000000000563a         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
000000000000563d         imul       rcx, r9                                     ; argument #4 for method xrealloc
0000000000005641         mov        rsi, rcx                                    ; argument #2 for method xrealloc
0000000000005644         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000005649         align      16

                     loc_5650:
0000000000005650         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
0000000000005653         je         loc_5678

                     loc_5655:
0000000000005655         mov        rax, rcx                                    ; CODE XREF=sub_5674+28
0000000000005658         mul        r9
000000000000565b         seto       dl
000000000000565e         test       rax, rax
0000000000005661         movzx      edx, dl
0000000000005664         js         loc_566b

0000000000005666         test       rdx, rdx
0000000000005669         je         loc_563a

                     loc_566b:
000000000000566b         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
000000000000566f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5674:
0000000000005674         nop        dword [rax]
                        ; endp

                     loc_5678:
0000000000005678         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
000000000000567a         mov        eax, 0x80
000000000000567f         xor        r8d, r8d
0000000000005682         div        r9
0000000000005685         test       rax, rax
0000000000005688         sete       r8b
000000000000568c         lea        rcx, qword [r8+rax]
0000000000005690         jmp        loc_5655
0000000000005692         align      32                                          ; End of unwind block (FDE at 0x7f98)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
00000000000056a0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7fb0)
00000000000056a3         mov        rax, qword [rsi]
00000000000056a6         je         loc_56d0

00000000000056a8         movabs     rdx, 0x5555555555555553
00000000000056b2         cmp        rax, rdx
00000000000056b5         ja         loc_56e1

00000000000056b7         mov        rdx, rax
00000000000056ba         shr        rdx, 0x1
00000000000056bd         lea        rax, qword [rdx+rax+1]

                     loc_56c2:
00000000000056c2         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
00000000000056c5         mov        rsi, rax                                    ; argument #2 for method xrealloc
00000000000056c8         jmp        xrealloc                                    ; xrealloc
                        ; endp
00000000000056cd         align      16

                     loc_56d0:
00000000000056d0         test       rax, rax                                    ; CODE XREF=x2realloc+6
00000000000056d3         mov        edx, 0x80
00000000000056d8         cmove      rax, rdx
00000000000056dc         test       rax, rax
00000000000056df         jns        loc_56c2

                     loc_56e1:
00000000000056e1         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
00000000000056e5         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_56ea:
00000000000056ea         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x7fb0)
                     xzalloc:
00000000000056f0         push       rbx                                         ; Begin of unwind block (FDE at 0x7fc8)
00000000000056f1         mov        rbx, rdi
00000000000056f4         call       xmalloc                                     ; xmalloc
00000000000056f9         mov        rdx, rbx                                    ; argument "__n" for method j_memset
00000000000056fc         xor        esi, esi                                    ; argument "__c" for method j_memset
00000000000056fe         mov        rdi, rax                                    ; argument "__s" for method j_memset
0000000000005701         pop        rbx
0000000000005702         jmp        j_memset                                    ; memset
                        ; endp
0000000000005707         align      16                                          ; End of unwind block (FDE at 0x7fc8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
0000000000005710         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x7fe4)
0000000000005713         sub        rsp, 0x8
0000000000005717         mul        rsi
000000000000571a         seto       dl
000000000000571d         test       rax, rax
0000000000005720         js         loc_5739

0000000000005722         movzx      edx, dl
0000000000005725         test       rdx, rdx
0000000000005728         jne        loc_5739

000000000000572a         call       j_calloc                                    ; calloc
000000000000572f         test       rax, rax
0000000000005732         je         loc_5739

0000000000005734         add        rsp, 0x8
0000000000005738         ret
                        ; endp

                     loc_5739:
0000000000005739         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_573e:
000000000000573e         nop                                                    ; End of unwind block (FDE at 0x7fe4)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmemdup:
0000000000005740         push       rbp                                         ; Begin of unwind block (FDE at 0x8000), CODE XREF=clone_quoting_options+40, parse_with_separator+328
0000000000005741         push       rbx
0000000000005742         mov        rbp, rdi
0000000000005745         mov        rdi, rsi
0000000000005748         mov        rbx, rsi
000000000000574b         sub        rsp, 0x8
000000000000574f         call       xmalloc                                     ; xmalloc
0000000000005754         add        rsp, 0x8
0000000000005758         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
000000000000575b         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
000000000000575e         pop        rbx
000000000000575f         pop        rbp
0000000000005760         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000005763         jmp        j_memcpy                                    ; memcpy
                        ; endp
0000000000005768         align      16                                          ; End of unwind block (FDE at 0x8000)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000005770         push       rbx                                         ; Begin of unwind block (FDE at 0x8028), CODE XREF=main+632, parse_with_separator+209, parse_with_separator+519, parse_with_separator+587, parse_with_separator+752
0000000000005771         mov        rbx, rdi
0000000000005774         call       j_strlen                                    ; strlen
0000000000005779         mov        rdi, rbx
000000000000577c         lea        rsi, qword [rax+1]
0000000000005780         pop        rbx
0000000000005781         jmp        xmemdup                                     ; xmemdup
                        ; endp
0000000000005783         align      16                                          ; End of unwind block (FDE at 0x8028)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000005790         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x8044), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41, xgetgroups+34
0000000000005797         sub        rsp, 0x8
000000000000579b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000057a0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000057a2         call       j_dcgettext                                 ; dcgettext
00000000000057a7         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
00000000000057ad         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x6987
00000000000057b4         mov        rcx, rax
00000000000057b7         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000057b9         xor        eax, eax
00000000000057bb         call       j_error                                     ; error
00000000000057c0         call       j_abort                                     ; abort
                        ; endp
00000000000057c5         align      16                                          ; End of unwind block (FDE at 0x8044)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xgetgroups:
00000000000057d0         push       rbx                                         ; Begin of unwind block (FDE at 0x805c), CODE XREF=print_stuff+715, print_stuff+1000, print_group_list+199
00000000000057d1         call       mgetgroups                                  ; mgetgroups
00000000000057d6         cmp        eax, 0xffffffff
00000000000057d9         mov        ebx, eax
00000000000057db         je         loc_57e8

                     loc_57dd:
00000000000057dd         mov        eax, ebx                                    ; CODE XREF=xgetgroups+32
00000000000057df         pop        rbx
00000000000057e0         ret
                        ; endp
00000000000057e1         align      8

                     loc_57e8:
00000000000057e8         call       j___errno_location                          ; __errno_location, CODE XREF=xgetgroups+11
00000000000057ed         cmp        dword [rax], 0xc
00000000000057f0         jne        loc_57dd

00000000000057f2         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80


                     sub_57f7:
00000000000057f7         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x805c)
                     xstrtoul:
0000000000005800         push       r15                                         ; Begin of unwind block (FDE at 0x807c), CODE XREF=parse_with_separator+568, parse_with_separator+811
0000000000005802         push       r14
0000000000005804         push       r13
0000000000005806         push       r12
0000000000005808         push       rbp
0000000000005809         push       rbx
000000000000580a         sub        rsp, 0x28
000000000000580e         mov        rax, qword [fs:0x28]
0000000000005817         mov        qword [rsp+0x58+var_40], rax
000000000000581c         xor        eax, eax
000000000000581e         cmp        edx, 0x24
0000000000005821         ja         loc_5b85

0000000000005827         lea        rax, qword [rsp+0x58+var_48]
000000000000582c         mov        r15, rsi
000000000000582f         test       rsi, rsi
0000000000005832         mov        rbp, rdi
0000000000005835         mov        dword [rsp+0x58+var_50], edx
0000000000005839         mov        r14, rcx
000000000000583c         mov        r13, r8
000000000000583f         cmove      r15, rax
0000000000005843         call       j___errno_location                          ; __errno_location
0000000000005848         mov        dword [rax], 0x0
000000000000584e         mov        r12, rax
0000000000005851         movzx      ebx, byte [rbp]
0000000000005855         call       j___ctype_b_loc                             ; __ctype_b_loc
000000000000585a         mov        edx, dword [rsp+0x58+var_50]
000000000000585e         mov        rsi, qword [rax]
0000000000005861         mov        rax, rbp
0000000000005864         jmp        loc_5877
0000000000005866         align      16

                     loc_5870:
0000000000005870         add        rax, 0x1                                    ; CODE XREF=xstrtoul+127
0000000000005874         movzx      ebx, byte [rax]

                     loc_5877:
0000000000005877         movzx      ecx, bl                                     ; CODE XREF=xstrtoul+100
000000000000587a         test       byte [rsi+rcx*2+1], 0x20
000000000000587f         jne        loc_5870

0000000000005881         cmp        bl, 0x2d
0000000000005884         je         loc_58d8

0000000000005886         mov        rsi, r15                                    ; argument "__endptr" for method j_strtoul
0000000000005889         mov        rdi, rbp                                    ; argument "__nptr" for method j_strtoul
000000000000588c         call       j_strtoul                                   ; strtoul
0000000000005891         mov        rcx, qword [r15]
0000000000005894         mov        rbx, rax
0000000000005897         cmp        rcx, rbp
000000000000589a         je         loc_58c8

000000000000589c         mov        eax, dword [r12]
00000000000058a0         test       eax, eax
00000000000058a2         je         loc_5908

00000000000058a4         cmp        eax, 0x22
00000000000058a7         mov        ebp, 0x1
00000000000058ac         jne        loc_58d8

                     loc_58ae:
00000000000058ae         test       r13, r13                                    ; CODE XREF=xstrtoul+266
00000000000058b1         je         loc_58bc

00000000000058b3         movzx      r12d, byte [rcx]
00000000000058b7         test       r12b, r12b
00000000000058ba         jne        loc_5937

                     loc_58bc:
00000000000058bc         mov        qword [r14], rbx                            ; CODE XREF=xstrtoul+177
00000000000058bf         jmp        loc_58dd
00000000000058c1         align      8

                     loc_58c8:
00000000000058c8         test       r13, r13                                    ; CODE XREF=xstrtoul+154
00000000000058cb         mov        qword [rsp+0x58+var_50], rcx
00000000000058d0         jne        loc_5910

00000000000058d2         nop        word [rax+rax]

                     loc_58d8:
00000000000058d8         mov        ebp, 0x4                                    ; CODE XREF=xstrtoul+132, xstrtoul+172, xstrtoul+280, xstrtoul+309

                     loc_58dd:
00000000000058dd         mov        rdi, qword [rsp+0x58+var_40]                ; CODE XREF=xstrtoul+191, xstrtoul+535, xstrtoul+546
00000000000058e2         xor        rdi, qword [fs:0x28]
00000000000058eb         mov        eax, ebp
00000000000058ed         jne        loc_5b80

00000000000058f3         add        rsp, 0x28
00000000000058f7         pop        rbx
00000000000058f8         pop        rbp
00000000000058f9         pop        r12
00000000000058fb         pop        r13
00000000000058fd         pop        r14
00000000000058ff         pop        r15
0000000000005901         ret
                        ; endp
0000000000005902         align      8

                     loc_5908:
0000000000005908         xor        ebp, ebp                                    ; CODE XREF=xstrtoul+162
000000000000590a         jmp        loc_58ae
000000000000590c         align      16

                     loc_5910:
0000000000005910         movzx      r12d, byte [rbp]                            ; CODE XREF=xstrtoul+208
0000000000005915         test       r12b, r12b
0000000000005918         je         loc_58d8

000000000000591a         movsx      esi, r12b                                   ; argument "__c" for method j_strchr
000000000000591e         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000005921         xor        ebp, ebp
0000000000005923         call       j_strchr                                    ; strchr
0000000000005928         test       rax, rax
000000000000592b         mov        ebx, 0x1
0000000000005930         mov        rcx, qword [rsp+0x58+var_50]
0000000000005935         je         loc_58d8

                     loc_5937:
0000000000005937         movsx      esi, r12b                                   ; argument "__c" for method j_strchr, CODE XREF=xstrtoul+186
000000000000593b         mov        rdi, r13                                    ; argument "__s" for method j_strchr
000000000000593e         mov        qword [rsp+0x58+var_50], rcx
0000000000005943         call       j_strchr                                    ; strchr
0000000000005948         test       rax, rax
000000000000594b         mov        rcx, qword [rsp+0x58+var_50]
0000000000005950         je         loc_5a1c

0000000000005956         lea        eax, dword [r12-0x45]
000000000000595b         cmp        al, 0x2f
000000000000595d         ja         loc_59b0

000000000000595f         movabs     rdx, 0x814400308945
0000000000005969         bt         rdx, rax
000000000000596d         jae        loc_59b0

000000000000596f         mov        esi, 0x30                                   ; argument "__c" for method j_strchr
0000000000005974         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000005977         mov        qword [rsp+0x58+var_50], rcx
000000000000597c         call       j_strchr                                    ; strchr
0000000000005981         test       rax, rax
0000000000005984         mov        rcx, qword [rsp+0x58+var_50]
0000000000005989         je         loc_59b0

000000000000598b         movzx      eax, byte [rcx+1]
000000000000598f         cmp        al, 0x44
0000000000005991         je         loc_599f

0000000000005993         cmp        al, 0x69
0000000000005995         je         loc_5b68

000000000000599b         cmp        al, 0x42
000000000000599d         jne        loc_59b0

                     loc_599f:
000000000000599f         mov        edi, 0x2                                    ; CODE XREF=xstrtoul+401
00000000000059a4         mov        esi, 0x3e8
00000000000059a9         jmp        loc_59ba
00000000000059ab         align      16

                     loc_59b0:
00000000000059b0         mov        edi, 0x1                                    ; CODE XREF=xstrtoul+349, xstrtoul+365, xstrtoul+393, xstrtoul+413
00000000000059b5         mov        esi, 0x400

                     loc_59ba:
00000000000059ba         sub        r12d, 0x42                                  ; CODE XREF=xstrtoul+425, xstrtoul+891
00000000000059be         cmp        r12b, 0x35
00000000000059c2         ja         loc_5a1c

00000000000059c4         lea        rdx, qword [switch_table_7288]              ; switch_table_7288
00000000000059cb         movzx      r12d, r12b
00000000000059cf         movsxd     rax, dword [rdx+r12*4]
00000000000059d3         add        rax, rdx
00000000000059d6         jmp        rax                                         ; switch statement using table at 0x7288, with 54 cases, 0x59d8,0x5a00,0x5a1c,0x5a27,0x5a3d,0x5a54,0x5a7a,0x5a9f,0x5abf,0x5ae0,0x5b03,0x5b26,0x5b3c

                     loc_59d8:
00000000000059d8         mov        rax, rbx                                    ; case 43, CODE XREF=xstrtoul+470
00000000000059db         mul        rsi
00000000000059de         jo         loc_5bd1

00000000000059e4         xor        r8d, r8d

                     loc_59e7:
00000000000059e7         mul        rsi                                         ; CODE XREF=xstrtoul+846, xstrtoul+862, xstrtoul+987
00000000000059ea         jo         loc_5bc2

00000000000059f0         mov        rbx, rax

                     loc_59f3:
00000000000059f3         or         ebp, r8d                                    ; CODE XREF=xstrtoul+972
00000000000059f6         nop        word [cs:rax+rax]

                     loc_5a00:
0000000000005a00         movsxd     rdi, edi                                    ; case 33, CODE XREF=xstrtoul+470, xstrtoul+571, xstrtoul+594, xstrtoul+632, xstrtoul+712, xstrtoul+727, xstrtoul+823
0000000000005a03         mov        eax, ebp
0000000000005a05         add        rcx, rdi
0000000000005a08         or         eax, 0x2
0000000000005a0b         mov        qword [r15], rcx
0000000000005a0e         cmp        byte [rcx], 0x0
0000000000005a11         mov        qword [r14], rbx
0000000000005a14         cmovne     ebp, eax
0000000000005a17         jmp        loc_58dd

                     loc_5a1c:
0000000000005a1c         mov        qword [r14], rbx                            ; case 52, CODE XREF=xstrtoul+336, xstrtoul+450, xstrtoul+470
0000000000005a1f         or         ebp, 0x2
0000000000005a22         jmp        loc_58dd

                     loc_5a27:
0000000000005a27         mov        edx, 0x2                                    ; case 53, CODE XREF=xstrtoul+470
0000000000005a2c         mov        rax, rdx
0000000000005a2f         mul        rbx
0000000000005a32         jo         loc_5ace

0000000000005a38         add        rbx, rbx
0000000000005a3b         jmp        loc_5a00

                     loc_5a3d:
0000000000005a3d         mov        edx, 0x200                                  ; case 32, CODE XREF=xstrtoul+470
0000000000005a42         mov        rax, rdx
0000000000005a45         mul        rbx
0000000000005a48         jo         loc_5ace

0000000000005a4e         shl        rbx, 0x9
0000000000005a52         jmp        loc_5a00

                     loc_5a54:
0000000000005a54         mov        r8d, 0x7                                    ; case 24, CODE XREF=xstrtoul+470
0000000000005a5a         xor        r9d, r9d
0000000000005a5d         nop        dword [rax]

                     loc_5a60:
0000000000005a60         mov        rax, rbx                                    ; CODE XREF=xstrtoul+627
0000000000005a63         mul        rsi
0000000000005a66         mov        rbx, rax
0000000000005a69         jo         loc_5bfe

                     loc_5a6f:
0000000000005a6f         sub        r8d, 0x1                                    ; CODE XREF=xstrtoul+1032
0000000000005a73         jne        loc_5a60

                     loc_5a75:
0000000000005a75         or         ebp, r9d                                    ; CODE XREF=xstrtoul+669, xstrtoul+701, xstrtoul+766, xstrtoul+801
0000000000005a78         jmp        loc_5a00

                     loc_5a7a:
0000000000005a7a         mov        r8d, 0x8                                    ; case 23, CODE XREF=xstrtoul+470
0000000000005a80         xor        r9d, r9d
0000000000005a83         nop        dword [rax+rax]

                     loc_5a88:
0000000000005a88         mov        rax, rbx                                    ; CODE XREF=xstrtoul+667
0000000000005a8b         mul        rsi
0000000000005a8e         mov        rbx, rax
0000000000005a91         jo         loc_5be0

                     loc_5a97:
0000000000005a97         sub        r8d, 0x1                                    ; CODE XREF=xstrtoul+1002
0000000000005a9b         jne        loc_5a88

0000000000005a9d         jmp        loc_5a75

                     loc_5a9f:
0000000000005a9f         mov        r8d, 0x4                                    ; case 50, CODE XREF=xstrtoul+470
0000000000005aa5         xor        r9d, r9d

                     loc_5aa8:
0000000000005aa8         mov        rax, rbx                                    ; CODE XREF=xstrtoul+699
0000000000005aab         mul        rsi
0000000000005aae         mov        rbx, rax
0000000000005ab1         jo         loc_5bb3

                     loc_5ab7:
0000000000005ab7         sub        r8d, 0x1                                    ; CODE XREF=xstrtoul+957
0000000000005abb         jne        loc_5aa8

0000000000005abd         jmp        loc_5a75

                     loc_5abf:
0000000000005abf         mov        rax, rbx                                    ; case 41, CODE XREF=xstrtoul+470
0000000000005ac2         mul        rsi
0000000000005ac5         mov        rbx, rax
0000000000005ac8         jno        loc_5a00

                     loc_5ace:
0000000000005ace         mov        ebp, 0x1                                    ; CODE XREF=xstrtoul+562, xstrtoul+584, xstrtoul+817
0000000000005ad3         or         rbx, 0xffffffffffffffff
0000000000005ad7         jmp        loc_5a00
0000000000005adc         align      32

                     loc_5ae0:
0000000000005ae0         mov        r8d, 0x5                                    ; case 14, CODE XREF=xstrtoul+470
0000000000005ae6         xor        r9d, r9d

                     loc_5ae9:
0000000000005ae9         mov        rax, rbx                                    ; CODE XREF=xstrtoul+764
0000000000005aec         mul        rsi
0000000000005aef         mov        rbx, rax
0000000000005af2         jo         loc_5bef

                     loc_5af8:
0000000000005af8         sub        r8d, 0x1                                    ; CODE XREF=xstrtoul+1017
0000000000005afc         jne        loc_5ae9

0000000000005afe         jmp        loc_5a75

                     loc_5b03:
0000000000005b03         mov        r8d, 0x6                                    ; case 3, CODE XREF=xstrtoul+470
0000000000005b09         xor        r9d, r9d

                     loc_5b0c:
0000000000005b0c         mov        rax, rbx                                    ; CODE XREF=xstrtoul+799
0000000000005b0f         mul        rsi
0000000000005b12         mov        rbx, rax
0000000000005b15         jo         loc_5ba4

                     loc_5b1b:
0000000000005b1b         sub        r8d, 0x1                                    ; CODE XREF=xstrtoul+942
0000000000005b1f         jne        loc_5b0c

0000000000005b21         jmp        loc_5a75

                     loc_5b26:
0000000000005b26         mov        edx, 0x400                                  ; case 0, CODE XREF=xstrtoul+470
0000000000005b2b         mov        rax, rdx
0000000000005b2e         mul        rbx
0000000000005b31         jo         loc_5ace

0000000000005b33         shl        rbx, 0xa
0000000000005b37         jmp        loc_5a00

                     loc_5b3c:
0000000000005b3c         mov        rax, rbx                                    ; case 37, CODE XREF=xstrtoul+470
0000000000005b3f         mul        rsi
0000000000005b42         jo         loc_5c0d

0000000000005b48         xor        r8d, r8d

                     loc_5b4b:
0000000000005b4b         mul        rsi                                         ; CODE XREF=xstrtoul+1047
0000000000005b4e         jno        loc_59e7

0000000000005b54         mov        r8d, 0x1
0000000000005b5a         or         rax, 0xffffffffffffffff
0000000000005b5e         jmp        loc_59e7
0000000000005b63         align      8

                     loc_5b68:
0000000000005b68         xor        edi, edi                                    ; CODE XREF=xstrtoul+405
0000000000005b6a         cmp        byte [rcx+2], 0x42
0000000000005b6e         mov        esi, 0x400
0000000000005b73         sete       dil
0000000000005b77         lea        edi, dword [rdi+rdi+1]
0000000000005b7b         jmp        loc_59ba

                     loc_5b80:
0000000000005b80         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=xstrtoul+237
                        ; endp

                     loc_5b85:
0000000000005b85         lea        rcx, qword [__PRETTY_FUNCTION__.4162]       ; argument "__function" for method j___assert_fail, "xstrtoul", CODE XREF=xstrtoul+33
0000000000005b8c         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/xstrtol.c"
0000000000005b93         lea        rdi, qword [a0StrtolbaseStr]                ; argument "__assertion" for method j___assert_fail, "0 <= strtol_base && strtol_base <= 36"
0000000000005b9a         mov        edx, 0x54                                   ; argument "__line" for method j___assert_fail
0000000000005b9f         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_5ba4:
0000000000005ba4         mov        r9d, 0x1                                    ; CODE XREF=xstrtoul+789
0000000000005baa         or         rbx, 0xffffffffffffffff
0000000000005bae         jmp        loc_5b1b

                     loc_5bb3:
0000000000005bb3         mov        r9d, 0x1                                    ; CODE XREF=xstrtoul+689
0000000000005bb9         or         rbx, 0xffffffffffffffff
0000000000005bbd         jmp        loc_5ab7

                     loc_5bc2:
0000000000005bc2         mov        r8d, 0x1                                    ; CODE XREF=xstrtoul+490
0000000000005bc8         or         rbx, 0xffffffffffffffff
0000000000005bcc         jmp        loc_59f3

                     loc_5bd1:
0000000000005bd1         or         rax, 0xffffffffffffffff                     ; CODE XREF=xstrtoul+478
0000000000005bd5         mov        r8d, 0x1
0000000000005bdb         jmp        loc_59e7

                     loc_5be0:
0000000000005be0         mov        r9d, 0x1                                    ; CODE XREF=xstrtoul+657
0000000000005be6         or         rbx, 0xffffffffffffffff
0000000000005bea         jmp        loc_5a97

                     loc_5bef:
0000000000005bef         mov        r9d, 0x1                                    ; CODE XREF=xstrtoul+754
0000000000005bf5         or         rbx, 0xffffffffffffffff
0000000000005bf9         jmp        loc_5af8

                     loc_5bfe:
0000000000005bfe         mov        r9d, 0x1                                    ; CODE XREF=xstrtoul+617
0000000000005c04         or         rbx, 0xffffffffffffffff
0000000000005c08         jmp        loc_5a6f

                     loc_5c0d:
0000000000005c0d         mov        r8d, 0x1                                    ; CODE XREF=xstrtoul+834
0000000000005c13         or         rax, 0xffffffffffffffff
0000000000005c17         jmp        loc_5b4b
0000000000005c1c         align      32                                          ; End of unwind block (FDE at 0x807c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
0000000000005c20         push       r13                                         ; Begin of unwind block (FDE at 0x80cc), CODE XREF=sub_3620+534
0000000000005c22         push       r12
0000000000005c24         mov        r13, rsi
0000000000005c27         push       rbp
0000000000005c28         push       rbx
0000000000005c29         mov        rbx, rdi
0000000000005c2c         mov        r12, rdx
0000000000005c2f         sub        rsp, 0x18
0000000000005c33         mov        rax, qword [fs:0x28]
0000000000005c3c         mov        qword [rsp+0x38+var_30], rax
0000000000005c41         xor        eax, eax
0000000000005c43         lea        rax, qword [rsp+0x38+var_34]
0000000000005c48         test       rdi, rdi
0000000000005c4b         cmove      rbx, rax
0000000000005c4f         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
0000000000005c52         call       j_mbrtowc                                   ; mbrtowc
0000000000005c57         cmp        rax, 0xfffffffffffffffd
0000000000005c5b         mov        rbp, rax
0000000000005c5e         jbe        loc_5c80

0000000000005c60         test       r12, r12
0000000000005c63         je         loc_5c80

0000000000005c65         xor        edi, edi
0000000000005c67         call       hard_locale                                 ; hard_locale
0000000000005c6c         test       al, al
0000000000005c6e         jne        loc_5c80

0000000000005c70         movzx      eax, byte [r13]
0000000000005c75         mov        ebp, 0x1
0000000000005c7a         mov        dword [rbx], eax
0000000000005c7c         nop        dword [rax]

                     loc_5c80:
0000000000005c80         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
0000000000005c85         xor        rdx, qword [fs:0x28]
0000000000005c8e         mov        rax, rbp
0000000000005c91         jne        loc_5c9e

0000000000005c93         add        rsp, 0x18
0000000000005c97         pop        rbx
0000000000005c98         pop        rbp
0000000000005c99         pop        r12
0000000000005c9b         pop        r13
0000000000005c9d         ret
                        ; endp

                     loc_5c9e:
0000000000005c9e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
0000000000005ca3         align      16                                          ; End of unwind block (FDE at 0x80cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
0000000000005cb0         push       r12                                         ; Begin of unwind block (FDE at 0x810c), CODE XREF=close_stdout+13, close_stdout+51
0000000000005cb2         push       rbp
0000000000005cb3         mov        rbp, rdi
0000000000005cb6         push       rbx
0000000000005cb7         call       j___fpending                                ; __fpending
0000000000005cbc         mov        ebx, dword [rbp]
0000000000005cbf         mov        rdi, rbp
0000000000005cc2         mov        r12, rax
0000000000005cc5         call       rpl_fclose                                  ; rpl_fclose
0000000000005cca         and        ebx, 0x20
0000000000005ccd         test       ebx, ebx
0000000000005ccf         jne        loc_5ce8

0000000000005cd1         test       eax, eax
0000000000005cd3         je         loc_5cdf

0000000000005cd5         test       r12, r12
0000000000005cd8         mov        eax, 0xffffffff
0000000000005cdd         je         loc_5d18

                     loc_5cdf:
0000000000005cdf         pop        rbx                                         ; CODE XREF=close_stream+35
0000000000005ce0         pop        rbp
0000000000005ce1         pop        r12
0000000000005ce3         ret
                        ; endp
0000000000005ce4         align      8

                     loc_5ce8:
0000000000005ce8         test       eax, eax                                    ; CODE XREF=close_stream+31
0000000000005cea         jne        loc_5d08

0000000000005cec         call       j___errno_location                          ; __errno_location
0000000000005cf1         mov        dword [rax], 0x0
0000000000005cf7         mov        eax, 0xffffffff
0000000000005cfc         pop        rbx
0000000000005cfd         pop        rbp
0000000000005cfe         pop        r12
0000000000005d00         ret
                        ; endp
0000000000005d01         align      8

                     loc_5d08:
0000000000005d08         pop        rbx                                         ; CODE XREF=close_stream+58
0000000000005d09         mov        eax, 0xffffffff
0000000000005d0e         pop        rbp
0000000000005d0f         pop        r12
0000000000005d11         ret
                        ; endp
0000000000005d12         align      8

                     loc_5d18:
0000000000005d18         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
0000000000005d1d         cmp        dword [rax], 0x9
0000000000005d20         pop        rbx
0000000000005d21         pop        rbp
0000000000005d22         pop        r12
0000000000005d24         setne      al
0000000000005d27         movzx      eax, al
0000000000005d2a         neg        eax
0000000000005d2c         ret
                        ; endp
0000000000005d2d         align      16                                          ; End of unwind block (FDE at 0x810c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
0000000000005d30         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x815c), CODE XREF=rpl_mbrtowc+71
0000000000005d34         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000005d36         call       j_setlocale                                 ; setlocale
0000000000005d3b         mov        rdx, rax
0000000000005d3e         mov        eax, 0x1
0000000000005d43         test       rdx, rdx
0000000000005d46         je         loc_5d65

0000000000005d48         lea        rdi, qword [__PRETTY_FUNCTION__.4162+9]     ; 0x7369
0000000000005d4f         mov        ecx, 0x2
0000000000005d54         mov        rsi, rdx
0000000000005d57         rep  cmpsb byte [rsi], byte [rdi]
0000000000005d59         seta       cl
0000000000005d5c         sbb        cl, 0x0
0000000000005d5f         xor        eax, eax
0000000000005d61         test       cl, cl
0000000000005d63         jne        loc_5d70

                     loc_5d65:
0000000000005d65         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
0000000000005d69         ret
                        ; endp
0000000000005d6a         align      16

                     loc_5d70:
0000000000005d70         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
0000000000005d77         mov        ecx, 0x6
0000000000005d7c         mov        rsi, rdx
0000000000005d7f         rep  cmpsb byte [rsi], byte [rdi]
0000000000005d81         seta       al
0000000000005d84         sbb        al, 0x0
0000000000005d86         test       al, al
0000000000005d88         setne      al
0000000000005d8b         add        rsp, 0x8
0000000000005d8f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000005d90         sub        rsp, 0x8                                    ; End of unwind block (FDE at 0x815c), Begin of unwind block (FDE at 0x817c), CODE XREF=gettext_quote.part.1+11
0000000000005d94         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000005d99         call       j_nl_langinfo                               ; nl_langinfo
0000000000005d9e         test       rax, rax
0000000000005da1         je         loc_5dc0

0000000000005da3         cmp        byte [rax], 0x0
0000000000005da6         lea        rdx, qword [aAscii]                         ; "ASCII"
0000000000005dad         cmove      rax, rdx
0000000000005db1         add        rsp, 0x8
0000000000005db5         ret
                        ; endp
0000000000005db6         align      64

                     loc_5dc0:
0000000000005dc0         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
0000000000005dc7         add        rsp, 0x8
0000000000005dcb         ret
                        ; endp
0000000000005dcc         align      16                                          ; End of unwind block (FDE at 0x817c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     realloc_groupbuf:
0000000000005dd0         mov        edx, 0x4                                    ; Begin of unwind block (FDE at 0x819c), CODE XREF=mgetgroups+63, mgetgroups+119, mgetgroups+209, mgetgroups+302, mgetgroups+492
0000000000005dd5         mov        rax, rdx
0000000000005dd8         mul        rsi
0000000000005ddb         jo         loc_5e0e

0000000000005ddd         xor        ecx, ecx

                     loc_5ddf:
0000000000005ddf         test       rax, rax                                    ; CODE XREF=realloc_groupbuf+67
0000000000005de2         js         loc_5df8

0000000000005de4         test       rcx, rcx
0000000000005de7         jne        loc_5df8

0000000000005de9         shl        rsi, 0x2                                    ; argument "__size" for method j_realloc
0000000000005ded         jmp        j_realloc                                   ; realloc
                        ; endp
0000000000005df2         align      8

                     loc_5df8:
0000000000005df8         sub        rsp, 0x8                                    ; CODE XREF=realloc_groupbuf+18, realloc_groupbuf+23
0000000000005dfc         call       j___errno_location                          ; __errno_location
0000000000005e01         mov        dword [rax], 0xc
0000000000005e07         xor        eax, eax
0000000000005e09         add        rsp, 0x8
0000000000005e0d         ret
                        ; endp

                     loc_5e0e:
0000000000005e0e         mov        ecx, 0x1                                    ; CODE XREF=realloc_groupbuf+11
0000000000005e13         jmp        loc_5ddf
0000000000005e15         align      32                                          ; End of unwind block (FDE at 0x819c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_44: int32_t, -68


                     mgetgroups:
0000000000005e20         push       r15                                         ; Begin of unwind block (FDE at 0x81b4), CODE XREF=xgetgroups+1
0000000000005e22         push       r14
0000000000005e24         mov        r15, rdx
0000000000005e27         push       r13
0000000000005e29         push       r12
0000000000005e2b         mov        r13d, esi
0000000000005e2e         push       rbp
0000000000005e2f         push       rbx
0000000000005e30         sub        rsp, 0x18
0000000000005e34         mov        rax, qword [fs:0x28]
0000000000005e3d         mov        qword [rsp+0x48+var_40], rax
0000000000005e42         xor        eax, eax
0000000000005e44         test       rdi, rdi
0000000000005e47         je         loc_5f18

0000000000005e4d         mov        rbp, rdi
0000000000005e50         mov        esi, 0xa
0000000000005e55         xor        edi, edi
0000000000005e57         mov        dword [rsp+0x48+var_44], 0xa
0000000000005e5f         call       realloc_groupbuf                            ; realloc_groupbuf
0000000000005e64         test       rax, rax
0000000000005e67         mov        rbx, rax
0000000000005e6a         je         loc_6038

0000000000005e70         lea        r14, qword [rsp+0x48+var_44]

                     loc_5e75:
0000000000005e75         mov        esi, r13d                                   ; argument "__group" for method j_getgrouplist, CODE XREF=mgetgroups+222
0000000000005e78         mov        rcx, r14                                    ; argument "__ngroups" for method j_getgrouplist
0000000000005e7b         mov        rdx, rbx                                    ; argument "__groups" for method j_getgrouplist
0000000000005e7e         mov        rdi, rbp                                    ; argument "__user" for method j_getgrouplist
0000000000005e81         mov        r12d, dword [rsp+0x48+var_44]
0000000000005e86         call       j_getgrouplist                              ; getgrouplist
0000000000005e8b         test       eax, eax
0000000000005e8d         movsxd     rsi, dword [rsp+0x48+var_44]
0000000000005e92         js         loc_5ee0

0000000000005e94         mov        rdi, rbx
0000000000005e97         call       realloc_groupbuf                            ; realloc_groupbuf
0000000000005e9c         test       rax, rax
0000000000005e9f         jne        loc_5f08

                     loc_5ea1:
0000000000005ea1         call       j___errno_location                          ; __errno_location, CODE XREF=mgetgroups+217, mgetgroups+350, mgetgroups+525, mgetgroups+562
0000000000005ea6         mov        r12d, dword [rax]
0000000000005ea9         mov        rbp, rax
0000000000005eac         mov        rdi, rbx                                    ; argument "__ptr" for method j_free
0000000000005eaf         call       j_free                                      ; free
0000000000005eb4         mov        eax, 0xffffffff
0000000000005eb9         mov        dword [rbp], r12d

                     loc_5ebd:
0000000000005ebd         mov        rcx, qword [rsp+0x48+var_40]                ; CODE XREF=mgetgroups+239, mgetgroups+368, mgetgroups+392, mgetgroups+418, mgetgroups+482, mgetgroups+541
0000000000005ec2         xor        rcx, qword [fs:0x28]
0000000000005ecb         jne        loc_6057

0000000000005ed1         add        rsp, 0x18
0000000000005ed5         pop        rbx
0000000000005ed6         pop        rbp
0000000000005ed7         pop        r12
0000000000005ed9         pop        r13
0000000000005edb         pop        r14
0000000000005edd         pop        r15
0000000000005edf         ret
                        ; endp

                     loc_5ee0:
0000000000005ee0         cmp        esi, r12d                                   ; CODE XREF=mgetgroups+114
0000000000005ee3         jne        loc_5eee

0000000000005ee5         add        esi, esi
0000000000005ee7         mov        dword [rsp+0x48+var_44], esi
0000000000005eeb         movsxd     rsi, esi

                     loc_5eee:
0000000000005eee         mov        rdi, rbx                                    ; CODE XREF=mgetgroups+195
0000000000005ef1         call       realloc_groupbuf                            ; realloc_groupbuf
0000000000005ef6         test       rax, rax
0000000000005ef9         je         loc_5ea1

0000000000005efb         mov        rbx, rax
0000000000005efe         jmp        loc_5e75
0000000000005f03         align      8

                     loc_5f08:
0000000000005f08         mov        qword [r15], rax                            ; CODE XREF=mgetgroups+127
0000000000005f0b         mov        eax, dword [rsp+0x48+var_44]
0000000000005f0f         jmp        loc_5ebd
0000000000005f11         align      8

                     loc_5f18:
0000000000005f18         xor        esi, esi                                    ; argument "__list" for method j_getgroups, CODE XREF=mgetgroups+39
0000000000005f1a         xor        edi, edi                                    ; argument "__size" for method j_getgroups
0000000000005f1c         call       j_getgroups                                 ; getgroups
0000000000005f21         test       eax, eax
0000000000005f23         mov        dword [rsp+0x48+var_44], eax
0000000000005f27         js         loc_5fd8

0000000000005f2d         cmp        r13d, 0xffffffff
0000000000005f31         setne      bpl
0000000000005f35         test       eax, eax
0000000000005f37         je         loc_5f42

0000000000005f39         test       bpl, bpl
0000000000005f3c         je         loc_6007

                     loc_5f42:
0000000000005f42         add        eax, 0x1                                    ; CODE XREF=mgetgroups+279
0000000000005f45         xor        edi, edi
0000000000005f47         movsxd     rsi, eax
0000000000005f4a         mov        dword [rsp+0x48+var_44], eax
0000000000005f4e         call       realloc_groupbuf                            ; realloc_groupbuf
0000000000005f53         test       rax, rax
0000000000005f56         mov        rbx, rax
0000000000005f59         je         loc_6038

0000000000005f5f         mov        edi, dword [rsp+0x48+var_44]
0000000000005f63         movzx      ebp, bpl
0000000000005f67         sub        edi, ebp
0000000000005f69         cmp        r13d, 0xffffffff
0000000000005f6d         je         loc_6042

0000000000005f73         lea        rsi, qword [rax+4]                          ; argument "__list" for method j_getgroups
0000000000005f77         call       j_getgroups                                 ; getgroups
0000000000005f7c         test       eax, eax
0000000000005f7e         js         loc_5ea1

0000000000005f84         mov        dword [rbx], r13d
0000000000005f87         add        eax, 0x1

                     loc_5f8a:
0000000000005f8a         cmp        eax, 0x1                                    ; CODE XREF=mgetgroups+519, mgetgroups+556
0000000000005f8d         mov        qword [r15], rbx
0000000000005f90         jle        loc_5ebd

0000000000005f96         movsxd     rdx, eax
0000000000005f99         mov        edi, dword [rbx]
0000000000005f9b         lea        rsi, qword [rbx+rdx*4]
0000000000005f9f         lea        rdx, qword [rbx+4]
0000000000005fa3         cmp        rsi, rdx
0000000000005fa6         ja         loc_5fc8

0000000000005fa8         jmp        loc_5ebd
0000000000005fad         align      16

                     loc_5fb0:
0000000000005fb0         cmp        ecx, dword [rbx]                            ; CODE XREF=mgetgroups+428
0000000000005fb2         je         loc_5fce

0000000000005fb4         mov        dword [rbx+4], ecx
0000000000005fb7         add        rbx, 0x4

                     loc_5fbb:
0000000000005fbb         add        rdx, 0x4                                    ; CODE XREF=mgetgroups+433
0000000000005fbf         cmp        rsi, rdx
0000000000005fc2         jbe        loc_5ebd

                     loc_5fc8:
0000000000005fc8         mov        ecx, dword [rdx]                            ; CODE XREF=mgetgroups+390
0000000000005fca         cmp        ecx, edi
0000000000005fcc         jne        loc_5fb0

                     loc_5fce:
0000000000005fce         sub        eax, 0x1                                    ; CODE XREF=mgetgroups+402
0000000000005fd1         jmp        loc_5fbb
0000000000005fd3         align      8

                     loc_5fd8:
0000000000005fd8         call       j___errno_location                          ; __errno_location, CODE XREF=mgetgroups+263
0000000000005fdd         cmp        dword [rax], 0x26
0000000000005fe0         jne        loc_6038

0000000000005fe2         xor        edi, edi                                    ; argument "__ptr" for method j_realloc
0000000000005fe4         mov        esi, 0x4                                    ; argument "__size" for method j_realloc
0000000000005fe9         call       j_realloc                                   ; realloc
0000000000005fee         test       rax, rax
0000000000005ff1         je         loc_6038

0000000000005ff3         mov        qword [r15], rax
0000000000005ff6         mov        dword [rax], r13d
0000000000005ff9         xor        eax, eax
0000000000005ffb         cmp        r13d, 0xffffffff
0000000000005fff         setne      al
0000000000006002         jmp        loc_5ebd

                     loc_6007:
0000000000006007         xor        edi, edi                                    ; CODE XREF=mgetgroups+284
0000000000006009         movsxd     rsi, eax
000000000000600c         call       realloc_groupbuf                            ; realloc_groupbuf
0000000000006011         test       rax, rax
0000000000006014         mov        rbx, rax
0000000000006017         je         loc_6038

0000000000006019         mov        edi, dword [rsp+0x48+var_44]                ; argument "__size" for method j_getgroups
000000000000601d         mov        rsi, rbx                                    ; argument "__list" for method j_getgroups
0000000000006020         call       j_getgroups                                 ; getgroups
0000000000006025         test       eax, eax
0000000000006027         jns        loc_5f8a

000000000000602d         jmp        loc_5ea1
0000000000006032         align      8

                     loc_6038:
0000000000006038         mov        eax, 0xffffffff                             ; CODE XREF=mgetgroups+74, mgetgroups+313, mgetgroups+448, mgetgroups+465, mgetgroups+503
000000000000603d         jmp        loc_5ebd

                     loc_6042:
0000000000006042         mov        rsi, rax                                    ; argument "__list" for method j_getgroups, CODE XREF=mgetgroups+333
0000000000006045         call       j_getgroups                                 ; getgroups
000000000000604a         test       eax, eax
000000000000604c         jns        loc_5f8a

0000000000006052         jmp        loc_5ea1

                     loc_6057:
0000000000006057         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=mgetgroups+171
                        ; endp
000000000000605c         align      32                                          ; End of unwind block (FDE at 0x81b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
0000000000006060         push       r12                                         ; Begin of unwind block (FDE at 0x8204), CODE XREF=close_stream+21
0000000000006062         push       rbp
0000000000006063         push       rbx
0000000000006064         mov        rbx, rdi
0000000000006067         call       j_fileno                                    ; fileno
000000000000606c         test       eax, eax
000000000000606e         mov        rdi, rbx
0000000000006071         js         loc_60c7

0000000000006073         call       j___freading                                ; __freading
0000000000006078         test       eax, eax
000000000000607a         jne        loc_60a8

                     loc_607c:
000000000000607c         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
000000000000607f         call       rpl_fflush                                  ; rpl_fflush
0000000000006084         test       eax, eax
0000000000006086         je         loc_60c4

0000000000006088         call       j___errno_location                          ; __errno_location
000000000000608d         mov        r12d, dword [rax]
0000000000006090         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
0000000000006093         mov        rbp, rax
0000000000006096         call       j_fclose                                    ; fclose
000000000000609b         test       r12d, r12d
000000000000609e         jne        loc_60d0

                     loc_60a0:
00000000000060a0         pop        rbx                                         ; CODE XREF=rpl_fclose+121
00000000000060a1         pop        rbp
00000000000060a2         pop        r12
00000000000060a4         ret
                        ; endp
00000000000060a5         align      8

                     loc_60a8:
00000000000060a8         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
00000000000060ab         call       j_fileno                                    ; fileno
00000000000060b0         xor        esi, esi                                    ; argument "__offset" for method j_lseek
00000000000060b2         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
00000000000060b7         mov        edi, eax                                    ; argument "__fd" for method j_lseek
00000000000060b9         call       j_lseek                                     ; lseek
00000000000060be         cmp        rax, 0xffffffffffffffff
00000000000060c2         jne        loc_607c

                     loc_60c4:
00000000000060c4         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_60c7:
00000000000060c7         pop        rbx                                         ; CODE XREF=rpl_fclose+17
00000000000060c8         pop        rbp
00000000000060c9         pop        r12
00000000000060cb         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_60d0:
00000000000060d0         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
00000000000060d4         mov        eax, 0xffffffff
00000000000060d9         jmp        loc_60a0
00000000000060db         align      32                                          ; End of unwind block (FDE at 0x8204)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
00000000000060e0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x823c), CODE XREF=rpl_fclose+31
00000000000060e3         push       rbx
00000000000060e4         mov        rbx, rdi
00000000000060e7         je         loc_60fa

00000000000060e9         call       j___freading                                ; __freading
00000000000060ee         test       eax, eax
00000000000060f0         je         loc_60fa

00000000000060f2         test       dword [rbx], 0x100
00000000000060f8         jne        loc_6108

                     loc_60fa:
00000000000060fa         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
00000000000060fd         pop        rbx
00000000000060fe         jmp        j_fflush                                    ; fflush
                        ; endp
0000000000006103         align      8

                     loc_6108:
0000000000006108         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
000000000000610b         mov        edx, 0x1
0000000000006110         xor        esi, esi
0000000000006112         call       rpl_fseeko                                  ; rpl_fseeko
0000000000006117         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
000000000000611a         pop        rbx
000000000000611b         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
0000000000006120         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0x823c), Begin of unwind block (FDE at 0x825c), CODE XREF=rpl_fflush+50
0000000000006124         cmp        qword [rdi+0x10], rax
0000000000006128         je         loc_6130

                     j_j_fseeko:        // fseeko
000000000000612a         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
000000000000612f         align      16

                     loc_6130:
0000000000006130         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
0000000000006134         cmp        qword [rdi+0x28], rax
0000000000006138         jne        j_j_fseeko                                  ; fseeko

000000000000613a         cmp        qword [rdi+0x48], 0x0
000000000000613f         jne        j_j_fseeko                                  ; fseeko

0000000000006141         push       r12
0000000000006143         push       rbp
0000000000006144         mov        r12d, edx
0000000000006147         push       rbx
0000000000006148         mov        rbp, rsi
000000000000614b         mov        rbx, rdi
000000000000614e         call       j_fileno                                    ; fileno
0000000000006153         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000006156         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000006159         mov        edi, eax                                    ; argument "__fd" for method j_lseek
000000000000615b         call       j_lseek                                     ; lseek
0000000000006160         cmp        rax, 0xffffffffffffffff
0000000000006164         je         loc_6172

0000000000006166         and        dword [rbx], 0xffffffef
0000000000006169         mov        qword [rbx+0x90], rax
0000000000006170         xor        eax, eax

                     loc_6172:
0000000000006172         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
0000000000006173         pop        rbp
0000000000006174         pop        r12
0000000000006176         ret
                        ; endp
0000000000006177         align      128                                         ; End of unwind block (FDE at 0x825c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
0000000000006180         push       r15                                         ; Begin of unwind block (FDE at 0x828c), DATA XREF=_start+22
0000000000006182         push       r14
0000000000006184         mov        r15, rdx
0000000000006187         push       r13
0000000000006189         push       r12
000000000000618b         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
0000000000006192         push       rbp
0000000000006193         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
000000000000619a         push       rbx
000000000000619b         mov        r13d, edi
000000000000619e         mov        r14, rsi
00000000000061a1         sub        rbp, r12
00000000000061a4         sub        rsp, 0x8
00000000000061a8         sar        rbp, 0x3
00000000000061ac         call       _init                                       ; _init
00000000000061b1         test       rbp, rbp
00000000000061b4         je         loc_61d6

00000000000061b6         xor        ebx, ebx
00000000000061b8         nop        dword [rax+rax]

                     loc_61c0:
00000000000061c0         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
00000000000061c3         mov        rsi, r14
00000000000061c6         mov        edi, r13d
00000000000061c9         call       qword [r12+rbx*8]
00000000000061cd         add        rbx, 0x1
00000000000061d1         cmp        rbp, rbx
00000000000061d4         jne        loc_61c0

                     loc_61d6:
00000000000061d6         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
00000000000061da         pop        rbx
00000000000061db         pop        rbp
00000000000061dc         pop        r12
00000000000061de         pop        r13
00000000000061e0         pop        r14
00000000000061e2         pop        r15
00000000000061e4         ret
                        ; endp
00000000000061e5         align      16                                          ; End of unwind block (FDE at 0x828c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
00000000000061f0         ret                                                    ; Begin of unwind block (FDE at 0x82d4), DATA XREF=_start+15
                        ; endp
00000000000061f2         align      512                                         ; End of unwind block (FDE at 0x82d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
0000000000006200         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0x82ec), __dso_handle, CODE XREF=main+83
0000000000006207         xor        esi, esi
0000000000006209         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
000000000000620e         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x82ec)
000000000000620f         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x6210; 0x6219[ (9 bytes)
        ; File offset : [25104; 25113[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
0000000000006210         sub        rsp, 0x8
0000000000006214         add        rsp, 0x8
0000000000006218         ret
                        ; endp
0000000000006219         db  0x00 ; '.'
000000000000621a         db  0x00 ; '.'
000000000000621b         db  0x00 ; '.'
000000000000621c         db  0x00 ; '.'
000000000000621d         db  0x00 ; '.'
000000000000621e         db  0x00 ; '.'
000000000000621f         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x6220; 0x7377[ (4439 bytes)
        ; File offset : [25120; 29559[ (4439 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
0000000000006220         db  0x01 ; '.'
0000000000006221         db  0x00 ; '.'
0000000000006222         db  0x02 ; '.'
0000000000006223         db  0x00 ; '.'
0000000000006224         db  0x00 ; '.'
0000000000006225         db  0x00 ; '.'
0000000000006226         db  0x00 ; '.'
0000000000006227         db  0x00 ; '.'
                     aCannotFindName:
0000000000006228         db         "cannot find name for user ID %s", 0        ; DATA XREF=print_stuff+1087
                     aFailedToGetGro:
0000000000006248         db         "failed to get groups for user %s", 0       ; DATA XREF=print_stuff+1336, print_group_list+421
0000000000006269         align      16
                     aFailedToGetGro_6270:        // aFailedToGetGro
0000000000006270         db         "failed to get groups for the current process", 0 ; DATA XREF=print_stuff+1016, print_group_list+480
000000000000629d         align      32
                     aTrySHelpForMor:
00000000000062a0         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
00000000000062c7         align      8
                     aUsageSOptionUs:
00000000000062c8         db         "Usage: %s [OPTION]... [USER]...\n", 0      ; DATA XREF=usage+93
00000000000062e9         align      16
                     aPrintUserAndGr:
00000000000062f0         db         "Print user and group information for each specified USER,\nor (when USER omitted) for the current user.\n\n", 0 ; DATA XREF=usage+132
0000000000006359         align      32
                     aAIgnoreForComp:
0000000000006360         db         "  -a             ignore, for compatibility with other versions\n  -Z, --context  print only the security context of the process\n  -g, --group    print only the effective group ID\n  -G, --groups   print all group IDs\n  -n, --name     print a name instead of " ; DATA XREF=usage+169
0000000000006460         db         "a number, for -ugG\n  -r, --real     print the real ID instead of the effective ID, with -ugG\n  -u, --user     print only the effective user ID\n  -z, --zero     delimit entries with NUL characters, not whitespace;\n                   not permitted in default"
0000000000006560         db         " format\n", 0
0000000000006569         align      16
                     aHelpDisplayThi:
0000000000006570         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+206
000000000000659d         align      32
                     aVersionOutputV:
00000000000065a0         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+243
00000000000065d6         align      8
                     aNwithoutAnyOpt:
00000000000065d8         db         "\nWithout any OPTION, print some useful set of identified information.\n", 0 ; DATA XREF=usage+280
000000000000661f         align      32
                     aHttpswwwgnuorg:
0000000000006620         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+527, usage+627, usage+720, usage+830, emit_bug_reporting_address+61
                     aReportAnyTrans:
0000000000006648         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+871
000000000000668f         align      16
                     aOrAvailableLoc:
0000000000006690         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+670
00000000000066c3         align      8
                     aContextZWorksO:
00000000000066c8         db         "--context (-Z) works only on an SELinux-enabled kernel", 0 ; DATA XREF=main+1164
00000000000066ff         align      256
                     aCannotPrintOnl_6700:        // aCannotPrintOnl
0000000000006700         db         "cannot print \"only\" of more than one choice", 0 ; DATA XREF=main+1269
000000000000672c         align      16
                     aCannotPrintOnl:
0000000000006730         db         "cannot print only names or real IDs in default format", 0 ; DATA XREF=main+1341
0000000000006766         align      8
                     aOptionZeroNotP:
0000000000006768         db         "option --zero not permitted in default format", 0 ; DATA XREF=main+1305
0000000000006796         db  0x28 ; '('                                         ; DATA XREF=print_stuff+540, print_stuff+636, print_stuff+851, print_stuff+958, print_stuff+1268
0000000000006797         db  0x25 ; '%'
0000000000006798         db  0x73 ; 's'
0000000000006799         db  0x29 ; ')'
000000000000679a         db  0x00 ; '.'
                     aGids:
000000000000679b         db         " gid=%s", 0                                ; DATA XREF=print_stuff+577
00000000000067a3         db  0x20 ; ' '                                         ; DATA XREF=print_stuff+892
00000000000067a4         db  0x65 ; 'e'
                     aUids:
00000000000067a5         db         "uid=%s", 0                                 ; DATA XREF=print_stuff+478
                     aEgids:
00000000000067ac         db         " egid=%s", 0                               ; DATA XREF=print_stuff+788
                     aGroups:
00000000000067b5         db         " groups=", 0                               ; DATA XREF=print_stuff+1151
00000000000067be         db  0x69 ; 'i'                                         ; DATA XREF=main+241, usage+305, usage+620, usage+804, usage+823, usage+857
00000000000067bf         db  0x64 ; 'd'
00000000000067c0         db  0x00 ; '.'
00000000000067c1         db  0x5b ; '['                                         ; DATA XREF=usage+317
00000000000067c2         db  0x00 ; '.'
                     aTestInvocation:
00000000000067c3         db         "test invocation", 0                        ; DATA XREF=usage+356
                     aMulticallInvoc:
00000000000067d3         db         "Multi-call invocation", 0                  ; DATA XREF=usage+404
                     aSha224sum:
00000000000067e9         db         "sha224sum", 0                              ; DATA XREF=usage+421
                     aSha2Utilities:
00000000000067f3         db         "sha2 utilities", 0                         ; DATA XREF=usage+433
                     aSha256sum:
0000000000006802         db         "sha256sum", 0                              ; DATA XREF=usage+324
                     aSha384sum:
000000000000680c         db         "sha384sum", 0                              ; DATA XREF=usage+368
                     aSha512sum:
0000000000006816         db         "sha512sum", 0                              ; DATA XREF=usage+392
                     aNsOnlineHelpSn:
0000000000006820         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+506
0000000000006837         db  0x47 ; 'G'                                         ; DATA XREF=main+234, usage+534, usage+727, emit_bug_reporting_address+68
0000000000006838         db  0x4e ; 'N'
0000000000006839         db  0x55 ; 'U'
000000000000683a         db  0x20 ; ' '
                     aCoreutils:
000000000000683b         db         "coreutils", 0                              ; DATA XREF=main+52, main+64, usage+380
0000000000006845         db  0x65 ; 'e'                                         ; DATA XREF=usage+573, usage+766
0000000000006846         db  0x6e ; 'n'
0000000000006847         db  0x5f ; '_'
0000000000006848         db  0x00 ; '.'
                     aFullDocumentat:
0000000000006849         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+601, usage+790
                     aUsrlocalsharel:
0000000000006864         db         "/usr/local/share/locale", 0                ; DATA XREF=main+45
                     aDavidMackenzie:
000000000000687c         db         "David MacKenzie", 0                        ; DATA XREF=main+220
                     aArnoldRobbins:
000000000000688c         db         "Arnold Robbins", 0                         ; DATA XREF=main+227
                     aAgnruzgz:
000000000000689b         db         "agnruzGZ", 0                               ; DATA XREF=main+96
                     aPosixlycorrect:
00000000000068a4         db         "POSIXLY_CORRECT", 0                        ; DATA XREF=main+881
                     aSNoSuchUser:
00000000000068b4         db         "%s: no such user", 0                       ; DATA XREF=main+497
                     aCannotGetEffec:
00000000000068c5         db         "cannot get effective UID", 0               ; DATA XREF=main+941
                     aCannotGetRealU:
00000000000068de         db         "cannot get real UID", 0                    ; DATA XREF=main+1377
                     aCannotGetEffec_68f2:        // aCannotGetEffec
00000000000068f2         db         "cannot get effective GID", 0               ; DATA XREF=main+1413
                     aCannotGetRealG:
000000000000690b         db         "cannot get real GID", 0                    ; DATA XREF=main+1052
                     aContext:
000000000000691f         db         "context", 0
                     aGroups_6927:        // aGroups
0000000000006927         db         "groups", 0
                     aName:
000000000000692e         db         "name", 0
                     aReal:
0000000000006933         db         "real", 0
                     aZero:
0000000000006938         db         "zero", 0
                     aHelp:
000000000000693d         db         "help", 0
                     aVersion:
0000000000006942         db         "version", 0
000000000000694a         align      16
                     aCannotFindName_6950:        // aCannotFindName
0000000000006950         db         "cannot find name for group ID %lu", 0      ; DATA XREF=print_group+40
                     a831:
0000000000006972         db         "8.31", 0                                   ; DATA XREF=Version
                     aWriteError:
0000000000006977         db         "write error", 0                            ; DATA XREF=close_stdout+67
                     aSS:
0000000000006983         db         "%s: %s", 0                                 ; DATA XREF=close_stdout+108
000000000000698a         align      16
                     aANullArgv0WasP:
0000000000006990         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
00000000000069c8         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
00000000000069d0         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
00000000000069d1         db  0x74 ; 't'
00000000000069d2         db  0x2d ; '-'
00000000000069d3         db  0x00 ; '.'
00000000000069d4         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
00000000000069d5         db  0x80 ; '.'
00000000000069d6         db  0x98 ; '.'
00000000000069d7         db  0x00 ; '.'
00000000000069d8         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
00000000000069d9         db  0x80 ; '.'
00000000000069da         db  0x99 ; '.'
00000000000069db         db  0x00 ; '.'
00000000000069dc         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
00000000000069dd         db  0x07 ; '.'
00000000000069de         db  0x65 ; 'e'
00000000000069df         db  0x00 ; '.'
00000000000069e0         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
00000000000069e1         db  0xaf ; '.'
00000000000069e2         db  0x00 ; '.'
00000000000069e3         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_3620+1451, sub_3620+1493, sub_3620+2429
00000000000069e4         db  0x00 ; '.'
00000000000069e5         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_3620+132, sub_3620+1338, sub_3620+1670, sub_3620+1697, sub_3620+2352
00000000000069e6         db  0x00 ; '.'
00000000000069e7         db  0x60 ; '`'                                         ; DATA XREF=sub_3620+1627, sub_3620+1654
00000000000069e8         db  0x00 ; '.'
                     aLiteral:
00000000000069e9         db         "literal", 0
                     aShell:
00000000000069f1         db         "shell", 0
                     aShellalways:
00000000000069f7         db         "shell-always", 0
0000000000006a04         db  0x73 ; 's'
0000000000006a05         db  0x68 ; 'h'
0000000000006a06         db  0x65 ; 'e'
0000000000006a07         db  0x6c ; 'l'
0000000000006a08         db  0x6c ; 'l'
0000000000006a09         db  0x2d ; '-'
                     aEscape:
0000000000006a0a         db         "escape", 0
                     aShellescapealw:
0000000000006a11         db         "shell-escape-always", 0
                     aCmaybe:
0000000000006a25         db         "c-maybe", 0
                     aClocale:
0000000000006a2d         db         "clocale", 0
0000000000006a35         align      64
                     switch_table_6a40:        // switch_table
0000000000006a40         dd         quotearg_buffer_restyled.loc_3d1a-switch_table_6a40, quotearg_buffer_restyled.loc_2f73-switch_table_6a40, quotearg_buffer_restyled.loc_3f48-switch_table_6a40, quotearg_buffer_restyled.loc_3d54-switch_table_6a40 ; switch table used at 0x2f71 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
0000000000006a50         dd         quotearg_buffer_restyled.loc_3b44-switch_table_6a40, quotearg_buffer_restyled.loc_3ba0-switch_table_6a40, quotearg_buffer_restyled.loc_3bf5-switch_table_6a40, quotearg_buffer_restyled.loc_3c3a-switch_table_6a40
0000000000006a60         dd         3 dup (quotearg_buffer_restyled.loc_3c74-switch_table_6a40)
0000000000006a6c         db  0x84 ; '.'                                         ; DATA XREF=quotearg_buffer_restyled+477
0000000000006a6d         db  0xc8 ; '.'
0000000000006a6e         db  0xff ; '.'
0000000000006a6f         db  0xff ; '.'
0000000000006a70         db  0x6c ; 'l'
0000000000006a71         db  0xc9 ; '.'
0000000000006a72         db  0xff ; '.'
0000000000006a73         db  0xff ; '.'
0000000000006a74         db  0x6c ; 'l'
0000000000006a75         db  0xc9 ; '.'
0000000000006a76         db  0xff ; '.'
0000000000006a77         db  0xff ; '.'
0000000000006a78         db  0x6c ; 'l'
0000000000006a79         db  0xc9 ; '.'
0000000000006a7a         db  0xff ; '.'
0000000000006a7b         db  0xff ; '.'
0000000000006a7c         db  0x6c ; 'l'
0000000000006a7d         db  0xc9 ; '.'
0000000000006a7e         db  0xff ; '.'
0000000000006a7f         db  0xff ; '.'
0000000000006a80         db  0x6c ; 'l'
0000000000006a81         db  0xc9 ; '.'
0000000000006a82         db  0xff ; '.'
0000000000006a83         db  0xff ; '.'
0000000000006a84         db  0x6c ; 'l'
0000000000006a85         db  0xc9 ; '.'
0000000000006a86         db  0xff ; '.'
0000000000006a87         db  0xff ; '.'
0000000000006a88         db  0xc4 ; '.'
0000000000006a89         db  0xc8 ; '.'
0000000000006a8a         db  0xff ; '.'
0000000000006a8b         db  0xff ; '.'
0000000000006a8c         db  0xcc ; '.'
0000000000006a8d         db  0xc7 ; '.'
0000000000006a8e         db  0xff ; '.'
0000000000006a8f         db  0xff ; '.'
0000000000006a90         db  0x8c ; '.'
0000000000006a91         db  0xc7 ; '.'
0000000000006a92         db  0xff ; '.'
0000000000006a93         db  0xff ; '.'
0000000000006a94         db  0x54 ; 'T'
0000000000006a95         db  0xc9 ; '.'
0000000000006a96         db  0xff ; '.'
0000000000006a97         db  0xff ; '.'
0000000000006a98         db  0x44 ; 'D'
0000000000006a99         db  0xc9 ; '.'
0000000000006a9a         db  0xff ; '.'
0000000000006a9b         db  0xff ; '.'
0000000000006a9c         db  0x34 ; '4'
0000000000006a9d         db  0xc9 ; '.'
0000000000006a9e         db  0xff ; '.'
0000000000006a9f         db  0xff ; '.'
0000000000006aa0         db  0x24 ; '$'
0000000000006aa1         db  0xc9 ; '.'
0000000000006aa2         db  0xff ; '.'
0000000000006aa3         db  0xff ; '.'
0000000000006aa4         db  0x6c ; 'l'
0000000000006aa5         db  0xc9 ; '.'
0000000000006aa6         db  0xff ; '.'
0000000000006aa7         db  0xff ; '.'
0000000000006aa8         db  0x6c ; 'l'
0000000000006aa9         db  0xc9 ; '.'
0000000000006aaa         db  0xff ; '.'
0000000000006aab         db  0xff ; '.'
0000000000006aac         db  0x6c ; 'l'
0000000000006aad         db  0xc9 ; '.'
0000000000006aae         db  0xff ; '.'
0000000000006aaf         db  0xff ; '.'
0000000000006ab0         db  0x6c ; 'l'
0000000000006ab1         db  0xc9 ; '.'
0000000000006ab2         db  0xff ; '.'
0000000000006ab3         db  0xff ; '.'
0000000000006ab4         db  0x6c ; 'l'
0000000000006ab5         db  0xc9 ; '.'
0000000000006ab6         db  0xff ; '.'
0000000000006ab7         db  0xff ; '.'
0000000000006ab8         db  0x6c ; 'l'
0000000000006ab9         db  0xc9 ; '.'
0000000000006aba         db  0xff ; '.'
0000000000006abb         db  0xff ; '.'
0000000000006abc         db  0x6c ; 'l'
0000000000006abd         db  0xc9 ; '.'
0000000000006abe         db  0xff ; '.'
0000000000006abf         db  0xff ; '.'
0000000000006ac0         db  0x6c ; 'l'
0000000000006ac1         db  0xc9 ; '.'
0000000000006ac2         db  0xff ; '.'
0000000000006ac3         db  0xff ; '.'
0000000000006ac4         db  0x6c ; 'l'
0000000000006ac5         db  0xc9 ; '.'
0000000000006ac6         db  0xff ; '.'
0000000000006ac7         db  0xff ; '.'
0000000000006ac8         db  0x6c ; 'l'
0000000000006ac9         db  0xc9 ; '.'
0000000000006aca         db  0xff ; '.'
0000000000006acb         db  0xff ; '.'
0000000000006acc         db  0x6c ; 'l'
0000000000006acd         db  0xc9 ; '.'
0000000000006ace         db  0xff ; '.'
0000000000006acf         db  0xff ; '.'
0000000000006ad0         db  0x6c ; 'l'
0000000000006ad1         db  0xc9 ; '.'
0000000000006ad2         db  0xff ; '.'
0000000000006ad3         db  0xff ; '.'
0000000000006ad4         db  0x6c ; 'l'
0000000000006ad5         db  0xc9 ; '.'
0000000000006ad6         db  0xff ; '.'
0000000000006ad7         db  0xff ; '.'
0000000000006ad8         db  0x6c ; 'l'
0000000000006ad9         db  0xc9 ; '.'
0000000000006ada         db  0xff ; '.'
0000000000006adb         db  0xff ; '.'
0000000000006adc         db  0x6c ; 'l'
0000000000006add         db  0xc9 ; '.'
0000000000006ade         db  0xff ; '.'
0000000000006adf         db  0xff ; '.'
0000000000006ae0         db  0x6c ; 'l'
0000000000006ae1         db  0xc9 ; '.'
0000000000006ae2         db  0xff ; '.'
0000000000006ae3         db  0xff ; '.'
0000000000006ae4         db  0x6c ; 'l'
0000000000006ae5         db  0xc9 ; '.'
0000000000006ae6         db  0xff ; '.'
0000000000006ae7         db  0xff ; '.'
0000000000006ae8         db  0x6c ; 'l'
0000000000006ae9         db  0xc9 ; '.'
0000000000006aea         db  0xff ; '.'
0000000000006aeb         db  0xff ; '.'
0000000000006aec         db  0x14 ; '.'
0000000000006aed         db  0xc9 ; '.'
0000000000006aee         db  0xff ; '.'
0000000000006aef         db  0xff ; '.'
0000000000006af0         db  0x04 ; '.'
0000000000006af1         db  0xc9 ; '.'
0000000000006af2         db  0xff ; '.'
0000000000006af3         db  0xff ; '.'
0000000000006af4         db  0x04 ; '.'
0000000000006af5         db  0xc9 ; '.'
0000000000006af6         db  0xff ; '.'
0000000000006af7         db  0xff ; '.'
0000000000006af8         db  0xd4 ; '.'
0000000000006af9         db  0xc8 ; '.'
0000000000006afa         db  0xff ; '.'
0000000000006afb         db  0xff ; '.'
0000000000006afc         db  0x04 ; '.'
0000000000006afd         db  0xc9 ; '.'
0000000000006afe         db  0xff ; '.'
0000000000006aff         db  0xff ; '.'
0000000000006b00         db  0xac ; '.'
0000000000006b01         db  0xc8 ; '.'
0000000000006b02         db  0xff ; '.'
0000000000006b03         db  0xff ; '.'
0000000000006b04         db  0x04 ; '.'
0000000000006b05         db  0xc9 ; '.'
0000000000006b06         db  0xff ; '.'
0000000000006b07         db  0xff ; '.'
0000000000006b08         db  0x67 ; 'g'
0000000000006b09         db  0xc7 ; '.'
0000000000006b0a         db  0xff ; '.'
0000000000006b0b         db  0xff ; '.'
0000000000006b0c         db  0x04 ; '.'
0000000000006b0d         db  0xc9 ; '.'
0000000000006b0e         db  0xff ; '.'
0000000000006b0f         db  0xff ; '.'
0000000000006b10         db  0x04 ; '.'
0000000000006b11         db  0xc9 ; '.'
0000000000006b12         db  0xff ; '.'
0000000000006b13         db  0xff ; '.'
0000000000006b14         db  0x04 ; '.'
0000000000006b15         db  0xc9 ; '.'
0000000000006b16         db  0xff ; '.'
0000000000006b17         db  0xff ; '.'
0000000000006b18         db  0xac ; '.'
0000000000006b19         db  0xc8 ; '.'
0000000000006b1a         db  0xff ; '.'
0000000000006b1b         db  0xff ; '.'
0000000000006b1c         db  0xac ; '.'
0000000000006b1d         db  0xc8 ; '.'
0000000000006b1e         db  0xff ; '.'
0000000000006b1f         db  0xff ; '.'
0000000000006b20         db  0xac ; '.'
0000000000006b21         db  0xc8 ; '.'
0000000000006b22         db  0xff ; '.'
0000000000006b23         db  0xff ; '.'
0000000000006b24         db  0xac ; '.'
0000000000006b25         db  0xc8 ; '.'
0000000000006b26         db  0xff ; '.'
0000000000006b27         db  0xff ; '.'
0000000000006b28         db  0xac ; '.'
0000000000006b29         db  0xc8 ; '.'
0000000000006b2a         db  0xff ; '.'
0000000000006b2b         db  0xff ; '.'
0000000000006b2c         db  0xac ; '.'
0000000000006b2d         db  0xc8 ; '.'
0000000000006b2e         db  0xff ; '.'
0000000000006b2f         db  0xff ; '.'
0000000000006b30         db  0xac ; '.'
0000000000006b31         db  0xc8 ; '.'
0000000000006b32         db  0xff ; '.'
0000000000006b33         db  0xff ; '.'
0000000000006b34         db  0xac ; '.'
0000000000006b35         db  0xc8 ; '.'
0000000000006b36         db  0xff ; '.'
0000000000006b37         db  0xff ; '.'
0000000000006b38         db  0xac ; '.'
0000000000006b39         db  0xc8 ; '.'
0000000000006b3a         db  0xff ; '.'
0000000000006b3b         db  0xff ; '.'
0000000000006b3c         db  0xac ; '.'
0000000000006b3d         db  0xc8 ; '.'
0000000000006b3e         db  0xff ; '.'
0000000000006b3f         db  0xff ; '.'
0000000000006b40         db  0xac ; '.'
0000000000006b41         db  0xc8 ; '.'
0000000000006b42         db  0xff ; '.'
0000000000006b43         db  0xff ; '.'
0000000000006b44         db  0xac ; '.'
0000000000006b45         db  0xc8 ; '.'
0000000000006b46         db  0xff ; '.'
0000000000006b47         db  0xff ; '.'
0000000000006b48         db  0xac ; '.'
0000000000006b49         db  0xc8 ; '.'
0000000000006b4a         db  0xff ; '.'
0000000000006b4b         db  0xff ; '.'
0000000000006b4c         db  0xac ; '.'
0000000000006b4d         db  0xc8 ; '.'
0000000000006b4e         db  0xff ; '.'
0000000000006b4f         db  0xff ; '.'
0000000000006b50         db  0xac ; '.'
0000000000006b51         db  0xc8 ; '.'
0000000000006b52         db  0xff ; '.'
0000000000006b53         db  0xff ; '.'
0000000000006b54         db  0xac ; '.'
0000000000006b55         db  0xc8 ; '.'
0000000000006b56         db  0xff ; '.'
0000000000006b57         db  0xff ; '.'
0000000000006b58         db  0x04 ; '.'
0000000000006b59         db  0xc9 ; '.'
0000000000006b5a         db  0xff ; '.'
0000000000006b5b         db  0xff ; '.'
0000000000006b5c         db  0x04 ; '.'
0000000000006b5d         db  0xc9 ; '.'
0000000000006b5e         db  0xff ; '.'
0000000000006b5f         db  0xff ; '.'
0000000000006b60         db  0x04 ; '.'
0000000000006b61         db  0xc9 ; '.'
0000000000006b62         db  0xff ; '.'
0000000000006b63         db  0xff ; '.'
0000000000006b64         db  0x04 ; '.'
0000000000006b65         db  0xc9 ; '.'
0000000000006b66         db  0xff ; '.'
0000000000006b67         db  0xff ; '.'
0000000000006b68         db  0x37 ; '7'
0000000000006b69         db  0xc7 ; '.'
0000000000006b6a         db  0xff ; '.'
0000000000006b6b         db  0xff ; '.'
0000000000006b6c         db  0x6c ; 'l'
0000000000006b6d         db  0xc9 ; '.'
0000000000006b6e         db  0xff ; '.'
0000000000006b6f         db  0xff ; '.'
0000000000006b70         db  0xac ; '.'
0000000000006b71         db  0xc8 ; '.'
0000000000006b72         db  0xff ; '.'
0000000000006b73         db  0xff ; '.'
0000000000006b74         db  0xac ; '.'
0000000000006b75         db  0xc8 ; '.'
0000000000006b76         db  0xff ; '.'
0000000000006b77         db  0xff ; '.'
0000000000006b78         db  0xac ; '.'
0000000000006b79         db  0xc8 ; '.'
0000000000006b7a         db  0xff ; '.'
0000000000006b7b         db  0xff ; '.'
0000000000006b7c         db  0xac ; '.'
0000000000006b7d         db  0xc8 ; '.'
0000000000006b7e         db  0xff ; '.'
0000000000006b7f         db  0xff ; '.'
0000000000006b80         db  0xac ; '.'
0000000000006b81         db  0xc8 ; '.'
0000000000006b82         db  0xff ; '.'
0000000000006b83         db  0xff ; '.'
0000000000006b84         db  0xac ; '.'
0000000000006b85         db  0xc8 ; '.'
0000000000006b86         db  0xff ; '.'
0000000000006b87         db  0xff ; '.'
0000000000006b88         db  0xac ; '.'
0000000000006b89         db  0xc8 ; '.'
0000000000006b8a         db  0xff ; '.'
0000000000006b8b         db  0xff ; '.'
0000000000006b8c         db  0xac ; '.'
0000000000006b8d         db  0xc8 ; '.'
0000000000006b8e         db  0xff ; '.'
0000000000006b8f         db  0xff ; '.'
0000000000006b90         db  0xac ; '.'
0000000000006b91         db  0xc8 ; '.'
0000000000006b92         db  0xff ; '.'
0000000000006b93         db  0xff ; '.'
0000000000006b94         db  0xac ; '.'
0000000000006b95         db  0xc8 ; '.'
0000000000006b96         db  0xff ; '.'
0000000000006b97         db  0xff ; '.'
0000000000006b98         db  0xac ; '.'
0000000000006b99         db  0xc8 ; '.'
0000000000006b9a         db  0xff ; '.'
0000000000006b9b         db  0xff ; '.'
0000000000006b9c         db  0xac ; '.'
0000000000006b9d         db  0xc8 ; '.'
0000000000006b9e         db  0xff ; '.'
0000000000006b9f         db  0xff ; '.'
0000000000006ba0         db  0xac ; '.'
0000000000006ba1         db  0xc8 ; '.'
0000000000006ba2         db  0xff ; '.'
0000000000006ba3         db  0xff ; '.'
0000000000006ba4         db  0xac ; '.'
0000000000006ba5         db  0xc8 ; '.'
0000000000006ba6         db  0xff ; '.'
0000000000006ba7         db  0xff ; '.'
0000000000006ba8         db  0xac ; '.'
0000000000006ba9         db  0xc8 ; '.'
0000000000006baa         db  0xff ; '.'
0000000000006bab         db  0xff ; '.'
0000000000006bac         db  0xac ; '.'
0000000000006bad         db  0xc8 ; '.'
0000000000006bae         db  0xff ; '.'
0000000000006baf         db  0xff ; '.'
0000000000006bb0         db  0xac ; '.'
0000000000006bb1         db  0xc8 ; '.'
0000000000006bb2         db  0xff ; '.'
0000000000006bb3         db  0xff ; '.'
0000000000006bb4         db  0xac ; '.'
0000000000006bb5         db  0xc8 ; '.'
0000000000006bb6         db  0xff ; '.'
0000000000006bb7         db  0xff ; '.'
0000000000006bb8         db  0xac ; '.'
0000000000006bb9         db  0xc8 ; '.'
0000000000006bba         db  0xff ; '.'
0000000000006bbb         db  0xff ; '.'
0000000000006bbc         db  0xac ; '.'
0000000000006bbd         db  0xc8 ; '.'
0000000000006bbe         db  0xff ; '.'
0000000000006bbf         db  0xff ; '.'
0000000000006bc0         db  0xac ; '.'
0000000000006bc1         db  0xc8 ; '.'
0000000000006bc2         db  0xff ; '.'
0000000000006bc3         db  0xff ; '.'
0000000000006bc4         db  0xac ; '.'
0000000000006bc5         db  0xc8 ; '.'
0000000000006bc6         db  0xff ; '.'
0000000000006bc7         db  0xff ; '.'
0000000000006bc8         db  0xac ; '.'
0000000000006bc9         db  0xc8 ; '.'
0000000000006bca         db  0xff ; '.'
0000000000006bcb         db  0xff ; '.'
0000000000006bcc         db  0xac ; '.'
0000000000006bcd         db  0xc8 ; '.'
0000000000006bce         db  0xff ; '.'
0000000000006bcf         db  0xff ; '.'
0000000000006bd0         db  0xac ; '.'
0000000000006bd1         db  0xc8 ; '.'
0000000000006bd2         db  0xff ; '.'
0000000000006bd3         db  0xff ; '.'
0000000000006bd4         db  0xac ; '.'
0000000000006bd5         db  0xc8 ; '.'
0000000000006bd6         db  0xff ; '.'
0000000000006bd7         db  0xff ; '.'
0000000000006bd8         db  0x04 ; '.'
0000000000006bd9         db  0xc9 ; '.'
0000000000006bda         db  0xff ; '.'
0000000000006bdb         db  0xff ; '.'
0000000000006bdc         db  0xdc ; '.'
0000000000006bdd         db  0xc7 ; '.'
0000000000006bde         db  0xff ; '.'
0000000000006bdf         db  0xff ; '.'
0000000000006be0         db  0xac ; '.'
0000000000006be1         db  0xc8 ; '.'
0000000000006be2         db  0xff ; '.'
0000000000006be3         db  0xff ; '.'
0000000000006be4         db  0x04 ; '.'
0000000000006be5         db  0xc9 ; '.'
0000000000006be6         db  0xff ; '.'
0000000000006be7         db  0xff ; '.'
0000000000006be8         db  0xac ; '.'
0000000000006be9         db  0xc8 ; '.'
0000000000006bea         db  0xff ; '.'
0000000000006beb         db  0xff ; '.'
0000000000006bec         db  0x04 ; '.'
0000000000006bed         db  0xc9 ; '.'
0000000000006bee         db  0xff ; '.'
0000000000006bef         db  0xff ; '.'
0000000000006bf0         db  0xac ; '.'
0000000000006bf1         db  0xc8 ; '.'
0000000000006bf2         db  0xff ; '.'
0000000000006bf3         db  0xff ; '.'
0000000000006bf4         db  0xac ; '.'
0000000000006bf5         db  0xc8 ; '.'
0000000000006bf6         db  0xff ; '.'
0000000000006bf7         db  0xff ; '.'
0000000000006bf8         db  0xac ; '.'
0000000000006bf9         db  0xc8 ; '.'
0000000000006bfa         db  0xff ; '.'
0000000000006bfb         db  0xff ; '.'
0000000000006bfc         db  0xac ; '.'
0000000000006bfd         db  0xc8 ; '.'
0000000000006bfe         db  0xff ; '.'
0000000000006bff         db  0xff ; '.'
0000000000006c00         db  0xac ; '.'
0000000000006c01         db  0xc8 ; '.'
0000000000006c02         db  0xff ; '.'
0000000000006c03         db  0xff ; '.'
0000000000006c04         db  0xac ; '.'
0000000000006c05         db  0xc8 ; '.'
0000000000006c06         db  0xff ; '.'
0000000000006c07         db  0xff ; '.'
0000000000006c08         db  0xac ; '.'
0000000000006c09         db  0xc8 ; '.'
0000000000006c0a         db  0xff ; '.'
0000000000006c0b         db  0xff ; '.'
0000000000006c0c         db  0xac ; '.'
0000000000006c0d         db  0xc8 ; '.'
0000000000006c0e         db  0xff ; '.'
0000000000006c0f         db  0xff ; '.'
0000000000006c10         db  0xac ; '.'
0000000000006c11         db  0xc8 ; '.'
0000000000006c12         db  0xff ; '.'
0000000000006c13         db  0xff ; '.'
0000000000006c14         db  0xac ; '.'
0000000000006c15         db  0xc8 ; '.'
0000000000006c16         db  0xff ; '.'
0000000000006c17         db  0xff ; '.'
0000000000006c18         db  0xac ; '.'
0000000000006c19         db  0xc8 ; '.'
0000000000006c1a         db  0xff ; '.'
0000000000006c1b         db  0xff ; '.'
0000000000006c1c         db  0xac ; '.'
0000000000006c1d         db  0xc8 ; '.'
0000000000006c1e         db  0xff ; '.'
0000000000006c1f         db  0xff ; '.'
0000000000006c20         db  0xac ; '.'
0000000000006c21         db  0xc8 ; '.'
0000000000006c22         db  0xff ; '.'
0000000000006c23         db  0xff ; '.'
0000000000006c24         db  0xac ; '.'
0000000000006c25         db  0xc8 ; '.'
0000000000006c26         db  0xff ; '.'
0000000000006c27         db  0xff ; '.'
0000000000006c28         db  0xac ; '.'
0000000000006c29         db  0xc8 ; '.'
0000000000006c2a         db  0xff ; '.'
0000000000006c2b         db  0xff ; '.'
0000000000006c2c         db  0xac ; '.'
0000000000006c2d         db  0xc8 ; '.'
0000000000006c2e         db  0xff ; '.'
0000000000006c2f         db  0xff ; '.'
0000000000006c30         db  0xac ; '.'
0000000000006c31         db  0xc8 ; '.'
0000000000006c32         db  0xff ; '.'
0000000000006c33         db  0xff ; '.'
0000000000006c34         db  0xac ; '.'
0000000000006c35         db  0xc8 ; '.'
0000000000006c36         db  0xff ; '.'
0000000000006c37         db  0xff ; '.'
0000000000006c38         db  0xac ; '.'
0000000000006c39         db  0xc8 ; '.'
0000000000006c3a         db  0xff ; '.'
0000000000006c3b         db  0xff ; '.'
0000000000006c3c         db  0xac ; '.'
0000000000006c3d         db  0xc8 ; '.'
0000000000006c3e         db  0xff ; '.'
0000000000006c3f         db  0xff ; '.'
0000000000006c40         db  0xac ; '.'
0000000000006c41         db  0xc8 ; '.'
0000000000006c42         db  0xff ; '.'
0000000000006c43         db  0xff ; '.'
0000000000006c44         db  0xac ; '.'
0000000000006c45         db  0xc8 ; '.'
0000000000006c46         db  0xff ; '.'
0000000000006c47         db  0xff ; '.'
0000000000006c48         db  0xac ; '.'
0000000000006c49         db  0xc8 ; '.'
0000000000006c4a         db  0xff ; '.'
0000000000006c4b         db  0xff ; '.'
0000000000006c4c         db  0xac ; '.'
0000000000006c4d         db  0xc8 ; '.'
0000000000006c4e         db  0xff ; '.'
0000000000006c4f         db  0xff ; '.'
0000000000006c50         db  0xac ; '.'
0000000000006c51         db  0xc8 ; '.'
0000000000006c52         db  0xff ; '.'
0000000000006c53         db  0xff ; '.'
0000000000006c54         db  0xac ; '.'
0000000000006c55         db  0xc8 ; '.'
0000000000006c56         db  0xff ; '.'
0000000000006c57         db  0xff ; '.'
0000000000006c58         db  0x67 ; 'g'
0000000000006c59         db  0xc6 ; '.'
0000000000006c5a         db  0xff ; '.'
0000000000006c5b         db  0xff ; '.'
0000000000006c5c         db  0x04 ; '.'
0000000000006c5d         db  0xc9 ; '.'
0000000000006c5e         db  0xff ; '.'
0000000000006c5f         db  0xff ; '.'
0000000000006c60         db  0x67 ; 'g'
0000000000006c61         db  0xc6 ; '.'
0000000000006c62         db  0xff ; '.'
0000000000006c63         db  0xff ; '.'
0000000000006c64         db  0xd4 ; '.'
0000000000006c65         db  0xc8 ; '.'
0000000000006c66         db  0xff ; '.'
0000000000006c67         db  0xff ; '.'
0000000000006c68         db  0x58 ; 'X'                                         ; DATA XREF=sub_33c0+137
0000000000006c69         db  0xc8 ; '.'
0000000000006c6a         db  0xff ; '.'
0000000000006c6b         db  0xff ; '.'
0000000000006c6c         db  0x68 ; 'h'
0000000000006c6d         db  0xc7 ; '.'
0000000000006c6e         db  0xff ; '.'
0000000000006c6f         db  0xff ; '.'
0000000000006c70         db  0x68 ; 'h'
0000000000006c71         db  0xc7 ; '.'
0000000000006c72         db  0xff ; '.'
0000000000006c73         db  0xff ; '.'
0000000000006c74         db  0x68 ; 'h'
0000000000006c75         db  0xc7 ; '.'
0000000000006c76         db  0xff ; '.'
0000000000006c77         db  0xff ; '.'
0000000000006c78         db  0x68 ; 'h'
0000000000006c79         db  0xc7 ; '.'
0000000000006c7a         db  0xff ; '.'
0000000000006c7b         db  0xff ; '.'
0000000000006c7c         db  0x68 ; 'h'
0000000000006c7d         db  0xc7 ; '.'
0000000000006c7e         db  0xff ; '.'
0000000000006c7f         db  0xff ; '.'
0000000000006c80         db  0x68 ; 'h'
0000000000006c81         db  0xc7 ; '.'
0000000000006c82         db  0xff ; '.'
0000000000006c83         db  0xff ; '.'
0000000000006c84         db  0x48 ; 'H'
0000000000006c85         db  0xc8 ; '.'
0000000000006c86         db  0xff ; '.'
0000000000006c87         db  0xff ; '.'
0000000000006c88         db  0x98 ; '.'
0000000000006c89         db  0xc9 ; '.'
0000000000006c8a         db  0xff ; '.'
0000000000006c8b         db  0xff ; '.'
0000000000006c8c         db  0x80 ; '.'
0000000000006c8d         db  0xc9 ; '.'
0000000000006c8e         db  0xff ; '.'
0000000000006c8f         db  0xff ; '.'
0000000000006c90         db  0x30 ; '0'
0000000000006c91         db  0xc8 ; '.'
0000000000006c92         db  0xff ; '.'
0000000000006c93         db  0xff ; '.'
0000000000006c94         db  0x70 ; 'p'
0000000000006c95         db  0xc9 ; '.'
0000000000006c96         db  0xff ; '.'
0000000000006c97         db  0xff ; '.'
0000000000006c98         db  0x18 ; '.'
0000000000006c99         db  0xc8 ; '.'
0000000000006c9a         db  0xff ; '.'
0000000000006c9b         db  0xff ; '.'
0000000000006c9c         db  0x58 ; 'X'
0000000000006c9d         db  0xc9 ; '.'
0000000000006c9e         db  0xff ; '.'
0000000000006c9f         db  0xff ; '.'
0000000000006ca0         db  0x68 ; 'h'
0000000000006ca1         db  0xc7 ; '.'
0000000000006ca2         db  0xff ; '.'
0000000000006ca3         db  0xff ; '.'
0000000000006ca4         db  0x68 ; 'h'
0000000000006ca5         db  0xc7 ; '.'
0000000000006ca6         db  0xff ; '.'
0000000000006ca7         db  0xff ; '.'
0000000000006ca8         db  0x68 ; 'h'
0000000000006ca9         db  0xc7 ; '.'
0000000000006caa         db  0xff ; '.'
0000000000006cab         db  0xff ; '.'
0000000000006cac         db  0x68 ; 'h'
0000000000006cad         db  0xc7 ; '.'
0000000000006cae         db  0xff ; '.'
0000000000006caf         db  0xff ; '.'
0000000000006cb0         db  0x68 ; 'h'
0000000000006cb1         db  0xc7 ; '.'
0000000000006cb2         db  0xff ; '.'
0000000000006cb3         db  0xff ; '.'
0000000000006cb4         db  0x68 ; 'h'
0000000000006cb5         db  0xc7 ; '.'
0000000000006cb6         db  0xff ; '.'
0000000000006cb7         db  0xff ; '.'
0000000000006cb8         db  0x68 ; 'h'
0000000000006cb9         db  0xc7 ; '.'
0000000000006cba         db  0xff ; '.'
0000000000006cbb         db  0xff ; '.'
0000000000006cbc         db  0x68 ; 'h'
0000000000006cbd         db  0xc7 ; '.'
0000000000006cbe         db  0xff ; '.'
0000000000006cbf         db  0xff ; '.'
0000000000006cc0         db  0x68 ; 'h'
0000000000006cc1         db  0xc7 ; '.'
0000000000006cc2         db  0xff ; '.'
0000000000006cc3         db  0xff ; '.'
0000000000006cc4         db  0x68 ; 'h'
0000000000006cc5         db  0xc7 ; '.'
0000000000006cc6         db  0xff ; '.'
0000000000006cc7         db  0xff ; '.'
0000000000006cc8         db  0x68 ; 'h'
0000000000006cc9         db  0xc7 ; '.'
0000000000006cca         db  0xff ; '.'
0000000000006ccb         db  0xff ; '.'
0000000000006ccc         db  0x68 ; 'h'
0000000000006ccd         db  0xc7 ; '.'
0000000000006cce         db  0xff ; '.'
0000000000006ccf         db  0xff ; '.'
0000000000006cd0         db  0x68 ; 'h'
0000000000006cd1         db  0xc7 ; '.'
0000000000006cd2         db  0xff ; '.'
0000000000006cd3         db  0xff ; '.'
0000000000006cd4         db  0x68 ; 'h'
0000000000006cd5         db  0xc7 ; '.'
0000000000006cd6         db  0xff ; '.'
0000000000006cd7         db  0xff ; '.'
0000000000006cd8         db  0x68 ; 'h'
0000000000006cd9         db  0xc7 ; '.'
0000000000006cda         db  0xff ; '.'
0000000000006cdb         db  0xff ; '.'
0000000000006cdc         db  0x68 ; 'h'
0000000000006cdd         db  0xc7 ; '.'
0000000000006cde         db  0xff ; '.'
0000000000006cdf         db  0xff ; '.'
0000000000006ce0         db  0x68 ; 'h'
0000000000006ce1         db  0xc7 ; '.'
0000000000006ce2         db  0xff ; '.'
0000000000006ce3         db  0xff ; '.'
0000000000006ce4         db  0x68 ; 'h'
0000000000006ce5         db  0xc7 ; '.'
0000000000006ce6         db  0xff ; '.'
0000000000006ce7         db  0xff ; '.'
0000000000006ce8         db  0x40 ; '@'
0000000000006ce9         db  0xc9 ; '.'
0000000000006cea         db  0xff ; '.'
0000000000006ceb         db  0xff ; '.'
0000000000006cec         db  0x28 ; '('
0000000000006ced         db  0xc9 ; '.'
0000000000006cee         db  0xff ; '.'
0000000000006cef         db  0xff ; '.'
0000000000006cf0         db  0x28 ; '('
0000000000006cf1         db  0xc9 ; '.'
0000000000006cf2         db  0xff ; '.'
0000000000006cf3         db  0xff ; '.'
0000000000006cf4         db  0x10 ; '.'
0000000000006cf5         db  0xc9 ; '.'
0000000000006cf6         db  0xff ; '.'
0000000000006cf7         db  0xff ; '.'
0000000000006cf8         db  0x28 ; '('
0000000000006cf9         db  0xc9 ; '.'
0000000000006cfa         db  0xff ; '.'
0000000000006cfb         db  0xff ; '.'
0000000000006cfc         db  0xf8 ; '.'
0000000000006cfd         db  0xc8 ; '.'
0000000000006cfe         db  0xff ; '.'
0000000000006cff         db  0xff ; '.'
0000000000006d00         db  0x28 ; '('
0000000000006d01         db  0xc9 ; '.'
0000000000006d02         db  0xff ; '.'
0000000000006d03         db  0xff ; '.'
0000000000006d04         db  0x68 ; 'h'
0000000000006d05         db  0xc5 ; '.'
0000000000006d06         db  0xff ; '.'
0000000000006d07         db  0xff ; '.'
0000000000006d08         db  0x28 ; '('
0000000000006d09         db  0xc9 ; '.'
0000000000006d0a         db  0xff ; '.'
0000000000006d0b         db  0xff ; '.'
0000000000006d0c         db  0x28 ; '('
0000000000006d0d         db  0xc9 ; '.'
0000000000006d0e         db  0xff ; '.'
0000000000006d0f         db  0xff ; '.'
0000000000006d10         db  0x28 ; '('
0000000000006d11         db  0xc9 ; '.'
0000000000006d12         db  0xff ; '.'
0000000000006d13         db  0xff ; '.'
0000000000006d14         db  0xf8 ; '.'
0000000000006d15         db  0xc8 ; '.'
0000000000006d16         db  0xff ; '.'
0000000000006d17         db  0xff ; '.'
0000000000006d18         db  0xf8 ; '.'
0000000000006d19         db  0xc8 ; '.'
0000000000006d1a         db  0xff ; '.'
0000000000006d1b         db  0xff ; '.'
0000000000006d1c         db  0xf8 ; '.'
0000000000006d1d         db  0xc8 ; '.'
0000000000006d1e         db  0xff ; '.'
0000000000006d1f         db  0xff ; '.'
0000000000006d20         db  0xf8 ; '.'
0000000000006d21         db  0xc8 ; '.'
0000000000006d22         db  0xff ; '.'
0000000000006d23         db  0xff ; '.'
0000000000006d24         db  0xf8 ; '.'
0000000000006d25         db  0xc8 ; '.'
0000000000006d26         db  0xff ; '.'
0000000000006d27         db  0xff ; '.'
0000000000006d28         db  0xf8 ; '.'
0000000000006d29         db  0xc8 ; '.'
0000000000006d2a         db  0xff ; '.'
0000000000006d2b         db  0xff ; '.'
0000000000006d2c         db  0xf8 ; '.'
0000000000006d2d         db  0xc8 ; '.'
0000000000006d2e         db  0xff ; '.'
0000000000006d2f         db  0xff ; '.'
0000000000006d30         db  0xf8 ; '.'
0000000000006d31         db  0xc8 ; '.'
0000000000006d32         db  0xff ; '.'
0000000000006d33         db  0xff ; '.'
0000000000006d34         db  0xf8 ; '.'
0000000000006d35         db  0xc8 ; '.'
0000000000006d36         db  0xff ; '.'
0000000000006d37         db  0xff ; '.'
0000000000006d38         db  0xf8 ; '.'
0000000000006d39         db  0xc8 ; '.'
0000000000006d3a         db  0xff ; '.'
0000000000006d3b         db  0xff ; '.'
0000000000006d3c         db  0xf8 ; '.'
0000000000006d3d         db  0xc8 ; '.'
0000000000006d3e         db  0xff ; '.'
0000000000006d3f         db  0xff ; '.'
0000000000006d40         db  0xf8 ; '.'
0000000000006d41         db  0xc8 ; '.'
0000000000006d42         db  0xff ; '.'
0000000000006d43         db  0xff ; '.'
0000000000006d44         db  0xf8 ; '.'
0000000000006d45         db  0xc8 ; '.'
0000000000006d46         db  0xff ; '.'
0000000000006d47         db  0xff ; '.'
0000000000006d48         db  0xf8 ; '.'
0000000000006d49         db  0xc8 ; '.'
0000000000006d4a         db  0xff ; '.'
0000000000006d4b         db  0xff ; '.'
0000000000006d4c         db  0xf8 ; '.'
0000000000006d4d         db  0xc8 ; '.'
0000000000006d4e         db  0xff ; '.'
0000000000006d4f         db  0xff ; '.'
0000000000006d50         db  0xf8 ; '.'
0000000000006d51         db  0xc8 ; '.'
0000000000006d52         db  0xff ; '.'
0000000000006d53         db  0xff ; '.'
0000000000006d54         db  0x28 ; '('
0000000000006d55         db  0xc9 ; '.'
0000000000006d56         db  0xff ; '.'
0000000000006d57         db  0xff ; '.'
0000000000006d58         db  0x28 ; '('
0000000000006d59         db  0xc9 ; '.'
0000000000006d5a         db  0xff ; '.'
0000000000006d5b         db  0xff ; '.'
0000000000006d5c         db  0x28 ; '('
0000000000006d5d         db  0xc9 ; '.'
0000000000006d5e         db  0xff ; '.'
0000000000006d5f         db  0xff ; '.'
0000000000006d60         db  0x28 ; '('
0000000000006d61         db  0xc9 ; '.'
0000000000006d62         db  0xff ; '.'
0000000000006d63         db  0xff ; '.'
0000000000006d64         db  0x38 ; '8'
0000000000006d65         db  0xc5 ; '.'
0000000000006d66         db  0xff ; '.'
0000000000006d67         db  0xff ; '.'
0000000000006d68         db  0x68 ; 'h'
0000000000006d69         db  0xc7 ; '.'
0000000000006d6a         db  0xff ; '.'
0000000000006d6b         db  0xff ; '.'
0000000000006d6c         db  0xf8 ; '.'
0000000000006d6d         db  0xc8 ; '.'
0000000000006d6e         db  0xff ; '.'
0000000000006d6f         db  0xff ; '.'
0000000000006d70         db  0xf8 ; '.'
0000000000006d71         db  0xc8 ; '.'
0000000000006d72         db  0xff ; '.'
0000000000006d73         db  0xff ; '.'
0000000000006d74         db  0xf8 ; '.'
0000000000006d75         db  0xc8 ; '.'
0000000000006d76         db  0xff ; '.'
0000000000006d77         db  0xff ; '.'
0000000000006d78         db  0xf8 ; '.'
0000000000006d79         db  0xc8 ; '.'
0000000000006d7a         db  0xff ; '.'
0000000000006d7b         db  0xff ; '.'
0000000000006d7c         db  0xf8 ; '.'
0000000000006d7d         db  0xc8 ; '.'
0000000000006d7e         db  0xff ; '.'
0000000000006d7f         db  0xff ; '.'
0000000000006d80         db  0xf8 ; '.'
0000000000006d81         db  0xc8 ; '.'
0000000000006d82         db  0xff ; '.'
0000000000006d83         db  0xff ; '.'
0000000000006d84         db  0xf8 ; '.'
0000000000006d85         db  0xc8 ; '.'
0000000000006d86         db  0xff ; '.'
0000000000006d87         db  0xff ; '.'
0000000000006d88         db  0xf8 ; '.'
0000000000006d89         db  0xc8 ; '.'
0000000000006d8a         db  0xff ; '.'
0000000000006d8b         db  0xff ; '.'
0000000000006d8c         db  0xf8 ; '.'
0000000000006d8d         db  0xc8 ; '.'
0000000000006d8e         db  0xff ; '.'
0000000000006d8f         db  0xff ; '.'
0000000000006d90         db  0xf8 ; '.'
0000000000006d91         db  0xc8 ; '.'
0000000000006d92         db  0xff ; '.'
0000000000006d93         db  0xff ; '.'
0000000000006d94         db  0xf8 ; '.'
0000000000006d95         db  0xc8 ; '.'
0000000000006d96         db  0xff ; '.'
0000000000006d97         db  0xff ; '.'
0000000000006d98         db  0xf8 ; '.'
0000000000006d99         db  0xc8 ; '.'
0000000000006d9a         db  0xff ; '.'
0000000000006d9b         db  0xff ; '.'
0000000000006d9c         db  0xf8 ; '.'
0000000000006d9d         db  0xc8 ; '.'
0000000000006d9e         db  0xff ; '.'
0000000000006d9f         db  0xff ; '.'
0000000000006da0         db  0xf8 ; '.'
0000000000006da1         db  0xc8 ; '.'
0000000000006da2         db  0xff ; '.'
0000000000006da3         db  0xff ; '.'
0000000000006da4         db  0xf8 ; '.'
0000000000006da5         db  0xc8 ; '.'
0000000000006da6         db  0xff ; '.'
0000000000006da7         db  0xff ; '.'
0000000000006da8         db  0xf8 ; '.'
0000000000006da9         db  0xc8 ; '.'
0000000000006daa         db  0xff ; '.'
0000000000006dab         db  0xff ; '.'
0000000000006dac         db  0xf8 ; '.'
0000000000006dad         db  0xc8 ; '.'
0000000000006dae         db  0xff ; '.'
0000000000006daf         db  0xff ; '.'
0000000000006db0         db  0xf8 ; '.'
0000000000006db1         db  0xc8 ; '.'
0000000000006db2         db  0xff ; '.'
0000000000006db3         db  0xff ; '.'
0000000000006db4         db  0xf8 ; '.'
0000000000006db5         db  0xc8 ; '.'
0000000000006db6         db  0xff ; '.'
0000000000006db7         db  0xff ; '.'
0000000000006db8         db  0xf8 ; '.'
0000000000006db9         db  0xc8 ; '.'
0000000000006dba         db  0xff ; '.'
0000000000006dbb         db  0xff ; '.'
0000000000006dbc         db  0xf8 ; '.'
0000000000006dbd         db  0xc8 ; '.'
0000000000006dbe         db  0xff ; '.'
0000000000006dbf         db  0xff ; '.'
0000000000006dc0         db  0xf8 ; '.'
0000000000006dc1         db  0xc8 ; '.'
0000000000006dc2         db  0xff ; '.'
0000000000006dc3         db  0xff ; '.'
0000000000006dc4         db  0xf8 ; '.'
0000000000006dc5         db  0xc8 ; '.'
0000000000006dc6         db  0xff ; '.'
0000000000006dc7         db  0xff ; '.'
0000000000006dc8         db  0xf8 ; '.'
0000000000006dc9         db  0xc8 ; '.'
0000000000006dca         db  0xff ; '.'
0000000000006dcb         db  0xff ; '.'
0000000000006dcc         db  0xf8 ; '.'
0000000000006dcd         db  0xc8 ; '.'
0000000000006dce         db  0xff ; '.'
0000000000006dcf         db  0xff ; '.'
0000000000006dd0         db  0xf8 ; '.'
0000000000006dd1         db  0xc8 ; '.'
0000000000006dd2         db  0xff ; '.'
0000000000006dd3         db  0xff ; '.'
0000000000006dd4         db  0x28 ; '('
0000000000006dd5         db  0xc9 ; '.'
0000000000006dd6         db  0xff ; '.'
0000000000006dd7         db  0xff ; '.'
0000000000006dd8         db  0xf8 ; '.'
0000000000006dd9         db  0xc7 ; '.'
0000000000006dda         db  0xff ; '.'
0000000000006ddb         db  0xff ; '.'
0000000000006ddc         db  0xf8 ; '.'
0000000000006ddd         db  0xc8 ; '.'
0000000000006dde         db  0xff ; '.'
0000000000006ddf         db  0xff ; '.'
0000000000006de0         db  0x28 ; '('
0000000000006de1         db  0xc9 ; '.'
0000000000006de2         db  0xff ; '.'
0000000000006de3         db  0xff ; '.'
0000000000006de4         db  0xf8 ; '.'
0000000000006de5         db  0xc8 ; '.'
0000000000006de6         db  0xff ; '.'
0000000000006de7         db  0xff ; '.'
0000000000006de8         db  0x28 ; '('
0000000000006de9         db  0xc9 ; '.'
0000000000006dea         db  0xff ; '.'
0000000000006deb         db  0xff ; '.'
0000000000006dec         db  0xf8 ; '.'
0000000000006ded         db  0xc8 ; '.'
0000000000006dee         db  0xff ; '.'
0000000000006def         db  0xff ; '.'
0000000000006df0         db  0xf8 ; '.'
0000000000006df1         db  0xc8 ; '.'
0000000000006df2         db  0xff ; '.'
0000000000006df3         db  0xff ; '.'
0000000000006df4         db  0xf8 ; '.'
0000000000006df5         db  0xc8 ; '.'
0000000000006df6         db  0xff ; '.'
0000000000006df7         db  0xff ; '.'
0000000000006df8         db  0xf8 ; '.'
0000000000006df9         db  0xc8 ; '.'
0000000000006dfa         db  0xff ; '.'
0000000000006dfb         db  0xff ; '.'
0000000000006dfc         db  0xf8 ; '.'
0000000000006dfd         db  0xc8 ; '.'
0000000000006dfe         db  0xff ; '.'
0000000000006dff         db  0xff ; '.'
0000000000006e00         db  0xf8 ; '.'
0000000000006e01         db  0xc8 ; '.'
0000000000006e02         db  0xff ; '.'
0000000000006e03         db  0xff ; '.'
0000000000006e04         db  0xf8 ; '.'
0000000000006e05         db  0xc8 ; '.'
0000000000006e06         db  0xff ; '.'
0000000000006e07         db  0xff ; '.'
0000000000006e08         db  0xf8 ; '.'
0000000000006e09         db  0xc8 ; '.'
0000000000006e0a         db  0xff ; '.'
0000000000006e0b         db  0xff ; '.'
0000000000006e0c         db  0xf8 ; '.'
0000000000006e0d         db  0xc8 ; '.'
0000000000006e0e         db  0xff ; '.'
0000000000006e0f         db  0xff ; '.'
0000000000006e10         db  0xf8 ; '.'
0000000000006e11         db  0xc8 ; '.'
0000000000006e12         db  0xff ; '.'
0000000000006e13         db  0xff ; '.'
0000000000006e14         db  0xf8 ; '.'
0000000000006e15         db  0xc8 ; '.'
0000000000006e16         db  0xff ; '.'
0000000000006e17         db  0xff ; '.'
0000000000006e18         db  0xf8 ; '.'
0000000000006e19         db  0xc8 ; '.'
0000000000006e1a         db  0xff ; '.'
0000000000006e1b         db  0xff ; '.'
0000000000006e1c         db  0xf8 ; '.'
0000000000006e1d         db  0xc8 ; '.'
0000000000006e1e         db  0xff ; '.'
0000000000006e1f         db  0xff ; '.'
0000000000006e20         db  0xf8 ; '.'
0000000000006e21         db  0xc8 ; '.'
0000000000006e22         db  0xff ; '.'
0000000000006e23         db  0xff ; '.'
0000000000006e24         db  0xf8 ; '.'
0000000000006e25         db  0xc8 ; '.'
0000000000006e26         db  0xff ; '.'
0000000000006e27         db  0xff ; '.'
0000000000006e28         db  0xf8 ; '.'
0000000000006e29         db  0xc8 ; '.'
0000000000006e2a         db  0xff ; '.'
0000000000006e2b         db  0xff ; '.'
0000000000006e2c         db  0xf8 ; '.'
0000000000006e2d         db  0xc8 ; '.'
0000000000006e2e         db  0xff ; '.'
0000000000006e2f         db  0xff ; '.'
0000000000006e30         db  0xf8 ; '.'
0000000000006e31         db  0xc8 ; '.'
0000000000006e32         db  0xff ; '.'
0000000000006e33         db  0xff ; '.'
0000000000006e34         db  0xf8 ; '.'
0000000000006e35         db  0xc8 ; '.'
0000000000006e36         db  0xff ; '.'
0000000000006e37         db  0xff ; '.'
0000000000006e38         db  0xf8 ; '.'
0000000000006e39         db  0xc8 ; '.'
0000000000006e3a         db  0xff ; '.'
0000000000006e3b         db  0xff ; '.'
0000000000006e3c         db  0xf8 ; '.'
0000000000006e3d         db  0xc8 ; '.'
0000000000006e3e         db  0xff ; '.'
0000000000006e3f         db  0xff ; '.'
0000000000006e40         db  0xf8 ; '.'
0000000000006e41         db  0xc8 ; '.'
0000000000006e42         db  0xff ; '.'
0000000000006e43         db  0xff ; '.'
0000000000006e44         db  0xf8 ; '.'
0000000000006e45         db  0xc8 ; '.'
0000000000006e46         db  0xff ; '.'
0000000000006e47         db  0xff ; '.'
0000000000006e48         db  0xf8 ; '.'
0000000000006e49         db  0xc8 ; '.'
0000000000006e4a         db  0xff ; '.'
0000000000006e4b         db  0xff ; '.'
0000000000006e4c         db  0xf8 ; '.'
0000000000006e4d         db  0xc8 ; '.'
0000000000006e4e         db  0xff ; '.'
0000000000006e4f         db  0xff ; '.'
0000000000006e50         db  0xf8 ; '.'
0000000000006e51         db  0xc8 ; '.'
0000000000006e52         db  0xff ; '.'
0000000000006e53         db  0xff ; '.'
0000000000006e54         db  0x68 ; 'h'
0000000000006e55         db  0xc4 ; '.'
0000000000006e56         db  0xff ; '.'
0000000000006e57         db  0xff ; '.'
0000000000006e58         db  0x28 ; '('
0000000000006e59         db  0xc9 ; '.'
0000000000006e5a         db  0xff ; '.'
0000000000006e5b         db  0xff ; '.'
0000000000006e5c         db  0x68 ; 'h'
0000000000006e5d         db  0xc4 ; '.'
0000000000006e5e         db  0xff ; '.'
0000000000006e5f         db  0xff ; '.'
0000000000006e60         db  0x10 ; '.'
0000000000006e61         db  0xc9 ; '.'
0000000000006e62         db  0xff ; '.'
0000000000006e63         db  0xff ; '.'
0000000000006e64         db  0x00 ; '.'
0000000000006e65         db  0x00 ; '.'
0000000000006e66         db  0x00 ; '.'
0000000000006e67         db  0x00 ; '.'
0000000000006e68         db  0x00 ; '.'
0000000000006e69         db  0x00 ; '.'
0000000000006e6a         db  0x00 ; '.'
0000000000006e6b         db  0x00 ; '.'
0000000000006e6c         db  0x00 ; '.'
0000000000006e6d         db  0x00 ; '.'
0000000000006e6e         db  0x00 ; '.'
0000000000006e6f         db  0x00 ; '.'
0000000000006e70         db  0x00 ; '.'
0000000000006e71         db  0x00 ; '.'
0000000000006e72         db  0x00 ; '.'
0000000000006e73         db  0x00 ; '.'
0000000000006e74         db  0x00 ; '.'
0000000000006e75         db  0x00 ; '.'
0000000000006e76         db  0x00 ; '.'
0000000000006e77         db  0x00 ; '.'
0000000000006e78         db  0x00 ; '.'
0000000000006e79         db  0x00 ; '.'
0000000000006e7a         db  0x00 ; '.'
0000000000006e7b         db  0x00 ; '.'
0000000000006e7c         db  0x00 ; '.'
0000000000006e7d         db  0x00 ; '.'
0000000000006e7e         db  0x00 ; '.'
0000000000006e7f         db  0x00 ; '.'
                     quoting_style_vals:
0000000000006e80         db  0x00 ; '.'
0000000000006e81         db  0x00 ; '.'
0000000000006e82         db  0x00 ; '.'
0000000000006e83         db  0x00 ; '.'
0000000000006e84         db  0x01 ; '.'
0000000000006e85         db  0x00 ; '.'
0000000000006e86         db  0x00 ; '.'
0000000000006e87         db  0x00 ; '.'
0000000000006e88         db  0x02 ; '.'
0000000000006e89         db  0x00 ; '.'
0000000000006e8a         db  0x00 ; '.'
0000000000006e8b         db  0x00 ; '.'
0000000000006e8c         db  0x03 ; '.'
0000000000006e8d         db  0x00 ; '.'
0000000000006e8e         db  0x00 ; '.'
0000000000006e8f         db  0x00 ; '.'
0000000000006e90         db  0x04 ; '.'
0000000000006e91         db  0x00 ; '.'
0000000000006e92         db  0x00 ; '.'
0000000000006e93         db  0x00 ; '.'
0000000000006e94         db  0x05 ; '.'
0000000000006e95         db  0x00 ; '.'
0000000000006e96         db  0x00 ; '.'
0000000000006e97         db  0x00 ; '.'
0000000000006e98         db  0x06 ; '.'
0000000000006e99         db  0x00 ; '.'
0000000000006e9a         db  0x00 ; '.'
0000000000006e9b         db  0x00 ; '.'
0000000000006e9c         db  0x07 ; '.'
0000000000006e9d         db  0x00 ; '.'
0000000000006e9e         db  0x00 ; '.'
0000000000006e9f         db  0x00 ; '.'
0000000000006ea0         db  0x08 ; '.'
0000000000006ea1         db  0x00 ; '.'
0000000000006ea2         db  0x00 ; '.'
0000000000006ea3         db  0x00 ; '.'
0000000000006ea4         db  0x09 ; '.'
0000000000006ea5         db  0x00 ; '.'
0000000000006ea6         db  0x00 ; '.'
0000000000006ea7         db  0x00 ; '.'
                     aInvalidUser:
0000000000006ea8         db         "invalid user", 0                           ; DATA XREF=parse_with_separator+816
                     aInvalidSpec:
0000000000006eb5         db         "invalid spec", 0                           ; DATA XREF=parse_with_separator+473
                     aInvalidGroup:
0000000000006ec2         db         "invalid group", 0                          ; DATA XREF=parse_with_separator+595
                     aSSSn:
0000000000006ed0         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
0000000000006edc         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
0000000000006ee3         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
0000000000006ee4         db  0x43 ; 'C'
0000000000006ee5         db  0x29 ; ')'
0000000000006ee6         db  0x00 ; '.'
                     aWrittenBySn:
0000000000006ee7         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
0000000000006ef7         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
0000000000006f0e         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
0000000000006f2a         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
0000000000006f3f         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
0000000000006f55         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
0000000000006f69         align      16
                     aNlicenseGplv3G:
0000000000006f70         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
000000000000703c         align      64
                     aWrittenBySSSna:
0000000000007040         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_7060:        // aWrittenBySSSns
0000000000007060         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
0000000000007084         align      8
                     aWrittenBySSSns_7088:        // aWrittenBySSSns
0000000000007088         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_70b0:        // aWrittenBySSSns
00000000000070b0         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
00000000000070dc         align      32
                     aWrittenBySSSns_70e0:        // aWrittenBySSSns
00000000000070e0         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
0000000000007110         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
0000000000007144         align      8
                     aWrittenBySSSns_7148:        // aWrittenBySSSns
0000000000007148         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
0000000000007184         align      8
                     aGeneralHelpUsi:
0000000000007188         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
00000000000071c9         align      4
                     switch_table_71cc:        // switch_table
00000000000071cc         dd         version_etc_arn.loc_5046-switch_table_71cc, version_etc_arn.loc_50d8-switch_table_71cc, version_etc_arn.loc_5118-switch_table_71cc, version_etc_arn.loc_5160-switch_table_71cc ; switch table used at 0x4fc4 containing 10 entries, DATA XREF=version_etc_arn+150
00000000000071dc         dd         version_etc_arn.loc_51b0-switch_table_71cc, version_etc_arn.loc_5208-switch_table_71cc, version_etc_arn.loc_5238-switch_table_71cc, version_etc_arn.loc_52a0-switch_table_71cc
00000000000071ec         dd         version_etc_arn.loc_4fd0-switch_table_71cc, version_etc_arn.loc_5080-switch_table_71cc
00000000000071f4         align      512
                     version_etc_copyright:
0000000000007200         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
000000000000722f         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
                     aCoreutils831li:
0000000000007240         db         "../coreutils-8.31/lib/xstrtol.c", 0        ; DATA XREF=xstrtoul+908
                     a0StrtolbaseStr:
0000000000007260         db         "0 <= strtol_base && strtol_base <= 36", 0  ; DATA XREF=xstrtoul+915
0000000000007286         align      8
                     switch_table_7288:        // switch_table
0000000000007288         dd         sub_57f7.loc_5b26-switch_table_7288, 2 dup (sub_57f7.loc_5a1c-switch_table_7288), sub_57f7.loc_5b03-switch_table_7288, sub_57f7.loc_5a1c-switch_table_7288 ; switch table used at 0x59d6 containing 54 entries, DATA XREF=xstrtoul+452
000000000000729c         dd         sub_57f7.loc_5b3c-switch_table_7288, 3 dup (sub_57f7.loc_5a1c-switch_table_7288), sub_57f7.loc_5abf-switch_table_7288, sub_57f7.loc_5a1c-switch_table_7288
00000000000072b4         dd         sub_57f7.loc_59d8-switch_table_7288, 2 dup (sub_57f7.loc_5a1c-switch_table_7288), sub_57f7.loc_5ae0-switch_table_7288, 3 dup (sub_57f7.loc_5a1c-switch_table_7288)
00000000000072d0         dd         sub_57f7.loc_5a9f-switch_table_7288, 4 dup (sub_57f7.loc_5a1c-switch_table_7288), sub_57f7.loc_5a7a-switch_table_7288, sub_57f7.loc_5a54-switch_table_7288
00000000000072ec         dd         7 dup (sub_57f7.loc_5a1c-switch_table_7288), sub_57f7.loc_5a3d-switch_table_7288, sub_57f7.loc_5a00-switch_table_7288, 3 dup (sub_57f7.loc_5a1c-switch_table_7288)
000000000000731c         dd         sub_57f7.loc_5b3c-switch_table_7288, 3 dup (sub_57f7.loc_5a1c-switch_table_7288), sub_57f7.loc_5abf-switch_table_7288, sub_57f7.loc_5a1c-switch_table_7288
0000000000007334         dd         sub_57f7.loc_59d8-switch_table_7288, 6 dup (sub_57f7.loc_5a1c-switch_table_7288), sub_57f7.loc_5a9f-switch_table_7288, 2 dup (sub_57f7.loc_5a1c-switch_table_7288)
000000000000735c         dd         sub_57f7.loc_5a27-switch_table_7288
                     __PRETTY_FUNCTION__.4162:
0000000000007360         db         "xstrtoul", 0                               ; DATA XREF=xstrtoul+901
0000000000007369         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
000000000000736a         db  0x00 ; '.'
                     aPosix:
000000000000736b         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aAscii:
0000000000007371         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
0000000000007377         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0x7378; 0x7604[ (652 bytes)
        ; File offset : [29560; 30212[ (652 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000007378         db  0x01 ; '.'
0000000000007379         db  0x1b ; '.'
000000000000737a         db  0x03 ; '.'
000000000000737b         db  0x3b ; ';'
000000000000737c         db  0x8c ; '.'
000000000000737d         db  0x02 ; '.'
000000000000737e         db  0x00 ; '.'
000000000000737f         db  0x00 ; '.'
0000000000007380         db  0x50 ; 'P'
0000000000007381         db  0x00 ; '.'
0000000000007382         db  0x00 ; '.'
0000000000007383         db  0x00 ; '.'
0000000000007384         db  0x78 ; 'x'
0000000000007385         db  0xa2 ; '.'
0000000000007386         db  0xff ; '.'
0000000000007387         db  0xff ; '.'
0000000000007388         db  0xd8 ; '.'
0000000000007389         db  0x02 ; '.'
000000000000738a         db  0x00 ; '.'
000000000000738b         db  0x00 ; '.'
000000000000738c         db  0x08 ; '.'
000000000000738d         db  0xa6 ; '.'
000000000000738e         db  0xff ; '.'
000000000000738f         db  0xff ; '.'
0000000000007390         db  0x00 ; '.'
0000000000007391         db  0x03 ; '.'
0000000000007392         db  0x00 ; '.'
0000000000007393         db  0x00 ; '.'
0000000000007394         db  0x18 ; '.'
0000000000007395         db  0xa6 ; '.'
0000000000007396         db  0xff ; '.'
0000000000007397         db  0xff ; '.'
0000000000007398         db  0x88 ; '.'
0000000000007399         db  0x03 ; '.'
000000000000739a         db  0x00 ; '.'
000000000000739b         db  0x00 ; '.'
000000000000739c         db  0xc8 ; '.'
000000000000739d         db  0xab ; '.'
000000000000739e         db  0xff ; '.'
000000000000739f         db  0xff ; '.'
00000000000073a0         db  0xa8 ; '.'
00000000000073a1         db  0x02 ; '.'
00000000000073a2         db  0x00 ; '.'
00000000000073a3         db  0x00 ; '.'
00000000000073a4         db  0xd8 ; '.'
00000000000073a5         db  0xac ; '.'
00000000000073a6         db  0xff ; '.'
00000000000073a7         db  0xff ; '.'
00000000000073a8         db  0x18 ; '.'
00000000000073a9         db  0x03 ; '.'
00000000000073aa         db  0x00 ; '.'
00000000000073ab         db  0x00 ; '.'
00000000000073ac         db  0x78 ; 'x'
00000000000073ad         db  0xb2 ; '.'
00000000000073ae         db  0xff ; '.'
00000000000073af         db  0xff ; '.'
00000000000073b0         db  0x5c ; '\'
00000000000073b1         db  0x03 ; '.'
00000000000073b2         db  0x00 ; '.'
00000000000073b3         db  0x00 ; '.'
00000000000073b4         db  0x08 ; '.'
00000000000073b5         db  0xb6 ; '.'
00000000000073b6         db  0xff ; '.'
00000000000073b7         db  0xff ; '.'
00000000000073b8         db  0xd0 ; '.'
00000000000073b9         db  0x03 ; '.'
00000000000073ba         db  0x00 ; '.'
00000000000073bb         db  0x00 ; '.'
00000000000073bc         db  0x88 ; '.'
00000000000073bd         db  0xb6 ; '.'
00000000000073be         db  0xff ; '.'
00000000000073bf         db  0xff ; '.'
00000000000073c0         db  0xf8 ; '.'
00000000000073c1         db  0x03 ; '.'
00000000000073c2         db  0x00 ; '.'
00000000000073c3         db  0x00 ; '.'
00000000000073c4         db  0xb8 ; '.'
00000000000073c5         db  0xb8 ; '.'
00000000000073c6         db  0xff ; '.'
00000000000073c7         db  0xff ; '.'
00000000000073c8         db  0x48 ; 'H'
00000000000073c9         db  0x04 ; '.'
00000000000073ca         db  0x00 ; '.'
00000000000073cb         db  0x00 ; '.'
00000000000073cc         db  0xc8 ; '.'
00000000000073cd         db  0xb8 ; '.'
00000000000073ce         db  0xff ; '.'
00000000000073cf         db  0xff ; '.'
00000000000073d0         db  0x5c ; '\'
00000000000073d1         db  0x04 ; '.'
00000000000073d2         db  0x00 ; '.'
00000000000073d3         db  0x00 ; '.'
00000000000073d4         db  0xd8 ; '.'
00000000000073d5         db  0xb8 ; '.'
00000000000073d6         db  0xff ; '.'
00000000000073d7         db  0xff ; '.'
00000000000073d8         db  0x70 ; 'p'
00000000000073d9         db  0x04 ; '.'
00000000000073da         db  0x00 ; '.'
00000000000073db         db  0x00 ; '.'
00000000000073dc         db  0x88 ; '.'
00000000000073dd         db  0xb9 ; '.'
00000000000073de         db  0xff ; '.'
00000000000073df         db  0xff ; '.'
00000000000073e0         db  0xa0 ; '.'
00000000000073e1         db  0x04 ; '.'
00000000000073e2         db  0x00 ; '.'
00000000000073e3         db  0x00 ; '.'
00000000000073e4         db  0xd8 ; '.'
00000000000073e5         db  0xb9 ; '.'
00000000000073e6         db  0xff ; '.'
00000000000073e7         db  0xff ; '.'
00000000000073e8         db  0xb8 ; '.'
00000000000073e9         db  0x04 ; '.'
00000000000073ea         db  0x00 ; '.'
00000000000073eb         db  0x00 ; '.'
00000000000073ec         db  0x78 ; 'x'
00000000000073ed         db  0xba ; '.'
00000000000073ee         db  0xff ; '.'
00000000000073ef         db  0xff ; '.'
00000000000073f0         db  0xd8 ; '.'
00000000000073f1         db  0x04 ; '.'
00000000000073f2         db  0x00 ; '.'
00000000000073f3         db  0x00 ; '.'
00000000000073f4         db  0x68 ; 'h'
00000000000073f5         db  0xbb ; '.'
00000000000073f6         db  0xff ; '.'
00000000000073f7         db  0xff ; '.'
00000000000073f8         db  0x1c ; '.'
00000000000073f9         db  0x05 ; '.'
00000000000073fa         db  0x00 ; '.'
00000000000073fb         db  0x00 ; '.'
00000000000073fc         db  0xa8 ; '.'
00000000000073fd         db  0xcd ; '.'
00000000000073fe         db  0xff ; '.'
00000000000073ff         db  0xff ; '.'
0000000000007400         db  0x94 ; '.'
0000000000007401         db  0x05 ; '.'
0000000000007402         db  0x00 ; '.'
0000000000007403         db  0x00 ; '.'
0000000000007404         db  0x58 ; 'X'
0000000000007405         db  0xcf ; '.'
0000000000007406         db  0xff ; '.'
0000000000007407         db  0xff ; '.'
0000000000007408         db  0x00 ; '.'
0000000000007409         db  0x06 ; '.'
000000000000740a         db  0x00 ; '.'
000000000000740b         db  0x00 ; '.'
000000000000740c         db  0x98 ; '.'
000000000000740d         db  0xcf ; '.'
000000000000740e         db  0xff ; '.'
000000000000740f         db  0xff ; '.'
0000000000007410         db  0x2c ; ','
0000000000007411         db  0x06 ; '.'
0000000000007412         db  0x00 ; '.'
0000000000007413         db  0x00 ; '.'
0000000000007414         db  0xb8 ; '.'
0000000000007415         db  0xcf ; '.'
0000000000007416         db  0xff ; '.'
0000000000007417         db  0xff ; '.'
0000000000007418         db  0x40 ; '@'
0000000000007419         db  0x06 ; '.'
000000000000741a         db  0x00 ; '.'
000000000000741b         db  0x00 ; '.'
000000000000741c         db  0xd8 ; '.'
000000000000741d         db  0xcf ; '.'
000000000000741e         db  0xff ; '.'
000000000000741f         db  0xff ; '.'
0000000000007420         db  0x54 ; 'T'
0000000000007421         db  0x06 ; '.'
0000000000007422         db  0x00 ; '.'
0000000000007423         db  0x00 ; '.'
0000000000007424         db  0x18 ; '.'
0000000000007425         db  0xd0 ; '.'
0000000000007426         db  0xff ; '.'
0000000000007427         db  0xff ; '.'
0000000000007428         db  0x68 ; 'h'
0000000000007429         db  0x06 ; '.'
000000000000742a         db  0x00 ; '.'
000000000000742b         db  0x00 ; '.'
000000000000742c         db  0x38 ; '8'
000000000000742d         db  0xd0 ; '.'
000000000000742e         db  0xff ; '.'
000000000000742f         db  0xff ; '.'
0000000000007430         db  0x7c ; '|'
0000000000007431         db  0x06 ; '.'
0000000000007432         db  0x00 ; '.'
0000000000007433         db  0x00 ; '.'
0000000000007434         db  0x68 ; 'h'
0000000000007435         db  0xd0 ; '.'
0000000000007436         db  0xff ; '.'
0000000000007437         db  0xff ; '.'
0000000000007438         db  0x90 ; '.'
0000000000007439         db  0x06 ; '.'
000000000000743a         db  0x00 ; '.'
000000000000743b         db  0x00 ; '.'
000000000000743c         db  0xe8 ; '.'
000000000000743d         db  0xd0 ; '.'
000000000000743e         db  0xff ; '.'
000000000000743f         db  0xff ; '.'
0000000000007440         db  0xe4 ; '.'
0000000000007441         db  0x06 ; '.'
0000000000007442         db  0x00 ; '.'
0000000000007443         db  0x00 ; '.'
0000000000007444         db  0xd8 ; '.'
0000000000007445         db  0xd1 ; '.'
0000000000007446         db  0xff ; '.'
0000000000007447         db  0xff ; '.'
0000000000007448         db  0x50 ; 'P'
0000000000007449         db  0x07 ; '.'
000000000000744a         db  0x00 ; '.'
000000000000744b         db  0x00 ; '.'
000000000000744c         db  0xe8 ; '.'
000000000000744d         db  0xd1 ; '.'
000000000000744e         db  0xff ; '.'
000000000000744f         db  0xff ; '.'
0000000000007450         db  0x64 ; 'd'
0000000000007451         db  0x07 ; '.'
0000000000007452         db  0x00 ; '.'
0000000000007453         db  0x00 ; '.'
0000000000007454         db  0x88 ; '.'
0000000000007455         db  0xd2 ; '.'
0000000000007456         db  0xff ; '.'
0000000000007457         db  0xff ; '.'
0000000000007458         db  0x90 ; '.'
0000000000007459         db  0x07 ; '.'
000000000000745a         db  0x00 ; '.'
000000000000745b         db  0x00 ; '.'
000000000000745c         db  0xa8 ; '.'
000000000000745d         db  0xd2 ; '.'
000000000000745e         db  0xff ; '.'
000000000000745f         db  0xff ; '.'
0000000000007460         db  0xa4 ; '.'
0000000000007461         db  0x07 ; '.'
0000000000007462         db  0x00 ; '.'
0000000000007463         db  0x00 ; '.'
0000000000007464         db  0xb8 ; '.'
0000000000007465         db  0xd2 ; '.'
0000000000007466         db  0xff ; '.'
0000000000007467         db  0xff ; '.'
0000000000007468         db  0xb8 ; '.'
0000000000007469         db  0x07 ; '.'
000000000000746a         db  0x00 ; '.'
000000000000746b         db  0x00 ; '.'
000000000000746c         db  0xd8 ; '.'
000000000000746d         db  0xd2 ; '.'
000000000000746e         db  0xff ; '.'
000000000000746f         db  0xff ; '.'
0000000000007470         db  0xcc ; '.'
0000000000007471         db  0x07 ; '.'
0000000000007472         db  0x00 ; '.'
0000000000007473         db  0x00 ; '.'
0000000000007474         db  0xf8 ; '.'
0000000000007475         db  0xd2 ; '.'
0000000000007476         db  0xff ; '.'
0000000000007477         db  0xff ; '.'
0000000000007478         db  0xe0 ; '.'
0000000000007479         db  0x07 ; '.'
000000000000747a         db  0x00 ; '.'
000000000000747b         db  0x00 ; '.'
000000000000747c         db  0x88 ; '.'
000000000000747d         db  0xd3 ; '.'
000000000000747e         db  0xff ; '.'
000000000000747f         db  0xff ; '.'
0000000000007480         db  0xfc ; '.'
0000000000007481         db  0x07 ; '.'
0000000000007482         db  0x00 ; '.'
0000000000007483         db  0x00 ; '.'
0000000000007484         db  0x18 ; '.'
0000000000007485         db  0xd4 ; '.'
0000000000007486         db  0xff ; '.'
0000000000007487         db  0xff ; '.'
0000000000007488         db  0x18 ; '.'
0000000000007489         db  0x08 ; '.'
000000000000748a         db  0x00 ; '.'
000000000000748b         db  0x00 ; '.'
000000000000748c         db  0x28 ; '('
000000000000748d         db  0xd4 ; '.'
000000000000748e         db  0xff ; '.'
000000000000748f         db  0xff ; '.'
0000000000007490         db  0x2c ; ','
0000000000007491         db  0x08 ; '.'
0000000000007492         db  0x00 ; '.'
0000000000007493         db  0x00 ; '.'
0000000000007494         db  0x38 ; '8'
0000000000007495         db  0xd4 ; '.'
0000000000007496         db  0xff ; '.'
0000000000007497         db  0xff ; '.'
0000000000007498         db  0x40 ; '@'
0000000000007499         db  0x08 ; '.'
000000000000749a         db  0x00 ; '.'
000000000000749b         db  0x00 ; '.'
000000000000749c         db  0xd8 ; '.'
000000000000749d         db  0xd4 ; '.'
000000000000749e         db  0xff ; '.'
000000000000749f         db  0xff ; '.'
00000000000074a0         db  0x5c ; '\'
00000000000074a1         db  0x08 ; '.'
00000000000074a2         db  0x00 ; '.'
00000000000074a3         db  0x00 ; '.'
00000000000074a4         db  0xe8 ; '.'
00000000000074a5         db  0xd4 ; '.'
00000000000074a6         db  0xff ; '.'
00000000000074a7         db  0xff ; '.'
00000000000074a8         db  0x70 ; 'p'
00000000000074a9         db  0x08 ; '.'
00000000000074aa         db  0x00 ; '.'
00000000000074ab         db  0x00 ; '.'
00000000000074ac         db  0x08 ; '.'
00000000000074ad         db  0xd5 ; '.'
00000000000074ae         db  0xff ; '.'
00000000000074af         db  0xff ; '.'
00000000000074b0         db  0x84 ; '.'
00000000000074b1         db  0x08 ; '.'
00000000000074b2         db  0x00 ; '.'
00000000000074b3         db  0x00 ; '.'
00000000000074b4         db  0x18 ; '.'
00000000000074b5         db  0xd5 ; '.'
00000000000074b6         db  0xff ; '.'
00000000000074b7         db  0xff ; '.'
00000000000074b8         db  0x98 ; '.'
00000000000074b9         db  0x08 ; '.'
00000000000074ba         db  0x00 ; '.'
00000000000074bb         db  0x00 ; '.'
00000000000074bc         db  0xa8 ; '.'
00000000000074bd         db  0xd5 ; '.'
00000000000074be         db  0xff ; '.'
00000000000074bf         db  0xff ; '.'
00000000000074c0         db  0xb4 ; '.'
00000000000074c1         db  0x08 ; '.'
00000000000074c2         db  0x00 ; '.'
00000000000074c3         db  0x00 ; '.'
00000000000074c4         db  0x48 ; 'H'
00000000000074c5         db  0xd6 ; '.'
00000000000074c6         db  0xff ; '.'
00000000000074c7         db  0xff ; '.'
00000000000074c8         db  0xd0 ; '.'
00000000000074c9         db  0x08 ; '.'
00000000000074ca         db  0x00 ; '.'
00000000000074cb         db  0x00 ; '.'
00000000000074cc         db  0x58 ; 'X'
00000000000074cd         db  0xd6 ; '.'
00000000000074ce         db  0xff ; '.'
00000000000074cf         db  0xff ; '.'
00000000000074d0         db  0xe4 ; '.'
00000000000074d1         db  0x08 ; '.'
00000000000074d2         db  0x00 ; '.'
00000000000074d3         db  0x00 ; '.'
00000000000074d4         db  0x78 ; 'x'
00000000000074d5         db  0xd6 ; '.'
00000000000074d6         db  0xff ; '.'
00000000000074d7         db  0xff ; '.'
00000000000074d8         db  0xf8 ; '.'
00000000000074d9         db  0x08 ; '.'
00000000000074da         db  0x00 ; '.'
00000000000074db         db  0x00 ; '.'
00000000000074dc         db  0x98 ; '.'
00000000000074dd         db  0xd6 ; '.'
00000000000074de         db  0xff ; '.'
00000000000074df         db  0xff ; '.'
00000000000074e0         db  0x0c ; '.'
00000000000074e1         db  0x09 ; '.'
00000000000074e2         db  0x00 ; '.'
00000000000074e3         db  0x00 ; '.'
00000000000074e4         db  0xa8 ; '.'
00000000000074e5         db  0xd6 ; '.'
00000000000074e6         db  0xff ; '.'
00000000000074e7         db  0xff ; '.'
00000000000074e8         db  0x20 ; ' '
00000000000074e9         db  0x09 ; '.'
00000000000074ea         db  0x00 ; '.'
00000000000074eb         db  0x00 ; '.'
00000000000074ec         db  0xc8 ; '.'
00000000000074ed         db  0xd6 ; '.'
00000000000074ee         db  0xff ; '.'
00000000000074ef         db  0xff ; '.'
00000000000074f0         db  0x34 ; '4'
00000000000074f1         db  0x09 ; '.'
00000000000074f2         db  0x00 ; '.'
00000000000074f3         db  0x00 ; '.'
00000000000074f4         db  0xe8 ; '.'
00000000000074f5         db  0xd6 ; '.'
00000000000074f6         db  0xff ; '.'
00000000000074f7         db  0xff ; '.'
00000000000074f8         db  0x48 ; 'H'
00000000000074f9         db  0x09 ; '.'
00000000000074fa         db  0x00 ; '.'
00000000000074fb         db  0x00 ; '.'
00000000000074fc         db  0x08 ; '.'
00000000000074fd         db  0xd7 ; '.'
00000000000074fe         db  0xff ; '.'
00000000000074ff         db  0xff ; '.'
0000000000007500         db  0x60 ; '`'
0000000000007501         db  0x09 ; '.'
0000000000007502         db  0x00 ; '.'
0000000000007503         db  0x00 ; '.'
0000000000007504         db  0xd8 ; '.'
0000000000007505         db  0xda ; '.'
0000000000007506         db  0xff ; '.'
0000000000007507         db  0xff ; '.'
0000000000007508         db  0xb0 ; '.'
0000000000007509         db  0x09 ; '.'
000000000000750a         db  0x00 ; '.'
000000000000750b         db  0x00 ; '.'
000000000000750c         db  0xa8 ; '.'
000000000000750d         db  0xdb ; '.'
000000000000750e         db  0xff ; '.'
000000000000750f         db  0xff ; '.'
0000000000007510         db  0x10 ; '.'
0000000000007511         db  0x0a ; '.'
0000000000007512         db  0x00 ; '.'
0000000000007513         db  0x00 ; '.'
0000000000007514         db  0xc8 ; '.'
0000000000007515         db  0xdf ; '.'
0000000000007516         db  0xff ; '.'
0000000000007517         db  0xff ; '.'
0000000000007518         db  0x24 ; '$'
0000000000007519         db  0x0b ; '.'
000000000000751a         db  0x00 ; '.'
000000000000751b         db  0x00 ; '.'
000000000000751c         db  0xe8 ; '.'
000000000000751d         db  0xdf ; '.'
000000000000751e         db  0xff ; '.'
000000000000751f         db  0xff ; '.'
0000000000007520         db  0x38 ; '8'
0000000000007521         db  0x0b ; '.'
0000000000007522         db  0x00 ; '.'
0000000000007523         db  0x00 ; '.'
0000000000007524         db  0x68 ; 'h'
0000000000007525         db  0xe0 ; '.'
0000000000007526         db  0xff ; '.'
0000000000007527         db  0xff ; '.'
0000000000007528         db  0x54 ; 'T'
0000000000007529         db  0x0b ; '.'
000000000000752a         db  0x00 ; '.'
000000000000752b         db  0x00 ; '.'
000000000000752c         db  0x48 ; 'H'
000000000000752d         db  0xe1 ; '.'
000000000000752e         db  0xff ; '.'
000000000000752f         db  0xff ; '.'
0000000000007530         db  0x80 ; '.'
0000000000007531         db  0x0b ; '.'
0000000000007532         db  0x00 ; '.'
0000000000007533         db  0x00 ; '.'
0000000000007534         db  0xc8 ; '.'
0000000000007535         db  0xe1 ; '.'
0000000000007536         db  0xff ; '.'
0000000000007537         db  0xff ; '.'
0000000000007538         db  0xa0 ; '.'
0000000000007539         db  0x0b ; '.'
000000000000753a         db  0x00 ; '.'
000000000000753b         db  0x00 ; '.'
000000000000753c         db  0xe8 ; '.'
000000000000753d         db  0xe1 ; '.'
000000000000753e         db  0xff ; '.'
000000000000753f         db  0xff ; '.'
0000000000007540         db  0xbc ; '.'
0000000000007541         db  0x0b ; '.'
0000000000007542         db  0x00 ; '.'
0000000000007543         db  0x00 ; '.'
0000000000007544         db  0x18 ; '.'
0000000000007545         db  0xe2 ; '.'
0000000000007546         db  0xff ; '.'
0000000000007547         db  0xff ; '.'
0000000000007548         db  0xd0 ; '.'
0000000000007549         db  0x0b ; '.'
000000000000754a         db  0x00 ; '.'
000000000000754b         db  0x00 ; '.'
000000000000754c         db  0x28 ; '('
000000000000754d         db  0xe2 ; '.'
000000000000754e         db  0xff ; '.'
000000000000754f         db  0xff ; '.'
0000000000007550         db  0xe4 ; '.'
0000000000007551         db  0x0b ; '.'
0000000000007552         db  0x00 ; '.'
0000000000007553         db  0x00 ; '.'
0000000000007554         db  0x68 ; 'h'
0000000000007555         db  0xe2 ; '.'
0000000000007556         db  0xff ; '.'
0000000000007557         db  0xff ; '.'
0000000000007558         db  0x08 ; '.'
0000000000007559         db  0x0c ; '.'
000000000000755a         db  0x00 ; '.'
000000000000755b         db  0x00 ; '.'
000000000000755c         db  0x98 ; '.'
000000000000755d         db  0xe2 ; '.'
000000000000755e         db  0xff ; '.'
000000000000755f         db  0xff ; '.'
0000000000007560         db  0x1c ; '.'
0000000000007561         db  0x0c ; '.'
0000000000007562         db  0x00 ; '.'
0000000000007563         db  0x00 ; '.'
0000000000007564         db  0x28 ; '('
0000000000007565         db  0xe3 ; '.'
0000000000007566         db  0xff ; '.'
0000000000007567         db  0xff ; '.'
0000000000007568         db  0x34 ; '4'
0000000000007569         db  0x0c ; '.'
000000000000756a         db  0x00 ; '.'
000000000000756b         db  0x00 ; '.'
000000000000756c         db  0x78 ; 'x'
000000000000756d         db  0xe3 ; '.'
000000000000756e         db  0xff ; '.'
000000000000756f         db  0xff ; '.'
0000000000007570         db  0x4c ; 'L'
0000000000007571         db  0x0c ; '.'
0000000000007572         db  0x00 ; '.'
0000000000007573         db  0x00 ; '.'
0000000000007574         db  0x98 ; '.'
0000000000007575         db  0xe3 ; '.'
0000000000007576         db  0xff ; '.'
0000000000007577         db  0xff ; '.'
0000000000007578         db  0x68 ; 'h'
0000000000007579         db  0x0c ; '.'
000000000000757a         db  0x00 ; '.'
000000000000757b         db  0x00 ; '.'
000000000000757c         db  0xc8 ; '.'
000000000000757d         db  0xe3 ; '.'
000000000000757e         db  0xff ; '.'
000000000000757f         db  0xff ; '.'
0000000000007580         db  0x84 ; '.'
0000000000007581         db  0x0c ; '.'
0000000000007582         db  0x00 ; '.'
0000000000007583         db  0x00 ; '.'
0000000000007584         db  0xf8 ; '.'
0000000000007585         db  0xe3 ; '.'
0000000000007586         db  0xff ; '.'
0000000000007587         db  0xff ; '.'
0000000000007588         db  0xac ; '.'
0000000000007589         db  0x0c ; '.'
000000000000758a         db  0x00 ; '.'
000000000000758b         db  0x00 ; '.'
000000000000758c         db  0x18 ; '.'
000000000000758d         db  0xe4 ; '.'
000000000000758e         db  0xff ; '.'
000000000000758f         db  0xff ; '.'
0000000000007590         db  0xc8 ; '.'
0000000000007591         db  0x0c ; '.'
0000000000007592         db  0x00 ; '.'
0000000000007593         db  0x00 ; '.'
0000000000007594         db  0x58 ; 'X'
0000000000007595         db  0xe4 ; '.'
0000000000007596         db  0xff ; '.'
0000000000007597         db  0xff ; '.'
0000000000007598         db  0xe0 ; '.'
0000000000007599         db  0x0c ; '.'
000000000000759a         db  0x00 ; '.'
000000000000759b         db  0x00 ; '.'
000000000000759c         db  0x88 ; '.'
000000000000759d         db  0xe4 ; '.'
000000000000759e         db  0xff ; '.'
000000000000759f         db  0xff ; '.'
00000000000075a0         db  0x00 ; '.'
00000000000075a1         db  0x0d ; '.'
00000000000075a2         db  0x00 ; '.'
00000000000075a3         db  0x00 ; '.'
00000000000075a4         db  0xa8 ; '.'
00000000000075a5         db  0xe8 ; '.'
00000000000075a6         db  0xff ; '.'
00000000000075a7         db  0xff ; '.'
00000000000075a8         db  0x50 ; 'P'
00000000000075a9         db  0x0d ; '.'
00000000000075aa         db  0x00 ; '.'
00000000000075ab         db  0x00 ; '.'
00000000000075ac         db  0x38 ; '8'
00000000000075ad         db  0xe9 ; '.'
00000000000075ae         db  0xff ; '.'
00000000000075af         db  0xff ; '.'
00000000000075b0         db  0x90 ; '.'
00000000000075b1         db  0x0d ; '.'
00000000000075b2         db  0x00 ; '.'
00000000000075b3         db  0x00 ; '.'
00000000000075b4         db  0xb8 ; '.'
00000000000075b5         db  0xe9 ; '.'
00000000000075b6         db  0xff ; '.'
00000000000075b7         db  0xff ; '.'
00000000000075b8         db  0xe0 ; '.'
00000000000075b9         db  0x0d ; '.'
00000000000075ba         db  0x00 ; '.'
00000000000075bb         db  0x00 ; '.'
00000000000075bc         db  0x18 ; '.'
00000000000075bd         db  0xea ; '.'
00000000000075be         db  0xff ; '.'
00000000000075bf         db  0xff ; '.'
00000000000075c0         db  0x00 ; '.'
00000000000075c1         db  0x0e ; '.'
00000000000075c2         db  0x00 ; '.'
00000000000075c3         db  0x00 ; '.'
00000000000075c4         db  0x58 ; 'X'
00000000000075c5         db  0xea ; '.'
00000000000075c6         db  0xff ; '.'
00000000000075c7         db  0xff ; '.'
00000000000075c8         db  0x20 ; ' '
00000000000075c9         db  0x0e ; '.'
00000000000075ca         db  0x00 ; '.'
00000000000075cb         db  0x00 ; '.'
00000000000075cc         db  0xa8 ; '.'
00000000000075cd         db  0xea ; '.'
00000000000075ce         db  0xff ; '.'
00000000000075cf         db  0xff ; '.'
00000000000075d0         db  0x38 ; '8'
00000000000075d1         db  0x0e ; '.'
00000000000075d2         db  0x00 ; '.'
00000000000075d3         db  0x00 ; '.'
00000000000075d4         db  0xe8 ; '.'
00000000000075d5         db  0xec ; '.'
00000000000075d6         db  0xff ; '.'
00000000000075d7         db  0xff ; '.'
00000000000075d8         db  0x88 ; '.'
00000000000075d9         db  0x0e ; '.'
00000000000075da         db  0x00 ; '.'
00000000000075db         db  0x00 ; '.'
00000000000075dc         db  0x68 ; 'h'
00000000000075dd         db  0xed ; '.'
00000000000075de         db  0xff ; '.'
00000000000075df         db  0xff ; '.'
00000000000075e0         db  0xc0 ; '.'
00000000000075e1         db  0x0e ; '.'
00000000000075e2         db  0x00 ; '.'
00000000000075e3         db  0x00 ; '.'
00000000000075e4         db  0xa8 ; '.'
00000000000075e5         db  0xed ; '.'
00000000000075e6         db  0xff ; '.'
00000000000075e7         db  0xff ; '.'
00000000000075e8         db  0xe0 ; '.'
00000000000075e9         db  0x0e ; '.'
00000000000075ea         db  0x00 ; '.'
00000000000075eb         db  0x00 ; '.'
00000000000075ec         db  0x08 ; '.'
00000000000075ed         db  0xee ; '.'
00000000000075ee         db  0xff ; '.'
00000000000075ef         db  0xff ; '.'
00000000000075f0         db  0x10 ; '.'
00000000000075f1         db  0x0f ; '.'
00000000000075f2         db  0x00 ; '.'
00000000000075f3         db  0x00 ; '.'
00000000000075f4         db  0x78 ; 'x'
00000000000075f5         db  0xee ; '.'
00000000000075f6         db  0xff ; '.'
00000000000075f7         db  0xff ; '.'
00000000000075f8         db  0x58 ; 'X'
00000000000075f9         db  0x0f ; '.'
00000000000075fa         db  0x00 ; '.'
00000000000075fb         db  0x00 ; '.'
00000000000075fc         db  0x88 ; '.'
00000000000075fd         db  0xee ; '.'
00000000000075fe         db  0xff ; '.'
00000000000075ff         db  0xff ; '.'
0000000000007600         db  0x70 ; 'p'
0000000000007601         db  0x0f ; '.'
0000000000007602         db  0x00 ; '.'
0000000000007603         db  0x00 ; '.'
0000000000007604         db  0x00 ; '.'
0000000000007605         db  0x00 ; '.'
0000000000007606         db  0x00 ; '.'
0000000000007607         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x7608; 0x8300[ (3320 bytes)
        ; File offset : [30216; 33536[ (3320 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000007608         dd         0x00000014                                  ; Length of the record
000000000000760c         dd         0x00000000                                  ; CIE ID
0000000000007610         db         0x01                                        ; Version
0000000000007611         db         "zR", 0                                     ; Augmentation String
0000000000007614         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000007615         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000007616         db         0x10                                        ; Return address register
0000000000007617         db         0x01                                        ; Augmentation data length
0000000000007618         db         0x1b                                        ; FDE encoding
0000000000007619         db  0x0c ; '.'
000000000000761a         db  0x07 ; '.'
000000000000761b         db  0x08 ; '.'
000000000000761c         db  0x90 ; '.'
000000000000761d         db  0x01 ; '.'
000000000000761e         db  0x07 ; '.'
000000000000761f         db  0x10 ; '.'
0000000000007620         dd         0x00000014                                  ; Length of the record
0000000000007624         dd         0x0000001c                                  ; FDE: parent CIE at 0x7608 (FDE encoding = 0x1B)
0000000000007628         db         0x18, 0xa9, 2 dup (0xff)                    ; begin 0x1f40
000000000000762c         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x1f6b)
0000000000007630         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007631         align      8
0000000000007638         dd         0x00000014                                  ; Length of the record
000000000000763c         dd         0x00000000                                  ; CIE ID
0000000000007640         db         0x01                                        ; Version
0000000000007641         db         "zR", 0                                     ; Augmentation String
0000000000007644         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000007645         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000007646         db         0x10                                        ; Return address register
0000000000007647         db         0x01                                        ; Augmentation data length
0000000000007648         db         0x1b                                        ; FDE encoding
0000000000007649         db  0x0c ; '.'
000000000000764a         db  0x07 ; '.'
000000000000764b         db  0x08 ; '.'
000000000000764c         db  0x90 ; '.'
000000000000764d         db  0x01 ; '.'
000000000000764e         db  0x00 ; '.'
000000000000764f         db  0x00 ; '.'
0000000000007650         dd         0x00000024                                  ; Length of the record
0000000000007654         dd         0x0000001c                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007658         db         0x98, 0x9f, 2 dup (0xff)                    ; begin 0x15f0
000000000000765c         db         0x90, 0x03, 2 dup (0x00)                    ; length 0x390 (end at 0x1980)
0000000000007660         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007661         db  0x0e ; '.'
0000000000007662         db  0x10 ; '.'
0000000000007663         db  0x46 ; 'F'
0000000000007664         db  0x0e ; '.'
0000000000007665         db  0x18 ; '.'
0000000000007666         db  0x4a ; 'J'
0000000000007667         db  0x0f ; '.'
0000000000007668         db  0x0b ; '.'
0000000000007669         db  0x77 ; 'w'
000000000000766a         db  0x08 ; '.'
000000000000766b         db  0x80 ; '.'
000000000000766c         db  0x00 ; '.'
000000000000766d         db  0x3f ; '?'
000000000000766e         db  0x1a ; '.'
000000000000766f         db  0x3b ; ';'
0000000000007670         db  0x2a ; '*'
0000000000007671         db  0x33 ; '3'
0000000000007672         db  0x24 ; '$'
0000000000007673         db  0x22 ; '"'
0000000000007674         db  0x00 ; '.'
0000000000007675         db  0x00 ; '.'
0000000000007676         db  0x00 ; '.'
0000000000007677         db  0x00 ; '.'
0000000000007678         dd         0x00000014                                  ; Length of the record
000000000000767c         dd         0x00000044                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007680         db         0x00, 0xa3, 2 dup (0xff)                    ; begin 0x1980
0000000000007684         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x1988)
0000000000007688         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007689         align      16
0000000000007690         dd         0x00000040                                  ; Length of the record
0000000000007694         dd         0x0000005c                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007698         db         0xb8, 0xa9, 2 dup (0xff)                    ; begin 0x2050
000000000000769c         db         0x91, 0x05, 2 dup (0x00)                    ; length 0x591 (end at 0x25e1)
00000000000076a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000076a1         db  0x42 ; 'B'
00000000000076a2         db  0x0e ; '.'
00000000000076a3         db  0x10 ; '.'
00000000000076a4         db  0x8e ; '.'
00000000000076a5         db  0x02 ; '.'
00000000000076a6         db  0x42 ; 'B'
00000000000076a7         db  0x0e ; '.'
00000000000076a8         db  0x18 ; '.'
00000000000076a9         db  0x8d ; '.'
00000000000076aa         db  0x03 ; '.'
00000000000076ab         db  0x42 ; 'B'
00000000000076ac         db  0x0e ; '.'
00000000000076ad         db  0x20 ; ' '
00000000000076ae         db  0x8c ; '.'
00000000000076af         db  0x04 ; '.'
00000000000076b0         db  0x41 ; 'A'
00000000000076b1         db  0x0e ; '.'
00000000000076b2         db  0x28 ; '('
00000000000076b3         db  0x86 ; '.'
00000000000076b4         db  0x05 ; '.'
00000000000076b5         db  0x41 ; 'A'
00000000000076b6         db  0x0e ; '.'
00000000000076b7         db  0x30 ; '0'
00000000000076b8         db  0x83 ; '.'
00000000000076b9         db  0x06 ; '.'
00000000000076ba         db  0x44 ; 'D'
00000000000076bb         db  0x0e ; '.'
00000000000076bc         db  0x40 ; '@'
00000000000076bd         db  0x02 ; '.'
00000000000076be         db  0xbd ; '.'
00000000000076bf         db  0x0a ; '.'
00000000000076c0         db  0x0e ; '.'
00000000000076c1         db  0x30 ; '0'
00000000000076c2         db  0x41 ; 'A'
00000000000076c3         db  0x0e ; '.'
00000000000076c4         db  0x28 ; '('
00000000000076c5         db  0x41 ; 'A'
00000000000076c6         db  0x0e ; '.'
00000000000076c7         db  0x20 ; ' '
00000000000076c8         db  0x42 ; 'B'
00000000000076c9         db  0x0e ; '.'
00000000000076ca         db  0x18 ; '.'
00000000000076cb         db  0x42 ; 'B'
00000000000076cc         db  0x0e ; '.'
00000000000076cd         db  0x10 ; '.'
00000000000076ce         db  0x42 ; 'B'
00000000000076cf         db  0x0e ; '.'
00000000000076d0         db  0x08 ; '.'
00000000000076d1         db  0x47 ; 'G'
00000000000076d2         db  0x0b ; '.'
00000000000076d3         db  0x00 ; '.'
00000000000076d4         dd         0x00000028                                  ; Length of the record
00000000000076d8         dd         0x000000a0                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
00000000000076dc         db         0x14, 0xaf, 2 dup (0xff)                    ; begin 0x25f0
00000000000076e0         db         0x8a, 0x03, 2 dup (0x00)                    ; length 0x38a (end at 0x297a)
00000000000076e4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000076e5         db  0x42 ; 'B'
00000000000076e6         db  0x0e ; '.'
00000000000076e7         db  0x10 ; '.'
00000000000076e8         db  0x8d ; '.'
00000000000076e9         db  0x02 ; '.'
00000000000076ea         db  0x42 ; 'B'
00000000000076eb         db  0x0e ; '.'
00000000000076ec         db  0x18 ; '.'
00000000000076ed         db  0x8c ; '.'
00000000000076ee         db  0x03 ; '.'
00000000000076ef         db  0x46 ; 'F'
00000000000076f0         db  0x0e ; '.'
00000000000076f1         db  0x20 ; ' '
00000000000076f2         db  0x86 ; '.'
00000000000076f3         db  0x04 ; '.'
00000000000076f4         db  0x41 ; 'A'
00000000000076f5         db  0x0e ; '.'
00000000000076f6         db  0x28 ; '('
00000000000076f7         db  0x83 ; '.'
00000000000076f8         db  0x05 ; '.'
00000000000076f9         db  0x49 ; 'I'
00000000000076fa         db  0x0e ; '.'
00000000000076fb         db  0xb0 ; '.'
00000000000076fc         db  0x01 ; '.'
00000000000076fd         db  0x00 ; '.'
00000000000076fe         db  0x00 ; '.'
00000000000076ff         db  0x00 ; '.'
0000000000007700         dd         0x00000044                                  ; Length of the record
0000000000007704         dd         0x000000cc                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007708         db         0x88, 0xa2, 2 dup (0xff)                    ; begin 0x1990
000000000000770c         db         0xa9, 0x05, 2 dup (0x00)                    ; length 0x5a9 (end at 0x1f39)
0000000000007710         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007711         db  0x42 ; 'B'
0000000000007712         db  0x0e ; '.'
0000000000007713         db  0x10 ; '.'
0000000000007714         db  0x8e ; '.'
0000000000007715         db  0x02 ; '.'
0000000000007716         db  0x42 ; 'B'
0000000000007717         db  0x0e ; '.'
0000000000007718         db  0x18 ; '.'
0000000000007719         db  0x8d ; '.'
000000000000771a         db  0x03 ; '.'
000000000000771b         db  0x42 ; 'B'
000000000000771c         db  0x0e ; '.'
000000000000771d         db  0x20 ; ' '
000000000000771e         db  0x8c ; '.'
000000000000771f         db  0x04 ; '.'
0000000000007720         db  0x41 ; 'A'
0000000000007721         db  0x0e ; '.'
0000000000007722         db  0x28 ; '('
0000000000007723         db  0x86 ; '.'
0000000000007724         db  0x05 ; '.'
0000000000007725         db  0x43 ; 'C'
0000000000007726         db  0x0e ; '.'
0000000000007727         db  0x30 ; '0'
0000000000007728         db  0x83 ; '.'
0000000000007729         db  0x06 ; '.'
000000000000772a         db  0x02 ; '.'
000000000000772b         db  0xc2 ; '.'
000000000000772c         db  0x0a ; '.'
000000000000772d         db  0x0e ; '.'
000000000000772e         db  0x38 ; '8'
000000000000772f         db  0x50 ; 'P'
0000000000007730         db  0x0e ; '.'
0000000000007731         db  0x40 ; '@'
0000000000007732         db  0x74 ; 't'
0000000000007733         db  0x0b ; '.'
0000000000007734         db  0x03 ; '.'
0000000000007735         db  0x23 ; '#'
0000000000007736         db  0x02 ; '.'
0000000000007737         db  0x0a ; '.'
0000000000007738         db  0x0e ; '.'
0000000000007739         db  0x28 ; '('
000000000000773a         db  0x41 ; 'A'
000000000000773b         db  0x0e ; '.'
000000000000773c         db  0x20 ; ' '
000000000000773d         db  0x42 ; 'B'
000000000000773e         db  0x0e ; '.'
000000000000773f         db  0x18 ; '.'
0000000000007740         db  0x48 ; 'H'
0000000000007741         db  0x0e ; '.'
0000000000007742         db  0x10 ; '.'
0000000000007743         db  0x42 ; 'B'
0000000000007744         db  0x0e ; '.'
0000000000007745         db  0x08 ; '.'
0000000000007746         db  0x41 ; 'A'
0000000000007747         db  0x0b ; '.'
0000000000007748         dd         0x00000024                                  ; Length of the record
000000000000774c         dd         0x00000114                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007750         db         0x30, 0xb2, 2 dup (0xff)                    ; begin 0x2980
0000000000007754         db         0x77, 3 dup (0x00)                          ; length 0x77 (end at 0x29f7)
0000000000007758         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007759         db  0x41 ; 'A'
000000000000775a         db  0x0e ; '.'
000000000000775b         db  0x10 ; '.'
000000000000775c         db  0x86 ; '.'
000000000000775d         db  0x02 ; '.'
000000000000775e         db  0x41 ; 'A'
000000000000775f         db  0x0e ; '.'
0000000000007760         db  0x18 ; '.'
0000000000007761         db  0x83 ; '.'
0000000000007762         db  0x03 ; '.'
0000000000007763         db  0x4b ; 'K'
0000000000007764         db  0x0e ; '.'
0000000000007765         db  0x20 ; ' '
0000000000007766         db  0x02 ; '.'
0000000000007767         db  0x65 ; 'e'
0000000000007768         db  0x0e ; '.'
0000000000007769         db  0x18 ; '.'
000000000000776a         db  0x43 ; 'C'
000000000000776b         db  0x0e ; '.'
000000000000776c         db  0x10 ; '.'
000000000000776d         db  0x41 ; 'A'
000000000000776e         db  0x0e ; '.'
000000000000776f         db  0x08 ; '.'
0000000000007770         dd         0x0000004c                                  ; Length of the record
0000000000007774         dd         0x0000013c                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007778         db         0x88, 0xb2, 2 dup (0xff)                    ; begin 0x2a00
000000000000777c         db         0x23, 0x02, 2 dup (0x00)                    ; length 0x223 (end at 0x2c23)
0000000000007780         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007781         db  0x42 ; 'B'
0000000000007782         db  0x0e ; '.'
0000000000007783         db  0x10 ; '.'
0000000000007784         db  0x8f ; '.'
0000000000007785         db  0x02 ; '.'
0000000000007786         db  0x42 ; 'B'
0000000000007787         db  0x0e ; '.'
0000000000007788         db  0x18 ; '.'
0000000000007789         db  0x8e ; '.'
000000000000778a         db  0x03 ; '.'
000000000000778b         db  0x45 ; 'E'
000000000000778c         db  0x0e ; '.'
000000000000778d         db  0x20 ; ' '
000000000000778e         db  0x8d ; '.'
000000000000778f         db  0x04 ; '.'
0000000000007790         db  0x42 ; 'B'
0000000000007791         db  0x0e ; '.'
0000000000007792         db  0x28 ; '('
0000000000007793         db  0x8c ; '.'
0000000000007794         db  0x05 ; '.'
0000000000007795         db  0x44 ; 'D'
0000000000007796         db  0x0e ; '.'
0000000000007797         db  0x30 ; '0'
0000000000007798         db  0x86 ; '.'
0000000000007799         db  0x06 ; '.'
000000000000779a         db  0x41 ; 'A'
000000000000779b         db  0x0e ; '.'
000000000000779c         db  0x38 ; '8'
000000000000779d         db  0x83 ; '.'
000000000000779e         db  0x07 ; '.'
000000000000779f         db  0x49 ; 'I'
00000000000077a0         db  0x0e ; '.'
00000000000077a1         db  0x60 ; '`'
00000000000077a2         db  0x03 ; '.'
00000000000077a3         db  0x54 ; 'T'
00000000000077a4         db  0x01 ; '.'
00000000000077a5         db  0x0a ; '.'
00000000000077a6         db  0x0e ; '.'
00000000000077a7         db  0x38 ; '8'
00000000000077a8         db  0x41 ; 'A'
00000000000077a9         db  0x0e ; '.'
00000000000077aa         db  0x30 ; '0'
00000000000077ab         db  0x41 ; 'A'
00000000000077ac         db  0x0e ; '.'
00000000000077ad         db  0x28 ; '('
00000000000077ae         db  0x42 ; 'B'
00000000000077af         db  0x0e ; '.'
00000000000077b0         db  0x20 ; ' '
00000000000077b1         db  0x42 ; 'B'
00000000000077b2         db  0x0e ; '.'
00000000000077b3         db  0x18 ; '.'
00000000000077b4         db  0x42 ; 'B'
00000000000077b5         db  0x0e ; '.'
00000000000077b6         db  0x10 ; '.'
00000000000077b7         db  0x42 ; 'B'
00000000000077b8         db  0x0e ; '.'
00000000000077b9         db  0x08 ; '.'
00000000000077ba         db  0x49 ; 'I'
00000000000077bb         db  0x0b ; '.'
00000000000077bc         db  0x00 ; '.'
00000000000077bd         db  0x00 ; '.'
00000000000077be         db  0x00 ; '.'
00000000000077bf         db  0x00 ; '.'
00000000000077c0         dd         0x00000010                                  ; Length of the record
00000000000077c4         dd         0x0000018c                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
00000000000077c8         db         0x68, 0xb4, 2 dup (0xff)                    ; begin 0x2c30
00000000000077cc         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2c38)
00000000000077d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000077d1         align      4
00000000000077d4         dd         0x00000010                                  ; Length of the record
00000000000077d8         dd         0x000001a0                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
00000000000077dc         db         0x64, 0xb4, 2 dup (0xff)                    ; begin 0x2c40
00000000000077e0         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2c48)
00000000000077e4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000077e5         align      8
00000000000077e8         dd         0x0000002c                                  ; Length of the record
00000000000077ec         dd         0x000001b4                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
00000000000077f0         db         0x60, 0xb4, 2 dup (0xff)                    ; begin 0x2c50
00000000000077f4         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x2cf4)
00000000000077f8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000077f9         db  0x41 ; 'A'
00000000000077fa         db  0x0e ; '.'
00000000000077fb         db  0x10 ; '.'
00000000000077fc         db  0x86 ; '.'
00000000000077fd         db  0x02 ; '.'
00000000000077fe         db  0x41 ; 'A'
00000000000077ff         db  0x0e ; '.'
0000000000007800         db  0x18 ; '.'
0000000000007801         db  0x83 ; '.'
0000000000007802         db  0x03 ; '.'
0000000000007803         db  0x44 ; 'D'
0000000000007804         db  0x0e ; '.'
0000000000007805         db  0x20 ; ' '
0000000000007806         db  0x7a ; 'z'
0000000000007807         db  0x0a ; '.'
0000000000007808         db  0x0e ; '.'
0000000000007809         db  0x18 ; '.'
000000000000780a         db  0x41 ; 'A'
000000000000780b         db  0x0e ; '.'
000000000000780c         db  0x10 ; '.'
000000000000780d         db  0x41 ; 'A'
000000000000780e         db  0x0e ; '.'
000000000000780f         db  0x08 ; '.'
0000000000007810         db  0x41 ; 'A'
0000000000007811         db  0x0b ; '.'
0000000000007812         db  0x00 ; '.'
0000000000007813         db  0x00 ; '.'
0000000000007814         db  0x00 ; '.'
0000000000007815         db  0x00 ; '.'
0000000000007816         db  0x00 ; '.'
0000000000007817         db  0x00 ; '.'
0000000000007818         dd         0x00000014                                  ; Length of the record
000000000000781c         dd         0x000001e4                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007820         db         0xe0, 0xb4, 2 dup (0xff)                    ; begin 0x2d00
0000000000007824         db         0x42, 3 dup (0x00)                          ; length 0x42 (end at 0x2d42)
0000000000007828         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007829         align      16
0000000000007830         dd         0x0000001c                                  ; Length of the record
0000000000007834         dd         0x000001fc                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007838         db         0x18, 0xb5, 2 dup (0xff)                    ; begin 0x2d50
000000000000783c         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x2def)
0000000000007840         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007841         db  0x44 ; 'D'
0000000000007842         db  0x0e ; '.'
0000000000007843         db  0x10 ; '.'
0000000000007844         db  0x83 ; '.'
0000000000007845         db  0x02 ; '.'
0000000000007846         db  0x02 ; '.'
0000000000007847         db  0x78 ; 'x'
0000000000007848         db  0x0a ; '.'
0000000000007849         db  0x0e ; '.'
000000000000784a         db  0x08 ; '.'
000000000000784b         db  0x41 ; 'A'
000000000000784c         db  0x0b ; '.'
000000000000784d         db  0x00 ; '.'
000000000000784e         db  0x00 ; '.'
000000000000784f         db  0x00 ; '.'
0000000000007850         dd         0x00000040                                  ; Length of the record
0000000000007854         dd         0x0000021c                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007858         db         0x98, 0xb5, 2 dup (0xff)                    ; begin 0x2df0
000000000000785c         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x2ed7)
0000000000007860         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007861         db  0x41 ; 'A'
0000000000007862         db  0x0e ; '.'
0000000000007863         db  0x10 ; '.'
0000000000007864         db  0x86 ; '.'
0000000000007865         db  0x02 ; '.'
0000000000007866         db  0x41 ; 'A'
0000000000007867         db  0x0e ; '.'
0000000000007868         db  0x18 ; '.'
0000000000007869         db  0x83 ; '.'
000000000000786a         db  0x03 ; '.'
000000000000786b         db  0x49 ; 'I'
000000000000786c         db  0x0e ; '.'
000000000000786d         db  0x20 ; ' '
000000000000786e         db  0x6e ; 'n'
000000000000786f         db  0x0a ; '.'
0000000000007870         db  0x0e ; '.'
0000000000007871         db  0x18 ; '.'
0000000000007872         db  0x41 ; 'A'
0000000000007873         db  0x0e ; '.'
0000000000007874         db  0x10 ; '.'
0000000000007875         db  0x41 ; 'A'
0000000000007876         db  0x0e ; '.'
0000000000007877         db  0x08 ; '.'
0000000000007878         db  0x45 ; 'E'
0000000000007879         db  0x0b ; '.'
000000000000787a         db  0x02 ; '.'
000000000000787b         db  0x4a ; 'J'
000000000000787c         db  0x0a ; '.'
000000000000787d         db  0x0e ; '.'
000000000000787e         db  0x18 ; '.'
000000000000787f         db  0x41 ; 'A'
0000000000007880         db  0x0e ; '.'
0000000000007881         db  0x10 ; '.'
0000000000007882         db  0x41 ; 'A'
0000000000007883         db  0x0e ; '.'
0000000000007884         db  0x08 ; '.'
0000000000007885         db  0x44 ; 'D'
0000000000007886         db  0x0b ; '.'
0000000000007887         db  0x02 ; '.'
0000000000007888         db  0x54 ; 'T'
0000000000007889         db  0x0e ; '.'
000000000000788a         db  0x18 ; '.'
000000000000788b         db  0x41 ; 'A'
000000000000788c         db  0x0e ; '.'
000000000000788d         db  0x10 ; '.'
000000000000788e         db  0x41 ; 'A'
000000000000788f         db  0x0e ; '.'
0000000000007890         db  0x08 ; '.'
0000000000007891         db  0x00 ; '.'
0000000000007892         db  0x00 ; '.'
0000000000007893         db  0x00 ; '.'
0000000000007894         dd         0x00000074                                  ; Length of the record
0000000000007898         dd         0x00000260                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
000000000000789c         db         0x44, 0xb6, 2 dup (0xff)                    ; begin 0x2ee0
00000000000078a0         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x4114)
00000000000078a4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000078a5         db  0x42 ; 'B'
00000000000078a6         db  0x0e ; '.'
00000000000078a7         db  0x10 ; '.'
00000000000078a8         db  0x8f ; '.'
00000000000078a9         db  0x02 ; '.'
00000000000078aa         db  0x42 ; 'B'
00000000000078ab         db  0x0e ; '.'
00000000000078ac         db  0x18 ; '.'
00000000000078ad         db  0x8e ; '.'
00000000000078ae         db  0x03 ; '.'
00000000000078af         db  0x45 ; 'E'
00000000000078b0         db  0x0e ; '.'
00000000000078b1         db  0x20 ; ' '
00000000000078b2         db  0x8d ; '.'
00000000000078b3         db  0x04 ; '.'
00000000000078b4         db  0x42 ; 'B'
00000000000078b5         db  0x0e ; '.'
00000000000078b6         db  0x28 ; '('
00000000000078b7         db  0x8c ; '.'
00000000000078b8         db  0x05 ; '.'
00000000000078b9         db  0x44 ; 'D'
00000000000078ba         db  0x0e ; '.'
00000000000078bb         db  0x30 ; '0'
00000000000078bc         db  0x86 ; '.'
00000000000078bd         db  0x06 ; '.'
00000000000078be         db  0x41 ; 'A'
00000000000078bf         db  0x0e ; '.'
00000000000078c0         db  0x38 ; '8'
00000000000078c1         db  0x83 ; '.'
00000000000078c2         db  0x07 ; '.'
00000000000078c3         db  0x53 ; 'S'
00000000000078c4         db  0x0e ; '.'
00000000000078c5         db  0xf0 ; '.'
00000000000078c6         db  0x01 ; '.'
00000000000078c7         db  0x03 ; '.'
00000000000078c8         db  0x81 ; '.'
00000000000078c9         db  0x0b ; '.'
00000000000078ca         db  0x0e ; '.'
00000000000078cb         db  0xf8 ; '.'
00000000000078cc         db  0x01 ; '.'
00000000000078cd         db  0x4a ; 'J'
00000000000078ce         db  0x0e ; '.'
00000000000078cf         db  0x80 ; '.'
00000000000078d0         db  0x02 ; '.'
00000000000078d1         db  0x44 ; 'D'
00000000000078d2         db  0x0e ; '.'
00000000000078d3         db  0x88 ; '.'
00000000000078d4         db  0x02 ; '.'
00000000000078d5         db  0x45 ; 'E'
00000000000078d6         db  0x0e ; '.'
00000000000078d7         db  0x90 ; '.'
00000000000078d8         db  0x02 ; '.'
00000000000078d9         db  0x5f ; '_'
00000000000078da         db  0x0e ; '.'
00000000000078db         db  0xf0 ; '.'
00000000000078dc         db  0x01 ; '.'
00000000000078dd         db  0x64 ; 'd'
00000000000078de         db  0x0a ; '.'
00000000000078df         db  0x0e ; '.'
00000000000078e0         db  0x38 ; '8'
00000000000078e1         db  0x41 ; 'A'
00000000000078e2         db  0x0e ; '.'
00000000000078e3         db  0x30 ; '0'
00000000000078e4         db  0x41 ; 'A'
00000000000078e5         db  0x0e ; '.'
00000000000078e6         db  0x28 ; '('
00000000000078e7         db  0x42 ; 'B'
00000000000078e8         db  0x0e ; '.'
00000000000078e9         db  0x20 ; ' '
00000000000078ea         db  0x42 ; 'B'
00000000000078eb         db  0x0e ; '.'
00000000000078ec         db  0x18 ; '.'
00000000000078ed         db  0x42 ; 'B'
00000000000078ee         db  0x0e ; '.'
00000000000078ef         db  0x10 ; '.'
00000000000078f0         db  0x42 ; 'B'
00000000000078f1         db  0x0e ; '.'
00000000000078f2         db  0x08 ; '.'
00000000000078f3         db  0x44 ; 'D'
00000000000078f4         db  0x0b ; '.'
00000000000078f5         db  0x03 ; '.'
00000000000078f6         db  0x99 ; '.'
00000000000078f7         db  0x05 ; '.'
00000000000078f8         db  0x0e ; '.'
00000000000078f9         db  0xf8 ; '.'
00000000000078fa         db  0x01 ; '.'
00000000000078fb         db  0x4d ; 'M'
00000000000078fc         db  0x0e ; '.'
00000000000078fd         db  0x80 ; '.'
00000000000078fe         db  0x02 ; '.'
00000000000078ff         db  0x44 ; 'D'
0000000000007900         db  0x0e ; '.'
0000000000007901         db  0x88 ; '.'
0000000000007902         db  0x02 ; '.'
0000000000007903         db  0x47 ; 'G'
0000000000007904         db  0x0e ; '.'
0000000000007905         db  0x90 ; '.'
0000000000007906         db  0x02 ; '.'
0000000000007907         db  0x5b ; '['
0000000000007908         db  0x0e ; '.'
0000000000007909         db  0xf0 ; '.'
000000000000790a         db  0x01 ; '.'
000000000000790b         db  0x00 ; '.'
000000000000790c         dd         0x00000068                                  ; Length of the record
0000000000007910         dd         0x000002d8                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007914         db         0x0c, 0xc8, 2 dup (0xff)                    ; begin 0x4120
0000000000007918         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x42cb)
000000000000791c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000791d         db  0x42 ; 'B'
000000000000791e         db  0x0e ; '.'
000000000000791f         db  0x10 ; '.'
0000000000007920         db  0x8f ; '.'
0000000000007921         db  0x02 ; '.'
0000000000007922         db  0x42 ; 'B'
0000000000007923         db  0x0e ; '.'
0000000000007924         db  0x18 ; '.'
0000000000007925         db  0x8e ; '.'
0000000000007926         db  0x03 ; '.'
0000000000007927         db  0x45 ; 'E'
0000000000007928         db  0x0e ; '.'
0000000000007929         db  0x20 ; ' '
000000000000792a         db  0x8d ; '.'
000000000000792b         db  0x04 ; '.'
000000000000792c         db  0x42 ; 'B'
000000000000792d         db  0x0e ; '.'
000000000000792e         db  0x28 ; '('
000000000000792f         db  0x8c ; '.'
0000000000007930         db  0x05 ; '.'
0000000000007931         db  0x44 ; 'D'
0000000000007932         db  0x0e ; '.'
0000000000007933         db  0x30 ; '0'
0000000000007934         db  0x86 ; '.'
0000000000007935         db  0x06 ; '.'
0000000000007936         db  0x41 ; 'A'
0000000000007937         db  0x0e ; '.'
0000000000007938         db  0x38 ; '8'
0000000000007939         db  0x83 ; '.'
000000000000793a         db  0x07 ; '.'
000000000000793b         db  0x47 ; 'G'
000000000000793c         db  0x0e ; '.'
000000000000793d         db  0x60 ; '`'
000000000000793e         db  0x02 ; '.'
000000000000793f         db  0x99 ; '.'
0000000000007940         db  0x0e ; '.'
0000000000007941         db  0x68 ; 'h'
0000000000007942         db  0x5f ; '_'
0000000000007943         db  0x0e ; '.'
0000000000007944         db  0x70 ; 'p'
0000000000007945         db  0x46 ; 'F'
0000000000007946         db  0x0e ; '.'
0000000000007947         db  0x78 ; 'x'
0000000000007948         db  0x42 ; 'B'
0000000000007949         db  0x0e ; '.'
000000000000794a         db  0x80 ; '.'
000000000000794b         db  0x01 ; '.'
000000000000794c         db  0x59 ; 'Y'
000000000000794d         db  0x0e ; '.'
000000000000794e         db  0x60 ; '`'
000000000000794f         db  0x02 ; '.'
0000000000007950         db  0x40 ; '@'
0000000000007951         db  0x0e ; '.'
0000000000007952         db  0x68 ; 'h'
0000000000007953         db  0x4b ; 'K'
0000000000007954         db  0x0e ; '.'
0000000000007955         db  0x70 ; 'p'
0000000000007956         db  0x43 ; 'C'
0000000000007957         db  0x0e ; '.'
0000000000007958         db  0x78 ; 'x'
0000000000007959         db  0x45 ; 'E'
000000000000795a         db  0x0e ; '.'
000000000000795b         db  0x80 ; '.'
000000000000795c         db  0x01 ; '.'
000000000000795d         db  0x5e ; '^'
000000000000795e         db  0x0e ; '.'
000000000000795f         db  0x60 ; '`'
0000000000007960         db  0x4c ; 'L'
0000000000007961         db  0x0a ; '.'
0000000000007962         db  0x0e ; '.'
0000000000007963         db  0x38 ; '8'
0000000000007964         db  0x44 ; 'D'
0000000000007965         db  0x0e ; '.'
0000000000007966         db  0x30 ; '0'
0000000000007967         db  0x41 ; 'A'
0000000000007968         db  0x0e ; '.'
0000000000007969         db  0x28 ; '('
000000000000796a         db  0x42 ; 'B'
000000000000796b         db  0x0e ; '.'
000000000000796c         db  0x20 ; ' '
000000000000796d         db  0x42 ; 'B'
000000000000796e         db  0x0e ; '.'
000000000000796f         db  0x18 ; '.'
0000000000007970         db  0x42 ; 'B'
0000000000007971         db  0x0e ; '.'
0000000000007972         db  0x10 ; '.'
0000000000007973         db  0x42 ; 'B'
0000000000007974         db  0x0e ; '.'
0000000000007975         db  0x08 ; '.'
0000000000007976         db  0x46 ; 'F'
0000000000007977         db  0x0b ; '.'
0000000000007978         dd         0x00000028                                  ; Length of the record
000000000000797c         dd         0x00000344                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007980         db         0x50, 0xc9, 2 dup (0xff)                    ; begin 0x42d0
0000000000007984         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x4306)
0000000000007988         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007989         db  0x42 ; 'B'
000000000000798a         db  0x0e ; '.'
000000000000798b         db  0x10 ; '.'
000000000000798c         db  0x8c ; '.'
000000000000798d         db  0x02 ; '.'
000000000000798e         db  0x41 ; 'A'
000000000000798f         db  0x0e ; '.'
0000000000007990         db  0x18 ; '.'
0000000000007991         db  0x86 ; '.'
0000000000007992         db  0x03 ; '.'
0000000000007993         db  0x41 ; 'A'
0000000000007994         db  0x0e ; '.'
0000000000007995         db  0x20 ; ' '
0000000000007996         db  0x83 ; '.'
0000000000007997         db  0x04 ; '.'
0000000000007998         db  0x6e ; 'n'
0000000000007999         db  0x0e ; '.'
000000000000799a         db  0x18 ; '.'
000000000000799b         db  0x41 ; 'A'
000000000000799c         db  0x0e ; '.'
000000000000799d         db  0x10 ; '.'
000000000000799e         db  0x42 ; 'B'
000000000000799f         db  0x0e ; '.'
00000000000079a0         db  0x08 ; '.'
00000000000079a1         db  0x00 ; '.'
00000000000079a2         db  0x00 ; '.'
00000000000079a3         db  0x00 ; '.'
00000000000079a4         dd         0x00000010                                  ; Length of the record
00000000000079a8         dd         0x00000370                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
00000000000079ac         db         0x64, 0xc9, 2 dup (0xff)                    ; begin 0x4310
00000000000079b0         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4321)
00000000000079b4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000079b5         align      8
00000000000079b8         dd         0x00000010                                  ; Length of the record
00000000000079bc         dd         0x00000384                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
00000000000079c0         db         0x70, 0xc9, 2 dup (0xff)                    ; begin 0x4330
00000000000079c4         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4341)
00000000000079c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000079c9         align      4
00000000000079cc         dd         0x00000010                                  ; Length of the record
00000000000079d0         dd         0x00000398                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
00000000000079d4         db         0x7c, 0xc9, 2 dup (0xff)                    ; begin 0x4350
00000000000079d8         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x4385)
00000000000079dc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000079dd         align      32
00000000000079e0         dd         0x00000010                                  ; Length of the record
00000000000079e4         dd         0x000003ac                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
00000000000079e8         db         0xa8, 0xc9, 2 dup (0xff)                    ; begin 0x4390
00000000000079ec         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x43a5)
00000000000079f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000079f1         align      4
00000000000079f4         dd         0x00000010                                  ; Length of the record
00000000000079f8         dd         0x000003c0                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
00000000000079fc         db         0xb4, 0xc9, 2 dup (0xff)                    ; begin 0x43b0
0000000000007a00         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x43e0)
0000000000007a04         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007a05         db  0x6b ; 'k'
0000000000007a06         db  0x0e ; '.'
0000000000007a07         db  0x10 ; '.'
0000000000007a08         dd         0x00000050                                  ; Length of the record
0000000000007a0c         dd         0x000003d4                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007a10         db         0xd0, 0xc9, 2 dup (0xff)                    ; begin 0x43e0
0000000000007a14         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x4454)
0000000000007a18         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007a19         db  0x42 ; 'B'
0000000000007a1a         db  0x0e ; '.'
0000000000007a1b         db  0x10 ; '.'
0000000000007a1c         db  0x8f ; '.'
0000000000007a1d         db  0x02 ; '.'
0000000000007a1e         db  0x42 ; 'B'
0000000000007a1f         db  0x0e ; '.'
0000000000007a20         db  0x18 ; '.'
0000000000007a21         db  0x8e ; '.'
0000000000007a22         db  0x03 ; '.'
0000000000007a23         db  0x49 ; 'I'
0000000000007a24         db  0x0e ; '.'
0000000000007a25         db  0x20 ; ' '
0000000000007a26         db  0x8d ; '.'
0000000000007a27         db  0x04 ; '.'
0000000000007a28         db  0x42 ; 'B'
0000000000007a29         db  0x0e ; '.'
0000000000007a2a         db  0x28 ; '('
0000000000007a2b         db  0x8c ; '.'
0000000000007a2c         db  0x05 ; '.'
0000000000007a2d         db  0x44 ; 'D'
0000000000007a2e         db  0x0e ; '.'
0000000000007a2f         db  0x30 ; '0'
0000000000007a30         db  0x86 ; '.'
0000000000007a31         db  0x06 ; '.'
0000000000007a32         db  0x41 ; 'A'
0000000000007a33         db  0x0e ; '.'
0000000000007a34         db  0x38 ; '8'
0000000000007a35         db  0x83 ; '.'
0000000000007a36         db  0x07 ; '.'
0000000000007a37         db  0x4d ; 'M'
0000000000007a38         db  0x0e ; '.'
0000000000007a39         db  0x50 ; 'P'
0000000000007a3a         db  0x5f ; '_'
0000000000007a3b         db  0x0e ; '.'
0000000000007a3c         db  0x58 ; 'X'
0000000000007a3d         db  0x47 ; 'G'
0000000000007a3e         db  0x0e ; '.'
0000000000007a3f         db  0x60 ; '`'
0000000000007a40         db  0x46 ; 'F'
0000000000007a41         db  0x0e ; '.'
0000000000007a42         db  0x68 ; 'h'
0000000000007a43         db  0x44 ; 'D'
0000000000007a44         db  0x0e ; '.'
0000000000007a45         db  0x70 ; 'p'
0000000000007a46         db  0x58 ; 'X'
0000000000007a47         db  0x0e ; '.'
0000000000007a48         db  0x38 ; '8'
0000000000007a49         db  0x41 ; 'A'
0000000000007a4a         db  0x0e ; '.'
0000000000007a4b         db  0x30 ; '0'
0000000000007a4c         db  0x41 ; 'A'
0000000000007a4d         db  0x0e ; '.'
0000000000007a4e         db  0x28 ; '('
0000000000007a4f         db  0x42 ; 'B'
0000000000007a50         db  0x0e ; '.'
0000000000007a51         db  0x20 ; ' '
0000000000007a52         db  0x42 ; 'B'
0000000000007a53         db  0x0e ; '.'
0000000000007a54         db  0x18 ; '.'
0000000000007a55         db  0x42 ; 'B'
0000000000007a56         db  0x0e ; '.'
0000000000007a57         db  0x10 ; '.'
0000000000007a58         db  0x42 ; 'B'
0000000000007a59         db  0x0e ; '.'
0000000000007a5a         db  0x08 ; '.'
0000000000007a5b         db  0x00 ; '.'
0000000000007a5c         dd         0x00000068                                  ; Length of the record
0000000000007a60         dd         0x00000428                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007a64         db         0xfc, 0xc9, 2 dup (0xff)                    ; begin 0x4460
0000000000007a68         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x4543)
0000000000007a6c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007a6d         db  0x42 ; 'B'
0000000000007a6e         db  0x0e ; '.'
0000000000007a6f         db  0x10 ; '.'
0000000000007a70         db  0x8f ; '.'
0000000000007a71         db  0x02 ; '.'
0000000000007a72         db  0x42 ; 'B'
0000000000007a73         db  0x0e ; '.'
0000000000007a74         db  0x18 ; '.'
0000000000007a75         db  0x8e ; '.'
0000000000007a76         db  0x03 ; '.'
0000000000007a77         db  0x49 ; 'I'
0000000000007a78         db  0x0e ; '.'
0000000000007a79         db  0x20 ; ' '
0000000000007a7a         db  0x8d ; '.'
0000000000007a7b         db  0x04 ; '.'
0000000000007a7c         db  0x42 ; 'B'
0000000000007a7d         db  0x0e ; '.'
0000000000007a7e         db  0x28 ; '('
0000000000007a7f         db  0x8c ; '.'
0000000000007a80         db  0x05 ; '.'
0000000000007a81         db  0x44 ; 'D'
0000000000007a82         db  0x0e ; '.'
0000000000007a83         db  0x30 ; '0'
0000000000007a84         db  0x86 ; '.'
0000000000007a85         db  0x06 ; '.'
0000000000007a86         db  0x41 ; 'A'
0000000000007a87         db  0x0e ; '.'
0000000000007a88         db  0x38 ; '8'
0000000000007a89         db  0x83 ; '.'
0000000000007a8a         db  0x07 ; '.'
0000000000007a8b         db  0x4d ; 'M'
0000000000007a8c         db  0x0e ; '.'
0000000000007a8d         db  0x70 ; 'p'
0000000000007a8e         db  0x65 ; 'e'
0000000000007a8f         db  0x0e ; '.'
0000000000007a90         db  0x78 ; 'x'
0000000000007a91         db  0x4d ; 'M'
0000000000007a92         db  0x0e ; '.'
0000000000007a93         db  0x80 ; '.'
0000000000007a94         db  0x01 ; '.'
0000000000007a95         db  0x46 ; 'F'
0000000000007a96         db  0x0e ; '.'
0000000000007a97         db  0x88 ; '.'
0000000000007a98         db  0x01 ; '.'
0000000000007a99         db  0x42 ; 'B'
0000000000007a9a         db  0x0e ; '.'
0000000000007a9b         db  0x90 ; '.'
0000000000007a9c         db  0x01 ; '.'
0000000000007a9d         db  0x5e ; '^'
0000000000007a9e         db  0x0e ; '.'
0000000000007a9f         db  0x70 ; 'p'
0000000000007aa0         db  0x56 ; 'V'
0000000000007aa1         db  0x0e ; '.'
0000000000007aa2         db  0x78 ; 'x'
0000000000007aa3         db  0x43 ; 'C'
0000000000007aa4         db  0x0e ; '.'
0000000000007aa5         db  0x80 ; '.'
0000000000007aa6         db  0x01 ; '.'
0000000000007aa7         db  0x43 ; 'C'
0000000000007aa8         db  0x0e ; '.'
0000000000007aa9         db  0x88 ; '.'
0000000000007aaa         db  0x01 ; '.'
0000000000007aab         db  0x56 ; 'V'
0000000000007aac         db  0x0e ; '.'
0000000000007aad         db  0x90 ; '.'
0000000000007aae         db  0x01 ; '.'
0000000000007aaf         db  0x52 ; 'R'
0000000000007ab0         db  0x0e ; '.'
0000000000007ab1         db  0x70 ; 'p'
0000000000007ab2         db  0x5b ; '['
0000000000007ab3         db  0x0e ; '.'
0000000000007ab4         db  0x38 ; '8'
0000000000007ab5         db  0x41 ; 'A'
0000000000007ab6         db  0x0e ; '.'
0000000000007ab7         db  0x30 ; '0'
0000000000007ab8         db  0x41 ; 'A'
0000000000007ab9         db  0x0e ; '.'
0000000000007aba         db  0x28 ; '('
0000000000007abb         db  0x42 ; 'B'
0000000000007abc         db  0x0e ; '.'
0000000000007abd         db  0x20 ; ' '
0000000000007abe         db  0x42 ; 'B'
0000000000007abf         db  0x0e ; '.'
0000000000007ac0         db  0x18 ; '.'
0000000000007ac1         db  0x42 ; 'B'
0000000000007ac2         db  0x0e ; '.'
0000000000007ac3         db  0x10 ; '.'
0000000000007ac4         db  0x42 ; 'B'
0000000000007ac5         db  0x0e ; '.'
0000000000007ac6         db  0x08 ; '.'
0000000000007ac7         db  0x00 ; '.'
0000000000007ac8         dd         0x00000010                                  ; Length of the record
0000000000007acc         dd         0x00000494                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007ad0         db         0x80, 0xca, 2 dup (0xff)                    ; begin 0x4550
0000000000007ad4         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x455a)
0000000000007ad8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007ad9         align      4
0000000000007adc         dd         0x00000028                                  ; Length of the record
0000000000007ae0         dd         0x000004a8                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007ae4         db         0x7c, 0xca, 2 dup (0xff)                    ; begin 0x4560
0000000000007ae8         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x45f3)
0000000000007aec         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007aed         db  0x48 ; 'H'
0000000000007aee         db  0x0e ; '.'
0000000000007aef         db  0x10 ; '.'
0000000000007af0         db  0x8c ; '.'
0000000000007af1         db  0x02 ; '.'
0000000000007af2         db  0x48 ; 'H'
0000000000007af3         db  0x0e ; '.'
0000000000007af4         db  0x18 ; '.'
0000000000007af5         db  0x86 ; '.'
0000000000007af6         db  0x03 ; '.'
0000000000007af7         db  0x41 ; 'A'
0000000000007af8         db  0x0e ; '.'
0000000000007af9         db  0x20 ; ' '
0000000000007afa         db  0x83 ; '.'
0000000000007afb         db  0x04 ; '.'
0000000000007afc         db  0x02 ; '.'
0000000000007afd         db  0x74 ; 't'
0000000000007afe         db  0x0e ; '.'
0000000000007aff         db  0x18 ; '.'
0000000000007b00         db  0x4b ; 'K'
0000000000007b01         db  0x0e ; '.'
0000000000007b02         db  0x10 ; '.'
0000000000007b03         db  0x42 ; 'B'
0000000000007b04         db  0x0e ; '.'
0000000000007b05         db  0x08 ; '.'
0000000000007b06         db  0x00 ; '.'
0000000000007b07         db  0x00 ; '.'
0000000000007b08         dd         0x00000010                                  ; Length of the record
0000000000007b0c         dd         0x000004d4                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007b10         db         0xf0, 0xca, 2 dup (0xff)                    ; begin 0x4600
0000000000007b14         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4613)
0000000000007b18         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007b19         align      4
0000000000007b1c         dd         0x00000010                                  ; Length of the record
0000000000007b20         dd         0x000004e8                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007b24         db         0xfc, 0xca, 2 dup (0xff)                    ; begin 0x4620
0000000000007b28         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x462c)
0000000000007b2c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007b2d         align      16
0000000000007b30         dd         0x00000010                                  ; Length of the record
0000000000007b34         dd         0x000004fc                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007b38         db         0xf8, 0xca, 2 dup (0xff)                    ; begin 0x4630
0000000000007b3c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x4648)
0000000000007b40         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007b41         align      4
0000000000007b44         dd         0x00000010                                  ; Length of the record
0000000000007b48         dd         0x00000510                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007b4c         db         0x04, 0xcb, 2 dup (0xff)                    ; begin 0x4650
0000000000007b50         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x4664)
0000000000007b54         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007b55         align      8
0000000000007b58         dd         0x00000018                                  ; Length of the record
0000000000007b5c         dd         0x00000524                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007b60         db         0x10, 0xcb, 2 dup (0xff)                    ; begin 0x4670
0000000000007b64         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x46fe)
0000000000007b68         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007b69         db  0x44 ; 'D'
0000000000007b6a         db  0x0e ; '.'
0000000000007b6b         db  0x50 ; 'P'
0000000000007b6c         db  0x02 ; '.'
0000000000007b6d         db  0x7f ; '.'
0000000000007b6e         db  0x0a ; '.'
0000000000007b6f         db  0x0e ; '.'
0000000000007b70         db  0x08 ; '.'
0000000000007b71         db  0x41 ; 'A'
0000000000007b72         db  0x0b ; '.'
0000000000007b73         db  0x00 ; '.'
0000000000007b74         dd         0x00000018                                  ; Length of the record
0000000000007b78         dd         0x00000540                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007b7c         db         0x84, 0xcb, 2 dup (0xff)                    ; begin 0x4700
0000000000007b80         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x478a)
0000000000007b84         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007b85         db  0x44 ; 'D'
0000000000007b86         db  0x0e ; '.'
0000000000007b87         db  0x50 ; 'P'
0000000000007b88         db  0x02 ; '.'
0000000000007b89         db  0x7b ; '{'
0000000000007b8a         db  0x0a ; '.'
0000000000007b8b         db  0x0e ; '.'
0000000000007b8c         db  0x08 ; '.'
0000000000007b8d         db  0x41 ; 'A'
0000000000007b8e         db  0x0b ; '.'
0000000000007b8f         db  0x00 ; '.'
0000000000007b90         dd         0x00000010                                  ; Length of the record
0000000000007b94         dd         0x0000055c                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007b98         db         0xf8, 0xcb, 2 dup (0xff)                    ; begin 0x4790
0000000000007b9c         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x479c)
0000000000007ba0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007ba1         align      4
0000000000007ba4         dd         0x00000010                                  ; Length of the record
0000000000007ba8         dd         0x00000570                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007bac         db         0xf4, 0xcb, 2 dup (0xff)                    ; begin 0x47a0
0000000000007bb0         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x47af)
0000000000007bb4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007bb5         align      8
0000000000007bb8         dd         0x00000018                                  ; Length of the record
0000000000007bbc         dd         0x00000584                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007bc0         db         0xf0, 0xcb, 2 dup (0xff)                    ; begin 0x47b0
0000000000007bc4         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x4848)
0000000000007bc8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007bc9         db  0x44 ; 'D'
0000000000007bca         db  0x0e ; '.'
0000000000007bcb         db  0x50 ; 'P'
0000000000007bcc         db  0x02 ; '.'
0000000000007bcd         db  0x8e ; '.'
0000000000007bce         db  0x0a ; '.'
0000000000007bcf         db  0x0e ; '.'
0000000000007bd0         db  0x08 ; '.'
0000000000007bd1         db  0x41 ; 'A'
0000000000007bd2         db  0x0b ; '.'
0000000000007bd3         db  0x00 ; '.'
0000000000007bd4         dd         0x00000010                                  ; Length of the record
0000000000007bd8         dd         0x000005a0                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007bdc         db         0x74, 0xcc, 2 dup (0xff)                    ; begin 0x4850
0000000000007be0         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x4860)
0000000000007be4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007be5         align      8
0000000000007be8         dd         0x00000010                                  ; Length of the record
0000000000007bec         dd         0x000005b4                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007bf0         db         0x70, 0xcc, 2 dup (0xff)                    ; begin 0x4860
0000000000007bf4         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4871)
0000000000007bf8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007bf9         align      4
0000000000007bfc         dd         0x00000010                                  ; Length of the record
0000000000007c00         dd         0x000005c8                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007c04         db         0x7c, 0xcc, 2 dup (0xff)                    ; begin 0x4880
0000000000007c08         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x488a)
0000000000007c0c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007c0d         align      16
0000000000007c10         dd         0x00000018                                  ; Length of the record
0000000000007c14         dd         0x000005dc                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007c18         db         0x78, 0xcc, 2 dup (0xff)                    ; begin 0x4890
0000000000007c1c         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x491e)
0000000000007c20         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007c21         db  0x44 ; 'D'
0000000000007c22         db  0x0e ; '.'
0000000000007c23         db  0x50 ; 'P'
0000000000007c24         db  0x02 ; '.'
0000000000007c25         db  0x7f ; '.'
0000000000007c26         db  0x0a ; '.'
0000000000007c27         db  0x0e ; '.'
0000000000007c28         db  0x08 ; '.'
0000000000007c29         db  0x41 ; 'A'
0000000000007c2a         db  0x0b ; '.'
0000000000007c2b         db  0x00 ; '.'
0000000000007c2c         dd         0x00000018                                  ; Length of the record
0000000000007c30         dd         0x000005f8                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007c34         db         0xec, 0xcc, 2 dup (0xff)                    ; begin 0x4920
0000000000007c38         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x49b1)
0000000000007c3c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007c3d         db  0x44 ; 'D'
0000000000007c3e         db  0x0e ; '.'
0000000000007c3f         db  0x50 ; 'P'
0000000000007c40         db  0x02 ; '.'
0000000000007c41         db  0x82 ; '.'
0000000000007c42         db  0x0a ; '.'
0000000000007c43         db  0x0e ; '.'
0000000000007c44         db  0x08 ; '.'
0000000000007c45         db  0x41 ; 'A'
0000000000007c46         db  0x0b ; '.'
0000000000007c47         db  0x00 ; '.'
0000000000007c48         dd         0x00000010                                  ; Length of the record
0000000000007c4c         dd         0x00000614                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007c50         db         0x70, 0xcd, 2 dup (0xff)                    ; begin 0x49c0
0000000000007c54         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x49cc)
0000000000007c58         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007c59         align      4
0000000000007c5c         dd         0x00000010                                  ; Length of the record
0000000000007c60         dd         0x00000628                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007c64         db         0x6c, 0xcd, 2 dup (0xff)                    ; begin 0x49d0
0000000000007c68         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x49e7)
0000000000007c6c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007c6d         align      16
0000000000007c70         dd         0x00000010                                  ; Length of the record
0000000000007c74         dd         0x0000063c                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007c78         db         0x78, 0xcd, 2 dup (0xff)                    ; begin 0x49f0
0000000000007c7c         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4a03)
0000000000007c80         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007c81         align      4
0000000000007c84         dd         0x00000010                                  ; Length of the record
0000000000007c88         dd         0x00000650                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007c8c         db         0x84, 0xcd, 2 dup (0xff)                    ; begin 0x4a10
0000000000007c90         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x4a1c)
0000000000007c94         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007c95         align      8
0000000000007c98         dd         0x00000010                                  ; Length of the record
0000000000007c9c         dd         0x00000664                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007ca0         db         0x80, 0xcd, 2 dup (0xff)                    ; begin 0x4a20
0000000000007ca4         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x4a34)
0000000000007ca8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007ca9         align      4
0000000000007cac         dd         0x00000010                                  ; Length of the record
0000000000007cb0         dd         0x00000678                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007cb4         db         0x8c, 0xcd, 2 dup (0xff)                    ; begin 0x4a40
0000000000007cb8         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4a53)
0000000000007cbc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007cbd         align      64
0000000000007cc0         dd         0x00000014                                  ; Length of the record
0000000000007cc4         dd         0x0000068c                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007cc8         db         0x98, 0xcd, 2 dup (0xff)                    ; begin 0x4a60
0000000000007ccc         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x4a78)
0000000000007cd0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007cd1         align      8
0000000000007cd8         dd         0x0000004c                                  ; Length of the record
0000000000007cdc         dd         0x000006a4                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007ce0         db         0xa0, 0xcd, 2 dup (0xff)                    ; begin 0x4a80
0000000000007ce4         db         0xc9, 0x03, 2 dup (0x00)                    ; length 0x3c9 (end at 0x4e49)
0000000000007ce8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007ce9         db  0x42 ; 'B'
0000000000007cea         db  0x0e ; '.'
0000000000007ceb         db  0x10 ; '.'
0000000000007cec         db  0x8f ; '.'
0000000000007ced         db  0x02 ; '.'
0000000000007cee         db  0x42 ; 'B'
0000000000007cef         db  0x0e ; '.'
0000000000007cf0         db  0x18 ; '.'
0000000000007cf1         db  0x8e ; '.'
0000000000007cf2         db  0x03 ; '.'
0000000000007cf3         db  0x45 ; 'E'
0000000000007cf4         db  0x0e ; '.'
0000000000007cf5         db  0x20 ; ' '
0000000000007cf6         db  0x8d ; '.'
0000000000007cf7         db  0x04 ; '.'
0000000000007cf8         db  0x42 ; 'B'
0000000000007cf9         db  0x0e ; '.'
0000000000007cfa         db  0x28 ; '('
0000000000007cfb         db  0x8c ; '.'
0000000000007cfc         db  0x05 ; '.'
0000000000007cfd         db  0x44 ; 'D'
0000000000007cfe         db  0x0e ; '.'
0000000000007cff         db  0x30 ; '0'
0000000000007d00         db  0x86 ; '.'
0000000000007d01         db  0x06 ; '.'
0000000000007d02         db  0x41 ; 'A'
0000000000007d03         db  0x0e ; '.'
0000000000007d04         db  0x38 ; '8'
0000000000007d05         db  0x83 ; '.'
0000000000007d06         db  0x07 ; '.'
0000000000007d07         db  0x50 ; 'P'
0000000000007d08         db  0x0e ; '.'
0000000000007d09         db  0x90 ; '.'
0000000000007d0a         db  0x01 ; '.'
0000000000007d0b         db  0x03 ; '.'
0000000000007d0c         db  0x10 ; '.'
0000000000007d0d         db  0x01 ; '.'
0000000000007d0e         db  0x0a ; '.'
0000000000007d0f         db  0x0e ; '.'
0000000000007d10         db  0x38 ; '8'
0000000000007d11         db  0x41 ; 'A'
0000000000007d12         db  0x0e ; '.'
0000000000007d13         db  0x30 ; '0'
0000000000007d14         db  0x41 ; 'A'
0000000000007d15         db  0x0e ; '.'
0000000000007d16         db  0x28 ; '('
0000000000007d17         db  0x42 ; 'B'
0000000000007d18         db  0x0e ; '.'
0000000000007d19         db  0x20 ; ' '
0000000000007d1a         db  0x42 ; 'B'
0000000000007d1b         db  0x0e ; '.'
0000000000007d1c         db  0x18 ; '.'
0000000000007d1d         db  0x42 ; 'B'
0000000000007d1e         db  0x0e ; '.'
0000000000007d1f         db  0x10 ; '.'
0000000000007d20         db  0x42 ; 'B'
0000000000007d21         db  0x0e ; '.'
0000000000007d22         db  0x08 ; '.'
0000000000007d23         db  0x46 ; 'F'
0000000000007d24         db  0x0b ; '.'
0000000000007d25         db  0x00 ; '.'
0000000000007d26         db  0x00 ; '.'
0000000000007d27         db  0x00 ; '.'
0000000000007d28         dd         0x0000005c                                  ; Length of the record
0000000000007d2c         dd         0x000006f4                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007d30         db         0x20, 0xd1, 2 dup (0xff)                    ; begin 0x4e50
0000000000007d34         db         0xcd, 3 dup (0x00)                          ; length 0xcd (end at 0x4f1d)
0000000000007d38         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007d39         db  0x4b ; 'K'
0000000000007d3a         db  0x0e ; '.'
0000000000007d3b         db  0x10 ; '.'
0000000000007d3c         db  0x8f ; '.'
0000000000007d3d         db  0x02 ; '.'
0000000000007d3e         db  0x42 ; 'B'
0000000000007d3f         db  0x0e ; '.'
0000000000007d40         db  0x18 ; '.'
0000000000007d41         db  0x8e ; '.'
0000000000007d42         db  0x03 ; '.'
0000000000007d43         db  0x45 ; 'E'
0000000000007d44         db  0x0e ; '.'
0000000000007d45         db  0x20 ; ' '
0000000000007d46         db  0x8d ; '.'
0000000000007d47         db  0x04 ; '.'
0000000000007d48         db  0x42 ; 'B'
0000000000007d49         db  0x0e ; '.'
0000000000007d4a         db  0x28 ; '('
0000000000007d4b         db  0x8c ; '.'
0000000000007d4c         db  0x05 ; '.'
0000000000007d4d         db  0x44 ; 'D'
0000000000007d4e         db  0x0e ; '.'
0000000000007d4f         db  0x30 ; '0'
0000000000007d50         db  0x86 ; '.'
0000000000007d51         db  0x06 ; '.'
0000000000007d52         db  0x41 ; 'A'
0000000000007d53         db  0x0e ; '.'
0000000000007d54         db  0x38 ; '8'
0000000000007d55         db  0x83 ; '.'
0000000000007d56         db  0x07 ; '.'
0000000000007d57         db  0x52 ; 'R'
0000000000007d58         db  0x0e ; '.'
0000000000007d59         db  0x50 ; 'P'
0000000000007d5a         db  0x02 ; '.'
0000000000007d5b         db  0x6d ; 'm'
0000000000007d5c         db  0x0e ; '.'
0000000000007d5d         db  0x38 ; '8'
0000000000007d5e         db  0x44 ; 'D'
0000000000007d5f         db  0x0e ; '.'
0000000000007d60         db  0x30 ; '0'
0000000000007d61         db  0x41 ; 'A'
0000000000007d62         db  0x0e ; '.'
0000000000007d63         db  0x28 ; '('
0000000000007d64         db  0x42 ; 'B'
0000000000007d65         db  0x0e ; '.'
0000000000007d66         db  0x20 ; ' '
0000000000007d67         db  0x42 ; 'B'
0000000000007d68         db  0x0e ; '.'
0000000000007d69         db  0x18 ; '.'
0000000000007d6a         db  0x42 ; 'B'
0000000000007d6b         db  0x0e ; '.'
0000000000007d6c         db  0x10 ; '.'
0000000000007d6d         db  0x42 ; 'B'
0000000000007d6e         db  0x0e ; '.'
0000000000007d6f         db  0x08 ; '.'
0000000000007d70         db  0x4b ; 'K'
0000000000007d71         db  0xc3 ; '.'
0000000000007d72         db  0xc6 ; '.'
0000000000007d73         db  0xcc ; '.'
0000000000007d74         db  0xcd ; '.'
0000000000007d75         db  0xce ; '.'
0000000000007d76         db  0xcf ; '.'
0000000000007d77         db  0x58 ; 'X'
0000000000007d78         db  0x0e ; '.'
0000000000007d79         db  0x50 ; 'P'
0000000000007d7a         db  0x83 ; '.'
0000000000007d7b         db  0x07 ; '.'
0000000000007d7c         db  0x86 ; '.'
0000000000007d7d         db  0x06 ; '.'
0000000000007d7e         db  0x8c ; '.'
0000000000007d7f         db  0x05 ; '.'
0000000000007d80         db  0x8d ; '.'
0000000000007d81         db  0x04 ; '.'
0000000000007d82         db  0x8e ; '.'
0000000000007d83         db  0x03 ; '.'
0000000000007d84         db  0x8f ; '.'
0000000000007d85         db  0x02 ; '.'
0000000000007d86         db  0x00 ; '.'
0000000000007d87         db  0x00 ; '.'
0000000000007d88         dd         0x00000110                                  ; Length of the record
0000000000007d8c         dd         0x00000754                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007d90         db         0x90, 0xd1, 2 dup (0xff)                    ; begin 0x4f20
0000000000007d94         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x5337)
0000000000007d98         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007d99         db  0x42 ; 'B'
0000000000007d9a         db  0x0e ; '.'
0000000000007d9b         db  0x10 ; '.'
0000000000007d9c         db  0x8f ; '.'
0000000000007d9d         db  0x02 ; '.'
0000000000007d9e         db  0x42 ; 'B'
0000000000007d9f         db  0x0e ; '.'
0000000000007da0         db  0x18 ; '.'
0000000000007da1         db  0x8e ; '.'
0000000000007da2         db  0x03 ; '.'
0000000000007da3         db  0x42 ; 'B'
0000000000007da4         db  0x0e ; '.'
0000000000007da5         db  0x20 ; ' '
0000000000007da6         db  0x8d ; '.'
0000000000007da7         db  0x04 ; '.'
0000000000007da8         db  0x42 ; 'B'
0000000000007da9         db  0x0e ; '.'
0000000000007daa         db  0x28 ; '('
0000000000007dab         db  0x8c ; '.'
0000000000007dac         db  0x05 ; '.'
0000000000007dad         db  0x44 ; 'D'
0000000000007dae         db  0x0e ; '.'
0000000000007daf         db  0x30 ; '0'
0000000000007db0         db  0x86 ; '.'
0000000000007db1         db  0x06 ; '.'
0000000000007db2         db  0x41 ; 'A'
0000000000007db3         db  0x0e ; '.'
0000000000007db4         db  0x38 ; '8'
0000000000007db5         db  0x83 ; '.'
0000000000007db6         db  0x07 ; '.'
0000000000007db7         db  0x4a ; 'J'
0000000000007db8         db  0x0e ; '.'
0000000000007db9         db  0x60 ; '`'
0000000000007dba         db  0x02 ; '.'
0000000000007dbb         db  0xdd ; '.'
0000000000007dbc         db  0x0e ; '.'
0000000000007dbd         db  0x68 ; 'h'
0000000000007dbe         db  0x57 ; 'W'
0000000000007dbf         db  0x0e ; '.'
0000000000007dc0         db  0x70 ; 'p'
0000000000007dc1         db  0x42 ; 'B'
0000000000007dc2         db  0x0e ; '.'
0000000000007dc3         db  0x78 ; 'x'
0000000000007dc4         db  0x42 ; 'B'
0000000000007dc5         db  0x0e ; '.'
0000000000007dc6         db  0x80 ; '.'
0000000000007dc7         db  0x01 ; '.'
0000000000007dc8         db  0x42 ; 'B'
0000000000007dc9         db  0x0e ; '.'
0000000000007dca         db  0x88 ; '.'
0000000000007dcb         db  0x01 ; '.'
0000000000007dcc         db  0x42 ; 'B'
0000000000007dcd         db  0x0e ; '.'
0000000000007dce         db  0x90 ; '.'
0000000000007dcf         db  0x01 ; '.'
0000000000007dd0         db  0x53 ; 'S'
0000000000007dd1         db  0x0e ; '.'
0000000000007dd2         db  0x60 ; '`'
0000000000007dd3         db  0x44 ; 'D'
0000000000007dd4         db  0x0a ; '.'
0000000000007dd5         db  0x0e ; '.'
0000000000007dd6         db  0x38 ; '8'
0000000000007dd7         db  0x41 ; 'A'
0000000000007dd8         db  0x0e ; '.'
0000000000007dd9         db  0x30 ; '0'
0000000000007dda         db  0x41 ; 'A'
0000000000007ddb         db  0x0e ; '.'
0000000000007ddc         db  0x28 ; '('
0000000000007ddd         db  0x42 ; 'B'
0000000000007dde         db  0x0e ; '.'
0000000000007ddf         db  0x20 ; ' '
0000000000007de0         db  0x42 ; 'B'
0000000000007de1         db  0x0e ; '.'
0000000000007de2         db  0x18 ; '.'
0000000000007de3         db  0x42 ; 'B'
0000000000007de4         db  0x0e ; '.'
0000000000007de5         db  0x10 ; '.'
0000000000007de6         db  0x42 ; 'B'
0000000000007de7         db  0x0e ; '.'
0000000000007de8         db  0x08 ; '.'
0000000000007de9         db  0x44 ; 'D'
0000000000007dea         db  0x0b ; '.'
0000000000007deb         db  0x02 ; '.'
0000000000007dec         db  0x78 ; 'x'
0000000000007ded         db  0x0a ; '.'
0000000000007dee         db  0x0e ; '.'
0000000000007def         db  0x68 ; 'h'
0000000000007df0         db  0x48 ; 'H'
0000000000007df1         db  0x0b ; '.'
0000000000007df2         db  0x5a ; 'Z'
0000000000007df3         db  0x0a ; '.'
0000000000007df4         db  0x0e ; '.'
0000000000007df5         db  0x38 ; '8'
0000000000007df6         db  0x47 ; 'G'
0000000000007df7         db  0x0e ; '.'
0000000000007df8         db  0x30 ; '0'
0000000000007df9         db  0x41 ; 'A'
0000000000007dfa         db  0x0e ; '.'
0000000000007dfb         db  0x28 ; '('
0000000000007dfc         db  0x42 ; 'B'
0000000000007dfd         db  0x0e ; '.'
0000000000007dfe         db  0x20 ; ' '
0000000000007dff         db  0x42 ; 'B'
0000000000007e00         db  0x0e ; '.'
0000000000007e01         db  0x18 ; '.'
0000000000007e02         db  0x42 ; 'B'
0000000000007e03         db  0x0e ; '.'
0000000000007e04         db  0x10 ; '.'
0000000000007e05         db  0x42 ; 'B'
0000000000007e06         db  0x0e ; '.'
0000000000007e07         db  0x08 ; '.'
0000000000007e08         db  0x56 ; 'V'
0000000000007e09         db  0x0b ; '.'
0000000000007e0a         db  0x5e ; '^'
0000000000007e0b         db  0x0a ; '.'
0000000000007e0c         db  0x0e ; '.'
0000000000007e0d         db  0x38 ; '8'
0000000000007e0e         db  0x52 ; 'R'
0000000000007e0f         db  0x0e ; '.'
0000000000007e10         db  0x30 ; '0'
0000000000007e11         db  0x41 ; 'A'
0000000000007e12         db  0x0e ; '.'
0000000000007e13         db  0x28 ; '('
0000000000007e14         db  0x42 ; 'B'
0000000000007e15         db  0x0e ; '.'
0000000000007e16         db  0x20 ; ' '
0000000000007e17         db  0x42 ; 'B'
0000000000007e18         db  0x0e ; '.'
0000000000007e19         db  0x18 ; '.'
0000000000007e1a         db  0x42 ; 'B'
0000000000007e1b         db  0x0e ; '.'
0000000000007e1c         db  0x10 ; '.'
0000000000007e1d         db  0x42 ; 'B'
0000000000007e1e         db  0x0e ; '.'
0000000000007e1f         db  0x08 ; '.'
0000000000007e20         db  0x4f ; 'O'
0000000000007e21         db  0x0b ; '.'
0000000000007e22         db  0x62 ; 'b'
0000000000007e23         db  0x0a ; '.'
0000000000007e24         db  0x0e ; '.'
0000000000007e25         db  0x38 ; '8'
0000000000007e26         db  0x50 ; 'P'
0000000000007e27         db  0x0e ; '.'
0000000000007e28         db  0x30 ; '0'
0000000000007e29         db  0x41 ; 'A'
0000000000007e2a         db  0x0e ; '.'
0000000000007e2b         db  0x28 ; '('
0000000000007e2c         db  0x42 ; 'B'
0000000000007e2d         db  0x0e ; '.'
0000000000007e2e         db  0x20 ; ' '
0000000000007e2f         db  0x42 ; 'B'
0000000000007e30         db  0x0e ; '.'
0000000000007e31         db  0x18 ; '.'
0000000000007e32         db  0x42 ; 'B'
0000000000007e33         db  0x0e ; '.'
0000000000007e34         db  0x10 ; '.'
0000000000007e35         db  0x42 ; 'B'
0000000000007e36         db  0x0e ; '.'
0000000000007e37         db  0x08 ; '.'
0000000000007e38         db  0x55 ; 'U'
0000000000007e39         db  0x0b ; '.'
0000000000007e3a         db  0x66 ; 'f'
0000000000007e3b         db  0x0e ; '.'
0000000000007e3c         db  0x68 ; 'h'
0000000000007e3d         db  0x42 ; 'B'
0000000000007e3e         db  0x0e ; '.'
0000000000007e3f         db  0x70 ; 'p'
0000000000007e40         db  0x5c ; '\'
0000000000007e41         db  0x0e ; '.'
0000000000007e42         db  0x68 ; 'h'
0000000000007e43         db  0x41 ; 'A'
0000000000007e44         db  0x0e ; '.'
0000000000007e45         db  0x60 ; '`'
0000000000007e46         db  0x44 ; 'D'
0000000000007e47         db  0x0a ; '.'
0000000000007e48         db  0x0e ; '.'
0000000000007e49         db  0x38 ; '8'
0000000000007e4a         db  0x41 ; 'A'
0000000000007e4b         db  0x0e ; '.'
0000000000007e4c         db  0x30 ; '0'
0000000000007e4d         db  0x41 ; 'A'
0000000000007e4e         db  0x0e ; '.'
0000000000007e4f         db  0x28 ; '('
0000000000007e50         db  0x42 ; 'B'
0000000000007e51         db  0x0e ; '.'
0000000000007e52         db  0x20 ; ' '
0000000000007e53         db  0x42 ; 'B'
0000000000007e54         db  0x0e ; '.'
0000000000007e55         db  0x18 ; '.'
0000000000007e56         db  0x42 ; 'B'
0000000000007e57         db  0x0e ; '.'
0000000000007e58         db  0x10 ; '.'
0000000000007e59         db  0x42 ; 'B'
0000000000007e5a         db  0x0e ; '.'
0000000000007e5b         db  0x08 ; '.'
0000000000007e5c         db  0x45 ; 'E'
0000000000007e5d         db  0x0b ; '.'
0000000000007e5e         db  0x68 ; 'h'
0000000000007e5f         db  0x0a ; '.'
0000000000007e60         db  0x0e ; '.'
0000000000007e61         db  0x68 ; 'h'
0000000000007e62         db  0x48 ; 'H'
0000000000007e63         db  0x0b ; '.'
0000000000007e64         db  0x72 ; 'r'
0000000000007e65         db  0x0e ; '.'
0000000000007e66         db  0x68 ; 'h'
0000000000007e67         db  0x45 ; 'E'
0000000000007e68         db  0x0e ; '.'
0000000000007e69         db  0x70 ; 'p'
0000000000007e6a         db  0x42 ; 'B'
0000000000007e6b         db  0x0e ; '.'
0000000000007e6c         db  0x78 ; 'x'
0000000000007e6d         db  0x42 ; 'B'
0000000000007e6e         db  0x0e ; '.'
0000000000007e6f         db  0x80 ; '.'
0000000000007e70         db  0x01 ; '.'
0000000000007e71         db  0x5e ; '^'
0000000000007e72         db  0x0e ; '.'
0000000000007e73         db  0x60 ; '`'
0000000000007e74         db  0x44 ; 'D'
0000000000007e75         db  0x0a ; '.'
0000000000007e76         db  0x0e ; '.'
0000000000007e77         db  0x38 ; '8'
0000000000007e78         db  0x41 ; 'A'
0000000000007e79         db  0x0e ; '.'
0000000000007e7a         db  0x30 ; '0'
0000000000007e7b         db  0x41 ; 'A'
0000000000007e7c         db  0x0e ; '.'
0000000000007e7d         db  0x28 ; '('
0000000000007e7e         db  0x42 ; 'B'
0000000000007e7f         db  0x0e ; '.'
0000000000007e80         db  0x20 ; ' '
0000000000007e81         db  0x42 ; 'B'
0000000000007e82         db  0x0e ; '.'
0000000000007e83         db  0x18 ; '.'
0000000000007e84         db  0x42 ; 'B'
0000000000007e85         db  0x0e ; '.'
0000000000007e86         db  0x10 ; '.'
0000000000007e87         db  0x42 ; 'B'
0000000000007e88         db  0x0e ; '.'
0000000000007e89         db  0x08 ; '.'
0000000000007e8a         db  0x41 ; 'A'
0000000000007e8b         db  0x0b ; '.'
0000000000007e8c         db  0x79 ; 'y'
0000000000007e8d         db  0x0a ; '.'
0000000000007e8e         db  0x0e ; '.'
0000000000007e8f         db  0x68 ; 'h'
0000000000007e90         db  0x42 ; 'B'
0000000000007e91         db  0x0e ; '.'
0000000000007e92         db  0x70 ; 'p'
0000000000007e93         db  0x42 ; 'B'
0000000000007e94         db  0x0e ; '.'
0000000000007e95         db  0x78 ; 'x'
0000000000007e96         db  0x42 ; 'B'
0000000000007e97         db  0x0e ; '.'
0000000000007e98         db  0x80 ; '.'
0000000000007e99         db  0x01 ; '.'
0000000000007e9a         db  0x51 ; 'Q'
0000000000007e9b         db  0x0b ; '.'
0000000000007e9c         dd         0x00000010                                  ; Length of the record
0000000000007ea0         dd         0x00000868                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007ea4         db         0x9c, 0xd4, 2 dup (0xff)                    ; begin 0x5340
0000000000007ea8         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x5360)
0000000000007eac         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007ead         align      16
0000000000007eb0         dd         0x00000018                                  ; Length of the record
0000000000007eb4         dd         0x0000087c                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007eb8         db         0xa8, 0xd4, 2 dup (0xff)                    ; begin 0x5360
0000000000007ebc         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x53d8)
0000000000007ec0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007ec1         db  0x44 ; 'D'
0000000000007ec2         db  0x0e ; '.'
0000000000007ec3         db  0x70 ; 'p'
0000000000007ec4         db  0x02 ; '.'
0000000000007ec5         db  0x60 ; '`'
0000000000007ec6         db  0x0a ; '.'
0000000000007ec7         db  0x0e ; '.'
0000000000007ec8         db  0x08 ; '.'
0000000000007ec9         db  0x41 ; 'A'
0000000000007eca         db  0x0b ; '.'
0000000000007ecb         db  0x00 ; '.'
0000000000007ecc         dd         0x00000028                                  ; Length of the record
0000000000007ed0         dd         0x00000898                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007ed4         db         0x0c, 0xd5, 2 dup (0xff)                    ; begin 0x53e0
0000000000007ed8         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x54b5)
0000000000007edc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007edd         db  0x41 ; 'A'
0000000000007ede         db  0x0e ; '.'
0000000000007edf         db  0x10 ; '.'
0000000000007ee0         db  0x86 ; '.'
0000000000007ee1         db  0x02 ; '.'
0000000000007ee2         db  0x41 ; 'A'
0000000000007ee3         db  0x0e ; '.'
0000000000007ee4         db  0x18 ; '.'
0000000000007ee5         db  0x83 ; '.'
0000000000007ee6         db  0x03 ; '.'
0000000000007ee7         db  0x50 ; 'P'
0000000000007ee8         db  0x0e ; '.'
0000000000007ee9         db  0xd0 ; '.'
0000000000007eea         db  0x01 ; '.'
0000000000007eeb         db  0x02 ; '.'
0000000000007eec         db  0xab ; '.'
0000000000007eed         db  0x0a ; '.'
0000000000007eee         db  0x0e ; '.'
0000000000007eef         db  0x18 ; '.'
0000000000007ef0         db  0x41 ; 'A'
0000000000007ef1         db  0x0e ; '.'
0000000000007ef2         db  0x10 ; '.'
0000000000007ef3         db  0x41 ; 'A'
0000000000007ef4         db  0x0e ; '.'
0000000000007ef5         db  0x08 ; '.'
0000000000007ef6         db  0x41 ; 'A'
0000000000007ef7         db  0x0b ; '.'
0000000000007ef8         dd         0x0000001c                                  ; Length of the record
0000000000007efc         dd         0x000008c4                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007f00         db         0xc0, 0xd5, 2 dup (0xff)                    ; begin 0x54c0
0000000000007f04         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x5540)
0000000000007f08         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007f09         db  0x41 ; 'A'
0000000000007f0a         db  0x0e ; '.'
0000000000007f0b         db  0x10 ; '.'
0000000000007f0c         db  0x83 ; '.'
0000000000007f0d         db  0x02 ; '.'
0000000000007f0e         db  0x02 ; '.'
0000000000007f0f         db  0x7a ; 'z'
0000000000007f10         db  0x0e ; '.'
0000000000007f11         db  0x08 ; '.'
0000000000007f12         db  0x00 ; '.'
0000000000007f13         db  0x00 ; '.'
0000000000007f14         db  0x00 ; '.'
0000000000007f15         db  0x00 ; '.'
0000000000007f16         db  0x00 ; '.'
0000000000007f17         db  0x00 ; '.'
0000000000007f18         dd         0x00000018                                  ; Length of the record
0000000000007f1c         dd         0x000008e4                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007f20         db         0x20, 0xd6, 2 dup (0xff)                    ; begin 0x5540
0000000000007f24         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x555a)
0000000000007f28         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007f29         db  0x41 ; 'A'
0000000000007f2a         db  0x0e ; '.'
0000000000007f2b         db  0x10 ; '.'
0000000000007f2c         db  0x83 ; '.'
0000000000007f2d         db  0x02 ; '.'
0000000000007f2e         db  0x53 ; 'S'
0000000000007f2f         db  0x0a ; '.'
0000000000007f30         db  0x0e ; '.'
0000000000007f31         db  0x08 ; '.'
0000000000007f32         db  0x41 ; 'A'
0000000000007f33         db  0x0b ; '.'
0000000000007f34         dd         0x00000010                                  ; Length of the record
0000000000007f38         dd         0x00000900                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007f3c         db         0x24, 0xd6, 2 dup (0xff)                    ; begin 0x5560
0000000000007f40         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x5584)
0000000000007f44         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007f45         db  0x5f ; '_'
0000000000007f46         db  0x0e ; '.'
0000000000007f47         db  0x10 ; '.'
0000000000007f48         dd         0x00000010                                  ; Length of the record
0000000000007f4c         dd         0x00000914                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007f50         db         0x40, 0xd6, 2 dup (0xff)                    ; begin 0x5590
0000000000007f54         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x5592)
0000000000007f58         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007f59         align      4
0000000000007f5c         dd         0x00000020                                  ; Length of the record
0000000000007f60         dd         0x00000928                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007f64         db         0x3c, 0xd6, 2 dup (0xff)                    ; begin 0x55a0
0000000000007f68         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x55d6)
0000000000007f6c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007f6d         db  0x44 ; 'D'
0000000000007f6e         db  0x0e ; '.'
0000000000007f6f         db  0x10 ; '.'
0000000000007f70         db  0x83 ; '.'
0000000000007f71         db  0x02 ; '.'
0000000000007f72         db  0x5d ; ']'
0000000000007f73         db  0x0a ; '.'
0000000000007f74         db  0x0e ; '.'
0000000000007f75         db  0x08 ; '.'
0000000000007f76         db  0x47 ; 'G'
0000000000007f77         db  0x0b ; '.'
0000000000007f78         db  0x48 ; 'H'
0000000000007f79         db  0x0a ; '.'
0000000000007f7a         db  0x0e ; '.'
0000000000007f7b         db  0x08 ; '.'
0000000000007f7c         db  0x41 ; 'A'
0000000000007f7d         db  0x0b ; '.'
0000000000007f7e         db  0x00 ; '.'
0000000000007f7f         db  0x00 ; '.'
0000000000007f80         dd         0x00000010                                  ; Length of the record
0000000000007f84         dd         0x0000094c                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007f88         db         0x58, 0xd6, 2 dup (0xff)                    ; begin 0x55e0
0000000000007f8c         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x5604)
0000000000007f90         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007f91         db  0x5f ; '_'
0000000000007f92         db  0x0e ; '.'
0000000000007f93         db  0x10 ; '.'
0000000000007f94         dd         0x00000014                                  ; Length of the record
0000000000007f98         dd         0x00000960                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007f9c         db         0x74, 0xd6, 2 dup (0xff)                    ; begin 0x5610
0000000000007fa0         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x5692)
0000000000007fa4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007fa5         db  0x02 ; '.'
0000000000007fa6         db  0x5f ; '_'
0000000000007fa7         db  0x0e ; '.'
0000000000007fa8         db  0x10 ; '.'
0000000000007fa9         db  0x49 ; 'I'
0000000000007faa         db  0x0e ; '.'
0000000000007fab         db  0x08 ; '.'
0000000000007fac         dd         0x00000014                                  ; Length of the record
0000000000007fb0         dd         0x00000978                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007fb4         db         0xec, 0xd6, 2 dup (0xff)                    ; begin 0x56a0
0000000000007fb8         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x56ea)
0000000000007fbc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007fbd         db  0x02 ; '.'
0000000000007fbe         db  0x45 ; 'E'
0000000000007fbf         db  0x0e ; '.'
0000000000007fc0         db  0x10 ; '.'
0000000000007fc1         db  0x00 ; '.'
0000000000007fc2         db  0x00 ; '.'
0000000000007fc3         db  0x00 ; '.'
0000000000007fc4         dd         0x00000018                                  ; Length of the record
0000000000007fc8         dd         0x00000990                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007fcc         db         0x24, 0xd7, 2 dup (0xff)                    ; begin 0x56f0
0000000000007fd0         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x5707)
0000000000007fd4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007fd5         db  0x41 ; 'A'
0000000000007fd6         db  0x0e ; '.'
0000000000007fd7         db  0x10 ; '.'
0000000000007fd8         db  0x83 ; '.'
0000000000007fd9         db  0x02 ; '.'
0000000000007fda         db  0x51 ; 'Q'
0000000000007fdb         db  0x0e ; '.'
0000000000007fdc         db  0x08 ; '.'
0000000000007fdd         db  0x00 ; '.'
0000000000007fde         db  0x00 ; '.'
0000000000007fdf         db  0x00 ; '.'
0000000000007fe0         dd         0x00000018                                  ; Length of the record
0000000000007fe4         dd         0x000009ac                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000007fe8         db         0x28, 0xd7, 2 dup (0xff)                    ; begin 0x5710
0000000000007fec         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x573e)
0000000000007ff0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007ff1         db  0x47 ; 'G'
0000000000007ff2         db  0x0e ; '.'
0000000000007ff3         db  0x10 ; '.'
0000000000007ff4         db  0x61 ; 'a'
0000000000007ff5         db  0x0a ; '.'
0000000000007ff6         db  0x0e ; '.'
0000000000007ff7         db  0x08 ; '.'
0000000000007ff8         db  0x41 ; 'A'
0000000000007ff9         db  0x0b ; '.'
0000000000007ffa         db  0x00 ; '.'
0000000000007ffb         db  0x00 ; '.'
0000000000007ffc         dd         0x00000024                                  ; Length of the record
0000000000008000         dd         0x000009c8                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000008004         db         0x3c, 0xd7, 2 dup (0xff)                    ; begin 0x5740
0000000000008008         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x5768)
000000000000800c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000800d         db  0x41 ; 'A'
000000000000800e         db  0x0e ; '.'
000000000000800f         db  0x10 ; '.'
0000000000008010         db  0x86 ; '.'
0000000000008011         db  0x02 ; '.'
0000000000008012         db  0x41 ; 'A'
0000000000008013         db  0x0e ; '.'
0000000000008014         db  0x18 ; '.'
0000000000008015         db  0x83 ; '.'
0000000000008016         db  0x03 ; '.'
0000000000008017         db  0x4d ; 'M'
0000000000008018         db  0x0e ; '.'
0000000000008019         db  0x20 ; ' '
000000000000801a         db  0x49 ; 'I'
000000000000801b         db  0x0e ; '.'
000000000000801c         db  0x18 ; '.'
000000000000801d         db  0x47 ; 'G'
000000000000801e         db  0x0e ; '.'
000000000000801f         db  0x10 ; '.'
0000000000008020         db  0x41 ; 'A'
0000000000008021         db  0x0e ; '.'
0000000000008022         db  0x08 ; '.'
0000000000008023         db  0x00 ; '.'
0000000000008024         dd         0x00000018                                  ; Length of the record
0000000000008028         dd         0x000009f0                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
000000000000802c         db         0x44, 0xd7, 2 dup (0xff)                    ; begin 0x5770
0000000000008030         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5783)
0000000000008034         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008035         db  0x41 ; 'A'
0000000000008036         db  0x0e ; '.'
0000000000008037         db  0x10 ; '.'
0000000000008038         db  0x83 ; '.'
0000000000008039         db  0x02 ; '.'
000000000000803a         db  0x50 ; 'P'
000000000000803b         db  0x0e ; '.'
000000000000803c         db  0x08 ; '.'
000000000000803d         db  0x00 ; '.'
000000000000803e         db  0x00 ; '.'
000000000000803f         db  0x00 ; '.'
0000000000008040         dd         0x00000014                                  ; Length of the record
0000000000008044         dd         0x00000a0c                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000008048         db         0x48, 0xd7, 2 dup (0xff)                    ; begin 0x5790
000000000000804c         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x57c5)
0000000000008050         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008051         db  0x4b ; 'K'
0000000000008052         db  0x0e ; '.'
0000000000008053         db  0x10 ; '.'
0000000000008054         db  0x00 ; '.'
0000000000008055         db  0x00 ; '.'
0000000000008056         db  0x00 ; '.'
0000000000008057         db  0x00 ; '.'
0000000000008058         dd         0x0000001c                                  ; Length of the record
000000000000805c         dd         0x00000a24                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000008060         db         0x70, 0xd7, 2 dup (0xff)                    ; begin 0x57d0
0000000000008064         db         0x27, 3 dup (0x00)                          ; length 0x27 (end at 0x57f7)
0000000000008068         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008069         db  0x41 ; 'A'
000000000000806a         db  0x0e ; '.'
000000000000806b         db  0x10 ; '.'
000000000000806c         db  0x83 ; '.'
000000000000806d         db  0x02 ; '.'
000000000000806e         db  0x4f ; 'O'
000000000000806f         db  0x0a ; '.'
0000000000008070         db  0x0e ; '.'
0000000000008071         db  0x08 ; '.'
0000000000008072         db  0x48 ; 'H'
0000000000008073         db  0x0b ; '.'
0000000000008074         db  0x00 ; '.'
0000000000008075         db  0x00 ; '.'
0000000000008076         db  0x00 ; '.'
0000000000008077         db  0x00 ; '.'
0000000000008078         dd         0x0000004c                                  ; Length of the record
000000000000807c         dd         0x00000a44                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000008080         db         0x80, 0xd7, 2 dup (0xff)                    ; begin 0x5800
0000000000008084         db         0x1c, 0x04, 2 dup (0x00)                    ; length 0x41c (end at 0x5c1c)
0000000000008088         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008089         db  0x42 ; 'B'
000000000000808a         db  0x0e ; '.'
000000000000808b         db  0x10 ; '.'
000000000000808c         db  0x8f ; '.'
000000000000808d         db  0x02 ; '.'
000000000000808e         db  0x42 ; 'B'
000000000000808f         db  0x0e ; '.'
0000000000008090         db  0x18 ; '.'
0000000000008091         db  0x8e ; '.'
0000000000008092         db  0x03 ; '.'
0000000000008093         db  0x42 ; 'B'
0000000000008094         db  0x0e ; '.'
0000000000008095         db  0x20 ; ' '
0000000000008096         db  0x8d ; '.'
0000000000008097         db  0x04 ; '.'
0000000000008098         db  0x42 ; 'B'
0000000000008099         db  0x0e ; '.'
000000000000809a         db  0x28 ; '('
000000000000809b         db  0x8c ; '.'
000000000000809c         db  0x05 ; '.'
000000000000809d         db  0x41 ; 'A'
000000000000809e         db  0x0e ; '.'
000000000000809f         db  0x30 ; '0'
00000000000080a0         db  0x86 ; '.'
00000000000080a1         db  0x06 ; '.'
00000000000080a2         db  0x41 ; 'A'
00000000000080a3         db  0x0e ; '.'
00000000000080a4         db  0x38 ; '8'
00000000000080a5         db  0x83 ; '.'
00000000000080a6         db  0x07 ; '.'
00000000000080a7         db  0x44 ; 'D'
00000000000080a8         db  0x0e ; '.'
00000000000080a9         db  0x60 ; '`'
00000000000080aa         db  0x02 ; '.'
00000000000080ab         db  0xe9 ; '.'
00000000000080ac         db  0x0a ; '.'
00000000000080ad         db  0x0e ; '.'
00000000000080ae         db  0x38 ; '8'
00000000000080af         db  0x41 ; 'A'
00000000000080b0         db  0x0e ; '.'
00000000000080b1         db  0x30 ; '0'
00000000000080b2         db  0x41 ; 'A'
00000000000080b3         db  0x0e ; '.'
00000000000080b4         db  0x28 ; '('
00000000000080b5         db  0x42 ; 'B'
00000000000080b6         db  0x0e ; '.'
00000000000080b7         db  0x20 ; ' '
00000000000080b8         db  0x42 ; 'B'
00000000000080b9         db  0x0e ; '.'
00000000000080ba         db  0x18 ; '.'
00000000000080bb         db  0x42 ; 'B'
00000000000080bc         db  0x0e ; '.'
00000000000080bd         db  0x10 ; '.'
00000000000080be         db  0x42 ; 'B'
00000000000080bf         db  0x0e ; '.'
00000000000080c0         db  0x08 ; '.'
00000000000080c1         db  0x47 ; 'G'
00000000000080c2         db  0x0b ; '.'
00000000000080c3         db  0x00 ; '.'
00000000000080c4         db  0x00 ; '.'
00000000000080c5         db  0x00 ; '.'
00000000000080c6         db  0x00 ; '.'
00000000000080c7         db  0x00 ; '.'
00000000000080c8         dd         0x0000003c                                  ; Length of the record
00000000000080cc         dd         0x00000a94                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
00000000000080d0         db         0x50, 0xdb, 2 dup (0xff)                    ; begin 0x5c20
00000000000080d4         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x5ca3)
00000000000080d8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000080d9         db  0x42 ; 'B'
00000000000080da         db  0x0e ; '.'
00000000000080db         db  0x10 ; '.'
00000000000080dc         db  0x8d ; '.'
00000000000080dd         db  0x02 ; '.'
00000000000080de         db  0x42 ; 'B'
00000000000080df         db  0x0e ; '.'
00000000000080e0         db  0x18 ; '.'
00000000000080e1         db  0x8c ; '.'
00000000000080e2         db  0x03 ; '.'
00000000000080e3         db  0x44 ; 'D'
00000000000080e4         db  0x0e ; '.'
00000000000080e5         db  0x20 ; ' '
00000000000080e6         db  0x86 ; '.'
00000000000080e7         db  0x04 ; '.'
00000000000080e8         db  0x41 ; 'A'
00000000000080e9         db  0x0e ; '.'
00000000000080ea         db  0x28 ; '('
00000000000080eb         db  0x83 ; '.'
00000000000080ec         db  0x05 ; '.'
00000000000080ed         db  0x4a ; 'J'
00000000000080ee         db  0x0e ; '.'
00000000000080ef         db  0x40 ; '@'
00000000000080f0         db  0x02 ; '.'
00000000000080f1         db  0x64 ; 'd'
00000000000080f2         db  0x0a ; '.'
00000000000080f3         db  0x0e ; '.'
00000000000080f4         db  0x28 ; '('
00000000000080f5         db  0x41 ; 'A'
00000000000080f6         db  0x0e ; '.'
00000000000080f7         db  0x20 ; ' '
00000000000080f8         db  0x41 ; 'A'
00000000000080f9         db  0x0e ; '.'
00000000000080fa         db  0x18 ; '.'
00000000000080fb         db  0x42 ; 'B'
00000000000080fc         db  0x0e ; '.'
00000000000080fd         db  0x10 ; '.'
00000000000080fe         db  0x42 ; 'B'
00000000000080ff         db  0x0e ; '.'
0000000000008100         db  0x08 ; '.'
0000000000008101         db  0x41 ; 'A'
0000000000008102         db  0x0b ; '.'
0000000000008103         db  0x00 ; '.'
0000000000008104         db  0x00 ; '.'
0000000000008105         db  0x00 ; '.'
0000000000008106         db  0x00 ; '.'
0000000000008107         db  0x00 ; '.'
0000000000008108         dd         0x0000004c                                  ; Length of the record
000000000000810c         dd         0x00000ad4                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000008110         db         0xa0, 0xdb, 2 dup (0xff)                    ; begin 0x5cb0
0000000000008114         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x5d2d)
0000000000008118         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008119         db  0x42 ; 'B'
000000000000811a         db  0x0e ; '.'
000000000000811b         db  0x10 ; '.'
000000000000811c         db  0x8c ; '.'
000000000000811d         db  0x02 ; '.'
000000000000811e         db  0x41 ; 'A'
000000000000811f         db  0x0e ; '.'
0000000000008120         db  0x18 ; '.'
0000000000008121         db  0x86 ; '.'
0000000000008122         db  0x03 ; '.'
0000000000008123         db  0x44 ; 'D'
0000000000008124         db  0x0e ; '.'
0000000000008125         db  0x20 ; ' '
0000000000008126         db  0x83 ; '.'
0000000000008127         db  0x04 ; '.'
0000000000008128         db  0x69 ; 'i'
0000000000008129         db  0x0a ; '.'
000000000000812a         db  0x0e ; '.'
000000000000812b         db  0x18 ; '.'
000000000000812c         db  0x41 ; 'A'
000000000000812d         db  0x0e ; '.'
000000000000812e         db  0x10 ; '.'
000000000000812f         db  0x42 ; 'B'
0000000000008130         db  0x0e ; '.'
0000000000008131         db  0x08 ; '.'
0000000000008132         db  0x45 ; 'E'
0000000000008133         db  0x0b ; '.'
0000000000008134         db  0x55 ; 'U'
0000000000008135         db  0x0a ; '.'
0000000000008136         db  0x0e ; '.'
0000000000008137         db  0x18 ; '.'
0000000000008138         db  0x41 ; 'A'
0000000000008139         db  0x0e ; '.'
000000000000813a         db  0x10 ; '.'
000000000000813b         db  0x42 ; 'B'
000000000000813c         db  0x0e ; '.'
000000000000813d         db  0x08 ; '.'
000000000000813e         db  0x48 ; 'H'
000000000000813f         db  0x0b ; '.'
0000000000008140         db  0x41 ; 'A'
0000000000008141         db  0x0a ; '.'
0000000000008142         db  0x0e ; '.'
0000000000008143         db  0x18 ; '.'
0000000000008144         db  0x46 ; 'F'
0000000000008145         db  0x0e ; '.'
0000000000008146         db  0x10 ; '.'
0000000000008147         db  0x42 ; 'B'
0000000000008148         db  0x0e ; '.'
0000000000008149         db  0x08 ; '.'
000000000000814a         db  0x47 ; 'G'
000000000000814b         db  0x0b ; '.'
000000000000814c         db  0x49 ; 'I'
000000000000814d         db  0x0e ; '.'
000000000000814e         db  0x18 ; '.'
000000000000814f         db  0x41 ; 'A'
0000000000008150         db  0x0e ; '.'
0000000000008151         db  0x10 ; '.'
0000000000008152         db  0x42 ; 'B'
0000000000008153         db  0x0e ; '.'
0000000000008154         db  0x08 ; '.'
0000000000008155         db  0x00 ; '.'
0000000000008156         db  0x00 ; '.'
0000000000008157         db  0x00 ; '.'
0000000000008158         dd         0x0000001c                                  ; Length of the record
000000000000815c         dd         0x00000b24                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000008160         db         0xd0, 0xdb, 2 dup (0xff)                    ; begin 0x5d30
0000000000008164         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x5d90)
0000000000008168         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008169         db  0x44 ; 'D'
000000000000816a         db  0x0e ; '.'
000000000000816b         db  0x10 ; '.'
000000000000816c         db  0x75 ; 'u'
000000000000816d         db  0x0a ; '.'
000000000000816e         db  0x0e ; '.'
000000000000816f         db  0x08 ; '.'
0000000000008170         db  0x47 ; 'G'
0000000000008171         db  0x0b ; '.'
0000000000008172         db  0x5f ; '_'
0000000000008173         db  0x0e ; '.'
0000000000008174         db  0x08 ; '.'
0000000000008175         db  0x00 ; '.'
0000000000008176         db  0x00 ; '.'
0000000000008177         db  0x00 ; '.'
0000000000008178         dd         0x0000001c                                  ; Length of the record
000000000000817c         dd         0x00000b44                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000008180         db         0x10, 0xdc, 2 dup (0xff)                    ; begin 0x5d90
0000000000008184         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x5dcc)
0000000000008188         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008189         db  0x44 ; 'D'
000000000000818a         db  0x0e ; '.'
000000000000818b         db  0x10 ; '.'
000000000000818c         db  0x61 ; 'a'
000000000000818d         db  0x0a ; '.'
000000000000818e         db  0x0e ; '.'
000000000000818f         db  0x08 ; '.'
0000000000008190         db  0x4b ; 'K'
0000000000008191         db  0x0b ; '.'
0000000000008192         db  0x4b ; 'K'
0000000000008193         db  0x0e ; '.'
0000000000008194         db  0x08 ; '.'
0000000000008195         db  0x00 ; '.'
0000000000008196         db  0x00 ; '.'
0000000000008197         db  0x00 ; '.'
0000000000008198         dd         0x00000014                                  ; Length of the record
000000000000819c         dd         0x00000b64                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
00000000000081a0         db         0x30, 0xdc, 2 dup (0xff)                    ; begin 0x5dd0
00000000000081a4         db         0x45, 3 dup (0x00)                          ; length 0x45 (end at 0x5e15)
00000000000081a8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000081a9         db  0x6c ; 'l'
00000000000081aa         db  0x0e ; '.'
00000000000081ab         db  0x10 ; '.'
00000000000081ac         db  0x51 ; 'Q'
00000000000081ad         db  0x0e ; '.'
00000000000081ae         db  0x08 ; '.'
00000000000081af         db  0x00 ; '.'
00000000000081b0         dd         0x0000004c                                  ; Length of the record
00000000000081b4         dd         0x00000b7c                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
00000000000081b8         db         0x68, 0xdc, 2 dup (0xff)                    ; begin 0x5e20
00000000000081bc         db         0x3c, 0x02, 2 dup (0x00)                    ; length 0x23c (end at 0x605c)
00000000000081c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000081c1         db  0x42 ; 'B'
00000000000081c2         db  0x0e ; '.'
00000000000081c3         db  0x10 ; '.'
00000000000081c4         db  0x8f ; '.'
00000000000081c5         db  0x02 ; '.'
00000000000081c6         db  0x42 ; 'B'
00000000000081c7         db  0x0e ; '.'
00000000000081c8         db  0x18 ; '.'
00000000000081c9         db  0x8e ; '.'
00000000000081ca         db  0x03 ; '.'
00000000000081cb         db  0x45 ; 'E'
00000000000081cc         db  0x0e ; '.'
00000000000081cd         db  0x20 ; ' '
00000000000081ce         db  0x8d ; '.'
00000000000081cf         db  0x04 ; '.'
00000000000081d0         db  0x42 ; 'B'
00000000000081d1         db  0x0e ; '.'
00000000000081d2         db  0x28 ; '('
00000000000081d3         db  0x8c ; '.'
00000000000081d4         db  0x05 ; '.'
00000000000081d5         db  0x44 ; 'D'
00000000000081d6         db  0x0e ; '.'
00000000000081d7         db  0x30 ; '0'
00000000000081d8         db  0x86 ; '.'
00000000000081d9         db  0x06 ; '.'
00000000000081da         db  0x41 ; 'A'
00000000000081db         db  0x0e ; '.'
00000000000081dc         db  0x38 ; '8'
00000000000081dd         db  0x83 ; '.'
00000000000081de         db  0x07 ; '.'
00000000000081df         db  0x44 ; 'D'
00000000000081e0         db  0x0e ; '.'
00000000000081e1         db  0x50 ; 'P'
00000000000081e2         db  0x02 ; '.'
00000000000081e3         db  0xa1 ; '.'
00000000000081e4         db  0x0a ; '.'
00000000000081e5         db  0x0e ; '.'
00000000000081e6         db  0x38 ; '8'
00000000000081e7         db  0x41 ; 'A'
00000000000081e8         db  0x0e ; '.'
00000000000081e9         db  0x30 ; '0'
00000000000081ea         db  0x41 ; 'A'
00000000000081eb         db  0x0e ; '.'
00000000000081ec         db  0x28 ; '('
00000000000081ed         db  0x42 ; 'B'
00000000000081ee         db  0x0e ; '.'
00000000000081ef         db  0x20 ; ' '
00000000000081f0         db  0x42 ; 'B'
00000000000081f1         db  0x0e ; '.'
00000000000081f2         db  0x18 ; '.'
00000000000081f3         db  0x42 ; 'B'
00000000000081f4         db  0x0e ; '.'
00000000000081f5         db  0x10 ; '.'
00000000000081f6         db  0x42 ; 'B'
00000000000081f7         db  0x0e ; '.'
00000000000081f8         db  0x08 ; '.'
00000000000081f9         db  0x41 ; 'A'
00000000000081fa         db  0x0b ; '.'
00000000000081fb         db  0x00 ; '.'
00000000000081fc         db  0x00 ; '.'
00000000000081fd         db  0x00 ; '.'
00000000000081fe         db  0x00 ; '.'
00000000000081ff         db  0x00 ; '.'
0000000000008200         dd         0x00000034                                  ; Length of the record
0000000000008204         dd         0x00000bcc                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000008208         db         0x58, 0xde, 2 dup (0xff)                    ; begin 0x6060
000000000000820c         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x60db)
0000000000008210         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008211         db  0x42 ; 'B'
0000000000008212         db  0x0e ; '.'
0000000000008213         db  0x10 ; '.'
0000000000008214         db  0x8c ; '.'
0000000000008215         db  0x02 ; '.'
0000000000008216         db  0x41 ; 'A'
0000000000008217         db  0x0e ; '.'
0000000000008218         db  0x18 ; '.'
0000000000008219         db  0x86 ; '.'
000000000000821a         db  0x03 ; '.'
000000000000821b         db  0x41 ; 'A'
000000000000821c         db  0x0e ; '.'
000000000000821d         db  0x20 ; ' '
000000000000821e         db  0x83 ; '.'
000000000000821f         db  0x04 ; '.'
0000000000008220         db  0x7d ; '}'
0000000000008221         db  0x0a ; '.'
0000000000008222         db  0x0e ; '.'
0000000000008223         db  0x18 ; '.'
0000000000008224         db  0x41 ; 'A'
0000000000008225         db  0x0e ; '.'
0000000000008226         db  0x10 ; '.'
0000000000008227         db  0x42 ; 'B'
0000000000008228         db  0x0e ; '.'
0000000000008229         db  0x08 ; '.'
000000000000822a         db  0x44 ; 'D'
000000000000822b         db  0x0b ; '.'
000000000000822c         db  0x60 ; '`'
000000000000822d         db  0x0a ; '.'
000000000000822e         db  0x0e ; '.'
000000000000822f         db  0x18 ; '.'
0000000000008230         db  0x41 ; 'A'
0000000000008231         db  0x0e ; '.'
0000000000008232         db  0x10 ; '.'
0000000000008233         db  0x42 ; 'B'
0000000000008234         db  0x0e ; '.'
0000000000008235         db  0x08 ; '.'
0000000000008236         db  0x45 ; 'E'
0000000000008237         db  0x0b ; '.'
0000000000008238         dd         0x0000001c                                  ; Length of the record
000000000000823c         dd         0x00000c04                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000008240         db         0xa0, 0xde, 2 dup (0xff)                    ; begin 0x60e0
0000000000008244         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x6120)
0000000000008248         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008249         db  0x44 ; 'D'
000000000000824a         db  0x0e ; '.'
000000000000824b         db  0x10 ; '.'
000000000000824c         db  0x83 ; '.'
000000000000824d         db  0x02 ; '.'
000000000000824e         db  0x5a ; 'Z'
000000000000824f         db  0x0a ; '.'
0000000000008250         db  0x0e ; '.'
0000000000008251         db  0x08 ; '.'
0000000000008252         db  0x4a ; 'J'
0000000000008253         db  0x0b ; '.'
0000000000008254         db  0x53 ; 'S'
0000000000008255         db  0x0e ; '.'
0000000000008256         db  0x08 ; '.'
0000000000008257         db  0x00 ; '.'
0000000000008258         dd         0x0000002c                                  ; Length of the record
000000000000825c         dd         0x00000c24                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000008260         db         0xc0, 0xde, 2 dup (0xff)                    ; begin 0x6120
0000000000008264         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x6177)
0000000000008268         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008269         db  0x63 ; 'c'
000000000000826a         db  0x0e ; '.'
000000000000826b         db  0x10 ; '.'
000000000000826c         db  0x8c ; '.'
000000000000826d         db  0x02 ; '.'
000000000000826e         db  0x41 ; 'A'
000000000000826f         db  0x0e ; '.'
0000000000008270         db  0x18 ; '.'
0000000000008271         db  0x86 ; '.'
0000000000008272         db  0x03 ; '.'
0000000000008273         db  0x44 ; 'D'
0000000000008274         db  0x0e ; '.'
0000000000008275         db  0x20 ; ' '
0000000000008276         db  0x83 ; '.'
0000000000008277         db  0x04 ; '.'
0000000000008278         db  0x6b ; 'k'
0000000000008279         db  0x0e ; '.'
000000000000827a         db  0x18 ; '.'
000000000000827b         db  0x41 ; 'A'
000000000000827c         db  0x0e ; '.'
000000000000827d         db  0x10 ; '.'
000000000000827e         db  0x42 ; 'B'
000000000000827f         db  0x0e ; '.'
0000000000008280         db  0x08 ; '.'
0000000000008281         db  0x00 ; '.'
0000000000008282         db  0x00 ; '.'
0000000000008283         db  0x00 ; '.'
0000000000008284         db  0x00 ; '.'
0000000000008285         db  0x00 ; '.'
0000000000008286         db  0x00 ; '.'
0000000000008287         db  0x00 ; '.'
0000000000008288         dd         0x00000044                                  ; Length of the record
000000000000828c         dd         0x00000c54                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
0000000000008290         db         0xf0, 0xde, 2 dup (0xff)                    ; begin 0x6180
0000000000008294         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x61e5)
0000000000008298         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008299         db  0x42 ; 'B'
000000000000829a         db  0x0e ; '.'
000000000000829b         db  0x10 ; '.'
000000000000829c         db  0x8f ; '.'
000000000000829d         db  0x02 ; '.'
000000000000829e         db  0x42 ; 'B'
000000000000829f         db  0x0e ; '.'
00000000000082a0         db  0x18 ; '.'
00000000000082a1         db  0x8e ; '.'
00000000000082a2         db  0x03 ; '.'
00000000000082a3         db  0x45 ; 'E'
00000000000082a4         db  0x0e ; '.'
00000000000082a5         db  0x20 ; ' '
00000000000082a6         db  0x8d ; '.'
00000000000082a7         db  0x04 ; '.'
00000000000082a8         db  0x42 ; 'B'
00000000000082a9         db  0x0e ; '.'
00000000000082aa         db  0x28 ; '('
00000000000082ab         db  0x8c ; '.'
00000000000082ac         db  0x05 ; '.'
00000000000082ad         db  0x48 ; 'H'
00000000000082ae         db  0x0e ; '.'
00000000000082af         db  0x30 ; '0'
00000000000082b0         db  0x86 ; '.'
00000000000082b1         db  0x06 ; '.'
00000000000082b2         db  0x48 ; 'H'
00000000000082b3         db  0x0e ; '.'
00000000000082b4         db  0x38 ; '8'
00000000000082b5         db  0x83 ; '.'
00000000000082b6         db  0x07 ; '.'
00000000000082b7         db  0x4d ; 'M'
00000000000082b8         db  0x0e ; '.'
00000000000082b9         db  0x40 ; '@'
00000000000082ba         db  0x72 ; 'r'
00000000000082bb         db  0x0e ; '.'
00000000000082bc         db  0x38 ; '8'
00000000000082bd         db  0x41 ; 'A'
00000000000082be         db  0x0e ; '.'
00000000000082bf         db  0x30 ; '0'
00000000000082c0         db  0x41 ; 'A'
00000000000082c1         db  0x0e ; '.'
00000000000082c2         db  0x28 ; '('
00000000000082c3         db  0x42 ; 'B'
00000000000082c4         db  0x0e ; '.'
00000000000082c5         db  0x20 ; ' '
00000000000082c6         db  0x42 ; 'B'
00000000000082c7         db  0x0e ; '.'
00000000000082c8         db  0x18 ; '.'
00000000000082c9         db  0x42 ; 'B'
00000000000082ca         db  0x0e ; '.'
00000000000082cb         db  0x10 ; '.'
00000000000082cc         db  0x42 ; 'B'
00000000000082cd         db  0x0e ; '.'
00000000000082ce         db  0x08 ; '.'
00000000000082cf         db  0x00 ; '.'
00000000000082d0         dd         0x00000014                                  ; Length of the record
00000000000082d4         dd         0x00000c9c                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
00000000000082d8         db         0x18, 0xdf, 2 dup (0xff)                    ; begin 0x61f0
00000000000082dc         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x61f2)
00000000000082e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000082e1         align      8
00000000000082e8         dd         0x00000010                                  ; Length of the record
00000000000082ec         dd         0x00000cb4                                  ; FDE: parent CIE at 0x7638 (FDE encoding = 0x1B)
00000000000082f0         db         0x10, 0xdf, 2 dup (0xff)                    ; begin 0x6200
00000000000082f4         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x620e)
00000000000082f8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000082f9         align      256


        ; Segment Segment 3
        ; Range: [0x208a50; 0x209298[ (2120 bytes)
        ; File offset : [35408; 37024[ (1616 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x208a50; 0x208a58[ (8 bytes)
        ; File offset : [35408; 35416[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
0000000000208a50         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x208a58; 0x208a60[ (8 bytes)
        ; File offset : [35416; 35424[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
0000000000208a58         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x208a60; 0x208bf8[ (408 bytes)
        ; File offset : [35424; 35832[ (408 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     longopts:
0000000000208a60         db  0x1f ; '.'                                         ; DATA XREF=main+16
0000000000208a61         db  0x69 ; 'i'
0000000000208a62         db  0x00 ; '.'
0000000000208a63         db  0x00 ; '.'
0000000000208a64         db  0x00 ; '.'
0000000000208a65         db  0x00 ; '.'
0000000000208a66         db  0x00 ; '.'
0000000000208a67         db  0x00 ; '.'
0000000000208a68         db  0x00 ; '.'
0000000000208a69         db  0x00 ; '.'
0000000000208a6a         db  0x00 ; '.'
0000000000208a6b         db  0x00 ; '.'
0000000000208a6c         db  0x00 ; '.'
0000000000208a6d         db  0x00 ; '.'
0000000000208a6e         db  0x00 ; '.'
0000000000208a6f         db  0x00 ; '.'
0000000000208a70         db  0x00 ; '.'
0000000000208a71         db  0x00 ; '.'
0000000000208a72         db  0x00 ; '.'
0000000000208a73         db  0x00 ; '.'
0000000000208a74         db  0x00 ; '.'
0000000000208a75         db  0x00 ; '.'
0000000000208a76         db  0x00 ; '.'
0000000000208a77         db  0x00 ; '.'
0000000000208a78         db  0x5a ; 'Z'
0000000000208a79         db  0x00 ; '.'
0000000000208a7a         db  0x00 ; '.'
0000000000208a7b         db  0x00 ; '.'
0000000000208a7c         db  0x00 ; '.'
0000000000208a7d         db  0x00 ; '.'
0000000000208a7e         db  0x00 ; '.'
0000000000208a7f         db  0x00 ; '.'
0000000000208a80         db  0xca ; '.'
0000000000208a81         db  0x6e ; 'n'
0000000000208a82         db  0x00 ; '.'
0000000000208a83         db  0x00 ; '.'
0000000000208a84         db  0x00 ; '.'
0000000000208a85         db  0x00 ; '.'
0000000000208a86         db  0x00 ; '.'
0000000000208a87         db  0x00 ; '.'
0000000000208a88         db  0x00 ; '.'
0000000000208a89         db  0x00 ; '.'
0000000000208a8a         db  0x00 ; '.'
0000000000208a8b         db  0x00 ; '.'
0000000000208a8c         db  0x00 ; '.'
0000000000208a8d         db  0x00 ; '.'
0000000000208a8e         db  0x00 ; '.'
0000000000208a8f         db  0x00 ; '.'
0000000000208a90         db  0x00 ; '.'
0000000000208a91         db  0x00 ; '.'
0000000000208a92         db  0x00 ; '.'
0000000000208a93         db  0x00 ; '.'
0000000000208a94         db  0x00 ; '.'
0000000000208a95         db  0x00 ; '.'
0000000000208a96         db  0x00 ; '.'
0000000000208a97         db  0x00 ; '.'
0000000000208a98         db  0x67 ; 'g'
0000000000208a99         db  0x00 ; '.'
0000000000208a9a         db  0x00 ; '.'
0000000000208a9b         db  0x00 ; '.'
0000000000208a9c         db  0x00 ; '.'
0000000000208a9d         db  0x00 ; '.'
0000000000208a9e         db  0x00 ; '.'
0000000000208a9f         db  0x00 ; '.'
0000000000208aa0         db  0x27 ; '''
0000000000208aa1         db  0x69 ; 'i'
0000000000208aa2         db  0x00 ; '.'
0000000000208aa3         db  0x00 ; '.'
0000000000208aa4         db  0x00 ; '.'
0000000000208aa5         db  0x00 ; '.'
0000000000208aa6         db  0x00 ; '.'
0000000000208aa7         db  0x00 ; '.'
0000000000208aa8         db  0x00 ; '.'
0000000000208aa9         db  0x00 ; '.'
0000000000208aaa         db  0x00 ; '.'
0000000000208aab         db  0x00 ; '.'
0000000000208aac         db  0x00 ; '.'
0000000000208aad         db  0x00 ; '.'
0000000000208aae         db  0x00 ; '.'
0000000000208aaf         db  0x00 ; '.'
0000000000208ab0         db  0x00 ; '.'
0000000000208ab1         db  0x00 ; '.'
0000000000208ab2         db  0x00 ; '.'
0000000000208ab3         db  0x00 ; '.'
0000000000208ab4         db  0x00 ; '.'
0000000000208ab5         db  0x00 ; '.'
0000000000208ab6         db  0x00 ; '.'
0000000000208ab7         db  0x00 ; '.'
0000000000208ab8         db  0x47 ; 'G'
0000000000208ab9         db  0x00 ; '.'
0000000000208aba         db  0x00 ; '.'
0000000000208abb         db  0x00 ; '.'
0000000000208abc         db  0x00 ; '.'
0000000000208abd         db  0x00 ; '.'
0000000000208abe         db  0x00 ; '.'
0000000000208abf         db  0x00 ; '.'
0000000000208ac0         db  0x2e ; '.'
0000000000208ac1         db  0x69 ; 'i'
0000000000208ac2         db  0x00 ; '.'
0000000000208ac3         db  0x00 ; '.'
0000000000208ac4         db  0x00 ; '.'
0000000000208ac5         db  0x00 ; '.'
0000000000208ac6         db  0x00 ; '.'
0000000000208ac7         db  0x00 ; '.'
0000000000208ac8         db  0x00 ; '.'
0000000000208ac9         db  0x00 ; '.'
0000000000208aca         db  0x00 ; '.'
0000000000208acb         db  0x00 ; '.'
0000000000208acc         db  0x00 ; '.'
0000000000208acd         db  0x00 ; '.'
0000000000208ace         db  0x00 ; '.'
0000000000208acf         db  0x00 ; '.'
0000000000208ad0         db  0x00 ; '.'
0000000000208ad1         db  0x00 ; '.'
0000000000208ad2         db  0x00 ; '.'
0000000000208ad3         db  0x00 ; '.'
0000000000208ad4         db  0x00 ; '.'
0000000000208ad5         db  0x00 ; '.'
0000000000208ad6         db  0x00 ; '.'
0000000000208ad7         db  0x00 ; '.'
0000000000208ad8         db  0x6e ; 'n'
0000000000208ad9         db  0x00 ; '.'
0000000000208ada         db  0x00 ; '.'
0000000000208adb         db  0x00 ; '.'
0000000000208adc         db  0x00 ; '.'
0000000000208add         db  0x00 ; '.'
0000000000208ade         db  0x00 ; '.'
0000000000208adf         db  0x00 ; '.'
0000000000208ae0         db  0x33 ; '3'
0000000000208ae1         db  0x69 ; 'i'
0000000000208ae2         db  0x00 ; '.'
0000000000208ae3         db  0x00 ; '.'
0000000000208ae4         db  0x00 ; '.'
0000000000208ae5         db  0x00 ; '.'
0000000000208ae6         db  0x00 ; '.'
0000000000208ae7         db  0x00 ; '.'
0000000000208ae8         db  0x00 ; '.'
0000000000208ae9         db  0x00 ; '.'
0000000000208aea         db  0x00 ; '.'
0000000000208aeb         db  0x00 ; '.'
0000000000208aec         db  0x00 ; '.'
0000000000208aed         db  0x00 ; '.'
0000000000208aee         db  0x00 ; '.'
0000000000208aef         db  0x00 ; '.'
0000000000208af0         db  0x00 ; '.'
0000000000208af1         db  0x00 ; '.'
0000000000208af2         db  0x00 ; '.'
0000000000208af3         db  0x00 ; '.'
0000000000208af4         db  0x00 ; '.'
0000000000208af5         db  0x00 ; '.'
0000000000208af6         db  0x00 ; '.'
0000000000208af7         db  0x00 ; '.'
0000000000208af8         db  0x72 ; 'r'
0000000000208af9         db  0x00 ; '.'
0000000000208afa         db  0x00 ; '.'
0000000000208afb         db  0x00 ; '.'
0000000000208afc         db  0x00 ; '.'
0000000000208afd         db  0x00 ; '.'
0000000000208afe         db  0x00 ; '.'
0000000000208aff         db  0x00 ; '.'
0000000000208b00         db  0xb0 ; '.'
0000000000208b01         db  0x6e ; 'n'
0000000000208b02         db  0x00 ; '.'
0000000000208b03         db  0x00 ; '.'
0000000000208b04         db  0x00 ; '.'
0000000000208b05         db  0x00 ; '.'
0000000000208b06         db  0x00 ; '.'
0000000000208b07         db  0x00 ; '.'
0000000000208b08         db  0x00 ; '.'
0000000000208b09         db  0x00 ; '.'
0000000000208b0a         db  0x00 ; '.'
0000000000208b0b         db  0x00 ; '.'
0000000000208b0c         db  0x00 ; '.'
0000000000208b0d         db  0x00 ; '.'
0000000000208b0e         db  0x00 ; '.'
0000000000208b0f         db  0x00 ; '.'
0000000000208b10         db  0x00 ; '.'
0000000000208b11         db  0x00 ; '.'
0000000000208b12         db  0x00 ; '.'
0000000000208b13         db  0x00 ; '.'
0000000000208b14         db  0x00 ; '.'
0000000000208b15         db  0x00 ; '.'
0000000000208b16         db  0x00 ; '.'
0000000000208b17         db  0x00 ; '.'
0000000000208b18         db  0x75 ; 'u'
0000000000208b19         db  0x00 ; '.'
0000000000208b1a         db  0x00 ; '.'
0000000000208b1b         db  0x00 ; '.'
0000000000208b1c         db  0x00 ; '.'
0000000000208b1d         db  0x00 ; '.'
0000000000208b1e         db  0x00 ; '.'
0000000000208b1f         db  0x00 ; '.'
0000000000208b20         db  0x38 ; '8'
0000000000208b21         db  0x69 ; 'i'
0000000000208b22         db  0x00 ; '.'
0000000000208b23         db  0x00 ; '.'
0000000000208b24         db  0x00 ; '.'
0000000000208b25         db  0x00 ; '.'
0000000000208b26         db  0x00 ; '.'
0000000000208b27         db  0x00 ; '.'
0000000000208b28         db  0x00 ; '.'
0000000000208b29         db  0x00 ; '.'
0000000000208b2a         db  0x00 ; '.'
0000000000208b2b         db  0x00 ; '.'
0000000000208b2c         db  0x00 ; '.'
0000000000208b2d         db  0x00 ; '.'
0000000000208b2e         db  0x00 ; '.'
0000000000208b2f         db  0x00 ; '.'
0000000000208b30         db  0x00 ; '.'
0000000000208b31         db  0x00 ; '.'
0000000000208b32         db  0x00 ; '.'
0000000000208b33         db  0x00 ; '.'
0000000000208b34         db  0x00 ; '.'
0000000000208b35         db  0x00 ; '.'
0000000000208b36         db  0x00 ; '.'
0000000000208b37         db  0x00 ; '.'
0000000000208b38         db  0x7a ; 'z'
0000000000208b39         db  0x00 ; '.'
0000000000208b3a         db  0x00 ; '.'
0000000000208b3b         db  0x00 ; '.'
0000000000208b3c         db  0x00 ; '.'
0000000000208b3d         db  0x00 ; '.'
0000000000208b3e         db  0x00 ; '.'
0000000000208b3f         db  0x00 ; '.'
0000000000208b40         db  0x3d ; '='
0000000000208b41         db  0x69 ; 'i'
0000000000208b42         db  0x00 ; '.'
0000000000208b43         db  0x00 ; '.'
0000000000208b44         db  0x00 ; '.'
0000000000208b45         db  0x00 ; '.'
0000000000208b46         db  0x00 ; '.'
0000000000208b47         db  0x00 ; '.'
0000000000208b48         db  0x00 ; '.'
0000000000208b49         db  0x00 ; '.'
0000000000208b4a         db  0x00 ; '.'
0000000000208b4b         db  0x00 ; '.'
0000000000208b4c         db  0x00 ; '.'
0000000000208b4d         db  0x00 ; '.'
0000000000208b4e         db  0x00 ; '.'
0000000000208b4f         db  0x00 ; '.'
0000000000208b50         db  0x00 ; '.'
0000000000208b51         db  0x00 ; '.'
0000000000208b52         db  0x00 ; '.'
0000000000208b53         db  0x00 ; '.'
0000000000208b54         db  0x00 ; '.'
0000000000208b55         db  0x00 ; '.'
0000000000208b56         db  0x00 ; '.'
0000000000208b57         db  0x00 ; '.'
0000000000208b58         db  0x7e ; '~'
0000000000208b59         db  0xff ; '.'
0000000000208b5a         db  0xff ; '.'
0000000000208b5b         db  0xff ; '.'
0000000000208b5c         db  0x00 ; '.'
0000000000208b5d         db  0x00 ; '.'
0000000000208b5e         db  0x00 ; '.'
0000000000208b5f         db  0x00 ; '.'
0000000000208b60         db  0x42 ; 'B'
0000000000208b61         db  0x69 ; 'i'
0000000000208b62         db  0x00 ; '.'
0000000000208b63         db  0x00 ; '.'
0000000000208b64         db  0x00 ; '.'
0000000000208b65         db  0x00 ; '.'
0000000000208b66         db  0x00 ; '.'
0000000000208b67         db  0x00 ; '.'
0000000000208b68         db  0x00 ; '.'
0000000000208b69         db  0x00 ; '.'
0000000000208b6a         db  0x00 ; '.'
0000000000208b6b         db  0x00 ; '.'
0000000000208b6c         db  0x00 ; '.'
0000000000208b6d         db  0x00 ; '.'
0000000000208b6e         db  0x00 ; '.'
0000000000208b6f         db  0x00 ; '.'
0000000000208b70         db  0x00 ; '.'
0000000000208b71         db  0x00 ; '.'
0000000000208b72         db  0x00 ; '.'
0000000000208b73         db  0x00 ; '.'
0000000000208b74         db  0x00 ; '.'
0000000000208b75         db  0x00 ; '.'
0000000000208b76         db  0x00 ; '.'
0000000000208b77         db  0x00 ; '.'
0000000000208b78         db  0x7d ; '}'
0000000000208b79         db  0xff ; '.'
0000000000208b7a         db  0xff ; '.'
0000000000208b7b         db  0xff ; '.'
0000000000208b7c         db  0x00 ; '.'
0000000000208b7d         db  0x00 ; '.'
0000000000208b7e         db  0x00 ; '.'
0000000000208b7f         db  0x00 ; '.'
0000000000208b80         db  0x00 ; '.'
0000000000208b81         db  0x00 ; '.'
0000000000208b82         db  0x00 ; '.'
0000000000208b83         db  0x00 ; '.'
0000000000208b84         db  0x00 ; '.'
0000000000208b85         db  0x00 ; '.'
0000000000208b86         db  0x00 ; '.'
0000000000208b87         db  0x00 ; '.'
0000000000208b88         db  0x00 ; '.'
0000000000208b89         db  0x00 ; '.'
0000000000208b8a         db  0x00 ; '.'
0000000000208b8b         db  0x00 ; '.'
0000000000208b8c         db  0x00 ; '.'
0000000000208b8d         db  0x00 ; '.'
0000000000208b8e         db  0x00 ; '.'
0000000000208b8f         db  0x00 ; '.'
0000000000208b90         db  0x00 ; '.'
0000000000208b91         db  0x00 ; '.'
0000000000208b92         db  0x00 ; '.'
0000000000208b93         db  0x00 ; '.'
0000000000208b94         db  0x00 ; '.'
0000000000208b95         db  0x00 ; '.'
0000000000208b96         db  0x00 ; '.'
0000000000208b97         db  0x00 ; '.'
0000000000208b98         db  0x00 ; '.'
0000000000208b99         db  0x00 ; '.'
0000000000208b9a         db  0x00 ; '.'
0000000000208b9b         db  0x00 ; '.'
0000000000208b9c         db  0x00 ; '.'
0000000000208b9d         db  0x00 ; '.'
0000000000208b9e         db  0x00 ; '.'
0000000000208b9f         db  0x00 ; '.'
                     quoting_style_args:
0000000000208ba0         db  0xe9 ; '.'
0000000000208ba1         db  0x69 ; 'i'
0000000000208ba2         db  0x00 ; '.'
0000000000208ba3         db  0x00 ; '.'
0000000000208ba4         db  0x00 ; '.'
0000000000208ba5         db  0x00 ; '.'
0000000000208ba6         db  0x00 ; '.'
0000000000208ba7         db  0x00 ; '.'
0000000000208ba8         db  0xf1 ; '.'
0000000000208ba9         db  0x69 ; 'i'
0000000000208baa         db  0x00 ; '.'
0000000000208bab         db  0x00 ; '.'
0000000000208bac         db  0x00 ; '.'
0000000000208bad         db  0x00 ; '.'
0000000000208bae         db  0x00 ; '.'
0000000000208baf         db  0x00 ; '.'
0000000000208bb0         db  0xf7 ; '.'
0000000000208bb1         db  0x69 ; 'i'
0000000000208bb2         db  0x00 ; '.'
0000000000208bb3         db  0x00 ; '.'
0000000000208bb4         db  0x00 ; '.'
0000000000208bb5         db  0x00 ; '.'
0000000000208bb6         db  0x00 ; '.'
0000000000208bb7         db  0x00 ; '.'
0000000000208bb8         db  0x04 ; '.'
0000000000208bb9         db  0x6a ; 'j'
0000000000208bba         db  0x00 ; '.'
0000000000208bbb         db  0x00 ; '.'
0000000000208bbc         db  0x00 ; '.'
0000000000208bbd         db  0x00 ; '.'
0000000000208bbe         db  0x00 ; '.'
0000000000208bbf         db  0x00 ; '.'
0000000000208bc0         db  0x11 ; '.'
0000000000208bc1         db  0x6a ; 'j'
0000000000208bc2         db  0x00 ; '.'
0000000000208bc3         db  0x00 ; '.'
0000000000208bc4         db  0x00 ; '.'
0000000000208bc5         db  0x00 ; '.'
0000000000208bc6         db  0x00 ; '.'
0000000000208bc7         db  0x00 ; '.'
0000000000208bc8         db  0xc0 ; '.'
0000000000208bc9         db  0x6e ; 'n'
0000000000208bca         db  0x00 ; '.'
0000000000208bcb         db  0x00 ; '.'
0000000000208bcc         db  0x00 ; '.'
0000000000208bcd         db  0x00 ; '.'
0000000000208bce         db  0x00 ; '.'
0000000000208bcf         db  0x00 ; '.'
0000000000208bd0         db  0x25 ; '%'
0000000000208bd1         db  0x6a ; 'j'
0000000000208bd2         db  0x00 ; '.'
0000000000208bd3         db  0x00 ; '.'
0000000000208bd4         db  0x00 ; '.'
0000000000208bd5         db  0x00 ; '.'
0000000000208bd6         db  0x00 ; '.'
0000000000208bd7         db  0x00 ; '.'
0000000000208bd8         db  0x0a ; '.'
0000000000208bd9         db  0x6a ; 'j'
0000000000208bda         db  0x00 ; '.'
0000000000208bdb         db  0x00 ; '.'
0000000000208bdc         db  0x00 ; '.'
0000000000208bdd         db  0x00 ; '.'
0000000000208bde         db  0x00 ; '.'
0000000000208bdf         db  0x00 ; '.'
0000000000208be0         db  0x75 ; 'u'
0000000000208be1         db  0x68 ; 'h'
0000000000208be2         db  0x00 ; '.'
0000000000208be3         db  0x00 ; '.'
0000000000208be4         db  0x00 ; '.'
0000000000208be5         db  0x00 ; '.'
0000000000208be6         db  0x00 ; '.'
0000000000208be7         db  0x00 ; '.'
0000000000208be8         db  0x2d ; '-'
0000000000208be9         db  0x6a ; 'j'
0000000000208bea         db  0x00 ; '.'
0000000000208beb         db  0x00 ; '.'
0000000000208bec         db  0x00 ; '.'
0000000000208bed         db  0x00 ; '.'
0000000000208bee         db  0x00 ; '.'
0000000000208bef         db  0x00 ; '.'
0000000000208bf0         db  0x00 ; '.'
0000000000208bf1         db  0x00 ; '.'
0000000000208bf2         db  0x00 ; '.'
0000000000208bf3         db  0x00 ; '.'
0000000000208bf4         db  0x00 ; '.'
0000000000208bf5         db  0x00 ; '.'
0000000000208bf6         db  0x00 ; '.'
0000000000208bf7         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x208bf8; 0x208de8[ (496 bytes)
        ; File offset : [35832; 36328[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
0000000000208bf8         db  0x01 ; '.'
0000000000208bf9         db  0x00 ; '.'
0000000000208bfa         db  0x00 ; '.'
0000000000208bfb         db  0x00 ; '.'
0000000000208bfc         db  0x00 ; '.'
0000000000208bfd         db  0x00 ; '.'
0000000000208bfe         db  0x00 ; '.'
0000000000208bff         db  0x00 ; '.'
0000000000208c00         db  0x01 ; '.'
0000000000208c01         db  0x00 ; '.'
0000000000208c02         db  0x00 ; '.'
0000000000208c03         db  0x00 ; '.'
0000000000208c04         db  0x00 ; '.'
0000000000208c05         db  0x00 ; '.'
0000000000208c06         db  0x00 ; '.'
0000000000208c07         db  0x00 ; '.'
0000000000208c08         db  0x0c ; '.'
0000000000208c09         db  0x00 ; '.'
0000000000208c0a         db  0x00 ; '.'
0000000000208c0b         db  0x00 ; '.'
0000000000208c0c         db  0x00 ; '.'
0000000000208c0d         db  0x00 ; '.'
0000000000208c0e         db  0x00 ; '.'
0000000000208c0f         db  0x00 ; '.'
0000000000208c10         db  0xd8 ; '.'
0000000000208c11         db  0x15 ; '.'
0000000000208c12         db  0x00 ; '.'
0000000000208c13         db  0x00 ; '.'
0000000000208c14         db  0x00 ; '.'
0000000000208c15         db  0x00 ; '.'
0000000000208c16         db  0x00 ; '.'
0000000000208c17         db  0x00 ; '.'
0000000000208c18         db  0x0d ; '.'
0000000000208c19         db  0x00 ; '.'
0000000000208c1a         db  0x00 ; '.'
0000000000208c1b         db  0x00 ; '.'
0000000000208c1c         db  0x00 ; '.'
0000000000208c1d         db  0x00 ; '.'
0000000000208c1e         db  0x00 ; '.'
0000000000208c1f         db  0x00 ; '.'
0000000000208c20         db  0x10 ; '.'
0000000000208c21         db  0x62 ; 'b'
0000000000208c22         db  0x00 ; '.'
0000000000208c23         db  0x00 ; '.'
0000000000208c24         db  0x00 ; '.'
0000000000208c25         db  0x00 ; '.'
0000000000208c26         db  0x00 ; '.'
0000000000208c27         db  0x00 ; '.'
0000000000208c28         db  0x19 ; '.'
0000000000208c29         db  0x00 ; '.'
0000000000208c2a         db  0x00 ; '.'
0000000000208c2b         db  0x00 ; '.'
0000000000208c2c         db  0x00 ; '.'
0000000000208c2d         db  0x00 ; '.'
0000000000208c2e         db  0x00 ; '.'
0000000000208c2f         db  0x00 ; '.'
0000000000208c30         db  0x50 ; 'P'
0000000000208c31         db  0x8a ; '.'
0000000000208c32         db  0x20 ; ' '
0000000000208c33         db  0x00 ; '.'
0000000000208c34         db  0x00 ; '.'
0000000000208c35         db  0x00 ; '.'
0000000000208c36         db  0x00 ; '.'
0000000000208c37         db  0x00 ; '.'
0000000000208c38         db  0x1b ; '.'
0000000000208c39         db  0x00 ; '.'
0000000000208c3a         db  0x00 ; '.'
0000000000208c3b         db  0x00 ; '.'
0000000000208c3c         db  0x00 ; '.'
0000000000208c3d         db  0x00 ; '.'
0000000000208c3e         db  0x00 ; '.'
0000000000208c3f         db  0x00 ; '.'
0000000000208c40         db  0x08 ; '.'
0000000000208c41         db  0x00 ; '.'
0000000000208c42         db  0x00 ; '.'
0000000000208c43         db  0x00 ; '.'
0000000000208c44         db  0x00 ; '.'
0000000000208c45         db  0x00 ; '.'
0000000000208c46         db  0x00 ; '.'
0000000000208c47         db  0x00 ; '.'
0000000000208c48         db  0x1a ; '.'
0000000000208c49         db  0x00 ; '.'
0000000000208c4a         db  0x00 ; '.'
0000000000208c4b         db  0x00 ; '.'
0000000000208c4c         db  0x00 ; '.'
0000000000208c4d         db  0x00 ; '.'
0000000000208c4e         db  0x00 ; '.'
0000000000208c4f         db  0x00 ; '.'
0000000000208c50         db  0x58 ; 'X'
0000000000208c51         db  0x8a ; '.'
0000000000208c52         db  0x20 ; ' '
0000000000208c53         db  0x00 ; '.'
0000000000208c54         db  0x00 ; '.'
0000000000208c55         db  0x00 ; '.'
0000000000208c56         db  0x00 ; '.'
0000000000208c57         db  0x00 ; '.'
0000000000208c58         db  0x1c ; '.'
0000000000208c59         db  0x00 ; '.'
0000000000208c5a         db  0x00 ; '.'
0000000000208c5b         db  0x00 ; '.'
0000000000208c5c         db  0x00 ; '.'
0000000000208c5d         db  0x00 ; '.'
0000000000208c5e         db  0x00 ; '.'
0000000000208c5f         db  0x00 ; '.'
0000000000208c60         db  0x08 ; '.'
0000000000208c61         db  0x00 ; '.'
0000000000208c62         db  0x00 ; '.'
0000000000208c63         db  0x00 ; '.'
0000000000208c64         db  0x00 ; '.'
0000000000208c65         db  0x00 ; '.'
0000000000208c66         db  0x00 ; '.'
0000000000208c67         db  0x00 ; '.'
0000000000208c68         db  0xf5 ; '.'
0000000000208c69         db  0xfe ; '.'
0000000000208c6a         db  0xff ; '.'
0000000000208c6b         db  0x6f ; 'o'
0000000000208c6c         db  0x00 ; '.'
0000000000208c6d         db  0x00 ; '.'
0000000000208c6e         db  0x00 ; '.'
0000000000208c6f         db  0x00 ; '.'
0000000000208c70         db  0x98 ; '.'
0000000000208c71         db  0x02 ; '.'
0000000000208c72         db  0x00 ; '.'
0000000000208c73         db  0x00 ; '.'
0000000000208c74         db  0x00 ; '.'
0000000000208c75         db  0x00 ; '.'
0000000000208c76         db  0x00 ; '.'
0000000000208c77         db  0x00 ; '.'
0000000000208c78         db  0x05 ; '.'
0000000000208c79         db  0x00 ; '.'
0000000000208c7a         db  0x00 ; '.'
0000000000208c7b         db  0x00 ; '.'
0000000000208c7c         db  0x00 ; '.'
0000000000208c7d         db  0x00 ; '.'
0000000000208c7e         db  0x00 ; '.'
0000000000208c7f         db  0x00 ; '.'
0000000000208c80         db  0x50 ; 'P'
0000000000208c81         db  0x09 ; '.'
0000000000208c82         db  0x00 ; '.'
0000000000208c83         db  0x00 ; '.'
0000000000208c84         db  0x00 ; '.'
0000000000208c85         db  0x00 ; '.'
0000000000208c86         db  0x00 ; '.'
0000000000208c87         db  0x00 ; '.'
0000000000208c88         db  0x06 ; '.'
0000000000208c89         db  0x00 ; '.'
0000000000208c8a         db  0x00 ; '.'
0000000000208c8b         db  0x00 ; '.'
0000000000208c8c         db  0x00 ; '.'
0000000000208c8d         db  0x00 ; '.'
0000000000208c8e         db  0x00 ; '.'
0000000000208c8f         db  0x00 ; '.'
0000000000208c90         db  0xd8 ; '.'
0000000000208c91         db  0x02 ; '.'
0000000000208c92         db  0x00 ; '.'
0000000000208c93         db  0x00 ; '.'
0000000000208c94         db  0x00 ; '.'
0000000000208c95         db  0x00 ; '.'
0000000000208c96         db  0x00 ; '.'
0000000000208c97         db  0x00 ; '.'
0000000000208c98         db  0x0a ; '.'
0000000000208c99         db  0x00 ; '.'
0000000000208c9a         db  0x00 ; '.'
0000000000208c9b         db  0x00 ; '.'
0000000000208c9c         db  0x00 ; '.'
0000000000208c9d         db  0x00 ; '.'
0000000000208c9e         db  0x00 ; '.'
0000000000208c9f         db  0x00 ; '.'
0000000000208ca0         db  0x12 ; '.'
0000000000208ca1         db  0x03 ; '.'
0000000000208ca2         db  0x00 ; '.'
0000000000208ca3         db  0x00 ; '.'
0000000000208ca4         db  0x00 ; '.'
0000000000208ca5         db  0x00 ; '.'
0000000000208ca6         db  0x00 ; '.'
0000000000208ca7         db  0x00 ; '.'
0000000000208ca8         db  0x0b ; '.'
0000000000208ca9         db  0x00 ; '.'
0000000000208caa         db  0x00 ; '.'
0000000000208cab         db  0x00 ; '.'
0000000000208cac         db  0x00 ; '.'
0000000000208cad         db  0x00 ; '.'
0000000000208cae         db  0x00 ; '.'
0000000000208caf         db  0x00 ; '.'
0000000000208cb0         db  0x18 ; '.'
0000000000208cb1         db  0x00 ; '.'
0000000000208cb2         db  0x00 ; '.'
0000000000208cb3         db  0x00 ; '.'
0000000000208cb4         db  0x00 ; '.'
0000000000208cb5         db  0x00 ; '.'
0000000000208cb6         db  0x00 ; '.'
0000000000208cb7         db  0x00 ; '.'
0000000000208cb8         db  0x15 ; '.'
0000000000208cb9         db  0x00 ; '.'
0000000000208cba         db  0x00 ; '.'
0000000000208cbb         db  0x00 ; '.'
0000000000208cbc         db  0x00 ; '.'
0000000000208cbd         db  0x00 ; '.'
0000000000208cbe         db  0x00 ; '.'
0000000000208cbf         db  0x00 ; '.'
0000000000208cc0         db  0x00 ; '.'
0000000000208cc1         db  0x00 ; '.'
0000000000208cc2         db  0x00 ; '.'
0000000000208cc3         db  0x00 ; '.'
0000000000208cc4         db  0x00 ; '.'
0000000000208cc5         db  0x00 ; '.'
0000000000208cc6         db  0x00 ; '.'
0000000000208cc7         db  0x00 ; '.'
0000000000208cc8         db  0x03 ; '.'
0000000000208cc9         db  0x00 ; '.'
0000000000208cca         db  0x00 ; '.'
0000000000208ccb         db  0x00 ; '.'
0000000000208ccc         db  0x00 ; '.'
0000000000208ccd         db  0x00 ; '.'
0000000000208cce         db  0x00 ; '.'
0000000000208ccf         db  0x00 ; '.'
0000000000208cd0         db  0xe8 ; '.'
0000000000208cd1         db  0x8d ; '.'
0000000000208cd2         db  0x20 ; ' '
0000000000208cd3         db  0x00 ; '.'
0000000000208cd4         db  0x00 ; '.'
0000000000208cd5         db  0x00 ; '.'
0000000000208cd6         db  0x00 ; '.'
0000000000208cd7         db  0x00 ; '.'
0000000000208cd8         db  0x02 ; '.'
0000000000208cd9         db  0x00 ; '.'
0000000000208cda         db  0x00 ; '.'
0000000000208cdb         db  0x00 ; '.'
0000000000208cdc         db  0x00 ; '.'
0000000000208cdd         db  0x00 ; '.'
0000000000208cde         db  0x00 ; '.'
0000000000208cdf         db  0x00 ; '.'
0000000000208ce0         db  0x40 ; '@'
0000000000208ce1         db  0x05 ; '.'
0000000000208ce2         db  0x00 ; '.'
0000000000208ce3         db  0x00 ; '.'
0000000000208ce4         db  0x00 ; '.'
0000000000208ce5         db  0x00 ; '.'
0000000000208ce6         db  0x00 ; '.'
0000000000208ce7         db  0x00 ; '.'
0000000000208ce8         db  0x14 ; '.'
0000000000208ce9         db  0x00 ; '.'
0000000000208cea         db  0x00 ; '.'
0000000000208ceb         db  0x00 ; '.'
0000000000208cec         db  0x00 ; '.'
0000000000208ced         db  0x00 ; '.'
0000000000208cee         db  0x00 ; '.'
0000000000208cef         db  0x00 ; '.'
0000000000208cf0         db  0x07 ; '.'
0000000000208cf1         db  0x00 ; '.'
0000000000208cf2         db  0x00 ; '.'
0000000000208cf3         db  0x00 ; '.'
0000000000208cf4         db  0x00 ; '.'
0000000000208cf5         db  0x00 ; '.'
0000000000208cf6         db  0x00 ; '.'
0000000000208cf7         db  0x00 ; '.'
0000000000208cf8         db  0x17 ; '.'
0000000000208cf9         db  0x00 ; '.'
0000000000208cfa         db  0x00 ; '.'
0000000000208cfb         db  0x00 ; '.'
0000000000208cfc         db  0x00 ; '.'
0000000000208cfd         db  0x00 ; '.'
0000000000208cfe         db  0x00 ; '.'
0000000000208cff         db  0x00 ; '.'
0000000000208d00         db  0x98 ; '.'
0000000000208d01         db  0x10 ; '.'
0000000000208d02         db  0x00 ; '.'
0000000000208d03         db  0x00 ; '.'
0000000000208d04         db  0x00 ; '.'
0000000000208d05         db  0x00 ; '.'
0000000000208d06         db  0x00 ; '.'
0000000000208d07         db  0x00 ; '.'
0000000000208d08         db  0x07 ; '.'
0000000000208d09         db  0x00 ; '.'
0000000000208d0a         db  0x00 ; '.'
0000000000208d0b         db  0x00 ; '.'
0000000000208d0c         db  0x00 ; '.'
0000000000208d0d         db  0x00 ; '.'
0000000000208d0e         db  0x00 ; '.'
0000000000208d0f         db  0x00 ; '.'
0000000000208d10         db  0x50 ; 'P'
0000000000208d11         db  0x0d ; '.'
0000000000208d12         db  0x00 ; '.'
0000000000208d13         db  0x00 ; '.'
0000000000208d14         db  0x00 ; '.'
0000000000208d15         db  0x00 ; '.'
0000000000208d16         db  0x00 ; '.'
0000000000208d17         db  0x00 ; '.'
0000000000208d18         db  0x08 ; '.'
0000000000208d19         db  0x00 ; '.'
0000000000208d1a         db  0x00 ; '.'
0000000000208d1b         db  0x00 ; '.'
0000000000208d1c         db  0x00 ; '.'
0000000000208d1d         db  0x00 ; '.'
0000000000208d1e         db  0x00 ; '.'
0000000000208d1f         db  0x00 ; '.'
0000000000208d20         db  0x48 ; 'H'
0000000000208d21         db  0x03 ; '.'
0000000000208d22         db  0x00 ; '.'
0000000000208d23         db  0x00 ; '.'
0000000000208d24         db  0x00 ; '.'
0000000000208d25         db  0x00 ; '.'
0000000000208d26         db  0x00 ; '.'
0000000000208d27         db  0x00 ; '.'
0000000000208d28         db  0x09 ; '.'
0000000000208d29         db  0x00 ; '.'
0000000000208d2a         db  0x00 ; '.'
0000000000208d2b         db  0x00 ; '.'
0000000000208d2c         db  0x00 ; '.'
0000000000208d2d         db  0x00 ; '.'
0000000000208d2e         db  0x00 ; '.'
0000000000208d2f         db  0x00 ; '.'
0000000000208d30         db  0x18 ; '.'
0000000000208d31         db  0x00 ; '.'
0000000000208d32         db  0x00 ; '.'
0000000000208d33         db  0x00 ; '.'
0000000000208d34         db  0x00 ; '.'
0000000000208d35         db  0x00 ; '.'
0000000000208d36         db  0x00 ; '.'
0000000000208d37         db  0x00 ; '.'
0000000000208d38         db  0x1e ; '.'
0000000000208d39         db  0x00 ; '.'
0000000000208d3a         db  0x00 ; '.'
0000000000208d3b         db  0x00 ; '.'
0000000000208d3c         db  0x00 ; '.'
0000000000208d3d         db  0x00 ; '.'
0000000000208d3e         db  0x00 ; '.'
0000000000208d3f         db  0x00 ; '.'
0000000000208d40         db  0x08 ; '.'
0000000000208d41         db  0x00 ; '.'
0000000000208d42         db  0x00 ; '.'
0000000000208d43         db  0x00 ; '.'
0000000000208d44         db  0x00 ; '.'
0000000000208d45         db  0x00 ; '.'
0000000000208d46         db  0x00 ; '.'
0000000000208d47         db  0x00 ; '.'
0000000000208d48         db  0xfb ; '.'
0000000000208d49         db  0xff ; '.'
0000000000208d4a         db  0xff ; '.'
0000000000208d4b         db  0x6f ; 'o'
0000000000208d4c         db  0x00 ; '.'
0000000000208d4d         db  0x00 ; '.'
0000000000208d4e         db  0x00 ; '.'
0000000000208d4f         db  0x00 ; '.'
0000000000208d50         db  0x01 ; '.'
0000000000208d51         db  0x00 ; '.'
0000000000208d52         db  0x00 ; '.'
0000000000208d53         db  0x08 ; '.'
0000000000208d54         db  0x00 ; '.'
0000000000208d55         db  0x00 ; '.'
0000000000208d56         db  0x00 ; '.'
0000000000208d57         db  0x00 ; '.'
0000000000208d58         db  0xfe ; '.'
0000000000208d59         db  0xff ; '.'
0000000000208d5a         db  0xff ; '.'
0000000000208d5b         db  0x6f ; 'o'
0000000000208d5c         db  0x00 ; '.'
0000000000208d5d         db  0x00 ; '.'
0000000000208d5e         db  0x00 ; '.'
0000000000208d5f         db  0x00 ; '.'
0000000000208d60         db  0xf0 ; '.'
0000000000208d61         db  0x0c ; '.'
0000000000208d62         db  0x00 ; '.'
0000000000208d63         db  0x00 ; '.'
0000000000208d64         db  0x00 ; '.'
0000000000208d65         db  0x00 ; '.'
0000000000208d66         db  0x00 ; '.'
0000000000208d67         db  0x00 ; '.'
0000000000208d68         db  0xff ; '.'
0000000000208d69         db  0xff ; '.'
0000000000208d6a         db  0xff ; '.'
0000000000208d6b         db  0x6f ; 'o'
0000000000208d6c         db  0x00 ; '.'
0000000000208d6d         db  0x00 ; '.'
0000000000208d6e         db  0x00 ; '.'
0000000000208d6f         db  0x00 ; '.'
0000000000208d70         db  0x01 ; '.'
0000000000208d71         db  0x00 ; '.'
0000000000208d72         db  0x00 ; '.'
0000000000208d73         db  0x00 ; '.'
0000000000208d74         db  0x00 ; '.'
0000000000208d75         db  0x00 ; '.'
0000000000208d76         db  0x00 ; '.'
0000000000208d77         db  0x00 ; '.'
0000000000208d78         db  0xf0 ; '.'
0000000000208d79         db  0xff ; '.'
0000000000208d7a         db  0xff ; '.'
0000000000208d7b         db  0x6f ; 'o'
0000000000208d7c         db  0x00 ; '.'
0000000000208d7d         db  0x00 ; '.'
0000000000208d7e         db  0x00 ; '.'
0000000000208d7f         db  0x00 ; '.'
0000000000208d80         db  0x62 ; 'b'
0000000000208d81         db  0x0c ; '.'
0000000000208d82         db  0x00 ; '.'
0000000000208d83         db  0x00 ; '.'
0000000000208d84         db  0x00 ; '.'
0000000000208d85         db  0x00 ; '.'
0000000000208d86         db  0x00 ; '.'
0000000000208d87         db  0x00 ; '.'
0000000000208d88         db  0xf9 ; '.'
0000000000208d89         db  0xff ; '.'
0000000000208d8a         db  0xff ; '.'
0000000000208d8b         db  0x6f ; 'o'
0000000000208d8c         db  0x00 ; '.'
0000000000208d8d         db  0x00 ; '.'
0000000000208d8e         db  0x00 ; '.'
0000000000208d8f         db  0x00 ; '.'
0000000000208d90         db  0x19 ; '.'
0000000000208d91         db  0x00 ; '.'
0000000000208d92         db  0x00 ; '.'
0000000000208d93         db  0x00 ; '.'
0000000000208d94         db  0x00 ; '.'
0000000000208d95         db  0x00 ; '.'
0000000000208d96         db  0x00 ; '.'
0000000000208d97         db  0x00 ; '.'
0000000000208d98         db  0x00 ; '.'
0000000000208d99         db  0x00 ; '.'
0000000000208d9a         db  0x00 ; '.'
0000000000208d9b         db  0x00 ; '.'
0000000000208d9c         db  0x00 ; '.'
0000000000208d9d         db  0x00 ; '.'
0000000000208d9e         db  0x00 ; '.'
0000000000208d9f         db  0x00 ; '.'
0000000000208da0         db  0x00 ; '.'
0000000000208da1         db  0x00 ; '.'
0000000000208da2         db  0x00 ; '.'
0000000000208da3         db  0x00 ; '.'
0000000000208da4         db  0x00 ; '.'
0000000000208da5         db  0x00 ; '.'
0000000000208da6         db  0x00 ; '.'
0000000000208da7         db  0x00 ; '.'
0000000000208da8         db  0x00 ; '.'
0000000000208da9         db  0x00 ; '.'
0000000000208daa         db  0x00 ; '.'
0000000000208dab         db  0x00 ; '.'
0000000000208dac         db  0x00 ; '.'
0000000000208dad         db  0x00 ; '.'
0000000000208dae         db  0x00 ; '.'
0000000000208daf         db  0x00 ; '.'
0000000000208db0         db  0x00 ; '.'
0000000000208db1         db  0x00 ; '.'
0000000000208db2         db  0x00 ; '.'
0000000000208db3         db  0x00 ; '.'
0000000000208db4         db  0x00 ; '.'
0000000000208db5         db  0x00 ; '.'
0000000000208db6         db  0x00 ; '.'
0000000000208db7         db  0x00 ; '.'
0000000000208db8         db  0x00 ; '.'
0000000000208db9         db  0x00 ; '.'
0000000000208dba         db  0x00 ; '.'
0000000000208dbb         db  0x00 ; '.'
0000000000208dbc         db  0x00 ; '.'
0000000000208dbd         db  0x00 ; '.'
0000000000208dbe         db  0x00 ; '.'
0000000000208dbf         db  0x00 ; '.'
0000000000208dc0         db  0x00 ; '.'
0000000000208dc1         db  0x00 ; '.'
0000000000208dc2         db  0x00 ; '.'
0000000000208dc3         db  0x00 ; '.'
0000000000208dc4         db  0x00 ; '.'
0000000000208dc5         db  0x00 ; '.'
0000000000208dc6         db  0x00 ; '.'
0000000000208dc7         db  0x00 ; '.'
0000000000208dc8         db  0x00 ; '.'
0000000000208dc9         db  0x00 ; '.'
0000000000208dca         db  0x00 ; '.'
0000000000208dcb         db  0x00 ; '.'
0000000000208dcc         db  0x00 ; '.'
0000000000208dcd         db  0x00 ; '.'
0000000000208dce         db  0x00 ; '.'
0000000000208dcf         db  0x00 ; '.'
0000000000208dd0         db  0x00 ; '.'
0000000000208dd1         db  0x00 ; '.'
0000000000208dd2         db  0x00 ; '.'
0000000000208dd3         db  0x00 ; '.'
0000000000208dd4         db  0x00 ; '.'
0000000000208dd5         db  0x00 ; '.'
0000000000208dd6         db  0x00 ; '.'
0000000000208dd7         db  0x00 ; '.'
0000000000208dd8         db  0x00 ; '.'
0000000000208dd9         db  0x00 ; '.'
0000000000208dda         db  0x00 ; '.'
0000000000208ddb         db  0x00 ; '.'
0000000000208ddc         db  0x00 ; '.'
0000000000208ddd         db  0x00 ; '.'
0000000000208dde         db  0x00 ; '.'
0000000000208ddf         db  0x00 ; '.'
0000000000208de0         db  0x00 ; '.'
0000000000208de1         db  0x00 ; '.'
0000000000208de2         db  0x00 ; '.'
0000000000208de3         db  0x00 ; '.'
0000000000208de4         db  0x00 ; '.'
0000000000208de5         db  0x00 ; '.'
0000000000208de6         db  0x00 ; '.'
0000000000208de7         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x208de8; 0x208fe8[ (512 bytes)
        ; File offset : [36328; 36840[ (512 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
0000000000208de8         db  0xf8 ; '.'
0000000000208de9         db  0x8b ; '.'
0000000000208dea         db  0x20 ; ' '
0000000000208deb         db  0x00 ; '.'
0000000000208dec         db  0x00 ; '.'
0000000000208ded         db  0x00 ; '.'
0000000000208dee         db  0x00 ; '.'
0000000000208def         db  0x00 ; '.'
                     qword_208df0:
0000000000208df0         dq         0x0000000000000000                          ; DATA XREF=0x15f0
0000000000208df8         db  0x00 ; '.'                                         ; DATA XREF=0x15f6
0000000000208df9         db  0x00 ; '.'
0000000000208dfa         db  0x00 ; '.'
0000000000208dfb         db  0x00 ; '.'
0000000000208dfc         db  0x00 ; '.'
0000000000208dfd         db  0x00 ; '.'
0000000000208dfe         db  0x00 ; '.'
0000000000208dff         db  0x00 ; '.'
                     endgrent@GOT:        // endgrent
0000000000208e00         dq         0x00000000002092a0                          ; DATA XREF=j_endgrent
                     getenv@GOT:        // getenv
0000000000208e08         dq         0x00000000002092a8                          ; DATA XREF=j_getenv
                     free@GOT:        // free
0000000000208e10         dq         0x00000000002092b0                          ; DATA XREF=j_free
                     abort@GOT:        // abort
0000000000208e18         dq         0x00000000002092b8                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
0000000000208e20         dq         0x00000000002092c0                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
0000000000208e28         dq         0x00000000002092c8                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
0000000000208e30         dq         0x00000000002092d8                          ; DATA XREF=j__exit
                     __fpending@GOT:        // __fpending
0000000000208e38         dq         0x00000000002092e0                          ; DATA XREF=j___fpending
                     textdomain@GOT:        // textdomain
0000000000208e40         dq         0x00000000002092e8                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
0000000000208e48         dq         0x00000000002092f0                          ; DATA XREF=j_fclose
                     getpwuid@GOT:        // getpwuid
0000000000208e50         dq         0x00000000002092f8                          ; DATA XREF=j_getpwuid
                     bindtextdomain@GOT:        // bindtextdomain
0000000000208e58         dq         0x0000000000209300                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
0000000000208e60         dq         0x0000000000209308                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
0000000000208e68         dq         0x0000000000209310                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
0000000000208e70         dq         0x0000000000209318                          ; DATA XREF=j_strlen
                     __stack_chk_fail@GOT:        // __stack_chk_fail
0000000000208e78         dq         0x0000000000209320                          ; DATA XREF=j___stack_chk_fail
                     getuid@GOT:        // getuid
0000000000208e80         dq         0x0000000000209328                          ; DATA XREF=j_getuid
                     getopt_long@GOT:        // getopt_long
0000000000208e88         dq         0x0000000000209330                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
0000000000208e90         dq         0x0000000000209338                          ; DATA XREF=j_mbrtowc
                     strchr@GOT:        // strchr
0000000000208e98         dq         0x0000000000209340                          ; DATA XREF=j_strchr
                     getgrgid@GOT:        // getgrgid
0000000000208ea0         dq         0x0000000000209348                          ; DATA XREF=j_getgrgid
                     __overflow@GOT:        // __overflow
0000000000208ea8         dq         0x0000000000209350                          ; DATA XREF=j___overflow
                     strrchr@GOT:        // strrchr
0000000000208eb0         dq         0x0000000000209358                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
0000000000208eb8         dq         0x0000000000209360                          ; DATA XREF=j_lseek
                     __assert_fail@GOT:        // __assert_fail
0000000000208ec0         dq         0x0000000000209368                          ; DATA XREF=j___assert_fail
                     memset@GOT:        // memset
0000000000208ec8         dq         0x0000000000209370                          ; DATA XREF=j_memset
                     geteuid@GOT:        // geteuid
0000000000208ed0         dq         0x0000000000209378                          ; DATA XREF=j_geteuid
                     memcmp@GOT:        // memcmp
0000000000208ed8         dq         0x0000000000209388                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
0000000000208ee0         dq         0x0000000000209390                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
0000000000208ee8         dq         0x0000000000209398                          ; DATA XREF=j_calloc
                     getpwnam@GOT:        // getpwnam
0000000000208ef0         dq         0x00000000002093a0                          ; DATA XREF=j_getpwnam
                     memcpy@GOT:        // memcpy
0000000000208ef8         dq         0x00000000002093b0                          ; DATA XREF=j_memcpy
                     getgrnam@GOT:        // getgrnam
0000000000208f00         dq         0x00000000002093b8                          ; DATA XREF=j_getgrnam
                     fileno@GOT:        // fileno
0000000000208f08         dq         0x00000000002093c0                          ; DATA XREF=j_fileno
                     getgid@GOT:        // getgid
0000000000208f10         dq         0x00000000002093c8                          ; DATA XREF=j_getgid
                     getgroups@GOT:        // getgroups
0000000000208f18         dq         0x00000000002093d0                          ; DATA XREF=j_getgroups
                     malloc@GOT:        // malloc
0000000000208f20         dq         0x00000000002093d8                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
0000000000208f28         dq         0x00000000002093e0                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
0000000000208f30         dq         0x00000000002093e8                          ; DATA XREF=j_nl_langinfo
                     endpwent@GOT:        // endpwent
0000000000208f38         dq         0x00000000002093f0                          ; DATA XREF=j_endpwent
                     getegid@GOT:        // getegid
0000000000208f40         dq         0x00000000002093f8                          ; DATA XREF=j_getegid
                     __freading@GOT:        // __freading
0000000000208f48         dq         0x0000000000209400                          ; DATA XREF=j___freading
                     realloc@GOT:        // realloc
0000000000208f50         dq         0x0000000000209408                          ; DATA XREF=j_realloc
                     setlocale@GOT:        // setlocale
0000000000208f58         dq         0x0000000000209410                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
0000000000208f60         dq         0x0000000000209418                          ; DATA XREF=j___printf_chk
                     error@GOT:        // error
0000000000208f68         dq         0x0000000000209420                          ; DATA XREF=j_error
                     getgrouplist@GOT:        // getgrouplist
0000000000208f70         dq         0x0000000000209428                          ; DATA XREF=j_getgrouplist
                     fseeko@GOT:        // fseeko
0000000000208f78         dq         0x0000000000209430                          ; DATA XREF=j_fseeko
                     strtoul@GOT:        // strtoul
0000000000208f80         dq         0x0000000000209438                          ; DATA XREF=j_strtoul
                     __cxa_atexit@GOT:        // __cxa_atexit
0000000000208f88         dq         0x0000000000209440                          ; DATA XREF=j___cxa_atexit
                     exit@GOT:        // exit
0000000000208f90         dq         0x0000000000209448                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
0000000000208f98         dq         0x0000000000209450                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
0000000000208fa0         dq         0x0000000000209458                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
0000000000208fa8         dq         0x0000000000209468                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
0000000000208fb0         dq         0x0000000000209470                          ; DATA XREF=j_iswprint
                     __ctype_b_loc@GOT:        // __ctype_b_loc
0000000000208fb8         dq         0x0000000000209480                          ; DATA XREF=j___ctype_b_loc
                     qword_208fc0:
0000000000208fc0         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
0000000000208fc8         db  0x00 ; '.'                                         ; DATA XREF=_start+36
0000000000208fc9         db  0x00 ; '.'
0000000000208fca         db  0x00 ; '.'
0000000000208fcb         db  0x00 ; '.'
0000000000208fcc         db  0x00 ; '.'
0000000000208fcd         db  0x00 ; '.'
0000000000208fce         db  0x00 ; '.'
0000000000208fcf         db  0x00 ; '.'
                     qword_208fd0:
0000000000208fd0         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_208fd8:
0000000000208fd8         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_208fe0:
0000000000208fe0         dq         0x0000000000000000                          ; DATA XREF=j_qword_208fe0, __do_global_dtors_aux+9
0000000000208fe8         db  0x00 ; '.'
0000000000208fe9         db  0x00 ; '.'
0000000000208fea         db  0x00 ; '.'
0000000000208feb         db  0x00 ; '.'
0000000000208fec         db  0x00 ; '.'
0000000000208fed         db  0x00 ; '.'
0000000000208fee         db  0x00 ; '.'
0000000000208fef         db  0x00 ; '.'
0000000000208ff0         db  0x00 ; '.'
0000000000208ff1         db  0x00 ; '.'
0000000000208ff2         db  0x00 ; '.'
0000000000208ff3         db  0x00 ; '.'
0000000000208ff4         db  0x00 ; '.'
0000000000208ff5         db  0x00 ; '.'
0000000000208ff6         db  0x00 ; '.'
0000000000208ff7         db  0x00 ; '.'
0000000000208ff8         db  0x00 ; '.'
0000000000208ff9         db  0x00 ; '.'
0000000000208ffa         db  0x00 ; '.'
0000000000208ffb         db  0x00 ; '.'
0000000000208ffc         db  0x00 ; '.'
0000000000208ffd         db  0x00 ; '.'
0000000000208ffe         db  0x00 ; '.'
0000000000208fff         db  0x00 ; '.'


        ; Section .data
        ; Range: [0x209000; 0x2090a0[ (160 bytes)
        ; File offset : [36864; 37024[ (160 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

0000000000209000         db  0x00 ; '.'
0000000000209001         db  0x00 ; '.'
0000000000209002         db  0x00 ; '.'
0000000000209003         db  0x00 ; '.'
0000000000209004         db  0x00 ; '.'
0000000000209005         db  0x00 ; '.'
0000000000209006         db  0x00 ; '.'
0000000000209007         db  0x00 ; '.'
                     __dso_handle:
0000000000209008         dq         0x0000000000209008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     ok:
0000000000209010         db         0x01                                        ; DATA XREF=main+544, main+811, print_stuff+258, print_stuff+369, print_stuff+1057, print_stuff+1126
0000000000209011         align      8
                     Version:
0000000000209018         dq         0x0000000000006972                          ; "8.31", DATA XREF=main+211
                     exit_failure:
0000000000209020         dd         0x00000001                                  ; DATA XREF=close_stdout+130, xalloc_die+23
0000000000209024         db  0x00 ; '.'
0000000000209025         db  0x00 ; '.'
0000000000209026         db  0x00 ; '.'
0000000000209027         db  0x00 ; '.'
0000000000209028         db  0x00 ; '.'
0000000000209029         db  0x00 ; '.'
000000000020902a         db  0x00 ; '.'
000000000020902b         db  0x00 ; '.'
000000000020902c         db  0x00 ; '.'
000000000020902d         db  0x00 ; '.'
000000000020902e         db  0x00 ; '.'
000000000020902f         db  0x00 ; '.'
0000000000209030         db  0x00 ; '.'
0000000000209031         db  0x00 ; '.'
0000000000209032         db  0x00 ; '.'
0000000000209033         db  0x00 ; '.'
0000000000209034         db  0x00 ; '.'
0000000000209035         db  0x00 ; '.'
0000000000209036         db  0x00 ; '.'
0000000000209037         db  0x00 ; '.'
0000000000209038         db  0x00 ; '.'
0000000000209039         db  0x00 ; '.'
000000000020903a         db  0x00 ; '.'
000000000020903b         db  0x00 ; '.'
000000000020903c         db  0x00 ; '.'
000000000020903d         db  0x00 ; '.'
000000000020903e         db  0x00 ; '.'
000000000020903f         db  0x00 ; '.'
                     quote_quoting_options:
0000000000209040         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
0000000000209041         db  0x00 ; '.'
0000000000209042         db  0x00 ; '.'
0000000000209043         db  0x00 ; '.'
0000000000209044         db  0x00 ; '.'
0000000000209045         db  0x00 ; '.'
0000000000209046         db  0x00 ; '.'
0000000000209047         db  0x00 ; '.'
0000000000209048         db  0x00 ; '.'
0000000000209049         db  0x00 ; '.'
000000000020904a         db  0x00 ; '.'
000000000020904b         db  0x00 ; '.'
000000000020904c         db  0x00 ; '.'
000000000020904d         db  0x00 ; '.'
000000000020904e         db  0x00 ; '.'
000000000020904f         db  0x00 ; '.'
0000000000209050         db  0x00 ; '.'
0000000000209051         db  0x00 ; '.'
0000000000209052         db  0x00 ; '.'
0000000000209053         db  0x00 ; '.'
0000000000209054         db  0x00 ; '.'
0000000000209055         db  0x00 ; '.'
0000000000209056         db  0x00 ; '.'
0000000000209057         db  0x00 ; '.'
0000000000209058         db  0x00 ; '.'
0000000000209059         db  0x00 ; '.'
000000000020905a         db  0x00 ; '.'
000000000020905b         db  0x00 ; '.'
000000000020905c         db  0x00 ; '.'
000000000020905d         db  0x00 ; '.'
000000000020905e         db  0x00 ; '.'
000000000020905f         db  0x00 ; '.'
0000000000209060         db  0x00 ; '.'
0000000000209061         db  0x00 ; '.'
0000000000209062         db  0x00 ; '.'
0000000000209063         db  0x00 ; '.'
0000000000209064         db  0x00 ; '.'
0000000000209065         db  0x00 ; '.'
0000000000209066         db  0x00 ; '.'
0000000000209067         db  0x00 ; '.'
0000000000209068         db  0x00 ; '.'
0000000000209069         db  0x00 ; '.'
000000000020906a         db  0x00 ; '.'
000000000020906b         db  0x00 ; '.'
000000000020906c         db  0x00 ; '.'
000000000020906d         db  0x00 ; '.'
000000000020906e         db  0x00 ; '.'
000000000020906f         db  0x00 ; '.'
0000000000209070         db  0x00 ; '.'
0000000000209071         db  0x00 ; '.'
0000000000209072         db  0x00 ; '.'
0000000000209073         db  0x00 ; '.'
0000000000209074         db  0x00 ; '.'
0000000000209075         db  0x00 ; '.'
0000000000209076         db  0x00 ; '.'
0000000000209077         db  0x00 ; '.'
                     nslots:
0000000000209078         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020907c         align      2
0000000000209082         db  0x20 ; ' '
0000000000209083         db  0x00 ; '.'
0000000000209084         db  0x00 ; '.'
0000000000209085         db  0x00 ; '.'
0000000000209086         db  0x00 ; '.'
0000000000209087         db  0x00 ; '.'
0000000000209088         db  0x00 ; '.'
0000000000209089         db  0x00 ; '.'
000000000020908a         db  0x00 ; '.'
000000000020908b         db  0x00 ; '.'
000000000020908c         db  0x00 ; '.'
000000000020908d         db  0x00 ; '.'
000000000020908e         db  0x00 ; '.'
000000000020908f         db  0x00 ; '.'
                     slotvec0:
0000000000209090         dq         1.26481e-321, 1.05452e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105


        ; Section .bss
        ; Range: [0x2090a0; 0x209298[ (504 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
00000000002090a0         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
00000000002090a1         db  0x00 ; '.'
00000000002090a2         db  0x00 ; '.'
00000000002090a3         db  0x00 ; '.'
00000000002090a4         db  0x00 ; '.'
00000000002090a5         db  0x00 ; '.'
00000000002090a6         db  0x00 ; '.'
00000000002090a7         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
00000000002090a8         db  0x00 ; '.'                                         ; DATA XREF=main+204, print_stuff+93, print_stuff+112, print_stuff+420, print_stuff+1144, print_stuff+1219, print_stuff+1299, usage+125, usage+162, usage+199, usage+236
00000000002090a9         db  0x00 ; '.'
00000000002090aa         db  0x00 ; '.'
00000000002090ab         db  0x00 ; '.'
00000000002090ac         db  0x00 ; '.'
00000000002090ad         db  0x00 ; '.'
00000000002090ae         db  0x00 ; '.'
00000000002090af         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
00000000002090b0         db  0x00 ; '.'                                         ; DATA XREF=main+394, main+481, main+551, main+558
00000000002090b1         db  0x00 ; '.'
00000000002090b2         db  0x00 ; '.'
00000000002090b3         db  0x00 ; '.'
00000000002090b4         db  0x00 ; '.'
00000000002090b5         db  0x00 ; '.'
00000000002090b6         db  0x00 ; '.'
00000000002090b7         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
00000000002090b8         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
00000000002090b9         db  0x00 ; '.'
00000000002090ba         db  0x00 ; '.'
00000000002090bb         db  0x00 ; '.'
00000000002090bc         db  0x00 ; '.'
00000000002090bd         db  0x00 ; '.'
00000000002090be         db  0x00 ; '.'
00000000002090bf         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
00000000002090c0         db  0x00 ; '.'                                         ; DATA XREF=usage+61, close_stdout+44, set_program_name+125
00000000002090c1         db  0x00 ; '.'
00000000002090c2         db  0x00 ; '.'
00000000002090c3         db  0x00 ; '.'
00000000002090c4         db  0x00 ; '.'
00000000002090c5         db  0x00 ; '.'
00000000002090c6         db  0x00 ; '.'
00000000002090c7         db  0x00 ; '.'
                     completed.7697:
00000000002090c8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
00000000002090c9         db  0x00 ; '.'
00000000002090ca         db  0x00 ; '.'
00000000002090cb         db  0x00 ; '.'
00000000002090cc         db  0x00 ; '.'
00000000002090cd         db  0x00 ; '.'
00000000002090ce         db  0x00 ; '.'
00000000002090cf         db  0x00 ; '.'
                     buf.7122:
00000000002090d0         db  0x00 ; '.'                                         ; DATA XREF=print_stuff+565, print_stuff+776, print_stuff+1167
00000000002090d1         db  0x00 ; '.'
00000000002090d2         db  0x00 ; '.'
00000000002090d3         db  0x00 ; '.'
00000000002090d4         db  0x00 ; '.'
00000000002090d5         db  0x00 ; '.'
00000000002090d6         db  0x00 ; '.'
00000000002090d7         db  0x00 ; '.'
00000000002090d8         db  0x00 ; '.'
00000000002090d9         db  0x00 ; '.'
00000000002090da         db  0x00 ; '.'
00000000002090db         db  0x00 ; '.'
00000000002090dc         db  0x00 ; '.'
00000000002090dd         db  0x00 ; '.'
00000000002090de         db  0x00 ; '.'
00000000002090df         db  0x00 ; '.'
00000000002090e0         db  0x00 ; '.'
00000000002090e1         db  0x00 ; '.'
00000000002090e2         db  0x00 ; '.'
00000000002090e3         db  0x00 ; '.'
00000000002090e4         db  0x00 ; '.'
00000000002090e5         db  0x00 ; '.'
00000000002090e6         db  0x00 ; '.'
00000000002090e7         db  0x00 ; '.'
00000000002090e8         db  0x00 ; '.'
00000000002090e9         db  0x00 ; '.'
00000000002090ea         db  0x00 ; '.'
00000000002090eb         db  0x00 ; '.'
00000000002090ec         db  0x00 ; '.'
00000000002090ed         db  0x00 ; '.'
00000000002090ee         db  0x00 ; '.'
00000000002090ef         db  0x00 ; '.'
                     buf.7126:
00000000002090f0         db  0x00 ; '.'                                         ; DATA XREF=print_stuff+75, print_stuff+466, print_stuff+880, print_stuff+1072
00000000002090f1         db  0x00 ; '.'
00000000002090f2         db  0x00 ; '.'
00000000002090f3         db  0x00 ; '.'
00000000002090f4         db  0x00 ; '.'
00000000002090f5         db  0x00 ; '.'
00000000002090f6         db  0x00 ; '.'
00000000002090f7         db  0x00 ; '.'
00000000002090f8         db  0x00 ; '.'
00000000002090f9         db  0x00 ; '.'
00000000002090fa         db  0x00 ; '.'
00000000002090fb         db  0x00 ; '.'
00000000002090fc         db  0x00 ; '.'
00000000002090fd         db  0x00 ; '.'
00000000002090fe         db  0x00 ; '.'
00000000002090ff         db  0x00 ; '.'
0000000000209100         db  0x00 ; '.'
0000000000209101         db  0x00 ; '.'
0000000000209102         db  0x00 ; '.'
0000000000209103         db  0x00 ; '.'
0000000000209104         db  0x00 ; '.'
0000000000209105         db  0x00 ; '.'
0000000000209106         db  0x00 ; '.'
0000000000209107         db  0x00 ; '.'
                     egid:
0000000000209108         db  0x00 ; '.'                                         ; DATA XREF=main+663, main+758, print_stuff+239, print_stuff+344, print_stuff+673, print_stuff+828, print_stuff+992
0000000000209109         db  0x00 ; '.'
000000000020910a         db  0x00 ; '.'
000000000020910b         db  0x00 ; '.'
                     rgid:
000000000020910c         db  0x00 ; '.'                                         ; DATA XREF=main+669, main+789, print_stuff+247, print_stuff+350, print_stuff+559, print_stuff+617, print_stuff+679
000000000020910d         db  0x00 ; '.'
000000000020910e         db  0x00 ; '.'
000000000020910f         db  0x00 ; '.'
                     euid:
0000000000209110         db  0x00 ; '.'                                         ; DATA XREF=main+462, main+606, main+647, main+921, main+1099, print_stuff+48, print_stuff+655, print_stuff+932
0000000000209111         db  0x00 ; '.'
0000000000209112         db  0x00 ; '.'
0000000000209113         db  0x00 ; '.'
                     ruid:
0000000000209114         db  0x00 ; '.'                                         ; DATA XREF=main+653, main+1005, main+1139, main+1249, print_stuff+56, print_stuff+314, print_stuff+518, print_stuff+661
0000000000209115         db  0x00 ; '.'
0000000000209116         db  0x00 ; '.'
0000000000209117         db  0x00 ; '.'
                     use_name:
0000000000209118         db  0x00 ; '.'                                         ; DATA XREF=main+164, main+846, print_stuff+62, print_stuff+232, print_stuff+336
                     multiple_users:
0000000000209119         db  0x00 ; '.'                                         ; DATA XREF=main+469, print_stuff+142
                     just_user:
000000000020911a         db  0x00 ; '.'                                         ; DATA XREF=main+360, main+379, print_stuff+28
                     use_real:
000000000020911b         db  0x00 ; '.'                                         ; DATA XREF=main+344, main+833, main+977, main+1217, print_stuff+41, print_stuff+225
                     just_group:
000000000020911c         db  0x00 ; '.'                                         ; DATA XREF=main+328, main+372, print_stuff+216
                     just_group_list:
000000000020911d         db  0x00 ; '.'                                         ; DATA XREF=main+313, main+386, print_stuff+133, print_stuff+304
                     opt_zero:
000000000020911e         db  0x00 ; '.'                                         ; DATA XREF=main+286, main+859, print_stuff+105, print_stuff+329
000000000020911f         db  0x00 ; '.'
                     buf.6964:
0000000000209120         db  0x00 ; '.'                                         ; DATA XREF=print_group+80
0000000000209121         db  0x00 ; '.'
0000000000209122         db  0x00 ; '.'
0000000000209123         db  0x00 ; '.'
0000000000209124         db  0x00 ; '.'
0000000000209125         db  0x00 ; '.'
0000000000209126         db  0x00 ; '.'
0000000000209127         db  0x00 ; '.'
0000000000209128         db  0x00 ; '.'
0000000000209129         db  0x00 ; '.'
000000000020912a         db  0x00 ; '.'
000000000020912b         db  0x00 ; '.'
000000000020912c         db  0x00 ; '.'
000000000020912d         db  0x00 ; '.'
000000000020912e         db  0x00 ; '.'
000000000020912f         db  0x00 ; '.'
0000000000209130         db  0x00 ; '.'
0000000000209131         db  0x00 ; '.'
0000000000209132         db  0x00 ; '.'
0000000000209133         db  0x00 ; '.'
0000000000209134         db  0x00 ; '.'
0000000000209135         db  0x00 ; '.'
0000000000209136         db  0x00 ; '.'
0000000000209137         db  0x00 ; '.'
                     ignore_EPIPE:
0000000000209138         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
0000000000209139         db  0x00 ; '.'
000000000020913a         db  0x00 ; '.'
000000000020913b         db  0x00 ; '.'
000000000020913c         db  0x00 ; '.'
000000000020913d         db  0x00 ; '.'
000000000020913e         db  0x00 ; '.'
000000000020913f         db  0x00 ; '.'
                     file_name:
0000000000209140         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
0000000000209141         db  0x00 ; '.'
0000000000209142         db  0x00 ; '.'
0000000000209143         db  0x00 ; '.'
0000000000209144         db  0x00 ; '.'
0000000000209145         db  0x00 ; '.'
0000000000209146         db  0x00 ; '.'
0000000000209147         db  0x00 ; '.'
                     program_name:
0000000000209148         db  0x00 ; '.'                                         ; DATA XREF=usage+20, set_program_name+109
0000000000209149         db  0x00 ; '.'
000000000020914a         db  0x00 ; '.'
000000000020914b         db  0x00 ; '.'
000000000020914c         db  0x00 ; '.'
000000000020914d         db  0x00 ; '.'
000000000020914e         db  0x00 ; '.'
000000000020914f         db  0x00 ; '.'
0000000000209150         db  0x00 ; '.'
0000000000209151         db  0x00 ; '.'
0000000000209152         db  0x00 ; '.'
0000000000209153         db  0x00 ; '.'
0000000000209154         db  0x00 ; '.'
0000000000209155         db  0x00 ; '.'
0000000000209156         db  0x00 ; '.'
0000000000209157         db  0x00 ; '.'
0000000000209158         db  0x00 ; '.'
0000000000209159         db  0x00 ; '.'
000000000020915a         db  0x00 ; '.'
000000000020915b         db  0x00 ; '.'
000000000020915c         db  0x00 ; '.'
000000000020915d         db  0x00 ; '.'
000000000020915e         db  0x00 ; '.'
000000000020915f         db  0x00 ; '.'
                     slot0:
0000000000209160         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
0000000000209161         db  0x00 ; '.'
0000000000209162         db  0x00 ; '.'
0000000000209163         db  0x00 ; '.'
0000000000209164         db  0x00 ; '.'
0000000000209165         db  0x00 ; '.'
0000000000209166         db  0x00 ; '.'
0000000000209167         db  0x00 ; '.'
0000000000209168         db  0x00 ; '.'
0000000000209169         db  0x00 ; '.'
000000000020916a         db  0x00 ; '.'
000000000020916b         db  0x00 ; '.'
000000000020916c         db  0x00 ; '.'
000000000020916d         db  0x00 ; '.'
000000000020916e         db  0x00 ; '.'
000000000020916f         db  0x00 ; '.'
0000000000209170         db  0x00 ; '.'
0000000000209171         db  0x00 ; '.'
0000000000209172         db  0x00 ; '.'
0000000000209173         db  0x00 ; '.'
0000000000209174         db  0x00 ; '.'
0000000000209175         db  0x00 ; '.'
0000000000209176         db  0x00 ; '.'
0000000000209177         db  0x00 ; '.'
0000000000209178         db  0x00 ; '.'
0000000000209179         db  0x00 ; '.'
000000000020917a         db  0x00 ; '.'
000000000020917b         db  0x00 ; '.'
000000000020917c         db  0x00 ; '.'
000000000020917d         db  0x00 ; '.'
000000000020917e         db  0x00 ; '.'
000000000020917f         db  0x00 ; '.'
0000000000209180         db  0x00 ; '.'
0000000000209181         db  0x00 ; '.'
0000000000209182         db  0x00 ; '.'
0000000000209183         db  0x00 ; '.'
0000000000209184         db  0x00 ; '.'
0000000000209185         db  0x00 ; '.'
0000000000209186         db  0x00 ; '.'
0000000000209187         db  0x00 ; '.'
0000000000209188         db  0x00 ; '.'
0000000000209189         db  0x00 ; '.'
000000000020918a         db  0x00 ; '.'
000000000020918b         db  0x00 ; '.'
000000000020918c         db  0x00 ; '.'
000000000020918d         db  0x00 ; '.'
000000000020918e         db  0x00 ; '.'
000000000020918f         db  0x00 ; '.'
0000000000209190         db  0x00 ; '.'
0000000000209191         db  0x00 ; '.'
0000000000209192         db  0x00 ; '.'
0000000000209193         db  0x00 ; '.'
0000000000209194         db  0x00 ; '.'
0000000000209195         db  0x00 ; '.'
0000000000209196         db  0x00 ; '.'
0000000000209197         db  0x00 ; '.'
0000000000209198         db  0x00 ; '.'
0000000000209199         db  0x00 ; '.'
000000000020919a         db  0x00 ; '.'
000000000020919b         db  0x00 ; '.'
000000000020919c         db  0x00 ; '.'
000000000020919d         db  0x00 ; '.'
000000000020919e         db  0x00 ; '.'
000000000020919f         db  0x00 ; '.'
00000000002091a0         db  0x00 ; '.'
00000000002091a1         db  0x00 ; '.'
00000000002091a2         db  0x00 ; '.'
00000000002091a3         db  0x00 ; '.'
00000000002091a4         db  0x00 ; '.'
00000000002091a5         db  0x00 ; '.'
00000000002091a6         db  0x00 ; '.'
00000000002091a7         db  0x00 ; '.'
00000000002091a8         db  0x00 ; '.'
00000000002091a9         db  0x00 ; '.'
00000000002091aa         db  0x00 ; '.'
00000000002091ab         db  0x00 ; '.'
00000000002091ac         db  0x00 ; '.'
00000000002091ad         db  0x00 ; '.'
00000000002091ae         db  0x00 ; '.'
00000000002091af         db  0x00 ; '.'
00000000002091b0         db  0x00 ; '.'
00000000002091b1         db  0x00 ; '.'
00000000002091b2         db  0x00 ; '.'
00000000002091b3         db  0x00 ; '.'
00000000002091b4         db  0x00 ; '.'
00000000002091b5         db  0x00 ; '.'
00000000002091b6         db  0x00 ; '.'
00000000002091b7         db  0x00 ; '.'
00000000002091b8         db  0x00 ; '.'
00000000002091b9         db  0x00 ; '.'
00000000002091ba         db  0x00 ; '.'
00000000002091bb         db  0x00 ; '.'
00000000002091bc         db  0x00 ; '.'
00000000002091bd         db  0x00 ; '.'
00000000002091be         db  0x00 ; '.'
00000000002091bf         db  0x00 ; '.'
00000000002091c0         db  0x00 ; '.'
00000000002091c1         db  0x00 ; '.'
00000000002091c2         db  0x00 ; '.'
00000000002091c3         db  0x00 ; '.'
00000000002091c4         db  0x00 ; '.'
00000000002091c5         db  0x00 ; '.'
00000000002091c6         db  0x00 ; '.'
00000000002091c7         db  0x00 ; '.'
00000000002091c8         db  0x00 ; '.'
00000000002091c9         db  0x00 ; '.'
00000000002091ca         db  0x00 ; '.'
00000000002091cb         db  0x00 ; '.'
00000000002091cc         db  0x00 ; '.'
00000000002091cd         db  0x00 ; '.'
00000000002091ce         db  0x00 ; '.'
00000000002091cf         db  0x00 ; '.'
00000000002091d0         db  0x00 ; '.'
00000000002091d1         db  0x00 ; '.'
00000000002091d2         db  0x00 ; '.'
00000000002091d3         db  0x00 ; '.'
00000000002091d4         db  0x00 ; '.'
00000000002091d5         db  0x00 ; '.'
00000000002091d6         db  0x00 ; '.'
00000000002091d7         db  0x00 ; '.'
00000000002091d8         db  0x00 ; '.'
00000000002091d9         db  0x00 ; '.'
00000000002091da         db  0x00 ; '.'
00000000002091db         db  0x00 ; '.'
00000000002091dc         db  0x00 ; '.'
00000000002091dd         db  0x00 ; '.'
00000000002091de         db  0x00 ; '.'
00000000002091df         db  0x00 ; '.'
00000000002091e0         db  0x00 ; '.'
00000000002091e1         db  0x00 ; '.'
00000000002091e2         db  0x00 ; '.'
00000000002091e3         db  0x00 ; '.'
00000000002091e4         db  0x00 ; '.'
00000000002091e5         db  0x00 ; '.'
00000000002091e6         db  0x00 ; '.'
00000000002091e7         db  0x00 ; '.'
00000000002091e8         db  0x00 ; '.'
00000000002091e9         db  0x00 ; '.'
00000000002091ea         db  0x00 ; '.'
00000000002091eb         db  0x00 ; '.'
00000000002091ec         db  0x00 ; '.'
00000000002091ed         db  0x00 ; '.'
00000000002091ee         db  0x00 ; '.'
00000000002091ef         db  0x00 ; '.'
00000000002091f0         db  0x00 ; '.'
00000000002091f1         db  0x00 ; '.'
00000000002091f2         db  0x00 ; '.'
00000000002091f3         db  0x00 ; '.'
00000000002091f4         db  0x00 ; '.'
00000000002091f5         db  0x00 ; '.'
00000000002091f6         db  0x00 ; '.'
00000000002091f7         db  0x00 ; '.'
00000000002091f8         db  0x00 ; '.'
00000000002091f9         db  0x00 ; '.'
00000000002091fa         db  0x00 ; '.'
00000000002091fb         db  0x00 ; '.'
00000000002091fc         db  0x00 ; '.'
00000000002091fd         db  0x00 ; '.'
00000000002091fe         db  0x00 ; '.'
00000000002091ff         db  0x00 ; '.'
0000000000209200         db  0x00 ; '.'
0000000000209201         db  0x00 ; '.'
0000000000209202         db  0x00 ; '.'
0000000000209203         db  0x00 ; '.'
0000000000209204         db  0x00 ; '.'
0000000000209205         db  0x00 ; '.'
0000000000209206         db  0x00 ; '.'
0000000000209207         db  0x00 ; '.'
0000000000209208         db  0x00 ; '.'
0000000000209209         db  0x00 ; '.'
000000000020920a         db  0x00 ; '.'
000000000020920b         db  0x00 ; '.'
000000000020920c         db  0x00 ; '.'
000000000020920d         db  0x00 ; '.'
000000000020920e         db  0x00 ; '.'
000000000020920f         db  0x00 ; '.'
0000000000209210         db  0x00 ; '.'
0000000000209211         db  0x00 ; '.'
0000000000209212         db  0x00 ; '.'
0000000000209213         db  0x00 ; '.'
0000000000209214         db  0x00 ; '.'
0000000000209215         db  0x00 ; '.'
0000000000209216         db  0x00 ; '.'
0000000000209217         db  0x00 ; '.'
0000000000209218         db  0x00 ; '.'
0000000000209219         db  0x00 ; '.'
000000000020921a         db  0x00 ; '.'
000000000020921b         db  0x00 ; '.'
000000000020921c         db  0x00 ; '.'
000000000020921d         db  0x00 ; '.'
000000000020921e         db  0x00 ; '.'
000000000020921f         db  0x00 ; '.'
0000000000209220         db  0x00 ; '.'
0000000000209221         db  0x00 ; '.'
0000000000209222         db  0x00 ; '.'
0000000000209223         db  0x00 ; '.'
0000000000209224         db  0x00 ; '.'
0000000000209225         db  0x00 ; '.'
0000000000209226         db  0x00 ; '.'
0000000000209227         db  0x00 ; '.'
0000000000209228         db  0x00 ; '.'
0000000000209229         db  0x00 ; '.'
000000000020922a         db  0x00 ; '.'
000000000020922b         db  0x00 ; '.'
000000000020922c         db  0x00 ; '.'
000000000020922d         db  0x00 ; '.'
000000000020922e         db  0x00 ; '.'
000000000020922f         db  0x00 ; '.'
0000000000209230         db  0x00 ; '.'
0000000000209231         db  0x00 ; '.'
0000000000209232         db  0x00 ; '.'
0000000000209233         db  0x00 ; '.'
0000000000209234         db  0x00 ; '.'
0000000000209235         db  0x00 ; '.'
0000000000209236         db  0x00 ; '.'
0000000000209237         db  0x00 ; '.'
0000000000209238         db  0x00 ; '.'
0000000000209239         db  0x00 ; '.'
000000000020923a         db  0x00 ; '.'
000000000020923b         db  0x00 ; '.'
000000000020923c         db  0x00 ; '.'
000000000020923d         db  0x00 ; '.'
000000000020923e         db  0x00 ; '.'
000000000020923f         db  0x00 ; '.'
0000000000209240         db  0x00 ; '.'
0000000000209241         db  0x00 ; '.'
0000000000209242         db  0x00 ; '.'
0000000000209243         db  0x00 ; '.'
0000000000209244         db  0x00 ; '.'
0000000000209245         db  0x00 ; '.'
0000000000209246         db  0x00 ; '.'
0000000000209247         db  0x00 ; '.'
0000000000209248         db  0x00 ; '.'
0000000000209249         db  0x00 ; '.'
000000000020924a         db  0x00 ; '.'
000000000020924b         db  0x00 ; '.'
000000000020924c         db  0x00 ; '.'
000000000020924d         db  0x00 ; '.'
000000000020924e         db  0x00 ; '.'
000000000020924f         db  0x00 ; '.'
0000000000209250         db  0x00 ; '.'
0000000000209251         db  0x00 ; '.'
0000000000209252         db  0x00 ; '.'
0000000000209253         db  0x00 ; '.'
0000000000209254         db  0x00 ; '.'
0000000000209255         db  0x00 ; '.'
0000000000209256         db  0x00 ; '.'
0000000000209257         db  0x00 ; '.'
0000000000209258         db  0x00 ; '.'
0000000000209259         db  0x00 ; '.'
000000000020925a         db  0x00 ; '.'
000000000020925b         db  0x00 ; '.'
000000000020925c         db  0x00 ; '.'
000000000020925d         db  0x00 ; '.'
000000000020925e         db  0x00 ; '.'
000000000020925f         db  0x00 ; '.'
                     default_quoting_options:
0000000000209260         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
0000000000209261         db  0x00 ; '.'
0000000000209262         db  0x00 ; '.'
0000000000209263         db  0x00 ; '.'
0000000000209264         db  0x00 ; '.'
0000000000209265         db  0x00 ; '.'
0000000000209266         db  0x00 ; '.'
0000000000209267         db  0x00 ; '.'
0000000000209268         db  0x00 ; '.'
0000000000209269         db  0x00 ; '.'
000000000020926a         db  0x00 ; '.'
000000000020926b         db  0x00 ; '.'
000000000020926c         db  0x00 ; '.'
000000000020926d         db  0x00 ; '.'
000000000020926e         db  0x00 ; '.'
000000000020926f         db  0x00 ; '.'
0000000000209270         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
0000000000209271         db  0x00 ; '.'
0000000000209272         db  0x00 ; '.'
0000000000209273         db  0x00 ; '.'
0000000000209274         db  0x00 ; '.'
0000000000209275         db  0x00 ; '.'
0000000000209276         db  0x00 ; '.'
0000000000209277         db  0x00 ; '.'
0000000000209278         db  0x00 ; '.'
0000000000209279         db  0x00 ; '.'
000000000020927a         db  0x00 ; '.'
000000000020927b         db  0x00 ; '.'
000000000020927c         db  0x00 ; '.'
000000000020927d         db  0x00 ; '.'
000000000020927e         db  0x00 ; '.'
000000000020927f         db  0x00 ; '.'
0000000000209280         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
0000000000209281         db  0x00 ; '.'
0000000000209282         db  0x00 ; '.'
0000000000209283         db  0x00 ; '.'
0000000000209284         db  0x00 ; '.'
0000000000209285         db  0x00 ; '.'
0000000000209286         db  0x00 ; '.'
0000000000209287         db  0x00 ; '.'
0000000000209288         db  0x00 ; '.'
0000000000209289         db  0x00 ; '.'
000000000020928a         db  0x00 ; '.'
000000000020928b         db  0x00 ; '.'
000000000020928c         db  0x00 ; '.'
000000000020928d         db  0x00 ; '.'
000000000020928e         db  0x00 ; '.'
000000000020928f         db  0x00 ; '.'
                     qword_209290:
0000000000209290         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
0000000000209291         db  0x00 ; '.'
0000000000209292         db  0x00 ; '.'
0000000000209293         db  0x00 ; '.'
0000000000209294         db  0x00 ; '.'
0000000000209295         db  0x00 ; '.'
0000000000209296         db  0x00 ; '.'
0000000000209297         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x2092a0; 0x209670[ (976 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x2092a0; 0x412910[ (2135664 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     endgrent:
00000000002092a0         extern function code                                   ; DATA XREF=endgrent@GOT
                     getenv:
00000000002092a8         extern function code                                   ; DATA XREF=getenv@GOT
                     free:
00000000002092b0         extern function code                                   ; DATA XREF=free@GOT
                     abort:
00000000002092b8         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
00000000002092c0         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
00000000002092c8         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
00000000002092d0         extern function code
                     _exit:
00000000002092d8         extern function code                                   ; DATA XREF=_exit@GOT
                     __fpending:
00000000002092e0         extern function code                                   ; DATA XREF=__fpending@GOT
                     textdomain:
00000000002092e8         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
00000000002092f0         extern function code                                   ; DATA XREF=fclose@GOT
                     getpwuid:
00000000002092f8         extern function code                                   ; DATA XREF=getpwuid@GOT
                     bindtextdomain:
0000000000209300         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
0000000000209308         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
0000000000209310         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
0000000000209318         extern function code                                   ; DATA XREF=strlen@GOT
                     __stack_chk_fail:
0000000000209320         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getuid:
0000000000209328         extern function code                                   ; DATA XREF=getuid@GOT
                     getopt_long:
0000000000209330         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
0000000000209338         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     strchr:
0000000000209340         extern function code                                   ; DATA XREF=strchr@GOT
                     getgrgid:
0000000000209348         extern function code                                   ; DATA XREF=getgrgid@GOT
                     __overflow:
0000000000209350         extern function code                                   ; DATA XREF=__overflow@GOT
                     strrchr:
0000000000209358         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
0000000000209360         extern function code                                   ; DATA XREF=lseek@GOT
                     __assert_fail:
0000000000209368         extern function code                                   ; DATA XREF=__assert_fail@GOT
                     memset:
0000000000209370         extern function code                                   ; DATA XREF=memset@GOT
                     geteuid:
0000000000209378         extern function code                                   ; DATA XREF=geteuid@GOT
                     __libc_start_main:
0000000000209380         extern function code
                     memcmp:
0000000000209388         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
0000000000209390         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
0000000000209398         extern function code                                   ; DATA XREF=calloc@GOT
                     getpwnam:
00000000002093a0         extern function code                                   ; DATA XREF=getpwnam@GOT
                     __gmon_start__:
00000000002093a8         extern function code
                     memcpy:
00000000002093b0         extern function code                                   ; DATA XREF=memcpy@GOT
                     getgrnam:
00000000002093b8         extern function code                                   ; DATA XREF=getgrnam@GOT
                     fileno:
00000000002093c0         extern function code                                   ; DATA XREF=fileno@GOT
                     getgid:
00000000002093c8         extern function code                                   ; DATA XREF=getgid@GOT
                     getgroups:
00000000002093d0         extern function code                                   ; DATA XREF=getgroups@GOT
                     malloc:
00000000002093d8         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
00000000002093e0         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
00000000002093e8         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     endpwent:
00000000002093f0         extern function code                                   ; DATA XREF=endpwent@GOT
                     getegid:
00000000002093f8         extern function code                                   ; DATA XREF=getegid@GOT
                     __freading:
0000000000209400         extern function code                                   ; DATA XREF=__freading@GOT
                     realloc:
0000000000209408         extern function code                                   ; DATA XREF=realloc@GOT
                     setlocale:
0000000000209410         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
0000000000209418         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     error:
0000000000209420         extern function code                                   ; DATA XREF=error@GOT
                     getgrouplist:
0000000000209428         extern function code                                   ; DATA XREF=getgrouplist@GOT
                     fseeko:
0000000000209430         extern function code                                   ; DATA XREF=fseeko@GOT
                     strtoul:
0000000000209438         extern function code                                   ; DATA XREF=strtoul@GOT
                     __cxa_atexit:
0000000000209440         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     exit:
0000000000209448         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
0000000000209450         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
0000000000209458         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
0000000000209460         extern function code
                     mbsinit:
0000000000209468         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
0000000000209470         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
0000000000209478         extern function code
                     __ctype_b_loc:
0000000000209480         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     endgrent@@GLIBC_2.2.5:
0000000000209488         extern function code
                     getenv@@GLIBC_2.2.5:
0000000000209490         extern function code
                     free@@GLIBC_2.2.5:
0000000000209498         extern function code
                     abort@@GLIBC_2.2.5:
00000000002094a0         extern function code
                     __errno_location@@GLIBC_2.2.5:
00000000002094a8         extern function code
                     strncmp@@GLIBC_2.2.5:
00000000002094b0         extern function code
                     _ITM_deregisterTMCloneTable_2094b8:        // _ITM_deregisterTMCloneTable
00000000002094b8         extern function code
                     _exit@@GLIBC_2.2.5:
00000000002094c0         extern function code
                     __fpending@@GLIBC_2.2.5:
00000000002094c8         extern function code
                     textdomain@@GLIBC_2.2.5:
00000000002094d0         extern function code
                     fclose@@GLIBC_2.2.5:
00000000002094d8         extern function code
                     getpwuid@@GLIBC_2.2.5:
00000000002094e0         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
00000000002094e8         extern function code
                     dcgettext@@GLIBC_2.2.5:
00000000002094f0         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
00000000002094f8         extern function code
                     strlen@@GLIBC_2.2.5:
0000000000209500         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
0000000000209508         extern function code
                     getuid@@GLIBC_2.2.5:
0000000000209510         extern function code
                     getopt_long@@GLIBC_2.2.5:
0000000000209518         extern function code
                     mbrtowc@@GLIBC_2.2.5:
0000000000209520         extern function code
                     strchr@@GLIBC_2.2.5:
0000000000209528         extern function code
                     getgrgid@@GLIBC_2.2.5:
0000000000209530         extern function code
                     __overflow@@GLIBC_2.2.5:
0000000000209538         extern function code
                     strrchr@@GLIBC_2.2.5:
0000000000209540         extern function code
                     lseek@@GLIBC_2.2.5:
0000000000209548         extern function code
                     __assert_fail@@GLIBC_2.2.5:
0000000000209550         extern function code
                     memset@@GLIBC_2.2.5:
0000000000209558         extern function code
                     geteuid@@GLIBC_2.2.5:
0000000000209560         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
0000000000209568         extern function code
                     memcmp@@GLIBC_2.2.5:
0000000000209570         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
0000000000209578         extern function code
                     calloc@@GLIBC_2.2.5:
0000000000209580         extern function code
                     getpwnam@@GLIBC_2.2.5:
0000000000209588         extern function code
                     __gmon_start___209590:        // __gmon_start__
0000000000209590         extern function code
                     memcpy@@GLIBC_2.14:
0000000000209598         extern function code
                     getgrnam@@GLIBC_2.2.5:
00000000002095a0         extern function code
                     fileno@@GLIBC_2.2.5:
00000000002095a8         extern function code
                     getgid@@GLIBC_2.2.5:
00000000002095b0         extern function code
                     getgroups@@GLIBC_2.2.5:
00000000002095b8         extern function code
                     malloc@@GLIBC_2.2.5:
00000000002095c0         extern function code
                     fflush@@GLIBC_2.2.5:
00000000002095c8         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
00000000002095d0         extern function code
                     endpwent@@GLIBC_2.2.5:
00000000002095d8         extern function code
                     getegid@@GLIBC_2.2.5:
00000000002095e0         extern function code
                     __freading@@GLIBC_2.2.5:
00000000002095e8         extern function code
                     realloc@@GLIBC_2.2.5:
00000000002095f0         extern function code
                     setlocale@@GLIBC_2.2.5:
00000000002095f8         extern function code
                     __printf_chk@@GLIBC_2.3.4:
0000000000209600         extern function code
                     error@@GLIBC_2.2.5:
0000000000209608         extern function code
                     getgrouplist@@GLIBC_2.2.5:
0000000000209610         extern function code
                     fseeko@@GLIBC_2.2.5:
0000000000209618         extern function code
                     strtoul@@GLIBC_2.2.5:
0000000000209620         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
0000000000209628         extern function code
                     exit@@GLIBC_2.2.5:
0000000000209630         extern function code
                     fwrite@@GLIBC_2.2.5:
0000000000209638         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
0000000000209640         extern function code
                     _ITM_registerTMCloneTable_209648:        // _ITM_registerTMCloneTable
0000000000209648         extern function code
                     mbsinit@@GLIBC_2.2.5:
0000000000209650         extern function code
                     iswprint@@GLIBC_2.2.5:
0000000000209658         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
0000000000209660         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
0000000000209668         extern function code
