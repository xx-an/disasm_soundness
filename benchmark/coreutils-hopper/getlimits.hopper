
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/getlimits
        UUID: 1D6D4518-677B-2D5A-08E3-661639F3029D
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0x74d0[ (29904 bytes)
        ; File offset : [0; 29904[ (29904 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0x90 ; '.'
0000000000000019         db  0x20 ; ' '
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0xa0 ; '.'
0000000000000029         db  0x9e ; '.'
000000000000002a         db  0x02 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0xd0 ; '.'
00000000000000d1         db  0x74 ; 't'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0xd0 ; '.'
00000000000000d9         db  0x74 ; 't'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0x90 ; '.'
00000000000000f1         db  0x7b ; '{'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0x90 ; '.'
00000000000000f9         db  0x7b ; '{'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0x90 ; '.'                                         ; DATA XREF=quotearg_free+87, rpl_fflush+18, slotvec0
0000000000000101         db  0x7b ; '{'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0xf0 ; '.'
0000000000000109         db  0x04 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0xa8 ; '.'
0000000000000111         db  0x06 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0x58 ; 'X'
0000000000000129         db  0x7c ; '|'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0x58 ; 'X'
0000000000000131         db  0x7c ; '|'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0x58 ; 'X'
0000000000000139         db  0x7c ; '|'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0x70 ; 'p'
0000000000000199         db  0x65 ; 'e'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0x70 ; 'p'
00000000000001a1         db  0x65 ; 'e'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0x70 ; 'p'
00000000000001a9         db  0x65 ; 'e'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0x84 ; '.'
00000000000001b1         db  0x02 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0x84 ; '.'
00000000000001b9         db  0x02 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0x90 ; '.'
0000000000000209         db  0x7b ; '{'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0x90 ; '.'
0000000000000211         db  0x7b ; '{'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0x90 ; '.'
0000000000000219         db  0x7b ; '{'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0x70 ; 'p'
0000000000000221         db  0x04 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0x70 ; 'p'
0000000000000229         db  0x04 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0x1d ; '.'
0000000000000285         db  0x6d ; 'm'
0000000000000286         db  0x45 ; 'E'
0000000000000287         db  0x18 ; '.'
0000000000000288         db  0x67 ; 'g'
0000000000000289         db  0x7b ; '{'
000000000000028a         db  0x2d ; '-'
000000000000028b         db  0x5a ; 'Z'
000000000000028c         db  0x08 ; '.'
000000000000028d         db  0xe3 ; '.'
000000000000028e         db  0x66 ; 'f'
000000000000028f         db  0x16 ; '.'
0000000000000290         db  0x39 ; '9'
0000000000000291         db  0xf3 ; '.'
0000000000000292         db  0x02 ; '.'
0000000000000293         db  0x9d ; '.'
0000000000000294         db  0x73 ; 's'
0000000000000295         db  0xda ; '.'
0000000000000296         db  0x2d ; '-'
0000000000000297         db  0x56 ; 'V'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2dc[ (68 bytes)
        ; File offset : [664; 732[ (68 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x33 ; '3'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x06 ; '.'
00000000000002a9         db  0xc9 ; '.'
00000000000002aa         db  0x41 ; 'A'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0x20 ; ' '
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x18 ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x33 ; '3'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x34 ; '4'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x3a ; ':'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x96 ; '.'
00000000000002c5         db  0xa0 ; '.'
00000000000002c6         db  0x89 ; '.'
00000000000002c7         db  0x97 ; '.'
00000000000002c8         db  0xce ; '.'
00000000000002c9         db  0x2c ; ','
00000000000002ca         db  0x63 ; 'c'
00000000000002cb         db  0x72 ; 'r'
00000000000002cc         db  0xe4 ; '.'
00000000000002cd         db  0x62 ; 'b'
00000000000002ce         db  0x41 ; 'A'
00000000000002cf         db  0xf5 ; '.'
00000000000002d0         db  0xc0 ; '.'
00000000000002d1         db  0xb3 ; '.'
00000000000002d2         db  0xf7 ; '.'
00000000000002d3         db  0x12 ; '.'
00000000000002d4         db  0x39 ; '9'
00000000000002d5         db  0xf2 ; '.'
00000000000002d6         db  0x8b ; '.'
00000000000002d7         db  0x1c ; '.'
00000000000002d8         db  0x33 ; '3'
00000000000002d9         db  0xc4 ; '.'
00000000000002da         db  0xf7 ; '.'
00000000000002db         db  0x12 ; '.'
00000000000002dc         db  0x00 ; '.'
00000000000002dd         db  0x00 ; '.'
00000000000002de         db  0x00 ; '.'
00000000000002df         db  0x00 ; '.'


        ; Section .dynsym
        ; Range: [0x2e0; 0x868[ (1416 bytes)
        ; File offset : [736; 2152[ (1416 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0x61 ; 'a'
00000000000002f9         db  0x01 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x12 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x0e ; '.'
0000000000000311         db  0x02 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x12 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0x87 ; '.'
0000000000000329         db  0x00 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x12 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0xe5 ; '.'
0000000000000341         db  0x00 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x12 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0x31 ; '1'
0000000000000359         db  0x00 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x12 ; '.'
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0x72 ; 'r'
0000000000000371         db  0x02 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x20 ; ' '
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0x8d ; '.'
0000000000000389         db  0x00 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x12 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0x8a ; '.'
00000000000003a1         db  0x01 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x12 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0x58 ; 'X'
00000000000003b9         db  0x00 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x12 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0xab ; '.'
00000000000003d1         db  0x00 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x12 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0xd4 ; '.'
00000000000003e9         db  0x01 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x12 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0x1f ; '.'
0000000000000401         db  0x01 ; '.'
0000000000000402         db  0x00 ; '.'
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x12 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'
0000000000000407         db  0x00 ; '.'
0000000000000408         db  0x00 ; '.'
0000000000000409         db  0x00 ; '.'
000000000000040a         db  0x00 ; '.'
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0xd0 ; '.'
0000000000000419         db  0x01 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x12 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0x48 ; 'H'
0000000000000431         db  0x00 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x12 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0xb9 ; '.'
0000000000000449         db  0x00 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x12 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0xd7 ; '.'
0000000000000461         db  0x00 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x12 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x5d ; ']'
0000000000000479         db  0x00 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x12 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0x70 ; 'p'
0000000000000491         db  0x01 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x12 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x29 ; ')'
00000000000004a9         db  0x00 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x12 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0x40 ; '@'
00000000000004c1         db  0x00 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x12 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x12 ; '.'
00000000000004d9         db  0x01 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x12 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0xb2 ; '.'
00000000000004f1         db  0x00 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x12 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0xde ; '.'
0000000000000509         db  0x00 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x12 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0xe6 ; '.'
0000000000000521         db  0x01 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x12 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0xf6 ; '.'
0000000000000539         db  0x00 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x12 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0xff ; '.'
0000000000000551         db  0x01 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x12 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0xd0 ; '.'
0000000000000569         db  0x00 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x12 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0x8e ; '.'
0000000000000581         db  0x02 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x20 ; ' '
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0x18 ; '.'
0000000000000599         db  0x01 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x12 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0x7c ; '|'
00000000000005b1         db  0x01 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x12 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0x26 ; '&'
00000000000005c9         db  0x01 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x12 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0x0b ; '.'
00000000000005e1         db  0x00 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x12 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x35 ; '5'
00000000000005f9         db  0x01 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x12 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x4f ; 'O'
0000000000000611         db  0x01 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x12 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0x77 ; 'w'
0000000000000629         db  0x00 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x12 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x1f ; '.'
0000000000000641         db  0x00 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x12 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x12 ; '.'
0000000000000659         db  0x00 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x12 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x7f ; '.'
0000000000000671         db  0x00 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x12 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0x52 ; 'R'
0000000000000689         db  0x00 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x12 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0xf8 ; '.'
00000000000006a1         db  0x01 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x12 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x2e ; '.'
00000000000006b9         db  0x02 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x12 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x8e ; '.'
00000000000006d1         db  0x00 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x12 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0x83 ; '.'
00000000000006e9         db  0x01 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x12 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0xfd ; '.'
0000000000000701         db  0x00 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x12 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x9d ; '.'
0000000000000719         db  0x02 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x20 ; ' '
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x2d ; '-'
0000000000000731         db  0x01 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x12 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0x6e ; 'n'
0000000000000749         db  0x00 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x12 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0xb3 ; '.'
0000000000000761         db  0x01 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x22 ; '"'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0x41 ; 'A'
0000000000000779         db  0x01 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x12 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0xc2 ; '.'
0000000000000791         db  0x01 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x12 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0x0b ; '.'
00000000000007a9         db  0x01 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x11 ; '.'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x19 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x88 ; '.'
00000000000007b1         db  0x80 ; '.'
00000000000007b2         db  0x20 ; ' '
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x08 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0x13 ; '.'
00000000000007c1         db  0x02 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x11 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x19 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x80 ; '.'
00000000000007c9         db  0x80 ; '.'
00000000000007ca         db  0x20 ; ' '
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x08 ; '.'
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x93 ; '.'
00000000000007d9         db  0x00 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x21 ; '!'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x19 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x98 ; '.'
00000000000007e1         db  0x80 ; '.'
00000000000007e2         db  0x20 ; ' '
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x08 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0x1e ; '.'
00000000000007f1         db  0x02 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x11 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x19 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x98 ; '.'
00000000000007f9         db  0x80 ; '.'
00000000000007fa         db  0x20 ; ' '
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x08 ; '.'
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x95 ; '.'
0000000000000809         db  0x01 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x21 ; '!'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x19 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0x80 ; '.'
0000000000000811         db  0x80 ; '.'
0000000000000812         db  0x20 ; ' '
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x08 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0xdf ; '.'
0000000000000821         db  0x01 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x11 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x19 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0xa0 ; '.'
0000000000000829         db  0x80 ; '.'
000000000000082a         db  0x20 ; ' '
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x04 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x5a ; 'Z'
0000000000000839         db  0x01 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x11 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x19 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0xc0 ; '.'
0000000000000841         db  0x80 ; '.'
0000000000000842         db  0x20 ; ' '
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x08 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0x39 ; '9'
0000000000000851         db  0x00 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x11 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x19 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0x90 ; '.'
0000000000000859         db  0x80 ; '.'
000000000000085a         db  0x20 ; ' '
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x04 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0x868; 0xb1f[ (695 bytes)
        ; File offset : [2152; 2847[ (695 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

0000000000000868         db  0x00 ; '.'
0000000000000869         db  0x6c ; 'l'
000000000000086a         db  0x69 ; 'i'
000000000000086b         db  0x62 ; 'b'
000000000000086c         db  0x63 ; 'c'
000000000000086d         db  0x2e ; '.'
000000000000086e         db  0x73 ; 's'
000000000000086f         db  0x6f ; 'o'
0000000000000870         db  0x2e ; '.'
0000000000000871         db  0x36 ; '6'
0000000000000872         db  0x00 ; '.'
0000000000000873         db  0x66 ; 'f'
0000000000000874         db  0x66 ; 'f'
0000000000000875         db  0x6c ; 'l'
0000000000000876         db  0x75 ; 'u'
0000000000000877         db  0x73 ; 's'
0000000000000878         db  0x68 ; 'h'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x5f ; '_'
000000000000087b         db  0x5f ; '_'
000000000000087c         db  0x70 ; 'p'
000000000000087d         db  0x72 ; 'r'
000000000000087e         db  0x69 ; 'i'
000000000000087f         db  0x6e ; 'n'
0000000000000880         db  0x74 ; 't'
0000000000000881         db  0x66 ; 'f'
0000000000000882         db  0x5f ; '_'
0000000000000883         db  0x63 ; 'c'
0000000000000884         db  0x68 ; 'h'
0000000000000885         db  0x6b ; 'k'
0000000000000886         db  0x00 ; '.'
0000000000000887         db  0x73 ; 's'
0000000000000888         db  0x65 ; 'e'
0000000000000889         db  0x74 ; 't'
000000000000088a         db  0x6c ; 'l'
000000000000088b         db  0x6f ; 'o'
000000000000088c         db  0x63 ; 'c'
000000000000088d         db  0x61 ; 'a'
000000000000088e         db  0x6c ; 'l'
000000000000088f         db  0x65 ; 'e'
0000000000000890         db  0x00 ; '.'
0000000000000891         db  0x6d ; 'm'
0000000000000892         db  0x62 ; 'b'
0000000000000893         db  0x72 ; 'r'
0000000000000894         db  0x74 ; 't'
0000000000000895         db  0x6f ; 'o'
0000000000000896         db  0x77 ; 'w'
0000000000000897         db  0x63 ; 'c'
0000000000000898         db  0x00 ; '.'
0000000000000899         db  0x73 ; 's'
000000000000089a         db  0x74 ; 't'
000000000000089b         db  0x72 ; 'r'
000000000000089c         db  0x6e ; 'n'
000000000000089d         db  0x63 ; 'c'
000000000000089e         db  0x6d ; 'm'
000000000000089f         db  0x70 ; 'p'
00000000000008a0         db  0x00 ; '.'
00000000000008a1         db  0x6f ; 'o'
00000000000008a2         db  0x70 ; 'p'
00000000000008a3         db  0x74 ; 't'
00000000000008a4         db  0x69 ; 'i'
00000000000008a5         db  0x6e ; 'n'
00000000000008a6         db  0x64 ; 'd'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x73 ; 's'
00000000000008a9         db  0x74 ; 't'
00000000000008aa         db  0x72 ; 'r'
00000000000008ab         db  0x72 ; 'r'
00000000000008ac         db  0x63 ; 'c'
00000000000008ad         db  0x68 ; 'h'
00000000000008ae         db  0x72 ; 'r'
00000000000008af         db  0x00 ; '.'
00000000000008b0         db  0x64 ; 'd'
00000000000008b1         db  0x63 ; 'c'
00000000000008b2         db  0x67 ; 'g'
00000000000008b3         db  0x65 ; 'e'
00000000000008b4         db  0x74 ; 't'
00000000000008b5         db  0x74 ; 't'
00000000000008b6         db  0x65 ; 'e'
00000000000008b7         db  0x78 ; 'x'
00000000000008b8         db  0x74 ; 't'
00000000000008b9         db  0x00 ; '.'
00000000000008ba         db  0x65 ; 'e'
00000000000008bb         db  0x72 ; 'r'
00000000000008bc         db  0x72 ; 'r'
00000000000008bd         db  0x6f ; 'o'
00000000000008be         db  0x72 ; 'r'
00000000000008bf         db  0x00 ; '.'
00000000000008c0         db  0x70 ; 'p'
00000000000008c1         db  0x75 ; 'u'
00000000000008c2         db  0x74 ; 't'
00000000000008c3         db  0x73 ; 's'
00000000000008c4         db  0x00 ; '.'
00000000000008c5         db  0x5f ; '_'
00000000000008c6         db  0x5f ; '_'
00000000000008c7         db  0x73 ; 's'
00000000000008c8         db  0x74 ; 't'
00000000000008c9         db  0x61 ; 'a'
00000000000008ca         db  0x63 ; 'c'
00000000000008cb         db  0x6b ; 'k'
00000000000008cc         db  0x5f ; '_'
00000000000008cd         db  0x63 ; 'c'
00000000000008ce         db  0x68 ; 'h'
00000000000008cf         db  0x6b ; 'k'
00000000000008d0         db  0x5f ; '_'
00000000000008d1         db  0x66 ; 'f'
00000000000008d2         db  0x61 ; 'a'
00000000000008d3         db  0x69 ; 'i'
00000000000008d4         db  0x6c ; 'l'
00000000000008d5         db  0x00 ; '.'
00000000000008d6         db  0x69 ; 'i'
00000000000008d7         db  0x73 ; 's'
00000000000008d8         db  0x77 ; 'w'
00000000000008d9         db  0x70 ; 'p'
00000000000008da         db  0x72 ; 'r'
00000000000008db         db  0x69 ; 'i'
00000000000008dc         db  0x6e ; 'n'
00000000000008dd         db  0x74 ; 't'
00000000000008de         db  0x00 ; '.'
00000000000008df         db  0x72 ; 'r'
00000000000008e0         db  0x65 ; 'e'
00000000000008e1         db  0x61 ; 'a'
00000000000008e2         db  0x6c ; 'l'
00000000000008e3         db  0x6c ; 'l'
00000000000008e4         db  0x6f ; 'o'
00000000000008e5         db  0x63 ; 'c'
00000000000008e6         db  0x00 ; '.'
00000000000008e7         db  0x73 ; 's'
00000000000008e8         db  0x74 ; 't'
00000000000008e9         db  0x72 ; 'r'
00000000000008ea         db  0x74 ; 't'
00000000000008eb         db  0x6f ; 'o'
00000000000008ec         db  0x6c ; 'l'
00000000000008ed         db  0x64 ; 'd'
00000000000008ee         db  0x00 ; '.'
00000000000008ef         db  0x61 ; 'a'
00000000000008f0         db  0x62 ; 'b'
00000000000008f1         db  0x6f ; 'o'
00000000000008f2         db  0x72 ; 'r'
00000000000008f3         db  0x74 ; 't'
00000000000008f4         db  0x00 ; '.'
00000000000008f5         db  0x5f ; '_'
00000000000008f6         db  0x65 ; 'e'
00000000000008f7         db  0x78 ; 'x'
00000000000008f8         db  0x69 ; 'i'
00000000000008f9         db  0x74 ; 't'
00000000000008fa         db  0x00 ; '.'
00000000000008fb         db  0x70 ; 'p'
00000000000008fc         db  0x72 ; 'r'
00000000000008fd         db  0x6f ; 'o'
00000000000008fe         db  0x67 ; 'g'
00000000000008ff         db  0x72 ; 'r'
                     aAminvocationna:
0000000000000900         db         "am_invocation_name", 0
0000000000000913         db  0x73 ; 's'
0000000000000914         db  0x74 ; 't'
0000000000000915         db  0x72 ; 'r'
0000000000000916         db  0x74 ; 't'
0000000000000917         db  0x6f ; 'o'
0000000000000918         db  0x64 ; 'd'
0000000000000919         db  0x00 ; '.'
000000000000091a         db  0x73 ; 's'
000000000000091b         db  0x74 ; 't'
000000000000091c         db  0x72 ; 'r'
000000000000091d         db  0x74 ; 't'
000000000000091e         db  0x6f ; 'o'
000000000000091f         db  0x66 ; 'f'
0000000000000920         db  0x00 ; '.'
0000000000000921         db  0x5f ; '_'
0000000000000922         db  0x5f ; '_'
0000000000000923         db  0x63 ; 'c'
0000000000000924         db  0x74 ; 't'
0000000000000925         db  0x79 ; 'y'
0000000000000926         db  0x70 ; 'p'
0000000000000927         db  0x65 ; 'e'
0000000000000928         db  0x5f ; '_'
0000000000000929         db  0x67 ; 'g'
000000000000092a         db  0x65 ; 'e'
000000000000092b         db  0x74 ; 't'
000000000000092c         db  0x5f ; '_'
000000000000092d         db  0x6d ; 'm'
000000000000092e         db  0x62 ; 'b'
000000000000092f         db  0x5f ; '_'
0000000000000930         db  0x63 ; 'c'
0000000000000931         db  0x75 ; 'u'
0000000000000932         db  0x72 ; 'r'
0000000000000933         db  0x5f ; '_'
0000000000000934         db  0x6d ; 'm'
0000000000000935         db  0x61 ; 'a'
0000000000000936         db  0x78 ; 'x'
0000000000000937         db  0x00 ; '.'
0000000000000938         db  0x63 ; 'c'
0000000000000939         db  0x61 ; 'a'
000000000000093a         db  0x6c ; 'l'
000000000000093b         db  0x6c ; 'l'
000000000000093c         db  0x6f ; 'o'
000000000000093d         db  0x63 ; 'c'
000000000000093e         db  0x00 ; '.'
000000000000093f         db  0x73 ; 's'
0000000000000940         db  0x74 ; 't'
0000000000000941         db  0x72 ; 'r'
0000000000000942         db  0x6c ; 'l'
0000000000000943         db  0x65 ; 'e'
0000000000000944         db  0x6e ; 'n'
0000000000000945         db  0x00 ; '.'
0000000000000946         db  0x6d ; 'm'
0000000000000947         db  0x65 ; 'e'
0000000000000948         db  0x6d ; 'm'
0000000000000949         db  0x73 ; 's'
000000000000094a         db  0x65 ; 'e'
000000000000094b         db  0x74 ; 't'
000000000000094c         db  0x00 ; '.'
000000000000094d         db  0x5f ; '_'
000000000000094e         db  0x5f ; '_'
000000000000094f         db  0x65 ; 'e'
0000000000000950         db  0x72 ; 'r'
0000000000000951         db  0x72 ; 'r'
0000000000000952         db  0x6e ; 'n'
0000000000000953         db  0x6f ; 'o'
0000000000000954         db  0x5f ; '_'
0000000000000955         db  0x6c ; 'l'
0000000000000956         db  0x6f ; 'o'
0000000000000957         db  0x63 ; 'c'
0000000000000958         db  0x61 ; 'a'
0000000000000959         db  0x74 ; 't'
000000000000095a         db  0x69 ; 'i'
000000000000095b         db  0x6f ; 'o'
000000000000095c         db  0x6e ; 'n'
000000000000095d         db  0x00 ; '.'
000000000000095e         db  0x6d ; 'm'
000000000000095f         db  0x65 ; 'e'
0000000000000960         db  0x6d ; 'm'
0000000000000961         db  0x63 ; 'c'
0000000000000962         db  0x6d ; 'm'
0000000000000963         db  0x70 ; 'p'
0000000000000964         db  0x00 ; '.'
0000000000000965         db  0x5f ; '_'
0000000000000966         db  0x5f ; '_'
0000000000000967         db  0x66 ; 'f'
0000000000000968         db  0x70 ; 'p'
0000000000000969         db  0x72 ; 'r'
000000000000096a         db  0x69 ; 'i'
000000000000096b         db  0x6e ; 'n'
000000000000096c         db  0x74 ; 't'
000000000000096d         db  0x66 ; 'f'
000000000000096e         db  0x5f ; '_'
000000000000096f         db  0x63 ; 'c'
0000000000000970         db  0x68 ; 'h'
0000000000000971         db  0x6b ; 'k'
0000000000000972         db  0x00 ; '.'
0000000000000973         db  0x73 ; 's'
0000000000000974         db  0x74 ; 't'
0000000000000975         db  0x64 ; 'd'
0000000000000976         db  0x6f ; 'o'
0000000000000977         db  0x75 ; 'u'
0000000000000978         db  0x74 ; 't'
0000000000000979         db  0x00 ; '.'
000000000000097a         db  0x6c ; 'l'
000000000000097b         db  0x73 ; 's'
000000000000097c         db  0x65 ; 'e'
000000000000097d         db  0x65 ; 'e'
000000000000097e         db  0x6b ; 'k'
000000000000097f         db  0x00 ; '.'
0000000000000980         db  0x6d ; 'm'
0000000000000981         db  0x65 ; 'e'
0000000000000982         db  0x6d ; 'm'
0000000000000983         db  0x63 ; 'c'
0000000000000984         db  0x70 ; 'p'
0000000000000985         db  0x79 ; 'y'
0000000000000986         db  0x00 ; '.'
0000000000000987         db  0x66 ; 'f'
0000000000000988         db  0x63 ; 'c'
0000000000000989         db  0x6c ; 'l'
000000000000098a         db  0x6f ; 'o'
000000000000098b         db  0x73 ; 's'
000000000000098c         db  0x65 ; 'e'
000000000000098d         db  0x00 ; '.'
000000000000098e         db  0x6d ; 'm'
000000000000098f         db  0x61 ; 'a'
0000000000000990         db  0x6c ; 'l'
0000000000000991         db  0x6c ; 'l'
0000000000000992         db  0x6f ; 'o'
0000000000000993         db  0x63 ; 'c'
0000000000000994         db  0x00 ; '.'
0000000000000995         db  0x6d ; 'm'
0000000000000996         db  0x62 ; 'b'
0000000000000997         db  0x73 ; 's'
0000000000000998         db  0x69 ; 'i'
0000000000000999         db  0x6e ; 'n'
000000000000099a         db  0x69 ; 'i'
000000000000099b         db  0x74 ; 't'
000000000000099c         db  0x00 ; '.'
000000000000099d         db  0x6e ; 'n'
000000000000099e         db  0x6c ; 'l'
000000000000099f         db  0x5f ; '_'
00000000000009a0         db  0x6c ; 'l'
00000000000009a1         db  0x61 ; 'a'
00000000000009a2         db  0x6e ; 'n'
00000000000009a3         db  0x67 ; 'g'
00000000000009a4         db  0x69 ; 'i'
00000000000009a5         db  0x6e ; 'n'
00000000000009a6         db  0x66 ; 'f'
00000000000009a7         db  0x6f ; 'o'
00000000000009a8         db  0x00 ; '.'
00000000000009a9         db  0x5f ; '_'
00000000000009aa         db  0x5f ; '_'
00000000000009ab         db  0x63 ; 'c'
00000000000009ac         db  0x74 ; 't'
00000000000009ad         db  0x79 ; 'y'
00000000000009ae         db  0x70 ; 'p'
00000000000009af         db  0x65 ; 'e'
00000000000009b0         db  0x5f ; '_'
00000000000009b1         db  0x62 ; 'b'
00000000000009b2         db  0x5f ; '_'
00000000000009b3         db  0x6c ; 'l'
00000000000009b4         db  0x6f ; 'o'
00000000000009b5         db  0x63 ; 'c'
00000000000009b6         db  0x00 ; '.'
00000000000009b7         db  0x5f ; '_'
00000000000009b8         db  0x5f ; '_'
00000000000009b9         db  0x66 ; 'f'
00000000000009ba         db  0x72 ; 'r'
00000000000009bb         db  0x65 ; 'e'
00000000000009bc         db  0x61 ; 'a'
00000000000009bd         db  0x64 ; 'd'
00000000000009be         db  0x69 ; 'i'
00000000000009bf         db  0x6e ; 'n'
00000000000009c0         db  0x67 ; 'g'
00000000000009c1         db  0x00 ; '.'
00000000000009c2         db  0x73 ; 's'
00000000000009c3         db  0x74 ; 't'
00000000000009c4         db  0x64 ; 'd'
00000000000009c5         db  0x65 ; 'e'
00000000000009c6         db  0x72 ; 'r'
00000000000009c7         db  0x72 ; 'r'
00000000000009c8         db  0x00 ; '.'
00000000000009c9         db  0x5f ; '_'
00000000000009ca         db  0x5f ; '_'
00000000000009cb         db  0x73 ; 's'
00000000000009cc         db  0x6e ; 'n'
00000000000009cd         db  0x70 ; 'p'
00000000000009ce         db  0x72 ; 'r'
00000000000009cf         db  0x69 ; 'i'
00000000000009d0         db  0x6e ; 'n'
00000000000009d1         db  0x74 ; 't'
00000000000009d2         db  0x66 ; 'f'
00000000000009d3         db  0x5f ; '_'
00000000000009d4         db  0x63 ; 'c'
00000000000009d5         db  0x68 ; 'h'
00000000000009d6         db  0x6b ; 'k'
00000000000009d7         db  0x00 ; '.'
00000000000009d8         db  0x67 ; 'g'
00000000000009d9         db  0x65 ; 'e'
00000000000009da         db  0x74 ; 't'
00000000000009db         db  0x6f ; 'o'
00000000000009dc         db  0x70 ; 'p'
00000000000009dd         db  0x74 ; 't'
00000000000009de         db  0x5f ; '_'
00000000000009df         db  0x6c ; 'l'
00000000000009e0         db  0x6f ; 'o'
00000000000009e1         db  0x6e ; 'n'
00000000000009e2         db  0x67 ; 'g'
00000000000009e3         db  0x00 ; '.'
00000000000009e4         db  0x66 ; 'f'
00000000000009e5         db  0x69 ; 'i'
00000000000009e6         db  0x6c ; 'l'
00000000000009e7         db  0x65 ; 'e'
00000000000009e8         db  0x6e ; 'n'
00000000000009e9         db  0x6f ; 'o'
00000000000009ea         db  0x00 ; '.'
00000000000009eb         db  0x66 ; 'f'
00000000000009ec         db  0x77 ; 'w'
00000000000009ed         db  0x72 ; 'r'
00000000000009ee         db  0x69 ; 'i'
00000000000009ef         db  0x74 ; 't'
00000000000009f0         db  0x65 ; 'e'
00000000000009f1         db  0x00 ; '.'
00000000000009f2         db  0x5f ; '_'
00000000000009f3         db  0x5f ; '_'
00000000000009f4         db  0x66 ; 'f'
00000000000009f5         db  0x70 ; 'p'
00000000000009f6         db  0x65 ; 'e'
00000000000009f7         db  0x6e ; 'n'
00000000000009f8         db  0x64 ; 'd'
00000000000009f9         db  0x69 ; 'i'
00000000000009fa         db  0x6e ; 'n'
00000000000009fb         db  0x67 ; 'g'
00000000000009fc         db  0x00 ; '.'
00000000000009fd         db  0x70 ; 'p'
00000000000009fe         db  0x72 ; 'r'
00000000000009ff         db  0x6f ; 'o'
                     aGraminvocation:
0000000000000a00         db         "gram_invocation_short_name", 0
0000000000000a1b         db  0x5f ; '_'
0000000000000a1c         db  0x5f ; '_'
0000000000000a1d         db  0x63 ; 'c'
0000000000000a1e         db  0x78 ; 'x'
0000000000000a1f         db  0x61 ; 'a'
0000000000000a20         db  0x5f ; '_'
0000000000000a21         db  0x66 ; 'f'
0000000000000a22         db  0x69 ; 'i'
0000000000000a23         db  0x6e ; 'n'
0000000000000a24         db  0x61 ; 'a'
0000000000000a25         db  0x6c ; 'l'
0000000000000a26         db  0x69 ; 'i'
0000000000000a27         db  0x7a ; 'z'
0000000000000a28         db  0x65 ; 'e'
0000000000000a29         db  0x00 ; '.'
0000000000000a2a         db  0x5f ; '_'
0000000000000a2b         db  0x5f ; '_'
0000000000000a2c         db  0x73 ; 's'
0000000000000a2d         db  0x70 ; 'p'
0000000000000a2e         db  0x72 ; 'r'
0000000000000a2f         db  0x69 ; 'i'
0000000000000a30         db  0x6e ; 'n'
0000000000000a31         db  0x74 ; 't'
0000000000000a32         db  0x66 ; 'f'
0000000000000a33         db  0x5f ; '_'
0000000000000a34         db  0x63 ; 'c'
0000000000000a35         db  0x68 ; 'h'
0000000000000a36         db  0x6b ; 'k'
0000000000000a37         db  0x00 ; '.'
0000000000000a38         db  0x62 ; 'b'
0000000000000a39         db  0x69 ; 'i'
0000000000000a3a         db  0x6e ; 'n'
0000000000000a3b         db  0x64 ; 'd'
0000000000000a3c         db  0x74 ; 't'
0000000000000a3d         db  0x65 ; 'e'
0000000000000a3e         db  0x78 ; 'x'
0000000000000a3f         db  0x74 ; 't'
0000000000000a40         db  0x64 ; 'd'
0000000000000a41         db  0x6f ; 'o'
0000000000000a42         db  0x6d ; 'm'
0000000000000a43         db  0x61 ; 'a'
0000000000000a44         db  0x69 ; 'i'
0000000000000a45         db  0x6e ; 'n'
0000000000000a46         db  0x00 ; '.'
0000000000000a47         db  0x6f ; 'o'
0000000000000a48         db  0x70 ; 'p'
0000000000000a49         db  0x74 ; 't'
0000000000000a4a         db  0x65 ; 'e'
0000000000000a4b         db  0x72 ; 'r'
0000000000000a4c         db  0x72 ; 'r'
0000000000000a4d         db  0x00 ; '.'
0000000000000a4e         db  0x5f ; '_'
0000000000000a4f         db  0x5f ; '_'
0000000000000a50         db  0x6c ; 'l'
0000000000000a51         db  0x69 ; 'i'
0000000000000a52         db  0x62 ; 'b'
0000000000000a53         db  0x63 ; 'c'
0000000000000a54         db  0x5f ; '_'
0000000000000a55         db  0x73 ; 's'
0000000000000a56         db  0x74 ; 't'
0000000000000a57         db  0x61 ; 'a'
0000000000000a58         db  0x72 ; 'r'
0000000000000a59         db  0x74 ; 't'
0000000000000a5a         db  0x5f ; '_'
0000000000000a5b         db  0x6d ; 'm'
0000000000000a5c         db  0x61 ; 'a'
0000000000000a5d         db  0x69 ; 'i'
0000000000000a5e         db  0x6e ; 'n'
0000000000000a5f         db  0x00 ; '.'
0000000000000a60         db  0x66 ; 'f'
0000000000000a61         db  0x73 ; 's'
0000000000000a62         db  0x65 ; 'e'
0000000000000a63         db  0x65 ; 'e'
0000000000000a64         db  0x6b ; 'k'
0000000000000a65         db  0x6f ; 'o'
0000000000000a66         db  0x00 ; '.'
0000000000000a67         db  0x66 ; 'f'
0000000000000a68         db  0x70 ; 'p'
0000000000000a69         db  0x75 ; 'u'
0000000000000a6a         db  0x74 ; 't'
0000000000000a6b         db  0x73 ; 's'
0000000000000a6c         db  0x5f ; '_'
0000000000000a6d         db  0x75 ; 'u'
0000000000000a6e         db  0x6e ; 'n'
0000000000000a6f         db  0x6c ; 'l'
0000000000000a70         db  0x6f ; 'o'
0000000000000a71         db  0x63 ; 'c'
0000000000000a72         db  0x6b ; 'k'
0000000000000a73         db  0x65 ; 'e'
0000000000000a74         db  0x64 ; 'd'
0000000000000a75         db  0x00 ; '.'
0000000000000a76         db  0x66 ; 'f'
0000000000000a77         db  0x72 ; 'r'
0000000000000a78         db  0x65 ; 'e'
0000000000000a79         db  0x65 ; 'e'
0000000000000a7a         db  0x00 ; '.'
0000000000000a7b         db  0x5f ; '_'
0000000000000a7c         db  0x5f ; '_'
0000000000000a7d         db  0x70 ; 'p'
0000000000000a7e         db  0x72 ; 'r'
0000000000000a7f         db  0x6f ; 'o'
0000000000000a80         db  0x67 ; 'g'
0000000000000a81         db  0x6e ; 'n'
0000000000000a82         db  0x61 ; 'a'
0000000000000a83         db  0x6d ; 'm'
0000000000000a84         db  0x65 ; 'e'
0000000000000a85         db  0x00 ; '.'
0000000000000a86         db  0x5f ; '_'
0000000000000a87         db  0x5f ; '_'
0000000000000a88         db  0x70 ; 'p'
0000000000000a89         db  0x72 ; 'r'
0000000000000a8a         db  0x6f ; 'o'
0000000000000a8b         db  0x67 ; 'g'
0000000000000a8c         db  0x6e ; 'n'
0000000000000a8d         db  0x61 ; 'a'
0000000000000a8e         db  0x6d ; 'm'
0000000000000a8f         db  0x65 ; 'e'
0000000000000a90         db  0x5f ; '_'
0000000000000a91         db  0x66 ; 'f'
0000000000000a92         db  0x75 ; 'u'
0000000000000a93         db  0x6c ; 'l'
0000000000000a94         db  0x6c ; 'l'
0000000000000a95         db  0x00 ; '.'
0000000000000a96         db  0x5f ; '_'
0000000000000a97         db  0x5f ; '_'
0000000000000a98         db  0x63 ; 'c'
0000000000000a99         db  0x78 ; 'x'
0000000000000a9a         db  0x61 ; 'a'
0000000000000a9b         db  0x5f ; '_'
0000000000000a9c         db  0x61 ; 'a'
0000000000000a9d         db  0x74 ; 't'
0000000000000a9e         db  0x65 ; 'e'
0000000000000a9f         db  0x78 ; 'x'
0000000000000aa0         db  0x69 ; 'i'
0000000000000aa1         db  0x74 ; 't'
0000000000000aa2         db  0x00 ; '.'
0000000000000aa3         db  0x47 ; 'G'
0000000000000aa4         db  0x4c ; 'L'
0000000000000aa5         db  0x49 ; 'I'
0000000000000aa6         db  0x42 ; 'B'
0000000000000aa7         db  0x43 ; 'C'
0000000000000aa8         db  0x5f ; '_'
0000000000000aa9         db  0x32 ; '2'
0000000000000aaa         db  0x2e ; '.'
0000000000000aab         db  0x33 ; '3'
0000000000000aac         db  0x00 ; '.'
0000000000000aad         db  0x47 ; 'G'
0000000000000aae         db  0x4c ; 'L'
0000000000000aaf         db  0x49 ; 'I'
0000000000000ab0         db  0x42 ; 'B'
0000000000000ab1         db  0x43 ; 'C'
0000000000000ab2         db  0x5f ; '_'
0000000000000ab3         db  0x32 ; '2'
0000000000000ab4         db  0x2e ; '.'
0000000000000ab5         db  0x31 ; '1'
0000000000000ab6         db  0x34 ; '4'
0000000000000ab7         db  0x00 ; '.'
0000000000000ab8         db  0x47 ; 'G'
0000000000000ab9         db  0x4c ; 'L'
0000000000000aba         db  0x49 ; 'I'
0000000000000abb         db  0x42 ; 'B'
0000000000000abc         db  0x43 ; 'C'
0000000000000abd         db  0x5f ; '_'
0000000000000abe         db  0x32 ; '2'
0000000000000abf         db  0x2e ; '.'
0000000000000ac0         db  0x34 ; '4'
0000000000000ac1         db  0x00 ; '.'
0000000000000ac2         db  0x47 ; 'G'
0000000000000ac3         db  0x4c ; 'L'
0000000000000ac4         db  0x49 ; 'I'
0000000000000ac5         db  0x42 ; 'B'
0000000000000ac6         db  0x43 ; 'C'
0000000000000ac7         db  0x5f ; '_'
0000000000000ac8         db  0x32 ; '2'
0000000000000ac9         db  0x2e ; '.'
0000000000000aca         db  0x33 ; '3'
0000000000000acb         db  0x2e ; '.'
0000000000000acc         db  0x34 ; '4'
0000000000000acd         db  0x00 ; '.'
0000000000000ace         db  0x47 ; 'G'
0000000000000acf         db  0x4c ; 'L'
0000000000000ad0         db  0x49 ; 'I'
0000000000000ad1         db  0x42 ; 'B'
0000000000000ad2         db  0x43 ; 'C'
0000000000000ad3         db  0x5f ; '_'
0000000000000ad4         db  0x32 ; '2'
0000000000000ad5         db  0x2e ; '.'
0000000000000ad6         db  0x32 ; '2'
0000000000000ad7         db  0x2e ; '.'
0000000000000ad8         db  0x35 ; '5'
0000000000000ad9         db  0x00 ; '.'
0000000000000ada         db  0x5f ; '_'
0000000000000adb         db  0x49 ; 'I'
0000000000000adc         db  0x54 ; 'T'
0000000000000add         db  0x4d ; 'M'
0000000000000ade         db  0x5f ; '_'
0000000000000adf         db  0x64 ; 'd'
0000000000000ae0         db  0x65 ; 'e'
0000000000000ae1         db  0x72 ; 'r'
0000000000000ae2         db  0x65 ; 'e'
0000000000000ae3         db  0x67 ; 'g'
0000000000000ae4         db  0x69 ; 'i'
0000000000000ae5         db  0x73 ; 's'
0000000000000ae6         db  0x74 ; 't'
0000000000000ae7         db  0x65 ; 'e'
0000000000000ae8         db  0x72 ; 'r'
0000000000000ae9         db  0x54 ; 'T'
0000000000000aea         db  0x4d ; 'M'
0000000000000aeb         db  0x43 ; 'C'
0000000000000aec         db  0x6c ; 'l'
0000000000000aed         db  0x6f ; 'o'
0000000000000aee         db  0x6e ; 'n'
0000000000000aef         db  0x65 ; 'e'
0000000000000af0         db  0x54 ; 'T'
0000000000000af1         db  0x61 ; 'a'
0000000000000af2         db  0x62 ; 'b'
0000000000000af3         db  0x6c ; 'l'
0000000000000af4         db  0x65 ; 'e'
0000000000000af5         db  0x00 ; '.'
0000000000000af6         db  0x5f ; '_'
0000000000000af7         db  0x5f ; '_'
0000000000000af8         db  0x67 ; 'g'
0000000000000af9         db  0x6d ; 'm'
0000000000000afa         db  0x6f ; 'o'
0000000000000afb         db  0x6e ; 'n'
0000000000000afc         db  0x5f ; '_'
0000000000000afd         db  0x73 ; 's'
0000000000000afe         db  0x74 ; 't'
0000000000000aff         db  0x61 ; 'a'
                     aRt:
0000000000000b00         db         "rt__", 0
0000000000000b05         db  0x5f ; '_'
0000000000000b06         db  0x49 ; 'I'
0000000000000b07         db  0x54 ; 'T'
0000000000000b08         db  0x4d ; 'M'
0000000000000b09         db  0x5f ; '_'
0000000000000b0a         db  0x72 ; 'r'
0000000000000b0b         db  0x65 ; 'e'
0000000000000b0c         db  0x67 ; 'g'
0000000000000b0d         db  0x69 ; 'i'
0000000000000b0e         db  0x73 ; 's'
0000000000000b0f         db  0x74 ; 't'
0000000000000b10         db  0x65 ; 'e'
0000000000000b11         db  0x72 ; 'r'
0000000000000b12         db  0x54 ; 'T'
0000000000000b13         db  0x4d ; 'M'
0000000000000b14         db  0x43 ; 'C'
0000000000000b15         db  0x6c ; 'l'
0000000000000b16         db  0x6f ; 'o'
0000000000000b17         db  0x6e ; 'n'
0000000000000b18         db  0x65 ; 'e'
0000000000000b19         db  0x54 ; 'T'
0000000000000b1a         db  0x61 ; 'a'
0000000000000b1b         db  0x62 ; 'b'
0000000000000b1c         db  0x6c ; 'l'
0000000000000b1d         db  0x65 ; 'e'
0000000000000b1e         db  0x00 ; '.'
0000000000000b1f         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xb20; 0xb96[ (118 bytes)
        ; File offset : [2848; 2966[ (118 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000b20         db  0x00 ; '.'
0000000000000b21         db  0x00 ; '.'
0000000000000b22         db  0x03 ; '.'
0000000000000b23         db  0x00 ; '.'
0000000000000b24         db  0x02 ; '.'
0000000000000b25         db  0x00 ; '.'
0000000000000b26         db  0x02 ; '.'
0000000000000b27         db  0x00 ; '.'
0000000000000b28         db  0x02 ; '.'
0000000000000b29         db  0x00 ; '.'
0000000000000b2a         db  0x02 ; '.'
0000000000000b2b         db  0x00 ; '.'
0000000000000b2c         db  0x00 ; '.'
0000000000000b2d         db  0x00 ; '.'
0000000000000b2e         db  0x02 ; '.'
0000000000000b2f         db  0x00 ; '.'
0000000000000b30         db  0x02 ; '.'
0000000000000b31         db  0x00 ; '.'
0000000000000b32         db  0x02 ; '.'
0000000000000b33         db  0x00 ; '.'
0000000000000b34         db  0x02 ; '.'
0000000000000b35         db  0x00 ; '.'
0000000000000b36         db  0x02 ; '.'
0000000000000b37         db  0x00 ; '.'
0000000000000b38         db  0x02 ; '.'
0000000000000b39         db  0x00 ; '.'
0000000000000b3a         db  0x02 ; '.'
0000000000000b3b         db  0x00 ; '.'
0000000000000b3c         db  0x02 ; '.'
0000000000000b3d         db  0x00 ; '.'
0000000000000b3e         db  0x02 ; '.'
0000000000000b3f         db  0x00 ; '.'
0000000000000b40         db  0x02 ; '.'
0000000000000b41         db  0x00 ; '.'
0000000000000b42         db  0x04 ; '.'
0000000000000b43         db  0x00 ; '.'
0000000000000b44         db  0x02 ; '.'
0000000000000b45         db  0x00 ; '.'
0000000000000b46         db  0x02 ; '.'
0000000000000b47         db  0x00 ; '.'
0000000000000b48         db  0x02 ; '.'
0000000000000b49         db  0x00 ; '.'
0000000000000b4a         db  0x02 ; '.'
0000000000000b4b         db  0x00 ; '.'
0000000000000b4c         db  0x02 ; '.'
0000000000000b4d         db  0x00 ; '.'
0000000000000b4e         db  0x02 ; '.'
0000000000000b4f         db  0x00 ; '.'
0000000000000b50         db  0x02 ; '.'
0000000000000b51         db  0x00 ; '.'
0000000000000b52         db  0x02 ; '.'
0000000000000b53         db  0x00 ; '.'
0000000000000b54         db  0x02 ; '.'
0000000000000b55         db  0x00 ; '.'
0000000000000b56         db  0x02 ; '.'
0000000000000b57         db  0x00 ; '.'
0000000000000b58         db  0x00 ; '.'
0000000000000b59         db  0x00 ; '.'
0000000000000b5a         db  0x05 ; '.'
0000000000000b5b         db  0x00 ; '.'
0000000000000b5c         db  0x02 ; '.'
0000000000000b5d         db  0x00 ; '.'
0000000000000b5e         db  0x02 ; '.'
0000000000000b5f         db  0x00 ; '.'
0000000000000b60         db  0x02 ; '.'
0000000000000b61         db  0x00 ; '.'
0000000000000b62         db  0x02 ; '.'
0000000000000b63         db  0x00 ; '.'
0000000000000b64         db  0x02 ; '.'
0000000000000b65         db  0x00 ; '.'
0000000000000b66         db  0x02 ; '.'
0000000000000b67         db  0x00 ; '.'
0000000000000b68         db  0x02 ; '.'
0000000000000b69         db  0x00 ; '.'
0000000000000b6a         db  0x03 ; '.'
0000000000000b6b         db  0x00 ; '.'
0000000000000b6c         db  0x02 ; '.'
0000000000000b6d         db  0x00 ; '.'
0000000000000b6e         db  0x02 ; '.'
0000000000000b6f         db  0x00 ; '.'
0000000000000b70         db  0x02 ; '.'
0000000000000b71         db  0x00 ; '.'
0000000000000b72         db  0x02 ; '.'
0000000000000b73         db  0x00 ; '.'
0000000000000b74         db  0x02 ; '.'
0000000000000b75         db  0x00 ; '.'
0000000000000b76         db  0x02 ; '.'
0000000000000b77         db  0x00 ; '.'
0000000000000b78         db  0x03 ; '.'
0000000000000b79         db  0x00 ; '.'
0000000000000b7a         db  0x00 ; '.'
0000000000000b7b         db  0x00 ; '.'
0000000000000b7c         db  0x02 ; '.'
0000000000000b7d         db  0x00 ; '.'
0000000000000b7e         db  0x02 ; '.'
0000000000000b7f         db  0x00 ; '.'
0000000000000b80         db  0x02 ; '.'
0000000000000b81         db  0x00 ; '.'
0000000000000b82         db  0x06 ; '.'
0000000000000b83         db  0x00 ; '.'
0000000000000b84         db  0x03 ; '.'
0000000000000b85         db  0x00 ; '.'
0000000000000b86         db  0x02 ; '.'
0000000000000b87         db  0x00 ; '.'
0000000000000b88         db  0x02 ; '.'
0000000000000b89         db  0x00 ; '.'
0000000000000b8a         db  0x02 ; '.'
0000000000000b8b         db  0x00 ; '.'
0000000000000b8c         db  0x02 ; '.'
0000000000000b8d         db  0x00 ; '.'
0000000000000b8e         db  0x02 ; '.'
0000000000000b8f         db  0x00 ; '.'
0000000000000b90         db  0x02 ; '.'
0000000000000b91         db  0x00 ; '.'
0000000000000b92         db  0x02 ; '.'
0000000000000b93         db  0x00 ; '.'
0000000000000b94         db  0x02 ; '.'
0000000000000b95         db  0x00 ; '.'
0000000000000b96         db  0x00 ; '.'
0000000000000b97         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xb98; 0xbf8[ (96 bytes)
        ; File offset : [2968; 3064[ (96 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000b98         db  0x01 ; '.'
0000000000000b99         db  0x00 ; '.'
0000000000000b9a         db  0x05 ; '.'
0000000000000b9b         db  0x00 ; '.'
0000000000000b9c         db  0x01 ; '.'
0000000000000b9d         db  0x00 ; '.'
0000000000000b9e         db  0x00 ; '.'
0000000000000b9f         db  0x00 ; '.'
0000000000000ba0         db  0x10 ; '.'
0000000000000ba1         db  0x00 ; '.'
0000000000000ba2         db  0x00 ; '.'
0000000000000ba3         db  0x00 ; '.'
0000000000000ba4         db  0x00 ; '.'
0000000000000ba5         db  0x00 ; '.'
0000000000000ba6         db  0x00 ; '.'
0000000000000ba7         db  0x00 ; '.'
0000000000000ba8         db  0x13 ; '.'
0000000000000ba9         db  0x69 ; 'i'
0000000000000baa         db  0x69 ; 'i'
0000000000000bab         db  0x0d ; '.'
0000000000000bac         db  0x00 ; '.'
0000000000000bad         db  0x00 ; '.'
0000000000000bae         db  0x06 ; '.'
0000000000000baf         db  0x00 ; '.'
0000000000000bb0         db  0x3b ; ';'
0000000000000bb1         db  0x02 ; '.'
0000000000000bb2         db  0x00 ; '.'
0000000000000bb3         db  0x00 ; '.'
0000000000000bb4         db  0x10 ; '.'
0000000000000bb5         db  0x00 ; '.'
0000000000000bb6         db  0x00 ; '.'
0000000000000bb7         db  0x00 ; '.'
0000000000000bb8         db  0x94 ; '.'
0000000000000bb9         db  0x91 ; '.'
0000000000000bba         db  0x96 ; '.'
0000000000000bbb         db  0x06 ; '.'
0000000000000bbc         db  0x00 ; '.'
0000000000000bbd         db  0x00 ; '.'
0000000000000bbe         db  0x05 ; '.'
0000000000000bbf         db  0x00 ; '.'
0000000000000bc0         db  0x45 ; 'E'
0000000000000bc1         db  0x02 ; '.'
0000000000000bc2         db  0x00 ; '.'
0000000000000bc3         db  0x00 ; '.'
0000000000000bc4         db  0x10 ; '.'
0000000000000bc5         db  0x00 ; '.'
0000000000000bc6         db  0x00 ; '.'
0000000000000bc7         db  0x00 ; '.'
0000000000000bc8         db  0x14 ; '.'
0000000000000bc9         db  0x69 ; 'i'
0000000000000bca         db  0x69 ; 'i'
0000000000000bcb         db  0x0d ; '.'
0000000000000bcc         db  0x00 ; '.'
0000000000000bcd         db  0x00 ; '.'
0000000000000bce         db  0x04 ; '.'
0000000000000bcf         db  0x00 ; '.'
0000000000000bd0         db  0x50 ; 'P'
0000000000000bd1         db  0x02 ; '.'
0000000000000bd2         db  0x00 ; '.'
0000000000000bd3         db  0x00 ; '.'
0000000000000bd4         db  0x10 ; '.'
0000000000000bd5         db  0x00 ; '.'
0000000000000bd6         db  0x00 ; '.'
0000000000000bd7         db  0x00 ; '.'
0000000000000bd8         db  0x74 ; 't'
0000000000000bd9         db  0x19 ; '.'
0000000000000bda         db  0x69 ; 'i'
0000000000000bdb         db  0x09 ; '.'
0000000000000bdc         db  0x00 ; '.'
0000000000000bdd         db  0x00 ; '.'
0000000000000bde         db  0x03 ; '.'
0000000000000bdf         db  0x00 ; '.'
0000000000000be0         db  0x5a ; 'Z'
0000000000000be1         db  0x02 ; '.'
0000000000000be2         db  0x00 ; '.'
0000000000000be3         db  0x00 ; '.'
0000000000000be4         db  0x10 ; '.'
0000000000000be5         db  0x00 ; '.'
0000000000000be6         db  0x00 ; '.'
0000000000000be7         db  0x00 ; '.'
0000000000000be8         db  0x75 ; 'u'
0000000000000be9         db  0x1a ; '.'
0000000000000bea         db  0x69 ; 'i'
0000000000000beb         db  0x09 ; '.'
0000000000000bec         db  0x00 ; '.'
0000000000000bed         db  0x00 ; '.'
0000000000000bee         db  0x02 ; '.'
0000000000000bef         db  0x00 ; '.'
0000000000000bf0         db  0x66 ; 'f'
0000000000000bf1         db  0x02 ; '.'
0000000000000bf2         db  0x00 ; '.'
0000000000000bf3         db  0x00 ; '.'
0000000000000bf4         db  0x00 ; '.'
0000000000000bf5         db  0x00 ; '.'
0000000000000bf6         db  0x00 ; '.'
0000000000000bf7         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xbf8; 0xe98[ (672 bytes)
        ; File offset : [3064; 3736[ (672 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000bf8         db  0x90 ; '.'
0000000000000bf9         db  0x7b ; '{'
0000000000000bfa         db  0x20 ; ' '
0000000000000bfb         db  0x00 ; '.'
0000000000000bfc         db  0x00 ; '.'
0000000000000bfd         db  0x00 ; '.'
0000000000000bfe         db  0x00 ; '.'
0000000000000bff         db  0x00 ; '.'
0000000000000c00         db  0x08 ; '.'
0000000000000c01         db  0x00 ; '.'
0000000000000c02         db  0x00 ; '.'
0000000000000c03         db  0x00 ; '.'
0000000000000c04         db  0x00 ; '.'
0000000000000c05         db  0x00 ; '.'
0000000000000c06         db  0x00 ; '.'
0000000000000c07         db  0x00 ; '.'
0000000000000c08         db  0x90 ; '.'
0000000000000c09         db  0x21 ; '!'
0000000000000c0a         db  0x00 ; '.'
0000000000000c0b         db  0x00 ; '.'
0000000000000c0c         db  0x00 ; '.'
0000000000000c0d         db  0x00 ; '.'
0000000000000c0e         db  0x00 ; '.'
0000000000000c0f         db  0x00 ; '.'
0000000000000c10         db  0x98 ; '.'
0000000000000c11         db  0x7b ; '{'
0000000000000c12         db  0x20 ; ' '
0000000000000c13         db  0x00 ; '.'
0000000000000c14         db  0x00 ; '.'
0000000000000c15         db  0x00 ; '.'
0000000000000c16         db  0x00 ; '.'
0000000000000c17         db  0x00 ; '.'
0000000000000c18         db  0x08 ; '.'
0000000000000c19         db  0x00 ; '.'
0000000000000c1a         db  0x00 ; '.'
0000000000000c1b         db  0x00 ; '.'
0000000000000c1c         db  0x00 ; '.'
0000000000000c1d         db  0x00 ; '.'
0000000000000c1e         db  0x00 ; '.'
0000000000000c1f         db  0x00 ; '.'
0000000000000c20         db  0x50 ; 'P'
0000000000000c21         db  0x21 ; '!'
0000000000000c22         db  0x00 ; '.'
0000000000000c23         db  0x00 ; '.'
0000000000000c24         db  0x00 ; '.'
0000000000000c25         db  0x00 ; '.'
0000000000000c26         db  0x00 ; '.'
0000000000000c27         db  0x00 ; '.'
0000000000000c28         db  0xa0 ; '.'
0000000000000c29         db  0x7b ; '{'
0000000000000c2a         db  0x20 ; ' '
0000000000000c2b         db  0x00 ; '.'
0000000000000c2c         db  0x00 ; '.'
0000000000000c2d         db  0x00 ; '.'
0000000000000c2e         db  0x00 ; '.'
0000000000000c2f         db  0x00 ; '.'
0000000000000c30         db  0x08 ; '.'
0000000000000c31         db  0x00 ; '.'
0000000000000c32         db  0x00 ; '.'
0000000000000c33         db  0x00 ; '.'
0000000000000c34         db  0x00 ; '.'
0000000000000c35         db  0x00 ; '.'
0000000000000c36         db  0x00 ; '.'
0000000000000c37         db  0x00 ; '.'
0000000000000c38         db  0xc2 ; '.'
0000000000000c39         db  0x5c ; '\'
0000000000000c3a         db  0x00 ; '.'
0000000000000c3b         db  0x00 ; '.'
0000000000000c3c         db  0x00 ; '.'
0000000000000c3d         db  0x00 ; '.'
0000000000000c3e         db  0x00 ; '.'
0000000000000c3f         db  0x00 ; '.'
0000000000000c40         db  0xc0 ; '.'
0000000000000c41         db  0x7b ; '{'
0000000000000c42         db  0x20 ; ' '
0000000000000c43         db  0x00 ; '.'
0000000000000c44         db  0x00 ; '.'
0000000000000c45         db  0x00 ; '.'
0000000000000c46         db  0x00 ; '.'
0000000000000c47         db  0x00 ; '.'
0000000000000c48         db  0x08 ; '.'
0000000000000c49         db  0x00 ; '.'
0000000000000c4a         db  0x00 ; '.'
0000000000000c4b         db  0x00 ; '.'
0000000000000c4c         db  0x00 ; '.'
0000000000000c4d         db  0x00 ; '.'
0000000000000c4e         db  0x00 ; '.'
0000000000000c4f         db  0x00 ; '.'
0000000000000c50         db  0xc7 ; '.'
0000000000000c51         db  0x5c ; '\'
0000000000000c52         db  0x00 ; '.'
0000000000000c53         db  0x00 ; '.'
0000000000000c54         db  0x00 ; '.'
0000000000000c55         db  0x00 ; '.'
0000000000000c56         db  0x00 ; '.'
0000000000000c57         db  0x00 ; '.'
0000000000000c58         db  0x00 ; '.'
0000000000000c59         db  0x7c ; '|'
0000000000000c5a         db  0x20 ; ' '
0000000000000c5b         db  0x00 ; '.'
0000000000000c5c         db  0x00 ; '.'
0000000000000c5d         db  0x00 ; '.'
0000000000000c5e         db  0x00 ; '.'
0000000000000c5f         db  0x00 ; '.'
0000000000000c60         db  0x08 ; '.'
0000000000000c61         db  0x00 ; '.'
0000000000000c62         db  0x00 ; '.'
0000000000000c63         db  0x00 ; '.'
0000000000000c64         db  0x00 ; '.'
0000000000000c65         db  0x00 ; '.'
0000000000000c66         db  0x00 ; '.'
0000000000000c67         db  0x00 ; '.'
0000000000000c68         db  0x29 ; ')'
0000000000000c69         db  0x5d ; ']'
0000000000000c6a         db  0x00 ; '.'
0000000000000c6b         db  0x00 ; '.'
0000000000000c6c         db  0x00 ; '.'
0000000000000c6d         db  0x00 ; '.'
0000000000000c6e         db  0x00 ; '.'
0000000000000c6f         db  0x00 ; '.'
0000000000000c70         db  0x08 ; '.'
0000000000000c71         db  0x7c ; '|'
0000000000000c72         db  0x20 ; ' '
0000000000000c73         db  0x00 ; '.'
0000000000000c74         db  0x00 ; '.'
0000000000000c75         db  0x00 ; '.'
0000000000000c76         db  0x00 ; '.'
0000000000000c77         db  0x00 ; '.'
0000000000000c78         db  0x08 ; '.'
0000000000000c79         db  0x00 ; '.'
0000000000000c7a         db  0x00 ; '.'
0000000000000c7b         db  0x00 ; '.'
0000000000000c7c         db  0x00 ; '.'
0000000000000c7d         db  0x00 ; '.'
0000000000000c7e         db  0x00 ; '.'
0000000000000c7f         db  0x00 ; '.'
0000000000000c80         db  0x31 ; '1'
0000000000000c81         db  0x5d ; ']'
0000000000000c82         db  0x00 ; '.'
0000000000000c83         db  0x00 ; '.'
0000000000000c84         db  0x00 ; '.'
0000000000000c85         db  0x00 ; '.'
0000000000000c86         db  0x00 ; '.'
0000000000000c87         db  0x00 ; '.'
0000000000000c88         db  0x10 ; '.'
0000000000000c89         db  0x7c ; '|'
0000000000000c8a         db  0x20 ; ' '
0000000000000c8b         db  0x00 ; '.'
0000000000000c8c         db  0x00 ; '.'
0000000000000c8d         db  0x00 ; '.'
0000000000000c8e         db  0x00 ; '.'
0000000000000c8f         db  0x00 ; '.'
0000000000000c90         db  0x08 ; '.'
0000000000000c91         db  0x00 ; '.'
0000000000000c92         db  0x00 ; '.'
0000000000000c93         db  0x00 ; '.'
0000000000000c94         db  0x00 ; '.'
0000000000000c95         db  0x00 ; '.'
0000000000000c96         db  0x00 ; '.'
0000000000000c97         db  0x00 ; '.'
0000000000000c98         db  0x37 ; '7'
0000000000000c99         db  0x5d ; ']'
0000000000000c9a         db  0x00 ; '.'
0000000000000c9b         db  0x00 ; '.'
0000000000000c9c         db  0x00 ; '.'
0000000000000c9d         db  0x00 ; '.'
0000000000000c9e         db  0x00 ; '.'
0000000000000c9f         db  0x00 ; '.'
0000000000000ca0         db  0x18 ; '.'
0000000000000ca1         db  0x7c ; '|'
0000000000000ca2         db  0x20 ; ' '
0000000000000ca3         db  0x00 ; '.'
0000000000000ca4         db  0x00 ; '.'
0000000000000ca5         db  0x00 ; '.'
0000000000000ca6         db  0x00 ; '.'
0000000000000ca7         db  0x00 ; '.'
0000000000000ca8         db  0x08 ; '.'
0000000000000ca9         db  0x00 ; '.'
0000000000000caa         db  0x00 ; '.'
0000000000000cab         db  0x00 ; '.'
0000000000000cac         db  0x00 ; '.'
0000000000000cad         db  0x00 ; '.'
0000000000000cae         db  0x00 ; '.'
0000000000000caf         db  0x00 ; '.'
0000000000000cb0         db  0x44 ; 'D'
0000000000000cb1         db  0x5d ; ']'
0000000000000cb2         db  0x00 ; '.'
0000000000000cb3         db  0x00 ; '.'
0000000000000cb4         db  0x00 ; '.'
0000000000000cb5         db  0x00 ; '.'
0000000000000cb6         db  0x00 ; '.'
0000000000000cb7         db  0x00 ; '.'
0000000000000cb8         db  0x20 ; ' '
0000000000000cb9         db  0x7c ; '|'
0000000000000cba         db  0x20 ; ' '
0000000000000cbb         db  0x00 ; '.'
0000000000000cbc         db  0x00 ; '.'
0000000000000cbd         db  0x00 ; '.'
0000000000000cbe         db  0x00 ; '.'
0000000000000cbf         db  0x00 ; '.'
0000000000000cc0         db  0x08 ; '.'
0000000000000cc1         db  0x00 ; '.'
0000000000000cc2         db  0x00 ; '.'
0000000000000cc3         db  0x00 ; '.'
0000000000000cc4         db  0x00 ; '.'
0000000000000cc5         db  0x00 ; '.'
0000000000000cc6         db  0x00 ; '.'
0000000000000cc7         db  0x00 ; '.'
0000000000000cc8         db  0x51 ; 'Q'
0000000000000cc9         db  0x5d ; ']'
0000000000000cca         db  0x00 ; '.'
0000000000000ccb         db  0x00 ; '.'
0000000000000ccc         db  0x00 ; '.'
0000000000000ccd         db  0x00 ; '.'
0000000000000cce         db  0x00 ; '.'
0000000000000ccf         db  0x00 ; '.'
0000000000000cd0         db  0x28 ; '('
0000000000000cd1         db  0x7c ; '|'
0000000000000cd2         db  0x20 ; ' '
0000000000000cd3         db  0x00 ; '.'
0000000000000cd4         db  0x00 ; '.'
0000000000000cd5         db  0x00 ; '.'
0000000000000cd6         db  0x00 ; '.'
0000000000000cd7         db  0x00 ; '.'
0000000000000cd8         db  0x08 ; '.'
0000000000000cd9         db  0x00 ; '.'
0000000000000cda         db  0x00 ; '.'
0000000000000cdb         db  0x00 ; '.'
0000000000000cdc         db  0x00 ; '.'
0000000000000cdd         db  0x00 ; '.'
0000000000000cde         db  0x00 ; '.'
0000000000000cdf         db  0x00 ; '.'
0000000000000ce0         db  0x65 ; 'e'
0000000000000ce1         db  0x5d ; ']'
0000000000000ce2         db  0x00 ; '.'
0000000000000ce3         db  0x00 ; '.'
0000000000000ce4         db  0x00 ; '.'
0000000000000ce5         db  0x00 ; '.'
0000000000000ce6         db  0x00 ; '.'
0000000000000ce7         db  0x00 ; '.'
0000000000000ce8         db  0x30 ; '0'
0000000000000ce9         db  0x7c ; '|'
0000000000000cea         db  0x20 ; ' '
0000000000000ceb         db  0x00 ; '.'
0000000000000cec         db  0x00 ; '.'
0000000000000ced         db  0x00 ; '.'
0000000000000cee         db  0x00 ; '.'
0000000000000cef         db  0x00 ; '.'
0000000000000cf0         db  0x08 ; '.'
0000000000000cf1         db  0x00 ; '.'
0000000000000cf2         db  0x00 ; '.'
0000000000000cf3         db  0x00 ; '.'
0000000000000cf4         db  0x00 ; '.'
0000000000000cf5         db  0x00 ; '.'
0000000000000cf6         db  0x00 ; '.'
0000000000000cf7         db  0x00 ; '.'
0000000000000cf8         db  0x67 ; 'g'
0000000000000cf9         db  0x5d ; ']'
0000000000000cfa         db  0x00 ; '.'
0000000000000cfb         db  0x00 ; '.'
0000000000000cfc         db  0x00 ; '.'
0000000000000cfd         db  0x00 ; '.'
0000000000000cfe         db  0x00 ; '.'
0000000000000cff         db  0x00 ; '.'
0000000000000d00         db  0x38 ; '8'
0000000000000d01         db  0x7c ; '|'
0000000000000d02         db  0x20 ; ' '
0000000000000d03         db  0x00 ; '.'
0000000000000d04         db  0x00 ; '.'
0000000000000d05         db  0x00 ; '.'
0000000000000d06         db  0x00 ; '.'
0000000000000d07         db  0x00 ; '.'
0000000000000d08         db  0x08 ; '.'
0000000000000d09         db  0x00 ; '.'
0000000000000d0a         db  0x00 ; '.'
0000000000000d0b         db  0x00 ; '.'
0000000000000d0c         db  0x00 ; '.'
0000000000000d0d         db  0x00 ; '.'
0000000000000d0e         db  0x00 ; '.'
0000000000000d0f         db  0x00 ; '.'
0000000000000d10         db  0x4a ; 'J'
0000000000000d11         db  0x5d ; ']'
0000000000000d12         db  0x00 ; '.'
0000000000000d13         db  0x00 ; '.'
0000000000000d14         db  0x00 ; '.'
0000000000000d15         db  0x00 ; '.'
0000000000000d16         db  0x00 ; '.'
0000000000000d17         db  0x00 ; '.'
0000000000000d18         db  0x40 ; '@'
0000000000000d19         db  0x7c ; '|'
0000000000000d1a         db  0x20 ; ' '
0000000000000d1b         db  0x00 ; '.'
0000000000000d1c         db  0x00 ; '.'
0000000000000d1d         db  0x00 ; '.'
0000000000000d1e         db  0x00 ; '.'
0000000000000d1f         db  0x00 ; '.'
0000000000000d20         db  0x08 ; '.'
0000000000000d21         db  0x00 ; '.'
0000000000000d22         db  0x00 ; '.'
0000000000000d23         db  0x00 ; '.'
0000000000000d24         db  0x00 ; '.'
0000000000000d25         db  0x00 ; '.'
0000000000000d26         db  0x00 ; '.'
0000000000000d27         db  0x00 ; '.'
0000000000000d28         db  0x0d ; '.'
0000000000000d29         db  0x58 ; 'X'
0000000000000d2a         db  0x00 ; '.'
0000000000000d2b         db  0x00 ; '.'
0000000000000d2c         db  0x00 ; '.'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x00 ; '.'
0000000000000d2f         db  0x00 ; '.'
0000000000000d30         db  0x48 ; 'H'
0000000000000d31         db  0x7c ; '|'
0000000000000d32         db  0x20 ; ' '
0000000000000d33         db  0x00 ; '.'
0000000000000d34         db  0x00 ; '.'
0000000000000d35         db  0x00 ; '.'
0000000000000d36         db  0x00 ; '.'
0000000000000d37         db  0x00 ; '.'
0000000000000d38         db  0x08 ; '.'
0000000000000d39         db  0x00 ; '.'
0000000000000d3a         db  0x00 ; '.'
0000000000000d3b         db  0x00 ; '.'
0000000000000d3c         db  0x00 ; '.'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x00 ; '.'
0000000000000d3f         db  0x00 ; '.'
0000000000000d40         db  0x6f ; 'o'
0000000000000d41         db  0x5d ; ']'
0000000000000d42         db  0x00 ; '.'
0000000000000d43         db  0x00 ; '.'
0000000000000d44         db  0x00 ; '.'
0000000000000d45         db  0x00 ; '.'
0000000000000d46         db  0x00 ; '.'
0000000000000d47         db  0x00 ; '.'
0000000000000d48         db  0x08 ; '.'
0000000000000d49         db  0x80 ; '.'
0000000000000d4a         db  0x20 ; ' '
0000000000000d4b         db  0x00 ; '.'
0000000000000d4c         db  0x00 ; '.'
0000000000000d4d         db  0x00 ; '.'
0000000000000d4e         db  0x00 ; '.'
0000000000000d4f         db  0x00 ; '.'
0000000000000d50         db  0x08 ; '.'
0000000000000d51         db  0x00 ; '.'
0000000000000d52         db  0x00 ; '.'
0000000000000d53         db  0x00 ; '.'
0000000000000d54         db  0x00 ; '.'
0000000000000d55         db  0x00 ; '.'
0000000000000d56         db  0x00 ; '.'
0000000000000d57         db  0x00 ; '.'
0000000000000d58         db  0x08 ; '.'
0000000000000d59         db  0x80 ; '.'
0000000000000d5a         db  0x20 ; ' '
0000000000000d5b         db  0x00 ; '.'
0000000000000d5c         db  0x00 ; '.'
0000000000000d5d         db  0x00 ; '.'
0000000000000d5e         db  0x00 ; '.'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0x60 ; '`'
0000000000000d61         db  0x80 ; '.'
0000000000000d62         db  0x20 ; ' '
0000000000000d63         db  0x00 ; '.'
0000000000000d64         db  0x00 ; '.'
0000000000000d65         db  0x00 ; '.'
0000000000000d66         db  0x00 ; '.'
0000000000000d67         db  0x00 ; '.'
0000000000000d68         db  0x08 ; '.'
0000000000000d69         db  0x00 ; '.'
0000000000000d6a         db  0x00 ; '.'
0000000000000d6b         db  0x00 ; '.'
0000000000000d6c         db  0x00 ; '.'
0000000000000d6d         db  0x00 ; '.'
0000000000000d6e         db  0x00 ; '.'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0x70 ; 'p'
0000000000000d71         db  0x80 ; '.'
0000000000000d72         db  0x20 ; ' '
0000000000000d73         db  0x00 ; '.'
0000000000000d74         db  0x00 ; '.'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x00 ; '.'
0000000000000d77         db  0x00 ; '.'
0000000000000d78         db  0x78 ; 'x'
0000000000000d79         db  0x80 ; '.'
0000000000000d7a         db  0x20 ; ' '
0000000000000d7b         db  0x00 ; '.'
0000000000000d7c         db  0x00 ; '.'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x00 ; '.'
0000000000000d7f         db  0x00 ; '.'
0000000000000d80         db  0x08 ; '.'
0000000000000d81         db  0x00 ; '.'
0000000000000d82         db  0x00 ; '.'
0000000000000d83         db  0x00 ; '.'
0000000000000d84         db  0x00 ; '.'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x00 ; '.'
0000000000000d87         db  0x00 ; '.'
0000000000000d88         db  0x00 ; '.'
0000000000000d89         db  0x81 ; '.'
0000000000000d8a         db  0x20 ; ' '
0000000000000d8b         db  0x00 ; '.'
0000000000000d8c         db  0x00 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x00 ; '.'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0xc8 ; '.'
0000000000000d91         db  0x7f ; '.'
0000000000000d92         db  0x20 ; ' '
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x00 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x00 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0x06 ; '.'
0000000000000d99         db  0x00 ; '.'
0000000000000d9a         db  0x00 ; '.'
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x06 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x00 ; '.'
0000000000000d9f         db  0x00 ; '.'
0000000000000da0         db  0x00 ; '.'
0000000000000da1         db  0x00 ; '.'
0000000000000da2         db  0x00 ; '.'
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x00 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x00 ; '.'
0000000000000da7         db  0x00 ; '.'
0000000000000da8         db  0xd0 ; '.'
0000000000000da9         db  0x7f ; '.'
0000000000000daa         db  0x20 ; ' '
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x00 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x00 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0x06 ; '.'
0000000000000db1         db  0x00 ; '.'
0000000000000db2         db  0x00 ; '.'
0000000000000db3         db  0x00 ; '.'
0000000000000db4         db  0x18 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x00 ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0x00 ; '.'
0000000000000db9         db  0x00 ; '.'
0000000000000dba         db  0x00 ; '.'
0000000000000dbb         db  0x00 ; '.'
0000000000000dbc         db  0x00 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x00 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0xd8 ; '.'
0000000000000dc1         db  0x7f ; '.'
0000000000000dc2         db  0x20 ; ' '
0000000000000dc3         db  0x00 ; '.'
0000000000000dc4         db  0x00 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x00 ; '.'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0x06 ; '.'
0000000000000dc9         db  0x00 ; '.'
0000000000000dca         db  0x00 ; '.'
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x1c ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x00 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0x00 ; '.'
0000000000000dd1         db  0x00 ; '.'
0000000000000dd2         db  0x00 ; '.'
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x00 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x00 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0xe0 ; '.'
0000000000000dd9         db  0x7f ; '.'
0000000000000dda         db  0x20 ; ' '
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x00 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x00 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0x06 ; '.'
0000000000000de1         db  0x00 ; '.'
0000000000000de2         db  0x00 ; '.'
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x2d ; '-'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x00 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0x00 ; '.'
0000000000000de9         db  0x00 ; '.'
0000000000000dea         db  0x00 ; '.'
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x00 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x00 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0xe8 ; '.'
0000000000000df1         db  0x7f ; '.'
0000000000000df2         db  0x20 ; ' '
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x00 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x00 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0x06 ; '.'
0000000000000df9         db  0x00 ; '.'
0000000000000dfa         db  0x00 ; '.'
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x30 ; '0'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x00 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0x00 ; '.'
0000000000000e01         db  0x00 ; '.'
0000000000000e02         db  0x00 ; '.'
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x00 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x00 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0x80 ; '.'
0000000000000e09         db  0x80 ; '.'
0000000000000e0a         db  0x20 ; ' '
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x00 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x00 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0x05 ; '.'
0000000000000e11         db  0x00 ; '.'
0000000000000e12         db  0x00 ; '.'
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x34 ; '4'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x00 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0x00 ; '.'
0000000000000e19         db  0x00 ; '.'
0000000000000e1a         db  0x00 ; '.'
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x00 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x00 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0x88 ; '.'
0000000000000e21         db  0x80 ; '.'
0000000000000e22         db  0x20 ; ' '
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x00 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x00 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0x05 ; '.'
0000000000000e29         db  0x00 ; '.'
0000000000000e2a         db  0x00 ; '.'
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x33 ; '3'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x00 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0x00 ; '.'
0000000000000e31         db  0x00 ; '.'
0000000000000e32         db  0x00 ; '.'
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0x90 ; '.'
0000000000000e39         db  0x80 ; '.'
0000000000000e3a         db  0x20 ; ' '
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x00 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x00 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0x05 ; '.'
0000000000000e41         db  0x00 ; '.'
0000000000000e42         db  0x00 ; '.'
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x3a ; ':'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0x00 ; '.'
0000000000000e49         db  0x00 ; '.'
0000000000000e4a         db  0x00 ; '.'
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x00 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0x98 ; '.'
0000000000000e51         db  0x80 ; '.'
0000000000000e52         db  0x20 ; ' '
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x00 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x00 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0x05 ; '.'
0000000000000e59         db  0x00 ; '.'
0000000000000e5a         db  0x00 ; '.'
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x36 ; '6'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x00 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0x00 ; '.'
0000000000000e61         db  0x00 ; '.'
0000000000000e62         db  0x00 ; '.'
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x00 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0xa0 ; '.'
0000000000000e69         db  0x80 ; '.'
0000000000000e6a         db  0x20 ; ' '
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x00 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x00 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0x05 ; '.'
0000000000000e71         db  0x00 ; '.'
0000000000000e72         db  0x00 ; '.'
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x38 ; '8'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0x00 ; '.'
0000000000000e79         db  0x00 ; '.'
0000000000000e7a         db  0x00 ; '.'
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x00 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0xc0 ; '.'
0000000000000e81         db  0x80 ; '.'
0000000000000e82         db  0x20 ; ' '
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x00 ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0x05 ; '.'
0000000000000e89         db  0x00 ; '.'
0000000000000e8a         db  0x00 ; '.'
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x39 ; '9'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0x00 ; '.'
0000000000000e91         db  0x00 ; '.'
0000000000000e92         db  0x00 ; '.'
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0xe98; 0x12d0[ (1080 bytes)
        ; File offset : [3736; 4816[ (1080 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000e98         db  0x60 ; '`'
0000000000000e99         db  0x7e ; '~'
0000000000000e9a         db  0x20 ; ' '
0000000000000e9b         db  0x00 ; '.'
0000000000000e9c         db  0x00 ; '.'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x00 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0x07 ; '.'
0000000000000ea1         db  0x00 ; '.'
0000000000000ea2         db  0x00 ; '.'
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x01 ; '.'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0x00 ; '.'
0000000000000ea9         db  0x00 ; '.'
0000000000000eaa         db  0x00 ; '.'
0000000000000eab         db  0x00 ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x00 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0x68 ; 'h'
0000000000000eb1         db  0x7e ; '~'
0000000000000eb2         db  0x20 ; ' '
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x00 ; '.'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0x07 ; '.'
0000000000000eb9         db  0x00 ; '.'
0000000000000eba         db  0x00 ; '.'
0000000000000ebb         db  0x00 ; '.'
0000000000000ebc         db  0x02 ; '.'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x00 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0x00 ; '.'
0000000000000ec1         db  0x00 ; '.'
0000000000000ec2         db  0x00 ; '.'
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x00 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0x70 ; 'p'
0000000000000ec9         db  0x7e ; '~'
0000000000000eca         db  0x20 ; ' '
0000000000000ecb         db  0x00 ; '.'
0000000000000ecc         db  0x00 ; '.'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0x07 ; '.'
0000000000000ed1         db  0x00 ; '.'
0000000000000ed2         db  0x00 ; '.'
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x03 ; '.'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0x00 ; '.'
0000000000000ed9         db  0x00 ; '.'
0000000000000eda         db  0x00 ; '.'
0000000000000edb         db  0x00 ; '.'
0000000000000edc         db  0x00 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0x78 ; 'x'
0000000000000ee1         db  0x7e ; '~'
0000000000000ee2         db  0x20 ; ' '
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x00 ; '.'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0x07 ; '.'
0000000000000ee9         db  0x00 ; '.'
0000000000000eea         db  0x00 ; '.'
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x04 ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x00 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0x00 ; '.'
0000000000000ef1         db  0x00 ; '.'
0000000000000ef2         db  0x00 ; '.'
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0x80 ; '.'
0000000000000ef9         db  0x7e ; '~'
0000000000000efa         db  0x20 ; ' '
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x00 ; '.'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0x07 ; '.'
0000000000000f01         db  0x00 ; '.'
0000000000000f02         db  0x00 ; '.'
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x05 ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0x00 ; '.'
0000000000000f09         db  0x00 ; '.'
0000000000000f0a         db  0x00 ; '.'
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x00 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0x88 ; '.'
0000000000000f11         db  0x7e ; '~'
0000000000000f12         db  0x20 ; ' '
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x00 ; '.'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0x07 ; '.'
0000000000000f19         db  0x00 ; '.'
0000000000000f1a         db  0x00 ; '.'
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x07 ; '.'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0x00 ; '.'
0000000000000f21         db  0x00 ; '.'
0000000000000f22         db  0x00 ; '.'
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x00 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0x90 ; '.'
0000000000000f29         db  0x7e ; '~'
0000000000000f2a         db  0x20 ; ' '
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x00 ; '.'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0x07 ; '.'
0000000000000f31         db  0x00 ; '.'
0000000000000f32         db  0x00 ; '.'
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x08 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0x00 ; '.'
0000000000000f39         db  0x00 ; '.'
0000000000000f3a         db  0x00 ; '.'
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x00 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0x98 ; '.'
0000000000000f41         db  0x7e ; '~'
0000000000000f42         db  0x20 ; ' '
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x00 ; '.'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0x07 ; '.'
0000000000000f49         db  0x00 ; '.'
0000000000000f4a         db  0x00 ; '.'
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x09 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0x00 ; '.'
0000000000000f51         db  0x00 ; '.'
0000000000000f52         db  0x00 ; '.'
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0xa0 ; '.'
0000000000000f59         db  0x7e ; '~'
0000000000000f5a         db  0x20 ; ' '
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x00 ; '.'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0x07 ; '.'
0000000000000f61         db  0x00 ; '.'
0000000000000f62         db  0x00 ; '.'
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x0a ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0x00 ; '.'
0000000000000f69         db  0x00 ; '.'
0000000000000f6a         db  0x00 ; '.'
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0xa8 ; '.'
0000000000000f71         db  0x7e ; '~'
0000000000000f72         db  0x20 ; ' '
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x00 ; '.'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0x07 ; '.'
0000000000000f79         db  0x00 ; '.'
0000000000000f7a         db  0x00 ; '.'
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x0b ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0x00 ; '.'
0000000000000f81         db  0x00 ; '.'
0000000000000f82         db  0x00 ; '.'
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x00 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0xb0 ; '.'
0000000000000f89         db  0x7e ; '~'
0000000000000f8a         db  0x20 ; ' '
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x00 ; '.'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0x07 ; '.'
0000000000000f91         db  0x00 ; '.'
0000000000000f92         db  0x00 ; '.'
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x0c ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0x00 ; '.'
0000000000000f99         db  0x00 ; '.'
0000000000000f9a         db  0x00 ; '.'
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'
0000000000000fa0         db  0xb8 ; '.'
0000000000000fa1         db  0x7e ; '~'
0000000000000fa2         db  0x20 ; ' '
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x00 ; '.'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0x07 ; '.'
0000000000000fa9         db  0x00 ; '.'
0000000000000faa         db  0x00 ; '.'
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x0d ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0x00 ; '.'
0000000000000fb1         db  0x00 ; '.'
0000000000000fb2         db  0x00 ; '.'
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x00 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0xc0 ; '.'
0000000000000fb9         db  0x7e ; '~'
0000000000000fba         db  0x20 ; ' '
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x00 ; '.'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0x07 ; '.'
0000000000000fc1         db  0x00 ; '.'
0000000000000fc2         db  0x00 ; '.'
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x0e ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0x00 ; '.'
0000000000000fc9         db  0x00 ; '.'
0000000000000fca         db  0x00 ; '.'
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0xc8 ; '.'
0000000000000fd1         db  0x7e ; '~'
0000000000000fd2         db  0x20 ; ' '
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x00 ; '.'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x07 ; '.'
0000000000000fd9         db  0x00 ; '.'
0000000000000fda         db  0x00 ; '.'
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x0f ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0x00 ; '.'
0000000000000fe1         db  0x00 ; '.'
0000000000000fe2         db  0x00 ; '.'
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x00 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0xd0 ; '.'
0000000000000fe9         db  0x7e ; '~'
0000000000000fea         db  0x20 ; ' '
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x00 ; '.'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x07 ; '.'
0000000000000ff1         db  0x00 ; '.'
0000000000000ff2         db  0x00 ; '.'
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x10 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0x00 ; '.'
0000000000000ff9         db  0x00 ; '.'
0000000000000ffa         db  0x00 ; '.'
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'
0000000000001000         db  0xd8 ; '.'
0000000000001001         db  0x7e ; '~'
0000000000001002         db  0x20 ; ' '
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x00 ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x07 ; '.'
0000000000001009         db  0x00 ; '.'
000000000000100a         db  0x00 ; '.'
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x11 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0x00 ; '.'
0000000000001011         db  0x00 ; '.'
0000000000001012         db  0x00 ; '.'
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0xe0 ; '.'
0000000000001019         db  0x7e ; '~'
000000000000101a         db  0x20 ; ' '
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x00 ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x07 ; '.'
0000000000001021         db  0x00 ; '.'
0000000000001022         db  0x00 ; '.'
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x12 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x00 ; '.'
0000000000001029         db  0x00 ; '.'
000000000000102a         db  0x00 ; '.'
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x00 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0xe8 ; '.'
0000000000001031         db  0x7e ; '~'
0000000000001032         db  0x20 ; ' '
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x00 ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x07 ; '.'
0000000000001039         db  0x00 ; '.'
000000000000103a         db  0x00 ; '.'
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x13 ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0x00 ; '.'
0000000000001041         db  0x00 ; '.'
0000000000001042         db  0x00 ; '.'
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x00 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0xf0 ; '.'
0000000000001049         db  0x7e ; '~'
000000000000104a         db  0x20 ; ' '
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x00 ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x07 ; '.'
0000000000001051         db  0x00 ; '.'
0000000000001052         db  0x00 ; '.'
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x14 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0x00 ; '.'
0000000000001059         db  0x00 ; '.'
000000000000105a         db  0x00 ; '.'
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0xf8 ; '.'
0000000000001061         db  0x7e ; '~'
0000000000001062         db  0x20 ; ' '
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x00 ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x07 ; '.'
0000000000001069         db  0x00 ; '.'
000000000000106a         db  0x00 ; '.'
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x15 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0x00 ; '.'
0000000000001071         db  0x00 ; '.'
0000000000001072         db  0x00 ; '.'
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x00 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0x00 ; '.'
0000000000001079         db  0x7f ; '.'
000000000000107a         db  0x20 ; ' '
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x00 ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x07 ; '.'
0000000000001081         db  0x00 ; '.'
0000000000001082         db  0x00 ; '.'
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x16 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0x00 ; '.'
0000000000001089         db  0x00 ; '.'
000000000000108a         db  0x00 ; '.'
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x00 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0x08 ; '.'
0000000000001091         db  0x7f ; '.'
0000000000001092         db  0x20 ; ' '
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x00 ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x07 ; '.'
0000000000001099         db  0x00 ; '.'
000000000000109a         db  0x00 ; '.'
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x17 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0x00 ; '.'
00000000000010a1         db  0x00 ; '.'
00000000000010a2         db  0x00 ; '.'
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x00 ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0x10 ; '.'
00000000000010a9         db  0x7f ; '.'
00000000000010aa         db  0x20 ; ' '
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x00 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x07 ; '.'
00000000000010b1         db  0x00 ; '.'
00000000000010b2         db  0x00 ; '.'
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x19 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0x00 ; '.'
00000000000010b9         db  0x00 ; '.'
00000000000010ba         db  0x00 ; '.'
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x00 ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0x18 ; '.'
00000000000010c1         db  0x7f ; '.'
00000000000010c2         db  0x20 ; ' '
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x00 ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x07 ; '.'
00000000000010c9         db  0x00 ; '.'
00000000000010ca         db  0x00 ; '.'
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x1a ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0x00 ; '.'
00000000000010d1         db  0x00 ; '.'
00000000000010d2         db  0x00 ; '.'
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x00 ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0x20 ; ' '
00000000000010d9         db  0x7f ; '.'
00000000000010da         db  0x20 ; ' '
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x00 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x07 ; '.'
00000000000010e1         db  0x00 ; '.'
00000000000010e2         db  0x00 ; '.'
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x1b ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0x00 ; '.'
00000000000010e9         db  0x00 ; '.'
00000000000010ea         db  0x00 ; '.'
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x00 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0x28 ; '('
00000000000010f1         db  0x7f ; '.'
00000000000010f2         db  0x20 ; ' '
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x00 ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0x07 ; '.'
00000000000010f9         db  0x00 ; '.'
00000000000010fa         db  0x00 ; '.'
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x1d ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0x00 ; '.'
0000000000001101         db  0x00 ; '.'
0000000000001102         db  0x00 ; '.'
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x00 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0x30 ; '0'
0000000000001109         db  0x7f ; '.'
000000000000110a         db  0x20 ; ' '
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x00 ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0x07 ; '.'
0000000000001111         db  0x00 ; '.'
0000000000001112         db  0x00 ; '.'
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x1e ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0x00 ; '.'
0000000000001119         db  0x00 ; '.'
000000000000111a         db  0x00 ; '.'
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x00 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x38 ; '8'
0000000000001121         db  0x7f ; '.'
0000000000001122         db  0x20 ; ' '
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x00 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0x07 ; '.'
0000000000001129         db  0x00 ; '.'
000000000000112a         db  0x00 ; '.'
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x1f ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0x00 ; '.'
0000000000001131         db  0x00 ; '.'
0000000000001132         db  0x00 ; '.'
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x00 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x40 ; '@'
0000000000001139         db  0x7f ; '.'
000000000000113a         db  0x20 ; ' '
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x00 ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0x07 ; '.'
0000000000001141         db  0x00 ; '.'
0000000000001142         db  0x00 ; '.'
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x20 ; ' '
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0x00 ; '.'
0000000000001149         db  0x00 ; '.'
000000000000114a         db  0x00 ; '.'
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x00 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x48 ; 'H'
0000000000001151         db  0x7f ; '.'
0000000000001152         db  0x20 ; ' '
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x00 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0x07 ; '.'
0000000000001159         db  0x00 ; '.'
000000000000115a         db  0x00 ; '.'
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x21 ; '!'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0x00 ; '.'
0000000000001161         db  0x00 ; '.'
0000000000001162         db  0x00 ; '.'
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x00 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x50 ; 'P'
0000000000001169         db  0x7f ; '.'
000000000000116a         db  0x20 ; ' '
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x00 ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0x07 ; '.'
0000000000001171         db  0x00 ; '.'
0000000000001172         db  0x00 ; '.'
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x22 ; '"'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0x00 ; '.'
0000000000001179         db  0x00 ; '.'
000000000000117a         db  0x00 ; '.'
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x00 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x58 ; 'X'
0000000000001181         db  0x7f ; '.'
0000000000001182         db  0x20 ; ' '
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x00 ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x07 ; '.'
0000000000001189         db  0x00 ; '.'
000000000000118a         db  0x00 ; '.'
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x23 ; '#'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0x00 ; '.'
0000000000001191         db  0x00 ; '.'
0000000000001192         db  0x00 ; '.'
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x00 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0x60 ; '`'
0000000000001199         db  0x7f ; '.'
000000000000119a         db  0x20 ; ' '
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x00 ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x07 ; '.'
00000000000011a1         db  0x00 ; '.'
00000000000011a2         db  0x00 ; '.'
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x24 ; '$'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0x00 ; '.'
00000000000011a9         db  0x00 ; '.'
00000000000011aa         db  0x00 ; '.'
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x00 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0x68 ; 'h'
00000000000011b1         db  0x7f ; '.'
00000000000011b2         db  0x20 ; ' '
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x00 ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x07 ; '.'
00000000000011b9         db  0x00 ; '.'
00000000000011ba         db  0x00 ; '.'
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x25 ; '%'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0x00 ; '.'
00000000000011c1         db  0x00 ; '.'
00000000000011c2         db  0x00 ; '.'
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x00 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0x70 ; 'p'
00000000000011c9         db  0x7f ; '.'
00000000000011ca         db  0x20 ; ' '
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x00 ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x07 ; '.'
00000000000011d1         db  0x00 ; '.'
00000000000011d2         db  0x00 ; '.'
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x26 ; '&'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0x00 ; '.'
00000000000011d9         db  0x00 ; '.'
00000000000011da         db  0x00 ; '.'
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x00 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0x78 ; 'x'
00000000000011e1         db  0x7f ; '.'
00000000000011e2         db  0x20 ; ' '
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x00 ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x07 ; '.'
00000000000011e9         db  0x00 ; '.'
00000000000011ea         db  0x00 ; '.'
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x27 ; '''
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0x00 ; '.'
00000000000011f1         db  0x00 ; '.'
00000000000011f2         db  0x00 ; '.'
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x00 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0x80 ; '.'
00000000000011f9         db  0x7f ; '.'
00000000000011fa         db  0x20 ; ' '
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x00 ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x07 ; '.'
0000000000001201         db  0x00 ; '.'
0000000000001202         db  0x00 ; '.'
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x28 ; '('
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0x00 ; '.'
0000000000001209         db  0x00 ; '.'
000000000000120a         db  0x00 ; '.'
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x00 ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0x88 ; '.'
0000000000001211         db  0x7f ; '.'
0000000000001212         db  0x20 ; ' '
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x00 ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x07 ; '.'
0000000000001219         db  0x00 ; '.'
000000000000121a         db  0x00 ; '.'
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x29 ; ')'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0x00 ; '.'
0000000000001221         db  0x00 ; '.'
0000000000001222         db  0x00 ; '.'
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x00 ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0x90 ; '.'
0000000000001229         db  0x7f ; '.'
000000000000122a         db  0x20 ; ' '
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x00 ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x07 ; '.'
0000000000001231         db  0x00 ; '.'
0000000000001232         db  0x00 ; '.'
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x2a ; '*'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0x00 ; '.'
0000000000001239         db  0x00 ; '.'
000000000000123a         db  0x00 ; '.'
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x00 ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x98 ; '.'
0000000000001241         db  0x7f ; '.'
0000000000001242         db  0x20 ; ' '
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x00 ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x07 ; '.'
0000000000001249         db  0x00 ; '.'
000000000000124a         db  0x00 ; '.'
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x2b ; '+'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0x00 ; '.'
0000000000001251         db  0x00 ; '.'
0000000000001252         db  0x00 ; '.'
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x00 ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0xa0 ; '.'
0000000000001259         db  0x7f ; '.'
000000000000125a         db  0x20 ; ' '
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x00 ; '.'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x07 ; '.'
0000000000001261         db  0x00 ; '.'
0000000000001262         db  0x00 ; '.'
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x2c ; ','
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x00 ; '.'
0000000000001269         db  0x00 ; '.'
000000000000126a         db  0x00 ; '.'
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x00 ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0xa8 ; '.'
0000000000001271         db  0x7f ; '.'
0000000000001272         db  0x20 ; ' '
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x00 ; '.'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x07 ; '.'
0000000000001279         db  0x00 ; '.'
000000000000127a         db  0x00 ; '.'
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x2e ; '.'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x00 ; '.'
0000000000001281         db  0x00 ; '.'
0000000000001282         db  0x00 ; '.'
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x00 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0xb0 ; '.'
0000000000001289         db  0x7f ; '.'
000000000000128a         db  0x20 ; ' '
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x00 ; '.'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x07 ; '.'
0000000000001291         db  0x00 ; '.'
0000000000001292         db  0x00 ; '.'
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x2f ; '/'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x00 ; '.'
0000000000001299         db  0x00 ; '.'
000000000000129a         db  0x00 ; '.'
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x00 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0xb8 ; '.'
00000000000012a1         db  0x7f ; '.'
00000000000012a2         db  0x20 ; ' '
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x00 ; '.'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x07 ; '.'
00000000000012a9         db  0x00 ; '.'
00000000000012aa         db  0x00 ; '.'
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x31 ; '1'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x00 ; '.'
00000000000012b1         db  0x00 ; '.'
00000000000012b2         db  0x00 ; '.'
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x00 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0xc0 ; '.'
00000000000012b9         db  0x7f ; '.'
00000000000012ba         db  0x20 ; ' '
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x00 ; '.'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x07 ; '.'
00000000000012c1         db  0x00 ; '.'
00000000000012c2         db  0x00 ; '.'
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x32 ; '2'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0x00 ; '.'
00000000000012c9         db  0x00 ; '.'
00000000000012ca         db  0x00 ; '.'
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x00 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x12d0; 0x12e7[ (23 bytes)
        ; File offset : [4816; 4839[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
00000000000012d0         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
00000000000012d4         mov        rax, qword [qword_207fd8]                   ; qword_207fd8
00000000000012db         test       rax, rax
00000000000012de         je         loc_12e2

00000000000012e0         call       rax

                     loc_12e2:
00000000000012e2         add        rsp, 0x8                                    ; CODE XREF=_init+14
00000000000012e6         ret
                        ; endp
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0x00 ; '.'
00000000000012e9         db  0x00 ; '.'
00000000000012ea         db  0x00 ; '.'
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x00 ; '.'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x12f0; 0x15d0[ (736 bytes)
        ; File offset : [4848; 5584[ (736 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_12f0:
00000000000012f0         push       qword [qword_207e50]                        ; Begin of unwind block (FDE at 0x6844), qword_207e50, CODE XREF=sub_1306+5
                        ; endp
00000000000012f6         db  0xff ; '.'
                     aK:
00000000000012f7         db         "%\k ", 0
00000000000012fc         align      256


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___snprintf_chk:        // __snprintf_chk
0000000000001300         jmp        qword [__snprintf_chk@GOT]                  ; __snprintf_chk, __snprintf_chk@GOT, CODE XREF=dtoastr+247, ftoastr+255, ldtoastr+230
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1306:
0000000000001306         push       0x0
000000000000130b         jmp        loc_12f0


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
0000000000001310         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=quotearg_n_options+277, quotearg_free+55, quotearg_free+82, quotearg_free+120, xrealloc+40
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1316:
0000000000001316         push       0x1
000000000000131b         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
0000000000001320         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=set_program_name+154, sub_36b0+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1326:
0000000000001326         push       0x2
000000000000132b         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
0000000000001330         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=close_stdout+22, quotearg_n_options+28, clone_quoting_options+7, quotearg_buffer+45, quotearg_alloc_mem+42, close_stream+60, close_stream+104, rpl_fclose+40
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1336:
0000000000001336         push       0x3
000000000000133b         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
0000000000001340         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+516, usage+709
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1346:
0000000000001346         push       0x4
000000000000134b         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
0000000000001350         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1356:
0000000000001356         push       0x5
000000000000135b         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
0000000000001360         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1366:
0000000000001366         push       0x6
000000000000136b         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_puts:        // puts
0000000000001370         jmp        qword [puts@GOT]                            ; puts, puts@GOT, CODE XREF=print_FLT+47, print_DBL+47, print_LDBL+55
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1376:
0000000000001376         push       0x7
000000000000137b         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strtod:        // strtod
0000000000001380         jmp        qword [strtod@GOT]                          ; strtod, strtod@GOT, CODE XREF=dtoastr+280
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1386:
0000000000001386         push       0x8
000000000000138b         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
0000000000001390         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+78
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1396:
0000000000001396         push       0x9
000000000000139b         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
00000000000013a0         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_13a6:
00000000000013a6         push       0xa
00000000000013ab         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
00000000000013b0         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+66
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_13b6:
00000000000013b6         push       0xb
00000000000013bb         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
00000000000013c0         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=usage+56, usage+102, usage+146, usage+183, usage+220, usage+450, usage+543, usage+612, usage+643, usage+746, usage+813
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_13c6:
00000000000013c6         push       0xc
00000000000013cb         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
00000000000013d0         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_13d6:
00000000000013d6         push       0xd
00000000000013db         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
00000000000013e0         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=decimal_absval_add_one+27, quotearg_buffer_restyled+343, sub_36b0+411, sub_36b0+1742, xstrdup+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_13e6:
00000000000013e6         push       0xe
00000000000013eb         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
00000000000013f0         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=main+2724, print_FLT+74, print_DBL+74, print_LDBL+84, dtoastr+353, ftoastr+359, ldtoastr+327, parse_long_options+314, parse_gnu_standard_options_only+310, sub_36b0+2739, quotearg_n_style+137
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_13f6:
00000000000013f6         push       0xf
00000000000013fb         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
0000000000001400         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=parse_long_options+198, parse_gnu_standard_options_only+154
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1406:
0000000000001406         push       0x10
000000000000140b         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
0000000000001410         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1416:
0000000000001416         push       0x11
000000000000141b         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
0000000000001420         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1426:
0000000000001426         push       0x12
000000000000142b         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
0000000000001430         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1436:
0000000000001436         push       0x13
000000000000143b         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strtof:        // strtof
0000000000001440         jmp        qword [strtof@GOT]                          ; strtof, strtof@GOT, CODE XREF=ftoastr+288
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1446:
0000000000001446         push       0x14
000000000000144b         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
0000000000001450         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1456:
0000000000001456         push       0x15
000000000000145b         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
0000000000001460         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=quotearg_buffer_restyled+410
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1466:
0000000000001466         push       0x16
000000000000146b         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
0000000000001470         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+157, usage+194, usage+238, usage+824, version_etc_arn+135, emit_bug_reporting_address+123
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1476:
0000000000001476         push       0x17
000000000000147b         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
0000000000001480         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1486:
0000000000001486         push       0x18
000000000000148b         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
0000000000001490         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=xmemdup+35
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1496:
0000000000001496         push       0x19
000000000000149b         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
00000000000014a0         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14a6:
00000000000014a6         push       0x1a
00000000000014ab         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
00000000000014b0         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=xmalloc+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14b6:
00000000000014b6         push       0x1b
00000000000014bb         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
00000000000014c0         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14c6:
00000000000014c6         push       0x1c
00000000000014cb         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
00000000000014d0         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14d6:
00000000000014d6         push       0x1d
00000000000014db         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
00000000000014e0         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14e6:
00000000000014e6         push       0x1e
00000000000014eb         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
00000000000014f0         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14f6:
00000000000014f6         push       0x1f
00000000000014fb         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
0000000000001500         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+47, usage+491, usage+684, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1506:
0000000000001506         push       0x20
000000000000150b         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
0000000000001510         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=main+204, main+234, main+290, main+320, main+375, main+405, main+461, main+491, main+546, main+576, main+631
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1516:
0000000000001516         push       0x21
000000000000151b         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strtold:        // strtold
0000000000001520         jmp        qword [strtold@GOT]                         ; strtold, strtold@GOT, CODE XREF=ldtoastr+265
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1526:
0000000000001526         push       0x22
000000000000152b         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
0000000000001530         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=close_stdout+125, close_stdout+157, xalloc_die+43
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1536:
0000000000001536         push       0x23
000000000000153b         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
0000000000001540         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1546:
0000000000001546         push       0x24
000000000000154b         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000001550         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1556:
0000000000001556         push       0x25
000000000000155b         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000001560         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=usage+88, parse_long_options+290, parse_gnu_standard_options_only+242
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1566:
0000000000001566         push       0x26
000000000000156b         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
0000000000001570         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1576:
0000000000001576         push       0x27
000000000000157b         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
0000000000001580         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642, version_etc_arn+718, version_etc_arn+872
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1586:
0000000000001586         push       0x28
000000000000158b         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
0000000000001590         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_36b0+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1596:
0000000000001596         push       0x29
000000000000159b         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
00000000000015a0         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_36b0+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15a6:
00000000000015a6         push       0x2a
00000000000015ab         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
00000000000015b0         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=sub_3450+51
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15b6:
00000000000015b6         push       0x2b
00000000000015bb         jmp        0x12f0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___sprintf_chk:        // __sprintf_chk
00000000000015c0         jmp        qword [__sprintf_chk@GOT]                   ; __sprintf_chk, __sprintf_chk@GOT, CODE XREF=main+182, main+268, main+353, main+439, main+524, main+609, main+695, main+780, main+866, main+951, main+1040
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15c6:
00000000000015c6         push       0x2c
00000000000015cb         jmp        0x12f0
                        ; endp


        ; Section .plt.got
        ; Range: [0x15d0; 0x15d8[ (8 bytes)
        ; File offset : [5584; 5592[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_207fe8:        // qword_207fe8
00000000000015d0         jmp        qword [qword_207fe8]                        ; qword, End of unwind block (FDE at 0x6844), Begin of unwind block (FDE at 0x686c), qword_207fe8, CODE XREF=__do_global_dtors_aux+30
                        ; endp
00000000000015d6         align      8
00000000000015d8         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x686c)
00000000000015d9         db  0x00 ; '.'
00000000000015da         db  0x00 ; '.'
00000000000015db         db  0x00 ; '.'
00000000000015dc         db  0x00 ; '.'
00000000000015dd         db  0x00 ; '.'
00000000000015de         db  0x00 ; '.'
00000000000015df         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x15e0; 0x571e[ (16702 bytes)
        ; File offset : [5600; 22302[ (16702 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_20: int64_t, -32
        ;    var_38: int8_t, -56


                     main:
00000000000015e0         push       rbp                                         ; Begin of unwind block (FDE at 0x6950), DATA XREF=_start+29
00000000000015e1         push       rbx
00000000000015e2         mov        ebp, edi
00000000000015e4         mov        rbx, rsi
00000000000015e7         sub        rsp, 0x28
00000000000015eb         mov        rdi, qword [rsi]
00000000000015ee         mov        rax, qword [fs:0x28]
00000000000015f7         mov        qword [rsp+0x38+var_20], rax
00000000000015fc         xor        eax, eax
00000000000015fe         call       set_program_name                            ; set_program_name
0000000000001603         lea        rsi, qword [aWrittenBySSAnd+27]             ; argument "__locale" for method j_setlocale, 0x6241
000000000000160a         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
000000000000160f         call       j_setlocale                                 ; setlocale
0000000000001614         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
000000000000161b         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
0000000000001622         call       j_bindtextdomain                            ; bindtextdomain
0000000000001627         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
000000000000162e         call       j_textdomain                                ; textdomain
0000000000001633         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
000000000000163a         call       atexit                                      ; atexit
000000000000163f         lea        rax, qword [aPadraigBrady]                  ; "Padraig Brady"
0000000000001646         push       0x0
0000000000001648         mov        edi, ebp
000000000000164a         lea        r9, qword [usage]                           ; usage
0000000000001651         lea        r8, qword [aUsrlocalsharel+24]              ; 0x5814
0000000000001658         lea        rcx, qword [aNsOnlineHelpSn+23]             ; 0x57cf
000000000000165f         push       rax
0000000000001660         lea        rdx, qword [aGetlimits]                     ; "getlimits"
0000000000001667         mov        rsi, rbx
000000000000166a         xor        eax, eax
000000000000166c         lea        rbp, qword [rsp+0x48+var_38]
0000000000001671         call       parse_long_options                          ; parse_long_options
0000000000001676         lea        rbx, qword [rbp+1]
000000000000167a         lea        rcx, qword [aPadraigBrady+14]               ; 0x5827
0000000000001681         mov        r8d, 0x7f
0000000000001687         mov        edx, 0x15
000000000000168c         mov        esi, 0x1
0000000000001691         xor        eax, eax
0000000000001693         mov        rdi, rbx
0000000000001696         call       j___sprintf_chk                             ; __sprintf_chk
000000000000169b         lea        rsi, qword [aCharmaxsn]                     ; "CHAR_MAX=%s\\n"
00000000000016a2         mov        rdx, rbx
00000000000016a5         mov        edi, 0x1
00000000000016aa         xor        eax, eax
00000000000016ac         call       j___printf_chk                              ; __printf_chk
00000000000016b1         mov        rdi, rbp
00000000000016b4         call       decimal_absval_add_one                      ; decimal_absval_add_one
00000000000016b9         lea        rsi, qword [aCharoflowsn]                   ; "CHAR_OFLOW=%s\\n"
00000000000016c0         mov        rdx, rax
00000000000016c3         mov        edi, 0x1
00000000000016c8         xor        eax, eax
00000000000016ca         call       j___printf_chk                              ; __printf_chk
00000000000016cf         lea        rcx, qword [aPadraigBrady+18]               ; 0x582b
00000000000016d6         mov        r8, 0xffffffffffffff80
00000000000016dd         mov        edx, 0x15
00000000000016e2         mov        esi, 0x1
00000000000016e7         mov        rdi, rbx
00000000000016ea         xor        eax, eax
00000000000016ec         call       j___sprintf_chk                             ; __sprintf_chk
00000000000016f1         lea        rsi, qword [aCharminsn]                     ; "CHAR_MIN=%s\\n"
00000000000016f8         mov        rdx, rbx
00000000000016fb         mov        edi, 0x1
0000000000001700         xor        eax, eax
0000000000001702         call       j___printf_chk                              ; __printf_chk
0000000000001707         mov        rdi, rbp
000000000000170a         call       decimal_absval_add_one                      ; decimal_absval_add_one
000000000000170f         lea        rsi, qword [aCharuflowsn]                   ; "CHAR_UFLOW=%s\\n"
0000000000001716         mov        rdx, rax
0000000000001719         mov        edi, 0x1
000000000000171e         xor        eax, eax
0000000000001720         call       j___printf_chk                              ; __printf_chk
0000000000001725         lea        rcx, qword [aPadraigBrady+14]               ; 0x5827
000000000000172c         mov        r8d, 0x7f
0000000000001732         mov        edx, 0x15
0000000000001737         mov        esi, 0x1
000000000000173c         mov        rdi, rbx
000000000000173f         xor        eax, eax
0000000000001741         call       j___sprintf_chk                             ; __sprintf_chk
0000000000001746         lea        rsi, qword [aPadraigBrady+22]               ; 0x582f
000000000000174d         mov        rdx, rbx
0000000000001750         mov        edi, 0x1
0000000000001755         xor        eax, eax
0000000000001757         call       j___printf_chk                              ; __printf_chk
000000000000175c         mov        rdi, rbp
000000000000175f         call       decimal_absval_add_one                      ; decimal_absval_add_one
0000000000001764         lea        rsi, qword [aCharmaxsn+13]                  ; 0x583d
000000000000176b         mov        rdx, rax
000000000000176e         mov        edi, 0x1
0000000000001773         xor        eax, eax
0000000000001775         call       j___printf_chk                              ; __printf_chk
000000000000177a         lea        rcx, qword [aPadraigBrady+18]               ; 0x582b
0000000000001781         mov        r8, 0xffffffffffffff80
0000000000001788         mov        edx, 0x15
000000000000178d         mov        esi, 0x1
0000000000001792         mov        rdi, rbx
0000000000001795         xor        eax, eax
0000000000001797         call       j___sprintf_chk                             ; __sprintf_chk
000000000000179c         lea        rsi, qword [aCharoflowsn+15]                ; 0x584d
00000000000017a3         xor        eax, eax
00000000000017a5         mov        rdx, rbx
00000000000017a8         mov        edi, 0x1
00000000000017ad         call       j___printf_chk                              ; __printf_chk
00000000000017b2         mov        rdi, rbp
00000000000017b5         call       decimal_absval_add_one                      ; decimal_absval_add_one
00000000000017ba         lea        rsi, qword [aCharminsn+13]                  ; 0x585b
00000000000017c1         mov        rdx, rax
00000000000017c4         mov        edi, 0x1
00000000000017c9         xor        eax, eax
00000000000017cb         call       j___printf_chk                              ; __printf_chk
00000000000017d0         lea        rcx, qword [aPadraigBrady+14]               ; 0x5827
00000000000017d7         mov        r8d, 0xff
00000000000017dd         mov        edx, 0x15
00000000000017e2         mov        esi, 0x1
00000000000017e7         mov        rdi, rbx
00000000000017ea         xor        eax, eax
00000000000017ec         call       j___sprintf_chk                             ; __sprintf_chk
00000000000017f1         lea        rsi, qword [aUcharmaxsn]                    ; "UCHAR_MAX=%s\\n"
00000000000017f8         mov        rdx, rbx
00000000000017fb         mov        edi, 0x1
0000000000001800         xor        eax, eax
0000000000001802         call       j___printf_chk                              ; __printf_chk
0000000000001807         mov        rdi, rbp
000000000000180a         call       decimal_absval_add_one                      ; decimal_absval_add_one
000000000000180f         lea        rsi, qword [aUcharoflowsn]                  ; "UCHAR_OFLOW=%s\\n"
0000000000001816         mov        rdx, rax
0000000000001819         mov        edi, 0x1
000000000000181e         xor        eax, eax
0000000000001820         call       j___printf_chk                              ; __printf_chk
0000000000001825         lea        rcx, qword [aPadraigBrady+14]               ; 0x5827
000000000000182c         mov        r8d, 0x7fff
0000000000001832         mov        edx, 0x15
0000000000001837         mov        esi, 0x1
000000000000183c         mov        rdi, rbx
000000000000183f         xor        eax, eax
0000000000001841         call       j___sprintf_chk                             ; __sprintf_chk
0000000000001846         lea        rsi, qword [aShrtmaxsn]                     ; "SHRT_MAX=%s\\n"
000000000000184d         mov        rdx, rbx
0000000000001850         mov        edi, 0x1
0000000000001855         xor        eax, eax
0000000000001857         call       j___printf_chk                              ; __printf_chk
000000000000185c         mov        rdi, rbp
000000000000185f         call       decimal_absval_add_one                      ; decimal_absval_add_one
0000000000001864         lea        rsi, qword [aShrtoflowsn]                   ; "SHRT_OFLOW=%s\\n"
000000000000186b         mov        rdx, rax
000000000000186e         mov        edi, 0x1
0000000000001873         xor        eax, eax
0000000000001875         call       j___printf_chk                              ; __printf_chk
000000000000187a         lea        rcx, qword [aPadraigBrady+18]               ; 0x582b
0000000000001881         mov        r8, 0xffffffffffff8000
0000000000001888         mov        edx, 0x15
000000000000188d         mov        esi, 0x1
0000000000001892         mov        rdi, rbx
0000000000001895         xor        eax, eax
0000000000001897         call       j___sprintf_chk                             ; __sprintf_chk
000000000000189c         lea        rsi, qword [aShrtminsn]                     ; "SHRT_MIN=%s\\n"
00000000000018a3         mov        rdx, rbx
00000000000018a6         mov        edi, 0x1
00000000000018ab         xor        eax, eax
00000000000018ad         call       j___printf_chk                              ; __printf_chk
00000000000018b2         mov        rdi, rbp
00000000000018b5         call       decimal_absval_add_one                      ; decimal_absval_add_one
00000000000018ba         lea        rsi, qword [aShrtuflowsn]                   ; "SHRT_UFLOW=%s\\n"
00000000000018c1         mov        rdx, rax
00000000000018c4         mov        edi, 0x1
00000000000018c9         xor        eax, eax
00000000000018cb         call       j___printf_chk                              ; __printf_chk
00000000000018d0         lea        rcx, qword [aPadraigBrady+14]               ; 0x5827
00000000000018d7         mov        r8d, 0x7fffffff
00000000000018dd         mov        edx, 0x15
00000000000018e2         mov        esi, 0x1
00000000000018e7         mov        rdi, rbx
00000000000018ea         xor        eax, eax
00000000000018ec         call       j___sprintf_chk                             ; __sprintf_chk
00000000000018f1         lea        rsi, qword [aIntmaxsn]                      ; "INT_MAX=%s\\n"
00000000000018f8         mov        rdx, rbx
00000000000018fb         mov        edi, 0x1
0000000000001900         xor        eax, eax
0000000000001902         call       j___printf_chk                              ; __printf_chk
0000000000001907         mov        rdi, rbp
000000000000190a         call       decimal_absval_add_one                      ; decimal_absval_add_one
000000000000190f         lea        rsi, qword [aIntoflowsn]                    ; "INT_OFLOW=%s\\n"
0000000000001916         mov        rdx, rax
0000000000001919         mov        edi, 0x1
000000000000191e         xor        eax, eax
0000000000001920         call       j___printf_chk                              ; __printf_chk
0000000000001925         lea        rcx, qword [aPadraigBrady+18]               ; 0x582b
000000000000192c         mov        r8, 0xffffffff80000000
0000000000001933         mov        edx, 0x15
0000000000001938         mov        esi, 0x1
000000000000193d         mov        rdi, rbx
0000000000001940         xor        eax, eax
0000000000001942         call       j___sprintf_chk                             ; __sprintf_chk
0000000000001947         lea        rsi, qword [aIntminsn]                      ; "INT_MIN=%s\\n"
000000000000194e         mov        rdx, rbx
0000000000001951         mov        edi, 0x1
0000000000001956         xor        eax, eax
0000000000001958         call       j___printf_chk                              ; __printf_chk
000000000000195d         mov        rdi, rbp
0000000000001960         call       decimal_absval_add_one                      ; decimal_absval_add_one
0000000000001965         lea        rsi, qword [aIntuflowsn]                    ; "INT_UFLOW=%s\\n"
000000000000196c         mov        rdx, rax
000000000000196f         mov        edi, 0x1
0000000000001974         xor        eax, eax
0000000000001976         call       j___printf_chk                              ; __printf_chk
000000000000197b         lea        rcx, qword [aPadraigBrady+14]               ; 0x5827
0000000000001982         mov        r8d, 0xffffffff
0000000000001988         mov        edx, 0x15
000000000000198d         mov        esi, 0x1
0000000000001992         mov        rdi, rbx
0000000000001995         xor        eax, eax
0000000000001997         call       j___sprintf_chk                             ; __sprintf_chk
000000000000199c         lea        rsi, qword [aIntuflowsn+14]                 ; 0x58db
00000000000019a3         mov        rdx, rbx
00000000000019a6         mov        edi, 0x1
00000000000019ab         xor        eax, eax
00000000000019ad         call       j___printf_chk                              ; __printf_chk
00000000000019b2         mov        rdi, rbp
00000000000019b5         call       decimal_absval_add_one                      ; decimal_absval_add_one
00000000000019ba         lea        rsi, qword [aIntmaxsn+12]                   ; 0x58e8
00000000000019c1         mov        rdx, rax
00000000000019c4         mov        edi, 0x1
00000000000019c9         xor        eax, eax
00000000000019cb         call       j___printf_chk                              ; __printf_chk
00000000000019d0         lea        rcx, qword [aPadraigBrady+14]               ; 0x5827
00000000000019d7         movabs     r8, 0x7fffffffffffffff
00000000000019e1         mov        edx, 0x15
00000000000019e6         mov        esi, 0x1
00000000000019eb         mov        rdi, rbx
00000000000019ee         xor        eax, eax
00000000000019f0         call       j___sprintf_chk                             ; __sprintf_chk
00000000000019f5         lea        rsi, qword [aLongmaxsn]                     ; "LONG_MAX=%s\\n"
00000000000019fc         mov        rdx, rbx
00000000000019ff         mov        edi, 0x1
0000000000001a04         xor        eax, eax
0000000000001a06         call       j___printf_chk                              ; __printf_chk
0000000000001a0b         mov        rdi, rbp
0000000000001a0e         call       decimal_absval_add_one                      ; decimal_absval_add_one
0000000000001a13         lea        rsi, qword [aLongoflowsn]                   ; "LONG_OFLOW=%s\\n"
0000000000001a1a         mov        rdx, rax
0000000000001a1d         mov        edi, 0x1
0000000000001a22         xor        eax, eax
0000000000001a24         call       j___printf_chk                              ; __printf_chk
0000000000001a29         lea        rcx, qword [aPadraigBrady+18]               ; 0x582b
0000000000001a30         movabs     r8, 0x8000000000000000
0000000000001a3a         mov        edx, 0x15
0000000000001a3f         mov        esi, 0x1
0000000000001a44         mov        rdi, rbx
0000000000001a47         xor        eax, eax
0000000000001a49         call       j___sprintf_chk                             ; __sprintf_chk
0000000000001a4e         lea        rsi, qword [aLongminsn]                     ; "LONG_MIN=%s\\n"
0000000000001a55         mov        rdx, rbx
0000000000001a58         mov        edi, 0x1
0000000000001a5d         xor        eax, eax
0000000000001a5f         call       j___printf_chk                              ; __printf_chk
0000000000001a64         mov        rdi, rbp
0000000000001a67         call       decimal_absval_add_one                      ; decimal_absval_add_one
0000000000001a6c         lea        rsi, qword [aLonguflowsn]                   ; "LONG_UFLOW=%s\\n"
0000000000001a73         mov        rdx, rax
0000000000001a76         mov        edi, 0x1
0000000000001a7b         xor        eax, eax
0000000000001a7d         call       j___printf_chk                              ; __printf_chk
0000000000001a82         lea        rcx, qword [aPadraigBrady+14]               ; 0x5827
0000000000001a89         mov        r8, 0xffffffffffffffff
0000000000001a90         mov        edx, 0x15
0000000000001a95         mov        esi, 0x1
0000000000001a9a         mov        rdi, rbx
0000000000001a9d         xor        eax, eax
0000000000001a9f         call       j___sprintf_chk                             ; __sprintf_chk
0000000000001aa4         lea        rsi, qword [aLonguflowsn+15]                ; 0x5913
0000000000001aab         mov        rdx, rbx
0000000000001aae         mov        edi, 0x1
0000000000001ab3         xor        eax, eax
0000000000001ab5         call       j___printf_chk                              ; __printf_chk
0000000000001aba         mov        rdi, rbp
0000000000001abd         call       decimal_absval_add_one                      ; decimal_absval_add_one
0000000000001ac2         lea        rsi, qword [aLongmaxsn+13]                  ; 0x5921
0000000000001ac9         mov        rdx, rax
0000000000001acc         mov        edi, 0x1
0000000000001ad1         xor        eax, eax
0000000000001ad3         call       j___printf_chk                              ; __printf_chk
0000000000001ad8         lea        rcx, qword [aPadraigBrady+14]               ; 0x5827
0000000000001adf         mov        r8, 0xffffffffffffffff
0000000000001ae6         mov        edx, 0x15
0000000000001aeb         mov        esi, 0x1
0000000000001af0         mov        rdi, rbx
0000000000001af3         xor        eax, eax
0000000000001af5         call       j___sprintf_chk                             ; __sprintf_chk
0000000000001afa         lea        rsi, qword [aSizemaxsn]                     ; "SIZE_MAX=%s\\n"
0000000000001b01         mov        rdx, rbx
0000000000001b04         mov        edi, 0x1
0000000000001b09         xor        eax, eax
0000000000001b0b         call       j___printf_chk                              ; __printf_chk
0000000000001b10         mov        rdi, rbp
0000000000001b13         call       decimal_absval_add_one                      ; decimal_absval_add_one
0000000000001b18         lea        rsi, qword [aSizeoflowsn]                   ; "SIZE_OFLOW=%s\\n"
0000000000001b1f         mov        rdx, rax
0000000000001b22         mov        edi, 0x1
0000000000001b27         xor        eax, eax
0000000000001b29         call       j___printf_chk                              ; __printf_chk
0000000000001b2e         lea        rcx, qword [aPadraigBrady+14]               ; 0x5827
0000000000001b35         movabs     r8, 0x7fffffffffffffff
0000000000001b3f         mov        edx, 0x15
0000000000001b44         mov        esi, 0x1
0000000000001b49         mov        rdi, rbx
0000000000001b4c         xor        eax, eax
0000000000001b4e         call       j___sprintf_chk                             ; __sprintf_chk
0000000000001b53         lea        rsi, qword [aLongoflowsn+15]                ; 0x5931
0000000000001b5a         mov        rdx, rbx
0000000000001b5d         mov        edi, 0x1
0000000000001b62         xor        eax, eax
0000000000001b64         call       j___printf_chk                              ; __printf_chk
0000000000001b69         mov        rdi, rbp
0000000000001b6c         call       decimal_absval_add_one                      ; decimal_absval_add_one
0000000000001b71         lea        rsi, qword [aSizemaxsn+13]                  ; 0x593f
0000000000001b78         mov        rdx, rax
0000000000001b7b         mov        edi, 0x1
0000000000001b80         xor        eax, eax
0000000000001b82         call       j___printf_chk                              ; __printf_chk
0000000000001b87         lea        rcx, qword [aPadraigBrady+18]               ; 0x582b
0000000000001b8e         movabs     r8, 0x8000000000000000
0000000000001b98         mov        edx, 0x15
0000000000001b9d         mov        esi, 0x1
0000000000001ba2         mov        rdi, rbx
0000000000001ba5         xor        eax, eax
0000000000001ba7         call       j___sprintf_chk                             ; __sprintf_chk
0000000000001bac         lea        rsi, qword [aSsizeminsn]                    ; "SSIZE_MIN=%s\\n"
0000000000001bb3         mov        rdx, rbx
0000000000001bb6         mov        edi, 0x1
0000000000001bbb         xor        eax, eax
0000000000001bbd         call       j___printf_chk                              ; __printf_chk
0000000000001bc2         mov        rdi, rbp
0000000000001bc5         call       decimal_absval_add_one                      ; decimal_absval_add_one
0000000000001bca         lea        rsi, qword [aSsizeuflowsn]                  ; "SSIZE_UFLOW=%s\\n"
0000000000001bd1         mov        rdx, rax
0000000000001bd4         mov        edi, 0x1
0000000000001bd9         xor        eax, eax
0000000000001bdb         call       j___printf_chk                              ; __printf_chk
0000000000001be0         lea        rcx, qword [aPadraigBrady+14]               ; 0x5827
0000000000001be7         movabs     r8, 0x7fffffffffffffff
0000000000001bf1         mov        edx, 0x15
0000000000001bf6         mov        esi, 0x1
0000000000001bfb         mov        rdi, rbx
0000000000001bfe         xor        eax, eax
0000000000001c00         call       j___sprintf_chk                             ; __sprintf_chk
0000000000001c05         lea        rsi, qword [aTimetmaxsn]                    ; "TIME_T_MAX=%s\\n"
0000000000001c0c         mov        rdx, rbx
0000000000001c0f         mov        edi, 0x1
0000000000001c14         xor        eax, eax
0000000000001c16         call       j___printf_chk                              ; __printf_chk
0000000000001c1b         mov        rdi, rbp
0000000000001c1e         call       decimal_absval_add_one                      ; decimal_absval_add_one
0000000000001c23         lea        rsi, qword [aTimetoflowsn]                  ; "TIME_T_OFLOW=%s\\n"
0000000000001c2a         mov        rdx, rax
0000000000001c2d         mov        edi, 0x1
0000000000001c32         xor        eax, eax
0000000000001c34         call       j___printf_chk                              ; __printf_chk
0000000000001c39         lea        rcx, qword [aPadraigBrady+18]               ; 0x582b
0000000000001c40         xor        eax, eax
0000000000001c42         movabs     r8, 0x8000000000000000
0000000000001c4c         mov        edx, 0x15
0000000000001c51         mov        esi, 0x1
0000000000001c56         mov        rdi, rbx
0000000000001c59         call       j___sprintf_chk                             ; __sprintf_chk
0000000000001c5e         lea        rsi, qword [aTimetminsn]                    ; "TIME_T_MIN=%s\\n"
0000000000001c65         mov        rdx, rbx
0000000000001c68         mov        edi, 0x1
0000000000001c6d         xor        eax, eax
0000000000001c6f         call       j___printf_chk                              ; __printf_chk
0000000000001c74         mov        rdi, rbp
0000000000001c77         call       decimal_absval_add_one                      ; decimal_absval_add_one
0000000000001c7c         lea        rsi, qword [aTimetuflowsn]                  ; "TIME_T_UFLOW=%s\\n"
0000000000001c83         mov        rdx, rax
0000000000001c86         mov        edi, 0x1
0000000000001c8b         xor        eax, eax
0000000000001c8d         call       j___printf_chk                              ; __printf_chk
0000000000001c92         lea        rcx, qword [aPadraigBrady+14]               ; 0x5827
0000000000001c99         mov        r8d, 0xffffffff
0000000000001c9f         mov        edx, 0x15
0000000000001ca4         mov        esi, 0x1
0000000000001ca9         mov        rdi, rbx
0000000000001cac         xor        eax, eax
0000000000001cae         call       j___sprintf_chk                             ; __sprintf_chk
0000000000001cb3         lea        rsi, qword [aUidtmaxsn]                     ; "UID_T_MAX=%s\\n"
0000000000001cba         mov        rdx, rbx
0000000000001cbd         mov        edi, 0x1
0000000000001cc2         xor        eax, eax
0000000000001cc4         call       j___printf_chk                              ; __printf_chk
0000000000001cc9         mov        rdi, rbp
0000000000001ccc         call       decimal_absval_add_one                      ; decimal_absval_add_one
0000000000001cd1         lea        rsi, qword [aUidtoflowsn]                   ; "UID_T_OFLOW=%s\\n"
0000000000001cd8         mov        rdx, rax
0000000000001cdb         mov        edi, 0x1
0000000000001ce0         xor        eax, eax
0000000000001ce2         call       j___printf_chk                              ; __printf_chk
0000000000001ce7         lea        rcx, qword [aPadraigBrady+14]               ; 0x5827
0000000000001cee         mov        r8d, 0xffffffff
0000000000001cf4         mov        edx, 0x15
0000000000001cf9         mov        esi, 0x1
0000000000001cfe         mov        rdi, rbx
0000000000001d01         xor        eax, eax
0000000000001d03         call       j___sprintf_chk                             ; __sprintf_chk
0000000000001d08         lea        rsi, qword [aGidtmaxsn]                     ; "GID_T_MAX=%s\\n"
0000000000001d0f         mov        rdx, rbx
0000000000001d12         mov        edi, 0x1
0000000000001d17         xor        eax, eax
0000000000001d19         call       j___printf_chk                              ; __printf_chk
0000000000001d1e         mov        rdi, rbp
0000000000001d21         call       decimal_absval_add_one                      ; decimal_absval_add_one
0000000000001d26         lea        rsi, qword [aGidtoflowsn]                   ; "GID_T_OFLOW=%s\\n"
0000000000001d2d         mov        rdx, rax
0000000000001d30         mov        edi, 0x1
0000000000001d35         xor        eax, eax
0000000000001d37         call       j___printf_chk                              ; __printf_chk
0000000000001d3c         lea        rcx, qword [aPadraigBrady+14]               ; 0x5827
0000000000001d43         mov        r8d, 0x7fffffff
0000000000001d49         mov        edx, 0x15
0000000000001d4e         mov        esi, 0x1
0000000000001d53         mov        rdi, rbx
0000000000001d56         xor        eax, eax
0000000000001d58         call       j___sprintf_chk                             ; __sprintf_chk
0000000000001d5d         lea        rsi, qword [aPidtmaxsn]                     ; "PID_T_MAX=%s\\n"
0000000000001d64         mov        rdx, rbx
0000000000001d67         mov        edi, 0x1
0000000000001d6c         xor        eax, eax
0000000000001d6e         call       j___printf_chk                              ; __printf_chk
0000000000001d73         mov        rdi, rbp
0000000000001d76         call       decimal_absval_add_one                      ; decimal_absval_add_one
0000000000001d7b         lea        rsi, qword [aPidtoflowsn]                   ; "PID_T_OFLOW=%s\\n"
0000000000001d82         mov        rdx, rax
0000000000001d85         mov        edi, 0x1
0000000000001d8a         xor        eax, eax
0000000000001d8c         call       j___printf_chk                              ; __printf_chk
0000000000001d91         lea        rcx, qword [aPadraigBrady+18]               ; 0x582b
0000000000001d98         mov        r8, 0xffffffff80000000
0000000000001d9f         mov        edx, 0x15
0000000000001da4         mov        esi, 0x1
0000000000001da9         mov        rdi, rbx
0000000000001dac         xor        eax, eax
0000000000001dae         call       j___sprintf_chk                             ; __sprintf_chk
0000000000001db3         lea        rsi, qword [aPidtminsn]                     ; "PID_T_MIN=%s\\n"
0000000000001dba         mov        rdx, rbx
0000000000001dbd         mov        edi, 0x1
0000000000001dc2         xor        eax, eax
0000000000001dc4         call       j___printf_chk                              ; __printf_chk
0000000000001dc9         mov        rdi, rbp
0000000000001dcc         call       decimal_absval_add_one                      ; decimal_absval_add_one
0000000000001dd1         lea        rsi, qword [aPidtuflowsn]                   ; "PID_T_UFLOW=%s\\n"
0000000000001dd8         mov        rdx, rax
0000000000001ddb         mov        edi, 0x1
0000000000001de0         xor        eax, eax
0000000000001de2         call       j___printf_chk                              ; __printf_chk
0000000000001de7         lea        rcx, qword [aPadraigBrady+14]               ; 0x5827
0000000000001dee         movabs     r8, 0x7fffffffffffffff
0000000000001df8         mov        edx, 0x15
0000000000001dfd         mov        esi, 0x1
0000000000001e02         mov        rdi, rbx
0000000000001e05         xor        eax, eax
0000000000001e07         call       j___sprintf_chk                             ; __sprintf_chk
0000000000001e0c         lea        rsi, qword [aOfftmaxsn]                     ; "OFF_T_MAX=%s\\n"
0000000000001e13         mov        rdx, rbx
0000000000001e16         mov        edi, 0x1
0000000000001e1b         xor        eax, eax
0000000000001e1d         call       j___printf_chk                              ; __printf_chk
0000000000001e22         mov        rdi, rbp
0000000000001e25         call       decimal_absval_add_one                      ; decimal_absval_add_one
0000000000001e2a         lea        rsi, qword [aOfftoflowsn]                   ; "OFF_T_OFLOW=%s\\n"
0000000000001e31         mov        rdx, rax
0000000000001e34         mov        edi, 0x1
0000000000001e39         xor        eax, eax
0000000000001e3b         call       j___printf_chk                              ; __printf_chk
0000000000001e40         lea        rcx, qword [aPadraigBrady+18]               ; 0x582b
0000000000001e47         movabs     r8, 0x8000000000000000
0000000000001e51         mov        edx, 0x15
0000000000001e56         mov        esi, 0x1
0000000000001e5b         mov        rdi, rbx
0000000000001e5e         xor        eax, eax
0000000000001e60         call       j___sprintf_chk                             ; __sprintf_chk
0000000000001e65         lea        rsi, qword [aOfftminsn]                     ; "OFF_T_MIN=%s\\n"
0000000000001e6c         mov        rdx, rbx
0000000000001e6f         mov        edi, 0x1
0000000000001e74         xor        eax, eax
0000000000001e76         call       j___printf_chk                              ; __printf_chk
0000000000001e7b         mov        rdi, rbp
0000000000001e7e         call       decimal_absval_add_one                      ; decimal_absval_add_one
0000000000001e83         lea        rsi, qword [aOfftuflowsn]                   ; "OFF_T_UFLOW=%s\\n"
0000000000001e8a         mov        rdx, rax
0000000000001e8d         mov        edi, 0x1
0000000000001e92         xor        eax, eax
0000000000001e94         call       j___printf_chk                              ; __printf_chk
0000000000001e99         lea        rcx, qword [aPadraigBrady+14]               ; 0x5827
0000000000001ea0         movabs     r8, 0x7fffffffffffffff
0000000000001eaa         mov        edx, 0x15
0000000000001eaf         mov        esi, 0x1
0000000000001eb4         mov        rdi, rbx
0000000000001eb7         xor        eax, eax
0000000000001eb9         call       j___sprintf_chk                             ; __sprintf_chk
0000000000001ebe         lea        rsi, qword [aIntmaxmaxsn]                   ; "INTMAX_MAX=%s\\n"
0000000000001ec5         mov        rdx, rbx
0000000000001ec8         mov        edi, 0x1
0000000000001ecd         xor        eax, eax
0000000000001ecf         call       j___printf_chk                              ; __printf_chk
0000000000001ed4         mov        rdi, rbp
0000000000001ed7         call       decimal_absval_add_one                      ; decimal_absval_add_one
0000000000001edc         lea        rsi, qword [aIntmaxoflowsn]                 ; "INTMAX_OFLOW=%s\\n"
0000000000001ee3         mov        rdx, rax
0000000000001ee6         mov        edi, 0x1
0000000000001eeb         xor        eax, eax
0000000000001eed         call       j___printf_chk                              ; __printf_chk
0000000000001ef2         lea        rcx, qword [aPadraigBrady+18]               ; 0x582b
0000000000001ef9         movabs     r8, 0x8000000000000000
0000000000001f03         mov        edx, 0x15
0000000000001f08         mov        esi, 0x1
0000000000001f0d         mov        rdi, rbx
0000000000001f10         xor        eax, eax
0000000000001f12         call       j___sprintf_chk                             ; __sprintf_chk
0000000000001f17         lea        rsi, qword [aIntmaxminsn]                   ; "INTMAX_MIN=%s\\n"
0000000000001f1e         mov        rdx, rbx
0000000000001f21         mov        edi, 0x1
0000000000001f26         xor        eax, eax
0000000000001f28         call       j___printf_chk                              ; __printf_chk
0000000000001f2d         mov        rdi, rbp
0000000000001f30         call       decimal_absval_add_one                      ; decimal_absval_add_one
0000000000001f35         lea        rsi, qword [aIntmaxuflowsn]                 ; "INTMAX_UFLOW=%s\\n"
0000000000001f3c         mov        rdx, rax
0000000000001f3f         mov        edi, 0x1
0000000000001f44         xor        eax, eax
0000000000001f46         call       j___printf_chk                              ; __printf_chk
0000000000001f4b         lea        rcx, qword [aPadraigBrady+14]               ; 0x5827
0000000000001f52         mov        r8, 0xffffffffffffffff
0000000000001f59         mov        edx, 0x15
0000000000001f5e         mov        esi, 0x1
0000000000001f63         mov        rdi, rbx
0000000000001f66         xor        eax, eax
0000000000001f68         call       j___sprintf_chk                             ; __sprintf_chk
0000000000001f6d         lea        rsi, qword [aIntmaxuflowsn+17]              ; 0x5a81
0000000000001f74         mov        rdx, rbx
0000000000001f77         mov        edi, 0x1
0000000000001f7c         xor        eax, eax
0000000000001f7e         call       j___printf_chk                              ; __printf_chk
0000000000001f83         mov        rdi, rbp
0000000000001f86         call       decimal_absval_add_one                      ; decimal_absval_add_one
0000000000001f8b         lea        rsi, qword [aIntmaxmaxsn+15]                ; 0x5a91
0000000000001f92         mov        rdx, rax
0000000000001f95         mov        edi, 0x1
0000000000001f9a         xor        eax, eax
0000000000001f9c         call       j___printf_chk                              ; __printf_chk
0000000000001fa1         lea        rsi, qword [aFltmin]                        ; "FLT_MIN="
0000000000001fa8         mov        edi, 0x1
0000000000001fad         xor        eax, eax
0000000000001faf         call       j___printf_chk                              ; __printf_chk
0000000000001fb4         movss      xmm0, dword [aOrAvailableLoc+52]            ; 0x5c54
0000000000001fbc         call       print_FLT                                   ; print_FLT
0000000000001fc1         lea        rsi, qword [aFltmax]                        ; "FLT_MAX="
0000000000001fc8         mov        edi, 0x1
0000000000001fcd         xor        eax, eax
0000000000001fcf         call       j___printf_chk                              ; __printf_chk
0000000000001fd4         movss      xmm0, dword [float_5c58]                    ; float_5c58
0000000000001fdc         call       print_FLT                                   ; print_FLT
0000000000001fe1         lea        rsi, qword [aDblmin]                        ; "DBL_MIN="
0000000000001fe8         mov        edi, 0x1
0000000000001fed         xor        eax, eax
0000000000001fef         call       j___printf_chk                              ; __printf_chk
0000000000001ff4         movsd      xmm0, qword [float_5c58+8]                  ; 0x5c60
0000000000001ffc         call       print_DBL                                   ; print_DBL
0000000000002001         lea        rsi, qword [aDblmax]                        ; "DBL_MAX="
0000000000002008         mov        edi, 0x1
000000000000200d         xor        eax, eax
000000000000200f         call       j___printf_chk                              ; __printf_chk
0000000000002014         movsd      xmm0, qword [double_5c68]                   ; double_5c68
000000000000201c         call       print_DBL                                   ; print_DBL
0000000000002021         lea        rsi, qword [aFltmax+9]                      ; 0x5ab5
0000000000002028         mov        edi, 0x1
000000000000202d         xor        eax, eax
000000000000202f         call       j___printf_chk                              ; __printf_chk
0000000000002034         movabs     rax, 0x8000000000000000
000000000000203e         push       0x1
0000000000002040         push       rax
0000000000002041         call       print_LDBL                                  ; print_LDBL
0000000000002046         lea        rsi, qword [aDblmin+9]                      ; 0x5abf
000000000000204d         add        rsp, 0x20
0000000000002051         mov        edi, 0x1
0000000000002056         xor        eax, eax
0000000000002058         call       j___printf_chk                              ; __printf_chk
000000000000205d         push       0x7ffe
0000000000002062         push       0xffffffffffffffff
0000000000002064         call       print_LDBL                                  ; print_LDBL
0000000000002069         pop        rdx
000000000000206a         pop        rcx
000000000000206b         mov        rcx, qword [rsp+0x38+var_20]
0000000000002070         xor        rcx, qword [fs:0x28]
0000000000002079         jne        loc_2084

000000000000207b         add        rsp, 0x28
000000000000207f         xor        eax, eax
0000000000002081         pop        rbx
0000000000002082         pop        rbp
0000000000002083         ret
                        ; endp

                     loc_2084:
0000000000002084         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=main+2713
                        ; endp
0000000000002089         align      16                                          ; End of unwind block (FDE at 0x6950)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
0000000000002090         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x6814)
0000000000002092         mov        r9, rdx
0000000000002095         pop        rsi
0000000000002096         mov        rdx, rsp
0000000000002099         and        rsp, 0xfffffffffffffff0
000000000000209d         push       rax
000000000000209e         push       rsp
000000000000209f         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
00000000000020a6         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
00000000000020ad         lea        rdi, qword [main]                           ; main
00000000000020b4         call       qword [qword_207fc8+8]                      ; 0x207fd0
00000000000020ba         hlt
                        ; endp
00000000000020bb         align      64                                          ; End of unwind block (FDE at 0x6814)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
00000000000020c0         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
00000000000020c7         push       rbp
00000000000020c8         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
00000000000020cf         cmp        rax, rdi
00000000000020d2         mov        rbp, rsp
00000000000020d5         je         loc_20f0

00000000000020d7         mov        rax, qword [qword_207fc8]                   ; qword_207fc8
00000000000020de         test       rax, rax
00000000000020e1         je         loc_20f0

00000000000020e3         pop        rbp
00000000000020e4         jmp        rax
                        ; endp
00000000000020e6         align      16

                     loc_20f0:
00000000000020f0         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
00000000000020f1         ret
                        ; endp
00000000000020f2         align      256

                     register_tm_clones:
0000000000002100         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
0000000000002107         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
000000000000210e         push       rbp
000000000000210f         sub        rsi, rdi
0000000000002112         mov        rbp, rsp
0000000000002115         sar        rsi, 0x3
0000000000002119         mov        rax, rsi
000000000000211c         shr        rax, 0x3f
0000000000002120         add        rsi, rax
0000000000002123         sar        rsi, 0x1
0000000000002126         je         loc_2140

0000000000002128         mov        rax, qword [qword_207fe0]                   ; qword_207fe0
000000000000212f         test       rax, rax
0000000000002132         je         loc_2140

0000000000002134         pop        rbp
0000000000002135         jmp        rax
                        ; endp
0000000000002137         align      64

                     loc_2140:
0000000000002140         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000002141         ret
                        ; endp
0000000000002142         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
0000000000002150         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
0000000000002157         jne        loc_2188

0000000000002159         cmp        qword [qword_207fe8], 0x0                   ; qword_207fe8
0000000000002161         push       rbp
0000000000002162         mov        rbp, rsp
0000000000002165         je         loc_2173

0000000000002167         mov        rdi, qword [__dso_handle]                   ; __dso_handle
000000000000216e         call       j_qword_207fe8                              ; qword_207fe8

                     loc_2173:
0000000000002173         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
0000000000002178         mov        byte [completed.7697], 0x1                  ; completed.7697
000000000000217f         pop        rbp
0000000000002180         ret
                        ; endp
0000000000002181         align      8

                     loc_2188:
0000000000002188         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
000000000000218a         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000002190         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000002191         mov        rbp, rsp
0000000000002194         pop        rbp
0000000000002195         jmp        register_tm_clones                          ; register_tm_clones
000000000000219a         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     decimal_absval_add_one:
00000000000021a0         push       rbp                                         ; Begin of unwind block (FDE at 0x6884), CODE XREF=main+212, main+298, main+383, main+469, main+554, main+639, main+725, main+810, main+896, main+981, main+1070
00000000000021a1         push       rbx
00000000000021a2         xor        eax, eax
00000000000021a4         sub        rsp, 0x8
00000000000021a8         movzx      ebp, byte [rdi+1]
00000000000021ac         cmp        bpl, 0x2d
00000000000021b0         sete       al
00000000000021b3         lea        rbx, qword [rdi+rax+1]
00000000000021b8         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
00000000000021bb         call       j_strlen                                    ; strlen
00000000000021c0         add        rax, rbx
00000000000021c3         mov        byte [rbx-1], 0x30
00000000000021c7         movzx      ecx, byte [rax-1]
00000000000021cb         lea        rdx, qword [rax-1]
00000000000021cf         cmp        cl, 0x39
00000000000021d2         jne        loc_21e7

00000000000021d4         nop        dword [rax]

                     loc_21d8:
00000000000021d8         mov        byte [rdx], 0x30                            ; CODE XREF=decimal_absval_add_one+69
00000000000021db         sub        rdx, 0x1
00000000000021df         movzx      ecx, byte [rdx]
00000000000021e2         cmp        cl, 0x39
00000000000021e5         je         loc_21d8

                     loc_21e7:
00000000000021e7         add        ecx, 0x1                                    ; CODE XREF=decimal_absval_add_one+50
00000000000021ea         mov        rax, rdx
00000000000021ed         cmp        rbx, rdx
00000000000021f0         cmovbe     rax, rbx
00000000000021f4         cmp        bpl, 0x2d
00000000000021f8         mov        byte [rdx], cl
00000000000021fa         jne        loc_2204

00000000000021fc         mov        byte [rax-1], 0x2d
0000000000002200         sub        rax, 0x1

                     loc_2204:
0000000000002204         add        rsp, 0x8                                    ; CODE XREF=decimal_absval_add_one+90
0000000000002208         pop        rbx
0000000000002209         pop        rbp
000000000000220a         ret
                        ; endp
000000000000220b         align      16                                          ; End of unwind block (FDE at 0x6884)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     print_FLT:
0000000000002210         push       rbx                                         ; Begin of unwind block (FDE at 0x68ac), CODE XREF=main+2524, main+2556
0000000000002211         xor        ecx, ecx
0000000000002213         mov        edx, 0x1
0000000000002218         mov        esi, 0x1f
000000000000221d         sub        rsp, 0x30
0000000000002221         mov        rbx, rsp
0000000000002224         mov        rdi, rbx
0000000000002227         mov        rax, qword [fs:0x28]
0000000000002230         mov        qword [rsp+0x38+var_10], rax
0000000000002235         xor        eax, eax
0000000000002237         call       ftoastr                                     ; ftoastr
000000000000223c         mov        rdi, rbx                                    ; argument "__s" for method j_puts
000000000000223f         call       j_puts                                      ; puts
0000000000002244         mov        rax, qword [rsp+0x38+var_10]
0000000000002249         xor        rax, qword [fs:0x28]
0000000000002252         jne        loc_225a

0000000000002254         add        rsp, 0x30
0000000000002258         pop        rbx
0000000000002259         ret
                        ; endp

                     loc_225a:
000000000000225a         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=print_FLT+66
                        ; endp
000000000000225f         align      32                                          ; End of unwind block (FDE at 0x68ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     print_DBL:
0000000000002260         push       rbx                                         ; Begin of unwind block (FDE at 0x68d0), CODE XREF=main+2588, main+2620
0000000000002261         xor        ecx, ecx
0000000000002263         mov        edx, 0x1
0000000000002268         mov        esi, 0x28
000000000000226d         sub        rsp, 0x30
0000000000002271         mov        rbx, rsp
0000000000002274         mov        rdi, rbx
0000000000002277         mov        rax, qword [fs:0x28]
0000000000002280         mov        qword [rsp+0x38+var_10], rax
0000000000002285         xor        eax, eax
0000000000002287         call       dtoastr                                     ; dtoastr
000000000000228c         mov        rdi, rbx                                    ; argument "__s" for method j_puts
000000000000228f         call       j_puts                                      ; puts
0000000000002294         mov        rax, qword [rsp+0x38+var_10]
0000000000002299         xor        rax, qword [fs:0x28]
00000000000022a2         jne        loc_22aa

00000000000022a4         add        rsp, 0x30
00000000000022a8         pop        rbx
00000000000022a9         ret
                        ; endp

                     loc_22aa:
00000000000022aa         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=print_DBL+66
                        ; endp
00000000000022af         align      16                                          ; End of unwind block (FDE at 0x68d0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_10: int64_t, -16


                     print_LDBL:
00000000000022b0         push       rbx                                         ; Begin of unwind block (FDE at 0x68f4), CODE XREF=main+2657, main+2692
00000000000022b1         xor        ecx, ecx
00000000000022b3         mov        edx, 0x1
00000000000022b8         mov        esi, 0x2d
00000000000022bd         sub        rsp, 0x40
00000000000022c1         mov        rax, qword [fs:0x28]
00000000000022ca         mov        qword [rsp+0x48+var_10], rax
00000000000022cf         xor        eax, eax
00000000000022d1         mov        rbx, rsp
00000000000022d4         push       qword [rsp+0x48+arg_8]
00000000000022d8         push       qword [rsp+0x50+arg_0]
00000000000022dc         mov        rdi, rbx
00000000000022df         call       ldtoastr                                    ; ldtoastr
00000000000022e4         mov        rdi, rbx                                    ; argument "__s" for method j_puts
00000000000022e7         call       j_puts                                      ; puts
00000000000022ec         pop        rax
00000000000022ed         pop        rdx
00000000000022ee         mov        rax, qword [rsp+0x48+var_10]
00000000000022f3         xor        rax, qword [fs:0x28]
00000000000022fc         jne        loc_2304

00000000000022fe         add        rsp, 0x40
0000000000002302         pop        rbx
0000000000002303         ret
                        ; endp

                     loc_2304:
0000000000002304         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=print_LDBL+76
                        ; endp
0000000000002309         align      16                                          ; End of unwind block (FDE at 0x68f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
0000000000002310         push       r13                                         ; Begin of unwind block (FDE at 0x6924), DATA XREF=main+106
0000000000002312         push       r12
0000000000002314         mov        edx, 0x5
0000000000002319         push       rbp
000000000000231a         push       rbx
000000000000231b         mov        ebp, edi
000000000000231d         sub        rsp, 0x88
0000000000002324         mov        rbx, qword [program_name]                   ; program_name
000000000000232b         mov        rax, qword [fs:0x28]
0000000000002334         mov        qword [rsp+0xa8+var_30], rax
0000000000002339         xor        eax, eax
000000000000233b         test       edi, edi
000000000000233d         je         loc_236d

000000000000233f         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
0000000000002346         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002348         call       j_dcgettext                                 ; dcgettext
000000000000234d         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000002354         mov        rdx, rax
0000000000002357         mov        rcx, rbx
000000000000235a         mov        esi, 0x1
000000000000235f         xor        eax, eax
0000000000002361         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_2366:
0000000000002366         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+638
0000000000002368         call       j_exit                                      ; exit
                        ; endp

                     loc_236d:
000000000000236d         lea        rsi, qword [aUsageSn]                       ; argument "msgid" for method j_dcgettext, "Usage: %s\\n", CODE XREF=usage+45
0000000000002374         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002376         call       j_dcgettext                                 ; dcgettext
000000000000237b         mov        rdx, rbx
000000000000237e         mov        rsi, rax
0000000000002381         mov        edi, 0x1
0000000000002386         xor        eax, eax
0000000000002388         call       j___printf_chk                              ; __printf_chk
000000000000238d         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002394         lea        rsi, qword [aOutputPlatform]                ; argument "msgid" for method j_dcgettext, "Output platform dependent limits in a format useful for shell scripts.\\n\\n"
000000000000239b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000023a0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000023a2         call       j_dcgettext                                 ; dcgettext
00000000000023a7         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000023aa         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000023ad         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000023b2         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000023b9         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
00000000000023c0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000023c5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000023c7         call       j_dcgettext                                 ; dcgettext
00000000000023cc         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000023cf         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000023d2         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000023d7         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000023de         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
00000000000023e5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000023ea         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000023ec         call       j_dcgettext                                 ; dcgettext
00000000000023f1         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000023f4         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000023f7         lea        rbx, qword [aGetlimits]                     ; "getlimits"
00000000000023fe         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002403         lea        rax, qword [aUsageSn+11]                    ; 0x5759
000000000000240a         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
0000000000002411         mov        qword [rsp+0xa8+var_48], 0x0
000000000000241a         mov        qword [rsp+0xa8+var_40], 0x0
0000000000002423         mov        rdx, rsp
0000000000002426         mov        qword [rsp+0xa8+var_A8], rax
000000000000242a         lea        rax, qword [aTestInvocation]                ; "test invocation"
0000000000002431         mov        qword [rsp+0xa8+var_78], rcx
0000000000002436         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
000000000000243d         mov        qword [rsp+0xa8+var_A0], rax
0000000000002442         lea        rax, qword [aCoreutils]                     ; "coreutils"
0000000000002449         mov        qword [rsp+0xa8+var_68], rcx
000000000000244e         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
0000000000002455         mov        qword [rsp+0xa8+var_98], rax
000000000000245a         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
0000000000002461         mov        qword [rsp+0xa8+var_58], rcx
0000000000002466         mov        qword [rsp+0xa8+var_90], rax
000000000000246b         lea        rax, qword [aSha224sum]                     ; "sha224sum"
0000000000002472         mov        qword [rsp+0xa8+var_88], rax
0000000000002477         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
000000000000247e         mov        qword [rsp+0xa8+var_80], rax
0000000000002483         mov        qword [rsp+0xa8+var_70], rax
0000000000002488         mov        qword [rsp+0xa8+var_60], rax
000000000000248d         mov        qword [rsp+0xa8+var_50], rax
0000000000002492         nop        word [rax+rax]

                     loc_2498:
0000000000002498         add        rdx, 0x10                                   ; CODE XREF=usage+421
000000000000249c         mov        rdi, qword [rdx]
000000000000249f         test       rdi, rdi
00000000000024a2         je         loc_24b7

00000000000024a4         mov        ecx, 0xa
00000000000024a9         mov        rsi, rbx
00000000000024ac         rep  cmpsb byte [rsi], byte [rdi]
00000000000024ae         seta       al
00000000000024b1         sbb        al, 0x0
00000000000024b3         test       al, al
00000000000024b5         jne        loc_2498

                     loc_24b7:
00000000000024b7         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+402
00000000000024bb         xor        edi, edi
00000000000024bd         mov        edx, 0x5
00000000000024c2         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
00000000000024c9         test       r12, r12
00000000000024cc         je         loc_2593

00000000000024d2         call       j_dcgettext                                 ; dcgettext
00000000000024d7         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000024de         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x57cf
00000000000024e5         mov        rsi, rax
00000000000024e8         mov        edi, 0x1
00000000000024ed         xor        eax, eax
00000000000024ef         call       j___printf_chk                              ; __printf_chk
00000000000024f4         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
00000000000024f6         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
00000000000024fb         call       j_setlocale                                 ; setlocale
0000000000002500         test       rax, rax
0000000000002503         je         loc_2521

0000000000002505         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x57dd
000000000000250c         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000002511         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
0000000000002514         call       j_strncmp                                   ; strncmp
0000000000002519         test       eax, eax
000000000000251b         jne        loc_2628

                     loc_2521:
0000000000002521         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+499, usage+829
0000000000002528         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000252a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000252f         call       j_dcgettext                                 ; dcgettext
0000000000002534         lea        rcx, qword [aGetlimits]                     ; "getlimits"
000000000000253b         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002542         mov        rsi, rax
0000000000002545         mov        edi, 0x1
000000000000254a         xor        eax, eax
000000000000254c         call       j___printf_chk                              ; __printf_chk
0000000000002551         cmp        r12, rbx
0000000000002554         lea        rcx, qword [aMulticallInvoc+10]             ; 0x5775
000000000000255b         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0x6241
0000000000002562         cmove      rbx, rcx

                     loc_2566:
0000000000002566         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+780
000000000000256d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000256f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002574         call       j_dcgettext                                 ; dcgettext
0000000000002579         mov        rcx, rbx
000000000000257c         mov        rsi, rax
000000000000257f         mov        rdx, r12
0000000000002582         mov        edi, 0x1
0000000000002587         xor        eax, eax
0000000000002589         call       j___printf_chk                              ; __printf_chk
000000000000258e         jmp        loc_2366

                     loc_2593:
0000000000002593         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+444
0000000000002598         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
000000000000259f         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x57cf
00000000000025a6         mov        rsi, rax
00000000000025a9         mov        edi, 0x1
00000000000025ae         xor        eax, eax
00000000000025b0         call       j___printf_chk                              ; __printf_chk
00000000000025b5         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
00000000000025b7         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
00000000000025bc         call       j_setlocale                                 ; setlocale
00000000000025c1         test       rax, rax
00000000000025c4         je         loc_25de

00000000000025c6         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x57dd
00000000000025cd         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
00000000000025d2         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
00000000000025d5         call       j_strncmp                                   ; strncmp
00000000000025da         test       eax, eax
00000000000025dc         jne        loc_2621

                     loc_25de:
00000000000025de         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+692
00000000000025e5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000025ea         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000025ec         lea        r12, qword [aGetlimits]                     ; "getlimits"
00000000000025f3         lea        rbx, qword [aMulticallInvoc+10]             ; 0x5775
00000000000025fa         call       j_dcgettext                                 ; dcgettext
00000000000025ff         lea        rcx, qword [aGetlimits]                     ; "getlimits"
0000000000002606         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
000000000000260d         mov        rsi, rax
0000000000002610         mov        edi, 0x1
0000000000002615         xor        eax, eax
0000000000002617         call       j___printf_chk                              ; __printf_chk
000000000000261c         jmp        loc_2566

                     loc_2621:
0000000000002621         lea        r12, qword [aGetlimits]                     ; "getlimits", CODE XREF=usage+716

                     loc_2628:
0000000000002628         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+523
000000000000262f         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
0000000000002636         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002638         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000263d         call       j_dcgettext                                 ; dcgettext
0000000000002642         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002645         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002648         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000264d         jmp        loc_2521
0000000000002652         align      32                                          ; End of unwind block (FDE at 0x6924)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
0000000000002660         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0x699c), file_name
0000000000002667         ret
                        ; endp
0000000000002668         align      16                                          ; End of unwind block (FDE at 0x699c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
0000000000002670         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x69b0), ignore_EPIPE
0000000000002677         ret
                        ; endp
0000000000002678         align      128                                         ; End of unwind block (FDE at 0x69b0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
0000000000002680         push       rbp                                         ; Begin of unwind block (FDE at 0x69c4), DATA XREF=main+83
0000000000002681         push       rbx
0000000000002682         sub        rsp, 0x8
0000000000002686         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000268d         call       close_stream                                ; close_stream
0000000000002692         test       eax, eax
0000000000002694         je         loc_26ac

0000000000002696         call       j___errno_location                          ; __errno_location
000000000000269b         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
00000000000026a2         mov        rbx, rax
00000000000026a5         je         loc_26c3

00000000000026a7         cmp        dword [rax], 0x20
00000000000026aa         jne        loc_26c3

                     loc_26ac:
00000000000026ac         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
00000000000026b3         call       close_stream                                ; close_stream
00000000000026b8         test       eax, eax
00000000000026ba         jne        loc_2702

00000000000026bc         add        rsp, 0x8
00000000000026c0         pop        rbx
00000000000026c1         pop        rbp
00000000000026c2         ret
                        ; endp

                     loc_26c3:
00000000000026c3         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
00000000000026ca         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000026cc         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000026d1         call       j_dcgettext                                 ; dcgettext
00000000000026d6         mov        rdi, qword [file_name]                      ; file_name
00000000000026dd         mov        rbp, rax
00000000000026e0         test       rdi, rdi
00000000000026e3         je         loc_270d

00000000000026e5         call       quotearg_colon                              ; quotearg_colon
00000000000026ea         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
00000000000026ec         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
00000000000026f3         mov        rcx, rax
00000000000026f6         mov        r8, rbp
00000000000026f9         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000026fb         xor        eax, eax
00000000000026fd         call       j_error                                     ; error

                     loc_2702:
0000000000002702         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
0000000000002708         call       j__exit                                     ; _exit
                        ; endp

                     loc_270d:
000000000000270d         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
000000000000270f         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5c80
0000000000002716         mov        rcx, rax
0000000000002719         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000271b         xor        eax, eax
000000000000271d         call       j_error                                     ; error
0000000000002722         jmp        loc_2702
0000000000002724         align      16                                          ; End of unwind block (FDE at 0x69c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_4B: int16_t, -75
        ;    var_5C: int32_t, -92
        ;    var_68: int64_t, -104


                     dtoastr:
0000000000002730         push       r15                                         ; Begin of unwind block (FDE at 0x69f4), CODE XREF=print_DBL+39
0000000000002732         push       r14
0000000000002734         mov        r14d, ecx
0000000000002737         push       r13
0000000000002739         push       r12
000000000000273b         mov        r12, rdi
000000000000273e         push       rbp
000000000000273f         push       rbx
0000000000002740         mov        rbp, rsi
0000000000002743         movapd     xmm3, xmm0
0000000000002747         sub        rsp, 0x38
000000000000274b         movsd      qword [rsp+0x68+var_68], xmm0
0000000000002750         pxor       xmm0, xmm0
0000000000002754         mov        rax, qword [fs:0x28]
000000000000275d         mov        qword [rsp+0x68+var_40], rax
0000000000002762         xor        eax, eax
0000000000002764         ucomisd    xmm0, xmm3
0000000000002768         ja         loc_2880

000000000000276e         movsd      xmm0, qword [rsp+0x68+var_68]

                     loc_2773:
0000000000002773         mov        eax, edx                                    ; CODE XREF=dtoastr+348
0000000000002775         lea        r13, qword [rsp+0x68+var_4B]
000000000000277a         mov        ecx, edx
000000000000277c         and        eax, 0x1
000000000000277f         shr        ecx, 0x1
0000000000002781         mov        esi, 0x2d25
0000000000002786         lea        rdi, qword [r13+rax+1]
000000000000278b         and        ecx, 0x1
000000000000278e         mov        eax, edx
0000000000002790         mov        word [rsp+0x68+var_4B], si
0000000000002795         shr        eax, 0x2
0000000000002798         mov        ebx, 0x1
000000000000279d         lea        rsi, qword [rdi+rcx]
00000000000027a1         and        eax, 0x1
00000000000027a4         mov        byte [rdi], 0x2b
00000000000027a7         movsd      xmm1, qword [float_5c58+8]                  ; 0x5c60
00000000000027af         mov        edi, 0x2e2a
00000000000027b4         lea        rcx, qword [rsi+rax]
00000000000027b8         mov        eax, edx
00000000000027ba         and        edx, 0x10
00000000000027bd         shr        eax, 0x3
00000000000027c0         mov        byte [rsi], 0x20
00000000000027c3         mov        r15, 0xffffffffffffffff
00000000000027ca         and        eax, 0x1
00000000000027cd         mov        byte [rcx], 0x30
00000000000027d0         add        rax, rcx
00000000000027d3         cmp        edx, 0x1
00000000000027d6         sbb        edx, edx
00000000000027d8         mov        word [rax], di
00000000000027db         mov        byte [rax+2], 0x2a
00000000000027df         and        edx, 0x20
00000000000027e2         mov        byte [rax+4], 0x0
00000000000027e6         add        edx, 0x47
00000000000027e9         ucomisd    xmm1, xmm0
00000000000027ed         mov        byte [rax+3], dl
00000000000027f0         mov        eax, 0xf
00000000000027f5         cmovbe     ebx, eax
00000000000027f8         jmp        loc_2803
00000000000027fa         align      2048

                     loc_2800:
0000000000002800         add        ebx, 0x1                                    ; CODE XREF=dtoastr+269, dtoastr+290, dtoastr+296

                     loc_2803:
0000000000002803         sub        rsp, 0x8                                    ; CODE XREF=dtoastr+200
0000000000002807         mov        rcx, r15
000000000000280a         mov        edx, 0x1
000000000000280f         push       rbx
0000000000002810         mov        r9d, r14d
0000000000002813         mov        r8, r13
0000000000002816         mov        rsi, rbp
0000000000002819         mov        rdi, r12
000000000000281c         mov        eax, 0x1
0000000000002821         movsd      xmm0, qword [rsp+0x78+var_68]
0000000000002827         call       j___snprintf_chk                            ; __snprintf_chk
000000000000282c         test       eax, eax
000000000000282e         pop        rdx
000000000000282f         pop        rcx
0000000000002830         js         loc_285a

0000000000002832         cmp        ebx, 0x10
0000000000002835         jg         loc_285a

0000000000002837         movsxd     rdx, eax
000000000000283a         cmp        rdx, rbp
000000000000283d         jae        loc_2800

000000000000283f         xor        esi, esi                                    ; argument "__endptr" for method j_strtod
0000000000002841         mov        rdi, r12                                    ; argument "__nptr" for method j_strtod
0000000000002844         mov        dword [rsp+0x68+var_5C], eax
0000000000002848         call       j_strtod                                    ; strtod
000000000000284d         ucomisd    xmm0, qword [rsp+0x68+var_68]
0000000000002852         jp         loc_2800

0000000000002854         mov        eax, dword [rsp+0x68+var_5C]
0000000000002858         jne        loc_2800

                     loc_285a:
000000000000285a         mov        rsi, qword [rsp+0x68+var_40]                ; CODE XREF=dtoastr+256, dtoastr+261
000000000000285f         xor        rsi, qword [fs:0x28]
0000000000002868         jne        loc_2891

000000000000286a         add        rsp, 0x38
000000000000286e         pop        rbx
000000000000286f         pop        rbp
0000000000002870         pop        r12
0000000000002872         pop        r13
0000000000002874         pop        r14
0000000000002876         pop        r15
0000000000002878         ret
                        ; endp
0000000000002879         align      128

                     loc_2880:
0000000000002880         movapd     xmm0, xmm3                                  ; CODE XREF=dtoastr+56
0000000000002884         xorpd      xmm0, xmmword [aSS+20]                      ; 0x5c90
000000000000288c         jmp        loc_2773

                     loc_2891:
0000000000002891         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=dtoastr+312
                        ; endp
0000000000002896         align      32                                          ; End of unwind block (FDE at 0x69f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_4B: int16_t, -75
        ;    var_5C: int32_t, -92
        ;    var_60: int32_t, -96
        ;    var_68: int64_t, -104


                     ftoastr:
00000000000028a0         push       r15                                         ; Begin of unwind block (FDE at 0x6a4c), CODE XREF=print_FLT+39
00000000000028a2         pxor       xmm4, xmm4
00000000000028a6         push       r14
00000000000028a8         push       r13
00000000000028aa         mov        r15d, ecx
00000000000028ad         push       r12
00000000000028af         push       rbp
00000000000028b0         mov        r12, rdi
00000000000028b3         push       rbx
00000000000028b4         movaps     xmm3, xmm0
00000000000028b7         cvtss2sd   xmm4, xmm0
00000000000028bb         mov        rbp, rsi
00000000000028be         sub        rsp, 0x38
00000000000028c2         movss      dword [rsp+0x68+var_5C], xmm0
00000000000028c8         pxor       xmm0, xmm0
00000000000028cc         mov        rax, qword [fs:0x28]
00000000000028d5         mov        qword [rsp+0x68+var_40], rax
00000000000028da         xor        eax, eax
00000000000028dc         movsd      qword [rsp+0x68+var_68], xmm4
00000000000028e1         ucomiss    xmm0, xmm3
00000000000028e4         ja         loc_29f8

00000000000028ea         movss      xmm0, dword [rsp+0x68+var_5C]

                     loc_28f0:
00000000000028f0         mov        eax, edx                                    ; CODE XREF=ftoastr+354
00000000000028f2         lea        r13, qword [rsp+0x68+var_4B]
00000000000028f7         mov        ecx, edx
00000000000028f9         and        eax, 0x1
00000000000028fc         shr        ecx, 0x1
00000000000028fe         mov        esi, 0x2d25
0000000000002903         lea        rdi, qword [r13+rax+1]
0000000000002908         and        ecx, 0x1
000000000000290b         mov        eax, edx
000000000000290d         mov        word [rsp+0x68+var_4B], si
0000000000002912         shr        eax, 0x2
0000000000002915         mov        r14, 0xffffffffffffffff
000000000000291c         lea        rsi, qword [rdi+rcx]
0000000000002920         and        eax, 0x1
0000000000002923         mov        byte [rdi], 0x2b
0000000000002926         movss      xmm1, dword [aOrAvailableLoc+52]            ; 0x5c54
000000000000292e         mov        edi, 0x2e2a
0000000000002933         lea        rcx, qword [rsi+rax]
0000000000002937         mov        eax, edx
0000000000002939         and        edx, 0x10
000000000000293c         shr        eax, 0x3
000000000000293f         mov        byte [rsi], 0x20
0000000000002942         and        eax, 0x1
0000000000002945         mov        byte [rcx], 0x30
0000000000002948         add        rax, rcx
000000000000294b         cmp        edx, 0x1
000000000000294e         sbb        edx, edx
0000000000002950         xor        ebx, ebx
0000000000002952         mov        word [rax], di
0000000000002955         and        edx, 0x20
0000000000002958         mov        byte [rax+2], 0x2a
000000000000295c         mov        byte [rax+4], 0x0
0000000000002960         add        edx, 0x47
0000000000002963         ucomiss    xmm1, xmm0
0000000000002966         mov        byte [rax+3], dl
0000000000002969         setbe      bl
000000000000296c         lea        ebx, dword [rbx+rbx*4+1]
0000000000002970         jmp        loc_297b
0000000000002972         align      8

                     loc_2978:
0000000000002978         add        ebx, 0x1                                    ; CODE XREF=ftoastr+277, ftoastr+298, ftoastr+304

                     loc_297b:
000000000000297b         sub        rsp, 0x8                                    ; CODE XREF=ftoastr+208
000000000000297f         mov        rcx, r14
0000000000002982         mov        edx, 0x1
0000000000002987         push       rbx
0000000000002988         mov        r9d, r15d
000000000000298b         mov        r8, r13
000000000000298e         mov        rsi, rbp
0000000000002991         mov        rdi, r12
0000000000002994         mov        eax, 0x1
0000000000002999         movsd      xmm0, qword [rsp+0x78+var_68]
000000000000299f         call       j___snprintf_chk                            ; __snprintf_chk
00000000000029a4         test       eax, eax
00000000000029a6         pop        rdx
00000000000029a7         pop        rcx
00000000000029a8         js         loc_29d2

00000000000029aa         cmp        ebx, 0x8
00000000000029ad         jg         loc_29d2

00000000000029af         movsxd     rdx, eax
00000000000029b2         cmp        rdx, rbp
00000000000029b5         jae        loc_2978

00000000000029b7         xor        esi, esi                                    ; argument "__endptr" for method j_strtof
00000000000029b9         mov        rdi, r12                                    ; argument "__nptr" for method j_strtof
00000000000029bc         mov        dword [rsp+0x68+var_60], eax
00000000000029c0         call       j_strtof                                    ; strtof
00000000000029c5         ucomiss    xmm0, dword [rsp+0x68+var_5C]
00000000000029ca         jp         loc_2978

00000000000029cc         mov        eax, dword [rsp+0x68+var_60]
00000000000029d0         jne        loc_2978

                     loc_29d2:
00000000000029d2         mov        rsi, qword [rsp+0x68+var_40]                ; CODE XREF=ftoastr+264, ftoastr+269
00000000000029d7         xor        rsi, qword [fs:0x28]
00000000000029e0         jne        loc_2a07

00000000000029e2         add        rsp, 0x38
00000000000029e6         pop        rbx
00000000000029e7         pop        rbp
00000000000029e8         pop        r12
00000000000029ea         pop        r13
00000000000029ec         pop        r14
00000000000029ee         pop        r15
00000000000029f0         ret
                        ; endp
00000000000029f1         align      8

                     loc_29f8:
00000000000029f8         movaps     xmm0, xmm3                                  ; CODE XREF=ftoastr+68
00000000000029fb         xorps      xmm0, xmmword [aSS+36]                      ; 0x5ca0
0000000000002a02         jmp        loc_28f0

                     loc_2a07:
0000000000002a07         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=ftoastr+320
                        ; endp
0000000000002a0c         align      16                                          ; End of unwind block (FDE at 0x6a4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_4B: int16_t, -75
        ;    var_5C: int32_t, -92


                     ldtoastr:
0000000000002a10         push       r15                                         ; Begin of unwind block (FDE at 0x6aa4), CODE XREF=print_LDBL+47
0000000000002a12         push       r14
0000000000002a14         fldz
0000000000002a16         push       r13
0000000000002a18         push       r12
0000000000002a1a         mov        r14d, ecx
0000000000002a1d         push       rbp
0000000000002a1e         push       rbx
0000000000002a1f         mov        r12, rdi
0000000000002a22         mov        rbp, rsi
0000000000002a25         sub        rsp, 0x38
0000000000002a29         fld        tword [rsp+0x68+arg_0]
0000000000002a2d         fxch       st1
0000000000002a2f         mov        rax, qword [fs:0x28]
0000000000002a38         mov        qword [rsp+0x68+var_40], rax
0000000000002a3d         xor        eax, eax
0000000000002a3f         fucomip    st1
0000000000002a41         ja         loc_2b50

0000000000002a47         fstp       st0
0000000000002a49         fld        tword [rsp+0x68+arg_0]

                     loc_2a4d:
0000000000002a4d         mov        eax, 0x2d25                                 ; CODE XREF=ldtoastr+322
0000000000002a52         lea        r13, qword [rsp+0x68+var_4B]
0000000000002a57         mov        ecx, edx
0000000000002a59         mov        word [rsp+0x68+var_4B], ax
0000000000002a5e         mov        eax, edx
0000000000002a60         shr        ecx, 0x1
0000000000002a62         and        eax, 0x1
0000000000002a65         and        ecx, 0x1
0000000000002a68         mov        ebx, 0x1
0000000000002a6d         lea        rdi, qword [r13+rax+1]
0000000000002a72         mov        eax, edx
0000000000002a74         mov        r15, 0xffffffffffffffff
0000000000002a7b         shr        eax, 0x2
0000000000002a7e         lea        rsi, qword [rdi+rcx]
0000000000002a82         and        eax, 0x1
0000000000002a85         mov        byte [rdi], 0x2b
0000000000002a88         lea        rcx, qword [rsi+rax]
0000000000002a8c         mov        eax, edx
0000000000002a8e         and        edx, 0x10
0000000000002a91         fld        tword [aSS+52]                              ; 0x5cb0
0000000000002a97         shr        eax, 0x3
0000000000002a9a         mov        byte [rsi], 0x20
0000000000002a9d         mov        byte [rcx], 0x30
0000000000002aa0         and        eax, 0x1
0000000000002aa3         add        rax, rcx
0000000000002aa6         cmp        edx, 0x1
0000000000002aa9         sbb        edx, edx
0000000000002aab         mov        dword [rax], 0x4c2a2e2a
0000000000002ab1         mov        byte [rax+5], 0x0
0000000000002ab5         and        edx, 0x20
0000000000002ab8         add        edx, 0x47
0000000000002abb         mov        byte [rax+4], dl
0000000000002abe         mov        eax, 0x12
0000000000002ac3         fucomip    st1
0000000000002ac5         fstp       st0
0000000000002ac7         cmovbe     ebx, eax
0000000000002aca         jmp        loc_2ad3
0000000000002acc         align      16

                     loc_2ad0:
0000000000002ad0         add        ebx, 0x1                                    ; CODE XREF=ldtoastr+254, ldtoastr+280, ldtoastr+286

                     loc_2ad3:
0000000000002ad3         push       qword [rsp+0x68+arg_8]                      ; CODE XREF=ldtoastr+186
0000000000002ad7         push       qword [rsp+0x70+arg_0]
0000000000002adb         xor        eax, eax
0000000000002add         mov        r9d, r14d
0000000000002ae0         mov        r8, r13
0000000000002ae3         mov        rcx, r15
0000000000002ae6         sub        rsp, 0x8
0000000000002aea         mov        edx, 0x1
0000000000002aef         mov        rsi, rbp
0000000000002af2         push       rbx
0000000000002af3         mov        rdi, r12
0000000000002af6         call       j___snprintf_chk                            ; __snprintf_chk
0000000000002afb         add        rsp, 0x20
0000000000002aff         test       eax, eax
0000000000002b01         js         loc_2b30

0000000000002b03         cmp        ebx, 0x14
0000000000002b06         jg         loc_2b30

0000000000002b08         movsxd     rdx, eax
0000000000002b0b         cmp        rdx, rbp
0000000000002b0e         jae        loc_2ad0

0000000000002b10         xor        esi, esi                                    ; argument "__endptr" for method j_strtold
0000000000002b12         mov        rdi, r12                                    ; argument "__nptr" for method j_strtold
0000000000002b15         mov        dword [rsp+0x68+var_5C], eax
0000000000002b19         call       j_strtold                                   ; strtold
0000000000002b1e         fld        tword [rsp+0x68+arg_0]
0000000000002b22         fxch       st1
0000000000002b24         fucomip    st1
0000000000002b26         fstp       st0
0000000000002b28         jp         loc_2ad0

0000000000002b2a         mov        eax, dword [rsp+0x68+var_5C]
0000000000002b2e         jne        loc_2ad0

                     loc_2b30:
0000000000002b30         mov        rsi, qword [rsp+0x68+var_40]                ; CODE XREF=ldtoastr+241, ldtoastr+246
0000000000002b35         xor        rsi, qword [fs:0x28]
0000000000002b3e         jne        loc_2b57

0000000000002b40         add        rsp, 0x38
0000000000002b44         pop        rbx
0000000000002b45         pop        rbp
0000000000002b46         pop        r12
0000000000002b48         pop        r13
0000000000002b4a         pop        r14
0000000000002b4c         pop        r15
0000000000002b4e         ret
                        ; endp
0000000000002b4f         align      16

                     loc_2b50:
0000000000002b50         fchs                                                   ; CODE XREF=ldtoastr+49
0000000000002b52         jmp        loc_2a4d

                     loc_2b57:
0000000000002b57         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=ldtoastr+302
                        ; endp
0000000000002b5c         align      32                                          ; End of unwind block (FDE at 0x6aa4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_38: -56
        ;    var_48: -72
        ;    var_58: -88
        ;    var_68: -104
        ;    var_78: -120
        ;    var_88: -136
        ;    var_98: -152
        ;    var_A8: -168
        ;    var_D8: int8_t, -216
        ;    var_E0: int64_t, -224
        ;    var_E8: int64_t, -232
        ;    var_F0: int64_t, -240
        ;    var_F4: int32_t, -244
        ;    var_F8: int32_t, -248
        ;    var_100: int64_t, -256


                     parse_long_options:
0000000000002b60         push       r13                                         ; Begin of unwind block (FDE at 0x6b04), CODE XREF=main+145
0000000000002b62         push       r12
0000000000002b64         mov        r13, r8
0000000000002b67         push       rbp
0000000000002b68         push       rbx
0000000000002b69         mov        rbp, rdx
0000000000002b6c         mov        r12, rcx
0000000000002b6f         sub        rsp, 0xe8
0000000000002b76         test       al, al
0000000000002b78         je         loc_2bb4

0000000000002b7a         movaps     xmmword [rsp+0x108+var_A8], xmm0
0000000000002b7f         movaps     xmmword [rsp+0x108+var_98], xmm1
0000000000002b84         movaps     xmmword [rsp+0x108+var_88], xmm2
0000000000002b8c         movaps     xmmword [rsp+0x108+var_78], xmm3
0000000000002b94         movaps     xmmword [rsp+0x108+var_68], xmm4
0000000000002b9c         movaps     xmmword [rsp+0x108+var_58], xmm5
0000000000002ba4         movaps     xmmword [rsp+0x108+var_48], xmm6
0000000000002bac         movaps     xmmword [rsp+0x108+var_38], xmm7

                     loc_2bb4:
0000000000002bb4         mov        rax, qword [fs:0x28]                        ; CODE XREF=parse_long_options+24
0000000000002bbd         mov        qword [rsp+0x108+var_E0], rax
0000000000002bc2         xor        eax, eax
0000000000002bc4         cmp        edi, 0x2
0000000000002bc7         mov        ebx, dword [opterr@@GLIBC_2.2.5]            ; opterr@@GLIBC_2.2.5
0000000000002bcd         mov        dword [opterr@@GLIBC_2.2.5], 0x0            ; opterr@@GLIBC_2.2.5
0000000000002bd7         je         loc_2c10

                     loc_2bd9:
0000000000002bd9         mov        rax, qword [rsp+0x108+var_E0]               ; CODE XREF=parse_long_options+206, parse_long_options+221, parse_long_options+309
0000000000002bde         xor        rax, qword [fs:0x28]
0000000000002be7         mov        dword [opterr@@GLIBC_2.2.5], ebx            ; opterr@@GLIBC_2.2.5
0000000000002bed         mov        dword [optind@@GLIBC_2.2.5], 0x0            ; optind@@GLIBC_2.2.5
0000000000002bf7         jne        loc_2c9a

0000000000002bfd         add        rsp, 0xe8
0000000000002c04         pop        rbx
0000000000002c05         pop        rbp
0000000000002c06         pop        r12
0000000000002c08         pop        r13
0000000000002c0a         ret
                        ; endp
0000000000002c0b         align      16

                     loc_2c10:
0000000000002c10         lea        rcx, qword [long_options]                   ; argument "__longopts" for method j_getopt_long, long_options, CODE XREF=parse_long_options+119
0000000000002c17         lea        rdx, qword [aSS+68]                         ; argument "__shortopts" for method j_getopt_long, 0x5cc0
0000000000002c1e         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
0000000000002c21         mov        qword [rsp+0x108+var_100], r9
0000000000002c26         call       j_getopt_long                               ; getopt_long
0000000000002c2b         cmp        eax, 0xffffffff
0000000000002c2e         je         loc_2bd9

0000000000002c30         cmp        eax, 0x68
0000000000002c33         mov        r9, qword [rsp+0x108+var_100]
0000000000002c38         je         loc_2c90

0000000000002c3a         cmp        eax, 0x76
0000000000002c3d         jne        loc_2bd9

0000000000002c3f         lea        rax, qword [rsp+0x108+arg_0]
0000000000002c47         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002c4e         lea        r8, qword [rsp+0x108+var_F8]
0000000000002c53         mov        rcx, r13
0000000000002c56         mov        rdx, r12
0000000000002c59         mov        rsi, rbp
0000000000002c5c         mov        qword [rsp+0x108+var_F0], rax
0000000000002c61         lea        rax, qword [rsp+0x108+var_D8]
0000000000002c66         mov        dword [rsp+0x108+var_F8], 0x30
0000000000002c6e         mov        dword [rsp+0x108+var_F4], 0x30
0000000000002c76         mov        qword [rsp+0x108+var_E8], rax
0000000000002c7b         call       version_etc_va                              ; version_etc_va
0000000000002c80         xor        edi, edi                                    ; argument "__status" for method j_exit
0000000000002c82         call       j_exit                                      ; exit
                        ; endp
0000000000002c87         align      16

                     loc_2c90:
0000000000002c90         xor        edi, edi                                    ; CODE XREF=parse_long_options+216
0000000000002c92         call       r9
0000000000002c95         jmp        loc_2bd9

                     loc_2c9a:
0000000000002c9a         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=parse_long_options+151
                        ; endp
0000000000002c9f         align      32                                          ; End of unwind block (FDE at 0x6b04)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_38: -56
        ;    var_48: -72
        ;    var_58: -88
        ;    var_68: -104
        ;    var_78: -120
        ;    var_88: -136
        ;    var_98: -152
        ;    var_A8: -168
        ;    var_D8: int8_t, -216
        ;    var_E0: int64_t, -224
        ;    var_E8: int64_t, -232
        ;    var_F0: int64_t, -240
        ;    var_F4: int32_t, -244
        ;    var_F8: int32_t, -248


                     parse_gnu_standard_options_only:
0000000000002ca0         push       r14                                         ; Begin of unwind block (FDE at 0x6b40)
0000000000002ca2         push       r13
0000000000002ca4         mov        r14, r8
0000000000002ca7         push       r12
0000000000002ca9         push       rbp
0000000000002caa         mov        r12, rdx
0000000000002cad         push       rbx
0000000000002cae         mov        r13, rcx
0000000000002cb1         sub        rsp, 0xd0
0000000000002cb8         test       al, al
0000000000002cba         mov        rbp, qword [rsp+0xf8+arg_0]
0000000000002cc2         je         loc_2cfb

0000000000002cc4         movaps     xmmword [rsp+0xf8+var_A8], xmm0
0000000000002cc9         movaps     xmmword [rsp+0xf8+var_98], xmm1
0000000000002cce         movaps     xmmword [rsp+0xf8+var_88], xmm2
0000000000002cd3         movaps     xmmword [rsp+0xf8+var_78], xmm3
0000000000002cdb         movaps     xmmword [rsp+0xf8+var_68], xmm4
0000000000002ce3         movaps     xmmword [rsp+0xf8+var_58], xmm5
0000000000002ceb         movaps     xmmword [rsp+0xf8+var_48], xmm6
0000000000002cf3         movaps     xmmword [rsp+0xf8+var_38], xmm7

                     loc_2cfb:
0000000000002cfb         mov        rax, qword [fs:0x28]                        ; CODE XREF=parse_gnu_standard_options_only+34
0000000000002d04         mov        qword [rsp+0xf8+var_E0], rax
0000000000002d09         xor        eax, eax
0000000000002d0b         lea        rdx, qword [aWrittenBySSAnd+27]             ; 0x6241
0000000000002d12         lea        rax, qword [aSS+68]                         ; 0x5cc0
0000000000002d19         test       r9b, r9b
0000000000002d1c         lea        rcx, qword [long_options]                   ; argument "__longopts" for method j_getopt_long, long_options
0000000000002d23         cmove      rdx, rax                                    ; argument "__shortopts" for method j_getopt_long
0000000000002d27         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
0000000000002d2a         mov        ebx, dword [opterr@@GLIBC_2.2.5]            ; opterr@@GLIBC_2.2.5
0000000000002d30         mov        dword [opterr@@GLIBC_2.2.5], 0x1            ; opterr@@GLIBC_2.2.5
0000000000002d3a         call       j_getopt_long                               ; getopt_long
0000000000002d3f         cmp        eax, 0xffffffff
0000000000002d42         je         loc_2da8

0000000000002d44         cmp        eax, 0x68
0000000000002d47         je         loc_2dd0

0000000000002d4d         cmp        eax, 0x76
0000000000002d50         jne        loc_2da0

0000000000002d52         lea        rax, qword [rsp+0xf8+arg_8]
0000000000002d5a         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002d61         mov        r8, rsp
0000000000002d64         mov        rcx, r14
0000000000002d67         mov        rdx, r13
0000000000002d6a         mov        rsi, r12
0000000000002d6d         mov        qword [rsp+0xf8+var_F0], rax
0000000000002d72         lea        rax, qword [rsp+0xf8+var_D8]
0000000000002d77         mov        dword [rsp+0xf8+var_F8], 0x30
0000000000002d7e         mov        dword [rsp+0xf8+var_F4], 0x30
0000000000002d86         mov        qword [rsp+0xf8+var_E8], rax
0000000000002d8b         call       version_etc_va                              ; version_etc_va
0000000000002d90         xor        edi, edi                                    ; argument "__status" for method j_exit
0000000000002d92         call       j_exit                                      ; exit
                        ; endp
0000000000002d97         align      32

                     loc_2da0:
0000000000002da0         mov        edi, dword [exit_failure]                   ; exit_failure, CODE XREF=parse_gnu_standard_options_only+176
0000000000002da6         call       rbp

                     loc_2da8:
0000000000002da8         mov        rax, qword [rsp+0xf8+var_E0]                ; CODE XREF=parse_gnu_standard_options_only+162, parse_gnu_standard_options_only+308
0000000000002dad         xor        rax, qword [fs:0x28]
0000000000002db6         mov        dword [opterr@@GLIBC_2.2.5], ebx            ; opterr@@GLIBC_2.2.5
0000000000002dbc         jne        loc_2dd6

0000000000002dbe         add        rsp, 0xd0
0000000000002dc5         pop        rbx
0000000000002dc6         pop        rbp
0000000000002dc7         pop        r12
0000000000002dc9         pop        r13
0000000000002dcb         pop        r14
0000000000002dcd         ret
                        ; endp
0000000000002dce         align      16

                     loc_2dd0:
0000000000002dd0         xor        edi, edi                                    ; CODE XREF=parse_gnu_standard_options_only+167
0000000000002dd2         call       rbp
0000000000002dd4         jmp        loc_2da8

                     loc_2dd6:
0000000000002dd6         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=parse_gnu_standard_options_only+284
                        ; endp
0000000000002ddb         align      32                                          ; End of unwind block (FDE at 0x6b40)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000002de0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x6b8c), CODE XREF=main+30
0000000000002de3         push       rbx
0000000000002de4         je         loc_2e5d

0000000000002de6         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
0000000000002deb         mov        rbx, rdi
0000000000002dee         call       j_strrchr                                   ; strrchr
0000000000002df3         test       rax, rax
0000000000002df6         je         loc_2e4d

0000000000002df8         lea        r8, qword [rax+1]
0000000000002dfc         mov        rdx, r8
0000000000002dff         sub        rdx, rbx
0000000000002e02         cmp        rdx, 0x6
0000000000002e06         jle        loc_2e4d

0000000000002e08         lea        rsi, qword [rax-6]
0000000000002e0c         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000002e13         mov        ecx, 0x7
0000000000002e18         rep  cmpsb byte [rsi], byte [rdi]
0000000000002e1a         seta       dl
0000000000002e1d         sbb        dl, 0x0
0000000000002e20         test       dl, dl
0000000000002e22         jne        loc_2e4d

0000000000002e24         lea        rdi, qword [aLibs+8]                        ; 0x5d10
0000000000002e2b         mov        ecx, 0x3
0000000000002e30         mov        rsi, r8
0000000000002e33         mov        rbx, r8
0000000000002e36         rep  cmpsb byte [rsi], byte [rdi]
0000000000002e38         seta       dl
0000000000002e3b         sbb        dl, 0x0
0000000000002e3e         test       dl, dl
0000000000002e40         jne        loc_2e4d

0000000000002e42         lea        rbx, qword [rax+4]
0000000000002e46         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_2e4d:
0000000000002e4d         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
0000000000002e54         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
0000000000002e5b         pop        rbx
0000000000002e5c         ret
                        ; endp

                     loc_2e5d:
0000000000002e5d         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
0000000000002e64         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
0000000000002e6b         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
0000000000002e70         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
0000000000002e75         call       j_fwrite                                    ; fwrite
0000000000002e7a         call       j_abort                                     ; abort
                        ; endp
0000000000002e7f         align      128                                         ; End of unwind block (FDE at 0x6b8c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
0000000000002e80         push       rbp                                         ; Begin of unwind block (FDE at 0x6bac), CODE XREF=sub_36b0+2597, sub_36b0+2619
0000000000002e81         push       rbx
0000000000002e82         mov        rbp, rdi
0000000000002e85         mov        ebx, esi
0000000000002e87         sub        rsp, 0x8
0000000000002e8b         call       locale_charset                              ; locale_charset
0000000000002e90         movzx      edx, byte [rax]
0000000000002e93         and        edx, 0xffffffdf
0000000000002e96         cmp        dl, 0x55
0000000000002e99         je         loc_2f10

0000000000002e9b         cmp        dl, 0x47
0000000000002e9e         je         loc_2ec0

                     loc_2ea0:
0000000000002ea0         lea        rax, qword [aLibs+27]                       ; 0x5d23, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
0000000000002ea7         lea        rdx, qword [aLibs+29]                       ; 0x5d25
0000000000002eae         cmp        ebx, 0x9
0000000000002eb1         cmovne     rax, rdx
0000000000002eb5         add        rsp, 0x8
0000000000002eb9         pop        rbx
0000000000002eba         pop        rbp
0000000000002ebb         ret
                        ; endp
0000000000002ebc         align      64

                     loc_2ec0:
0000000000002ec0         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
0000000000002ec4         and        edx, 0xffffffdf
0000000000002ec7         cmp        dl, 0x42
0000000000002eca         jne        loc_2ea0

0000000000002ecc         cmp        byte [rax+2], 0x31
0000000000002ed0         jne        loc_2ea0

0000000000002ed2         cmp        byte [rax+3], 0x38
0000000000002ed6         jne        loc_2ea0

0000000000002ed8         cmp        byte [rax+4], 0x30
0000000000002edc         jne        loc_2ea0

0000000000002ede         cmp        byte [rax+5], 0x33
0000000000002ee2         jne        loc_2ea0

0000000000002ee4         cmp        byte [rax+6], 0x30
0000000000002ee8         jne        loc_2ea0

0000000000002eea         cmp        byte [rax+7], 0x0
0000000000002eee         jne        loc_2ea0

0000000000002ef0         cmp        byte [rbp], 0x60
0000000000002ef4         lea        rax, qword [aLibs+20]                       ; 0x5d1c
0000000000002efb         lea        rdx, qword [aLibs+24]                       ; 0x5d20
0000000000002f02         cmovne     rax, rdx
0000000000002f06         add        rsp, 0x8
0000000000002f0a         pop        rbx
0000000000002f0b         pop        rbp
0000000000002f0c         ret
                        ; endp
0000000000002f0d         align      16

                     loc_2f10:
0000000000002f10         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
0000000000002f14         and        edx, 0xffffffdf
0000000000002f17         cmp        dl, 0x54
0000000000002f1a         jne        loc_2ea0

0000000000002f1c         movzx      edx, byte [rax+2]
0000000000002f20         and        edx, 0xffffffdf
0000000000002f23         cmp        dl, 0x46
0000000000002f26         jne        loc_2ea0

0000000000002f2c         cmp        byte [rax+3], 0x2d
0000000000002f30         jne        loc_2ea0

0000000000002f36         cmp        byte [rax+4], 0x38
0000000000002f3a         jne        loc_2ea0

0000000000002f40         cmp        byte [rax+5], 0x0
0000000000002f44         jne        loc_2ea0

0000000000002f4a         cmp        byte [rbp], 0x60
0000000000002f4e         lea        rax, qword [aLibs+12]                       ; 0x5d14
0000000000002f55         lea        rdx, qword [aLibs+16]                       ; 0x5d18
0000000000002f5c         cmovne     rax, rdx
0000000000002f60         add        rsp, 0x8
0000000000002f64         pop        rbx
0000000000002f65         pop        rbp
0000000000002f66         ret
                        ; endp
0000000000002f67         align      16                                          ; End of unwind block (FDE at 0x6bac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
0000000000002f70         push       r15                                         ; Begin of unwind block (FDE at 0x6bf0), CODE XREF=sub_36b0+1165, sub_36b0+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
0000000000002f72         push       r14
0000000000002f74         mov        r15d, r8d
0000000000002f77         push       r13
0000000000002f79         push       r12
0000000000002f7b         mov        r14, rdi
0000000000002f7e         push       rbp
0000000000002f7f         push       rbx
0000000000002f80         mov        ebx, r9d
0000000000002f83         mov        r13, rsi
0000000000002f86         mov        rbp, rcx
0000000000002f89         and        ebx, 0x2
0000000000002f8c         sub        rsp, 0xb8
0000000000002f93         mov        rax, qword [rsp+0xe8+arg_0]
0000000000002f9b         mov        qword [rsp+0xe8+var_D8], rdx
0000000000002fa0         mov        dword [rsp+0xe8+var_E0], r8d
0000000000002fa5         mov        dword [rsp+0xe8+var_70], r9d
0000000000002faa         mov        qword [rsp+0xe8+var_C8], rax
0000000000002faf         mov        rax, qword [rsp+0xe8+arg_8]
0000000000002fb7         mov        qword [rsp+0xe8+var_80], rax
0000000000002fbc         mov        rax, qword [rsp+0xe8+arg_10]
0000000000002fc4         mov        qword [rsp+0xe8+var_88], rax
0000000000002fc9         mov        rax, qword [fs:0x28]
0000000000002fd2         mov        qword [rsp+0xe8+var_40], rax
0000000000002fda         xor        eax, eax
0000000000002fdc         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000002fe1         cmp        r15d, 0xa
0000000000002fe5         mov        qword [rsp+0xe8+var_90], rax
0000000000002fea         ja         loc_419f

0000000000002ff0         lea        rcx, qword [switch_table_5d80]              ; switch_table_5d80
0000000000002ff7         mov        edx, r15d
0000000000002ffa         movsxd     rax, dword [rcx+rdx*4]
0000000000002ffe         add        rax, rcx
0000000000003001         jmp        rax                                         ; switch statement using table at 0x5d80, with 11 cases, 0x3003,0x3bd4,0x3c30,0x3c85,0x3cca,0x3d04,0x3daa,0x3de4,0x3fd8

                     loc_3003:
0000000000003003         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_36b0+1318
0000000000003008         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000300d         xor        r12d, r12d
0000000000003010         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003019         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000301e         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_3023:
0000000000003023         lea        rax, qword [aLibs+29]                       ; 0x5d25, CODE XREF=sub_36b0+1876
000000000000302a         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003033         xor        r15d, r15d
0000000000003036         mov        dword [rsp+0xe8+var_E0], 0x2
000000000000303e         mov        qword [rsp+0xe8+var_A0], rax

                     loc_3043:
0000000000003043         xor        r11d, r11d                                  ; CODE XREF=sub_36b0+180, sub_36b0+1400, sub_36b0+1488, sub_36b0+1557, sub_36b0+1615, sub_36b0+1781, sub_36b0+1839, sub_36b0+2408, sub_36b0+2485
0000000000003046         mov        rax, rbp
0000000000003049         mov        r8d, r12d
000000000000304c         mov        rbp, r11
000000000000304f         mov        r11, rax
0000000000003052         nop        word [rax+rax]

                     loc_3058:
0000000000003058         cmp        r11, rbp                                    ; CODE XREF=sub_3160+194
000000000000305b         setne      r12b
000000000000305f         cmp        r11, 0xffffffffffffffff
0000000000003063         jne        loc_3072

0000000000003065         mov        rax, qword [rsp+0xe8+var_D8]
000000000000306a         cmp        byte [rax+rbp], 0x0
000000000000306e         setne      r12b

                     loc_3072:
0000000000003072         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
0000000000003075         je         loc_36d0

000000000000307b         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000003080         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000003085         lea        r9, qword [rdi+rbp]
0000000000003089         setne      al
000000000000308c         and        al, byte [rsp+0xe8+var_DB]
0000000000003090         mov        r10d, eax
0000000000003093         je         loc_3140

0000000000003099         mov        rax, qword [rsp+0xe8+var_D0]
000000000000309e         test       rax, rax
00000000000030a1         je         loc_34d0

00000000000030a7         cmp        r11, 0xffffffffffffffff
00000000000030ab         lea        rbx, qword [rbp+rax]
00000000000030b0         jne        loc_30e0

00000000000030b2         cmp        rax, 0x1
00000000000030b6         jbe        loc_30e0

00000000000030b8         mov        byte [rsp+0xe8+var_B0], r8b
00000000000030bd         mov        byte [rsp+0xe8+var_B8], r10b
00000000000030c2         mov        qword [rsp+0xe8+var_C0], r9
00000000000030c7         call       j_strlen                                    ; strlen
00000000000030cc         movzx      r8d, byte [rsp+0xe8+var_B0]
00000000000030d2         movzx      r10d, byte [rsp+0xe8+var_B8]
00000000000030d8         mov        r11, rax
00000000000030db         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_30e0:
00000000000030e0         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
00000000000030e3         mov        byte [rsp+0xe8+var_C0], r10b
00000000000030e8         ja         loc_36a0

00000000000030ee         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
00000000000030f3         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
00000000000030f8         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
00000000000030fb         mov        qword [rsp+0xe8+var_A8], r11
0000000000003100         mov        byte [rsp+0xe8+var_B0], r8b
0000000000003105         mov        qword [rsp+0xe8+var_B8], r9
000000000000310a         call       j_memcmp                                    ; memcmp
000000000000310f         test       eax, eax
0000000000003111         mov        r9, qword [rsp+0xe8+var_B8]
0000000000003116         movzx      r8d, byte [rsp+0xe8+var_B0]
000000000000311c         mov        r11, qword [rsp+0xe8+var_A8]
0000000000003121         jne        loc_36a0

0000000000003127         cmp        byte [rsp+0xe8+var_D9], 0x0
000000000000312c         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000003132         jne        loc_40b5

0000000000003138         nop        dword [rax+rax]

                     loc_3140:
0000000000003140         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_3690+19
0000000000003144         cmp        bl, 0x7e
0000000000003147         ja         loc_3468

000000000000314d         lea        rcx, qword [switch_table_5d80+44]           ; 0x5dac
0000000000003154         movzx      edx, bl
0000000000003157         movsxd     rax, dword [rcx+rdx*4]
000000000000315b         add        rax, rcx
000000000000315e         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3160:
0000000000003160         xor        r10d, r10d
0000000000003163         cmp        r11, 0x1
0000000000003167         setne      al
000000000000316a         cmp        r11, 0xffffffffffffffff
000000000000316e         jne        loc_317c

0000000000003170         mov        rax, qword [rsp+arg_8]
0000000000003175         cmp        byte [rax+1], 0x0
0000000000003179         setne      al

                     loc_317c:
000000000000317c         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3160+14
0000000000003181         sete       dl
0000000000003184         test       al, al
0000000000003186         je         loc_33d8

                     loc_318c:
000000000000318c         xor        r12d, r12d                                  ; CODE XREF=sub_33d0+11
000000000000318f         xor        eax, eax
0000000000003191         nop        dword [rax]
                        ; endp

                     loc_3198:
0000000000003198         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_3380+50, sub_3450+119
000000000000319d         jne        loc_32b2

00000000000031a3         test       dl, dl
00000000000031a5         jne        loc_32b2

                     loc_31ab:
00000000000031ab         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_3260+87
00000000000031b0         test       rsi, rsi
00000000000031b3         je         loc_31c9

00000000000031b5         mov        edx, ebx
00000000000031b7         shr        dl, 0x5
00000000000031ba         movzx      edx, dl
00000000000031bd         mov        edx, dword [rsi+rdx*4]
00000000000031c0         bt         edx, ebx
00000000000031c3         jb         loc_3313

                     loc_31c9:
00000000000031c9         test       r10b, r10b                                  ; CODE XREF=sub_3160+83, sub_3260+93
00000000000031cc         jne        loc_3313

00000000000031d2         xor        eax, 0x1
00000000000031d5         add        rbp, 0x1
00000000000031d9         and        eax, r8d

                     loc_31dc:
00000000000031dc         test       al, al                                      ; CODE XREF=sub_36b0+936
00000000000031de         je         loc_3200

00000000000031e0         cmp        r13, r15
00000000000031e3         jbe        loc_31ea

00000000000031e5         mov        byte [r14+r15], 0x27

                     loc_31ea:
00000000000031ea         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3160+131
00000000000031ee         cmp        r13, rax
00000000000031f1         jbe        loc_31f9

00000000000031f3         mov        byte [r14+r15+1], 0x27

                     loc_31f9:
00000000000031f9         add        r15, 0x2                                    ; CODE XREF=sub_3160+145
00000000000031fd         xor        r8d, r8d

                     loc_3200:
0000000000003200         cmp        r15, r13                                    ; CODE XREF=sub_3160+126, sub_3260+275, sub_36b0+869
0000000000003203         jae        loc_3209

0000000000003205         mov        byte [r14+r15], bl

                     loc_3209:
0000000000003209         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_3160+163
000000000000320e         add        r15, 0x1
0000000000003212         mov        eax, 0x0
0000000000003217         test       r12b, r12b
000000000000321a         cmove      edi, eax
000000000000321d         mov        byte [rsp+0xe8+var_DA], dil
0000000000003222         jmp        loc_3058
0000000000003227         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3230:
0000000000003230         xor        r10d, r10d
0000000000003233         mov        eax, dword [rsp+arg_0]
0000000000003237         cmp        eax, 0x2
000000000000323a         je         loc_37f8

0000000000003240         cmp        eax, 0x5
0000000000003243         je         loc_37b8

0000000000003249         cmp        eax, 0x2
000000000000324c         mov        ebx, 0x3f
0000000000003251         sete       dl
0000000000003254         xor        r12d, r12d
0000000000003257         xor        eax, eax
0000000000003259         jmp        sub_3160+56
                        ; endp
000000000000325e         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3260:
0000000000003260         xor        r10d, r10d
0000000000003263         cmp        dword [rsp+arg_0], 0x2
0000000000003268         je         loc_3770

000000000000326e         mov        byte [rsp+arg_74], r12b
0000000000003273         xor        edx, edx
0000000000003275         xor        eax, eax
0000000000003277         mov        ebx, 0x27
000000000000327c         jmp        sub_3160+56
                        ; endp
0000000000003281         nop        dword [rax]
0000000000003288         mov        edx, 0x9
000000000000328d         mov        ebx, 0x74

                     loc_3292:
0000000000003292         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3420+10, sub_3510+37, sub_3650+53
0000000000003297         sete       al
000000000000329a         and        al, byte [rsp+arg_7]
000000000000329e         jne        sub_33d0+30

00000000000032a4         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_3260+114
00000000000032a9         jne        loc_3310

                     loc_32ab:
00000000000032ab         mov        ebx, edx                                    ; CODE XREF=sub_3380+18
00000000000032ad         xor        r12d, r12d
00000000000032b0         xor        eax, eax
                        ; endp

                     loc_32b2:
00000000000032b2         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_3160+61, sub_3160+69
00000000000032b7         jne        loc_31ab

00000000000032bd         jmp        loc_31c9
00000000000032c2         nop        word [rax+rax]
00000000000032c8         mov        edx, 0x8
00000000000032cd         mov        ebx, 0x62
00000000000032d2         jmp        sub_3260+68
00000000000032d4         nop        dword [rax]
00000000000032d8         cmp        dword [rsp+8], 0x2
00000000000032dd         je         sub_36b0                                    ; sub_36b0
00000000000032e3         cmp        byte [rsp+0xd], 0x0
00000000000032e8         je         sub_34f0+16

                     loc_32ee:
00000000000032ee         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_34f0+8
00000000000032f3         je         loc_3500

00000000000032f9         cmp        qword [rsp+arg_10], 0x0
00000000000032ff         jne        loc_36bb

0000000000003305         mov        ebx, 0x5c
000000000000330a         nop        word [rax+rax]
                        ; endp

                     loc_3310:
0000000000003310         xor        r12d, r12d                                  ; CODE XREF=sub_3260+73, sub_3650+29
                        ; endp

                     loc_3313:
0000000000003313         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3160+99, sub_3160+108
0000000000003318         sete       dl
000000000000331b         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000003320         mov        eax, edx
0000000000003322         jne        loc_3b78

0000000000003328         mov        eax, r8d
000000000000332b         xor        eax, 0x1
000000000000332e         and        al, dl
0000000000003330         je         loc_3361

0000000000003332         cmp        r13, r15
0000000000003335         jbe        loc_333c

0000000000003337         mov        byte [r14+r15], 0x27

                     loc_333c:
000000000000333c         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_3260+213
0000000000003340         cmp        r13, rdx
0000000000003343         jbe        loc_334b

0000000000003345         mov        byte [r14+r15+1], 0x24

                     loc_334b:
000000000000334b         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_3260+227
000000000000334f         cmp        r13, rdx
0000000000003352         jbe        loc_335a

0000000000003354         mov        byte [r14+r15+2], 0x27

                     loc_335a:
000000000000335a         add        r15, 0x3                                    ; CODE XREF=sub_3260+242
000000000000335e         mov        r8d, eax

                     loc_3361:
0000000000003361         cmp        r13, r15                                    ; CODE XREF=sub_3260+208
0000000000003364         jbe        loc_336b

0000000000003366         mov        byte [r14+r15], 0x5c

                     loc_336b:
000000000000336b         add        r15, 0x1                                    ; CODE XREF=sub_3260+260
000000000000336f         add        rbp, 0x1
0000000000003373         jmp        loc_3200
0000000000003378         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3380:
0000000000003380         cmp        byte [rsp+arg_5], 0x0
0000000000003385         jne        loc_3553

000000000000338b         xor        edx, edx
000000000000338d         test       byte [rsp+arg_70], 0x1
0000000000003392         je         loc_32ab

0000000000003398         add        rbp, 0x1
000000000000339c         jmp        quotearg_buffer_restyled+232
                        ; endp
00000000000033a1         nop        dword [rax]
00000000000033a8         cmp        dword [rsp+8], 0x2
00000000000033ad         sete       dl
00000000000033b0         xor        eax, eax
00000000000033b2         jmp        sub_3160+56
00000000000033b7         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_33c0:
00000000000033c0         mov        edx, 0x7
00000000000033c5         mov        ebx, 0x61
00000000000033ca         jmp        sub_3260+68
                        ; endp
00000000000033cf         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_33d0:
00000000000033d0         cmp        dword [rsp+8], 0x2
00000000000033d5         sete       dl
                        ; endp

                     loc_33d8:
00000000000033d8         test       rbp, rbp                                    ; CODE XREF=sub_3160+38, sub_35f0+35
00000000000033db         jne        loc_318c

00000000000033e1         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_3620+43
00000000000033e6         and        al, dl
00000000000033e8         je         sub_3160+56

00000000000033ee         mov        rbp, r11
00000000000033f1         mov        dword [rsp+arg_0], 0x2
00000000000033f9         jmp        sub_36b0+1097
                        ; endp
00000000000033fe         align      1024


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3400:
0000000000003400         cmp        dword [rsp+arg_0], 0x2
0000000000003405         sete       dl
0000000000003408         xor        r12d, r12d
000000000000340b         jmp        sub_33d0+17
                        ; endp
000000000000340d         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3410:
0000000000003410         cmp        dword [rsp+arg_0], 0x2
0000000000003415         mov        ebx, 0x20
000000000000341a         sete       dl
000000000000341d         jmp        sub_33d0+17
                        ; endp
000000000000341f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3420:
0000000000003420         mov        edx, 0xd
0000000000003425         mov        ebx, 0x72
000000000000342a         jmp        loc_3292
000000000000342f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3430:
0000000000003430         mov        edx, 0xc
0000000000003435         mov        ebx, 0x66
000000000000343a         jmp        sub_3260+68
                        ; endp
000000000000343f         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3440:
0000000000003440         mov        edx, 0xb
0000000000003445         mov        ebx, 0x76
000000000000344a         jmp        sub_3260+68
                        ; endp
000000000000344f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3450:
0000000000003450         mov        edx, 0xa
0000000000003455         mov        ebx, 0x6e
000000000000345a         jmp        sub_3260+50
                        ; endp
000000000000345f         align      32

                     loc_3460:
0000000000003460         xor        r10d, r10d                                  ; CODE XREF=sub_3450+135
0000000000003463         nop        dword [rax+rax]

                     loc_3468:
0000000000003468         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
000000000000346e         jne        loc_3818

0000000000003474         mov        qword [rsp+0xe8+var_B0], r11
0000000000003479         mov        byte [rsp+0xe8+var_B8], r8b
000000000000347e         mov        byte [rsp+0xe8+var_C0], r10b
0000000000003483         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000003488         mov        rcx, qword [rax]
000000000000348b         movzx      edx, bl
000000000000348e         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000003494         movzx      r8d, byte [rsp+0xe8+var_B8]
000000000000349a         mov        r11, qword [rsp+0xe8+var_B0]
000000000000349f         mov        edi, 0x1
00000000000034a4         movzx      eax, word [rcx+rdx*2]
00000000000034a8         and        ax, 0x4000
00000000000034ac         setne      r12b
00000000000034b0         sete       al
00000000000034b3         and        al, byte [rsp+0xe8+var_DB]

                     loc_34b7:
00000000000034b7         test       al, al                                      ; CODE XREF=sub_36b0+2221
00000000000034b9         jne        loc_3e51

00000000000034bf         cmp        dword [rsp+0xe8+var_E0], 0x2
00000000000034c4         sete       dl
00000000000034c7         jmp        loc_3198
00000000000034cc         align      16

                     loc_34d0:
00000000000034d0         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
00000000000034d4         cmp        bl, 0x7e
00000000000034d7         ja         loc_3460

00000000000034d9         lea        rcx, qword [switch_table_5d80+552]          ; 0x5fa8
00000000000034e0         movzx      edx, bl
00000000000034e3         movsxd     rax, dword [rcx+rdx*4]
00000000000034e7         add        rax, rcx
00000000000034ea         jmp        rax
                        ; endp
00000000000034ec         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_34f0:
00000000000034f0         xor        r10d, r10d
00000000000034f3         cmp        byte [rsp+arg_5], 0x0
00000000000034f8         jne        loc_32ee

00000000000034fe         nop

                     loc_3500:
0000000000003500         mov        edx, 0x5c                                   ; CODE XREF=sub_3260+136, sub_3260+147
0000000000003505         mov        ebx, 0x5c
000000000000350a         jmp        sub_3260+68
                        ; endp
000000000000350f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3510:
0000000000003510         mov        edx, 0xc
0000000000003515         xor        r10d, r10d
0000000000003518         mov        ebx, 0x66
000000000000351d         jmp        sub_3260+68
                        ; endp
0000000000003522         nop        word [rax+rax]
0000000000003528         mov        edx, 0xa
000000000000352d         xor        r10d, r10d
0000000000003530         mov        ebx, 0x6e
0000000000003535         jmp        sub_3260+50
000000000000353a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3540:
0000000000003540         mov        ebx, 0x61
0000000000003545         jmp        sub_3260+176
                        ; endp
000000000000354a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3550:
0000000000003550         xor        r10d, r10d
                        ; endp

                     loc_3553:
0000000000003553         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3380+5
0000000000003558         sete       dl
000000000000355b         cmp        byte [rsp+arg_7], 0x0
0000000000003560         jne        loc_40fa

0000000000003566         mov        eax, r8d
0000000000003569         mov        rcx, r15
000000000000356c         xor        eax, 0x1
000000000000356f         and        al, dl
0000000000003571         je         loc_35a0

0000000000003573         cmp        r13, r15
0000000000003576         jbe        loc_357d

0000000000003578         mov        byte [r14+r15], 0x27

                     loc_357d:
000000000000357d         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_3550+38
0000000000003581         cmp        r13, rcx
0000000000003584         jbe        loc_358c

0000000000003586         mov        byte [r14+r15+1], 0x24

                     loc_358c:
000000000000358c         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_3550+52
0000000000003590         cmp        r13, rcx
0000000000003593         ja         loc_3bc9

                     loc_3599:
0000000000003599         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_36b0+1311
000000000000359d         mov        r8d, eax

                     loc_35a0:
00000000000035a0         cmp        r13, rcx                                    ; CODE XREF=sub_3550+33
00000000000035a3         jbe        loc_35aa

00000000000035a5         mov        byte [r14+rcx], 0x5c

                     loc_35aa:
00000000000035aa         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3550+83
00000000000035af         lea        r15, qword [rcx+1]
00000000000035b3         je         loc_3bb9

00000000000035b9         lea        rax, qword [rbp+1]
00000000000035bd         cmp        rax, r11
00000000000035c0         jae        loc_35db

00000000000035c2         mov        rax, qword [rsp+arg_8]
00000000000035c7         movzx      eax, byte [rax+rbp+1]
00000000000035cc         mov        byte [rsp+arg_20], al
00000000000035d0         sub        eax, 0x30
00000000000035d3         cmp        al, 0x9
00000000000035d5         jbe        loc_3e09

                     loc_35db:
00000000000035db         mov        eax, r12d                                   ; CODE XREF=sub_3550+112
00000000000035de         mov        ebx, 0x30
00000000000035e3         xor        r12d, r12d
00000000000035e6         jmp        sub_3160+56
                        ; endp
00000000000035eb         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_35f0:
00000000000035f0         cmp        dword [rsp+arg_0], 0x2
00000000000035f5         mov        r12d, r10d
00000000000035f8         sete       dl
00000000000035fb         xor        r10d, r10d
00000000000035fe         xor        eax, eax
0000000000003600         jmp        sub_3160+56
                        ; endp
0000000000003605         nop        dword [rax]
0000000000003608         cmp        dword [rsp+8], 0x2
000000000000360d         sete       dl
0000000000003610         xor        r10d, r10d
0000000000003613         jmp        sub_33d0+8
0000000000003618         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3620:
0000000000003620         cmp        dword [rsp+8], 0x2
0000000000003625         sete       dl
0000000000003628         xor        r10d, r10d
000000000000362b         xor        r12d, r12d
000000000000362e         jmp        sub_33d0+17
                        ; endp
0000000000003633         nop        dword [rax+rax]
0000000000003638         cmp        dword [rsp+8], 0x2
000000000000363d         mov        r12d, r10d
0000000000003640         mov        ebx, 0x20
0000000000003645         sete       dl
0000000000003648         xor        r10d, r10d
000000000000364b         jmp        sub_33d0+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3650:
0000000000003650         mov        edx, 0xd
0000000000003655         xor        r10d, r10d
0000000000003658         mov        ebx, 0x72
000000000000365d         jmp        sub_3260+50
                        ; endp
0000000000003662         nop        word [rax+rax]
0000000000003668         mov        ebx, 0x76
000000000000366d         jmp        sub_3260+176
0000000000003672         nop        word [rax+rax]
0000000000003678         mov        edx, 0x9
000000000000367d         xor        r10d, r10d
0000000000003680         mov        ebx, 0x74
0000000000003685         jmp        sub_3260+50
000000000000368a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3690:
0000000000003690         mov        ebx, 0x62
0000000000003695         jmp        sub_3260+176
                        ; endp
000000000000369a         nop        word [rax+rax]

                     loc_36a0:
00000000000036a0         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
00000000000036a3         jmp        loc_3140
00000000000036a8         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_36b0:
00000000000036b0         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3260+125
00000000000036b5         jne        sub_36b0+2416
                        ; endp

                     loc_36bb:
00000000000036bb         add        rbp, 0x1                                    ; CODE XREF=sub_3260+159
00000000000036bf         mov        eax, r8d
00000000000036c2         xor        r12d, r12d
00000000000036c5         mov        ebx, 0x5c
00000000000036ca         jmp        sub_3160+124
                        ; endp
00000000000036cf         align      16

                     loc_36d0:
00000000000036d0         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
00000000000036d5         movzx      ebx, byte [rsp+0xe8+var_D9]
00000000000036da         mov        r12d, r8d
00000000000036dd         mov        rbp, r11
00000000000036e0         sete       dl
00000000000036e3         mov        eax, ebx
00000000000036e5         test       r15, r15
00000000000036e8         sete       cl
00000000000036eb         and        eax, edx
00000000000036ed         and        al, cl
00000000000036ef         jne        loc_4156

00000000000036f5         mov        eax, ebx
00000000000036f7         xor        eax, 0x1
00000000000036fa         and        dl, al
00000000000036fc         je         loc_406c

0000000000003702         cmp        byte [rsp+0xe8+var_6C], 0x0
0000000000003707         je         loc_406a

000000000000370d         cmp        byte [rsp+0xe8+var_DA], 0x0
0000000000003712         jne        loc_410d

0000000000003718         test       r13, r13
000000000000371b         sete       al
000000000000371e         cmp        qword [rsp+0xe8+var_98], 0x0
0000000000003724         setne      dl
0000000000003727         and        al, dl
0000000000003729         je         loc_414c

000000000000372f         mov        r13, qword [rsp+0xe8+var_98]

                     loc_3734:
0000000000003734         lea        rbx, qword [aLibs+29]                       ; 0x5d25, CODE XREF=sub_36b0+2781
000000000000373b         mov        byte [r14], 0x27
000000000000373f         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000003747         mov        r15d, 0x1
000000000000374d         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003756         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000375b         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003760         mov        byte [rsp+0xe8+var_6C], al
0000000000003764         jmp        loc_3043
0000000000003769         align      16

                     loc_3770:
0000000000003770         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3260+8
0000000000003775         jne        sub_36b0+2416

000000000000377b         test       r13, r13
000000000000377e         je         loc_3b80

0000000000003784         xor        edx, edx
0000000000003786         cmp        qword [rsp+arg_48], 0x0
000000000000378c         jne        loc_3b80

                     loc_3792:
0000000000003792         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_36b0+1284, sub_36b0+2794
0000000000003797         add        r15, 0x3
000000000000379b         xor        eax, eax
000000000000379d         mov        byte [rsp+arg_74], r12b
00000000000037a2         xor        r8d, r8d
00000000000037a5         mov        r13, rdx
00000000000037a8         mov        ebx, 0x27
00000000000037ad         jmp        sub_3160+105
                        ; endp
00000000000037b2         align      8

                     loc_37b8:
00000000000037b8         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_3230+19
00000000000037bd         je         loc_37e0

00000000000037bf         lea        rcx, qword [rbp+2]
00000000000037c3         cmp        rcx, r11
00000000000037c6         jae        loc_37e0

00000000000037c8         mov        rax, qword [rsp+arg_8]
00000000000037cd         cmp        byte [rax+rbp+1], 0x3f
00000000000037d2         je         loc_3f62

00000000000037d8         nop        dword [rax+rax]

                     loc_37e0:
00000000000037e0         xor        edx, edx                                    ; CODE XREF=sub_36b0+269, sub_36b0+278, sub_36b0+2233, sub_36b0+2253
00000000000037e2         xor        r12d, r12d
00000000000037e5         xor        eax, eax
00000000000037e7         mov        ebx, 0x3f
00000000000037ec         jmp        sub_3160+56
                        ; endp
00000000000037f1         align      8

                     loc_37f8:
00000000000037f8         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3230+10
00000000000037fd         jne        loc_4020

0000000000003803         xor        r12d, r12d
0000000000003806         xor        eax, eax
0000000000003808         mov        ebx, 0x3f
000000000000380d         jmp        sub_3160+105
                        ; endp
0000000000003812         align      8

                     loc_3818:
0000000000003818         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_3450+30
0000000000003820         cmp        r11, 0xffffffffffffffff
0000000000003824         mov        qword [rsp+0xe8+var_48], 0x0
0000000000003830         mov        qword [rsp+0xe8+var_C0], rax
0000000000003835         jne        loc_3864

0000000000003837         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
000000000000383c         mov        byte [rsp+0xe8+var_A8], r8b
0000000000003841         mov        byte [rsp+0xe8+var_B0], r10b
0000000000003846         mov        qword [rsp+0xe8+var_B8], r9
000000000000384b         call       j_strlen                                    ; strlen
0000000000003850         movzx      r8d, byte [rsp+0xe8+var_A8]
0000000000003856         movzx      r10d, byte [rsp+0xe8+var_B0]
000000000000385c         mov        r11, rax
000000000000385f         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_3864:
0000000000003864         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_36b0+389
000000000000386c         xor        ecx, ecx
000000000000386e         mov        byte [rsp+0xe8+var_6A], bl
0000000000003872         mov        byte [rsp+0xe8+var_6B], r8b
0000000000003877         mov        rbx, rcx
000000000000387a         mov        qword [rsp+0xe8+var_60], r9
0000000000003882         mov        qword [rsp+0xe8+var_B0], rax
0000000000003887         mov        byte [rsp+0xe8+var_69], r10b
000000000000388c         mov        qword [rsp+0xe8+var_68], r15
0000000000003894         mov        qword [rsp+0xe8+var_A8], r14
0000000000003899         mov        qword [rsp+0xe8+var_78], r13
000000000000389e         mov        qword [rsp+0xe8+var_B8], r11

                     loc_38a3:
00000000000038a3         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_36b0+623
00000000000038a8         lea        r14, qword [rbp+rbx]
00000000000038ad         mov        rdx, qword [rsp+0xe8+var_B8]
00000000000038b2         mov        rcx, qword [rsp+0xe8+var_C0]
00000000000038b7         mov        rdi, qword [rsp+0xe8+var_B0]
00000000000038bc         lea        r13, qword [rax+r14]
00000000000038c0         sub        rdx, r14
00000000000038c3         mov        rsi, r13
00000000000038c6         call       rpl_mbrtowc                                 ; rpl_mbrtowc
00000000000038cb         test       rax, rax
00000000000038ce         mov        r15, rax
00000000000038d1         je         loc_3921

00000000000038d3         cmp        rax, 0xffffffffffffffff
00000000000038d7         je         loc_3ef5

00000000000038dd         cmp        rax, 0xfffffffffffffffe
00000000000038e1         je         loc_3e81

00000000000038e7         cmp        dword [rsp+0xe8+var_E0], 0x2
00000000000038ec         sete       al
00000000000038ef         and        al, byte [rsp+0xe8+var_D9]
00000000000038f3         jne        loc_3a90

                     loc_38f9:
00000000000038f9         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_36b0+996, sub_36b0+1031
0000000000003900         call       j_iswprint                                  ; iswprint
0000000000003905         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
000000000000390a         test       eax, eax
000000000000390c         mov        eax, 0x0
0000000000003911         cmove      r12d, eax
0000000000003915         add        rbx, r15
0000000000003918         call       j_mbsinit                                   ; mbsinit
000000000000391d         test       eax, eax
000000000000391f         je         loc_38a3

                     loc_3921:
0000000000003921         mov        edx, r12d                                   ; CODE XREF=sub_36b0+545
0000000000003924         mov        rdi, rbx
0000000000003927         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000392d         xor        edx, 0x1
0000000000003930         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003935         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000393b         and        dl, byte [rsp+0xe8+var_DB]
000000000000393f         mov        r15, qword [rsp+0xe8+var_68]
0000000000003947         mov        r14, qword [rsp+0xe8+var_A8]
000000000000394c         mov        r13, qword [rsp+0xe8+var_78]
0000000000003951         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_3956:
0000000000003956         cmp        rdi, 0x1                                    ; CODE XREF=sub_36b0+2112, sub_36b0+2168
000000000000395a         jbe        loc_3f5b

                     loc_3960:
0000000000003960         mov        rcx, rdi                                    ; CODE XREF=sub_36b0+1961
0000000000003963         xor        esi, esi
0000000000003965         movzx      r9d, byte [rsp+0xe8+var_D9]
000000000000396b         add        rcx, rbp
000000000000396e         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000003973         jmp        loc_3a2e
0000000000003978         align      128

                     loc_3980:
0000000000003980         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_36b0+896
0000000000003985         sete       al
0000000000003988         test       r9b, r9b
000000000000398b         jne        loc_3e40

0000000000003991         mov        esi, r8d
0000000000003994         xor        esi, 0x1
0000000000003997         and        al, sil
000000000000399a         je         loc_39cb

000000000000399c         cmp        r13, r15
000000000000399f         jbe        loc_39a6

00000000000039a1         mov        byte [r14+r15], 0x27

                     loc_39a6:
00000000000039a6         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_36b0+751
00000000000039aa         cmp        r13, rsi
00000000000039ad         jbe        loc_39b5

00000000000039af         mov        byte [r14+r15+1], 0x24

                     loc_39b5:
00000000000039b5         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_36b0+765
00000000000039b9         cmp        r13, rsi
00000000000039bc         jbe        loc_39c4

00000000000039be         mov        byte [r14+r15+2], 0x27

                     loc_39c4:
00000000000039c4         add        r15, 0x3                                    ; CODE XREF=sub_36b0+780
00000000000039c8         mov        r8d, eax

                     loc_39cb:
00000000000039cb         cmp        r13, r15                                    ; CODE XREF=sub_36b0+746
00000000000039ce         jbe        loc_39d5

00000000000039d0         mov        byte [r14+r15], 0x5c

                     loc_39d5:
00000000000039d5         lea        rax, qword [r15+1]                          ; CODE XREF=sub_36b0+798
00000000000039d9         cmp        r13, rax
00000000000039dc         jbe        loc_39eb

00000000000039de         mov        eax, ebx
00000000000039e0         shr        al, 0x6
00000000000039e3         add        eax, 0x30
00000000000039e6         mov        byte [r14+r15+1], al

                     loc_39eb:
00000000000039eb         lea        rax, qword [r15+2]                          ; CODE XREF=sub_36b0+812
00000000000039ef         cmp        r13, rax
00000000000039f2         jbe        loc_3a04

00000000000039f4         mov        eax, ebx
00000000000039f6         shr        al, 0x3
00000000000039f9         and        eax, 0x7
00000000000039fc         add        eax, 0x30
00000000000039ff         mov        byte [r14+r15+2], al

                     loc_3a04:
0000000000003a04         and        ebx, 0x7                                    ; CODE XREF=sub_36b0+834
0000000000003a07         add        rbp, 0x1
0000000000003a0b         add        r15, 0x3
0000000000003a0f         add        ebx, 0x30
0000000000003a12         cmp        rbp, rcx
0000000000003a15         jae        loc_3200

0000000000003a1b         mov        esi, edx

                     loc_3a1d:
0000000000003a1d         cmp        r13, r15                                    ; CODE XREF=sub_36b0+985, sub_36b0+1969
0000000000003a20         jbe        loc_3a26

0000000000003a22         mov        byte [r14+r15], bl

                     loc_3a26:
0000000000003a26         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_36b0+880
0000000000003a2a         add        r15, 0x1

                     loc_3a2e:
0000000000003a2e         test       dl, dl                                      ; CODE XREF=sub_36b0+707
0000000000003a30         jne        loc_3980

0000000000003a36         mov        eax, esi
0000000000003a38         xor        eax, 0x1
0000000000003a3b         and        eax, r8d
0000000000003a3e         test       r10b, r10b
0000000000003a41         je         loc_3a51

0000000000003a43         cmp        r13, r15
0000000000003a46         jbe        loc_3a4d

0000000000003a48         mov        byte [r14+r15], 0x5c

                     loc_3a4d:
0000000000003a4d         add        r15, 0x1                                    ; CODE XREF=sub_36b0+918

                     loc_3a51:
0000000000003a51         add        rbp, 0x1                                    ; CODE XREF=sub_36b0+913
0000000000003a55         cmp        rbp, rcx
0000000000003a58         jae        loc_31dc

0000000000003a5e         test       al, al
0000000000003a60         je         loc_3e5e

0000000000003a66         cmp        r13, r15
0000000000003a69         jbe        loc_3a70

0000000000003a6b         mov        byte [r14+r15], 0x27

                     loc_3a70:
0000000000003a70         lea        rax, qword [r15+1]                          ; CODE XREF=sub_36b0+953
0000000000003a74         cmp        r13, rax
0000000000003a77         jbe        loc_3a7f

0000000000003a79         mov        byte [r14+r15+1], 0x27

                     loc_3a7f:
0000000000003a7f         add        r15, 0x2                                    ; CODE XREF=sub_36b0+967
0000000000003a83         xor        r10d, r10d
0000000000003a86         xor        r8d, r8d
0000000000003a89         jmp        loc_3a1d
0000000000003a8b         align      16

                     loc_3a90:
0000000000003a90         cmp        r15, 0x1                                    ; CODE XREF=sub_36b0+579
0000000000003a94         je         loc_38f9

0000000000003a9a         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000003a9f         lea        rcx, qword [rdi+r15]
0000000000003aa3         lea        rdx, qword [rdi+r14+1]
0000000000003aa8         lea        r8, qword [rcx+r14]
0000000000003aac         jmp        loc_3abd
0000000000003aae         align      16

                     loc_3ab0:
0000000000003ab0         add        rdx, 0x1                                    ; CODE XREF=sub_36b0+1046, sub_36b0+1072
0000000000003ab4         cmp        r8, rdx
0000000000003ab7         je         loc_38f9

                     loc_3abd:
0000000000003abd         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_36b0+1020
0000000000003ac0         sub        ecx, 0x5b
0000000000003ac3         cmp        cl, 0x21
0000000000003ac6         ja         loc_3ab0

0000000000003ac8         mov        esi, 0x1
0000000000003acd         shl        rsi, cl
0000000000003ad0         mov        rcx, rsi
0000000000003ad3         movabs     rsi, 0x20000002b
0000000000003add         test       rcx, rsi
0000000000003ae0         je         loc_3ab0

0000000000003ae2         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003ae7         mov        r13, qword [rsp+0xe8+var_78]
0000000000003aec         mov        rbp, qword [rsp+0xe8+var_B8]
0000000000003af1         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_3af9:
0000000000003af9         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_36b0+1227, sub_36b0+1948, sub_36b0+2585, sub_36b0+2734
0000000000003afe         je         loc_3b10

0000000000003b00         test       al, al
0000000000003b02         mov        eax, 0x4
0000000000003b07         cmove      eax, dword [rsp+0xe8+var_E0]
0000000000003b0c         mov        dword [rsp+0xe8+var_E0], eax

                     loc_3b10:
0000000000003b10         sub        rsp, 0x8                                    ; CODE XREF=sub_36b0+1102
0000000000003b14         mov        rcx, rbp
0000000000003b17         mov        rsi, r13
0000000000003b1a         push       qword [rsp+0xf0+var_88]
0000000000003b1e         push       qword [rsp+0xf8+var_80]
0000000000003b22         mov        rdi, r14
0000000000003b25         push       0x0
0000000000003b27         mov        r9d, dword [rsp+0x108+var_70]
0000000000003b2f         mov        r8d, dword [rsp+0x108+var_E0]
0000000000003b34         mov        rdx, qword [rsp+0x108+var_D8]
0000000000003b39         and        r9d, 0xfffffffd
0000000000003b3d         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003b42         add        rsp, 0x20
0000000000003b46         mov        r15, rax

                     loc_3b49:
0000000000003b49         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_36b0+2549, sub_36b0+2560, sub_36b0+2711
0000000000003b51         xor        rbx, qword [fs:0x28]
0000000000003b5a         mov        rax, r15
0000000000003b5d         jne        loc_4163

0000000000003b63         add        rsp, 0xb8
0000000000003b6a         pop        rbx
0000000000003b6b         pop        rbp
0000000000003b6c         pop        r12
0000000000003b6e         pop        r13
0000000000003b70         pop        r14
0000000000003b72         pop        r15
0000000000003b74         ret
                        ; endp
0000000000003b75         align      8

                     loc_3b78:
0000000000003b78         mov        rbp, r11                                    ; CODE XREF=sub_3260+194
0000000000003b7b         jmp        loc_3af9

                     loc_3b80:
0000000000003b80         cmp        r13, r15                                    ; CODE XREF=sub_36b0+206, sub_36b0+220
0000000000003b83         jbe        loc_3b8a

0000000000003b85         mov        byte [r14+r15], 0x27

                     loc_3b8a:
0000000000003b8a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_36b0+1235
0000000000003b8e         cmp        r13, rax
0000000000003b91         jbe        loc_3b99

0000000000003b93         mov        byte [r14+r15+1], 0x5c

                     loc_3b99:
0000000000003b99         lea        rax, qword [r15+2]                          ; CODE XREF=sub_36b0+1249
0000000000003b9d         cmp        r13, rax
0000000000003ba0         jbe        loc_4192

0000000000003ba6         mov        rdx, r13
0000000000003ba9         mov        byte [r14+r15+2], 0x27
0000000000003baf         mov        r13, qword [rsp+arg_48]
0000000000003bb4         jmp        loc_3792

                     loc_3bb9:
0000000000003bb9         mov        eax, r12d                                   ; CODE XREF=sub_3550+99
0000000000003bbc         mov        ebx, 0x30
0000000000003bc1         xor        r12d, r12d
0000000000003bc4         jmp        sub_3160+105
                        ; endp

                     loc_3bc9:
0000000000003bc9         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_3550+67
0000000000003bcf         jmp        loc_3599

                     loc_3bd4:
0000000000003bd4         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
0000000000003bd6         jne        loc_3003

0000000000003bdc         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_3be1:
0000000000003be1         test       r13, r13                                    ; CODE XREF=sub_36b0+2749
0000000000003be4         jne        loc_417a

0000000000003bea         lea        rax, qword [aLibs+29]                       ; 0x5d25
0000000000003bf1         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003bfa         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003bff         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003c04         xor        r12d, r12d
0000000000003c07         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003c0c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003c15         mov        qword [rsp+0xe8+var_A0], rax
0000000000003c1a         mov        r15d, 0x1
0000000000003c20         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000003c28         jmp        loc_3043
0000000000003c2d         align      16

                     loc_3c30:
0000000000003c30         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
0000000000003c32         jne        loc_402d

0000000000003c38         test       r13, r13
0000000000003c3b         je         loc_3e66

0000000000003c41         mov        byte [r14], 0x22
0000000000003c45         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003c4a         xor        r12d, r12d
0000000000003c4d         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003c52         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_3c5b:
0000000000003c5b         lea        rax, qword [aLibs+27]                       ; 0x5d23, CODE XREF=sub_36b0+1996
0000000000003c62         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003c67         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003c6c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003c75         mov        r15d, 0x1
0000000000003c7b         mov        qword [rsp+0xe8+var_A0], rax
0000000000003c80         jmp        loc_3043

                     loc_3c85:
0000000000003c85         lea        rax, qword [aLibs+27]                       ; case 6, 0x5d23, CODE XREF=quotearg_buffer_restyled+145
0000000000003c8c         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003c91         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003c96         xor        r12d, r12d
0000000000003c99         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003ca2         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003ca7         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003cac         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003cb5         xor        r15d, r15d
0000000000003cb8         mov        qword [rsp+0xe8+var_A0], rax
0000000000003cbd         mov        dword [rsp+0xe8+var_E0], 0x5
0000000000003cc5         jmp        loc_3043

                     loc_3cca:
0000000000003cca         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
0000000000003ccf         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003cd4         xor        r12d, r12d
0000000000003cd7         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003ce0         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003ce5         xor        r15d, r15d
0000000000003ce8         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003ced         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000003cf6         mov        qword [rsp+0xe8+var_A0], 0x0
0000000000003cff         jmp        loc_3043

                     loc_3d04:
0000000000003d04         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
0000000000003d09         je         loc_3d61

0000000000003d0b         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0x5d27
0000000000003d12         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003d14         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003d19         call       j_dcgettext                                 ; dcgettext
0000000000003d1e         mov        rcx, rax
0000000000003d21         mov        qword [rsp+0xe8+var_80], rax
0000000000003d26         lea        rax, qword [aLibs+31]                       ; 0x5d27
0000000000003d2d         cmp        rcx, rax
0000000000003d30         je         loc_40ce

                     loc_3d36:
0000000000003d36         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x5d25, CODE XREF=sub_36b0+2607
0000000000003d3d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003d3f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003d44         call       j_dcgettext                                 ; dcgettext
0000000000003d49         mov        rcx, rax
0000000000003d4c         mov        qword [rsp+0xe8+var_88], rax
0000000000003d51         lea        rax, qword [aLibs+29]                       ; 0x5d25
0000000000003d58         cmp        rcx, rax
0000000000003d5b         je         loc_40e4

                     loc_3d61:
0000000000003d61         xor        r15d, r15d                                  ; CODE XREF=sub_36b0+1625, sub_36b0+2629
0000000000003d64         test       ebx, ebx
0000000000003d66         je         loc_3f2d

                     loc_3d6c:
0000000000003d6c         test       ebx, ebx                                    ; CODE XREF=sub_36b0+2183, sub_36b0+2214
0000000000003d6e         mov        rbx, qword [rsp+0xe8+var_88]
0000000000003d73         setne      byte [rsp+0xe8+var_D9]
0000000000003d78         xor        r12d, r12d
0000000000003d7b         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
0000000000003d7e         call       j_strlen                                    ; strlen
0000000000003d83         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003d88         mov        qword [rsp+0xe8+var_D0], rax
0000000000003d8d         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003d92         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003d97         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003da0         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003da5         jmp        loc_3043

                     loc_3daa:
0000000000003daa         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
0000000000003daf         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003db4         xor        r12d, r12d
0000000000003db7         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003dc0         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003dc5         xor        r15d, r15d
0000000000003dc8         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000003dcd         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000003dd6         mov        qword [rsp+0xe8+var_A0], 0x0
0000000000003ddf         jmp        loc_3043

                     loc_3de4:
0000000000003de4         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000003de9         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003dee         xor        r12d, r12d
0000000000003df1         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003dfa         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003dff         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003e04         jmp        loc_3023

                     loc_3e09:
0000000000003e09         cmp        r13, r15                                    ; CODE XREF=sub_3550+133
0000000000003e0c         jbe        loc_3e13

0000000000003e0e         mov        byte [r14+r15], 0x30

                     loc_3e13:
0000000000003e13         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_36b0+1884
0000000000003e17         cmp        r13, rax
0000000000003e1a         jbe        loc_3e22

0000000000003e1c         mov        byte [r14+rcx+2], 0x30

                     loc_3e22:
0000000000003e22         mov        eax, r12d                                   ; CODE XREF=sub_36b0+1898
0000000000003e25         lea        r15, qword [rcx+3]
0000000000003e29         xor        r12d, r12d
0000000000003e2c         mov        ebx, 0x30
0000000000003e31         jmp        sub_3160+56
                        ; endp
0000000000003e36         align      64

                     loc_3e40:
0000000000003e40         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_36b0+731
0000000000003e45         mov        rbp, r11
0000000000003e48         mov        byte [rsp+0xe8+var_DB], bl
0000000000003e4c         jmp        loc_3af9

                     loc_3e51:
0000000000003e51         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_3450+105
0000000000003e56         xor        r12d, r12d
0000000000003e59         jmp        loc_3960

                     loc_3e5e:
0000000000003e5e         xor        r10d, r10d                                  ; CODE XREF=sub_36b0+944
0000000000003e61         jmp        loc_3a1d

                     loc_3e66:
0000000000003e66         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_36b0+1419
0000000000003e6f         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003e74         xor        r12d, r12d
0000000000003e77         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003e7c         jmp        loc_3c5b

                     loc_3e81:
0000000000003e81         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_36b0+561
0000000000003e86         mov        rsi, r14
0000000000003e89         mov        rcx, r13
0000000000003e8c         mov        rax, rbx
0000000000003e8f         mov        rdi, rbx
0000000000003e92         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000003e98         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003e9d         mov        r9, qword [rsp+0xe8+var_60]
0000000000003ea5         cmp        rsi, r11
0000000000003ea8         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000003eae         mov        r15, qword [rsp+0xe8+var_68]
0000000000003eb6         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003ebb         mov        r13, qword [rsp+0xe8+var_78]
0000000000003ec0         jae        loc_3ee8

0000000000003ec2         cmp        byte [rcx], 0x0
0000000000003ec5         jne        loc_3ed7

0000000000003ec7         jmp        loc_3ee8
0000000000003ec9         align      16

                     loc_3ed0:
0000000000003ed0         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_36b0+2099
0000000000003ed5         je         loc_3ee5

                     loc_3ed7:
0000000000003ed7         add        rax, 0x1                                    ; CODE XREF=sub_36b0+2069
0000000000003edb         lea        rdx, qword [rbp+rax]
0000000000003ee0         cmp        r11, rdx
0000000000003ee3         ja         loc_3ed0

                     loc_3ee5:
0000000000003ee5         mov        rdi, rax                                    ; CODE XREF=sub_36b0+2085

                     loc_3ee8:
0000000000003ee8         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_36b0+2064, sub_36b0+2071
0000000000003eed         xor        r12d, r12d
0000000000003ef0         jmp        loc_3956

                     loc_3ef5:
0000000000003ef5         mov        rdi, rbx                                    ; CODE XREF=sub_36b0+551
0000000000003ef8         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000003efe         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003f03         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000003f09         mov        r15, qword [rsp+0xe8+var_68]
0000000000003f11         xor        r12d, r12d
0000000000003f14         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003f19         mov        r13, qword [rsp+0xe8+var_78]
0000000000003f1e         mov        r11, qword [rsp+0xe8+var_B8]
0000000000003f23         movzx      edx, byte [rsp+0xe8+var_DB]
0000000000003f28         jmp        loc_3956

                     loc_3f2d:
0000000000003f2d         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_36b0+1718
0000000000003f32         movzx      eax, byte [rdx]
0000000000003f35         test       al, al
0000000000003f37         je         loc_3d6c

0000000000003f3d         nop        dword [rax]

                     loc_3f40:
0000000000003f40         cmp        r13, r15                                    ; CODE XREF=sub_36b0+2212
0000000000003f43         jbe        loc_3f49

0000000000003f45         mov        byte [r14+r15], al

                     loc_3f49:
0000000000003f49         add        r15, 0x1                                    ; CODE XREF=sub_36b0+2195
0000000000003f4d         movzx      eax, byte [rdx+r15]
0000000000003f52         test       al, al
0000000000003f54         jne        loc_3f40

0000000000003f56         jmp        loc_3d6c

                     loc_3f5b:
0000000000003f5b         mov        eax, edx                                    ; CODE XREF=sub_36b0+682
0000000000003f5d         jmp        loc_34b7

                     loc_3f62:
0000000000003f62         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_36b0+290
0000000000003f66         cmp        bl, 0x3e
0000000000003f69         ja         loc_37e0

0000000000003f6f         movabs     rax, 0x7000a38200000000
0000000000003f79         bt         rax, rbx
0000000000003f7d         jae        loc_37e0

0000000000003f83         cmp        byte [rsp+arg_7], 0x0
0000000000003f88         jne        loc_4172

0000000000003f8e         cmp        r13, r15
0000000000003f91         jbe        loc_3f98

0000000000003f93         mov        byte [r14+r15], 0x3f

                     loc_3f98:
0000000000003f98         lea        rax, qword [r15+1]                          ; CODE XREF=sub_36b0+2273
0000000000003f9c         cmp        r13, rax
0000000000003f9f         jbe        loc_3fa7

0000000000003fa1         mov        byte [r14+r15+1], 0x22

                     loc_3fa7:
0000000000003fa7         lea        rax, qword [r15+2]                          ; CODE XREF=sub_36b0+2287
0000000000003fab         cmp        r13, rax
0000000000003fae         jbe        loc_3fb6

0000000000003fb0         mov        byte [r14+r15+2], 0x22

                     loc_3fb6:
0000000000003fb6         lea        rax, qword [r15+3]                          ; CODE XREF=sub_36b0+2302
0000000000003fba         cmp        r13, rax
0000000000003fbd         jbe        loc_3fc5

0000000000003fbf         mov        byte [r14+r15+3], 0x3f

                     loc_3fc5:
0000000000003fc5         add        r15, 0x4                                    ; CODE XREF=sub_36b0+2317
0000000000003fc9         xor        edx, edx
0000000000003fcb         xor        r12d, r12d
0000000000003fce         xor        eax, eax
0000000000003fd0         mov        rbp, rcx
0000000000003fd3         jmp        sub_3160+56
                        ; endp

                     loc_3fd8:
0000000000003fd8         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
0000000000003fda         je         loc_4168

0000000000003fe0         lea        rax, qword [aLibs+29]                       ; 0x5d25
0000000000003fe7         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003fec         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003ff1         xor        r12d, r12d
0000000000003ff4         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003ffd         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000004002         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000004007         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004010         xor        r15d, r15d
0000000000004013         mov        qword [rsp+0xe8+var_A0], rax
0000000000004018         jmp        loc_3043
000000000000401d         align      32

                     loc_4020:
0000000000004020         mov        rbp, r11                                    ; CODE XREF=sub_36b0+333
0000000000004023         movzx      eax, byte [rsp+arg_7]
0000000000004028         jmp        sub_36b0+1097
                        ; endp

                     loc_402d:
000000000000402d         lea        rax, qword [aLibs+27]                       ; 0x5d23, CODE XREF=sub_36b0+1410
0000000000004034         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004039         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000403e         xor        r12d, r12d
0000000000004041         mov        qword [rsp+0xe8+var_98], 0x0
000000000000404a         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000404f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004054         mov        qword [rsp+0xe8+var_D0], 0x1
000000000000405d         xor        r15d, r15d
0000000000004060         mov        qword [rsp+0xe8+var_A0], rax
0000000000004065         jmp        loc_3043

                     loc_406a:
000000000000406a         mov        eax, edx                                    ; CODE XREF=sub_36b0+87

                     loc_406c:
000000000000406c         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_36b0+76, sub_36b0+2721
0000000000004071         test       rbx, rbx
0000000000004074         je         loc_40a2

0000000000004076         test       al, al
0000000000004078         je         loc_40a2

000000000000407a         movzx      ecx, byte [rbx]
000000000000407d         mov        rax, rbx
0000000000004080         test       cl, cl
0000000000004082         je         loc_40a2

0000000000004084         mov        rdx, r15
0000000000004087         sub        rax, r15

                     loc_408a:
000000000000408a         cmp        r13, rdx                                    ; CODE XREF=sub_36b0+2541
000000000000408d         jbe        loc_4093

000000000000408f         mov        byte [r14+rdx], cl

                     loc_4093:
0000000000004093         add        rdx, 0x1                                    ; CODE XREF=sub_36b0+2525
0000000000004097         movzx      ecx, byte [rax+rdx]
000000000000409b         test       cl, cl
000000000000409d         jne        loc_408a

000000000000409f         mov        r15, rdx

                     loc_40a2:
00000000000040a2         cmp        r13, r15                                    ; CODE XREF=sub_36b0+2500, sub_36b0+2504, sub_36b0+2514
00000000000040a5         jbe        loc_3b49

00000000000040ab         mov        byte [r14+r15], 0x0
00000000000040b0         jmp        loc_3b49

                     loc_40b5:
00000000000040b5         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
00000000000040ba         movzx      ebx, byte [rsp+0xe8+var_D9]
00000000000040bf         mov        rbp, r11
00000000000040c2         sete       al
00000000000040c5         mov        byte [rsp+0xe8+var_DB], bl
00000000000040c9         jmp        loc_3af9

                     loc_40ce:
00000000000040ce         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_36b0+1664
00000000000040d2         mov        rdi, rcx
00000000000040d5         call       gettext_quote.part.1                        ; gettext_quote.part.1
00000000000040da         mov        qword [rsp+0xe8+var_80], rax
00000000000040df         jmp        loc_3d36

                     loc_40e4:
00000000000040e4         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_36b0+1707
00000000000040e8         mov        rdi, rcx
00000000000040eb         call       gettext_quote.part.1                        ; gettext_quote.part.1
00000000000040f0         mov        qword [rsp+0xe8+var_88], rax
00000000000040f5         jmp        loc_3d61

                     loc_40fa:
00000000000040fa         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_3550+16
00000000000040ff         mov        rbp, r11
0000000000004102         mov        eax, edx
0000000000004104         mov        byte [rsp+arg_5], bl
0000000000004108         jmp        sub_36b0+1097
                        ; endp

                     loc_410d:
000000000000410d         sub        rsp, 0x8                                    ; CODE XREF=sub_36b0+98
0000000000004111         mov        r8d, 0x5
0000000000004117         mov        rcx, r11
000000000000411a         push       qword [rsp+0xf0+var_88]
000000000000411e         push       qword [rsp+0xf8+var_80]
0000000000004122         mov        rdi, r14
0000000000004125         push       qword [rsp+0x100+var_C8]
0000000000004129         mov        r9d, dword [rsp+0x108+var_70]
0000000000004131         mov        rdx, qword [rsp+0x108+var_D8]
0000000000004136         mov        rsi, qword [rsp+0x108+var_98]
000000000000413b         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004140         add        rsp, 0x20
0000000000004144         mov        r15, rax
0000000000004147         jmp        loc_3b49

                     loc_414c:
000000000000414c         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_36b0+121
0000000000004151         jmp        loc_406c

                     loc_4156:
0000000000004156         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_36b0+63
000000000000415e         jmp        loc_3af9

                     loc_4163:
0000000000004163         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_36b0+1197
                        ; endp

                     loc_4168:
0000000000004168         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_36b0+2346
000000000000416d         jmp        loc_3be1

                     loc_4172:
0000000000004172         mov        rbp, r11                                    ; CODE XREF=sub_36b0+2264
0000000000004175         jmp        sub_36b0+1120
                        ; endp

                     loc_417a:
000000000000417a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_36b0+1332
000000000000417f         xor        eax, eax
0000000000004181         xor        r12d, r12d
0000000000004184         mov        qword [rsp+0xe8+var_98], 0x0
000000000000418d         jmp        loc_3734

                     loc_4192:
0000000000004192         mov        rdx, r13                                    ; CODE XREF=sub_36b0+1264
0000000000004195         mov        r13, qword [rsp+arg_48]
000000000000419a         jmp        loc_3792

                     loc_419f:
000000000000419f         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
00000000000041a4         align      16                                          ; End of unwind block (FDE at 0x6bf0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
00000000000041b0         push       r15                                         ; Begin of unwind block (FDE at 0x6c68), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
00000000000041b2         push       r14
00000000000041b4         movsxd     r15, edi
00000000000041b7         push       r13
00000000000041b9         push       r12
00000000000041bb         mov        r14, rdx
00000000000041be         push       rbp
00000000000041bf         push       rbx
00000000000041c0         mov        rbp, rcx
00000000000041c3         sub        rsp, 0x28
00000000000041c7         mov        qword [rsp+0x58+var_50], rsi
00000000000041cc         call       j___errno_location                          ; __errno_location
00000000000041d1         mov        r13, rax
00000000000041d4         mov        eax, dword [rax]
00000000000041d6         test       r15d, r15d
00000000000041d9         mov        rbx, qword [slotvec]                        ; slotvec
00000000000041e0         mov        dword [rsp+0x58+var_40], eax
00000000000041e4         js         loc_4351

00000000000041ea         cmp        dword [nslots], r15d                        ; nslots
00000000000041f1         jg         loc_4255

00000000000041f3         cmp        r15d, 0x7fffffff
00000000000041fa         je         loc_4356

0000000000004200         lea        r12d, dword [r15+1]
0000000000004204         lea        rax, qword [slotvec0]                       ; slotvec0
000000000000420b         movsxd     rsi, r12d
000000000000420e         shl        rsi, 0x4
0000000000004212         cmp        rbx, rax
0000000000004215         je         loc_4330

000000000000421b         mov        rdi, rbx                                    ; argument #1 for method xrealloc
000000000000421e         call       xrealloc                                    ; xrealloc
0000000000004223         mov        rbx, rax
0000000000004226         mov        qword [slotvec], rax                        ; slotvec

                     loc_422d:
000000000000422d         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
0000000000004234         mov        edx, r12d
0000000000004237         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000004239         sub        edx, edi
000000000000423b         shl        rdi, 0x4
000000000000423f         movsxd     rdx, edx
0000000000004242         add        rdi, rbx                                    ; argument "__s" for method j_memset
0000000000004245         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
0000000000004249         call       j_memset                                    ; memset
000000000000424e         mov        dword [nslots], r12d                        ; nslots

                     loc_4255:
0000000000004255         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
0000000000004258         shl        r15, 0x4
000000000000425c         sub        rsp, 0x8
0000000000004260         add        rbx, r15
0000000000004263         lea        r15, qword [rbp+8]
0000000000004267         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
000000000000426b         mov        r11, qword [rbx]
000000000000426e         mov        r12, qword [rbx+8]
0000000000004272         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000004275         or         eax, 0x1
0000000000004278         mov        dword [rsp+0x60+var_3C], eax
000000000000427c         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
000000000000427f         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
0000000000004282         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000004285         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000004287         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
000000000000428a         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
000000000000428f         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
0000000000004292         mov        qword [rsp+0x78+var_48], r11
0000000000004297         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000429c         add        rsp, 0x20
00000000000042a0         mov        r11, qword [rsp+0x58+var_48]
00000000000042a5         cmp        r11, rax
00000000000042a8         ja         loc_4311

00000000000042aa         lea        rsi, qword [rax+1]
00000000000042ae         lea        rax, qword [slot0]                          ; slot0
00000000000042b5         cmp        r12, rax
00000000000042b8         mov        qword [rbx], rsi
00000000000042bb         je         loc_42cf

00000000000042bd         mov        rdi, r12                                    ; argument "__ptr" for method j_free
00000000000042c0         mov        qword [rsp+0x58+var_48], rsi
00000000000042c5         call       j_free                                      ; free
00000000000042ca         mov        rsi, qword [rsp+0x58+var_48]

                     loc_42cf:
00000000000042cf         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
00000000000042d2         mov        qword [rsp+0x58+var_48], rsi
00000000000042d7         call       xmalloc                                     ; xmalloc
00000000000042dc         sub        rsp, 0x8
00000000000042e0         mov        qword [rbx+8], rax
00000000000042e4         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
00000000000042e8         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
00000000000042eb         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
00000000000042ee         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
00000000000042f1         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
00000000000042f3         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
00000000000042f8         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
00000000000042fb         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000004300         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
0000000000004305         mov        r12, rax
0000000000004308         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000430d         add        rsp, 0x20

                     loc_4311:
0000000000004311         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
0000000000004315         mov        dword [r13], eax
0000000000004319         add        rsp, 0x28
000000000000431d         mov        rax, r12
0000000000004320         pop        rbx
0000000000004321         pop        rbp
0000000000004322         pop        r12
0000000000004324         pop        r13
0000000000004326         pop        r14
0000000000004328         pop        r15
000000000000432a         ret
                        ; endp
000000000000432b         align      16

                     loc_4330:
0000000000004330         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
0000000000004332         call       xrealloc                                    ; xrealloc
0000000000004337         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
000000000000433f         mov        rbx, rax
0000000000004342         mov        qword [slotvec], rax                        ; slotvec
0000000000004349         movups     xmmword [rax], xmm0
000000000000434c         jmp        loc_422d

                     loc_4351:
0000000000004351         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_4356:
0000000000004356         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_435b:
000000000000435b         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x6c68)
                     clone_quoting_options:
0000000000004360         push       r12                                         ; Begin of unwind block (FDE at 0x6cd4)
0000000000004362         push       rbp
0000000000004363         push       rbx
0000000000004364         mov        rbx, rdi
0000000000004367         call       j___errno_location                          ; __errno_location
000000000000436c         mov        r12d, dword [rax]
000000000000436f         mov        rbp, rax
0000000000004372         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000004379         test       rbx, rbx
000000000000437c         mov        esi, 0x38
0000000000004381         cmove      rbx, rax
0000000000004385         mov        rdi, rbx
0000000000004388         call       xmemdup                                     ; xmemdup
000000000000438d         mov        dword [rbp], r12d
0000000000004391         pop        rbx
0000000000004392         pop        rbp
0000000000004393         pop        r12
0000000000004395         ret
                        ; endp
0000000000004396         align      32                                          ; End of unwind block (FDE at 0x6cd4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
00000000000043a0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6d00), default_quoting_options
00000000000043a7         test       rdi, rdi
00000000000043aa         cmove      rdi, rax
00000000000043ae         mov        eax, dword [rdi]
00000000000043b0         ret
                        ; endp
00000000000043b1         align      64                                          ; End of unwind block (FDE at 0x6d00)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
00000000000043c0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6d14), default_quoting_options
00000000000043c7         test       rdi, rdi
00000000000043ca         cmove      rdi, rax
00000000000043ce         mov        dword [rdi], esi
00000000000043d0         ret
                        ; endp
00000000000043d1         align      32                                          ; End of unwind block (FDE at 0x6d14)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
00000000000043e0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6d28), default_quoting_options
00000000000043e7         test       rdi, rdi
00000000000043ea         mov        ecx, esi
00000000000043ec         cmove      rdi, rax
00000000000043f0         mov        eax, esi
00000000000043f2         and        ecx, 0x1f
00000000000043f5         shr        al, 0x5
00000000000043f8         movzx      eax, al
00000000000043fb         lea        rdi, qword [rdi+rax*4+8]
0000000000004400         mov        esi, dword [rdi]
0000000000004402         mov        eax, esi
0000000000004404         shr        eax, cl
0000000000004406         xor        edx, eax
0000000000004408         and        eax, 0x1
000000000000440b         and        edx, 0x1
000000000000440e         shl        edx, cl
0000000000004410         xor        edx, esi
0000000000004412         mov        dword [rdi], edx
0000000000004414         ret
                        ; endp
0000000000004415         align      32                                          ; End of unwind block (FDE at 0x6d28)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
0000000000004420         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6d3c), default_quoting_options
0000000000004427         test       rdi, rdi
000000000000442a         cmove      rdi, rax
000000000000442e         mov        eax, dword [rdi+4]
0000000000004431         mov        dword [rdi+4], esi
0000000000004434         ret
                        ; endp
0000000000004435         align      64                                          ; End of unwind block (FDE at 0x6d3c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
0000000000004440         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6d50), default_quoting_options
0000000000004447         test       rdi, rdi
000000000000444a         cmove      rdi, rax
000000000000444e         test       rsi, rsi
0000000000004451         mov        dword [rdi], 0xa
0000000000004457         je         loc_4467

0000000000004459         test       rdx, rdx
000000000000445c         je         loc_4467

000000000000445e         mov        qword [rdi+0x28], rsi
0000000000004462         mov        qword [rdi+0x30], rdx
0000000000004466         ret
                        ; endp

                     loc_4467:
0000000000004467         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
000000000000446b         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
0000000000004470         push       r15                                         ; End of unwind block (FDE at 0x6d50), Begin of unwind block (FDE at 0x6d64)
0000000000004472         push       r14
0000000000004474         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000447b         push       r13
000000000000447d         push       r12
000000000000447f         mov        r13, rdi
0000000000004482         push       rbp
0000000000004483         push       rbx
0000000000004484         mov        rbx, r8
0000000000004487         mov        r14, rsi
000000000000448a         mov        r15, rdx
000000000000448d         sub        rsp, 0x18
0000000000004491         test       r8, r8
0000000000004494         cmove      rbx, rax
0000000000004498         mov        qword [rsp+0x48+var_40], rcx
000000000000449d         call       j___errno_location                          ; __errno_location
00000000000044a2         mov        r12d, dword [rax]
00000000000044a5         mov        rbp, rax
00000000000044a8         lea        rax, qword [rbx+8]
00000000000044ac         sub        rsp, 0x8
00000000000044b0         mov        r9d, dword [rbx+4]
00000000000044b4         push       qword [rbx+0x30]
00000000000044b7         mov        r8d, dword [rbx]
00000000000044ba         push       qword [rbx+0x28]
00000000000044bd         mov        rdx, r15
00000000000044c0         push       rax
00000000000044c1         mov        rcx, qword [rsp+0x68+var_40]
00000000000044c6         mov        rsi, r14
00000000000044c9         mov        rdi, r13
00000000000044cc         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000044d1         mov        dword [rbp], r12d
00000000000044d5         add        rsp, 0x38
00000000000044d9         pop        rbx
00000000000044da         pop        rbp
00000000000044db         pop        r12
00000000000044dd         pop        r13
00000000000044df         pop        r14
00000000000044e1         pop        r15
00000000000044e3         ret
                        ; endp
00000000000044e4         align      16                                          ; End of unwind block (FDE at 0x6d64)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
00000000000044f0         push       r15                                         ; Begin of unwind block (FDE at 0x6db8), CODE XREF=quotearg_alloc+5
00000000000044f2         push       r14
00000000000044f4         lea        rax, qword [default_quoting_options]        ; default_quoting_options
00000000000044fb         push       r13
00000000000044fd         push       r12
00000000000044ff         mov        r12, rdx
0000000000004502         push       rbp
0000000000004503         push       rbx
0000000000004504         mov        rbx, rcx
0000000000004507         mov        r14, rdi
000000000000450a         mov        r15, rsi
000000000000450d         sub        rsp, 0x38
0000000000004511         test       rcx, rcx
0000000000004514         cmove      rbx, rax
0000000000004518         xor        ebp, ebp
000000000000451a         call       j___errno_location                          ; __errno_location
000000000000451f         test       r12, r12
0000000000004522         mov        r13, rax
0000000000004525         mov        eax, dword [rax]
0000000000004527         sete       bpl
000000000000452b         or         ebp, dword [rbx+4]
000000000000452e         lea        r10, qword [rbx+8]
0000000000004532         sub        rsp, 0x8
0000000000004536         mov        r8d, dword [rbx]
0000000000004539         mov        rcx, r15
000000000000453c         mov        dword [rsp+0x70+var_5C], eax
0000000000004540         push       qword [rbx+0x30]
0000000000004543         mov        rdx, r14
0000000000004546         push       qword [rbx+0x28]
0000000000004549         push       r10
000000000000454b         xor        esi, esi
000000000000454d         mov        r9d, ebp
0000000000004550         xor        edi, edi
0000000000004552         mov        qword [rsp+0x88+var_48], r10
0000000000004557         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000455c         lea        rsi, qword [rax+1]
0000000000004560         mov        qword [rsp+0x88+var_40], rax
0000000000004565         add        rsp, 0x20
0000000000004569         mov        rdi, rsi
000000000000456c         mov        qword [rsp+0x68+var_50], rsi
0000000000004571         call       xmalloc                                     ; xmalloc
0000000000004576         mov        qword [rsp+0x68+var_58], rax
000000000000457b         sub        rsp, 0x8
000000000000457f         push       qword [rbx+0x30]
0000000000004582         push       qword [rbx+0x28]
0000000000004585         mov        r10, qword [rsp+0x80+var_48]
000000000000458a         mov        r9d, ebp
000000000000458d         mov        r8d, dword [rbx]
0000000000004590         mov        rcx, r15
0000000000004593         mov        rdx, r14
0000000000004596         mov        rdi, rax
0000000000004599         push       r10
000000000000459b         mov        rsi, qword [rsp+0x88+var_50]
00000000000045a0         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000045a5         mov        eax, dword [rsp+0x88+var_5C]
00000000000045a9         add        rsp, 0x20
00000000000045ad         test       r12, r12
00000000000045b0         mov        dword [r13], eax
00000000000045b4         je         loc_45bf

00000000000045b6         mov        r11, qword [rsp+0x68+var_40]
00000000000045bb         mov        qword [r12], r11

                     loc_45bf:
00000000000045bf         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
00000000000045c4         add        rsp, 0x38
00000000000045c8         pop        rbx
00000000000045c9         pop        rbp
00000000000045ca         pop        r12
00000000000045cc         pop        r13
00000000000045ce         pop        r14
00000000000045d0         pop        r15
00000000000045d2         ret
                        ; endp
00000000000045d3         align      32                                          ; End of unwind block (FDE at 0x6db8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
00000000000045e0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x6e24)
00000000000045e3         xor        edx, edx
00000000000045e5         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
00000000000045ea         align      16                                          ; End of unwind block (FDE at 0x6e24)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
00000000000045f0         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0x6e38), nslots
00000000000045f6         push       r12
00000000000045f8         mov        r12, qword [slotvec]                        ; slotvec
00000000000045ff         push       rbp
0000000000004600         push       rbx
0000000000004601         cmp        eax, 0x1
0000000000004604         jle        loc_4631

0000000000004606         sub        eax, 0x2
0000000000004609         lea        rbx, qword [r12+0x18]
000000000000460e         shl        rax, 0x4
0000000000004612         lea        rbp, qword [r12+rax+0x28]
0000000000004617         nop        word [rax+rax]

                     loc_4620:
0000000000004620         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
0000000000004623         add        rbx, 0x10
0000000000004627         call       j_free                                      ; free
000000000000462c         cmp        rbx, rbp
000000000000462f         jne        loc_4620

                     loc_4631:
0000000000004631         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
0000000000004636         lea        rbx, qword [slot0]                          ; slot0
000000000000463d         cmp        rdi, rbx
0000000000004640         je         loc_4659

0000000000004642         call       j_free                                      ; free
0000000000004647         mov        qword [slotvec0], 0x100                     ; slotvec0
0000000000004652         mov        qword [slotvec0+8], rbx                     ; 0x208078

                     loc_4659:
0000000000004659         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
0000000000004660         cmp        r12, rbx
0000000000004663         je         loc_4674

0000000000004665         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000004668         call       j_free                                      ; free
000000000000466d         mov        qword [slotvec], rbx                        ; slotvec

                     loc_4674:
0000000000004674         pop        rbx                                         ; CODE XREF=quotearg_free+115
0000000000004675         mov        dword [nslots], 0x1                         ; nslots
000000000000467f         pop        rbp
0000000000004680         pop        r12
0000000000004682         ret
                        ; endp
0000000000004683         align      16                                          ; End of unwind block (FDE at 0x6e38)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
0000000000004690         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6e64), default_quoting_options
0000000000004697         mov        rdx, 0xffffffffffffffff
000000000000469e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000046a3         align      16                                          ; End of unwind block (FDE at 0x6e64)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
00000000000046b0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6e78), default_quoting_options
00000000000046b7         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000046bc         align      64                                          ; End of unwind block (FDE at 0x6e78)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
00000000000046c0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6e8c), default_quoting_options
00000000000046c7         mov        rsi, rdi
00000000000046ca         mov        rdx, 0xffffffffffffffff
00000000000046d1         xor        edi, edi
00000000000046d3         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000046d8         align      32                                          ; End of unwind block (FDE at 0x6e8c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
00000000000046e0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6ea0), default_quoting_options
00000000000046e7         mov        rdx, rsi
00000000000046ea         mov        rsi, rdi
00000000000046ed         xor        edi, edi
00000000000046ef         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000046f4         align      256                                         ; End of unwind block (FDE at 0x6ea0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
0000000000004700         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x6eb4)
0000000000004704         mov        rax, rdx
0000000000004707         mov        rdx, qword [fs:0x28]
0000000000004710         mov        qword [rsp+0x48+var_10], rdx
0000000000004715         xor        edx, edx
0000000000004717         cmp        esi, 0xa
000000000000471a         je         loc_4784

000000000000471c         mov        dword [rsp+0x48+var_48], esi
000000000000471f         mov        rcx, rsp
0000000000004722         mov        rdx, 0xffffffffffffffff
0000000000004729         mov        rsi, rax
000000000000472c         mov        qword [rsp+0x48+var_44], 0x0
0000000000004735         mov        qword [rsp+0x48+var_3C], 0x0
000000000000473e         mov        qword [rsp+0x48+var_34], 0x0
0000000000004747         mov        qword [rsp+0x48+var_2C], 0x0
0000000000004750         mov        qword [rsp+0x48+var_24], 0x0
0000000000004759         mov        qword [rsp+0x48+var_1C], 0x0
0000000000004762         mov        dword [rsp+0x48+var_14], 0x0
000000000000476a         call       quotearg_n_options                          ; quotearg_n_options
000000000000476f         mov        rcx, qword [rsp+0x48+var_10]
0000000000004774         xor        rcx, qword [fs:0x28]
000000000000477d         jne        loc_4789

000000000000477f         add        rsp, 0x48
0000000000004783         ret
                        ; endp

                     loc_4784:
0000000000004784         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_4789:
0000000000004789         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
000000000000478e         align      16                                          ; End of unwind block (FDE at 0x6eb4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
0000000000004790         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x6ed0), CODE XREF=quotearg_style_mem+10
0000000000004794         mov        rax, rdx
0000000000004797         mov        rdx, rcx
000000000000479a         mov        rcx, qword [fs:0x28]
00000000000047a3         mov        qword [rsp+0x48+var_10], rcx
00000000000047a8         xor        ecx, ecx
00000000000047aa         cmp        esi, 0xa
00000000000047ad         je         loc_4810

00000000000047af         mov        dword [rsp+0x48+var_48], esi
00000000000047b2         mov        rcx, rsp
00000000000047b5         mov        rsi, rax
00000000000047b8         mov        qword [rsp+0x48+var_44], 0x0
00000000000047c1         mov        qword [rsp+0x48+var_3C], 0x0
00000000000047ca         mov        qword [rsp+0x48+var_34], 0x0
00000000000047d3         mov        qword [rsp+0x48+var_2C], 0x0
00000000000047dc         mov        qword [rsp+0x48+var_24], 0x0
00000000000047e5         mov        qword [rsp+0x48+var_1C], 0x0
00000000000047ee         mov        dword [rsp+0x48+var_14], 0x0
00000000000047f6         call       quotearg_n_options                          ; quotearg_n_options
00000000000047fb         mov        rdx, qword [rsp+0x48+var_10]
0000000000004800         xor        rdx, qword [fs:0x28]
0000000000004809         jne        loc_4815

000000000000480b         add        rsp, 0x48
000000000000480f         ret
                        ; endp

                     loc_4810:
0000000000004810         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_4815:
0000000000004815         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
000000000000481a         align      32                                          ; End of unwind block (FDE at 0x6ed0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
0000000000004820         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x6eec)
0000000000004823         mov        esi, edi
0000000000004825         xor        edi, edi
0000000000004827         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
000000000000482c         align      16                                          ; End of unwind block (FDE at 0x6eec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
0000000000004830         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x6f00)
0000000000004833         mov        rdx, rsi
0000000000004836         mov        esi, edi
0000000000004838         xor        edi, edi
000000000000483a         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
000000000000483f         align      64                                          ; End of unwind block (FDE at 0x6f00)

                     quotearg_char_mem:
0000000000004840         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x6f14), CODE XREF=quotearg_char+11
0000000000004844         mov        ecx, edx
0000000000004846         mov        rax, qword [fs:0x28]
000000000000484f         mov        qword [rsp+0x48+var_10], rax
0000000000004854         xor        eax, eax
0000000000004856         mov        rax, qword [qword_208230]                   ; qword_208230
000000000000485d         mov        r8, rsp
0000000000004860         and        ecx, 0x1f
0000000000004863         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
000000000000486b         mov        qword [rsp+0x48+var_18], rax
0000000000004870         mov        eax, edx
0000000000004872         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000004876         shr        al, 0x5
0000000000004879         movzx      eax, al
000000000000487c         lea        r9, qword [r8+rax*4+8]
0000000000004881         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x208210
0000000000004889         movaps     xmmword [rsp+0x48+var_38], xmm0
000000000000488e         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x208220
0000000000004896         movaps     xmmword [rsp+0x48+var_28], xmm0
000000000000489b         mov        edx, dword [r9]
000000000000489e         mov        eax, edx
00000000000048a0         shr        eax, cl
00000000000048a2         not        eax
00000000000048a4         and        eax, 0x1
00000000000048a7         shl        eax, cl
00000000000048a9         mov        rcx, r8
00000000000048ac         xor        eax, edx
00000000000048ae         mov        rdx, rsi
00000000000048b1         mov        rsi, rdi
00000000000048b4         mov        dword [r9], eax
00000000000048b7         xor        edi, edi
00000000000048b9         call       quotearg_n_options                          ; quotearg_n_options
00000000000048be         mov        rsi, qword [rsp+0x48+var_10]
00000000000048c3         xor        rsi, qword [fs:0x28]
00000000000048cc         jne        loc_48d3

00000000000048ce         add        rsp, 0x48
00000000000048d2         ret
                        ; endp

                     loc_48d3:
00000000000048d3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
00000000000048d8         align      32                                          ; End of unwind block (FDE at 0x6f14)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
00000000000048e0         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0x6f30)
00000000000048e4         mov        rsi, 0xffffffffffffffff
00000000000048eb         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
00000000000048f0         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0x6f30), Begin of unwind block (FDE at 0x6f44), CODE XREF=close_stdout+101
00000000000048f5         mov        rsi, 0xffffffffffffffff
00000000000048fc         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000004901         align      16                                          ; End of unwind block (FDE at 0x6f44)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
0000000000004910         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0x6f58)
0000000000004915         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
000000000000491a         align      32                                          ; End of unwind block (FDE at 0x6f58)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
0000000000004920         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x6f6c)
0000000000004924         mov        rax, rdx
0000000000004927         mov        rdx, qword [fs:0x28]
0000000000004930         mov        qword [rsp+0x48+var_10], rdx
0000000000004935         xor        edx, edx
0000000000004937         cmp        esi, 0xa
000000000000493a         je         loc_49a4

000000000000493c         mov        dword [rsp+0x48+var_48], esi
000000000000493f         mov        rcx, rsp
0000000000004942         mov        rdx, 0xffffffffffffffff
0000000000004949         mov        rsi, rax
000000000000494c         mov        qword [rsp+0x48+var_44], 0x0
0000000000004955         mov        qword [rsp+0x48+var_3C], 0x4000000
000000000000495e         mov        qword [rsp+0x48+var_34], 0x0
0000000000004967         mov        qword [rsp+0x48+var_2C], 0x0
0000000000004970         mov        qword [rsp+0x48+var_24], 0x0
0000000000004979         mov        qword [rsp+0x48+var_1C], 0x0
0000000000004982         mov        dword [rsp+0x48+var_14], 0x0
000000000000498a         call       quotearg_n_options                          ; quotearg_n_options
000000000000498f         mov        rcx, qword [rsp+0x48+var_10]
0000000000004994         xor        rcx, qword [fs:0x28]
000000000000499d         jne        loc_49a9

000000000000499f         add        rsp, 0x48
00000000000049a3         ret
                        ; endp

                     loc_49a4:
00000000000049a4         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_49a9:
00000000000049a9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
00000000000049ae         align      16                                          ; End of unwind block (FDE at 0x6f6c)

                     quotearg_n_custom_mem:
00000000000049b0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x6f88), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
00000000000049b4         mov        r9, rcx
00000000000049b7         mov        rcx, qword [qword_208230]                   ; qword_208230
00000000000049be         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
00000000000049c6         mov        rax, qword [fs:0x28]
00000000000049cf         mov        qword [rsp+0x48+var_10], rax
00000000000049d4         xor        eax, eax
00000000000049d6         movaps     xmmword [rsp+0x48+var_48], xmm0
00000000000049da         test       rsi, rsi
00000000000049dd         mov        qword [rsp+0x48+var_18], rcx
00000000000049e2         mov        dword [rsp+0x48+var_48], 0xa
00000000000049e9         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x208210
00000000000049f1         movaps     xmmword [rsp+0x48+var_38], xmm0
00000000000049f6         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x208220
00000000000049fe         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000004a03         je         loc_4a37

0000000000004a05         test       rdx, rdx
0000000000004a08         je         loc_4a37

0000000000004a0a         mov        qword [rsp+0x48+var_20], rsi
0000000000004a0f         mov        qword [rsp+0x48+var_18], rdx
0000000000004a14         mov        rcx, rsp
0000000000004a17         mov        rdx, r8
0000000000004a1a         mov        rsi, r9
0000000000004a1d         call       quotearg_n_options                          ; quotearg_n_options
0000000000004a22         mov        rdi, qword [rsp+0x48+var_10]
0000000000004a27         xor        rdi, qword [fs:0x28]
0000000000004a30         jne        loc_4a3c

0000000000004a32         add        rsp, 0x48
0000000000004a36         ret
                        ; endp

                     loc_4a37:
0000000000004a37         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_4a3c:
0000000000004a3c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
0000000000004a41         align      16                                          ; End of unwind block (FDE at 0x6f88)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom:
0000000000004a50         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0x6fa4)
0000000000004a57         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
0000000000004a5c         align      32                                          ; End of unwind block (FDE at 0x6fa4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
0000000000004a60         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x6fb8)
0000000000004a63         mov        r8, 0xffffffffffffffff
0000000000004a6a         mov        rdx, rsi
0000000000004a6d         mov        rsi, rdi
0000000000004a70         xor        edi, edi
0000000000004a72         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004a77         align      128                                         ; End of unwind block (FDE at 0x6fb8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
0000000000004a80         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0x6fcc)
0000000000004a83         mov        rcx, rdx
0000000000004a86         mov        rdx, rsi
0000000000004a89         mov        rsi, rdi
0000000000004a8c         xor        edi, edi
0000000000004a8e         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004a93         align      32                                          ; End of unwind block (FDE at 0x6fcc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
0000000000004aa0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x6fe0), quote_quoting_options
0000000000004aa7         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004aac         align      16                                          ; End of unwind block (FDE at 0x6fe0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
0000000000004ab0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x6ff4), quote_quoting_options
0000000000004ab7         mov        rdx, rsi
0000000000004aba         mov        rsi, rdi
0000000000004abd         xor        edi, edi
0000000000004abf         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004ac4         align      16                                          ; End of unwind block (FDE at 0x6ff4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
0000000000004ad0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x7008), quote_quoting_options
0000000000004ad7         mov        rdx, 0xffffffffffffffff
0000000000004ade         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004ae3         align      16                                          ; End of unwind block (FDE at 0x7008)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
0000000000004af0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x701c), quote_quoting_options
0000000000004af7         mov        rsi, rdi
0000000000004afa         mov        rdx, 0xffffffffffffffff
0000000000004b01         xor        edi, edi
0000000000004b03         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004b08         align      16                                          ; End of unwind block (FDE at 0x701c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
0000000000004b10         push       r15                                         ; Begin of unwind block (FDE at 0x7034), CODE XREF=version_etc_va+75, version_etc+161
0000000000004b12         push       r14
0000000000004b14         push       r13
0000000000004b16         push       r12
0000000000004b18         mov        r12, r9
0000000000004b1b         push       rbp
0000000000004b1c         push       rbx
0000000000004b1d         mov        rbp, rdi
0000000000004b20         mov        rbx, r8
0000000000004b23         sub        rsp, 0x28
0000000000004b27         test       rsi, rsi
0000000000004b2a         je         loc_4c48

0000000000004b30         mov        r8, rdx
0000000000004b33         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
0000000000004b3a         mov        r9, rcx
0000000000004b3d         xor        eax, eax
0000000000004b3f         mov        rcx, rsi
0000000000004b42         mov        esi, 0x1
0000000000004b47         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_4b4c:
0000000000004b4c         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0x61fb, CODE XREF=version_etc_arn+337
0000000000004b53         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004b55         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004b5a         call       j_dcgettext                                 ; dcgettext
0000000000004b5f         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000004b66         mov        rcx, rax
0000000000004b69         mov        r8d, 0x7e3
0000000000004b6f         mov        esi, 0x1
0000000000004b74         mov        rdi, rbp
0000000000004b77         xor        eax, eax
0000000000004b79         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004b7e         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000004b85         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004b87         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004b8c         call       j_dcgettext                                 ; dcgettext
0000000000004b91         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004b94         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004b97         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000004b9c         cmp        r12, 0x9
0000000000004ba0         ja         loc_4ee0

0000000000004ba6         lea        rdx, qword [switch_table_64e8]              ; switch_table_64e8
0000000000004bad         movsxd     rax, dword [rdx+r12*4]
0000000000004bb1         add        rax, rdx
0000000000004bb4         jmp        rax                                         ; switch statement using table at 0x64e8, with 10 cases, 0x4bc0,0x4c36,0x4c70,0x4cc8,0x4d08,0x4d50,0x4da0,0x4df8,0x4e28,0x4e90
0000000000004bb6         align      64

                     loc_4bc0:
0000000000004bc0         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
0000000000004bc4         mov        rax, qword [rbx+0x10]
0000000000004bc8         lea        rsi, qword [aWrittenBySSSns_63f8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
0000000000004bcf         mov        r8, qword [rbx+8]
0000000000004bd3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004bd8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004bda         mov        r13, qword [rbx+0x30]
0000000000004bde         mov        r12, qword [rbx+0x28]
0000000000004be2         mov        qword [rsp+0x58+var_48], r9
0000000000004be7         mov        r15, qword [rbx+0x20]
0000000000004beb         mov        r14, qword [rbx+0x18]
0000000000004bef         mov        qword [rsp+0x58+var_58], rax
0000000000004bf3         mov        qword [rsp+0x58+var_50], r8
0000000000004bf8         mov        rbx, qword [rbx]
0000000000004bfb         call       j_dcgettext                                 ; dcgettext
0000000000004c00         sub        rsp, 0x8

                     loc_4c04:
0000000000004c04         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
0000000000004c09         mov        rdx, rax
0000000000004c0c         mov        rcx, rbx
0000000000004c0f         mov        esi, 0x1
0000000000004c14         mov        rdi, rbp
0000000000004c17         xor        eax, eax
0000000000004c19         push       r9
0000000000004c1b         push       r13
0000000000004c1d         push       r12
0000000000004c1f         push       r15
0000000000004c21         push       r14
0000000000004c23         mov        r9, qword [rsp+0x88+var_58]
0000000000004c28         mov        r8, qword [rsp+0x88+var_50]
0000000000004c2d         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004c32         add        rsp, 0x30

                     loc_4c36:
0000000000004c36         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
0000000000004c3a         pop        rbx
0000000000004c3b         pop        rbp
0000000000004c3c         pop        r12
0000000000004c3e         pop        r13
0000000000004c40         pop        r14
0000000000004c42         pop        r15
0000000000004c44         ret
                        ; endp
0000000000004c45         align      8

                     loc_4c48:
0000000000004c48         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
0000000000004c4b         mov        rcx, rdx
0000000000004c4e         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
0000000000004c55         mov        esi, 0x1
0000000000004c5a         xor        eax, eax
0000000000004c5c         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004c61         jmp        loc_4b4c
0000000000004c66         align      16

                     loc_4c70:
0000000000004c70         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
0000000000004c74         mov        r9, qword [rbx+0x38]
0000000000004c78         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
0000000000004c7f         mov        rax, qword [rbx+0x10]
0000000000004c83         mov        r8, qword [rbx+8]
0000000000004c87         mov        edx, 0x5
0000000000004c8c         mov        r13, qword [rbx+0x30]
0000000000004c90         mov        r12, qword [rbx+0x28]
0000000000004c94         mov        r15, qword [rbx+0x20]
0000000000004c98         mov        r14, qword [rbx+0x18]
0000000000004c9c         mov        rbx, qword [rbx]
0000000000004c9f         mov        qword [rsp+0x58+var_40], r10
0000000000004ca4         mov        qword [rsp+0x58+var_48], r9
0000000000004ca9         mov        qword [rsp+0x58+var_58], rax
0000000000004cad         mov        qword [rsp+0x58+var_50], r8

                     loc_4cb2:
0000000000004cb2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
0000000000004cb4         call       j_dcgettext                                 ; dcgettext
0000000000004cb9         mov        r10, qword [rsp+0x58+var_40]
0000000000004cbe         push       r10
0000000000004cc0         jmp        loc_4c04
0000000000004cc5         align      8

                     loc_4cc8:
0000000000004cc8         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
0000000000004ccb         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
0000000000004cd2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004cd7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004cd9         call       j_dcgettext                                 ; dcgettext
0000000000004cde         add        rsp, 0x28
0000000000004ce2         mov        rcx, rbx
0000000000004ce5         mov        rdi, rbp
0000000000004ce8         pop        rbx
0000000000004ce9         pop        rbp
0000000000004cea         pop        r12
0000000000004cec         pop        r13
0000000000004cee         pop        r14
0000000000004cf0         pop        r15
0000000000004cf2         mov        rdx, rax
0000000000004cf5         mov        esi, 0x1
0000000000004cfa         xor        eax, eax
0000000000004cfc         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004d01         align      8

                     loc_4d08:
0000000000004d08         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
0000000000004d0c         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
0000000000004d13         mov        rbx, qword [rbx]
0000000000004d16         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004d1b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004d1d         call       j_dcgettext                                 ; dcgettext
0000000000004d22         add        rsp, 0x28
0000000000004d26         mov        r8, r12
0000000000004d29         mov        rcx, rbx
0000000000004d2c         mov        rdi, rbp
0000000000004d2f         mov        rdx, rax
0000000000004d32         mov        esi, 0x1
0000000000004d37         pop        rbx
0000000000004d38         pop        rbp
0000000000004d39         pop        r12
0000000000004d3b         pop        r13
0000000000004d3d         pop        r14
0000000000004d3f         pop        r15
0000000000004d41         xor        eax, eax
0000000000004d43         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004d48         align      16

                     loc_4d50:
0000000000004d50         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
0000000000004d54         mov        r12, qword [rbx+8]
0000000000004d58         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
0000000000004d5f         mov        rbx, qword [rbx]
0000000000004d62         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004d67         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004d69         call       j_dcgettext                                 ; dcgettext
0000000000004d6e         add        rsp, 0x28
0000000000004d72         mov        r9, r13
0000000000004d75         mov        r8, r12
0000000000004d78         mov        rcx, rbx
0000000000004d7b         mov        rdi, rbp
0000000000004d7e         mov        rdx, rax
0000000000004d81         pop        rbx
0000000000004d82         pop        rbp
0000000000004d83         pop        r12
0000000000004d85         pop        r13
0000000000004d87         pop        r14
0000000000004d89         pop        r15
0000000000004d8b         mov        esi, 0x1
0000000000004d90         xor        eax, eax
0000000000004d92         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004d97         align      32

                     loc_4da0:
0000000000004da0         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
0000000000004da7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004dac         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004dae         mov        r14, qword [rbx+0x18]
0000000000004db2         mov        r13, qword [rbx+0x10]
0000000000004db6         mov        r12, qword [rbx+8]
0000000000004dba         mov        rbx, qword [rbx]
0000000000004dbd         call       j_dcgettext                                 ; dcgettext
0000000000004dc2         sub        rsp, 0x8

                     loc_4dc6:
0000000000004dc6         push       r14                                         ; CODE XREF=version_etc_arn+784
0000000000004dc8         mov        rdx, rax
0000000000004dcb         mov        r9, r13
0000000000004dce         mov        r8, r12
0000000000004dd1         mov        rcx, rbx
0000000000004dd4         mov        rdi, rbp
0000000000004dd7         mov        esi, 0x1
0000000000004ddc         xor        eax, eax
0000000000004dde         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004de3         pop        rax
0000000000004de4         pop        rdx
0000000000004de5         add        rsp, 0x28
0000000000004de9         pop        rbx
0000000000004dea         pop        rbp
0000000000004deb         pop        r12
0000000000004ded         pop        r13
0000000000004def         pop        r14
0000000000004df1         pop        r15
0000000000004df3         ret
                        ; endp
0000000000004df4         align      8

                     loc_4df8:
0000000000004df8         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
0000000000004dfc         lea        rsi, qword [aWrittenBySSSns_6378]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
0000000000004e03         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004e08         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004e0a         mov        r14, qword [rbx+0x18]
0000000000004e0e         mov        r13, qword [rbx+0x10]
0000000000004e12         mov        r12, qword [rbx+8]
0000000000004e16         mov        rbx, qword [rbx]
0000000000004e19         call       j_dcgettext                                 ; dcgettext
0000000000004e1e         push       r15
0000000000004e20         jmp        loc_4dc6
0000000000004e22         align      8

                     loc_4e28:
0000000000004e28         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
0000000000004e2c         mov        r12, qword [rbx+0x28]
0000000000004e30         lea        rsi, qword [aWrittenBySSSns_63a0]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
0000000000004e37         mov        r15, qword [rbx+0x20]
0000000000004e3b         mov        r14, qword [rbx+0x18]
0000000000004e3f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004e44         mov        r13, qword [rbx+0x10]
0000000000004e48         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004e4a         mov        rbx, qword [rbx]
0000000000004e4d         mov        qword [rsp+0x58+var_58], r8
0000000000004e51         call       j_dcgettext                                 ; dcgettext
0000000000004e56         sub        rsp, 0x8
0000000000004e5a         mov        r9, r13
0000000000004e5d         push       r12
0000000000004e5f         push       r15
0000000000004e61         push       r14

                     loc_4e63:
0000000000004e63         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
0000000000004e68         mov        rcx, rbx
0000000000004e6b         mov        rdx, rax
0000000000004e6e         mov        rdi, rbp
0000000000004e71         mov        esi, 0x1
0000000000004e76         xor        eax, eax
0000000000004e78         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004e7d         add        rsp, 0x20
0000000000004e81         add        rsp, 0x28
0000000000004e85         pop        rbx
0000000000004e86         pop        rbp
0000000000004e87         pop        r12
0000000000004e89         pop        r13
0000000000004e8b         pop        r14
0000000000004e8d         pop        r15
0000000000004e8f         ret
                        ; endp

                     loc_4e90:
0000000000004e90         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
0000000000004e94         mov        r13, qword [rbx+0x30]
0000000000004e98         lea        rsi, qword [aWrittenBySSSns_63c8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
0000000000004e9f         mov        r12, qword [rbx+0x28]
0000000000004ea3         mov        r15, qword [rbx+0x20]
0000000000004ea7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004eac         mov        r14, qword [rbx+0x18]
0000000000004eb0         mov        r8, qword [rbx+8]
0000000000004eb4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004eb6         mov        qword [rsp+0x58+var_50], r9
0000000000004ebb         mov        rbx, qword [rbx]
0000000000004ebe         mov        qword [rsp+0x58+var_58], r8
0000000000004ec2         call       j_dcgettext                                 ; dcgettext
0000000000004ec7         push       r13
0000000000004ec9         push       r12
0000000000004ecb         push       r15
0000000000004ecd         push       r14
0000000000004ecf         mov        r9, qword [rsp+0x78+var_50]
0000000000004ed4         jmp        loc_4e63
0000000000004ed6         align      32

                     loc_4ee0:
0000000000004ee0         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
0000000000004ee4         mov        r9, qword [rbx+0x38]
0000000000004ee8         mov        edx, 0x5
0000000000004eed         mov        rax, qword [rbx+0x10]
0000000000004ef1         mov        r8, qword [rbx+8]
0000000000004ef5         lea        rsi, qword [aWrittenBySSSns_6460]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
0000000000004efc         mov        r13, qword [rbx+0x30]
0000000000004f00         mov        r12, qword [rbx+0x28]
0000000000004f04         mov        r15, qword [rbx+0x20]
0000000000004f08         mov        r14, qword [rbx+0x18]
0000000000004f0c         mov        qword [rsp+0x58+var_40], r10
0000000000004f11         mov        qword [rsp+0x58+var_48], r9
0000000000004f16         mov        qword [rsp+0x58+var_58], rax
0000000000004f1a         mov        qword [rsp+0x58+var_50], r8
0000000000004f1f         mov        rbx, qword [rbx]
0000000000004f22         jmp        loc_4cb2
0000000000004f27         align      16                                          ; End of unwind block (FDE at 0x7034)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
0000000000004f30         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0x7148)
0000000000004f33         cmp        qword [r8], 0x0
0000000000004f37         je         j_version_etc_arn                           ; version_etc_arn

0000000000004f39         nop        dword [rax]

                     loc_4f40:
0000000000004f40         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
0000000000004f44         cmp        qword [r8+r9*8], 0x0
0000000000004f49         jne        loc_4f40

                     j_version_etc_arn:        // version_etc_arn
0000000000004f4b         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
0000000000004f50         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0x7148), Begin of unwind block (FDE at 0x715c), CODE XREF=parse_long_options+283, parse_gnu_standard_options_only+235
0000000000004f54         mov        r10, r8
0000000000004f57         xor        r9d, r9d
0000000000004f5a         mov        rax, qword [fs:0x28]
0000000000004f63         mov        qword [rsp+0x68+var_10], rax
0000000000004f68         xor        eax, eax
0000000000004f6a         mov        r8, rsp
0000000000004f6d         nop        dword [rax]

                     loc_4f70:
0000000000004f70         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000004f73         cmp        eax, 0x2f
0000000000004f76         ja         loc_4fba

0000000000004f78         mov        r11d, eax
0000000000004f7b         add        r11, qword [r10+0x10]
0000000000004f7f         add        eax, 0x8
0000000000004f82         mov        dword [r10], eax

                     loc_4f85:
0000000000004f85         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000004f88         test       rax, rax
0000000000004f8b         mov        qword [r8+r9*8], rax
0000000000004f8f         je         loc_4f9b

0000000000004f91         add        r9, 0x1
0000000000004f95         cmp        r9, 0xa
0000000000004f99         jne        loc_4f70

                     loc_4f9b:
0000000000004f9b         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
0000000000004fa0         mov        rax, qword [rsp+0x68+var_10]
0000000000004fa5         xor        rax, qword [fs:0x28]
0000000000004fae         jne        loc_4fb5

0000000000004fb0         add        rsp, 0x68
0000000000004fb4         ret
                        ; endp

                     loc_4fb5:
0000000000004fb5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_4fba:
0000000000004fba         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
0000000000004fbe         lea        rax, qword [r11+8]
0000000000004fc2         mov        qword [r10+8], rax
0000000000004fc6         jmp        loc_4f85
0000000000004fc8         align      16                                          ; End of unwind block (FDE at 0x715c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
0000000000004fd0         push       rbp                                         ; Begin of unwind block (FDE at 0x7178)
0000000000004fd1         push       rbx
0000000000004fd2         mov        r10d, 0x20
0000000000004fd8         xor        r11d, r11d
0000000000004fdb         sub        rsp, 0xb8
0000000000004fe2         mov        rax, qword [fs:0x28]
0000000000004feb         mov        qword [rsp+0xc8+var_50], rax
0000000000004ff0         xor        eax, eax
0000000000004ff2         lea        rax, qword [rsp+0xc8+arg_0]
0000000000004ffa         mov        qword [rsp+0xc8+var_28], r8
0000000000005002         lea        rbx, qword [rsp+0xc8+arg_0]
000000000000500a         lea        r8, qword [rsp+0xc8+var_A8]
000000000000500f         mov        qword [rsp+0xc8+var_20], r9
0000000000005017         mov        dword [rsp+0xc8+var_C0], 0x20
000000000000501f         mov        qword [rsp+0xc8+var_B8], rax
0000000000005024         lea        rax, qword [rsp+0xc8+var_48]
000000000000502c         xor        r9d, r9d
000000000000502f         mov        qword [rsp+0xc8+var_B0], rax
0000000000005034         mov        rbp, rax
0000000000005037         nop        word [rax+rax]

                     loc_5040:
0000000000005040         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
0000000000005044         ja         loc_509c

0000000000005046         mov        eax, r10d
0000000000005049         mov        r11d, 0x1
000000000000504f         add        r10d, 0x8
0000000000005053         add        rax, rbp

                     loc_5056:
0000000000005056         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
0000000000005059         test       rax, rax
000000000000505c         mov        qword [r8+r9*8], rax
0000000000005060         je         loc_506c

0000000000005062         add        r9, 0x1
0000000000005066         cmp        r9, 0xa
000000000000506a         jne        loc_5040

                     loc_506c:
000000000000506c         test       r11b, r11b                                  ; CODE XREF=version_etc+144
000000000000506f         jne        loc_5095

                     loc_5071:
0000000000005071         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000005076         mov        rax, qword [rsp+0xc8+var_50]
000000000000507b         xor        rax, qword [fs:0x28]
0000000000005084         jne        loc_5090

0000000000005086         add        rsp, 0xb8
000000000000508d         pop        rbx
000000000000508e         pop        rbp
000000000000508f         ret
                        ; endp

                     loc_5090:
0000000000005090         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_5095:
0000000000005095         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
000000000000509a         jmp        loc_5071

                     loc_509c:
000000000000509c         mov        rax, rbx                                    ; CODE XREF=version_etc+116
000000000000509f         add        rbx, 0x8
00000000000050a3         jmp        loc_5056
00000000000050a5         align      16                                          ; End of unwind block (FDE at 0x7178)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
00000000000050b0         push       rbx                                         ; Begin of unwind block (FDE at 0x71a4)
00000000000050b1         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
00000000000050b8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000050bd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000050bf         call       j_dcgettext                                 ; dcgettext
00000000000050c4         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
00000000000050cb         mov        rsi, rax
00000000000050ce         mov        edi, 0x1
00000000000050d3         xor        eax, eax
00000000000050d5         call       j___printf_chk                              ; __printf_chk
00000000000050da         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
00000000000050e1         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000050e6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000050e8         call       j_dcgettext                                 ; dcgettext
00000000000050ed         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000050f4         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x57cf
00000000000050fb         mov        rsi, rax
00000000000050fe         mov        edi, 0x1
0000000000005103         xor        eax, eax
0000000000005105         call       j___printf_chk                              ; __printf_chk
000000000000510a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000005111         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
0000000000005118         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000511a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000511f         call       j_dcgettext                                 ; dcgettext
0000000000005124         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000005127         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000512a         pop        rbx
000000000000512b         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
0000000000005130         push       rbx                                         ; End of unwind block (FDE at 0x71a4), Begin of unwind block (FDE at 0x71c4), CODE XREF=quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15
0000000000005131         mov        rbx, rdi
0000000000005134         call       j_malloc                                    ; malloc
0000000000005139         test       rax, rax
000000000000513c         jne        loc_5143

000000000000513e         test       rbx, rbx
0000000000005141         jne        loc_5145

                     loc_5143:
0000000000005143         pop        rbx                                         ; CODE XREF=xmalloc+12
0000000000005144         ret
                        ; endp

                     loc_5145:
0000000000005145         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_514a:
000000000000514a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x71c4)
                     xnmalloc:
0000000000005150         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x71e0)
0000000000005153         mul        rsi
0000000000005156         mov        rdi, rax
0000000000005159         seto       al
000000000000515c         test       rdi, rdi
000000000000515f         js         loc_516b

0000000000005161         movzx      eax, al
0000000000005164         test       rax, rax
0000000000005167         jne        loc_516b

0000000000005169         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_516b:
000000000000516b         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
000000000000516f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5174:
0000000000005174         nop                                                    ; End of unwind block (FDE at 0x71e0)
0000000000005176         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000005180         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0x71f4)
                        ; endp
0000000000005182         align      16                                          ; End of unwind block (FDE at 0x71f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000005190         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x7208), CODE XREF=quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
0000000000005193         push       rbx
0000000000005194         mov        rbx, rsi
0000000000005197         jne        loc_519e

0000000000005199         test       rdi, rdi
000000000000519c         jne        loc_51b8

                     loc_519e:
000000000000519e         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
00000000000051a1         call       j_realloc                                   ; realloc
00000000000051a6         test       rax, rax
00000000000051a9         jne        loc_51b0

00000000000051ab         test       rbx, rbx
00000000000051ae         jne        loc_51c1

                     loc_51b0:
00000000000051b0         pop        rbx                                         ; CODE XREF=xrealloc+25
00000000000051b1         ret
                        ; endp
00000000000051b2         align      8

                     loc_51b8:
00000000000051b8         call       j_free                                      ; free, CODE XREF=xrealloc+12
00000000000051bd         xor        eax, eax
00000000000051bf         pop        rbx
00000000000051c0         ret
                        ; endp

                     loc_51c1:
00000000000051c1         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_51c6:
00000000000051c6         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x7208)
                     xnrealloc:
00000000000051d0         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x722c)
00000000000051d3         mul        rdx
00000000000051d6         mov        rsi, rax
00000000000051d9         seto       al
00000000000051dc         test       rsi, rsi
00000000000051df         js         loc_51eb

00000000000051e1         movzx      eax, al
00000000000051e4         test       rax, rax
00000000000051e7         jne        loc_51eb

00000000000051e9         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_51eb:
00000000000051eb         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
00000000000051ef         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_51f4:
00000000000051f4         nop                                                    ; End of unwind block (FDE at 0x722c)
00000000000051f6         nop        word [cs:rax+rax]
                     x2nrealloc:
0000000000005200         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7240)
0000000000005203         mov        r9, rdx
0000000000005206         mov        rcx, qword [rsi]
0000000000005209         je         loc_5240

000000000000520b         xor        edx, edx
000000000000520d         movabs     rax, 0x5555555555555554
0000000000005217         div        r9
000000000000521a         cmp        rax, rcx
000000000000521d         jbe        loc_525b

000000000000521f         mov        rax, rcx
0000000000005222         shr        rax, 0x1
0000000000005225         lea        rcx, qword [rax+rcx+1]

                     loc_522a:
000000000000522a         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
000000000000522d         imul       rcx, r9                                     ; argument #4 for method xrealloc
0000000000005231         mov        rsi, rcx                                    ; argument #2 for method xrealloc
0000000000005234         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000005239         align      64

                     loc_5240:
0000000000005240         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
0000000000005243         je         loc_5268

                     loc_5245:
0000000000005245         mov        rax, rcx                                    ; CODE XREF=sub_5264+28
0000000000005248         mul        r9
000000000000524b         seto       dl
000000000000524e         test       rax, rax
0000000000005251         movzx      edx, dl
0000000000005254         js         loc_525b

0000000000005256         test       rdx, rdx
0000000000005259         je         loc_522a

                     loc_525b:
000000000000525b         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
000000000000525f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5264:
0000000000005264         nop        dword [rax]
                        ; endp

                     loc_5268:
0000000000005268         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
000000000000526a         mov        eax, 0x80
000000000000526f         xor        r8d, r8d
0000000000005272         div        r9
0000000000005275         test       rax, rax
0000000000005278         sete       r8b
000000000000527c         lea        rcx, qword [r8+rax]
0000000000005280         jmp        loc_5245
0000000000005282         align      16                                          ; End of unwind block (FDE at 0x7240)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000005290         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7258)
0000000000005293         mov        rax, qword [rsi]
0000000000005296         je         loc_52c0

0000000000005298         movabs     rdx, 0x5555555555555553
00000000000052a2         cmp        rax, rdx
00000000000052a5         ja         loc_52d1

00000000000052a7         mov        rdx, rax
00000000000052aa         shr        rdx, 0x1
00000000000052ad         lea        rax, qword [rdx+rax+1]

                     loc_52b2:
00000000000052b2         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
00000000000052b5         mov        rsi, rax                                    ; argument #2 for method xrealloc
00000000000052b8         jmp        xrealloc                                    ; xrealloc
                        ; endp
00000000000052bd         align      64

                     loc_52c0:
00000000000052c0         test       rax, rax                                    ; CODE XREF=x2realloc+6
00000000000052c3         mov        edx, 0x80
00000000000052c8         cmove      rax, rdx
00000000000052cc         test       rax, rax
00000000000052cf         jns        loc_52b2

                     loc_52d1:
00000000000052d1         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
00000000000052d5         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_52da:
00000000000052da         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x7258)
                     xzalloc:
00000000000052e0         push       rbx                                         ; Begin of unwind block (FDE at 0x7270)
00000000000052e1         mov        rbx, rdi
00000000000052e4         call       xmalloc                                     ; xmalloc
00000000000052e9         mov        rdx, rbx                                    ; argument "__n" for method j_memset
00000000000052ec         xor        esi, esi                                    ; argument "__c" for method j_memset
00000000000052ee         mov        rdi, rax                                    ; argument "__s" for method j_memset
00000000000052f1         pop        rbx
00000000000052f2         jmp        j_memset                                    ; memset
                        ; endp
00000000000052f7         align      256                                         ; End of unwind block (FDE at 0x7270)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
0000000000005300         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x728c)
0000000000005303         sub        rsp, 0x8
0000000000005307         mul        rsi
000000000000530a         seto       dl
000000000000530d         test       rax, rax
0000000000005310         js         loc_5329

0000000000005312         movzx      edx, dl
0000000000005315         test       rdx, rdx
0000000000005318         jne        loc_5329

000000000000531a         call       j_calloc                                    ; calloc
000000000000531f         test       rax, rax
0000000000005322         je         loc_5329

0000000000005324         add        rsp, 0x8
0000000000005328         ret
                        ; endp

                     loc_5329:
0000000000005329         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_532e:
000000000000532e         nop                                                    ; End of unwind block (FDE at 0x728c)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmemdup:
0000000000005330         push       rbp                                         ; Begin of unwind block (FDE at 0x72a8), CODE XREF=clone_quoting_options+40
0000000000005331         push       rbx
0000000000005332         mov        rbp, rdi
0000000000005335         mov        rdi, rsi
0000000000005338         mov        rbx, rsi
000000000000533b         sub        rsp, 0x8
000000000000533f         call       xmalloc                                     ; xmalloc
0000000000005344         add        rsp, 0x8
0000000000005348         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
000000000000534b         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
000000000000534e         pop        rbx
000000000000534f         pop        rbp
0000000000005350         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000005353         jmp        j_memcpy                                    ; memcpy
                        ; endp
0000000000005358         align      32                                          ; End of unwind block (FDE at 0x72a8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000005360         push       rbx                                         ; Begin of unwind block (FDE at 0x72d0)
0000000000005361         mov        rbx, rdi
0000000000005364         call       j_strlen                                    ; strlen
0000000000005369         mov        rdi, rbx
000000000000536c         lea        rsi, qword [rax+1]
0000000000005370         pop        rbx
0000000000005371         jmp        xmemdup                                     ; xmemdup
                        ; endp
0000000000005373         align      128                                         ; End of unwind block (FDE at 0x72d0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000005380         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x72ec), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41
0000000000005387         sub        rsp, 0x8
000000000000538b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005390         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005392         call       j_dcgettext                                 ; dcgettext
0000000000005397         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
000000000000539d         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5c80
00000000000053a4         mov        rcx, rax
00000000000053a7         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000053a9         xor        eax, eax
00000000000053ab         call       j_error                                     ; error
00000000000053b0         call       j_abort                                     ; abort
                        ; endp
00000000000053b5         align      64                                          ; End of unwind block (FDE at 0x72ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
00000000000053c0         push       r13                                         ; Begin of unwind block (FDE at 0x7304), CODE XREF=sub_36b0+534
00000000000053c2         push       r12
00000000000053c4         mov        r13, rsi
00000000000053c7         push       rbp
00000000000053c8         push       rbx
00000000000053c9         mov        rbx, rdi
00000000000053cc         mov        r12, rdx
00000000000053cf         sub        rsp, 0x18
00000000000053d3         mov        rax, qword [fs:0x28]
00000000000053dc         mov        qword [rsp+0x38+var_30], rax
00000000000053e1         xor        eax, eax
00000000000053e3         lea        rax, qword [rsp+0x38+var_34]
00000000000053e8         test       rdi, rdi
00000000000053eb         cmove      rbx, rax
00000000000053ef         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
00000000000053f2         call       j_mbrtowc                                   ; mbrtowc
00000000000053f7         cmp        rax, 0xfffffffffffffffd
00000000000053fb         mov        rbp, rax
00000000000053fe         jbe        loc_5420

0000000000005400         test       r12, r12
0000000000005403         je         loc_5420

0000000000005405         xor        edi, edi
0000000000005407         call       hard_locale                                 ; hard_locale
000000000000540c         test       al, al
000000000000540e         jne        loc_5420

0000000000005410         movzx      eax, byte [r13]
0000000000005415         mov        ebp, 0x1
000000000000541a         mov        dword [rbx], eax
000000000000541c         nop        dword [rax]

                     loc_5420:
0000000000005420         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
0000000000005425         xor        rdx, qword [fs:0x28]
000000000000542e         mov        rax, rbp
0000000000005431         jne        loc_543e

0000000000005433         add        rsp, 0x18
0000000000005437         pop        rbx
0000000000005438         pop        rbp
0000000000005439         pop        r12
000000000000543b         pop        r13
000000000000543d         ret
                        ; endp

                     loc_543e:
000000000000543e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
0000000000005443         align      16                                          ; End of unwind block (FDE at 0x7304)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
0000000000005450         push       r12                                         ; Begin of unwind block (FDE at 0x7344), CODE XREF=close_stdout+13, close_stdout+51
0000000000005452         push       rbp
0000000000005453         mov        rbp, rdi
0000000000005456         push       rbx
0000000000005457         call       j___fpending                                ; __fpending
000000000000545c         mov        ebx, dword [rbp]
000000000000545f         mov        rdi, rbp
0000000000005462         mov        r12, rax
0000000000005465         call       rpl_fclose                                  ; rpl_fclose
000000000000546a         and        ebx, 0x20
000000000000546d         test       ebx, ebx
000000000000546f         jne        loc_5488

0000000000005471         test       eax, eax
0000000000005473         je         loc_547f

0000000000005475         test       r12, r12
0000000000005478         mov        eax, 0xffffffff
000000000000547d         je         loc_54b8

                     loc_547f:
000000000000547f         pop        rbx                                         ; CODE XREF=close_stream+35
0000000000005480         pop        rbp
0000000000005481         pop        r12
0000000000005483         ret
                        ; endp
0000000000005484         align      8

                     loc_5488:
0000000000005488         test       eax, eax                                    ; CODE XREF=close_stream+31
000000000000548a         jne        loc_54a8

000000000000548c         call       j___errno_location                          ; __errno_location
0000000000005491         mov        dword [rax], 0x0
0000000000005497         mov        eax, 0xffffffff
000000000000549c         pop        rbx
000000000000549d         pop        rbp
000000000000549e         pop        r12
00000000000054a0         ret
                        ; endp
00000000000054a1         align      8

                     loc_54a8:
00000000000054a8         pop        rbx                                         ; CODE XREF=close_stream+58
00000000000054a9         mov        eax, 0xffffffff
00000000000054ae         pop        rbp
00000000000054af         pop        r12
00000000000054b1         ret
                        ; endp
00000000000054b2         align      8

                     loc_54b8:
00000000000054b8         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
00000000000054bd         cmp        dword [rax], 0x9
00000000000054c0         pop        rbx
00000000000054c1         pop        rbp
00000000000054c2         pop        r12
00000000000054c4         setne      al
00000000000054c7         movzx      eax, al
00000000000054ca         neg        eax
00000000000054cc         ret
                        ; endp
00000000000054cd         align      16                                          ; End of unwind block (FDE at 0x7344)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
00000000000054d0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x7394), CODE XREF=rpl_mbrtowc+71
00000000000054d4         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
00000000000054d6         call       j_setlocale                                 ; setlocale
00000000000054db         mov        rdx, rax
00000000000054de         mov        eax, 0x1
00000000000054e3         test       rdx, rdx
00000000000054e6         je         loc_5505

00000000000054e8         lea        rdi, qword [aMemoryExhauste+17]             ; 0x6560
00000000000054ef         mov        ecx, 0x2
00000000000054f4         mov        rsi, rdx
00000000000054f7         rep  cmpsb byte [rsi], byte [rdi]
00000000000054f9         seta       cl
00000000000054fc         sbb        cl, 0x0
00000000000054ff         xor        eax, eax
0000000000005501         test       cl, cl
0000000000005503         jne        loc_5510

                     loc_5505:
0000000000005505         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
0000000000005509         ret
                        ; endp
000000000000550a         align      16

                     loc_5510:
0000000000005510         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
0000000000005517         mov        ecx, 0x6
000000000000551c         mov        rsi, rdx
000000000000551f         rep  cmpsb byte [rsi], byte [rdi]
0000000000005521         seta       al
0000000000005524         sbb        al, 0x0
0000000000005526         test       al, al
0000000000005528         setne      al
000000000000552b         add        rsp, 0x8
000000000000552f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000005530         sub        rsp, 0x8                                    ; End of unwind block (FDE at 0x7394), Begin of unwind block (FDE at 0x73b4), CODE XREF=gettext_quote.part.1+11
0000000000005534         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000005539         call       j_nl_langinfo                               ; nl_langinfo
000000000000553e         test       rax, rax
0000000000005541         je         loc_5560

0000000000005543         cmp        byte [rax], 0x0
0000000000005546         lea        rdx, qword [aAscii]                         ; "ASCII"
000000000000554d         cmove      rax, rdx
0000000000005551         add        rsp, 0x8
0000000000005555         ret
                        ; endp
0000000000005556         align      32

                     loc_5560:
0000000000005560         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
0000000000005567         add        rsp, 0x8
000000000000556b         ret
                        ; endp
000000000000556c         align      16                                          ; End of unwind block (FDE at 0x73b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
0000000000005570         push       r12                                         ; Begin of unwind block (FDE at 0x73d4), CODE XREF=close_stream+21
0000000000005572         push       rbp
0000000000005573         push       rbx
0000000000005574         mov        rbx, rdi
0000000000005577         call       j_fileno                                    ; fileno
000000000000557c         test       eax, eax
000000000000557e         mov        rdi, rbx
0000000000005581         js         loc_55d7

0000000000005583         call       j___freading                                ; __freading
0000000000005588         test       eax, eax
000000000000558a         jne        loc_55b8

                     loc_558c:
000000000000558c         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
000000000000558f         call       rpl_fflush                                  ; rpl_fflush
0000000000005594         test       eax, eax
0000000000005596         je         loc_55d4

0000000000005598         call       j___errno_location                          ; __errno_location
000000000000559d         mov        r12d, dword [rax]
00000000000055a0         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
00000000000055a3         mov        rbp, rax
00000000000055a6         call       j_fclose                                    ; fclose
00000000000055ab         test       r12d, r12d
00000000000055ae         jne        loc_55e0

                     loc_55b0:
00000000000055b0         pop        rbx                                         ; CODE XREF=rpl_fclose+121
00000000000055b1         pop        rbp
00000000000055b2         pop        r12
00000000000055b4         ret
                        ; endp
00000000000055b5         align      8

                     loc_55b8:
00000000000055b8         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
00000000000055bb         call       j_fileno                                    ; fileno
00000000000055c0         xor        esi, esi                                    ; argument "__offset" for method j_lseek
00000000000055c2         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
00000000000055c7         mov        edi, eax                                    ; argument "__fd" for method j_lseek
00000000000055c9         call       j_lseek                                     ; lseek
00000000000055ce         cmp        rax, 0xffffffffffffffff
00000000000055d2         jne        loc_558c

                     loc_55d4:
00000000000055d4         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_55d7:
00000000000055d7         pop        rbx                                         ; CODE XREF=rpl_fclose+17
00000000000055d8         pop        rbp
00000000000055d9         pop        r12
00000000000055db         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_55e0:
00000000000055e0         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
00000000000055e4         mov        eax, 0xffffffff
00000000000055e9         jmp        loc_55b0
00000000000055eb         align      16                                          ; End of unwind block (FDE at 0x73d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
00000000000055f0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x740c), CODE XREF=rpl_fclose+31
00000000000055f3         push       rbx
00000000000055f4         mov        rbx, rdi
00000000000055f7         je         loc_560a

00000000000055f9         call       j___freading                                ; __freading
00000000000055fe         test       eax, eax
0000000000005600         je         loc_560a

0000000000005602         test       dword [rbx], 0x100
0000000000005608         jne        loc_5618

                     loc_560a:
000000000000560a         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
000000000000560d         pop        rbx
000000000000560e         jmp        j_fflush                                    ; fflush
                        ; endp
0000000000005613         align      8

                     loc_5618:
0000000000005618         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
000000000000561b         mov        edx, 0x1
0000000000005620         xor        esi, esi
0000000000005622         call       rpl_fseeko                                  ; rpl_fseeko
0000000000005627         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
000000000000562a         pop        rbx
000000000000562b         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
0000000000005630         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0x740c), Begin of unwind block (FDE at 0x742c), CODE XREF=rpl_fflush+50
0000000000005634         cmp        qword [rdi+0x10], rax
0000000000005638         je         loc_5640

                     j_j_fseeko:        // fseeko
000000000000563a         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
000000000000563f         align      64

                     loc_5640:
0000000000005640         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
0000000000005644         cmp        qword [rdi+0x28], rax
0000000000005648         jne        j_j_fseeko                                  ; fseeko

000000000000564a         cmp        qword [rdi+0x48], 0x0
000000000000564f         jne        j_j_fseeko                                  ; fseeko

0000000000005651         push       r12
0000000000005653         push       rbp
0000000000005654         mov        r12d, edx
0000000000005657         push       rbx
0000000000005658         mov        rbp, rsi
000000000000565b         mov        rbx, rdi
000000000000565e         call       j_fileno                                    ; fileno
0000000000005663         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000005666         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000005669         mov        edi, eax                                    ; argument "__fd" for method j_lseek
000000000000566b         call       j_lseek                                     ; lseek
0000000000005670         cmp        rax, 0xffffffffffffffff
0000000000005674         je         loc_5682

0000000000005676         and        dword [rbx], 0xffffffef
0000000000005679         mov        qword [rbx+0x90], rax
0000000000005680         xor        eax, eax

                     loc_5682:
0000000000005682         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
0000000000005683         pop        rbp
0000000000005684         pop        r12
0000000000005686         ret
                        ; endp
0000000000005687         align      16                                          ; End of unwind block (FDE at 0x742c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
0000000000005690         push       r15                                         ; Begin of unwind block (FDE at 0x745c), DATA XREF=_start+22
0000000000005692         push       r14
0000000000005694         mov        r15, rdx
0000000000005697         push       r13
0000000000005699         push       r12
000000000000569b         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
00000000000056a2         push       rbp
00000000000056a3         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
00000000000056aa         push       rbx
00000000000056ab         mov        r13d, edi
00000000000056ae         mov        r14, rsi
00000000000056b1         sub        rbp, r12
00000000000056b4         sub        rsp, 0x8
00000000000056b8         sar        rbp, 0x3
00000000000056bc         call       _init                                       ; _init
00000000000056c1         test       rbp, rbp
00000000000056c4         je         loc_56e6

00000000000056c6         xor        ebx, ebx
00000000000056c8         nop        dword [rax+rax]

                     loc_56d0:
00000000000056d0         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
00000000000056d3         mov        rsi, r14
00000000000056d6         mov        edi, r13d
00000000000056d9         call       qword [r12+rbx*8]
00000000000056dd         add        rbx, 0x1
00000000000056e1         cmp        rbp, rbx
00000000000056e4         jne        loc_56d0

                     loc_56e6:
00000000000056e6         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
00000000000056ea         pop        rbx
00000000000056eb         pop        rbp
00000000000056ec         pop        r12
00000000000056ee         pop        r13
00000000000056f0         pop        r14
00000000000056f2         pop        r15
00000000000056f4         ret
                        ; endp
00000000000056f5         align      256                                         ; End of unwind block (FDE at 0x745c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
0000000000005700         ret                                                    ; Begin of unwind block (FDE at 0x74a4), DATA XREF=_start+15
                        ; endp
0000000000005702         align      16                                          ; End of unwind block (FDE at 0x74a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
0000000000005710         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0x74bc), __dso_handle, CODE XREF=main+90
0000000000005717         xor        esi, esi
0000000000005719         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
000000000000571e         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x74bc)
000000000000571f         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x5720; 0x5729[ (9 bytes)
        ; File offset : [22304; 22313[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
0000000000005720         sub        rsp, 0x8
0000000000005724         add        rsp, 0x8
0000000000005728         ret
                        ; endp
0000000000005729         db  0x00 ; '.'
000000000000572a         db  0x00 ; '.'
000000000000572b         db  0x00 ; '.'
000000000000572c         db  0x00 ; '.'
000000000000572d         db  0x00 ; '.'
000000000000572e         db  0x00 ; '.'
000000000000572f         db  0x00 ; '.'
0000000000005730         db  0x00 ; '.'
0000000000005731         db  0x00 ; '.'
0000000000005732         db  0x00 ; '.'
0000000000005733         db  0x00 ; '.'
0000000000005734         db  0x00 ; '.'
0000000000005735         db  0x00 ; '.'
0000000000005736         db  0x00 ; '.'
0000000000005737         db  0x00 ; '.'
0000000000005738         db  0x00 ; '.'
0000000000005739         db  0x00 ; '.'
000000000000573a         db  0x00 ; '.'
000000000000573b         db  0x00 ; '.'
000000000000573c         db  0x00 ; '.'
000000000000573d         db  0x00 ; '.'
000000000000573e         db  0x00 ; '.'
000000000000573f         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x5740; 0x656e[ (3630 bytes)
        ; File offset : [22336; 25966[ (3630 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
0000000000005740         db  0x01 ; '.'
0000000000005741         db  0x00 ; '.'
0000000000005742         db  0x02 ; '.'
0000000000005743         db  0x00 ; '.'
                     aGetlimits:
0000000000005744         db         "getlimits", 0                              ; DATA XREF=main+128, usage+231, usage+548, usage+732, usage+751, usage+785
                     aUsageSn:
000000000000574e         db         "Usage: %s\n", 0                            ; DATA XREF=usage+93
0000000000005759         db  0x5b ; '['                                         ; DATA XREF=usage+243
000000000000575a         db  0x00 ; '.'
                     aTestInvocation:
000000000000575b         db         "test invocation", 0                        ; DATA XREF=usage+282
                     aMulticallInvoc:
000000000000576b         db         "Multi-call invocation", 0                  ; DATA XREF=usage+330
                     aSha224sum:
0000000000005781         db         "sha224sum", 0                              ; DATA XREF=usage+347
                     aSha2Utilities:
000000000000578b         db         "sha2 utilities", 0                         ; DATA XREF=usage+359
                     aSha256sum:
000000000000579a         db         "sha256sum", 0                              ; DATA XREF=usage+250
                     aSha384sum:
00000000000057a4         db         "sha384sum", 0                              ; DATA XREF=usage+294
                     aSha512sum:
00000000000057ae         db         "sha512sum", 0                              ; DATA XREF=usage+318
                     aNsOnlineHelpSn:
00000000000057b8         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+434
00000000000057cf         db  0x47 ; 'G'                                         ; DATA XREF=main+120, usage+462, usage+655, emit_bug_reporting_address+68
00000000000057d0         db  0x4e ; 'N'
00000000000057d1         db  0x55 ; 'U'
00000000000057d2         db  0x20 ; ' '
                     aCoreutils:
00000000000057d3         db         "coreutils", 0                              ; DATA XREF=main+59, main+71, usage+306
00000000000057dd         db  0x65 ; 'e'                                         ; DATA XREF=usage+501, usage+694
00000000000057de         db  0x6e ; 'n'
00000000000057df         db  0x5f ; '_'
00000000000057e0         db  0x00 ; '.'
                     aFullDocumentat:
00000000000057e1         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+529, usage+718
                     aUsrlocalsharel:
00000000000057fc         db         "/usr/local/share/locale", 0                ; DATA XREF=main+52
0000000000005814         db  0x38 ; '8'                                         ; DATA XREF=main+113
0000000000005815         db  0x2e ; '.'
0000000000005816         db  0x33 ; '3'
0000000000005817         db  0x31 ; '1'
0000000000005818         db  0x00 ; '.'
                     aPadraigBrady:
0000000000005819         db         "Padraig Brady", 0                          ; DATA XREF=main+95
0000000000005827         db  0x25 ; '%'                                         ; DATA XREF=main+154, main+325, main+496, main+581, main+752, main+923, main+1008, main+1186, main+1272, main+1358, main+1536
0000000000005828         db  0x6c ; 'l'
0000000000005829         db  0x75 ; 'u'
000000000000582a         db  0x00 ; '.'
000000000000582b         db  0x25 ; '%'                                         ; DATA XREF=main+239, main+410, main+666, main+837, main+1097, main+1447, main+1625, main+1969, main+2144, main+2322
000000000000582c         db  0x6c ; 'l'
000000000000582d         db  0x64 ; 'd'
000000000000582e         db  0x00 ; '.'
000000000000582f         db  0x53 ; 'S'                                         ; DATA XREF=main+358
                     aCharmaxsn:
0000000000005830         db         "CHAR_MAX=%s\n", 0                          ; DATA XREF=main+187
000000000000583d         db  0x53 ; 'S'                                         ; DATA XREF=main+388
                     aCharoflowsn:
000000000000583e         db         "CHAR_OFLOW=%s\n", 0                        ; DATA XREF=main+217
000000000000584d         db  0x53 ; 'S'                                         ; DATA XREF=main+444
                     aCharminsn:
000000000000584e         db         "CHAR_MIN=%s\n", 0                          ; DATA XREF=main+273
000000000000585b         db  0x53 ; 'S'                                         ; DATA XREF=main+474
                     aCharuflowsn:
000000000000585c         db         "CHAR_UFLOW=%s\n", 0                        ; DATA XREF=main+303
                     aUcharmaxsn:
000000000000586b         db         "UCHAR_MAX=%s\n", 0                         ; DATA XREF=main+529
                     aUcharoflowsn:
0000000000005879         db         "UCHAR_OFLOW=%s\n", 0                       ; DATA XREF=main+559
                     aShrtmaxsn:
0000000000005889         db         "SHRT_MAX=%s\n", 0                          ; DATA XREF=main+614
                     aShrtoflowsn:
0000000000005896         db         "SHRT_OFLOW=%s\n", 0                        ; DATA XREF=main+644
                     aShrtminsn:
00000000000058a5         db         "SHRT_MIN=%s\n", 0                          ; DATA XREF=main+700
                     aShrtuflowsn:
00000000000058b2         db         "SHRT_UFLOW=%s\n", 0                        ; DATA XREF=main+730
                     aIntminsn:
00000000000058c1         db         "INT_MIN=%s\n", 0                           ; DATA XREF=main+871
                     aIntuflowsn:
00000000000058cd         db         "INT_UFLOW=%s\n", 0                         ; DATA XREF=main+901
00000000000058db         db  0x55 ; 'U'                                         ; DATA XREF=main+956
                     aIntmaxsn:
00000000000058dc         db         "INT_MAX=%s\n", 0                           ; DATA XREF=main+785
00000000000058e8         db  0x55 ; 'U'                                         ; DATA XREF=main+986
                     aIntoflowsn:
00000000000058e9         db         "INT_OFLOW=%s\n", 0                         ; DATA XREF=main+815
                     aLongminsn:
00000000000058f7         db         "LONG_MIN=%s\n", 0                          ; DATA XREF=main+1134
                     aLonguflowsn:
0000000000005904         db         "LONG_UFLOW=%s\n", 0                        ; DATA XREF=main+1164
0000000000005913         db  0x55 ; 'U'                                         ; DATA XREF=main+1220
                     aLongmaxsn:
0000000000005914         db         "LONG_MAX=%s\n", 0                          ; DATA XREF=main+1045
0000000000005921         db  0x55 ; 'U'                                         ; DATA XREF=main+1250
                     aLongoflowsn:
0000000000005922         db         "LONG_OFLOW=%s\n", 0                        ; DATA XREF=main+1075
0000000000005931         db  0x53 ; 'S'                                         ; DATA XREF=main+1395
                     aSizemaxsn:
0000000000005932         db         "SIZE_MAX=%s\n", 0                          ; DATA XREF=main+1306
000000000000593f         db  0x53 ; 'S'                                         ; DATA XREF=main+1425
                     aSizeoflowsn:
0000000000005940         db         "SIZE_OFLOW=%s\n", 0                        ; DATA XREF=main+1336
                     aSsizeminsn:
000000000000594f         db         "SSIZE_MIN=%s\n", 0                         ; DATA XREF=main+1484
                     aSsizeuflowsn:
000000000000595d         db         "SSIZE_UFLOW=%s\n", 0                       ; DATA XREF=main+1514
                     aTimetmaxsn:
000000000000596d         db         "TIME_T_MAX=%s\n", 0                        ; DATA XREF=main+1573
                     aTimetoflowsn:
000000000000597c         db         "TIME_T_OFLOW=%s\n", 0                      ; DATA XREF=main+1603
                     aTimetminsn:
000000000000598d         db         "TIME_T_MIN=%s\n", 0                        ; DATA XREF=main+1662
                     aTimetuflowsn:
000000000000599c         db         "TIME_T_UFLOW=%s\n", 0                      ; DATA XREF=main+1692
                     aUidtmaxsn:
00000000000059ad         db         "UID_T_MAX=%s\n", 0                         ; DATA XREF=main+1747
                     aUidtoflowsn:
00000000000059bb         db         "UID_T_OFLOW=%s\n", 0                       ; DATA XREF=main+1777
                     aGidtmaxsn:
00000000000059cb         db         "GID_T_MAX=%s\n", 0                         ; DATA XREF=main+1832
                     aGidtoflowsn:
00000000000059d9         db         "GID_T_OFLOW=%s\n", 0                       ; DATA XREF=main+1862
                     aPidtmaxsn:
00000000000059e9         db         "PID_T_MAX=%s\n", 0                         ; DATA XREF=main+1917
                     aPidtoflowsn:
00000000000059f7         db         "PID_T_OFLOW=%s\n", 0                       ; DATA XREF=main+1947
                     aPidtminsn:
0000000000005a07         db         "PID_T_MIN=%s\n", 0                         ; DATA XREF=main+2003
                     aPidtuflowsn:
0000000000005a15         db         "PID_T_UFLOW=%s\n", 0                       ; DATA XREF=main+2033
                     aOfftmaxsn:
0000000000005a25         db         "OFF_T_MAX=%s\n", 0                         ; DATA XREF=main+2092
                     aOfftoflowsn:
0000000000005a33         db         "OFF_T_OFLOW=%s\n", 0                       ; DATA XREF=main+2122
                     aOfftminsn:
0000000000005a43         db         "OFF_T_MIN=%s\n", 0                         ; DATA XREF=main+2181
                     aOfftuflowsn:
0000000000005a51         db         "OFF_T_UFLOW=%s\n", 0                       ; DATA XREF=main+2211
                     aIntmaxminsn:
0000000000005a61         db         "INTMAX_MIN=%s\n", 0                        ; DATA XREF=main+2359
                     aIntmaxuflowsn:
0000000000005a70         db         "INTMAX_UFLOW=%s\n", 0                      ; DATA XREF=main+2389
0000000000005a81         db  0x55 ; 'U'                                         ; DATA XREF=main+2445
                     aIntmaxmaxsn:
0000000000005a82         db         "INTMAX_MAX=%s\n", 0                        ; DATA XREF=main+2270
0000000000005a91         db  0x55 ; 'U'                                         ; DATA XREF=main+2475
                     aIntmaxoflowsn:
0000000000005a92         db         "INTMAX_OFLOW=%s\n", 0                      ; DATA XREF=main+2300
                     aFltmin:
0000000000005aa3         db         "FLT_MIN=", 0                               ; DATA XREF=main+2497
                     aFltmax:
0000000000005aac         db         "FLT_MAX=", 0                               ; DATA XREF=main+2529
0000000000005ab5         db  0x4c ; 'L'                                         ; DATA XREF=main+2625
                     aDblmin:
0000000000005ab6         db         "DBL_MIN=", 0                               ; DATA XREF=main+2561
0000000000005abf         db  0x4c ; 'L'                                         ; DATA XREF=main+2662
                     aDblmax:
0000000000005ac0         db         "DBL_MAX=", 0                               ; DATA XREF=main+2593
0000000000005ac9         align      16
                     aTrySHelpForMor:
0000000000005ad0         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
0000000000005af7         align      8
                     aOutputPlatform:
0000000000005af8         db         "Output platform dependent limits in a format useful for shell scripts.\n\n", 0 ; DATA XREF=usage+132
0000000000005b41         align      8
                     aHelpDisplayThi:
0000000000005b48         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+169
0000000000005b75         align      8
                     aVersionOutputV:
0000000000005b78         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+206
0000000000005bae         align      16
                     aHttpswwwgnuorg:
0000000000005bb0         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+455, usage+555, usage+648, usage+758, emit_bug_reporting_address+61
                     aReportAnyTrans:
0000000000005bd8         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+799
0000000000005c1f         align      32
                     aOrAvailableLoc:
0000000000005c20         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+598
0000000000005c53         align      2
0000000000005c56         db  0x80 ; '.'
0000000000005c57         db  0x00 ; '.'
                     float_5c58:        // float
0000000000005c58         dd         3.40282e+38f                                ; DATA XREF=main+2548
0000000000005c5c         align      2
0000000000005c66         db  0x10 ; '.'
0000000000005c67         db  0x00 ; '.'
                     double_5c68:        // double
0000000000005c68         dq         1.79769e+308                                ; DATA XREF=main+2612
                     aWriteError:
0000000000005c70         db         "write error", 0                            ; DATA XREF=close_stdout+67
                     aSS:
0000000000005c7c         db         "%s: %s", 0                                 ; DATA XREF=close_stdout+108
0000000000005c83         db  0x00 ; '.'
0000000000005c84         db  0x00 ; '.'
0000000000005c85         db  0x00 ; '.'
0000000000005c86         db  0x00 ; '.'
0000000000005c87         db  0x00 ; '.'
0000000000005c88         db  0x00 ; '.'
0000000000005c89         db  0x00 ; '.'
0000000000005c8a         db  0x00 ; '.'
0000000000005c8b         db  0x00 ; '.'
0000000000005c8c         db  0x00 ; '.'
0000000000005c8d         db  0x00 ; '.'
0000000000005c8e         db  0x00 ; '.'
0000000000005c8f         db  0x00 ; '.'
0000000000005c90         dq         -0.0, 0.0                                   ; DATA XREF=dtoastr+340
0000000000005ca0         dq         1.061e-314, 0.0                             ; DATA XREF=ftoastr+347
0000000000005cb0         db  0x00 ; '.'                                         ; DATA XREF=ldtoastr+129
0000000000005cb1         db  0x00 ; '.'
0000000000005cb2         db  0x00 ; '.'
0000000000005cb3         db  0x00 ; '.'
0000000000005cb4         db  0x00 ; '.'
0000000000005cb5         db  0x00 ; '.'
0000000000005cb6         db  0x00 ; '.'
0000000000005cb7         db  0x80 ; '.'
0000000000005cb8         db  0x01 ; '.'
0000000000005cb9         db  0x00 ; '.'
0000000000005cba         db  0x00 ; '.'
0000000000005cbb         db  0x00 ; '.'
0000000000005cbc         db  0x00 ; '.'
0000000000005cbd         db  0x00 ; '.'
0000000000005cbe         db  0x00 ; '.'
0000000000005cbf         db  0x00 ; '.'
0000000000005cc0         db  0x2b ; '+'                                         ; DATA XREF=parse_long_options+183, parse_gnu_standard_options_only+114
0000000000005cc1         db  0x00 ; '.'
                     aHelp:
0000000000005cc2         db         "help", 0
                     aVersion:
0000000000005cc7         db         "version", 0
0000000000005ccf         align      16
                     aANullArgv0WasP:
0000000000005cd0         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
0000000000005d08         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
0000000000005d10         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
0000000000005d11         db  0x74 ; 't'
0000000000005d12         db  0x2d ; '-'
0000000000005d13         db  0x00 ; '.'
0000000000005d14         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
0000000000005d15         db  0x80 ; '.'
0000000000005d16         db  0x98 ; '.'
0000000000005d17         db  0x00 ; '.'
0000000000005d18         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
0000000000005d19         db  0x80 ; '.'
0000000000005d1a         db  0x99 ; '.'
0000000000005d1b         db  0x00 ; '.'
0000000000005d1c         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
0000000000005d1d         db  0x07 ; '.'
0000000000005d1e         db  0x65 ; 'e'
0000000000005d1f         db  0x00 ; '.'
0000000000005d20         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
0000000000005d21         db  0xaf ; '.'
0000000000005d22         db  0x00 ; '.'
0000000000005d23         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_36b0+1451, sub_36b0+1493, sub_36b0+2429
0000000000005d24         db  0x00 ; '.'
0000000000005d25         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_36b0+132, sub_36b0+1338, sub_36b0+1670, sub_36b0+1697, sub_36b0+2352
0000000000005d26         db  0x00 ; '.'
0000000000005d27         db  0x60 ; '`'                                         ; DATA XREF=sub_36b0+1627, sub_36b0+1654
0000000000005d28         db  0x00 ; '.'
                     aLiteral:
0000000000005d29         db         "literal", 0
                     aShell:
0000000000005d31         db         "shell", 0
                     aShellalways:
0000000000005d37         db         "shell-always", 0
0000000000005d44         db  0x73 ; 's'
0000000000005d45         db  0x68 ; 'h'
0000000000005d46         db  0x65 ; 'e'
0000000000005d47         db  0x6c ; 'l'
0000000000005d48         db  0x6c ; 'l'
0000000000005d49         db  0x2d ; '-'
                     aEscape:
0000000000005d4a         db         "escape", 0
                     aShellescapealw:
0000000000005d51         db         "shell-escape-always", 0
0000000000005d65         db  0x63 ; 'c'
0000000000005d66         db  0x00 ; '.'
                     aCmaybe:
0000000000005d67         db         "c-maybe", 0
                     aClocale:
0000000000005d6f         db         "clocale", 0
0000000000005d77         align      128
                     switch_table_5d80:        // switch_table
0000000000005d80         dd         quotearg_buffer_restyled.loc_3daa-switch_table_5d80, quotearg_buffer_restyled.loc_3003-switch_table_5d80, quotearg_buffer_restyled.loc_3fd8-switch_table_5d80, quotearg_buffer_restyled.loc_3de4-switch_table_5d80 ; switch table used at 0x3001 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
0000000000005d90         dd         quotearg_buffer_restyled.loc_3bd4-switch_table_5d80, quotearg_buffer_restyled.loc_3c30-switch_table_5d80, quotearg_buffer_restyled.loc_3c85-switch_table_5d80, quotearg_buffer_restyled.loc_3cca-switch_table_5d80
0000000000005da0         dd         3 dup (quotearg_buffer_restyled.loc_3d04-switch_table_5d80)
0000000000005dac         db  0xd4 ; '.'                                         ; DATA XREF=quotearg_buffer_restyled+477
0000000000005dad         db  0xd5 ; '.'
0000000000005dae         db  0xff ; '.'
0000000000005daf         db  0xff ; '.'
0000000000005db0         db  0xbc ; '.'
0000000000005db1         db  0xd6 ; '.'
0000000000005db2         db  0xff ; '.'
0000000000005db3         db  0xff ; '.'
0000000000005db4         db  0xbc ; '.'
0000000000005db5         db  0xd6 ; '.'
0000000000005db6         db  0xff ; '.'
0000000000005db7         db  0xff ; '.'
0000000000005db8         db  0xbc ; '.'
0000000000005db9         db  0xd6 ; '.'
0000000000005dba         db  0xff ; '.'
0000000000005dbb         db  0xff ; '.'
0000000000005dbc         db  0xbc ; '.'
0000000000005dbd         db  0xd6 ; '.'
0000000000005dbe         db  0xff ; '.'
0000000000005dbf         db  0xff ; '.'
0000000000005dc0         db  0xbc ; '.'
0000000000005dc1         db  0xd6 ; '.'
0000000000005dc2         db  0xff ; '.'
0000000000005dc3         db  0xff ; '.'
0000000000005dc4         db  0xbc ; '.'
0000000000005dc5         db  0xd6 ; '.'
0000000000005dc6         db  0xff ; '.'
0000000000005dc7         db  0xff ; '.'
0000000000005dc8         db  0x14 ; '.'
0000000000005dc9         db  0xd6 ; '.'
0000000000005dca         db  0xff ; '.'
0000000000005dcb         db  0xff ; '.'
0000000000005dcc         db  0x1c ; '.'
0000000000005dcd         db  0xd5 ; '.'
0000000000005dce         db  0xff ; '.'
0000000000005dcf         db  0xff ; '.'
0000000000005dd0         db  0xdc ; '.'
0000000000005dd1         db  0xd4 ; '.'
0000000000005dd2         db  0xff ; '.'
0000000000005dd3         db  0xff ; '.'
0000000000005dd4         db  0xa4 ; '.'
0000000000005dd5         db  0xd6 ; '.'
0000000000005dd6         db  0xff ; '.'
0000000000005dd7         db  0xff ; '.'
0000000000005dd8         db  0x94 ; '.'
0000000000005dd9         db  0xd6 ; '.'
0000000000005dda         db  0xff ; '.'
0000000000005ddb         db  0xff ; '.'
0000000000005ddc         db  0x84 ; '.'
0000000000005ddd         db  0xd6 ; '.'
0000000000005dde         db  0xff ; '.'
0000000000005ddf         db  0xff ; '.'
0000000000005de0         db  0x74 ; 't'
0000000000005de1         db  0xd6 ; '.'
0000000000005de2         db  0xff ; '.'
0000000000005de3         db  0xff ; '.'
0000000000005de4         db  0xbc ; '.'
0000000000005de5         db  0xd6 ; '.'
0000000000005de6         db  0xff ; '.'
0000000000005de7         db  0xff ; '.'
0000000000005de8         db  0xbc ; '.'
0000000000005de9         db  0xd6 ; '.'
0000000000005dea         db  0xff ; '.'
0000000000005deb         db  0xff ; '.'
0000000000005dec         db  0xbc ; '.'
0000000000005ded         db  0xd6 ; '.'
0000000000005dee         db  0xff ; '.'
0000000000005def         db  0xff ; '.'
0000000000005df0         db  0xbc ; '.'
0000000000005df1         db  0xd6 ; '.'
0000000000005df2         db  0xff ; '.'
0000000000005df3         db  0xff ; '.'
0000000000005df4         db  0xbc ; '.'
0000000000005df5         db  0xd6 ; '.'
0000000000005df6         db  0xff ; '.'
0000000000005df7         db  0xff ; '.'
0000000000005df8         db  0xbc ; '.'
0000000000005df9         db  0xd6 ; '.'
0000000000005dfa         db  0xff ; '.'
0000000000005dfb         db  0xff ; '.'
0000000000005dfc         db  0xbc ; '.'
0000000000005dfd         db  0xd6 ; '.'
0000000000005dfe         db  0xff ; '.'
0000000000005dff         db  0xff ; '.'
0000000000005e00         db  0xbc ; '.'
0000000000005e01         db  0xd6 ; '.'
0000000000005e02         db  0xff ; '.'
0000000000005e03         db  0xff ; '.'
0000000000005e04         db  0xbc ; '.'
0000000000005e05         db  0xd6 ; '.'
0000000000005e06         db  0xff ; '.'
0000000000005e07         db  0xff ; '.'
0000000000005e08         db  0xbc ; '.'
0000000000005e09         db  0xd6 ; '.'
0000000000005e0a         db  0xff ; '.'
0000000000005e0b         db  0xff ; '.'
0000000000005e0c         db  0xbc ; '.'
0000000000005e0d         db  0xd6 ; '.'
0000000000005e0e         db  0xff ; '.'
0000000000005e0f         db  0xff ; '.'
0000000000005e10         db  0xbc ; '.'
0000000000005e11         db  0xd6 ; '.'
0000000000005e12         db  0xff ; '.'
0000000000005e13         db  0xff ; '.'
0000000000005e14         db  0xbc ; '.'
0000000000005e15         db  0xd6 ; '.'
0000000000005e16         db  0xff ; '.'
0000000000005e17         db  0xff ; '.'
0000000000005e18         db  0xbc ; '.'
0000000000005e19         db  0xd6 ; '.'
0000000000005e1a         db  0xff ; '.'
0000000000005e1b         db  0xff ; '.'
0000000000005e1c         db  0xbc ; '.'
0000000000005e1d         db  0xd6 ; '.'
0000000000005e1e         db  0xff ; '.'
0000000000005e1f         db  0xff ; '.'
0000000000005e20         db  0xbc ; '.'
0000000000005e21         db  0xd6 ; '.'
0000000000005e22         db  0xff ; '.'
0000000000005e23         db  0xff ; '.'
0000000000005e24         db  0xbc ; '.'
0000000000005e25         db  0xd6 ; '.'
0000000000005e26         db  0xff ; '.'
0000000000005e27         db  0xff ; '.'
0000000000005e28         db  0xbc ; '.'
0000000000005e29         db  0xd6 ; '.'
0000000000005e2a         db  0xff ; '.'
0000000000005e2b         db  0xff ; '.'
0000000000005e2c         db  0x64 ; 'd'
0000000000005e2d         db  0xd6 ; '.'
0000000000005e2e         db  0xff ; '.'
0000000000005e2f         db  0xff ; '.'
0000000000005e30         db  0x54 ; 'T'
0000000000005e31         db  0xd6 ; '.'
0000000000005e32         db  0xff ; '.'
0000000000005e33         db  0xff ; '.'
0000000000005e34         db  0x54 ; 'T'
0000000000005e35         db  0xd6 ; '.'
0000000000005e36         db  0xff ; '.'
0000000000005e37         db  0xff ; '.'
0000000000005e38         db  0x24 ; '$'
0000000000005e39         db  0xd6 ; '.'
0000000000005e3a         db  0xff ; '.'
0000000000005e3b         db  0xff ; '.'
0000000000005e3c         db  0x54 ; 'T'
0000000000005e3d         db  0xd6 ; '.'
0000000000005e3e         db  0xff ; '.'
0000000000005e3f         db  0xff ; '.'
0000000000005e40         db  0xfc ; '.'
0000000000005e41         db  0xd5 ; '.'
0000000000005e42         db  0xff ; '.'
0000000000005e43         db  0xff ; '.'
0000000000005e44         db  0x54 ; 'T'
0000000000005e45         db  0xd6 ; '.'
0000000000005e46         db  0xff ; '.'
0000000000005e47         db  0xff ; '.'
0000000000005e48         db  0xb7 ; '.'
0000000000005e49         db  0xd4 ; '.'
0000000000005e4a         db  0xff ; '.'
0000000000005e4b         db  0xff ; '.'
0000000000005e4c         db  0x54 ; 'T'
0000000000005e4d         db  0xd6 ; '.'
0000000000005e4e         db  0xff ; '.'
0000000000005e4f         db  0xff ; '.'
0000000000005e50         db  0x54 ; 'T'
0000000000005e51         db  0xd6 ; '.'
0000000000005e52         db  0xff ; '.'
0000000000005e53         db  0xff ; '.'
0000000000005e54         db  0x54 ; 'T'
0000000000005e55         db  0xd6 ; '.'
0000000000005e56         db  0xff ; '.'
0000000000005e57         db  0xff ; '.'
0000000000005e58         db  0xfc ; '.'
0000000000005e59         db  0xd5 ; '.'
0000000000005e5a         db  0xff ; '.'
0000000000005e5b         db  0xff ; '.'
0000000000005e5c         db  0xfc ; '.'
0000000000005e5d         db  0xd5 ; '.'
0000000000005e5e         db  0xff ; '.'
0000000000005e5f         db  0xff ; '.'
0000000000005e60         db  0xfc ; '.'
0000000000005e61         db  0xd5 ; '.'
0000000000005e62         db  0xff ; '.'
0000000000005e63         db  0xff ; '.'
0000000000005e64         db  0xfc ; '.'
0000000000005e65         db  0xd5 ; '.'
0000000000005e66         db  0xff ; '.'
0000000000005e67         db  0xff ; '.'
0000000000005e68         db  0xfc ; '.'
0000000000005e69         db  0xd5 ; '.'
0000000000005e6a         db  0xff ; '.'
0000000000005e6b         db  0xff ; '.'
0000000000005e6c         db  0xfc ; '.'
0000000000005e6d         db  0xd5 ; '.'
0000000000005e6e         db  0xff ; '.'
0000000000005e6f         db  0xff ; '.'
0000000000005e70         db  0xfc ; '.'
0000000000005e71         db  0xd5 ; '.'
0000000000005e72         db  0xff ; '.'
0000000000005e73         db  0xff ; '.'
0000000000005e74         db  0xfc ; '.'
0000000000005e75         db  0xd5 ; '.'
0000000000005e76         db  0xff ; '.'
0000000000005e77         db  0xff ; '.'
0000000000005e78         db  0xfc ; '.'
0000000000005e79         db  0xd5 ; '.'
0000000000005e7a         db  0xff ; '.'
0000000000005e7b         db  0xff ; '.'
0000000000005e7c         db  0xfc ; '.'
0000000000005e7d         db  0xd5 ; '.'
0000000000005e7e         db  0xff ; '.'
0000000000005e7f         db  0xff ; '.'
0000000000005e80         db  0xfc ; '.'
0000000000005e81         db  0xd5 ; '.'
0000000000005e82         db  0xff ; '.'
0000000000005e83         db  0xff ; '.'
0000000000005e84         db  0xfc ; '.'
0000000000005e85         db  0xd5 ; '.'
0000000000005e86         db  0xff ; '.'
0000000000005e87         db  0xff ; '.'
0000000000005e88         db  0xfc ; '.'
0000000000005e89         db  0xd5 ; '.'
0000000000005e8a         db  0xff ; '.'
0000000000005e8b         db  0xff ; '.'
0000000000005e8c         db  0xfc ; '.'
0000000000005e8d         db  0xd5 ; '.'
0000000000005e8e         db  0xff ; '.'
0000000000005e8f         db  0xff ; '.'
0000000000005e90         db  0xfc ; '.'
0000000000005e91         db  0xd5 ; '.'
0000000000005e92         db  0xff ; '.'
0000000000005e93         db  0xff ; '.'
0000000000005e94         db  0xfc ; '.'
0000000000005e95         db  0xd5 ; '.'
0000000000005e96         db  0xff ; '.'
0000000000005e97         db  0xff ; '.'
0000000000005e98         db  0x54 ; 'T'
0000000000005e99         db  0xd6 ; '.'
0000000000005e9a         db  0xff ; '.'
0000000000005e9b         db  0xff ; '.'
0000000000005e9c         db  0x54 ; 'T'
0000000000005e9d         db  0xd6 ; '.'
0000000000005e9e         db  0xff ; '.'
0000000000005e9f         db  0xff ; '.'
0000000000005ea0         db  0x54 ; 'T'
0000000000005ea1         db  0xd6 ; '.'
0000000000005ea2         db  0xff ; '.'
0000000000005ea3         db  0xff ; '.'
0000000000005ea4         db  0x54 ; 'T'
0000000000005ea5         db  0xd6 ; '.'
0000000000005ea6         db  0xff ; '.'
0000000000005ea7         db  0xff ; '.'
0000000000005ea8         db  0x87 ; '.'
0000000000005ea9         db  0xd4 ; '.'
0000000000005eaa         db  0xff ; '.'
0000000000005eab         db  0xff ; '.'
0000000000005eac         db  0xbc ; '.'
0000000000005ead         db  0xd6 ; '.'
0000000000005eae         db  0xff ; '.'
0000000000005eaf         db  0xff ; '.'
0000000000005eb0         db  0xfc ; '.'
0000000000005eb1         db  0xd5 ; '.'
0000000000005eb2         db  0xff ; '.'
0000000000005eb3         db  0xff ; '.'
0000000000005eb4         db  0xfc ; '.'
0000000000005eb5         db  0xd5 ; '.'
0000000000005eb6         db  0xff ; '.'
0000000000005eb7         db  0xff ; '.'
0000000000005eb8         db  0xfc ; '.'
0000000000005eb9         db  0xd5 ; '.'
0000000000005eba         db  0xff ; '.'
0000000000005ebb         db  0xff ; '.'
0000000000005ebc         db  0xfc ; '.'
0000000000005ebd         db  0xd5 ; '.'
0000000000005ebe         db  0xff ; '.'
0000000000005ebf         db  0xff ; '.'
0000000000005ec0         db  0xfc ; '.'
0000000000005ec1         db  0xd5 ; '.'
0000000000005ec2         db  0xff ; '.'
0000000000005ec3         db  0xff ; '.'
0000000000005ec4         db  0xfc ; '.'
0000000000005ec5         db  0xd5 ; '.'
0000000000005ec6         db  0xff ; '.'
0000000000005ec7         db  0xff ; '.'
0000000000005ec8         db  0xfc ; '.'
0000000000005ec9         db  0xd5 ; '.'
0000000000005eca         db  0xff ; '.'
0000000000005ecb         db  0xff ; '.'
0000000000005ecc         db  0xfc ; '.'
0000000000005ecd         db  0xd5 ; '.'
0000000000005ece         db  0xff ; '.'
0000000000005ecf         db  0xff ; '.'
0000000000005ed0         db  0xfc ; '.'
0000000000005ed1         db  0xd5 ; '.'
0000000000005ed2         db  0xff ; '.'
0000000000005ed3         db  0xff ; '.'
0000000000005ed4         db  0xfc ; '.'
0000000000005ed5         db  0xd5 ; '.'
0000000000005ed6         db  0xff ; '.'
0000000000005ed7         db  0xff ; '.'
0000000000005ed8         db  0xfc ; '.'
0000000000005ed9         db  0xd5 ; '.'
0000000000005eda         db  0xff ; '.'
0000000000005edb         db  0xff ; '.'
0000000000005edc         db  0xfc ; '.'
0000000000005edd         db  0xd5 ; '.'
0000000000005ede         db  0xff ; '.'
0000000000005edf         db  0xff ; '.'
0000000000005ee0         db  0xfc ; '.'
0000000000005ee1         db  0xd5 ; '.'
0000000000005ee2         db  0xff ; '.'
0000000000005ee3         db  0xff ; '.'
0000000000005ee4         db  0xfc ; '.'
0000000000005ee5         db  0xd5 ; '.'
0000000000005ee6         db  0xff ; '.'
0000000000005ee7         db  0xff ; '.'
0000000000005ee8         db  0xfc ; '.'
0000000000005ee9         db  0xd5 ; '.'
0000000000005eea         db  0xff ; '.'
0000000000005eeb         db  0xff ; '.'
0000000000005eec         db  0xfc ; '.'
0000000000005eed         db  0xd5 ; '.'
0000000000005eee         db  0xff ; '.'
0000000000005eef         db  0xff ; '.'
0000000000005ef0         db  0xfc ; '.'
0000000000005ef1         db  0xd5 ; '.'
0000000000005ef2         db  0xff ; '.'
0000000000005ef3         db  0xff ; '.'
0000000000005ef4         db  0xfc ; '.'
0000000000005ef5         db  0xd5 ; '.'
0000000000005ef6         db  0xff ; '.'
0000000000005ef7         db  0xff ; '.'
0000000000005ef8         db  0xfc ; '.'
0000000000005ef9         db  0xd5 ; '.'
0000000000005efa         db  0xff ; '.'
0000000000005efb         db  0xff ; '.'
0000000000005efc         db  0xfc ; '.'
0000000000005efd         db  0xd5 ; '.'
0000000000005efe         db  0xff ; '.'
0000000000005eff         db  0xff ; '.'
0000000000005f00         db  0xfc ; '.'
0000000000005f01         db  0xd5 ; '.'
0000000000005f02         db  0xff ; '.'
0000000000005f03         db  0xff ; '.'
0000000000005f04         db  0xfc ; '.'
0000000000005f05         db  0xd5 ; '.'
0000000000005f06         db  0xff ; '.'
0000000000005f07         db  0xff ; '.'
0000000000005f08         db  0xfc ; '.'
0000000000005f09         db  0xd5 ; '.'
0000000000005f0a         db  0xff ; '.'
0000000000005f0b         db  0xff ; '.'
0000000000005f0c         db  0xfc ; '.'
0000000000005f0d         db  0xd5 ; '.'
0000000000005f0e         db  0xff ; '.'
0000000000005f0f         db  0xff ; '.'
0000000000005f10         db  0xfc ; '.'
0000000000005f11         db  0xd5 ; '.'
0000000000005f12         db  0xff ; '.'
0000000000005f13         db  0xff ; '.'
0000000000005f14         db  0xfc ; '.'
0000000000005f15         db  0xd5 ; '.'
0000000000005f16         db  0xff ; '.'
0000000000005f17         db  0xff ; '.'
0000000000005f18         db  0x54 ; 'T'
0000000000005f19         db  0xd6 ; '.'
0000000000005f1a         db  0xff ; '.'
0000000000005f1b         db  0xff ; '.'
0000000000005f1c         db  0x2c ; ','
0000000000005f1d         db  0xd5 ; '.'
0000000000005f1e         db  0xff ; '.'
0000000000005f1f         db  0xff ; '.'
0000000000005f20         db  0xfc ; '.'
0000000000005f21         db  0xd5 ; '.'
0000000000005f22         db  0xff ; '.'
0000000000005f23         db  0xff ; '.'
0000000000005f24         db  0x54 ; 'T'
0000000000005f25         db  0xd6 ; '.'
0000000000005f26         db  0xff ; '.'
0000000000005f27         db  0xff ; '.'
0000000000005f28         db  0xfc ; '.'
0000000000005f29         db  0xd5 ; '.'
0000000000005f2a         db  0xff ; '.'
0000000000005f2b         db  0xff ; '.'
0000000000005f2c         db  0x54 ; 'T'
0000000000005f2d         db  0xd6 ; '.'
0000000000005f2e         db  0xff ; '.'
0000000000005f2f         db  0xff ; '.'
0000000000005f30         db  0xfc ; '.'
0000000000005f31         db  0xd5 ; '.'
0000000000005f32         db  0xff ; '.'
0000000000005f33         db  0xff ; '.'
0000000000005f34         db  0xfc ; '.'
0000000000005f35         db  0xd5 ; '.'
0000000000005f36         db  0xff ; '.'
0000000000005f37         db  0xff ; '.'
0000000000005f38         db  0xfc ; '.'
0000000000005f39         db  0xd5 ; '.'
0000000000005f3a         db  0xff ; '.'
0000000000005f3b         db  0xff ; '.'
0000000000005f3c         db  0xfc ; '.'
0000000000005f3d         db  0xd5 ; '.'
0000000000005f3e         db  0xff ; '.'
0000000000005f3f         db  0xff ; '.'
0000000000005f40         db  0xfc ; '.'
0000000000005f41         db  0xd5 ; '.'
0000000000005f42         db  0xff ; '.'
0000000000005f43         db  0xff ; '.'
0000000000005f44         db  0xfc ; '.'
0000000000005f45         db  0xd5 ; '.'
0000000000005f46         db  0xff ; '.'
0000000000005f47         db  0xff ; '.'
0000000000005f48         db  0xfc ; '.'
0000000000005f49         db  0xd5 ; '.'
0000000000005f4a         db  0xff ; '.'
0000000000005f4b         db  0xff ; '.'
0000000000005f4c         db  0xfc ; '.'
0000000000005f4d         db  0xd5 ; '.'
0000000000005f4e         db  0xff ; '.'
0000000000005f4f         db  0xff ; '.'
0000000000005f50         db  0xfc ; '.'
0000000000005f51         db  0xd5 ; '.'
0000000000005f52         db  0xff ; '.'
0000000000005f53         db  0xff ; '.'
0000000000005f54         db  0xfc ; '.'
0000000000005f55         db  0xd5 ; '.'
0000000000005f56         db  0xff ; '.'
0000000000005f57         db  0xff ; '.'
0000000000005f58         db  0xfc ; '.'
0000000000005f59         db  0xd5 ; '.'
0000000000005f5a         db  0xff ; '.'
0000000000005f5b         db  0xff ; '.'
0000000000005f5c         db  0xfc ; '.'
0000000000005f5d         db  0xd5 ; '.'
0000000000005f5e         db  0xff ; '.'
0000000000005f5f         db  0xff ; '.'
0000000000005f60         db  0xfc ; '.'
0000000000005f61         db  0xd5 ; '.'
0000000000005f62         db  0xff ; '.'
0000000000005f63         db  0xff ; '.'
0000000000005f64         db  0xfc ; '.'
0000000000005f65         db  0xd5 ; '.'
0000000000005f66         db  0xff ; '.'
0000000000005f67         db  0xff ; '.'
0000000000005f68         db  0xfc ; '.'
0000000000005f69         db  0xd5 ; '.'
0000000000005f6a         db  0xff ; '.'
0000000000005f6b         db  0xff ; '.'
0000000000005f6c         db  0xfc ; '.'
0000000000005f6d         db  0xd5 ; '.'
0000000000005f6e         db  0xff ; '.'
0000000000005f6f         db  0xff ; '.'
0000000000005f70         db  0xfc ; '.'
0000000000005f71         db  0xd5 ; '.'
0000000000005f72         db  0xff ; '.'
0000000000005f73         db  0xff ; '.'
0000000000005f74         db  0xfc ; '.'
0000000000005f75         db  0xd5 ; '.'
0000000000005f76         db  0xff ; '.'
0000000000005f77         db  0xff ; '.'
0000000000005f78         db  0xfc ; '.'
0000000000005f79         db  0xd5 ; '.'
0000000000005f7a         db  0xff ; '.'
0000000000005f7b         db  0xff ; '.'
0000000000005f7c         db  0xfc ; '.'
0000000000005f7d         db  0xd5 ; '.'
0000000000005f7e         db  0xff ; '.'
0000000000005f7f         db  0xff ; '.'
0000000000005f80         db  0xfc ; '.'
0000000000005f81         db  0xd5 ; '.'
0000000000005f82         db  0xff ; '.'
0000000000005f83         db  0xff ; '.'
0000000000005f84         db  0xfc ; '.'
0000000000005f85         db  0xd5 ; '.'
0000000000005f86         db  0xff ; '.'
0000000000005f87         db  0xff ; '.'
0000000000005f88         db  0xfc ; '.'
0000000000005f89         db  0xd5 ; '.'
0000000000005f8a         db  0xff ; '.'
0000000000005f8b         db  0xff ; '.'
0000000000005f8c         db  0xfc ; '.'
0000000000005f8d         db  0xd5 ; '.'
0000000000005f8e         db  0xff ; '.'
0000000000005f8f         db  0xff ; '.'
0000000000005f90         db  0xfc ; '.'
0000000000005f91         db  0xd5 ; '.'
0000000000005f92         db  0xff ; '.'
0000000000005f93         db  0xff ; '.'
0000000000005f94         db  0xfc ; '.'
0000000000005f95         db  0xd5 ; '.'
0000000000005f96         db  0xff ; '.'
0000000000005f97         db  0xff ; '.'
0000000000005f98         db  0xb7 ; '.'
0000000000005f99         db  0xd3 ; '.'
0000000000005f9a         db  0xff ; '.'
0000000000005f9b         db  0xff ; '.'
0000000000005f9c         db  0x54 ; 'T'
0000000000005f9d         db  0xd6 ; '.'
0000000000005f9e         db  0xff ; '.'
0000000000005f9f         db  0xff ; '.'
0000000000005fa0         db  0xb7 ; '.'
0000000000005fa1         db  0xd3 ; '.'
0000000000005fa2         db  0xff ; '.'
0000000000005fa3         db  0xff ; '.'
0000000000005fa4         db  0x24 ; '$'
0000000000005fa5         db  0xd6 ; '.'
0000000000005fa6         db  0xff ; '.'
0000000000005fa7         db  0xff ; '.'
0000000000005fa8         db  0xa8 ; '.'                                         ; DATA XREF=sub_3450+137
0000000000005fa9         db  0xd5 ; '.'
0000000000005faa         db  0xff ; '.'
0000000000005fab         db  0xff ; '.'
0000000000005fac         db  0xb8 ; '.'
0000000000005fad         db  0xd4 ; '.'
0000000000005fae         db  0xff ; '.'
0000000000005faf         db  0xff ; '.'
0000000000005fb0         db  0xb8 ; '.'
0000000000005fb1         db  0xd4 ; '.'
0000000000005fb2         db  0xff ; '.'
0000000000005fb3         db  0xff ; '.'
0000000000005fb4         db  0xb8 ; '.'
0000000000005fb5         db  0xd4 ; '.'
0000000000005fb6         db  0xff ; '.'
0000000000005fb7         db  0xff ; '.'
0000000000005fb8         db  0xb8 ; '.'
0000000000005fb9         db  0xd4 ; '.'
0000000000005fba         db  0xff ; '.'
0000000000005fbb         db  0xff ; '.'
0000000000005fbc         db  0xb8 ; '.'
0000000000005fbd         db  0xd4 ; '.'
0000000000005fbe         db  0xff ; '.'
0000000000005fbf         db  0xff ; '.'
0000000000005fc0         db  0xb8 ; '.'
0000000000005fc1         db  0xd4 ; '.'
0000000000005fc2         db  0xff ; '.'
0000000000005fc3         db  0xff ; '.'
0000000000005fc4         db  0x98 ; '.'
0000000000005fc5         db  0xd5 ; '.'
0000000000005fc6         db  0xff ; '.'
0000000000005fc7         db  0xff ; '.'
0000000000005fc8         db  0xe8 ; '.'
0000000000005fc9         db  0xd6 ; '.'
0000000000005fca         db  0xff ; '.'
0000000000005fcb         db  0xff ; '.'
0000000000005fcc         db  0xd0 ; '.'
0000000000005fcd         db  0xd6 ; '.'
0000000000005fce         db  0xff ; '.'
0000000000005fcf         db  0xff ; '.'
0000000000005fd0         db  0x80 ; '.'
0000000000005fd1         db  0xd5 ; '.'
0000000000005fd2         db  0xff ; '.'
0000000000005fd3         db  0xff ; '.'
0000000000005fd4         db  0xc0 ; '.'
0000000000005fd5         db  0xd6 ; '.'
0000000000005fd6         db  0xff ; '.'
0000000000005fd7         db  0xff ; '.'
0000000000005fd8         db  0x68 ; 'h'
0000000000005fd9         db  0xd5 ; '.'
0000000000005fda         db  0xff ; '.'
0000000000005fdb         db  0xff ; '.'
0000000000005fdc         db  0xa8 ; '.'
0000000000005fdd         db  0xd6 ; '.'
0000000000005fde         db  0xff ; '.'
0000000000005fdf         db  0xff ; '.'
0000000000005fe0         db  0xb8 ; '.'
0000000000005fe1         db  0xd4 ; '.'
0000000000005fe2         db  0xff ; '.'
0000000000005fe3         db  0xff ; '.'
0000000000005fe4         db  0xb8 ; '.'
0000000000005fe5         db  0xd4 ; '.'
0000000000005fe6         db  0xff ; '.'
0000000000005fe7         db  0xff ; '.'
0000000000005fe8         db  0xb8 ; '.'
0000000000005fe9         db  0xd4 ; '.'
0000000000005fea         db  0xff ; '.'
0000000000005feb         db  0xff ; '.'
0000000000005fec         db  0xb8 ; '.'
0000000000005fed         db  0xd4 ; '.'
0000000000005fee         db  0xff ; '.'
0000000000005fef         db  0xff ; '.'
0000000000005ff0         db  0xb8 ; '.'
0000000000005ff1         db  0xd4 ; '.'
0000000000005ff2         db  0xff ; '.'
0000000000005ff3         db  0xff ; '.'
0000000000005ff4         db  0xb8 ; '.'
0000000000005ff5         db  0xd4 ; '.'
0000000000005ff6         db  0xff ; '.'
0000000000005ff7         db  0xff ; '.'
0000000000005ff8         db  0xb8 ; '.'
0000000000005ff9         db  0xd4 ; '.'
0000000000005ffa         db  0xff ; '.'
0000000000005ffb         db  0xff ; '.'
0000000000005ffc         db  0xb8 ; '.'
0000000000005ffd         db  0xd4 ; '.'
0000000000005ffe         db  0xff ; '.'
0000000000005fff         db  0xff ; '.'
0000000000006000         db  0xb8 ; '.'
0000000000006001         db  0xd4 ; '.'
0000000000006002         db  0xff ; '.'
0000000000006003         db  0xff ; '.'
0000000000006004         db  0xb8 ; '.'
0000000000006005         db  0xd4 ; '.'
0000000000006006         db  0xff ; '.'
0000000000006007         db  0xff ; '.'
0000000000006008         db  0xb8 ; '.'
0000000000006009         db  0xd4 ; '.'
000000000000600a         db  0xff ; '.'
000000000000600b         db  0xff ; '.'
000000000000600c         db  0xb8 ; '.'
000000000000600d         db  0xd4 ; '.'
000000000000600e         db  0xff ; '.'
000000000000600f         db  0xff ; '.'
0000000000006010         db  0xb8 ; '.'
0000000000006011         db  0xd4 ; '.'
0000000000006012         db  0xff ; '.'
0000000000006013         db  0xff ; '.'
0000000000006014         db  0xb8 ; '.'
0000000000006015         db  0xd4 ; '.'
0000000000006016         db  0xff ; '.'
0000000000006017         db  0xff ; '.'
0000000000006018         db  0xb8 ; '.'
0000000000006019         db  0xd4 ; '.'
000000000000601a         db  0xff ; '.'
000000000000601b         db  0xff ; '.'
000000000000601c         db  0xb8 ; '.'
000000000000601d         db  0xd4 ; '.'
000000000000601e         db  0xff ; '.'
000000000000601f         db  0xff ; '.'
0000000000006020         db  0xb8 ; '.'
0000000000006021         db  0xd4 ; '.'
0000000000006022         db  0xff ; '.'
0000000000006023         db  0xff ; '.'
0000000000006024         db  0xb8 ; '.'
0000000000006025         db  0xd4 ; '.'
0000000000006026         db  0xff ; '.'
0000000000006027         db  0xff ; '.'
0000000000006028         db  0x90 ; '.'
0000000000006029         db  0xd6 ; '.'
000000000000602a         db  0xff ; '.'
000000000000602b         db  0xff ; '.'
000000000000602c         db  0x78 ; 'x'
000000000000602d         db  0xd6 ; '.'
000000000000602e         db  0xff ; '.'
000000000000602f         db  0xff ; '.'
0000000000006030         db  0x78 ; 'x'
0000000000006031         db  0xd6 ; '.'
0000000000006032         db  0xff ; '.'
0000000000006033         db  0xff ; '.'
0000000000006034         db  0x60 ; '`'
0000000000006035         db  0xd6 ; '.'
0000000000006036         db  0xff ; '.'
0000000000006037         db  0xff ; '.'
0000000000006038         db  0x78 ; 'x'
0000000000006039         db  0xd6 ; '.'
000000000000603a         db  0xff ; '.'
000000000000603b         db  0xff ; '.'
000000000000603c         db  0x48 ; 'H'
000000000000603d         db  0xd6 ; '.'
000000000000603e         db  0xff ; '.'
000000000000603f         db  0xff ; '.'
0000000000006040         db  0x78 ; 'x'
0000000000006041         db  0xd6 ; '.'
0000000000006042         db  0xff ; '.'
0000000000006043         db  0xff ; '.'
0000000000006044         db  0xb8 ; '.'
0000000000006045         db  0xd2 ; '.'
0000000000006046         db  0xff ; '.'
0000000000006047         db  0xff ; '.'
0000000000006048         db  0x78 ; 'x'
0000000000006049         db  0xd6 ; '.'
000000000000604a         db  0xff ; '.'
000000000000604b         db  0xff ; '.'
000000000000604c         db  0x78 ; 'x'
000000000000604d         db  0xd6 ; '.'
000000000000604e         db  0xff ; '.'
000000000000604f         db  0xff ; '.'
0000000000006050         db  0x78 ; 'x'
0000000000006051         db  0xd6 ; '.'
0000000000006052         db  0xff ; '.'
0000000000006053         db  0xff ; '.'
0000000000006054         db  0x48 ; 'H'
0000000000006055         db  0xd6 ; '.'
0000000000006056         db  0xff ; '.'
0000000000006057         db  0xff ; '.'
0000000000006058         db  0x48 ; 'H'
0000000000006059         db  0xd6 ; '.'
000000000000605a         db  0xff ; '.'
000000000000605b         db  0xff ; '.'
000000000000605c         db  0x48 ; 'H'
000000000000605d         db  0xd6 ; '.'
000000000000605e         db  0xff ; '.'
000000000000605f         db  0xff ; '.'
0000000000006060         db  0x48 ; 'H'
0000000000006061         db  0xd6 ; '.'
0000000000006062         db  0xff ; '.'
0000000000006063         db  0xff ; '.'
0000000000006064         db  0x48 ; 'H'
0000000000006065         db  0xd6 ; '.'
0000000000006066         db  0xff ; '.'
0000000000006067         db  0xff ; '.'
0000000000006068         db  0x48 ; 'H'
0000000000006069         db  0xd6 ; '.'
000000000000606a         db  0xff ; '.'
000000000000606b         db  0xff ; '.'
000000000000606c         db  0x48 ; 'H'
000000000000606d         db  0xd6 ; '.'
000000000000606e         db  0xff ; '.'
000000000000606f         db  0xff ; '.'
0000000000006070         db  0x48 ; 'H'
0000000000006071         db  0xd6 ; '.'
0000000000006072         db  0xff ; '.'
0000000000006073         db  0xff ; '.'
0000000000006074         db  0x48 ; 'H'
0000000000006075         db  0xd6 ; '.'
0000000000006076         db  0xff ; '.'
0000000000006077         db  0xff ; '.'
0000000000006078         db  0x48 ; 'H'
0000000000006079         db  0xd6 ; '.'
000000000000607a         db  0xff ; '.'
000000000000607b         db  0xff ; '.'
000000000000607c         db  0x48 ; 'H'
000000000000607d         db  0xd6 ; '.'
000000000000607e         db  0xff ; '.'
000000000000607f         db  0xff ; '.'
0000000000006080         db  0x48 ; 'H'
0000000000006081         db  0xd6 ; '.'
0000000000006082         db  0xff ; '.'
0000000000006083         db  0xff ; '.'
0000000000006084         db  0x48 ; 'H'
0000000000006085         db  0xd6 ; '.'
0000000000006086         db  0xff ; '.'
0000000000006087         db  0xff ; '.'
0000000000006088         db  0x48 ; 'H'
0000000000006089         db  0xd6 ; '.'
000000000000608a         db  0xff ; '.'
000000000000608b         db  0xff ; '.'
000000000000608c         db  0x48 ; 'H'
000000000000608d         db  0xd6 ; '.'
000000000000608e         db  0xff ; '.'
000000000000608f         db  0xff ; '.'
0000000000006090         db  0x48 ; 'H'
0000000000006091         db  0xd6 ; '.'
0000000000006092         db  0xff ; '.'
0000000000006093         db  0xff ; '.'
0000000000006094         db  0x78 ; 'x'
0000000000006095         db  0xd6 ; '.'
0000000000006096         db  0xff ; '.'
0000000000006097         db  0xff ; '.'
0000000000006098         db  0x78 ; 'x'
0000000000006099         db  0xd6 ; '.'
000000000000609a         db  0xff ; '.'
000000000000609b         db  0xff ; '.'
000000000000609c         db  0x78 ; 'x'
000000000000609d         db  0xd6 ; '.'
000000000000609e         db  0xff ; '.'
000000000000609f         db  0xff ; '.'
00000000000060a0         db  0x78 ; 'x'
00000000000060a1         db  0xd6 ; '.'
00000000000060a2         db  0xff ; '.'
00000000000060a3         db  0xff ; '.'
00000000000060a4         db  0x88 ; '.'
00000000000060a5         db  0xd2 ; '.'
00000000000060a6         db  0xff ; '.'
00000000000060a7         db  0xff ; '.'
00000000000060a8         db  0xb8 ; '.'
00000000000060a9         db  0xd4 ; '.'
00000000000060aa         db  0xff ; '.'
00000000000060ab         db  0xff ; '.'
00000000000060ac         db  0x48 ; 'H'
00000000000060ad         db  0xd6 ; '.'
00000000000060ae         db  0xff ; '.'
00000000000060af         db  0xff ; '.'
00000000000060b0         db  0x48 ; 'H'
00000000000060b1         db  0xd6 ; '.'
00000000000060b2         db  0xff ; '.'
00000000000060b3         db  0xff ; '.'
00000000000060b4         db  0x48 ; 'H'
00000000000060b5         db  0xd6 ; '.'
00000000000060b6         db  0xff ; '.'
00000000000060b7         db  0xff ; '.'
00000000000060b8         db  0x48 ; 'H'
00000000000060b9         db  0xd6 ; '.'
00000000000060ba         db  0xff ; '.'
00000000000060bb         db  0xff ; '.'
00000000000060bc         db  0x48 ; 'H'
00000000000060bd         db  0xd6 ; '.'
00000000000060be         db  0xff ; '.'
00000000000060bf         db  0xff ; '.'
00000000000060c0         db  0x48 ; 'H'
00000000000060c1         db  0xd6 ; '.'
00000000000060c2         db  0xff ; '.'
00000000000060c3         db  0xff ; '.'
00000000000060c4         db  0x48 ; 'H'
00000000000060c5         db  0xd6 ; '.'
00000000000060c6         db  0xff ; '.'
00000000000060c7         db  0xff ; '.'
00000000000060c8         db  0x48 ; 'H'
00000000000060c9         db  0xd6 ; '.'
00000000000060ca         db  0xff ; '.'
00000000000060cb         db  0xff ; '.'
00000000000060cc         db  0x48 ; 'H'
00000000000060cd         db  0xd6 ; '.'
00000000000060ce         db  0xff ; '.'
00000000000060cf         db  0xff ; '.'
00000000000060d0         db  0x48 ; 'H'
00000000000060d1         db  0xd6 ; '.'
00000000000060d2         db  0xff ; '.'
00000000000060d3         db  0xff ; '.'
00000000000060d4         db  0x48 ; 'H'
00000000000060d5         db  0xd6 ; '.'
00000000000060d6         db  0xff ; '.'
00000000000060d7         db  0xff ; '.'
00000000000060d8         db  0x48 ; 'H'
00000000000060d9         db  0xd6 ; '.'
00000000000060da         db  0xff ; '.'
00000000000060db         db  0xff ; '.'
00000000000060dc         db  0x48 ; 'H'
00000000000060dd         db  0xd6 ; '.'
00000000000060de         db  0xff ; '.'
00000000000060df         db  0xff ; '.'
00000000000060e0         db  0x48 ; 'H'
00000000000060e1         db  0xd6 ; '.'
00000000000060e2         db  0xff ; '.'
00000000000060e3         db  0xff ; '.'
00000000000060e4         db  0x48 ; 'H'
00000000000060e5         db  0xd6 ; '.'
00000000000060e6         db  0xff ; '.'
00000000000060e7         db  0xff ; '.'
00000000000060e8         db  0x48 ; 'H'
00000000000060e9         db  0xd6 ; '.'
00000000000060ea         db  0xff ; '.'
00000000000060eb         db  0xff ; '.'
00000000000060ec         db  0x48 ; 'H'
00000000000060ed         db  0xd6 ; '.'
00000000000060ee         db  0xff ; '.'
00000000000060ef         db  0xff ; '.'
00000000000060f0         db  0x48 ; 'H'
00000000000060f1         db  0xd6 ; '.'
00000000000060f2         db  0xff ; '.'
00000000000060f3         db  0xff ; '.'
00000000000060f4         db  0x48 ; 'H'
00000000000060f5         db  0xd6 ; '.'
00000000000060f6         db  0xff ; '.'
00000000000060f7         db  0xff ; '.'
00000000000060f8         db  0x48 ; 'H'
00000000000060f9         db  0xd6 ; '.'
00000000000060fa         db  0xff ; '.'
00000000000060fb         db  0xff ; '.'
00000000000060fc         db  0x48 ; 'H'
00000000000060fd         db  0xd6 ; '.'
00000000000060fe         db  0xff ; '.'
00000000000060ff         db  0xff ; '.'
0000000000006100         db  0x48 ; 'H'
0000000000006101         db  0xd6 ; '.'
0000000000006102         db  0xff ; '.'
0000000000006103         db  0xff ; '.'
0000000000006104         db  0x48 ; 'H'
0000000000006105         db  0xd6 ; '.'
0000000000006106         db  0xff ; '.'
0000000000006107         db  0xff ; '.'
0000000000006108         db  0x48 ; 'H'
0000000000006109         db  0xd6 ; '.'
000000000000610a         db  0xff ; '.'
000000000000610b         db  0xff ; '.'
000000000000610c         db  0x48 ; 'H'
000000000000610d         db  0xd6 ; '.'
000000000000610e         db  0xff ; '.'
000000000000610f         db  0xff ; '.'
0000000000006110         db  0x48 ; 'H'
0000000000006111         db  0xd6 ; '.'
0000000000006112         db  0xff ; '.'
0000000000006113         db  0xff ; '.'
0000000000006114         db  0x78 ; 'x'
0000000000006115         db  0xd6 ; '.'
0000000000006116         db  0xff ; '.'
0000000000006117         db  0xff ; '.'
0000000000006118         db  0x48 ; 'H'
0000000000006119         db  0xd5 ; '.'
000000000000611a         db  0xff ; '.'
000000000000611b         db  0xff ; '.'
000000000000611c         db  0x48 ; 'H'
000000000000611d         db  0xd6 ; '.'
000000000000611e         db  0xff ; '.'
000000000000611f         db  0xff ; '.'
0000000000006120         db  0x78 ; 'x'
0000000000006121         db  0xd6 ; '.'
0000000000006122         db  0xff ; '.'
0000000000006123         db  0xff ; '.'
0000000000006124         db  0x48 ; 'H'
0000000000006125         db  0xd6 ; '.'
0000000000006126         db  0xff ; '.'
0000000000006127         db  0xff ; '.'
0000000000006128         db  0x78 ; 'x'
0000000000006129         db  0xd6 ; '.'
000000000000612a         db  0xff ; '.'
000000000000612b         db  0xff ; '.'
000000000000612c         db  0x48 ; 'H'
000000000000612d         db  0xd6 ; '.'
000000000000612e         db  0xff ; '.'
000000000000612f         db  0xff ; '.'
0000000000006130         db  0x48 ; 'H'
0000000000006131         db  0xd6 ; '.'
0000000000006132         db  0xff ; '.'
0000000000006133         db  0xff ; '.'
0000000000006134         db  0x48 ; 'H'
0000000000006135         db  0xd6 ; '.'
0000000000006136         db  0xff ; '.'
0000000000006137         db  0xff ; '.'
0000000000006138         db  0x48 ; 'H'
0000000000006139         db  0xd6 ; '.'
000000000000613a         db  0xff ; '.'
000000000000613b         db  0xff ; '.'
000000000000613c         db  0x48 ; 'H'
000000000000613d         db  0xd6 ; '.'
000000000000613e         db  0xff ; '.'
000000000000613f         db  0xff ; '.'
0000000000006140         db  0x48 ; 'H'
0000000000006141         db  0xd6 ; '.'
0000000000006142         db  0xff ; '.'
0000000000006143         db  0xff ; '.'
0000000000006144         db  0x48 ; 'H'
0000000000006145         db  0xd6 ; '.'
0000000000006146         db  0xff ; '.'
0000000000006147         db  0xff ; '.'
0000000000006148         db  0x48 ; 'H'
0000000000006149         db  0xd6 ; '.'
000000000000614a         db  0xff ; '.'
000000000000614b         db  0xff ; '.'
000000000000614c         db  0x48 ; 'H'
000000000000614d         db  0xd6 ; '.'
000000000000614e         db  0xff ; '.'
000000000000614f         db  0xff ; '.'
0000000000006150         db  0x48 ; 'H'
0000000000006151         db  0xd6 ; '.'
0000000000006152         db  0xff ; '.'
0000000000006153         db  0xff ; '.'
0000000000006154         db  0x48 ; 'H'
0000000000006155         db  0xd6 ; '.'
0000000000006156         db  0xff ; '.'
0000000000006157         db  0xff ; '.'
0000000000006158         db  0x48 ; 'H'
0000000000006159         db  0xd6 ; '.'
000000000000615a         db  0xff ; '.'
000000000000615b         db  0xff ; '.'
000000000000615c         db  0x48 ; 'H'
000000000000615d         db  0xd6 ; '.'
000000000000615e         db  0xff ; '.'
000000000000615f         db  0xff ; '.'
0000000000006160         db  0x48 ; 'H'
0000000000006161         db  0xd6 ; '.'
0000000000006162         db  0xff ; '.'
0000000000006163         db  0xff ; '.'
0000000000006164         db  0x48 ; 'H'
0000000000006165         db  0xd6 ; '.'
0000000000006166         db  0xff ; '.'
0000000000006167         db  0xff ; '.'
0000000000006168         db  0x48 ; 'H'
0000000000006169         db  0xd6 ; '.'
000000000000616a         db  0xff ; '.'
000000000000616b         db  0xff ; '.'
000000000000616c         db  0x48 ; 'H'
000000000000616d         db  0xd6 ; '.'
000000000000616e         db  0xff ; '.'
000000000000616f         db  0xff ; '.'
0000000000006170         db  0x48 ; 'H'
0000000000006171         db  0xd6 ; '.'
0000000000006172         db  0xff ; '.'
0000000000006173         db  0xff ; '.'
0000000000006174         db  0x48 ; 'H'
0000000000006175         db  0xd6 ; '.'
0000000000006176         db  0xff ; '.'
0000000000006177         db  0xff ; '.'
0000000000006178         db  0x48 ; 'H'
0000000000006179         db  0xd6 ; '.'
000000000000617a         db  0xff ; '.'
000000000000617b         db  0xff ; '.'
000000000000617c         db  0x48 ; 'H'
000000000000617d         db  0xd6 ; '.'
000000000000617e         db  0xff ; '.'
000000000000617f         db  0xff ; '.'
0000000000006180         db  0x48 ; 'H'
0000000000006181         db  0xd6 ; '.'
0000000000006182         db  0xff ; '.'
0000000000006183         db  0xff ; '.'
0000000000006184         db  0x48 ; 'H'
0000000000006185         db  0xd6 ; '.'
0000000000006186         db  0xff ; '.'
0000000000006187         db  0xff ; '.'
0000000000006188         db  0x48 ; 'H'
0000000000006189         db  0xd6 ; '.'
000000000000618a         db  0xff ; '.'
000000000000618b         db  0xff ; '.'
000000000000618c         db  0x48 ; 'H'
000000000000618d         db  0xd6 ; '.'
000000000000618e         db  0xff ; '.'
000000000000618f         db  0xff ; '.'
0000000000006190         db  0x48 ; 'H'
0000000000006191         db  0xd6 ; '.'
0000000000006192         db  0xff ; '.'
0000000000006193         db  0xff ; '.'
0000000000006194         db  0xb8 ; '.'
0000000000006195         db  0xd1 ; '.'
0000000000006196         db  0xff ; '.'
0000000000006197         db  0xff ; '.'
0000000000006198         db  0x78 ; 'x'
0000000000006199         db  0xd6 ; '.'
000000000000619a         db  0xff ; '.'
000000000000619b         db  0xff ; '.'
000000000000619c         db  0xb8 ; '.'
000000000000619d         db  0xd1 ; '.'
000000000000619e         db  0xff ; '.'
000000000000619f         db  0xff ; '.'
00000000000061a0         db  0x60 ; '`'
00000000000061a1         db  0xd6 ; '.'
00000000000061a2         db  0xff ; '.'
00000000000061a3         db  0xff ; '.'
00000000000061a4         db  0x00 ; '.'
00000000000061a5         db  0x00 ; '.'
00000000000061a6         db  0x00 ; '.'
00000000000061a7         db  0x00 ; '.'
00000000000061a8         db  0x00 ; '.'
00000000000061a9         db  0x00 ; '.'
00000000000061aa         db  0x00 ; '.'
00000000000061ab         db  0x00 ; '.'
00000000000061ac         db  0x00 ; '.'
00000000000061ad         db  0x00 ; '.'
00000000000061ae         db  0x00 ; '.'
00000000000061af         db  0x00 ; '.'
00000000000061b0         db  0x00 ; '.'
00000000000061b1         db  0x00 ; '.'
00000000000061b2         db  0x00 ; '.'
00000000000061b3         db  0x00 ; '.'
00000000000061b4         db  0x00 ; '.'
00000000000061b5         db  0x00 ; '.'
00000000000061b6         db  0x00 ; '.'
00000000000061b7         db  0x00 ; '.'
00000000000061b8         db  0x00 ; '.'
00000000000061b9         db  0x00 ; '.'
00000000000061ba         db  0x00 ; '.'
00000000000061bb         db  0x00 ; '.'
00000000000061bc         db  0x00 ; '.'
00000000000061bd         db  0x00 ; '.'
00000000000061be         db  0x00 ; '.'
00000000000061bf         db  0x00 ; '.'
                     quoting_style_vals:
00000000000061c0         db  0x00 ; '.'
00000000000061c1         db  0x00 ; '.'
00000000000061c2         db  0x00 ; '.'
00000000000061c3         db  0x00 ; '.'
00000000000061c4         db  0x01 ; '.'
00000000000061c5         db  0x00 ; '.'
00000000000061c6         db  0x00 ; '.'
00000000000061c7         db  0x00 ; '.'
00000000000061c8         db  0x02 ; '.'
00000000000061c9         db  0x00 ; '.'
00000000000061ca         db  0x00 ; '.'
00000000000061cb         db  0x00 ; '.'
00000000000061cc         db  0x03 ; '.'
00000000000061cd         db  0x00 ; '.'
00000000000061ce         db  0x00 ; '.'
00000000000061cf         db  0x00 ; '.'
00000000000061d0         db  0x04 ; '.'
00000000000061d1         db  0x00 ; '.'
00000000000061d2         db  0x00 ; '.'
00000000000061d3         db  0x00 ; '.'
00000000000061d4         db  0x05 ; '.'
00000000000061d5         db  0x00 ; '.'
00000000000061d6         db  0x00 ; '.'
00000000000061d7         db  0x00 ; '.'
00000000000061d8         db  0x06 ; '.'
00000000000061d9         db  0x00 ; '.'
00000000000061da         db  0x00 ; '.'
00000000000061db         db  0x00 ; '.'
00000000000061dc         db  0x07 ; '.'
00000000000061dd         db  0x00 ; '.'
00000000000061de         db  0x00 ; '.'
00000000000061df         db  0x00 ; '.'
00000000000061e0         db  0x08 ; '.'
00000000000061e1         db  0x00 ; '.'
00000000000061e2         db  0x00 ; '.'
00000000000061e3         db  0x00 ; '.'
00000000000061e4         db  0x09 ; '.'
00000000000061e5         db  0x00 ; '.'
00000000000061e6         db  0x00 ; '.'
00000000000061e7         db  0x00 ; '.'
                     aSSSn:
00000000000061e8         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
00000000000061f4         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
00000000000061fb         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
00000000000061fc         db  0x43 ; 'C'
00000000000061fd         db  0x29 ; ')'
00000000000061fe         db  0x00 ; '.'
                     aWrittenBySn:
00000000000061ff         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
000000000000620f         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
0000000000006226         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
0000000000006242         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
0000000000006257         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
000000000000626d         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
0000000000006281         align      8
                     aNlicenseGplv3G:
0000000000006288         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
0000000000006354         align      8
                     aWrittenBySSSna:
0000000000006358         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_6378:        // aWrittenBySSSns
0000000000006378         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
000000000000639c         align      32
                     aWrittenBySSSns_63a0:        // aWrittenBySSSns
00000000000063a0         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_63c8:        // aWrittenBySSSns
00000000000063c8         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
00000000000063f4         align      8
                     aWrittenBySSSns_63f8:        // aWrittenBySSSns
00000000000063f8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
0000000000006428         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
000000000000645c         align      32
                     aWrittenBySSSns_6460:        // aWrittenBySSSns
0000000000006460         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
000000000000649c         align      32
                     aGeneralHelpUsi:
00000000000064a0         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
00000000000064e1         align      8
                     switch_table_64e8:        // switch_table
00000000000064e8         dd         version_etc_arn.loc_4c36-switch_table_64e8, version_etc_arn.loc_4cc8-switch_table_64e8, version_etc_arn.loc_4d08-switch_table_64e8, version_etc_arn.loc_4d50-switch_table_64e8 ; switch table used at 0x4bb4 containing 10 entries, DATA XREF=version_etc_arn+150
00000000000064f8         dd         version_etc_arn.loc_4da0-switch_table_64e8, version_etc_arn.loc_4df8-switch_table_64e8, version_etc_arn.loc_4e28-switch_table_64e8, version_etc_arn.loc_4e90-switch_table_64e8
0000000000006508         dd         version_etc_arn.loc_4bc0-switch_table_64e8, version_etc_arn.loc_4c70-switch_table_64e8
0000000000006510         align      32
                     version_etc_copyright:
0000000000006520         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
000000000000654f         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
0000000000006560         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
0000000000006561         db  0x00 ; '.'
                     aPosix:
0000000000006562         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aAscii:
0000000000006568         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
000000000000656e         db  0x00 ; '.'
000000000000656f         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0x6570; 0x67f4[ (644 bytes)
        ; File offset : [25968; 26612[ (644 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000006570         db  0x01 ; '.'
0000000000006571         db  0x1b ; '.'
0000000000006572         db  0x03 ; '.'
0000000000006573         db  0x3b ; ';'
0000000000006574         db  0x84 ; '.'
0000000000006575         db  0x02 ; '.'
0000000000006576         db  0x00 ; '.'
0000000000006577         db  0x00 ; '.'
0000000000006578         db  0x4f ; 'O'
0000000000006579         db  0x00 ; '.'
000000000000657a         db  0x00 ; '.'
000000000000657b         db  0x00 ; '.'
000000000000657c         db  0x80 ; '.'
000000000000657d         db  0xad ; '.'
000000000000657e         db  0xff ; '.'
000000000000657f         db  0xff ; '.'
0000000000006580         db  0xd0 ; '.'
0000000000006581         db  0x02 ; '.'
0000000000006582         db  0x00 ; '.'
0000000000006583         db  0x00 ; '.'
0000000000006584         db  0x60 ; '`'
0000000000006585         db  0xb0 ; '.'
0000000000006586         db  0xff ; '.'
0000000000006587         db  0xff ; '.'
0000000000006588         db  0xf8 ; '.'
0000000000006589         db  0x02 ; '.'
000000000000658a         db  0x00 ; '.'
000000000000658b         db  0x00 ; '.'
000000000000658c         db  0x70 ; 'p'
000000000000658d         db  0xb0 ; '.'
000000000000658e         db  0xff ; '.'
000000000000658f         db  0xff ; '.'
0000000000006590         db  0xdc ; '.'
0000000000006591         db  0x03 ; '.'
0000000000006592         db  0x00 ; '.'
0000000000006593         db  0x00 ; '.'
0000000000006594         db  0x20 ; ' '
0000000000006595         db  0xbb ; '.'
0000000000006596         db  0xff ; '.'
0000000000006597         db  0xff ; '.'
0000000000006598         db  0xa0 ; '.'
0000000000006599         db  0x02 ; '.'
000000000000659a         db  0x00 ; '.'
000000000000659b         db  0x00 ; '.'
000000000000659c         db  0x30 ; '0'
000000000000659d         db  0xbc ; '.'
000000000000659e         db  0xff ; '.'
000000000000659f         db  0xff ; '.'
00000000000065a0         db  0x10 ; '.'
00000000000065a1         db  0x03 ; '.'
00000000000065a2         db  0x00 ; '.'
00000000000065a3         db  0x00 ; '.'
00000000000065a4         db  0xa0 ; '.'
00000000000065a5         db  0xbc ; '.'
00000000000065a6         db  0xff ; '.'
00000000000065a7         db  0xff ; '.'
00000000000065a8         db  0x38 ; '8'
00000000000065a9         db  0x03 ; '.'
00000000000065aa         db  0x00 ; '.'
00000000000065ab         db  0x00 ; '.'
00000000000065ac         db  0xf0 ; '.'
00000000000065ad         db  0xbc ; '.'
00000000000065ae         db  0xff ; '.'
00000000000065af         db  0xff ; '.'
00000000000065b0         db  0x5c ; '\'
00000000000065b1         db  0x03 ; '.'
00000000000065b2         db  0x00 ; '.'
00000000000065b3         db  0x00 ; '.'
00000000000065b4         db  0x40 ; '@'
00000000000065b5         db  0xbd ; '.'
00000000000065b6         db  0xff ; '.'
00000000000065b7         db  0xff ; '.'
00000000000065b8         db  0x80 ; '.'
00000000000065b9         db  0x03 ; '.'
00000000000065ba         db  0x00 ; '.'
00000000000065bb         db  0x00 ; '.'
00000000000065bc         db  0xa0 ; '.'
00000000000065bd         db  0xbd ; '.'
00000000000065be         db  0xff ; '.'
00000000000065bf         db  0xff ; '.'
00000000000065c0         db  0xb0 ; '.'
00000000000065c1         db  0x03 ; '.'
00000000000065c2         db  0x00 ; '.'
00000000000065c3         db  0x00 ; '.'
00000000000065c4         db  0xf0 ; '.'
00000000000065c5         db  0xc0 ; '.'
00000000000065c6         db  0xff ; '.'
00000000000065c7         db  0xff ; '.'
00000000000065c8         db  0x28 ; '('
00000000000065c9         db  0x04 ; '.'
00000000000065ca         db  0x00 ; '.'
00000000000065cb         db  0x00 ; '.'
00000000000065cc         db  0x00 ; '.'
00000000000065cd         db  0xc1 ; '.'
00000000000065ce         db  0xff ; '.'
00000000000065cf         db  0xff ; '.'
00000000000065d0         db  0x3c ; '<'
00000000000065d1         db  0x04 ; '.'
00000000000065d2         db  0x00 ; '.'
00000000000065d3         db  0x00 ; '.'
00000000000065d4         db  0x10 ; '.'
00000000000065d5         db  0xc1 ; '.'
00000000000065d6         db  0xff ; '.'
00000000000065d7         db  0xff ; '.'
00000000000065d8         db  0x50 ; 'P'
00000000000065d9         db  0x04 ; '.'
00000000000065da         db  0x00 ; '.'
00000000000065db         db  0x00 ; '.'
00000000000065dc         db  0xc0 ; '.'
00000000000065dd         db  0xc1 ; '.'
00000000000065de         db  0xff ; '.'
00000000000065df         db  0xff ; '.'
00000000000065e0         db  0x80 ; '.'
00000000000065e1         db  0x04 ; '.'
00000000000065e2         db  0x00 ; '.'
00000000000065e3         db  0x00 ; '.'
00000000000065e4         db  0x30 ; '0'
00000000000065e5         db  0xc3 ; '.'
00000000000065e6         db  0xff ; '.'
00000000000065e7         db  0xff ; '.'
00000000000065e8         db  0xd8 ; '.'
00000000000065e9         db  0x04 ; '.'
00000000000065ea         db  0x00 ; '.'
00000000000065eb         db  0x00 ; '.'
00000000000065ec         db  0xa0 ; '.'
00000000000065ed         db  0xc4 ; '.'
00000000000065ee         db  0xff ; '.'
00000000000065ef         db  0xff ; '.'
00000000000065f0         db  0x30 ; '0'
00000000000065f1         db  0x05 ; '.'
00000000000065f2         db  0x00 ; '.'
00000000000065f3         db  0x00 ; '.'
00000000000065f4         db  0xf0 ; '.'
00000000000065f5         db  0xc5 ; '.'
00000000000065f6         db  0xff ; '.'
00000000000065f7         db  0xff ; '.'
00000000000065f8         db  0x90 ; '.'
00000000000065f9         db  0x05 ; '.'
00000000000065fa         db  0x00 ; '.'
00000000000065fb         db  0x00 ; '.'
00000000000065fc         db  0x30 ; '0'
00000000000065fd         db  0xc7 ; '.'
00000000000065fe         db  0xff ; '.'
00000000000065ff         db  0xff ; '.'
0000000000006600         db  0xcc ; '.'
0000000000006601         db  0x05 ; '.'
0000000000006602         db  0x00 ; '.'
0000000000006603         db  0x00 ; '.'
0000000000006604         db  0x70 ; 'p'
0000000000006605         db  0xc8 ; '.'
0000000000006606         db  0xff ; '.'
0000000000006607         db  0xff ; '.'
0000000000006608         db  0x18 ; '.'
0000000000006609         db  0x06 ; '.'
000000000000660a         db  0x00 ; '.'
000000000000660b         db  0x00 ; '.'
000000000000660c         db  0x10 ; '.'
000000000000660d         db  0xc9 ; '.'
000000000000660e         db  0xff ; '.'
000000000000660f         db  0xff ; '.'
0000000000006610         db  0x38 ; '8'
0000000000006611         db  0x06 ; '.'
0000000000006612         db  0x00 ; '.'
0000000000006613         db  0x00 ; '.'
0000000000006614         db  0x00 ; '.'
0000000000006615         db  0xca ; '.'
0000000000006616         db  0xff ; '.'
0000000000006617         db  0xff ; '.'
0000000000006618         db  0x7c ; '|'
0000000000006619         db  0x06 ; '.'
000000000000661a         db  0x00 ; '.'
000000000000661b         db  0x00 ; '.'
000000000000661c         db  0x40 ; '@'
000000000000661d         db  0xdc ; '.'
000000000000661e         db  0xff ; '.'
000000000000661f         db  0xff ; '.'
0000000000006620         db  0xf4 ; '.'
0000000000006621         db  0x06 ; '.'
0000000000006622         db  0x00 ; '.'
0000000000006623         db  0x00 ; '.'
0000000000006624         db  0xf0 ; '.'
0000000000006625         db  0xdd ; '.'
0000000000006626         db  0xff ; '.'
0000000000006627         db  0xff ; '.'
0000000000006628         db  0x60 ; '`'
0000000000006629         db  0x07 ; '.'
000000000000662a         db  0x00 ; '.'
000000000000662b         db  0x00 ; '.'
000000000000662c         db  0x30 ; '0'
000000000000662d         db  0xde ; '.'
000000000000662e         db  0xff ; '.'
000000000000662f         db  0xff ; '.'
0000000000006630         db  0x8c ; '.'
0000000000006631         db  0x07 ; '.'
0000000000006632         db  0x00 ; '.'
0000000000006633         db  0x00 ; '.'
0000000000006634         db  0x50 ; 'P'
0000000000006635         db  0xde ; '.'
0000000000006636         db  0xff ; '.'
0000000000006637         db  0xff ; '.'
0000000000006638         db  0xa0 ; '.'
0000000000006639         db  0x07 ; '.'
000000000000663a         db  0x00 ; '.'
000000000000663b         db  0x00 ; '.'
000000000000663c         db  0x70 ; 'p'
000000000000663d         db  0xde ; '.'
000000000000663e         db  0xff ; '.'
000000000000663f         db  0xff ; '.'
0000000000006640         db  0xb4 ; '.'
0000000000006641         db  0x07 ; '.'
0000000000006642         db  0x00 ; '.'
0000000000006643         db  0x00 ; '.'
0000000000006644         db  0xb0 ; '.'
0000000000006645         db  0xde ; '.'
0000000000006646         db  0xff ; '.'
0000000000006647         db  0xff ; '.'
0000000000006648         db  0xc8 ; '.'
0000000000006649         db  0x07 ; '.'
000000000000664a         db  0x00 ; '.'
000000000000664b         db  0x00 ; '.'
000000000000664c         db  0xd0 ; '.'
000000000000664d         db  0xde ; '.'
000000000000664e         db  0xff ; '.'
000000000000664f         db  0xff ; '.'
0000000000006650         db  0xdc ; '.'
0000000000006651         db  0x07 ; '.'
0000000000006652         db  0x00 ; '.'
0000000000006653         db  0x00 ; '.'
0000000000006654         db  0x00 ; '.'
0000000000006655         db  0xdf ; '.'
0000000000006656         db  0xff ; '.'
0000000000006657         db  0xff ; '.'
0000000000006658         db  0xf0 ; '.'
0000000000006659         db  0x07 ; '.'
000000000000665a         db  0x00 ; '.'
000000000000665b         db  0x00 ; '.'
000000000000665c         db  0x80 ; '.'
000000000000665d         db  0xdf ; '.'
000000000000665e         db  0xff ; '.'
000000000000665f         db  0xff ; '.'
0000000000006660         db  0x44 ; 'D'
0000000000006661         db  0x08 ; '.'
0000000000006662         db  0x00 ; '.'
0000000000006663         db  0x00 ; '.'
0000000000006664         db  0x70 ; 'p'
0000000000006665         db  0xe0 ; '.'
0000000000006666         db  0xff ; '.'
0000000000006667         db  0xff ; '.'
0000000000006668         db  0xb0 ; '.'
0000000000006669         db  0x08 ; '.'
000000000000666a         db  0x00 ; '.'
000000000000666b         db  0x00 ; '.'
000000000000666c         db  0x80 ; '.'
000000000000666d         db  0xe0 ; '.'
000000000000666e         db  0xff ; '.'
000000000000666f         db  0xff ; '.'
0000000000006670         db  0xc4 ; '.'
0000000000006671         db  0x08 ; '.'
0000000000006672         db  0x00 ; '.'
0000000000006673         db  0x00 ; '.'
0000000000006674         db  0x20 ; ' '
0000000000006675         db  0xe1 ; '.'
0000000000006676         db  0xff ; '.'
0000000000006677         db  0xff ; '.'
0000000000006678         db  0xf0 ; '.'
0000000000006679         db  0x08 ; '.'
000000000000667a         db  0x00 ; '.'
000000000000667b         db  0x00 ; '.'
000000000000667c         db  0x40 ; '@'
000000000000667d         db  0xe1 ; '.'
000000000000667e         db  0xff ; '.'
000000000000667f         db  0xff ; '.'
0000000000006680         db  0x04 ; '.'
0000000000006681         db  0x09 ; '.'
0000000000006682         db  0x00 ; '.'
0000000000006683         db  0x00 ; '.'
0000000000006684         db  0x50 ; 'P'
0000000000006685         db  0xe1 ; '.'
0000000000006686         db  0xff ; '.'
0000000000006687         db  0xff ; '.'
0000000000006688         db  0x18 ; '.'
0000000000006689         db  0x09 ; '.'
000000000000668a         db  0x00 ; '.'
000000000000668b         db  0x00 ; '.'
000000000000668c         db  0x70 ; 'p'
000000000000668d         db  0xe1 ; '.'
000000000000668e         db  0xff ; '.'
000000000000668f         db  0xff ; '.'
0000000000006690         db  0x2c ; ','
0000000000006691         db  0x09 ; '.'
0000000000006692         db  0x00 ; '.'
0000000000006693         db  0x00 ; '.'
0000000000006694         db  0x90 ; '.'
0000000000006695         db  0xe1 ; '.'
0000000000006696         db  0xff ; '.'
0000000000006697         db  0xff ; '.'
0000000000006698         db  0x40 ; '@'
0000000000006699         db  0x09 ; '.'
000000000000669a         db  0x00 ; '.'
000000000000669b         db  0x00 ; '.'
000000000000669c         db  0x20 ; ' '
000000000000669d         db  0xe2 ; '.'
000000000000669e         db  0xff ; '.'
000000000000669f         db  0xff ; '.'
00000000000066a0         db  0x5c ; '\'
00000000000066a1         db  0x09 ; '.'
00000000000066a2         db  0x00 ; '.'
00000000000066a3         db  0x00 ; '.'
00000000000066a4         db  0xb0 ; '.'
00000000000066a5         db  0xe2 ; '.'
00000000000066a6         db  0xff ; '.'
00000000000066a7         db  0xff ; '.'
00000000000066a8         db  0x78 ; 'x'
00000000000066a9         db  0x09 ; '.'
00000000000066aa         db  0x00 ; '.'
00000000000066ab         db  0x00 ; '.'
00000000000066ac         db  0xc0 ; '.'
00000000000066ad         db  0xe2 ; '.'
00000000000066ae         db  0xff ; '.'
00000000000066af         db  0xff ; '.'
00000000000066b0         db  0x8c ; '.'
00000000000066b1         db  0x09 ; '.'
00000000000066b2         db  0x00 ; '.'
00000000000066b3         db  0x00 ; '.'
00000000000066b4         db  0xd0 ; '.'
00000000000066b5         db  0xe2 ; '.'
00000000000066b6         db  0xff ; '.'
00000000000066b7         db  0xff ; '.'
00000000000066b8         db  0xa0 ; '.'
00000000000066b9         db  0x09 ; '.'
00000000000066ba         db  0x00 ; '.'
00000000000066bb         db  0x00 ; '.'
00000000000066bc         db  0x70 ; 'p'
00000000000066bd         db  0xe3 ; '.'
00000000000066be         db  0xff ; '.'
00000000000066bf         db  0xff ; '.'
00000000000066c0         db  0xbc ; '.'
00000000000066c1         db  0x09 ; '.'
00000000000066c2         db  0x00 ; '.'
00000000000066c3         db  0x00 ; '.'
00000000000066c4         db  0x80 ; '.'
00000000000066c5         db  0xe3 ; '.'
00000000000066c6         db  0xff ; '.'
00000000000066c7         db  0xff ; '.'
00000000000066c8         db  0xd0 ; '.'
00000000000066c9         db  0x09 ; '.'
00000000000066ca         db  0x00 ; '.'
00000000000066cb         db  0x00 ; '.'
00000000000066cc         db  0xa0 ; '.'
00000000000066cd         db  0xe3 ; '.'
00000000000066ce         db  0xff ; '.'
00000000000066cf         db  0xff ; '.'
00000000000066d0         db  0xe4 ; '.'
00000000000066d1         db  0x09 ; '.'
00000000000066d2         db  0x00 ; '.'
00000000000066d3         db  0x00 ; '.'
00000000000066d4         db  0xb0 ; '.'
00000000000066d5         db  0xe3 ; '.'
00000000000066d6         db  0xff ; '.'
00000000000066d7         db  0xff ; '.'
00000000000066d8         db  0xf8 ; '.'
00000000000066d9         db  0x09 ; '.'
00000000000066da         db  0x00 ; '.'
00000000000066db         db  0x00 ; '.'
00000000000066dc         db  0x40 ; '@'
00000000000066dd         db  0xe4 ; '.'
00000000000066de         db  0xff ; '.'
00000000000066df         db  0xff ; '.'
00000000000066e0         db  0x14 ; '.'
00000000000066e1         db  0x0a ; '.'
00000000000066e2         db  0x00 ; '.'
00000000000066e3         db  0x00 ; '.'
00000000000066e4         db  0xe0 ; '.'
00000000000066e5         db  0xe4 ; '.'
00000000000066e6         db  0xff ; '.'
00000000000066e7         db  0xff ; '.'
00000000000066e8         db  0x30 ; '0'
00000000000066e9         db  0x0a ; '.'
00000000000066ea         db  0x00 ; '.'
00000000000066eb         db  0x00 ; '.'
00000000000066ec         db  0xf0 ; '.'
00000000000066ed         db  0xe4 ; '.'
00000000000066ee         db  0xff ; '.'
00000000000066ef         db  0xff ; '.'
00000000000066f0         db  0x44 ; 'D'
00000000000066f1         db  0x0a ; '.'
00000000000066f2         db  0x00 ; '.'
00000000000066f3         db  0x00 ; '.'
00000000000066f4         db  0x10 ; '.'
00000000000066f5         db  0xe5 ; '.'
00000000000066f6         db  0xff ; '.'
00000000000066f7         db  0xff ; '.'
00000000000066f8         db  0x58 ; 'X'
00000000000066f9         db  0x0a ; '.'
00000000000066fa         db  0x00 ; '.'
00000000000066fb         db  0x00 ; '.'
00000000000066fc         db  0x30 ; '0'
00000000000066fd         db  0xe5 ; '.'
00000000000066fe         db  0xff ; '.'
00000000000066ff         db  0xff ; '.'
0000000000006700         db  0x6c ; 'l'
0000000000006701         db  0x0a ; '.'
0000000000006702         db  0x00 ; '.'
0000000000006703         db  0x00 ; '.'
0000000000006704         db  0x40 ; '@'
0000000000006705         db  0xe5 ; '.'
0000000000006706         db  0xff ; '.'
0000000000006707         db  0xff ; '.'
0000000000006708         db  0x80 ; '.'
0000000000006709         db  0x0a ; '.'
000000000000670a         db  0x00 ; '.'
000000000000670b         db  0x00 ; '.'
000000000000670c         db  0x60 ; '`'
000000000000670d         db  0xe5 ; '.'
000000000000670e         db  0xff ; '.'
000000000000670f         db  0xff ; '.'
0000000000006710         db  0x94 ; '.'
0000000000006711         db  0x0a ; '.'
0000000000006712         db  0x00 ; '.'
0000000000006713         db  0x00 ; '.'
0000000000006714         db  0x80 ; '.'
0000000000006715         db  0xe5 ; '.'
0000000000006716         db  0xff ; '.'
0000000000006717         db  0xff ; '.'
0000000000006718         db  0xa8 ; '.'
0000000000006719         db  0x0a ; '.'
000000000000671a         db  0x00 ; '.'
000000000000671b         db  0x00 ; '.'
000000000000671c         db  0xa0 ; '.'
000000000000671d         db  0xe5 ; '.'
000000000000671e         db  0xff ; '.'
000000000000671f         db  0xff ; '.'
0000000000006720         db  0xc0 ; '.'
0000000000006721         db  0x0a ; '.'
0000000000006722         db  0x00 ; '.'
0000000000006723         db  0x00 ; '.'
0000000000006724         db  0xc0 ; '.'
0000000000006725         db  0xe9 ; '.'
0000000000006726         db  0xff ; '.'
0000000000006727         db  0xff ; '.'
0000000000006728         db  0xd4 ; '.'
0000000000006729         db  0x0b ; '.'
000000000000672a         db  0x00 ; '.'
000000000000672b         db  0x00 ; '.'
000000000000672c         db  0xe0 ; '.'
000000000000672d         db  0xe9 ; '.'
000000000000672e         db  0xff ; '.'
000000000000672f         db  0xff ; '.'
0000000000006730         db  0xe8 ; '.'
0000000000006731         db  0x0b ; '.'
0000000000006732         db  0x00 ; '.'
0000000000006733         db  0x00 ; '.'
0000000000006734         db  0x60 ; '`'
0000000000006735         db  0xea ; '.'
0000000000006736         db  0xff ; '.'
0000000000006737         db  0xff ; '.'
0000000000006738         db  0x04 ; '.'
0000000000006739         db  0x0c ; '.'
000000000000673a         db  0x00 ; '.'
000000000000673b         db  0x00 ; '.'
000000000000673c         db  0x40 ; '@'
000000000000673d         db  0xeb ; '.'
000000000000673e         db  0xff ; '.'
000000000000673f         db  0xff ; '.'
0000000000006740         db  0x30 ; '0'
0000000000006741         db  0x0c ; '.'
0000000000006742         db  0x00 ; '.'
0000000000006743         db  0x00 ; '.'
0000000000006744         db  0xc0 ; '.'
0000000000006745         db  0xeb ; '.'
0000000000006746         db  0xff ; '.'
0000000000006747         db  0xff ; '.'
0000000000006748         db  0x50 ; 'P'
0000000000006749         db  0x0c ; '.'
000000000000674a         db  0x00 ; '.'
000000000000674b         db  0x00 ; '.'
000000000000674c         db  0xe0 ; '.'
000000000000674d         db  0xeb ; '.'
000000000000674e         db  0xff ; '.'
000000000000674f         db  0xff ; '.'
0000000000006750         db  0x6c ; 'l'
0000000000006751         db  0x0c ; '.'
0000000000006752         db  0x00 ; '.'
0000000000006753         db  0x00 ; '.'
0000000000006754         db  0x10 ; '.'
0000000000006755         db  0xec ; '.'
0000000000006756         db  0xff ; '.'
0000000000006757         db  0xff ; '.'
0000000000006758         db  0x80 ; '.'
0000000000006759         db  0x0c ; '.'
000000000000675a         db  0x00 ; '.'
000000000000675b         db  0x00 ; '.'
000000000000675c         db  0x20 ; ' '
000000000000675d         db  0xec ; '.'
000000000000675e         db  0xff ; '.'
000000000000675f         db  0xff ; '.'
0000000000006760         db  0x94 ; '.'
0000000000006761         db  0x0c ; '.'
0000000000006762         db  0x00 ; '.'
0000000000006763         db  0x00 ; '.'
0000000000006764         db  0x60 ; '`'
0000000000006765         db  0xec ; '.'
0000000000006766         db  0xff ; '.'
0000000000006767         db  0xff ; '.'
0000000000006768         db  0xb8 ; '.'
0000000000006769         db  0x0c ; '.'
000000000000676a         db  0x00 ; '.'
000000000000676b         db  0x00 ; '.'
000000000000676c         db  0x90 ; '.'
000000000000676d         db  0xec ; '.'
000000000000676e         db  0xff ; '.'
000000000000676f         db  0xff ; '.'
0000000000006770         db  0xcc ; '.'
0000000000006771         db  0x0c ; '.'
0000000000006772         db  0x00 ; '.'
0000000000006773         db  0x00 ; '.'
0000000000006774         db  0x20 ; ' '
0000000000006775         db  0xed ; '.'
0000000000006776         db  0xff ; '.'
0000000000006777         db  0xff ; '.'
0000000000006778         db  0xe4 ; '.'
0000000000006779         db  0x0c ; '.'
000000000000677a         db  0x00 ; '.'
000000000000677b         db  0x00 ; '.'
000000000000677c         db  0x70 ; 'p'
000000000000677d         db  0xed ; '.'
000000000000677e         db  0xff ; '.'
000000000000677f         db  0xff ; '.'
0000000000006780         db  0xfc ; '.'
0000000000006781         db  0x0c ; '.'
0000000000006782         db  0x00 ; '.'
0000000000006783         db  0x00 ; '.'
0000000000006784         db  0x90 ; '.'
0000000000006785         db  0xed ; '.'
0000000000006786         db  0xff ; '.'
0000000000006787         db  0xff ; '.'
0000000000006788         db  0x18 ; '.'
0000000000006789         db  0x0d ; '.'
000000000000678a         db  0x00 ; '.'
000000000000678b         db  0x00 ; '.'
000000000000678c         db  0xc0 ; '.'
000000000000678d         db  0xed ; '.'
000000000000678e         db  0xff ; '.'
000000000000678f         db  0xff ; '.'
0000000000006790         db  0x34 ; '4'
0000000000006791         db  0x0d ; '.'
0000000000006792         db  0x00 ; '.'
0000000000006793         db  0x00 ; '.'
0000000000006794         db  0xf0 ; '.'
0000000000006795         db  0xed ; '.'
0000000000006796         db  0xff ; '.'
0000000000006797         db  0xff ; '.'
0000000000006798         db  0x5c ; '\'
0000000000006799         db  0x0d ; '.'
000000000000679a         db  0x00 ; '.'
000000000000679b         db  0x00 ; '.'
000000000000679c         db  0x10 ; '.'
000000000000679d         db  0xee ; '.'
000000000000679e         db  0xff ; '.'
000000000000679f         db  0xff ; '.'
00000000000067a0         db  0x78 ; 'x'
00000000000067a1         db  0x0d ; '.'
00000000000067a2         db  0x00 ; '.'
00000000000067a3         db  0x00 ; '.'
00000000000067a4         db  0x50 ; 'P'
00000000000067a5         db  0xee ; '.'
00000000000067a6         db  0xff ; '.'
00000000000067a7         db  0xff ; '.'
00000000000067a8         db  0x90 ; '.'
00000000000067a9         db  0x0d ; '.'
00000000000067aa         db  0x00 ; '.'
00000000000067ab         db  0x00 ; '.'
00000000000067ac         db  0xe0 ; '.'
00000000000067ad         db  0xee ; '.'
00000000000067ae         db  0xff ; '.'
00000000000067af         db  0xff ; '.'
00000000000067b0         db  0xd0 ; '.'
00000000000067b1         db  0x0d ; '.'
00000000000067b2         db  0x00 ; '.'
00000000000067b3         db  0x00 ; '.'
00000000000067b4         db  0x60 ; '`'
00000000000067b5         db  0xef ; '.'
00000000000067b6         db  0xff ; '.'
00000000000067b7         db  0xff ; '.'
00000000000067b8         db  0x20 ; ' '
00000000000067b9         db  0x0e ; '.'
00000000000067ba         db  0x00 ; '.'
00000000000067bb         db  0x00 ; '.'
00000000000067bc         db  0xc0 ; '.'
00000000000067bd         db  0xef ; '.'
00000000000067be         db  0xff ; '.'
00000000000067bf         db  0xff ; '.'
00000000000067c0         db  0x40 ; '@'
00000000000067c1         db  0x0e ; '.'
00000000000067c2         db  0x00 ; '.'
00000000000067c3         db  0x00 ; '.'
00000000000067c4         db  0x00 ; '.'
00000000000067c5         db  0xf0 ; '.'
00000000000067c6         db  0xff ; '.'
00000000000067c7         db  0xff ; '.'
00000000000067c8         db  0x60 ; '`'
00000000000067c9         db  0x0e ; '.'
00000000000067ca         db  0x00 ; '.'
00000000000067cb         db  0x00 ; '.'
00000000000067cc         db  0x80 ; '.'
00000000000067cd         db  0xf0 ; '.'
00000000000067ce         db  0xff ; '.'
00000000000067cf         db  0xff ; '.'
00000000000067d0         db  0x98 ; '.'
00000000000067d1         db  0x0e ; '.'
00000000000067d2         db  0x00 ; '.'
00000000000067d3         db  0x00 ; '.'
00000000000067d4         db  0xc0 ; '.'
00000000000067d5         db  0xf0 ; '.'
00000000000067d6         db  0xff ; '.'
00000000000067d7         db  0xff ; '.'
00000000000067d8         db  0xb8 ; '.'
00000000000067d9         db  0x0e ; '.'
00000000000067da         db  0x00 ; '.'
00000000000067db         db  0x00 ; '.'
00000000000067dc         db  0x20 ; ' '
00000000000067dd         db  0xf1 ; '.'
00000000000067de         db  0xff ; '.'
00000000000067df         db  0xff ; '.'
00000000000067e0         db  0xe8 ; '.'
00000000000067e1         db  0x0e ; '.'
00000000000067e2         db  0x00 ; '.'
00000000000067e3         db  0x00 ; '.'
00000000000067e4         db  0x90 ; '.'
00000000000067e5         db  0xf1 ; '.'
00000000000067e6         db  0xff ; '.'
00000000000067e7         db  0xff ; '.'
00000000000067e8         db  0x30 ; '0'
00000000000067e9         db  0x0f ; '.'
00000000000067ea         db  0x00 ; '.'
00000000000067eb         db  0x00 ; '.'
00000000000067ec         db  0xa0 ; '.'
00000000000067ed         db  0xf1 ; '.'
00000000000067ee         db  0xff ; '.'
00000000000067ef         db  0xff ; '.'
00000000000067f0         db  0x48 ; 'H'
00000000000067f1         db  0x0f ; '.'
00000000000067f2         db  0x00 ; '.'
00000000000067f3         db  0x00 ; '.'
00000000000067f4         db  0x00 ; '.'
00000000000067f5         db  0x00 ; '.'
00000000000067f6         db  0x00 ; '.'
00000000000067f7         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x67f8; 0x74d0[ (3288 bytes)
        ; File offset : [26616; 29904[ (3288 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

00000000000067f8         dd         0x00000014                                  ; Length of the record
00000000000067fc         dd         0x00000000                                  ; CIE ID
0000000000006800         db         0x01                                        ; Version
0000000000006801         db         "zR", 0                                     ; Augmentation String
0000000000006804         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000006805         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000006806         db         0x10                                        ; Return address register
0000000000006807         db         0x01                                        ; Augmentation data length
0000000000006808         db         0x1b                                        ; FDE encoding
0000000000006809         db  0x0c ; '.'
000000000000680a         db  0x07 ; '.'
000000000000680b         db  0x08 ; '.'
000000000000680c         db  0x90 ; '.'
000000000000680d         db  0x01 ; '.'
000000000000680e         db  0x07 ; '.'
000000000000680f         db  0x10 ; '.'
0000000000006810         dd         0x00000014                                  ; Length of the record
0000000000006814         dd         0x0000001c                                  ; FDE: parent CIE at 0x67f8 (FDE encoding = 0x1B)
0000000000006818         db         0x78, 0xb8, 2 dup (0xff)                    ; begin 0x2090
000000000000681c         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x20bb)
0000000000006820         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006821         align      8
0000000000006828         dd         0x00000014                                  ; Length of the record
000000000000682c         dd         0x00000000                                  ; CIE ID
0000000000006830         db         0x01                                        ; Version
0000000000006831         db         "zR", 0                                     ; Augmentation String
0000000000006834         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000006835         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000006836         db         0x10                                        ; Return address register
0000000000006837         db         0x01                                        ; Augmentation data length
0000000000006838         db         0x1b                                        ; FDE encoding
0000000000006839         db  0x0c ; '.'
000000000000683a         db  0x07 ; '.'
000000000000683b         db  0x08 ; '.'
000000000000683c         db  0x90 ; '.'
000000000000683d         db  0x01 ; '.'
000000000000683e         db  0x00 ; '.'
000000000000683f         db  0x00 ; '.'
0000000000006840         dd         0x00000024                                  ; Length of the record
0000000000006844         dd         0x0000001c                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006848         db         0xa8, 0xaa, 2 dup (0xff)                    ; begin 0x12f0
000000000000684c         db         0xe0, 0x02, 2 dup (0x00)                    ; length 0x2e0 (end at 0x15d0)
0000000000006850         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006851         db  0x0e ; '.'
0000000000006852         db  0x10 ; '.'
0000000000006853         db  0x46 ; 'F'
0000000000006854         db  0x0e ; '.'
0000000000006855         db  0x18 ; '.'
0000000000006856         db  0x4a ; 'J'
0000000000006857         db  0x0f ; '.'
0000000000006858         db  0x0b ; '.'
0000000000006859         db  0x77 ; 'w'
000000000000685a         db  0x08 ; '.'
000000000000685b         db  0x80 ; '.'
000000000000685c         db  0x00 ; '.'
000000000000685d         db  0x3f ; '?'
000000000000685e         db  0x1a ; '.'
000000000000685f         db  0x3b ; ';'
0000000000006860         db  0x2a ; '*'
0000000000006861         db  0x33 ; '3'
0000000000006862         db  0x24 ; '$'
0000000000006863         db  0x22 ; '"'
0000000000006864         db  0x00 ; '.'
0000000000006865         db  0x00 ; '.'
0000000000006866         db  0x00 ; '.'
0000000000006867         db  0x00 ; '.'
0000000000006868         dd         0x00000014                                  ; Length of the record
000000000000686c         dd         0x00000044                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006870         db         0x60, 0xad, 2 dup (0xff)                    ; begin 0x15d0
0000000000006874         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x15d8)
0000000000006878         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006879         align      128
0000000000006880         dd         0x00000024                                  ; Length of the record
0000000000006884         dd         0x0000005c                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006888         db         0x18, 0xb9, 2 dup (0xff)                    ; begin 0x21a0
000000000000688c         db         0x6b, 3 dup (0x00)                          ; length 0x6b (end at 0x220b)
0000000000006890         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006891         db  0x41 ; 'A'
0000000000006892         db  0x0e ; '.'
0000000000006893         db  0x10 ; '.'
0000000000006894         db  0x86 ; '.'
0000000000006895         db  0x02 ; '.'
0000000000006896         db  0x41 ; 'A'
0000000000006897         db  0x0e ; '.'
0000000000006898         db  0x18 ; '.'
0000000000006899         db  0x83 ; '.'
000000000000689a         db  0x03 ; '.'
000000000000689b         db  0x46 ; 'F'
000000000000689c         db  0x0e ; '.'
000000000000689d         db  0x20 ; ' '
000000000000689e         db  0x02 ; '.'
000000000000689f         db  0x60 ; '`'
00000000000068a0         db  0x0e ; '.'
00000000000068a1         db  0x18 ; '.'
00000000000068a2         db  0x41 ; 'A'
00000000000068a3         db  0x0e ; '.'
00000000000068a4         db  0x10 ; '.'
00000000000068a5         db  0x41 ; 'A'
00000000000068a6         db  0x0e ; '.'
00000000000068a7         db  0x08 ; '.'
00000000000068a8         dd         0x00000020                                  ; Length of the record
00000000000068ac         dd         0x00000084                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
00000000000068b0         db         0x60, 0xb9, 2 dup (0xff)                    ; begin 0x2210
00000000000068b4         db         0x4f, 3 dup (0x00)                          ; length 0x4f (end at 0x225f)
00000000000068b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000068b9         db  0x41 ; 'A'
00000000000068ba         db  0x0e ; '.'
00000000000068bb         db  0x10 ; '.'
00000000000068bc         db  0x83 ; '.'
00000000000068bd         db  0x02 ; '.'
00000000000068be         db  0x50 ; 'P'
00000000000068bf         db  0x0e ; '.'
00000000000068c0         db  0x40 ; '@'
00000000000068c1         db  0x77 ; 'w'
00000000000068c2         db  0x0a ; '.'
00000000000068c3         db  0x0e ; '.'
00000000000068c4         db  0x10 ; '.'
00000000000068c5         db  0x41 ; 'A'
00000000000068c6         db  0x0e ; '.'
00000000000068c7         db  0x08 ; '.'
00000000000068c8         db  0x41 ; 'A'
00000000000068c9         db  0x0b ; '.'
00000000000068ca         db  0x00 ; '.'
00000000000068cb         db  0x00 ; '.'
00000000000068cc         dd         0x00000020                                  ; Length of the record
00000000000068d0         dd         0x000000a8                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
00000000000068d4         db         0x8c, 0xb9, 2 dup (0xff)                    ; begin 0x2260
00000000000068d8         db         0x4f, 3 dup (0x00)                          ; length 0x4f (end at 0x22af)
00000000000068dc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000068dd         db  0x41 ; 'A'
00000000000068de         db  0x0e ; '.'
00000000000068df         db  0x10 ; '.'
00000000000068e0         db  0x83 ; '.'
00000000000068e1         db  0x02 ; '.'
00000000000068e2         db  0x50 ; 'P'
00000000000068e3         db  0x0e ; '.'
00000000000068e4         db  0x40 ; '@'
00000000000068e5         db  0x77 ; 'w'
00000000000068e6         db  0x0a ; '.'
00000000000068e7         db  0x0e ; '.'
00000000000068e8         db  0x10 ; '.'
00000000000068e9         db  0x41 ; 'A'
00000000000068ea         db  0x0e ; '.'
00000000000068eb         db  0x08 ; '.'
00000000000068ec         db  0x41 ; 'A'
00000000000068ed         db  0x0b ; '.'
00000000000068ee         db  0x00 ; '.'
00000000000068ef         db  0x00 ; '.'
00000000000068f0         dd         0x0000002c                                  ; Length of the record
00000000000068f4         dd         0x000000cc                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
00000000000068f8         db         0xb8, 0xb9, 2 dup (0xff)                    ; begin 0x22b0
00000000000068fc         db         0x59, 3 dup (0x00)                          ; length 0x59 (end at 0x2309)
0000000000006900         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006901         db  0x41 ; 'A'
0000000000006902         db  0x0e ; '.'
0000000000006903         db  0x10 ; '.'
0000000000006904         db  0x83 ; '.'
0000000000006905         db  0x02 ; '.'
0000000000006906         db  0x50 ; 'P'
0000000000006907         db  0x0e ; '.'
0000000000006908         db  0x50 ; 'P'
0000000000006909         db  0x57 ; 'W'
000000000000690a         db  0x0e ; '.'
000000000000690b         db  0x58 ; 'X'
000000000000690c         db  0x44 ; 'D'
000000000000690d         db  0x0e ; '.'
000000000000690e         db  0x60 ; '`'
000000000000690f         db  0x51 ; 'Q'
0000000000006910         db  0x0e ; '.'
0000000000006911         db  0x58 ; 'X'
0000000000006912         db  0x41 ; 'A'
0000000000006913         db  0x0e ; '.'
0000000000006914         db  0x50 ; 'P'
0000000000006915         db  0x54 ; 'T'
0000000000006916         db  0x0a ; '.'
0000000000006917         db  0x0e ; '.'
0000000000006918         db  0x10 ; '.'
0000000000006919         db  0x41 ; 'A'
000000000000691a         db  0x0e ; '.'
000000000000691b         db  0x08 ; '.'
000000000000691c         db  0x41 ; 'A'
000000000000691d         db  0x0b ; '.'
000000000000691e         db  0x00 ; '.'
000000000000691f         db  0x00 ; '.'
0000000000006920         dd         0x00000028                                  ; Length of the record
0000000000006924         dd         0x000000fc                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006928         db         0xe8, 0xb9, 2 dup (0xff)                    ; begin 0x2310
000000000000692c         db         0x42, 0x03, 2 dup (0x00)                    ; length 0x342 (end at 0x2652)
0000000000006930         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006931         db  0x42 ; 'B'
0000000000006932         db  0x0e ; '.'
0000000000006933         db  0x10 ; '.'
0000000000006934         db  0x8d ; '.'
0000000000006935         db  0x02 ; '.'
0000000000006936         db  0x42 ; 'B'
0000000000006937         db  0x0e ; '.'
0000000000006938         db  0x18 ; '.'
0000000000006939         db  0x8c ; '.'
000000000000693a         db  0x03 ; '.'
000000000000693b         db  0x46 ; 'F'
000000000000693c         db  0x0e ; '.'
000000000000693d         db  0x20 ; ' '
000000000000693e         db  0x86 ; '.'
000000000000693f         db  0x04 ; '.'
0000000000006940         db  0x41 ; 'A'
0000000000006941         db  0x0e ; '.'
0000000000006942         db  0x28 ; '('
0000000000006943         db  0x83 ; '.'
0000000000006944         db  0x05 ; '.'
0000000000006945         db  0x49 ; 'I'
0000000000006946         db  0x0e ; '.'
0000000000006947         db  0xb0 ; '.'
0000000000006948         db  0x01 ; '.'
0000000000006949         db  0x00 ; '.'
000000000000694a         db  0x00 ; '.'
000000000000694b         db  0x00 ; '.'
000000000000694c         dd         0x00000048                                  ; Length of the record
0000000000006950         dd         0x00000128                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006954         db         0x8c, 0xac, 2 dup (0xff)                    ; begin 0x15e0
0000000000006958         db         0xa9, 0x0a, 2 dup (0x00)                    ; length 0xaa9 (end at 0x2089)
000000000000695c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000695d         db  0x41 ; 'A'
000000000000695e         db  0x0e ; '.'
000000000000695f         db  0x10 ; '.'
0000000000006960         db  0x86 ; '.'
0000000000006961         db  0x02 ; '.'
0000000000006962         db  0x41 ; 'A'
0000000000006963         db  0x0e ; '.'
0000000000006964         db  0x18 ; '.'
0000000000006965         db  0x83 ; '.'
0000000000006966         db  0x03 ; '.'
0000000000006967         db  0x49 ; 'I'
0000000000006968         db  0x0e ; '.'
0000000000006969         db  0x40 ; '@'
000000000000696a         db  0x02 ; '.'
000000000000696b         db  0x5d ; ']'
000000000000696c         db  0x0e ; '.'
000000000000696d         db  0x48 ; 'H'
000000000000696e         db  0x58 ; 'X'
000000000000696f         db  0x0e ; '.'
0000000000006970         db  0x50 ; 'P'
0000000000006971         db  0x03 ; '.'
0000000000006972         db  0xe0 ; '.'
0000000000006973         db  0x09 ; '.'
0000000000006974         db  0x0e ; '.'
0000000000006975         db  0x58 ; 'X'
0000000000006976         db  0x41 ; 'A'
0000000000006977         db  0x0e ; '.'
0000000000006978         db  0x60 ; '`'
0000000000006979         db  0x50 ; 'P'
000000000000697a         db  0x0e ; '.'
000000000000697b         db  0x40 ; '@'
000000000000697c         db  0x51 ; 'Q'
000000000000697d         db  0x0e ; '.'
000000000000697e         db  0x48 ; 'H'
000000000000697f         db  0x42 ; 'B'
0000000000006980         db  0x0e ; '.'
0000000000006981         db  0x50 ; 'P'
0000000000006982         db  0x46 ; 'F'
0000000000006983         db  0x0e ; '.'
0000000000006984         db  0x48 ; 'H'
0000000000006985         db  0x41 ; 'A'
0000000000006986         db  0x0e ; '.'
0000000000006987         db  0x40 ; '@'
0000000000006988         db  0x54 ; 'T'
0000000000006989         db  0x0a ; '.'
000000000000698a         db  0x0e ; '.'
000000000000698b         db  0x18 ; '.'
000000000000698c         db  0x43 ; 'C'
000000000000698d         db  0x0e ; '.'
000000000000698e         db  0x10 ; '.'
000000000000698f         db  0x41 ; 'A'
0000000000006990         db  0x0e ; '.'
0000000000006991         db  0x08 ; '.'
0000000000006992         db  0x41 ; 'A'
0000000000006993         db  0x0b ; '.'
0000000000006994         db  0x00 ; '.'
0000000000006995         db  0x00 ; '.'
0000000000006996         db  0x00 ; '.'
0000000000006997         db  0x00 ; '.'
0000000000006998         dd         0x00000010                                  ; Length of the record
000000000000699c         dd         0x00000174                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
00000000000069a0         db         0xc0, 0xbc, 2 dup (0xff)                    ; begin 0x2660
00000000000069a4         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2668)
00000000000069a8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000069a9         align      4
00000000000069ac         dd         0x00000010                                  ; Length of the record
00000000000069b0         dd         0x00000188                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
00000000000069b4         db         2 dup (0xbc), 2 dup (0xff)                  ; begin 0x2670
00000000000069b8         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2678)
00000000000069bc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000069bd         align      64
00000000000069c0         dd         0x0000002c                                  ; Length of the record
00000000000069c4         dd         0x0000019c                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
00000000000069c8         db         0xb8, 0xbc, 2 dup (0xff)                    ; begin 0x2680
00000000000069cc         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x2724)
00000000000069d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000069d1         db  0x41 ; 'A'
00000000000069d2         db  0x0e ; '.'
00000000000069d3         db  0x10 ; '.'
00000000000069d4         db  0x86 ; '.'
00000000000069d5         db  0x02 ; '.'
00000000000069d6         db  0x41 ; 'A'
00000000000069d7         db  0x0e ; '.'
00000000000069d8         db  0x18 ; '.'
00000000000069d9         db  0x83 ; '.'
00000000000069da         db  0x03 ; '.'
00000000000069db         db  0x44 ; 'D'
00000000000069dc         db  0x0e ; '.'
00000000000069dd         db  0x20 ; ' '
00000000000069de         db  0x7a ; 'z'
00000000000069df         db  0x0a ; '.'
00000000000069e0         db  0x0e ; '.'
00000000000069e1         db  0x18 ; '.'
00000000000069e2         db  0x41 ; 'A'
00000000000069e3         db  0x0e ; '.'
00000000000069e4         db  0x10 ; '.'
00000000000069e5         db  0x41 ; 'A'
00000000000069e6         db  0x0e ; '.'
00000000000069e7         db  0x08 ; '.'
00000000000069e8         db  0x41 ; 'A'
00000000000069e9         db  0x0b ; '.'
00000000000069ea         db  0x00 ; '.'
00000000000069eb         db  0x00 ; '.'
00000000000069ec         db  0x00 ; '.'
00000000000069ed         db  0x00 ; '.'
00000000000069ee         db  0x00 ; '.'
00000000000069ef         db  0x00 ; '.'
00000000000069f0         dd         0x00000054                                  ; Length of the record
00000000000069f4         dd         0x000001cc                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
00000000000069f8         db         0x38, 0xbd, 2 dup (0xff)                    ; begin 0x2730
00000000000069fc         db         0x66, 0x01, 2 dup (0x00)                    ; length 0x166 (end at 0x2896)
0000000000006a00         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006a01         db  0x42 ; 'B'
0000000000006a02         db  0x0e ; '.'
0000000000006a03         db  0x10 ; '.'
0000000000006a04         db  0x8f ; '.'
0000000000006a05         db  0x02 ; '.'
0000000000006a06         db  0x42 ; 'B'
0000000000006a07         db  0x0e ; '.'
0000000000006a08         db  0x18 ; '.'
0000000000006a09         db  0x8e ; '.'
0000000000006a0a         db  0x03 ; '.'
0000000000006a0b         db  0x45 ; 'E'
0000000000006a0c         db  0x0e ; '.'
0000000000006a0d         db  0x20 ; ' '
0000000000006a0e         db  0x8d ; '.'
0000000000006a0f         db  0x04 ; '.'
0000000000006a10         db  0x42 ; 'B'
0000000000006a11         db  0x0e ; '.'
0000000000006a12         db  0x28 ; '('
0000000000006a13         db  0x8c ; '.'
0000000000006a14         db  0x05 ; '.'
0000000000006a15         db  0x44 ; 'D'
0000000000006a16         db  0x0e ; '.'
0000000000006a17         db  0x30 ; '0'
0000000000006a18         db  0x86 ; '.'
0000000000006a19         db  0x06 ; '.'
0000000000006a1a         db  0x41 ; 'A'
0000000000006a1b         db  0x0e ; '.'
0000000000006a1c         db  0x38 ; '8'
0000000000006a1d         db  0x83 ; '.'
0000000000006a1e         db  0x07 ; '.'
0000000000006a1f         db  0x4b ; 'K'
0000000000006a20         db  0x0e ; '.'
0000000000006a21         db  0x70 ; 'p'
0000000000006a22         db  0x02 ; '.'
0000000000006a23         db  0xbc ; '.'
0000000000006a24         db  0x0e ; '.'
0000000000006a25         db  0x78 ; 'x'
0000000000006a26         db  0x49 ; 'I'
0000000000006a27         db  0x0e ; '.'
0000000000006a28         db  0x80 ; '.'
0000000000006a29         db  0x01 ; '.'
0000000000006a2a         db  0x5f ; '_'
0000000000006a2b         db  0x0e ; '.'
0000000000006a2c         db  0x78 ; 'x'
0000000000006a2d         db  0x41 ; 'A'
0000000000006a2e         db  0x0e ; '.'
0000000000006a2f         db  0x70 ; 'p'
0000000000006a30         db  0x7e ; '~'
0000000000006a31         db  0x0a ; '.'
0000000000006a32         db  0x0e ; '.'
0000000000006a33         db  0x38 ; '8'
0000000000006a34         db  0x41 ; 'A'
0000000000006a35         db  0x0e ; '.'
0000000000006a36         db  0x30 ; '0'
0000000000006a37         db  0x41 ; 'A'
0000000000006a38         db  0x0e ; '.'
0000000000006a39         db  0x28 ; '('
0000000000006a3a         db  0x42 ; 'B'
0000000000006a3b         db  0x0e ; '.'
0000000000006a3c         db  0x20 ; ' '
0000000000006a3d         db  0x42 ; 'B'
0000000000006a3e         db  0x0e ; '.'
0000000000006a3f         db  0x18 ; '.'
0000000000006a40         db  0x42 ; 'B'
0000000000006a41         db  0x0e ; '.'
0000000000006a42         db  0x10 ; '.'
0000000000006a43         db  0x42 ; 'B'
0000000000006a44         db  0x0e ; '.'
0000000000006a45         db  0x08 ; '.'
0000000000006a46         db  0x48 ; 'H'
0000000000006a47         db  0x0b ; '.'
0000000000006a48         dd         0x00000054                                  ; Length of the record
0000000000006a4c         dd         0x00000224                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006a50         db         0x50, 0xbe, 2 dup (0xff)                    ; begin 0x28a0
0000000000006a54         db         0x6c, 0x01, 2 dup (0x00)                    ; length 0x16c (end at 0x2a0c)
0000000000006a58         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006a59         db  0x42 ; 'B'
0000000000006a5a         db  0x0e ; '.'
0000000000006a5b         db  0x10 ; '.'
0000000000006a5c         db  0x8f ; '.'
0000000000006a5d         db  0x02 ; '.'
0000000000006a5e         db  0x46 ; 'F'
0000000000006a5f         db  0x0e ; '.'
0000000000006a60         db  0x18 ; '.'
0000000000006a61         db  0x8e ; '.'
0000000000006a62         db  0x03 ; '.'
0000000000006a63         db  0x42 ; 'B'
0000000000006a64         db  0x0e ; '.'
0000000000006a65         db  0x20 ; ' '
0000000000006a66         db  0x8d ; '.'
0000000000006a67         db  0x04 ; '.'
0000000000006a68         db  0x45 ; 'E'
0000000000006a69         db  0x0e ; '.'
0000000000006a6a         db  0x28 ; '('
0000000000006a6b         db  0x8c ; '.'
0000000000006a6c         db  0x05 ; '.'
0000000000006a6d         db  0x41 ; 'A'
0000000000006a6e         db  0x0e ; '.'
0000000000006a6f         db  0x30 ; '0'
0000000000006a70         db  0x86 ; '.'
0000000000006a71         db  0x06 ; '.'
0000000000006a72         db  0x44 ; 'D'
0000000000006a73         db  0x0e ; '.'
0000000000006a74         db  0x38 ; '8'
0000000000006a75         db  0x83 ; '.'
0000000000006a76         db  0x07 ; '.'
0000000000006a77         db  0x4e ; 'N'
0000000000006a78         db  0x0e ; '.'
0000000000006a79         db  0x70 ; 'p'
0000000000006a7a         db  0x02 ; '.'
0000000000006a7b         db  0xbd ; '.'
0000000000006a7c         db  0x0e ; '.'
0000000000006a7d         db  0x78 ; 'x'
0000000000006a7e         db  0x49 ; 'I'
0000000000006a7f         db  0x0e ; '.'
0000000000006a80         db  0x80 ; '.'
0000000000006a81         db  0x01 ; '.'
0000000000006a82         db  0x5f ; '_'
0000000000006a83         db  0x0e ; '.'
0000000000006a84         db  0x78 ; 'x'
0000000000006a85         db  0x41 ; 'A'
0000000000006a86         db  0x0e ; '.'
0000000000006a87         db  0x70 ; 'p'
0000000000006a88         db  0x7e ; '~'
0000000000006a89         db  0x0a ; '.'
0000000000006a8a         db  0x0e ; '.'
0000000000006a8b         db  0x38 ; '8'
0000000000006a8c         db  0x41 ; 'A'
0000000000006a8d         db  0x0e ; '.'
0000000000006a8e         db  0x30 ; '0'
0000000000006a8f         db  0x41 ; 'A'
0000000000006a90         db  0x0e ; '.'
0000000000006a91         db  0x28 ; '('
0000000000006a92         db  0x42 ; 'B'
0000000000006a93         db  0x0e ; '.'
0000000000006a94         db  0x20 ; ' '
0000000000006a95         db  0x42 ; 'B'
0000000000006a96         db  0x0e ; '.'
0000000000006a97         db  0x18 ; '.'
0000000000006a98         db  0x42 ; 'B'
0000000000006a99         db  0x0e ; '.'
0000000000006a9a         db  0x10 ; '.'
0000000000006a9b         db  0x42 ; 'B'
0000000000006a9c         db  0x0e ; '.'
0000000000006a9d         db  0x08 ; '.'
0000000000006a9e         db  0x48 ; 'H'
0000000000006a9f         db  0x0b ; '.'
0000000000006aa0         dd         0x0000005c                                  ; Length of the record
0000000000006aa4         dd         0x0000027c                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006aa8         db         0x68, 0xbf, 2 dup (0xff)                    ; begin 0x2a10
0000000000006aac         db         0x4c, 0x01, 2 dup (0x00)                    ; length 0x14c (end at 0x2b5c)
0000000000006ab0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ab1         db  0x42 ; 'B'
0000000000006ab2         db  0x0e ; '.'
0000000000006ab3         db  0x10 ; '.'
0000000000006ab4         db  0x8f ; '.'
0000000000006ab5         db  0x02 ; '.'
0000000000006ab6         db  0x42 ; 'B'
0000000000006ab7         db  0x0e ; '.'
0000000000006ab8         db  0x18 ; '.'
0000000000006ab9         db  0x8e ; '.'
0000000000006aba         db  0x03 ; '.'
0000000000006abb         db  0x44 ; 'D'
0000000000006abc         db  0x0e ; '.'
0000000000006abd         db  0x20 ; ' '
0000000000006abe         db  0x8d ; '.'
0000000000006abf         db  0x04 ; '.'
0000000000006ac0         db  0x42 ; 'B'
0000000000006ac1         db  0x0e ; '.'
0000000000006ac2         db  0x28 ; '('
0000000000006ac3         db  0x8c ; '.'
0000000000006ac4         db  0x05 ; '.'
0000000000006ac5         db  0x44 ; 'D'
0000000000006ac6         db  0x0e ; '.'
0000000000006ac7         db  0x30 ; '0'
0000000000006ac8         db  0x86 ; '.'
0000000000006ac9         db  0x06 ; '.'
0000000000006aca         db  0x41 ; 'A'
0000000000006acb         db  0x0e ; '.'
0000000000006acc         db  0x38 ; '8'
0000000000006acd         db  0x83 ; '.'
0000000000006ace         db  0x07 ; '.'
0000000000006acf         db  0x4a ; 'J'
0000000000006ad0         db  0x0e ; '.'
0000000000006ad1         db  0x70 ; 'p'
0000000000006ad2         db  0x02 ; '.'
0000000000006ad3         db  0xae ; '.'
0000000000006ad4         db  0x0e ; '.'
0000000000006ad5         db  0x78 ; 'x'
0000000000006ad6         db  0x44 ; 'D'
0000000000006ad7         db  0x0e ; '.'
0000000000006ad8         db  0x80 ; '.'
0000000000006ad9         db  0x01 ; '.'
0000000000006ada         db  0x4f ; 'O'
0000000000006adb         db  0x0e ; '.'
0000000000006adc         db  0x88 ; '.'
0000000000006add         db  0x01 ; '.'
0000000000006ade         db  0x49 ; 'I'
0000000000006adf         db  0x0e ; '.'
0000000000006ae0         db  0x90 ; '.'
0000000000006ae1         db  0x01 ; '.'
0000000000006ae2         db  0x4c ; 'L'
0000000000006ae3         db  0x0e ; '.'
0000000000006ae4         db  0x70 ; 'p'
0000000000006ae5         db  0x02 ; '.'
0000000000006ae6         db  0x45 ; 'E'
0000000000006ae7         db  0x0a ; '.'
0000000000006ae8         db  0x0e ; '.'
0000000000006ae9         db  0x38 ; '8'
0000000000006aea         db  0x41 ; 'A'
0000000000006aeb         db  0x0e ; '.'
0000000000006aec         db  0x30 ; '0'
0000000000006aed         db  0x41 ; 'A'
0000000000006aee         db  0x0e ; '.'
0000000000006aef         db  0x28 ; '('
0000000000006af0         db  0x42 ; 'B'
0000000000006af1         db  0x0e ; '.'
0000000000006af2         db  0x20 ; ' '
0000000000006af3         db  0x42 ; 'B'
0000000000006af4         db  0x0e ; '.'
0000000000006af5         db  0x18 ; '.'
0000000000006af6         db  0x42 ; 'B'
0000000000006af7         db  0x0e ; '.'
0000000000006af8         db  0x10 ; '.'
0000000000006af9         db  0x42 ; 'B'
0000000000006afa         db  0x0e ; '.'
0000000000006afb         db  0x08 ; '.'
0000000000006afc         db  0x42 ; 'B'
0000000000006afd         db  0x0b ; '.'
0000000000006afe         db  0x00 ; '.'
0000000000006aff         db  0x00 ; '.'
0000000000006b00         dd         0x00000038                                  ; Length of the record
0000000000006b04         dd         0x000002dc                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006b08         db         0x58, 0xc0, 2 dup (0xff)                    ; begin 0x2b60
0000000000006b0c         db         0x3f, 0x01, 2 dup (0x00)                    ; length 0x13f (end at 0x2c9f)
0000000000006b10         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b11         db  0x42 ; 'B'
0000000000006b12         db  0x0e ; '.'
0000000000006b13         db  0x10 ; '.'
0000000000006b14         db  0x8d ; '.'
0000000000006b15         db  0x02 ; '.'
0000000000006b16         db  0x42 ; 'B'
0000000000006b17         db  0x0e ; '.'
0000000000006b18         db  0x18 ; '.'
0000000000006b19         db  0x8c ; '.'
0000000000006b1a         db  0x03 ; '.'
0000000000006b1b         db  0x44 ; 'D'
0000000000006b1c         db  0x0e ; '.'
0000000000006b1d         db  0x20 ; ' '
0000000000006b1e         db  0x86 ; '.'
0000000000006b1f         db  0x04 ; '.'
0000000000006b20         db  0x41 ; 'A'
0000000000006b21         db  0x0e ; '.'
0000000000006b22         db  0x28 ; '('
0000000000006b23         db  0x83 ; '.'
0000000000006b24         db  0x05 ; '.'
0000000000006b25         db  0x4d ; 'M'
0000000000006b26         db  0x0e ; '.'
0000000000006b27         db  0x90 ; '.'
0000000000006b28         db  0x02 ; '.'
0000000000006b29         db  0x02 ; '.'
0000000000006b2a         db  0x8e ; '.'
0000000000006b2b         db  0x0a ; '.'
0000000000006b2c         db  0x0e ; '.'
0000000000006b2d         db  0x28 ; '('
0000000000006b2e         db  0x41 ; 'A'
0000000000006b2f         db  0x0e ; '.'
0000000000006b30         db  0x20 ; ' '
0000000000006b31         db  0x41 ; 'A'
0000000000006b32         db  0x0e ; '.'
0000000000006b33         db  0x18 ; '.'
0000000000006b34         db  0x42 ; 'B'
0000000000006b35         db  0x0e ; '.'
0000000000006b36         db  0x10 ; '.'
0000000000006b37         db  0x42 ; 'B'
0000000000006b38         db  0x0e ; '.'
0000000000006b39         db  0x08 ; '.'
0000000000006b3a         db  0x46 ; 'F'
0000000000006b3b         db  0x0b ; '.'
0000000000006b3c         dd         0x00000048                                  ; Length of the record
0000000000006b40         dd         0x00000318                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006b44         db         0x5c, 0xc1, 2 dup (0xff)                    ; begin 0x2ca0
0000000000006b48         db         0x3b, 0x01, 2 dup (0x00)                    ; length 0x13b (end at 0x2ddb)
0000000000006b4c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b4d         db  0x42 ; 'B'
0000000000006b4e         db  0x0e ; '.'
0000000000006b4f         db  0x10 ; '.'
0000000000006b50         db  0x8e ; '.'
0000000000006b51         db  0x02 ; '.'
0000000000006b52         db  0x42 ; 'B'
0000000000006b53         db  0x0e ; '.'
0000000000006b54         db  0x18 ; '.'
0000000000006b55         db  0x8d ; '.'
0000000000006b56         db  0x03 ; '.'
0000000000006b57         db  0x45 ; 'E'
0000000000006b58         db  0x0e ; '.'
0000000000006b59         db  0x20 ; ' '
0000000000006b5a         db  0x8c ; '.'
0000000000006b5b         db  0x04 ; '.'
0000000000006b5c         db  0x41 ; 'A'
0000000000006b5d         db  0x0e ; '.'
0000000000006b5e         db  0x28 ; '('
0000000000006b5f         db  0x86 ; '.'
0000000000006b60         db  0x05 ; '.'
0000000000006b61         db  0x44 ; 'D'
0000000000006b62         db  0x0e ; '.'
0000000000006b63         db  0x30 ; '0'
0000000000006b64         db  0x83 ; '.'
0000000000006b65         db  0x06 ; '.'
0000000000006b66         db  0x4a ; 'J'
0000000000006b67         db  0x0e ; '.'
0000000000006b68         db  0x80 ; '.'
0000000000006b69         db  0x02 ; '.'
0000000000006b6a         db  0x03 ; '.'
0000000000006b6b         db  0x0d ; '.'
0000000000006b6c         db  0x01 ; '.'
0000000000006b6d         db  0x0a ; '.'
0000000000006b6e         db  0x0e ; '.'
0000000000006b6f         db  0x30 ; '0'
0000000000006b70         db  0x41 ; 'A'
0000000000006b71         db  0x0e ; '.'
0000000000006b72         db  0x28 ; '('
0000000000006b73         db  0x41 ; 'A'
0000000000006b74         db  0x0e ; '.'
0000000000006b75         db  0x20 ; ' '
0000000000006b76         db  0x42 ; 'B'
0000000000006b77         db  0x0e ; '.'
0000000000006b78         db  0x18 ; '.'
0000000000006b79         db  0x42 ; 'B'
0000000000006b7a         db  0x0e ; '.'
0000000000006b7b         db  0x10 ; '.'
0000000000006b7c         db  0x42 ; 'B'
0000000000006b7d         db  0x0e ; '.'
0000000000006b7e         db  0x08 ; '.'
0000000000006b7f         db  0x43 ; 'C'
0000000000006b80         db  0x0b ; '.'
0000000000006b81         db  0x00 ; '.'
0000000000006b82         db  0x00 ; '.'
0000000000006b83         db  0x00 ; '.'
0000000000006b84         db  0x00 ; '.'
0000000000006b85         db  0x00 ; '.'
0000000000006b86         db  0x00 ; '.'
0000000000006b87         db  0x00 ; '.'
0000000000006b88         dd         0x0000001c                                  ; Length of the record
0000000000006b8c         dd         0x00000364                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006b90         db         0x50, 0xc2, 2 dup (0xff)                    ; begin 0x2de0
0000000000006b94         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x2e7f)
0000000000006b98         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b99         db  0x44 ; 'D'
0000000000006b9a         db  0x0e ; '.'
0000000000006b9b         db  0x10 ; '.'
0000000000006b9c         db  0x83 ; '.'
0000000000006b9d         db  0x02 ; '.'
0000000000006b9e         db  0x02 ; '.'
0000000000006b9f         db  0x78 ; 'x'
0000000000006ba0         db  0x0a ; '.'
0000000000006ba1         db  0x0e ; '.'
0000000000006ba2         db  0x08 ; '.'
0000000000006ba3         db  0x41 ; 'A'
0000000000006ba4         db  0x0b ; '.'
0000000000006ba5         db  0x00 ; '.'
0000000000006ba6         db  0x00 ; '.'
0000000000006ba7         db  0x00 ; '.'
0000000000006ba8         dd         0x00000040                                  ; Length of the record
0000000000006bac         dd         0x00000384                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006bb0         db         0xd0, 0xc2, 2 dup (0xff)                    ; begin 0x2e80
0000000000006bb4         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x2f67)
0000000000006bb8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006bb9         db  0x41 ; 'A'
0000000000006bba         db  0x0e ; '.'
0000000000006bbb         db  0x10 ; '.'
0000000000006bbc         db  0x86 ; '.'
0000000000006bbd         db  0x02 ; '.'
0000000000006bbe         db  0x41 ; 'A'
0000000000006bbf         db  0x0e ; '.'
0000000000006bc0         db  0x18 ; '.'
0000000000006bc1         db  0x83 ; '.'
0000000000006bc2         db  0x03 ; '.'
0000000000006bc3         db  0x49 ; 'I'
0000000000006bc4         db  0x0e ; '.'
0000000000006bc5         db  0x20 ; ' '
0000000000006bc6         db  0x6e ; 'n'
0000000000006bc7         db  0x0a ; '.'
0000000000006bc8         db  0x0e ; '.'
0000000000006bc9         db  0x18 ; '.'
0000000000006bca         db  0x41 ; 'A'
0000000000006bcb         db  0x0e ; '.'
0000000000006bcc         db  0x10 ; '.'
0000000000006bcd         db  0x41 ; 'A'
0000000000006bce         db  0x0e ; '.'
0000000000006bcf         db  0x08 ; '.'
0000000000006bd0         db  0x45 ; 'E'
0000000000006bd1         db  0x0b ; '.'
0000000000006bd2         db  0x02 ; '.'
0000000000006bd3         db  0x4a ; 'J'
0000000000006bd4         db  0x0a ; '.'
0000000000006bd5         db  0x0e ; '.'
0000000000006bd6         db  0x18 ; '.'
0000000000006bd7         db  0x41 ; 'A'
0000000000006bd8         db  0x0e ; '.'
0000000000006bd9         db  0x10 ; '.'
0000000000006bda         db  0x41 ; 'A'
0000000000006bdb         db  0x0e ; '.'
0000000000006bdc         db  0x08 ; '.'
0000000000006bdd         db  0x44 ; 'D'
0000000000006bde         db  0x0b ; '.'
0000000000006bdf         db  0x02 ; '.'
0000000000006be0         db  0x54 ; 'T'
0000000000006be1         db  0x0e ; '.'
0000000000006be2         db  0x18 ; '.'
0000000000006be3         db  0x41 ; 'A'
0000000000006be4         db  0x0e ; '.'
0000000000006be5         db  0x10 ; '.'
0000000000006be6         db  0x41 ; 'A'
0000000000006be7         db  0x0e ; '.'
0000000000006be8         db  0x08 ; '.'
0000000000006be9         db  0x00 ; '.'
0000000000006bea         db  0x00 ; '.'
0000000000006beb         db  0x00 ; '.'
0000000000006bec         dd         0x00000074                                  ; Length of the record
0000000000006bf0         dd         0x000003c8                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006bf4         db         0x7c, 0xc3, 2 dup (0xff)                    ; begin 0x2f70
0000000000006bf8         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x41a4)
0000000000006bfc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006bfd         db  0x42 ; 'B'
0000000000006bfe         db  0x0e ; '.'
0000000000006bff         db  0x10 ; '.'
0000000000006c00         db  0x8f ; '.'
0000000000006c01         db  0x02 ; '.'
0000000000006c02         db  0x42 ; 'B'
0000000000006c03         db  0x0e ; '.'
0000000000006c04         db  0x18 ; '.'
0000000000006c05         db  0x8e ; '.'
0000000000006c06         db  0x03 ; '.'
0000000000006c07         db  0x45 ; 'E'
0000000000006c08         db  0x0e ; '.'
0000000000006c09         db  0x20 ; ' '
0000000000006c0a         db  0x8d ; '.'
0000000000006c0b         db  0x04 ; '.'
0000000000006c0c         db  0x42 ; 'B'
0000000000006c0d         db  0x0e ; '.'
0000000000006c0e         db  0x28 ; '('
0000000000006c0f         db  0x8c ; '.'
0000000000006c10         db  0x05 ; '.'
0000000000006c11         db  0x44 ; 'D'
0000000000006c12         db  0x0e ; '.'
0000000000006c13         db  0x30 ; '0'
0000000000006c14         db  0x86 ; '.'
0000000000006c15         db  0x06 ; '.'
0000000000006c16         db  0x41 ; 'A'
0000000000006c17         db  0x0e ; '.'
0000000000006c18         db  0x38 ; '8'
0000000000006c19         db  0x83 ; '.'
0000000000006c1a         db  0x07 ; '.'
0000000000006c1b         db  0x53 ; 'S'
0000000000006c1c         db  0x0e ; '.'
0000000000006c1d         db  0xf0 ; '.'
0000000000006c1e         db  0x01 ; '.'
0000000000006c1f         db  0x03 ; '.'
0000000000006c20         db  0x81 ; '.'
0000000000006c21         db  0x0b ; '.'
0000000000006c22         db  0x0e ; '.'
0000000000006c23         db  0xf8 ; '.'
0000000000006c24         db  0x01 ; '.'
0000000000006c25         db  0x4a ; 'J'
0000000000006c26         db  0x0e ; '.'
0000000000006c27         db  0x80 ; '.'
0000000000006c28         db  0x02 ; '.'
0000000000006c29         db  0x44 ; 'D'
0000000000006c2a         db  0x0e ; '.'
0000000000006c2b         db  0x88 ; '.'
0000000000006c2c         db  0x02 ; '.'
0000000000006c2d         db  0x45 ; 'E'
0000000000006c2e         db  0x0e ; '.'
0000000000006c2f         db  0x90 ; '.'
0000000000006c30         db  0x02 ; '.'
0000000000006c31         db  0x5f ; '_'
0000000000006c32         db  0x0e ; '.'
0000000000006c33         db  0xf0 ; '.'
0000000000006c34         db  0x01 ; '.'
0000000000006c35         db  0x64 ; 'd'
0000000000006c36         db  0x0a ; '.'
0000000000006c37         db  0x0e ; '.'
0000000000006c38         db  0x38 ; '8'
0000000000006c39         db  0x41 ; 'A'
0000000000006c3a         db  0x0e ; '.'
0000000000006c3b         db  0x30 ; '0'
0000000000006c3c         db  0x41 ; 'A'
0000000000006c3d         db  0x0e ; '.'
0000000000006c3e         db  0x28 ; '('
0000000000006c3f         db  0x42 ; 'B'
0000000000006c40         db  0x0e ; '.'
0000000000006c41         db  0x20 ; ' '
0000000000006c42         db  0x42 ; 'B'
0000000000006c43         db  0x0e ; '.'
0000000000006c44         db  0x18 ; '.'
0000000000006c45         db  0x42 ; 'B'
0000000000006c46         db  0x0e ; '.'
0000000000006c47         db  0x10 ; '.'
0000000000006c48         db  0x42 ; 'B'
0000000000006c49         db  0x0e ; '.'
0000000000006c4a         db  0x08 ; '.'
0000000000006c4b         db  0x44 ; 'D'
0000000000006c4c         db  0x0b ; '.'
0000000000006c4d         db  0x03 ; '.'
0000000000006c4e         db  0x99 ; '.'
0000000000006c4f         db  0x05 ; '.'
0000000000006c50         db  0x0e ; '.'
0000000000006c51         db  0xf8 ; '.'
0000000000006c52         db  0x01 ; '.'
0000000000006c53         db  0x4d ; 'M'
0000000000006c54         db  0x0e ; '.'
0000000000006c55         db  0x80 ; '.'
0000000000006c56         db  0x02 ; '.'
0000000000006c57         db  0x44 ; 'D'
0000000000006c58         db  0x0e ; '.'
0000000000006c59         db  0x88 ; '.'
0000000000006c5a         db  0x02 ; '.'
0000000000006c5b         db  0x47 ; 'G'
0000000000006c5c         db  0x0e ; '.'
0000000000006c5d         db  0x90 ; '.'
0000000000006c5e         db  0x02 ; '.'
0000000000006c5f         db  0x5b ; '['
0000000000006c60         db  0x0e ; '.'
0000000000006c61         db  0xf0 ; '.'
0000000000006c62         db  0x01 ; '.'
0000000000006c63         db  0x00 ; '.'
0000000000006c64         dd         0x00000068                                  ; Length of the record
0000000000006c68         dd         0x00000440                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006c6c         db         0x44, 0xd5, 2 dup (0xff)                    ; begin 0x41b0
0000000000006c70         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x435b)
0000000000006c74         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006c75         db  0x42 ; 'B'
0000000000006c76         db  0x0e ; '.'
0000000000006c77         db  0x10 ; '.'
0000000000006c78         db  0x8f ; '.'
0000000000006c79         db  0x02 ; '.'
0000000000006c7a         db  0x42 ; 'B'
0000000000006c7b         db  0x0e ; '.'
0000000000006c7c         db  0x18 ; '.'
0000000000006c7d         db  0x8e ; '.'
0000000000006c7e         db  0x03 ; '.'
0000000000006c7f         db  0x45 ; 'E'
0000000000006c80         db  0x0e ; '.'
0000000000006c81         db  0x20 ; ' '
0000000000006c82         db  0x8d ; '.'
0000000000006c83         db  0x04 ; '.'
0000000000006c84         db  0x42 ; 'B'
0000000000006c85         db  0x0e ; '.'
0000000000006c86         db  0x28 ; '('
0000000000006c87         db  0x8c ; '.'
0000000000006c88         db  0x05 ; '.'
0000000000006c89         db  0x44 ; 'D'
0000000000006c8a         db  0x0e ; '.'
0000000000006c8b         db  0x30 ; '0'
0000000000006c8c         db  0x86 ; '.'
0000000000006c8d         db  0x06 ; '.'
0000000000006c8e         db  0x41 ; 'A'
0000000000006c8f         db  0x0e ; '.'
0000000000006c90         db  0x38 ; '8'
0000000000006c91         db  0x83 ; '.'
0000000000006c92         db  0x07 ; '.'
0000000000006c93         db  0x47 ; 'G'
0000000000006c94         db  0x0e ; '.'
0000000000006c95         db  0x60 ; '`'
0000000000006c96         db  0x02 ; '.'
0000000000006c97         db  0x99 ; '.'
0000000000006c98         db  0x0e ; '.'
0000000000006c99         db  0x68 ; 'h'
0000000000006c9a         db  0x5f ; '_'
0000000000006c9b         db  0x0e ; '.'
0000000000006c9c         db  0x70 ; 'p'
0000000000006c9d         db  0x46 ; 'F'
0000000000006c9e         db  0x0e ; '.'
0000000000006c9f         db  0x78 ; 'x'
0000000000006ca0         db  0x42 ; 'B'
0000000000006ca1         db  0x0e ; '.'
0000000000006ca2         db  0x80 ; '.'
0000000000006ca3         db  0x01 ; '.'
0000000000006ca4         db  0x59 ; 'Y'
0000000000006ca5         db  0x0e ; '.'
0000000000006ca6         db  0x60 ; '`'
0000000000006ca7         db  0x02 ; '.'
0000000000006ca8         db  0x40 ; '@'
0000000000006ca9         db  0x0e ; '.'
0000000000006caa         db  0x68 ; 'h'
0000000000006cab         db  0x4b ; 'K'
0000000000006cac         db  0x0e ; '.'
0000000000006cad         db  0x70 ; 'p'
0000000000006cae         db  0x43 ; 'C'
0000000000006caf         db  0x0e ; '.'
0000000000006cb0         db  0x78 ; 'x'
0000000000006cb1         db  0x45 ; 'E'
0000000000006cb2         db  0x0e ; '.'
0000000000006cb3         db  0x80 ; '.'
0000000000006cb4         db  0x01 ; '.'
0000000000006cb5         db  0x5e ; '^'
0000000000006cb6         db  0x0e ; '.'
0000000000006cb7         db  0x60 ; '`'
0000000000006cb8         db  0x4c ; 'L'
0000000000006cb9         db  0x0a ; '.'
0000000000006cba         db  0x0e ; '.'
0000000000006cbb         db  0x38 ; '8'
0000000000006cbc         db  0x44 ; 'D'
0000000000006cbd         db  0x0e ; '.'
0000000000006cbe         db  0x30 ; '0'
0000000000006cbf         db  0x41 ; 'A'
0000000000006cc0         db  0x0e ; '.'
0000000000006cc1         db  0x28 ; '('
0000000000006cc2         db  0x42 ; 'B'
0000000000006cc3         db  0x0e ; '.'
0000000000006cc4         db  0x20 ; ' '
0000000000006cc5         db  0x42 ; 'B'
0000000000006cc6         db  0x0e ; '.'
0000000000006cc7         db  0x18 ; '.'
0000000000006cc8         db  0x42 ; 'B'
0000000000006cc9         db  0x0e ; '.'
0000000000006cca         db  0x10 ; '.'
0000000000006ccb         db  0x42 ; 'B'
0000000000006ccc         db  0x0e ; '.'
0000000000006ccd         db  0x08 ; '.'
0000000000006cce         db  0x46 ; 'F'
0000000000006ccf         db  0x0b ; '.'
0000000000006cd0         dd         0x00000028                                  ; Length of the record
0000000000006cd4         dd         0x000004ac                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006cd8         db         0x88, 0xd6, 2 dup (0xff)                    ; begin 0x4360
0000000000006cdc         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x4396)
0000000000006ce0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ce1         db  0x42 ; 'B'
0000000000006ce2         db  0x0e ; '.'
0000000000006ce3         db  0x10 ; '.'
0000000000006ce4         db  0x8c ; '.'
0000000000006ce5         db  0x02 ; '.'
0000000000006ce6         db  0x41 ; 'A'
0000000000006ce7         db  0x0e ; '.'
0000000000006ce8         db  0x18 ; '.'
0000000000006ce9         db  0x86 ; '.'
0000000000006cea         db  0x03 ; '.'
0000000000006ceb         db  0x41 ; 'A'
0000000000006cec         db  0x0e ; '.'
0000000000006ced         db  0x20 ; ' '
0000000000006cee         db  0x83 ; '.'
0000000000006cef         db  0x04 ; '.'
0000000000006cf0         db  0x6e ; 'n'
0000000000006cf1         db  0x0e ; '.'
0000000000006cf2         db  0x18 ; '.'
0000000000006cf3         db  0x41 ; 'A'
0000000000006cf4         db  0x0e ; '.'
0000000000006cf5         db  0x10 ; '.'
0000000000006cf6         db  0x42 ; 'B'
0000000000006cf7         db  0x0e ; '.'
0000000000006cf8         db  0x08 ; '.'
0000000000006cf9         db  0x00 ; '.'
0000000000006cfa         db  0x00 ; '.'
0000000000006cfb         db  0x00 ; '.'
0000000000006cfc         dd         0x00000010                                  ; Length of the record
0000000000006d00         dd         0x000004d8                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006d04         db         0x9c, 0xd6, 2 dup (0xff)                    ; begin 0x43a0
0000000000006d08         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x43b1)
0000000000006d0c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d0d         align      16
0000000000006d10         dd         0x00000010                                  ; Length of the record
0000000000006d14         dd         0x000004ec                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006d18         db         0xa8, 0xd6, 2 dup (0xff)                    ; begin 0x43c0
0000000000006d1c         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x43d1)
0000000000006d20         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d21         align      4
0000000000006d24         dd         0x00000010                                  ; Length of the record
0000000000006d28         dd         0x00000500                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006d2c         db         0xb4, 0xd6, 2 dup (0xff)                    ; begin 0x43e0
0000000000006d30         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x4415)
0000000000006d34         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d35         align      8
0000000000006d38         dd         0x00000010                                  ; Length of the record
0000000000006d3c         dd         0x00000514                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006d40         db         0xe0, 0xd6, 2 dup (0xff)                    ; begin 0x4420
0000000000006d44         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x4435)
0000000000006d48         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d49         align      4
0000000000006d4c         dd         0x00000010                                  ; Length of the record
0000000000006d50         dd         0x00000528                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006d54         db         0xec, 0xd6, 2 dup (0xff)                    ; begin 0x4440
0000000000006d58         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x4470)
0000000000006d5c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d5d         db  0x6b ; 'k'
0000000000006d5e         db  0x0e ; '.'
0000000000006d5f         db  0x10 ; '.'
0000000000006d60         dd         0x00000050                                  ; Length of the record
0000000000006d64         dd         0x0000053c                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006d68         db         0x08, 0xd7, 2 dup (0xff)                    ; begin 0x4470
0000000000006d6c         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x44e4)
0000000000006d70         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d71         db  0x42 ; 'B'
0000000000006d72         db  0x0e ; '.'
0000000000006d73         db  0x10 ; '.'
0000000000006d74         db  0x8f ; '.'
0000000000006d75         db  0x02 ; '.'
0000000000006d76         db  0x42 ; 'B'
0000000000006d77         db  0x0e ; '.'
0000000000006d78         db  0x18 ; '.'
0000000000006d79         db  0x8e ; '.'
0000000000006d7a         db  0x03 ; '.'
0000000000006d7b         db  0x49 ; 'I'
0000000000006d7c         db  0x0e ; '.'
0000000000006d7d         db  0x20 ; ' '
0000000000006d7e         db  0x8d ; '.'
0000000000006d7f         db  0x04 ; '.'
0000000000006d80         db  0x42 ; 'B'
0000000000006d81         db  0x0e ; '.'
0000000000006d82         db  0x28 ; '('
0000000000006d83         db  0x8c ; '.'
0000000000006d84         db  0x05 ; '.'
0000000000006d85         db  0x44 ; 'D'
0000000000006d86         db  0x0e ; '.'
0000000000006d87         db  0x30 ; '0'
0000000000006d88         db  0x86 ; '.'
0000000000006d89         db  0x06 ; '.'
0000000000006d8a         db  0x41 ; 'A'
0000000000006d8b         db  0x0e ; '.'
0000000000006d8c         db  0x38 ; '8'
0000000000006d8d         db  0x83 ; '.'
0000000000006d8e         db  0x07 ; '.'
0000000000006d8f         db  0x4d ; 'M'
0000000000006d90         db  0x0e ; '.'
0000000000006d91         db  0x50 ; 'P'
0000000000006d92         db  0x5f ; '_'
0000000000006d93         db  0x0e ; '.'
0000000000006d94         db  0x58 ; 'X'
0000000000006d95         db  0x47 ; 'G'
0000000000006d96         db  0x0e ; '.'
0000000000006d97         db  0x60 ; '`'
0000000000006d98         db  0x46 ; 'F'
0000000000006d99         db  0x0e ; '.'
0000000000006d9a         db  0x68 ; 'h'
0000000000006d9b         db  0x44 ; 'D'
0000000000006d9c         db  0x0e ; '.'
0000000000006d9d         db  0x70 ; 'p'
0000000000006d9e         db  0x58 ; 'X'
0000000000006d9f         db  0x0e ; '.'
0000000000006da0         db  0x38 ; '8'
0000000000006da1         db  0x41 ; 'A'
0000000000006da2         db  0x0e ; '.'
0000000000006da3         db  0x30 ; '0'
0000000000006da4         db  0x41 ; 'A'
0000000000006da5         db  0x0e ; '.'
0000000000006da6         db  0x28 ; '('
0000000000006da7         db  0x42 ; 'B'
0000000000006da8         db  0x0e ; '.'
0000000000006da9         db  0x20 ; ' '
0000000000006daa         db  0x42 ; 'B'
0000000000006dab         db  0x0e ; '.'
0000000000006dac         db  0x18 ; '.'
0000000000006dad         db  0x42 ; 'B'
0000000000006dae         db  0x0e ; '.'
0000000000006daf         db  0x10 ; '.'
0000000000006db0         db  0x42 ; 'B'
0000000000006db1         db  0x0e ; '.'
0000000000006db2         db  0x08 ; '.'
0000000000006db3         db  0x00 ; '.'
0000000000006db4         dd         0x00000068                                  ; Length of the record
0000000000006db8         dd         0x00000590                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006dbc         db         0x34, 0xd7, 2 dup (0xff)                    ; begin 0x44f0
0000000000006dc0         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x45d3)
0000000000006dc4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006dc5         db  0x42 ; 'B'
0000000000006dc6         db  0x0e ; '.'
0000000000006dc7         db  0x10 ; '.'
0000000000006dc8         db  0x8f ; '.'
0000000000006dc9         db  0x02 ; '.'
0000000000006dca         db  0x42 ; 'B'
0000000000006dcb         db  0x0e ; '.'
0000000000006dcc         db  0x18 ; '.'
0000000000006dcd         db  0x8e ; '.'
0000000000006dce         db  0x03 ; '.'
0000000000006dcf         db  0x49 ; 'I'
0000000000006dd0         db  0x0e ; '.'
0000000000006dd1         db  0x20 ; ' '
0000000000006dd2         db  0x8d ; '.'
0000000000006dd3         db  0x04 ; '.'
0000000000006dd4         db  0x42 ; 'B'
0000000000006dd5         db  0x0e ; '.'
0000000000006dd6         db  0x28 ; '('
0000000000006dd7         db  0x8c ; '.'
0000000000006dd8         db  0x05 ; '.'
0000000000006dd9         db  0x44 ; 'D'
0000000000006dda         db  0x0e ; '.'
0000000000006ddb         db  0x30 ; '0'
0000000000006ddc         db  0x86 ; '.'
0000000000006ddd         db  0x06 ; '.'
0000000000006dde         db  0x41 ; 'A'
0000000000006ddf         db  0x0e ; '.'
0000000000006de0         db  0x38 ; '8'
0000000000006de1         db  0x83 ; '.'
0000000000006de2         db  0x07 ; '.'
0000000000006de3         db  0x4d ; 'M'
0000000000006de4         db  0x0e ; '.'
0000000000006de5         db  0x70 ; 'p'
0000000000006de6         db  0x65 ; 'e'
0000000000006de7         db  0x0e ; '.'
0000000000006de8         db  0x78 ; 'x'
0000000000006de9         db  0x4d ; 'M'
0000000000006dea         db  0x0e ; '.'
0000000000006deb         db  0x80 ; '.'
0000000000006dec         db  0x01 ; '.'
0000000000006ded         db  0x46 ; 'F'
0000000000006dee         db  0x0e ; '.'
0000000000006def         db  0x88 ; '.'
0000000000006df0         db  0x01 ; '.'
0000000000006df1         db  0x42 ; 'B'
0000000000006df2         db  0x0e ; '.'
0000000000006df3         db  0x90 ; '.'
0000000000006df4         db  0x01 ; '.'
0000000000006df5         db  0x5e ; '^'
0000000000006df6         db  0x0e ; '.'
0000000000006df7         db  0x70 ; 'p'
0000000000006df8         db  0x56 ; 'V'
0000000000006df9         db  0x0e ; '.'
0000000000006dfa         db  0x78 ; 'x'
0000000000006dfb         db  0x43 ; 'C'
0000000000006dfc         db  0x0e ; '.'
0000000000006dfd         db  0x80 ; '.'
0000000000006dfe         db  0x01 ; '.'
0000000000006dff         db  0x43 ; 'C'
0000000000006e00         db  0x0e ; '.'
0000000000006e01         db  0x88 ; '.'
0000000000006e02         db  0x01 ; '.'
0000000000006e03         db  0x56 ; 'V'
0000000000006e04         db  0x0e ; '.'
0000000000006e05         db  0x90 ; '.'
0000000000006e06         db  0x01 ; '.'
0000000000006e07         db  0x52 ; 'R'
0000000000006e08         db  0x0e ; '.'
0000000000006e09         db  0x70 ; 'p'
0000000000006e0a         db  0x5b ; '['
0000000000006e0b         db  0x0e ; '.'
0000000000006e0c         db  0x38 ; '8'
0000000000006e0d         db  0x41 ; 'A'
0000000000006e0e         db  0x0e ; '.'
0000000000006e0f         db  0x30 ; '0'
0000000000006e10         db  0x41 ; 'A'
0000000000006e11         db  0x0e ; '.'
0000000000006e12         db  0x28 ; '('
0000000000006e13         db  0x42 ; 'B'
0000000000006e14         db  0x0e ; '.'
0000000000006e15         db  0x20 ; ' '
0000000000006e16         db  0x42 ; 'B'
0000000000006e17         db  0x0e ; '.'
0000000000006e18         db  0x18 ; '.'
0000000000006e19         db  0x42 ; 'B'
0000000000006e1a         db  0x0e ; '.'
0000000000006e1b         db  0x10 ; '.'
0000000000006e1c         db  0x42 ; 'B'
0000000000006e1d         db  0x0e ; '.'
0000000000006e1e         db  0x08 ; '.'
0000000000006e1f         db  0x00 ; '.'
0000000000006e20         dd         0x00000010                                  ; Length of the record
0000000000006e24         dd         0x000005fc                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006e28         db         0xb8, 0xd7, 2 dup (0xff)                    ; begin 0x45e0
0000000000006e2c         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x45ea)
0000000000006e30         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006e31         align      4
0000000000006e34         dd         0x00000028                                  ; Length of the record
0000000000006e38         dd         0x00000610                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006e3c         db         0xb4, 0xd7, 2 dup (0xff)                    ; begin 0x45f0
0000000000006e40         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x4683)
0000000000006e44         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006e45         db  0x48 ; 'H'
0000000000006e46         db  0x0e ; '.'
0000000000006e47         db  0x10 ; '.'
0000000000006e48         db  0x8c ; '.'
0000000000006e49         db  0x02 ; '.'
0000000000006e4a         db  0x48 ; 'H'
0000000000006e4b         db  0x0e ; '.'
0000000000006e4c         db  0x18 ; '.'
0000000000006e4d         db  0x86 ; '.'
0000000000006e4e         db  0x03 ; '.'
0000000000006e4f         db  0x41 ; 'A'
0000000000006e50         db  0x0e ; '.'
0000000000006e51         db  0x20 ; ' '
0000000000006e52         db  0x83 ; '.'
0000000000006e53         db  0x04 ; '.'
0000000000006e54         db  0x02 ; '.'
0000000000006e55         db  0x74 ; 't'
0000000000006e56         db  0x0e ; '.'
0000000000006e57         db  0x18 ; '.'
0000000000006e58         db  0x4b ; 'K'
0000000000006e59         db  0x0e ; '.'
0000000000006e5a         db  0x10 ; '.'
0000000000006e5b         db  0x42 ; 'B'
0000000000006e5c         db  0x0e ; '.'
0000000000006e5d         db  0x08 ; '.'
0000000000006e5e         db  0x00 ; '.'
0000000000006e5f         db  0x00 ; '.'
0000000000006e60         dd         0x00000010                                  ; Length of the record
0000000000006e64         dd         0x0000063c                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006e68         db         0x28, 0xd8, 2 dup (0xff)                    ; begin 0x4690
0000000000006e6c         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x46a3)
0000000000006e70         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006e71         align      4
0000000000006e74         dd         0x00000010                                  ; Length of the record
0000000000006e78         dd         0x00000650                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006e7c         db         0x34, 0xd8, 2 dup (0xff)                    ; begin 0x46b0
0000000000006e80         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x46bc)
0000000000006e84         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006e85         align      8
0000000000006e88         dd         0x00000010                                  ; Length of the record
0000000000006e8c         dd         0x00000664                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006e90         db         0x30, 0xd8, 2 dup (0xff)                    ; begin 0x46c0
0000000000006e94         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x46d8)
0000000000006e98         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006e99         align      4
0000000000006e9c         dd         0x00000010                                  ; Length of the record
0000000000006ea0         dd         0x00000678                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006ea4         db         0x3c, 0xd8, 2 dup (0xff)                    ; begin 0x46e0
0000000000006ea8         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x46f4)
0000000000006eac         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ead         align      16
0000000000006eb0         dd         0x00000018                                  ; Length of the record
0000000000006eb4         dd         0x0000068c                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006eb8         db         0x48, 0xd8, 2 dup (0xff)                    ; begin 0x4700
0000000000006ebc         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x478e)
0000000000006ec0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ec1         db  0x44 ; 'D'
0000000000006ec2         db  0x0e ; '.'
0000000000006ec3         db  0x50 ; 'P'
0000000000006ec4         db  0x02 ; '.'
0000000000006ec5         db  0x7f ; '.'
0000000000006ec6         db  0x0a ; '.'
0000000000006ec7         db  0x0e ; '.'
0000000000006ec8         db  0x08 ; '.'
0000000000006ec9         db  0x41 ; 'A'
0000000000006eca         db  0x0b ; '.'
0000000000006ecb         db  0x00 ; '.'
0000000000006ecc         dd         0x00000018                                  ; Length of the record
0000000000006ed0         dd         0x000006a8                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006ed4         db         0xbc, 0xd8, 2 dup (0xff)                    ; begin 0x4790
0000000000006ed8         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x481a)
0000000000006edc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006edd         db  0x44 ; 'D'
0000000000006ede         db  0x0e ; '.'
0000000000006edf         db  0x50 ; 'P'
0000000000006ee0         db  0x02 ; '.'
0000000000006ee1         db  0x7b ; '{'
0000000000006ee2         db  0x0a ; '.'
0000000000006ee3         db  0x0e ; '.'
0000000000006ee4         db  0x08 ; '.'
0000000000006ee5         db  0x41 ; 'A'
0000000000006ee6         db  0x0b ; '.'
0000000000006ee7         db  0x00 ; '.'
0000000000006ee8         dd         0x00000010                                  ; Length of the record
0000000000006eec         dd         0x000006c4                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006ef0         db         0x30, 0xd9, 2 dup (0xff)                    ; begin 0x4820
0000000000006ef4         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x482c)
0000000000006ef8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ef9         align      4
0000000000006efc         dd         0x00000010                                  ; Length of the record
0000000000006f00         dd         0x000006d8                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006f04         db         0x2c, 0xd9, 2 dup (0xff)                    ; begin 0x4830
0000000000006f08         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x483f)
0000000000006f0c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f0d         align      16
0000000000006f10         dd         0x00000018                                  ; Length of the record
0000000000006f14         dd         0x000006ec                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006f18         db         0x28, 0xd9, 2 dup (0xff)                    ; begin 0x4840
0000000000006f1c         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x48d8)
0000000000006f20         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f21         db  0x44 ; 'D'
0000000000006f22         db  0x0e ; '.'
0000000000006f23         db  0x50 ; 'P'
0000000000006f24         db  0x02 ; '.'
0000000000006f25         db  0x8e ; '.'
0000000000006f26         db  0x0a ; '.'
0000000000006f27         db  0x0e ; '.'
0000000000006f28         db  0x08 ; '.'
0000000000006f29         db  0x41 ; 'A'
0000000000006f2a         db  0x0b ; '.'
0000000000006f2b         db  0x00 ; '.'
0000000000006f2c         dd         0x00000010                                  ; Length of the record
0000000000006f30         dd         0x00000708                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006f34         db         0xac, 0xd9, 2 dup (0xff)                    ; begin 0x48e0
0000000000006f38         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x48f0)
0000000000006f3c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f3d         align      64
0000000000006f40         dd         0x00000010                                  ; Length of the record
0000000000006f44         dd         0x0000071c                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006f48         db         0xa8, 0xd9, 2 dup (0xff)                    ; begin 0x48f0
0000000000006f4c         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4901)
0000000000006f50         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f51         align      4
0000000000006f54         dd         0x00000010                                  ; Length of the record
0000000000006f58         dd         0x00000730                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006f5c         db         0xb4, 0xd9, 2 dup (0xff)                    ; begin 0x4910
0000000000006f60         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x491a)
0000000000006f64         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f65         align      8
0000000000006f68         dd         0x00000018                                  ; Length of the record
0000000000006f6c         dd         0x00000744                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006f70         db         0xb0, 0xd9, 2 dup (0xff)                    ; begin 0x4920
0000000000006f74         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x49ae)
0000000000006f78         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f79         db  0x44 ; 'D'
0000000000006f7a         db  0x0e ; '.'
0000000000006f7b         db  0x50 ; 'P'
0000000000006f7c         db  0x02 ; '.'
0000000000006f7d         db  0x7f ; '.'
0000000000006f7e         db  0x0a ; '.'
0000000000006f7f         db  0x0e ; '.'
0000000000006f80         db  0x08 ; '.'
0000000000006f81         db  0x41 ; 'A'
0000000000006f82         db  0x0b ; '.'
0000000000006f83         db  0x00 ; '.'
0000000000006f84         dd         0x00000018                                  ; Length of the record
0000000000006f88         dd         0x00000760                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006f8c         db         0x24, 0xda, 2 dup (0xff)                    ; begin 0x49b0
0000000000006f90         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x4a41)
0000000000006f94         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f95         db  0x44 ; 'D'
0000000000006f96         db  0x0e ; '.'
0000000000006f97         db  0x50 ; 'P'
0000000000006f98         db  0x02 ; '.'
0000000000006f99         db  0x82 ; '.'
0000000000006f9a         db  0x0a ; '.'
0000000000006f9b         db  0x0e ; '.'
0000000000006f9c         db  0x08 ; '.'
0000000000006f9d         db  0x41 ; 'A'
0000000000006f9e         db  0x0b ; '.'
0000000000006f9f         db  0x00 ; '.'
0000000000006fa0         dd         0x00000010                                  ; Length of the record
0000000000006fa4         dd         0x0000077c                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006fa8         db         0xa8, 0xda, 2 dup (0xff)                    ; begin 0x4a50
0000000000006fac         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x4a5c)
0000000000006fb0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006fb1         align      4
0000000000006fb4         dd         0x00000010                                  ; Length of the record
0000000000006fb8         dd         0x00000790                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006fbc         db         0xa4, 0xda, 2 dup (0xff)                    ; begin 0x4a60
0000000000006fc0         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x4a77)
0000000000006fc4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006fc5         align      8
0000000000006fc8         dd         0x00000010                                  ; Length of the record
0000000000006fcc         dd         0x000007a4                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006fd0         db         0xb0, 0xda, 2 dup (0xff)                    ; begin 0x4a80
0000000000006fd4         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4a93)
0000000000006fd8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006fd9         align      4
0000000000006fdc         dd         0x00000010                                  ; Length of the record
0000000000006fe0         dd         0x000007b8                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006fe4         db         0xbc, 0xda, 2 dup (0xff)                    ; begin 0x4aa0
0000000000006fe8         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x4aac)
0000000000006fec         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006fed         align      16
0000000000006ff0         dd         0x00000010                                  ; Length of the record
0000000000006ff4         dd         0x000007cc                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000006ff8         db         0xb8, 0xda, 2 dup (0xff)                    ; begin 0x4ab0
0000000000006ffc         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x4ac4)
0000000000007000         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007001         align      4
0000000000007004         dd         0x00000010                                  ; Length of the record
0000000000007008         dd         0x000007e0                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
000000000000700c         db         0xc4, 0xda, 2 dup (0xff)                    ; begin 0x4ad0
0000000000007010         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4ae3)
0000000000007014         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007015         align      8
0000000000007018         dd         0x00000014                                  ; Length of the record
000000000000701c         dd         0x000007f4                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000007020         db         0xd0, 0xda, 2 dup (0xff)                    ; begin 0x4af0
0000000000007024         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x4b08)
0000000000007028         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007029         align      16
0000000000007030         dd         0x00000110                                  ; Length of the record
0000000000007034         dd         0x0000080c                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000007038         db         0xd8, 0xda, 2 dup (0xff)                    ; begin 0x4b10
000000000000703c         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x4f27)
0000000000007040         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007041         db  0x42 ; 'B'
0000000000007042         db  0x0e ; '.'
0000000000007043         db  0x10 ; '.'
0000000000007044         db  0x8f ; '.'
0000000000007045         db  0x02 ; '.'
0000000000007046         db  0x42 ; 'B'
0000000000007047         db  0x0e ; '.'
0000000000007048         db  0x18 ; '.'
0000000000007049         db  0x8e ; '.'
000000000000704a         db  0x03 ; '.'
000000000000704b         db  0x42 ; 'B'
000000000000704c         db  0x0e ; '.'
000000000000704d         db  0x20 ; ' '
000000000000704e         db  0x8d ; '.'
000000000000704f         db  0x04 ; '.'
0000000000007050         db  0x42 ; 'B'
0000000000007051         db  0x0e ; '.'
0000000000007052         db  0x28 ; '('
0000000000007053         db  0x8c ; '.'
0000000000007054         db  0x05 ; '.'
0000000000007055         db  0x44 ; 'D'
0000000000007056         db  0x0e ; '.'
0000000000007057         db  0x30 ; '0'
0000000000007058         db  0x86 ; '.'
0000000000007059         db  0x06 ; '.'
000000000000705a         db  0x41 ; 'A'
000000000000705b         db  0x0e ; '.'
000000000000705c         db  0x38 ; '8'
000000000000705d         db  0x83 ; '.'
000000000000705e         db  0x07 ; '.'
000000000000705f         db  0x4a ; 'J'
0000000000007060         db  0x0e ; '.'
0000000000007061         db  0x60 ; '`'
0000000000007062         db  0x02 ; '.'
0000000000007063         db  0xdd ; '.'
0000000000007064         db  0x0e ; '.'
0000000000007065         db  0x68 ; 'h'
0000000000007066         db  0x57 ; 'W'
0000000000007067         db  0x0e ; '.'
0000000000007068         db  0x70 ; 'p'
0000000000007069         db  0x42 ; 'B'
000000000000706a         db  0x0e ; '.'
000000000000706b         db  0x78 ; 'x'
000000000000706c         db  0x42 ; 'B'
000000000000706d         db  0x0e ; '.'
000000000000706e         db  0x80 ; '.'
000000000000706f         db  0x01 ; '.'
0000000000007070         db  0x42 ; 'B'
0000000000007071         db  0x0e ; '.'
0000000000007072         db  0x88 ; '.'
0000000000007073         db  0x01 ; '.'
0000000000007074         db  0x42 ; 'B'
0000000000007075         db  0x0e ; '.'
0000000000007076         db  0x90 ; '.'
0000000000007077         db  0x01 ; '.'
0000000000007078         db  0x53 ; 'S'
0000000000007079         db  0x0e ; '.'
000000000000707a         db  0x60 ; '`'
000000000000707b         db  0x44 ; 'D'
000000000000707c         db  0x0a ; '.'
000000000000707d         db  0x0e ; '.'
000000000000707e         db  0x38 ; '8'
000000000000707f         db  0x41 ; 'A'
0000000000007080         db  0x0e ; '.'
0000000000007081         db  0x30 ; '0'
0000000000007082         db  0x41 ; 'A'
0000000000007083         db  0x0e ; '.'
0000000000007084         db  0x28 ; '('
0000000000007085         db  0x42 ; 'B'
0000000000007086         db  0x0e ; '.'
0000000000007087         db  0x20 ; ' '
0000000000007088         db  0x42 ; 'B'
0000000000007089         db  0x0e ; '.'
000000000000708a         db  0x18 ; '.'
000000000000708b         db  0x42 ; 'B'
000000000000708c         db  0x0e ; '.'
000000000000708d         db  0x10 ; '.'
000000000000708e         db  0x42 ; 'B'
000000000000708f         db  0x0e ; '.'
0000000000007090         db  0x08 ; '.'
0000000000007091         db  0x44 ; 'D'
0000000000007092         db  0x0b ; '.'
0000000000007093         db  0x02 ; '.'
0000000000007094         db  0x78 ; 'x'
0000000000007095         db  0x0a ; '.'
0000000000007096         db  0x0e ; '.'
0000000000007097         db  0x68 ; 'h'
0000000000007098         db  0x48 ; 'H'
0000000000007099         db  0x0b ; '.'
000000000000709a         db  0x5a ; 'Z'
000000000000709b         db  0x0a ; '.'
000000000000709c         db  0x0e ; '.'
000000000000709d         db  0x38 ; '8'
000000000000709e         db  0x47 ; 'G'
000000000000709f         db  0x0e ; '.'
00000000000070a0         db  0x30 ; '0'
00000000000070a1         db  0x41 ; 'A'
00000000000070a2         db  0x0e ; '.'
00000000000070a3         db  0x28 ; '('
00000000000070a4         db  0x42 ; 'B'
00000000000070a5         db  0x0e ; '.'
00000000000070a6         db  0x20 ; ' '
00000000000070a7         db  0x42 ; 'B'
00000000000070a8         db  0x0e ; '.'
00000000000070a9         db  0x18 ; '.'
00000000000070aa         db  0x42 ; 'B'
00000000000070ab         db  0x0e ; '.'
00000000000070ac         db  0x10 ; '.'
00000000000070ad         db  0x42 ; 'B'
00000000000070ae         db  0x0e ; '.'
00000000000070af         db  0x08 ; '.'
00000000000070b0         db  0x56 ; 'V'
00000000000070b1         db  0x0b ; '.'
00000000000070b2         db  0x5e ; '^'
00000000000070b3         db  0x0a ; '.'
00000000000070b4         db  0x0e ; '.'
00000000000070b5         db  0x38 ; '8'
00000000000070b6         db  0x52 ; 'R'
00000000000070b7         db  0x0e ; '.'
00000000000070b8         db  0x30 ; '0'
00000000000070b9         db  0x41 ; 'A'
00000000000070ba         db  0x0e ; '.'
00000000000070bb         db  0x28 ; '('
00000000000070bc         db  0x42 ; 'B'
00000000000070bd         db  0x0e ; '.'
00000000000070be         db  0x20 ; ' '
00000000000070bf         db  0x42 ; 'B'
00000000000070c0         db  0x0e ; '.'
00000000000070c1         db  0x18 ; '.'
00000000000070c2         db  0x42 ; 'B'
00000000000070c3         db  0x0e ; '.'
00000000000070c4         db  0x10 ; '.'
00000000000070c5         db  0x42 ; 'B'
00000000000070c6         db  0x0e ; '.'
00000000000070c7         db  0x08 ; '.'
00000000000070c8         db  0x4f ; 'O'
00000000000070c9         db  0x0b ; '.'
00000000000070ca         db  0x62 ; 'b'
00000000000070cb         db  0x0a ; '.'
00000000000070cc         db  0x0e ; '.'
00000000000070cd         db  0x38 ; '8'
00000000000070ce         db  0x50 ; 'P'
00000000000070cf         db  0x0e ; '.'
00000000000070d0         db  0x30 ; '0'
00000000000070d1         db  0x41 ; 'A'
00000000000070d2         db  0x0e ; '.'
00000000000070d3         db  0x28 ; '('
00000000000070d4         db  0x42 ; 'B'
00000000000070d5         db  0x0e ; '.'
00000000000070d6         db  0x20 ; ' '
00000000000070d7         db  0x42 ; 'B'
00000000000070d8         db  0x0e ; '.'
00000000000070d9         db  0x18 ; '.'
00000000000070da         db  0x42 ; 'B'
00000000000070db         db  0x0e ; '.'
00000000000070dc         db  0x10 ; '.'
00000000000070dd         db  0x42 ; 'B'
00000000000070de         db  0x0e ; '.'
00000000000070df         db  0x08 ; '.'
00000000000070e0         db  0x55 ; 'U'
00000000000070e1         db  0x0b ; '.'
00000000000070e2         db  0x66 ; 'f'
00000000000070e3         db  0x0e ; '.'
00000000000070e4         db  0x68 ; 'h'
00000000000070e5         db  0x42 ; 'B'
00000000000070e6         db  0x0e ; '.'
00000000000070e7         db  0x70 ; 'p'
00000000000070e8         db  0x5c ; '\'
00000000000070e9         db  0x0e ; '.'
00000000000070ea         db  0x68 ; 'h'
00000000000070eb         db  0x41 ; 'A'
00000000000070ec         db  0x0e ; '.'
00000000000070ed         db  0x60 ; '`'
00000000000070ee         db  0x44 ; 'D'
00000000000070ef         db  0x0a ; '.'
00000000000070f0         db  0x0e ; '.'
00000000000070f1         db  0x38 ; '8'
00000000000070f2         db  0x41 ; 'A'
00000000000070f3         db  0x0e ; '.'
00000000000070f4         db  0x30 ; '0'
00000000000070f5         db  0x41 ; 'A'
00000000000070f6         db  0x0e ; '.'
00000000000070f7         db  0x28 ; '('
00000000000070f8         db  0x42 ; 'B'
00000000000070f9         db  0x0e ; '.'
00000000000070fa         db  0x20 ; ' '
00000000000070fb         db  0x42 ; 'B'
00000000000070fc         db  0x0e ; '.'
00000000000070fd         db  0x18 ; '.'
00000000000070fe         db  0x42 ; 'B'
00000000000070ff         db  0x0e ; '.'
0000000000007100         db  0x10 ; '.'
0000000000007101         db  0x42 ; 'B'
0000000000007102         db  0x0e ; '.'
0000000000007103         db  0x08 ; '.'
0000000000007104         db  0x45 ; 'E'
0000000000007105         db  0x0b ; '.'
0000000000007106         db  0x68 ; 'h'
0000000000007107         db  0x0a ; '.'
0000000000007108         db  0x0e ; '.'
0000000000007109         db  0x68 ; 'h'
000000000000710a         db  0x48 ; 'H'
000000000000710b         db  0x0b ; '.'
000000000000710c         db  0x72 ; 'r'
000000000000710d         db  0x0e ; '.'
000000000000710e         db  0x68 ; 'h'
000000000000710f         db  0x45 ; 'E'
0000000000007110         db  0x0e ; '.'
0000000000007111         db  0x70 ; 'p'
0000000000007112         db  0x42 ; 'B'
0000000000007113         db  0x0e ; '.'
0000000000007114         db  0x78 ; 'x'
0000000000007115         db  0x42 ; 'B'
0000000000007116         db  0x0e ; '.'
0000000000007117         db  0x80 ; '.'
0000000000007118         db  0x01 ; '.'
0000000000007119         db  0x5e ; '^'
000000000000711a         db  0x0e ; '.'
000000000000711b         db  0x60 ; '`'
000000000000711c         db  0x44 ; 'D'
000000000000711d         db  0x0a ; '.'
000000000000711e         db  0x0e ; '.'
000000000000711f         db  0x38 ; '8'
0000000000007120         db  0x41 ; 'A'
0000000000007121         db  0x0e ; '.'
0000000000007122         db  0x30 ; '0'
0000000000007123         db  0x41 ; 'A'
0000000000007124         db  0x0e ; '.'
0000000000007125         db  0x28 ; '('
0000000000007126         db  0x42 ; 'B'
0000000000007127         db  0x0e ; '.'
0000000000007128         db  0x20 ; ' '
0000000000007129         db  0x42 ; 'B'
000000000000712a         db  0x0e ; '.'
000000000000712b         db  0x18 ; '.'
000000000000712c         db  0x42 ; 'B'
000000000000712d         db  0x0e ; '.'
000000000000712e         db  0x10 ; '.'
000000000000712f         db  0x42 ; 'B'
0000000000007130         db  0x0e ; '.'
0000000000007131         db  0x08 ; '.'
0000000000007132         db  0x41 ; 'A'
0000000000007133         db  0x0b ; '.'
0000000000007134         db  0x79 ; 'y'
0000000000007135         db  0x0a ; '.'
0000000000007136         db  0x0e ; '.'
0000000000007137         db  0x68 ; 'h'
0000000000007138         db  0x42 ; 'B'
0000000000007139         db  0x0e ; '.'
000000000000713a         db  0x70 ; 'p'
000000000000713b         db  0x42 ; 'B'
000000000000713c         db  0x0e ; '.'
000000000000713d         db  0x78 ; 'x'
000000000000713e         db  0x42 ; 'B'
000000000000713f         db  0x0e ; '.'
0000000000007140         db  0x80 ; '.'
0000000000007141         db  0x01 ; '.'
0000000000007142         db  0x51 ; 'Q'
0000000000007143         db  0x0b ; '.'
0000000000007144         dd         0x00000010                                  ; Length of the record
0000000000007148         dd         0x00000920                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
000000000000714c         db         0xe4, 0xdd, 2 dup (0xff)                    ; begin 0x4f30
0000000000007150         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x4f50)
0000000000007154         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007155         align      8
0000000000007158         dd         0x00000018                                  ; Length of the record
000000000000715c         dd         0x00000934                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000007160         db         0xf0, 0xdd, 2 dup (0xff)                    ; begin 0x4f50
0000000000007164         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x4fc8)
0000000000007168         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007169         db  0x44 ; 'D'
000000000000716a         db  0x0e ; '.'
000000000000716b         db  0x70 ; 'p'
000000000000716c         db  0x02 ; '.'
000000000000716d         db  0x60 ; '`'
000000000000716e         db  0x0a ; '.'
000000000000716f         db  0x0e ; '.'
0000000000007170         db  0x08 ; '.'
0000000000007171         db  0x41 ; 'A'
0000000000007172         db  0x0b ; '.'
0000000000007173         db  0x00 ; '.'
0000000000007174         dd         0x00000028                                  ; Length of the record
0000000000007178         dd         0x00000950                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
000000000000717c         db         0x54, 0xde, 2 dup (0xff)                    ; begin 0x4fd0
0000000000007180         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x50a5)
0000000000007184         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007185         db  0x41 ; 'A'
0000000000007186         db  0x0e ; '.'
0000000000007187         db  0x10 ; '.'
0000000000007188         db  0x86 ; '.'
0000000000007189         db  0x02 ; '.'
000000000000718a         db  0x41 ; 'A'
000000000000718b         db  0x0e ; '.'
000000000000718c         db  0x18 ; '.'
000000000000718d         db  0x83 ; '.'
000000000000718e         db  0x03 ; '.'
000000000000718f         db  0x50 ; 'P'
0000000000007190         db  0x0e ; '.'
0000000000007191         db  0xd0 ; '.'
0000000000007192         db  0x01 ; '.'
0000000000007193         db  0x02 ; '.'
0000000000007194         db  0xab ; '.'
0000000000007195         db  0x0a ; '.'
0000000000007196         db  0x0e ; '.'
0000000000007197         db  0x18 ; '.'
0000000000007198         db  0x41 ; 'A'
0000000000007199         db  0x0e ; '.'
000000000000719a         db  0x10 ; '.'
000000000000719b         db  0x41 ; 'A'
000000000000719c         db  0x0e ; '.'
000000000000719d         db  0x08 ; '.'
000000000000719e         db  0x41 ; 'A'
000000000000719f         db  0x0b ; '.'
00000000000071a0         dd         0x0000001c                                  ; Length of the record
00000000000071a4         dd         0x0000097c                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
00000000000071a8         db         0x08, 0xdf, 2 dup (0xff)                    ; begin 0x50b0
00000000000071ac         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x5130)
00000000000071b0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000071b1         db  0x41 ; 'A'
00000000000071b2         db  0x0e ; '.'
00000000000071b3         db  0x10 ; '.'
00000000000071b4         db  0x83 ; '.'
00000000000071b5         db  0x02 ; '.'
00000000000071b6         db  0x02 ; '.'
00000000000071b7         db  0x7a ; 'z'
00000000000071b8         db  0x0e ; '.'
00000000000071b9         db  0x08 ; '.'
00000000000071ba         db  0x00 ; '.'
00000000000071bb         db  0x00 ; '.'
00000000000071bc         db  0x00 ; '.'
00000000000071bd         db  0x00 ; '.'
00000000000071be         db  0x00 ; '.'
00000000000071bf         db  0x00 ; '.'
00000000000071c0         dd         0x00000018                                  ; Length of the record
00000000000071c4         dd         0x0000099c                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
00000000000071c8         db         0x68, 0xdf, 2 dup (0xff)                    ; begin 0x5130
00000000000071cc         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x514a)
00000000000071d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000071d1         db  0x41 ; 'A'
00000000000071d2         db  0x0e ; '.'
00000000000071d3         db  0x10 ; '.'
00000000000071d4         db  0x83 ; '.'
00000000000071d5         db  0x02 ; '.'
00000000000071d6         db  0x53 ; 'S'
00000000000071d7         db  0x0a ; '.'
00000000000071d8         db  0x0e ; '.'
00000000000071d9         db  0x08 ; '.'
00000000000071da         db  0x41 ; 'A'
00000000000071db         db  0x0b ; '.'
00000000000071dc         dd         0x00000010                                  ; Length of the record
00000000000071e0         dd         0x000009b8                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
00000000000071e4         db         0x6c, 0xdf, 2 dup (0xff)                    ; begin 0x5150
00000000000071e8         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x5174)
00000000000071ec         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000071ed         db  0x5f ; '_'
00000000000071ee         db  0x0e ; '.'
00000000000071ef         db  0x10 ; '.'
00000000000071f0         dd         0x00000010                                  ; Length of the record
00000000000071f4         dd         0x000009cc                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
00000000000071f8         db         0x88, 0xdf, 2 dup (0xff)                    ; begin 0x5180
00000000000071fc         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x5182)
0000000000007200         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007201         align      4
0000000000007204         dd         0x00000020                                  ; Length of the record
0000000000007208         dd         0x000009e0                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
000000000000720c         db         0x84, 0xdf, 2 dup (0xff)                    ; begin 0x5190
0000000000007210         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x51c6)
0000000000007214         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007215         db  0x44 ; 'D'
0000000000007216         db  0x0e ; '.'
0000000000007217         db  0x10 ; '.'
0000000000007218         db  0x83 ; '.'
0000000000007219         db  0x02 ; '.'
000000000000721a         db  0x5d ; ']'
000000000000721b         db  0x0a ; '.'
000000000000721c         db  0x0e ; '.'
000000000000721d         db  0x08 ; '.'
000000000000721e         db  0x47 ; 'G'
000000000000721f         db  0x0b ; '.'
0000000000007220         db  0x48 ; 'H'
0000000000007221         db  0x0a ; '.'
0000000000007222         db  0x0e ; '.'
0000000000007223         db  0x08 ; '.'
0000000000007224         db  0x41 ; 'A'
0000000000007225         db  0x0b ; '.'
0000000000007226         db  0x00 ; '.'
0000000000007227         db  0x00 ; '.'
0000000000007228         dd         0x00000010                                  ; Length of the record
000000000000722c         dd         0x00000a04                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000007230         db         0xa0, 0xdf, 2 dup (0xff)                    ; begin 0x51d0
0000000000007234         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x51f4)
0000000000007238         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007239         db  0x5f ; '_'
000000000000723a         db  0x0e ; '.'
000000000000723b         db  0x10 ; '.'
000000000000723c         dd         0x00000014                                  ; Length of the record
0000000000007240         dd         0x00000a18                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000007244         db         0xbc, 0xdf, 2 dup (0xff)                    ; begin 0x5200
0000000000007248         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x5282)
000000000000724c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000724d         db  0x02 ; '.'
000000000000724e         db  0x5f ; '_'
000000000000724f         db  0x0e ; '.'
0000000000007250         db  0x10 ; '.'
0000000000007251         db  0x49 ; 'I'
0000000000007252         db  0x0e ; '.'
0000000000007253         db  0x08 ; '.'
0000000000007254         dd         0x00000014                                  ; Length of the record
0000000000007258         dd         0x00000a30                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
000000000000725c         db         0x34, 0xe0, 2 dup (0xff)                    ; begin 0x5290
0000000000007260         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x52da)
0000000000007264         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007265         db  0x02 ; '.'
0000000000007266         db  0x45 ; 'E'
0000000000007267         db  0x0e ; '.'
0000000000007268         db  0x10 ; '.'
0000000000007269         db  0x00 ; '.'
000000000000726a         db  0x00 ; '.'
000000000000726b         db  0x00 ; '.'
000000000000726c         dd         0x00000018                                  ; Length of the record
0000000000007270         dd         0x00000a48                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000007274         db         0x6c, 0xe0, 2 dup (0xff)                    ; begin 0x52e0
0000000000007278         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x52f7)
000000000000727c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000727d         db  0x41 ; 'A'
000000000000727e         db  0x0e ; '.'
000000000000727f         db  0x10 ; '.'
0000000000007280         db  0x83 ; '.'
0000000000007281         db  0x02 ; '.'
0000000000007282         db  0x51 ; 'Q'
0000000000007283         db  0x0e ; '.'
0000000000007284         db  0x08 ; '.'
0000000000007285         db  0x00 ; '.'
0000000000007286         db  0x00 ; '.'
0000000000007287         db  0x00 ; '.'
0000000000007288         dd         0x00000018                                  ; Length of the record
000000000000728c         dd         0x00000a64                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000007290         db         0x70, 0xe0, 2 dup (0xff)                    ; begin 0x5300
0000000000007294         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x532e)
0000000000007298         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007299         db  0x47 ; 'G'
000000000000729a         db  0x0e ; '.'
000000000000729b         db  0x10 ; '.'
000000000000729c         db  0x61 ; 'a'
000000000000729d         db  0x0a ; '.'
000000000000729e         db  0x0e ; '.'
000000000000729f         db  0x08 ; '.'
00000000000072a0         db  0x41 ; 'A'
00000000000072a1         db  0x0b ; '.'
00000000000072a2         db  0x00 ; '.'
00000000000072a3         db  0x00 ; '.'
00000000000072a4         dd         0x00000024                                  ; Length of the record
00000000000072a8         dd         0x00000a80                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
00000000000072ac         db         0x84, 0xe0, 2 dup (0xff)                    ; begin 0x5330
00000000000072b0         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x5358)
00000000000072b4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000072b5         db  0x41 ; 'A'
00000000000072b6         db  0x0e ; '.'
00000000000072b7         db  0x10 ; '.'
00000000000072b8         db  0x86 ; '.'
00000000000072b9         db  0x02 ; '.'
00000000000072ba         db  0x41 ; 'A'
00000000000072bb         db  0x0e ; '.'
00000000000072bc         db  0x18 ; '.'
00000000000072bd         db  0x83 ; '.'
00000000000072be         db  0x03 ; '.'
00000000000072bf         db  0x4d ; 'M'
00000000000072c0         db  0x0e ; '.'
00000000000072c1         db  0x20 ; ' '
00000000000072c2         db  0x49 ; 'I'
00000000000072c3         db  0x0e ; '.'
00000000000072c4         db  0x18 ; '.'
00000000000072c5         db  0x47 ; 'G'
00000000000072c6         db  0x0e ; '.'
00000000000072c7         db  0x10 ; '.'
00000000000072c8         db  0x41 ; 'A'
00000000000072c9         db  0x0e ; '.'
00000000000072ca         db  0x08 ; '.'
00000000000072cb         db  0x00 ; '.'
00000000000072cc         dd         0x00000018                                  ; Length of the record
00000000000072d0         dd         0x00000aa8                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
00000000000072d4         db         0x8c, 0xe0, 2 dup (0xff)                    ; begin 0x5360
00000000000072d8         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5373)
00000000000072dc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000072dd         db  0x41 ; 'A'
00000000000072de         db  0x0e ; '.'
00000000000072df         db  0x10 ; '.'
00000000000072e0         db  0x83 ; '.'
00000000000072e1         db  0x02 ; '.'
00000000000072e2         db  0x50 ; 'P'
00000000000072e3         db  0x0e ; '.'
00000000000072e4         db  0x08 ; '.'
00000000000072e5         db  0x00 ; '.'
00000000000072e6         db  0x00 ; '.'
00000000000072e7         db  0x00 ; '.'
00000000000072e8         dd         0x00000014                                  ; Length of the record
00000000000072ec         dd         0x00000ac4                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
00000000000072f0         db         0x90, 0xe0, 2 dup (0xff)                    ; begin 0x5380
00000000000072f4         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x53b5)
00000000000072f8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000072f9         db  0x4b ; 'K'
00000000000072fa         db  0x0e ; '.'
00000000000072fb         db  0x10 ; '.'
00000000000072fc         db  0x00 ; '.'
00000000000072fd         db  0x00 ; '.'
00000000000072fe         db  0x00 ; '.'
00000000000072ff         db  0x00 ; '.'
0000000000007300         dd         0x0000003c                                  ; Length of the record
0000000000007304         dd         0x00000adc                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000007308         db         0xb8, 0xe0, 2 dup (0xff)                    ; begin 0x53c0
000000000000730c         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x5443)
0000000000007310         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007311         db  0x42 ; 'B'
0000000000007312         db  0x0e ; '.'
0000000000007313         db  0x10 ; '.'
0000000000007314         db  0x8d ; '.'
0000000000007315         db  0x02 ; '.'
0000000000007316         db  0x42 ; 'B'
0000000000007317         db  0x0e ; '.'
0000000000007318         db  0x18 ; '.'
0000000000007319         db  0x8c ; '.'
000000000000731a         db  0x03 ; '.'
000000000000731b         db  0x44 ; 'D'
000000000000731c         db  0x0e ; '.'
000000000000731d         db  0x20 ; ' '
000000000000731e         db  0x86 ; '.'
000000000000731f         db  0x04 ; '.'
0000000000007320         db  0x41 ; 'A'
0000000000007321         db  0x0e ; '.'
0000000000007322         db  0x28 ; '('
0000000000007323         db  0x83 ; '.'
0000000000007324         db  0x05 ; '.'
0000000000007325         db  0x4a ; 'J'
0000000000007326         db  0x0e ; '.'
0000000000007327         db  0x40 ; '@'
0000000000007328         db  0x02 ; '.'
0000000000007329         db  0x64 ; 'd'
000000000000732a         db  0x0a ; '.'
000000000000732b         db  0x0e ; '.'
000000000000732c         db  0x28 ; '('
000000000000732d         db  0x41 ; 'A'
000000000000732e         db  0x0e ; '.'
000000000000732f         db  0x20 ; ' '
0000000000007330         db  0x41 ; 'A'
0000000000007331         db  0x0e ; '.'
0000000000007332         db  0x18 ; '.'
0000000000007333         db  0x42 ; 'B'
0000000000007334         db  0x0e ; '.'
0000000000007335         db  0x10 ; '.'
0000000000007336         db  0x42 ; 'B'
0000000000007337         db  0x0e ; '.'
0000000000007338         db  0x08 ; '.'
0000000000007339         db  0x41 ; 'A'
000000000000733a         db  0x0b ; '.'
000000000000733b         db  0x00 ; '.'
000000000000733c         db  0x00 ; '.'
000000000000733d         db  0x00 ; '.'
000000000000733e         db  0x00 ; '.'
000000000000733f         db  0x00 ; '.'
0000000000007340         dd         0x0000004c                                  ; Length of the record
0000000000007344         dd         0x00000b1c                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000007348         db         0x08, 0xe1, 2 dup (0xff)                    ; begin 0x5450
000000000000734c         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x54cd)
0000000000007350         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007351         db  0x42 ; 'B'
0000000000007352         db  0x0e ; '.'
0000000000007353         db  0x10 ; '.'
0000000000007354         db  0x8c ; '.'
0000000000007355         db  0x02 ; '.'
0000000000007356         db  0x41 ; 'A'
0000000000007357         db  0x0e ; '.'
0000000000007358         db  0x18 ; '.'
0000000000007359         db  0x86 ; '.'
000000000000735a         db  0x03 ; '.'
000000000000735b         db  0x44 ; 'D'
000000000000735c         db  0x0e ; '.'
000000000000735d         db  0x20 ; ' '
000000000000735e         db  0x83 ; '.'
000000000000735f         db  0x04 ; '.'
0000000000007360         db  0x69 ; 'i'
0000000000007361         db  0x0a ; '.'
0000000000007362         db  0x0e ; '.'
0000000000007363         db  0x18 ; '.'
0000000000007364         db  0x41 ; 'A'
0000000000007365         db  0x0e ; '.'
0000000000007366         db  0x10 ; '.'
0000000000007367         db  0x42 ; 'B'
0000000000007368         db  0x0e ; '.'
0000000000007369         db  0x08 ; '.'
000000000000736a         db  0x45 ; 'E'
000000000000736b         db  0x0b ; '.'
000000000000736c         db  0x55 ; 'U'
000000000000736d         db  0x0a ; '.'
000000000000736e         db  0x0e ; '.'
000000000000736f         db  0x18 ; '.'
0000000000007370         db  0x41 ; 'A'
0000000000007371         db  0x0e ; '.'
0000000000007372         db  0x10 ; '.'
0000000000007373         db  0x42 ; 'B'
0000000000007374         db  0x0e ; '.'
0000000000007375         db  0x08 ; '.'
0000000000007376         db  0x48 ; 'H'
0000000000007377         db  0x0b ; '.'
0000000000007378         db  0x41 ; 'A'
0000000000007379         db  0x0a ; '.'
000000000000737a         db  0x0e ; '.'
000000000000737b         db  0x18 ; '.'
000000000000737c         db  0x46 ; 'F'
000000000000737d         db  0x0e ; '.'
000000000000737e         db  0x10 ; '.'
000000000000737f         db  0x42 ; 'B'
0000000000007380         db  0x0e ; '.'
0000000000007381         db  0x08 ; '.'
0000000000007382         db  0x47 ; 'G'
0000000000007383         db  0x0b ; '.'
0000000000007384         db  0x49 ; 'I'
0000000000007385         db  0x0e ; '.'
0000000000007386         db  0x18 ; '.'
0000000000007387         db  0x41 ; 'A'
0000000000007388         db  0x0e ; '.'
0000000000007389         db  0x10 ; '.'
000000000000738a         db  0x42 ; 'B'
000000000000738b         db  0x0e ; '.'
000000000000738c         db  0x08 ; '.'
000000000000738d         db  0x00 ; '.'
000000000000738e         db  0x00 ; '.'
000000000000738f         db  0x00 ; '.'
0000000000007390         dd         0x0000001c                                  ; Length of the record
0000000000007394         dd         0x00000b6c                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000007398         db         0x38, 0xe1, 2 dup (0xff)                    ; begin 0x54d0
000000000000739c         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x5530)
00000000000073a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000073a1         db  0x44 ; 'D'
00000000000073a2         db  0x0e ; '.'
00000000000073a3         db  0x10 ; '.'
00000000000073a4         db  0x75 ; 'u'
00000000000073a5         db  0x0a ; '.'
00000000000073a6         db  0x0e ; '.'
00000000000073a7         db  0x08 ; '.'
00000000000073a8         db  0x47 ; 'G'
00000000000073a9         db  0x0b ; '.'
00000000000073aa         db  0x5f ; '_'
00000000000073ab         db  0x0e ; '.'
00000000000073ac         db  0x08 ; '.'
00000000000073ad         db  0x00 ; '.'
00000000000073ae         db  0x00 ; '.'
00000000000073af         db  0x00 ; '.'
00000000000073b0         dd         0x0000001c                                  ; Length of the record
00000000000073b4         dd         0x00000b8c                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
00000000000073b8         db         0x78, 0xe1, 2 dup (0xff)                    ; begin 0x5530
00000000000073bc         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x556c)
00000000000073c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000073c1         db  0x44 ; 'D'
00000000000073c2         db  0x0e ; '.'
00000000000073c3         db  0x10 ; '.'
00000000000073c4         db  0x61 ; 'a'
00000000000073c5         db  0x0a ; '.'
00000000000073c6         db  0x0e ; '.'
00000000000073c7         db  0x08 ; '.'
00000000000073c8         db  0x4b ; 'K'
00000000000073c9         db  0x0b ; '.'
00000000000073ca         db  0x4b ; 'K'
00000000000073cb         db  0x0e ; '.'
00000000000073cc         db  0x08 ; '.'
00000000000073cd         db  0x00 ; '.'
00000000000073ce         db  0x00 ; '.'
00000000000073cf         db  0x00 ; '.'
00000000000073d0         dd         0x00000034                                  ; Length of the record
00000000000073d4         dd         0x00000bac                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
00000000000073d8         db         0x98, 0xe1, 2 dup (0xff)                    ; begin 0x5570
00000000000073dc         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x55eb)
00000000000073e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000073e1         db  0x42 ; 'B'
00000000000073e2         db  0x0e ; '.'
00000000000073e3         db  0x10 ; '.'
00000000000073e4         db  0x8c ; '.'
00000000000073e5         db  0x02 ; '.'
00000000000073e6         db  0x41 ; 'A'
00000000000073e7         db  0x0e ; '.'
00000000000073e8         db  0x18 ; '.'
00000000000073e9         db  0x86 ; '.'
00000000000073ea         db  0x03 ; '.'
00000000000073eb         db  0x41 ; 'A'
00000000000073ec         db  0x0e ; '.'
00000000000073ed         db  0x20 ; ' '
00000000000073ee         db  0x83 ; '.'
00000000000073ef         db  0x04 ; '.'
00000000000073f0         db  0x7d ; '}'
00000000000073f1         db  0x0a ; '.'
00000000000073f2         db  0x0e ; '.'
00000000000073f3         db  0x18 ; '.'
00000000000073f4         db  0x41 ; 'A'
00000000000073f5         db  0x0e ; '.'
00000000000073f6         db  0x10 ; '.'
00000000000073f7         db  0x42 ; 'B'
00000000000073f8         db  0x0e ; '.'
00000000000073f9         db  0x08 ; '.'
00000000000073fa         db  0x44 ; 'D'
00000000000073fb         db  0x0b ; '.'
00000000000073fc         db  0x60 ; '`'
00000000000073fd         db  0x0a ; '.'
00000000000073fe         db  0x0e ; '.'
00000000000073ff         db  0x18 ; '.'
0000000000007400         db  0x41 ; 'A'
0000000000007401         db  0x0e ; '.'
0000000000007402         db  0x10 ; '.'
0000000000007403         db  0x42 ; 'B'
0000000000007404         db  0x0e ; '.'
0000000000007405         db  0x08 ; '.'
0000000000007406         db  0x45 ; 'E'
0000000000007407         db  0x0b ; '.'
0000000000007408         dd         0x0000001c                                  ; Length of the record
000000000000740c         dd         0x00000be4                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000007410         db         0xe0, 0xe1, 2 dup (0xff)                    ; begin 0x55f0
0000000000007414         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x5630)
0000000000007418         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007419         db  0x44 ; 'D'
000000000000741a         db  0x0e ; '.'
000000000000741b         db  0x10 ; '.'
000000000000741c         db  0x83 ; '.'
000000000000741d         db  0x02 ; '.'
000000000000741e         db  0x5a ; 'Z'
000000000000741f         db  0x0a ; '.'
0000000000007420         db  0x0e ; '.'
0000000000007421         db  0x08 ; '.'
0000000000007422         db  0x4a ; 'J'
0000000000007423         db  0x0b ; '.'
0000000000007424         db  0x53 ; 'S'
0000000000007425         db  0x0e ; '.'
0000000000007426         db  0x08 ; '.'
0000000000007427         db  0x00 ; '.'
0000000000007428         dd         0x0000002c                                  ; Length of the record
000000000000742c         dd         0x00000c04                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000007430         db         0x00, 0xe2, 2 dup (0xff)                    ; begin 0x5630
0000000000007434         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x5687)
0000000000007438         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007439         db  0x63 ; 'c'
000000000000743a         db  0x0e ; '.'
000000000000743b         db  0x10 ; '.'
000000000000743c         db  0x8c ; '.'
000000000000743d         db  0x02 ; '.'
000000000000743e         db  0x41 ; 'A'
000000000000743f         db  0x0e ; '.'
0000000000007440         db  0x18 ; '.'
0000000000007441         db  0x86 ; '.'
0000000000007442         db  0x03 ; '.'
0000000000007443         db  0x44 ; 'D'
0000000000007444         db  0x0e ; '.'
0000000000007445         db  0x20 ; ' '
0000000000007446         db  0x83 ; '.'
0000000000007447         db  0x04 ; '.'
0000000000007448         db  0x6b ; 'k'
0000000000007449         db  0x0e ; '.'
000000000000744a         db  0x18 ; '.'
000000000000744b         db  0x41 ; 'A'
000000000000744c         db  0x0e ; '.'
000000000000744d         db  0x10 ; '.'
000000000000744e         db  0x42 ; 'B'
000000000000744f         db  0x0e ; '.'
0000000000007450         db  0x08 ; '.'
0000000000007451         db  0x00 ; '.'
0000000000007452         db  0x00 ; '.'
0000000000007453         db  0x00 ; '.'
0000000000007454         db  0x00 ; '.'
0000000000007455         db  0x00 ; '.'
0000000000007456         db  0x00 ; '.'
0000000000007457         db  0x00 ; '.'
0000000000007458         dd         0x00000044                                  ; Length of the record
000000000000745c         dd         0x00000c34                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
0000000000007460         db         0x30, 0xe2, 2 dup (0xff)                    ; begin 0x5690
0000000000007464         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x56f5)
0000000000007468         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007469         db  0x42 ; 'B'
000000000000746a         db  0x0e ; '.'
000000000000746b         db  0x10 ; '.'
000000000000746c         db  0x8f ; '.'
000000000000746d         db  0x02 ; '.'
000000000000746e         db  0x42 ; 'B'
000000000000746f         db  0x0e ; '.'
0000000000007470         db  0x18 ; '.'
0000000000007471         db  0x8e ; '.'
0000000000007472         db  0x03 ; '.'
0000000000007473         db  0x45 ; 'E'
0000000000007474         db  0x0e ; '.'
0000000000007475         db  0x20 ; ' '
0000000000007476         db  0x8d ; '.'
0000000000007477         db  0x04 ; '.'
0000000000007478         db  0x42 ; 'B'
0000000000007479         db  0x0e ; '.'
000000000000747a         db  0x28 ; '('
000000000000747b         db  0x8c ; '.'
000000000000747c         db  0x05 ; '.'
000000000000747d         db  0x48 ; 'H'
000000000000747e         db  0x0e ; '.'
000000000000747f         db  0x30 ; '0'
0000000000007480         db  0x86 ; '.'
0000000000007481         db  0x06 ; '.'
0000000000007482         db  0x48 ; 'H'
0000000000007483         db  0x0e ; '.'
0000000000007484         db  0x38 ; '8'
0000000000007485         db  0x83 ; '.'
0000000000007486         db  0x07 ; '.'
0000000000007487         db  0x4d ; 'M'
0000000000007488         db  0x0e ; '.'
0000000000007489         db  0x40 ; '@'
000000000000748a         db  0x72 ; 'r'
000000000000748b         db  0x0e ; '.'
000000000000748c         db  0x38 ; '8'
000000000000748d         db  0x41 ; 'A'
000000000000748e         db  0x0e ; '.'
000000000000748f         db  0x30 ; '0'
0000000000007490         db  0x41 ; 'A'
0000000000007491         db  0x0e ; '.'
0000000000007492         db  0x28 ; '('
0000000000007493         db  0x42 ; 'B'
0000000000007494         db  0x0e ; '.'
0000000000007495         db  0x20 ; ' '
0000000000007496         db  0x42 ; 'B'
0000000000007497         db  0x0e ; '.'
0000000000007498         db  0x18 ; '.'
0000000000007499         db  0x42 ; 'B'
000000000000749a         db  0x0e ; '.'
000000000000749b         db  0x10 ; '.'
000000000000749c         db  0x42 ; 'B'
000000000000749d         db  0x0e ; '.'
000000000000749e         db  0x08 ; '.'
000000000000749f         db  0x00 ; '.'
00000000000074a0         dd         0x00000014                                  ; Length of the record
00000000000074a4         dd         0x00000c7c                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
00000000000074a8         db         0x58, 0xe2, 2 dup (0xff)                    ; begin 0x5700
00000000000074ac         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x5702)
00000000000074b0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000074b1         align      8
00000000000074b8         dd         0x00000010                                  ; Length of the record
00000000000074bc         dd         0x00000c94                                  ; FDE: parent CIE at 0x6828 (FDE encoding = 0x1B)
00000000000074c0         db         0x50, 0xe2, 2 dup (0xff)                    ; begin 0x5710
00000000000074c4         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x571e)
00000000000074c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000074c9         align      16


        ; Segment Segment 3
        ; Range: [0x207b90; 0x208238[ (1704 bytes)
        ; File offset : [31632; 32896[ (1264 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x207b90; 0x207b98[ (8 bytes)
        ; File offset : [31632; 31640[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
0000000000207b90         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x207b98; 0x207ba0[ (8 bytes)
        ; File offset : [31640; 31648[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
0000000000207b98         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x207ba0; 0x207c58[ (184 bytes)
        ; File offset : [31648; 31832[ (184 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     long_options:
0000000000207ba0         db  0xc2 ; '.'                                         ; DATA XREF=parse_long_options+176, parse_gnu_standard_options_only+124
0000000000207ba1         db  0x5c ; '\'
0000000000207ba2         db  0x00 ; '.'
0000000000207ba3         db  0x00 ; '.'
0000000000207ba4         db  0x00 ; '.'
0000000000207ba5         db  0x00 ; '.'
0000000000207ba6         db  0x00 ; '.'
0000000000207ba7         db  0x00 ; '.'
0000000000207ba8         db  0x00 ; '.'
0000000000207ba9         db  0x00 ; '.'
0000000000207baa         db  0x00 ; '.'
0000000000207bab         db  0x00 ; '.'
0000000000207bac         db  0x00 ; '.'
0000000000207bad         db  0x00 ; '.'
0000000000207bae         db  0x00 ; '.'
0000000000207baf         db  0x00 ; '.'
0000000000207bb0         db  0x00 ; '.'
0000000000207bb1         db  0x00 ; '.'
0000000000207bb2         db  0x00 ; '.'
0000000000207bb3         db  0x00 ; '.'
0000000000207bb4         db  0x00 ; '.'
0000000000207bb5         db  0x00 ; '.'
0000000000207bb6         db  0x00 ; '.'
0000000000207bb7         db  0x00 ; '.'
0000000000207bb8         db  0x68 ; 'h'
0000000000207bb9         db  0x00 ; '.'
0000000000207bba         db  0x00 ; '.'
0000000000207bbb         db  0x00 ; '.'
0000000000207bbc         db  0x00 ; '.'
0000000000207bbd         db  0x00 ; '.'
0000000000207bbe         db  0x00 ; '.'
0000000000207bbf         db  0x00 ; '.'
0000000000207bc0         db  0xc7 ; '.'
0000000000207bc1         db  0x5c ; '\'
0000000000207bc2         db  0x00 ; '.'
0000000000207bc3         db  0x00 ; '.'
0000000000207bc4         db  0x00 ; '.'
0000000000207bc5         db  0x00 ; '.'
0000000000207bc6         db  0x00 ; '.'
0000000000207bc7         db  0x00 ; '.'
0000000000207bc8         db  0x00 ; '.'
0000000000207bc9         db  0x00 ; '.'
0000000000207bca         db  0x00 ; '.'
0000000000207bcb         db  0x00 ; '.'
0000000000207bcc         db  0x00 ; '.'
0000000000207bcd         db  0x00 ; '.'
0000000000207bce         db  0x00 ; '.'
0000000000207bcf         db  0x00 ; '.'
0000000000207bd0         db  0x00 ; '.'
0000000000207bd1         db  0x00 ; '.'
0000000000207bd2         db  0x00 ; '.'
0000000000207bd3         db  0x00 ; '.'
0000000000207bd4         db  0x00 ; '.'
0000000000207bd5         db  0x00 ; '.'
0000000000207bd6         db  0x00 ; '.'
0000000000207bd7         db  0x00 ; '.'
0000000000207bd8         db  0x76 ; 'v'
0000000000207bd9         db  0x00 ; '.'
0000000000207bda         db  0x00 ; '.'
0000000000207bdb         db  0x00 ; '.'
0000000000207bdc         db  0x00 ; '.'
0000000000207bdd         db  0x00 ; '.'
0000000000207bde         db  0x00 ; '.'
0000000000207bdf         db  0x00 ; '.'
0000000000207be0         db  0x00 ; '.'
0000000000207be1         db  0x00 ; '.'
0000000000207be2         db  0x00 ; '.'
0000000000207be3         db  0x00 ; '.'
0000000000207be4         db  0x00 ; '.'
0000000000207be5         db  0x00 ; '.'
0000000000207be6         db  0x00 ; '.'
0000000000207be7         db  0x00 ; '.'
0000000000207be8         db  0x00 ; '.'
0000000000207be9         db  0x00 ; '.'
0000000000207bea         db  0x00 ; '.'
0000000000207beb         db  0x00 ; '.'
0000000000207bec         db  0x00 ; '.'
0000000000207bed         db  0x00 ; '.'
0000000000207bee         db  0x00 ; '.'
0000000000207bef         db  0x00 ; '.'
0000000000207bf0         db  0x00 ; '.'
0000000000207bf1         db  0x00 ; '.'
0000000000207bf2         db  0x00 ; '.'
0000000000207bf3         db  0x00 ; '.'
0000000000207bf4         db  0x00 ; '.'
0000000000207bf5         db  0x00 ; '.'
0000000000207bf6         db  0x00 ; '.'
0000000000207bf7         db  0x00 ; '.'
0000000000207bf8         db  0x00 ; '.'
0000000000207bf9         db  0x00 ; '.'
0000000000207bfa         db  0x00 ; '.'
0000000000207bfb         db  0x00 ; '.'
0000000000207bfc         db  0x00 ; '.'
0000000000207bfd         db  0x00 ; '.'
0000000000207bfe         db  0x00 ; '.'
0000000000207bff         db  0x00 ; '.'
                     quoting_style_args:
0000000000207c00         db  0x29 ; ')'
0000000000207c01         db  0x5d ; ']'
0000000000207c02         db  0x00 ; '.'
0000000000207c03         db  0x00 ; '.'
0000000000207c04         db  0x00 ; '.'
0000000000207c05         db  0x00 ; '.'
0000000000207c06         db  0x00 ; '.'
0000000000207c07         db  0x00 ; '.'
0000000000207c08         db  0x31 ; '1'
0000000000207c09         db  0x5d ; ']'
0000000000207c0a         db  0x00 ; '.'
0000000000207c0b         db  0x00 ; '.'
0000000000207c0c         db  0x00 ; '.'
0000000000207c0d         db  0x00 ; '.'
0000000000207c0e         db  0x00 ; '.'
0000000000207c0f         db  0x00 ; '.'
0000000000207c10         db  0x37 ; '7'
0000000000207c11         db  0x5d ; ']'
0000000000207c12         db  0x00 ; '.'
0000000000207c13         db  0x00 ; '.'
0000000000207c14         db  0x00 ; '.'
0000000000207c15         db  0x00 ; '.'
0000000000207c16         db  0x00 ; '.'
0000000000207c17         db  0x00 ; '.'
0000000000207c18         db  0x44 ; 'D'
0000000000207c19         db  0x5d ; ']'
0000000000207c1a         db  0x00 ; '.'
0000000000207c1b         db  0x00 ; '.'
0000000000207c1c         db  0x00 ; '.'
0000000000207c1d         db  0x00 ; '.'
0000000000207c1e         db  0x00 ; '.'
0000000000207c1f         db  0x00 ; '.'
0000000000207c20         db  0x51 ; 'Q'
0000000000207c21         db  0x5d ; ']'
0000000000207c22         db  0x00 ; '.'
0000000000207c23         db  0x00 ; '.'
0000000000207c24         db  0x00 ; '.'
0000000000207c25         db  0x00 ; '.'
0000000000207c26         db  0x00 ; '.'
0000000000207c27         db  0x00 ; '.'
0000000000207c28         db  0x65 ; 'e'
0000000000207c29         db  0x5d ; ']'
0000000000207c2a         db  0x00 ; '.'
0000000000207c2b         db  0x00 ; '.'
0000000000207c2c         db  0x00 ; '.'
0000000000207c2d         db  0x00 ; '.'
0000000000207c2e         db  0x00 ; '.'
0000000000207c2f         db  0x00 ; '.'
0000000000207c30         db  0x67 ; 'g'
0000000000207c31         db  0x5d ; ']'
0000000000207c32         db  0x00 ; '.'
0000000000207c33         db  0x00 ; '.'
0000000000207c34         db  0x00 ; '.'
0000000000207c35         db  0x00 ; '.'
0000000000207c36         db  0x00 ; '.'
0000000000207c37         db  0x00 ; '.'
0000000000207c38         db  0x4a ; 'J'
0000000000207c39         db  0x5d ; ']'
0000000000207c3a         db  0x00 ; '.'
0000000000207c3b         db  0x00 ; '.'
0000000000207c3c         db  0x00 ; '.'
0000000000207c3d         db  0x00 ; '.'
0000000000207c3e         db  0x00 ; '.'
0000000000207c3f         db  0x00 ; '.'
0000000000207c40         db  0x0d ; '.'
0000000000207c41         db  0x58 ; 'X'
0000000000207c42         db  0x00 ; '.'
0000000000207c43         db  0x00 ; '.'
0000000000207c44         db  0x00 ; '.'
0000000000207c45         db  0x00 ; '.'
0000000000207c46         db  0x00 ; '.'
0000000000207c47         db  0x00 ; '.'
0000000000207c48         db  0x6f ; 'o'
0000000000207c49         db  0x5d ; ']'
0000000000207c4a         db  0x00 ; '.'
0000000000207c4b         db  0x00 ; '.'
0000000000207c4c         db  0x00 ; '.'
0000000000207c4d         db  0x00 ; '.'
0000000000207c4e         db  0x00 ; '.'
0000000000207c4f         db  0x00 ; '.'
0000000000207c50         db  0x00 ; '.'
0000000000207c51         db  0x00 ; '.'
0000000000207c52         db  0x00 ; '.'
0000000000207c53         db  0x00 ; '.'
0000000000207c54         db  0x00 ; '.'
0000000000207c55         db  0x00 ; '.'
0000000000207c56         db  0x00 ; '.'
0000000000207c57         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x207c58; 0x207e48[ (496 bytes)
        ; File offset : [31832; 32328[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
0000000000207c58         db  0x01 ; '.'
0000000000207c59         db  0x00 ; '.'
0000000000207c5a         db  0x00 ; '.'
0000000000207c5b         db  0x00 ; '.'
0000000000207c5c         db  0x00 ; '.'
0000000000207c5d         db  0x00 ; '.'
0000000000207c5e         db  0x00 ; '.'
0000000000207c5f         db  0x00 ; '.'
0000000000207c60         db  0x01 ; '.'
0000000000207c61         db  0x00 ; '.'
0000000000207c62         db  0x00 ; '.'
0000000000207c63         db  0x00 ; '.'
0000000000207c64         db  0x00 ; '.'
0000000000207c65         db  0x00 ; '.'
0000000000207c66         db  0x00 ; '.'
0000000000207c67         db  0x00 ; '.'
0000000000207c68         db  0x0c ; '.'
0000000000207c69         db  0x00 ; '.'
0000000000207c6a         db  0x00 ; '.'
0000000000207c6b         db  0x00 ; '.'
0000000000207c6c         db  0x00 ; '.'
0000000000207c6d         db  0x00 ; '.'
0000000000207c6e         db  0x00 ; '.'
0000000000207c6f         db  0x00 ; '.'
0000000000207c70         db  0xd0 ; '.'
0000000000207c71         db  0x12 ; '.'
0000000000207c72         db  0x00 ; '.'
0000000000207c73         db  0x00 ; '.'
0000000000207c74         db  0x00 ; '.'
0000000000207c75         db  0x00 ; '.'
0000000000207c76         db  0x00 ; '.'
0000000000207c77         db  0x00 ; '.'
0000000000207c78         db  0x0d ; '.'
0000000000207c79         db  0x00 ; '.'
0000000000207c7a         db  0x00 ; '.'
0000000000207c7b         db  0x00 ; '.'
0000000000207c7c         db  0x00 ; '.'
0000000000207c7d         db  0x00 ; '.'
0000000000207c7e         db  0x00 ; '.'
0000000000207c7f         db  0x00 ; '.'
0000000000207c80         db  0x20 ; ' '
0000000000207c81         db  0x57 ; 'W'
0000000000207c82         db  0x00 ; '.'
0000000000207c83         db  0x00 ; '.'
0000000000207c84         db  0x00 ; '.'
0000000000207c85         db  0x00 ; '.'
0000000000207c86         db  0x00 ; '.'
0000000000207c87         db  0x00 ; '.'
0000000000207c88         db  0x19 ; '.'
0000000000207c89         db  0x00 ; '.'
0000000000207c8a         db  0x00 ; '.'
0000000000207c8b         db  0x00 ; '.'
0000000000207c8c         db  0x00 ; '.'
0000000000207c8d         db  0x00 ; '.'
0000000000207c8e         db  0x00 ; '.'
0000000000207c8f         db  0x00 ; '.'
0000000000207c90         db  0x90 ; '.'
0000000000207c91         db  0x7b ; '{'
0000000000207c92         db  0x20 ; ' '
0000000000207c93         db  0x00 ; '.'
0000000000207c94         db  0x00 ; '.'
0000000000207c95         db  0x00 ; '.'
0000000000207c96         db  0x00 ; '.'
0000000000207c97         db  0x00 ; '.'
0000000000207c98         db  0x1b ; '.'
0000000000207c99         db  0x00 ; '.'
0000000000207c9a         db  0x00 ; '.'
0000000000207c9b         db  0x00 ; '.'
0000000000207c9c         db  0x00 ; '.'
0000000000207c9d         db  0x00 ; '.'
0000000000207c9e         db  0x00 ; '.'
0000000000207c9f         db  0x00 ; '.'
0000000000207ca0         db  0x08 ; '.'
0000000000207ca1         db  0x00 ; '.'
0000000000207ca2         db  0x00 ; '.'
0000000000207ca3         db  0x00 ; '.'
0000000000207ca4         db  0x00 ; '.'
0000000000207ca5         db  0x00 ; '.'
0000000000207ca6         db  0x00 ; '.'
0000000000207ca7         db  0x00 ; '.'
0000000000207ca8         db  0x1a ; '.'
0000000000207ca9         db  0x00 ; '.'
0000000000207caa         db  0x00 ; '.'
0000000000207cab         db  0x00 ; '.'
0000000000207cac         db  0x00 ; '.'
0000000000207cad         db  0x00 ; '.'
0000000000207cae         db  0x00 ; '.'
0000000000207caf         db  0x00 ; '.'
0000000000207cb0         db  0x98 ; '.'
0000000000207cb1         db  0x7b ; '{'
0000000000207cb2         db  0x20 ; ' '
0000000000207cb3         db  0x00 ; '.'
0000000000207cb4         db  0x00 ; '.'
0000000000207cb5         db  0x00 ; '.'
0000000000207cb6         db  0x00 ; '.'
0000000000207cb7         db  0x00 ; '.'
0000000000207cb8         db  0x1c ; '.'
0000000000207cb9         db  0x00 ; '.'
0000000000207cba         db  0x00 ; '.'
0000000000207cbb         db  0x00 ; '.'
0000000000207cbc         db  0x00 ; '.'
0000000000207cbd         db  0x00 ; '.'
0000000000207cbe         db  0x00 ; '.'
0000000000207cbf         db  0x00 ; '.'
0000000000207cc0         db  0x08 ; '.'
0000000000207cc1         db  0x00 ; '.'
0000000000207cc2         db  0x00 ; '.'
0000000000207cc3         db  0x00 ; '.'
0000000000207cc4         db  0x00 ; '.'
0000000000207cc5         db  0x00 ; '.'
0000000000207cc6         db  0x00 ; '.'
0000000000207cc7         db  0x00 ; '.'
0000000000207cc8         db  0xf5 ; '.'
0000000000207cc9         db  0xfe ; '.'
0000000000207cca         db  0xff ; '.'
0000000000207ccb         db  0x6f ; 'o'
0000000000207ccc         db  0x00 ; '.'
0000000000207ccd         db  0x00 ; '.'
0000000000207cce         db  0x00 ; '.'
0000000000207ccf         db  0x00 ; '.'
0000000000207cd0         db  0x98 ; '.'
0000000000207cd1         db  0x02 ; '.'
0000000000207cd2         db  0x00 ; '.'
0000000000207cd3         db  0x00 ; '.'
0000000000207cd4         db  0x00 ; '.'
0000000000207cd5         db  0x00 ; '.'
0000000000207cd6         db  0x00 ; '.'
0000000000207cd7         db  0x00 ; '.'
0000000000207cd8         db  0x05 ; '.'
0000000000207cd9         db  0x00 ; '.'
0000000000207cda         db  0x00 ; '.'
0000000000207cdb         db  0x00 ; '.'
0000000000207cdc         db  0x00 ; '.'
0000000000207cdd         db  0x00 ; '.'
0000000000207cde         db  0x00 ; '.'
0000000000207cdf         db  0x00 ; '.'
0000000000207ce0         db  0x68 ; 'h'
0000000000207ce1         db  0x08 ; '.'
0000000000207ce2         db  0x00 ; '.'
0000000000207ce3         db  0x00 ; '.'
0000000000207ce4         db  0x00 ; '.'
0000000000207ce5         db  0x00 ; '.'
0000000000207ce6         db  0x00 ; '.'
0000000000207ce7         db  0x00 ; '.'
0000000000207ce8         db  0x06 ; '.'
0000000000207ce9         db  0x00 ; '.'
0000000000207cea         db  0x00 ; '.'
0000000000207ceb         db  0x00 ; '.'
0000000000207cec         db  0x00 ; '.'
0000000000207ced         db  0x00 ; '.'
0000000000207cee         db  0x00 ; '.'
0000000000207cef         db  0x00 ; '.'
0000000000207cf0         db  0xe0 ; '.'
0000000000207cf1         db  0x02 ; '.'
0000000000207cf2         db  0x00 ; '.'
0000000000207cf3         db  0x00 ; '.'
0000000000207cf4         db  0x00 ; '.'
0000000000207cf5         db  0x00 ; '.'
0000000000207cf6         db  0x00 ; '.'
0000000000207cf7         db  0x00 ; '.'
0000000000207cf8         db  0x0a ; '.'
0000000000207cf9         db  0x00 ; '.'
0000000000207cfa         db  0x00 ; '.'
0000000000207cfb         db  0x00 ; '.'
0000000000207cfc         db  0x00 ; '.'
0000000000207cfd         db  0x00 ; '.'
0000000000207cfe         db  0x00 ; '.'
0000000000207cff         db  0x00 ; '.'
0000000000207d00         db  0xb7 ; '.'
0000000000207d01         db  0x02 ; '.'
0000000000207d02         db  0x00 ; '.'
0000000000207d03         db  0x00 ; '.'
0000000000207d04         db  0x00 ; '.'
0000000000207d05         db  0x00 ; '.'
0000000000207d06         db  0x00 ; '.'
0000000000207d07         db  0x00 ; '.'
0000000000207d08         db  0x0b ; '.'
0000000000207d09         db  0x00 ; '.'
0000000000207d0a         db  0x00 ; '.'
0000000000207d0b         db  0x00 ; '.'
0000000000207d0c         db  0x00 ; '.'
0000000000207d0d         db  0x00 ; '.'
0000000000207d0e         db  0x00 ; '.'
0000000000207d0f         db  0x00 ; '.'
0000000000207d10         db  0x18 ; '.'
0000000000207d11         db  0x00 ; '.'
0000000000207d12         db  0x00 ; '.'
0000000000207d13         db  0x00 ; '.'
0000000000207d14         db  0x00 ; '.'
0000000000207d15         db  0x00 ; '.'
0000000000207d16         db  0x00 ; '.'
0000000000207d17         db  0x00 ; '.'
0000000000207d18         db  0x15 ; '.'
0000000000207d19         db  0x00 ; '.'
0000000000207d1a         db  0x00 ; '.'
0000000000207d1b         db  0x00 ; '.'
0000000000207d1c         db  0x00 ; '.'
0000000000207d1d         db  0x00 ; '.'
0000000000207d1e         db  0x00 ; '.'
0000000000207d1f         db  0x00 ; '.'
0000000000207d20         db  0x00 ; '.'
0000000000207d21         db  0x00 ; '.'
0000000000207d22         db  0x00 ; '.'
0000000000207d23         db  0x00 ; '.'
0000000000207d24         db  0x00 ; '.'
0000000000207d25         db  0x00 ; '.'
0000000000207d26         db  0x00 ; '.'
0000000000207d27         db  0x00 ; '.'
0000000000207d28         db  0x03 ; '.'
0000000000207d29         db  0x00 ; '.'
0000000000207d2a         db  0x00 ; '.'
0000000000207d2b         db  0x00 ; '.'
0000000000207d2c         db  0x00 ; '.'
0000000000207d2d         db  0x00 ; '.'
0000000000207d2e         db  0x00 ; '.'
0000000000207d2f         db  0x00 ; '.'
0000000000207d30         db  0x48 ; 'H'
0000000000207d31         db  0x7e ; '~'
0000000000207d32         db  0x20 ; ' '
0000000000207d33         db  0x00 ; '.'
0000000000207d34         db  0x00 ; '.'
0000000000207d35         db  0x00 ; '.'
0000000000207d36         db  0x00 ; '.'
0000000000207d37         db  0x00 ; '.'
0000000000207d38         db  0x02 ; '.'
0000000000207d39         db  0x00 ; '.'
0000000000207d3a         db  0x00 ; '.'
0000000000207d3b         db  0x00 ; '.'
0000000000207d3c         db  0x00 ; '.'
0000000000207d3d         db  0x00 ; '.'
0000000000207d3e         db  0x00 ; '.'
0000000000207d3f         db  0x00 ; '.'
0000000000207d40         db  0x38 ; '8'
0000000000207d41         db  0x04 ; '.'
0000000000207d42         db  0x00 ; '.'
0000000000207d43         db  0x00 ; '.'
0000000000207d44         db  0x00 ; '.'
0000000000207d45         db  0x00 ; '.'
0000000000207d46         db  0x00 ; '.'
0000000000207d47         db  0x00 ; '.'
0000000000207d48         db  0x14 ; '.'
0000000000207d49         db  0x00 ; '.'
0000000000207d4a         db  0x00 ; '.'
0000000000207d4b         db  0x00 ; '.'
0000000000207d4c         db  0x00 ; '.'
0000000000207d4d         db  0x00 ; '.'
0000000000207d4e         db  0x00 ; '.'
0000000000207d4f         db  0x00 ; '.'
0000000000207d50         db  0x07 ; '.'
0000000000207d51         db  0x00 ; '.'
0000000000207d52         db  0x00 ; '.'
0000000000207d53         db  0x00 ; '.'
0000000000207d54         db  0x00 ; '.'
0000000000207d55         db  0x00 ; '.'
0000000000207d56         db  0x00 ; '.'
0000000000207d57         db  0x00 ; '.'
0000000000207d58         db  0x17 ; '.'
0000000000207d59         db  0x00 ; '.'
0000000000207d5a         db  0x00 ; '.'
0000000000207d5b         db  0x00 ; '.'
0000000000207d5c         db  0x00 ; '.'
0000000000207d5d         db  0x00 ; '.'
0000000000207d5e         db  0x00 ; '.'
0000000000207d5f         db  0x00 ; '.'
0000000000207d60         db  0x98 ; '.'
0000000000207d61         db  0x0e ; '.'
0000000000207d62         db  0x00 ; '.'
0000000000207d63         db  0x00 ; '.'
0000000000207d64         db  0x00 ; '.'
0000000000207d65         db  0x00 ; '.'
0000000000207d66         db  0x00 ; '.'
0000000000207d67         db  0x00 ; '.'
0000000000207d68         db  0x07 ; '.'
0000000000207d69         db  0x00 ; '.'
0000000000207d6a         db  0x00 ; '.'
0000000000207d6b         db  0x00 ; '.'
0000000000207d6c         db  0x00 ; '.'
0000000000207d6d         db  0x00 ; '.'
0000000000207d6e         db  0x00 ; '.'
0000000000207d6f         db  0x00 ; '.'
0000000000207d70         db  0xf8 ; '.'
0000000000207d71         db  0x0b ; '.'
0000000000207d72         db  0x00 ; '.'
0000000000207d73         db  0x00 ; '.'
0000000000207d74         db  0x00 ; '.'
0000000000207d75         db  0x00 ; '.'
0000000000207d76         db  0x00 ; '.'
0000000000207d77         db  0x00 ; '.'
0000000000207d78         db  0x08 ; '.'
0000000000207d79         db  0x00 ; '.'
0000000000207d7a         db  0x00 ; '.'
0000000000207d7b         db  0x00 ; '.'
0000000000207d7c         db  0x00 ; '.'
0000000000207d7d         db  0x00 ; '.'
0000000000207d7e         db  0x00 ; '.'
0000000000207d7f         db  0x00 ; '.'
0000000000207d80         db  0xa0 ; '.'
0000000000207d81         db  0x02 ; '.'
0000000000207d82         db  0x00 ; '.'
0000000000207d83         db  0x00 ; '.'
0000000000207d84         db  0x00 ; '.'
0000000000207d85         db  0x00 ; '.'
0000000000207d86         db  0x00 ; '.'
0000000000207d87         db  0x00 ; '.'
0000000000207d88         db  0x09 ; '.'
0000000000207d89         db  0x00 ; '.'
0000000000207d8a         db  0x00 ; '.'
0000000000207d8b         db  0x00 ; '.'
0000000000207d8c         db  0x00 ; '.'
0000000000207d8d         db  0x00 ; '.'
0000000000207d8e         db  0x00 ; '.'
0000000000207d8f         db  0x00 ; '.'
0000000000207d90         db  0x18 ; '.'
0000000000207d91         db  0x00 ; '.'
0000000000207d92         db  0x00 ; '.'
0000000000207d93         db  0x00 ; '.'
0000000000207d94         db  0x00 ; '.'
0000000000207d95         db  0x00 ; '.'
0000000000207d96         db  0x00 ; '.'
0000000000207d97         db  0x00 ; '.'
0000000000207d98         db  0x1e ; '.'
0000000000207d99         db  0x00 ; '.'
0000000000207d9a         db  0x00 ; '.'
0000000000207d9b         db  0x00 ; '.'
0000000000207d9c         db  0x00 ; '.'
0000000000207d9d         db  0x00 ; '.'
0000000000207d9e         db  0x00 ; '.'
0000000000207d9f         db  0x00 ; '.'
0000000000207da0         db  0x08 ; '.'
0000000000207da1         db  0x00 ; '.'
0000000000207da2         db  0x00 ; '.'
0000000000207da3         db  0x00 ; '.'
0000000000207da4         db  0x00 ; '.'
0000000000207da5         db  0x00 ; '.'
0000000000207da6         db  0x00 ; '.'
0000000000207da7         db  0x00 ; '.'
0000000000207da8         db  0xfb ; '.'
0000000000207da9         db  0xff ; '.'
0000000000207daa         db  0xff ; '.'
0000000000207dab         db  0x6f ; 'o'
0000000000207dac         db  0x00 ; '.'
0000000000207dad         db  0x00 ; '.'
0000000000207dae         db  0x00 ; '.'
0000000000207daf         db  0x00 ; '.'
0000000000207db0         db  0x01 ; '.'
0000000000207db1         db  0x00 ; '.'
0000000000207db2         db  0x00 ; '.'
0000000000207db3         db  0x08 ; '.'
0000000000207db4         db  0x00 ; '.'
0000000000207db5         db  0x00 ; '.'
0000000000207db6         db  0x00 ; '.'
0000000000207db7         db  0x00 ; '.'
0000000000207db8         db  0xfe ; '.'
0000000000207db9         db  0xff ; '.'
0000000000207dba         db  0xff ; '.'
0000000000207dbb         db  0x6f ; 'o'
0000000000207dbc         db  0x00 ; '.'
0000000000207dbd         db  0x00 ; '.'
0000000000207dbe         db  0x00 ; '.'
0000000000207dbf         db  0x00 ; '.'
0000000000207dc0         db  0x98 ; '.'
0000000000207dc1         db  0x0b ; '.'
0000000000207dc2         db  0x00 ; '.'
0000000000207dc3         db  0x00 ; '.'
0000000000207dc4         db  0x00 ; '.'
0000000000207dc5         db  0x00 ; '.'
0000000000207dc6         db  0x00 ; '.'
0000000000207dc7         db  0x00 ; '.'
0000000000207dc8         db  0xff ; '.'
0000000000207dc9         db  0xff ; '.'
0000000000207dca         db  0xff ; '.'
0000000000207dcb         db  0x6f ; 'o'
0000000000207dcc         db  0x00 ; '.'
0000000000207dcd         db  0x00 ; '.'
0000000000207dce         db  0x00 ; '.'
0000000000207dcf         db  0x00 ; '.'
0000000000207dd0         db  0x01 ; '.'
0000000000207dd1         db  0x00 ; '.'
0000000000207dd2         db  0x00 ; '.'
0000000000207dd3         db  0x00 ; '.'
0000000000207dd4         db  0x00 ; '.'
0000000000207dd5         db  0x00 ; '.'
0000000000207dd6         db  0x00 ; '.'
0000000000207dd7         db  0x00 ; '.'
0000000000207dd8         db  0xf0 ; '.'
0000000000207dd9         db  0xff ; '.'
0000000000207dda         db  0xff ; '.'
0000000000207ddb         db  0x6f ; 'o'
0000000000207ddc         db  0x00 ; '.'
0000000000207ddd         db  0x00 ; '.'
0000000000207dde         db  0x00 ; '.'
0000000000207ddf         db  0x00 ; '.'
0000000000207de0         db  0x20 ; ' '
0000000000207de1         db  0x0b ; '.'
0000000000207de2         db  0x00 ; '.'
0000000000207de3         db  0x00 ; '.'
0000000000207de4         db  0x00 ; '.'
0000000000207de5         db  0x00 ; '.'
0000000000207de6         db  0x00 ; '.'
0000000000207de7         db  0x00 ; '.'
0000000000207de8         db  0xf9 ; '.'
0000000000207de9         db  0xff ; '.'
0000000000207dea         db  0xff ; '.'
0000000000207deb         db  0x6f ; 'o'
0000000000207dec         db  0x00 ; '.'
0000000000207ded         db  0x00 ; '.'
0000000000207dee         db  0x00 ; '.'
0000000000207def         db  0x00 ; '.'
0000000000207df0         db  0x11 ; '.'
0000000000207df1         db  0x00 ; '.'
0000000000207df2         db  0x00 ; '.'
0000000000207df3         db  0x00 ; '.'
0000000000207df4         db  0x00 ; '.'
0000000000207df5         db  0x00 ; '.'
0000000000207df6         db  0x00 ; '.'
0000000000207df7         db  0x00 ; '.'
0000000000207df8         db  0x00 ; '.'
0000000000207df9         db  0x00 ; '.'
0000000000207dfa         db  0x00 ; '.'
0000000000207dfb         db  0x00 ; '.'
0000000000207dfc         db  0x00 ; '.'
0000000000207dfd         db  0x00 ; '.'
0000000000207dfe         db  0x00 ; '.'
0000000000207dff         db  0x00 ; '.'
0000000000207e00         db  0x00 ; '.'
0000000000207e01         db  0x00 ; '.'
0000000000207e02         db  0x00 ; '.'
0000000000207e03         db  0x00 ; '.'
0000000000207e04         db  0x00 ; '.'
0000000000207e05         db  0x00 ; '.'
0000000000207e06         db  0x00 ; '.'
0000000000207e07         db  0x00 ; '.'
0000000000207e08         db  0x00 ; '.'
0000000000207e09         db  0x00 ; '.'
0000000000207e0a         db  0x00 ; '.'
0000000000207e0b         db  0x00 ; '.'
0000000000207e0c         db  0x00 ; '.'
0000000000207e0d         db  0x00 ; '.'
0000000000207e0e         db  0x00 ; '.'
0000000000207e0f         db  0x00 ; '.'
0000000000207e10         db  0x00 ; '.'
0000000000207e11         db  0x00 ; '.'
0000000000207e12         db  0x00 ; '.'
0000000000207e13         db  0x00 ; '.'
0000000000207e14         db  0x00 ; '.'
0000000000207e15         db  0x00 ; '.'
0000000000207e16         db  0x00 ; '.'
0000000000207e17         db  0x00 ; '.'
0000000000207e18         db  0x00 ; '.'
0000000000207e19         db  0x00 ; '.'
0000000000207e1a         db  0x00 ; '.'
0000000000207e1b         db  0x00 ; '.'
0000000000207e1c         db  0x00 ; '.'
0000000000207e1d         db  0x00 ; '.'
0000000000207e1e         db  0x00 ; '.'
0000000000207e1f         db  0x00 ; '.'
0000000000207e20         db  0x00 ; '.'
0000000000207e21         db  0x00 ; '.'
0000000000207e22         db  0x00 ; '.'
0000000000207e23         db  0x00 ; '.'
0000000000207e24         db  0x00 ; '.'
0000000000207e25         db  0x00 ; '.'
0000000000207e26         db  0x00 ; '.'
0000000000207e27         db  0x00 ; '.'
0000000000207e28         db  0x00 ; '.'
0000000000207e29         db  0x00 ; '.'
0000000000207e2a         db  0x00 ; '.'
0000000000207e2b         db  0x00 ; '.'
0000000000207e2c         db  0x00 ; '.'
0000000000207e2d         db  0x00 ; '.'
0000000000207e2e         db  0x00 ; '.'
0000000000207e2f         db  0x00 ; '.'
0000000000207e30         db  0x00 ; '.'
0000000000207e31         db  0x00 ; '.'
0000000000207e32         db  0x00 ; '.'
0000000000207e33         db  0x00 ; '.'
0000000000207e34         db  0x00 ; '.'
0000000000207e35         db  0x00 ; '.'
0000000000207e36         db  0x00 ; '.'
0000000000207e37         db  0x00 ; '.'
0000000000207e38         db  0x00 ; '.'
0000000000207e39         db  0x00 ; '.'
0000000000207e3a         db  0x00 ; '.'
0000000000207e3b         db  0x00 ; '.'
0000000000207e3c         db  0x00 ; '.'
0000000000207e3d         db  0x00 ; '.'
0000000000207e3e         db  0x00 ; '.'
0000000000207e3f         db  0x00 ; '.'
0000000000207e40         db  0x00 ; '.'
0000000000207e41         db  0x00 ; '.'
0000000000207e42         db  0x00 ; '.'
0000000000207e43         db  0x00 ; '.'
0000000000207e44         db  0x00 ; '.'
0000000000207e45         db  0x00 ; '.'
0000000000207e46         db  0x00 ; '.'
0000000000207e47         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x207e48; 0x207ff0[ (424 bytes)
        ; File offset : [32328; 32752[ (424 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
0000000000207e48         db  0x58 ; 'X'
0000000000207e49         db  0x7c ; '|'
0000000000207e4a         db  0x20 ; ' '
0000000000207e4b         db  0x00 ; '.'
0000000000207e4c         db  0x00 ; '.'
0000000000207e4d         db  0x00 ; '.'
0000000000207e4e         db  0x00 ; '.'
0000000000207e4f         db  0x00 ; '.'
                     qword_207e50:
0000000000207e50         dq         0x0000000000000000                          ; DATA XREF=0x12f0
0000000000207e58         db  0x00 ; '.'
0000000000207e59         db  0x00 ; '.'
0000000000207e5a         db  0x00 ; '.'
0000000000207e5b         db  0x00 ; '.'
0000000000207e5c         db  0x00 ; '.'
0000000000207e5d         db  0x00 ; '.'
0000000000207e5e         db  0x00 ; '.'
0000000000207e5f         db  0x00 ; '.'
                     __snprintf_chk@GOT:        // __snprintf_chk
0000000000207e60         dq         0x0000000000208240                          ; DATA XREF=j___snprintf_chk
                     free@GOT:        // free
0000000000207e68         dq         0x0000000000208248                          ; DATA XREF=j_free
                     abort@GOT:        // abort
0000000000207e70         dq         0x0000000000208250                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
0000000000207e78         dq         0x0000000000208258                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
0000000000207e80         dq         0x0000000000208260                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
0000000000207e88         dq         0x0000000000208270                          ; DATA XREF=j__exit
                     __fpending@GOT:        // __fpending
0000000000207e90         dq         0x0000000000208278                          ; DATA XREF=j___fpending
                     puts@GOT:        // puts
0000000000207e98         dq         0x0000000000208280                          ; DATA XREF=j_puts
                     strtod@GOT:        // strtod
0000000000207ea0         dq         0x0000000000208288                          ; DATA XREF=j_strtod
                     textdomain@GOT:        // textdomain
0000000000207ea8         dq         0x0000000000208290                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
0000000000207eb0         dq         0x0000000000208298                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
0000000000207eb8         dq         0x00000000002082a0                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
0000000000207ec0         dq         0x00000000002082a8                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
0000000000207ec8         dq         0x00000000002082b0                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
0000000000207ed0         dq         0x00000000002082b8                          ; DATA XREF=j_strlen
                     __stack_chk_fail@GOT:        // __stack_chk_fail
0000000000207ed8         dq         0x00000000002082c0                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
0000000000207ee0         dq         0x00000000002082c8                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
0000000000207ee8         dq         0x00000000002082d0                          ; DATA XREF=j_mbrtowc
                     strrchr@GOT:        // strrchr
0000000000207ef0         dq         0x00000000002082d8                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
0000000000207ef8         dq         0x00000000002082e0                          ; DATA XREF=j_lseek
                     strtof@GOT:        // strtof
0000000000207f00         dq         0x00000000002082e8                          ; DATA XREF=j_strtof
                     memset@GOT:        // memset
0000000000207f08         dq         0x00000000002082f0                          ; DATA XREF=j_memset
                     memcmp@GOT:        // memcmp
0000000000207f10         dq         0x0000000000208300                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
0000000000207f18         dq         0x0000000000208308                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
0000000000207f20         dq         0x0000000000208310                          ; DATA XREF=j_calloc
                     memcpy@GOT:        // memcpy
0000000000207f28         dq         0x0000000000208320                          ; DATA XREF=j_memcpy
                     fileno@GOT:        // fileno
0000000000207f30         dq         0x0000000000208328                          ; DATA XREF=j_fileno
                     malloc@GOT:        // malloc
0000000000207f38         dq         0x0000000000208330                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
0000000000207f40         dq         0x0000000000208338                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
0000000000207f48         dq         0x0000000000208340                          ; DATA XREF=j_nl_langinfo
                     __freading@GOT:        // __freading
0000000000207f50         dq         0x0000000000208348                          ; DATA XREF=j___freading
                     realloc@GOT:        // realloc
0000000000207f58         dq         0x0000000000208350                          ; DATA XREF=j_realloc
                     setlocale@GOT:        // setlocale
0000000000207f60         dq         0x0000000000208358                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
0000000000207f68         dq         0x0000000000208360                          ; DATA XREF=j___printf_chk
                     strtold@GOT:        // strtold
0000000000207f70         dq         0x0000000000208368                          ; DATA XREF=j_strtold
                     error@GOT:        // error
0000000000207f78         dq         0x0000000000208370                          ; DATA XREF=j_error
                     fseeko@GOT:        // fseeko
0000000000207f80         dq         0x0000000000208378                          ; DATA XREF=j_fseeko
                     __cxa_atexit@GOT:        // __cxa_atexit
0000000000207f88         dq         0x0000000000208380                          ; DATA XREF=j___cxa_atexit
                     exit@GOT:        // exit
0000000000207f90         dq         0x0000000000208388                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
0000000000207f98         dq         0x0000000000208390                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
0000000000207fa0         dq         0x0000000000208398                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
0000000000207fa8         dq         0x00000000002083a8                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
0000000000207fb0         dq         0x00000000002083b0                          ; DATA XREF=j_iswprint
                     __ctype_b_loc@GOT:        // __ctype_b_loc
0000000000207fb8         dq         0x00000000002083c0                          ; DATA XREF=j___ctype_b_loc
                     __sprintf_chk@GOT:        // __sprintf_chk
0000000000207fc0         dq         0x00000000002083c8                          ; DATA XREF=j___sprintf_chk
                     qword_207fc8:
0000000000207fc8         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
0000000000207fd0         db  0x00 ; '.'                                         ; DATA XREF=_start+36
0000000000207fd1         db  0x00 ; '.'
0000000000207fd2         db  0x00 ; '.'
0000000000207fd3         db  0x00 ; '.'
0000000000207fd4         db  0x00 ; '.'
0000000000207fd5         db  0x00 ; '.'
0000000000207fd6         db  0x00 ; '.'
0000000000207fd7         db  0x00 ; '.'
                     qword_207fd8:
0000000000207fd8         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_207fe0:
0000000000207fe0         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_207fe8:
0000000000207fe8         dq         0x0000000000000000                          ; DATA XREF=j_qword_207fe8, __do_global_dtors_aux+9
0000000000207ff0         db  0x00 ; '.'
0000000000207ff1         db  0x00 ; '.'
0000000000207ff2         db  0x00 ; '.'
0000000000207ff3         db  0x00 ; '.'
0000000000207ff4         db  0x00 ; '.'
0000000000207ff5         db  0x00 ; '.'
0000000000207ff6         db  0x00 ; '.'
0000000000207ff7         db  0x00 ; '.'
0000000000207ff8         db  0x00 ; '.'
0000000000207ff9         db  0x00 ; '.'
0000000000207ffa         db  0x00 ; '.'
0000000000207ffb         db  0x00 ; '.'
0000000000207ffc         db  0x00 ; '.'
0000000000207ffd         db  0x00 ; '.'
0000000000207ffe         db  0x00 ; '.'
0000000000207fff         db  0x00 ; '.'


        ; Section .data
        ; Range: [0x208000; 0x208080[ (128 bytes)
        ; File offset : [32768; 32896[ (128 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

0000000000208000         db  0x00 ; '.'
0000000000208001         db  0x00 ; '.'
0000000000208002         db  0x00 ; '.'
0000000000208003         db  0x00 ; '.'
0000000000208004         db  0x00 ; '.'
0000000000208005         db  0x00 ; '.'
0000000000208006         db  0x00 ; '.'
0000000000208007         db  0x00 ; '.'
                     __dso_handle:
0000000000208008         dq         0x0000000000208008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     exit_failure:
0000000000208010         dd         0x00000001                                  ; DATA XREF=close_stdout+130, parse_gnu_standard_options_only+256, xalloc_die+23
0000000000208014         db  0x00 ; '.'
0000000000208015         db  0x00 ; '.'
0000000000208016         db  0x00 ; '.'
0000000000208017         db  0x00 ; '.'
0000000000208018         db  0x00 ; '.'
0000000000208019         db  0x00 ; '.'
000000000020801a         db  0x00 ; '.'
000000000020801b         db  0x00 ; '.'
000000000020801c         db  0x00 ; '.'
000000000020801d         db  0x00 ; '.'
000000000020801e         db  0x00 ; '.'
000000000020801f         db  0x00 ; '.'
                     quote_quoting_options:
0000000000208020         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
0000000000208021         db  0x00 ; '.'
0000000000208022         db  0x00 ; '.'
0000000000208023         db  0x00 ; '.'
0000000000208024         db  0x00 ; '.'
0000000000208025         db  0x00 ; '.'
0000000000208026         db  0x00 ; '.'
0000000000208027         db  0x00 ; '.'
0000000000208028         db  0x00 ; '.'
0000000000208029         db  0x00 ; '.'
000000000020802a         db  0x00 ; '.'
000000000020802b         db  0x00 ; '.'
000000000020802c         db  0x00 ; '.'
000000000020802d         db  0x00 ; '.'
000000000020802e         db  0x00 ; '.'
000000000020802f         db  0x00 ; '.'
0000000000208030         db  0x00 ; '.'
0000000000208031         db  0x00 ; '.'
0000000000208032         db  0x00 ; '.'
0000000000208033         db  0x00 ; '.'
0000000000208034         db  0x00 ; '.'
0000000000208035         db  0x00 ; '.'
0000000000208036         db  0x00 ; '.'
0000000000208037         db  0x00 ; '.'
0000000000208038         db  0x00 ; '.'
0000000000208039         db  0x00 ; '.'
000000000020803a         db  0x00 ; '.'
000000000020803b         db  0x00 ; '.'
000000000020803c         db  0x00 ; '.'
000000000020803d         db  0x00 ; '.'
000000000020803e         db  0x00 ; '.'
000000000020803f         db  0x00 ; '.'
0000000000208040         db  0x00 ; '.'
0000000000208041         db  0x00 ; '.'
0000000000208042         db  0x00 ; '.'
0000000000208043         db  0x00 ; '.'
0000000000208044         db  0x00 ; '.'
0000000000208045         db  0x00 ; '.'
0000000000208046         db  0x00 ; '.'
0000000000208047         db  0x00 ; '.'
0000000000208048         db  0x00 ; '.'
0000000000208049         db  0x00 ; '.'
000000000020804a         db  0x00 ; '.'
000000000020804b         db  0x00 ; '.'
000000000020804c         db  0x00 ; '.'
000000000020804d         db  0x00 ; '.'
000000000020804e         db  0x00 ; '.'
000000000020804f         db  0x00 ; '.'
0000000000208050         db  0x00 ; '.'
0000000000208051         db  0x00 ; '.'
0000000000208052         db  0x00 ; '.'
0000000000208053         db  0x00 ; '.'
0000000000208054         db  0x00 ; '.'
0000000000208055         db  0x00 ; '.'
0000000000208056         db  0x00 ; '.'
0000000000208057         db  0x00 ; '.'
                     nslots:
0000000000208058         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020805c         align      32
                     slotvec:
0000000000208060         dq         0x0000000000208070                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
0000000000208068         db  0x00 ; '.'
0000000000208069         db  0x00 ; '.'
000000000020806a         db  0x00 ; '.'
000000000020806b         db  0x00 ; '.'
000000000020806c         db  0x00 ; '.'
000000000020806d         db  0x00 ; '.'
000000000020806e         db  0x00 ; '.'
000000000020806f         db  0x00 ; '.'
                     slotvec0:
0000000000208070         dq         1.26481e-321, 1.05245e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec


        ; Section .bss
        ; Range: [0x208080; 0x208238[ (440 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
0000000000208080         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
0000000000208081         db  0x00 ; '.'
0000000000208082         db  0x00 ; '.'
0000000000208083         db  0x00 ; '.'
0000000000208084         db  0x00 ; '.'
0000000000208085         db  0x00 ; '.'
0000000000208086         db  0x00 ; '.'
0000000000208087         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
0000000000208088         db  0x00 ; '.'                                         ; DATA XREF=usage+125, usage+162, usage+199, usage+792, close_stdout+6, parse_long_options+231, parse_gnu_standard_options_only+186, emit_bug_reporting_address+90
0000000000208089         db  0x00 ; '.'
000000000020808a         db  0x00 ; '.'
000000000020808b         db  0x00 ; '.'
000000000020808c         db  0x00 ; '.'
000000000020808d         db  0x00 ; '.'
000000000020808e         db  0x00 ; '.'
000000000020808f         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
0000000000208090         db  0x00 ; '.'                                         ; DATA XREF=parse_long_options+141
0000000000208091         db  0x00 ; '.'
0000000000208092         db  0x00 ; '.'
0000000000208093         db  0x00 ; '.'
0000000000208094         db  0x00 ; '.'
0000000000208095         db  0x00 ; '.'
0000000000208096         db  0x00 ; '.'
0000000000208097         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
0000000000208098         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
0000000000208099         db  0x00 ; '.'
000000000020809a         db  0x00 ; '.'
000000000020809b         db  0x00 ; '.'
000000000020809c         db  0x00 ; '.'
000000000020809d         db  0x00 ; '.'
000000000020809e         db  0x00 ; '.'
000000000020809f         db  0x00 ; '.'
                     opterr@@GLIBC_2.2.5:
00000000002080a0         db  0x00 ; '.'                                         ; DATA XREF=parse_long_options+103, parse_long_options+109, parse_long_options+135, parse_gnu_standard_options_only+138, parse_gnu_standard_options_only+144, parse_gnu_standard_options_only+278
00000000002080a1         db  0x00 ; '.'
00000000002080a2         db  0x00 ; '.'
00000000002080a3         db  0x00 ; '.'
00000000002080a4         db  0x00 ; '.'
00000000002080a5         db  0x00 ; '.'
00000000002080a6         db  0x00 ; '.'
00000000002080a7         db  0x00 ; '.'
00000000002080a8         db  0x00 ; '.'
00000000002080a9         db  0x00 ; '.'
00000000002080aa         db  0x00 ; '.'
00000000002080ab         db  0x00 ; '.'
00000000002080ac         db  0x00 ; '.'
00000000002080ad         db  0x00 ; '.'
00000000002080ae         db  0x00 ; '.'
00000000002080af         db  0x00 ; '.'
00000000002080b0         db  0x00 ; '.'
00000000002080b1         db  0x00 ; '.'
00000000002080b2         db  0x00 ; '.'
00000000002080b3         db  0x00 ; '.'
00000000002080b4         db  0x00 ; '.'
00000000002080b5         db  0x00 ; '.'
00000000002080b6         db  0x00 ; '.'
00000000002080b7         db  0x00 ; '.'
00000000002080b8         db  0x00 ; '.'
00000000002080b9         db  0x00 ; '.'
00000000002080ba         db  0x00 ; '.'
00000000002080bb         db  0x00 ; '.'
00000000002080bc         db  0x00 ; '.'
00000000002080bd         db  0x00 ; '.'
00000000002080be         db  0x00 ; '.'
00000000002080bf         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
00000000002080c0         db  0x00 ; '.'                                         ; DATA XREF=usage+61, close_stdout+44, set_program_name+125
00000000002080c1         db  0x00 ; '.'
00000000002080c2         db  0x00 ; '.'
00000000002080c3         db  0x00 ; '.'
00000000002080c4         db  0x00 ; '.'
00000000002080c5         db  0x00 ; '.'
00000000002080c6         db  0x00 ; '.'
00000000002080c7         db  0x00 ; '.'
                     completed.7697:
00000000002080c8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
00000000002080c9         db  0x00 ; '.'
00000000002080ca         db  0x00 ; '.'
00000000002080cb         db  0x00 ; '.'
00000000002080cc         db  0x00 ; '.'
00000000002080cd         db  0x00 ; '.'
00000000002080ce         db  0x00 ; '.'
00000000002080cf         db  0x00 ; '.'
                     ignore_EPIPE:
00000000002080d0         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
00000000002080d1         db  0x00 ; '.'
00000000002080d2         db  0x00 ; '.'
00000000002080d3         db  0x00 ; '.'
00000000002080d4         db  0x00 ; '.'
00000000002080d5         db  0x00 ; '.'
00000000002080d6         db  0x00 ; '.'
00000000002080d7         db  0x00 ; '.'
                     file_name:
00000000002080d8         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
00000000002080d9         db  0x00 ; '.'
00000000002080da         db  0x00 ; '.'
00000000002080db         db  0x00 ; '.'
00000000002080dc         db  0x00 ; '.'
00000000002080dd         db  0x00 ; '.'
00000000002080de         db  0x00 ; '.'
00000000002080df         db  0x00 ; '.'
                     program_name:
00000000002080e0         db  0x00 ; '.'                                         ; DATA XREF=usage+20, set_program_name+109
00000000002080e1         db  0x00 ; '.'
00000000002080e2         db  0x00 ; '.'
00000000002080e3         db  0x00 ; '.'
00000000002080e4         db  0x00 ; '.'
00000000002080e5         db  0x00 ; '.'
00000000002080e6         db  0x00 ; '.'
00000000002080e7         db  0x00 ; '.'
00000000002080e8         db  0x00 ; '.'
00000000002080e9         db  0x00 ; '.'
00000000002080ea         db  0x00 ; '.'
00000000002080eb         db  0x00 ; '.'
00000000002080ec         db  0x00 ; '.'
00000000002080ed         db  0x00 ; '.'
00000000002080ee         db  0x00 ; '.'
00000000002080ef         db  0x00 ; '.'
00000000002080f0         db  0x00 ; '.'
00000000002080f1         db  0x00 ; '.'
00000000002080f2         db  0x00 ; '.'
00000000002080f3         db  0x00 ; '.'
00000000002080f4         db  0x00 ; '.'
00000000002080f5         db  0x00 ; '.'
00000000002080f6         db  0x00 ; '.'
00000000002080f7         db  0x00 ; '.'
00000000002080f8         db  0x00 ; '.'
00000000002080f9         db  0x00 ; '.'
00000000002080fa         db  0x00 ; '.'
00000000002080fb         db  0x00 ; '.'
00000000002080fc         db  0x00 ; '.'
00000000002080fd         db  0x00 ; '.'
00000000002080fe         db  0x00 ; '.'
00000000002080ff         db  0x00 ; '.'
                     slot0:
0000000000208100         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
0000000000208101         db  0x00 ; '.'
0000000000208102         db  0x00 ; '.'
0000000000208103         db  0x00 ; '.'
0000000000208104         db  0x00 ; '.'
0000000000208105         db  0x00 ; '.'
0000000000208106         db  0x00 ; '.'
0000000000208107         db  0x00 ; '.'
0000000000208108         db  0x00 ; '.'
0000000000208109         db  0x00 ; '.'
000000000020810a         db  0x00 ; '.'
000000000020810b         db  0x00 ; '.'
000000000020810c         db  0x00 ; '.'
000000000020810d         db  0x00 ; '.'
000000000020810e         db  0x00 ; '.'
000000000020810f         db  0x00 ; '.'
0000000000208110         db  0x00 ; '.'
0000000000208111         db  0x00 ; '.'
0000000000208112         db  0x00 ; '.'
0000000000208113         db  0x00 ; '.'
0000000000208114         db  0x00 ; '.'
0000000000208115         db  0x00 ; '.'
0000000000208116         db  0x00 ; '.'
0000000000208117         db  0x00 ; '.'
0000000000208118         db  0x00 ; '.'
0000000000208119         db  0x00 ; '.'
000000000020811a         db  0x00 ; '.'
000000000020811b         db  0x00 ; '.'
000000000020811c         db  0x00 ; '.'
000000000020811d         db  0x00 ; '.'
000000000020811e         db  0x00 ; '.'
000000000020811f         db  0x00 ; '.'
0000000000208120         db  0x00 ; '.'
0000000000208121         db  0x00 ; '.'
0000000000208122         db  0x00 ; '.'
0000000000208123         db  0x00 ; '.'
0000000000208124         db  0x00 ; '.'
0000000000208125         db  0x00 ; '.'
0000000000208126         db  0x00 ; '.'
0000000000208127         db  0x00 ; '.'
0000000000208128         db  0x00 ; '.'
0000000000208129         db  0x00 ; '.'
000000000020812a         db  0x00 ; '.'
000000000020812b         db  0x00 ; '.'
000000000020812c         db  0x00 ; '.'
000000000020812d         db  0x00 ; '.'
000000000020812e         db  0x00 ; '.'
000000000020812f         db  0x00 ; '.'
0000000000208130         db  0x00 ; '.'
0000000000208131         db  0x00 ; '.'
0000000000208132         db  0x00 ; '.'
0000000000208133         db  0x00 ; '.'
0000000000208134         db  0x00 ; '.'
0000000000208135         db  0x00 ; '.'
0000000000208136         db  0x00 ; '.'
0000000000208137         db  0x00 ; '.'
0000000000208138         db  0x00 ; '.'
0000000000208139         db  0x00 ; '.'
000000000020813a         db  0x00 ; '.'
000000000020813b         db  0x00 ; '.'
000000000020813c         db  0x00 ; '.'
000000000020813d         db  0x00 ; '.'
000000000020813e         db  0x00 ; '.'
000000000020813f         db  0x00 ; '.'
0000000000208140         db  0x00 ; '.'
0000000000208141         db  0x00 ; '.'
0000000000208142         db  0x00 ; '.'
0000000000208143         db  0x00 ; '.'
0000000000208144         db  0x00 ; '.'
0000000000208145         db  0x00 ; '.'
0000000000208146         db  0x00 ; '.'
0000000000208147         db  0x00 ; '.'
0000000000208148         db  0x00 ; '.'
0000000000208149         db  0x00 ; '.'
000000000020814a         db  0x00 ; '.'
000000000020814b         db  0x00 ; '.'
000000000020814c         db  0x00 ; '.'
000000000020814d         db  0x00 ; '.'
000000000020814e         db  0x00 ; '.'
000000000020814f         db  0x00 ; '.'
0000000000208150         db  0x00 ; '.'
0000000000208151         db  0x00 ; '.'
0000000000208152         db  0x00 ; '.'
0000000000208153         db  0x00 ; '.'
0000000000208154         db  0x00 ; '.'
0000000000208155         db  0x00 ; '.'
0000000000208156         db  0x00 ; '.'
0000000000208157         db  0x00 ; '.'
0000000000208158         db  0x00 ; '.'
0000000000208159         db  0x00 ; '.'
000000000020815a         db  0x00 ; '.'
000000000020815b         db  0x00 ; '.'
000000000020815c         db  0x00 ; '.'
000000000020815d         db  0x00 ; '.'
000000000020815e         db  0x00 ; '.'
000000000020815f         db  0x00 ; '.'
0000000000208160         db  0x00 ; '.'
0000000000208161         db  0x00 ; '.'
0000000000208162         db  0x00 ; '.'
0000000000208163         db  0x00 ; '.'
0000000000208164         db  0x00 ; '.'
0000000000208165         db  0x00 ; '.'
0000000000208166         db  0x00 ; '.'
0000000000208167         db  0x00 ; '.'
0000000000208168         db  0x00 ; '.'
0000000000208169         db  0x00 ; '.'
000000000020816a         db  0x00 ; '.'
000000000020816b         db  0x00 ; '.'
000000000020816c         db  0x00 ; '.'
000000000020816d         db  0x00 ; '.'
000000000020816e         db  0x00 ; '.'
000000000020816f         db  0x00 ; '.'
0000000000208170         db  0x00 ; '.'
0000000000208171         db  0x00 ; '.'
0000000000208172         db  0x00 ; '.'
0000000000208173         db  0x00 ; '.'
0000000000208174         db  0x00 ; '.'
0000000000208175         db  0x00 ; '.'
0000000000208176         db  0x00 ; '.'
0000000000208177         db  0x00 ; '.'
0000000000208178         db  0x00 ; '.'
0000000000208179         db  0x00 ; '.'
000000000020817a         db  0x00 ; '.'
000000000020817b         db  0x00 ; '.'
000000000020817c         db  0x00 ; '.'
000000000020817d         db  0x00 ; '.'
000000000020817e         db  0x00 ; '.'
000000000020817f         db  0x00 ; '.'
0000000000208180         db  0x00 ; '.'
0000000000208181         db  0x00 ; '.'
0000000000208182         db  0x00 ; '.'
0000000000208183         db  0x00 ; '.'
0000000000208184         db  0x00 ; '.'
0000000000208185         db  0x00 ; '.'
0000000000208186         db  0x00 ; '.'
0000000000208187         db  0x00 ; '.'
0000000000208188         db  0x00 ; '.'
0000000000208189         db  0x00 ; '.'
000000000020818a         db  0x00 ; '.'
000000000020818b         db  0x00 ; '.'
000000000020818c         db  0x00 ; '.'
000000000020818d         db  0x00 ; '.'
000000000020818e         db  0x00 ; '.'
000000000020818f         db  0x00 ; '.'
0000000000208190         db  0x00 ; '.'
0000000000208191         db  0x00 ; '.'
0000000000208192         db  0x00 ; '.'
0000000000208193         db  0x00 ; '.'
0000000000208194         db  0x00 ; '.'
0000000000208195         db  0x00 ; '.'
0000000000208196         db  0x00 ; '.'
0000000000208197         db  0x00 ; '.'
0000000000208198         db  0x00 ; '.'
0000000000208199         db  0x00 ; '.'
000000000020819a         db  0x00 ; '.'
000000000020819b         db  0x00 ; '.'
000000000020819c         db  0x00 ; '.'
000000000020819d         db  0x00 ; '.'
000000000020819e         db  0x00 ; '.'
000000000020819f         db  0x00 ; '.'
00000000002081a0         db  0x00 ; '.'
00000000002081a1         db  0x00 ; '.'
00000000002081a2         db  0x00 ; '.'
00000000002081a3         db  0x00 ; '.'
00000000002081a4         db  0x00 ; '.'
00000000002081a5         db  0x00 ; '.'
00000000002081a6         db  0x00 ; '.'
00000000002081a7         db  0x00 ; '.'
00000000002081a8         db  0x00 ; '.'
00000000002081a9         db  0x00 ; '.'
00000000002081aa         db  0x00 ; '.'
00000000002081ab         db  0x00 ; '.'
00000000002081ac         db  0x00 ; '.'
00000000002081ad         db  0x00 ; '.'
00000000002081ae         db  0x00 ; '.'
00000000002081af         db  0x00 ; '.'
00000000002081b0         db  0x00 ; '.'
00000000002081b1         db  0x00 ; '.'
00000000002081b2         db  0x00 ; '.'
00000000002081b3         db  0x00 ; '.'
00000000002081b4         db  0x00 ; '.'
00000000002081b5         db  0x00 ; '.'
00000000002081b6         db  0x00 ; '.'
00000000002081b7         db  0x00 ; '.'
00000000002081b8         db  0x00 ; '.'
00000000002081b9         db  0x00 ; '.'
00000000002081ba         db  0x00 ; '.'
00000000002081bb         db  0x00 ; '.'
00000000002081bc         db  0x00 ; '.'
00000000002081bd         db  0x00 ; '.'
00000000002081be         db  0x00 ; '.'
00000000002081bf         db  0x00 ; '.'
00000000002081c0         db  0x00 ; '.'
00000000002081c1         db  0x00 ; '.'
00000000002081c2         db  0x00 ; '.'
00000000002081c3         db  0x00 ; '.'
00000000002081c4         db  0x00 ; '.'
00000000002081c5         db  0x00 ; '.'
00000000002081c6         db  0x00 ; '.'
00000000002081c7         db  0x00 ; '.'
00000000002081c8         db  0x00 ; '.'
00000000002081c9         db  0x00 ; '.'
00000000002081ca         db  0x00 ; '.'
00000000002081cb         db  0x00 ; '.'
00000000002081cc         db  0x00 ; '.'
00000000002081cd         db  0x00 ; '.'
00000000002081ce         db  0x00 ; '.'
00000000002081cf         db  0x00 ; '.'
00000000002081d0         db  0x00 ; '.'
00000000002081d1         db  0x00 ; '.'
00000000002081d2         db  0x00 ; '.'
00000000002081d3         db  0x00 ; '.'
00000000002081d4         db  0x00 ; '.'
00000000002081d5         db  0x00 ; '.'
00000000002081d6         db  0x00 ; '.'
00000000002081d7         db  0x00 ; '.'
00000000002081d8         db  0x00 ; '.'
00000000002081d9         db  0x00 ; '.'
00000000002081da         db  0x00 ; '.'
00000000002081db         db  0x00 ; '.'
00000000002081dc         db  0x00 ; '.'
00000000002081dd         db  0x00 ; '.'
00000000002081de         db  0x00 ; '.'
00000000002081df         db  0x00 ; '.'
00000000002081e0         db  0x00 ; '.'
00000000002081e1         db  0x00 ; '.'
00000000002081e2         db  0x00 ; '.'
00000000002081e3         db  0x00 ; '.'
00000000002081e4         db  0x00 ; '.'
00000000002081e5         db  0x00 ; '.'
00000000002081e6         db  0x00 ; '.'
00000000002081e7         db  0x00 ; '.'
00000000002081e8         db  0x00 ; '.'
00000000002081e9         db  0x00 ; '.'
00000000002081ea         db  0x00 ; '.'
00000000002081eb         db  0x00 ; '.'
00000000002081ec         db  0x00 ; '.'
00000000002081ed         db  0x00 ; '.'
00000000002081ee         db  0x00 ; '.'
00000000002081ef         db  0x00 ; '.'
00000000002081f0         db  0x00 ; '.'
00000000002081f1         db  0x00 ; '.'
00000000002081f2         db  0x00 ; '.'
00000000002081f3         db  0x00 ; '.'
00000000002081f4         db  0x00 ; '.'
00000000002081f5         db  0x00 ; '.'
00000000002081f6         db  0x00 ; '.'
00000000002081f7         db  0x00 ; '.'
00000000002081f8         db  0x00 ; '.'
00000000002081f9         db  0x00 ; '.'
00000000002081fa         db  0x00 ; '.'
00000000002081fb         db  0x00 ; '.'
00000000002081fc         db  0x00 ; '.'
00000000002081fd         db  0x00 ; '.'
00000000002081fe         db  0x00 ; '.'
00000000002081ff         db  0x00 ; '.'
                     default_quoting_options:
0000000000208200         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
0000000000208201         db  0x00 ; '.'
0000000000208202         db  0x00 ; '.'
0000000000208203         db  0x00 ; '.'
0000000000208204         db  0x00 ; '.'
0000000000208205         db  0x00 ; '.'
0000000000208206         db  0x00 ; '.'
0000000000208207         db  0x00 ; '.'
0000000000208208         db  0x00 ; '.'
0000000000208209         db  0x00 ; '.'
000000000020820a         db  0x00 ; '.'
000000000020820b         db  0x00 ; '.'
000000000020820c         db  0x00 ; '.'
000000000020820d         db  0x00 ; '.'
000000000020820e         db  0x00 ; '.'
000000000020820f         db  0x00 ; '.'
0000000000208210         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
0000000000208211         db  0x00 ; '.'
0000000000208212         db  0x00 ; '.'
0000000000208213         db  0x00 ; '.'
0000000000208214         db  0x00 ; '.'
0000000000208215         db  0x00 ; '.'
0000000000208216         db  0x00 ; '.'
0000000000208217         db  0x00 ; '.'
0000000000208218         db  0x00 ; '.'
0000000000208219         db  0x00 ; '.'
000000000020821a         db  0x00 ; '.'
000000000020821b         db  0x00 ; '.'
000000000020821c         db  0x00 ; '.'
000000000020821d         db  0x00 ; '.'
000000000020821e         db  0x00 ; '.'
000000000020821f         db  0x00 ; '.'
0000000000208220         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
0000000000208221         db  0x00 ; '.'
0000000000208222         db  0x00 ; '.'
0000000000208223         db  0x00 ; '.'
0000000000208224         db  0x00 ; '.'
0000000000208225         db  0x00 ; '.'
0000000000208226         db  0x00 ; '.'
0000000000208227         db  0x00 ; '.'
0000000000208228         db  0x00 ; '.'
0000000000208229         db  0x00 ; '.'
000000000020822a         db  0x00 ; '.'
000000000020822b         db  0x00 ; '.'
000000000020822c         db  0x00 ; '.'
000000000020822d         db  0x00 ; '.'
000000000020822e         db  0x00 ; '.'
000000000020822f         db  0x00 ; '.'
                     qword_208230:
0000000000208230         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
0000000000208231         db  0x00 ; '.'
0000000000208232         db  0x00 ; '.'
0000000000208233         db  0x00 ; '.'
0000000000208234         db  0x00 ; '.'
0000000000208235         db  0x00 ; '.'
0000000000208236         db  0x00 ; '.'
0000000000208237         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x208240; 0x208560[ (800 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x208240; 0x4107a0[ (2131296 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     __snprintf_chk:
0000000000208240         extern function code                                   ; DATA XREF=__snprintf_chk@GOT
                     free:
0000000000208248         extern function code                                   ; DATA XREF=free@GOT
                     abort:
0000000000208250         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
0000000000208258         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
0000000000208260         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
0000000000208268         extern function code
                     _exit:
0000000000208270         extern function code                                   ; DATA XREF=_exit@GOT
                     __fpending:
0000000000208278         extern function code                                   ; DATA XREF=__fpending@GOT
                     puts:
0000000000208280         extern function code                                   ; DATA XREF=puts@GOT
                     strtod:
0000000000208288         extern function code                                   ; DATA XREF=strtod@GOT
                     textdomain:
0000000000208290         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
0000000000208298         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
00000000002082a0         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
00000000002082a8         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
00000000002082b0         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
00000000002082b8         extern function code                                   ; DATA XREF=strlen@GOT
                     __stack_chk_fail:
00000000002082c0         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
00000000002082c8         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
00000000002082d0         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     strrchr:
00000000002082d8         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
00000000002082e0         extern function code                                   ; DATA XREF=lseek@GOT
                     strtof:
00000000002082e8         extern function code                                   ; DATA XREF=strtof@GOT
                     memset:
00000000002082f0         extern function code                                   ; DATA XREF=memset@GOT
                     __libc_start_main:
00000000002082f8         extern function code
                     memcmp:
0000000000208300         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
0000000000208308         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
0000000000208310         extern function code                                   ; DATA XREF=calloc@GOT
                     __gmon_start__:
0000000000208318         extern function code
                     memcpy:
0000000000208320         extern function code                                   ; DATA XREF=memcpy@GOT
                     fileno:
0000000000208328         extern function code                                   ; DATA XREF=fileno@GOT
                     malloc:
0000000000208330         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
0000000000208338         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
0000000000208340         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __freading:
0000000000208348         extern function code                                   ; DATA XREF=__freading@GOT
                     realloc:
0000000000208350         extern function code                                   ; DATA XREF=realloc@GOT
                     setlocale:
0000000000208358         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
0000000000208360         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     strtold:
0000000000208368         extern function code                                   ; DATA XREF=strtold@GOT
                     error:
0000000000208370         extern function code                                   ; DATA XREF=error@GOT
                     fseeko:
0000000000208378         extern function code                                   ; DATA XREF=fseeko@GOT
                     __cxa_atexit:
0000000000208380         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     exit:
0000000000208388         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
0000000000208390         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
0000000000208398         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
00000000002083a0         extern function code
                     mbsinit:
00000000002083a8         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
00000000002083b0         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
00000000002083b8         extern function code
                     __ctype_b_loc:
00000000002083c0         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     __sprintf_chk:
00000000002083c8         extern function code                                   ; DATA XREF=__sprintf_chk@GOT
                     __snprintf_chk@@GLIBC_2.3.4:
00000000002083d0         extern function code
                     free@@GLIBC_2.2.5:
00000000002083d8         extern function code
                     abort@@GLIBC_2.2.5:
00000000002083e0         extern function code
                     __errno_location@@GLIBC_2.2.5:
00000000002083e8         extern function code
                     strncmp@@GLIBC_2.2.5:
00000000002083f0         extern function code
                     _ITM_deregisterTMCloneTable_2083f8:        // _ITM_deregisterTMCloneTable
00000000002083f8         extern function code
                     _exit@@GLIBC_2.2.5:
0000000000208400         extern function code
                     __fpending@@GLIBC_2.2.5:
0000000000208408         extern function code
                     puts@@GLIBC_2.2.5:
0000000000208410         extern function code
                     strtod@@GLIBC_2.2.5:
0000000000208418         extern function code
                     textdomain@@GLIBC_2.2.5:
0000000000208420         extern function code
                     fclose@@GLIBC_2.2.5:
0000000000208428         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
0000000000208430         extern function code
                     dcgettext@@GLIBC_2.2.5:
0000000000208438         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
0000000000208440         extern function code
                     strlen@@GLIBC_2.2.5:
0000000000208448         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
0000000000208450         extern function code
                     getopt_long@@GLIBC_2.2.5:
0000000000208458         extern function code
                     mbrtowc@@GLIBC_2.2.5:
0000000000208460         extern function code
                     strrchr@@GLIBC_2.2.5:
0000000000208468         extern function code
                     lseek@@GLIBC_2.2.5:
0000000000208470         extern function code
                     strtof@@GLIBC_2.2.5:
0000000000208478         extern function code
                     memset@@GLIBC_2.2.5:
0000000000208480         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
0000000000208488         extern function code
                     memcmp@@GLIBC_2.2.5:
0000000000208490         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
0000000000208498         extern function code
                     calloc@@GLIBC_2.2.5:
00000000002084a0         extern function code
                     __gmon_start___2084a8:        // __gmon_start__
00000000002084a8         extern function code
                     memcpy@@GLIBC_2.14:
00000000002084b0         extern function code
                     fileno@@GLIBC_2.2.5:
00000000002084b8         extern function code
                     malloc@@GLIBC_2.2.5:
00000000002084c0         extern function code
                     fflush@@GLIBC_2.2.5:
00000000002084c8         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
00000000002084d0         extern function code
                     __freading@@GLIBC_2.2.5:
00000000002084d8         extern function code
                     realloc@@GLIBC_2.2.5:
00000000002084e0         extern function code
                     setlocale@@GLIBC_2.2.5:
00000000002084e8         extern function code
                     __printf_chk@@GLIBC_2.3.4:
00000000002084f0         extern function code
                     strtold@@GLIBC_2.2.5:
00000000002084f8         extern function code
                     error@@GLIBC_2.2.5:
0000000000208500         extern function code
                     fseeko@@GLIBC_2.2.5:
0000000000208508         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
0000000000208510         extern function code
                     exit@@GLIBC_2.2.5:
0000000000208518         extern function code
                     fwrite@@GLIBC_2.2.5:
0000000000208520         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
0000000000208528         extern function code
                     _ITM_registerTMCloneTable_208530:        // _ITM_registerTMCloneTable
0000000000208530         extern function code
                     mbsinit@@GLIBC_2.2.5:
0000000000208538         extern function code
                     iswprint@@GLIBC_2.2.5:
0000000000208540         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
0000000000208548         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
0000000000208550         extern function code
                     __sprintf_chk@@GLIBC_2.3.4:
0000000000208558         extern function code
