
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/rmdir
        UUID: 09F005C0-B6FF-5B68-E017-D1330CD5C5B2
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0x8b20[ (35616 bytes)
        ; File offset : [0; 35616[ (35616 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0x20 ; ' '
0000000000000019         db  0x1a ; '.'
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0x00 ; '.'
0000000000000029         db  0x07 ; '.'
000000000000002a         db  0x03 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0x20 ; ' '
00000000000000d1         db  0x8b ; '.'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0x20 ; ' '
00000000000000d9         db  0x8b ; '.'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0xf0 ; '.'
00000000000000f1         db  0x9a ; '.'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0xf0 ; '.'
00000000000000f9         db  0x9a ; '.'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0xf0 ; '.'                                         ; DATA XREF=quotearg_free+87, rpl_fflush+18, slotvec0
0000000000000101         db  0x9a ; '.'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0x90 ; '.'
0000000000000109         db  0x05 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0x28 ; '('
0000000000000111         db  0x07 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0x38 ; '8'
0000000000000129         db  0x9c ; '.'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0x38 ; '8'
0000000000000131         db  0x9c ; '.'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0x38 ; '8'
0000000000000139         db  0x9c ; '.'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0x2c ; ','
0000000000000199         db  0x7c ; '|'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0x2c ; ','
00000000000001a1         db  0x7c ; '|'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0x2c ; ','
00000000000001a9         db  0x7c ; '|'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0x8c ; '.'
00000000000001b1         db  0x02 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0x8c ; '.'
00000000000001b9         db  0x02 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0xf0 ; '.'
0000000000000209         db  0x9a ; '.'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0xf0 ; '.'
0000000000000211         db  0x9a ; '.'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0xf0 ; '.'
0000000000000219         db  0x9a ; '.'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0x10 ; '.'
0000000000000221         db  0x05 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0x10 ; '.'
0000000000000229         db  0x05 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0x09 ; '.'
0000000000000285         db  0xf0 ; '.'
0000000000000286         db  0x05 ; '.'
0000000000000287         db  0xc0 ; '.'
0000000000000288         db  0xb6 ; '.'
0000000000000289         db  0xff ; '.'
000000000000028a         db  0x5b ; '['
000000000000028b         db  0x68 ; 'h'
000000000000028c         db  0xe0 ; '.'
000000000000028d         db  0x17 ; '.'
000000000000028e         db  0xd1 ; '.'
000000000000028f         db  0x33 ; '3'
0000000000000290         db  0x0c ; '.'
0000000000000291         db  0xd5 ; '.'
0000000000000292         db  0xc5 ; '.'
0000000000000293         db  0xb2 ; '.'
0000000000000294         db  0x1b ; '.'
0000000000000295         db  0x00 ; '.'
0000000000000296         db  0x21 ; '!'
0000000000000297         db  0xc8 ; '.'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2d8[ (64 bytes)
        ; File offset : [664; 728[ (64 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x36 ; '6'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'
00000000000002a9         db  0x49 ; 'I'
00000000000002aa         db  0x41 ; 'A'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0x20 ; ' '
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x18 ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x36 ; '6'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x37 ; '7'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x3c ; '<'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x96 ; '.'
00000000000002c5         db  0xa0 ; '.'
00000000000002c6         db  0x89 ; '.'
00000000000002c7         db  0x97 ; '.'
00000000000002c8         db  0xce ; '.'
00000000000002c9         db  0x2c ; ','
00000000000002ca         db  0x63 ; 'c'
00000000000002cb         db  0x72 ; 'r'
00000000000002cc         db  0xe4 ; '.'
00000000000002cd         db  0x62 ; 'b'
00000000000002ce         db  0x41 ; 'A'
00000000000002cf         db  0xf5 ; '.'
00000000000002d0         db  0x39 ; '9'
00000000000002d1         db  0xf2 ; '.'
00000000000002d2         db  0x8b ; '.'
00000000000002d3         db  0x1c ; '.'
00000000000002d4         db  0x33 ; '3'
00000000000002d5         db  0xc4 ; '.'
00000000000002d6         db  0xf7 ; '.'
00000000000002d7         db  0x12 ; '.'


        ; Section .dynsym
        ; Range: [0x2d8; 0x890[ (1464 bytes)
        ; File offset : [728; 2192[ (1464 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002d8         db  0x00 ; '.'
00000000000002d9         db  0x00 ; '.'
00000000000002da         db  0x00 ; '.'
00000000000002db         db  0x00 ; '.'
00000000000002dc         db  0x00 ; '.'
00000000000002dd         db  0x00 ; '.'
00000000000002de         db  0x00 ; '.'
00000000000002df         db  0x00 ; '.'
00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x67 ; 'g'
00000000000002f1         db  0x01 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x12 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0x00 ; '.'
00000000000002f9         db  0x00 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x00 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x21 ; '!'
0000000000000309         db  0x02 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x12 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x00 ; '.'
0000000000000311         db  0x00 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x00 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x8b ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x12 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0x00 ; '.'
0000000000000329         db  0x00 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x00 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0xe1 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x12 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0x00 ; '.'
0000000000000341         db  0x00 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x00 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x39 ; '9'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x12 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0x00 ; '.'
0000000000000359         db  0x00 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x00 ; '.'
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x85 ; '.'
0000000000000369         db  0x02 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x20 ; ' '
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0x00 ; '.'
0000000000000371         db  0x00 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x00 ; '.'
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x91 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x12 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0x00 ; '.'
0000000000000389         db  0x00 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x00 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x90 ; '.'
0000000000000399         db  0x01 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x12 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0x00 ; '.'
00000000000003a1         db  0x00 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x00 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0xd3 ; '.'
00000000000003b1         db  0x01 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x12 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0x00 ; '.'
00000000000003b9         db  0x00 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x00 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x1b ; '.'
00000000000003c9         db  0x01 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x12 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0x00 ; '.'
00000000000003d1         db  0x00 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x00 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0xcf ; '.'
00000000000003e1         db  0x01 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x12 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0x00 ; '.'
00000000000003e9         db  0x00 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x00 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0xdb ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x12 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0x00 ; '.'
0000000000000401         db  0x00 ; '.'
0000000000000402         db  0x00 ; '.'
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x00 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'
0000000000000407         db  0x00 ; '.'
0000000000000408         db  0x00 ; '.'                                         ; DATA XREF=vasnprintf+29
0000000000000409         db  0x00 ; '.'
000000000000040a         db  0x00 ; '.'
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x50 ; 'P'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x12 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0x00 ; '.'
0000000000000419         db  0x00 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x00 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0xaf ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x12 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0x00 ; '.'
0000000000000431         db  0x00 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x00 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0xcd ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x12 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0x00 ; '.'
0000000000000449         db  0x00 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x00 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0xc8 ; '.'
0000000000000459         db  0x01 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x12 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0x00 ; '.'
0000000000000461         db  0x00 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x00 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x69 ; 'i'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x12 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x00 ; '.'
0000000000000479         db  0x00 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x00 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x76 ; 'v'
0000000000000489         db  0x01 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x12 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0x00 ; '.'
0000000000000491         db  0x00 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x00 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x31 ; '1'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x12 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x00 ; '.'
00000000000004a9         db  0x00 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x00 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x07 ; '.'
00000000000004b9         db  0x02 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x12 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0x00 ; '.'
00000000000004c1         db  0x00 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x00 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x48 ; 'H'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x12 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x00 ; '.'
00000000000004d9         db  0x00 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x00 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x0e ; '.'
00000000000004e9         db  0x01 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x12 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0x00 ; '.'
00000000000004f1         db  0x00 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x00 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0xd4 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x12 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0x00 ; '.'
0000000000000509         db  0x00 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x00 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x1c ; '.'
0000000000000519         db  0x01 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x12 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0x00 ; '.'
0000000000000521         db  0x00 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x00 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x5a ; 'Z'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x12 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0x00 ; '.'
0000000000000539         db  0x00 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x00 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0xee ; '.'
0000000000000549         db  0x01 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x12 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0x00 ; '.'
0000000000000551         db  0x00 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x00 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0xf2 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x12 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0x00 ; '.'
0000000000000569         db  0x00 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x00 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x12 ; '.'
0000000000000579         db  0x02 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x12 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0x00 ; '.'
0000000000000581         db  0x00 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x00 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0xc6 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x12 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0x00 ; '.'
0000000000000599         db  0x00 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x00 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0xa1 ; '.'
00000000000005a9         db  0x02 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x20 ; ' '
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0x00 ; '.'
00000000000005b1         db  0x00 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x00 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x14 ; '.'
00000000000005c1         db  0x01 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x12 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0x00 ; '.'
00000000000005c9         db  0x00 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x00 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x82 ; '.'
00000000000005d9         db  0x01 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x12 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0x00 ; '.'
00000000000005e1         db  0x00 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x00 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x1f ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x12 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x00 ; '.'
00000000000005f9         db  0x00 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x00 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x22 ; '"'
0000000000000609         db  0x01 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x12 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x00 ; '.'
0000000000000611         db  0x00 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x00 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x0b ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x12 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0x00 ; '.'
0000000000000629         db  0x00 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x00 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x3b ; ';'
0000000000000639         db  0x01 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x12 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x00 ; '.'
0000000000000641         db  0x00 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x00 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x55 ; 'U'
0000000000000651         db  0x01 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x12 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x00 ; '.'
0000000000000659         db  0x00 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x00 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0xde ; '.'
0000000000000669         db  0x01 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x12 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x00 ; '.'
0000000000000671         db  0x00 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x00 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x83 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x12 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0x00 ; '.'
0000000000000689         db  0x00 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x00 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x27 ; '''
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x12 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x00 ; '.'
00000000000006a1         db  0x00 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x00 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x12 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x12 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x00 ; '.'
00000000000006b9         db  0x00 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x00 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x63 ; 'c'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x12 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x00 ; '.'
00000000000006d1         db  0x00 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x00 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x02 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x12 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0x00 ; '.'
00000000000006e9         db  0x00 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x00 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x29 ; ')'
00000000000006f9         db  0x01 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x12 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x00 ; '.'
0000000000000701         db  0x00 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x00 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x41 ; 'A'
0000000000000711         db  0x02 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x12 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x00 ; '.'
0000000000000719         db  0x00 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x00 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x92 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x12 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x00 ; '.'
0000000000000731         db  0x00 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x00 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x89 ; '.'
0000000000000741         db  0x01 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x12 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0x00 ; '.'
0000000000000749         db  0x00 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x00 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0xf9 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x12 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0x00 ; '.'
0000000000000761         db  0x00 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x00 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0xb0 ; '.'
0000000000000771         db  0x02 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x20 ; ' '
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0x00 ; '.'
0000000000000779         db  0x00 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x00 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x33 ; '3'
0000000000000789         db  0x01 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x12 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x00 ; '.'
0000000000000791         db  0x00 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x00 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x7a ; 'z'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x12 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0x00 ; '.'
00000000000007a9         db  0x00 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x00 ; '.'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0xb9 ; '.'
00000000000007b9         db  0x01 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x22 ; '"'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0x00 ; '.'
00000000000007c1         db  0x00 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x00 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x47 ; 'G'                                         ; DATA XREF=rpl_vfprintf+29
00000000000007d1         db  0x01 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x12 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x00 ; '.'
00000000000007d9         db  0x00 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x00 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x07 ; '.'
00000000000007e9         db  0x01 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x11 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x19 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0x88 ; '.'
00000000000007f1         db  0xa0 ; '.'
00000000000007f2         db  0x20 ; ' '
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x00 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x00 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x08 ; '.'                                         ; DATA XREF=rpl_vfprintf+12, rpl_vfprintf+155
00000000000007f9         db  0x00 ; '.'
00000000000007fa         db  0x00 ; '.'
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x26 ; '&'
0000000000000801         db  0x02 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x11 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x19 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x80 ; '.'
0000000000000809         db  0xa0 ; '.'
000000000000080a         db  0x20 ; ' '
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x00 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x00 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0x08 ; '.'
0000000000000811         db  0x00 ; '.'
0000000000000812         db  0x00 ; '.'
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x97 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x21 ; '!'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x19 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0x98 ; '.'
0000000000000821         db  0xa0 ; '.'
0000000000000822         db  0x20 ; ' '
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x00 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x00 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0x08 ; '.'
0000000000000829         db  0x00 ; '.'
000000000000082a         db  0x00 ; '.'
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x31 ; '1'
0000000000000831         db  0x02 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x11 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x19 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x98 ; '.'
0000000000000839         db  0xa0 ; '.'
000000000000083a         db  0x20 ; ' '
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x00 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x00 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0x08 ; '.'
0000000000000841         db  0x00 ; '.'
0000000000000842         db  0x00 ; '.'
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x9b ; '.'
0000000000000849         db  0x01 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x21 ; '!'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x19 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0x80 ; '.'
0000000000000851         db  0xa0 ; '.'
0000000000000852         db  0x20 ; ' '
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x00 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x00 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0x08 ; '.'
0000000000000859         db  0x00 ; '.'
000000000000085a         db  0x00 ; '.'
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x60 ; '`'
0000000000000861         db  0x01 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x11 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x19 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0xa0 ; '.'
0000000000000869         db  0xa0 ; '.'
000000000000086a         db  0x20 ; ' '
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x00 ; '.'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x00 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0x08 ; '.'
0000000000000871         db  0x00 ; '.'
0000000000000872         db  0x00 ; '.'
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x41 ; 'A'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x11 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x19 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0x90 ; '.'
0000000000000881         db  0xa0 ; '.'
0000000000000882         db  0x20 ; ' '
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x00 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x00 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0x04 ; '.'
0000000000000889         db  0x00 ; '.'
000000000000088a         db  0x00 ; '.'
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0x890; 0xb5a[ (714 bytes)
        ; File offset : [2192; 2906[ (714 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

0000000000000890         db  0x00 ; '.'
0000000000000891         db  0x6c ; 'l'
0000000000000892         db  0x69 ; 'i'
0000000000000893         db  0x62 ; 'b'
0000000000000894         db  0x63 ; 'c'
0000000000000895         db  0x2e ; '.'
0000000000000896         db  0x73 ; 's'
0000000000000897         db  0x6f ; 'o'
0000000000000898         db  0x2e ; '.'
0000000000000899         db  0x36 ; '6'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x66 ; 'f'
000000000000089c         db  0x66 ; 'f'
000000000000089d         db  0x6c ; 'l'
000000000000089e         db  0x75 ; 'u'
000000000000089f         db  0x73 ; 's'
00000000000008a0         db  0x68 ; 'h'
00000000000008a1         db  0x00 ; '.'
00000000000008a2         db  0x5f ; '_'
00000000000008a3         db  0x5f ; '_'
00000000000008a4         db  0x70 ; 'p'
00000000000008a5         db  0x72 ; 'r'
00000000000008a6         db  0x69 ; 'i'
00000000000008a7         db  0x6e ; 'n'
00000000000008a8         db  0x74 ; 't'
00000000000008a9         db  0x66 ; 'f'
00000000000008aa         db  0x5f ; '_'
00000000000008ab         db  0x63 ; 'c'
00000000000008ac         db  0x68 ; 'h'
00000000000008ad         db  0x6b ; 'k'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x72 ; 'r'
00000000000008b0         db  0x65 ; 'e'
00000000000008b1         db  0x61 ; 'a'
00000000000008b2         db  0x64 ; 'd'
00000000000008b3         db  0x64 ; 'd'
00000000000008b4         db  0x69 ; 'i'
00000000000008b5         db  0x72 ; 'r'
00000000000008b6         db  0x00 ; '.'
00000000000008b7         db  0x73 ; 's'
00000000000008b8         db  0x65 ; 'e'
00000000000008b9         db  0x74 ; 't'
00000000000008ba         db  0x6c ; 'l'
00000000000008bb         db  0x6f ; 'o'
00000000000008bc         db  0x63 ; 'c'
00000000000008bd         db  0x61 ; 'a'
00000000000008be         db  0x6c ; 'l'
00000000000008bf         db  0x65 ; 'e'
00000000000008c0         db  0x00 ; '.'
00000000000008c1         db  0x6d ; 'm'
00000000000008c2         db  0x62 ; 'b'
00000000000008c3         db  0x72 ; 'r'
00000000000008c4         db  0x74 ; 't'
00000000000008c5         db  0x6f ; 'o'
00000000000008c6         db  0x77 ; 'w'
00000000000008c7         db  0x63 ; 'c'
00000000000008c8         db  0x00 ; '.'
00000000000008c9         db  0x73 ; 's'
00000000000008ca         db  0x74 ; 't'
00000000000008cb         db  0x72 ; 'r'
00000000000008cc         db  0x6e ; 'n'
00000000000008cd         db  0x63 ; 'c'
00000000000008ce         db  0x6d ; 'm'
00000000000008cf         db  0x70 ; 'p'
00000000000008d0         db  0x00 ; '.'
00000000000008d1         db  0x6f ; 'o'
00000000000008d2         db  0x70 ; 'p'
00000000000008d3         db  0x74 ; 't'
00000000000008d4         db  0x69 ; 'i'
00000000000008d5         db  0x6e ; 'n'
00000000000008d6         db  0x64 ; 'd'
00000000000008d7         db  0x00 ; '.'
00000000000008d8         db  0x73 ; 's'
00000000000008d9         db  0x74 ; 't'
00000000000008da         db  0x72 ; 'r'
00000000000008db         db  0x72 ; 'r'
00000000000008dc         db  0x63 ; 'c'
00000000000008dd         db  0x68 ; 'h'
00000000000008de         db  0x72 ; 'r'
00000000000008df         db  0x00 ; '.'
00000000000008e0         db  0x64 ; 'd'
00000000000008e1         db  0x63 ; 'c'
00000000000008e2         db  0x67 ; 'g'
00000000000008e3         db  0x65 ; 'e'
00000000000008e4         db  0x74 ; 't'
00000000000008e5         db  0x74 ; 't'
00000000000008e6         db  0x65 ; 'e'
00000000000008e7         db  0x78 ; 'x'
00000000000008e8         db  0x74 ; 't'
00000000000008e9         db  0x00 ; '.'
00000000000008ea         db  0x63 ; 'c'
00000000000008eb         db  0x6c ; 'l'
00000000000008ec         db  0x6f ; 'o'
00000000000008ed         db  0x73 ; 's'
00000000000008ee         db  0x65 ; 'e'
00000000000008ef         db  0x64 ; 'd'
00000000000008f0         db  0x69 ; 'i'
00000000000008f1         db  0x72 ; 'r'
00000000000008f2         db  0x00 ; '.'
00000000000008f3         db  0x65 ; 'e'
00000000000008f4         db  0x72 ; 'r'
00000000000008f5         db  0x72 ; 'r'
00000000000008f6         db  0x6f ; 'o'
00000000000008f7         db  0x72 ; 'r'
00000000000008f8         db  0x00 ; '.'
00000000000008f9         db  0x5f ; '_'
00000000000008fa         db  0x5f ; '_'
00000000000008fb         db  0x73 ; 's'
00000000000008fc         db  0x74 ; 't'
00000000000008fd         db  0x61 ; 'a'
00000000000008fe         db  0x63 ; 'c'
00000000000008ff         db  0x6b ; 'k'
                     aChkfail:
0000000000000900         db         "_chk_fail", 0
000000000000090a         db  0x69 ; 'i'
000000000000090b         db  0x73 ; 's'
000000000000090c         db  0x77 ; 'w'
000000000000090d         db  0x70 ; 'p'
000000000000090e         db  0x72 ; 'r'
000000000000090f         db  0x69 ; 'i'
0000000000000910         db  0x6e ; 'n'
0000000000000911         db  0x74 ; 't'
0000000000000912         db  0x00 ; '.'
0000000000000913         db  0x72 ; 'r'
0000000000000914         db  0x65 ; 'e'
0000000000000915         db  0x61 ; 'a'
0000000000000916         db  0x6c ; 'l'
0000000000000917         db  0x6c ; 'l'
0000000000000918         db  0x6f ; 'o'
0000000000000919         db  0x63 ; 'c'
000000000000091a         db  0x00 ; '.'
000000000000091b         db  0x61 ; 'a'
000000000000091c         db  0x62 ; 'b'
000000000000091d         db  0x6f ; 'o'
000000000000091e         db  0x72 ; 'r'
000000000000091f         db  0x74 ; 't'
0000000000000920         db  0x00 ; '.'
0000000000000921         db  0x5f ; '_'
0000000000000922         db  0x65 ; 'e'
0000000000000923         db  0x78 ; 'x'
0000000000000924         db  0x69 ; 'i'
0000000000000925         db  0x74 ; 't'
0000000000000926         db  0x00 ; '.'
0000000000000927         db  0x70 ; 'p'
0000000000000928         db  0x72 ; 'r'
0000000000000929         db  0x6f ; 'o'
000000000000092a         db  0x67 ; 'g'
000000000000092b         db  0x72 ; 'r'
000000000000092c         db  0x61 ; 'a'
000000000000092d         db  0x6d ; 'm'
000000000000092e         db  0x5f ; '_'
000000000000092f         db  0x69 ; 'i'
0000000000000930         db  0x6e ; 'n'
0000000000000931         db  0x76 ; 'v'
0000000000000932         db  0x6f ; 'o'
0000000000000933         db  0x63 ; 'c'
0000000000000934         db  0x61 ; 'a'
0000000000000935         db  0x74 ; 't'
0000000000000936         db  0x69 ; 'i'
0000000000000937         db  0x6f ; 'o'
0000000000000938         db  0x6e ; 'n'
0000000000000939         db  0x5f ; '_'
000000000000093a         db  0x6e ; 'n'
000000000000093b         db  0x61 ; 'a'
000000000000093c         db  0x6d ; 'm'
000000000000093d         db  0x65 ; 'e'
000000000000093e         db  0x00 ; '.'
000000000000093f         db  0x5f ; '_'
0000000000000940         db  0x5f ; '_'
0000000000000941         db  0x63 ; 'c'
0000000000000942         db  0x74 ; 't'
0000000000000943         db  0x79 ; 'y'
0000000000000944         db  0x70 ; 'p'
0000000000000945         db  0x65 ; 'e'
0000000000000946         db  0x5f ; '_'
0000000000000947         db  0x67 ; 'g'
0000000000000948         db  0x65 ; 'e'
0000000000000949         db  0x74 ; 't'
000000000000094a         db  0x5f ; '_'
000000000000094b         db  0x6d ; 'm'
000000000000094c         db  0x62 ; 'b'
000000000000094d         db  0x5f ; '_'
000000000000094e         db  0x63 ; 'c'
000000000000094f         db  0x75 ; 'u'
0000000000000950         db  0x72 ; 'r'
0000000000000951         db  0x5f ; '_'
0000000000000952         db  0x6d ; 'm'
0000000000000953         db  0x61 ; 'a'
0000000000000954         db  0x78 ; 'x'
0000000000000955         db  0x00 ; '.'
0000000000000956         db  0x63 ; 'c'
0000000000000957         db  0x61 ; 'a'
0000000000000958         db  0x6c ; 'l'
0000000000000959         db  0x6c ; 'l'
000000000000095a         db  0x6f ; 'o'
000000000000095b         db  0x63 ; 'c'
000000000000095c         db  0x00 ; '.'
000000000000095d         db  0x73 ; 's'
000000000000095e         db  0x74 ; 't'
000000000000095f         db  0x72 ; 'r'
0000000000000960         db  0x6c ; 'l'
0000000000000961         db  0x65 ; 'e'
0000000000000962         db  0x6e ; 'n'
0000000000000963         db  0x00 ; '.'
0000000000000964         db  0x6d ; 'm'
0000000000000965         db  0x65 ; 'e'
0000000000000966         db  0x6d ; 'm'
0000000000000967         db  0x73 ; 's'
0000000000000968         db  0x65 ; 'e'
0000000000000969         db  0x74 ; 't'
000000000000096a         db  0x00 ; '.'
000000000000096b         db  0x72 ; 'r'
000000000000096c         db  0x6d ; 'm'
000000000000096d         db  0x64 ; 'd'
000000000000096e         db  0x69 ; 'i'
000000000000096f         db  0x72 ; 'r'
0000000000000970         db  0x00 ; '.'
0000000000000971         db  0x5f ; '_'
0000000000000972         db  0x5f ; '_'
0000000000000973         db  0x65 ; 'e'
0000000000000974         db  0x72 ; 'r'
0000000000000975         db  0x72 ; 'r'
0000000000000976         db  0x6e ; 'n'
0000000000000977         db  0x6f ; 'o'
0000000000000978         db  0x5f ; '_'
0000000000000979         db  0x6c ; 'l'
000000000000097a         db  0x6f ; 'o'
000000000000097b         db  0x63 ; 'c'
000000000000097c         db  0x61 ; 'a'
000000000000097d         db  0x74 ; 't'
000000000000097e         db  0x69 ; 'i'
000000000000097f         db  0x6f ; 'o'
0000000000000980         db  0x6e ; 'n'
0000000000000981         db  0x00 ; '.'
0000000000000982         db  0x6d ; 'm'
0000000000000983         db  0x65 ; 'e'
0000000000000984         db  0x6d ; 'm'
0000000000000985         db  0x63 ; 'c'
0000000000000986         db  0x6d ; 'm'
0000000000000987         db  0x70 ; 'p'
0000000000000988         db  0x00 ; '.'
0000000000000989         db  0x5f ; '_'
000000000000098a         db  0x5f ; '_'
000000000000098b         db  0x66 ; 'f'
000000000000098c         db  0x70 ; 'p'
000000000000098d         db  0x72 ; 'r'
000000000000098e         db  0x69 ; 'i'
000000000000098f         db  0x6e ; 'n'
0000000000000990         db  0x74 ; 't'
0000000000000991         db  0x66 ; 'f'
0000000000000992         db  0x5f ; '_'
0000000000000993         db  0x63 ; 'c'
0000000000000994         db  0x68 ; 'h'
0000000000000995         db  0x6b ; 'k'
0000000000000996         db  0x00 ; '.'
0000000000000997         db  0x73 ; 's'
0000000000000998         db  0x74 ; 't'
0000000000000999         db  0x64 ; 'd'
000000000000099a         db  0x6f ; 'o'
000000000000099b         db  0x75 ; 'u'
000000000000099c         db  0x74 ; 't'
000000000000099d         db  0x00 ; '.'
000000000000099e         db  0x6c ; 'l'
000000000000099f         db  0x73 ; 's'
00000000000009a0         db  0x65 ; 'e'
00000000000009a1         db  0x65 ; 'e'
00000000000009a2         db  0x6b ; 'k'
00000000000009a3         db  0x00 ; '.'
00000000000009a4         db  0x6d ; 'm'
00000000000009a5         db  0x65 ; 'e'
00000000000009a6         db  0x6d ; 'm'
00000000000009a7         db  0x63 ; 'c'
00000000000009a8         db  0x70 ; 'p'
00000000000009a9         db  0x79 ; 'y'
00000000000009aa         db  0x00 ; '.'
00000000000009ab         db  0x66 ; 'f'
00000000000009ac         db  0x63 ; 'c'
00000000000009ad         db  0x6c ; 'l'
00000000000009ae         db  0x6f ; 'o'
00000000000009af         db  0x73 ; 's'
00000000000009b0         db  0x65 ; 'e'
00000000000009b1         db  0x00 ; '.'
00000000000009b2         db  0x6d ; 'm'
00000000000009b3         db  0x61 ; 'a'
00000000000009b4         db  0x6c ; 'l'
00000000000009b5         db  0x6c ; 'l'
00000000000009b6         db  0x6f ; 'o'
00000000000009b7         db  0x63 ; 'c'
00000000000009b8         db  0x00 ; '.'
00000000000009b9         db  0x66 ; 'f'
00000000000009ba         db  0x64 ; 'd'
00000000000009bb         db  0x6f ; 'o'
00000000000009bc         db  0x70 ; 'p'
00000000000009bd         db  0x65 ; 'e'
00000000000009be         db  0x6e ; 'n'
00000000000009bf         db  0x64 ; 'd'
00000000000009c0         db  0x69 ; 'i'
00000000000009c1         db  0x72 ; 'r'
00000000000009c2         db  0x00 ; '.'
00000000000009c3         db  0x6d ; 'm'
00000000000009c4         db  0x62 ; 'b'
00000000000009c5         db  0x73 ; 's'
00000000000009c6         db  0x69 ; 'i'
00000000000009c7         db  0x6e ; 'n'
00000000000009c8         db  0x69 ; 'i'
00000000000009c9         db  0x74 ; 't'
00000000000009ca         db  0x00 ; '.'
00000000000009cb         db  0x6e ; 'n'
00000000000009cc         db  0x6c ; 'l'
00000000000009cd         db  0x5f ; '_'
00000000000009ce         db  0x6c ; 'l'
00000000000009cf         db  0x61 ; 'a'
00000000000009d0         db  0x6e ; 'n'
00000000000009d1         db  0x67 ; 'g'
00000000000009d2         db  0x69 ; 'i'
00000000000009d3         db  0x6e ; 'n'
00000000000009d4         db  0x66 ; 'f'
00000000000009d5         db  0x6f ; 'o'
00000000000009d6         db  0x00 ; '.'
00000000000009d7         db  0x5f ; '_'
00000000000009d8         db  0x5f ; '_'
00000000000009d9         db  0x63 ; 'c'
00000000000009da         db  0x74 ; 't'
00000000000009db         db  0x79 ; 'y'
00000000000009dc         db  0x70 ; 'p'
00000000000009dd         db  0x65 ; 'e'
00000000000009de         db  0x5f ; '_'
00000000000009df         db  0x62 ; 'b'
00000000000009e0         db  0x5f ; '_'
00000000000009e1         db  0x6c ; 'l'
00000000000009e2         db  0x6f ; 'o'
00000000000009e3         db  0x63 ; 'c'
00000000000009e4         db  0x00 ; '.'
00000000000009e5         db  0x5f ; '_'
00000000000009e6         db  0x5f ; '_'
00000000000009e7         db  0x66 ; 'f'
00000000000009e8         db  0x72 ; 'r'
00000000000009e9         db  0x65 ; 'e'
00000000000009ea         db  0x61 ; 'a'
00000000000009eb         db  0x64 ; 'd'
00000000000009ec         db  0x69 ; 'i'
00000000000009ed         db  0x6e ; 'n'
00000000000009ee         db  0x67 ; 'g'
00000000000009ef         db  0x00 ; '.'
00000000000009f0         db  0x73 ; 's'
00000000000009f1         db  0x74 ; 't'
00000000000009f2         db  0x64 ; 'd'
00000000000009f3         db  0x65 ; 'e'
00000000000009f4         db  0x72 ; 'r'
00000000000009f5         db  0x72 ; 'r'
00000000000009f6         db  0x00 ; '.'
00000000000009f7         db  0x5f ; '_'
00000000000009f8         db  0x5f ; '_'
00000000000009f9         db  0x73 ; 's'
00000000000009fa         db  0x6e ; 'n'
00000000000009fb         db  0x70 ; 'p'
00000000000009fc         db  0x72 ; 'r'
00000000000009fd         db  0x69 ; 'i'
00000000000009fe         db  0x6e ; 'n'
00000000000009ff         db  0x74 ; 't'
                     aFchk:
0000000000000a00         db         "f_chk", 0
0000000000000a06         db  0x67 ; 'g'
0000000000000a07         db  0x65 ; 'e'
0000000000000a08         db  0x74 ; 't'
0000000000000a09         db  0x6f ; 'o'
0000000000000a0a         db  0x70 ; 'p'
0000000000000a0b         db  0x74 ; 't'
0000000000000a0c         db  0x5f ; '_'
0000000000000a0d         db  0x6c ; 'l'
0000000000000a0e         db  0x6f ; 'o'
0000000000000a0f         db  0x6e ; 'n'
0000000000000a10         db  0x67 ; 'g'
0000000000000a11         db  0x00 ; '.'
0000000000000a12         db  0x66 ; 'f'
0000000000000a13         db  0x69 ; 'i'
0000000000000a14         db  0x6c ; 'l'
0000000000000a15         db  0x65 ; 'e'
0000000000000a16         db  0x6e ; 'n'
0000000000000a17         db  0x6f ; 'o'
0000000000000a18         db  0x00 ; '.'
0000000000000a19         db  0x66 ; 'f'
0000000000000a1a         db  0x77 ; 'w'
0000000000000a1b         db  0x72 ; 'r'
0000000000000a1c         db  0x69 ; 'i'
0000000000000a1d         db  0x74 ; 't'
0000000000000a1e         db  0x65 ; 'e'
0000000000000a1f         db  0x00 ; '.'
0000000000000a20         db  0x5f ; '_'
0000000000000a21         db  0x5f ; '_'
0000000000000a22         db  0x66 ; 'f'
0000000000000a23         db  0x70 ; 'p'
0000000000000a24         db  0x65 ; 'e'
0000000000000a25         db  0x6e ; 'n'
0000000000000a26         db  0x64 ; 'd'
0000000000000a27         db  0x69 ; 'i'
0000000000000a28         db  0x6e ; 'n'
0000000000000a29         db  0x67 ; 'g'
0000000000000a2a         db  0x00 ; '.'
0000000000000a2b         db  0x70 ; 'p'
0000000000000a2c         db  0x72 ; 'r'
0000000000000a2d         db  0x6f ; 'o'
0000000000000a2e         db  0x67 ; 'g'
0000000000000a2f         db  0x72 ; 'r'
0000000000000a30         db  0x61 ; 'a'
0000000000000a31         db  0x6d ; 'm'
0000000000000a32         db  0x5f ; '_'
0000000000000a33         db  0x69 ; 'i'
0000000000000a34         db  0x6e ; 'n'
0000000000000a35         db  0x76 ; 'v'
0000000000000a36         db  0x6f ; 'o'
0000000000000a37         db  0x63 ; 'c'
0000000000000a38         db  0x61 ; 'a'
0000000000000a39         db  0x74 ; 't'
0000000000000a3a         db  0x69 ; 'i'
0000000000000a3b         db  0x6f ; 'o'
0000000000000a3c         db  0x6e ; 'n'
0000000000000a3d         db  0x5f ; '_'
0000000000000a3e         db  0x73 ; 's'
0000000000000a3f         db  0x68 ; 'h'
0000000000000a40         db  0x6f ; 'o'
0000000000000a41         db  0x72 ; 'r'
0000000000000a42         db  0x74 ; 't'
0000000000000a43         db  0x5f ; '_'
0000000000000a44         db  0x6e ; 'n'
0000000000000a45         db  0x61 ; 'a'
0000000000000a46         db  0x6d ; 'm'
0000000000000a47         db  0x65 ; 'e'
0000000000000a48         db  0x00 ; '.'
0000000000000a49         db  0x5f ; '_'
0000000000000a4a         db  0x5f ; '_'
0000000000000a4b         db  0x63 ; 'c'
0000000000000a4c         db  0x78 ; 'x'
0000000000000a4d         db  0x61 ; 'a'
0000000000000a4e         db  0x5f ; '_'
0000000000000a4f         db  0x66 ; 'f'
0000000000000a50         db  0x69 ; 'i'
0000000000000a51         db  0x6e ; 'n'
0000000000000a52         db  0x61 ; 'a'
0000000000000a53         db  0x6c ; 'l'
0000000000000a54         db  0x69 ; 'i'
0000000000000a55         db  0x7a ; 'z'
0000000000000a56         db  0x65 ; 'e'
0000000000000a57         db  0x00 ; '.'
0000000000000a58         db  0x6f ; 'o'
0000000000000a59         db  0x70 ; 'p'
0000000000000a5a         db  0x65 ; 'e'
0000000000000a5b         db  0x6e ; 'n'
0000000000000a5c         db  0x61 ; 'a'
0000000000000a5d         db  0x74 ; 't'
0000000000000a5e         db  0x00 ; '.'
0000000000000a5f         db  0x62 ; 'b'
0000000000000a60         db  0x69 ; 'i'
0000000000000a61         db  0x6e ; 'n'
0000000000000a62         db  0x64 ; 'd'
0000000000000a63         db  0x74 ; 't'
0000000000000a64         db  0x65 ; 'e'
0000000000000a65         db  0x78 ; 'x'
0000000000000a66         db  0x74 ; 't'
0000000000000a67         db  0x64 ; 'd'
0000000000000a68         db  0x6f ; 'o'
0000000000000a69         db  0x6d ; 'm'
0000000000000a6a         db  0x61 ; 'a'
0000000000000a6b         db  0x69 ; 'i'
0000000000000a6c         db  0x6e ; 'n'
0000000000000a6d         db  0x00 ; '.'
0000000000000a6e         db  0x66 ; 'f'
0000000000000a6f         db  0x77 ; 'w'
0000000000000a70         db  0x72 ; 'r'
0000000000000a71         db  0x69 ; 'i'
0000000000000a72         db  0x74 ; 't'
0000000000000a73         db  0x65 ; 'e'
0000000000000a74         db  0x5f ; '_'
0000000000000a75         db  0x75 ; 'u'
0000000000000a76         db  0x6e ; 'n'
0000000000000a77         db  0x6c ; 'l'
0000000000000a78         db  0x6f ; 'o'
0000000000000a79         db  0x63 ; 'c'
0000000000000a7a         db  0x6b ; 'k'
0000000000000a7b         db  0x65 ; 'e'
0000000000000a7c         db  0x64 ; 'd'
0000000000000a7d         db  0x00 ; '.'
0000000000000a7e         db  0x5f ; '_'
0000000000000a7f         db  0x5f ; '_'
0000000000000a80         db  0x6c ; 'l'
0000000000000a81         db  0x69 ; 'i'
0000000000000a82         db  0x62 ; 'b'
0000000000000a83         db  0x63 ; 'c'
0000000000000a84         db  0x5f ; '_'
0000000000000a85         db  0x73 ; 's'
0000000000000a86         db  0x74 ; 't'
0000000000000a87         db  0x61 ; 'a'
0000000000000a88         db  0x72 ; 'r'
0000000000000a89         db  0x74 ; 't'
0000000000000a8a         db  0x5f ; '_'
0000000000000a8b         db  0x6d ; 'm'
0000000000000a8c         db  0x61 ; 'a'
0000000000000a8d         db  0x69 ; 'i'
0000000000000a8e         db  0x6e ; 'n'
0000000000000a8f         db  0x00 ; '.'
0000000000000a90         db  0x66 ; 'f'
0000000000000a91         db  0x73 ; 's'
0000000000000a92         db  0x65 ; 'e'
0000000000000a93         db  0x65 ; 'e'
0000000000000a94         db  0x6b ; 'k'
0000000000000a95         db  0x6f ; 'o'
0000000000000a96         db  0x00 ; '.'
0000000000000a97         db  0x5f ; '_'
0000000000000a98         db  0x5f ; '_'
0000000000000a99         db  0x6f ; 'o'
0000000000000a9a         db  0x76 ; 'v'
0000000000000a9b         db  0x65 ; 'e'
0000000000000a9c         db  0x72 ; 'r'
0000000000000a9d         db  0x66 ; 'f'
0000000000000a9e         db  0x6c ; 'l'
0000000000000a9f         db  0x6f ; 'o'
0000000000000aa0         db  0x77 ; 'w'
0000000000000aa1         db  0x00 ; '.'
0000000000000aa2         db  0x66 ; 'f'
0000000000000aa3         db  0x70 ; 'p'
0000000000000aa4         db  0x75 ; 'u'
0000000000000aa5         db  0x74 ; 't'
0000000000000aa6         db  0x73 ; 's'
0000000000000aa7         db  0x5f ; '_'
0000000000000aa8         db  0x75 ; 'u'
0000000000000aa9         db  0x6e ; 'n'
0000000000000aaa         db  0x6c ; 'l'
0000000000000aab         db  0x6f ; 'o'
0000000000000aac         db  0x63 ; 'c'
0000000000000aad         db  0x6b ; 'k'
0000000000000aae         db  0x65 ; 'e'
0000000000000aaf         db  0x64 ; 'd'
0000000000000ab0         db  0x00 ; '.'
0000000000000ab1         db  0x66 ; 'f'
0000000000000ab2         db  0x72 ; 'r'
0000000000000ab3         db  0x65 ; 'e'
0000000000000ab4         db  0x65 ; 'e'
0000000000000ab5         db  0x00 ; '.'
0000000000000ab6         db  0x5f ; '_'
0000000000000ab7         db  0x5f ; '_'
0000000000000ab8         db  0x70 ; 'p'
0000000000000ab9         db  0x72 ; 'r'
0000000000000aba         db  0x6f ; 'o'
0000000000000abb         db  0x67 ; 'g'
0000000000000abc         db  0x6e ; 'n'
0000000000000abd         db  0x61 ; 'a'
0000000000000abe         db  0x6d ; 'm'
0000000000000abf         db  0x65 ; 'e'
0000000000000ac0         db  0x00 ; '.'
0000000000000ac1         db  0x5f ; '_'
0000000000000ac2         db  0x5f ; '_'
0000000000000ac3         db  0x70 ; 'p'
0000000000000ac4         db  0x72 ; 'r'
0000000000000ac5         db  0x6f ; 'o'
0000000000000ac6         db  0x67 ; 'g'
0000000000000ac7         db  0x6e ; 'n'
0000000000000ac8         db  0x61 ; 'a'
0000000000000ac9         db  0x6d ; 'm'
0000000000000aca         db  0x65 ; 'e'
0000000000000acb         db  0x5f ; '_'
0000000000000acc         db  0x66 ; 'f'
0000000000000acd         db  0x75 ; 'u'
0000000000000ace         db  0x6c ; 'l'
0000000000000acf         db  0x6c ; 'l'
0000000000000ad0         db  0x00 ; '.'
0000000000000ad1         db  0x5f ; '_'
0000000000000ad2         db  0x5f ; '_'
0000000000000ad3         db  0x63 ; 'c'
0000000000000ad4         db  0x78 ; 'x'
0000000000000ad5         db  0x61 ; 'a'
0000000000000ad6         db  0x5f ; '_'
0000000000000ad7         db  0x61 ; 'a'
0000000000000ad8         db  0x74 ; 't'
0000000000000ad9         db  0x65 ; 'e'
0000000000000ada         db  0x78 ; 'x'
0000000000000adb         db  0x69 ; 'i'
0000000000000adc         db  0x74 ; 't'
0000000000000add         db  0x00 ; '.'
0000000000000ade         db  0x47 ; 'G'
0000000000000adf         db  0x4c ; 'L'
0000000000000ae0         db  0x49 ; 'I'
0000000000000ae1         db  0x42 ; 'B'
0000000000000ae2         db  0x43 ; 'C'
0000000000000ae3         db  0x5f ; '_'
0000000000000ae4         db  0x32 ; '2'
0000000000000ae5         db  0x2e ; '.'
0000000000000ae6         db  0x33 ; '3'
0000000000000ae7         db  0x00 ; '.'
0000000000000ae8         db  0x47 ; 'G'
0000000000000ae9         db  0x4c ; 'L'
0000000000000aea         db  0x49 ; 'I'
0000000000000aeb         db  0x42 ; 'B'
0000000000000aec         db  0x43 ; 'C'
0000000000000aed         db  0x5f ; '_'
0000000000000aee         db  0x32 ; '2'
0000000000000aef         db  0x2e ; '.'
0000000000000af0         db  0x31 ; '1'
0000000000000af1         db  0x34 ; '4'
0000000000000af2         db  0x00 ; '.'
0000000000000af3         db  0x47 ; 'G'
0000000000000af4         db  0x4c ; 'L'
0000000000000af5         db  0x49 ; 'I'
0000000000000af6         db  0x42 ; 'B'
0000000000000af7         db  0x43 ; 'C'
0000000000000af8         db  0x5f ; '_'
0000000000000af9         db  0x32 ; '2'
0000000000000afa         db  0x2e ; '.'
0000000000000afb         db  0x34 ; '4'
0000000000000afc         db  0x00 ; '.'
0000000000000afd         db  0x47 ; 'G'
0000000000000afe         db  0x4c ; 'L'
0000000000000aff         db  0x49 ; 'I'
                     aBc234:
0000000000000b00         db         "BC_2.3.4", 0
0000000000000b09         db  0x47 ; 'G'
0000000000000b0a         db  0x4c ; 'L'
0000000000000b0b         db  0x49 ; 'I'
0000000000000b0c         db  0x42 ; 'B'
0000000000000b0d         db  0x43 ; 'C'
0000000000000b0e         db  0x5f ; '_'
0000000000000b0f         db  0x32 ; '2'
0000000000000b10         db  0x2e ; '.'
0000000000000b11         db  0x32 ; '2'
0000000000000b12         db  0x2e ; '.'
0000000000000b13         db  0x35 ; '5'
0000000000000b14         db  0x00 ; '.'
0000000000000b15         db  0x5f ; '_'
0000000000000b16         db  0x49 ; 'I'
0000000000000b17         db  0x54 ; 'T'
0000000000000b18         db  0x4d ; 'M'
0000000000000b19         db  0x5f ; '_'
0000000000000b1a         db  0x64 ; 'd'
0000000000000b1b         db  0x65 ; 'e'
0000000000000b1c         db  0x72 ; 'r'
0000000000000b1d         db  0x65 ; 'e'
0000000000000b1e         db  0x67 ; 'g'
0000000000000b1f         db  0x69 ; 'i'
0000000000000b20         db  0x73 ; 's'
0000000000000b21         db  0x74 ; 't'
0000000000000b22         db  0x65 ; 'e'
0000000000000b23         db  0x72 ; 'r'
0000000000000b24         db  0x54 ; 'T'
0000000000000b25         db  0x4d ; 'M'
0000000000000b26         db  0x43 ; 'C'
0000000000000b27         db  0x6c ; 'l'
0000000000000b28         db  0x6f ; 'o'
0000000000000b29         db  0x6e ; 'n'
0000000000000b2a         db  0x65 ; 'e'
0000000000000b2b         db  0x54 ; 'T'
0000000000000b2c         db  0x61 ; 'a'
0000000000000b2d         db  0x62 ; 'b'
0000000000000b2e         db  0x6c ; 'l'
0000000000000b2f         db  0x65 ; 'e'
0000000000000b30         db  0x00 ; '.'
0000000000000b31         db  0x5f ; '_'
0000000000000b32         db  0x5f ; '_'
0000000000000b33         db  0x67 ; 'g'
0000000000000b34         db  0x6d ; 'm'
0000000000000b35         db  0x6f ; 'o'
0000000000000b36         db  0x6e ; 'n'
0000000000000b37         db  0x5f ; '_'
0000000000000b38         db  0x73 ; 's'
0000000000000b39         db  0x74 ; 't'
0000000000000b3a         db  0x61 ; 'a'
0000000000000b3b         db  0x72 ; 'r'
0000000000000b3c         db  0x74 ; 't'
0000000000000b3d         db  0x5f ; '_'
0000000000000b3e         db  0x5f ; '_'
0000000000000b3f         db  0x00 ; '.'
0000000000000b40         db  0x5f ; '_'
                     aItmregistertmc:
0000000000000b41         db         "ITM_registerTMCloneTable", 0


        ; Section .gnu.version
        ; Range: [0xb5a; 0xbd4[ (122 bytes)
        ; File offset : [2906; 3028[ (122 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000b5a         db  0x00 ; '.'
0000000000000b5b         db  0x00 ; '.'
0000000000000b5c         db  0x03 ; '.'
0000000000000b5d         db  0x00 ; '.'
0000000000000b5e         db  0x02 ; '.'
0000000000000b5f         db  0x00 ; '.'
0000000000000b60         db  0x02 ; '.'
0000000000000b61         db  0x00 ; '.'
0000000000000b62         db  0x02 ; '.'
0000000000000b63         db  0x00 ; '.'
0000000000000b64         db  0x02 ; '.'
0000000000000b65         db  0x00 ; '.'
0000000000000b66         db  0x00 ; '.'
0000000000000b67         db  0x00 ; '.'
0000000000000b68         db  0x02 ; '.'
0000000000000b69         db  0x00 ; '.'
0000000000000b6a         db  0x02 ; '.'
0000000000000b6b         db  0x00 ; '.'
0000000000000b6c         db  0x02 ; '.'
0000000000000b6d         db  0x00 ; '.'
0000000000000b6e         db  0x02 ; '.'
0000000000000b6f         db  0x00 ; '.'
0000000000000b70         db  0x02 ; '.'
0000000000000b71         db  0x00 ; '.'
0000000000000b72         db  0x02 ; '.'
0000000000000b73         db  0x00 ; '.'
0000000000000b74         db  0x02 ; '.'
0000000000000b75         db  0x00 ; '.'
0000000000000b76         db  0x02 ; '.'
0000000000000b77         db  0x00 ; '.'
0000000000000b78         db  0x02 ; '.'
0000000000000b79         db  0x00 ; '.'
0000000000000b7a         db  0x04 ; '.'
0000000000000b7b         db  0x00 ; '.'
0000000000000b7c         db  0x04 ; '.'
0000000000000b7d         db  0x00 ; '.'
0000000000000b7e         db  0x02 ; '.'
0000000000000b7f         db  0x00 ; '.'
0000000000000b80         db  0x02 ; '.'
0000000000000b81         db  0x00 ; '.'
0000000000000b82         db  0x02 ; '.'
0000000000000b83         db  0x00 ; '.'
0000000000000b84         db  0x02 ; '.'
0000000000000b85         db  0x00 ; '.'
0000000000000b86         db  0x02 ; '.'
0000000000000b87         db  0x00 ; '.'
0000000000000b88         db  0x02 ; '.'
0000000000000b89         db  0x00 ; '.'
0000000000000b8a         db  0x02 ; '.'
0000000000000b8b         db  0x00 ; '.'
0000000000000b8c         db  0x02 ; '.'
0000000000000b8d         db  0x00 ; '.'
0000000000000b8e         db  0x02 ; '.'
0000000000000b8f         db  0x00 ; '.'
0000000000000b90         db  0x02 ; '.'
0000000000000b91         db  0x00 ; '.'
0000000000000b92         db  0x02 ; '.'
0000000000000b93         db  0x00 ; '.'
0000000000000b94         db  0x02 ; '.'
0000000000000b95         db  0x00 ; '.'
0000000000000b96         db  0x00 ; '.'
0000000000000b97         db  0x00 ; '.'
0000000000000b98         db  0x05 ; '.'
0000000000000b99         db  0x00 ; '.'
0000000000000b9a         db  0x02 ; '.'
0000000000000b9b         db  0x00 ; '.'
0000000000000b9c         db  0x02 ; '.'
0000000000000b9d         db  0x00 ; '.'
0000000000000b9e         db  0x02 ; '.'
0000000000000b9f         db  0x00 ; '.'
0000000000000ba0         db  0x02 ; '.'
0000000000000ba1         db  0x00 ; '.'
0000000000000ba2         db  0x02 ; '.'
0000000000000ba3         db  0x00 ; '.'
0000000000000ba4         db  0x02 ; '.'
0000000000000ba5         db  0x00 ; '.'
0000000000000ba6         db  0x02 ; '.'
0000000000000ba7         db  0x00 ; '.'
0000000000000ba8         db  0x02 ; '.'
0000000000000ba9         db  0x00 ; '.'
0000000000000baa         db  0x02 ; '.'
0000000000000bab         db  0x00 ; '.'
0000000000000bac         db  0x03 ; '.'
0000000000000bad         db  0x00 ; '.'
0000000000000bae         db  0x02 ; '.'
0000000000000baf         db  0x00 ; '.'
0000000000000bb0         db  0x02 ; '.'
0000000000000bb1         db  0x00 ; '.'
0000000000000bb2         db  0x04 ; '.'
0000000000000bb3         db  0x00 ; '.'
0000000000000bb4         db  0x02 ; '.'
0000000000000bb5         db  0x00 ; '.'
0000000000000bb6         db  0x02 ; '.'
0000000000000bb7         db  0x00 ; '.'
0000000000000bb8         db  0x02 ; '.'
0000000000000bb9         db  0x00 ; '.'
0000000000000bba         db  0x03 ; '.'
0000000000000bbb         db  0x00 ; '.'
0000000000000bbc         db  0x00 ; '.'
0000000000000bbd         db  0x00 ; '.'
0000000000000bbe         db  0x02 ; '.'
0000000000000bbf         db  0x00 ; '.'
0000000000000bc0         db  0x02 ; '.'
0000000000000bc1         db  0x00 ; '.'
0000000000000bc2         db  0x02 ; '.'
0000000000000bc3         db  0x00 ; '.'
0000000000000bc4         db  0x06 ; '.'
0000000000000bc5         db  0x00 ; '.'
0000000000000bc6         db  0x02 ; '.'
0000000000000bc7         db  0x00 ; '.'
0000000000000bc8         db  0x02 ; '.'
0000000000000bc9         db  0x00 ; '.'
0000000000000bca         db  0x02 ; '.'
0000000000000bcb         db  0x00 ; '.'
0000000000000bcc         db  0x02 ; '.'
0000000000000bcd         db  0x00 ; '.'
0000000000000bce         db  0x02 ; '.'
0000000000000bcf         db  0x00 ; '.'
0000000000000bd0         db  0x02 ; '.'
0000000000000bd1         db  0x00 ; '.'
0000000000000bd2         db  0x02 ; '.'
0000000000000bd3         db  0x00 ; '.'
0000000000000bd4         db  0x00 ; '.'
0000000000000bd5         db  0x00 ; '.'
0000000000000bd6         db  0x00 ; '.'
0000000000000bd7         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xbd8; 0xc38[ (96 bytes)
        ; File offset : [3032; 3128[ (96 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000bd8         db  0x01 ; '.'
0000000000000bd9         db  0x00 ; '.'
0000000000000bda         db  0x05 ; '.'
0000000000000bdb         db  0x00 ; '.'
0000000000000bdc         db  0x01 ; '.'
0000000000000bdd         db  0x00 ; '.'
0000000000000bde         db  0x00 ; '.'
0000000000000bdf         db  0x00 ; '.'
0000000000000be0         db  0x10 ; '.'
0000000000000be1         db  0x00 ; '.'
0000000000000be2         db  0x00 ; '.'
0000000000000be3         db  0x00 ; '.'
0000000000000be4         db  0x00 ; '.'
0000000000000be5         db  0x00 ; '.'
0000000000000be6         db  0x00 ; '.'
0000000000000be7         db  0x00 ; '.'
0000000000000be8         db  0x13 ; '.'
0000000000000be9         db  0x69 ; 'i'
0000000000000bea         db  0x69 ; 'i'
0000000000000beb         db  0x0d ; '.'
0000000000000bec         db  0x00 ; '.'
0000000000000bed         db  0x00 ; '.'
0000000000000bee         db  0x06 ; '.'
0000000000000bef         db  0x00 ; '.'
0000000000000bf0         db  0x4e ; 'N'
0000000000000bf1         db  0x02 ; '.'
0000000000000bf2         db  0x00 ; '.'
0000000000000bf3         db  0x00 ; '.'
0000000000000bf4         db  0x10 ; '.'
0000000000000bf5         db  0x00 ; '.'
0000000000000bf6         db  0x00 ; '.'
0000000000000bf7         db  0x00 ; '.'
0000000000000bf8         db  0x94 ; '.'
0000000000000bf9         db  0x91 ; '.'
0000000000000bfa         db  0x96 ; '.'
0000000000000bfb         db  0x06 ; '.'
0000000000000bfc         db  0x00 ; '.'
0000000000000bfd         db  0x00 ; '.'
0000000000000bfe         db  0x05 ; '.'
0000000000000bff         db  0x00 ; '.'
0000000000000c00         db  0x58 ; 'X'
0000000000000c01         db  0x02 ; '.'
0000000000000c02         db  0x00 ; '.'
0000000000000c03         db  0x00 ; '.'
0000000000000c04         db  0x10 ; '.'
0000000000000c05         db  0x00 ; '.'
0000000000000c06         db  0x00 ; '.'
0000000000000c07         db  0x00 ; '.'
0000000000000c08         db  0x14 ; '.'
0000000000000c09         db  0x69 ; 'i'
0000000000000c0a         db  0x69 ; 'i'
0000000000000c0b         db  0x0d ; '.'
0000000000000c0c         db  0x00 ; '.'
0000000000000c0d         db  0x00 ; '.'
0000000000000c0e         db  0x04 ; '.'
0000000000000c0f         db  0x00 ; '.'
0000000000000c10         db  0x63 ; 'c'
0000000000000c11         db  0x02 ; '.'
0000000000000c12         db  0x00 ; '.'
0000000000000c13         db  0x00 ; '.'
0000000000000c14         db  0x10 ; '.'
0000000000000c15         db  0x00 ; '.'
0000000000000c16         db  0x00 ; '.'
0000000000000c17         db  0x00 ; '.'
0000000000000c18         db  0x74 ; 't'
0000000000000c19         db  0x19 ; '.'
0000000000000c1a         db  0x69 ; 'i'
0000000000000c1b         db  0x09 ; '.'
0000000000000c1c         db  0x00 ; '.'
0000000000000c1d         db  0x00 ; '.'
0000000000000c1e         db  0x03 ; '.'
0000000000000c1f         db  0x00 ; '.'
0000000000000c20         db  0x6d ; 'm'
0000000000000c21         db  0x02 ; '.'
0000000000000c22         db  0x00 ; '.'
0000000000000c23         db  0x00 ; '.'
0000000000000c24         db  0x10 ; '.'
0000000000000c25         db  0x00 ; '.'
0000000000000c26         db  0x00 ; '.'
0000000000000c27         db  0x00 ; '.'
0000000000000c28         db  0x75 ; 'u'
0000000000000c29         db  0x1a ; '.'
0000000000000c2a         db  0x69 ; 'i'
0000000000000c2b         db  0x09 ; '.'
0000000000000c2c         db  0x00 ; '.'
0000000000000c2d         db  0x00 ; '.'
0000000000000c2e         db  0x02 ; '.'
0000000000000c2f         db  0x00 ; '.'
0000000000000c30         db  0x79 ; 'y'
0000000000000c31         db  0x02 ; '.'
0000000000000c32         db  0x00 ; '.'
0000000000000c33         db  0x00 ; '.'
0000000000000c34         db  0x00 ; '.'
0000000000000c35         db  0x00 ; '.'
0000000000000c36         db  0x00 ; '.'
0000000000000c37         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xc38; 0xf38[ (768 bytes)
        ; File offset : [3128; 3896[ (768 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000c38         db  0xf0 ; '.'
0000000000000c39         db  0x9a ; '.'
0000000000000c3a         db  0x20 ; ' '
0000000000000c3b         db  0x00 ; '.'
0000000000000c3c         db  0x00 ; '.'
0000000000000c3d         db  0x00 ; '.'
0000000000000c3e         db  0x00 ; '.'
0000000000000c3f         db  0x00 ; '.'
0000000000000c40         db  0x08 ; '.'
0000000000000c41         db  0x00 ; '.'
0000000000000c42         db  0x00 ; '.'
0000000000000c43         db  0x00 ; '.'
0000000000000c44         db  0x00 ; '.'
0000000000000c45         db  0x00 ; '.'
0000000000000c46         db  0x00 ; '.'
0000000000000c47         db  0x00 ; '.'
0000000000000c48         db  0x20 ; ' '
0000000000000c49         db  0x1b ; '.'
0000000000000c4a         db  0x00 ; '.'
0000000000000c4b         db  0x00 ; '.'
0000000000000c4c         db  0x00 ; '.'
0000000000000c4d         db  0x00 ; '.'
0000000000000c4e         db  0x00 ; '.'
0000000000000c4f         db  0x00 ; '.'
0000000000000c50         db  0xf8 ; '.'
0000000000000c51         db  0x9a ; '.'
0000000000000c52         db  0x20 ; ' '
0000000000000c53         db  0x00 ; '.'
0000000000000c54         db  0x00 ; '.'
0000000000000c55         db  0x00 ; '.'
0000000000000c56         db  0x00 ; '.'
0000000000000c57         db  0x00 ; '.'
0000000000000c58         db  0x08 ; '.'
0000000000000c59         db  0x00 ; '.'
0000000000000c5a         db  0x00 ; '.'
0000000000000c5b         db  0x00 ; '.'
0000000000000c5c         db  0x00 ; '.'
0000000000000c5d         db  0x00 ; '.'
0000000000000c5e         db  0x00 ; '.'
0000000000000c5f         db  0x00 ; '.'
0000000000000c60         db  0xe0 ; '.'
0000000000000c61         db  0x1a ; '.'
0000000000000c62         db  0x00 ; '.'
0000000000000c63         db  0x00 ; '.'
0000000000000c64         db  0x00 ; '.'
0000000000000c65         db  0x00 ; '.'
0000000000000c66         db  0x00 ; '.'
0000000000000c67         db  0x00 ; '.'
0000000000000c68         db  0x00 ; '.'
0000000000000c69         db  0x9b ; '.'
0000000000000c6a         db  0x20 ; ' '
0000000000000c6b         db  0x00 ; '.'
0000000000000c6c         db  0x00 ; '.'
0000000000000c6d         db  0x00 ; '.'
0000000000000c6e         db  0x00 ; '.'
0000000000000c6f         db  0x00 ; '.'
0000000000000c70         db  0x08 ; '.'
0000000000000c71         db  0x00 ; '.'
0000000000000c72         db  0x00 ; '.'
0000000000000c73         db  0x00 ; '.'
0000000000000c74         db  0x00 ; '.'
0000000000000c75         db  0x00 ; '.'
0000000000000c76         db  0x00 ; '.'
0000000000000c77         db  0x00 ; '.'
0000000000000c78         db  0x11 ; '.'
0000000000000c79         db  0x6e ; 'n'
0000000000000c7a         db  0x00 ; '.'
0000000000000c7b         db  0x00 ; '.'
0000000000000c7c         db  0x00 ; '.'
0000000000000c7d         db  0x00 ; '.'
0000000000000c7e         db  0x00 ; '.'
0000000000000c7f         db  0x00 ; '.'
0000000000000c80         db  0x20 ; ' '
0000000000000c81         db  0x9b ; '.'
0000000000000c82         db  0x20 ; ' '
0000000000000c83         db  0x00 ; '.'
0000000000000c84         db  0x00 ; '.'
0000000000000c85         db  0x00 ; '.'
0000000000000c86         db  0x00 ; '.'
0000000000000c87         db  0x00 ; '.'
0000000000000c88         db  0x08 ; '.'
0000000000000c89         db  0x00 ; '.'
0000000000000c8a         db  0x00 ; '.'
0000000000000c8b         db  0x00 ; '.'
0000000000000c8c         db  0x00 ; '.'
0000000000000c8d         db  0x00 ; '.'
0000000000000c8e         db  0x00 ; '.'
0000000000000c8f         db  0x00 ; '.'
0000000000000c90         db  0x2a ; '*'
0000000000000c91         db  0x6e ; 'n'
0000000000000c92         db  0x00 ; '.'
0000000000000c93         db  0x00 ; '.'
0000000000000c94         db  0x00 ; '.'
0000000000000c95         db  0x00 ; '.'
0000000000000c96         db  0x00 ; '.'
0000000000000c97         db  0x00 ; '.'
0000000000000c98         db  0x40 ; '@'
0000000000000c99         db  0x9b ; '.'
0000000000000c9a         db  0x20 ; ' '
0000000000000c9b         db  0x00 ; '.'
0000000000000c9c         db  0x00 ; '.'
0000000000000c9d         db  0x00 ; '.'
0000000000000c9e         db  0x00 ; '.'
0000000000000c9f         db  0x00 ; '.'
0000000000000ca0         db  0x08 ; '.'
0000000000000ca1         db  0x00 ; '.'
0000000000000ca2         db  0x00 ; '.'
0000000000000ca3         db  0x00 ; '.'
0000000000000ca4         db  0x00 ; '.'
0000000000000ca5         db  0x00 ; '.'
0000000000000ca6         db  0x00 ; '.'
0000000000000ca7         db  0x00 ; '.'
0000000000000ca8         db  0x2f ; '/'
0000000000000ca9         db  0x6e ; 'n'
0000000000000caa         db  0x00 ; '.'
0000000000000cab         db  0x00 ; '.'
0000000000000cac         db  0x00 ; '.'
0000000000000cad         db  0x00 ; '.'
0000000000000cae         db  0x00 ; '.'
0000000000000caf         db  0x00 ; '.'
0000000000000cb0         db  0x60 ; '`'
0000000000000cb1         db  0x9b ; '.'
0000000000000cb2         db  0x20 ; ' '
0000000000000cb3         db  0x00 ; '.'
0000000000000cb4         db  0x00 ; '.'
0000000000000cb5         db  0x00 ; '.'
0000000000000cb6         db  0x00 ; '.'
0000000000000cb7         db  0x00 ; '.'
0000000000000cb8         db  0x08 ; '.'
0000000000000cb9         db  0x00 ; '.'
0000000000000cba         db  0x00 ; '.'
0000000000000cbb         db  0x00 ; '.'
0000000000000cbc         db  0x00 ; '.'
0000000000000cbd         db  0x00 ; '.'
0000000000000cbe         db  0x00 ; '.'
0000000000000cbf         db  0x00 ; '.'
0000000000000cc0         db  0x37 ; '7'
0000000000000cc1         db  0x6e ; 'n'
0000000000000cc2         db  0x00 ; '.'
0000000000000cc3         db  0x00 ; '.'
0000000000000cc4         db  0x00 ; '.'
0000000000000cc5         db  0x00 ; '.'
0000000000000cc6         db  0x00 ; '.'
0000000000000cc7         db  0x00 ; '.'
0000000000000cc8         db  0x80 ; '.'
0000000000000cc9         db  0x9b ; '.'
0000000000000cca         db  0x20 ; ' '
0000000000000ccb         db  0x00 ; '.'
0000000000000ccc         db  0x00 ; '.'
0000000000000ccd         db  0x00 ; '.'
0000000000000cce         db  0x00 ; '.'
0000000000000ccf         db  0x00 ; '.'
0000000000000cd0         db  0x08 ; '.'
0000000000000cd1         db  0x00 ; '.'
0000000000000cd2         db  0x00 ; '.'
0000000000000cd3         db  0x00 ; '.'
0000000000000cd4         db  0x00 ; '.'
0000000000000cd5         db  0x00 ; '.'
0000000000000cd6         db  0x00 ; '.'
0000000000000cd7         db  0x00 ; '.'
0000000000000cd8         db  0x3f ; '?'
0000000000000cd9         db  0x6e ; 'n'
0000000000000cda         db  0x00 ; '.'
0000000000000cdb         db  0x00 ; '.'
0000000000000cdc         db  0x00 ; '.'
0000000000000cdd         db  0x00 ; '.'
0000000000000cde         db  0x00 ; '.'
0000000000000cdf         db  0x00 ; '.'
0000000000000ce0         db  0xa0 ; '.'
0000000000000ce1         db  0x9b ; '.'
0000000000000ce2         db  0x20 ; ' '
0000000000000ce3         db  0x00 ; '.'
0000000000000ce4         db  0x00 ; '.'
0000000000000ce5         db  0x00 ; '.'
0000000000000ce6         db  0x00 ; '.'
0000000000000ce7         db  0x00 ; '.'
0000000000000ce8         db  0x08 ; '.'
0000000000000ce9         db  0x00 ; '.'
0000000000000cea         db  0x00 ; '.'
0000000000000ceb         db  0x00 ; '.'
0000000000000cec         db  0x00 ; '.'
0000000000000ced         db  0x00 ; '.'
0000000000000cee         db  0x00 ; '.'
0000000000000cef         db  0x00 ; '.'
0000000000000cf0         db  0x44 ; 'D'
0000000000000cf1         db  0x6e ; 'n'
0000000000000cf2         db  0x00 ; '.'
0000000000000cf3         db  0x00 ; '.'
0000000000000cf4         db  0x00 ; '.'
0000000000000cf5         db  0x00 ; '.'
0000000000000cf6         db  0x00 ; '.'
0000000000000cf7         db  0x00 ; '.'
0000000000000cf8         db  0xe0 ; '.'
0000000000000cf9         db  0x9b ; '.'
0000000000000cfa         db  0x20 ; ' '
0000000000000cfb         db  0x00 ; '.'
0000000000000cfc         db  0x00 ; '.'
0000000000000cfd         db  0x00 ; '.'
0000000000000cfe         db  0x00 ; '.'
0000000000000cff         db  0x00 ; '.'
0000000000000d00         db  0x08 ; '.'
0000000000000d01         db  0x00 ; '.'
0000000000000d02         db  0x00 ; '.'
0000000000000d03         db  0x00 ; '.'
0000000000000d04         db  0x00 ; '.'
0000000000000d05         db  0x00 ; '.'
0000000000000d06         db  0x00 ; '.'
0000000000000d07         db  0x00 ; '.'
0000000000000d08         db  0xa9 ; '.'
0000000000000d09         db  0x71 ; 'q'
0000000000000d0a         db  0x00 ; '.'
0000000000000d0b         db  0x00 ; '.'
0000000000000d0c         db  0x00 ; '.'
0000000000000d0d         db  0x00 ; '.'
0000000000000d0e         db  0x00 ; '.'
0000000000000d0f         db  0x00 ; '.'
0000000000000d10         db  0xe8 ; '.'
0000000000000d11         db  0x9b ; '.'
0000000000000d12         db  0x20 ; ' '
0000000000000d13         db  0x00 ; '.'
0000000000000d14         db  0x00 ; '.'
0000000000000d15         db  0x00 ; '.'
0000000000000d16         db  0x00 ; '.'
0000000000000d17         db  0x00 ; '.'
0000000000000d18         db  0x08 ; '.'
0000000000000d19         db  0x00 ; '.'
0000000000000d1a         db  0x00 ; '.'
0000000000000d1b         db  0x00 ; '.'
0000000000000d1c         db  0x00 ; '.'
0000000000000d1d         db  0x00 ; '.'
0000000000000d1e         db  0x00 ; '.'
0000000000000d1f         db  0x00 ; '.'
0000000000000d20         db  0xb1 ; '.'
0000000000000d21         db  0x71 ; 'q'
0000000000000d22         db  0x00 ; '.'
0000000000000d23         db  0x00 ; '.'
0000000000000d24         db  0x00 ; '.'
0000000000000d25         db  0x00 ; '.'
0000000000000d26         db  0x00 ; '.'
0000000000000d27         db  0x00 ; '.'
0000000000000d28         db  0xf0 ; '.'
0000000000000d29         db  0x9b ; '.'
0000000000000d2a         db  0x20 ; ' '
0000000000000d2b         db  0x00 ; '.'
0000000000000d2c         db  0x00 ; '.'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x00 ; '.'
0000000000000d2f         db  0x00 ; '.'
0000000000000d30         db  0x08 ; '.'
0000000000000d31         db  0x00 ; '.'
0000000000000d32         db  0x00 ; '.'
0000000000000d33         db  0x00 ; '.'
0000000000000d34         db  0x00 ; '.'
0000000000000d35         db  0x00 ; '.'
0000000000000d36         db  0x00 ; '.'
0000000000000d37         db  0x00 ; '.'
0000000000000d38         db  0xb7 ; '.'
0000000000000d39         db  0x71 ; 'q'
0000000000000d3a         db  0x00 ; '.'
0000000000000d3b         db  0x00 ; '.'
0000000000000d3c         db  0x00 ; '.'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x00 ; '.'
0000000000000d3f         db  0x00 ; '.'
0000000000000d40         db  0xf8 ; '.'
0000000000000d41         db  0x9b ; '.'
0000000000000d42         db  0x20 ; ' '
0000000000000d43         db  0x00 ; '.'
0000000000000d44         db  0x00 ; '.'
0000000000000d45         db  0x00 ; '.'
0000000000000d46         db  0x00 ; '.'
0000000000000d47         db  0x00 ; '.'
0000000000000d48         db  0x08 ; '.'
0000000000000d49         db  0x00 ; '.'
0000000000000d4a         db  0x00 ; '.'
0000000000000d4b         db  0x00 ; '.'
0000000000000d4c         db  0x00 ; '.'
0000000000000d4d         db  0x00 ; '.'
0000000000000d4e         db  0x00 ; '.'
0000000000000d4f         db  0x00 ; '.'
0000000000000d50         db  0xc4 ; '.'
0000000000000d51         db  0x71 ; 'q'
0000000000000d52         db  0x00 ; '.'
0000000000000d53         db  0x00 ; '.'
0000000000000d54         db  0x00 ; '.'
0000000000000d55         db  0x00 ; '.'
0000000000000d56         db  0x00 ; '.'
0000000000000d57         db  0x00 ; '.'
0000000000000d58         db  0x00 ; '.'
0000000000000d59         db  0x9c ; '.'
0000000000000d5a         db  0x20 ; ' '
0000000000000d5b         db  0x00 ; '.'
0000000000000d5c         db  0x00 ; '.'
0000000000000d5d         db  0x00 ; '.'
0000000000000d5e         db  0x00 ; '.'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0x08 ; '.'
0000000000000d61         db  0x00 ; '.'
0000000000000d62         db  0x00 ; '.'
0000000000000d63         db  0x00 ; '.'
0000000000000d64         db  0x00 ; '.'
0000000000000d65         db  0x00 ; '.'
0000000000000d66         db  0x00 ; '.'
0000000000000d67         db  0x00 ; '.'
0000000000000d68         db  0xd1 ; '.'
0000000000000d69         db  0x71 ; 'q'
0000000000000d6a         db  0x00 ; '.'
0000000000000d6b         db  0x00 ; '.'
0000000000000d6c         db  0x00 ; '.'
0000000000000d6d         db  0x00 ; '.'
0000000000000d6e         db  0x00 ; '.'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0x08 ; '.'
0000000000000d71         db  0x9c ; '.'
0000000000000d72         db  0x20 ; ' '
0000000000000d73         db  0x00 ; '.'
0000000000000d74         db  0x00 ; '.'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x00 ; '.'
0000000000000d77         db  0x00 ; '.'
0000000000000d78         db  0x08 ; '.'
0000000000000d79         db  0x00 ; '.'
0000000000000d7a         db  0x00 ; '.'
0000000000000d7b         db  0x00 ; '.'
0000000000000d7c         db  0x00 ; '.'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x00 ; '.'
0000000000000d7f         db  0x00 ; '.'
0000000000000d80         db  0xe5 ; '.'
0000000000000d81         db  0x71 ; 'q'
0000000000000d82         db  0x00 ; '.'
0000000000000d83         db  0x00 ; '.'
0000000000000d84         db  0x00 ; '.'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x00 ; '.'
0000000000000d87         db  0x00 ; '.'
0000000000000d88         db  0x10 ; '.'
0000000000000d89         db  0x9c ; '.'
0000000000000d8a         db  0x20 ; ' '
0000000000000d8b         db  0x00 ; '.'
0000000000000d8c         db  0x00 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x00 ; '.'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0x08 ; '.'
0000000000000d91         db  0x00 ; '.'
0000000000000d92         db  0x00 ; '.'
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x00 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x00 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0xe7 ; '.'
0000000000000d99         db  0x71 ; 'q'
0000000000000d9a         db  0x00 ; '.'
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x00 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x00 ; '.'
0000000000000d9f         db  0x00 ; '.'
0000000000000da0         db  0x18 ; '.'
0000000000000da1         db  0x9c ; '.'
0000000000000da2         db  0x20 ; ' '
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x00 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x00 ; '.'
0000000000000da7         db  0x00 ; '.'
0000000000000da8         db  0x08 ; '.'
0000000000000da9         db  0x00 ; '.'
0000000000000daa         db  0x00 ; '.'
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x00 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x00 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0xca ; '.'
0000000000000db1         db  0x71 ; 'q'
0000000000000db2         db  0x00 ; '.'
0000000000000db3         db  0x00 ; '.'
0000000000000db4         db  0x00 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x00 ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0x20 ; ' '
0000000000000db9         db  0x9c ; '.'
0000000000000dba         db  0x20 ; ' '
0000000000000dbb         db  0x00 ; '.'
0000000000000dbc         db  0x00 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x00 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0x08 ; '.'
0000000000000dc1         db  0x00 ; '.'
0000000000000dc2         db  0x00 ; '.'
0000000000000dc3         db  0x00 ; '.'
0000000000000dc4         db  0x00 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x00 ; '.'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0x9e ; '.'
0000000000000dc9         db  0x6d ; 'm'
0000000000000dca         db  0x00 ; '.'
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x00 ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x00 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0x28 ; '('
0000000000000dd1         db  0x9c ; '.'
0000000000000dd2         db  0x20 ; ' '
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x00 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x00 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0x08 ; '.'
0000000000000dd9         db  0x00 ; '.'
0000000000000dda         db  0x00 ; '.'
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x00 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x00 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0xef ; '.'
0000000000000de1         db  0x71 ; 'q'
0000000000000de2         db  0x00 ; '.'
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x00 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x00 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0x08 ; '.'
0000000000000de9         db  0xa0 ; '.'
0000000000000dea         db  0x20 ; ' '
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x00 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x00 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0x08 ; '.'
0000000000000df1         db  0x00 ; '.'
0000000000000df2         db  0x00 ; '.'
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x00 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x00 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0x08 ; '.'
0000000000000df9         db  0xa0 ; '.'
0000000000000dfa         db  0x20 ; ' '
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x00 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x00 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0x10 ; '.'
0000000000000e01         db  0xa0 ; '.'
0000000000000e02         db  0x20 ; ' '
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x00 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x00 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0x08 ; '.'
0000000000000e09         db  0x00 ; '.'
0000000000000e0a         db  0x00 ; '.'
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x00 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x00 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0x36 ; '6'
0000000000000e11         db  0x71 ; 'q'
0000000000000e12         db  0x00 ; '.'
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x00 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x00 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0x60 ; '`'
0000000000000e19         db  0xa0 ; '.'
0000000000000e1a         db  0x20 ; ' '
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x00 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x00 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0x08 ; '.'
0000000000000e21         db  0x00 ; '.'
0000000000000e22         db  0x00 ; '.'
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x00 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x00 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0x70 ; 'p'
0000000000000e29         db  0xa0 ; '.'
0000000000000e2a         db  0x20 ; ' '
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x00 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x00 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0x78 ; 'x'
0000000000000e31         db  0xa0 ; '.'
0000000000000e32         db  0x20 ; ' '
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0x08 ; '.'
0000000000000e39         db  0x00 ; '.'
0000000000000e3a         db  0x00 ; '.'
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x00 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x00 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0xe0 ; '.'
0000000000000e41         db  0xa0 ; '.'
0000000000000e42         db  0x20 ; ' '
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x00 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0xc0 ; '.'
0000000000000e49         db  0x9f ; '.'
0000000000000e4a         db  0x20 ; ' '
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x00 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0x06 ; '.'
0000000000000e51         db  0x00 ; '.'
0000000000000e52         db  0x00 ; '.'
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x06 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x00 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0x00 ; '.'
0000000000000e59         db  0x00 ; '.'
0000000000000e5a         db  0x00 ; '.'
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x00 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x00 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0xc8 ; '.'
0000000000000e61         db  0x9f ; '.'
0000000000000e62         db  0x20 ; ' '
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x00 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0x06 ; '.'
0000000000000e69         db  0x00 ; '.'
0000000000000e6a         db  0x00 ; '.'
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x1a ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x00 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0x00 ; '.'
0000000000000e71         db  0x00 ; '.'
0000000000000e72         db  0x00 ; '.'
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x00 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0xd0 ; '.'
0000000000000e79         db  0x9f ; '.'
0000000000000e7a         db  0x20 ; ' '
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x00 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0x06 ; '.'
0000000000000e81         db  0x00 ; '.'
0000000000000e82         db  0x00 ; '.'
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x1e ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0x00 ; '.'
0000000000000e89         db  0x00 ; '.'
0000000000000e8a         db  0x00 ; '.'
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x00 ; '.'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0xd8 ; '.'
0000000000000e91         db  0x9f ; '.'
0000000000000e92         db  0x20 ; ' '
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'
0000000000000e98         db  0x06 ; '.'
0000000000000e99         db  0x00 ; '.'
0000000000000e9a         db  0x00 ; '.'
0000000000000e9b         db  0x00 ; '.'
0000000000000e9c         db  0x31 ; '1'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x00 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0x00 ; '.'
0000000000000ea1         db  0x00 ; '.'
0000000000000ea2         db  0x00 ; '.'
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x00 ; '.'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0xe0 ; '.'
0000000000000ea9         db  0x9f ; '.'
0000000000000eaa         db  0x20 ; ' '
0000000000000eab         db  0x00 ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x00 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0x06 ; '.'
0000000000000eb1         db  0x00 ; '.'
0000000000000eb2         db  0x00 ; '.'
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x34 ; '4'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0x00 ; '.'
0000000000000eb9         db  0x00 ; '.'
0000000000000eba         db  0x00 ; '.'
0000000000000ebb         db  0x00 ; '.'
0000000000000ebc         db  0x00 ; '.'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x00 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0x80 ; '.'
0000000000000ec1         db  0xa0 ; '.'
0000000000000ec2         db  0x20 ; ' '
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x00 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0x05 ; '.'
0000000000000ec9         db  0x00 ; '.'
0000000000000eca         db  0x00 ; '.'
0000000000000ecb         db  0x00 ; '.'
0000000000000ecc         db  0x37 ; '7'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0x00 ; '.'
0000000000000ed1         db  0x00 ; '.'
0000000000000ed2         db  0x00 ; '.'
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x00 ; '.'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0x88 ; '.'
0000000000000ed9         db  0xa0 ; '.'
0000000000000eda         db  0x20 ; ' '
0000000000000edb         db  0x00 ; '.'
0000000000000edc         db  0x00 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0x05 ; '.'
0000000000000ee1         db  0x00 ; '.'
0000000000000ee2         db  0x00 ; '.'
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x36 ; '6'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0x00 ; '.'
0000000000000ee9         db  0x00 ; '.'
0000000000000eea         db  0x00 ; '.'
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x00 ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x00 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0x90 ; '.'
0000000000000ef1         db  0xa0 ; '.'
0000000000000ef2         db  0x20 ; ' '
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0x05 ; '.'
0000000000000ef9         db  0x00 ; '.'
0000000000000efa         db  0x00 ; '.'
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x3c ; '<'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0x00 ; '.'
0000000000000f01         db  0x00 ; '.'
0000000000000f02         db  0x00 ; '.'
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x00 ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0x98 ; '.'
0000000000000f09         db  0xa0 ; '.'
0000000000000f0a         db  0x20 ; ' '
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x00 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0x05 ; '.'
0000000000000f11         db  0x00 ; '.'
0000000000000f12         db  0x00 ; '.'
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x39 ; '9'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0x00 ; '.'
0000000000000f19         db  0x00 ; '.'
0000000000000f1a         db  0x00 ; '.'
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x00 ; '.'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0xa0 ; '.'
0000000000000f21         db  0xa0 ; '.'
0000000000000f22         db  0x20 ; ' '
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x00 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0x05 ; '.'
0000000000000f29         db  0x00 ; '.'
0000000000000f2a         db  0x00 ; '.'
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x3b ; ';'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0x00 ; '.'
0000000000000f31         db  0x00 ; '.'
0000000000000f32         db  0x00 ; '.'
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x00 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0xf38; 0x13b8[ (1152 bytes)
        ; File offset : [3896; 5048[ (1152 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000f38         db  0x40 ; '@'
0000000000000f39         db  0x9e ; '.'
0000000000000f3a         db  0x20 ; ' '
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x00 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0x07 ; '.'
0000000000000f41         db  0x00 ; '.'
0000000000000f42         db  0x00 ; '.'
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x01 ; '.'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0x00 ; '.'
0000000000000f49         db  0x00 ; '.'
0000000000000f4a         db  0x00 ; '.'
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x00 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0x48 ; 'H'
0000000000000f51         db  0x9e ; '.'
0000000000000f52         db  0x20 ; ' '
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0x07 ; '.'
0000000000000f59         db  0x00 ; '.'
0000000000000f5a         db  0x00 ; '.'
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x02 ; '.'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0x00 ; '.'
0000000000000f61         db  0x00 ; '.'
0000000000000f62         db  0x00 ; '.'
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x00 ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0x50 ; 'P'
0000000000000f69         db  0x9e ; '.'
0000000000000f6a         db  0x20 ; ' '
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0x07 ; '.'
0000000000000f71         db  0x00 ; '.'
0000000000000f72         db  0x00 ; '.'
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x03 ; '.'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0x00 ; '.'
0000000000000f79         db  0x00 ; '.'
0000000000000f7a         db  0x00 ; '.'
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x00 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0x58 ; 'X'
0000000000000f81         db  0x9e ; '.'
0000000000000f82         db  0x20 ; ' '
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x00 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0x07 ; '.'
0000000000000f89         db  0x00 ; '.'
0000000000000f8a         db  0x00 ; '.'
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x04 ; '.'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0x00 ; '.'
0000000000000f91         db  0x00 ; '.'
0000000000000f92         db  0x00 ; '.'
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x00 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0x60 ; '`'
0000000000000f99         db  0x9e ; '.'
0000000000000f9a         db  0x20 ; ' '
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'                                         ; DATA XREF=vasnprintf+180
0000000000000fa0         db  0x07 ; '.'
0000000000000fa1         db  0x00 ; '.'
0000000000000fa2         db  0x00 ; '.'
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x05 ; '.'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0x00 ; '.'
0000000000000fa9         db  0x00 ; '.'
0000000000000faa         db  0x00 ; '.'
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x00 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0x68 ; 'h'
0000000000000fb1         db  0x9e ; '.'
0000000000000fb2         db  0x20 ; ' '
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x00 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0x07 ; '.'
0000000000000fb9         db  0x00 ; '.'
0000000000000fba         db  0x00 ; '.'
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x07 ; '.'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0x00 ; '.'
0000000000000fc1         db  0x00 ; '.'
0000000000000fc2         db  0x00 ; '.'
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x00 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0x70 ; 'p'
0000000000000fc9         db  0x9e ; '.'
0000000000000fca         db  0x20 ; ' '
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0x07 ; '.'
0000000000000fd1         db  0x00 ; '.'
0000000000000fd2         db  0x00 ; '.'
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x08 ; '.'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x00 ; '.'
0000000000000fd9         db  0x00 ; '.'
0000000000000fda         db  0x00 ; '.'
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x00 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0x78 ; 'x'
0000000000000fe1         db  0x9e ; '.'
0000000000000fe2         db  0x20 ; ' '
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x00 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0x07 ; '.'
0000000000000fe9         db  0x00 ; '.'
0000000000000fea         db  0x00 ; '.'
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x09 ; '.'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x00 ; '.'
0000000000000ff1         db  0x00 ; '.'
0000000000000ff2         db  0x00 ; '.'
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x00 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0x80 ; '.'
0000000000000ff9         db  0x9e ; '.'
0000000000000ffa         db  0x20 ; ' '
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'
0000000000001000         db  0x07 ; '.'
0000000000001001         db  0x00 ; '.'
0000000000001002         db  0x00 ; '.'
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x0a ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x00 ; '.'
0000000000001009         db  0x00 ; '.'
000000000000100a         db  0x00 ; '.'
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x00 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0x88 ; '.'
0000000000001011         db  0x9e ; '.'
0000000000001012         db  0x20 ; ' '
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0x07 ; '.'
0000000000001019         db  0x00 ; '.'
000000000000101a         db  0x00 ; '.'
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x0b ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x00 ; '.'
0000000000001021         db  0x00 ; '.'
0000000000001022         db  0x00 ; '.'
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x00 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x90 ; '.'
0000000000001029         db  0x9e ; '.'
000000000000102a         db  0x20 ; ' '
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x00 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0x07 ; '.'
0000000000001031         db  0x00 ; '.'
0000000000001032         db  0x00 ; '.'
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x0c ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x00 ; '.'
0000000000001039         db  0x00 ; '.'
000000000000103a         db  0x00 ; '.'
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x00 ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0x98 ; '.'
0000000000001041         db  0x9e ; '.'
0000000000001042         db  0x20 ; ' '
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x00 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0x07 ; '.'
0000000000001049         db  0x00 ; '.'
000000000000104a         db  0x00 ; '.'
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x0d ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x00 ; '.'
0000000000001051         db  0x00 ; '.'
0000000000001052         db  0x00 ; '.'
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x00 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0xa0 ; '.'
0000000000001059         db  0x9e ; '.'
000000000000105a         db  0x20 ; ' '
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0x07 ; '.'
0000000000001061         db  0x00 ; '.'
0000000000001062         db  0x00 ; '.'
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x0e ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x00 ; '.'
0000000000001069         db  0x00 ; '.'
000000000000106a         db  0x00 ; '.'
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x00 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0xa8 ; '.'
0000000000001071         db  0x9e ; '.'
0000000000001072         db  0x20 ; ' '
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x00 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0x07 ; '.'
0000000000001079         db  0x00 ; '.'
000000000000107a         db  0x00 ; '.'
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x0f ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x00 ; '.'
0000000000001081         db  0x00 ; '.'
0000000000001082         db  0x00 ; '.'
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x00 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0xb0 ; '.'
0000000000001089         db  0x9e ; '.'
000000000000108a         db  0x20 ; ' '
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x00 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0x07 ; '.'
0000000000001091         db  0x00 ; '.'
0000000000001092         db  0x00 ; '.'
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x10 ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x00 ; '.'
0000000000001099         db  0x00 ; '.'
000000000000109a         db  0x00 ; '.'
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x00 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0xb8 ; '.'
00000000000010a1         db  0x9e ; '.'
00000000000010a2         db  0x20 ; ' '
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x00 ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0x07 ; '.'
00000000000010a9         db  0x00 ; '.'
00000000000010aa         db  0x00 ; '.'
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x11 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x00 ; '.'
00000000000010b1         db  0x00 ; '.'
00000000000010b2         db  0x00 ; '.'
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x00 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0xc0 ; '.'
00000000000010b9         db  0x9e ; '.'
00000000000010ba         db  0x20 ; ' '
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x00 ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0x07 ; '.'
00000000000010c1         db  0x00 ; '.'
00000000000010c2         db  0x00 ; '.'
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x12 ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x00 ; '.'
00000000000010c9         db  0x00 ; '.'
00000000000010ca         db  0x00 ; '.'
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x00 ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0xc8 ; '.'
00000000000010d1         db  0x9e ; '.'
00000000000010d2         db  0x20 ; ' '
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x00 ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0x07 ; '.'
00000000000010d9         db  0x00 ; '.'
00000000000010da         db  0x00 ; '.'
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x13 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x00 ; '.'
00000000000010e1         db  0x00 ; '.'
00000000000010e2         db  0x00 ; '.'
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x00 ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0xd0 ; '.'
00000000000010e9         db  0x9e ; '.'
00000000000010ea         db  0x20 ; ' '
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x00 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0x07 ; '.'
00000000000010f1         db  0x00 ; '.'
00000000000010f2         db  0x00 ; '.'
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x14 ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0x00 ; '.'
00000000000010f9         db  0x00 ; '.'
00000000000010fa         db  0x00 ; '.'
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x00 ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0xd8 ; '.'
0000000000001101         db  0x9e ; '.'
0000000000001102         db  0x20 ; ' '
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x00 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0x07 ; '.'
0000000000001109         db  0x00 ; '.'
000000000000110a         db  0x00 ; '.'
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x15 ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0x00 ; '.'
0000000000001111         db  0x00 ; '.'
0000000000001112         db  0x00 ; '.'
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x00 ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0xe0 ; '.'
0000000000001119         db  0x9e ; '.'
000000000000111a         db  0x20 ; ' '
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x00 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x07 ; '.'
0000000000001121         db  0x00 ; '.'
0000000000001122         db  0x00 ; '.'
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x16 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0x00 ; '.'
0000000000001129         db  0x00 ; '.'
000000000000112a         db  0x00 ; '.'
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x00 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0xe8 ; '.'
0000000000001131         db  0x9e ; '.'
0000000000001132         db  0x20 ; ' '
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x00 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x07 ; '.'
0000000000001139         db  0x00 ; '.'
000000000000113a         db  0x00 ; '.'
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x17 ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0x00 ; '.'
0000000000001141         db  0x00 ; '.'
0000000000001142         db  0x00 ; '.'
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x00 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0xf0 ; '.'
0000000000001149         db  0x9e ; '.'
000000000000114a         db  0x20 ; ' '
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x00 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x07 ; '.'
0000000000001151         db  0x00 ; '.'
0000000000001152         db  0x00 ; '.'
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x18 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0x00 ; '.'
0000000000001159         db  0x00 ; '.'
000000000000115a         db  0x00 ; '.'
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x00 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0xf8 ; '.'
0000000000001161         db  0x9e ; '.'
0000000000001162         db  0x20 ; ' '
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x00 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x07 ; '.'
0000000000001169         db  0x00 ; '.'
000000000000116a         db  0x00 ; '.'
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x19 ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0x00 ; '.'
0000000000001171         db  0x00 ; '.'
0000000000001172         db  0x00 ; '.'
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x00 ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0x00 ; '.'
0000000000001179         db  0x9f ; '.'
000000000000117a         db  0x20 ; ' '
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x00 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x07 ; '.'
0000000000001181         db  0x00 ; '.'
0000000000001182         db  0x00 ; '.'
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x1b ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x00 ; '.'
0000000000001189         db  0x00 ; '.'
000000000000118a         db  0x00 ; '.'
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x00 ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0x08 ; '.'
0000000000001191         db  0x9f ; '.'
0000000000001192         db  0x20 ; ' '
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x00 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0x07 ; '.'
0000000000001199         db  0x00 ; '.'
000000000000119a         db  0x00 ; '.'
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x1c ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x00 ; '.'
00000000000011a1         db  0x00 ; '.'
00000000000011a2         db  0x00 ; '.'
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x00 ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0x10 ; '.'
00000000000011a9         db  0x9f ; '.'
00000000000011aa         db  0x20 ; ' '
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x00 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0x07 ; '.'
00000000000011b1         db  0x00 ; '.'
00000000000011b2         db  0x00 ; '.'
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x1d ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x00 ; '.'
00000000000011b9         db  0x00 ; '.'
00000000000011ba         db  0x00 ; '.'
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x00 ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0x18 ; '.'
00000000000011c1         db  0x9f ; '.'
00000000000011c2         db  0x20 ; ' '
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x00 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0x07 ; '.'
00000000000011c9         db  0x00 ; '.'
00000000000011ca         db  0x00 ; '.'
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x1f ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x00 ; '.'
00000000000011d1         db  0x00 ; '.'
00000000000011d2         db  0x00 ; '.'
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x00 ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0x20 ; ' '
00000000000011d9         db  0x9f ; '.'
00000000000011da         db  0x20 ; ' '
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x00 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0x07 ; '.'
00000000000011e1         db  0x00 ; '.'
00000000000011e2         db  0x00 ; '.'
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x20 ; ' '
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x00 ; '.'
00000000000011e9         db  0x00 ; '.'
00000000000011ea         db  0x00 ; '.'
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x00 ; '.'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0x28 ; '('
00000000000011f1         db  0x9f ; '.'
00000000000011f2         db  0x20 ; ' '
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x00 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0x07 ; '.'
00000000000011f9         db  0x00 ; '.'
00000000000011fa         db  0x00 ; '.'
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x21 ; '!'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x00 ; '.'
0000000000001201         db  0x00 ; '.'
0000000000001202         db  0x00 ; '.'
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x00 ; '.'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0x30 ; '0'
0000000000001209         db  0x9f ; '.'
000000000000120a         db  0x20 ; ' '
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x00 ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0x07 ; '.'
0000000000001211         db  0x00 ; '.'
0000000000001212         db  0x00 ; '.'
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x22 ; '"'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x00 ; '.'
0000000000001219         db  0x00 ; '.'
000000000000121a         db  0x00 ; '.'
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x00 ; '.'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0x38 ; '8'
0000000000001221         db  0x9f ; '.'
0000000000001222         db  0x20 ; ' '
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x00 ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0x07 ; '.'
0000000000001229         db  0x00 ; '.'
000000000000122a         db  0x00 ; '.'
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x23 ; '#'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x00 ; '.'
0000000000001231         db  0x00 ; '.'
0000000000001232         db  0x00 ; '.'
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x00 ; '.'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0x40 ; '@'
0000000000001239         db  0x9f ; '.'
000000000000123a         db  0x20 ; ' '
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x00 ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x07 ; '.'
0000000000001241         db  0x00 ; '.'
0000000000001242         db  0x00 ; '.'
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x24 ; '$'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x00 ; '.'
0000000000001249         db  0x00 ; '.'
000000000000124a         db  0x00 ; '.'
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x00 ; '.'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0x48 ; 'H'
0000000000001251         db  0x9f ; '.'
0000000000001252         db  0x20 ; ' '
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x00 ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0x07 ; '.'
0000000000001259         db  0x00 ; '.'
000000000000125a         db  0x00 ; '.'
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x25 ; '%'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x00 ; '.'
0000000000001261         db  0x00 ; '.'
0000000000001262         db  0x00 ; '.'
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x00 ; '.'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x50 ; 'P'
0000000000001269         db  0x9f ; '.'
000000000000126a         db  0x20 ; ' '
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x00 ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x07 ; '.'
0000000000001271         db  0x00 ; '.'
0000000000001272         db  0x00 ; '.'
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x26 ; '&'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x00 ; '.'
0000000000001279         db  0x00 ; '.'
000000000000127a         db  0x00 ; '.'
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x00 ; '.'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x58 ; 'X'
0000000000001281         db  0x9f ; '.'
0000000000001282         db  0x20 ; ' '
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x00 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0x07 ; '.'
0000000000001289         db  0x00 ; '.'
000000000000128a         db  0x00 ; '.'
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x27 ; '''
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x00 ; '.'
0000000000001291         db  0x00 ; '.'
0000000000001292         db  0x00 ; '.'
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x00 ; '.'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x60 ; '`'
0000000000001299         db  0x9f ; '.'
000000000000129a         db  0x20 ; ' '
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x00 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0x07 ; '.'
00000000000012a1         db  0x00 ; '.'
00000000000012a2         db  0x00 ; '.'
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x28 ; '('
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x00 ; '.'
00000000000012a9         db  0x00 ; '.'
00000000000012aa         db  0x00 ; '.'
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x00 ; '.'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x68 ; 'h'
00000000000012b1         db  0x9f ; '.'
00000000000012b2         db  0x20 ; ' '
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x00 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0x07 ; '.'
00000000000012b9         db  0x00 ; '.'
00000000000012ba         db  0x00 ; '.'
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x29 ; ')'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x00 ; '.'
00000000000012c1         db  0x00 ; '.'
00000000000012c2         db  0x00 ; '.'
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x00 ; '.'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0x70 ; 'p'
00000000000012c9         db  0x9f ; '.'
00000000000012ca         db  0x20 ; ' '
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x00 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0x07 ; '.'
00000000000012d1         db  0x00 ; '.'
00000000000012d2         db  0x00 ; '.'
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x2a ; '*'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x00 ; '.'
00000000000012d9         db  0x00 ; '.'
00000000000012da         db  0x00 ; '.'
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x00 ; '.'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0x78 ; 'x'
00000000000012e1         db  0x9f ; '.'
00000000000012e2         db  0x20 ; ' '
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x00 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0x07 ; '.'
00000000000012e9         db  0x00 ; '.'
00000000000012ea         db  0x00 ; '.'
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x2b ; '+'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x00 ; '.'
00000000000012f1         db  0x00 ; '.'
00000000000012f2         db  0x00 ; '.'
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x00 ; '.'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x80 ; '.'
00000000000012f9         db  0x9f ; '.'
00000000000012fa         db  0x20 ; ' '
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x00 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0x07 ; '.'
0000000000001301         db  0x00 ; '.'
0000000000001302         db  0x00 ; '.'
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x2c ; ','
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x00 ; '.'
0000000000001309         db  0x00 ; '.'
000000000000130a         db  0x00 ; '.'
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x00 ; '.'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0x88 ; '.'
0000000000001311         db  0x9f ; '.'
0000000000001312         db  0x20 ; ' '
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x00 ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0x07 ; '.'
0000000000001319         db  0x00 ; '.'
000000000000131a         db  0x00 ; '.'
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x2d ; '-'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x00 ; '.'
0000000000001321         db  0x00 ; '.'
0000000000001322         db  0x00 ; '.'
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x00 ; '.'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0x90 ; '.'
0000000000001329         db  0x9f ; '.'
000000000000132a         db  0x20 ; ' '
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x00 ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0x07 ; '.'
0000000000001331         db  0x00 ; '.'
0000000000001332         db  0x00 ; '.'
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x2e ; '.'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x00 ; '.'
0000000000001339         db  0x00 ; '.'
000000000000133a         db  0x00 ; '.'
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x00 ; '.'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0x98 ; '.'
0000000000001341         db  0x9f ; '.'
0000000000001342         db  0x20 ; ' '
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x00 ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0x07 ; '.'
0000000000001349         db  0x00 ; '.'
000000000000134a         db  0x00 ; '.'
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x2f ; '/'
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x00 ; '.'
0000000000001351         db  0x00 ; '.'
0000000000001352         db  0x00 ; '.'
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x00 ; '.'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0xa0 ; '.'
0000000000001359         db  0x9f ; '.'
000000000000135a         db  0x20 ; ' '
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x00 ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0x07 ; '.'
0000000000001361         db  0x00 ; '.'
0000000000001362         db  0x00 ; '.'
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x30 ; '0'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0x00 ; '.'
0000000000001369         db  0x00 ; '.'
000000000000136a         db  0x00 ; '.'
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x00 ; '.'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0xa8 ; '.'
0000000000001371         db  0x9f ; '.'
0000000000001372         db  0x20 ; ' '
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x00 ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x07 ; '.'
0000000000001379         db  0x00 ; '.'
000000000000137a         db  0x00 ; '.'
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x32 ; '2'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0x00 ; '.'
0000000000001381         db  0x00 ; '.'
0000000000001382         db  0x00 ; '.'
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x00 ; '.'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0xb0 ; '.'
0000000000001389         db  0x9f ; '.'
000000000000138a         db  0x20 ; ' '
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x00 ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x07 ; '.'
0000000000001391         db  0x00 ; '.'
0000000000001392         db  0x00 ; '.'
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x33 ; '3'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0x00 ; '.'
0000000000001399         db  0x00 ; '.'
000000000000139a         db  0x00 ; '.'
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x00 ; '.'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0xb8 ; '.'
00000000000013a1         db  0x9f ; '.'
00000000000013a2         db  0x20 ; ' '
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x00 ; '.'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x07 ; '.'
00000000000013a9         db  0x00 ; '.'
00000000000013aa         db  0x00 ; '.'
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x35 ; '5'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x00 ; '.'
00000000000013b1         db  0x00 ; '.'
00000000000013b2         db  0x00 ; '.'
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x00 ; '.'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x13b8; 0x13cf[ (23 bytes)
        ; File offset : [5048; 5071[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
00000000000013b8         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
00000000000013bc         mov        rax, qword [qword_209fd0]                   ; qword_209fd0
00000000000013c3         test       rax, rax
00000000000013c6         je         loc_13ca

00000000000013c8         call       rax

                     loc_13ca:
00000000000013ca         add        rsp, 0x8                                    ; CODE XREF=_init+14
00000000000013ce         ret
                        ; endp
00000000000013cf         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x13d0; 0x16e0[ (784 bytes)
        ; File offset : [5072; 5856[ (784 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_13d0:
00000000000013d0         push       qword [qword_209e30]                        ; Begin of unwind block (FDE at 0x7f04), qword_209e30, CODE XREF=sub_13e6+5
00000000000013d6         jmp        qword [qword_209e30+8]                      ; 0x209e38
                        ; endp
00000000000013dc         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___snprintf_chk:        // __snprintf_chk
00000000000013e0         jmp        qword [__snprintf_chk@GOT]                  ; __snprintf_chk, __snprintf_chk@GOT, CODE XREF=vasnprintf+1464, vasnprintf+1776, vasnprintf+2093, vasnprintf+2222, vasnprintf+2417, vasnprintf+3225
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_13e6:
00000000000013e6         push       0x0
00000000000013eb         jmp        loc_13d0


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
00000000000013f0         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=quotearg_n_options+277, quotearg_free+55, quotearg_free+82, quotearg_free+120, xrealloc+40, rpl_vfprintf+120, rpl_vfprintf+200, vasnprintf+402, vasnprintf+430, vasnprintf+458, vasnprintf+1905
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_13f6:
00000000000013f6         push       0x1
00000000000013fb         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
0000000000001400         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=set_program_name+154, sub_2a80+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48, vasnprintf+3878
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1406:
0000000000001406         push       0x2
000000000000140b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
0000000000001410         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=main+412, main+583, ignorable_failure+102, close_stdout+22, quotearg_n_options+28, clone_quoting_options+7, quotearg_buffer+45, quotearg_alloc_mem+42, rpl_vfprintf+186, rpl_vfprintf+211, close_stream+60
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1416:
0000000000001416         push       0x3
000000000000141b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
0000000000001420         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+556, usage+749
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1426:
0000000000001426         push       0x4
000000000000142b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
0000000000001430         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1436:
0000000000001436         push       0x5
000000000000143b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
0000000000001440         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1446:
0000000000001446         push       0x6
000000000000144b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
0000000000001450         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+77
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1456:
0000000000001456         push       0x7
000000000000145b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
0000000000001460         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1466:
0000000000001466         push       0x8
000000000000146b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
0000000000001470         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+65
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1476:
0000000000001476         push       0x9
000000000000147b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_rmdir:        // rmdir
0000000000001480         jmp        qword [rmdir@GOT]                           ; rmdir, rmdir@GOT, CODE XREF=main+291, main+574
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1486:
0000000000001486         push       0xa
000000000000148b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
0000000000001490         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+385, main+464, main+635, main+699, main+777, usage+56, usage+102, usage+146, usage+183, usage+220, usage+257
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1496:
0000000000001496         push       0xb
000000000000149b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
00000000000014a0         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14a6:
00000000000014a6         push       0xc
00000000000014ab         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
00000000000014b0         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=quotearg_buffer_restyled+343, sub_2a80+411, sub_2a80+1742, xstrdup+4, base_len+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14b6:
00000000000014b6         push       0xd
00000000000014bb         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_openat:        // openat
00000000000014c0         jmp        qword [openat@GOT]                          ; openat, openat@GOT, CODE XREF=ignorable_failure+75
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14c6:
00000000000014c6         push       0xe
00000000000014cb         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
00000000000014d0         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=prog_fprintf+271, sub_2a80+2739, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137, quotearg_n_custom_mem+140, version_etc_va+101, version_etc+192, rpl_mbrtowc+126, rpl_vfprintf+237
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14d6:
00000000000014d6         push       0xf
00000000000014db         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
00000000000014e0         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+119
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14e6:
00000000000014e6         push       0x10
00000000000014eb         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
00000000000014f0         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14f6:
00000000000014f6         push       0x11
00000000000014fb         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___overflow:        // __overflow
0000000000001500         jmp        qword [__overflow@GOT]                      ; __overflow, __overflow@GOT, CODE XREF=prog_fprintf+264
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1506:
0000000000001506         push       0x12
000000000000150b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
0000000000001510         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=main+520, set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1516:
0000000000001516         push       0x13
000000000000151b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
0000000000001520         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1526:
0000000000001526         push       0x14
000000000000152b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
0000000000001530         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1536:
0000000000001536         push       0x15
000000000000153b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_close:        // close
0000000000001540         jmp        qword [close@GOT]                           ; close, close@GOT, CODE XREF=ignorable_failure+188
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1546:
0000000000001546         push       0x16
000000000000154b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_closedir:        // closedir
0000000000001550         jmp        qword [closedir@GOT]                        ; closedir, closedir@GOT, CODE XREF=ignorable_failure+164, ignorable_failure+202
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1556:
0000000000001556         push       0x17
000000000000155b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
0000000000001560         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=quotearg_buffer_restyled+410
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1566:
0000000000001566         push       0x18
000000000000156b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
0000000000001570         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+157, usage+194, usage+231, usage+275, usage+864, prog_fprintf+120, version_etc_arn+135, emit_bug_reporting_address+123
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1576:
0000000000001576         push       0x19
000000000000157b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
0000000000001580         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1586:
0000000000001586         push       0x1a
000000000000158b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
0000000000001590         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=xmemdup+35, vasnprintf+686, vasnprintf+912, vasnprintf+973, vasnprintf+2590, vasnprintf+3085, vasnprintf+3403, vasnprintf+3547, vasnprintf+4227, printf_parse+2492, printf_parse+2595
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1596:
0000000000001596         push       0x1b
000000000000159b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
00000000000015a0         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15a6:
00000000000015a6         push       0x1c
00000000000015ab         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_readdir:        // readdir
00000000000015b0         jmp        qword [readdir@GOT]                         ; readdir, readdir@GOT, CODE XREF=ignorable_failure+123
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15b6:
00000000000015b6         push       0x1d
00000000000015bb         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
00000000000015c0         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=xmalloc+4, vasnprintf+210, vasnprintf+2547, vasnprintf+3007, vasnprintf+3353, vasnprintf+3497, vasnprintf+4191, printf_parse+2420, printf_parse+2528, printf_parse+2852, printf_parse+3169
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15c6:
00000000000015c6         push       0x1e
00000000000015cb         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
00000000000015d0         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15d6:
00000000000015d6         push       0x1f
00000000000015db         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
00000000000015e0         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15e6:
00000000000015e6         push       0x20
00000000000015eb         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
00000000000015f0         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15f6:
00000000000015f6         push       0x21
00000000000015fb         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite_unlocked:        // fwrite_unlocked
0000000000001600         jmp        qword [fwrite_unlocked@GOT]                 ; fwrite_unlocked, fwrite_unlocked@GOT, CODE XREF=prog_fprintf+145
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1606:
0000000000001606         push       0x22
000000000000160b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
0000000000001610         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17, vasnprintf+645, vasnprintf+1242, vasnprintf+1660, vasnprintf+2887, vasnprintf+4043, vasnprintf+4085, printf_parse+805, printf_parse+1041, printf_parse+2266, printf_parse+2729
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1616:
0000000000001616         push       0x23
000000000000161b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
0000000000001620         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+46, usage+531, usage+724, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1626:
0000000000001626         push       0x24
000000000000162b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
0000000000001630         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=usage+120, usage+519, usage+612, usage+673, usage+712, usage+815, emit_bug_reporting_address+37, emit_bug_reporting_address+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1636:
0000000000001636         push       0x25
000000000000163b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
0000000000001640         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+486, main+656, main+791, close_stdout+125, close_stdout+157, xalloc_die+43
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1646:
0000000000001646         push       0x26
000000000000164b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
0000000000001650         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1656:
0000000000001656         push       0x27
000000000000165b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fdopendir:        // fdopendir
0000000000001660         jmp        qword [fdopendir@GOT]                       ; fdopendir, fdopendir@GOT, CODE XREF=ignorable_failure+89
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1666:
0000000000001666         push       0x28
000000000000166b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000001670         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1676:
0000000000001676         push       0x29
000000000000167b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000001680         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+218, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1686:
0000000000001686         push       0x2a
000000000000168b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
0000000000001690         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149, rpl_vfprintf+102
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1696:
0000000000001696         push       0x2b
000000000000169b         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
00000000000016a0         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642, version_etc_arn+718, version_etc_arn+872
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16a6:
00000000000016a6         push       0x2c
00000000000016ab         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
00000000000016b0         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_2a80+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16b6:
00000000000016b6         push       0x2d
00000000000016bb         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
00000000000016c0         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_2a80+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16c6:
00000000000016c6         push       0x2e
00000000000016cb         jmp        0x13d0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
00000000000016d0         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=sub_2820+51
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16d6:
00000000000016d6         push       0x2f
00000000000016db         jmp        0x13d0
                        ; endp


        ; Section .plt.got
        ; Range: [0x16e0; 0x16e8[ (8 bytes)
        ; File offset : [5856; 5864[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_209fe0:        // qword_209fe0
00000000000016e0         jmp        qword [qword_209fe0]                        ; qword, End of unwind block (FDE at 0x7f04), Begin of unwind block (FDE at 0x7f2c), qword_209fe0, CODE XREF=__do_global_dtors_aux+30
                        ; endp
00000000000016e6         align      8
00000000000016e8         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x7f2c)
00000000000016e9         db  0x00 ; '.'
00000000000016ea         db  0x00 ; '.'
00000000000016eb         db  0x00 ; '.'
00000000000016ec         db  0x00 ; '.'
00000000000016ed         db  0x00 ; '.'
00000000000016ee         db  0x00 ; '.'
00000000000016ef         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x16f0; 0x6cbe[ (21966 bytes)
        ; File offset : [5872; 27838[ (21966 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     main:
00000000000016f0         push       r15                                         ; Begin of unwind block (FDE at 0x7fac), DATA XREF=_start+29
00000000000016f2         push       r14
00000000000016f4         push       r13
00000000000016f6         push       r12
00000000000016f8         lea        r12, qword [longopts]                       ; longopts
00000000000016ff         push       rbp
0000000000001700         push       rbx
0000000000001701         mov        ebp, edi
0000000000001703         mov        rbx, rsi
0000000000001706         sub        rsp, 0x8
000000000000170a         mov        rdi, qword [rsi]
000000000000170d         call       set_program_name                            ; set_program_name
0000000000001712         lea        rsi, qword [aWrittenBySSAnd+27]             ; argument "__locale" for method j_setlocale, 0x76c1
0000000000001719         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
000000000000171e         call       j_setlocale                                 ; setlocale
0000000000001723         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
000000000000172a         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
0000000000001731         call       j_bindtextdomain                            ; bindtextdomain
0000000000001736         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
000000000000173d         call       j_textdomain                                ; textdomain
0000000000001742         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
0000000000001749         call       atexit                                      ; atexit
000000000000174e         mov        byte [remove_empty_parents], 0x0            ; remove_empty_parents

                     loc_1755:
0000000000001755         lea        rdx, qword [aDavidMackenzie+16]             ; argument "__shortopts" for method j_getopt_long, 0x6db5, CODE XREF=main+157, main+231, main+247
000000000000175c         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
000000000000175f         mov        rcx, r12                                    ; argument "__longopts" for method j_getopt_long
0000000000001762         mov        rsi, rbx                                    ; argument "___argv" for method j_getopt_long
0000000000001765         mov        edi, ebp                                    ; argument "___argc" for method j_getopt_long
0000000000001767         call       j_getopt_long                               ; getopt_long
000000000000176c         cmp        eax, 0xffffffff
000000000000176f         je         loc_17ec

0000000000001771         cmp        eax, 0x70
0000000000001774         je         loc_17d0

0000000000001776         jle        loc_1790

0000000000001778         cmp        eax, 0x76
000000000000177b         je         loc_17e0

000000000000177d         add        eax, 0xffffff80
0000000000001780         jne        loc_1a0c

0000000000001786         mov        byte [ignore_fail_on_non_empty], 0x1        ; ignore_fail_on_non_empty
000000000000178d         jmp        loc_1755
000000000000178f         align      16

                     loc_1790:
0000000000001790         cmp        eax, 0xffffff7d                             ; CODE XREF=main+134
0000000000001795         jne        loc_19dd

000000000000179b         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000017a2         mov        rcx, qword [Version]                        ; Version
00000000000017a9         lea        r8, qword [aDavidMackenzie]                 ; "David MacKenzie"
00000000000017b0         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6d60
00000000000017b7         lea        rsi, qword [aRmdir]                         ; "rmdir"
00000000000017be         xor        r9d, r9d
00000000000017c1         xor        eax, eax
00000000000017c3         call       version_etc                                 ; version_etc
00000000000017c8         xor        edi, edi                                    ; argument "__status" for method j_exit
00000000000017ca         call       j_exit                                      ; exit
                        ; endp
00000000000017cf         align      16

                     loc_17d0:
00000000000017d0         mov        byte [remove_empty_parents], 0x1            ; remove_empty_parents, CODE XREF=main+132
00000000000017d7         jmp        loc_1755
00000000000017dc         align      32

                     loc_17e0:
00000000000017e0         mov        byte [verbose], 0x1                         ; verbose, CODE XREF=main+139
00000000000017e7         jmp        loc_1755

                     loc_17ec:
00000000000017ec         mov        eax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+127
00000000000017f2         cmp        eax, ebp
00000000000017f4         je         loc_19eb

00000000000017fa         mov        r12d, 0x1
0000000000001800         jl         loc_1844

0000000000001802         jmp        loc_19c9
0000000000001807         align      16

                     loc_1810:
0000000000001810         mov        rdi, r14                                    ; argument "__path" for method j_rmdir, CODE XREF=main+353, main+410
0000000000001813         call       j_rmdir                                     ; rmdir
0000000000001818         test       eax, eax
000000000000181a         jne        loc_188c

000000000000181c         movzx      r13d, byte [remove_empty_parents]           ; remove_empty_parents
0000000000001824         test       r13b, r13b
0000000000001827         jne        loc_18e0

                     loc_182d:
000000000000182d         mov        eax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+432, main+491, main+664
0000000000001833         add        eax, 0x1
0000000000001836         cmp        eax, ebp
0000000000001838         mov        dword [optind@@GLIBC_2.2.5], eax            ; optind@@GLIBC_2.2.5
000000000000183e         jge        loc_19c9

                     loc_1844:
0000000000001844         cmp        byte [verbose], 0x0                         ; verbose, CODE XREF=main+272
000000000000184b         cdqe
000000000000184d         mov        r14, qword [rbx+rax*8]
0000000000001851         je         loc_1810

0000000000001853         mov        rsi, r14
0000000000001856         mov        edi, 0x4
000000000000185b         call       quotearg_style                              ; quotearg_style
0000000000001860         lea        rsi, qword [aRemovingDirect]                ; argument "msgid" for method j_dcgettext, "removing directory, %s"
0000000000001867         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001869         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000186e         mov        r13, rax
0000000000001871         call       j_dcgettext                                 ; dcgettext
0000000000001876         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000187d         mov        rsi, rax
0000000000001880         mov        rdx, r13
0000000000001883         xor        eax, eax
0000000000001885         call       prog_fprintf                                ; prog_fprintf
000000000000188a         jmp        loc_1810

                     loc_188c:
000000000000188c         call       j___errno_location                          ; __errno_location, CODE XREF=main+298
0000000000001891         mov        edi, dword [rax]
0000000000001893         mov        rsi, r14
0000000000001896         mov        r13, rax
0000000000001899         call       ignorable_failure                           ; ignorable_failure
000000000000189e         test       al, al
00000000000018a0         jne        loc_182d

00000000000018a2         mov        rsi, r14
00000000000018a5         mov        edi, 0x4
00000000000018aa         call       quotearg_style                              ; quotearg_style
00000000000018af         lea        rsi, qword [aFailedToRemove_6ddf]           ; argument "msgid" for method j_dcgettext, "failed to remove %s"
00000000000018b6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000018bb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000018bd         mov        r12, rax
00000000000018c0         call       j_dcgettext                                 ; dcgettext
00000000000018c5         mov        esi, dword [r13]                            ; argument "__errnum" for method j_error
00000000000018c9         mov        rcx, r12
00000000000018cc         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000018cf         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000018d1         xor        eax, eax
00000000000018d3         xor        r12d, r12d
00000000000018d6         call       j_error                                     ; error
00000000000018db         jmp        loc_182d

                     loc_18e0:
00000000000018e0         mov        rdi, r14                                    ; CODE XREF=main+311
00000000000018e3         call       strip_trailing_slashes                      ; strip_trailing_slashes
00000000000018e8         nop        dword [rax+rax]

                     loc_18f0:
00000000000018f0         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr, CODE XREF=main+581
00000000000018f5         mov        rdi, r14                                    ; argument "__s" for method j_strrchr
00000000000018f8         call       j_strrchr                                   ; strrchr
00000000000018fd         test       rax, rax
0000000000001900         je         loc_1985

0000000000001906         cmp        r14, rax
0000000000001909         jb         loc_1919

000000000000190b         jmp        loc_191e
000000000000190d         align      16

                     loc_1910:
0000000000001910         sub        rax, 0x1                                    ; CODE XREF=main+556
0000000000001914         cmp        r14, rax
0000000000001917         je         loc_191e

                     loc_1919:
0000000000001919         cmp        byte [rax], 0x2f                            ; CODE XREF=main+537
000000000000191c         je         loc_1910

                     loc_191e:
000000000000191e         cmp        byte [verbose], 0x0                         ; verbose, CODE XREF=main+539, main+551
0000000000001925         mov        byte [rax+1], 0x0
0000000000001929         jne        loc_198d

                     loc_192b:
000000000000192b         mov        rdi, r14                                    ; argument "__path" for method j_rmdir, CODE XREF=main+724
000000000000192e         call       j_rmdir                                     ; rmdir
0000000000001933         test       eax, eax
0000000000001935         je         loc_18f0

0000000000001937         call       j___errno_location                          ; __errno_location
000000000000193c         mov        edi, dword [rax]
000000000000193e         mov        rsi, r14
0000000000001941         mov        r15, rax
0000000000001944         call       ignorable_failure                           ; ignorable_failure
0000000000001949         test       al, al
000000000000194b         jne        loc_1985

000000000000194d         mov        rsi, r14
0000000000001950         mov        edi, 0x4
0000000000001955         call       quotearg_style                              ; quotearg_style
000000000000195a         lea        rsi, qword [aFailedToRemove]                ; argument "msgid" for method j_dcgettext, "failed to remove directory %s"
0000000000001961         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001966         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001968         mov        r13, rax
000000000000196b         call       j_dcgettext                                 ; dcgettext
0000000000001970         mov        esi, dword [r15]                            ; argument "__errnum" for method j_error
0000000000001973         mov        rcx, r13
0000000000001976         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001979         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000197b         xor        eax, eax
000000000000197d         xor        r13d, r13d
0000000000001980         call       j_error                                     ; error

                     loc_1985:
0000000000001985         and        r12d, r13d                                  ; CODE XREF=main+528, main+603
0000000000001988         jmp        loc_182d

                     loc_198d:
000000000000198d         mov        rsi, r14                                    ; CODE XREF=main+569
0000000000001990         mov        edi, 0x4
0000000000001995         call       quotearg_style                              ; quotearg_style
000000000000199a         lea        rsi, qword [aRemovingDirect]                ; argument "msgid" for method j_dcgettext, "removing directory, %s"
00000000000019a1         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000019a3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000019a8         mov        r15, rax
00000000000019ab         call       j_dcgettext                                 ; dcgettext
00000000000019b0         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000019b7         mov        rsi, rax
00000000000019ba         mov        rdx, r15
00000000000019bd         xor        eax, eax
00000000000019bf         call       prog_fprintf                                ; prog_fprintf
00000000000019c4         jmp        loc_192b

                     loc_19c9:
00000000000019c9         xor        r12d, 0x1                                   ; CODE XREF=main+274, main+334
00000000000019cd         pop        rdx
00000000000019ce         movzx      eax, r12b
00000000000019d2         pop        rbx
00000000000019d3         pop        rbp
00000000000019d4         pop        r12
00000000000019d6         pop        r13
00000000000019d8         pop        r14
00000000000019da         pop        r15
00000000000019dc         ret
                        ; endp

                     loc_19dd:
00000000000019dd         cmp        eax, 0xffffff7e                             ; CODE XREF=main+165
00000000000019e2         jne        loc_1a0c

00000000000019e4         xor        edi, edi                                    ; argument #1 for method usage
00000000000019e6         call       usage                                       ; usage

                     loc_19eb:
00000000000019eb         lea        rsi, qword [aMissingOperand]                ; argument "msgid" for method j_dcgettext, "missing operand", CODE XREF=main+260
00000000000019f2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000019f7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000019f9         call       j_dcgettext                                 ; dcgettext
00000000000019fe         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001a00         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001a03         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001a05         xor        eax, eax
0000000000001a07         call       j_error                                     ; error

                     loc_1a0c:
0000000000001a0c         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=main+144, main+754
0000000000001a11         call       usage                                       ; usage
0000000000001a16         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x7fac)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
0000000000001a20         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x7ed4)
0000000000001a22         mov        r9, rdx
0000000000001a25         pop        rsi
0000000000001a26         mov        rdx, rsp
0000000000001a29         and        rsp, 0xfffffffffffffff0
0000000000001a2d         push       rax
0000000000001a2e         push       rsp
0000000000001a2f         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
0000000000001a36         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
0000000000001a3d         lea        rdi, qword [main]                           ; main
0000000000001a44         call       qword [qword_209fc0+8]                      ; 0x209fc8
0000000000001a4a         hlt
                        ; endp
0000000000001a4b         align      16                                          ; End of unwind block (FDE at 0x7ed4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000001a50         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
0000000000001a57         push       rbp
0000000000001a58         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000001a5f         cmp        rax, rdi
0000000000001a62         mov        rbp, rsp
0000000000001a65         je         loc_1a80

0000000000001a67         mov        rax, qword [qword_209fc0]                   ; qword_209fc0
0000000000001a6e         test       rax, rax
0000000000001a71         je         loc_1a80

0000000000001a73         pop        rbp
0000000000001a74         jmp        rax
                        ; endp
0000000000001a76         align      128

                     loc_1a80:
0000000000001a80         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
0000000000001a81         ret
                        ; endp
0000000000001a82         align      16

                     register_tm_clones:
0000000000001a90         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
0000000000001a97         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000001a9e         push       rbp
0000000000001a9f         sub        rsi, rdi
0000000000001aa2         mov        rbp, rsp
0000000000001aa5         sar        rsi, 0x3
0000000000001aa9         mov        rax, rsi
0000000000001aac         shr        rax, 0x3f
0000000000001ab0         add        rsi, rax
0000000000001ab3         sar        rsi, 0x1
0000000000001ab6         je         loc_1ad0

0000000000001ab8         mov        rax, qword [qword_209fd8]                   ; qword_209fd8
0000000000001abf         test       rax, rax
0000000000001ac2         je         loc_1ad0

0000000000001ac4         pop        rbp
0000000000001ac5         jmp        rax
                        ; endp
0000000000001ac7         align      16

                     loc_1ad0:
0000000000001ad0         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000001ad1         ret
                        ; endp
0000000000001ad2         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
0000000000001ae0         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
0000000000001ae7         jne        loc_1b18

0000000000001ae9         cmp        qword [qword_209fe0], 0x0                   ; qword_209fe0
0000000000001af1         push       rbp
0000000000001af2         mov        rbp, rsp
0000000000001af5         je         loc_1b03

0000000000001af7         mov        rdi, qword [__dso_handle]                   ; __dso_handle
0000000000001afe         call       j_qword_209fe0                              ; qword_209fe0

                     loc_1b03:
0000000000001b03         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
0000000000001b08         mov        byte [completed.7697], 0x1                  ; completed.7697
0000000000001b0f         pop        rbp
0000000000001b10         ret
                        ; endp
0000000000001b11         align      8

                     loc_1b18:
0000000000001b18         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
0000000000001b1a         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000001b20         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000001b21         mov        rbp, rsp
0000000000001b24         pop        rbp
0000000000001b25         jmp        register_tm_clones                          ; register_tm_clones
0000000000001b2a         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     ignorable_failure:
0000000000001b30         cmp        byte [ignore_fail_on_non_empty], 0x0        ; Begin of unwind block (FDE at 0x7f44), ignore_fail_on_non_empty, CODE XREF=main+425, main+596
0000000000001b37         push       r12
0000000000001b39         push       rbp
0000000000001b3a         push       rbx
0000000000001b3b         je         loc_1be0

0000000000001b41         cmp        edi, 0x11
0000000000001b44         sete       bl
0000000000001b47         cmp        edi, 0x27
0000000000001b4a         sete       al
0000000000001b4d         or         bl, al
0000000000001b4f         jne        loc_1bd9

0000000000001b55         cmp        edi, 0x1e
0000000000001b58         ja         loc_1be0

0000000000001b5e         mov        eax, 0x1
0000000000001b63         mov        ecx, edi
0000000000001b65         shl        rax, cl
0000000000001b68         test       eax, 0x40032002
0000000000001b6d         je         loc_1be0

0000000000001b6f         xor        eax, eax
0000000000001b71         mov        edx, 0x30900                                ; argument "__oflag" for method j_openat
0000000000001b76         mov        edi, 0xffffff9c                             ; argument "__fd" for method j_openat
0000000000001b7b         call       j_openat                                    ; openat
0000000000001b80         test       eax, eax
0000000000001b82         mov        r12d, eax
0000000000001b85         js         loc_1be0

0000000000001b87         mov        edi, eax                                    ; argument "__fd" for method j_fdopendir
0000000000001b89         call       j_fdopendir                                 ; fdopendir
0000000000001b8e         test       rax, rax
0000000000001b91         mov        rbp, rax
0000000000001b94         je         loc_1be9

0000000000001b96         call       j___errno_location                          ; __errno_location
0000000000001b9b         mov        r12, rax
0000000000001b9e         mov        dword [rax], 0x0
0000000000001ba4         nop        dword [rax]

                     loc_1ba8:
0000000000001ba8         mov        rdi, rbp                                    ; argument "__dirp" for method j_readdir, CODE XREF=ignorable_failure+155, ignorable_failure+159
0000000000001bab         call       j_readdir                                   ; readdir
0000000000001bb0         test       rax, rax
0000000000001bb3         je         loc_1bf3

0000000000001bb5         cmp        byte [rax+0x13], 0x2e
0000000000001bb9         jne        loc_1bd1

0000000000001bbb         xor        edx, edx
0000000000001bbd         cmp        byte [rax+0x14], 0x2e
0000000000001bc1         sete       dl
0000000000001bc4         movzx      eax, byte [rax+rdx+0x14]
0000000000001bc9         test       al, al
0000000000001bcb         je         loc_1ba8

0000000000001bcd         cmp        al, 0x2f
0000000000001bcf         je         loc_1ba8

                     loc_1bd1:
0000000000001bd1         mov        rdi, rbp                                    ; argument "__dirp" for method j_closedir, CODE XREF=ignorable_failure+137
0000000000001bd4         call       j_closedir                                  ; closedir

                     loc_1bd9:
0000000000001bd9         mov        eax, ebx                                    ; CODE XREF=ignorable_failure+31, ignorable_failure+193, ignorable_failure+212
0000000000001bdb         pop        rbx
0000000000001bdc         pop        rbp
0000000000001bdd         pop        r12
0000000000001bdf         ret
                        ; endp

                     loc_1be0:
0000000000001be0         xor        ebx, ebx                                    ; CODE XREF=ignorable_failure+11, ignorable_failure+40, ignorable_failure+61, ignorable_failure+85
0000000000001be2         mov        eax, ebx
0000000000001be4         pop        rbx
0000000000001be5         pop        rbp
0000000000001be6         pop        r12
0000000000001be8         ret
                        ; endp

                     loc_1be9:
0000000000001be9         mov        edi, r12d                                   ; argument "__fd" for method j_close, CODE XREF=ignorable_failure+100
0000000000001bec         call       j_close                                     ; close
0000000000001bf1         jmp        loc_1bd9

                     loc_1bf3:
0000000000001bf3         mov        ebx, dword [r12]                            ; CODE XREF=ignorable_failure+131
0000000000001bf7         mov        rdi, rbp                                    ; argument "__dirp" for method j_closedir
0000000000001bfa         call       j_closedir                                  ; closedir
0000000000001bff         test       ebx, ebx
0000000000001c01         sete       bl
0000000000001c04         jmp        loc_1bd9
0000000000001c06         align      16                                          ; End of unwind block (FDE at 0x7f44)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
0000000000001c10         push       r13                                         ; Begin of unwind block (FDE at 0x7f80), CODE XREF=main+758, main+801
0000000000001c12         push       r12
0000000000001c14         mov        edx, 0x5
0000000000001c19         push       rbp
0000000000001c1a         push       rbx
0000000000001c1b         mov        ebp, edi
0000000000001c1d         sub        rsp, 0x88
0000000000001c24         mov        rbx, qword [program_name]                   ; program_name
0000000000001c2b         mov        rax, qword [fs:0x28]
0000000000001c34         mov        qword [rsp+0xa8+var_30], rax
0000000000001c39         xor        eax, eax
0000000000001c3b         test       edi, edi
0000000000001c3d         je         loc_1c6d

0000000000001c3f         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
0000000000001c46         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001c48         call       j_dcgettext                                 ; dcgettext
0000000000001c4d         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000001c54         mov        rdx, rax
0000000000001c57         mov        rcx, rbx
0000000000001c5a         mov        esi, 0x1
0000000000001c5f         xor        eax, eax
0000000000001c61         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_1c66:
0000000000001c66         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+678
0000000000001c68         call       j_exit                                      ; exit
                        ; endp

                     loc_1c6d:
0000000000001c6d         lea        rsi, qword [aUsageSOptionDi]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... DIRECTORY...\\n", CODE XREF=usage+45
0000000000001c74         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001c76         call       j_dcgettext                                 ; dcgettext
0000000000001c7b         mov        rdx, rbx
0000000000001c7e         mov        rsi, rax
0000000000001c81         mov        edi, 0x1
0000000000001c86         xor        eax, eax
0000000000001c88         call       j___printf_chk                              ; __printf_chk
0000000000001c8d         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001c94         lea        rsi, qword [aRemoveTheDirec]                ; argument "msgid" for method j_dcgettext, "Remove the DIRECTORY(ies), if they are empty.\\n\\n      --ignore-fail-on-non-empty\\n                  ignore each failure that is solely because a directory\\n                    is non-empty\\n"
0000000000001c9b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001ca0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001ca2         call       j_dcgettext                                 ; dcgettext
0000000000001ca7         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001caa         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001cad         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001cb2         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001cb9         lea        rsi, qword [aPParentsRemove]                ; argument "msgid" for method j_dcgettext, "  -p, --parents   remove DIRECTORY and its ancestors; e.g., 'rmdir -p a/b/c' is\\n                    similar to 'rmdir a/b/c a/b a'\\n  -v, --verbose   output a diagnostic for every directory processed\\n"
0000000000001cc0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001cc5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001cc7         call       j_dcgettext                                 ; dcgettext
0000000000001ccc         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001ccf         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001cd2         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001cd7         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001cde         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
0000000000001ce5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001cea         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001cec         call       j_dcgettext                                 ; dcgettext
0000000000001cf1         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001cf4         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001cf7         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001cfc         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001d03         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
0000000000001d0a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001d0f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001d11         call       j_dcgettext                                 ; dcgettext
0000000000001d16         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001d19         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001d1c         lea        rbx, qword [aRmdir]                         ; "rmdir"
0000000000001d23         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001d28         lea        rax, qword [aRmdir+6]                       ; 0x6cea
0000000000001d2f         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
0000000000001d36         mov        qword [rsp+0xa8+var_48], 0x0
0000000000001d3f         mov        qword [rsp+0xa8+var_40], 0x0
0000000000001d48         mov        rdx, rsp
0000000000001d4b         mov        qword [rsp+0xa8+var_A8], rax
0000000000001d4f         lea        rax, qword [aTestInvocation]                ; "test invocation"
0000000000001d56         mov        qword [rsp+0xa8+var_78], rcx
0000000000001d5b         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
0000000000001d62         mov        qword [rsp+0xa8+var_A0], rax
0000000000001d67         lea        rax, qword [aCoreutils]                     ; "coreutils"
0000000000001d6e         mov        qword [rsp+0xa8+var_68], rcx
0000000000001d73         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
0000000000001d7a         mov        qword [rsp+0xa8+var_98], rax
0000000000001d7f         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
0000000000001d86         mov        qword [rsp+0xa8+var_58], rcx
0000000000001d8b         mov        qword [rsp+0xa8+var_90], rax
0000000000001d90         lea        rax, qword [aSha224sum]                     ; "sha224sum"
0000000000001d97         mov        qword [rsp+0xa8+var_88], rax
0000000000001d9c         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
0000000000001da3         mov        qword [rsp+0xa8+var_80], rax
0000000000001da8         mov        qword [rsp+0xa8+var_70], rax
0000000000001dad         mov        qword [rsp+0xa8+var_60], rax
0000000000001db2         mov        qword [rsp+0xa8+var_50], rax
0000000000001db7         nop        word [rax+rax]

                     loc_1dc0:
0000000000001dc0         add        rdx, 0x10                                   ; CODE XREF=usage+461
0000000000001dc4         mov        rdi, qword [rdx]
0000000000001dc7         test       rdi, rdi
0000000000001dca         je         loc_1ddf

0000000000001dcc         mov        ecx, 0x6
0000000000001dd1         mov        rsi, rbx
0000000000001dd4         rep  cmpsb byte [rsi], byte [rdi]
0000000000001dd6         seta       al
0000000000001dd9         sbb        al, 0x0
0000000000001ddb         test       al, al
0000000000001ddd         jne        loc_1dc0

                     loc_1ddf:
0000000000001ddf         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+442
0000000000001de3         xor        edi, edi
0000000000001de5         mov        edx, 0x5
0000000000001dea         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
0000000000001df1         test       r12, r12
0000000000001df4         je         loc_1ebb

0000000000001dfa         call       j_dcgettext                                 ; dcgettext
0000000000001dff         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000001e06         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6d60
0000000000001e0d         mov        rsi, rax
0000000000001e10         mov        edi, 0x1
0000000000001e15         xor        eax, eax
0000000000001e17         call       j___printf_chk                              ; __printf_chk
0000000000001e1c         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000001e1e         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000001e23         call       j_setlocale                                 ; setlocale
0000000000001e28         test       rax, rax
0000000000001e2b         je         loc_1e49

0000000000001e2d         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x6d6e
0000000000001e34         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000001e39         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
0000000000001e3c         call       j_strncmp                                   ; strncmp
0000000000001e41         test       eax, eax
0000000000001e43         jne        loc_1f50

                     loc_1e49:
0000000000001e49         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+539, usage+869
0000000000001e50         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001e52         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001e57         call       j_dcgettext                                 ; dcgettext
0000000000001e5c         lea        rcx, qword [aRmdir]                         ; "rmdir"
0000000000001e63         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000001e6a         mov        rsi, rax
0000000000001e6d         mov        edi, 0x1
0000000000001e72         xor        eax, eax
0000000000001e74         call       j___printf_chk                              ; __printf_chk
0000000000001e79         cmp        r12, rbx
0000000000001e7c         lea        rcx, qword [aMulticallInvoc+10]             ; 0x6d06
0000000000001e83         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0x76c1
0000000000001e8a         cmove      rbx, rcx

                     loc_1e8e:
0000000000001e8e         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+820
0000000000001e95         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001e97         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001e9c         call       j_dcgettext                                 ; dcgettext
0000000000001ea1         mov        rcx, rbx
0000000000001ea4         mov        rsi, rax
0000000000001ea7         mov        rdx, r12
0000000000001eaa         mov        edi, 0x1
0000000000001eaf         xor        eax, eax
0000000000001eb1         call       j___printf_chk                              ; __printf_chk
0000000000001eb6         jmp        loc_1c66

                     loc_1ebb:
0000000000001ebb         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+484
0000000000001ec0         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000001ec7         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6d60
0000000000001ece         mov        rsi, rax
0000000000001ed1         mov        edi, 0x1
0000000000001ed6         xor        eax, eax
0000000000001ed8         call       j___printf_chk                              ; __printf_chk
0000000000001edd         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000001edf         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000001ee4         call       j_setlocale                                 ; setlocale
0000000000001ee9         test       rax, rax
0000000000001eec         je         loc_1f06

0000000000001eee         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x6d6e
0000000000001ef5         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000001efa         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
0000000000001efd         call       j_strncmp                                   ; strncmp
0000000000001f02         test       eax, eax
0000000000001f04         jne        loc_1f49

                     loc_1f06:
0000000000001f06         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+732
0000000000001f0d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001f12         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001f14         lea        r12, qword [aRmdir]                         ; "rmdir"
0000000000001f1b         lea        rbx, qword [aMulticallInvoc+10]             ; 0x6d06
0000000000001f22         call       j_dcgettext                                 ; dcgettext
0000000000001f27         lea        rcx, qword [aRmdir]                         ; "rmdir"
0000000000001f2e         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000001f35         mov        rsi, rax
0000000000001f38         mov        edi, 0x1
0000000000001f3d         xor        eax, eax
0000000000001f3f         call       j___printf_chk                              ; __printf_chk
0000000000001f44         jmp        loc_1e8e

                     loc_1f49:
0000000000001f49         lea        r12, qword [aRmdir]                         ; "rmdir", CODE XREF=usage+756

                     loc_1f50:
0000000000001f50         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+563
0000000000001f57         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
0000000000001f5e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001f60         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001f65         call       j_dcgettext                                 ; dcgettext
0000000000001f6a         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001f6d         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001f70         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001f75         jmp        loc_1e49
0000000000001f7a         align      128                                         ; End of unwind block (FDE at 0x7f80)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72
        ;    var_58: -88
        ;    var_68: -104
        ;    var_78: -120
        ;    var_88: -136
        ;    var_98: -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C8: int8_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_E0: int64_t, -224
        ;    var_E4: int32_t, -228
        ;    var_E8: int32_t, -232


                     prog_fprintf:
0000000000001f80         push       rbp                                         ; Begin of unwind block (FDE at 0x7ffc), CODE XREF=main+405, main+719
0000000000001f81         push       rbx
0000000000001f82         mov        rbp, rsi
0000000000001f85         mov        rbx, rdi
0000000000001f88         sub        rsp, 0xd8
0000000000001f8f         test       al, al
0000000000001f91         mov        qword [rsp+0xe8+var_B8], rdx
0000000000001f96         mov        qword [rsp+0xe8+var_B0], rcx
0000000000001f9b         mov        qword [rsp+0xe8+var_A8], r8
0000000000001fa0         mov        qword [rsp+0xe8+var_A0], r9
0000000000001fa5         je         loc_1fde

0000000000001fa7         movaps     xmmword [rsp+0xe8+var_98], xmm0
0000000000001fac         movaps     xmmword [rsp+0xe8+var_88], xmm1
0000000000001fb1         movaps     xmmword [rsp+0xe8+var_78], xmm2
0000000000001fb6         movaps     xmmword [rsp+0xe8+var_68], xmm3
0000000000001fbe         movaps     xmmword [rsp+0xe8+var_58], xmm4
0000000000001fc6         movaps     xmmword [rsp+0xe8+var_48], xmm5
0000000000001fce         movaps     xmmword [rsp+0xe8+var_38], xmm6
0000000000001fd6         movaps     xmmword [rsp+0xe8+var_28], xmm7

                     loc_1fde:
0000000000001fde         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked, CODE XREF=prog_fprintf+37
0000000000001fe1         mov        rax, qword [fs:0x28]
0000000000001fea         mov        qword [rsp+0xe8+var_D0], rax
0000000000001fef         xor        eax, eax
0000000000001ff1         mov        rdi, qword [program_name]                   ; argument "__s" for method j_fputs_unlocked, program_name
0000000000001ff8         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001ffd         lea        rdi, qword [aOrAvailableLoc+51]             ; argument "__ptr" for method j_fwrite_unlocked, 0x7133
0000000000002004         mov        rcx, rbx                                    ; argument "__stream" for method j_fwrite_unlocked
0000000000002007         mov        edx, 0x2                                    ; argument "__n" for method j_fwrite_unlocked
000000000000200c         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
0000000000002011         call       j_fwrite_unlocked                           ; fwrite_unlocked
0000000000002016         lea        rax, qword [rsp+0xe8+arg_0]
000000000000201e         mov        rdx, rsp
0000000000002021         mov        rsi, rbp
0000000000002024         mov        rdi, rbx
0000000000002027         mov        dword [rsp+0xe8+var_E8], 0x10
000000000000202e         mov        dword [rsp+0xe8+var_E4], 0x30
0000000000002036         mov        qword [rsp+0xe8+var_E0], rax
000000000000203b         lea        rax, qword [rsp+0xe8+var_C8]
0000000000002040         mov        qword [rsp+0xe8+var_D8], rax
0000000000002045         call       rpl_vfprintf                                ; rpl_vfprintf
000000000000204a         mov        rax, qword [rbx+0x28]
000000000000204e         cmp        rax, qword [rbx+0x30]
0000000000002052         jae        loc_2080

0000000000002054         lea        rdx, qword [rax+1]
0000000000002058         mov        qword [rbx+0x28], rdx
000000000000205c         mov        byte [rax], 0xa

                     loc_205f:
000000000000205f         mov        rax, qword [rsp+0xe8+var_D0]                ; CODE XREF=prog_fprintf+269
0000000000002064         xor        rax, qword [fs:0x28]
000000000000206d         jne        loc_208f

000000000000206f         add        rsp, 0xd8
0000000000002076         pop        rbx
0000000000002077         pop        rbp
0000000000002078         ret
                        ; endp
0000000000002079         align      128

                     loc_2080:
0000000000002080         mov        esi, 0xa                                    ; argument #2 for method j___overflow, CODE XREF=prog_fprintf+210
0000000000002085         mov        rdi, rbx                                    ; argument #1 for method j___overflow
0000000000002088         call       j___overflow                                ; __overflow
000000000000208d         jmp        loc_205f

                     loc_208f:
000000000000208f         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=prog_fprintf+237
                        ; endp
0000000000002094         align      32                                          ; End of unwind block (FDE at 0x7ffc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
00000000000020a0         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0x802c), file_name
00000000000020a7         ret
                        ; endp
00000000000020a8         align      16                                          ; End of unwind block (FDE at 0x802c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
00000000000020b0         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x8040), ignore_EPIPE
00000000000020b7         ret
                        ; endp
00000000000020b8         align      64                                          ; End of unwind block (FDE at 0x8040)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
00000000000020c0         push       rbp                                         ; Begin of unwind block (FDE at 0x8054), DATA XREF=main+82
00000000000020c1         push       rbx
00000000000020c2         sub        rsp, 0x8
00000000000020c6         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000020cd         call       close_stream                                ; close_stream
00000000000020d2         test       eax, eax
00000000000020d4         je         loc_20ec

00000000000020d6         call       j___errno_location                          ; __errno_location
00000000000020db         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
00000000000020e2         mov        rbx, rax
00000000000020e5         je         loc_2103

00000000000020e7         cmp        dword [rax], 0x20
00000000000020ea         jne        loc_2103

                     loc_20ec:
00000000000020ec         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
00000000000020f3         call       close_stream                                ; close_stream
00000000000020f8         test       eax, eax
00000000000020fa         jne        loc_2142

00000000000020fc         add        rsp, 0x8
0000000000002100         pop        rbx
0000000000002101         pop        rbp
0000000000002102         ret
                        ; endp

                     loc_2103:
0000000000002103         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
000000000000210a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000210c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002111         call       j_dcgettext                                 ; dcgettext
0000000000002116         mov        rdi, qword [file_name]                      ; file_name
000000000000211d         mov        rbp, rax
0000000000002120         test       rdi, rdi
0000000000002123         je         loc_214d

0000000000002125         call       quotearg_colon                              ; quotearg_colon
000000000000212a         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
000000000000212c         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000002133         mov        rcx, rax
0000000000002136         mov        r8, rbp
0000000000002139         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000213b         xor        eax, eax
000000000000213d         call       j_error                                     ; error

                     loc_2142:
0000000000002142         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
0000000000002148         call       j__exit                                     ; _exit
                        ; endp

                     loc_214d:
000000000000214d         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
000000000000214f         lea        rdx, qword [aRemovingDirect+20]             ; argument "__format" for method j_error, 0x6ddc
0000000000002156         mov        rcx, rax
0000000000002159         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000215b         xor        eax, eax
000000000000215d         call       j_error                                     ; error
0000000000002162         jmp        loc_2142
0000000000002164         align      16                                          ; End of unwind block (FDE at 0x8054)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     strip_trailing_slashes:
0000000000002170         push       rbp                                         ; Begin of unwind block (FDE at 0x8084), CODE XREF=main+499
0000000000002171         push       rbx
0000000000002172         mov        rbp, rdi
0000000000002175         sub        rsp, 0x8
0000000000002179         call       last_component                              ; last_component
000000000000217e         cmp        byte [rax], 0x0
0000000000002181         mov        rbx, rax
0000000000002184         cmove      rbx, rbp
0000000000002188         mov        rdi, rbx
000000000000218b         call       base_len                                    ; base_len
0000000000002190         add        rbx, rax
0000000000002193         cmp        byte [rbx], 0x0
0000000000002196         mov        byte [rbx], 0x0
0000000000002199         setne      al
000000000000219c         add        rsp, 0x8
00000000000021a0         pop        rbx
00000000000021a1         pop        rbp
00000000000021a2         ret
                        ; endp
00000000000021a3         align      16                                          ; End of unwind block (FDE at 0x8084)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
00000000000021b0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x80ac), CODE XREF=main+29
00000000000021b3         push       rbx
00000000000021b4         je         loc_222d

00000000000021b6         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
00000000000021bb         mov        rbx, rdi
00000000000021be         call       j_strrchr                                   ; strrchr
00000000000021c3         test       rax, rax
00000000000021c6         je         loc_221d

00000000000021c8         lea        r8, qword [rax+1]
00000000000021cc         mov        rdx, r8
00000000000021cf         sub        rdx, rbx
00000000000021d2         cmp        rdx, 0x6
00000000000021d6         jle        loc_221d

00000000000021d8         lea        rsi, qword [rax-6]
00000000000021dc         lea        rdi, qword [aLibs]                          ; "/.libs/"
00000000000021e3         mov        ecx, 0x7
00000000000021e8         rep  cmpsb byte [rsi], byte [rdi]
00000000000021ea         seta       dl
00000000000021ed         sbb        dl, 0x0
00000000000021f0         test       dl, dl
00000000000021f2         jne        loc_221d

00000000000021f4         lea        rdi, qword [aLibs+8]                        ; 0x7190
00000000000021fb         mov        ecx, 0x3
0000000000002200         mov        rsi, r8
0000000000002203         mov        rbx, r8
0000000000002206         rep  cmpsb byte [rsi], byte [rdi]
0000000000002208         seta       dl
000000000000220b         sbb        dl, 0x0
000000000000220e         test       dl, dl
0000000000002210         jne        loc_221d

0000000000002212         lea        rbx, qword [rax+4]
0000000000002216         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_221d:
000000000000221d         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
0000000000002224         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
000000000000222b         pop        rbx
000000000000222c         ret
                        ; endp

                     loc_222d:
000000000000222d         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
0000000000002234         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
000000000000223b         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
0000000000002240         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
0000000000002245         call       j_fwrite                                    ; fwrite
000000000000224a         call       j_abort                                     ; abort
                        ; endp
000000000000224f         align      16                                          ; End of unwind block (FDE at 0x80ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
0000000000002250         push       rbp                                         ; Begin of unwind block (FDE at 0x80cc), CODE XREF=sub_2a80+2597, sub_2a80+2619
0000000000002251         push       rbx
0000000000002252         mov        rbp, rdi
0000000000002255         mov        ebx, esi
0000000000002257         sub        rsp, 0x8
000000000000225b         call       locale_charset                              ; locale_charset
0000000000002260         movzx      edx, byte [rax]
0000000000002263         and        edx, 0xffffffdf
0000000000002266         cmp        dl, 0x55
0000000000002269         je         loc_22e0

000000000000226b         cmp        dl, 0x47
000000000000226e         je         loc_2290

                     loc_2270:
0000000000002270         lea        rax, qword [aLibs+27]                       ; 0x71a3, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
0000000000002277         lea        rdx, qword [aLibs+29]                       ; 0x71a5
000000000000227e         cmp        ebx, 0x9
0000000000002281         cmovne     rax, rdx
0000000000002285         add        rsp, 0x8
0000000000002289         pop        rbx
000000000000228a         pop        rbp
000000000000228b         ret
                        ; endp
000000000000228c         align      16

                     loc_2290:
0000000000002290         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
0000000000002294         and        edx, 0xffffffdf
0000000000002297         cmp        dl, 0x42
000000000000229a         jne        loc_2270

000000000000229c         cmp        byte [rax+2], 0x31
00000000000022a0         jne        loc_2270

00000000000022a2         cmp        byte [rax+3], 0x38
00000000000022a6         jne        loc_2270

00000000000022a8         cmp        byte [rax+4], 0x30
00000000000022ac         jne        loc_2270

00000000000022ae         cmp        byte [rax+5], 0x33
00000000000022b2         jne        loc_2270

00000000000022b4         cmp        byte [rax+6], 0x30
00000000000022b8         jne        loc_2270

00000000000022ba         cmp        byte [rax+7], 0x0
00000000000022be         jne        loc_2270

00000000000022c0         cmp        byte [rbp], 0x60
00000000000022c4         lea        rax, qword [aLibs+20]                       ; 0x719c
00000000000022cb         lea        rdx, qword [aLibs+24]                       ; 0x71a0
00000000000022d2         cmovne     rax, rdx
00000000000022d6         add        rsp, 0x8
00000000000022da         pop        rbx
00000000000022db         pop        rbp
00000000000022dc         ret
                        ; endp
00000000000022dd         align      32

                     loc_22e0:
00000000000022e0         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
00000000000022e4         and        edx, 0xffffffdf
00000000000022e7         cmp        dl, 0x54
00000000000022ea         jne        loc_2270

00000000000022ec         movzx      edx, byte [rax+2]
00000000000022f0         and        edx, 0xffffffdf
00000000000022f3         cmp        dl, 0x46
00000000000022f6         jne        loc_2270

00000000000022fc         cmp        byte [rax+3], 0x2d
0000000000002300         jne        loc_2270

0000000000002306         cmp        byte [rax+4], 0x38
000000000000230a         jne        loc_2270

0000000000002310         cmp        byte [rax+5], 0x0
0000000000002314         jne        loc_2270

000000000000231a         cmp        byte [rbp], 0x60
000000000000231e         lea        rax, qword [aLibs+12]                       ; 0x7194
0000000000002325         lea        rdx, qword [aLibs+16]                       ; 0x7198
000000000000232c         cmovne     rax, rdx
0000000000002330         add        rsp, 0x8
0000000000002334         pop        rbx
0000000000002335         pop        rbp
0000000000002336         ret
                        ; endp
0000000000002337         align      64                                          ; End of unwind block (FDE at 0x80cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
0000000000002340         push       r15                                         ; Begin of unwind block (FDE at 0x8110), CODE XREF=sub_2a80+1165, sub_2a80+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
0000000000002342         push       r14
0000000000002344         mov        r15d, r8d
0000000000002347         push       r13
0000000000002349         push       r12
000000000000234b         mov        r14, rdi
000000000000234e         push       rbp
000000000000234f         push       rbx
0000000000002350         mov        ebx, r9d
0000000000002353         mov        r13, rsi
0000000000002356         mov        rbp, rcx
0000000000002359         and        ebx, 0x2
000000000000235c         sub        rsp, 0xb8
0000000000002363         mov        rax, qword [rsp+0xe8+arg_0]
000000000000236b         mov        qword [rsp+0xe8+var_D8], rdx
0000000000002370         mov        dword [rsp+0xe8+var_E0], r8d
0000000000002375         mov        dword [rsp+0xe8+var_70], r9d
000000000000237a         mov        qword [rsp+0xe8+var_C8], rax
000000000000237f         mov        rax, qword [rsp+0xe8+arg_8]
0000000000002387         mov        qword [rsp+0xe8+var_80], rax
000000000000238c         mov        rax, qword [rsp+0xe8+arg_10]
0000000000002394         mov        qword [rsp+0xe8+var_88], rax
0000000000002399         mov        rax, qword [fs:0x28]
00000000000023a2         mov        qword [rsp+0xe8+var_40], rax
00000000000023aa         xor        eax, eax
00000000000023ac         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
00000000000023b1         cmp        r15d, 0xa
00000000000023b5         mov        qword [rsp+0xe8+var_90], rax
00000000000023ba         ja         loc_356f

00000000000023c0         lea        rcx, qword [switch_table_7200]              ; switch_table_7200
00000000000023c7         mov        edx, r15d
00000000000023ca         movsxd     rax, dword [rcx+rdx*4]
00000000000023ce         add        rax, rcx
00000000000023d1         jmp        rax                                         ; switch statement using table at 0x7200, with 11 cases, 0x23d3,0x2fa4,0x3000,0x3055,0x309a,0x30d4,0x317a,0x31b4,0x33a8

                     loc_23d3:
00000000000023d3         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_2a80+1318
00000000000023d8         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000023dd         xor        r12d, r12d
00000000000023e0         mov        qword [rsp+0xe8+var_98], 0x0
00000000000023e9         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000023ee         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_23f3:
00000000000023f3         lea        rax, qword [aLibs+29]                       ; 0x71a5, CODE XREF=sub_2a80+1876
00000000000023fa         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000002403         xor        r15d, r15d
0000000000002406         mov        dword [rsp+0xe8+var_E0], 0x2
000000000000240e         mov        qword [rsp+0xe8+var_A0], rax

                     loc_2413:
0000000000002413         xor        r11d, r11d                                  ; CODE XREF=sub_2a80+180, sub_2a80+1400, sub_2a80+1488, sub_2a80+1557, sub_2a80+1615, sub_2a80+1781, sub_2a80+1839, sub_2a80+2408, sub_2a80+2485
0000000000002416         mov        rax, rbp
0000000000002419         mov        r8d, r12d
000000000000241c         mov        rbp, r11
000000000000241f         mov        r11, rax
0000000000002422         nop        word [rax+rax]

                     loc_2428:
0000000000002428         cmp        r11, rbp                                    ; CODE XREF=sub_2530+194
000000000000242b         setne      r12b
000000000000242f         cmp        r11, 0xffffffffffffffff
0000000000002433         jne        loc_2442

0000000000002435         mov        rax, qword [rsp+0xe8+var_D8]
000000000000243a         cmp        byte [rax+rbp], 0x0
000000000000243e         setne      r12b

                     loc_2442:
0000000000002442         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
0000000000002445         je         loc_2aa0

000000000000244b         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000002450         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000002455         lea        r9, qword [rdi+rbp]
0000000000002459         setne      al
000000000000245c         and        al, byte [rsp+0xe8+var_DB]
0000000000002460         mov        r10d, eax
0000000000002463         je         loc_2510

0000000000002469         mov        rax, qword [rsp+0xe8+var_D0]
000000000000246e         test       rax, rax
0000000000002471         je         loc_28a0

0000000000002477         cmp        r11, 0xffffffffffffffff
000000000000247b         lea        rbx, qword [rbp+rax]
0000000000002480         jne        loc_24b0

0000000000002482         cmp        rax, 0x1
0000000000002486         jbe        loc_24b0

0000000000002488         mov        byte [rsp+0xe8+var_B0], r8b
000000000000248d         mov        byte [rsp+0xe8+var_B8], r10b
0000000000002492         mov        qword [rsp+0xe8+var_C0], r9
0000000000002497         call       j_strlen                                    ; strlen
000000000000249c         movzx      r8d, byte [rsp+0xe8+var_B0]
00000000000024a2         movzx      r10d, byte [rsp+0xe8+var_B8]
00000000000024a8         mov        r11, rax
00000000000024ab         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_24b0:
00000000000024b0         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
00000000000024b3         mov        byte [rsp+0xe8+var_C0], r10b
00000000000024b8         ja         loc_2a70

00000000000024be         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
00000000000024c3         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
00000000000024c8         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
00000000000024cb         mov        qword [rsp+0xe8+var_A8], r11
00000000000024d0         mov        byte [rsp+0xe8+var_B0], r8b
00000000000024d5         mov        qword [rsp+0xe8+var_B8], r9
00000000000024da         call       j_memcmp                                    ; memcmp
00000000000024df         test       eax, eax
00000000000024e1         mov        r9, qword [rsp+0xe8+var_B8]
00000000000024e6         movzx      r8d, byte [rsp+0xe8+var_B0]
00000000000024ec         mov        r11, qword [rsp+0xe8+var_A8]
00000000000024f1         jne        loc_2a70

00000000000024f7         cmp        byte [rsp+0xe8+var_D9], 0x0
00000000000024fc         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000002502         jne        loc_3485

0000000000002508         nop        dword [rax+rax]

                     loc_2510:
0000000000002510         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_2a60+19
0000000000002514         cmp        bl, 0x7e
0000000000002517         ja         loc_2838

000000000000251d         lea        rcx, qword [switch_table_7200+44]           ; 0x722c
0000000000002524         movzx      edx, bl
0000000000002527         movsxd     rax, dword [rcx+rdx*4]
000000000000252b         add        rax, rcx
000000000000252e         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_2530:
0000000000002530         xor        r10d, r10d
0000000000002533         cmp        r11, 0x1
0000000000002537         setne      al
000000000000253a         cmp        r11, 0xffffffffffffffff
000000000000253e         jne        loc_254c

0000000000002540         mov        rax, qword [rsp+arg_8]
0000000000002545         cmp        byte [rax+1], 0x0
0000000000002549         setne      al

                     loc_254c:
000000000000254c         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_2530+14
0000000000002551         sete       dl
0000000000002554         test       al, al
0000000000002556         je         loc_27a8

                     loc_255c:
000000000000255c         xor        r12d, r12d                                  ; CODE XREF=sub_27a0+11
000000000000255f         xor        eax, eax
0000000000002561         nop        dword [rax]
                        ; endp

                     loc_2568:
0000000000002568         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_2750+50, sub_2820+119
000000000000256d         jne        loc_2682

0000000000002573         test       dl, dl
0000000000002575         jne        loc_2682

                     loc_257b:
000000000000257b         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_2630+87
0000000000002580         test       rsi, rsi
0000000000002583         je         loc_2599

0000000000002585         mov        edx, ebx
0000000000002587         shr        dl, 0x5
000000000000258a         movzx      edx, dl
000000000000258d         mov        edx, dword [rsi+rdx*4]
0000000000002590         bt         edx, ebx
0000000000002593         jb         loc_26e3

                     loc_2599:
0000000000002599         test       r10b, r10b                                  ; CODE XREF=sub_2530+83, sub_2630+93
000000000000259c         jne        loc_26e3

00000000000025a2         xor        eax, 0x1
00000000000025a5         add        rbp, 0x1
00000000000025a9         and        eax, r8d

                     loc_25ac:
00000000000025ac         test       al, al                                      ; CODE XREF=sub_2a80+936
00000000000025ae         je         loc_25d0

00000000000025b0         cmp        r13, r15
00000000000025b3         jbe        loc_25ba

00000000000025b5         mov        byte [r14+r15], 0x27

                     loc_25ba:
00000000000025ba         lea        rax, qword [r15+1]                          ; CODE XREF=sub_2530+131
00000000000025be         cmp        r13, rax
00000000000025c1         jbe        loc_25c9

00000000000025c3         mov        byte [r14+r15+1], 0x27

                     loc_25c9:
00000000000025c9         add        r15, 0x2                                    ; CODE XREF=sub_2530+145
00000000000025cd         xor        r8d, r8d

                     loc_25d0:
00000000000025d0         cmp        r15, r13                                    ; CODE XREF=sub_2530+126, sub_2630+275, sub_2a80+869
00000000000025d3         jae        loc_25d9

00000000000025d5         mov        byte [r14+r15], bl

                     loc_25d9:
00000000000025d9         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_2530+163
00000000000025de         add        r15, 0x1
00000000000025e2         mov        eax, 0x0
00000000000025e7         test       r12b, r12b
00000000000025ea         cmove      edi, eax
00000000000025ed         mov        byte [rsp+0xe8+var_DA], dil
00000000000025f2         jmp        loc_2428
00000000000025f7         align      512


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_2600:
0000000000002600         xor        r10d, r10d
0000000000002603         mov        eax, dword [rsp+arg_0]
0000000000002607         cmp        eax, 0x2
000000000000260a         je         loc_2bc8

0000000000002610         cmp        eax, 0x5
0000000000002613         je         loc_2b88

0000000000002619         cmp        eax, 0x2
000000000000261c         mov        ebx, 0x3f
0000000000002621         sete       dl
0000000000002624         xor        r12d, r12d
0000000000002627         xor        eax, eax
0000000000002629         jmp        sub_2530+56
                        ; endp
000000000000262e         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_2630:
0000000000002630         xor        r10d, r10d
0000000000002633         cmp        dword [rsp+arg_0], 0x2
0000000000002638         je         loc_2b40

000000000000263e         mov        byte [rsp+arg_74], r12b
0000000000002643         xor        edx, edx
0000000000002645         xor        eax, eax
0000000000002647         mov        ebx, 0x27
000000000000264c         jmp        sub_2530+56
                        ; endp
0000000000002651         nop        dword [rax]
0000000000002658         mov        edx, 0x9
000000000000265d         mov        ebx, 0x74

                     loc_2662:
0000000000002662         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_27f0+10, sub_28e0+37, sub_2a20+53
0000000000002667         sete       al
000000000000266a         and        al, byte [rsp+arg_7]
000000000000266e         jne        sub_27a0+30

0000000000002674         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_2630+114
0000000000002679         jne        loc_26e0

                     loc_267b:
000000000000267b         mov        ebx, edx                                    ; CODE XREF=sub_2750+18
000000000000267d         xor        r12d, r12d
0000000000002680         xor        eax, eax
                        ; endp

                     loc_2682:
0000000000002682         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_2530+61, sub_2530+69
0000000000002687         jne        loc_257b

000000000000268d         jmp        loc_2599
0000000000002692         nop        word [rax+rax]
0000000000002698         mov        edx, 0x8
000000000000269d         mov        ebx, 0x62
00000000000026a2         jmp        sub_2630+68
00000000000026a4         nop        dword [rax]
00000000000026a8         cmp        dword [rsp+8], 0x2
00000000000026ad         je         sub_2a80                                    ; sub_2a80
00000000000026b3         cmp        byte [rsp+0xd], 0x0
00000000000026b8         je         sub_28c0+16

                     loc_26be:
00000000000026be         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_28c0+8
00000000000026c3         je         loc_28d0

00000000000026c9         cmp        qword [rsp+arg_10], 0x0
00000000000026cf         jne        loc_2a8b

00000000000026d5         mov        ebx, 0x5c
00000000000026da         nop        word [rax+rax]
                        ; endp

                     loc_26e0:
00000000000026e0         xor        r12d, r12d                                  ; CODE XREF=sub_2630+73, sub_2a20+29
                        ; endp

                     loc_26e3:
00000000000026e3         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_2530+99, sub_2530+108
00000000000026e8         sete       dl
00000000000026eb         cmp        byte [rsp+0xe8+var_D9], 0x0
00000000000026f0         mov        eax, edx
00000000000026f2         jne        loc_2f48

00000000000026f8         mov        eax, r8d
00000000000026fb         xor        eax, 0x1
00000000000026fe         and        al, dl
0000000000002700         je         loc_2731

0000000000002702         cmp        r13, r15
0000000000002705         jbe        loc_270c

0000000000002707         mov        byte [r14+r15], 0x27

                     loc_270c:
000000000000270c         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_2630+213
0000000000002710         cmp        r13, rdx
0000000000002713         jbe        loc_271b

0000000000002715         mov        byte [r14+r15+1], 0x24

                     loc_271b:
000000000000271b         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_2630+227
000000000000271f         cmp        r13, rdx
0000000000002722         jbe        loc_272a

0000000000002724         mov        byte [r14+r15+2], 0x27

                     loc_272a:
000000000000272a         add        r15, 0x3                                    ; CODE XREF=sub_2630+242
000000000000272e         mov        r8d, eax

                     loc_2731:
0000000000002731         cmp        r13, r15                                    ; CODE XREF=sub_2630+208
0000000000002734         jbe        loc_273b

0000000000002736         mov        byte [r14+r15], 0x5c

                     loc_273b:
000000000000273b         add        r15, 0x1                                    ; CODE XREF=sub_2630+260
000000000000273f         add        rbp, 0x1
0000000000002743         jmp        loc_25d0
0000000000002748         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_2750:
0000000000002750         cmp        byte [rsp+arg_5], 0x0
0000000000002755         jne        loc_2923

000000000000275b         xor        edx, edx
000000000000275d         test       byte [rsp+arg_70], 0x1
0000000000002762         je         loc_267b

0000000000002768         add        rbp, 0x1
000000000000276c         jmp        quotearg_buffer_restyled+232
                        ; endp
0000000000002771         nop        dword [rax]
0000000000002778         cmp        dword [rsp+8], 0x2
000000000000277d         sete       dl
0000000000002780         xor        eax, eax
0000000000002782         jmp        sub_2530+56
0000000000002787         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2790:
0000000000002790         mov        edx, 0x7
0000000000002795         mov        ebx, 0x61
000000000000279a         jmp        sub_2630+68
                        ; endp
000000000000279f         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_27a0:
00000000000027a0         cmp        dword [rsp+8], 0x2
00000000000027a5         sete       dl
                        ; endp

                     loc_27a8:
00000000000027a8         test       rbp, rbp                                    ; CODE XREF=sub_2530+38, sub_29c0+35
00000000000027ab         jne        loc_255c

00000000000027b1         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_29f0+43
00000000000027b6         and        al, dl
00000000000027b8         je         sub_2530+56

00000000000027be         mov        rbp, r11
00000000000027c1         mov        dword [rsp+arg_0], 0x2
00000000000027c9         jmp        sub_2a80+1097
                        ; endp
00000000000027ce         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_27d0:
00000000000027d0         cmp        dword [rsp+arg_0], 0x2
00000000000027d5         sete       dl
00000000000027d8         xor        r12d, r12d
00000000000027db         jmp        sub_27a0+17
                        ; endp
00000000000027dd         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_27e0:
00000000000027e0         cmp        dword [rsp+arg_0], 0x2
00000000000027e5         mov        ebx, 0x20
00000000000027ea         sete       dl
00000000000027ed         jmp        sub_27a0+17
                        ; endp
00000000000027ef         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_27f0:
00000000000027f0         mov        edx, 0xd
00000000000027f5         mov        ebx, 0x72
00000000000027fa         jmp        loc_2662
00000000000027ff         align      2048


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2800:
0000000000002800         mov        edx, 0xc
0000000000002805         mov        ebx, 0x66
000000000000280a         jmp        sub_2630+68
                        ; endp
000000000000280f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2810:
0000000000002810         mov        edx, 0xb
0000000000002815         mov        ebx, 0x76
000000000000281a         jmp        sub_2630+68
                        ; endp
000000000000281f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2820:
0000000000002820         mov        edx, 0xa
0000000000002825         mov        ebx, 0x6e
000000000000282a         jmp        sub_2630+50
                        ; endp
000000000000282f         align      16

                     loc_2830:
0000000000002830         xor        r10d, r10d                                  ; CODE XREF=sub_2820+135
0000000000002833         nop        dword [rax+rax]

                     loc_2838:
0000000000002838         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
000000000000283e         jne        loc_2be8

0000000000002844         mov        qword [rsp+0xe8+var_B0], r11
0000000000002849         mov        byte [rsp+0xe8+var_B8], r8b
000000000000284e         mov        byte [rsp+0xe8+var_C0], r10b
0000000000002853         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000002858         mov        rcx, qword [rax]
000000000000285b         movzx      edx, bl
000000000000285e         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000002864         movzx      r8d, byte [rsp+0xe8+var_B8]
000000000000286a         mov        r11, qword [rsp+0xe8+var_B0]
000000000000286f         mov        edi, 0x1
0000000000002874         movzx      eax, word [rcx+rdx*2]
0000000000002878         and        ax, 0x4000
000000000000287c         setne      r12b
0000000000002880         sete       al
0000000000002883         and        al, byte [rsp+0xe8+var_DB]

                     loc_2887:
0000000000002887         test       al, al                                      ; CODE XREF=sub_2a80+2221
0000000000002889         jne        loc_3221

000000000000288f         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000002894         sete       dl
0000000000002897         jmp        loc_2568
000000000000289c         align      32

                     loc_28a0:
00000000000028a0         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
00000000000028a4         cmp        bl, 0x7e
00000000000028a7         ja         loc_2830

00000000000028a9         lea        rcx, qword [switch_table_7200+552]          ; 0x7428
00000000000028b0         movzx      edx, bl
00000000000028b3         movsxd     rax, dword [rcx+rdx*4]
00000000000028b7         add        rax, rcx
00000000000028ba         jmp        rax
                        ; endp
00000000000028bc         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_28c0:
00000000000028c0         xor        r10d, r10d
00000000000028c3         cmp        byte [rsp+arg_5], 0x0
00000000000028c8         jne        loc_26be

00000000000028ce         nop

                     loc_28d0:
00000000000028d0         mov        edx, 0x5c                                   ; CODE XREF=sub_2630+136, sub_2630+147
00000000000028d5         mov        ebx, 0x5c
00000000000028da         jmp        sub_2630+68
                        ; endp
00000000000028df         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_28e0:
00000000000028e0         mov        edx, 0xc
00000000000028e5         xor        r10d, r10d
00000000000028e8         mov        ebx, 0x66
00000000000028ed         jmp        sub_2630+68
                        ; endp
00000000000028f2         nop        word [rax+rax]
00000000000028f8         mov        edx, 0xa
00000000000028fd         xor        r10d, r10d
0000000000002900         mov        ebx, 0x6e
0000000000002905         jmp        sub_2630+50
000000000000290a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2910:
0000000000002910         mov        ebx, 0x61
0000000000002915         jmp        sub_2630+176
                        ; endp
000000000000291a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2920:
0000000000002920         xor        r10d, r10d
                        ; endp

                     loc_2923:
0000000000002923         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_2750+5
0000000000002928         sete       dl
000000000000292b         cmp        byte [rsp+arg_7], 0x0
0000000000002930         jne        loc_34ca

0000000000002936         mov        eax, r8d
0000000000002939         mov        rcx, r15
000000000000293c         xor        eax, 0x1
000000000000293f         and        al, dl
0000000000002941         je         loc_2970

0000000000002943         cmp        r13, r15
0000000000002946         jbe        loc_294d

0000000000002948         mov        byte [r14+r15], 0x27

                     loc_294d:
000000000000294d         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_2920+38
0000000000002951         cmp        r13, rcx
0000000000002954         jbe        loc_295c

0000000000002956         mov        byte [r14+r15+1], 0x24

                     loc_295c:
000000000000295c         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_2920+52
0000000000002960         cmp        r13, rcx
0000000000002963         ja         loc_2f99

                     loc_2969:
0000000000002969         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_2a80+1311
000000000000296d         mov        r8d, eax

                     loc_2970:
0000000000002970         cmp        r13, rcx                                    ; CODE XREF=sub_2920+33
0000000000002973         jbe        loc_297a

0000000000002975         mov        byte [r14+rcx], 0x5c

                     loc_297a:
000000000000297a         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_2920+83
000000000000297f         lea        r15, qword [rcx+1]
0000000000002983         je         loc_2f89

0000000000002989         lea        rax, qword [rbp+1]
000000000000298d         cmp        rax, r11
0000000000002990         jae        loc_29ab

0000000000002992         mov        rax, qword [rsp+arg_8]
0000000000002997         movzx      eax, byte [rax+rbp+1]
000000000000299c         mov        byte [rsp+arg_20], al
00000000000029a0         sub        eax, 0x30
00000000000029a3         cmp        al, 0x9
00000000000029a5         jbe        loc_31d9

                     loc_29ab:
00000000000029ab         mov        eax, r12d                                   ; CODE XREF=sub_2920+112
00000000000029ae         mov        ebx, 0x30
00000000000029b3         xor        r12d, r12d
00000000000029b6         jmp        sub_2530+56
                        ; endp
00000000000029bb         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_29c0:
00000000000029c0         cmp        dword [rsp+arg_0], 0x2
00000000000029c5         mov        r12d, r10d
00000000000029c8         sete       dl
00000000000029cb         xor        r10d, r10d
00000000000029ce         xor        eax, eax
00000000000029d0         jmp        sub_2530+56
                        ; endp
00000000000029d5         nop        dword [rax]
00000000000029d8         cmp        dword [rsp+8], 0x2
00000000000029dd         sete       dl
00000000000029e0         xor        r10d, r10d
00000000000029e3         jmp        sub_27a0+8
00000000000029e8         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_29f0:
00000000000029f0         cmp        dword [rsp+8], 0x2
00000000000029f5         sete       dl
00000000000029f8         xor        r10d, r10d
00000000000029fb         xor        r12d, r12d
00000000000029fe         jmp        sub_27a0+17
                        ; endp
0000000000002a03         nop        dword [rax+rax]
0000000000002a08         cmp        dword [rsp+8], 0x2
0000000000002a0d         mov        r12d, r10d
0000000000002a10         mov        ebx, 0x20
0000000000002a15         sete       dl
0000000000002a18         xor        r10d, r10d
0000000000002a1b         jmp        sub_27a0+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2a20:
0000000000002a20         mov        edx, 0xd
0000000000002a25         xor        r10d, r10d
0000000000002a28         mov        ebx, 0x72
0000000000002a2d         jmp        sub_2630+50
                        ; endp
0000000000002a32         nop        word [rax+rax]
0000000000002a38         mov        ebx, 0x76
0000000000002a3d         jmp        sub_2630+176
0000000000002a42         nop        word [rax+rax]
0000000000002a48         mov        edx, 0x9
0000000000002a4d         xor        r10d, r10d
0000000000002a50         mov        ebx, 0x74
0000000000002a55         jmp        sub_2630+50
0000000000002a5a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2a60:
0000000000002a60         mov        ebx, 0x62
0000000000002a65         jmp        sub_2630+176
                        ; endp
0000000000002a6a         nop        word [rax+rax]

                     loc_2a70:
0000000000002a70         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
0000000000002a73         jmp        loc_2510
0000000000002a78         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_2a80:
0000000000002a80         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2630+125
0000000000002a85         jne        sub_2a80+2416
                        ; endp

                     loc_2a8b:
0000000000002a8b         add        rbp, 0x1                                    ; CODE XREF=sub_2630+159
0000000000002a8f         mov        eax, r8d
0000000000002a92         xor        r12d, r12d
0000000000002a95         mov        ebx, 0x5c
0000000000002a9a         jmp        sub_2530+124
                        ; endp
0000000000002a9f         align      32

                     loc_2aa0:
0000000000002aa0         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
0000000000002aa5         movzx      ebx, byte [rsp+0xe8+var_D9]
0000000000002aaa         mov        r12d, r8d
0000000000002aad         mov        rbp, r11
0000000000002ab0         sete       dl
0000000000002ab3         mov        eax, ebx
0000000000002ab5         test       r15, r15
0000000000002ab8         sete       cl
0000000000002abb         and        eax, edx
0000000000002abd         and        al, cl
0000000000002abf         jne        loc_3526

0000000000002ac5         mov        eax, ebx
0000000000002ac7         xor        eax, 0x1
0000000000002aca         and        dl, al
0000000000002acc         je         loc_343c

0000000000002ad2         cmp        byte [rsp+0xe8+var_6C], 0x0
0000000000002ad7         je         loc_343a

0000000000002add         cmp        byte [rsp+0xe8+var_DA], 0x0
0000000000002ae2         jne        loc_34dd

0000000000002ae8         test       r13, r13
0000000000002aeb         sete       al
0000000000002aee         cmp        qword [rsp+0xe8+var_98], 0x0
0000000000002af4         setne      dl
0000000000002af7         and        al, dl
0000000000002af9         je         loc_351c

0000000000002aff         mov        r13, qword [rsp+0xe8+var_98]

                     loc_2b04:
0000000000002b04         lea        rbx, qword [aLibs+29]                       ; 0x71a5, CODE XREF=sub_2a80+2781
0000000000002b0b         mov        byte [r14], 0x27
0000000000002b0f         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000002b17         mov        r15d, 0x1
0000000000002b1d         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000002b26         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000002b2b         mov        qword [rsp+0xe8+var_A0], rbx
0000000000002b30         mov        byte [rsp+0xe8+var_6C], al
0000000000002b34         jmp        loc_2413
0000000000002b39         align      64

                     loc_2b40:
0000000000002b40         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2630+8
0000000000002b45         jne        sub_2a80+2416

0000000000002b4b         test       r13, r13
0000000000002b4e         je         loc_2f50

0000000000002b54         xor        edx, edx
0000000000002b56         cmp        qword [rsp+arg_48], 0x0
0000000000002b5c         jne        loc_2f50

                     loc_2b62:
0000000000002b62         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_2a80+1284, sub_2a80+2794
0000000000002b67         add        r15, 0x3
0000000000002b6b         xor        eax, eax
0000000000002b6d         mov        byte [rsp+arg_74], r12b
0000000000002b72         xor        r8d, r8d
0000000000002b75         mov        r13, rdx
0000000000002b78         mov        ebx, 0x27
0000000000002b7d         jmp        sub_2530+105
                        ; endp
0000000000002b82         align      8

                     loc_2b88:
0000000000002b88         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_2600+19
0000000000002b8d         je         loc_2bb0

0000000000002b8f         lea        rcx, qword [rbp+2]
0000000000002b93         cmp        rcx, r11
0000000000002b96         jae        loc_2bb0

0000000000002b98         mov        rax, qword [rsp+arg_8]
0000000000002b9d         cmp        byte [rax+rbp+1], 0x3f
0000000000002ba2         je         loc_3332

0000000000002ba8         nop        dword [rax+rax]

                     loc_2bb0:
0000000000002bb0         xor        edx, edx                                    ; CODE XREF=sub_2a80+269, sub_2a80+278, sub_2a80+2233, sub_2a80+2253
0000000000002bb2         xor        r12d, r12d
0000000000002bb5         xor        eax, eax
0000000000002bb7         mov        ebx, 0x3f
0000000000002bbc         jmp        sub_2530+56
                        ; endp
0000000000002bc1         align      8

                     loc_2bc8:
0000000000002bc8         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2600+10
0000000000002bcd         jne        loc_33f0

0000000000002bd3         xor        r12d, r12d
0000000000002bd6         xor        eax, eax
0000000000002bd8         mov        ebx, 0x3f
0000000000002bdd         jmp        sub_2530+105
                        ; endp
0000000000002be2         align      8

                     loc_2be8:
0000000000002be8         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_2820+30
0000000000002bf0         cmp        r11, 0xffffffffffffffff
0000000000002bf4         mov        qword [rsp+0xe8+var_48], 0x0
0000000000002c00         mov        qword [rsp+0xe8+var_C0], rax
0000000000002c05         jne        loc_2c34

0000000000002c07         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
0000000000002c0c         mov        byte [rsp+0xe8+var_A8], r8b
0000000000002c11         mov        byte [rsp+0xe8+var_B0], r10b
0000000000002c16         mov        qword [rsp+0xe8+var_B8], r9
0000000000002c1b         call       j_strlen                                    ; strlen
0000000000002c20         movzx      r8d, byte [rsp+0xe8+var_A8]
0000000000002c26         movzx      r10d, byte [rsp+0xe8+var_B0]
0000000000002c2c         mov        r11, rax
0000000000002c2f         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_2c34:
0000000000002c34         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_2a80+389
0000000000002c3c         xor        ecx, ecx
0000000000002c3e         mov        byte [rsp+0xe8+var_6A], bl
0000000000002c42         mov        byte [rsp+0xe8+var_6B], r8b
0000000000002c47         mov        rbx, rcx
0000000000002c4a         mov        qword [rsp+0xe8+var_60], r9
0000000000002c52         mov        qword [rsp+0xe8+var_B0], rax
0000000000002c57         mov        byte [rsp+0xe8+var_69], r10b
0000000000002c5c         mov        qword [rsp+0xe8+var_68], r15
0000000000002c64         mov        qword [rsp+0xe8+var_A8], r14
0000000000002c69         mov        qword [rsp+0xe8+var_78], r13
0000000000002c6e         mov        qword [rsp+0xe8+var_B8], r11

                     loc_2c73:
0000000000002c73         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_2a80+623
0000000000002c78         lea        r14, qword [rbp+rbx]
0000000000002c7d         mov        rdx, qword [rsp+0xe8+var_B8]
0000000000002c82         mov        rcx, qword [rsp+0xe8+var_C0]
0000000000002c87         mov        rdi, qword [rsp+0xe8+var_B0]
0000000000002c8c         lea        r13, qword [rax+r14]
0000000000002c90         sub        rdx, r14
0000000000002c93         mov        rsi, r13
0000000000002c96         call       rpl_mbrtowc                                 ; rpl_mbrtowc
0000000000002c9b         test       rax, rax
0000000000002c9e         mov        r15, rax
0000000000002ca1         je         loc_2cf1

0000000000002ca3         cmp        rax, 0xffffffffffffffff
0000000000002ca7         je         loc_32c5

0000000000002cad         cmp        rax, 0xfffffffffffffffe
0000000000002cb1         je         loc_3251

0000000000002cb7         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000002cbc         sete       al
0000000000002cbf         and        al, byte [rsp+0xe8+var_D9]
0000000000002cc3         jne        loc_2e60

                     loc_2cc9:
0000000000002cc9         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_2a80+996, sub_2a80+1031
0000000000002cd0         call       j_iswprint                                  ; iswprint
0000000000002cd5         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
0000000000002cda         test       eax, eax
0000000000002cdc         mov        eax, 0x0
0000000000002ce1         cmove      r12d, eax
0000000000002ce5         add        rbx, r15
0000000000002ce8         call       j_mbsinit                                   ; mbsinit
0000000000002ced         test       eax, eax
0000000000002cef         je         loc_2c73

                     loc_2cf1:
0000000000002cf1         mov        edx, r12d                                   ; CODE XREF=sub_2a80+545
0000000000002cf4         mov        rdi, rbx
0000000000002cf7         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000002cfd         xor        edx, 0x1
0000000000002d00         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000002d05         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000002d0b         and        dl, byte [rsp+0xe8+var_DB]
0000000000002d0f         mov        r15, qword [rsp+0xe8+var_68]
0000000000002d17         mov        r14, qword [rsp+0xe8+var_A8]
0000000000002d1c         mov        r13, qword [rsp+0xe8+var_78]
0000000000002d21         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_2d26:
0000000000002d26         cmp        rdi, 0x1                                    ; CODE XREF=sub_2a80+2112, sub_2a80+2168
0000000000002d2a         jbe        loc_332b

                     loc_2d30:
0000000000002d30         mov        rcx, rdi                                    ; CODE XREF=sub_2a80+1961
0000000000002d33         xor        esi, esi
0000000000002d35         movzx      r9d, byte [rsp+0xe8+var_D9]
0000000000002d3b         add        rcx, rbp
0000000000002d3e         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000002d43         jmp        loc_2dfe
0000000000002d48         align      16

                     loc_2d50:
0000000000002d50         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_2a80+896
0000000000002d55         sete       al
0000000000002d58         test       r9b, r9b
0000000000002d5b         jne        loc_3210

0000000000002d61         mov        esi, r8d
0000000000002d64         xor        esi, 0x1
0000000000002d67         and        al, sil
0000000000002d6a         je         loc_2d9b

0000000000002d6c         cmp        r13, r15
0000000000002d6f         jbe        loc_2d76

0000000000002d71         mov        byte [r14+r15], 0x27

                     loc_2d76:
0000000000002d76         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_2a80+751
0000000000002d7a         cmp        r13, rsi
0000000000002d7d         jbe        loc_2d85

0000000000002d7f         mov        byte [r14+r15+1], 0x24

                     loc_2d85:
0000000000002d85         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_2a80+765
0000000000002d89         cmp        r13, rsi
0000000000002d8c         jbe        loc_2d94

0000000000002d8e         mov        byte [r14+r15+2], 0x27

                     loc_2d94:
0000000000002d94         add        r15, 0x3                                    ; CODE XREF=sub_2a80+780
0000000000002d98         mov        r8d, eax

                     loc_2d9b:
0000000000002d9b         cmp        r13, r15                                    ; CODE XREF=sub_2a80+746
0000000000002d9e         jbe        loc_2da5

0000000000002da0         mov        byte [r14+r15], 0x5c

                     loc_2da5:
0000000000002da5         lea        rax, qword [r15+1]                          ; CODE XREF=sub_2a80+798
0000000000002da9         cmp        r13, rax
0000000000002dac         jbe        loc_2dbb

0000000000002dae         mov        eax, ebx
0000000000002db0         shr        al, 0x6
0000000000002db3         add        eax, 0x30
0000000000002db6         mov        byte [r14+r15+1], al

                     loc_2dbb:
0000000000002dbb         lea        rax, qword [r15+2]                          ; CODE XREF=sub_2a80+812
0000000000002dbf         cmp        r13, rax
0000000000002dc2         jbe        loc_2dd4

0000000000002dc4         mov        eax, ebx
0000000000002dc6         shr        al, 0x3
0000000000002dc9         and        eax, 0x7
0000000000002dcc         add        eax, 0x30
0000000000002dcf         mov        byte [r14+r15+2], al

                     loc_2dd4:
0000000000002dd4         and        ebx, 0x7                                    ; CODE XREF=sub_2a80+834
0000000000002dd7         add        rbp, 0x1
0000000000002ddb         add        r15, 0x3
0000000000002ddf         add        ebx, 0x30
0000000000002de2         cmp        rbp, rcx
0000000000002de5         jae        loc_25d0

0000000000002deb         mov        esi, edx

                     loc_2ded:
0000000000002ded         cmp        r13, r15                                    ; CODE XREF=sub_2a80+985, sub_2a80+1969
0000000000002df0         jbe        loc_2df6

0000000000002df2         mov        byte [r14+r15], bl

                     loc_2df6:
0000000000002df6         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_2a80+880
0000000000002dfa         add        r15, 0x1

                     loc_2dfe:
0000000000002dfe         test       dl, dl                                      ; CODE XREF=sub_2a80+707
0000000000002e00         jne        loc_2d50

0000000000002e06         mov        eax, esi
0000000000002e08         xor        eax, 0x1
0000000000002e0b         and        eax, r8d
0000000000002e0e         test       r10b, r10b
0000000000002e11         je         loc_2e21

0000000000002e13         cmp        r13, r15
0000000000002e16         jbe        loc_2e1d

0000000000002e18         mov        byte [r14+r15], 0x5c

                     loc_2e1d:
0000000000002e1d         add        r15, 0x1                                    ; CODE XREF=sub_2a80+918

                     loc_2e21:
0000000000002e21         add        rbp, 0x1                                    ; CODE XREF=sub_2a80+913
0000000000002e25         cmp        rbp, rcx
0000000000002e28         jae        loc_25ac

0000000000002e2e         test       al, al
0000000000002e30         je         loc_322e

0000000000002e36         cmp        r13, r15
0000000000002e39         jbe        loc_2e40

0000000000002e3b         mov        byte [r14+r15], 0x27

                     loc_2e40:
0000000000002e40         lea        rax, qword [r15+1]                          ; CODE XREF=sub_2a80+953
0000000000002e44         cmp        r13, rax
0000000000002e47         jbe        loc_2e4f

0000000000002e49         mov        byte [r14+r15+1], 0x27

                     loc_2e4f:
0000000000002e4f         add        r15, 0x2                                    ; CODE XREF=sub_2a80+967
0000000000002e53         xor        r10d, r10d
0000000000002e56         xor        r8d, r8d
0000000000002e59         jmp        loc_2ded
0000000000002e5b         align      32

                     loc_2e60:
0000000000002e60         cmp        r15, 0x1                                    ; CODE XREF=sub_2a80+579
0000000000002e64         je         loc_2cc9

0000000000002e6a         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000002e6f         lea        rcx, qword [rdi+r15]
0000000000002e73         lea        rdx, qword [rdi+r14+1]
0000000000002e78         lea        r8, qword [rcx+r14]
0000000000002e7c         jmp        loc_2e8d
0000000000002e7e         align      128

                     loc_2e80:
0000000000002e80         add        rdx, 0x1                                    ; CODE XREF=sub_2a80+1046, sub_2a80+1072
0000000000002e84         cmp        r8, rdx
0000000000002e87         je         loc_2cc9

                     loc_2e8d:
0000000000002e8d         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_2a80+1020
0000000000002e90         sub        ecx, 0x5b
0000000000002e93         cmp        cl, 0x21
0000000000002e96         ja         loc_2e80

0000000000002e98         mov        esi, 0x1
0000000000002e9d         shl        rsi, cl
0000000000002ea0         mov        rcx, rsi
0000000000002ea3         movabs     rsi, 0x20000002b
0000000000002ead         test       rcx, rsi
0000000000002eb0         je         loc_2e80

0000000000002eb2         mov        r14, qword [rsp+0xe8+var_A8]
0000000000002eb7         mov        r13, qword [rsp+0xe8+var_78]
0000000000002ebc         mov        rbp, qword [rsp+0xe8+var_B8]
0000000000002ec1         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_2ec9:
0000000000002ec9         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_2a80+1227, sub_2a80+1948, sub_2a80+2585, sub_2a80+2734
0000000000002ece         je         loc_2ee0

0000000000002ed0         test       al, al
0000000000002ed2         mov        eax, 0x4
0000000000002ed7         cmove      eax, dword [rsp+0xe8+var_E0]
0000000000002edc         mov        dword [rsp+0xe8+var_E0], eax

                     loc_2ee0:
0000000000002ee0         sub        rsp, 0x8                                    ; CODE XREF=sub_2a80+1102
0000000000002ee4         mov        rcx, rbp
0000000000002ee7         mov        rsi, r13
0000000000002eea         push       qword [rsp+0xf0+var_88]
0000000000002eee         push       qword [rsp+0xf8+var_80]
0000000000002ef2         mov        rdi, r14
0000000000002ef5         push       0x0
0000000000002ef7         mov        r9d, dword [rsp+0x108+var_70]
0000000000002eff         mov        r8d, dword [rsp+0x108+var_E0]
0000000000002f04         mov        rdx, qword [rsp+0x108+var_D8]
0000000000002f09         and        r9d, 0xfffffffd
0000000000002f0d         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000002f12         add        rsp, 0x20
0000000000002f16         mov        r15, rax

                     loc_2f19:
0000000000002f19         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_2a80+2549, sub_2a80+2560, sub_2a80+2711
0000000000002f21         xor        rbx, qword [fs:0x28]
0000000000002f2a         mov        rax, r15
0000000000002f2d         jne        loc_3533

0000000000002f33         add        rsp, 0xb8
0000000000002f3a         pop        rbx
0000000000002f3b         pop        rbp
0000000000002f3c         pop        r12
0000000000002f3e         pop        r13
0000000000002f40         pop        r14
0000000000002f42         pop        r15
0000000000002f44         ret
                        ; endp
0000000000002f45         align      8

                     loc_2f48:
0000000000002f48         mov        rbp, r11                                    ; CODE XREF=sub_2630+194
0000000000002f4b         jmp        loc_2ec9

                     loc_2f50:
0000000000002f50         cmp        r13, r15                                    ; CODE XREF=sub_2a80+206, sub_2a80+220
0000000000002f53         jbe        loc_2f5a

0000000000002f55         mov        byte [r14+r15], 0x27

                     loc_2f5a:
0000000000002f5a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_2a80+1235
0000000000002f5e         cmp        r13, rax
0000000000002f61         jbe        loc_2f69

0000000000002f63         mov        byte [r14+r15+1], 0x5c

                     loc_2f69:
0000000000002f69         lea        rax, qword [r15+2]                          ; CODE XREF=sub_2a80+1249
0000000000002f6d         cmp        r13, rax
0000000000002f70         jbe        loc_3562

0000000000002f76         mov        rdx, r13
0000000000002f79         mov        byte [r14+r15+2], 0x27
0000000000002f7f         mov        r13, qword [rsp+arg_48]
0000000000002f84         jmp        loc_2b62

                     loc_2f89:
0000000000002f89         mov        eax, r12d                                   ; CODE XREF=sub_2920+99
0000000000002f8c         mov        ebx, 0x30
0000000000002f91         xor        r12d, r12d
0000000000002f94         jmp        sub_2530+105
                        ; endp

                     loc_2f99:
0000000000002f99         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_2920+67
0000000000002f9f         jmp        loc_2969

                     loc_2fa4:
0000000000002fa4         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
0000000000002fa6         jne        loc_23d3

0000000000002fac         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_2fb1:
0000000000002fb1         test       r13, r13                                    ; CODE XREF=sub_2a80+2749
0000000000002fb4         jne        loc_354a

0000000000002fba         lea        rax, qword [aLibs+29]                       ; 0x71a5
0000000000002fc1         mov        qword [rsp+0xe8+var_98], 0x0
0000000000002fca         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000002fcf         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000002fd4         xor        r12d, r12d
0000000000002fd7         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000002fdc         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000002fe5         mov        qword [rsp+0xe8+var_A0], rax
0000000000002fea         mov        r15d, 0x1
0000000000002ff0         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000002ff8         jmp        loc_2413
0000000000002ffd         align      4096

                     loc_3000:
0000000000003000         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
0000000000003002         jne        loc_33fd

0000000000003008         test       r13, r13
000000000000300b         je         loc_3236

0000000000003011         mov        byte [r14], 0x22
0000000000003015         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000301a         xor        r12d, r12d
000000000000301d         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003022         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_302b:
000000000000302b         lea        rax, qword [aLibs+27]                       ; 0x71a3, CODE XREF=sub_2a80+1996
0000000000003032         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003037         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000303c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003045         mov        r15d, 0x1
000000000000304b         mov        qword [rsp+0xe8+var_A0], rax
0000000000003050         jmp        loc_2413

                     loc_3055:
0000000000003055         lea        rax, qword [aLibs+27]                       ; case 6, 0x71a3, CODE XREF=quotearg_buffer_restyled+145
000000000000305c         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003061         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003066         xor        r12d, r12d
0000000000003069         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003072         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003077         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000307c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003085         xor        r15d, r15d
0000000000003088         mov        qword [rsp+0xe8+var_A0], rax
000000000000308d         mov        dword [rsp+0xe8+var_E0], 0x5
0000000000003095         jmp        loc_2413

                     loc_309a:
000000000000309a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
000000000000309f         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000030a4         xor        r12d, r12d
00000000000030a7         mov        qword [rsp+0xe8+var_98], 0x0
00000000000030b0         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000030b5         xor        r15d, r15d
00000000000030b8         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000030bd         mov        qword [rsp+0xe8+var_D0], 0x0
00000000000030c6         mov        qword [rsp+0xe8+var_A0], 0x0
00000000000030cf         jmp        loc_2413

                     loc_30d4:
00000000000030d4         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
00000000000030d9         je         loc_3131

00000000000030db         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0x71a7
00000000000030e2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000030e4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000030e9         call       j_dcgettext                                 ; dcgettext
00000000000030ee         mov        rcx, rax
00000000000030f1         mov        qword [rsp+0xe8+var_80], rax
00000000000030f6         lea        rax, qword [aLibs+31]                       ; 0x71a7
00000000000030fd         cmp        rcx, rax
0000000000003100         je         loc_349e

                     loc_3106:
0000000000003106         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x71a5, CODE XREF=sub_2a80+2607
000000000000310d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000310f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003114         call       j_dcgettext                                 ; dcgettext
0000000000003119         mov        rcx, rax
000000000000311c         mov        qword [rsp+0xe8+var_88], rax
0000000000003121         lea        rax, qword [aLibs+29]                       ; 0x71a5
0000000000003128         cmp        rcx, rax
000000000000312b         je         loc_34b4

                     loc_3131:
0000000000003131         xor        r15d, r15d                                  ; CODE XREF=sub_2a80+1625, sub_2a80+2629
0000000000003134         test       ebx, ebx
0000000000003136         je         loc_32fd

                     loc_313c:
000000000000313c         test       ebx, ebx                                    ; CODE XREF=sub_2a80+2183, sub_2a80+2214
000000000000313e         mov        rbx, qword [rsp+0xe8+var_88]
0000000000003143         setne      byte [rsp+0xe8+var_D9]
0000000000003148         xor        r12d, r12d
000000000000314b         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
000000000000314e         call       j_strlen                                    ; strlen
0000000000003153         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003158         mov        qword [rsp+0xe8+var_D0], rax
000000000000315d         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003162         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003167         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003170         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003175         jmp        loc_2413

                     loc_317a:
000000000000317a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
000000000000317f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003184         xor        r12d, r12d
0000000000003187         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003190         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003195         xor        r15d, r15d
0000000000003198         mov        byte [rsp+0xe8+var_DB], 0x0
000000000000319d         mov        qword [rsp+0xe8+var_D0], 0x0
00000000000031a6         mov        qword [rsp+0xe8+var_A0], 0x0
00000000000031af         jmp        loc_2413

                     loc_31b4:
00000000000031b4         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
00000000000031b9         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000031be         xor        r12d, r12d
00000000000031c1         mov        qword [rsp+0xe8+var_98], 0x0
00000000000031ca         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000031cf         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000031d4         jmp        loc_23f3

                     loc_31d9:
00000000000031d9         cmp        r13, r15                                    ; CODE XREF=sub_2920+133
00000000000031dc         jbe        loc_31e3

00000000000031de         mov        byte [r14+r15], 0x30

                     loc_31e3:
00000000000031e3         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_2a80+1884
00000000000031e7         cmp        r13, rax
00000000000031ea         jbe        loc_31f2

00000000000031ec         mov        byte [r14+rcx+2], 0x30

                     loc_31f2:
00000000000031f2         mov        eax, r12d                                   ; CODE XREF=sub_2a80+1898
00000000000031f5         lea        r15, qword [rcx+3]
00000000000031f9         xor        r12d, r12d
00000000000031fc         mov        ebx, 0x30
0000000000003201         jmp        sub_2530+56
                        ; endp
0000000000003206         align      16

                     loc_3210:
0000000000003210         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_2a80+731
0000000000003215         mov        rbp, r11
0000000000003218         mov        byte [rsp+0xe8+var_DB], bl
000000000000321c         jmp        loc_2ec9

                     loc_3221:
0000000000003221         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_2820+105
0000000000003226         xor        r12d, r12d
0000000000003229         jmp        loc_2d30

                     loc_322e:
000000000000322e         xor        r10d, r10d                                  ; CODE XREF=sub_2a80+944
0000000000003231         jmp        loc_2ded

                     loc_3236:
0000000000003236         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_2a80+1419
000000000000323f         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003244         xor        r12d, r12d
0000000000003247         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000324c         jmp        loc_302b

                     loc_3251:
0000000000003251         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_2a80+561
0000000000003256         mov        rsi, r14
0000000000003259         mov        rcx, r13
000000000000325c         mov        rax, rbx
000000000000325f         mov        rdi, rbx
0000000000003262         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000003268         movzx      ebx, byte [rsp+0xe8+var_6A]
000000000000326d         mov        r9, qword [rsp+0xe8+var_60]
0000000000003275         cmp        rsi, r11
0000000000003278         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000327e         mov        r15, qword [rsp+0xe8+var_68]
0000000000003286         mov        r14, qword [rsp+0xe8+var_A8]
000000000000328b         mov        r13, qword [rsp+0xe8+var_78]
0000000000003290         jae        loc_32b8

0000000000003292         cmp        byte [rcx], 0x0
0000000000003295         jne        loc_32a7

0000000000003297         jmp        loc_32b8
0000000000003299         align      32

                     loc_32a0:
00000000000032a0         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_2a80+2099
00000000000032a5         je         loc_32b5

                     loc_32a7:
00000000000032a7         add        rax, 0x1                                    ; CODE XREF=sub_2a80+2069
00000000000032ab         lea        rdx, qword [rbp+rax]
00000000000032b0         cmp        r11, rdx
00000000000032b3         ja         loc_32a0

                     loc_32b5:
00000000000032b5         mov        rdi, rax                                    ; CODE XREF=sub_2a80+2085

                     loc_32b8:
00000000000032b8         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_2a80+2064, sub_2a80+2071
00000000000032bd         xor        r12d, r12d
00000000000032c0         jmp        loc_2d26

                     loc_32c5:
00000000000032c5         mov        rdi, rbx                                    ; CODE XREF=sub_2a80+551
00000000000032c8         movzx      r8d, byte [rsp+0xe8+var_6B]
00000000000032ce         movzx      ebx, byte [rsp+0xe8+var_6A]
00000000000032d3         movzx      r10d, byte [rsp+0xe8+var_69]
00000000000032d9         mov        r15, qword [rsp+0xe8+var_68]
00000000000032e1         xor        r12d, r12d
00000000000032e4         mov        r14, qword [rsp+0xe8+var_A8]
00000000000032e9         mov        r13, qword [rsp+0xe8+var_78]
00000000000032ee         mov        r11, qword [rsp+0xe8+var_B8]
00000000000032f3         movzx      edx, byte [rsp+0xe8+var_DB]
00000000000032f8         jmp        loc_2d26

                     loc_32fd:
00000000000032fd         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_2a80+1718
0000000000003302         movzx      eax, byte [rdx]
0000000000003305         test       al, al
0000000000003307         je         loc_313c

000000000000330d         nop        dword [rax]

                     loc_3310:
0000000000003310         cmp        r13, r15                                    ; CODE XREF=sub_2a80+2212
0000000000003313         jbe        loc_3319

0000000000003315         mov        byte [r14+r15], al

                     loc_3319:
0000000000003319         add        r15, 0x1                                    ; CODE XREF=sub_2a80+2195
000000000000331d         movzx      eax, byte [rdx+r15]
0000000000003322         test       al, al
0000000000003324         jne        loc_3310

0000000000003326         jmp        loc_313c

                     loc_332b:
000000000000332b         mov        eax, edx                                    ; CODE XREF=sub_2a80+682
000000000000332d         jmp        loc_2887

                     loc_3332:
0000000000003332         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_2a80+290
0000000000003336         cmp        bl, 0x3e
0000000000003339         ja         loc_2bb0

000000000000333f         movabs     rax, 0x7000a38200000000
0000000000003349         bt         rax, rbx
000000000000334d         jae        loc_2bb0

0000000000003353         cmp        byte [rsp+arg_7], 0x0
0000000000003358         jne        loc_3542

000000000000335e         cmp        r13, r15
0000000000003361         jbe        loc_3368

0000000000003363         mov        byte [r14+r15], 0x3f

                     loc_3368:
0000000000003368         lea        rax, qword [r15+1]                          ; CODE XREF=sub_2a80+2273
000000000000336c         cmp        r13, rax
000000000000336f         jbe        loc_3377

0000000000003371         mov        byte [r14+r15+1], 0x22

                     loc_3377:
0000000000003377         lea        rax, qword [r15+2]                          ; CODE XREF=sub_2a80+2287
000000000000337b         cmp        r13, rax
000000000000337e         jbe        loc_3386

0000000000003380         mov        byte [r14+r15+2], 0x22

                     loc_3386:
0000000000003386         lea        rax, qword [r15+3]                          ; CODE XREF=sub_2a80+2302
000000000000338a         cmp        r13, rax
000000000000338d         jbe        loc_3395

000000000000338f         mov        byte [r14+r15+3], 0x3f

                     loc_3395:
0000000000003395         add        r15, 0x4                                    ; CODE XREF=sub_2a80+2317
0000000000003399         xor        edx, edx
000000000000339b         xor        r12d, r12d
000000000000339e         xor        eax, eax
00000000000033a0         mov        rbp, rcx
00000000000033a3         jmp        sub_2530+56
                        ; endp

                     loc_33a8:
00000000000033a8         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
00000000000033aa         je         loc_3538

00000000000033b0         lea        rax, qword [aLibs+29]                       ; 0x71a5
00000000000033b7         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000033bc         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000033c1         xor        r12d, r12d
00000000000033c4         mov        qword [rsp+0xe8+var_98], 0x0
00000000000033cd         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000033d2         mov        byte [rsp+0xe8+var_DB], 0x0
00000000000033d7         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000033e0         xor        r15d, r15d
00000000000033e3         mov        qword [rsp+0xe8+var_A0], rax
00000000000033e8         jmp        loc_2413
00000000000033ed         align      16

                     loc_33f0:
00000000000033f0         mov        rbp, r11                                    ; CODE XREF=sub_2a80+333
00000000000033f3         movzx      eax, byte [rsp+arg_7]
00000000000033f8         jmp        sub_2a80+1097
                        ; endp

                     loc_33fd:
00000000000033fd         lea        rax, qword [aLibs+27]                       ; 0x71a3, CODE XREF=sub_2a80+1410
0000000000003404         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003409         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000340e         xor        r12d, r12d
0000000000003411         mov        qword [rsp+0xe8+var_98], 0x0
000000000000341a         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000341f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003424         mov        qword [rsp+0xe8+var_D0], 0x1
000000000000342d         xor        r15d, r15d
0000000000003430         mov        qword [rsp+0xe8+var_A0], rax
0000000000003435         jmp        loc_2413

                     loc_343a:
000000000000343a         mov        eax, edx                                    ; CODE XREF=sub_2a80+87

                     loc_343c:
000000000000343c         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_2a80+76, sub_2a80+2721
0000000000003441         test       rbx, rbx
0000000000003444         je         loc_3472

0000000000003446         test       al, al
0000000000003448         je         loc_3472

000000000000344a         movzx      ecx, byte [rbx]
000000000000344d         mov        rax, rbx
0000000000003450         test       cl, cl
0000000000003452         je         loc_3472

0000000000003454         mov        rdx, r15
0000000000003457         sub        rax, r15

                     loc_345a:
000000000000345a         cmp        r13, rdx                                    ; CODE XREF=sub_2a80+2541
000000000000345d         jbe        loc_3463

000000000000345f         mov        byte [r14+rdx], cl

                     loc_3463:
0000000000003463         add        rdx, 0x1                                    ; CODE XREF=sub_2a80+2525
0000000000003467         movzx      ecx, byte [rax+rdx]
000000000000346b         test       cl, cl
000000000000346d         jne        loc_345a

000000000000346f         mov        r15, rdx

                     loc_3472:
0000000000003472         cmp        r13, r15                                    ; CODE XREF=sub_2a80+2500, sub_2a80+2504, sub_2a80+2514
0000000000003475         jbe        loc_2f19

000000000000347b         mov        byte [r14+r15], 0x0
0000000000003480         jmp        loc_2f19

                     loc_3485:
0000000000003485         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
000000000000348a         movzx      ebx, byte [rsp+0xe8+var_D9]
000000000000348f         mov        rbp, r11
0000000000003492         sete       al
0000000000003495         mov        byte [rsp+0xe8+var_DB], bl
0000000000003499         jmp        loc_2ec9

                     loc_349e:
000000000000349e         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_2a80+1664
00000000000034a2         mov        rdi, rcx
00000000000034a5         call       gettext_quote.part.1                        ; gettext_quote.part.1
00000000000034aa         mov        qword [rsp+0xe8+var_80], rax
00000000000034af         jmp        loc_3106

                     loc_34b4:
00000000000034b4         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_2a80+1707
00000000000034b8         mov        rdi, rcx
00000000000034bb         call       gettext_quote.part.1                        ; gettext_quote.part.1
00000000000034c0         mov        qword [rsp+0xe8+var_88], rax
00000000000034c5         jmp        loc_3131

                     loc_34ca:
00000000000034ca         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_2920+16
00000000000034cf         mov        rbp, r11
00000000000034d2         mov        eax, edx
00000000000034d4         mov        byte [rsp+arg_5], bl
00000000000034d8         jmp        sub_2a80+1097
                        ; endp

                     loc_34dd:
00000000000034dd         sub        rsp, 0x8                                    ; CODE XREF=sub_2a80+98
00000000000034e1         mov        r8d, 0x5
00000000000034e7         mov        rcx, r11
00000000000034ea         push       qword [rsp+0xf0+var_88]
00000000000034ee         push       qword [rsp+0xf8+var_80]
00000000000034f2         mov        rdi, r14
00000000000034f5         push       qword [rsp+0x100+var_C8]
00000000000034f9         mov        r9d, dword [rsp+0x108+var_70]
0000000000003501         mov        rdx, qword [rsp+0x108+var_D8]
0000000000003506         mov        rsi, qword [rsp+0x108+var_98]
000000000000350b         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003510         add        rsp, 0x20
0000000000003514         mov        r15, rax
0000000000003517         jmp        loc_2f19

                     loc_351c:
000000000000351c         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_2a80+121
0000000000003521         jmp        loc_343c

                     loc_3526:
0000000000003526         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_2a80+63
000000000000352e         jmp        loc_2ec9

                     loc_3533:
0000000000003533         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_2a80+1197
                        ; endp

                     loc_3538:
0000000000003538         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_2a80+2346
000000000000353d         jmp        loc_2fb1

                     loc_3542:
0000000000003542         mov        rbp, r11                                    ; CODE XREF=sub_2a80+2264
0000000000003545         jmp        sub_2a80+1120
                        ; endp

                     loc_354a:
000000000000354a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_2a80+1332
000000000000354f         xor        eax, eax
0000000000003551         xor        r12d, r12d
0000000000003554         mov        qword [rsp+0xe8+var_98], 0x0
000000000000355d         jmp        loc_2b04

                     loc_3562:
0000000000003562         mov        rdx, r13                                    ; CODE XREF=sub_2a80+1264
0000000000003565         mov        r13, qword [rsp+arg_48]
000000000000356a         jmp        loc_2b62

                     loc_356f:
000000000000356f         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
0000000000003574         align      128                                         ; End of unwind block (FDE at 0x8110)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
0000000000003580         push       r15                                         ; Begin of unwind block (FDE at 0x8188), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
0000000000003582         push       r14
0000000000003584         movsxd     r15, edi
0000000000003587         push       r13
0000000000003589         push       r12
000000000000358b         mov        r14, rdx
000000000000358e         push       rbp
000000000000358f         push       rbx
0000000000003590         mov        rbp, rcx
0000000000003593         sub        rsp, 0x28
0000000000003597         mov        qword [rsp+0x58+var_50], rsi
000000000000359c         call       j___errno_location                          ; __errno_location
00000000000035a1         mov        r13, rax
00000000000035a4         mov        eax, dword [rax]
00000000000035a6         test       r15d, r15d
00000000000035a9         mov        rbx, qword [slotvec]                        ; slotvec
00000000000035b0         mov        dword [rsp+0x58+var_40], eax
00000000000035b4         js         loc_3721

00000000000035ba         cmp        dword [nslots], r15d                        ; nslots
00000000000035c1         jg         loc_3625

00000000000035c3         cmp        r15d, 0x7fffffff
00000000000035ca         je         loc_3726

00000000000035d0         lea        r12d, dword [r15+1]
00000000000035d4         lea        rax, qword [slotvec0]                       ; slotvec0
00000000000035db         movsxd     rsi, r12d
00000000000035de         shl        rsi, 0x4
00000000000035e2         cmp        rbx, rax
00000000000035e5         je         loc_3700

00000000000035eb         mov        rdi, rbx                                    ; argument #1 for method xrealloc
00000000000035ee         call       xrealloc                                    ; xrealloc
00000000000035f3         mov        rbx, rax
00000000000035f6         mov        qword [slotvec], rax                        ; slotvec

                     loc_35fd:
00000000000035fd         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
0000000000003604         mov        edx, r12d
0000000000003607         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000003609         sub        edx, edi
000000000000360b         shl        rdi, 0x4
000000000000360f         movsxd     rdx, edx
0000000000003612         add        rdi, rbx                                    ; argument "__s" for method j_memset
0000000000003615         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
0000000000003619         call       j_memset                                    ; memset
000000000000361e         mov        dword [nslots], r12d                        ; nslots

                     loc_3625:
0000000000003625         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
0000000000003628         shl        r15, 0x4
000000000000362c         sub        rsp, 0x8
0000000000003630         add        rbx, r15
0000000000003633         lea        r15, qword [rbp+8]
0000000000003637         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
000000000000363b         mov        r11, qword [rbx]
000000000000363e         mov        r12, qword [rbx+8]
0000000000003642         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000003645         or         eax, 0x1
0000000000003648         mov        dword [rsp+0x60+var_3C], eax
000000000000364c         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
000000000000364f         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
0000000000003652         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000003655         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000003657         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
000000000000365a         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
000000000000365f         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
0000000000003662         mov        qword [rsp+0x78+var_48], r11
0000000000003667         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000366c         add        rsp, 0x20
0000000000003670         mov        r11, qword [rsp+0x58+var_48]
0000000000003675         cmp        r11, rax
0000000000003678         ja         loc_36e1

000000000000367a         lea        rsi, qword [rax+1]
000000000000367e         lea        rax, qword [slot0]                          ; slot0
0000000000003685         cmp        r12, rax
0000000000003688         mov        qword [rbx], rsi
000000000000368b         je         loc_369f

000000000000368d         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000003690         mov        qword [rsp+0x58+var_48], rsi
0000000000003695         call       j_free                                      ; free
000000000000369a         mov        rsi, qword [rsp+0x58+var_48]

                     loc_369f:
000000000000369f         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
00000000000036a2         mov        qword [rsp+0x58+var_48], rsi
00000000000036a7         call       xmalloc                                     ; xmalloc
00000000000036ac         sub        rsp, 0x8
00000000000036b0         mov        qword [rbx+8], rax
00000000000036b4         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
00000000000036b8         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
00000000000036bb         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
00000000000036be         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
00000000000036c1         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
00000000000036c3         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
00000000000036c8         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
00000000000036cb         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
00000000000036d0         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
00000000000036d5         mov        r12, rax
00000000000036d8         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000036dd         add        rsp, 0x20

                     loc_36e1:
00000000000036e1         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
00000000000036e5         mov        dword [r13], eax
00000000000036e9         add        rsp, 0x28
00000000000036ed         mov        rax, r12
00000000000036f0         pop        rbx
00000000000036f1         pop        rbp
00000000000036f2         pop        r12
00000000000036f4         pop        r13
00000000000036f6         pop        r14
00000000000036f8         pop        r15
00000000000036fa         ret
                        ; endp
00000000000036fb         align      256

                     loc_3700:
0000000000003700         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
0000000000003702         call       xrealloc                                    ; xrealloc
0000000000003707         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
000000000000370f         mov        rbx, rax
0000000000003712         mov        qword [slotvec], rax                        ; slotvec
0000000000003719         movups     xmmword [rax], xmm0
000000000000371c         jmp        loc_35fd

                     loc_3721:
0000000000003721         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_3726:
0000000000003726         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_372b:
000000000000372b         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x8188)
                     clone_quoting_options:
0000000000003730         push       r12                                         ; Begin of unwind block (FDE at 0x81f4)
0000000000003732         push       rbp
0000000000003733         push       rbx
0000000000003734         mov        rbx, rdi
0000000000003737         call       j___errno_location                          ; __errno_location
000000000000373c         mov        r12d, dword [rax]
000000000000373f         mov        rbp, rax
0000000000003742         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000003749         test       rbx, rbx
000000000000374c         mov        esi, 0x38
0000000000003751         cmove      rbx, rax
0000000000003755         mov        rdi, rbx
0000000000003758         call       xmemdup                                     ; xmemdup
000000000000375d         mov        dword [rbp], r12d
0000000000003761         pop        rbx
0000000000003762         pop        rbp
0000000000003763         pop        r12
0000000000003765         ret
                        ; endp
0000000000003766         align      16                                          ; End of unwind block (FDE at 0x81f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
0000000000003770         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8220), default_quoting_options
0000000000003777         test       rdi, rdi
000000000000377a         cmove      rdi, rax
000000000000377e         mov        eax, dword [rdi]
0000000000003780         ret
                        ; endp
0000000000003781         align      16                                          ; End of unwind block (FDE at 0x8220)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
0000000000003790         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8234), default_quoting_options
0000000000003797         test       rdi, rdi
000000000000379a         cmove      rdi, rax
000000000000379e         mov        dword [rdi], esi
00000000000037a0         ret
                        ; endp
00000000000037a1         align      16                                          ; End of unwind block (FDE at 0x8234)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
00000000000037b0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8248), default_quoting_options
00000000000037b7         test       rdi, rdi
00000000000037ba         mov        ecx, esi
00000000000037bc         cmove      rdi, rax
00000000000037c0         mov        eax, esi
00000000000037c2         and        ecx, 0x1f
00000000000037c5         shr        al, 0x5
00000000000037c8         movzx      eax, al
00000000000037cb         lea        rdi, qword [rdi+rax*4+8]
00000000000037d0         mov        esi, dword [rdi]
00000000000037d2         mov        eax, esi
00000000000037d4         shr        eax, cl
00000000000037d6         xor        edx, eax
00000000000037d8         and        eax, 0x1
00000000000037db         and        edx, 0x1
00000000000037de         shl        edx, cl
00000000000037e0         xor        edx, esi
00000000000037e2         mov        dword [rdi], edx
00000000000037e4         ret
                        ; endp
00000000000037e5         align      16                                          ; End of unwind block (FDE at 0x8248)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
00000000000037f0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x825c), default_quoting_options
00000000000037f7         test       rdi, rdi
00000000000037fa         cmove      rdi, rax
00000000000037fe         mov        eax, dword [rdi+4]
0000000000003801         mov        dword [rdi+4], esi
0000000000003804         ret
                        ; endp
0000000000003805         align      16                                          ; End of unwind block (FDE at 0x825c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
0000000000003810         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8270), default_quoting_options
0000000000003817         test       rdi, rdi
000000000000381a         cmove      rdi, rax
000000000000381e         test       rsi, rsi
0000000000003821         mov        dword [rdi], 0xa
0000000000003827         je         loc_3837

0000000000003829         test       rdx, rdx
000000000000382c         je         loc_3837

000000000000382e         mov        qword [rdi+0x28], rsi
0000000000003832         mov        qword [rdi+0x30], rdx
0000000000003836         ret
                        ; endp

                     loc_3837:
0000000000003837         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
000000000000383b         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
0000000000003840         push       r15                                         ; End of unwind block (FDE at 0x8270), Begin of unwind block (FDE at 0x8284)
0000000000003842         push       r14
0000000000003844         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000384b         push       r13
000000000000384d         push       r12
000000000000384f         mov        r13, rdi
0000000000003852         push       rbp
0000000000003853         push       rbx
0000000000003854         mov        rbx, r8
0000000000003857         mov        r14, rsi
000000000000385a         mov        r15, rdx
000000000000385d         sub        rsp, 0x18
0000000000003861         test       r8, r8
0000000000003864         cmove      rbx, rax
0000000000003868         mov        qword [rsp+0x48+var_40], rcx
000000000000386d         call       j___errno_location                          ; __errno_location
0000000000003872         mov        r12d, dword [rax]
0000000000003875         mov        rbp, rax
0000000000003878         lea        rax, qword [rbx+8]
000000000000387c         sub        rsp, 0x8
0000000000003880         mov        r9d, dword [rbx+4]
0000000000003884         push       qword [rbx+0x30]
0000000000003887         mov        r8d, dword [rbx]
000000000000388a         push       qword [rbx+0x28]
000000000000388d         mov        rdx, r15
0000000000003890         push       rax
0000000000003891         mov        rcx, qword [rsp+0x68+var_40]
0000000000003896         mov        rsi, r14
0000000000003899         mov        rdi, r13
000000000000389c         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000038a1         mov        dword [rbp], r12d
00000000000038a5         add        rsp, 0x38
00000000000038a9         pop        rbx
00000000000038aa         pop        rbp
00000000000038ab         pop        r12
00000000000038ad         pop        r13
00000000000038af         pop        r14
00000000000038b1         pop        r15
00000000000038b3         ret
                        ; endp
00000000000038b4         align      64                                          ; End of unwind block (FDE at 0x8284)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
00000000000038c0         push       r15                                         ; Begin of unwind block (FDE at 0x82d8), CODE XREF=quotearg_alloc+5
00000000000038c2         push       r14
00000000000038c4         lea        rax, qword [default_quoting_options]        ; default_quoting_options
00000000000038cb         push       r13
00000000000038cd         push       r12
00000000000038cf         mov        r12, rdx
00000000000038d2         push       rbp
00000000000038d3         push       rbx
00000000000038d4         mov        rbx, rcx
00000000000038d7         mov        r14, rdi
00000000000038da         mov        r15, rsi
00000000000038dd         sub        rsp, 0x38
00000000000038e1         test       rcx, rcx
00000000000038e4         cmove      rbx, rax
00000000000038e8         xor        ebp, ebp
00000000000038ea         call       j___errno_location                          ; __errno_location
00000000000038ef         test       r12, r12
00000000000038f2         mov        r13, rax
00000000000038f5         mov        eax, dword [rax]
00000000000038f7         sete       bpl
00000000000038fb         or         ebp, dword [rbx+4]
00000000000038fe         lea        r10, qword [rbx+8]
0000000000003902         sub        rsp, 0x8
0000000000003906         mov        r8d, dword [rbx]
0000000000003909         mov        rcx, r15
000000000000390c         mov        dword [rsp+0x70+var_5C], eax
0000000000003910         push       qword [rbx+0x30]
0000000000003913         mov        rdx, r14
0000000000003916         push       qword [rbx+0x28]
0000000000003919         push       r10
000000000000391b         xor        esi, esi
000000000000391d         mov        r9d, ebp
0000000000003920         xor        edi, edi
0000000000003922         mov        qword [rsp+0x88+var_48], r10
0000000000003927         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000392c         lea        rsi, qword [rax+1]
0000000000003930         mov        qword [rsp+0x88+var_40], rax
0000000000003935         add        rsp, 0x20
0000000000003939         mov        rdi, rsi
000000000000393c         mov        qword [rsp+0x68+var_50], rsi
0000000000003941         call       xmalloc                                     ; xmalloc
0000000000003946         mov        qword [rsp+0x68+var_58], rax
000000000000394b         sub        rsp, 0x8
000000000000394f         push       qword [rbx+0x30]
0000000000003952         push       qword [rbx+0x28]
0000000000003955         mov        r10, qword [rsp+0x80+var_48]
000000000000395a         mov        r9d, ebp
000000000000395d         mov        r8d, dword [rbx]
0000000000003960         mov        rcx, r15
0000000000003963         mov        rdx, r14
0000000000003966         mov        rdi, rax
0000000000003969         push       r10
000000000000396b         mov        rsi, qword [rsp+0x88+var_50]
0000000000003970         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003975         mov        eax, dword [rsp+0x88+var_5C]
0000000000003979         add        rsp, 0x20
000000000000397d         test       r12, r12
0000000000003980         mov        dword [r13], eax
0000000000003984         je         loc_398f

0000000000003986         mov        r11, qword [rsp+0x68+var_40]
000000000000398b         mov        qword [r12], r11

                     loc_398f:
000000000000398f         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
0000000000003994         add        rsp, 0x38
0000000000003998         pop        rbx
0000000000003999         pop        rbp
000000000000399a         pop        r12
000000000000399c         pop        r13
000000000000399e         pop        r14
00000000000039a0         pop        r15
00000000000039a2         ret
                        ; endp
00000000000039a3         align      16                                          ; End of unwind block (FDE at 0x82d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
00000000000039b0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x8344)
00000000000039b3         xor        edx, edx
00000000000039b5         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
00000000000039ba         align      64                                          ; End of unwind block (FDE at 0x8344)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
00000000000039c0         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0x8358), nslots
00000000000039c6         push       r12
00000000000039c8         mov        r12, qword [slotvec]                        ; slotvec
00000000000039cf         push       rbp
00000000000039d0         push       rbx
00000000000039d1         cmp        eax, 0x1
00000000000039d4         jle        loc_3a01

00000000000039d6         sub        eax, 0x2
00000000000039d9         lea        rbx, qword [r12+0x18]
00000000000039de         shl        rax, 0x4
00000000000039e2         lea        rbp, qword [r12+rax+0x28]
00000000000039e7         nop        word [rax+rax]

                     loc_39f0:
00000000000039f0         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
00000000000039f3         add        rbx, 0x10
00000000000039f7         call       j_free                                      ; free
00000000000039fc         cmp        rbx, rbp
00000000000039ff         jne        loc_39f0

                     loc_3a01:
0000000000003a01         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
0000000000003a06         lea        rbx, qword [slot0]                          ; slot0
0000000000003a0d         cmp        rdi, rbx
0000000000003a10         je         loc_3a29

0000000000003a12         call       j_free                                      ; free
0000000000003a17         mov        qword [slotvec0], 0x100                     ; slotvec0
0000000000003a22         mov        qword [slotvec0+8], rbx                     ; 0x20a078

                     loc_3a29:
0000000000003a29         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
0000000000003a30         cmp        r12, rbx
0000000000003a33         je         loc_3a44

0000000000003a35         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000003a38         call       j_free                                      ; free
0000000000003a3d         mov        qword [slotvec], rbx                        ; slotvec

                     loc_3a44:
0000000000003a44         pop        rbx                                         ; CODE XREF=quotearg_free+115
0000000000003a45         mov        dword [nslots], 0x1                         ; nslots
0000000000003a4f         pop        rbp
0000000000003a50         pop        r12
0000000000003a52         ret
                        ; endp
0000000000003a53         align      32                                          ; End of unwind block (FDE at 0x8358)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
0000000000003a60         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8384), default_quoting_options
0000000000003a67         mov        rdx, 0xffffffffffffffff
0000000000003a6e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000003a73         align      128                                         ; End of unwind block (FDE at 0x8384)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
0000000000003a80         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8398), default_quoting_options
0000000000003a87         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000003a8c         align      16                                          ; End of unwind block (FDE at 0x8398)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
0000000000003a90         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x83ac), default_quoting_options
0000000000003a97         mov        rsi, rdi
0000000000003a9a         mov        rdx, 0xffffffffffffffff
0000000000003aa1         xor        edi, edi
0000000000003aa3         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000003aa8         align      16                                          ; End of unwind block (FDE at 0x83ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
0000000000003ab0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x83c0), default_quoting_options
0000000000003ab7         mov        rdx, rsi
0000000000003aba         mov        rsi, rdi
0000000000003abd         xor        edi, edi
0000000000003abf         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000003ac4         align      16                                          ; End of unwind block (FDE at 0x83c0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
0000000000003ad0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x83d4)
0000000000003ad4         mov        rax, rdx
0000000000003ad7         mov        rdx, qword [fs:0x28]
0000000000003ae0         mov        qword [rsp+0x48+var_10], rdx
0000000000003ae5         xor        edx, edx
0000000000003ae7         cmp        esi, 0xa
0000000000003aea         je         loc_3b54

0000000000003aec         mov        dword [rsp+0x48+var_48], esi
0000000000003aef         mov        rcx, rsp
0000000000003af2         mov        rdx, 0xffffffffffffffff
0000000000003af9         mov        rsi, rax
0000000000003afc         mov        qword [rsp+0x48+var_44], 0x0
0000000000003b05         mov        qword [rsp+0x48+var_3C], 0x0
0000000000003b0e         mov        qword [rsp+0x48+var_34], 0x0
0000000000003b17         mov        qword [rsp+0x48+var_2C], 0x0
0000000000003b20         mov        qword [rsp+0x48+var_24], 0x0
0000000000003b29         mov        qword [rsp+0x48+var_1C], 0x0
0000000000003b32         mov        dword [rsp+0x48+var_14], 0x0
0000000000003b3a         call       quotearg_n_options                          ; quotearg_n_options
0000000000003b3f         mov        rcx, qword [rsp+0x48+var_10]
0000000000003b44         xor        rcx, qword [fs:0x28]
0000000000003b4d         jne        loc_3b59

0000000000003b4f         add        rsp, 0x48
0000000000003b53         ret
                        ; endp

                     loc_3b54:
0000000000003b54         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_3b59:
0000000000003b59         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
0000000000003b5e         align      32                                          ; End of unwind block (FDE at 0x83d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
0000000000003b60         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x83f0), CODE XREF=quotearg_style_mem+10
0000000000003b64         mov        rax, rdx
0000000000003b67         mov        rdx, rcx
0000000000003b6a         mov        rcx, qword [fs:0x28]
0000000000003b73         mov        qword [rsp+0x48+var_10], rcx
0000000000003b78         xor        ecx, ecx
0000000000003b7a         cmp        esi, 0xa
0000000000003b7d         je         loc_3be0

0000000000003b7f         mov        dword [rsp+0x48+var_48], esi
0000000000003b82         mov        rcx, rsp
0000000000003b85         mov        rsi, rax
0000000000003b88         mov        qword [rsp+0x48+var_44], 0x0
0000000000003b91         mov        qword [rsp+0x48+var_3C], 0x0
0000000000003b9a         mov        qword [rsp+0x48+var_34], 0x0
0000000000003ba3         mov        qword [rsp+0x48+var_2C], 0x0
0000000000003bac         mov        qword [rsp+0x48+var_24], 0x0
0000000000003bb5         mov        qword [rsp+0x48+var_1C], 0x0
0000000000003bbe         mov        dword [rsp+0x48+var_14], 0x0
0000000000003bc6         call       quotearg_n_options                          ; quotearg_n_options
0000000000003bcb         mov        rdx, qword [rsp+0x48+var_10]
0000000000003bd0         xor        rdx, qword [fs:0x28]
0000000000003bd9         jne        loc_3be5

0000000000003bdb         add        rsp, 0x48
0000000000003bdf         ret
                        ; endp

                     loc_3be0:
0000000000003be0         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_3be5:
0000000000003be5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
0000000000003bea         align      16                                          ; End of unwind block (FDE at 0x83f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
0000000000003bf0         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x840c), CODE XREF=main+363, main+442, main+613, main+677
0000000000003bf3         mov        esi, edi
0000000000003bf5         xor        edi, edi
0000000000003bf7         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
0000000000003bfc         align      1024                                        ; End of unwind block (FDE at 0x840c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
0000000000003c00         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x8420)
0000000000003c03         mov        rdx, rsi
0000000000003c06         mov        esi, edi
0000000000003c08         xor        edi, edi
0000000000003c0a         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
0000000000003c0f         align      16                                          ; End of unwind block (FDE at 0x8420)

                     quotearg_char_mem:
0000000000003c10         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x8434), CODE XREF=quotearg_char+11
0000000000003c14         mov        ecx, edx
0000000000003c16         mov        rax, qword [fs:0x28]
0000000000003c1f         mov        qword [rsp+0x48+var_10], rax
0000000000003c24         xor        eax, eax
0000000000003c26         mov        rax, qword [qword_20a210]                   ; qword_20a210
0000000000003c2d         mov        r8, rsp
0000000000003c30         and        ecx, 0x1f
0000000000003c33         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000003c3b         mov        qword [rsp+0x48+var_18], rax
0000000000003c40         mov        eax, edx
0000000000003c42         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000003c46         shr        al, 0x5
0000000000003c49         movzx      eax, al
0000000000003c4c         lea        r9, qword [r8+rax*4+8]
0000000000003c51         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20a1f0
0000000000003c59         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000003c5e         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20a200
0000000000003c66         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000003c6b         mov        edx, dword [r9]
0000000000003c6e         mov        eax, edx
0000000000003c70         shr        eax, cl
0000000000003c72         not        eax
0000000000003c74         and        eax, 0x1
0000000000003c77         shl        eax, cl
0000000000003c79         mov        rcx, r8
0000000000003c7c         xor        eax, edx
0000000000003c7e         mov        rdx, rsi
0000000000003c81         mov        rsi, rdi
0000000000003c84         mov        dword [r9], eax
0000000000003c87         xor        edi, edi
0000000000003c89         call       quotearg_n_options                          ; quotearg_n_options
0000000000003c8e         mov        rsi, qword [rsp+0x48+var_10]
0000000000003c93         xor        rsi, qword [fs:0x28]
0000000000003c9c         jne        loc_3ca3

0000000000003c9e         add        rsp, 0x48
0000000000003ca2         ret
                        ; endp

                     loc_3ca3:
0000000000003ca3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
0000000000003ca8         align      16                                          ; End of unwind block (FDE at 0x8434)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
0000000000003cb0         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0x8450)
0000000000003cb4         mov        rsi, 0xffffffffffffffff
0000000000003cbb         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
0000000000003cc0         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0x8450), Begin of unwind block (FDE at 0x8464), CODE XREF=close_stdout+101
0000000000003cc5         mov        rsi, 0xffffffffffffffff
0000000000003ccc         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000003cd1         align      32                                          ; End of unwind block (FDE at 0x8464)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
0000000000003ce0         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0x8478)
0000000000003ce5         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000003cea         align      16                                          ; End of unwind block (FDE at 0x8478)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
0000000000003cf0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x848c)
0000000000003cf4         mov        rax, rdx
0000000000003cf7         mov        rdx, qword [fs:0x28]
0000000000003d00         mov        qword [rsp+0x48+var_10], rdx
0000000000003d05         xor        edx, edx
0000000000003d07         cmp        esi, 0xa
0000000000003d0a         je         loc_3d74

0000000000003d0c         mov        dword [rsp+0x48+var_48], esi
0000000000003d0f         mov        rcx, rsp
0000000000003d12         mov        rdx, 0xffffffffffffffff
0000000000003d19         mov        rsi, rax
0000000000003d1c         mov        qword [rsp+0x48+var_44], 0x0
0000000000003d25         mov        qword [rsp+0x48+var_3C], 0x4000000
0000000000003d2e         mov        qword [rsp+0x48+var_34], 0x0
0000000000003d37         mov        qword [rsp+0x48+var_2C], 0x0
0000000000003d40         mov        qword [rsp+0x48+var_24], 0x0
0000000000003d49         mov        qword [rsp+0x48+var_1C], 0x0
0000000000003d52         mov        dword [rsp+0x48+var_14], 0x0
0000000000003d5a         call       quotearg_n_options                          ; quotearg_n_options
0000000000003d5f         mov        rcx, qword [rsp+0x48+var_10]
0000000000003d64         xor        rcx, qword [fs:0x28]
0000000000003d6d         jne        loc_3d79

0000000000003d6f         add        rsp, 0x48
0000000000003d73         ret
                        ; endp

                     loc_3d74:
0000000000003d74         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_3d79:
0000000000003d79         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
0000000000003d7e         align      128                                         ; End of unwind block (FDE at 0x848c)

                     quotearg_n_custom_mem:
0000000000003d80         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x84a8), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
0000000000003d84         mov        r9, rcx
0000000000003d87         mov        rcx, qword [qword_20a210]                   ; qword_20a210
0000000000003d8e         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000003d96         mov        rax, qword [fs:0x28]
0000000000003d9f         mov        qword [rsp+0x48+var_10], rax
0000000000003da4         xor        eax, eax
0000000000003da6         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000003daa         test       rsi, rsi
0000000000003dad         mov        qword [rsp+0x48+var_18], rcx
0000000000003db2         mov        dword [rsp+0x48+var_48], 0xa
0000000000003db9         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20a1f0
0000000000003dc1         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000003dc6         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20a200
0000000000003dce         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000003dd3         je         loc_3e07

0000000000003dd5         test       rdx, rdx
0000000000003dd8         je         loc_3e07

0000000000003dda         mov        qword [rsp+0x48+var_20], rsi
0000000000003ddf         mov        qword [rsp+0x48+var_18], rdx
0000000000003de4         mov        rcx, rsp
0000000000003de7         mov        rdx, r8
0000000000003dea         mov        rsi, r9
0000000000003ded         call       quotearg_n_options                          ; quotearg_n_options
0000000000003df2         mov        rdi, qword [rsp+0x48+var_10]
0000000000003df7         xor        rdi, qword [fs:0x28]
0000000000003e00         jne        loc_3e0c

0000000000003e02         add        rsp, 0x48
0000000000003e06         ret
                        ; endp

                     loc_3e07:
0000000000003e07         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_3e0c:
0000000000003e0c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
0000000000003e11         align      32                                          ; End of unwind block (FDE at 0x84a8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom:
0000000000003e20         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0x84c4)
0000000000003e27         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
0000000000003e2c         align      16                                          ; End of unwind block (FDE at 0x84c4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
0000000000003e30         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x84d8)
0000000000003e33         mov        r8, 0xffffffffffffffff
0000000000003e3a         mov        rdx, rsi
0000000000003e3d         mov        rsi, rdi
0000000000003e40         xor        edi, edi
0000000000003e42         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000003e47         align      16                                          ; End of unwind block (FDE at 0x84d8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
0000000000003e50         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0x84ec)
0000000000003e53         mov        rcx, rdx
0000000000003e56         mov        rdx, rsi
0000000000003e59         mov        rsi, rdi
0000000000003e5c         xor        edi, edi
0000000000003e5e         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000003e63         align      16                                          ; End of unwind block (FDE at 0x84ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
0000000000003e70         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x8500), quote_quoting_options
0000000000003e77         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000003e7c         align      128                                         ; End of unwind block (FDE at 0x8500)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
0000000000003e80         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x8514), quote_quoting_options
0000000000003e87         mov        rdx, rsi
0000000000003e8a         mov        rsi, rdi
0000000000003e8d         xor        edi, edi
0000000000003e8f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000003e94         align      32                                          ; End of unwind block (FDE at 0x8514)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
0000000000003ea0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x8528), quote_quoting_options
0000000000003ea7         mov        rdx, 0xffffffffffffffff
0000000000003eae         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000003eb3         align      64                                          ; End of unwind block (FDE at 0x8528)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
0000000000003ec0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x853c), quote_quoting_options
0000000000003ec7         mov        rsi, rdi
0000000000003eca         mov        rdx, 0xffffffffffffffff
0000000000003ed1         xor        edi, edi
0000000000003ed3         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000003ed8         align      32                                          ; End of unwind block (FDE at 0x853c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
0000000000003ee0         push       r15                                         ; Begin of unwind block (FDE at 0x8554), CODE XREF=version_etc_va+75, version_etc+161
0000000000003ee2         push       r14
0000000000003ee4         push       r13
0000000000003ee6         push       r12
0000000000003ee8         mov        r12, r9
0000000000003eeb         push       rbp
0000000000003eec         push       rbx
0000000000003eed         mov        rbp, rdi
0000000000003ef0         mov        rbx, r8
0000000000003ef3         sub        rsp, 0x28
0000000000003ef7         test       rsi, rsi
0000000000003efa         je         loc_4018

0000000000003f00         mov        r8, rdx
0000000000003f03         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
0000000000003f0a         mov        r9, rcx
0000000000003f0d         xor        eax, eax
0000000000003f0f         mov        rcx, rsi
0000000000003f12         mov        esi, 0x1
0000000000003f17         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_3f1c:
0000000000003f1c         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0x767b, CODE XREF=version_etc_arn+337
0000000000003f23         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003f25         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003f2a         call       j_dcgettext                                 ; dcgettext
0000000000003f2f         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000003f36         mov        rcx, rax
0000000000003f39         mov        r8d, 0x7e3
0000000000003f3f         mov        esi, 0x1
0000000000003f44         mov        rdi, rbp
0000000000003f47         xor        eax, eax
0000000000003f49         call       j___fprintf_chk                             ; __fprintf_chk
0000000000003f4e         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000003f55         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003f57         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003f5c         call       j_dcgettext                                 ; dcgettext
0000000000003f61         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003f64         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003f67         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003f6c         cmp        r12, 0x9
0000000000003f70         ja         loc_42b0

0000000000003f76         lea        rdx, qword [switch_table_7968]              ; switch_table_7968
0000000000003f7d         movsxd     rax, dword [rdx+r12*4]
0000000000003f81         add        rax, rdx
0000000000003f84         jmp        rax                                         ; switch statement using table at 0x7968, with 10 cases, 0x3f90,0x4006,0x4040,0x4098,0x40d8,0x4120,0x4170,0x41c8,0x41f8,0x4260
0000000000003f86         align      16

                     loc_3f90:
0000000000003f90         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
0000000000003f94         mov        rax, qword [rbx+0x10]
0000000000003f98         lea        rsi, qword [aWrittenBySSSns_7878]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
0000000000003f9f         mov        r8, qword [rbx+8]
0000000000003fa3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003fa8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003faa         mov        r13, qword [rbx+0x30]
0000000000003fae         mov        r12, qword [rbx+0x28]
0000000000003fb2         mov        qword [rsp+0x58+var_48], r9
0000000000003fb7         mov        r15, qword [rbx+0x20]
0000000000003fbb         mov        r14, qword [rbx+0x18]
0000000000003fbf         mov        qword [rsp+0x58+var_58], rax
0000000000003fc3         mov        qword [rsp+0x58+var_50], r8
0000000000003fc8         mov        rbx, qword [rbx]
0000000000003fcb         call       j_dcgettext                                 ; dcgettext
0000000000003fd0         sub        rsp, 0x8

                     loc_3fd4:
0000000000003fd4         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
0000000000003fd9         mov        rdx, rax
0000000000003fdc         mov        rcx, rbx
0000000000003fdf         mov        esi, 0x1
0000000000003fe4         mov        rdi, rbp
0000000000003fe7         xor        eax, eax
0000000000003fe9         push       r9
0000000000003feb         push       r13
0000000000003fed         push       r12
0000000000003fef         push       r15
0000000000003ff1         push       r14
0000000000003ff3         mov        r9, qword [rsp+0x88+var_58]
0000000000003ff8         mov        r8, qword [rsp+0x88+var_50]
0000000000003ffd         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004002         add        rsp, 0x30

                     loc_4006:
0000000000004006         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
000000000000400a         pop        rbx
000000000000400b         pop        rbp
000000000000400c         pop        r12
000000000000400e         pop        r13
0000000000004010         pop        r14
0000000000004012         pop        r15
0000000000004014         ret
                        ; endp
0000000000004015         align      8

                     loc_4018:
0000000000004018         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
000000000000401b         mov        rcx, rdx
000000000000401e         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
0000000000004025         mov        esi, 0x1
000000000000402a         xor        eax, eax
000000000000402c         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004031         jmp        loc_3f1c
0000000000004036         align      64

                     loc_4040:
0000000000004040         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
0000000000004044         mov        r9, qword [rbx+0x38]
0000000000004048         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
000000000000404f         mov        rax, qword [rbx+0x10]
0000000000004053         mov        r8, qword [rbx+8]
0000000000004057         mov        edx, 0x5
000000000000405c         mov        r13, qword [rbx+0x30]
0000000000004060         mov        r12, qword [rbx+0x28]
0000000000004064         mov        r15, qword [rbx+0x20]
0000000000004068         mov        r14, qword [rbx+0x18]
000000000000406c         mov        rbx, qword [rbx]
000000000000406f         mov        qword [rsp+0x58+var_40], r10
0000000000004074         mov        qword [rsp+0x58+var_48], r9
0000000000004079         mov        qword [rsp+0x58+var_58], rax
000000000000407d         mov        qword [rsp+0x58+var_50], r8

                     loc_4082:
0000000000004082         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
0000000000004084         call       j_dcgettext                                 ; dcgettext
0000000000004089         mov        r10, qword [rsp+0x58+var_40]
000000000000408e         push       r10
0000000000004090         jmp        loc_3fd4
0000000000004095         align      8

                     loc_4098:
0000000000004098         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
000000000000409b         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
00000000000040a2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000040a7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000040a9         call       j_dcgettext                                 ; dcgettext
00000000000040ae         add        rsp, 0x28
00000000000040b2         mov        rcx, rbx
00000000000040b5         mov        rdi, rbp
00000000000040b8         pop        rbx
00000000000040b9         pop        rbp
00000000000040ba         pop        r12
00000000000040bc         pop        r13
00000000000040be         pop        r14
00000000000040c0         pop        r15
00000000000040c2         mov        rdx, rax
00000000000040c5         mov        esi, 0x1
00000000000040ca         xor        eax, eax
00000000000040cc         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
00000000000040d1         align      8

                     loc_40d8:
00000000000040d8         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
00000000000040dc         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
00000000000040e3         mov        rbx, qword [rbx]
00000000000040e6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000040eb         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000040ed         call       j_dcgettext                                 ; dcgettext
00000000000040f2         add        rsp, 0x28
00000000000040f6         mov        r8, r12
00000000000040f9         mov        rcx, rbx
00000000000040fc         mov        rdi, rbp
00000000000040ff         mov        rdx, rax
0000000000004102         mov        esi, 0x1
0000000000004107         pop        rbx
0000000000004108         pop        rbp
0000000000004109         pop        r12
000000000000410b         pop        r13
000000000000410d         pop        r14
000000000000410f         pop        r15
0000000000004111         xor        eax, eax
0000000000004113         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004118         align      32

                     loc_4120:
0000000000004120         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
0000000000004124         mov        r12, qword [rbx+8]
0000000000004128         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
000000000000412f         mov        rbx, qword [rbx]
0000000000004132         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004137         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004139         call       j_dcgettext                                 ; dcgettext
000000000000413e         add        rsp, 0x28
0000000000004142         mov        r9, r13
0000000000004145         mov        r8, r12
0000000000004148         mov        rcx, rbx
000000000000414b         mov        rdi, rbp
000000000000414e         mov        rdx, rax
0000000000004151         pop        rbx
0000000000004152         pop        rbp
0000000000004153         pop        r12
0000000000004155         pop        r13
0000000000004157         pop        r14
0000000000004159         pop        r15
000000000000415b         mov        esi, 0x1
0000000000004160         xor        eax, eax
0000000000004162         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004167         align      16

                     loc_4170:
0000000000004170         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
0000000000004177         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000417c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000417e         mov        r14, qword [rbx+0x18]
0000000000004182         mov        r13, qword [rbx+0x10]
0000000000004186         mov        r12, qword [rbx+8]
000000000000418a         mov        rbx, qword [rbx]
000000000000418d         call       j_dcgettext                                 ; dcgettext
0000000000004192         sub        rsp, 0x8

                     loc_4196:
0000000000004196         push       r14                                         ; CODE XREF=version_etc_arn+784
0000000000004198         mov        rdx, rax
000000000000419b         mov        r9, r13
000000000000419e         mov        r8, r12
00000000000041a1         mov        rcx, rbx
00000000000041a4         mov        rdi, rbp
00000000000041a7         mov        esi, 0x1
00000000000041ac         xor        eax, eax
00000000000041ae         call       j___fprintf_chk                             ; __fprintf_chk
00000000000041b3         pop        rax
00000000000041b4         pop        rdx
00000000000041b5         add        rsp, 0x28
00000000000041b9         pop        rbx
00000000000041ba         pop        rbp
00000000000041bb         pop        r12
00000000000041bd         pop        r13
00000000000041bf         pop        r14
00000000000041c1         pop        r15
00000000000041c3         ret
                        ; endp
00000000000041c4         align      8

                     loc_41c8:
00000000000041c8         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
00000000000041cc         lea        rsi, qword [aWrittenBySSSns_77f8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
00000000000041d3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000041d8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000041da         mov        r14, qword [rbx+0x18]
00000000000041de         mov        r13, qword [rbx+0x10]
00000000000041e2         mov        r12, qword [rbx+8]
00000000000041e6         mov        rbx, qword [rbx]
00000000000041e9         call       j_dcgettext                                 ; dcgettext
00000000000041ee         push       r15
00000000000041f0         jmp        loc_4196
00000000000041f2         align      8

                     loc_41f8:
00000000000041f8         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
00000000000041fc         mov        r12, qword [rbx+0x28]
0000000000004200         lea        rsi, qword [aWrittenBySSSns_7820]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
0000000000004207         mov        r15, qword [rbx+0x20]
000000000000420b         mov        r14, qword [rbx+0x18]
000000000000420f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004214         mov        r13, qword [rbx+0x10]
0000000000004218         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000421a         mov        rbx, qword [rbx]
000000000000421d         mov        qword [rsp+0x58+var_58], r8
0000000000004221         call       j_dcgettext                                 ; dcgettext
0000000000004226         sub        rsp, 0x8
000000000000422a         mov        r9, r13
000000000000422d         push       r12
000000000000422f         push       r15
0000000000004231         push       r14

                     loc_4233:
0000000000004233         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
0000000000004238         mov        rcx, rbx
000000000000423b         mov        rdx, rax
000000000000423e         mov        rdi, rbp
0000000000004241         mov        esi, 0x1
0000000000004246         xor        eax, eax
0000000000004248         call       j___fprintf_chk                             ; __fprintf_chk
000000000000424d         add        rsp, 0x20
0000000000004251         add        rsp, 0x28
0000000000004255         pop        rbx
0000000000004256         pop        rbp
0000000000004257         pop        r12
0000000000004259         pop        r13
000000000000425b         pop        r14
000000000000425d         pop        r15
000000000000425f         ret
                        ; endp

                     loc_4260:
0000000000004260         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
0000000000004264         mov        r13, qword [rbx+0x30]
0000000000004268         lea        rsi, qword [aWrittenBySSSns_7848]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
000000000000426f         mov        r12, qword [rbx+0x28]
0000000000004273         mov        r15, qword [rbx+0x20]
0000000000004277         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000427c         mov        r14, qword [rbx+0x18]
0000000000004280         mov        r8, qword [rbx+8]
0000000000004284         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004286         mov        qword [rsp+0x58+var_50], r9
000000000000428b         mov        rbx, qword [rbx]
000000000000428e         mov        qword [rsp+0x58+var_58], r8
0000000000004292         call       j_dcgettext                                 ; dcgettext
0000000000004297         push       r13
0000000000004299         push       r12
000000000000429b         push       r15
000000000000429d         push       r14
000000000000429f         mov        r9, qword [rsp+0x78+var_50]
00000000000042a4         jmp        loc_4233
00000000000042a6         align      16

                     loc_42b0:
00000000000042b0         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
00000000000042b4         mov        r9, qword [rbx+0x38]
00000000000042b8         mov        edx, 0x5
00000000000042bd         mov        rax, qword [rbx+0x10]
00000000000042c1         mov        r8, qword [rbx+8]
00000000000042c5         lea        rsi, qword [aWrittenBySSSns_78e0]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
00000000000042cc         mov        r13, qword [rbx+0x30]
00000000000042d0         mov        r12, qword [rbx+0x28]
00000000000042d4         mov        r15, qword [rbx+0x20]
00000000000042d8         mov        r14, qword [rbx+0x18]
00000000000042dc         mov        qword [rsp+0x58+var_40], r10
00000000000042e1         mov        qword [rsp+0x58+var_48], r9
00000000000042e6         mov        qword [rsp+0x58+var_58], rax
00000000000042ea         mov        qword [rsp+0x58+var_50], r8
00000000000042ef         mov        rbx, qword [rbx]
00000000000042f2         jmp        loc_4082
00000000000042f7         align      256                                         ; End of unwind block (FDE at 0x8554)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
0000000000004300         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0x8668)
0000000000004303         cmp        qword [r8], 0x0
0000000000004307         je         j_version_etc_arn                           ; version_etc_arn

0000000000004309         nop        dword [rax]

                     loc_4310:
0000000000004310         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
0000000000004314         cmp        qword [r8+r9*8], 0x0
0000000000004319         jne        loc_4310

                     j_version_etc_arn:        // version_etc_arn
000000000000431b         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
0000000000004320         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0x8668), Begin of unwind block (FDE at 0x867c)
0000000000004324         mov        r10, r8
0000000000004327         xor        r9d, r9d
000000000000432a         mov        rax, qword [fs:0x28]
0000000000004333         mov        qword [rsp+0x68+var_10], rax
0000000000004338         xor        eax, eax
000000000000433a         mov        r8, rsp
000000000000433d         nop        dword [rax]

                     loc_4340:
0000000000004340         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000004343         cmp        eax, 0x2f
0000000000004346         ja         loc_438a

0000000000004348         mov        r11d, eax
000000000000434b         add        r11, qword [r10+0x10]
000000000000434f         add        eax, 0x8
0000000000004352         mov        dword [r10], eax

                     loc_4355:
0000000000004355         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000004358         test       rax, rax
000000000000435b         mov        qword [r8+r9*8], rax
000000000000435f         je         loc_436b

0000000000004361         add        r9, 0x1
0000000000004365         cmp        r9, 0xa
0000000000004369         jne        loc_4340

                     loc_436b:
000000000000436b         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
0000000000004370         mov        rax, qword [rsp+0x68+var_10]
0000000000004375         xor        rax, qword [fs:0x28]
000000000000437e         jne        loc_4385

0000000000004380         add        rsp, 0x68
0000000000004384         ret
                        ; endp

                     loc_4385:
0000000000004385         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_438a:
000000000000438a         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
000000000000438e         lea        rax, qword [r11+8]
0000000000004392         mov        qword [r10+8], rax
0000000000004396         jmp        loc_4355
0000000000004398         align      32                                          ; End of unwind block (FDE at 0x867c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
00000000000043a0         push       rbp                                         ; Begin of unwind block (FDE at 0x8698), CODE XREF=main+211
00000000000043a1         push       rbx
00000000000043a2         mov        r10d, 0x20
00000000000043a8         xor        r11d, r11d
00000000000043ab         sub        rsp, 0xb8
00000000000043b2         mov        rax, qword [fs:0x28]
00000000000043bb         mov        qword [rsp+0xc8+var_50], rax
00000000000043c0         xor        eax, eax
00000000000043c2         lea        rax, qword [rsp+0xc8+arg_0]
00000000000043ca         mov        qword [rsp+0xc8+var_28], r8
00000000000043d2         lea        rbx, qword [rsp+0xc8+arg_0]
00000000000043da         lea        r8, qword [rsp+0xc8+var_A8]
00000000000043df         mov        qword [rsp+0xc8+var_20], r9
00000000000043e7         mov        dword [rsp+0xc8+var_C0], 0x20
00000000000043ef         mov        qword [rsp+0xc8+var_B8], rax
00000000000043f4         lea        rax, qword [rsp+0xc8+var_48]
00000000000043fc         xor        r9d, r9d
00000000000043ff         mov        qword [rsp+0xc8+var_B0], rax
0000000000004404         mov        rbp, rax
0000000000004407         nop        word [rax+rax]

                     loc_4410:
0000000000004410         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
0000000000004414         ja         loc_446c

0000000000004416         mov        eax, r10d
0000000000004419         mov        r11d, 0x1
000000000000441f         add        r10d, 0x8
0000000000004423         add        rax, rbp

                     loc_4426:
0000000000004426         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
0000000000004429         test       rax, rax
000000000000442c         mov        qword [r8+r9*8], rax
0000000000004430         je         loc_443c

0000000000004432         add        r9, 0x1
0000000000004436         cmp        r9, 0xa
000000000000443a         jne        loc_4410

                     loc_443c:
000000000000443c         test       r11b, r11b                                  ; CODE XREF=version_etc+144
000000000000443f         jne        loc_4465

                     loc_4441:
0000000000004441         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000004446         mov        rax, qword [rsp+0xc8+var_50]
000000000000444b         xor        rax, qword [fs:0x28]
0000000000004454         jne        loc_4460

0000000000004456         add        rsp, 0xb8
000000000000445d         pop        rbx
000000000000445e         pop        rbp
000000000000445f         ret
                        ; endp

                     loc_4460:
0000000000004460         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_4465:
0000000000004465         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
000000000000446a         jmp        loc_4441

                     loc_446c:
000000000000446c         mov        rax, rbx                                    ; CODE XREF=version_etc+116
000000000000446f         add        rbx, 0x8
0000000000004473         jmp        loc_4426
0000000000004475         align      128                                         ; End of unwind block (FDE at 0x8698)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
0000000000004480         push       rbx                                         ; Begin of unwind block (FDE at 0x86c4)
0000000000004481         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
0000000000004488         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000448d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000448f         call       j_dcgettext                                 ; dcgettext
0000000000004494         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
000000000000449b         mov        rsi, rax
000000000000449e         mov        edi, 0x1
00000000000044a3         xor        eax, eax
00000000000044a5         call       j___printf_chk                              ; __printf_chk
00000000000044aa         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
00000000000044b1         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000044b6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000044b8         call       j_dcgettext                                 ; dcgettext
00000000000044bd         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000044c4         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6d60
00000000000044cb         mov        rsi, rax
00000000000044ce         mov        edi, 0x1
00000000000044d3         xor        eax, eax
00000000000044d5         call       j___printf_chk                              ; __printf_chk
00000000000044da         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000044e1         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
00000000000044e8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000044ea         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000044ef         call       j_dcgettext                                 ; dcgettext
00000000000044f4         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000044f7         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000044fa         pop        rbx
00000000000044fb         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
0000000000004500         push       rbx                                         ; End of unwind block (FDE at 0x86c4), Begin of unwind block (FDE at 0x86e4), CODE XREF=quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15
0000000000004501         mov        rbx, rdi
0000000000004504         call       j_malloc                                    ; malloc
0000000000004509         test       rax, rax
000000000000450c         jne        loc_4513

000000000000450e         test       rbx, rbx
0000000000004511         jne        loc_4515

                     loc_4513:
0000000000004513         pop        rbx                                         ; CODE XREF=xmalloc+12
0000000000004514         ret
                        ; endp

                     loc_4515:
0000000000004515         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_451a:
000000000000451a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x86e4)
                     xnmalloc:
0000000000004520         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x8700)
0000000000004523         mul        rsi
0000000000004526         mov        rdi, rax
0000000000004529         seto       al
000000000000452c         test       rdi, rdi
000000000000452f         js         loc_453b

0000000000004531         movzx      eax, al
0000000000004534         test       rax, rax
0000000000004537         jne        loc_453b

0000000000004539         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_453b:
000000000000453b         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
000000000000453f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4544:
0000000000004544         nop                                                    ; End of unwind block (FDE at 0x8700)
0000000000004546         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000004550         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0x8714)
                        ; endp
0000000000004552         align      32                                          ; End of unwind block (FDE at 0x8714)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000004560         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x8728), CODE XREF=quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
0000000000004563         push       rbx
0000000000004564         mov        rbx, rsi
0000000000004567         jne        loc_456e

0000000000004569         test       rdi, rdi
000000000000456c         jne        loc_4588

                     loc_456e:
000000000000456e         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000004571         call       j_realloc                                   ; realloc
0000000000004576         test       rax, rax
0000000000004579         jne        loc_4580

000000000000457b         test       rbx, rbx
000000000000457e         jne        loc_4591

                     loc_4580:
0000000000004580         pop        rbx                                         ; CODE XREF=xrealloc+25
0000000000004581         ret
                        ; endp
0000000000004582         align      8

                     loc_4588:
0000000000004588         call       j_free                                      ; free, CODE XREF=xrealloc+12
000000000000458d         xor        eax, eax
000000000000458f         pop        rbx
0000000000004590         ret
                        ; endp

                     loc_4591:
0000000000004591         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4596:
0000000000004596         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x8728)
                     xnrealloc:
00000000000045a0         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x874c)
00000000000045a3         mul        rdx
00000000000045a6         mov        rsi, rax
00000000000045a9         seto       al
00000000000045ac         test       rsi, rsi
00000000000045af         js         loc_45bb

00000000000045b1         movzx      eax, al
00000000000045b4         test       rax, rax
00000000000045b7         jne        loc_45bb

00000000000045b9         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_45bb:
00000000000045bb         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
00000000000045bf         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_45c4:
00000000000045c4         nop                                                    ; End of unwind block (FDE at 0x874c)
00000000000045c6         nop        word [cs:rax+rax]
                     x2nrealloc:
00000000000045d0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x8760)
00000000000045d3         mov        r9, rdx
00000000000045d6         mov        rcx, qword [rsi]
00000000000045d9         je         loc_4610

00000000000045db         xor        edx, edx
00000000000045dd         movabs     rax, 0x5555555555555554
00000000000045e7         div        r9
00000000000045ea         cmp        rax, rcx
00000000000045ed         jbe        loc_462b

00000000000045ef         mov        rax, rcx
00000000000045f2         shr        rax, 0x1
00000000000045f5         lea        rcx, qword [rax+rcx+1]

                     loc_45fa:
00000000000045fa         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
00000000000045fd         imul       rcx, r9                                     ; argument #4 for method xrealloc
0000000000004601         mov        rsi, rcx                                    ; argument #2 for method xrealloc
0000000000004604         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000004609         align      16

                     loc_4610:
0000000000004610         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
0000000000004613         je         loc_4638

                     loc_4615:
0000000000004615         mov        rax, rcx                                    ; CODE XREF=sub_4634+28
0000000000004618         mul        r9
000000000000461b         seto       dl
000000000000461e         test       rax, rax
0000000000004621         movzx      edx, dl
0000000000004624         js         loc_462b

0000000000004626         test       rdx, rdx
0000000000004629         je         loc_45fa

                     loc_462b:
000000000000462b         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
000000000000462f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4634:
0000000000004634         nop        dword [rax]
                        ; endp

                     loc_4638:
0000000000004638         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
000000000000463a         mov        eax, 0x80
000000000000463f         xor        r8d, r8d
0000000000004642         div        r9
0000000000004645         test       rax, rax
0000000000004648         sete       r8b
000000000000464c         lea        rcx, qword [r8+rax]
0000000000004650         jmp        loc_4615
0000000000004652         align      32                                          ; End of unwind block (FDE at 0x8760)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000004660         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x8778)
0000000000004663         mov        rax, qword [rsi]
0000000000004666         je         loc_4690

0000000000004668         movabs     rdx, 0x5555555555555553
0000000000004672         cmp        rax, rdx
0000000000004675         ja         loc_46a1

0000000000004677         mov        rdx, rax
000000000000467a         shr        rdx, 0x1
000000000000467d         lea        rax, qword [rdx+rax+1]

                     loc_4682:
0000000000004682         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
0000000000004685         mov        rsi, rax                                    ; argument #2 for method xrealloc
0000000000004688         jmp        xrealloc                                    ; xrealloc
                        ; endp
000000000000468d         align      16

                     loc_4690:
0000000000004690         test       rax, rax                                    ; CODE XREF=x2realloc+6
0000000000004693         mov        edx, 0x80
0000000000004698         cmove      rax, rdx
000000000000469c         test       rax, rax
000000000000469f         jns        loc_4682

                     loc_46a1:
00000000000046a1         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
00000000000046a5         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_46aa:
00000000000046aa         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x8778)
                     xzalloc:
00000000000046b0         push       rbx                                         ; Begin of unwind block (FDE at 0x8790)
00000000000046b1         mov        rbx, rdi
00000000000046b4         call       xmalloc                                     ; xmalloc
00000000000046b9         mov        rdx, rbx                                    ; argument "__n" for method j_memset
00000000000046bc         xor        esi, esi                                    ; argument "__c" for method j_memset
00000000000046be         mov        rdi, rax                                    ; argument "__s" for method j_memset
00000000000046c1         pop        rbx
00000000000046c2         jmp        j_memset                                    ; memset
                        ; endp
00000000000046c7         align      16                                          ; End of unwind block (FDE at 0x8790)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
00000000000046d0         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x87ac)
00000000000046d3         sub        rsp, 0x8
00000000000046d7         mul        rsi
00000000000046da         seto       dl
00000000000046dd         test       rax, rax
00000000000046e0         js         loc_46f9

00000000000046e2         movzx      edx, dl
00000000000046e5         test       rdx, rdx
00000000000046e8         jne        loc_46f9

00000000000046ea         call       j_calloc                                    ; calloc
00000000000046ef         test       rax, rax
00000000000046f2         je         loc_46f9

00000000000046f4         add        rsp, 0x8
00000000000046f8         ret
                        ; endp

                     loc_46f9:
00000000000046f9         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_46fe:
00000000000046fe         nop                                                    ; End of unwind block (FDE at 0x87ac)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmemdup:
0000000000004700         push       rbp                                         ; Begin of unwind block (FDE at 0x87c8), CODE XREF=clone_quoting_options+40
0000000000004701         push       rbx
0000000000004702         mov        rbp, rdi
0000000000004705         mov        rdi, rsi
0000000000004708         mov        rbx, rsi
000000000000470b         sub        rsp, 0x8
000000000000470f         call       xmalloc                                     ; xmalloc
0000000000004714         add        rsp, 0x8
0000000000004718         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
000000000000471b         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
000000000000471e         pop        rbx
000000000000471f         pop        rbp
0000000000004720         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000004723         jmp        j_memcpy                                    ; memcpy
                        ; endp
0000000000004728         align      16                                          ; End of unwind block (FDE at 0x87c8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000004730         push       rbx                                         ; Begin of unwind block (FDE at 0x87f0)
0000000000004731         mov        rbx, rdi
0000000000004734         call       j_strlen                                    ; strlen
0000000000004739         mov        rdi, rbx
000000000000473c         lea        rsi, qword [rax+1]
0000000000004740         pop        rbx
0000000000004741         jmp        xmemdup                                     ; xmemdup
                        ; endp
0000000000004743         align      16                                          ; End of unwind block (FDE at 0x87f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000004750         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x880c), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41
0000000000004757         sub        rsp, 0x8
000000000000475b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004760         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004762         call       j_dcgettext                                 ; dcgettext
0000000000004767         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
000000000000476d         lea        rdx, qword [aRemovingDirect+20]             ; argument "__format" for method j_error, 0x6ddc
0000000000004774         mov        rcx, rax
0000000000004777         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000004779         xor        eax, eax
000000000000477b         call       j_error                                     ; error
0000000000004780         call       j_abort                                     ; abort
                        ; endp
0000000000004785         align      16                                          ; End of unwind block (FDE at 0x880c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
0000000000004790         push       r13                                         ; Begin of unwind block (FDE at 0x8824), CODE XREF=sub_2a80+534
0000000000004792         push       r12
0000000000004794         mov        r13, rsi
0000000000004797         push       rbp
0000000000004798         push       rbx
0000000000004799         mov        rbx, rdi
000000000000479c         mov        r12, rdx
000000000000479f         sub        rsp, 0x18
00000000000047a3         mov        rax, qword [fs:0x28]
00000000000047ac         mov        qword [rsp+0x38+var_30], rax
00000000000047b1         xor        eax, eax
00000000000047b3         lea        rax, qword [rsp+0x38+var_34]
00000000000047b8         test       rdi, rdi
00000000000047bb         cmove      rbx, rax
00000000000047bf         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
00000000000047c2         call       j_mbrtowc                                   ; mbrtowc
00000000000047c7         cmp        rax, 0xfffffffffffffffd
00000000000047cb         mov        rbp, rax
00000000000047ce         jbe        loc_47f0

00000000000047d0         test       r12, r12
00000000000047d3         je         loc_47f0

00000000000047d5         xor        edi, edi
00000000000047d7         call       hard_locale                                 ; hard_locale
00000000000047dc         test       al, al
00000000000047de         jne        loc_47f0

00000000000047e0         movzx      eax, byte [r13]
00000000000047e5         mov        ebp, 0x1
00000000000047ea         mov        dword [rbx], eax
00000000000047ec         nop        dword [rax]

                     loc_47f0:
00000000000047f0         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
00000000000047f5         xor        rdx, qword [fs:0x28]
00000000000047fe         mov        rax, rbp
0000000000004801         jne        loc_480e

0000000000004803         add        rsp, 0x18
0000000000004807         pop        rbx
0000000000004808         pop        rbp
0000000000004809         pop        r12
000000000000480b         pop        r13
000000000000480d         ret
                        ; endp

                     loc_480e:
000000000000480e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
0000000000004813         align      32                                          ; End of unwind block (FDE at 0x8824)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_808: int8_t, -2056
        ;    var_810: int64_t, -2064


                     rpl_vfprintf:
0000000000004820         push       r13                                         ; Begin of unwind block (FDE at 0x8864), CODE XREF=prog_fprintf+197
0000000000004822         push       r12
0000000000004824         mov        rax, rsi
0000000000004827         push       rbp
0000000000004828         push       rbx
0000000000004829         mov        r13, rdi
000000000000482c         sub        rsp, 0x7f8
0000000000004833         lea        r12, qword [rsp+0x818+var_808]
0000000000004838         lea        rsi, qword [rsp+0x818+var_810]
000000000000483d         mov        qword [rsp+0x818+var_810], 0x7d0
0000000000004846         mov        rcx, qword [fs:0x28]
000000000000484f         mov        qword [rsp+0x818+var_30], rcx
0000000000004857         xor        ecx, ecx
0000000000004859         mov        rdi, r12
000000000000485c         mov        rcx, rdx
000000000000485f         mov        rdx, rax
0000000000004862         call       vasnprintf                                  ; vasnprintf
0000000000004867         test       rax, rax
000000000000486a         mov        rbx, qword [rsp+0x818+var_810]
000000000000486f         je         loc_48fe

0000000000004875         mov        rcx, r13                                    ; argument "__s" for method j_fwrite
0000000000004878         mov        rdx, rbx                                    ; argument "__n" for method j_fwrite
000000000000487b         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
0000000000004880         mov        rdi, rax                                    ; argument "__ptr" for method j_fwrite
0000000000004883         mov        rbp, rax
0000000000004886         call       j_fwrite                                    ; fwrite
000000000000488b         cmp        rax, rbx
000000000000488e         jb         loc_48d0

0000000000004890         cmp        rbp, r12
0000000000004893         je         loc_489d

0000000000004895         mov        rdi, rbp                                    ; argument "__ptr" for method j_free
0000000000004898         call       j_free                                      ; free

                     loc_489d:
000000000000489d         cmp        rbx, 0x7fffffff                             ; CODE XREF=rpl_vfprintf+115
00000000000048a4         ja         loc_48f3

                     loc_48a6:
00000000000048a6         mov        rcx, qword [rsp+0x818+var_30]               ; CODE XREF=rpl_vfprintf+184, rpl_vfprintf+209, rpl_vfprintf+235
00000000000048ae         xor        rcx, qword [fs:0x28]
00000000000048b7         mov        eax, ebx
00000000000048b9         jne        loc_490d

00000000000048bb         add        rsp, 0x7f8
00000000000048c2         pop        rbx
00000000000048c3         pop        rbp
00000000000048c4         pop        r12
00000000000048c6         pop        r13
00000000000048c8         ret
                        ; endp
00000000000048c9         align      16

                     loc_48d0:
00000000000048d0         cmp        rbp, r12                                    ; CODE XREF=rpl_vfprintf+110
00000000000048d3         mov        ebx, 0xffffffff
00000000000048d8         je         loc_48a6

00000000000048da         call       j___errno_location                          ; __errno_location
00000000000048df         mov        r13d, dword [rax]
00000000000048e2         mov        r12, rax
00000000000048e5         mov        rdi, rbp                                    ; argument "__ptr" for method j_free
00000000000048e8         call       j_free                                      ; free
00000000000048ed         mov        dword [r12], r13d
00000000000048f1         jmp        loc_48a6

                     loc_48f3:
00000000000048f3         call       j___errno_location                          ; __errno_location, CODE XREF=rpl_vfprintf+132
00000000000048f8         mov        dword [rax], 0x4b

                     loc_48fe:
00000000000048fe         mov        rdi, r13                                    ; CODE XREF=rpl_vfprintf+79
0000000000004901         mov        ebx, 0xffffffff
0000000000004906         call       fseterr                                     ; fseterr
000000000000490b         jmp        loc_48a6

                     loc_490d:
000000000000490d         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_vfprintf+153
                        ; endp
0000000000004912         align      32                                          ; End of unwind block (FDE at 0x8864)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
0000000000004920         push       r12                                         ; Begin of unwind block (FDE at 0x88a4), CODE XREF=close_stdout+13, close_stdout+51
0000000000004922         push       rbp
0000000000004923         mov        rbp, rdi
0000000000004926         push       rbx
0000000000004927         call       j___fpending                                ; __fpending
000000000000492c         mov        ebx, dword [rbp]
000000000000492f         mov        rdi, rbp
0000000000004932         mov        r12, rax
0000000000004935         call       rpl_fclose                                  ; rpl_fclose
000000000000493a         and        ebx, 0x20
000000000000493d         test       ebx, ebx
000000000000493f         jne        loc_4958

0000000000004941         test       eax, eax
0000000000004943         je         loc_494f

0000000000004945         test       r12, r12
0000000000004948         mov        eax, 0xffffffff
000000000000494d         je         loc_4988

                     loc_494f:
000000000000494f         pop        rbx                                         ; CODE XREF=close_stream+35
0000000000004950         pop        rbp
0000000000004951         pop        r12
0000000000004953         ret
                        ; endp
0000000000004954         align      8

                     loc_4958:
0000000000004958         test       eax, eax                                    ; CODE XREF=close_stream+31
000000000000495a         jne        loc_4978

000000000000495c         call       j___errno_location                          ; __errno_location
0000000000004961         mov        dword [rax], 0x0
0000000000004967         mov        eax, 0xffffffff
000000000000496c         pop        rbx
000000000000496d         pop        rbp
000000000000496e         pop        r12
0000000000004970         ret
                        ; endp
0000000000004971         align      8

                     loc_4978:
0000000000004978         pop        rbx                                         ; CODE XREF=close_stream+58
0000000000004979         mov        eax, 0xffffffff
000000000000497e         pop        rbp
000000000000497f         pop        r12
0000000000004981         ret
                        ; endp
0000000000004982         align      8

                     loc_4988:
0000000000004988         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
000000000000498d         cmp        dword [rax], 0x9
0000000000004990         pop        rbx
0000000000004991         pop        rbp
0000000000004992         pop        r12
0000000000004994         setne      al
0000000000004997         movzx      eax, al
000000000000499a         neg        eax
000000000000499c         ret
                        ; endp
000000000000499d         align      32                                          ; End of unwind block (FDE at 0x88a4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     last_component:
00000000000049a0         movzx      edx, byte [rdi]                             ; Begin of unwind block (FDE at 0x88f4), CODE XREF=strip_trailing_slashes+9
00000000000049a3         mov        rax, rdi
00000000000049a6         cmp        dl, 0x2f
00000000000049a9         jne        loc_49bc

00000000000049ab         nop        dword [rax+rax]

                     loc_49b0:
00000000000049b0         add        rax, 0x1                                    ; CODE XREF=last_component+26
00000000000049b4         movzx      edx, byte [rax]
00000000000049b7         cmp        dl, 0x2f
00000000000049ba         je         loc_49b0

                     loc_49bc:
00000000000049bc         test       dl, dl                                      ; CODE XREF=last_component+9
00000000000049be         je         loc_49fa

00000000000049c0         mov        rcx, rax
00000000000049c3         xor        esi, esi
00000000000049c5         jmp        loc_49e5
00000000000049c7         align      16

                     loc_49d0:
00000000000049d0         test       sil, sil                                    ; CODE XREF=last_component+72
00000000000049d3         je         loc_49da

00000000000049d5         mov        rax, rcx
00000000000049d8         xor        esi, esi

                     loc_49da:
00000000000049da         add        rcx, 0x1                                    ; CODE XREF=last_component+51
00000000000049de         movzx      edx, byte [rcx]
00000000000049e1         test       dl, dl
00000000000049e3         je         loc_49fa

                     loc_49e5:
00000000000049e5         cmp        dl, 0x2f                                    ; CODE XREF=last_component+37, last_component+88
00000000000049e8         jne        loc_49d0

00000000000049ea         add        rcx, 0x1
00000000000049ee         movzx      edx, byte [rcx]
00000000000049f1         mov        esi, 0x1
00000000000049f6         test       dl, dl
00000000000049f8         jne        loc_49e5

                     loc_49fa:
00000000000049fa         ret                                                    ; CODE XREF=last_component+30, last_component+67
                        ; endp
00000000000049fc         align      512                                         ; End of unwind block (FDE at 0x88f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     base_len:
0000000000004a00         push       rbx                                         ; Begin of unwind block (FDE at 0x8908), CODE XREF=strip_trailing_slashes+27
0000000000004a01         mov        rbx, rdi
0000000000004a04         call       j_strlen                                    ; strlen
0000000000004a09         cmp        rax, 0x1
0000000000004a0d         jbe        loc_4a1a

0000000000004a0f         cmp        byte [rbx+rax-1], 0x2f
0000000000004a14         lea        rdx, qword [rax-1]
0000000000004a18         je         loc_4a28

                     loc_4a1a:
0000000000004a1a         pop        rbx                                         ; CODE XREF=base_len+13
0000000000004a1b         ret
                        ; endp
0000000000004a1c         align      32

                     loc_4a20:
0000000000004a20         mov        rdx, rax                                    ; CODE XREF=base_len+55
0000000000004a23         nop        dword [rax+rax]

                     loc_4a28:
0000000000004a28         cmp        rdx, 0x1                                    ; CODE XREF=base_len+24
0000000000004a2c         je         loc_4a40

0000000000004a2e         cmp        byte [rbx+rdx-1], 0x2f
0000000000004a33         lea        rax, qword [rdx-1]
0000000000004a37         je         loc_4a20

0000000000004a39         mov        rax, rdx
0000000000004a3c         pop        rbx
0000000000004a3d         ret
                        ; endp
0000000000004a3e         align      64

                     loc_4a40:
0000000000004a40         mov        eax, 0x1                                    ; CODE XREF=base_len+44
0000000000004a45         pop        rbx
0000000000004a46         ret
                        ; endp
0000000000004a47         align      16                                          ; End of unwind block (FDE at 0x8908)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
0000000000004a50         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x8934), CODE XREF=rpl_mbrtowc+71
0000000000004a54         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000004a56         call       j_setlocale                                 ; setlocale
0000000000004a5b         mov        rdx, rax
0000000000004a5e         mov        eax, 0x1
0000000000004a63         test       rdx, rdx
0000000000004a66         je         loc_4a85

0000000000004a68         lea        rdi, qword [aMemoryExhauste+17]             ; 0x79e0
0000000000004a6f         mov        ecx, 0x2
0000000000004a74         mov        rsi, rdx
0000000000004a77         rep  cmpsb byte [rsi], byte [rdi]
0000000000004a79         seta       cl
0000000000004a7c         sbb        cl, 0x0
0000000000004a7f         xor        eax, eax
0000000000004a81         test       cl, cl
0000000000004a83         jne        loc_4a90

                     loc_4a85:
0000000000004a85         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
0000000000004a89         ret
                        ; endp
0000000000004a8a         align      16

                     loc_4a90:
0000000000004a90         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
0000000000004a97         mov        ecx, 0x6
0000000000004a9c         mov        rsi, rdx
0000000000004a9f         rep  cmpsb byte [rsi], byte [rdi]
0000000000004aa1         seta       al
0000000000004aa4         sbb        al, 0x0
0000000000004aa6         test       al, al
0000000000004aa8         setne      al
0000000000004aab         add        rsp, 0x8
0000000000004aaf         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000004ab0         sub        rsp, 0x8                                    ; End of unwind block (FDE at 0x8934), Begin of unwind block (FDE at 0x8954), CODE XREF=gettext_quote.part.1+11
0000000000004ab4         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000004ab9         call       j_nl_langinfo                               ; nl_langinfo
0000000000004abe         test       rax, rax
0000000000004ac1         je         loc_4ae0

0000000000004ac3         cmp        byte [rax], 0x0
0000000000004ac6         lea        rdx, qword [aAscii]                         ; "ASCII"
0000000000004acd         cmove      rax, rdx
0000000000004ad1         add        rsp, 0x8
0000000000004ad5         ret
                        ; endp
0000000000004ad6         align      32

                     loc_4ae0:
0000000000004ae0         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
0000000000004ae7         add        rsp, 0x8
0000000000004aeb         ret
                        ; endp
0000000000004aec         align      16                                          ; End of unwind block (FDE at 0x8954)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
0000000000004af0         push       r12                                         ; Begin of unwind block (FDE at 0x8974), CODE XREF=close_stream+21
0000000000004af2         push       rbp
0000000000004af3         push       rbx
0000000000004af4         mov        rbx, rdi
0000000000004af7         call       j_fileno                                    ; fileno
0000000000004afc         test       eax, eax
0000000000004afe         mov        rdi, rbx
0000000000004b01         js         loc_4b57

0000000000004b03         call       j___freading                                ; __freading
0000000000004b08         test       eax, eax
0000000000004b0a         jne        loc_4b38

                     loc_4b0c:
0000000000004b0c         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
0000000000004b0f         call       rpl_fflush                                  ; rpl_fflush
0000000000004b14         test       eax, eax
0000000000004b16         je         loc_4b54

0000000000004b18         call       j___errno_location                          ; __errno_location
0000000000004b1d         mov        r12d, dword [rax]
0000000000004b20         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
0000000000004b23         mov        rbp, rax
0000000000004b26         call       j_fclose                                    ; fclose
0000000000004b2b         test       r12d, r12d
0000000000004b2e         jne        loc_4b60

                     loc_4b30:
0000000000004b30         pop        rbx                                         ; CODE XREF=rpl_fclose+121
0000000000004b31         pop        rbp
0000000000004b32         pop        r12
0000000000004b34         ret
                        ; endp
0000000000004b35         align      8

                     loc_4b38:
0000000000004b38         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
0000000000004b3b         call       j_fileno                                    ; fileno
0000000000004b40         xor        esi, esi                                    ; argument "__offset" for method j_lseek
0000000000004b42         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000004b47         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000004b49         call       j_lseek                                     ; lseek
0000000000004b4e         cmp        rax, 0xffffffffffffffff
0000000000004b52         jne        loc_4b0c

                     loc_4b54:
0000000000004b54         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_4b57:
0000000000004b57         pop        rbx                                         ; CODE XREF=rpl_fclose+17
0000000000004b58         pop        rbp
0000000000004b59         pop        r12
0000000000004b5b         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_4b60:
0000000000004b60         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
0000000000004b64         mov        eax, 0xffffffff
0000000000004b69         jmp        loc_4b30
0000000000004b6b         align      16                                          ; End of unwind block (FDE at 0x8974)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
0000000000004b70         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x89ac), CODE XREF=rpl_fclose+31
0000000000004b73         push       rbx
0000000000004b74         mov        rbx, rdi
0000000000004b77         je         loc_4b8a

0000000000004b79         call       j___freading                                ; __freading
0000000000004b7e         test       eax, eax
0000000000004b80         je         loc_4b8a

0000000000004b82         test       dword [rbx], 0x100
0000000000004b88         jne        loc_4b98

                     loc_4b8a:
0000000000004b8a         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
0000000000004b8d         pop        rbx
0000000000004b8e         jmp        j_fflush                                    ; fflush
                        ; endp
0000000000004b93         align      8

                     loc_4b98:
0000000000004b98         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
0000000000004b9b         mov        edx, 0x1
0000000000004ba0         xor        esi, esi
0000000000004ba2         call       rpl_fseeko                                  ; rpl_fseeko
0000000000004ba7         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
0000000000004baa         pop        rbx
0000000000004bab         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
0000000000004bb0         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0x89ac), Begin of unwind block (FDE at 0x89cc), CODE XREF=rpl_fflush+50
0000000000004bb4         cmp        qword [rdi+0x10], rax
0000000000004bb8         je         loc_4bc0

                     j_j_fseeko:        // fseeko
0000000000004bba         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
0000000000004bbf         align      64

                     loc_4bc0:
0000000000004bc0         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
0000000000004bc4         cmp        qword [rdi+0x28], rax
0000000000004bc8         jne        j_j_fseeko                                  ; fseeko

0000000000004bca         cmp        qword [rdi+0x48], 0x0
0000000000004bcf         jne        j_j_fseeko                                  ; fseeko

0000000000004bd1         push       r12
0000000000004bd3         push       rbp
0000000000004bd4         mov        r12d, edx
0000000000004bd7         push       rbx
0000000000004bd8         mov        rbp, rsi
0000000000004bdb         mov        rbx, rdi
0000000000004bde         call       j_fileno                                    ; fileno
0000000000004be3         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000004be6         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000004be9         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000004beb         call       j_lseek                                     ; lseek
0000000000004bf0         cmp        rax, 0xffffffffffffffff
0000000000004bf4         je         loc_4c02

0000000000004bf6         and        dword [rbx], 0xffffffef
0000000000004bf9         mov        qword [rbx+0x90], rax
0000000000004c00         xor        eax, eax

                     loc_4c02:
0000000000004c02         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
0000000000004c03         pop        rbp
0000000000004c04         pop        r12
0000000000004c06         ret
                        ; endp
0000000000004c07         align      16                                          ; End of unwind block (FDE at 0x89cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fseterr:
0000000000004c10         or         dword [rdi], 0x20                           ; Begin of unwind block (FDE at 0x89fc), CODE XREF=rpl_vfprintf+230
0000000000004c13         ret
                        ; endp
0000000000004c14         align      32                                          ; End of unwind block (FDE at 0x89fc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_28: int8_t, -40
        ;    var_38: int64_t, -56
        ;    var_2A8: int64_t, -680
        ;    var_2B0: int64_t, -688
        ;    var_2B8: int64_t, -696
        ;    var_2C0: int64_t, -704
        ;    var_3A8: int64_t, -936
        ;    var_3B0: int8_t, -944
        ;    var_3B4: int32_t, -948
        ;    var_3B8: int32_t, -952
        ;    var_3BC: int32_t, -956
        ;    var_3C8: int64_t, -968
        ;    var_3D0: int64_t, -976
        ;    var_3D8: int64_t, -984
        ;    var_3E0: int64_t, -992
        ;    var_3E8: int64_t, -1000
        ;    var_3F0: int64_t, -1008
        ;    var_3F8: int64_t, -1016
        ;    var_400: int64_t, -1024
        ;    var_408: int64_t, -1032
        ;    var_410: int64_t, -1040
        ;    var_418: int64_t, -1048
        ;    var_420: int64_t, -1056
        ;    var_421: int8_t, -1057
        ;    var_424: int32_t, -1060
        ;    var_430: int64_t, -1072
        ;    var_440: -1088
        ;    var_450: -1104


                     vasnprintf:
0000000000004c20         push       rbp                                         ; Begin of unwind block (FDE at 0x8a14), CODE XREF=rpl_vfprintf+66
0000000000004c21         mov        rbp, rsp
0000000000004c24         push       r15
0000000000004c26         push       r14
0000000000004c28         push       r13
0000000000004c2a         push       r12
0000000000004c2c         lea        r14, qword [rbp+var_3B0]
0000000000004c33         push       rbx
0000000000004c34         mov        rbx, rdx
0000000000004c37         mov        r12, rcx
0000000000004c3a         mov        rdx, r14
0000000000004c3d         sub        rsp, 0x408
0000000000004c44         mov        qword [rbp+var_418], rsi
0000000000004c4b         lea        rsi, qword [rbp+var_2C0]
0000000000004c52         mov        qword [rbp+var_3E8], rdi
0000000000004c59         mov        rdi, rbx
0000000000004c5c         mov        qword [rbp+var_410], r14
0000000000004c63         mov        rax, qword [fs:0x28]
0000000000004c6c         mov        qword [rbp+var_38], rax
0000000000004c70         xor        eax, eax
0000000000004c72         mov        qword [rbp+var_408], rsi
0000000000004c79         call       printf_parse                                ; printf_parse
0000000000004c7e         test       eax, eax
0000000000004c80         js         loc_5ae8

0000000000004c86         mov        rsi, r14
0000000000004c89         mov        rdi, r12
0000000000004c8c         call       printf_fetchargs                            ; printf_fetchargs
0000000000004c91         test       eax, eax
0000000000004c93         js         loc_5b50

0000000000004c99         mov        rax, qword [rbp+var_2B0]
0000000000004ca0         mov        rdx, 0xffffffffffffffff
0000000000004ca7         add        rax, 0x7
0000000000004cab         cmp        rax, 0x6
0000000000004caf         cmovbe     rax, rdx
0000000000004cb3         add        rax, qword [rbp+var_2A8]
0000000000004cba         jb         loc_56e8

0000000000004cc0         mov        rdi, rax
0000000000004cc3         xor        r8d, r8d
0000000000004cc6         add        rdi, 0x6
0000000000004cca         setb       r8b
0000000000004cce         jb         loc_56e8

0000000000004cd4         cmp        rdi, 0xf9f
0000000000004cdb         jbe        loc_4e28

0000000000004ce1         cmp        rdi, 0xffffffffffffffff
0000000000004ce5         mov        qword [rbp+var_3C8], r8
0000000000004cec         je         loc_56e8

0000000000004cf2         call       j_malloc                                    ; malloc
0000000000004cf7         test       rax, rax
0000000000004cfa         mov        qword [rbp+var_3D8], rax
0000000000004d01         je         loc_56e8

0000000000004d07         mov        r8, qword [rbp+var_3C8]
0000000000004d0e         mov        qword [rbp+var_420], rax

                     loc_4d15:
0000000000004d15         xor        r12d, r12d                                  ; CODE XREF=vasnprintf+558
0000000000004d18         cmp        qword [rbp+var_3E8], 0x0
0000000000004d20         je         loc_4d2c

0000000000004d22         mov        rax, qword [rbp+var_418]
0000000000004d29         mov        r12, qword [rax]

                     loc_4d2c:
0000000000004d2c         mov        r13, qword [rbp+var_2B8]                    ; CODE XREF=vasnprintf+256
0000000000004d33         lea        rax, qword [rbp+var_3BC]
0000000000004d3a         mov        r15, qword [rbp+var_3E8]
0000000000004d41         mov        qword [rbp+var_400], 0x0
0000000000004d4c         mov        qword [rbp+var_3F0], rax
0000000000004d53         mov        rax, rbx
0000000000004d56         mov        rbx, r8
0000000000004d59         mov        rcx, qword [r13]
0000000000004d5d         mov        r8, rax
0000000000004d60         cmp        rcx, r8
0000000000004d63         je         loc_56d1

                     loc_4d69:
0000000000004d69         sub        rcx, r8                                     ; CODE XREF=vasnprintf+2731
0000000000004d6c         mov        rax, rbx
0000000000004d6f         add        rax, rcx
0000000000004d72         mov        r14, rax
0000000000004d75         jae        loc_4e58

0000000000004d7b         cmp        r12, 0xffffffffffffffff
0000000000004d7f         je         loc_5850

                     loc_4d85:
0000000000004d85         call       j___errno_location                          ; __errno_location, CODE XREF=vasnprintf+1250, vasnprintf+2694, loc_5790, vasnprintf+2950, vasnprintf+3039, loc_58e8, vasnprintf+3299, vasnprintf+3309, vasnprintf+3371, vasnprintf+3515, loc_5b00
0000000000004d8a         mov        qword [rbp+var_3C8], rax

                     loc_4d91:
0000000000004d91         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+1600, vasnprintf+1618, vasnprintf+1668, vasnprintf+2558, vasnprintf+4338
0000000000004d98         je         loc_4da3

0000000000004d9a         test       r15, r15
0000000000004d9d         jne        loc_5880

                     loc_4da3:
0000000000004da3         mov        rax, qword [rbp+var_420]                    ; CODE XREF=vasnprintf+376, vasnprintf+3176
0000000000004daa         test       rax, rax
0000000000004dad         je         loc_4db7

0000000000004daf         mov        rdi, rax                                    ; argument "__ptr" for method j_free
0000000000004db2         call       j_free                                      ; free

                     loc_4db7:
0000000000004db7         mov        rax, qword [rbp+var_408]                    ; CODE XREF=vasnprintf+397, vasnprintf+2772
0000000000004dbe         mov        rdi, qword [rbp+var_2B8]
0000000000004dc5         add        rax, 0x20
0000000000004dc9         cmp        rdi, rax
0000000000004dcc         je         loc_4dd3

0000000000004dce         call       j_free                                      ; free

                     loc_4dd3:
0000000000004dd3         mov        rax, qword [rbp+var_410]                    ; CODE XREF=vasnprintf+428
0000000000004dda         mov        rdi, qword [rbp+var_3A8]
0000000000004de1         add        rax, 0x10
0000000000004de5         cmp        rdi, rax
0000000000004de8         je         loc_4def

0000000000004dea         call       j_free                                      ; free

                     loc_4def:
0000000000004def         mov        rax, qword [rbp+var_3C8]                    ; CODE XREF=vasnprintf+456
0000000000004df6         xor        r15d, r15d
0000000000004df9         mov        dword [rax], 0xc

                     loc_4dff:
0000000000004dff         mov        rdi, qword [rbp+var_38]                     ; CODE XREF=vasnprintf+1978, vasnprintf+3774, vasnprintf+3787, vasnprintf+3958, vasnprintf+4183
0000000000004e03         xor        rdi, qword [fs:0x28]
0000000000004e0c         mov        rax, r15
0000000000004e0f         jne        loc_5d17

0000000000004e15         lea        rsp, qword [rbp+var_28]
0000000000004e19         pop        rbx
0000000000004e1a         pop        r12
0000000000004e1c         pop        r13
0000000000004e1e         pop        r14
0000000000004e20         pop        r15
0000000000004e22         pop        rbp
0000000000004e23         ret
                        ; endp
0000000000004e24         align      8

                     loc_4e28:
0000000000004e28         add        rax, 0x24                                   ; CODE XREF=vasnprintf+187
0000000000004e2c         mov        qword [rbp+var_420], 0x0
0000000000004e37         and        rax, 0xfffffffffffffff0
0000000000004e3b         sub        rsp, rax
0000000000004e3e         lea        rax, qword [rsp+0x430+var_421]
0000000000004e43         and        rax, 0xfffffffffffffff0
0000000000004e47         mov        qword [rbp+var_3D8], rax
0000000000004e4e         jmp        loc_4d15
0000000000004e53         align      8

                     loc_4e58:
0000000000004e58         cmp        r12, rax                                    ; CODE XREF=vasnprintf+341
0000000000004e5b         jae        loc_4ec4

0000000000004e5d         test       r12, r12
0000000000004e60         jne        loc_5790

0000000000004e66         cmp        rax, 0xc
0000000000004e6a         ja         loc_57a2

0000000000004e70         mov        r12d, 0xc

                     loc_4e76:
0000000000004e76         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+2940
0000000000004e7d         sete       dl
0000000000004e80         test       r15, r15
0000000000004e83         je         loc_57c8

                     loc_4e89:
0000000000004e89         test       dl, dl                                      ; CODE XREF=vasnprintf+2972
0000000000004e8b         jne        loc_57c8

0000000000004e91         mov        rsi, r12                                    ; argument "__size" for method j_realloc
0000000000004e94         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
0000000000004e97         mov        qword [rbp+var_3D0], r8
0000000000004e9e         mov        qword [rbp+var_3C8], rcx
0000000000004ea5         call       j_realloc                                   ; realloc
0000000000004eaa         test       rax, rax
0000000000004ead         mov        rcx, qword [rbp+var_3C8]
0000000000004eb4         mov        r8, qword [rbp+var_3D0]
0000000000004ebb         je         loc_586b

0000000000004ec1         mov        r15, rax

                     loc_4ec4:
0000000000004ec4         lea        rdi, qword [r15+rbx]                        ; argument "__dest" for method j_memcpy, CODE XREF=vasnprintf+571, vasnprintf+3107, vasnprintf+3123, vasnprintf+3571
0000000000004ec8         mov        rdx, rcx                                    ; argument "__n" for method j_memcpy
0000000000004ecb         mov        rsi, r8                                     ; argument "__src" for method j_memcpy
0000000000004ece         call       j_memcpy                                    ; memcpy

                     loc_4ed3:
0000000000004ed3         mov        rax, qword [rbp+var_400]                    ; CODE XREF=vasnprintf+2740
0000000000004eda         cmp        qword [rbp+var_2C0], rax
0000000000004ee1         je         loc_5b9b

0000000000004ee7         movzx      edx, byte [r13+0x48]
0000000000004eec         mov        rax, qword [r13+0x50]
0000000000004ef0         cmp        dl, 0x25
0000000000004ef3         je         loc_5688

0000000000004ef9         cmp        rax, 0xffffffffffffffff
0000000000004efd         je         loc_5b46

0000000000004f03         mov        r8, qword [rbp+var_3A8]
0000000000004f0a         shl        rax, 0x5
0000000000004f0e         add        rax, r8
0000000000004f11         cmp        dl, 0x6e
0000000000004f14         mov        edi, dword [rax]
0000000000004f16         mov        dword [rbp+var_3D0], edi
0000000000004f1c         je         loc_5700

0000000000004f22         mov        eax, dword [r13+0x10]
0000000000004f26         mov        rdi, qword [rbp+var_3D8]
0000000000004f2d         test       al, 0x1
0000000000004f2f         mov        byte [rdi], 0x25
0000000000004f32         lea        rbx, qword [rdi+1]
0000000000004f36         je         loc_4f47

0000000000004f38         mov        rdi, qword [rbp+var_3D8]
0000000000004f3f         lea        rbx, qword [rdi+2]
0000000000004f43         mov        byte [rdi+1], 0x27

                     loc_4f47:
0000000000004f47         test       al, 0x2                                     ; CODE XREF=vasnprintf+790
0000000000004f49         je         loc_4f52

0000000000004f4b         mov        byte [rbx], 0x2d
0000000000004f4e         add        rbx, 0x1

                     loc_4f52:
0000000000004f52         test       al, 0x4                                     ; CODE XREF=vasnprintf+809
0000000000004f54         je         loc_4f5d

0000000000004f56         mov        byte [rbx], 0x2b
0000000000004f59         add        rbx, 0x1

                     loc_4f5d:
0000000000004f5d         test       al, 0x8                                     ; CODE XREF=vasnprintf+820
0000000000004f5f         je         loc_4f68

0000000000004f61         mov        byte [rbx], 0x20
0000000000004f64         add        rbx, 0x1

                     loc_4f68:
0000000000004f68         test       al, 0x10                                    ; CODE XREF=vasnprintf+831
0000000000004f6a         je         loc_4f73

0000000000004f6c         mov        byte [rbx], 0x23
0000000000004f6f         add        rbx, 0x1

                     loc_4f73:
0000000000004f73         test       al, 0x40                                    ; CODE XREF=vasnprintf+842
0000000000004f75         je         loc_4f7e

0000000000004f77         mov        byte [rbx], 0x49
0000000000004f7a         add        rbx, 0x1

                     loc_4f7e:
0000000000004f7e         test       al, 0x20                                    ; CODE XREF=vasnprintf+853
0000000000004f80         je         loc_4f89

0000000000004f82         mov        byte [rbx], 0x30
0000000000004f85         add        rbx, 0x1

                     loc_4f89:
0000000000004f89         mov        rsi, qword [r13+0x18]                       ; CODE XREF=vasnprintf+864
0000000000004f8d         mov        rdx, qword [r13+0x20]
0000000000004f91         cmp        rsi, rdx
0000000000004f94         je         loc_4fc6

0000000000004f96         mov        rcx, rdx
0000000000004f99         mov        rdi, rbx                                    ; argument "__dest" for method j_memcpy
0000000000004f9c         mov        qword [rbp+var_3E0], r8
0000000000004fa3         sub        rcx, rsi
0000000000004fa6         mov        rdx, rcx                                    ; argument "__n" for method j_memcpy
0000000000004fa9         mov        qword [rbp+var_3C8], rcx
0000000000004fb0         call       j_memcpy                                    ; memcpy
0000000000004fb5         mov        rcx, qword [rbp+var_3C8]
0000000000004fbc         mov        r8, qword [rbp+var_3E0]
0000000000004fc3         add        rbx, rcx

                     loc_4fc6:
0000000000004fc6         mov        rsi, qword [r13+0x30]                       ; CODE XREF=vasnprintf+884
0000000000004fca         mov        rdx, qword [r13+0x38]
0000000000004fce         cmp        rsi, rdx
0000000000004fd1         je         loc_5003

0000000000004fd3         mov        rcx, rdx
0000000000004fd6         mov        rdi, rbx                                    ; argument "__dest" for method j_memcpy
0000000000004fd9         mov        qword [rbp+var_3E0], r8
0000000000004fe0         sub        rcx, rsi
0000000000004fe3         mov        rdx, rcx                                    ; argument "__n" for method j_memcpy
0000000000004fe6         mov        qword [rbp+var_3C8], rcx
0000000000004fed         call       j_memcpy                                    ; memcpy
0000000000004ff2         mov        rcx, qword [rbp+var_3C8]
0000000000004ff9         mov        r8, qword [rbp+var_3E0]
0000000000005000         add        rbx, rcx

                     loc_5003:
0000000000005003         mov        edi, dword [rbp+var_3D0]                    ; CODE XREF=vasnprintf+945
0000000000005009         cmp        edi, 0x10
000000000000500c         ja         loc_503b

000000000000500e         mov        eax, 0x1
0000000000005013         mov        ecx, edi
0000000000005015         shl        rax, cl
0000000000005018         test       eax, 0x14180
000000000000501d         jne        loc_5034

000000000000501f         test       ah, 0x10
0000000000005022         jne        loc_5980

0000000000005028         test       ah, 0x6
000000000000502b         je         loc_503b

000000000000502d         mov        byte [rbx], 0x6c
0000000000005030         add        rbx, 0x1

                     loc_5034:
0000000000005034         mov        byte [rbx], 0x6c                            ; CODE XREF=vasnprintf+1021
0000000000005037         add        rbx, 0x1

                     loc_503b:
000000000000503b         movzx      eax, byte [r13+0x48]                        ; CODE XREF=vasnprintf+1004, vasnprintf+1035, vasnprintf+3431
0000000000005040         mov        byte [rbx+1], 0x0
0000000000005044         mov        byte [rbx], al
0000000000005046         mov        rax, qword [r13+0x28]
000000000000504a         cmp        rax, 0xffffffffffffffff
000000000000504e         je         loc_5780

0000000000005054         shl        rax, 0x5
0000000000005058         add        rax, r8
000000000000505b         cmp        dword [rax], 0x5
000000000000505e         jne        loc_5b46

0000000000005064         mov        eax, dword [rax+0x10]
0000000000005067         mov        dword [rbp+var_3E0], 0x1
0000000000005071         mov        dword [rbp+var_3B8], eax

                     loc_5077:
0000000000005077         mov        rax, qword [r13+0x40]                       ; CODE XREF=vasnprintf+2922
000000000000507b         cmp        rax, 0xffffffffffffffff
000000000000507f         je         loc_50ac

0000000000005081         shl        rax, 0x5
0000000000005085         add        r8, rax
0000000000005088         cmp        dword [r8], 0x5
000000000000508c         jne        loc_5b46

0000000000005092         mov        eax, dword [rbp+var_3E0]
0000000000005098         mov        edx, dword [r8+0x10]
000000000000509c         mov        dword [rbp+rax*4+var_3B8], edx
00000000000050a3         lea        eax, dword [rax+1]
00000000000050a6         mov        dword [rbp+var_3E0], eax

                     loc_50ac:
00000000000050ac         mov        rax, r14                                    ; CODE XREF=vasnprintf+1119
00000000000050af         xor        edx, edx
00000000000050b1         add        rax, 0x2
00000000000050b5         jb         loc_5d1c

00000000000050bb         cmp        r12, rax
00000000000050be         jae        loc_510b

00000000000050c0         test       r12, r12
00000000000050c3         jne        loc_58e8

00000000000050c9         cmp        rax, 0xc
00000000000050cd         ja         loc_5900

00000000000050d3         mov        r12d, 0xc

                     loc_50d9:
00000000000050d9         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+3284
00000000000050e0         sete       dl
00000000000050e3         test       r15, r15
00000000000050e6         je         loc_5930

                     loc_50ec:
00000000000050ec         test       dl, dl                                      ; CODE XREF=vasnprintf+3331
00000000000050ee         jne        loc_5930

00000000000050f4         mov        rsi, r12                                    ; argument "__size" for method j_realloc
00000000000050f7         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
00000000000050fa         call       j_realloc                                   ; realloc
00000000000050ff         test       rax, rax
0000000000005102         je         loc_4d85

0000000000005108         mov        r15, rax

                     loc_510b:
000000000000510b         mov        byte [r15+r14], 0x0                         ; CODE XREF=vasnprintf+1182, vasnprintf+3411, vasnprintf+3795, vasnprintf+4357
0000000000005110         call       j___errno_location                          ; __errno_location
0000000000005115         mov        qword [rbp+var_3C8], rax
000000000000511c         mov        eax, dword [rax]
000000000000511e         mov        qword [rbp+var_3F8], rbx
0000000000005125         mov        dword [rbp+var_424], eax
000000000000512b         nop        dword [rax+rax]

                     loc_5130:
0000000000005130         mov        rax, qword [rbp+var_3C8]                    ; CODE XREF=vasnprintf+1591, vasnprintf+1677, vasnprintf+2598, vasnprintf+2652, vasnprintf+2755, vasnprintf+4332
0000000000005137         mov        rbx, r12
000000000000513a         mov        r10d, 0x7fffffff
0000000000005140         sub        rbx, r14
0000000000005143         mov        dword [rbp+var_3BC], 0xffffffff
000000000000514d         cmp        rbx, 0x7fffffff
0000000000005154         mov        dword [rax], 0x0
000000000000515a         mov        eax, dword [rbp+var_3D0]
0000000000005160         cmovbe     r10, rbx
0000000000005164         cmp        eax, 0x11
0000000000005167         ja         loc_5b46

000000000000516d         lea        rsi, qword [switch_table_79f0]              ; switch_table_79f0
0000000000005174         movsxd     rax, dword [rsi+rax*4]
0000000000005178         add        rax, rsi
000000000000517b         jmp        rax                                         ; switch statement using table at 0x79f0, with 18 cases, 0x5180,0x52b8,0x53e0,0x5468,0x54e8,0x5528,0x55b0,0x55e0,0x5b46
000000000000517d         align      128

                     loc_5180:
0000000000005180         mov        rax, qword [r13+0x50]                       ; case 17, CODE XREF=vasnprintf+1371
0000000000005184         lea        rdi, qword [r15+r14]
0000000000005188         shl        rax, 0x5
000000000000518c         add        rax, qword [rbp+var_3A8]
0000000000005193         mov        r9, qword [rax+0x10]
0000000000005197         mov        eax, dword [rbp+var_3E0]
000000000000519d         cmp        eax, 0x1
00000000000051a0         je         loc_5668

00000000000051a6         cmp        eax, 0x2
00000000000051a9         je         loc_5650

00000000000051af         sub        rsp, 0x8
00000000000051b3         push       qword [rbp+var_3F0]

                     loc_51b9:
00000000000051b9         mov        r8, qword [rbp+var_3D8]                     ; CODE XREF=vasnprintf+3262
00000000000051c0         mov        rsi, r10
00000000000051c3         mov        rcx, 0xffffffffffffffff
00000000000051ca         mov        edx, 0x1
00000000000051cf         xor        eax, eax
00000000000051d1         mov        qword [rbp+var_430], r10
00000000000051d8         call       j___snprintf_chk                            ; __snprintf_chk
00000000000051dd         pop        rsi
00000000000051de         pop        rdi
00000000000051df         mov        r10, qword [rbp+var_430]

                     loc_51e6:
00000000000051e6         mov        ecx, dword [rbp+var_3BC]                    ; CODE XREF=vasnprintf+2109, vasnprintf+2238, vasnprintf+2433, vasnprintf+3237
00000000000051ec         test       ecx, ecx
00000000000051ee         js         loc_532c

                     loc_51f4:
00000000000051f4         movsxd     rdx, ecx                                    ; CODE XREF=vasnprintf+1798
00000000000051f7         cmp        rdx, r10
00000000000051fa         jae        loc_520a

00000000000051fc         add        rdx, r15
00000000000051ff         cmp        byte [rdx+r14], 0x0
0000000000005204         jne        loc_5b46

                     loc_520a:
000000000000520a         cmp        ecx, eax                                    ; CODE XREF=vasnprintf+1498
000000000000520c         jge        loc_5216

                     loc_520e:
000000000000520e         mov        dword [rbp+var_3BC], eax                    ; CODE XREF=vasnprintf+1823
0000000000005214         mov        ecx, eax

                     loc_5216:
0000000000005216         lea        eax, dword [rcx+1]                          ; CODE XREF=vasnprintf+1516
0000000000005219         cmp        rax, r10
000000000000521c         jb         loc_5a50

0000000000005222         cmp        rbx, 0x7ffffffe
0000000000005229         ja         loc_5a70

000000000000522f         lea        rsi, qword [r12+r12]
0000000000005233         lea        edx, dword [rcx+2]
0000000000005236         test       r12, r12
0000000000005239         mov        rax, 0xffffffffffffffff
0000000000005240         cmovns     rax, rsi
0000000000005244         add        rdx, r14
0000000000005247         jb         loc_5d08

000000000000524d         cmp        rax, rdx
0000000000005250         cmovb      rax, rdx
0000000000005254         cmp        r12, rax
0000000000005257         jae        loc_5130

000000000000525d         test       r12, r12
0000000000005260         js         loc_4d91

0000000000005266         cmp        rsi, rax
0000000000005269         mov        r12, rsi
000000000000526c         jae        loc_527b

000000000000526e         cmp        rax, 0xffffffffffffffff
0000000000005272         je         loc_4d91

0000000000005278         mov        r12, rax

                     loc_527b:
000000000000527b         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+1612
0000000000005282         sete       bl
0000000000005285         test       r15, r15
0000000000005288         je         loc_5610

000000000000528e         test       bl, bl
0000000000005290         jne        loc_5610

0000000000005296         mov        rsi, r12                                    ; argument "__size" for method j_realloc
0000000000005299         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
000000000000529c         call       j_realloc                                   ; realloc
00000000000052a1         test       rax, rax
00000000000052a4         je         loc_4d91

00000000000052aa         mov        r15, rax
00000000000052ad         jmp        loc_5130
00000000000052b2         align      8

                     loc_52b8:
00000000000052b8         mov        rax, qword [r13+0x50]                       ; case 14, CODE XREF=vasnprintf+1371
00000000000052bc         lea        rdi, qword [r15+r14]
00000000000052c0         shl        rax, 0x5
00000000000052c4         add        rax, qword [rbp+var_3A8]
00000000000052cb         mov        r9d, dword [rax+0x10]
00000000000052cf         mov        eax, dword [rbp+var_3E0]
00000000000052d5         cmp        eax, 0x1
00000000000052d8         je         loc_5510

                     loc_52de:
00000000000052de         cmp        eax, 0x2                                    ; CODE XREF=vasnprintf+2281, vasnprintf+2481, vasnprintf+2529
00000000000052e1         je         loc_5558

                     loc_52e7:
00000000000052e7         sub        rsp, 0x8                                    ; CODE XREF=vasnprintf+2350
00000000000052eb         push       qword [rbp+var_3F0]

                     loc_52f1:
00000000000052f1         mov        r8, qword [rbp+var_3D8]                     ; CODE XREF=vasnprintf+2303
00000000000052f8         mov        rcx, 0xffffffffffffffff
00000000000052ff         mov        edx, 0x1
0000000000005304         mov        rsi, r10
0000000000005307         xor        eax, eax
0000000000005309         mov        qword [rbp+var_430], r10
0000000000005310         call       j___snprintf_chk                            ; __snprintf_chk
0000000000005315         pop        rdx
0000000000005316         pop        rcx
0000000000005317         mov        ecx, dword [rbp+var_3BC]
000000000000531d         mov        r10, qword [rbp+var_430]
0000000000005324         test       ecx, ecx
0000000000005326         jns        loc_51f4

                     loc_532c:
000000000000532c         mov        rdi, qword [rbp+var_3F8]                    ; CODE XREF=vasnprintf+1486
0000000000005333         cmp        byte [rdi+1], 0x0
0000000000005337         jne        loc_5678

000000000000533d         test       eax, eax
000000000000533f         jns        loc_520e

0000000000005345         mov        rax, qword [rbp+var_3C8]
000000000000534c         mov        ebx, dword [rax]
000000000000534e         test       ebx, ebx
0000000000005350         jne        loc_5370

0000000000005352         movzx      eax, byte [r13+0x48]
0000000000005357         mov        ebx, 0x16
000000000000535c         and        eax, 0xffffffef
000000000000535f         cmp        al, 0x63
0000000000005361         mov        eax, 0x54
0000000000005366         cmove      ebx, eax
0000000000005369         nop        dword [rax]

                     loc_5370:
0000000000005370         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+1840
0000000000005377         je         loc_5382

0000000000005379         test       r15, r15
000000000000537c         jne        loc_5b2c

                     loc_5382:
0000000000005382         mov        rax, qword [rbp+var_420]                    ; CODE XREF=vasnprintf+1879, vasnprintf+3860
0000000000005389         test       rax, rax
000000000000538c         je         loc_5396

000000000000538e         mov        rdi, rax                                    ; argument "__ptr" for method j_free
0000000000005391         call       j_free                                      ; free

                     loc_5396:
0000000000005396         mov        rax, qword [rbp+var_408]                    ; CODE XREF=vasnprintf+1900
000000000000539d         mov        rdi, qword [rbp+var_2B8]
00000000000053a4         add        rax, 0x20
00000000000053a8         cmp        rdi, rax
00000000000053ab         je         loc_53b2

00000000000053ad         call       j_free                                      ; free

                     loc_53b2:
00000000000053b2         mov        rax, qword [rbp+var_410]                    ; CODE XREF=vasnprintf+1931
00000000000053b9         mov        rdi, qword [rbp+var_3A8]
00000000000053c0         add        rax, 0x10
00000000000053c4         cmp        rdi, rax
00000000000053c7         je         loc_53ce

00000000000053c9         call       j_free                                      ; free

                     loc_53ce:
00000000000053ce         mov        rax, qword [rbp+var_3C8]                    ; CODE XREF=vasnprintf+1959
00000000000053d5         xor        r15d, r15d
00000000000053d8         mov        dword [rax], ebx
00000000000053da         jmp        loc_4dff
00000000000053df         align      32

                     loc_53e0:
00000000000053e0         mov        rax, qword [r13+0x50]                       ; case 12, CODE XREF=vasnprintf+1371
00000000000053e4         lea        rdi, qword [r15+r14]
00000000000053e8         shl        rax, 0x5
00000000000053ec         add        rax, qword [rbp+var_3A8]
00000000000053f3         fld        tword [rax+0x10]
00000000000053f6         mov        eax, dword [rbp+var_3E0]
00000000000053fc         cmp        eax, 0x1
00000000000053ff         je         loc_5a30

0000000000005405         cmp        eax, 0x2
0000000000005408         jne        loc_58d0

000000000000540e         mov        eax, dword [rbp+var_3B4]
0000000000005414         sub        rsp, 0x8
0000000000005418         push       qword [rbp+var_3F0]
000000000000541e         mov        r9d, dword [rbp+var_3B8]
0000000000005425         mov        r8, qword [rbp+var_3D8]
000000000000542c         mov        rsi, r10
000000000000542f         sub        rsp, 0x18
0000000000005433         mov        rcx, 0xffffffffffffffff
000000000000543a         mov        edx, 0x1
000000000000543f         fstp       tword [rsp+0x458+var_450]
0000000000005443         push       rax
0000000000005444         xor        eax, eax
0000000000005446         mov        qword [rbp+var_430], r10
000000000000544d         call       j___snprintf_chk                            ; __snprintf_chk
0000000000005452         add        rsp, 0x30
0000000000005456         mov        r10, qword [rbp+var_430]
000000000000545d         jmp        loc_51e6
0000000000005462         align      8

                     loc_5468:
0000000000005468         mov        rax, qword [r13+0x50]                       ; case 11, CODE XREF=vasnprintf+1371
000000000000546c         lea        rdi, qword [r15+r14]
0000000000005470         shl        rax, 0x5
0000000000005474         add        rax, qword [rbp+var_3A8]
000000000000547b         movsd      xmm0, qword [rax+0x10]
0000000000005480         mov        eax, dword [rbp+var_3E0]
0000000000005486         cmp        eax, 0x1
0000000000005489         je         loc_5a20

000000000000548f         cmp        eax, 0x2
0000000000005492         jne        loc_5890

0000000000005498         mov        eax, dword [rbp+var_3B4]
000000000000549e         push       qword [rbp+var_3F0]
00000000000054a4         push       rax

                     loc_54a5:
00000000000054a5         mov        r9d, dword [rbp+var_3B8]                    ; CODE XREF=vasnprintf+3594
00000000000054ac         mov        r8, qword [rbp+var_3D8]
00000000000054b3         mov        rsi, r10
00000000000054b6         mov        rcx, 0xffffffffffffffff
00000000000054bd         mov        edx, 0x1
00000000000054c2         mov        eax, 0x1
00000000000054c7         mov        qword [rbp+var_430], r10
00000000000054ce         call       j___snprintf_chk                            ; __snprintf_chk
00000000000054d3         pop        r8
00000000000054d5         mov        r10, qword [rbp+var_430]
00000000000054dc         pop        r9
00000000000054de         jmp        loc_51e6
00000000000054e3         align      8

                     loc_54e8:
00000000000054e8         mov        rax, qword [r13+0x50]                       ; case 4, CODE XREF=vasnprintf+1371
00000000000054ec         lea        rdi, qword [r15+r14]
00000000000054f0         shl        rax, 0x5
00000000000054f4         add        rax, qword [rbp+var_3A8]
00000000000054fb         movzx      r9d, word [rax+0x10]
0000000000005500         mov        eax, dword [rbp+var_3E0]
0000000000005506         cmp        eax, 0x1
0000000000005509         jne        loc_52de

000000000000550f         nop

                     loc_5510:
0000000000005510         push       qword [rbp+var_3F0]                         ; CODE XREF=vasnprintf+1720, vasnprintf+2345, vasnprintf+2487, vasnprintf+2535
0000000000005516         push       r9

                     loc_5518:
0000000000005518         mov        r9d, dword [rbp+var_3B8]                    ; CODE XREF=vasnprintf+2640
000000000000551f         jmp        loc_52f1
0000000000005524         align      8

                     loc_5528:
0000000000005528         mov        rax, qword [r13+0x50]                       ; case 3, CODE XREF=vasnprintf+1371
000000000000552c         lea        rdi, qword [r15+r14]
0000000000005530         shl        rax, 0x5
0000000000005534         add        rax, qword [rbp+var_3A8]
000000000000553b         movsx      r9d, word [rax+0x10]
0000000000005540         mov        eax, dword [rbp+var_3E0]
0000000000005546         cmp        eax, 0x1
0000000000005549         je         loc_5510

000000000000554b         cmp        eax, 0x2
000000000000554e         jne        loc_52e7

0000000000005554         nop        dword [rax]

                     loc_5558:
0000000000005558         sub        rsp, 0x8                                    ; CODE XREF=vasnprintf+1729
000000000000555c         push       qword [rbp+var_3F0]
0000000000005562         push       r9

                     loc_5564:
0000000000005564         mov        eax, dword [rbp+var_3B4]                    ; CODE XREF=vasnprintf+2620
000000000000556a         push       rax

                     loc_556b:
000000000000556b         mov        r9d, dword [rbp+var_3B8]                    ; CODE XREF=vasnprintf+3617
0000000000005572         mov        r8, qword [rbp+var_3D8]
0000000000005579         mov        rsi, r10
000000000000557c         mov        rcx, 0xffffffffffffffff
0000000000005583         mov        edx, 0x1
0000000000005588         xor        eax, eax
000000000000558a         mov        qword [rbp+var_430], r10
0000000000005591         call       j___snprintf_chk                            ; __snprintf_chk
0000000000005596         add        rsp, 0x20
000000000000559a         mov        r10, qword [rbp+var_430]
00000000000055a1         jmp        loc_51e6
00000000000055a6         align      16

                     loc_55b0:
00000000000055b0         mov        rax, qword [r13+0x50]                       ; case 2, CODE XREF=vasnprintf+1371
00000000000055b4         lea        rdi, qword [r15+r14]
00000000000055b8         shl        rax, 0x5
00000000000055bc         add        rax, qword [rbp+var_3A8]
00000000000055c3         movzx      r9d, byte [rax+0x10]
00000000000055c8         mov        eax, dword [rbp+var_3E0]
00000000000055ce         cmp        eax, 0x1
00000000000055d1         jne        loc_52de

00000000000055d7         jmp        loc_5510
00000000000055dc         align      32

                     loc_55e0:
00000000000055e0         mov        rax, qword [r13+0x50]                       ; case 1, CODE XREF=vasnprintf+1371
00000000000055e4         lea        rdi, qword [r15+r14]
00000000000055e8         shl        rax, 0x5
00000000000055ec         add        rax, qword [rbp+var_3A8]
00000000000055f3         movsx      r9d, byte [rax+0x10]
00000000000055f8         mov        eax, dword [rbp+var_3E0]
00000000000055fe         cmp        eax, 0x1
0000000000005601         jne        loc_52de

0000000000005607         jmp        loc_5510
000000000000560c         align      16

                     loc_5610:
0000000000005610         mov        rdi, r12                                    ; argument "__size" for method j_malloc, CODE XREF=vasnprintf+1640, vasnprintf+1648
0000000000005613         call       j_malloc                                    ; malloc
0000000000005618         test       rax, rax
000000000000561b         mov        rcx, rax
000000000000561e         je         loc_4d91

0000000000005624         test       r14, r14
0000000000005627         je         loc_56e0

000000000000562d         test       bl, bl
000000000000562f         je         loc_56e0

0000000000005635         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
0000000000005638         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
000000000000563b         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
000000000000563e         call       j_memcpy                                    ; memcpy
0000000000005643         mov        r15, rax
0000000000005646         jmp        loc_5130
000000000000564b         align      16

                     loc_5650:
0000000000005650         sub        rsp, 0x8                                    ; CODE XREF=vasnprintf+1417
0000000000005654         push       qword [rbp+var_3F0]
000000000000565a         push       r9
000000000000565c         jmp        loc_5564
0000000000005661         align      8

                     loc_5668:
0000000000005668         push       qword [rbp+var_3F0]                         ; CODE XREF=vasnprintf+1408
000000000000566e         push       r9
0000000000005670         jmp        loc_5518
0000000000005675         align      8

                     loc_5678:
0000000000005678         mov        byte [rdi+1], 0x0                           ; CODE XREF=vasnprintf+1815
000000000000567c         jmp        loc_5130
0000000000005681         align      8

                     loc_5688:
0000000000005688         cmp        rax, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+723
000000000000568c         jne        loc_5b46

0000000000005692         mov        rax, r14
0000000000005695         add        rax, 0x1
0000000000005699         mov        rbx, rax
000000000000569c         jae        loc_5728

00000000000056a2         cmp        r12, 0xffffffffffffffff
00000000000056a6         jne        loc_4d85

00000000000056ac         mov        rbx, r12

                     loc_56af:
00000000000056af         mov        byte [r15+r14], 0x25                        ; CODE XREF=vasnprintf+2827, vasnprintf+2904, vasnprintf+3555, vasnprintf+3847

                     loc_56b4:
00000000000056b4         mov        r8, qword [r13+8]                           ; CODE XREF=vasnprintf+3142, vasnprintf+3446, vasnprintf+3462, vasnprintf+3479, vasnprintf+3653
00000000000056b8         add        r13, 0x58
00000000000056bc         mov        rcx, qword [r13]
00000000000056c0         add        qword [rbp+var_400], 0x1
00000000000056c8         cmp        rcx, r8
00000000000056cb         jne        loc_4d69

                     loc_56d1:
00000000000056d1         mov        r14, rbx                                    ; CODE XREF=vasnprintf+323
00000000000056d4         jmp        loc_4ed3
00000000000056d9         align      32

                     loc_56e0:
00000000000056e0         mov        r15, rcx                                    ; CODE XREF=vasnprintf+2567, vasnprintf+2575
00000000000056e3         jmp        loc_5130

                     loc_56e8:
00000000000056e8         call       j___errno_location                          ; __errno_location, CODE XREF=vasnprintf+154, vasnprintf+174, vasnprintf+204, vasnprintf+225
00000000000056ed         mov        qword [rbp+var_3C8], rax
00000000000056f4         jmp        loc_4db7
00000000000056f9         align      256

                     loc_5700:
0000000000005700         mov        edx, edi                                    ; CODE XREF=vasnprintf+764
0000000000005702         sub        edx, 0x12
0000000000005705         cmp        edx, 0x4
0000000000005708         ja         loc_5b46

000000000000570e         lea        rdi, qword [switch_table_7a38]              ; switch_table_7a38
0000000000005715         mov        rax, qword [rax+0x10]
0000000000005719         movsxd     rdx, dword [rdi+rdx*4]
000000000000571d         add        rdx, rdi
0000000000005720         jmp        rdx                                         ; switch statement using table at 0x7a38, with 5 cases, 0x5860,0x5990,0x59a0,0x59b0
0000000000005722         align      8

                     loc_5728:
0000000000005728         cmp        r12, rax                                    ; CODE XREF=vasnprintf+2684
000000000000572b         jae        loc_56af

000000000000572d         test       r12, r12
0000000000005730         jne        loc_5b00

0000000000005736         cmp        rax, 0xc
000000000000573a         ja         loc_5b12

0000000000005740         mov        r12d, 0xc

                     loc_5746:
0000000000005746         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+3820, vasnprintf+3839
000000000000574d         sete       dl
0000000000005750         test       r15, r15
0000000000005753         je         loc_59c0

0000000000005759         test       dl, dl
000000000000575b         jne        loc_59c0

0000000000005761         mov        rsi, r12                                    ; argument "__size" for method j_realloc
0000000000005764         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
0000000000005767         call       j_realloc                                   ; realloc
000000000000576c         test       rax, rax
000000000000576f         je         loc_586b

0000000000005775         mov        r15, rax
0000000000005778         jmp        loc_56af
000000000000577d         align      128

                     loc_5780:
0000000000005780         mov        dword [rbp+var_3E0], 0x0                    ; CODE XREF=vasnprintf+1070
000000000000578a         jmp        loc_5077
000000000000578f         align      16

                     loc_5790:
0000000000005790         js         loc_4d85                                    ; CODE XREF=vasnprintf+576

0000000000005796         add        r12, r12
0000000000005799         cmp        r12, rax
000000000000579c         jae        loc_4e76

                     loc_57a2:
00000000000057a2         cmp        rax, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+586
00000000000057a6         je         loc_4d85

00000000000057ac         cmp        r15, qword [rbp+var_3E8]
00000000000057b3         mov        r12, rax
00000000000057b6         sete       dl
00000000000057b9         test       r15, r15
00000000000057bc         jne        loc_4e89

00000000000057c2         nop        word [rax+rax]

                     loc_57c8:
00000000000057c8         mov        rdi, r12                                    ; argument "__size" for method j_malloc, CODE XREF=vasnprintf+611, vasnprintf+619
00000000000057cb         mov        qword [rbp+var_3E0], r8
00000000000057d2         mov        byte [rbp+var_3D0], dl
00000000000057d8         mov        qword [rbp+var_3C8], rcx
00000000000057df         call       j_malloc                                    ; malloc
00000000000057e4         test       rax, rax
00000000000057e7         mov        r9, rax
00000000000057ea         mov        rcx, qword [rbp+var_3C8]
00000000000057f1         movzx      edx, byte [rbp+var_3D0]
00000000000057f8         mov        r8, qword [rbp+var_3E0]
00000000000057ff         je         loc_4d85

0000000000005805         test       rbx, rbx
0000000000005808         je         loc_5a10

000000000000580e         test       dl, dl
0000000000005810         je         loc_5a10

0000000000005816         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
0000000000005819         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
000000000000581c         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
000000000000581f         mov        qword [rbp+var_3D0], r8
0000000000005826         mov        qword [rbp+var_3C8], rcx
000000000000582d         call       j_memcpy                                    ; memcpy
0000000000005832         mov        rcx, qword [rbp+var_3C8]
0000000000005839         mov        r15, rax
000000000000583c         mov        r8, qword [rbp+var_3D0]
0000000000005843         jmp        loc_4ec4
0000000000005848         align      16

                     loc_5850:
0000000000005850         mov        r14, r12                                    ; CODE XREF=vasnprintf+351
0000000000005853         jmp        loc_4ec4
0000000000005858         align      32

                     loc_5860:
0000000000005860         mov        qword [rax], r14                            ; case 4, CODE XREF=vasnprintf+2816
0000000000005863         mov        rbx, r14
0000000000005866         jmp        loc_56b4

                     loc_586b:
000000000000586b         call       j___errno_location                          ; __errno_location, CODE XREF=vasnprintf+667, vasnprintf+2895, vasnprintf+4051
0000000000005870         mov        qword [rbp+var_3C8], rax
0000000000005877         nop        word [rax+rax]

                     loc_5880:
0000000000005880         mov        rdi, r15                                    ; argument "__ptr" for method j_free, CODE XREF=vasnprintf+381
0000000000005883         call       j_free                                      ; free
0000000000005888         jmp        loc_4da3
000000000000588d         align      16

                     loc_5890:
0000000000005890         mov        r9, qword [rbp+var_3F0]                     ; CODE XREF=vasnprintf+2162
0000000000005897         mov        r8, qword [rbp+var_3D8]
000000000000589e         mov        rsi, r10
00000000000058a1         mov        rcx, 0xffffffffffffffff
00000000000058a8         mov        edx, 0x1
00000000000058ad         mov        eax, 0x1
00000000000058b2         mov        qword [rbp+var_430], r10
00000000000058b9         call       j___snprintf_chk                            ; __snprintf_chk
00000000000058be         mov        r10, qword [rbp+var_430]
00000000000058c5         jmp        loc_51e6
00000000000058ca         align      16

                     loc_58d0:
00000000000058d0         sub        rsp, 0x10                                   ; CODE XREF=vasnprintf+2024
00000000000058d4         mov        r9, qword [rbp+var_3F0]
00000000000058db         fstp       tword [rsp+0x440+var_440]
00000000000058de         jmp        loc_51b9
00000000000058e3         align      8

                     loc_58e8:
00000000000058e8         js         loc_4d85                                    ; CODE XREF=vasnprintf+1187

00000000000058ee         add        r12, r12
00000000000058f1         cmp        r12, rax
00000000000058f4         jae        loc_50d9

00000000000058fa         nop        word [rax+rax]

                     loc_5900:
0000000000005900         test       rdx, rdx                                    ; CODE XREF=vasnprintf+1197, vasnprintf+4372
0000000000005903         jne        loc_4d85

0000000000005909         cmp        rax, 0xffffffffffffffff
000000000000590d         je         loc_4d85

0000000000005913         cmp        r15, qword [rbp+var_3E8]
000000000000591a         mov        r12, rax
000000000000591d         sete       dl
0000000000005920         test       r15, r15
0000000000005923         jne        loc_50ec

0000000000005929         nop        dword [rax]

                     loc_5930:
0000000000005930         mov        rdi, r12                                    ; argument "__size" for method j_malloc, CODE XREF=vasnprintf+1222, vasnprintf+1230
0000000000005933         mov        byte [rbp+var_3C8], dl
0000000000005939         call       j_malloc                                    ; malloc
000000000000593e         test       rax, rax
0000000000005941         mov        rcx, rax
0000000000005944         movzx      edx, byte [rbp+var_3C8]
000000000000594b         je         loc_4d85

0000000000005951         test       r14, r14
0000000000005954         je         loc_5af0

000000000000595a         test       dl, dl
000000000000595c         je         loc_5af0

0000000000005962         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
0000000000005965         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
0000000000005968         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
000000000000596b         call       j_memcpy                                    ; memcpy
0000000000005970         mov        r15, rax
0000000000005973         jmp        loc_510b
0000000000005978         align      128

                     loc_5980:
0000000000005980         mov        byte [rbx], 0x4c                            ; CODE XREF=vasnprintf+1026
0000000000005983         add        rbx, 0x1
0000000000005987         jmp        loc_503b
000000000000598c         align      16

                     loc_5990:
0000000000005990         mov        byte [rax], r14b                            ; case 0, CODE XREF=vasnprintf+2816
0000000000005993         mov        rbx, r14
0000000000005996         jmp        loc_56b4
000000000000599b         align      32

                     loc_59a0:
00000000000059a0         mov        dword [rax], r14d                           ; case 2, CODE XREF=vasnprintf+2816
00000000000059a3         mov        rbx, r14
00000000000059a6         jmp        loc_56b4
00000000000059ab         align      16

                     loc_59b0:
00000000000059b0         mov        word [rax], r14w                            ; case 1, CODE XREF=vasnprintf+2816
00000000000059b4         mov        rbx, r14
00000000000059b7         jmp        loc_56b4
00000000000059bc         align      64

                     loc_59c0:
00000000000059c0         mov        rdi, r12                                    ; argument "__size" for method j_malloc, CODE XREF=vasnprintf+2867, vasnprintf+2875
00000000000059c3         mov        byte [rbp+var_3C8], dl
00000000000059c9         call       j_malloc                                    ; malloc
00000000000059ce         test       rax, rax
00000000000059d1         mov        rcx, rax
00000000000059d4         movzx      edx, byte [rbp+var_3C8]
00000000000059db         je         loc_4d85

00000000000059e1         test       r14, r14
00000000000059e4         je         loc_5b24

00000000000059ea         test       dl, dl
00000000000059ec         je         loc_5b24

00000000000059f2         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
00000000000059f5         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
00000000000059f8         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
00000000000059fb         call       j_memcpy                                    ; memcpy
0000000000005a00         mov        r15, rax
0000000000005a03         jmp        loc_56af
0000000000005a08         align      16

                     loc_5a10:
0000000000005a10         mov        r15, r9                                     ; CODE XREF=vasnprintf+3048, vasnprintf+3056
0000000000005a13         jmp        loc_4ec4
0000000000005a18         align      32

                     loc_5a20:
0000000000005a20         sub        rsp, 0x8                                    ; CODE XREF=vasnprintf+2153
0000000000005a24         push       qword [rbp+var_3F0]
0000000000005a2a         jmp        loc_54a5
0000000000005a2f         align      16

                     loc_5a30:
0000000000005a30         sub        rsp, 0x8                                    ; CODE XREF=vasnprintf+2015
0000000000005a34         push       qword [rbp+var_3F0]
0000000000005a3a         sub        rsp, 0x10
0000000000005a3e         fstp       tword [rsp+0x450+var_450]
0000000000005a41         jmp        loc_556b
0000000000005a46         align      16

                     loc_5a50:
0000000000005a50         mov        rax, qword [rbp+var_3C8]                    ; CODE XREF=vasnprintf+1532
0000000000005a57         mov        edi, dword [rbp+var_424]
0000000000005a5d         movsxd     rbx, ecx
0000000000005a60         add        rbx, r14
0000000000005a63         mov        dword [rax], edi
0000000000005a65         jmp        loc_56b4
0000000000005a6a         align      16

                     loc_5a70:
0000000000005a70         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+1545
0000000000005a77         je         loc_5a82

0000000000005a79         test       r15, r15
0000000000005a7c         jne        loc_5b39

                     loc_5a82:
0000000000005a82         mov        rax, qword [rbp+var_420]                    ; CODE XREF=vasnprintf+3671, vasnprintf+3873
0000000000005a89         test       rax, rax
0000000000005a8c         je         loc_5a96

0000000000005a8e         mov        rdi, rax                                    ; argument "__ptr" for method j_free
0000000000005a91         call       j_free                                      ; free

                     loc_5a96:
0000000000005a96         mov        rax, qword [rbp+var_408]                    ; CODE XREF=vasnprintf+3692
0000000000005a9d         mov        rdi, qword [rbp+var_2B8]
0000000000005aa4         add        rax, 0x20
0000000000005aa8         cmp        rdi, rax
0000000000005aab         je         loc_5ab2

0000000000005aad         call       j_free                                      ; free

                     loc_5ab2:
0000000000005ab2         mov        rax, qword [rbp+var_410]                    ; CODE XREF=vasnprintf+3723
0000000000005ab9         mov        rdi, qword [rbp+var_3A8]
0000000000005ac0         add        rax, 0x10
0000000000005ac4         cmp        rdi, rax
0000000000005ac7         je         loc_5ace

0000000000005ac9         call       j_free                                      ; free

                     loc_5ace:
0000000000005ace         mov        rax, qword [rbp+var_3C8]                    ; CODE XREF=vasnprintf+3751
0000000000005ad5         xor        r15d, r15d
0000000000005ad8         mov        dword [rax], 0x4b
0000000000005ade         jmp        loc_4dff
0000000000005ae3         align      8

                     loc_5ae8:
0000000000005ae8         xor        r15d, r15d                                  ; CODE XREF=vasnprintf+96
0000000000005aeb         jmp        loc_4dff

                     loc_5af0:
0000000000005af0         mov        r15, rcx                                    ; CODE XREF=vasnprintf+3380, vasnprintf+3388
0000000000005af3         jmp        loc_510b
0000000000005af8         align      256

                     loc_5b00:
0000000000005b00         js         loc_4d85                                    ; CODE XREF=vasnprintf+2832

0000000000005b06         add        r12, r12
0000000000005b09         cmp        r12, rax
0000000000005b0c         jae        loc_5746

                     loc_5b12:
0000000000005b12         cmp        rax, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+2842
0000000000005b16         je         loc_4d85

0000000000005b1c         mov        r12, rax
0000000000005b1f         jmp        loc_5746

                     loc_5b24:
0000000000005b24         mov        r15, rcx                                    ; CODE XREF=vasnprintf+3524, vasnprintf+3532
0000000000005b27         jmp        loc_56af

                     loc_5b2c:
0000000000005b2c         mov        rdi, r15                                    ; argument "__ptr" for method j_free, CODE XREF=vasnprintf+1884
0000000000005b2f         call       j_free                                      ; free
0000000000005b34         jmp        loc_5382

                     loc_5b39:
0000000000005b39         mov        rdi, r15                                    ; argument "__ptr" for method j_free, CODE XREF=vasnprintf+3676
0000000000005b3c         call       j_free                                      ; free
0000000000005b41         jmp        loc_5a82

                     loc_5b46:
0000000000005b46         call       j_abort                                     ; abort, case 0, CODE XREF=vasnprintf+733, vasnprintf+1086, vasnprintf+1132, vasnprintf+1351, vasnprintf+1371, vasnprintf+1508, vasnprintf+2668, vasnprintf+2792
                        ; endp
0000000000005b4b         align      16

                     loc_5b50:
0000000000005b50         mov        rax, qword [rbp+var_408]                    ; CODE XREF=vasnprintf+115
0000000000005b57         mov        rdi, qword [rbp+var_2B8]
0000000000005b5e         add        rax, 0x20
0000000000005b62         cmp        rdi, rax
0000000000005b65         je         loc_5b6c

0000000000005b67         call       j_free                                      ; free

                     loc_5b6c:
0000000000005b6c         mov        rax, qword [rbp+var_410]                    ; CODE XREF=vasnprintf+3909
0000000000005b73         mov        rdi, qword [rbp+var_3A8]
0000000000005b7a         add        rax, 0x10
0000000000005b7e         cmp        rdi, rax
0000000000005b81         je         loc_5b88

0000000000005b83         call       j_free                                      ; free

                     loc_5b88:
0000000000005b88         call       j___errno_location                          ; __errno_location, CODE XREF=vasnprintf+3937
0000000000005b8d         xor        r15d, r15d
0000000000005b90         mov        dword [rax], 0x16
0000000000005b96         jmp        loc_4dff

                     loc_5b9b:
0000000000005b9b         mov        rbx, r14                                    ; CODE XREF=vasnprintf+705
0000000000005b9e         xor        eax, eax
0000000000005ba0         add        rbx, 0x1
0000000000005ba4         jb         loc_5cb0

0000000000005baa         cmp        r12, rbx
0000000000005bad         jae        loc_5bfc

0000000000005baf         test       r12, r12
0000000000005bb2         jne        loc_5ce9

0000000000005bb8         cmp        rbx, 0xc
0000000000005bbc         ja         loc_5cce

0000000000005bc2         mov        r12d, 0xc

                     loc_5bc8:
0000000000005bc8         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+4292, vasnprintf+4309
0000000000005bcf         sete       r13b
0000000000005bd3         test       r15, r15
0000000000005bd6         je         loc_5c7c

0000000000005bdc         test       r13b, r13b
0000000000005bdf         jne        loc_5c7c

0000000000005be5         mov        rsi, r12                                    ; argument "__size" for method j_realloc
0000000000005be8         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
0000000000005beb         call       j_realloc                                   ; realloc
0000000000005bf0         test       rax, rax
0000000000005bf3         je         loc_586b

0000000000005bf9         mov        r15, rax

                     loc_5bfc:
0000000000005bfc         cmp        r15, qword [rbp+var_3E8]                    ; CODE XREF=vasnprintf+3981, vasnprintf+4235, vasnprintf+4249, vasnprintf+4323
0000000000005c03         mov        byte [r15+r14], 0x0
0000000000005c08         je         loc_5c21

0000000000005c0a         cmp        r12, rbx
0000000000005c0d         jbe        loc_5c21

0000000000005c0f         mov        rdi, r15                                    ; argument "__ptr" for method j_realloc
0000000000005c12         mov        rsi, rbx                                    ; argument "__size" for method j_realloc
0000000000005c15         call       j_realloc                                   ; realloc
0000000000005c1a         test       rax, rax
0000000000005c1d         cmovne     r15, rax

                     loc_5c21:
0000000000005c21         mov        rax, qword [rbp+var_420]                    ; CODE XREF=vasnprintf+4072, vasnprintf+4077
0000000000005c28         test       rax, rax
0000000000005c2b         je         loc_5c35

0000000000005c2d         mov        rdi, rax                                    ; argument "__ptr" for method j_free
0000000000005c30         call       j_free                                      ; free

                     loc_5c35:
0000000000005c35         mov        rax, qword [rbp+var_408]                    ; CODE XREF=vasnprintf+4107
0000000000005c3c         mov        rdi, qword [rbp+var_2B8]
0000000000005c43         add        rax, 0x20
0000000000005c47         cmp        rdi, rax
0000000000005c4a         je         loc_5c51

0000000000005c4c         call       j_free                                      ; free

                     loc_5c51:
0000000000005c51         mov        rax, qword [rbp+var_410]                    ; CODE XREF=vasnprintf+4138
0000000000005c58         mov        rdi, qword [rbp+var_3A8]
0000000000005c5f         add        rax, 0x10
0000000000005c63         cmp        rdi, rax
0000000000005c66         je         loc_5c6d

0000000000005c68         call       j_free                                      ; free

                     loc_5c6d:
0000000000005c6d         mov        rax, qword [rbp+var_418]                    ; CODE XREF=vasnprintf+4166
0000000000005c74         mov        qword [rax], r14
0000000000005c77         jmp        loc_4dff

                     loc_5c7c:
0000000000005c7c         mov        rdi, r12                                    ; argument "__size" for method j_malloc, CODE XREF=vasnprintf+4022, vasnprintf+4031
0000000000005c7f         call       j_malloc                                    ; malloc
0000000000005c84         test       rax, rax
0000000000005c87         mov        rcx, rax
0000000000005c8a         je         loc_4d85

0000000000005c90         test       r14, r14
0000000000005c93         je         loc_5d00

0000000000005c95         test       r13b, r13b
0000000000005c98         je         loc_5d00

0000000000005c9a         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
0000000000005c9d         mov        rdx, r14                                    ; argument "__n" for method j_memcpy
0000000000005ca0         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000005ca3         call       j_memcpy                                    ; memcpy
0000000000005ca8         mov        r15, rax
0000000000005cab         jmp        loc_5bfc

                     loc_5cb0:
0000000000005cb0         cmp        r12, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+3972
0000000000005cb4         mov        eax, 0x1
0000000000005cb9         je         loc_5bfc

0000000000005cbf         test       r12, r12
0000000000005cc2         je         loc_4d85

0000000000005cc8         js         loc_4d85

                     loc_5cce:
0000000000005cce         test       rax, rax                                    ; CODE XREF=vasnprintf+3996, vasnprintf+4315
0000000000005cd1         jne        loc_4d85

0000000000005cd7         cmp        rbx, 0xffffffffffffffff
0000000000005cdb         je         loc_4d85

0000000000005ce1         mov        r12, rbx
0000000000005ce4         jmp        loc_5bc8

                     loc_5ce9:
0000000000005ce9         js         loc_4d85                                    ; CODE XREF=vasnprintf+3986

0000000000005cef         add        r12, r12
0000000000005cf2         cmp        r12, rbx
0000000000005cf5         jae        loc_5bc8

0000000000005cfb         jmp        loc_5cce
0000000000005cfd         align      256

                     loc_5d00:
0000000000005d00         mov        r15, rcx                                    ; CODE XREF=vasnprintf+4211, vasnprintf+4216
0000000000005d03         jmp        loc_5bfc

                     loc_5d08:
0000000000005d08         cmp        r12, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+1575
0000000000005d0c         je         loc_5130

0000000000005d12         jmp        loc_4d91

                     loc_5d17:
0000000000005d17         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=vasnprintf+495
                        ; endp

                     loc_5d1c:
0000000000005d1c         cmp        r12, 0xffffffffffffffff                     ; CODE XREF=vasnprintf+1173
0000000000005d20         mov        edx, 0x1
0000000000005d25         je         loc_510b

0000000000005d2b         test       r12, r12
0000000000005d2e         je         loc_4d85

0000000000005d34         jns        loc_5900

0000000000005d3a         jmp        loc_4d85
0000000000005d3f         align      64                                          ; End of unwind block (FDE at 0x8a14)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     printf_fetchargs:
0000000000005d40         cmp        qword [rsi], 0x0                            ; Begin of unwind block (FDE at 0x8a44), CODE XREF=vasnprintf+108
0000000000005d44         mov        rax, qword [rsi+8]
0000000000005d48         je         loc_5dad

0000000000005d4a         lea        r8, qword [aNull+20]                        ; 0x7a60
0000000000005d51         lea        r10, qword [wide_null_string.2696]          ; wide_null_string.2696
0000000000005d58         lea        r9, qword [aNull]                           ; "(NULL)"
0000000000005d5f         xor        ecx, ecx
0000000000005d61         nop        dword [rax]
0000000000005d68         cmp        dword [rax], 0x16
0000000000005d6b         ja         loc_5db0

0000000000005d6d         mov        edx, dword [rax]
0000000000005d6f         movsxd     rdx, dword [r8+rdx*4]
0000000000005d73         add        rdx, r8
0000000000005d76         jmp        rdx
                        ; endp
0000000000005d78         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5d80:
0000000000005d80         mov        rdx, qword [rdi+8]
0000000000005d84         add        rdx, 0xf
0000000000005d88         and        rdx, 0xfffffffffffffff0
0000000000005d8c         lea        r11, qword [rdx+0x10]
0000000000005d90         mov        qword [rdi+8], r11
0000000000005d94         fld        tword [rdx]
0000000000005d96         fstp       tword [rax+0x10]
0000000000005d99         nop        dword [rax]
0000000000005da0         add        rcx, 0x1                                    ; CODE XREF=sub_5db6+137, sub_5db6+183
0000000000005da4         add        rax, 0x20
0000000000005da8         cmp        qword [rsi], rcx
0000000000005dab         ja         printf_fetchargs+40
                        ; endp

                     loc_5dad:
0000000000005dad         xor        eax, eax                                    ; CODE XREF=printf_fetchargs+8
0000000000005daf         ret
                        ; endp

                     loc_5db0:
0000000000005db0         mov        eax, 0xffffffff                             ; CODE XREF=printf_fetchargs+43
0000000000005db5         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5db6:
0000000000005db6         mov        r11d, dword [rdi]
0000000000005db9         cmp        r11d, 0x2f
0000000000005dbd         ja         loc_5efa

0000000000005dc3         mov        edx, r11d
0000000000005dc6         add        rdx, qword [rdi+0x10]
0000000000005dca         add        r11d, 0x8
0000000000005dce         mov        dword [rdi], r11d

                     loc_5dd1:
0000000000005dd1         mov        rdx, qword [rdx]                            ; CODE XREF=sub_5ea0+102
0000000000005dd4         mov        qword [rax+0x10], rdx
0000000000005dd8         jmp        sub_5d80+32
                        ; endp
0000000000005dda         mov        r11d, dword [rdi]
0000000000005ddd         cmp        r11d, 0x2f
0000000000005de1         ja         sub_5f1c                                    ; sub_5f1c
0000000000005de7         mov        edx, r11d
0000000000005dea         add        rdx, qword [rdi+0x10]
0000000000005dee         add        r11d, 0x8
0000000000005df2         mov        dword [rdi], r11d

                     loc_5df5:
0000000000005df5         mov        edx, dword [rdx]                            ; CODE XREF=sub_5f1c+12
0000000000005df7         mov        dword [rax+0x10], edx
0000000000005dfa         jmp        sub_5d80+32
                        ; endp
0000000000005dfc         mov        r11d, dword [rdi]
0000000000005dff         cmp        r11d, 0x2f
0000000000005e03         ja         sub_5f0b                                    ; sub_5f0b
0000000000005e09         mov        edx, r11d
0000000000005e0c         add        rdx, qword [rdi+0x10]
0000000000005e10         add        r11d, 0x8
0000000000005e14         mov        dword [rdi], r11d

                     loc_5e17:
0000000000005e17         mov        edx, dword [rdx]                            ; CODE XREF=sub_5f0b+12
0000000000005e19         mov        byte [rax+0x10], dl
0000000000005e1c         jmp        sub_5d80+32
                        ; endp
0000000000005e1e         mov        r11d, dword [rdi]
0000000000005e21         cmp        r11d, 0x2f
0000000000005e25         ja         sub_5ea0+42
0000000000005e2b         mov        edx, r11d
0000000000005e2e         add        rdx, qword [rdi+0x10]
0000000000005e32         add        r11d, 0x8
0000000000005e36         mov        dword [rdi], r11d
0000000000005e39         mov        edx, dword [rdx]                            ; CODE XREF=sub_5ea0+54
0000000000005e3b         mov        word [rax+0x10], dx
0000000000005e3f         jmp        sub_5d80+32
0000000000005e44         mov        r11d, dword [rdi]
0000000000005e47         cmp        r11d, 0x2f
0000000000005e4b         ja         sub_5ea0+59
0000000000005e51         mov        edx, r11d
0000000000005e54         add        rdx, qword [rdi+0x10]
0000000000005e58         add        r11d, 0x8
0000000000005e5c         mov        dword [rdi], r11d
0000000000005e5f         mov        rdx, qword [rdx]                            ; CODE XREF=sub_5ea0+71
0000000000005e62         test       rdx, rdx
0000000000005e65         cmove      rdx, r9
0000000000005e69         mov        qword [rax+0x10], rdx
0000000000005e6d         jmp        sub_5d80+32
0000000000005e72         mov        r11d, dword [rdi+4]
0000000000005e76         cmp        r11d, 0xaf
0000000000005e7d         ja         sub_5f2d                                    ; sub_5f2d
0000000000005e83         mov        edx, r11d
0000000000005e86         add        rdx, qword [rdi+0x10]
0000000000005e8a         add        r11d, 0x10
0000000000005e8e         mov        dword [rdi+4], r11d

                     loc_5e92:
0000000000005e92         movsd      xmm0, qword [rdx]                           ; CODE XREF=sub_5f2d+12
0000000000005e96         movsd      qword [rax+0x10], xmm0
0000000000005e9b         jmp        sub_5d80+32
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5ea0:
0000000000005ea0         mov        r11d, dword [rdi]
0000000000005ea3         cmp        r11d, 0x2f
0000000000005ea7         ja         loc_5eec

0000000000005ea9         mov        edx, r11d
0000000000005eac         add        rdx, qword [rdi+0x10]
0000000000005eb0         add        r11d, 0x8
0000000000005eb4         mov        dword [rdi], r11d

                     loc_5eb7:
0000000000005eb7         mov        rdx, qword [rdx]                            ; CODE XREF=sub_5ea0+88
0000000000005eba         test       rdx, rdx
0000000000005ebd         cmove      rdx, r10
0000000000005ec1         mov        qword [rax+0x10], rdx
0000000000005ec5         jmp        sub_5d80+32
                        ; endp
0000000000005eca         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_5db6+111
0000000000005ece         lea        r11, qword [rdx+8]
0000000000005ed2         mov        qword [rdi+8], r11
0000000000005ed6         jmp        sub_5db6+131
0000000000005edb         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_5db6+149
0000000000005edf         lea        r11, qword [rdx+8]
0000000000005ee3         mov        qword [rdi+8], r11
0000000000005ee7         jmp        sub_5db6+169

                     loc_5eec:
0000000000005eec         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_5ea0+7
0000000000005ef0         lea        r11, qword [rdx+8]
0000000000005ef4         mov        qword [rdi+8], r11
0000000000005ef8         jmp        loc_5eb7

                     loc_5efa:
0000000000005efa         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_5db6+7
0000000000005efe         lea        r11, qword [rdx+8]
0000000000005f02         mov        qword [rdi+8], r11
0000000000005f06         jmp        loc_5dd1


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5f0b:
0000000000005f0b         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_5db6+77
0000000000005f0f         lea        r11, qword [rdx+8]
0000000000005f13         mov        qword [rdi+8], r11
0000000000005f17         jmp        loc_5e17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5f1c:
0000000000005f1c         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_5db6+43
0000000000005f20         lea        r11, qword [rdx+8]
0000000000005f24         mov        qword [rdi+8], r11
0000000000005f28         jmp        loc_5df5


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5f2d:
0000000000005f2d         mov        rdx, qword [rdi+8]                          ; CODE XREF=sub_5db6+199
0000000000005f31         lea        r11, qword [rdx+8]
0000000000005f35         mov        qword [rdi+8], r11
0000000000005f39         jmp        loc_5e92


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5f3e:
0000000000005f3e         nop                                                    ; End of unwind block (FDE at 0x8a44)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128


                     printf_parse:
0000000000005f40         push       r15                                         ; Begin of unwind block (FDE at 0x8a5c), CODE XREF=vasnprintf+89
0000000000005f42         push       r14
0000000000005f44         lea        rcx, qword [rsi+0x20]
0000000000005f48         push       r13
0000000000005f4a         push       r12
0000000000005f4c         lea        rax, qword [rdx+0x10]
0000000000005f50         push       rbp
0000000000005f51         push       rbx
0000000000005f52         mov        r14, rsi
0000000000005f55         mov        r15, rdx
0000000000005f58         xor        ebx, ebx
0000000000005f5a         mov        r9d, 0x7
0000000000005f60         sub        rsp, 0x58
0000000000005f64         mov        r10d, 0x7
0000000000005f6a         mov        qword [rsi], 0x0
0000000000005f71         mov        qword [rsi+8], rcx
0000000000005f75         mov        qword [rsp+0x88+var_60], rcx
0000000000005f7a         mov        r8, 0xffffffffffffffff
0000000000005f81         mov        qword [rdx], 0x0
0000000000005f88         mov        qword [rsp+0x88+var_80], rax
0000000000005f8d         mov        qword [rdx+8], rax
0000000000005f91         mov        qword [rsp+0x88+var_70], 0x0
0000000000005f9a         mov        qword [rsp+0x88+var_78], 0x0
0000000000005fa3         mov        qword [rsp+0x88+var_68], 0x0
0000000000005fac         jmp        loc_5fbb
0000000000005fae         align      16

                     loc_5fb0:
0000000000005fb0         cmp        al, 0x25                                    ; CODE XREF=printf_parse+128
0000000000005fb2         lea        rbp, qword [rdi+1]
0000000000005fb6         je         loc_5ff8

                     loc_5fb8:
0000000000005fb8         mov        rdi, rbp                                    ; CODE XREF=printf_parse+859, printf_parse+868

                     loc_5fbb:
0000000000005fbb         movzx      eax, byte [rdi]                             ; CODE XREF=printf_parse+108
0000000000005fbe         test       al, al
0000000000005fc0         jne        loc_5fb0

0000000000005fc2         lea        rax, qword [rbx+rbx*4]
0000000000005fc6         lea        rax, qword [rbx+rax*2]
0000000000005fca         mov        qword [rcx+rax*8], rdi
0000000000005fce         mov        rax, qword [rsp+0x88+var_78]
0000000000005fd3         mov        qword [r14+0x10], rax
0000000000005fd7         mov        rax, qword [rsp+0x88+var_70]
0000000000005fdc         mov        qword [r14+0x18], rax
0000000000005fe0         xor        eax, eax

                     loc_5fe2:
0000000000005fe2         add        rsp, 0x58                                   ; CODE XREF=printf_parse+2174, printf_parse+2844
0000000000005fe6         pop        rbx
0000000000005fe7         pop        rbp
0000000000005fe8         pop        r12
0000000000005fea         pop        r13
0000000000005fec         pop        r14
0000000000005fee         pop        r15
0000000000005ff0         ret
                        ; endp
0000000000005ff1         align      8

                     loc_5ff8:
0000000000005ff8         lea        rax, qword [rbx+rbx*4]                      ; CODE XREF=printf_parse+118
0000000000005ffc         mov        r13, r8
0000000000005fff         lea        rax, qword [rbx+rax*2]
0000000000006003         lea        r12, qword [rcx+rax*8]
0000000000006007         mov        qword [r12], rdi
000000000000600b         mov        dword [r12+0x10], 0x0
0000000000006014         mov        qword [r12+0x18], 0x0
000000000000601d         mov        qword [r12+0x20], 0x0
0000000000006026         mov        qword [r12+0x28], r8
000000000000602b         mov        qword [r12+0x30], 0x0
0000000000006034         mov        qword [r12+0x38], 0x0
000000000000603d         mov        qword [r12+0x40], r8
0000000000006042         mov        qword [r12+0x50], r8
0000000000006047         movzx      ebx, byte [rdi+1]
000000000000604b         lea        eax, dword [rbx-0x30]
000000000000604e         cmp        al, 0x9
0000000000006050         ja         loc_608e

0000000000006052         jmp        loc_648a
0000000000006057         align      32

                     loc_6060:
0000000000006060         cmp        bl, 0x2d                                    ; CODE XREF=printf_parse+344
0000000000006063         je         loc_60a8

0000000000006065         cmp        bl, 0x2b
0000000000006068         je         loc_60b0

000000000000606a         cmp        bl, 0x20
000000000000606d         je         loc_60c0

000000000000606f         cmp        bl, 0x23
0000000000006072         je         loc_60d0

0000000000006074         cmp        bl, 0x30
0000000000006077         je         loc_60e0

0000000000006079         cmp        bl, 0x49
000000000000607c         jne        loc_60f0

000000000000607e         or         dword [r12+0x10], 0x40
0000000000006084         nop        dword [rax]

                     loc_6088:
0000000000006088         movzx      ebx, byte [rax]                             ; CODE XREF=printf_parse+352, printf_parse+366, printf_parse+374, printf_parse+390, printf_parse+406, printf_parse+422
000000000000608b         mov        rbp, rax

                     loc_608e:
000000000000608e         lea        rax, qword [rbp+1]                          ; CODE XREF=printf_parse+272, printf_parse+1381, printf_parse+1490
0000000000006092         cmp        bl, 0x27
0000000000006095         mov        rdx, rax
0000000000006098         jne        loc_6060

000000000000609a         or         dword [r12+0x10], 0x1
00000000000060a0         jmp        loc_6088
00000000000060a2         align      8

                     loc_60a8:
00000000000060a8         or         dword [r12+0x10], 0x2                       ; CODE XREF=printf_parse+291
00000000000060ae         jmp        loc_6088

                     loc_60b0:
00000000000060b0         or         dword [r12+0x10], 0x4                       ; CODE XREF=printf_parse+296
00000000000060b6         jmp        loc_6088
00000000000060b8         align      64

                     loc_60c0:
00000000000060c0         or         dword [r12+0x10], 0x8                       ; CODE XREF=printf_parse+301
00000000000060c6         jmp        loc_6088
00000000000060c8         align      16

                     loc_60d0:
00000000000060d0         or         dword [r12+0x10], 0x10                      ; CODE XREF=printf_parse+306
00000000000060d6         jmp        loc_6088
00000000000060d8         align      32

                     loc_60e0:
00000000000060e0         or         dword [r12+0x10], 0x20                      ; CODE XREF=printf_parse+311
00000000000060e6         jmp        loc_6088
00000000000060e8         align      16

                     loc_60f0:
00000000000060f0         cmp        bl, 0x2a                                    ; CODE XREF=printf_parse+316
00000000000060f3         je         loc_62a9

00000000000060f9         lea        ecx, dword [rbx-0x30]
00000000000060fc         cmp        cl, 0x9
00000000000060ff         jbe        loc_6517

                     loc_6105:
0000000000006105         cmp        bl, 0x2e                                    ; CODE XREF=printf_parse+1577, printf_parse+2412
0000000000006108         je         loc_63df

                     loc_610e:
000000000000610e         xor        eax, eax                                    ; CODE XREF=printf_parse+1177, printf_parse+1349, printf_parse+1648, printf_parse+2650
0000000000006110         mov        esi, 0x1
0000000000006115         jmp        loc_6147
0000000000006117         align      32

                     loc_6120:
0000000000006120         cmp        bl, 0x4c                                    ; CODE XREF=printf_parse+526
0000000000006123         je         loc_6160

0000000000006125         cmp        bl, 0x6c
0000000000006128         je         loc_6140

000000000000612a         cmp        bl, 0x6a
000000000000612d         je         loc_6140

000000000000612f         mov        edx, ebx
0000000000006131         and        edx, 0xffffffdf
0000000000006134         cmp        dl, 0x5a
0000000000006137         je         loc_6140

0000000000006139         cmp        bl, 0x74
000000000000613c         jne        loc_6168

000000000000613e         nop

                     loc_6140:
0000000000006140         add        eax, 0x8                                    ; CODE XREF=printf_parse+488, printf_parse+493, printf_parse+503

                     loc_6143:
0000000000006143         movzx      ebx, byte [rbp]                             ; CODE XREF=printf_parse+539, printf_parse+547

                     loc_6147:
0000000000006147         add        rbp, 0x1                                    ; CODE XREF=printf_parse+469
000000000000614b         cmp        bl, 0x68
000000000000614e         jne        loc_6120

0000000000006150         mov        ecx, eax
0000000000006152         mov        edx, esi
0000000000006154         and        ecx, 0x1
0000000000006157         shl        edx, cl
0000000000006159         or         eax, edx
000000000000615b         jmp        loc_6143
000000000000615d         align      32

                     loc_6160:
0000000000006160         or         eax, 0x4                                    ; CODE XREF=printf_parse+483
0000000000006163         jmp        loc_6143
0000000000006165         align      8

                     loc_6168:
0000000000006168         lea        edx, dword [rbx-0x25]                       ; CODE XREF=printf_parse+508
000000000000616b         cmp        dl, 0x53
000000000000616e         ja         loc_678b

0000000000006174         lea        rcx, qword [switch_table_7adc]              ; switch_table_7adc
000000000000617b         movzx      edx, dl
000000000000617e         movsxd     rdx, dword [rcx+rdx*4]
0000000000006182         add        rdx, rcx
0000000000006185         jmp        rdx                                         ; switch statement using table at 0x7adc, with 84 cases, 0x6187,0x61fb,0x663c,0x6688,0x669b,0x66e8,0x66fb,0x671c,0x672c,0x6780,0x678b

                     loc_6187:
0000000000006187         mov        r11d, 0x10                                  ; case 46, CODE XREF=printf_parse+581
000000000000618d         mov        ebx, 0x73
0000000000006192         nop        word [rax+rax]

                     loc_6198:
0000000000006198         cmp        r13, 0xffffffffffffffff                     ; CODE XREF=printf_parse+1797, printf_parse+1805, printf_parse+1820, printf_parse+1834, printf_parse+1853, printf_parse+1878, printf_parse+1892, printf_parse+1900, printf_parse+1915, printf_parse+1929, printf_parse+1952
000000000000619c         je         loc_6857

00000000000061a2         mov        qword [r12+0x50], r13

                     loc_61a7:
00000000000061a7         cmp        r9, r13                                     ; CODE XREF=printf_parse+2361
00000000000061aa         mov        rcx, qword [r15+8]
00000000000061ae         jbe        loc_67d0

                     loc_61b4:
00000000000061b4         mov        rax, qword [r15]                            ; CODE XREF=printf_parse+2322
00000000000061b7         mov        rdx, rax
00000000000061ba         shl        rdx, 0x5
00000000000061be         add        rdx, rcx
00000000000061c1         cmp        rax, r13
00000000000061c4         ja         loc_61e6

00000000000061c6         nop        word [cs:rax+rax]

                     loc_61d0:
00000000000061d0         add        rax, 0x1                                    ; CODE XREF=printf_parse+673
00000000000061d4         mov        dword [rdx], 0x0
00000000000061da         add        rdx, 0x20
00000000000061de         cmp        rax, r13
00000000000061e1         jbe        loc_61d0

00000000000061e3         mov        qword [r15], rax

                     loc_61e6:
00000000000061e6         shl        r13, 0x5                                    ; CODE XREF=printf_parse+644
00000000000061ea         lea        rax, qword [rcx+r13]
00000000000061ee         mov        edx, dword [rax]
00000000000061f0         test       edx, edx
00000000000061f2         jne        loc_67c3

00000000000061f8         mov        dword [rax], r11d

                     loc_61fb:
00000000000061fb         mov        byte [r12+0x48], bl                         ; case 0, CODE XREF=printf_parse+581, printf_parse+2182
0000000000006200         mov        rax, qword [r14]
0000000000006203         mov        qword [r12+8], rbp
0000000000006208         lea        rbx, qword [rax+1]
000000000000620c         cmp        r10, rbx
000000000000620f         mov        qword [r14], rbx
0000000000006212         ja         loc_62a0

0000000000006218         test       r10, r10
000000000000621b         js         loc_6bc7

0000000000006221         add        r10, r10
0000000000006224         movabs     rax, 0x2e8ba2e8ba2e8ba
000000000000622e         cmp        r10, rax
0000000000006231         ja         loc_6bc7

0000000000006237         lea        rax, qword [r10+r10*4]
000000000000623b         mov        rdi, qword [r14+8]
000000000000623f         cmp        qword [rsp+0x88+var_60], rdi
0000000000006244         mov        qword [rsp+0x88+var_48], r9
0000000000006249         mov        qword [rsp+0x88+var_50], r10
000000000000624e         lea        rax, qword [r10+rax*2]
0000000000006252         mov        qword [rsp+0x88+var_58], r8
0000000000006257         lea        rsi, qword [rax*8]
000000000000625f         je         loc_691d

0000000000006265         call       j_realloc                                   ; realloc
000000000000626a         test       rax, rax
000000000000626d         mov        rcx, rax
0000000000006270         mov        r8, qword [rsp+0x88+var_58]
0000000000006275         mov        r10, qword [rsp+0x88+var_50]
000000000000627a         mov        r9, qword [rsp+0x88+var_48]
000000000000627f         je         loc_6bc7

0000000000006285         mov        rax, qword [rsp+0x88+var_60]
000000000000628a         cmp        rax, qword [r14+8]
000000000000628e         mov        rbx, qword [r14]
0000000000006291         je         loc_6940

                     loc_6297:
0000000000006297         mov        qword [r14+8], rcx                          ; CODE XREF=printf_parse+2621
000000000000629b         jmp        loc_5fb8

                     loc_62a0:
00000000000062a0         mov        rcx, qword [r14+8]                          ; CODE XREF=printf_parse+722
00000000000062a4         jmp        loc_5fb8

                     loc_62a9:
00000000000062a9         mov        rsi, qword [rsp+0x88+var_78]                ; CODE XREF=printf_parse+435
00000000000062ae         mov        ecx, 0x1
00000000000062b3         mov        qword [r12+0x18], rbp
00000000000062b8         mov        qword [r12+0x20], rax
00000000000062bd         test       rsi, rsi
00000000000062c0         cmovne     rcx, rsi
00000000000062c4         mov        qword [rsp+0x88+var_78], rcx
00000000000062c9         movzx      ecx, byte [rbp+1]
00000000000062cd         lea        esi, dword [rcx-0x30]
00000000000062d0         cmp        sil, 0x9
00000000000062d4         jbe        loc_65b5

                     loc_62da:
00000000000062da         mov        rsi, qword [rsp+0x88+var_68]                ; CODE XREF=printf_parse+1677
00000000000062df         cmp        rsi, 0xffffffffffffffff
00000000000062e3         lea        rdx, qword [rsi+1]
00000000000062e7         mov        qword [r12+0x28], rsi
00000000000062ec         je         loc_678b

00000000000062f2         mov        rbx, qword [rsp+0x88+var_68]
00000000000062f7         mov        rbp, rax
00000000000062fa         mov        qword [rsp+0x88+var_68], rdx

                     loc_62ff:
00000000000062ff         cmp        r9, rbx                                     ; CODE XREF=printf_parse+1783
0000000000006302         mov        rcx, qword [r15+8]
0000000000006306         ja         loc_6982

000000000000630c         add        r9, r9
000000000000630f         lea        rax, qword [rbx+1]
0000000000006313         cmp        r9, rbx
0000000000006316         cmovbe     r9, rax
000000000000631a         movabs     rax, 0x7ffffffffffffff
0000000000006324         cmp        r9, rax
0000000000006327         ja         loc_6bcb

000000000000632d         mov        rsi, r9
0000000000006330         mov        qword [rsp+0x88+var_48], r9
0000000000006335         mov        qword [rsp+0x88+var_50], r10
000000000000633a         shl        rsi, 0x5
000000000000633e         cmp        qword [rsp+0x88+var_80], rcx
0000000000006343         mov        qword [rsp+0x88+var_58], r8
0000000000006348         je         loc_6a61

000000000000634e         mov        rdi, rcx                                    ; argument "__ptr" for method j_realloc
0000000000006351         call       j_realloc                                   ; realloc
0000000000006356         mov        rdx, qword [r15+8]
000000000000635a         mov        r8, qword [rsp+0x88+var_58]
000000000000635f         mov        rcx, rax
0000000000006362         mov        r10, qword [rsp+0x88+var_50]
0000000000006367         mov        r9, qword [rsp+0x88+var_48]

                     loc_636c:
000000000000636c         test       rcx, rcx                                    ; CODE XREF=printf_parse+2880
000000000000636f         je         loc_6c27

0000000000006375         cmp        qword [rsp+0x88+var_80], rdx
000000000000637a         mov        rax, qword [r15]
000000000000637d         je         loc_6b3b

                     loc_6383:
0000000000006383         mov        qword [r15+8], rcx                          ; CODE XREF=printf_parse+3123

                     loc_6387:
0000000000006387         mov        rdx, rax                                    ; CODE XREF=printf_parse+2629
000000000000638a         shl        rdx, 0x5
000000000000638e         add        rdx, rcx
0000000000006391         cmp        rax, rbx
0000000000006394         ja         loc_63b6

0000000000006396         nop        word [cs:rax+rax]

                     loc_63a0:
00000000000063a0         add        rax, 0x1                                    ; CODE XREF=printf_parse+1137
00000000000063a4         mov        dword [rdx], 0x0
00000000000063aa         add        rdx, 0x20
00000000000063ae         cmp        rax, rbx
00000000000063b1         jbe        loc_63a0

00000000000063b3         mov        qword [r15], rax

                     loc_63b6:
00000000000063b6         shl        rbx, 0x5                                    ; CODE XREF=printf_parse+1108
00000000000063ba         lea        rax, qword [rcx+rbx]
00000000000063be         mov        edx, dword [rax]
00000000000063c0         test       edx, edx
00000000000063c2         jne        loc_689b

00000000000063c8         mov        dword [rax], 0x5
00000000000063ce         movzx      ebx, byte [rbp]
00000000000063d2         lea        rdx, qword [rbp+1]
00000000000063d6         cmp        bl, 0x2e
00000000000063d9         jne        loc_610e

                     loc_63df:
00000000000063df         cmp        byte [rbp+1], 0x2a                          ; CODE XREF=printf_parse+456
00000000000063e3         mov        qword [r12+0x30], rbp
00000000000063e8         jne        loc_656e

00000000000063ee         mov        rsi, qword [rsp+0x88+var_70]
00000000000063f3         lea        r11, qword [rbp+2]
00000000000063f7         mov        eax, 0x2
00000000000063fc         mov        qword [r12+0x38], r11
0000000000006401         cmp        rsi, 0x2
0000000000006405         cmovae     rax, rsi
0000000000006409         mov        qword [rsp+0x88+var_70], rax
000000000000640e         movsx      eax, byte [rbp+2]
0000000000006412         lea        edx, dword [rax-0x30]
0000000000006415         cmp        dl, 0x9
0000000000006418         jbe        loc_6aac

                     loc_641e:
000000000000641e         mov        rbx, qword [r12+0x40]                       ; CODE XREF=printf_parse+2946
0000000000006423         cmp        rbx, 0xffffffffffffffff
0000000000006427         je         loc_6a85

                     loc_642d:
000000000000642d         cmp        r9, rbx                                     ; CODE XREF=printf_parse+2919, printf_parse+3161
0000000000006430         mov        rcx, qword [r15+8]
0000000000006434         jbe        loc_699f

000000000000643a         mov        rax, qword [r15]

                     loc_643d:
000000000000643d         mov        rdx, rax                                    ; CODE XREF=printf_parse+2788
0000000000006440         shl        rdx, 0x5
0000000000006444         add        rdx, rcx
0000000000006447         cmp        rax, rbx
000000000000644a         ja         loc_6466

000000000000644c         nop        dword [rax]

                     loc_6450:
0000000000006450         add        rax, 0x1                                    ; CODE XREF=printf_parse+1313
0000000000006454         mov        dword [rdx], 0x0
000000000000645a         add        rdx, 0x20
000000000000645e         cmp        rax, rbx
0000000000006461         jbe        loc_6450

0000000000006463         mov        qword [r15], rax

                     loc_6466:
0000000000006466         shl        rbx, 0x5                                    ; CODE XREF=printf_parse+1290
000000000000646a         lea        rax, qword [rcx+rbx]
000000000000646e         mov        edx, dword [rax]
0000000000006470         test       edx, edx
0000000000006472         jne        loc_698a

0000000000006478         mov        dword [rax], 0x5
000000000000647e         mov        rbp, r11
0000000000006481         movzx      ebx, byte [r11]
0000000000006485         jmp        loc_610e

                     loc_648a:
000000000000648a         mov        rax, rbp                                    ; CODE XREF=printf_parse+274
000000000000648d         nop        dword [rax]

                     loc_6490:
0000000000006490         add        rax, 0x1                                    ; CODE XREF=printf_parse+1373
0000000000006494         movzx      edx, byte [rax]
0000000000006497         lea        ecx, dword [rdx-0x30]
000000000000649a         cmp        cl, 0x9
000000000000649d         jbe        loc_6490

000000000000649f         cmp        dl, 0x24
00000000000064a2         mov        r13, r8
00000000000064a5         jne        loc_608e

00000000000064ab         xor        edx, edx

                     loc_64ad:
00000000000064ad         movsx      eax, bl                                     ; CODE XREF=printf_parse+1463
00000000000064b0         movabs     rdi, 0x1999999999999999
00000000000064ba         mov        rsi, r8
00000000000064bd         sub        eax, 0x30
00000000000064c0         cmp        rdx, rdi
00000000000064c3         cdqe
00000000000064c5         ja         loc_64ce

00000000000064c7         lea        rsi, qword [rdx+rdx*4]
00000000000064cb         add        rsi, rsi

                     loc_64ce:
00000000000064ce         mov        rcx, rbp                                    ; CODE XREF=printf_parse+1413

                     loc_64d1:
00000000000064d1         add        rax, rsi                                    ; CODE XREF=printf_parse+2390
00000000000064d4         movzx      ebx, byte [rbp+1]
00000000000064d8         setb       sil
00000000000064dc         add        rbp, 0x1
00000000000064e0         mov        rdx, rax
00000000000064e3         movzx      esi, sil
00000000000064e7         test       rsi, rsi
00000000000064ea         lea        edi, dword [rbx-0x30]
00000000000064ed         jne        loc_687e

00000000000064f3         cmp        dil, 0x9
00000000000064f7         jbe        loc_64ad

00000000000064f9         mov        r13, rax
00000000000064fc         sub        r13, 0x1
0000000000006500         cmp        r13, 0xfffffffffffffffd
0000000000006504         ja         loc_678b

000000000000650a         lea        rbp, qword [rcx+2]
000000000000650e         movzx      ebx, byte [rcx+2]
0000000000006512         jmp        loc_608e

                     loc_6517:
0000000000006517         mov        qword [r12+0x18], rbp                       ; CODE XREF=printf_parse+447
000000000000651c         movzx      edi, byte [rbp]
0000000000006520         mov        rsi, rbp
0000000000006523         lea        ecx, dword [rdi-0x30]
0000000000006526         cmp        cl, 0x9
0000000000006529         jbe        loc_6537

000000000000652b         jmp        loc_6560
000000000000652d         align      16

                     loc_6530:
0000000000006530         mov        rbp, rax                                    ; CODE XREF=printf_parse+1536
0000000000006533         add        rax, 0x1

                     loc_6537:
0000000000006537         movzx      edi, byte [rax]                             ; CODE XREF=printf_parse+1513
000000000000653a         lea        edx, dword [rdi-0x30]
000000000000653d         cmp        dl, 0x9
0000000000006540         jbe        loc_6530

0000000000006542         mov        rcx, rax
0000000000006545         lea        rdx, qword [rbp+2]
0000000000006549         mov        rbp, rax
000000000000654c         sub        rcx, rsi
000000000000654f         mov        rsi, qword [rsp+0x88+var_78]
0000000000006554         cmp        rsi, rcx
0000000000006557         cmovae     rcx, rsi
000000000000655b         mov        qword [rsp+0x88+var_78], rcx

                     loc_6560:
0000000000006560         mov        qword [r12+0x20], rbp                       ; CODE XREF=printf_parse+1515
0000000000006565         movzx      ebx, byte [rbp]
0000000000006569         jmp        loc_6105

                     loc_656e:
000000000000656e         movzx      eax, byte [rbp+1]                           ; CODE XREF=printf_parse+1192
0000000000006572         sub        eax, 0x30
0000000000006575         cmp        al, 0x9
0000000000006577         ja         loc_658e

0000000000006579         nop        dword [rax]

                     loc_6580:
0000000000006580         add        rdx, 0x1                                    ; CODE XREF=printf_parse+1612
0000000000006584         movzx      eax, byte [rdx]
0000000000006587         sub        eax, 0x30
000000000000658a         cmp        al, 0x9
000000000000658c         jbe        loc_6580

                     loc_658e:
000000000000658e         mov        rsi, qword [rsp+0x88+var_70]                ; CODE XREF=printf_parse+1591
0000000000006593         mov        rax, rdx
0000000000006596         mov        qword [r12+0x38], rdx
000000000000659b         sub        rax, rbp
000000000000659e         movzx      ebx, byte [rdx]
00000000000065a1         mov        rbp, rdx
00000000000065a4         cmp        rsi, rax
00000000000065a7         cmovae     rax, rsi
00000000000065ab         mov        qword [rsp+0x88+var_70], rax
00000000000065b0         jmp        loc_610e

                     loc_65b5:
00000000000065b5         mov        rsi, rax                                    ; CODE XREF=printf_parse+916

                     loc_65b8:
00000000000065b8         add        rsi, 0x1                                    ; CODE XREF=printf_parse+1671
00000000000065bc         movzx      edi, byte [rsi]
00000000000065bf         lea        r11d, dword [rdi-0x30]
00000000000065c3         cmp        r11b, 0x9
00000000000065c7         jbe        loc_65b8

00000000000065c9         cmp        dil, 0x24
00000000000065cd         jne        loc_62da

00000000000065d3         xor        esi, esi

                     loc_65d5:
00000000000065d5         movsx      eax, cl                                     ; CODE XREF=printf_parse+1758
00000000000065d8         movabs     rdi, 0x1999999999999999
00000000000065e2         mov        rcx, r8
00000000000065e5         sub        eax, 0x30
00000000000065e8         cmp        rsi, rdi
00000000000065eb         cdqe
00000000000065ed         ja         loc_65f6

00000000000065ef         lea        rcx, qword [rsi+rsi*4]
00000000000065f3         add        rcx, rcx

                     loc_65f6:
00000000000065f6         mov        rbp, rdx                                    ; CODE XREF=printf_parse+1709

                     loc_65f9:
00000000000065f9         xor        r11d, r11d                                  ; CODE XREF=printf_parse+3062
00000000000065fc         add        rax, rcx
00000000000065ff         movzx      ecx, byte [rdx+1]
0000000000006603         setb       r11b
0000000000006607         add        rdx, 0x1
000000000000660b         mov        rsi, rax
000000000000660e         test       r11, r11
0000000000006611         lea        edi, dword [rcx-0x30]
0000000000006614         jne        loc_6b1e

000000000000661a         cmp        dil, 0x9
000000000000661e         jbe        loc_65d5

0000000000006620         lea        rbx, qword [rax-1]
0000000000006624         cmp        rbx, 0xfffffffffffffffd
0000000000006628         ja         loc_678b

000000000000662e         mov        qword [r12+0x28], rbx
0000000000006633         add        rbp, 0x2
0000000000006637         jmp        loc_62ff

                     loc_663c:
000000000000663c         cmp        eax, 0xf                                    ; case 73, CODE XREF=printf_parse+581
000000000000663f         mov        r11d, 0x16
0000000000006645         jg         loc_6198

000000000000664b         test       al, 0x4
000000000000664d         jne        loc_6198

0000000000006653         cmp        eax, 0x7
0000000000006656         mov        r11d, 0x15
000000000000665c         jg         loc_6198

0000000000006662         test       al, 0x2
0000000000006664         mov        r11d, 0x12
000000000000666a         jne        loc_6198

0000000000006670         xor        r11d, r11d
0000000000006673         test       al, 0x1
0000000000006675         sete       r11b
0000000000006679         add        r11d, 0x13
000000000000667d         jmp        loc_6198
0000000000006682         align      8

                     loc_6688:
0000000000006688         xor        r11d, r11d                                  ; case 62, CODE XREF=printf_parse+581
000000000000668b         cmp        eax, 0x7
000000000000668e         setg       r11b
0000000000006692         add        r11d, 0xd
0000000000006696         jmp        loc_6198

                     loc_669b:
000000000000669b         cmp        eax, 0xf                                    ; case 68, CODE XREF=printf_parse+581
000000000000669e         mov        r11d, 0x9
00000000000066a4         jg         loc_6198

00000000000066aa         test       al, 0x4
00000000000066ac         jne        loc_6198

00000000000066b2         cmp        eax, 0x7
00000000000066b5         mov        r11d, 0x7
00000000000066bb         jg         loc_6198

00000000000066c1         test       al, 0x2
00000000000066c3         mov        r11d, 0x1
00000000000066c9         jne        loc_6198

00000000000066cf         and        eax, 0x1
00000000000066d2         cmp        eax, 0x1
00000000000066d5         sbb        r11d, r11d
00000000000066d8         and        r11d, 0x2
00000000000066dc         add        r11d, 0x3
00000000000066e0         jmp        loc_6198
00000000000066e5         align      8

                     loc_66e8:
00000000000066e8         xor        r11d, r11d                                  ; case 78, CODE XREF=printf_parse+581
00000000000066eb         cmp        eax, 0x7
00000000000066ee         setg       r11b
00000000000066f2         add        r11d, 0xf
00000000000066f6         jmp        loc_6198

                     loc_66fb:
00000000000066fb         cmp        eax, 0xf                                    ; case 66, CODE XREF=printf_parse+581
00000000000066fe         mov        r11d, 0xc
0000000000006704         jg         loc_6198

000000000000670a         xor        r11d, r11d
000000000000670d         test       al, 0x4
000000000000670f         setne      r11b
0000000000006713         add        r11d, 0xb
0000000000006717         jmp        loc_6198

                     loc_671c:
000000000000671c         mov        r11d, 0xe                                   ; case 30, CODE XREF=printf_parse+581
0000000000006722         mov        ebx, 0x63
0000000000006727         jmp        loc_6198

                     loc_672c:
000000000000672c         cmp        eax, 0xf                                    ; case 83, CODE XREF=printf_parse+581
000000000000672f         mov        r11d, 0xa
0000000000006735         jg         loc_6198

000000000000673b         test       al, 0x4
000000000000673d         jne        loc_6198

0000000000006743         cmp        eax, 0x7
0000000000006746         mov        r11d, 0x8
000000000000674c         jg         loc_6198

0000000000006752         test       al, 0x2
0000000000006754         mov        r11d, 0x2
000000000000675a         jne        loc_6198

0000000000006760         and        eax, 0x1
0000000000006763         cmp        eax, 0x1
0000000000006766         sbb        r11d, r11d
0000000000006769         and        r11d, 0x2
000000000000676d         add        r11d, 0x4
0000000000006771         jmp        loc_6198
0000000000006776         align      128

                     loc_6780:
0000000000006780         mov        r11d, 0x11                                  ; case 75, CODE XREF=printf_parse+581
0000000000006786         jmp        loc_6198

                     loc_678b:
000000000000678b         mov        rcx, qword [r15+8]                          ; case 82, CODE XREF=printf_parse+558, printf_parse+581, printf_parse+940, printf_parse+1476, printf_parse+1768, printf_parse+2345, printf_parse+2370, printf_parse+2903, printf_parse+3019, printf_parse+3042, printf_parse+3146

                     loc_678f:
000000000000678f         cmp        qword [rsp+0x88+var_80], rcx                ; CODE XREF=printf_parse+2188, printf_parse+2398, printf_parse+2637
0000000000006794         je         loc_679e

0000000000006796         mov        rdi, rcx                                    ; argument "__ptr" for method j_free
0000000000006799         call       j_free                                      ; free

                     loc_679e:
000000000000679e         mov        rdi, qword [r14+8]                          ; CODE XREF=printf_parse+2132
00000000000067a2         cmp        qword [rsp+0x88+var_60], rdi
00000000000067a7         je         loc_67ae

00000000000067a9         call       j_free                                      ; free

                     loc_67ae:
00000000000067ae         call       j___errno_location                          ; __errno_location, CODE XREF=printf_parse+2151
00000000000067b3         mov        dword [rax], 0x16
00000000000067b9         mov        eax, 0xffffffff
00000000000067be         jmp        loc_5fe2

                     loc_67c3:
00000000000067c3         cmp        edx, r11d                                   ; CODE XREF=printf_parse+690
00000000000067c6         je         loc_61fb

00000000000067cc         jmp        loc_678f
00000000000067ce         align      16

                     loc_67d0:
00000000000067d0         add        r9, r9                                      ; CODE XREF=printf_parse+622
00000000000067d3         lea        rax, qword [r13+1]
00000000000067d7         cmp        r9, r13
00000000000067da         cmovbe     r9, rax
00000000000067de         movabs     rax, 0x7ffffffffffffff
00000000000067e8         cmp        r9, rax
00000000000067eb         ja         loc_6bcb

00000000000067f1         mov        rsi, r9
00000000000067f4         mov        qword [rsp+0x88+var_40], r9
00000000000067f9         mov        qword [rsp+0x88+var_48], r10
00000000000067fe         shl        rsi, 0x5
0000000000006802         cmp        qword [rsp+0x88+var_80], rcx
0000000000006807         mov        qword [rsp+0x88+var_50], r8
000000000000680c         mov        dword [rsp+0x88+var_58], r11d
0000000000006811         je         loc_68b1

0000000000006817         mov        rdi, rcx                                    ; argument "__ptr" for method j_realloc
000000000000681a         call       j_realloc                                   ; realloc
000000000000681f         test       rax, rax
0000000000006822         mov        rcx, rax
0000000000006825         mov        r11d, dword [rsp+0x88+var_58]
000000000000682a         mov        r8, qword [rsp+0x88+var_50]
000000000000682f         mov        r10, qword [rsp+0x88+var_48]
0000000000006834         mov        r9, qword [rsp+0x88+var_40]
0000000000006839         je         loc_6bc7

000000000000683f         mov        rax, qword [rsp+0x88+var_80]
0000000000006844         cmp        rax, qword [r15+8]
0000000000006848         je         loc_68d9

                     loc_684e:
000000000000684e         mov        qword [r15+8], rcx                          ; CODE XREF=printf_parse+2520
0000000000006852         jmp        loc_61b4

                     loc_6857:
0000000000006857         mov        rsi, qword [rsp+0x88+var_68]                ; CODE XREF=printf_parse+604
000000000000685c         cmp        rsi, 0xffffffffffffffff
0000000000006860         lea        rax, qword [rsi+1]
0000000000006864         mov        qword [r12+0x50], rsi
0000000000006869         je         loc_678b

000000000000686f         mov        r13, qword [rsp+0x88+var_68]
0000000000006874         mov        qword [rsp+0x88+var_68], rax
0000000000006879         jmp        loc_61a7

                     loc_687e:
000000000000687e         cmp        dil, 0x9                                    ; CODE XREF=printf_parse+1453
0000000000006882         ja         loc_678b

0000000000006888         movsx      eax, bl
000000000000688b         mov        rsi, r8
000000000000688e         mov        rcx, rbp
0000000000006891         sub        eax, 0x30
0000000000006894         cdqe
0000000000006896         jmp        loc_64d1

                     loc_689b:
000000000000689b         cmp        edx, 0x5                                    ; CODE XREF=printf_parse+1154
000000000000689e         jne        loc_678f

00000000000068a4         movzx      ebx, byte [rbp]
00000000000068a8         lea        rdx, qword [rbp+1]
00000000000068ac         jmp        loc_6105

                     loc_68b1:
00000000000068b1         mov        rdi, rsi                                    ; argument "__size" for method j_malloc, CODE XREF=printf_parse+2257
00000000000068b4         call       j_malloc                                    ; malloc
00000000000068b9         test       rax, rax
00000000000068bc         mov        rcx, rax
00000000000068bf         mov        r11d, dword [rsp+0x88+var_58]
00000000000068c4         mov        r8, qword [rsp+0x88+var_50]
00000000000068c9         mov        r10, qword [rsp+0x88+var_48]
00000000000068ce         mov        r9, qword [rsp+0x88+var_40]
00000000000068d3         je         loc_6a3c

                     loc_68d9:
00000000000068d9         mov        rdx, qword [r15]                            ; CODE XREF=printf_parse+2312
00000000000068dc         mov        rsi, qword [rsp+0x88+var_80]                ; argument "__src" for method j_memcpy
00000000000068e1         mov        rdi, rcx                                    ; argument "__dest" for method j_memcpy
00000000000068e4         mov        qword [rsp+0x88+var_40], r9
00000000000068e9         mov        qword [rsp+0x88+var_48], r10
00000000000068ee         mov        qword [rsp+0x88+var_50], r8
00000000000068f3         mov        dword [rsp+0x88+var_58], r11d
00000000000068f8         shl        rdx, 0x5                                    ; argument "__n" for method j_memcpy
00000000000068fc         call       j_memcpy                                    ; memcpy
0000000000006901         mov        r9, qword [rsp+0x88+var_40]
0000000000006906         mov        r10, qword [rsp+0x88+var_48]
000000000000690b         mov        rcx, rax
000000000000690e         mov        r8, qword [rsp+0x88+var_50]
0000000000006913         mov        r11d, dword [rsp+0x88+var_58]
0000000000006918         jmp        loc_684e

                     loc_691d:
000000000000691d         mov        rdi, rsi                                    ; argument "__size" for method j_malloc, CODE XREF=printf_parse+799
0000000000006920         call       j_malloc                                    ; malloc
0000000000006925         test       rax, rax
0000000000006928         mov        rcx, rax
000000000000692b         mov        r8, qword [rsp+0x88+var_58]
0000000000006930         mov        r10, qword [rsp+0x88+var_50]
0000000000006935         mov        r9, qword [rsp+0x88+var_48]
000000000000693a         je         loc_6a29

                     loc_6940:
0000000000006940         lea        rax, qword [rbx+rbx*4]                      ; CODE XREF=printf_parse+849
0000000000006944         mov        rsi, qword [rsp+0x88+var_60]                ; argument "__src" for method j_memcpy
0000000000006949         mov        rdi, rcx                                    ; argument "__dest" for method j_memcpy
000000000000694c         mov        qword [rsp+0x88+var_48], r9
0000000000006951         mov        qword [rsp+0x88+var_50], r10
0000000000006956         lea        rdx, qword [rbx+rax*2]
000000000000695a         mov        qword [rsp+0x88+var_58], r8
000000000000695f         shl        rdx, 0x3                                    ; argument "__n" for method j_memcpy
0000000000006963         call       j_memcpy                                    ; memcpy
0000000000006968         mov        rbx, qword [r14]
000000000000696b         mov        rcx, rax
000000000000696e         mov        r9, qword [rsp+0x88+var_48]
0000000000006973         mov        r10, qword [rsp+0x88+var_50]
0000000000006978         mov        r8, qword [rsp+0x88+var_58]
000000000000697d         jmp        loc_6297

                     loc_6982:
0000000000006982         mov        rax, qword [r15]                            ; CODE XREF=printf_parse+966
0000000000006985         jmp        loc_6387

                     loc_698a:
000000000000698a         cmp        edx, 0x5                                    ; CODE XREF=printf_parse+1330
000000000000698d         jne        loc_678f

0000000000006993         movzx      ebx, byte [r11]
0000000000006997         mov        rbp, r11
000000000000699a         jmp        loc_610e

                     loc_699f:
000000000000699f         add        r9, r9                                      ; CODE XREF=printf_parse+1268
00000000000069a2         lea        rax, qword [rbx+1]
00000000000069a6         cmp        r9, rbx
00000000000069a9         cmovbe     r9, rax
00000000000069ad         movabs     rax, 0x7ffffffffffffff
00000000000069b7         cmp        r9, rax
00000000000069ba         ja         loc_6bcb

00000000000069c0         mov        rsi, r9
00000000000069c3         mov        qword [rsp+0x88+var_40], r9
00000000000069c8         mov        qword [rsp+0x88+var_48], r10
00000000000069cd         shl        rsi, 0x5
00000000000069d1         cmp        qword [rsp+0x88+var_80], rcx
00000000000069d6         mov        qword [rsp+0x88+var_50], r8
00000000000069db         mov        qword [rsp+0x88+var_58], r11
00000000000069e0         je         loc_6b9e

00000000000069e6         mov        rdi, rcx                                    ; argument "__ptr" for method j_realloc
00000000000069e9         call       j_realloc                                   ; realloc
00000000000069ee         mov        rdx, qword [r15+8]
00000000000069f2         mov        r11, qword [rsp+0x88+var_58]
00000000000069f7         mov        rcx, rax
00000000000069fa         mov        r8, qword [rsp+0x88+var_50]
00000000000069ff         mov        r10, qword [rsp+0x88+var_48]
0000000000006a04         mov        r9, qword [rsp+0x88+var_40]

                     loc_6a09:
0000000000006a09         test       rcx, rcx                                    ; CODE XREF=printf_parse+3202
0000000000006a0c         je         loc_6c27

0000000000006a12         cmp        qword [rsp+0x88+var_80], rdx
0000000000006a17         mov        rax, qword [r15]
0000000000006a1a         je         loc_6be0

                     loc_6a20:
0000000000006a20         mov        qword [r15+8], rcx                          ; CODE XREF=printf_parse+3298
0000000000006a24         jmp        loc_643d

                     loc_6a29:
0000000000006a29         mov        rcx, qword [r15+8]                          ; CODE XREF=printf_parse+2554
0000000000006a2d         cmp        qword [rsp+0x88+var_80], rcx
0000000000006a32         je         loc_6a4c

                     loc_6a34:
0000000000006a34         mov        rdi, rcx                                    ; argument "__ptr" for method j_free, CODE XREF=printf_parse+3216
0000000000006a37         call       j_free                                      ; free

                     loc_6a3c:
0000000000006a3c         mov        rdi, qword [r14+8]                          ; CODE XREF=printf_parse+2451, printf_parse+3222
0000000000006a40         cmp        qword [rsp+0x88+var_60], rdi
0000000000006a45         je         loc_6a4c

0000000000006a47         call       j_free                                      ; free

                     loc_6a4c:
0000000000006a4c         call       j___errno_location                          ; __errno_location, CODE XREF=printf_parse+2802, printf_parse+2821
0000000000006a51         mov        dword [rax], 0xc
0000000000006a57         mov        eax, 0xffffffff
0000000000006a5c         jmp        loc_5fe2

                     loc_6a61:
0000000000006a61         mov        rdi, rsi                                    ; argument "__size" for method j_malloc, CODE XREF=printf_parse+1032
0000000000006a64         call       j_malloc                                    ; malloc
0000000000006a69         mov        rdx, qword [rsp+0x88+var_80]
0000000000006a6e         mov        rcx, rax
0000000000006a71         mov        r9, qword [rsp+0x88+var_48]
0000000000006a76         mov        r10, qword [rsp+0x88+var_50]
0000000000006a7b         mov        r8, qword [rsp+0x88+var_58]
0000000000006a80         jmp        loc_636c

                     loc_6a85:
0000000000006a85         mov        rsi, qword [rsp+0x88+var_68]                ; CODE XREF=printf_parse+1255
0000000000006a8a         cmp        rsi, 0xffffffffffffffff
0000000000006a8e         lea        rax, qword [rsi+1]
0000000000006a92         mov        qword [r12+0x40], rsi
0000000000006a97         je         loc_678b

0000000000006a9d         mov        rbx, qword [rsp+0x88+var_68]
0000000000006aa2         mov        qword [rsp+0x88+var_68], rax
0000000000006aa7         jmp        loc_642d

                     loc_6aac:
0000000000006aac         mov        rdx, r11                                    ; CODE XREF=printf_parse+1240

                     loc_6aaf:
0000000000006aaf         add        rdx, 0x1                                    ; CODE XREF=printf_parse+2941
0000000000006ab3         movzx      ecx, byte [rdx]
0000000000006ab6         lea        esi, dword [rcx-0x30]
0000000000006ab9         cmp        sil, 0x9
0000000000006abd         jbe        loc_6aaf

0000000000006abf         cmp        cl, 0x24
0000000000006ac2         jne        loc_641e

0000000000006ac8         xor        ecx, ecx

                     loc_6aca:
0000000000006aca         movabs     rsi, 0x1999999999999999                     ; CODE XREF=printf_parse+3132
0000000000006ad4         sub        eax, 0x30
0000000000006ad7         mov        rdx, r8
0000000000006ada         cmp        rcx, rsi
0000000000006add         cdqe
0000000000006adf         ja         loc_6ae8

0000000000006ae1         lea        rdx, qword [rcx+rcx*4]
0000000000006ae5         add        rdx, rdx

                     loc_6ae8:
0000000000006ae8         mov        rsi, r11                                    ; CODE XREF=printf_parse+2975

                     loc_6aeb:
0000000000006aeb         xor        ebx, ebx                                    ; CODE XREF=printf_parse+3036
0000000000006aed         add        rdx, rax
0000000000006af0         movsx      eax, byte [r11+1]
0000000000006af5         setb       bl
0000000000006af8         add        r11, 0x1
0000000000006afc         mov        rcx, rdx
0000000000006aff         test       rbx, rbx
0000000000006b02         lea        edi, dword [rax-0x30]
0000000000006b05         je         loc_6b78

0000000000006b07         cmp        dil, 0x9
0000000000006b0b         ja         loc_678b

0000000000006b11         sub        eax, 0x30
0000000000006b14         mov        rdx, r8
0000000000006b17         mov        rsi, r11
0000000000006b1a         cdqe
0000000000006b1c         jmp        loc_6aeb

                     loc_6b1e:
0000000000006b1e         cmp        dil, 0x9                                    ; CODE XREF=printf_parse+1748
0000000000006b22         ja         loc_678b

0000000000006b28         movsx      eax, cl
0000000000006b2b         mov        rbp, rdx
0000000000006b2e         mov        rcx, r8
0000000000006b31         sub        eax, 0x30
0000000000006b34         cdqe
0000000000006b36         jmp        loc_65f9

                     loc_6b3b:
0000000000006b3b         mov        rsi, qword [rsp+0x88+var_80]                ; argument "__src" for method j_memcpy, CODE XREF=printf_parse+1085
0000000000006b40         shl        rax, 0x5
0000000000006b44         mov        rdi, rcx                                    ; argument "__dest" for method j_memcpy
0000000000006b47         mov        rdx, rax                                    ; argument "__n" for method j_memcpy
0000000000006b4a         mov        qword [rsp+0x88+var_48], r9
0000000000006b4f         mov        qword [rsp+0x88+var_50], r10
0000000000006b54         mov        qword [rsp+0x88+var_58], r8
0000000000006b59         call       j_memcpy                                    ; memcpy
0000000000006b5e         mov        r9, qword [rsp+0x88+var_48]
0000000000006b63         mov        rcx, rax
0000000000006b66         mov        r10, qword [rsp+0x88+var_50]
0000000000006b6b         mov        rax, qword [r15]
0000000000006b6e         mov        r8, qword [rsp+0x88+var_58]
0000000000006b73         jmp        loc_6383

                     loc_6b78:
0000000000006b78         cmp        dil, 0x9                                    ; CODE XREF=printf_parse+3013
0000000000006b7c         jbe        loc_6aca

0000000000006b82         lea        rbx, qword [rdx-1]
0000000000006b86         cmp        rbx, 0xfffffffffffffffd
0000000000006b8a         ja         loc_678b

0000000000006b90         mov        qword [r12+0x40], rbx
0000000000006b95         lea        r11, qword [rsi+2]
0000000000006b99         jmp        loc_642d

                     loc_6b9e:
0000000000006b9e         mov        rdi, rsi                                    ; argument "__size" for method j_malloc, CODE XREF=printf_parse+2720
0000000000006ba1         call       j_malloc                                    ; malloc
0000000000006ba6         mov        rdx, qword [rsp+0x88+var_80]
0000000000006bab         mov        rcx, rax
0000000000006bae         mov        r9, qword [rsp+0x88+var_40]
0000000000006bb3         mov        r10, qword [rsp+0x88+var_48]
0000000000006bb8         mov        r8, qword [rsp+0x88+var_50]
0000000000006bbd         mov        r11, qword [rsp+0x88+var_58]
0000000000006bc2         jmp        loc_6a09

                     loc_6bc7:
0000000000006bc7         mov        rcx, qword [r15+8]                          ; CODE XREF=printf_parse+731, printf_parse+753, printf_parse+831, printf_parse+2297

                     loc_6bcb:
0000000000006bcb         cmp        qword [rsp+0x88+var_80], rcx                ; CODE XREF=printf_parse+999, printf_parse+2219, printf_parse+2682, printf_parse+3306
0000000000006bd0         jne        loc_6a34

0000000000006bd6         jmp        loc_6a3c
0000000000006bdb         align      32

                     loc_6be0:
0000000000006be0         mov        rsi, qword [rsp+0x88+var_80]                ; argument "__src" for method j_memcpy, CODE XREF=printf_parse+2778
0000000000006be5         shl        rax, 0x5
0000000000006be9         mov        rdi, rcx                                    ; argument "__dest" for method j_memcpy
0000000000006bec         mov        rdx, rax                                    ; argument "__n" for method j_memcpy
0000000000006bef         mov        qword [rsp+0x88+var_40], r9
0000000000006bf4         mov        qword [rsp+0x88+var_48], r10
0000000000006bf9         mov        qword [rsp+0x88+var_50], r8
0000000000006bfe         mov        qword [rsp+0x88+var_58], r11
0000000000006c03         call       j_memcpy                                    ; memcpy
0000000000006c08         mov        r9, qword [rsp+0x88+var_40]
0000000000006c0d         mov        rcx, rax
0000000000006c10         mov        r10, qword [rsp+0x88+var_48]
0000000000006c15         mov        rax, qword [r15]
0000000000006c18         mov        r8, qword [rsp+0x88+var_50]
0000000000006c1d         mov        r11, qword [rsp+0x88+var_58]
0000000000006c22         jmp        loc_6a20

                     loc_6c27:
0000000000006c27         mov        rcx, rdx                                    ; CODE XREF=printf_parse+1071, printf_parse+2764
0000000000006c2a         jmp        loc_6bcb
0000000000006c2c         align      16                                          ; End of unwind block (FDE at 0x8a5c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
0000000000006c30         push       r15                                         ; Begin of unwind block (FDE at 0x8aac), DATA XREF=_start+22
0000000000006c32         push       r14
0000000000006c34         mov        r15, rdx
0000000000006c37         push       r13
0000000000006c39         push       r12
0000000000006c3b         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
0000000000006c42         push       rbp
0000000000006c43         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
0000000000006c4a         push       rbx
0000000000006c4b         mov        r13d, edi
0000000000006c4e         mov        r14, rsi
0000000000006c51         sub        rbp, r12
0000000000006c54         sub        rsp, 0x8
0000000000006c58         sar        rbp, 0x3
0000000000006c5c         call       _init                                       ; _init
0000000000006c61         test       rbp, rbp
0000000000006c64         je         loc_6c86

0000000000006c66         xor        ebx, ebx
0000000000006c68         nop        dword [rax+rax]

                     loc_6c70:
0000000000006c70         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
0000000000006c73         mov        rsi, r14
0000000000006c76         mov        edi, r13d
0000000000006c79         call       qword [r12+rbx*8]
0000000000006c7d         add        rbx, 0x1
0000000000006c81         cmp        rbp, rbx
0000000000006c84         jne        loc_6c70

                     loc_6c86:
0000000000006c86         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
0000000000006c8a         pop        rbx
0000000000006c8b         pop        rbp
0000000000006c8c         pop        r12
0000000000006c8e         pop        r13
0000000000006c90         pop        r14
0000000000006c92         pop        r15
0000000000006c94         ret
                        ; endp
0000000000006c95         align      32                                          ; End of unwind block (FDE at 0x8aac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
0000000000006ca0         ret                                                    ; Begin of unwind block (FDE at 0x8af4), DATA XREF=_start+15
                        ; endp
0000000000006ca2         align      16                                          ; End of unwind block (FDE at 0x8af4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
0000000000006cb0         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0x8b0c), __dso_handle, CODE XREF=main+89
0000000000006cb7         xor        esi, esi
0000000000006cb9         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
0000000000006cbe         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x8b0c)
0000000000006cbf         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x6cc0; 0x6cc9[ (9 bytes)
        ; File offset : [27840; 27849[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
0000000000006cc0         sub        rsp, 0x8
0000000000006cc4         add        rsp, 0x8
0000000000006cc8         ret
                        ; endp
0000000000006cc9         db  0x00 ; '.'
0000000000006cca         db  0x00 ; '.'
0000000000006ccb         db  0x00 ; '.'
0000000000006ccc         db  0x00 ; '.'
0000000000006ccd         db  0x00 ; '.'
0000000000006cce         db  0x00 ; '.'
0000000000006ccf         db  0x00 ; '.'
0000000000006cd0         db  0x00 ; '.'
0000000000006cd1         db  0x00 ; '.'
0000000000006cd2         db  0x00 ; '.'
0000000000006cd3         db  0x00 ; '.'
0000000000006cd4         db  0x00 ; '.'
0000000000006cd5         db  0x00 ; '.'
0000000000006cd6         db  0x00 ; '.'
0000000000006cd7         db  0x00 ; '.'
0000000000006cd8         db  0x00 ; '.'
0000000000006cd9         db  0x00 ; '.'
0000000000006cda         db  0x00 ; '.'
0000000000006cdb         db  0x00 ; '.'
0000000000006cdc         db  0x00 ; '.'
0000000000006cdd         db  0x00 ; '.'
0000000000006cde         db  0x00 ; '.'
0000000000006cdf         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x6ce0; 0x7c2c[ (3916 bytes)
        ; File offset : [27872; 31788[ (3916 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
0000000000006ce0         db  0x01 ; '.'
0000000000006ce1         db  0x00 ; '.'
0000000000006ce2         db  0x02 ; '.'
0000000000006ce3         db  0x00 ; '.'
                     aRmdir:
0000000000006ce4         db         "rmdir", 0                                  ; DATA XREF=main+199, usage+268, usage+588, usage+772, usage+791, usage+825
0000000000006cea         db  0x5b ; '['                                         ; DATA XREF=usage+280
0000000000006ceb         db  0x00 ; '.'
                     aTestInvocation:
0000000000006cec         db         "test invocation", 0                        ; DATA XREF=usage+319
                     aMulticallInvoc:
0000000000006cfc         db         "Multi-call invocation", 0                  ; DATA XREF=usage+367
                     aSha224sum:
0000000000006d12         db         "sha224sum", 0                              ; DATA XREF=usage+384
                     aSha2Utilities:
0000000000006d1c         db         "sha2 utilities", 0                         ; DATA XREF=usage+396
                     aSha256sum:
0000000000006d2b         db         "sha256sum", 0                              ; DATA XREF=usage+287
                     aSha384sum:
0000000000006d35         db         "sha384sum", 0                              ; DATA XREF=usage+331
                     aSha512sum:
0000000000006d3f         db         "sha512sum", 0                              ; DATA XREF=usage+355
                     aNsOnlineHelpSn:
0000000000006d49         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+474
0000000000006d60         db  0x47 ; 'G'                                         ; DATA XREF=main+192, usage+502, usage+695, emit_bug_reporting_address+68
0000000000006d61         db  0x4e ; 'N'
0000000000006d62         db  0x55 ; 'U'
0000000000006d63         db  0x20 ; ' '
                     aCoreutils:
0000000000006d64         db         "coreutils", 0                              ; DATA XREF=main+58, main+70, usage+343
0000000000006d6e         db  0x65 ; 'e'                                         ; DATA XREF=usage+541, usage+734
0000000000006d6f         db  0x6e ; 'n'
0000000000006d70         db  0x5f ; '_'
0000000000006d71         db  0x00 ; '.'
                     aFullDocumentat:
0000000000006d72         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+569, usage+758
                     aUsrlocalsharel:
0000000000006d8d         db         "/usr/local/share/locale", 0                ; DATA XREF=main+51
                     aDavidMackenzie:
0000000000006da5         db         "David MacKenzie", 0                        ; DATA XREF=main+185
0000000000006db5         db  0x70 ; 'p'                                         ; DATA XREF=main+101
0000000000006db6         db  0x76 ; 'v'
0000000000006db7         db  0x00 ; '.'
                     aMissingOperand:
0000000000006db8         db         "missing operand", 0                        ; DATA XREF=main+763
                     aRemovingDirect:
0000000000006dc8         db         "removing directory, %s", 0                 ; DATA XREF=main+368, main+682
                     aFailedToRemove_6ddf:        // aFailedToRemove
0000000000006ddf         db         "failed to remove %s", 0                    ; DATA XREF=main+447
                     aFailedToRemove:
0000000000006df3         db         "failed to remove directory %s", 0          ; DATA XREF=main+618
                     aIgnorefailonno:
0000000000006e11         db         "ignore-fail-on-non-empty", 0
                     aPath:
0000000000006e2a         db         "path", 0
                     aParents:
0000000000006e2f         db         "parents", 0
                     aVerbose:
0000000000006e37         db         "verbose", 0
                     aHelp:
0000000000006e3f         db         "help", 0
                     aVersion:
0000000000006e44         db         "version", 0
0000000000006e4c         align      16
                     aTrySHelpForMor:
0000000000006e50         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
0000000000006e77         align      8
                     aUsageSOptionDi:
0000000000006e78         db         "Usage: %s [OPTION]... DIRECTORY...\n", 0   ; DATA XREF=usage+93
0000000000006e9c         align      32
                     aRemoveTheDirec:
0000000000006ea0         db         "Remove the DIRECTORY(ies), if they are empty.\n\n      --ignore-fail-on-non-empty\n                  ignore each failure that is solely because a directory\n                    is non-empty\n", 0 ; DATA XREF=usage+132
0000000000006f5b         align      32
                     aPParentsRemove:
0000000000006f60         db         "  -p, --parents   remove DIRECTORY and its ancestors; e.g., 'rmdir -p a/b/c' is\n                    similar to 'rmdir a/b/c a/b a'\n  -v, --verbose   output a diagnostic for every directory processed\n", 0 ; DATA XREF=usage+169
                     aHelpDisplayThi:
0000000000007028         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+206
0000000000007055         align      8
                     aVersionOutputV:
0000000000007058         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+243
000000000000708e         align      16
                     aHttpswwwgnuorg:
0000000000007090         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+495, usage+595, usage+688, usage+798, emit_bug_reporting_address+61
                     aReportAnyTrans:
00000000000070b8         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+839
00000000000070ff         align      256
                     aOrAvailableLoc:
0000000000007100         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+638
0000000000007133         db  0x3a ; ':'                                         ; DATA XREF=prog_fprintf+125
0000000000007134         db  0x20 ; ' '
0000000000007135         db  0x00 ; '.'
                     a831:
0000000000007136         db         "8.31", 0                                   ; DATA XREF=Version
                     aWriteError:
000000000000713b         db         "write error", 0                            ; DATA XREF=close_stdout+67
                     aSS:
0000000000007147         db         "%s: %s", 0                                 ; DATA XREF=close_stdout+108
000000000000714e         align      16
                     aANullArgv0WasP:
0000000000007150         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
0000000000007188         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
0000000000007190         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
0000000000007191         db  0x74 ; 't'
0000000000007192         db  0x2d ; '-'
0000000000007193         db  0x00 ; '.'
0000000000007194         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
0000000000007195         db  0x80 ; '.'
0000000000007196         db  0x98 ; '.'
0000000000007197         db  0x00 ; '.'
0000000000007198         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
0000000000007199         db  0x80 ; '.'
000000000000719a         db  0x99 ; '.'
000000000000719b         db  0x00 ; '.'
000000000000719c         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
000000000000719d         db  0x07 ; '.'
000000000000719e         db  0x65 ; 'e'
000000000000719f         db  0x00 ; '.'
00000000000071a0         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
00000000000071a1         db  0xaf ; '.'
00000000000071a2         db  0x00 ; '.'
00000000000071a3         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_2a80+1451, sub_2a80+1493, sub_2a80+2429
00000000000071a4         db  0x00 ; '.'
00000000000071a5         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_2a80+132, sub_2a80+1338, sub_2a80+1670, sub_2a80+1697, sub_2a80+2352
00000000000071a6         db  0x00 ; '.'
00000000000071a7         db  0x60 ; '`'                                         ; DATA XREF=sub_2a80+1627, sub_2a80+1654
00000000000071a8         db  0x00 ; '.'
                     aLiteral:
00000000000071a9         db         "literal", 0
                     aShell:
00000000000071b1         db         "shell", 0
                     aShellalways:
00000000000071b7         db         "shell-always", 0
00000000000071c4         db  0x73 ; 's'
00000000000071c5         db  0x68 ; 'h'
00000000000071c6         db  0x65 ; 'e'
00000000000071c7         db  0x6c ; 'l'
00000000000071c8         db  0x6c ; 'l'
00000000000071c9         db  0x2d ; '-'
                     aEscape:
00000000000071ca         db         "escape", 0
                     aShellescapealw:
00000000000071d1         db         "shell-escape-always", 0
00000000000071e5         db  0x63 ; 'c'
00000000000071e6         db  0x00 ; '.'
                     aCmaybe:
00000000000071e7         db         "c-maybe", 0
                     aClocale:
00000000000071ef         db         "clocale", 0
00000000000071f7         align      512
                     switch_table_7200:        // switch_table
0000000000007200         dd         quotearg_buffer_restyled.loc_317a-switch_table_7200, quotearg_buffer_restyled.loc_23d3-switch_table_7200, quotearg_buffer_restyled.loc_33a8-switch_table_7200, quotearg_buffer_restyled.loc_31b4-switch_table_7200 ; switch table used at 0x23d1 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
0000000000007210         dd         quotearg_buffer_restyled.loc_2fa4-switch_table_7200, quotearg_buffer_restyled.loc_3000-switch_table_7200, quotearg_buffer_restyled.loc_3055-switch_table_7200, quotearg_buffer_restyled.loc_309a-switch_table_7200
0000000000007220         dd         3 dup (quotearg_buffer_restyled.loc_30d4-switch_table_7200)
000000000000722c         db  0x24 ; '$'                                         ; DATA XREF=quotearg_buffer_restyled+477
000000000000722d         db  0xb5 ; '.'
000000000000722e         db  0xff ; '.'
000000000000722f         db  0xff ; '.'
0000000000007230         db  0x0c ; '.'
0000000000007231         db  0xb6 ; '.'
0000000000007232         db  0xff ; '.'
0000000000007233         db  0xff ; '.'
0000000000007234         db  0x0c ; '.'
0000000000007235         db  0xb6 ; '.'
0000000000007236         db  0xff ; '.'
0000000000007237         db  0xff ; '.'
0000000000007238         db  0x0c ; '.'
0000000000007239         db  0xb6 ; '.'
000000000000723a         db  0xff ; '.'
000000000000723b         db  0xff ; '.'
000000000000723c         db  0x0c ; '.'
000000000000723d         db  0xb6 ; '.'
000000000000723e         db  0xff ; '.'
000000000000723f         db  0xff ; '.'
0000000000007240         db  0x0c ; '.'
0000000000007241         db  0xb6 ; '.'
0000000000007242         db  0xff ; '.'
0000000000007243         db  0xff ; '.'
0000000000007244         db  0x0c ; '.'
0000000000007245         db  0xb6 ; '.'
0000000000007246         db  0xff ; '.'
0000000000007247         db  0xff ; '.'
0000000000007248         db  0x64 ; 'd'
0000000000007249         db  0xb5 ; '.'
000000000000724a         db  0xff ; '.'
000000000000724b         db  0xff ; '.'
000000000000724c         db  0x6c ; 'l'
000000000000724d         db  0xb4 ; '.'
000000000000724e         db  0xff ; '.'
000000000000724f         db  0xff ; '.'
0000000000007250         db  0x2c ; ','
0000000000007251         db  0xb4 ; '.'
0000000000007252         db  0xff ; '.'
0000000000007253         db  0xff ; '.'
0000000000007254         db  0xf4 ; '.'
0000000000007255         db  0xb5 ; '.'
0000000000007256         db  0xff ; '.'
0000000000007257         db  0xff ; '.'
0000000000007258         db  0xe4 ; '.'
0000000000007259         db  0xb5 ; '.'
000000000000725a         db  0xff ; '.'
000000000000725b         db  0xff ; '.'
000000000000725c         db  0xd4 ; '.'
000000000000725d         db  0xb5 ; '.'
000000000000725e         db  0xff ; '.'
000000000000725f         db  0xff ; '.'
0000000000007260         db  0xc4 ; '.'
0000000000007261         db  0xb5 ; '.'
0000000000007262         db  0xff ; '.'
0000000000007263         db  0xff ; '.'
0000000000007264         db  0x0c ; '.'
0000000000007265         db  0xb6 ; '.'
0000000000007266         db  0xff ; '.'
0000000000007267         db  0xff ; '.'
0000000000007268         db  0x0c ; '.'
0000000000007269         db  0xb6 ; '.'
000000000000726a         db  0xff ; '.'
000000000000726b         db  0xff ; '.'
000000000000726c         db  0x0c ; '.'
000000000000726d         db  0xb6 ; '.'
000000000000726e         db  0xff ; '.'
000000000000726f         db  0xff ; '.'
0000000000007270         db  0x0c ; '.'
0000000000007271         db  0xb6 ; '.'
0000000000007272         db  0xff ; '.'
0000000000007273         db  0xff ; '.'
0000000000007274         db  0x0c ; '.'
0000000000007275         db  0xb6 ; '.'
0000000000007276         db  0xff ; '.'
0000000000007277         db  0xff ; '.'
0000000000007278         db  0x0c ; '.'
0000000000007279         db  0xb6 ; '.'
000000000000727a         db  0xff ; '.'
000000000000727b         db  0xff ; '.'
000000000000727c         db  0x0c ; '.'
000000000000727d         db  0xb6 ; '.'
000000000000727e         db  0xff ; '.'
000000000000727f         db  0xff ; '.'
0000000000007280         db  0x0c ; '.'
0000000000007281         db  0xb6 ; '.'
0000000000007282         db  0xff ; '.'
0000000000007283         db  0xff ; '.'
0000000000007284         db  0x0c ; '.'
0000000000007285         db  0xb6 ; '.'
0000000000007286         db  0xff ; '.'
0000000000007287         db  0xff ; '.'
0000000000007288         db  0x0c ; '.'
0000000000007289         db  0xb6 ; '.'
000000000000728a         db  0xff ; '.'
000000000000728b         db  0xff ; '.'
000000000000728c         db  0x0c ; '.'
000000000000728d         db  0xb6 ; '.'
000000000000728e         db  0xff ; '.'
000000000000728f         db  0xff ; '.'
0000000000007290         db  0x0c ; '.'
0000000000007291         db  0xb6 ; '.'
0000000000007292         db  0xff ; '.'
0000000000007293         db  0xff ; '.'
0000000000007294         db  0x0c ; '.'
0000000000007295         db  0xb6 ; '.'
0000000000007296         db  0xff ; '.'
0000000000007297         db  0xff ; '.'
0000000000007298         db  0x0c ; '.'
0000000000007299         db  0xb6 ; '.'
000000000000729a         db  0xff ; '.'
000000000000729b         db  0xff ; '.'
000000000000729c         db  0x0c ; '.'
000000000000729d         db  0xb6 ; '.'
000000000000729e         db  0xff ; '.'
000000000000729f         db  0xff ; '.'
00000000000072a0         db  0x0c ; '.'
00000000000072a1         db  0xb6 ; '.'
00000000000072a2         db  0xff ; '.'
00000000000072a3         db  0xff ; '.'
00000000000072a4         db  0x0c ; '.'
00000000000072a5         db  0xb6 ; '.'
00000000000072a6         db  0xff ; '.'
00000000000072a7         db  0xff ; '.'
00000000000072a8         db  0x0c ; '.'
00000000000072a9         db  0xb6 ; '.'
00000000000072aa         db  0xff ; '.'
00000000000072ab         db  0xff ; '.'
00000000000072ac         db  0xb4 ; '.'
00000000000072ad         db  0xb5 ; '.'
00000000000072ae         db  0xff ; '.'
00000000000072af         db  0xff ; '.'
00000000000072b0         db  0xa4 ; '.'
00000000000072b1         db  0xb5 ; '.'
00000000000072b2         db  0xff ; '.'
00000000000072b3         db  0xff ; '.'
00000000000072b4         db  0xa4 ; '.'
00000000000072b5         db  0xb5 ; '.'
00000000000072b6         db  0xff ; '.'
00000000000072b7         db  0xff ; '.'
00000000000072b8         db  0x74 ; 't'
00000000000072b9         db  0xb5 ; '.'
00000000000072ba         db  0xff ; '.'
00000000000072bb         db  0xff ; '.'
00000000000072bc         db  0xa4 ; '.'
00000000000072bd         db  0xb5 ; '.'
00000000000072be         db  0xff ; '.'
00000000000072bf         db  0xff ; '.'
00000000000072c0         db  0x4c ; 'L'
00000000000072c1         db  0xb5 ; '.'
00000000000072c2         db  0xff ; '.'
00000000000072c3         db  0xff ; '.'
00000000000072c4         db  0xa4 ; '.'
00000000000072c5         db  0xb5 ; '.'
00000000000072c6         db  0xff ; '.'
00000000000072c7         db  0xff ; '.'
00000000000072c8         db  0x07 ; '.'
00000000000072c9         db  0xb4 ; '.'
00000000000072ca         db  0xff ; '.'
00000000000072cb         db  0xff ; '.'
00000000000072cc         db  0xa4 ; '.'
00000000000072cd         db  0xb5 ; '.'
00000000000072ce         db  0xff ; '.'
00000000000072cf         db  0xff ; '.'
00000000000072d0         db  0xa4 ; '.'
00000000000072d1         db  0xb5 ; '.'
00000000000072d2         db  0xff ; '.'
00000000000072d3         db  0xff ; '.'
00000000000072d4         db  0xa4 ; '.'
00000000000072d5         db  0xb5 ; '.'
00000000000072d6         db  0xff ; '.'
00000000000072d7         db  0xff ; '.'
00000000000072d8         db  0x4c ; 'L'
00000000000072d9         db  0xb5 ; '.'
00000000000072da         db  0xff ; '.'
00000000000072db         db  0xff ; '.'
00000000000072dc         db  0x4c ; 'L'
00000000000072dd         db  0xb5 ; '.'
00000000000072de         db  0xff ; '.'
00000000000072df         db  0xff ; '.'
00000000000072e0         db  0x4c ; 'L'
00000000000072e1         db  0xb5 ; '.'
00000000000072e2         db  0xff ; '.'
00000000000072e3         db  0xff ; '.'
00000000000072e4         db  0x4c ; 'L'
00000000000072e5         db  0xb5 ; '.'
00000000000072e6         db  0xff ; '.'
00000000000072e7         db  0xff ; '.'
00000000000072e8         db  0x4c ; 'L'
00000000000072e9         db  0xb5 ; '.'
00000000000072ea         db  0xff ; '.'
00000000000072eb         db  0xff ; '.'
00000000000072ec         db  0x4c ; 'L'
00000000000072ed         db  0xb5 ; '.'
00000000000072ee         db  0xff ; '.'
00000000000072ef         db  0xff ; '.'
00000000000072f0         db  0x4c ; 'L'
00000000000072f1         db  0xb5 ; '.'
00000000000072f2         db  0xff ; '.'
00000000000072f3         db  0xff ; '.'
00000000000072f4         db  0x4c ; 'L'
00000000000072f5         db  0xb5 ; '.'
00000000000072f6         db  0xff ; '.'
00000000000072f7         db  0xff ; '.'
00000000000072f8         db  0x4c ; 'L'
00000000000072f9         db  0xb5 ; '.'
00000000000072fa         db  0xff ; '.'
00000000000072fb         db  0xff ; '.'
00000000000072fc         db  0x4c ; 'L'
00000000000072fd         db  0xb5 ; '.'
00000000000072fe         db  0xff ; '.'
00000000000072ff         db  0xff ; '.'
0000000000007300         db  0x4c ; 'L'
0000000000007301         db  0xb5 ; '.'
0000000000007302         db  0xff ; '.'
0000000000007303         db  0xff ; '.'
0000000000007304         db  0x4c ; 'L'
0000000000007305         db  0xb5 ; '.'
0000000000007306         db  0xff ; '.'
0000000000007307         db  0xff ; '.'
0000000000007308         db  0x4c ; 'L'
0000000000007309         db  0xb5 ; '.'
000000000000730a         db  0xff ; '.'
000000000000730b         db  0xff ; '.'
000000000000730c         db  0x4c ; 'L'
000000000000730d         db  0xb5 ; '.'
000000000000730e         db  0xff ; '.'
000000000000730f         db  0xff ; '.'
0000000000007310         db  0x4c ; 'L'
0000000000007311         db  0xb5 ; '.'
0000000000007312         db  0xff ; '.'
0000000000007313         db  0xff ; '.'
0000000000007314         db  0x4c ; 'L'
0000000000007315         db  0xb5 ; '.'
0000000000007316         db  0xff ; '.'
0000000000007317         db  0xff ; '.'
0000000000007318         db  0xa4 ; '.'
0000000000007319         db  0xb5 ; '.'
000000000000731a         db  0xff ; '.'
000000000000731b         db  0xff ; '.'
000000000000731c         db  0xa4 ; '.'
000000000000731d         db  0xb5 ; '.'
000000000000731e         db  0xff ; '.'
000000000000731f         db  0xff ; '.'
0000000000007320         db  0xa4 ; '.'
0000000000007321         db  0xb5 ; '.'
0000000000007322         db  0xff ; '.'
0000000000007323         db  0xff ; '.'
0000000000007324         db  0xa4 ; '.'
0000000000007325         db  0xb5 ; '.'
0000000000007326         db  0xff ; '.'
0000000000007327         db  0xff ; '.'
0000000000007328         db  0xd7 ; '.'
0000000000007329         db  0xb3 ; '.'
000000000000732a         db  0xff ; '.'
000000000000732b         db  0xff ; '.'
000000000000732c         db  0x0c ; '.'
000000000000732d         db  0xb6 ; '.'
000000000000732e         db  0xff ; '.'
000000000000732f         db  0xff ; '.'
0000000000007330         db  0x4c ; 'L'
0000000000007331         db  0xb5 ; '.'
0000000000007332         db  0xff ; '.'
0000000000007333         db  0xff ; '.'
0000000000007334         db  0x4c ; 'L'
0000000000007335         db  0xb5 ; '.'
0000000000007336         db  0xff ; '.'
0000000000007337         db  0xff ; '.'
0000000000007338         db  0x4c ; 'L'
0000000000007339         db  0xb5 ; '.'
000000000000733a         db  0xff ; '.'
000000000000733b         db  0xff ; '.'
000000000000733c         db  0x4c ; 'L'
000000000000733d         db  0xb5 ; '.'
000000000000733e         db  0xff ; '.'
000000000000733f         db  0xff ; '.'
0000000000007340         db  0x4c ; 'L'
0000000000007341         db  0xb5 ; '.'
0000000000007342         db  0xff ; '.'
0000000000007343         db  0xff ; '.'
0000000000007344         db  0x4c ; 'L'
0000000000007345         db  0xb5 ; '.'
0000000000007346         db  0xff ; '.'
0000000000007347         db  0xff ; '.'
0000000000007348         db  0x4c ; 'L'
0000000000007349         db  0xb5 ; '.'
000000000000734a         db  0xff ; '.'
000000000000734b         db  0xff ; '.'
000000000000734c         db  0x4c ; 'L'
000000000000734d         db  0xb5 ; '.'
000000000000734e         db  0xff ; '.'
000000000000734f         db  0xff ; '.'
0000000000007350         db  0x4c ; 'L'
0000000000007351         db  0xb5 ; '.'
0000000000007352         db  0xff ; '.'
0000000000007353         db  0xff ; '.'
0000000000007354         db  0x4c ; 'L'
0000000000007355         db  0xb5 ; '.'
0000000000007356         db  0xff ; '.'
0000000000007357         db  0xff ; '.'
0000000000007358         db  0x4c ; 'L'
0000000000007359         db  0xb5 ; '.'
000000000000735a         db  0xff ; '.'
000000000000735b         db  0xff ; '.'
000000000000735c         db  0x4c ; 'L'
000000000000735d         db  0xb5 ; '.'
000000000000735e         db  0xff ; '.'
000000000000735f         db  0xff ; '.'
0000000000007360         db  0x4c ; 'L'
0000000000007361         db  0xb5 ; '.'
0000000000007362         db  0xff ; '.'
0000000000007363         db  0xff ; '.'
0000000000007364         db  0x4c ; 'L'
0000000000007365         db  0xb5 ; '.'
0000000000007366         db  0xff ; '.'
0000000000007367         db  0xff ; '.'
0000000000007368         db  0x4c ; 'L'
0000000000007369         db  0xb5 ; '.'
000000000000736a         db  0xff ; '.'
000000000000736b         db  0xff ; '.'
000000000000736c         db  0x4c ; 'L'
000000000000736d         db  0xb5 ; '.'
000000000000736e         db  0xff ; '.'
000000000000736f         db  0xff ; '.'
0000000000007370         db  0x4c ; 'L'
0000000000007371         db  0xb5 ; '.'
0000000000007372         db  0xff ; '.'
0000000000007373         db  0xff ; '.'
0000000000007374         db  0x4c ; 'L'
0000000000007375         db  0xb5 ; '.'
0000000000007376         db  0xff ; '.'
0000000000007377         db  0xff ; '.'
0000000000007378         db  0x4c ; 'L'
0000000000007379         db  0xb5 ; '.'
000000000000737a         db  0xff ; '.'
000000000000737b         db  0xff ; '.'
000000000000737c         db  0x4c ; 'L'
000000000000737d         db  0xb5 ; '.'
000000000000737e         db  0xff ; '.'
000000000000737f         db  0xff ; '.'
0000000000007380         db  0x4c ; 'L'
0000000000007381         db  0xb5 ; '.'
0000000000007382         db  0xff ; '.'
0000000000007383         db  0xff ; '.'
0000000000007384         db  0x4c ; 'L'
0000000000007385         db  0xb5 ; '.'
0000000000007386         db  0xff ; '.'
0000000000007387         db  0xff ; '.'
0000000000007388         db  0x4c ; 'L'
0000000000007389         db  0xb5 ; '.'
000000000000738a         db  0xff ; '.'
000000000000738b         db  0xff ; '.'
000000000000738c         db  0x4c ; 'L'
000000000000738d         db  0xb5 ; '.'
000000000000738e         db  0xff ; '.'
000000000000738f         db  0xff ; '.'
0000000000007390         db  0x4c ; 'L'
0000000000007391         db  0xb5 ; '.'
0000000000007392         db  0xff ; '.'
0000000000007393         db  0xff ; '.'
0000000000007394         db  0x4c ; 'L'
0000000000007395         db  0xb5 ; '.'
0000000000007396         db  0xff ; '.'
0000000000007397         db  0xff ; '.'
0000000000007398         db  0xa4 ; '.'
0000000000007399         db  0xb5 ; '.'
000000000000739a         db  0xff ; '.'
000000000000739b         db  0xff ; '.'
000000000000739c         db  0x7c ; '|'
000000000000739d         db  0xb4 ; '.'
000000000000739e         db  0xff ; '.'
000000000000739f         db  0xff ; '.'
00000000000073a0         db  0x4c ; 'L'
00000000000073a1         db  0xb5 ; '.'
00000000000073a2         db  0xff ; '.'
00000000000073a3         db  0xff ; '.'
00000000000073a4         db  0xa4 ; '.'
00000000000073a5         db  0xb5 ; '.'
00000000000073a6         db  0xff ; '.'
00000000000073a7         db  0xff ; '.'
00000000000073a8         db  0x4c ; 'L'
00000000000073a9         db  0xb5 ; '.'
00000000000073aa         db  0xff ; '.'
00000000000073ab         db  0xff ; '.'
00000000000073ac         db  0xa4 ; '.'
00000000000073ad         db  0xb5 ; '.'
00000000000073ae         db  0xff ; '.'
00000000000073af         db  0xff ; '.'
00000000000073b0         db  0x4c ; 'L'
00000000000073b1         db  0xb5 ; '.'
00000000000073b2         db  0xff ; '.'
00000000000073b3         db  0xff ; '.'
00000000000073b4         db  0x4c ; 'L'
00000000000073b5         db  0xb5 ; '.'
00000000000073b6         db  0xff ; '.'
00000000000073b7         db  0xff ; '.'
00000000000073b8         db  0x4c ; 'L'
00000000000073b9         db  0xb5 ; '.'
00000000000073ba         db  0xff ; '.'
00000000000073bb         db  0xff ; '.'
00000000000073bc         db  0x4c ; 'L'
00000000000073bd         db  0xb5 ; '.'
00000000000073be         db  0xff ; '.'
00000000000073bf         db  0xff ; '.'
00000000000073c0         db  0x4c ; 'L'
00000000000073c1         db  0xb5 ; '.'
00000000000073c2         db  0xff ; '.'
00000000000073c3         db  0xff ; '.'
00000000000073c4         db  0x4c ; 'L'
00000000000073c5         db  0xb5 ; '.'
00000000000073c6         db  0xff ; '.'
00000000000073c7         db  0xff ; '.'
00000000000073c8         db  0x4c ; 'L'
00000000000073c9         db  0xb5 ; '.'
00000000000073ca         db  0xff ; '.'
00000000000073cb         db  0xff ; '.'
00000000000073cc         db  0x4c ; 'L'
00000000000073cd         db  0xb5 ; '.'
00000000000073ce         db  0xff ; '.'
00000000000073cf         db  0xff ; '.'
00000000000073d0         db  0x4c ; 'L'
00000000000073d1         db  0xb5 ; '.'
00000000000073d2         db  0xff ; '.'
00000000000073d3         db  0xff ; '.'
00000000000073d4         db  0x4c ; 'L'
00000000000073d5         db  0xb5 ; '.'
00000000000073d6         db  0xff ; '.'
00000000000073d7         db  0xff ; '.'
00000000000073d8         db  0x4c ; 'L'
00000000000073d9         db  0xb5 ; '.'
00000000000073da         db  0xff ; '.'
00000000000073db         db  0xff ; '.'
00000000000073dc         db  0x4c ; 'L'
00000000000073dd         db  0xb5 ; '.'
00000000000073de         db  0xff ; '.'
00000000000073df         db  0xff ; '.'
00000000000073e0         db  0x4c ; 'L'
00000000000073e1         db  0xb5 ; '.'
00000000000073e2         db  0xff ; '.'
00000000000073e3         db  0xff ; '.'
00000000000073e4         db  0x4c ; 'L'
00000000000073e5         db  0xb5 ; '.'
00000000000073e6         db  0xff ; '.'
00000000000073e7         db  0xff ; '.'
00000000000073e8         db  0x4c ; 'L'
00000000000073e9         db  0xb5 ; '.'
00000000000073ea         db  0xff ; '.'
00000000000073eb         db  0xff ; '.'
00000000000073ec         db  0x4c ; 'L'
00000000000073ed         db  0xb5 ; '.'
00000000000073ee         db  0xff ; '.'
00000000000073ef         db  0xff ; '.'
00000000000073f0         db  0x4c ; 'L'
00000000000073f1         db  0xb5 ; '.'
00000000000073f2         db  0xff ; '.'
00000000000073f3         db  0xff ; '.'
00000000000073f4         db  0x4c ; 'L'
00000000000073f5         db  0xb5 ; '.'
00000000000073f6         db  0xff ; '.'
00000000000073f7         db  0xff ; '.'
00000000000073f8         db  0x4c ; 'L'
00000000000073f9         db  0xb5 ; '.'
00000000000073fa         db  0xff ; '.'
00000000000073fb         db  0xff ; '.'
00000000000073fc         db  0x4c ; 'L'
00000000000073fd         db  0xb5 ; '.'
00000000000073fe         db  0xff ; '.'
00000000000073ff         db  0xff ; '.'
0000000000007400         db  0x4c ; 'L'
0000000000007401         db  0xb5 ; '.'
0000000000007402         db  0xff ; '.'
0000000000007403         db  0xff ; '.'
0000000000007404         db  0x4c ; 'L'
0000000000007405         db  0xb5 ; '.'
0000000000007406         db  0xff ; '.'
0000000000007407         db  0xff ; '.'
0000000000007408         db  0x4c ; 'L'
0000000000007409         db  0xb5 ; '.'
000000000000740a         db  0xff ; '.'
000000000000740b         db  0xff ; '.'
000000000000740c         db  0x4c ; 'L'
000000000000740d         db  0xb5 ; '.'
000000000000740e         db  0xff ; '.'
000000000000740f         db  0xff ; '.'
0000000000007410         db  0x4c ; 'L'
0000000000007411         db  0xb5 ; '.'
0000000000007412         db  0xff ; '.'
0000000000007413         db  0xff ; '.'
0000000000007414         db  0x4c ; 'L'
0000000000007415         db  0xb5 ; '.'
0000000000007416         db  0xff ; '.'
0000000000007417         db  0xff ; '.'
0000000000007418         db  0x07 ; '.'
0000000000007419         db  0xb3 ; '.'
000000000000741a         db  0xff ; '.'
000000000000741b         db  0xff ; '.'
000000000000741c         db  0xa4 ; '.'
000000000000741d         db  0xb5 ; '.'
000000000000741e         db  0xff ; '.'
000000000000741f         db  0xff ; '.'
0000000000007420         db  0x07 ; '.'
0000000000007421         db  0xb3 ; '.'
0000000000007422         db  0xff ; '.'
0000000000007423         db  0xff ; '.'
0000000000007424         db  0x74 ; 't'
0000000000007425         db  0xb5 ; '.'
0000000000007426         db  0xff ; '.'
0000000000007427         db  0xff ; '.'
0000000000007428         db  0xf8 ; '.'                                         ; DATA XREF=sub_2820+137
0000000000007429         db  0xb4 ; '.'
000000000000742a         db  0xff ; '.'
000000000000742b         db  0xff ; '.'
000000000000742c         db  0x08 ; '.'
000000000000742d         db  0xb4 ; '.'
000000000000742e         db  0xff ; '.'
000000000000742f         db  0xff ; '.'
0000000000007430         db  0x08 ; '.'
0000000000007431         db  0xb4 ; '.'
0000000000007432         db  0xff ; '.'
0000000000007433         db  0xff ; '.'
0000000000007434         db  0x08 ; '.'
0000000000007435         db  0xb4 ; '.'
0000000000007436         db  0xff ; '.'
0000000000007437         db  0xff ; '.'
0000000000007438         db  0x08 ; '.'
0000000000007439         db  0xb4 ; '.'
000000000000743a         db  0xff ; '.'
000000000000743b         db  0xff ; '.'
000000000000743c         db  0x08 ; '.'
000000000000743d         db  0xb4 ; '.'
000000000000743e         db  0xff ; '.'
000000000000743f         db  0xff ; '.'
0000000000007440         db  0x08 ; '.'
0000000000007441         db  0xb4 ; '.'
0000000000007442         db  0xff ; '.'
0000000000007443         db  0xff ; '.'
0000000000007444         db  0xe8 ; '.'
0000000000007445         db  0xb4 ; '.'
0000000000007446         db  0xff ; '.'
0000000000007447         db  0xff ; '.'
0000000000007448         db  0x38 ; '8'
0000000000007449         db  0xb6 ; '.'
000000000000744a         db  0xff ; '.'
000000000000744b         db  0xff ; '.'
000000000000744c         db  0x20 ; ' '
000000000000744d         db  0xb6 ; '.'
000000000000744e         db  0xff ; '.'
000000000000744f         db  0xff ; '.'
0000000000007450         db  0xd0 ; '.'
0000000000007451         db  0xb4 ; '.'
0000000000007452         db  0xff ; '.'
0000000000007453         db  0xff ; '.'
0000000000007454         db  0x10 ; '.'
0000000000007455         db  0xb6 ; '.'
0000000000007456         db  0xff ; '.'
0000000000007457         db  0xff ; '.'
0000000000007458         db  0xb8 ; '.'
0000000000007459         db  0xb4 ; '.'
000000000000745a         db  0xff ; '.'
000000000000745b         db  0xff ; '.'
000000000000745c         db  0xf8 ; '.'
000000000000745d         db  0xb5 ; '.'
000000000000745e         db  0xff ; '.'
000000000000745f         db  0xff ; '.'
0000000000007460         db  0x08 ; '.'
0000000000007461         db  0xb4 ; '.'
0000000000007462         db  0xff ; '.'
0000000000007463         db  0xff ; '.'
0000000000007464         db  0x08 ; '.'
0000000000007465         db  0xb4 ; '.'
0000000000007466         db  0xff ; '.'
0000000000007467         db  0xff ; '.'
0000000000007468         db  0x08 ; '.'
0000000000007469         db  0xb4 ; '.'
000000000000746a         db  0xff ; '.'
000000000000746b         db  0xff ; '.'
000000000000746c         db  0x08 ; '.'
000000000000746d         db  0xb4 ; '.'
000000000000746e         db  0xff ; '.'
000000000000746f         db  0xff ; '.'
0000000000007470         db  0x08 ; '.'
0000000000007471         db  0xb4 ; '.'
0000000000007472         db  0xff ; '.'
0000000000007473         db  0xff ; '.'
0000000000007474         db  0x08 ; '.'
0000000000007475         db  0xb4 ; '.'
0000000000007476         db  0xff ; '.'
0000000000007477         db  0xff ; '.'
0000000000007478         db  0x08 ; '.'
0000000000007479         db  0xb4 ; '.'
000000000000747a         db  0xff ; '.'
000000000000747b         db  0xff ; '.'
000000000000747c         db  0x08 ; '.'
000000000000747d         db  0xb4 ; '.'
000000000000747e         db  0xff ; '.'
000000000000747f         db  0xff ; '.'
0000000000007480         db  0x08 ; '.'
0000000000007481         db  0xb4 ; '.'
0000000000007482         db  0xff ; '.'
0000000000007483         db  0xff ; '.'
0000000000007484         db  0x08 ; '.'
0000000000007485         db  0xb4 ; '.'
0000000000007486         db  0xff ; '.'
0000000000007487         db  0xff ; '.'
0000000000007488         db  0x08 ; '.'
0000000000007489         db  0xb4 ; '.'
000000000000748a         db  0xff ; '.'
000000000000748b         db  0xff ; '.'
000000000000748c         db  0x08 ; '.'
000000000000748d         db  0xb4 ; '.'
000000000000748e         db  0xff ; '.'
000000000000748f         db  0xff ; '.'
0000000000007490         db  0x08 ; '.'
0000000000007491         db  0xb4 ; '.'
0000000000007492         db  0xff ; '.'
0000000000007493         db  0xff ; '.'
0000000000007494         db  0x08 ; '.'
0000000000007495         db  0xb4 ; '.'
0000000000007496         db  0xff ; '.'
0000000000007497         db  0xff ; '.'
0000000000007498         db  0x08 ; '.'
0000000000007499         db  0xb4 ; '.'
000000000000749a         db  0xff ; '.'
000000000000749b         db  0xff ; '.'
000000000000749c         db  0x08 ; '.'
000000000000749d         db  0xb4 ; '.'
000000000000749e         db  0xff ; '.'
000000000000749f         db  0xff ; '.'
00000000000074a0         db  0x08 ; '.'
00000000000074a1         db  0xb4 ; '.'
00000000000074a2         db  0xff ; '.'
00000000000074a3         db  0xff ; '.'
00000000000074a4         db  0x08 ; '.'
00000000000074a5         db  0xb4 ; '.'
00000000000074a6         db  0xff ; '.'
00000000000074a7         db  0xff ; '.'
00000000000074a8         db  0xe0 ; '.'
00000000000074a9         db  0xb5 ; '.'
00000000000074aa         db  0xff ; '.'
00000000000074ab         db  0xff ; '.'
00000000000074ac         db  0xc8 ; '.'
00000000000074ad         db  0xb5 ; '.'
00000000000074ae         db  0xff ; '.'
00000000000074af         db  0xff ; '.'
00000000000074b0         db  0xc8 ; '.'
00000000000074b1         db  0xb5 ; '.'
00000000000074b2         db  0xff ; '.'
00000000000074b3         db  0xff ; '.'
00000000000074b4         db  0xb0 ; '.'
00000000000074b5         db  0xb5 ; '.'
00000000000074b6         db  0xff ; '.'
00000000000074b7         db  0xff ; '.'
00000000000074b8         db  0xc8 ; '.'
00000000000074b9         db  0xb5 ; '.'
00000000000074ba         db  0xff ; '.'
00000000000074bb         db  0xff ; '.'
00000000000074bc         db  0x98 ; '.'
00000000000074bd         db  0xb5 ; '.'
00000000000074be         db  0xff ; '.'
00000000000074bf         db  0xff ; '.'
00000000000074c0         db  0xc8 ; '.'
00000000000074c1         db  0xb5 ; '.'
00000000000074c2         db  0xff ; '.'
00000000000074c3         db  0xff ; '.'
00000000000074c4         db  0x08 ; '.'
00000000000074c5         db  0xb2 ; '.'
00000000000074c6         db  0xff ; '.'
00000000000074c7         db  0xff ; '.'
00000000000074c8         db  0xc8 ; '.'
00000000000074c9         db  0xb5 ; '.'
00000000000074ca         db  0xff ; '.'
00000000000074cb         db  0xff ; '.'
00000000000074cc         db  0xc8 ; '.'
00000000000074cd         db  0xb5 ; '.'
00000000000074ce         db  0xff ; '.'
00000000000074cf         db  0xff ; '.'
00000000000074d0         db  0xc8 ; '.'
00000000000074d1         db  0xb5 ; '.'
00000000000074d2         db  0xff ; '.'
00000000000074d3         db  0xff ; '.'
00000000000074d4         db  0x98 ; '.'
00000000000074d5         db  0xb5 ; '.'
00000000000074d6         db  0xff ; '.'
00000000000074d7         db  0xff ; '.'
00000000000074d8         db  0x98 ; '.'
00000000000074d9         db  0xb5 ; '.'
00000000000074da         db  0xff ; '.'
00000000000074db         db  0xff ; '.'
00000000000074dc         db  0x98 ; '.'
00000000000074dd         db  0xb5 ; '.'
00000000000074de         db  0xff ; '.'
00000000000074df         db  0xff ; '.'
00000000000074e0         db  0x98 ; '.'
00000000000074e1         db  0xb5 ; '.'
00000000000074e2         db  0xff ; '.'
00000000000074e3         db  0xff ; '.'
00000000000074e4         db  0x98 ; '.'
00000000000074e5         db  0xb5 ; '.'
00000000000074e6         db  0xff ; '.'
00000000000074e7         db  0xff ; '.'
00000000000074e8         db  0x98 ; '.'
00000000000074e9         db  0xb5 ; '.'
00000000000074ea         db  0xff ; '.'
00000000000074eb         db  0xff ; '.'
00000000000074ec         db  0x98 ; '.'
00000000000074ed         db  0xb5 ; '.'
00000000000074ee         db  0xff ; '.'
00000000000074ef         db  0xff ; '.'
00000000000074f0         db  0x98 ; '.'
00000000000074f1         db  0xb5 ; '.'
00000000000074f2         db  0xff ; '.'
00000000000074f3         db  0xff ; '.'
00000000000074f4         db  0x98 ; '.'
00000000000074f5         db  0xb5 ; '.'
00000000000074f6         db  0xff ; '.'
00000000000074f7         db  0xff ; '.'
00000000000074f8         db  0x98 ; '.'
00000000000074f9         db  0xb5 ; '.'
00000000000074fa         db  0xff ; '.'
00000000000074fb         db  0xff ; '.'
00000000000074fc         db  0x98 ; '.'
00000000000074fd         db  0xb5 ; '.'
00000000000074fe         db  0xff ; '.'
00000000000074ff         db  0xff ; '.'
0000000000007500         db  0x98 ; '.'
0000000000007501         db  0xb5 ; '.'
0000000000007502         db  0xff ; '.'
0000000000007503         db  0xff ; '.'
0000000000007504         db  0x98 ; '.'
0000000000007505         db  0xb5 ; '.'
0000000000007506         db  0xff ; '.'
0000000000007507         db  0xff ; '.'
0000000000007508         db  0x98 ; '.'
0000000000007509         db  0xb5 ; '.'
000000000000750a         db  0xff ; '.'
000000000000750b         db  0xff ; '.'
000000000000750c         db  0x98 ; '.'
000000000000750d         db  0xb5 ; '.'
000000000000750e         db  0xff ; '.'
000000000000750f         db  0xff ; '.'
0000000000007510         db  0x98 ; '.'
0000000000007511         db  0xb5 ; '.'
0000000000007512         db  0xff ; '.'
0000000000007513         db  0xff ; '.'
0000000000007514         db  0xc8 ; '.'
0000000000007515         db  0xb5 ; '.'
0000000000007516         db  0xff ; '.'
0000000000007517         db  0xff ; '.'
0000000000007518         db  0xc8 ; '.'
0000000000007519         db  0xb5 ; '.'
000000000000751a         db  0xff ; '.'
000000000000751b         db  0xff ; '.'
000000000000751c         db  0xc8 ; '.'
000000000000751d         db  0xb5 ; '.'
000000000000751e         db  0xff ; '.'
000000000000751f         db  0xff ; '.'
0000000000007520         db  0xc8 ; '.'
0000000000007521         db  0xb5 ; '.'
0000000000007522         db  0xff ; '.'
0000000000007523         db  0xff ; '.'
0000000000007524         db  0xd8 ; '.'
0000000000007525         db  0xb1 ; '.'
0000000000007526         db  0xff ; '.'
0000000000007527         db  0xff ; '.'
0000000000007528         db  0x08 ; '.'
0000000000007529         db  0xb4 ; '.'
000000000000752a         db  0xff ; '.'
000000000000752b         db  0xff ; '.'
000000000000752c         db  0x98 ; '.'
000000000000752d         db  0xb5 ; '.'
000000000000752e         db  0xff ; '.'
000000000000752f         db  0xff ; '.'
0000000000007530         db  0x98 ; '.'
0000000000007531         db  0xb5 ; '.'
0000000000007532         db  0xff ; '.'
0000000000007533         db  0xff ; '.'
0000000000007534         db  0x98 ; '.'
0000000000007535         db  0xb5 ; '.'
0000000000007536         db  0xff ; '.'
0000000000007537         db  0xff ; '.'
0000000000007538         db  0x98 ; '.'
0000000000007539         db  0xb5 ; '.'
000000000000753a         db  0xff ; '.'
000000000000753b         db  0xff ; '.'
000000000000753c         db  0x98 ; '.'
000000000000753d         db  0xb5 ; '.'
000000000000753e         db  0xff ; '.'
000000000000753f         db  0xff ; '.'
0000000000007540         db  0x98 ; '.'
0000000000007541         db  0xb5 ; '.'
0000000000007542         db  0xff ; '.'
0000000000007543         db  0xff ; '.'
0000000000007544         db  0x98 ; '.'
0000000000007545         db  0xb5 ; '.'
0000000000007546         db  0xff ; '.'
0000000000007547         db  0xff ; '.'
0000000000007548         db  0x98 ; '.'
0000000000007549         db  0xb5 ; '.'
000000000000754a         db  0xff ; '.'
000000000000754b         db  0xff ; '.'
000000000000754c         db  0x98 ; '.'
000000000000754d         db  0xb5 ; '.'
000000000000754e         db  0xff ; '.'
000000000000754f         db  0xff ; '.'
0000000000007550         db  0x98 ; '.'
0000000000007551         db  0xb5 ; '.'
0000000000007552         db  0xff ; '.'
0000000000007553         db  0xff ; '.'
0000000000007554         db  0x98 ; '.'
0000000000007555         db  0xb5 ; '.'
0000000000007556         db  0xff ; '.'
0000000000007557         db  0xff ; '.'
0000000000007558         db  0x98 ; '.'
0000000000007559         db  0xb5 ; '.'
000000000000755a         db  0xff ; '.'
000000000000755b         db  0xff ; '.'
000000000000755c         db  0x98 ; '.'
000000000000755d         db  0xb5 ; '.'
000000000000755e         db  0xff ; '.'
000000000000755f         db  0xff ; '.'
0000000000007560         db  0x98 ; '.'
0000000000007561         db  0xb5 ; '.'
0000000000007562         db  0xff ; '.'
0000000000007563         db  0xff ; '.'
0000000000007564         db  0x98 ; '.'
0000000000007565         db  0xb5 ; '.'
0000000000007566         db  0xff ; '.'
0000000000007567         db  0xff ; '.'
0000000000007568         db  0x98 ; '.'
0000000000007569         db  0xb5 ; '.'
000000000000756a         db  0xff ; '.'
000000000000756b         db  0xff ; '.'
000000000000756c         db  0x98 ; '.'
000000000000756d         db  0xb5 ; '.'
000000000000756e         db  0xff ; '.'
000000000000756f         db  0xff ; '.'
0000000000007570         db  0x98 ; '.'
0000000000007571         db  0xb5 ; '.'
0000000000007572         db  0xff ; '.'
0000000000007573         db  0xff ; '.'
0000000000007574         db  0x98 ; '.'
0000000000007575         db  0xb5 ; '.'
0000000000007576         db  0xff ; '.'
0000000000007577         db  0xff ; '.'
0000000000007578         db  0x98 ; '.'
0000000000007579         db  0xb5 ; '.'
000000000000757a         db  0xff ; '.'
000000000000757b         db  0xff ; '.'
000000000000757c         db  0x98 ; '.'
000000000000757d         db  0xb5 ; '.'
000000000000757e         db  0xff ; '.'
000000000000757f         db  0xff ; '.'
0000000000007580         db  0x98 ; '.'
0000000000007581         db  0xb5 ; '.'
0000000000007582         db  0xff ; '.'
0000000000007583         db  0xff ; '.'
0000000000007584         db  0x98 ; '.'
0000000000007585         db  0xb5 ; '.'
0000000000007586         db  0xff ; '.'
0000000000007587         db  0xff ; '.'
0000000000007588         db  0x98 ; '.'
0000000000007589         db  0xb5 ; '.'
000000000000758a         db  0xff ; '.'
000000000000758b         db  0xff ; '.'
000000000000758c         db  0x98 ; '.'
000000000000758d         db  0xb5 ; '.'
000000000000758e         db  0xff ; '.'
000000000000758f         db  0xff ; '.'
0000000000007590         db  0x98 ; '.'
0000000000007591         db  0xb5 ; '.'
0000000000007592         db  0xff ; '.'
0000000000007593         db  0xff ; '.'
0000000000007594         db  0xc8 ; '.'
0000000000007595         db  0xb5 ; '.'
0000000000007596         db  0xff ; '.'
0000000000007597         db  0xff ; '.'
0000000000007598         db  0x98 ; '.'
0000000000007599         db  0xb4 ; '.'
000000000000759a         db  0xff ; '.'
000000000000759b         db  0xff ; '.'
000000000000759c         db  0x98 ; '.'
000000000000759d         db  0xb5 ; '.'
000000000000759e         db  0xff ; '.'
000000000000759f         db  0xff ; '.'
00000000000075a0         db  0xc8 ; '.'
00000000000075a1         db  0xb5 ; '.'
00000000000075a2         db  0xff ; '.'
00000000000075a3         db  0xff ; '.'
00000000000075a4         db  0x98 ; '.'
00000000000075a5         db  0xb5 ; '.'
00000000000075a6         db  0xff ; '.'
00000000000075a7         db  0xff ; '.'
00000000000075a8         db  0xc8 ; '.'
00000000000075a9         db  0xb5 ; '.'
00000000000075aa         db  0xff ; '.'
00000000000075ab         db  0xff ; '.'
00000000000075ac         db  0x98 ; '.'
00000000000075ad         db  0xb5 ; '.'
00000000000075ae         db  0xff ; '.'
00000000000075af         db  0xff ; '.'
00000000000075b0         db  0x98 ; '.'
00000000000075b1         db  0xb5 ; '.'
00000000000075b2         db  0xff ; '.'
00000000000075b3         db  0xff ; '.'
00000000000075b4         db  0x98 ; '.'
00000000000075b5         db  0xb5 ; '.'
00000000000075b6         db  0xff ; '.'
00000000000075b7         db  0xff ; '.'
00000000000075b8         db  0x98 ; '.'
00000000000075b9         db  0xb5 ; '.'
00000000000075ba         db  0xff ; '.'
00000000000075bb         db  0xff ; '.'
00000000000075bc         db  0x98 ; '.'
00000000000075bd         db  0xb5 ; '.'
00000000000075be         db  0xff ; '.'
00000000000075bf         db  0xff ; '.'
00000000000075c0         db  0x98 ; '.'
00000000000075c1         db  0xb5 ; '.'
00000000000075c2         db  0xff ; '.'
00000000000075c3         db  0xff ; '.'
00000000000075c4         db  0x98 ; '.'
00000000000075c5         db  0xb5 ; '.'
00000000000075c6         db  0xff ; '.'
00000000000075c7         db  0xff ; '.'
00000000000075c8         db  0x98 ; '.'
00000000000075c9         db  0xb5 ; '.'
00000000000075ca         db  0xff ; '.'
00000000000075cb         db  0xff ; '.'
00000000000075cc         db  0x98 ; '.'
00000000000075cd         db  0xb5 ; '.'
00000000000075ce         db  0xff ; '.'
00000000000075cf         db  0xff ; '.'
00000000000075d0         db  0x98 ; '.'
00000000000075d1         db  0xb5 ; '.'
00000000000075d2         db  0xff ; '.'
00000000000075d3         db  0xff ; '.'
00000000000075d4         db  0x98 ; '.'
00000000000075d5         db  0xb5 ; '.'
00000000000075d6         db  0xff ; '.'
00000000000075d7         db  0xff ; '.'
00000000000075d8         db  0x98 ; '.'
00000000000075d9         db  0xb5 ; '.'
00000000000075da         db  0xff ; '.'
00000000000075db         db  0xff ; '.'
00000000000075dc         db  0x98 ; '.'
00000000000075dd         db  0xb5 ; '.'
00000000000075de         db  0xff ; '.'
00000000000075df         db  0xff ; '.'
00000000000075e0         db  0x98 ; '.'
00000000000075e1         db  0xb5 ; '.'
00000000000075e2         db  0xff ; '.'
00000000000075e3         db  0xff ; '.'
00000000000075e4         db  0x98 ; '.'
00000000000075e5         db  0xb5 ; '.'
00000000000075e6         db  0xff ; '.'
00000000000075e7         db  0xff ; '.'
00000000000075e8         db  0x98 ; '.'
00000000000075e9         db  0xb5 ; '.'
00000000000075ea         db  0xff ; '.'
00000000000075eb         db  0xff ; '.'
00000000000075ec         db  0x98 ; '.'
00000000000075ed         db  0xb5 ; '.'
00000000000075ee         db  0xff ; '.'
00000000000075ef         db  0xff ; '.'
00000000000075f0         db  0x98 ; '.'
00000000000075f1         db  0xb5 ; '.'
00000000000075f2         db  0xff ; '.'
00000000000075f3         db  0xff ; '.'
00000000000075f4         db  0x98 ; '.'
00000000000075f5         db  0xb5 ; '.'
00000000000075f6         db  0xff ; '.'
00000000000075f7         db  0xff ; '.'
00000000000075f8         db  0x98 ; '.'
00000000000075f9         db  0xb5 ; '.'
00000000000075fa         db  0xff ; '.'
00000000000075fb         db  0xff ; '.'
00000000000075fc         db  0x98 ; '.'
00000000000075fd         db  0xb5 ; '.'
00000000000075fe         db  0xff ; '.'
00000000000075ff         db  0xff ; '.'
0000000000007600         db  0x98 ; '.'
0000000000007601         db  0xb5 ; '.'
0000000000007602         db  0xff ; '.'
0000000000007603         db  0xff ; '.'
0000000000007604         db  0x98 ; '.'
0000000000007605         db  0xb5 ; '.'
0000000000007606         db  0xff ; '.'
0000000000007607         db  0xff ; '.'
0000000000007608         db  0x98 ; '.'
0000000000007609         db  0xb5 ; '.'
000000000000760a         db  0xff ; '.'
000000000000760b         db  0xff ; '.'
000000000000760c         db  0x98 ; '.'
000000000000760d         db  0xb5 ; '.'
000000000000760e         db  0xff ; '.'
000000000000760f         db  0xff ; '.'
0000000000007610         db  0x98 ; '.'
0000000000007611         db  0xb5 ; '.'
0000000000007612         db  0xff ; '.'
0000000000007613         db  0xff ; '.'
0000000000007614         db  0x08 ; '.'
0000000000007615         db  0xb1 ; '.'
0000000000007616         db  0xff ; '.'
0000000000007617         db  0xff ; '.'
0000000000007618         db  0xc8 ; '.'
0000000000007619         db  0xb5 ; '.'
000000000000761a         db  0xff ; '.'
000000000000761b         db  0xff ; '.'
000000000000761c         db  0x08 ; '.'
000000000000761d         db  0xb1 ; '.'
000000000000761e         db  0xff ; '.'
000000000000761f         db  0xff ; '.'
0000000000007620         db  0xb0 ; '.'
0000000000007621         db  0xb5 ; '.'
0000000000007622         db  0xff ; '.'
0000000000007623         db  0xff ; '.'
0000000000007624         db  0x00 ; '.'
0000000000007625         db  0x00 ; '.'
0000000000007626         db  0x00 ; '.'
0000000000007627         db  0x00 ; '.'
0000000000007628         db  0x00 ; '.'
0000000000007629         db  0x00 ; '.'
000000000000762a         db  0x00 ; '.'
000000000000762b         db  0x00 ; '.'
000000000000762c         db  0x00 ; '.'
000000000000762d         db  0x00 ; '.'
000000000000762e         db  0x00 ; '.'
000000000000762f         db  0x00 ; '.'
0000000000007630         db  0x00 ; '.'
0000000000007631         db  0x00 ; '.'
0000000000007632         db  0x00 ; '.'
0000000000007633         db  0x00 ; '.'
0000000000007634         db  0x00 ; '.'
0000000000007635         db  0x00 ; '.'
0000000000007636         db  0x00 ; '.'
0000000000007637         db  0x00 ; '.'
0000000000007638         db  0x00 ; '.'
0000000000007639         db  0x00 ; '.'
000000000000763a         db  0x00 ; '.'
000000000000763b         db  0x00 ; '.'
000000000000763c         db  0x00 ; '.'
000000000000763d         db  0x00 ; '.'
000000000000763e         db  0x00 ; '.'
000000000000763f         db  0x00 ; '.'
                     quoting_style_vals:
0000000000007640         db  0x00 ; '.'
0000000000007641         db  0x00 ; '.'
0000000000007642         db  0x00 ; '.'
0000000000007643         db  0x00 ; '.'
0000000000007644         db  0x01 ; '.'
0000000000007645         db  0x00 ; '.'
0000000000007646         db  0x00 ; '.'
0000000000007647         db  0x00 ; '.'
0000000000007648         db  0x02 ; '.'
0000000000007649         db  0x00 ; '.'
000000000000764a         db  0x00 ; '.'
000000000000764b         db  0x00 ; '.'
000000000000764c         db  0x03 ; '.'
000000000000764d         db  0x00 ; '.'
000000000000764e         db  0x00 ; '.'
000000000000764f         db  0x00 ; '.'
0000000000007650         db  0x04 ; '.'
0000000000007651         db  0x00 ; '.'
0000000000007652         db  0x00 ; '.'
0000000000007653         db  0x00 ; '.'
0000000000007654         db  0x05 ; '.'
0000000000007655         db  0x00 ; '.'
0000000000007656         db  0x00 ; '.'
0000000000007657         db  0x00 ; '.'
0000000000007658         db  0x06 ; '.'
0000000000007659         db  0x00 ; '.'
000000000000765a         db  0x00 ; '.'
000000000000765b         db  0x00 ; '.'
000000000000765c         db  0x07 ; '.'
000000000000765d         db  0x00 ; '.'
000000000000765e         db  0x00 ; '.'
000000000000765f         db  0x00 ; '.'
0000000000007660         db  0x08 ; '.'
0000000000007661         db  0x00 ; '.'
0000000000007662         db  0x00 ; '.'
0000000000007663         db  0x00 ; '.'
0000000000007664         db  0x09 ; '.'
0000000000007665         db  0x00 ; '.'
0000000000007666         db  0x00 ; '.'
0000000000007667         db  0x00 ; '.'
                     aSSSn:
0000000000007668         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
0000000000007674         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
000000000000767b         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
000000000000767c         db  0x43 ; 'C'
000000000000767d         db  0x29 ; ')'
000000000000767e         db  0x00 ; '.'
                     aWrittenBySn:
000000000000767f         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
000000000000768f         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
00000000000076a6         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
00000000000076c2         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
00000000000076d7         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
00000000000076ed         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
0000000000007701         align      8
                     aNlicenseGplv3G:
0000000000007708         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
00000000000077d4         align      8
                     aWrittenBySSSna:
00000000000077d8         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_77f8:        // aWrittenBySSSns
00000000000077f8         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
000000000000781c         align      32
                     aWrittenBySSSns_7820:        // aWrittenBySSSns
0000000000007820         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_7848:        // aWrittenBySSSns
0000000000007848         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
0000000000007874         align      8
                     aWrittenBySSSns_7878:        // aWrittenBySSSns
0000000000007878         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
00000000000078a8         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
00000000000078dc         align      32
                     aWrittenBySSSns_78e0:        // aWrittenBySSSns
00000000000078e0         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
000000000000791c         align      32
                     aGeneralHelpUsi:
0000000000007920         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
0000000000007961         align      8
                     switch_table_7968:        // switch_table
0000000000007968         dd         version_etc_arn.loc_4006-switch_table_7968, version_etc_arn.loc_4098-switch_table_7968, version_etc_arn.loc_40d8-switch_table_7968, version_etc_arn.loc_4120-switch_table_7968 ; switch table used at 0x3f84 containing 10 entries, DATA XREF=version_etc_arn+150
0000000000007978         dd         version_etc_arn.loc_4170-switch_table_7968, version_etc_arn.loc_41c8-switch_table_7968, version_etc_arn.loc_41f8-switch_table_7968, version_etc_arn.loc_4260-switch_table_7968
0000000000007988         dd         version_etc_arn.loc_3f90-switch_table_7968, version_etc_arn.loc_4040-switch_table_7968
0000000000007990         align      32
                     version_etc_copyright:
00000000000079a0         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
00000000000079cf         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
00000000000079e0         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
00000000000079e1         db  0x00 ; '.'
                     aPosix:
00000000000079e2         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aAscii:
00000000000079e8         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
00000000000079ee         align      16
                     switch_table_79f0:        // switch_table
00000000000079f0         dd         vasnprintf.loc_5b46-switch_table_79f0, vasnprintf.loc_55e0-switch_table_79f0, vasnprintf.loc_55b0-switch_table_79f0, vasnprintf.loc_5528-switch_table_79f0 ; switch table used at 0x517b containing 18 entries, DATA XREF=vasnprintf+1357
0000000000007a00         dd         vasnprintf.loc_54e8-switch_table_79f0, 2 dup (vasnprintf.loc_52b8-switch_table_79f0), 4 dup (vasnprintf.loc_5180-switch_table_79f0), vasnprintf.loc_5468-switch_table_79f0
0000000000007a20         dd         vasnprintf.loc_53e0-switch_table_79f0, 2 dup (vasnprintf.loc_52b8-switch_table_79f0), 3 dup (vasnprintf.loc_5180-switch_table_79f0)
                     switch_table_7a38:        // switch_table
0000000000007a38         dd         vasnprintf.loc_5990-switch_table_7a38, vasnprintf.loc_59b0-switch_table_7a38, vasnprintf.loc_59a0-switch_table_7a38, 2 dup (vasnprintf.loc_5860-switch_table_7a38) ; switch table used at 0x5720 containing 5 entries, DATA XREF=vasnprintf+2798
                     aNull:
0000000000007a4c         db         "(NULL)", 0                                 ; DATA XREF=printf_fetchargs+24
0000000000007a53         db  0x00 ; '.'
0000000000007a54         db  0x00 ; '.'
0000000000007a55         db  0x00 ; '.'
0000000000007a56         db  0x00 ; '.'
0000000000007a57         db  0x00 ; '.'
0000000000007a58         db  0x00 ; '.'
0000000000007a59         db  0x00 ; '.'
0000000000007a5a         db  0x00 ; '.'
0000000000007a5b         db  0x00 ; '.'
0000000000007a5c         db  0x00 ; '.'
0000000000007a5d         db  0x00 ; '.'
0000000000007a5e         db  0x00 ; '.'
0000000000007a5f         db  0x00 ; '.'
0000000000007a60         db  0x50 ; 'P'                                         ; DATA XREF=printf_fetchargs+10
0000000000007a61         db  0xe3 ; '.'
0000000000007a62         db  0xff ; '.'
0000000000007a63         db  0xff ; '.'
0000000000007a64         db  0x9c ; '.'
0000000000007a65         db  0xe3 ; '.'
0000000000007a66         db  0xff ; '.'
0000000000007a67         db  0xff ; '.'
0000000000007a68         db  0x9c ; '.'
0000000000007a69         db  0xe3 ; '.'
0000000000007a6a         db  0xff ; '.'
0000000000007a6b         db  0xff ; '.'
0000000000007a6c         db  0xbe ; '.'
0000000000007a6d         db  0xe3 ; '.'
0000000000007a6e         db  0xff ; '.'
0000000000007a6f         db  0xff ; '.'
0000000000007a70         db  0xbe ; '.'
0000000000007a71         db  0xe3 ; '.'
0000000000007a72         db  0xff ; '.'
0000000000007a73         db  0xff ; '.'
0000000000007a74         db  0x7a ; 'z'
0000000000007a75         db  0xe3 ; '.'
0000000000007a76         db  0xff ; '.'
0000000000007a77         db  0xff ; '.'
0000000000007a78         db  0x7a ; 'z'
0000000000007a79         db  0xe3 ; '.'
0000000000007a7a         db  0xff ; '.'
0000000000007a7b         db  0xff ; '.'
0000000000007a7c         db  0x56 ; 'V'
0000000000007a7d         db  0xe3 ; '.'
0000000000007a7e         db  0xff ; '.'
0000000000007a7f         db  0xff ; '.'
0000000000007a80         db  0x56 ; 'V'
0000000000007a81         db  0xe3 ; '.'
0000000000007a82         db  0xff ; '.'
0000000000007a83         db  0xff ; '.'
0000000000007a84         db  0x56 ; 'V'
0000000000007a85         db  0xe3 ; '.'
0000000000007a86         db  0xff ; '.'
0000000000007a87         db  0xff ; '.'
0000000000007a88         db  0x56 ; 'V'
0000000000007a89         db  0xe3 ; '.'
0000000000007a8a         db  0xff ; '.'
0000000000007a8b         db  0xff ; '.'
0000000000007a8c         db  0x12 ; '.'
0000000000007a8d         db  0xe4 ; '.'
0000000000007a8e         db  0xff ; '.'
0000000000007a8f         db  0xff ; '.'
0000000000007a90         db  0x20 ; ' '
0000000000007a91         db  0xe3 ; '.'
0000000000007a92         db  0xff ; '.'
0000000000007a93         db  0xff ; '.'
0000000000007a94         db  0x7a ; 'z'
0000000000007a95         db  0xe3 ; '.'
0000000000007a96         db  0xff ; '.'
0000000000007a97         db  0xff ; '.'
0000000000007a98         db  0x7a ; 'z'
0000000000007a99         db  0xe3 ; '.'
0000000000007a9a         db  0xff ; '.'
0000000000007a9b         db  0xff ; '.'
0000000000007a9c         db  0xe4 ; '.'
0000000000007a9d         db  0xe3 ; '.'
0000000000007a9e         db  0xff ; '.'
0000000000007a9f         db  0xff ; '.'
0000000000007aa0         db  0x40 ; '@'
0000000000007aa1         db  0xe4 ; '.'
0000000000007aa2         db  0xff ; '.'
0000000000007aa3         db  0xff ; '.'
0000000000007aa4         db  0x56 ; 'V'
0000000000007aa5         db  0xe3 ; '.'
0000000000007aa6         db  0xff ; '.'
0000000000007aa7         db  0xff ; '.'
0000000000007aa8         db  0x56 ; 'V'
0000000000007aa9         db  0xe3 ; '.'
0000000000007aaa         db  0xff ; '.'
0000000000007aab         db  0xff ; '.'
0000000000007aac         db  0x56 ; 'V'
0000000000007aad         db  0xe3 ; '.'
0000000000007aae         db  0xff ; '.'
0000000000007aaf         db  0xff ; '.'
0000000000007ab0         db  0x56 ; 'V'
0000000000007ab1         db  0xe3 ; '.'
0000000000007ab2         db  0xff ; '.'
0000000000007ab3         db  0xff ; '.'
0000000000007ab4         db  0x56 ; 'V'
0000000000007ab5         db  0xe3 ; '.'
0000000000007ab6         db  0xff ; '.'
0000000000007ab7         db  0xff ; '.'
0000000000007ab8         db  0x56 ; 'V'
0000000000007ab9         db  0xe3 ; '.'
0000000000007aba         db  0xff ; '.'
0000000000007abb         db  0xff ; '.'
0000000000007abc         db  0x00 ; '.'
0000000000007abd         db  0x00 ; '.'
0000000000007abe         db  0x00 ; '.'
0000000000007abf         db  0x00 ; '.'
                     wide_null_string.2696:
0000000000007ac0         db  0x28 ; '('                                         ; DATA XREF=printf_fetchargs+17
0000000000007ac1         db  0x00 ; '.'
0000000000007ac2         db  0x00 ; '.'
0000000000007ac3         db  0x00 ; '.'
0000000000007ac4         db  0x4e ; 'N'
0000000000007ac5         db  0x00 ; '.'
0000000000007ac6         db  0x00 ; '.'
0000000000007ac7         db  0x00 ; '.'
0000000000007ac8         db  0x55 ; 'U'
0000000000007ac9         db  0x00 ; '.'
0000000000007aca         db  0x00 ; '.'
0000000000007acb         db  0x00 ; '.'
0000000000007acc         db  0x4c ; 'L'
0000000000007acd         db  0x00 ; '.'
0000000000007ace         db  0x00 ; '.'
0000000000007acf         db  0x00 ; '.'
0000000000007ad0         db  0x4c ; 'L'
0000000000007ad1         db  0x00 ; '.'
0000000000007ad2         db  0x00 ; '.'
0000000000007ad3         db  0x00 ; '.'
0000000000007ad4         db  0x29 ; ')'
0000000000007ad5         db  0x00 ; '.'
0000000000007ad6         db  0x00 ; '.'
0000000000007ad7         db  0x00 ; '.'
0000000000007ad8         db  0x00 ; '.'
0000000000007ad9         db  0x00 ; '.'
0000000000007ada         db  0x00 ; '.'
0000000000007adb         db  0x00 ; '.'
                     switch_table_7adc:        // switch_table
0000000000007adc         dd         printf_parse.loc_61fb-switch_table_7adc, 27 dup (printf_parse.loc_678b-switch_table_7adc), printf_parse.loc_66fb-switch_table_7adc, printf_parse.loc_678b-switch_table_7adc ; switch table used at 0x6185 containing 84 entries, DATA XREF=printf_parse+564
0000000000007b54         dd         printf_parse.loc_671c-switch_table_7adc, printf_parse.loc_678b-switch_table_7adc, 3 dup (printf_parse.loc_66fb-switch_table_7adc), 11 dup (printf_parse.loc_678b-switch_table_7adc)
0000000000007b94         dd         printf_parse.loc_6187-switch_table_7adc, 4 dup (printf_parse.loc_678b-switch_table_7adc), printf_parse.loc_672c-switch_table_7adc, 8 dup (printf_parse.loc_678b-switch_table_7adc)
0000000000007bcc         dd         printf_parse.loc_66fb-switch_table_7adc, printf_parse.loc_678b-switch_table_7adc, printf_parse.loc_6688-switch_table_7adc, printf_parse.loc_669b-switch_table_7adc
0000000000007bdc         dd         3 dup (printf_parse.loc_66fb-switch_table_7adc), printf_parse.loc_678b-switch_table_7adc, printf_parse.loc_669b-switch_table_7adc, 4 dup (printf_parse.loc_678b-switch_table_7adc)
0000000000007c00         dd         printf_parse.loc_663c-switch_table_7adc, printf_parse.loc_672c-switch_table_7adc, printf_parse.loc_6780-switch_table_7adc, 2 dup (printf_parse.loc_678b-switch_table_7adc)
0000000000007c14         dd         printf_parse.loc_66e8-switch_table_7adc, printf_parse.loc_678b-switch_table_7adc, printf_parse.loc_672c-switch_table_7adc, 2 dup (printf_parse.loc_678b-switch_table_7adc)
0000000000007c28         dd         printf_parse.loc_672c-switch_table_7adc


        ; Section .eh_frame_hdr
        ; Range: [0x7c2c; 0x7eb8[ (652 bytes)
        ; File offset : [31788; 32440[ (652 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000007c2c         db  0x01 ; '.'
0000000000007c2d         db  0x1b ; '.'
0000000000007c2e         db  0x03 ; '.'
0000000000007c2f         db  0x3b ; ';'
0000000000007c30         db  0x88 ; '.'
0000000000007c31         db  0x02 ; '.'
0000000000007c32         db  0x00 ; '.'
0000000000007c33         db  0x00 ; '.'
0000000000007c34         db  0x50 ; 'P'
0000000000007c35         db  0x00 ; '.'
0000000000007c36         db  0x00 ; '.'
0000000000007c37         db  0x00 ; '.'
0000000000007c38         db  0xa4 ; '.'
0000000000007c39         db  0x97 ; '.'
0000000000007c3a         db  0xff ; '.'
0000000000007c3b         db  0xff ; '.'
0000000000007c3c         db  0xd4 ; '.'
0000000000007c3d         db  0x02 ; '.'
0000000000007c3e         db  0x00 ; '.'
0000000000007c3f         db  0x00 ; '.'
0000000000007c40         db  0xb4 ; '.'
0000000000007c41         db  0x9a ; '.'
0000000000007c42         db  0xff ; '.'
0000000000007c43         db  0xff ; '.'
0000000000007c44         db  0xfc ; '.'
0000000000007c45         db  0x02 ; '.'
0000000000007c46         db  0x00 ; '.'
0000000000007c47         db  0x00 ; '.'
0000000000007c48         db  0xc4 ; '.'
0000000000007c49         db  0x9a ; '.'
0000000000007c4a         db  0xff ; '.'
0000000000007c4b         db  0xff ; '.'
0000000000007c4c         db  0x7c ; '|'
0000000000007c4d         db  0x03 ; '.'
0000000000007c4e         db  0x00 ; '.'
0000000000007c4f         db  0x00 ; '.'
0000000000007c50         db  0xf4 ; '.'
0000000000007c51         db  0x9d ; '.'
0000000000007c52         db  0xff ; '.'
0000000000007c53         db  0xff ; '.'
0000000000007c54         db  0xa4 ; '.'
0000000000007c55         db  0x02 ; '.'
0000000000007c56         db  0x00 ; '.'
0000000000007c57         db  0x00 ; '.'
0000000000007c58         db  0x04 ; '.'
0000000000007c59         db  0x9f ; '.'
0000000000007c5a         db  0xff ; '.'
0000000000007c5b         db  0xff ; '.'
0000000000007c5c         db  0x14 ; '.'
0000000000007c5d         db  0x03 ; '.'
0000000000007c5e         db  0x00 ; '.'
0000000000007c5f         db  0x00 ; '.'
0000000000007c60         db  0xe4 ; '.'
0000000000007c61         db  0x9f ; '.'
0000000000007c62         db  0xff ; '.'
0000000000007c63         db  0xff ; '.'
0000000000007c64         db  0x50 ; 'P'
0000000000007c65         db  0x03 ; '.'
0000000000007c66         db  0x00 ; '.'
0000000000007c67         db  0x00 ; '.'
0000000000007c68         db  0x54 ; 'T'
0000000000007c69         db  0xa3 ; '.'
0000000000007c6a         db  0xff ; '.'
0000000000007c6b         db  0xff ; '.'
0000000000007c6c         db  0xcc ; '.'
0000000000007c6d         db  0x03 ; '.'
0000000000007c6e         db  0x00 ; '.'
0000000000007c6f         db  0x00 ; '.'
0000000000007c70         db  0x74 ; 't'
0000000000007c71         db  0xa4 ; '.'
0000000000007c72         db  0xff ; '.'
0000000000007c73         db  0xff ; '.'
0000000000007c74         db  0xfc ; '.'
0000000000007c75         db  0x03 ; '.'
0000000000007c76         db  0x00 ; '.'
0000000000007c77         db  0x00 ; '.'
0000000000007c78         db  0x84 ; '.'
0000000000007c79         db  0xa4 ; '.'
0000000000007c7a         db  0xff ; '.'
0000000000007c7b         db  0xff ; '.'
0000000000007c7c         db  0x10 ; '.'
0000000000007c7d         db  0x04 ; '.'
0000000000007c7e         db  0x00 ; '.'
0000000000007c7f         db  0x00 ; '.'
0000000000007c80         db  0x94 ; '.'
0000000000007c81         db  0xa4 ; '.'
0000000000007c82         db  0xff ; '.'
0000000000007c83         db  0xff ; '.'
0000000000007c84         db  0x24 ; '$'
0000000000007c85         db  0x04 ; '.'
0000000000007c86         db  0x00 ; '.'
0000000000007c87         db  0x00 ; '.'
0000000000007c88         db  0x44 ; 'D'
0000000000007c89         db  0xa5 ; '.'
0000000000007c8a         db  0xff ; '.'
0000000000007c8b         db  0xff ; '.'
0000000000007c8c         db  0x54 ; 'T'
0000000000007c8d         db  0x04 ; '.'
0000000000007c8e         db  0x00 ; '.'
0000000000007c8f         db  0x00 ; '.'
0000000000007c90         db  0x84 ; '.'
0000000000007c91         db  0xa5 ; '.'
0000000000007c92         db  0xff ; '.'
0000000000007c93         db  0xff ; '.'
0000000000007c94         db  0x7c ; '|'
0000000000007c95         db  0x04 ; '.'
0000000000007c96         db  0x00 ; '.'
0000000000007c97         db  0x00 ; '.'
0000000000007c98         db  0x24 ; '$'
0000000000007c99         db  0xa6 ; '.'
0000000000007c9a         db  0xff ; '.'
0000000000007c9b         db  0xff ; '.'
0000000000007c9c         db  0x9c ; '.'
0000000000007c9d         db  0x04 ; '.'
0000000000007c9e         db  0x00 ; '.'
0000000000007c9f         db  0x00 ; '.'
0000000000007ca0         db  0x14 ; '.'
0000000000007ca1         db  0xa7 ; '.'
0000000000007ca2         db  0xff ; '.'
0000000000007ca3         db  0xff ; '.'
0000000000007ca4         db  0xe0 ; '.'
0000000000007ca5         db  0x04 ; '.'
0000000000007ca6         db  0x00 ; '.'
0000000000007ca7         db  0x00 ; '.'
0000000000007ca8         db  0x54 ; 'T'
0000000000007ca9         db  0xb9 ; '.'
0000000000007caa         db  0xff ; '.'
0000000000007cab         db  0xff ; '.'
0000000000007cac         db  0x58 ; 'X'
0000000000007cad         db  0x05 ; '.'
0000000000007cae         db  0x00 ; '.'
0000000000007caf         db  0x00 ; '.'
0000000000007cb0         db  0x04 ; '.'
0000000000007cb1         db  0xbb ; '.'
0000000000007cb2         db  0xff ; '.'
0000000000007cb3         db  0xff ; '.'
0000000000007cb4         db  0xc4 ; '.'
0000000000007cb5         db  0x05 ; '.'
0000000000007cb6         db  0x00 ; '.'
0000000000007cb7         db  0x00 ; '.'
0000000000007cb8         db  0x44 ; 'D'
0000000000007cb9         db  0xbb ; '.'
0000000000007cba         db  0xff ; '.'
0000000000007cbb         db  0xff ; '.'
0000000000007cbc         db  0xf0 ; '.'
0000000000007cbd         db  0x05 ; '.'
0000000000007cbe         db  0x00 ; '.'
0000000000007cbf         db  0x00 ; '.'
0000000000007cc0         db  0x64 ; 'd'
0000000000007cc1         db  0xbb ; '.'
0000000000007cc2         db  0xff ; '.'
0000000000007cc3         db  0xff ; '.'
0000000000007cc4         db  0x04 ; '.'
0000000000007cc5         db  0x06 ; '.'
0000000000007cc6         db  0x00 ; '.'
0000000000007cc7         db  0x00 ; '.'
0000000000007cc8         db  0x84 ; '.'
0000000000007cc9         db  0xbb ; '.'
0000000000007cca         db  0xff ; '.'
0000000000007ccb         db  0xff ; '.'
0000000000007ccc         db  0x18 ; '.'
0000000000007ccd         db  0x06 ; '.'
0000000000007cce         db  0x00 ; '.'
0000000000007ccf         db  0x00 ; '.'
0000000000007cd0         db  0xc4 ; '.'
0000000000007cd1         db  0xbb ; '.'
0000000000007cd2         db  0xff ; '.'
0000000000007cd3         db  0xff ; '.'
0000000000007cd4         db  0x2c ; ','
0000000000007cd5         db  0x06 ; '.'
0000000000007cd6         db  0x00 ; '.'
0000000000007cd7         db  0x00 ; '.'
0000000000007cd8         db  0xe4 ; '.'
0000000000007cd9         db  0xbb ; '.'
0000000000007cda         db  0xff ; '.'
0000000000007cdb         db  0xff ; '.'
0000000000007cdc         db  0x40 ; '@'
0000000000007cdd         db  0x06 ; '.'
0000000000007cde         db  0x00 ; '.'
0000000000007cdf         db  0x00 ; '.'
0000000000007ce0         db  0x14 ; '.'
0000000000007ce1         db  0xbc ; '.'
0000000000007ce2         db  0xff ; '.'
0000000000007ce3         db  0xff ; '.'
0000000000007ce4         db  0x54 ; 'T'
0000000000007ce5         db  0x06 ; '.'
0000000000007ce6         db  0x00 ; '.'
0000000000007ce7         db  0x00 ; '.'
0000000000007ce8         db  0x94 ; '.'
0000000000007ce9         db  0xbc ; '.'
0000000000007cea         db  0xff ; '.'
0000000000007ceb         db  0xff ; '.'
0000000000007cec         db  0xa8 ; '.'
0000000000007ced         db  0x06 ; '.'
0000000000007cee         db  0x00 ; '.'
0000000000007cef         db  0x00 ; '.'
0000000000007cf0         db  0x84 ; '.'
0000000000007cf1         db  0xbd ; '.'
0000000000007cf2         db  0xff ; '.'
0000000000007cf3         db  0xff ; '.'
0000000000007cf4         db  0x14 ; '.'
0000000000007cf5         db  0x07 ; '.'
0000000000007cf6         db  0x00 ; '.'
0000000000007cf7         db  0x00 ; '.'
0000000000007cf8         db  0x94 ; '.'
0000000000007cf9         db  0xbd ; '.'
0000000000007cfa         db  0xff ; '.'
0000000000007cfb         db  0xff ; '.'
0000000000007cfc         db  0x28 ; '('
0000000000007cfd         db  0x07 ; '.'
0000000000007cfe         db  0x00 ; '.'
0000000000007cff         db  0x00 ; '.'
0000000000007d00         db  0x34 ; '4'
0000000000007d01         db  0xbe ; '.'
0000000000007d02         db  0xff ; '.'
0000000000007d03         db  0xff ; '.'
0000000000007d04         db  0x54 ; 'T'
0000000000007d05         db  0x07 ; '.'
0000000000007d06         db  0x00 ; '.'
0000000000007d07         db  0x00 ; '.'
0000000000007d08         db  0x54 ; 'T'
0000000000007d09         db  0xbe ; '.'
0000000000007d0a         db  0xff ; '.'
0000000000007d0b         db  0xff ; '.'
0000000000007d0c         db  0x68 ; 'h'
0000000000007d0d         db  0x07 ; '.'
0000000000007d0e         db  0x00 ; '.'
0000000000007d0f         db  0x00 ; '.'
0000000000007d10         db  0x64 ; 'd'
0000000000007d11         db  0xbe ; '.'
0000000000007d12         db  0xff ; '.'
0000000000007d13         db  0xff ; '.'
0000000000007d14         db  0x7c ; '|'
0000000000007d15         db  0x07 ; '.'
0000000000007d16         db  0x00 ; '.'
0000000000007d17         db  0x00 ; '.'
0000000000007d18         db  0x84 ; '.'
0000000000007d19         db  0xbe ; '.'
0000000000007d1a         db  0xff ; '.'
0000000000007d1b         db  0xff ; '.'
0000000000007d1c         db  0x90 ; '.'
0000000000007d1d         db  0x07 ; '.'
0000000000007d1e         db  0x00 ; '.'
0000000000007d1f         db  0x00 ; '.'
0000000000007d20         db  0xa4 ; '.'
0000000000007d21         db  0xbe ; '.'
0000000000007d22         db  0xff ; '.'
0000000000007d23         db  0xff ; '.'
0000000000007d24         db  0xa4 ; '.'
0000000000007d25         db  0x07 ; '.'
0000000000007d26         db  0x00 ; '.'
0000000000007d27         db  0x00 ; '.'
0000000000007d28         db  0x34 ; '4'
0000000000007d29         db  0xbf ; '.'
0000000000007d2a         db  0xff ; '.'
0000000000007d2b         db  0xff ; '.'
0000000000007d2c         db  0xc0 ; '.'
0000000000007d2d         db  0x07 ; '.'
0000000000007d2e         db  0x00 ; '.'
0000000000007d2f         db  0x00 ; '.'
0000000000007d30         db  0xc4 ; '.'
0000000000007d31         db  0xbf ; '.'
0000000000007d32         db  0xff ; '.'
0000000000007d33         db  0xff ; '.'
0000000000007d34         db  0xdc ; '.'
0000000000007d35         db  0x07 ; '.'
0000000000007d36         db  0x00 ; '.'
0000000000007d37         db  0x00 ; '.'
0000000000007d38         db  0xd4 ; '.'
0000000000007d39         db  0xbf ; '.'
0000000000007d3a         db  0xff ; '.'
0000000000007d3b         db  0xff ; '.'
0000000000007d3c         db  0xf0 ; '.'
0000000000007d3d         db  0x07 ; '.'
0000000000007d3e         db  0x00 ; '.'
0000000000007d3f         db  0x00 ; '.'
0000000000007d40         db  0xe4 ; '.'
0000000000007d41         db  0xbf ; '.'
0000000000007d42         db  0xff ; '.'
0000000000007d43         db  0xff ; '.'
0000000000007d44         db  0x04 ; '.'
0000000000007d45         db  0x08 ; '.'
0000000000007d46         db  0x00 ; '.'
0000000000007d47         db  0x00 ; '.'
0000000000007d48         db  0x84 ; '.'
0000000000007d49         db  0xc0 ; '.'
0000000000007d4a         db  0xff ; '.'
0000000000007d4b         db  0xff ; '.'
0000000000007d4c         db  0x20 ; ' '
0000000000007d4d         db  0x08 ; '.'
0000000000007d4e         db  0x00 ; '.'
0000000000007d4f         db  0x00 ; '.'
0000000000007d50         db  0x94 ; '.'
0000000000007d51         db  0xc0 ; '.'
0000000000007d52         db  0xff ; '.'
0000000000007d53         db  0xff ; '.'
0000000000007d54         db  0x34 ; '4'
0000000000007d55         db  0x08 ; '.'
0000000000007d56         db  0x00 ; '.'
0000000000007d57         db  0x00 ; '.'
0000000000007d58         db  0xb4 ; '.'
0000000000007d59         db  0xc0 ; '.'
0000000000007d5a         db  0xff ; '.'
0000000000007d5b         db  0xff ; '.'
0000000000007d5c         db  0x48 ; 'H'
0000000000007d5d         db  0x08 ; '.'
0000000000007d5e         db  0x00 ; '.'
0000000000007d5f         db  0x00 ; '.'
0000000000007d60         db  0xc4 ; '.'
0000000000007d61         db  0xc0 ; '.'
0000000000007d62         db  0xff ; '.'
0000000000007d63         db  0xff ; '.'
0000000000007d64         db  0x5c ; '\'
0000000000007d65         db  0x08 ; '.'
0000000000007d66         db  0x00 ; '.'
0000000000007d67         db  0x00 ; '.'
0000000000007d68         db  0x54 ; 'T'
0000000000007d69         db  0xc1 ; '.'
0000000000007d6a         db  0xff ; '.'
0000000000007d6b         db  0xff ; '.'
0000000000007d6c         db  0x78 ; 'x'
0000000000007d6d         db  0x08 ; '.'
0000000000007d6e         db  0x00 ; '.'
0000000000007d6f         db  0x00 ; '.'
0000000000007d70         db  0xf4 ; '.'
0000000000007d71         db  0xc1 ; '.'
0000000000007d72         db  0xff ; '.'
0000000000007d73         db  0xff ; '.'
0000000000007d74         db  0x94 ; '.'
0000000000007d75         db  0x08 ; '.'
0000000000007d76         db  0x00 ; '.'
0000000000007d77         db  0x00 ; '.'
0000000000007d78         db  0x04 ; '.'
0000000000007d79         db  0xc2 ; '.'
0000000000007d7a         db  0xff ; '.'
0000000000007d7b         db  0xff ; '.'
0000000000007d7c         db  0xa8 ; '.'
0000000000007d7d         db  0x08 ; '.'
0000000000007d7e         db  0x00 ; '.'
0000000000007d7f         db  0x00 ; '.'
0000000000007d80         db  0x24 ; '$'
0000000000007d81         db  0xc2 ; '.'
0000000000007d82         db  0xff ; '.'
0000000000007d83         db  0xff ; '.'
0000000000007d84         db  0xbc ; '.'
0000000000007d85         db  0x08 ; '.'
0000000000007d86         db  0x00 ; '.'
0000000000007d87         db  0x00 ; '.'
0000000000007d88         db  0x44 ; 'D'
0000000000007d89         db  0xc2 ; '.'
0000000000007d8a         db  0xff ; '.'
0000000000007d8b         db  0xff ; '.'
0000000000007d8c         db  0xd0 ; '.'
0000000000007d8d         db  0x08 ; '.'
0000000000007d8e         db  0x00 ; '.'
0000000000007d8f         db  0x00 ; '.'
0000000000007d90         db  0x54 ; 'T'
0000000000007d91         db  0xc2 ; '.'
0000000000007d92         db  0xff ; '.'
0000000000007d93         db  0xff ; '.'
0000000000007d94         db  0xe4 ; '.'
0000000000007d95         db  0x08 ; '.'
0000000000007d96         db  0x00 ; '.'
0000000000007d97         db  0x00 ; '.'
0000000000007d98         db  0x74 ; 't'
0000000000007d99         db  0xc2 ; '.'
0000000000007d9a         db  0xff ; '.'
0000000000007d9b         db  0xff ; '.'
0000000000007d9c         db  0xf8 ; '.'
0000000000007d9d         db  0x08 ; '.'
0000000000007d9e         db  0x00 ; '.'
0000000000007d9f         db  0x00 ; '.'
0000000000007da0         db  0x94 ; '.'
0000000000007da1         db  0xc2 ; '.'
0000000000007da2         db  0xff ; '.'
0000000000007da3         db  0xff ; '.'
0000000000007da4         db  0x0c ; '.'
0000000000007da5         db  0x09 ; '.'
0000000000007da6         db  0x00 ; '.'
0000000000007da7         db  0x00 ; '.'
0000000000007da8         db  0xb4 ; '.'
0000000000007da9         db  0xc2 ; '.'
0000000000007daa         db  0xff ; '.'
0000000000007dab         db  0xff ; '.'
0000000000007dac         db  0x24 ; '$'
0000000000007dad         db  0x09 ; '.'
0000000000007dae         db  0x00 ; '.'
0000000000007daf         db  0x00 ; '.'
0000000000007db0         db  0xd4 ; '.'
0000000000007db1         db  0xc6 ; '.'
0000000000007db2         db  0xff ; '.'
0000000000007db3         db  0xff ; '.'
0000000000007db4         db  0x38 ; '8'
0000000000007db5         db  0x0a ; '.'
0000000000007db6         db  0x00 ; '.'
0000000000007db7         db  0x00 ; '.'
0000000000007db8         db  0xf4 ; '.'
0000000000007db9         db  0xc6 ; '.'
0000000000007dba         db  0xff ; '.'
0000000000007dbb         db  0xff ; '.'
0000000000007dbc         db  0x4c ; 'L'
0000000000007dbd         db  0x0a ; '.'
0000000000007dbe         db  0x00 ; '.'
0000000000007dbf         db  0x00 ; '.'
0000000000007dc0         db  0x74 ; 't'
0000000000007dc1         db  0xc7 ; '.'
0000000000007dc2         db  0xff ; '.'
0000000000007dc3         db  0xff ; '.'
0000000000007dc4         db  0x68 ; 'h'
0000000000007dc5         db  0x0a ; '.'
0000000000007dc6         db  0x00 ; '.'
0000000000007dc7         db  0x00 ; '.'
0000000000007dc8         db  0x54 ; 'T'
0000000000007dc9         db  0xc8 ; '.'
0000000000007dca         db  0xff ; '.'
0000000000007dcb         db  0xff ; '.'
0000000000007dcc         db  0x94 ; '.'
0000000000007dcd         db  0x0a ; '.'
0000000000007dce         db  0x00 ; '.'
0000000000007dcf         db  0x00 ; '.'
0000000000007dd0         db  0xd4 ; '.'
0000000000007dd1         db  0xc8 ; '.'
0000000000007dd2         db  0xff ; '.'
0000000000007dd3         db  0xff ; '.'
0000000000007dd4         db  0xb4 ; '.'
0000000000007dd5         db  0x0a ; '.'
0000000000007dd6         db  0x00 ; '.'
0000000000007dd7         db  0x00 ; '.'
0000000000007dd8         db  0xf4 ; '.'
0000000000007dd9         db  0xc8 ; '.'
0000000000007dda         db  0xff ; '.'
0000000000007ddb         db  0xff ; '.'
0000000000007ddc         db  0xd0 ; '.'
0000000000007ddd         db  0x0a ; '.'
0000000000007dde         db  0x00 ; '.'
0000000000007ddf         db  0x00 ; '.'
0000000000007de0         db  0x24 ; '$'
0000000000007de1         db  0xc9 ; '.'
0000000000007de2         db  0xff ; '.'
0000000000007de3         db  0xff ; '.'
0000000000007de4         db  0xe4 ; '.'
0000000000007de5         db  0x0a ; '.'
0000000000007de6         db  0x00 ; '.'
0000000000007de7         db  0x00 ; '.'
0000000000007de8         db  0x34 ; '4'
0000000000007de9         db  0xc9 ; '.'
0000000000007dea         db  0xff ; '.'
0000000000007deb         db  0xff ; '.'
0000000000007dec         db  0xf8 ; '.'
0000000000007ded         db  0x0a ; '.'
0000000000007dee         db  0x00 ; '.'
0000000000007def         db  0x00 ; '.'
0000000000007df0         db  0x74 ; 't'
0000000000007df1         db  0xc9 ; '.'
0000000000007df2         db  0xff ; '.'
0000000000007df3         db  0xff ; '.'
0000000000007df4         db  0x1c ; '.'
0000000000007df5         db  0x0b ; '.'
0000000000007df6         db  0x00 ; '.'
0000000000007df7         db  0x00 ; '.'
0000000000007df8         db  0xa4 ; '.'
0000000000007df9         db  0xc9 ; '.'
0000000000007dfa         db  0xff ; '.'
0000000000007dfb         db  0xff ; '.'
0000000000007dfc         db  0x30 ; '0'
0000000000007dfd         db  0x0b ; '.'
0000000000007dfe         db  0x00 ; '.'
0000000000007dff         db  0x00 ; '.'
0000000000007e00         db  0x34 ; '4'
0000000000007e01         db  0xca ; '.'
0000000000007e02         db  0xff ; '.'
0000000000007e03         db  0xff ; '.'
0000000000007e04         db  0x48 ; 'H'
0000000000007e05         db  0x0b ; '.'
0000000000007e06         db  0x00 ; '.'
0000000000007e07         db  0x00 ; '.'
0000000000007e08         db  0x84 ; '.'
0000000000007e09         db  0xca ; '.'
0000000000007e0a         db  0xff ; '.'
0000000000007e0b         db  0xff ; '.'
0000000000007e0c         db  0x60 ; '`'
0000000000007e0d         db  0x0b ; '.'
0000000000007e0e         db  0x00 ; '.'
0000000000007e0f         db  0x00 ; '.'
0000000000007e10         db  0xa4 ; '.'
0000000000007e11         db  0xca ; '.'
0000000000007e12         db  0xff ; '.'
0000000000007e13         db  0xff ; '.'
0000000000007e14         db  0x7c ; '|'
0000000000007e15         db  0x0b ; '.'
0000000000007e16         db  0x00 ; '.'
0000000000007e17         db  0x00 ; '.'
0000000000007e18         db  0xd4 ; '.'
0000000000007e19         db  0xca ; '.'
0000000000007e1a         db  0xff ; '.'
0000000000007e1b         db  0xff ; '.'
0000000000007e1c         db  0x98 ; '.'
0000000000007e1d         db  0x0b ; '.'
0000000000007e1e         db  0x00 ; '.'
0000000000007e1f         db  0x00 ; '.'
0000000000007e20         db  0x04 ; '.'
0000000000007e21         db  0xcb ; '.'
0000000000007e22         db  0xff ; '.'
0000000000007e23         db  0xff ; '.'
0000000000007e24         db  0xc0 ; '.'
0000000000007e25         db  0x0b ; '.'
0000000000007e26         db  0x00 ; '.'
0000000000007e27         db  0x00 ; '.'
0000000000007e28         db  0x24 ; '$'
0000000000007e29         db  0xcb ; '.'
0000000000007e2a         db  0xff ; '.'
0000000000007e2b         db  0xff ; '.'
0000000000007e2c         db  0xdc ; '.'
0000000000007e2d         db  0x0b ; '.'
0000000000007e2e         db  0x00 ; '.'
0000000000007e2f         db  0x00 ; '.'
0000000000007e30         db  0x64 ; 'd'
0000000000007e31         db  0xcb ; '.'
0000000000007e32         db  0xff ; '.'
0000000000007e33         db  0xff ; '.'
0000000000007e34         db  0xf4 ; '.'
0000000000007e35         db  0x0b ; '.'
0000000000007e36         db  0x00 ; '.'
0000000000007e37         db  0x00 ; '.'
0000000000007e38         db  0xf4 ; '.'
0000000000007e39         db  0xcb ; '.'
0000000000007e3a         db  0xff ; '.'
0000000000007e3b         db  0xff ; '.'
0000000000007e3c         db  0x34 ; '4'
0000000000007e3d         db  0x0c ; '.'
0000000000007e3e         db  0x00 ; '.'
0000000000007e3f         db  0x00 ; '.'
0000000000007e40         db  0xf4 ; '.'
0000000000007e41         db  0xcc ; '.'
0000000000007e42         db  0xff ; '.'
0000000000007e43         db  0xff ; '.'
0000000000007e44         db  0x74 ; 't'
0000000000007e45         db  0x0c ; '.'
0000000000007e46         db  0x00 ; '.'
0000000000007e47         db  0x00 ; '.'
0000000000007e48         db  0x74 ; 't'
0000000000007e49         db  0xcd ; '.'
0000000000007e4a         db  0xff ; '.'
0000000000007e4b         db  0xff ; '.'
0000000000007e4c         db  0xc4 ; '.'
0000000000007e4d         db  0x0c ; '.'
0000000000007e4e         db  0x00 ; '.'
0000000000007e4f         db  0x00 ; '.'
0000000000007e50         db  0xd4 ; '.'
0000000000007e51         db  0xcd ; '.'
0000000000007e52         db  0xff ; '.'
0000000000007e53         db  0xff ; '.'
0000000000007e54         db  0xd8 ; '.'
0000000000007e55         db  0x0c ; '.'
0000000000007e56         db  0x00 ; '.'
0000000000007e57         db  0x00 ; '.'
0000000000007e58         db  0x24 ; '$'
0000000000007e59         db  0xce ; '.'
0000000000007e5a         db  0xff ; '.'
0000000000007e5b         db  0xff ; '.'
0000000000007e5c         db  0x04 ; '.'
0000000000007e5d         db  0x0d ; '.'
0000000000007e5e         db  0x00 ; '.'
0000000000007e5f         db  0x00 ; '.'
0000000000007e60         db  0x84 ; '.'
0000000000007e61         db  0xce ; '.'
0000000000007e62         db  0xff ; '.'
0000000000007e63         db  0xff ; '.'
0000000000007e64         db  0x24 ; '$'
0000000000007e65         db  0x0d ; '.'
0000000000007e66         db  0x00 ; '.'
0000000000007e67         db  0x00 ; '.'
0000000000007e68         db  0xc4 ; '.'
0000000000007e69         db  0xce ; '.'
0000000000007e6a         db  0xff ; '.'
0000000000007e6b         db  0xff ; '.'
0000000000007e6c         db  0x44 ; 'D'
0000000000007e6d         db  0x0d ; '.'
0000000000007e6e         db  0x00 ; '.'
0000000000007e6f         db  0x00 ; '.'
0000000000007e70         db  0x44 ; 'D'
0000000000007e71         db  0xcf ; '.'
0000000000007e72         db  0xff ; '.'
0000000000007e73         db  0xff ; '.'
0000000000007e74         db  0x7c ; '|'
0000000000007e75         db  0x0d ; '.'
0000000000007e76         db  0x00 ; '.'
0000000000007e77         db  0x00 ; '.'
0000000000007e78         db  0x84 ; '.'
0000000000007e79         db  0xcf ; '.'
0000000000007e7a         db  0xff ; '.'
0000000000007e7b         db  0xff ; '.'
0000000000007e7c         db  0x9c ; '.'
0000000000007e7d         db  0x0d ; '.'
0000000000007e7e         db  0x00 ; '.'
0000000000007e7f         db  0x00 ; '.'
0000000000007e80         db  0xe4 ; '.'
0000000000007e81         db  0xcf ; '.'
0000000000007e82         db  0xff ; '.'
0000000000007e83         db  0xff ; '.'
0000000000007e84         db  0xcc ; '.'
0000000000007e85         db  0x0d ; '.'
0000000000007e86         db  0x00 ; '.'
0000000000007e87         db  0x00 ; '.'
0000000000007e88         db  0xf4 ; '.'
0000000000007e89         db  0xcf ; '.'
0000000000007e8a         db  0xff ; '.'
0000000000007e8b         db  0xff ; '.'
0000000000007e8c         db  0xe4 ; '.'
0000000000007e8d         db  0x0d ; '.'
0000000000007e8e         db  0x00 ; '.'
0000000000007e8f         db  0x00 ; '.'
0000000000007e90         db  0x14 ; '.'
0000000000007e91         db  0xe1 ; '.'
0000000000007e92         db  0xff ; '.'
0000000000007e93         db  0xff ; '.'
0000000000007e94         db  0x14 ; '.'
0000000000007e95         db  0x0e ; '.'
0000000000007e96         db  0x00 ; '.'
0000000000007e97         db  0x00 ; '.'
0000000000007e98         db  0x14 ; '.'
0000000000007e99         db  0xe3 ; '.'
0000000000007e9a         db  0xff ; '.'
0000000000007e9b         db  0xff ; '.'
0000000000007e9c         db  0x2c ; ','
0000000000007e9d         db  0x0e ; '.'
0000000000007e9e         db  0x00 ; '.'
0000000000007e9f         db  0x00 ; '.'
0000000000007ea0         db  0x04 ; '.'
0000000000007ea1         db  0xf0 ; '.'
0000000000007ea2         db  0xff ; '.'
0000000000007ea3         db  0xff ; '.'
0000000000007ea4         db  0x7c ; '|'
0000000000007ea5         db  0x0e ; '.'
0000000000007ea6         db  0x00 ; '.'
0000000000007ea7         db  0x00 ; '.'
0000000000007ea8         db  0x74 ; 't'
0000000000007ea9         db  0xf0 ; '.'
0000000000007eaa         db  0xff ; '.'
0000000000007eab         db  0xff ; '.'
0000000000007eac         db  0xc4 ; '.'
0000000000007ead         db  0x0e ; '.'
0000000000007eae         db  0x00 ; '.'
0000000000007eaf         db  0x00 ; '.'
0000000000007eb0         db  0x84 ; '.'
0000000000007eb1         db  0xf0 ; '.'
0000000000007eb2         db  0xff ; '.'
0000000000007eb3         db  0xff ; '.'
0000000000007eb4         db  0xdc ; '.'
0000000000007eb5         db  0x0e ; '.'
0000000000007eb6         db  0x00 ; '.'
0000000000007eb7         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x7eb8; 0x8b20[ (3176 bytes)
        ; File offset : [32440; 35616[ (3176 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000007eb8         dd         0x00000014                                  ; Length of the record
0000000000007ebc         dd         0x00000000                                  ; CIE ID
0000000000007ec0         db         0x01                                        ; Version
0000000000007ec1         db         "zR", 0                                     ; Augmentation String
0000000000007ec4         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000007ec5         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000007ec6         db         0x10                                        ; Return address register
0000000000007ec7         db         0x01                                        ; Augmentation data length
0000000000007ec8         db         0x1b                                        ; FDE encoding
0000000000007ec9         db  0x0c ; '.'
0000000000007eca         db  0x07 ; '.'
0000000000007ecb         db  0x08 ; '.'
0000000000007ecc         db  0x90 ; '.'
0000000000007ecd         db  0x01 ; '.'
0000000000007ece         db  0x07 ; '.'
0000000000007ecf         db  0x10 ; '.'
0000000000007ed0         dd         0x00000014                                  ; Length of the record
0000000000007ed4         dd         0x0000001c                                  ; FDE: parent CIE at 0x7eb8 (FDE encoding = 0x1B)
0000000000007ed8         db         0x48, 0x9b, 2 dup (0xff)                    ; begin 0x1a20
0000000000007edc         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x1a4b)
0000000000007ee0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007ee1         align      8
0000000000007ee8         dd         0x00000014                                  ; Length of the record
0000000000007eec         dd         0x00000000                                  ; CIE ID
0000000000007ef0         db         0x01                                        ; Version
0000000000007ef1         db         "zR", 0                                     ; Augmentation String
0000000000007ef4         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000007ef5         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000007ef6         db         0x10                                        ; Return address register
0000000000007ef7         db         0x01                                        ; Augmentation data length
0000000000007ef8         db         0x1b                                        ; FDE encoding
0000000000007ef9         db  0x0c ; '.'
0000000000007efa         db  0x07 ; '.'
0000000000007efb         db  0x08 ; '.'
0000000000007efc         db  0x90 ; '.'
0000000000007efd         db  0x01 ; '.'
0000000000007efe         db  0x00 ; '.'
0000000000007eff         db  0x00 ; '.'
0000000000007f00         dd         0x00000024                                  ; Length of the record
0000000000007f04         dd         0x0000001c                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000007f08         db         0xc8, 0x94, 2 dup (0xff)                    ; begin 0x13d0
0000000000007f0c         db         0x10, 0x03, 2 dup (0x00)                    ; length 0x310 (end at 0x16e0)
0000000000007f10         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007f11         db  0x0e ; '.'
0000000000007f12         db  0x10 ; '.'
0000000000007f13         db  0x46 ; 'F'
0000000000007f14         db  0x0e ; '.'
0000000000007f15         db  0x18 ; '.'
0000000000007f16         db  0x4a ; 'J'
0000000000007f17         db  0x0f ; '.'
0000000000007f18         db  0x0b ; '.'
0000000000007f19         db  0x77 ; 'w'
0000000000007f1a         db  0x08 ; '.'
0000000000007f1b         db  0x80 ; '.'
0000000000007f1c         db  0x00 ; '.'
0000000000007f1d         db  0x3f ; '?'
0000000000007f1e         db  0x1a ; '.'
0000000000007f1f         db  0x3b ; ';'
0000000000007f20         db  0x2a ; '*'
0000000000007f21         db  0x33 ; '3'
0000000000007f22         db  0x24 ; '$'
0000000000007f23         db  0x22 ; '"'
0000000000007f24         db  0x00 ; '.'
0000000000007f25         db  0x00 ; '.'
0000000000007f26         db  0x00 ; '.'
0000000000007f27         db  0x00 ; '.'
0000000000007f28         dd         0x00000014                                  ; Length of the record
0000000000007f2c         dd         0x00000044                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000007f30         db         0xb0, 0x97, 2 dup (0xff)                    ; begin 0x16e0
0000000000007f34         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x16e8)
0000000000007f38         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007f39         align      64
0000000000007f40         dd         0x00000038                                  ; Length of the record
0000000000007f44         dd         0x0000005c                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000007f48         db         0xe8, 0x9b, 2 dup (0xff)                    ; begin 0x1b30
0000000000007f4c         db         0xd6, 3 dup (0x00)                          ; length 0xd6 (end at 0x1c06)
0000000000007f50         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007f51         db  0x49 ; 'I'
0000000000007f52         db  0x0e ; '.'
0000000000007f53         db  0x10 ; '.'
0000000000007f54         db  0x8c ; '.'
0000000000007f55         db  0x02 ; '.'
0000000000007f56         db  0x41 ; 'A'
0000000000007f57         db  0x0e ; '.'
0000000000007f58         db  0x18 ; '.'
0000000000007f59         db  0x86 ; '.'
0000000000007f5a         db  0x03 ; '.'
0000000000007f5b         db  0x41 ; 'A'
0000000000007f5c         db  0x0e ; '.'
0000000000007f5d         db  0x20 ; ' '
0000000000007f5e         db  0x83 ; '.'
0000000000007f5f         db  0x04 ; '.'
0000000000007f60         db  0x02 ; '.'
0000000000007f61         db  0xa1 ; '.'
0000000000007f62         db  0x0a ; '.'
0000000000007f63         db  0x0e ; '.'
0000000000007f64         db  0x18 ; '.'
0000000000007f65         db  0x41 ; 'A'
0000000000007f66         db  0x0e ; '.'
0000000000007f67         db  0x10 ; '.'
0000000000007f68         db  0x42 ; 'B'
0000000000007f69         db  0x0e ; '.'
0000000000007f6a         db  0x08 ; '.'
0000000000007f6b         db  0x41 ; 'A'
0000000000007f6c         db  0x0b ; '.'
0000000000007f6d         db  0x45 ; 'E'
0000000000007f6e         db  0x0a ; '.'
0000000000007f6f         db  0x0e ; '.'
0000000000007f70         db  0x18 ; '.'
0000000000007f71         db  0x41 ; 'A'
0000000000007f72         db  0x0e ; '.'
0000000000007f73         db  0x10 ; '.'
0000000000007f74         db  0x42 ; 'B'
0000000000007f75         db  0x0e ; '.'
0000000000007f76         db  0x08 ; '.'
0000000000007f77         db  0x41 ; 'A'
0000000000007f78         db  0x0b ; '.'
0000000000007f79         db  0x00 ; '.'
0000000000007f7a         db  0x00 ; '.'
0000000000007f7b         db  0x00 ; '.'
0000000000007f7c         dd         0x00000028                                  ; Length of the record
0000000000007f80         dd         0x00000098                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000007f84         db         0x8c, 0x9c, 2 dup (0xff)                    ; begin 0x1c10
0000000000007f88         db         0x6a, 0x03, 2 dup (0x00)                    ; length 0x36a (end at 0x1f7a)
0000000000007f8c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007f8d         db  0x42 ; 'B'
0000000000007f8e         db  0x0e ; '.'
0000000000007f8f         db  0x10 ; '.'
0000000000007f90         db  0x8d ; '.'
0000000000007f91         db  0x02 ; '.'
0000000000007f92         db  0x42 ; 'B'
0000000000007f93         db  0x0e ; '.'
0000000000007f94         db  0x18 ; '.'
0000000000007f95         db  0x8c ; '.'
0000000000007f96         db  0x03 ; '.'
0000000000007f97         db  0x46 ; 'F'
0000000000007f98         db  0x0e ; '.'
0000000000007f99         db  0x20 ; ' '
0000000000007f9a         db  0x86 ; '.'
0000000000007f9b         db  0x04 ; '.'
0000000000007f9c         db  0x41 ; 'A'
0000000000007f9d         db  0x0e ; '.'
0000000000007f9e         db  0x28 ; '('
0000000000007f9f         db  0x83 ; '.'
0000000000007fa0         db  0x05 ; '.'
0000000000007fa1         db  0x49 ; 'I'
0000000000007fa2         db  0x0e ; '.'
0000000000007fa3         db  0xb0 ; '.'
0000000000007fa4         db  0x01 ; '.'
0000000000007fa5         db  0x00 ; '.'
0000000000007fa6         db  0x00 ; '.'
0000000000007fa7         db  0x00 ; '.'
0000000000007fa8         dd         0x0000004c                                  ; Length of the record
0000000000007fac         dd         0x000000c4                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000007fb0         db         0x40, 0x97, 2 dup (0xff)                    ; begin 0x16f0
0000000000007fb4         db         0x26, 0x03, 2 dup (0x00)                    ; length 0x326 (end at 0x1a16)
0000000000007fb8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007fb9         db  0x42 ; 'B'
0000000000007fba         db  0x0e ; '.'
0000000000007fbb         db  0x10 ; '.'
0000000000007fbc         db  0x8f ; '.'
0000000000007fbd         db  0x02 ; '.'
0000000000007fbe         db  0x42 ; 'B'
0000000000007fbf         db  0x0e ; '.'
0000000000007fc0         db  0x18 ; '.'
0000000000007fc1         db  0x8e ; '.'
0000000000007fc2         db  0x03 ; '.'
0000000000007fc3         db  0x42 ; 'B'
0000000000007fc4         db  0x0e ; '.'
0000000000007fc5         db  0x20 ; ' '
0000000000007fc6         db  0x8d ; '.'
0000000000007fc7         db  0x04 ; '.'
0000000000007fc8         db  0x42 ; 'B'
0000000000007fc9         db  0x0e ; '.'
0000000000007fca         db  0x28 ; '('
0000000000007fcb         db  0x8c ; '.'
0000000000007fcc         db  0x05 ; '.'
0000000000007fcd         db  0x48 ; 'H'
0000000000007fce         db  0x0e ; '.'
0000000000007fcf         db  0x30 ; '0'
0000000000007fd0         db  0x86 ; '.'
0000000000007fd1         db  0x06 ; '.'
0000000000007fd2         db  0x41 ; 'A'
0000000000007fd3         db  0x0e ; '.'
0000000000007fd4         db  0x38 ; '8'
0000000000007fd5         db  0x83 ; '.'
0000000000007fd6         db  0x07 ; '.'
0000000000007fd7         db  0x49 ; 'I'
0000000000007fd8         db  0x0e ; '.'
0000000000007fd9         db  0x40 ; '@'
0000000000007fda         db  0x03 ; '.'
0000000000007fdb         db  0xc4 ; '.'
0000000000007fdc         db  0x02 ; '.'
0000000000007fdd         db  0x0a ; '.'
0000000000007fde         db  0x0e ; '.'
0000000000007fdf         db  0x38 ; '8'
0000000000007fe0         db  0x45 ; 'E'
0000000000007fe1         db  0x0e ; '.'
0000000000007fe2         db  0x30 ; '0'
0000000000007fe3         db  0x41 ; 'A'
0000000000007fe4         db  0x0e ; '.'
0000000000007fe5         db  0x28 ; '('
0000000000007fe6         db  0x42 ; 'B'
0000000000007fe7         db  0x0e ; '.'
0000000000007fe8         db  0x20 ; ' '
0000000000007fe9         db  0x42 ; 'B'
0000000000007fea         db  0x0e ; '.'
0000000000007feb         db  0x18 ; '.'
0000000000007fec         db  0x42 ; 'B'
0000000000007fed         db  0x0e ; '.'
0000000000007fee         db  0x10 ; '.'
0000000000007fef         db  0x42 ; 'B'
0000000000007ff0         db  0x0e ; '.'
0000000000007ff1         db  0x08 ; '.'
0000000000007ff2         db  0x41 ; 'A'
0000000000007ff3         db  0x0b ; '.'
0000000000007ff4         db  0x00 ; '.'
0000000000007ff5         db  0x00 ; '.'
0000000000007ff6         db  0x00 ; '.'
0000000000007ff7         db  0x00 ; '.'
0000000000007ff8         dd         0x0000002c                                  ; Length of the record
0000000000007ffc         dd         0x00000114                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008000         db         0x80, 0x9f, 2 dup (0xff)                    ; begin 0x1f80
0000000000008004         db         0x14, 0x01, 2 dup (0x00)                    ; length 0x114 (end at 0x2094)
0000000000008008         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008009         db  0x41 ; 'A'
000000000000800a         db  0x0e ; '.'
000000000000800b         db  0x10 ; '.'
000000000000800c         db  0x86 ; '.'
000000000000800d         db  0x02 ; '.'
000000000000800e         db  0x41 ; 'A'
000000000000800f         db  0x0e ; '.'
0000000000008010         db  0x18 ; '.'
0000000000008011         db  0x83 ; '.'
0000000000008012         db  0x03 ; '.'
0000000000008013         db  0x4d ; 'M'
0000000000008014         db  0x0e ; '.'
0000000000008015         db  0xf0 ; '.'
0000000000008016         db  0x01 ; '.'
0000000000008017         db  0x02 ; '.'
0000000000008018         db  0xe7 ; '.'
0000000000008019         db  0x0a ; '.'
000000000000801a         db  0x0e ; '.'
000000000000801b         db  0x18 ; '.'
000000000000801c         db  0x41 ; 'A'
000000000000801d         db  0x0e ; '.'
000000000000801e         db  0x10 ; '.'
000000000000801f         db  0x41 ; 'A'
0000000000008020         db  0x0e ; '.'
0000000000008021         db  0x08 ; '.'
0000000000008022         db  0x48 ; 'H'
0000000000008023         db  0x0b ; '.'
0000000000008024         db  0x00 ; '.'
0000000000008025         db  0x00 ; '.'
0000000000008026         db  0x00 ; '.'
0000000000008027         db  0x00 ; '.'
0000000000008028         dd         0x00000010                                  ; Length of the record
000000000000802c         dd         0x00000144                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008030         db         0x70, 0xa0, 2 dup (0xff)                    ; begin 0x20a0
0000000000008034         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x20a8)
0000000000008038         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008039         align      4
000000000000803c         dd         0x00000010                                  ; Length of the record
0000000000008040         dd         0x00000158                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008044         db         0x6c, 0xa0, 2 dup (0xff)                    ; begin 0x20b0
0000000000008048         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x20b8)
000000000000804c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000804d         align      16
0000000000008050         dd         0x0000002c                                  ; Length of the record
0000000000008054         dd         0x0000016c                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008058         db         0x68, 0xa0, 2 dup (0xff)                    ; begin 0x20c0
000000000000805c         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x2164)
0000000000008060         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008061         db  0x41 ; 'A'
0000000000008062         db  0x0e ; '.'
0000000000008063         db  0x10 ; '.'
0000000000008064         db  0x86 ; '.'
0000000000008065         db  0x02 ; '.'
0000000000008066         db  0x41 ; 'A'
0000000000008067         db  0x0e ; '.'
0000000000008068         db  0x18 ; '.'
0000000000008069         db  0x83 ; '.'
000000000000806a         db  0x03 ; '.'
000000000000806b         db  0x44 ; 'D'
000000000000806c         db  0x0e ; '.'
000000000000806d         db  0x20 ; ' '
000000000000806e         db  0x7a ; 'z'
000000000000806f         db  0x0a ; '.'
0000000000008070         db  0x0e ; '.'
0000000000008071         db  0x18 ; '.'
0000000000008072         db  0x41 ; 'A'
0000000000008073         db  0x0e ; '.'
0000000000008074         db  0x10 ; '.'
0000000000008075         db  0x41 ; 'A'
0000000000008076         db  0x0e ; '.'
0000000000008077         db  0x08 ; '.'
0000000000008078         db  0x41 ; 'A'
0000000000008079         db  0x0b ; '.'
000000000000807a         db  0x00 ; '.'
000000000000807b         db  0x00 ; '.'
000000000000807c         db  0x00 ; '.'
000000000000807d         db  0x00 ; '.'
000000000000807e         db  0x00 ; '.'
000000000000807f         db  0x00 ; '.'
0000000000008080         dd         0x00000024                                  ; Length of the record
0000000000008084         dd         0x0000019c                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008088         db         0xe8, 0xa0, 2 dup (0xff)                    ; begin 0x2170
000000000000808c         db         0x33, 3 dup (0x00)                          ; length 0x33 (end at 0x21a3)
0000000000008090         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008091         db  0x41 ; 'A'
0000000000008092         db  0x0e ; '.'
0000000000008093         db  0x10 ; '.'
0000000000008094         db  0x86 ; '.'
0000000000008095         db  0x02 ; '.'
0000000000008096         db  0x41 ; 'A'
0000000000008097         db  0x0e ; '.'
0000000000008098         db  0x18 ; '.'
0000000000008099         db  0x83 ; '.'
000000000000809a         db  0x03 ; '.'
000000000000809b         db  0x47 ; 'G'
000000000000809c         db  0x0e ; '.'
000000000000809d         db  0x20 ; ' '
000000000000809e         db  0x67 ; 'g'
000000000000809f         db  0x0e ; '.'
00000000000080a0         db  0x18 ; '.'
00000000000080a1         db  0x41 ; 'A'
00000000000080a2         db  0x0e ; '.'
00000000000080a3         db  0x10 ; '.'
00000000000080a4         db  0x41 ; 'A'
00000000000080a5         db  0x0e ; '.'
00000000000080a6         db  0x08 ; '.'
00000000000080a7         db  0x00 ; '.'
00000000000080a8         dd         0x0000001c                                  ; Length of the record
00000000000080ac         dd         0x000001c4                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
00000000000080b0         db         0x00, 0xa1, 2 dup (0xff)                    ; begin 0x21b0
00000000000080b4         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x224f)
00000000000080b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000080b9         db  0x44 ; 'D'
00000000000080ba         db  0x0e ; '.'
00000000000080bb         db  0x10 ; '.'
00000000000080bc         db  0x83 ; '.'
00000000000080bd         db  0x02 ; '.'
00000000000080be         db  0x02 ; '.'
00000000000080bf         db  0x78 ; 'x'
00000000000080c0         db  0x0a ; '.'
00000000000080c1         db  0x0e ; '.'
00000000000080c2         db  0x08 ; '.'
00000000000080c3         db  0x41 ; 'A'
00000000000080c4         db  0x0b ; '.'
00000000000080c5         db  0x00 ; '.'
00000000000080c6         db  0x00 ; '.'
00000000000080c7         db  0x00 ; '.'
00000000000080c8         dd         0x00000040                                  ; Length of the record
00000000000080cc         dd         0x000001e4                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
00000000000080d0         db         0x80, 0xa1, 2 dup (0xff)                    ; begin 0x2250
00000000000080d4         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x2337)
00000000000080d8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000080d9         db  0x41 ; 'A'
00000000000080da         db  0x0e ; '.'
00000000000080db         db  0x10 ; '.'
00000000000080dc         db  0x86 ; '.'
00000000000080dd         db  0x02 ; '.'
00000000000080de         db  0x41 ; 'A'
00000000000080df         db  0x0e ; '.'
00000000000080e0         db  0x18 ; '.'
00000000000080e1         db  0x83 ; '.'
00000000000080e2         db  0x03 ; '.'
00000000000080e3         db  0x49 ; 'I'
00000000000080e4         db  0x0e ; '.'
00000000000080e5         db  0x20 ; ' '
00000000000080e6         db  0x6e ; 'n'
00000000000080e7         db  0x0a ; '.'
00000000000080e8         db  0x0e ; '.'
00000000000080e9         db  0x18 ; '.'
00000000000080ea         db  0x41 ; 'A'
00000000000080eb         db  0x0e ; '.'
00000000000080ec         db  0x10 ; '.'
00000000000080ed         db  0x41 ; 'A'
00000000000080ee         db  0x0e ; '.'
00000000000080ef         db  0x08 ; '.'
00000000000080f0         db  0x45 ; 'E'
00000000000080f1         db  0x0b ; '.'
00000000000080f2         db  0x02 ; '.'
00000000000080f3         db  0x4a ; 'J'
00000000000080f4         db  0x0a ; '.'
00000000000080f5         db  0x0e ; '.'
00000000000080f6         db  0x18 ; '.'
00000000000080f7         db  0x41 ; 'A'
00000000000080f8         db  0x0e ; '.'
00000000000080f9         db  0x10 ; '.'
00000000000080fa         db  0x41 ; 'A'
00000000000080fb         db  0x0e ; '.'
00000000000080fc         db  0x08 ; '.'
00000000000080fd         db  0x44 ; 'D'
00000000000080fe         db  0x0b ; '.'
00000000000080ff         db  0x02 ; '.'
0000000000008100         db  0x54 ; 'T'
0000000000008101         db  0x0e ; '.'
0000000000008102         db  0x18 ; '.'
0000000000008103         db  0x41 ; 'A'
0000000000008104         db  0x0e ; '.'
0000000000008105         db  0x10 ; '.'
0000000000008106         db  0x41 ; 'A'
0000000000008107         db  0x0e ; '.'
0000000000008108         db  0x08 ; '.'
0000000000008109         db  0x00 ; '.'
000000000000810a         db  0x00 ; '.'
000000000000810b         db  0x00 ; '.'
000000000000810c         dd         0x00000074                                  ; Length of the record
0000000000008110         dd         0x00000228                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008114         db         0x2c, 0xa2, 2 dup (0xff)                    ; begin 0x2340
0000000000008118         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x3574)
000000000000811c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000811d         db  0x42 ; 'B'
000000000000811e         db  0x0e ; '.'
000000000000811f         db  0x10 ; '.'
0000000000008120         db  0x8f ; '.'
0000000000008121         db  0x02 ; '.'
0000000000008122         db  0x42 ; 'B'
0000000000008123         db  0x0e ; '.'
0000000000008124         db  0x18 ; '.'
0000000000008125         db  0x8e ; '.'
0000000000008126         db  0x03 ; '.'
0000000000008127         db  0x45 ; 'E'
0000000000008128         db  0x0e ; '.'
0000000000008129         db  0x20 ; ' '
000000000000812a         db  0x8d ; '.'
000000000000812b         db  0x04 ; '.'
000000000000812c         db  0x42 ; 'B'
000000000000812d         db  0x0e ; '.'
000000000000812e         db  0x28 ; '('
000000000000812f         db  0x8c ; '.'
0000000000008130         db  0x05 ; '.'
0000000000008131         db  0x44 ; 'D'
0000000000008132         db  0x0e ; '.'
0000000000008133         db  0x30 ; '0'
0000000000008134         db  0x86 ; '.'
0000000000008135         db  0x06 ; '.'
0000000000008136         db  0x41 ; 'A'
0000000000008137         db  0x0e ; '.'
0000000000008138         db  0x38 ; '8'
0000000000008139         db  0x83 ; '.'
000000000000813a         db  0x07 ; '.'
000000000000813b         db  0x53 ; 'S'
000000000000813c         db  0x0e ; '.'
000000000000813d         db  0xf0 ; '.'
000000000000813e         db  0x01 ; '.'
000000000000813f         db  0x03 ; '.'
0000000000008140         db  0x81 ; '.'
0000000000008141         db  0x0b ; '.'
0000000000008142         db  0x0e ; '.'
0000000000008143         db  0xf8 ; '.'
0000000000008144         db  0x01 ; '.'
0000000000008145         db  0x4a ; 'J'
0000000000008146         db  0x0e ; '.'
0000000000008147         db  0x80 ; '.'
0000000000008148         db  0x02 ; '.'
0000000000008149         db  0x44 ; 'D'
000000000000814a         db  0x0e ; '.'
000000000000814b         db  0x88 ; '.'
000000000000814c         db  0x02 ; '.'
000000000000814d         db  0x45 ; 'E'
000000000000814e         db  0x0e ; '.'
000000000000814f         db  0x90 ; '.'
0000000000008150         db  0x02 ; '.'
0000000000008151         db  0x5f ; '_'
0000000000008152         db  0x0e ; '.'
0000000000008153         db  0xf0 ; '.'
0000000000008154         db  0x01 ; '.'
0000000000008155         db  0x64 ; 'd'
0000000000008156         db  0x0a ; '.'
0000000000008157         db  0x0e ; '.'
0000000000008158         db  0x38 ; '8'
0000000000008159         db  0x41 ; 'A'
000000000000815a         db  0x0e ; '.'
000000000000815b         db  0x30 ; '0'
000000000000815c         db  0x41 ; 'A'
000000000000815d         db  0x0e ; '.'
000000000000815e         db  0x28 ; '('
000000000000815f         db  0x42 ; 'B'
0000000000008160         db  0x0e ; '.'
0000000000008161         db  0x20 ; ' '
0000000000008162         db  0x42 ; 'B'
0000000000008163         db  0x0e ; '.'
0000000000008164         db  0x18 ; '.'
0000000000008165         db  0x42 ; 'B'
0000000000008166         db  0x0e ; '.'
0000000000008167         db  0x10 ; '.'
0000000000008168         db  0x42 ; 'B'
0000000000008169         db  0x0e ; '.'
000000000000816a         db  0x08 ; '.'
000000000000816b         db  0x44 ; 'D'
000000000000816c         db  0x0b ; '.'
000000000000816d         db  0x03 ; '.'
000000000000816e         db  0x99 ; '.'
000000000000816f         db  0x05 ; '.'
0000000000008170         db  0x0e ; '.'
0000000000008171         db  0xf8 ; '.'
0000000000008172         db  0x01 ; '.'
0000000000008173         db  0x4d ; 'M'
0000000000008174         db  0x0e ; '.'
0000000000008175         db  0x80 ; '.'
0000000000008176         db  0x02 ; '.'
0000000000008177         db  0x44 ; 'D'
0000000000008178         db  0x0e ; '.'
0000000000008179         db  0x88 ; '.'
000000000000817a         db  0x02 ; '.'
000000000000817b         db  0x47 ; 'G'
000000000000817c         db  0x0e ; '.'
000000000000817d         db  0x90 ; '.'
000000000000817e         db  0x02 ; '.'
000000000000817f         db  0x5b ; '['
0000000000008180         db  0x0e ; '.'
0000000000008181         db  0xf0 ; '.'
0000000000008182         db  0x01 ; '.'
0000000000008183         db  0x00 ; '.'
0000000000008184         dd         0x00000068                                  ; Length of the record
0000000000008188         dd         0x000002a0                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
000000000000818c         db         0xf4, 0xb3, 2 dup (0xff)                    ; begin 0x3580
0000000000008190         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x372b)
0000000000008194         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008195         db  0x42 ; 'B'
0000000000008196         db  0x0e ; '.'
0000000000008197         db  0x10 ; '.'
0000000000008198         db  0x8f ; '.'
0000000000008199         db  0x02 ; '.'
000000000000819a         db  0x42 ; 'B'
000000000000819b         db  0x0e ; '.'
000000000000819c         db  0x18 ; '.'
000000000000819d         db  0x8e ; '.'
000000000000819e         db  0x03 ; '.'
000000000000819f         db  0x45 ; 'E'
00000000000081a0         db  0x0e ; '.'
00000000000081a1         db  0x20 ; ' '
00000000000081a2         db  0x8d ; '.'
00000000000081a3         db  0x04 ; '.'
00000000000081a4         db  0x42 ; 'B'
00000000000081a5         db  0x0e ; '.'
00000000000081a6         db  0x28 ; '('
00000000000081a7         db  0x8c ; '.'
00000000000081a8         db  0x05 ; '.'
00000000000081a9         db  0x44 ; 'D'
00000000000081aa         db  0x0e ; '.'
00000000000081ab         db  0x30 ; '0'
00000000000081ac         db  0x86 ; '.'
00000000000081ad         db  0x06 ; '.'
00000000000081ae         db  0x41 ; 'A'
00000000000081af         db  0x0e ; '.'
00000000000081b0         db  0x38 ; '8'
00000000000081b1         db  0x83 ; '.'
00000000000081b2         db  0x07 ; '.'
00000000000081b3         db  0x47 ; 'G'
00000000000081b4         db  0x0e ; '.'
00000000000081b5         db  0x60 ; '`'
00000000000081b6         db  0x02 ; '.'
00000000000081b7         db  0x99 ; '.'
00000000000081b8         db  0x0e ; '.'
00000000000081b9         db  0x68 ; 'h'
00000000000081ba         db  0x5f ; '_'
00000000000081bb         db  0x0e ; '.'
00000000000081bc         db  0x70 ; 'p'
00000000000081bd         db  0x46 ; 'F'
00000000000081be         db  0x0e ; '.'
00000000000081bf         db  0x78 ; 'x'
00000000000081c0         db  0x42 ; 'B'
00000000000081c1         db  0x0e ; '.'
00000000000081c2         db  0x80 ; '.'
00000000000081c3         db  0x01 ; '.'
00000000000081c4         db  0x59 ; 'Y'
00000000000081c5         db  0x0e ; '.'
00000000000081c6         db  0x60 ; '`'
00000000000081c7         db  0x02 ; '.'
00000000000081c8         db  0x40 ; '@'
00000000000081c9         db  0x0e ; '.'
00000000000081ca         db  0x68 ; 'h'
00000000000081cb         db  0x4b ; 'K'
00000000000081cc         db  0x0e ; '.'
00000000000081cd         db  0x70 ; 'p'
00000000000081ce         db  0x43 ; 'C'
00000000000081cf         db  0x0e ; '.'
00000000000081d0         db  0x78 ; 'x'
00000000000081d1         db  0x45 ; 'E'
00000000000081d2         db  0x0e ; '.'
00000000000081d3         db  0x80 ; '.'
00000000000081d4         db  0x01 ; '.'
00000000000081d5         db  0x5e ; '^'
00000000000081d6         db  0x0e ; '.'
00000000000081d7         db  0x60 ; '`'
00000000000081d8         db  0x4c ; 'L'
00000000000081d9         db  0x0a ; '.'
00000000000081da         db  0x0e ; '.'
00000000000081db         db  0x38 ; '8'
00000000000081dc         db  0x44 ; 'D'
00000000000081dd         db  0x0e ; '.'
00000000000081de         db  0x30 ; '0'
00000000000081df         db  0x41 ; 'A'
00000000000081e0         db  0x0e ; '.'
00000000000081e1         db  0x28 ; '('
00000000000081e2         db  0x42 ; 'B'
00000000000081e3         db  0x0e ; '.'
00000000000081e4         db  0x20 ; ' '
00000000000081e5         db  0x42 ; 'B'
00000000000081e6         db  0x0e ; '.'
00000000000081e7         db  0x18 ; '.'
00000000000081e8         db  0x42 ; 'B'
00000000000081e9         db  0x0e ; '.'
00000000000081ea         db  0x10 ; '.'
00000000000081eb         db  0x42 ; 'B'
00000000000081ec         db  0x0e ; '.'
00000000000081ed         db  0x08 ; '.'
00000000000081ee         db  0x46 ; 'F'
00000000000081ef         db  0x0b ; '.'
00000000000081f0         dd         0x00000028                                  ; Length of the record
00000000000081f4         dd         0x0000030c                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
00000000000081f8         db         0x38, 0xb5, 2 dup (0xff)                    ; begin 0x3730
00000000000081fc         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x3766)
0000000000008200         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008201         db  0x42 ; 'B'
0000000000008202         db  0x0e ; '.'
0000000000008203         db  0x10 ; '.'
0000000000008204         db  0x8c ; '.'
0000000000008205         db  0x02 ; '.'
0000000000008206         db  0x41 ; 'A'
0000000000008207         db  0x0e ; '.'
0000000000008208         db  0x18 ; '.'
0000000000008209         db  0x86 ; '.'
000000000000820a         db  0x03 ; '.'
000000000000820b         db  0x41 ; 'A'
000000000000820c         db  0x0e ; '.'
000000000000820d         db  0x20 ; ' '
000000000000820e         db  0x83 ; '.'
000000000000820f         db  0x04 ; '.'
0000000000008210         db  0x6e ; 'n'
0000000000008211         db  0x0e ; '.'
0000000000008212         db  0x18 ; '.'
0000000000008213         db  0x41 ; 'A'
0000000000008214         db  0x0e ; '.'
0000000000008215         db  0x10 ; '.'
0000000000008216         db  0x42 ; 'B'
0000000000008217         db  0x0e ; '.'
0000000000008218         db  0x08 ; '.'
0000000000008219         db  0x00 ; '.'
000000000000821a         db  0x00 ; '.'
000000000000821b         db  0x00 ; '.'
000000000000821c         dd         0x00000010                                  ; Length of the record
0000000000008220         dd         0x00000338                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008224         db         0x4c, 0xb5, 2 dup (0xff)                    ; begin 0x3770
0000000000008228         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x3781)
000000000000822c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000822d         align      16
0000000000008230         dd         0x00000010                                  ; Length of the record
0000000000008234         dd         0x0000034c                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008238         db         0x58, 0xb5, 2 dup (0xff)                    ; begin 0x3790
000000000000823c         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x37a1)
0000000000008240         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008241         align      4
0000000000008244         dd         0x00000010                                  ; Length of the record
0000000000008248         dd         0x00000360                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
000000000000824c         db         0x64, 0xb5, 2 dup (0xff)                    ; begin 0x37b0
0000000000008250         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x37e5)
0000000000008254         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008255         align      8
0000000000008258         dd         0x00000010                                  ; Length of the record
000000000000825c         dd         0x00000374                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008260         db         0x90, 0xb5, 2 dup (0xff)                    ; begin 0x37f0
0000000000008264         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x3805)
0000000000008268         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008269         align      4
000000000000826c         dd         0x00000010                                  ; Length of the record
0000000000008270         dd         0x00000388                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008274         db         0x9c, 0xb5, 2 dup (0xff)                    ; begin 0x3810
0000000000008278         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x3840)
000000000000827c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000827d         db  0x6b ; 'k'
000000000000827e         db  0x0e ; '.'
000000000000827f         db  0x10 ; '.'
0000000000008280         dd         0x00000050                                  ; Length of the record
0000000000008284         dd         0x0000039c                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008288         db         0xb8, 0xb5, 2 dup (0xff)                    ; begin 0x3840
000000000000828c         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x38b4)
0000000000008290         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008291         db  0x42 ; 'B'
0000000000008292         db  0x0e ; '.'
0000000000008293         db  0x10 ; '.'
0000000000008294         db  0x8f ; '.'
0000000000008295         db  0x02 ; '.'
0000000000008296         db  0x42 ; 'B'
0000000000008297         db  0x0e ; '.'
0000000000008298         db  0x18 ; '.'
0000000000008299         db  0x8e ; '.'
000000000000829a         db  0x03 ; '.'
000000000000829b         db  0x49 ; 'I'
000000000000829c         db  0x0e ; '.'
000000000000829d         db  0x20 ; ' '
000000000000829e         db  0x8d ; '.'
000000000000829f         db  0x04 ; '.'
00000000000082a0         db  0x42 ; 'B'
00000000000082a1         db  0x0e ; '.'
00000000000082a2         db  0x28 ; '('
00000000000082a3         db  0x8c ; '.'
00000000000082a4         db  0x05 ; '.'
00000000000082a5         db  0x44 ; 'D'
00000000000082a6         db  0x0e ; '.'
00000000000082a7         db  0x30 ; '0'
00000000000082a8         db  0x86 ; '.'
00000000000082a9         db  0x06 ; '.'
00000000000082aa         db  0x41 ; 'A'
00000000000082ab         db  0x0e ; '.'
00000000000082ac         db  0x38 ; '8'
00000000000082ad         db  0x83 ; '.'
00000000000082ae         db  0x07 ; '.'
00000000000082af         db  0x4d ; 'M'
00000000000082b0         db  0x0e ; '.'
00000000000082b1         db  0x50 ; 'P'
00000000000082b2         db  0x5f ; '_'
00000000000082b3         db  0x0e ; '.'
00000000000082b4         db  0x58 ; 'X'
00000000000082b5         db  0x47 ; 'G'
00000000000082b6         db  0x0e ; '.'
00000000000082b7         db  0x60 ; '`'
00000000000082b8         db  0x46 ; 'F'
00000000000082b9         db  0x0e ; '.'
00000000000082ba         db  0x68 ; 'h'
00000000000082bb         db  0x44 ; 'D'
00000000000082bc         db  0x0e ; '.'
00000000000082bd         db  0x70 ; 'p'
00000000000082be         db  0x58 ; 'X'
00000000000082bf         db  0x0e ; '.'
00000000000082c0         db  0x38 ; '8'
00000000000082c1         db  0x41 ; 'A'
00000000000082c2         db  0x0e ; '.'
00000000000082c3         db  0x30 ; '0'
00000000000082c4         db  0x41 ; 'A'
00000000000082c5         db  0x0e ; '.'
00000000000082c6         db  0x28 ; '('
00000000000082c7         db  0x42 ; 'B'
00000000000082c8         db  0x0e ; '.'
00000000000082c9         db  0x20 ; ' '
00000000000082ca         db  0x42 ; 'B'
00000000000082cb         db  0x0e ; '.'
00000000000082cc         db  0x18 ; '.'
00000000000082cd         db  0x42 ; 'B'
00000000000082ce         db  0x0e ; '.'
00000000000082cf         db  0x10 ; '.'
00000000000082d0         db  0x42 ; 'B'
00000000000082d1         db  0x0e ; '.'
00000000000082d2         db  0x08 ; '.'
00000000000082d3         db  0x00 ; '.'
00000000000082d4         dd         0x00000068                                  ; Length of the record
00000000000082d8         dd         0x000003f0                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
00000000000082dc         db         0xe4, 0xb5, 2 dup (0xff)                    ; begin 0x38c0
00000000000082e0         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x39a3)
00000000000082e4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000082e5         db  0x42 ; 'B'
00000000000082e6         db  0x0e ; '.'
00000000000082e7         db  0x10 ; '.'
00000000000082e8         db  0x8f ; '.'
00000000000082e9         db  0x02 ; '.'
00000000000082ea         db  0x42 ; 'B'
00000000000082eb         db  0x0e ; '.'
00000000000082ec         db  0x18 ; '.'
00000000000082ed         db  0x8e ; '.'
00000000000082ee         db  0x03 ; '.'
00000000000082ef         db  0x49 ; 'I'
00000000000082f0         db  0x0e ; '.'
00000000000082f1         db  0x20 ; ' '
00000000000082f2         db  0x8d ; '.'
00000000000082f3         db  0x04 ; '.'
00000000000082f4         db  0x42 ; 'B'
00000000000082f5         db  0x0e ; '.'
00000000000082f6         db  0x28 ; '('
00000000000082f7         db  0x8c ; '.'
00000000000082f8         db  0x05 ; '.'
00000000000082f9         db  0x44 ; 'D'
00000000000082fa         db  0x0e ; '.'
00000000000082fb         db  0x30 ; '0'
00000000000082fc         db  0x86 ; '.'
00000000000082fd         db  0x06 ; '.'
00000000000082fe         db  0x41 ; 'A'
00000000000082ff         db  0x0e ; '.'
0000000000008300         db  0x38 ; '8'
0000000000008301         db  0x83 ; '.'
0000000000008302         db  0x07 ; '.'
0000000000008303         db  0x4d ; 'M'
0000000000008304         db  0x0e ; '.'
0000000000008305         db  0x70 ; 'p'
0000000000008306         db  0x65 ; 'e'
0000000000008307         db  0x0e ; '.'
0000000000008308         db  0x78 ; 'x'
0000000000008309         db  0x4d ; 'M'
000000000000830a         db  0x0e ; '.'
000000000000830b         db  0x80 ; '.'
000000000000830c         db  0x01 ; '.'
000000000000830d         db  0x46 ; 'F'
000000000000830e         db  0x0e ; '.'
000000000000830f         db  0x88 ; '.'
0000000000008310         db  0x01 ; '.'
0000000000008311         db  0x42 ; 'B'
0000000000008312         db  0x0e ; '.'
0000000000008313         db  0x90 ; '.'
0000000000008314         db  0x01 ; '.'
0000000000008315         db  0x5e ; '^'
0000000000008316         db  0x0e ; '.'
0000000000008317         db  0x70 ; 'p'
0000000000008318         db  0x56 ; 'V'
0000000000008319         db  0x0e ; '.'
000000000000831a         db  0x78 ; 'x'
000000000000831b         db  0x43 ; 'C'
000000000000831c         db  0x0e ; '.'
000000000000831d         db  0x80 ; '.'
000000000000831e         db  0x01 ; '.'
000000000000831f         db  0x43 ; 'C'
0000000000008320         db  0x0e ; '.'
0000000000008321         db  0x88 ; '.'
0000000000008322         db  0x01 ; '.'
0000000000008323         db  0x56 ; 'V'
0000000000008324         db  0x0e ; '.'
0000000000008325         db  0x90 ; '.'
0000000000008326         db  0x01 ; '.'
0000000000008327         db  0x52 ; 'R'
0000000000008328         db  0x0e ; '.'
0000000000008329         db  0x70 ; 'p'
000000000000832a         db  0x5b ; '['
000000000000832b         db  0x0e ; '.'
000000000000832c         db  0x38 ; '8'
000000000000832d         db  0x41 ; 'A'
000000000000832e         db  0x0e ; '.'
000000000000832f         db  0x30 ; '0'
0000000000008330         db  0x41 ; 'A'
0000000000008331         db  0x0e ; '.'
0000000000008332         db  0x28 ; '('
0000000000008333         db  0x42 ; 'B'
0000000000008334         db  0x0e ; '.'
0000000000008335         db  0x20 ; ' '
0000000000008336         db  0x42 ; 'B'
0000000000008337         db  0x0e ; '.'
0000000000008338         db  0x18 ; '.'
0000000000008339         db  0x42 ; 'B'
000000000000833a         db  0x0e ; '.'
000000000000833b         db  0x10 ; '.'
000000000000833c         db  0x42 ; 'B'
000000000000833d         db  0x0e ; '.'
000000000000833e         db  0x08 ; '.'
000000000000833f         db  0x00 ; '.'
0000000000008340         dd         0x00000010                                  ; Length of the record
0000000000008344         dd         0x0000045c                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008348         db         0x68, 0xb6, 2 dup (0xff)                    ; begin 0x39b0
000000000000834c         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x39ba)
0000000000008350         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008351         align      4
0000000000008354         dd         0x00000028                                  ; Length of the record
0000000000008358         dd         0x00000470                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
000000000000835c         db         0x64, 0xb6, 2 dup (0xff)                    ; begin 0x39c0
0000000000008360         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x3a53)
0000000000008364         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008365         db  0x48 ; 'H'
0000000000008366         db  0x0e ; '.'
0000000000008367         db  0x10 ; '.'
0000000000008368         db  0x8c ; '.'
0000000000008369         db  0x02 ; '.'
000000000000836a         db  0x48 ; 'H'
000000000000836b         db  0x0e ; '.'
000000000000836c         db  0x18 ; '.'
000000000000836d         db  0x86 ; '.'
000000000000836e         db  0x03 ; '.'
000000000000836f         db  0x41 ; 'A'
0000000000008370         db  0x0e ; '.'
0000000000008371         db  0x20 ; ' '
0000000000008372         db  0x83 ; '.'
0000000000008373         db  0x04 ; '.'
0000000000008374         db  0x02 ; '.'
0000000000008375         db  0x74 ; 't'
0000000000008376         db  0x0e ; '.'
0000000000008377         db  0x18 ; '.'
0000000000008378         db  0x4b ; 'K'
0000000000008379         db  0x0e ; '.'
000000000000837a         db  0x10 ; '.'
000000000000837b         db  0x42 ; 'B'
000000000000837c         db  0x0e ; '.'
000000000000837d         db  0x08 ; '.'
000000000000837e         db  0x00 ; '.'
000000000000837f         db  0x00 ; '.'
0000000000008380         dd         0x00000010                                  ; Length of the record
0000000000008384         dd         0x0000049c                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008388         db         0xd8, 0xb6, 2 dup (0xff)                    ; begin 0x3a60
000000000000838c         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x3a73)
0000000000008390         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008391         align      4
0000000000008394         dd         0x00000010                                  ; Length of the record
0000000000008398         dd         0x000004b0                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
000000000000839c         db         0xe4, 0xb6, 2 dup (0xff)                    ; begin 0x3a80
00000000000083a0         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x3a8c)
00000000000083a4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000083a5         align      8
00000000000083a8         dd         0x00000010                                  ; Length of the record
00000000000083ac         dd         0x000004c4                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
00000000000083b0         db         0xe0, 0xb6, 2 dup (0xff)                    ; begin 0x3a90
00000000000083b4         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x3aa8)
00000000000083b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000083b9         align      4
00000000000083bc         dd         0x00000010                                  ; Length of the record
00000000000083c0         dd         0x000004d8                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
00000000000083c4         db         0xec, 0xb6, 2 dup (0xff)                    ; begin 0x3ab0
00000000000083c8         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x3ac4)
00000000000083cc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000083cd         align      16
00000000000083d0         dd         0x00000018                                  ; Length of the record
00000000000083d4         dd         0x000004ec                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
00000000000083d8         db         0xf8, 0xb6, 2 dup (0xff)                    ; begin 0x3ad0
00000000000083dc         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x3b5e)
00000000000083e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000083e1         db  0x44 ; 'D'
00000000000083e2         db  0x0e ; '.'
00000000000083e3         db  0x50 ; 'P'
00000000000083e4         db  0x02 ; '.'
00000000000083e5         db  0x7f ; '.'
00000000000083e6         db  0x0a ; '.'
00000000000083e7         db  0x0e ; '.'
00000000000083e8         db  0x08 ; '.'
00000000000083e9         db  0x41 ; 'A'
00000000000083ea         db  0x0b ; '.'
00000000000083eb         db  0x00 ; '.'
00000000000083ec         dd         0x00000018                                  ; Length of the record
00000000000083f0         dd         0x00000508                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
00000000000083f4         db         0x6c, 0xb7, 2 dup (0xff)                    ; begin 0x3b60
00000000000083f8         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x3bea)
00000000000083fc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000083fd         db  0x44 ; 'D'
00000000000083fe         db  0x0e ; '.'
00000000000083ff         db  0x50 ; 'P'
0000000000008400         db  0x02 ; '.'
0000000000008401         db  0x7b ; '{'
0000000000008402         db  0x0a ; '.'
0000000000008403         db  0x0e ; '.'
0000000000008404         db  0x08 ; '.'
0000000000008405         db  0x41 ; 'A'
0000000000008406         db  0x0b ; '.'
0000000000008407         db  0x00 ; '.'
0000000000008408         dd         0x00000010                                  ; Length of the record
000000000000840c         dd         0x00000524                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008410         db         0xe0, 0xb7, 2 dup (0xff)                    ; begin 0x3bf0
0000000000008414         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x3bfc)
0000000000008418         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008419         align      4
000000000000841c         dd         0x00000010                                  ; Length of the record
0000000000008420         dd         0x00000538                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008424         db         0xdc, 0xb7, 2 dup (0xff)                    ; begin 0x3c00
0000000000008428         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x3c0f)
000000000000842c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000842d         align      16
0000000000008430         dd         0x00000018                                  ; Length of the record
0000000000008434         dd         0x0000054c                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008438         db         0xd8, 0xb7, 2 dup (0xff)                    ; begin 0x3c10
000000000000843c         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x3ca8)
0000000000008440         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008441         db  0x44 ; 'D'
0000000000008442         db  0x0e ; '.'
0000000000008443         db  0x50 ; 'P'
0000000000008444         db  0x02 ; '.'
0000000000008445         db  0x8e ; '.'
0000000000008446         db  0x0a ; '.'
0000000000008447         db  0x0e ; '.'
0000000000008448         db  0x08 ; '.'
0000000000008449         db  0x41 ; 'A'
000000000000844a         db  0x0b ; '.'
000000000000844b         db  0x00 ; '.'
000000000000844c         dd         0x00000010                                  ; Length of the record
0000000000008450         dd         0x00000568                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008454         db         0x5c, 0xb8, 2 dup (0xff)                    ; begin 0x3cb0
0000000000008458         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x3cc0)
000000000000845c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000845d         align      32
0000000000008460         dd         0x00000010                                  ; Length of the record
0000000000008464         dd         0x0000057c                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008468         db         0x58, 0xb8, 2 dup (0xff)                    ; begin 0x3cc0
000000000000846c         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x3cd1)
0000000000008470         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008471         align      4
0000000000008474         dd         0x00000010                                  ; Length of the record
0000000000008478         dd         0x00000590                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
000000000000847c         db         0x64, 0xb8, 2 dup (0xff)                    ; begin 0x3ce0
0000000000008480         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x3cea)
0000000000008484         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008485         align      8
0000000000008488         dd         0x00000018                                  ; Length of the record
000000000000848c         dd         0x000005a4                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008490         db         0x60, 0xb8, 2 dup (0xff)                    ; begin 0x3cf0
0000000000008494         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x3d7e)
0000000000008498         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008499         db  0x44 ; 'D'
000000000000849a         db  0x0e ; '.'
000000000000849b         db  0x50 ; 'P'
000000000000849c         db  0x02 ; '.'
000000000000849d         db  0x7f ; '.'
000000000000849e         db  0x0a ; '.'
000000000000849f         db  0x0e ; '.'
00000000000084a0         db  0x08 ; '.'
00000000000084a1         db  0x41 ; 'A'
00000000000084a2         db  0x0b ; '.'
00000000000084a3         db  0x00 ; '.'
00000000000084a4         dd         0x00000018                                  ; Length of the record
00000000000084a8         dd         0x000005c0                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
00000000000084ac         db         0xd4, 0xb8, 2 dup (0xff)                    ; begin 0x3d80
00000000000084b0         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x3e11)
00000000000084b4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000084b5         db  0x44 ; 'D'
00000000000084b6         db  0x0e ; '.'
00000000000084b7         db  0x50 ; 'P'
00000000000084b8         db  0x02 ; '.'
00000000000084b9         db  0x82 ; '.'
00000000000084ba         db  0x0a ; '.'
00000000000084bb         db  0x0e ; '.'
00000000000084bc         db  0x08 ; '.'
00000000000084bd         db  0x41 ; 'A'
00000000000084be         db  0x0b ; '.'
00000000000084bf         db  0x00 ; '.'
00000000000084c0         dd         0x00000010                                  ; Length of the record
00000000000084c4         dd         0x000005dc                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
00000000000084c8         db         0x58, 0xb9, 2 dup (0xff)                    ; begin 0x3e20
00000000000084cc         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x3e2c)
00000000000084d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000084d1         align      4
00000000000084d4         dd         0x00000010                                  ; Length of the record
00000000000084d8         dd         0x000005f0                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
00000000000084dc         db         0x54, 0xb9, 2 dup (0xff)                    ; begin 0x3e30
00000000000084e0         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x3e47)
00000000000084e4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000084e5         align      8
00000000000084e8         dd         0x00000010                                  ; Length of the record
00000000000084ec         dd         0x00000604                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
00000000000084f0         db         0x60, 0xb9, 2 dup (0xff)                    ; begin 0x3e50
00000000000084f4         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x3e63)
00000000000084f8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000084f9         align      4
00000000000084fc         dd         0x00000010                                  ; Length of the record
0000000000008500         dd         0x00000618                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008504         db         0x6c, 0xb9, 2 dup (0xff)                    ; begin 0x3e70
0000000000008508         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x3e7c)
000000000000850c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000850d         align      16
0000000000008510         dd         0x00000010                                  ; Length of the record
0000000000008514         dd         0x0000062c                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008518         db         0x68, 0xb9, 2 dup (0xff)                    ; begin 0x3e80
000000000000851c         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x3e94)
0000000000008520         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008521         align      4
0000000000008524         dd         0x00000010                                  ; Length of the record
0000000000008528         dd         0x00000640                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
000000000000852c         db         0x74, 0xb9, 2 dup (0xff)                    ; begin 0x3ea0
0000000000008530         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x3eb3)
0000000000008534         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008535         align      8
0000000000008538         dd         0x00000014                                  ; Length of the record
000000000000853c         dd         0x00000654                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008540         db         0x80, 0xb9, 2 dup (0xff)                    ; begin 0x3ec0
0000000000008544         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x3ed8)
0000000000008548         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008549         align      16
0000000000008550         dd         0x00000110                                  ; Length of the record
0000000000008554         dd         0x0000066c                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008558         db         0x88, 0xb9, 2 dup (0xff)                    ; begin 0x3ee0
000000000000855c         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x42f7)
0000000000008560         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008561         db  0x42 ; 'B'
0000000000008562         db  0x0e ; '.'
0000000000008563         db  0x10 ; '.'
0000000000008564         db  0x8f ; '.'
0000000000008565         db  0x02 ; '.'
0000000000008566         db  0x42 ; 'B'
0000000000008567         db  0x0e ; '.'
0000000000008568         db  0x18 ; '.'
0000000000008569         db  0x8e ; '.'
000000000000856a         db  0x03 ; '.'
000000000000856b         db  0x42 ; 'B'
000000000000856c         db  0x0e ; '.'
000000000000856d         db  0x20 ; ' '
000000000000856e         db  0x8d ; '.'
000000000000856f         db  0x04 ; '.'
0000000000008570         db  0x42 ; 'B'
0000000000008571         db  0x0e ; '.'
0000000000008572         db  0x28 ; '('
0000000000008573         db  0x8c ; '.'
0000000000008574         db  0x05 ; '.'
0000000000008575         db  0x44 ; 'D'
0000000000008576         db  0x0e ; '.'
0000000000008577         db  0x30 ; '0'
0000000000008578         db  0x86 ; '.'
0000000000008579         db  0x06 ; '.'
000000000000857a         db  0x41 ; 'A'
000000000000857b         db  0x0e ; '.'
000000000000857c         db  0x38 ; '8'
000000000000857d         db  0x83 ; '.'
000000000000857e         db  0x07 ; '.'
000000000000857f         db  0x4a ; 'J'
0000000000008580         db  0x0e ; '.'
0000000000008581         db  0x60 ; '`'
0000000000008582         db  0x02 ; '.'
0000000000008583         db  0xdd ; '.'
0000000000008584         db  0x0e ; '.'
0000000000008585         db  0x68 ; 'h'
0000000000008586         db  0x57 ; 'W'
0000000000008587         db  0x0e ; '.'
0000000000008588         db  0x70 ; 'p'
0000000000008589         db  0x42 ; 'B'
000000000000858a         db  0x0e ; '.'
000000000000858b         db  0x78 ; 'x'
000000000000858c         db  0x42 ; 'B'
000000000000858d         db  0x0e ; '.'
000000000000858e         db  0x80 ; '.'
000000000000858f         db  0x01 ; '.'
0000000000008590         db  0x42 ; 'B'
0000000000008591         db  0x0e ; '.'
0000000000008592         db  0x88 ; '.'
0000000000008593         db  0x01 ; '.'
0000000000008594         db  0x42 ; 'B'
0000000000008595         db  0x0e ; '.'
0000000000008596         db  0x90 ; '.'
0000000000008597         db  0x01 ; '.'
0000000000008598         db  0x53 ; 'S'
0000000000008599         db  0x0e ; '.'
000000000000859a         db  0x60 ; '`'
000000000000859b         db  0x44 ; 'D'
000000000000859c         db  0x0a ; '.'
000000000000859d         db  0x0e ; '.'
000000000000859e         db  0x38 ; '8'
000000000000859f         db  0x41 ; 'A'
00000000000085a0         db  0x0e ; '.'
00000000000085a1         db  0x30 ; '0'
00000000000085a2         db  0x41 ; 'A'
00000000000085a3         db  0x0e ; '.'
00000000000085a4         db  0x28 ; '('
00000000000085a5         db  0x42 ; 'B'
00000000000085a6         db  0x0e ; '.'
00000000000085a7         db  0x20 ; ' '
00000000000085a8         db  0x42 ; 'B'
00000000000085a9         db  0x0e ; '.'
00000000000085aa         db  0x18 ; '.'
00000000000085ab         db  0x42 ; 'B'
00000000000085ac         db  0x0e ; '.'
00000000000085ad         db  0x10 ; '.'
00000000000085ae         db  0x42 ; 'B'
00000000000085af         db  0x0e ; '.'
00000000000085b0         db  0x08 ; '.'
00000000000085b1         db  0x44 ; 'D'
00000000000085b2         db  0x0b ; '.'
00000000000085b3         db  0x02 ; '.'
00000000000085b4         db  0x78 ; 'x'
00000000000085b5         db  0x0a ; '.'
00000000000085b6         db  0x0e ; '.'
00000000000085b7         db  0x68 ; 'h'
00000000000085b8         db  0x48 ; 'H'
00000000000085b9         db  0x0b ; '.'
00000000000085ba         db  0x5a ; 'Z'
00000000000085bb         db  0x0a ; '.'
00000000000085bc         db  0x0e ; '.'
00000000000085bd         db  0x38 ; '8'
00000000000085be         db  0x47 ; 'G'
00000000000085bf         db  0x0e ; '.'
00000000000085c0         db  0x30 ; '0'
00000000000085c1         db  0x41 ; 'A'
00000000000085c2         db  0x0e ; '.'
00000000000085c3         db  0x28 ; '('
00000000000085c4         db  0x42 ; 'B'
00000000000085c5         db  0x0e ; '.'
00000000000085c6         db  0x20 ; ' '
00000000000085c7         db  0x42 ; 'B'
00000000000085c8         db  0x0e ; '.'
00000000000085c9         db  0x18 ; '.'
00000000000085ca         db  0x42 ; 'B'
00000000000085cb         db  0x0e ; '.'
00000000000085cc         db  0x10 ; '.'
00000000000085cd         db  0x42 ; 'B'
00000000000085ce         db  0x0e ; '.'
00000000000085cf         db  0x08 ; '.'
00000000000085d0         db  0x56 ; 'V'
00000000000085d1         db  0x0b ; '.'
00000000000085d2         db  0x5e ; '^'
00000000000085d3         db  0x0a ; '.'
00000000000085d4         db  0x0e ; '.'
00000000000085d5         db  0x38 ; '8'
00000000000085d6         db  0x52 ; 'R'
00000000000085d7         db  0x0e ; '.'
00000000000085d8         db  0x30 ; '0'
00000000000085d9         db  0x41 ; 'A'
00000000000085da         db  0x0e ; '.'
00000000000085db         db  0x28 ; '('
00000000000085dc         db  0x42 ; 'B'
00000000000085dd         db  0x0e ; '.'
00000000000085de         db  0x20 ; ' '
00000000000085df         db  0x42 ; 'B'
00000000000085e0         db  0x0e ; '.'
00000000000085e1         db  0x18 ; '.'
00000000000085e2         db  0x42 ; 'B'
00000000000085e3         db  0x0e ; '.'
00000000000085e4         db  0x10 ; '.'
00000000000085e5         db  0x42 ; 'B'
00000000000085e6         db  0x0e ; '.'
00000000000085e7         db  0x08 ; '.'
00000000000085e8         db  0x4f ; 'O'
00000000000085e9         db  0x0b ; '.'
00000000000085ea         db  0x62 ; 'b'
00000000000085eb         db  0x0a ; '.'
00000000000085ec         db  0x0e ; '.'
00000000000085ed         db  0x38 ; '8'
00000000000085ee         db  0x50 ; 'P'
00000000000085ef         db  0x0e ; '.'
00000000000085f0         db  0x30 ; '0'
00000000000085f1         db  0x41 ; 'A'
00000000000085f2         db  0x0e ; '.'
00000000000085f3         db  0x28 ; '('
00000000000085f4         db  0x42 ; 'B'
00000000000085f5         db  0x0e ; '.'
00000000000085f6         db  0x20 ; ' '
00000000000085f7         db  0x42 ; 'B'
00000000000085f8         db  0x0e ; '.'
00000000000085f9         db  0x18 ; '.'
00000000000085fa         db  0x42 ; 'B'
00000000000085fb         db  0x0e ; '.'
00000000000085fc         db  0x10 ; '.'
00000000000085fd         db  0x42 ; 'B'
00000000000085fe         db  0x0e ; '.'
00000000000085ff         db  0x08 ; '.'
0000000000008600         db  0x55 ; 'U'
0000000000008601         db  0x0b ; '.'
0000000000008602         db  0x66 ; 'f'
0000000000008603         db  0x0e ; '.'
0000000000008604         db  0x68 ; 'h'
0000000000008605         db  0x42 ; 'B'
0000000000008606         db  0x0e ; '.'
0000000000008607         db  0x70 ; 'p'
0000000000008608         db  0x5c ; '\'
0000000000008609         db  0x0e ; '.'
000000000000860a         db  0x68 ; 'h'
000000000000860b         db  0x41 ; 'A'
000000000000860c         db  0x0e ; '.'
000000000000860d         db  0x60 ; '`'
000000000000860e         db  0x44 ; 'D'
000000000000860f         db  0x0a ; '.'
0000000000008610         db  0x0e ; '.'
0000000000008611         db  0x38 ; '8'
0000000000008612         db  0x41 ; 'A'
0000000000008613         db  0x0e ; '.'
0000000000008614         db  0x30 ; '0'
0000000000008615         db  0x41 ; 'A'
0000000000008616         db  0x0e ; '.'
0000000000008617         db  0x28 ; '('
0000000000008618         db  0x42 ; 'B'
0000000000008619         db  0x0e ; '.'
000000000000861a         db  0x20 ; ' '
000000000000861b         db  0x42 ; 'B'
000000000000861c         db  0x0e ; '.'
000000000000861d         db  0x18 ; '.'
000000000000861e         db  0x42 ; 'B'
000000000000861f         db  0x0e ; '.'
0000000000008620         db  0x10 ; '.'
0000000000008621         db  0x42 ; 'B'
0000000000008622         db  0x0e ; '.'
0000000000008623         db  0x08 ; '.'
0000000000008624         db  0x45 ; 'E'
0000000000008625         db  0x0b ; '.'
0000000000008626         db  0x68 ; 'h'
0000000000008627         db  0x0a ; '.'
0000000000008628         db  0x0e ; '.'
0000000000008629         db  0x68 ; 'h'
000000000000862a         db  0x48 ; 'H'
000000000000862b         db  0x0b ; '.'
000000000000862c         db  0x72 ; 'r'
000000000000862d         db  0x0e ; '.'
000000000000862e         db  0x68 ; 'h'
000000000000862f         db  0x45 ; 'E'
0000000000008630         db  0x0e ; '.'
0000000000008631         db  0x70 ; 'p'
0000000000008632         db  0x42 ; 'B'
0000000000008633         db  0x0e ; '.'
0000000000008634         db  0x78 ; 'x'
0000000000008635         db  0x42 ; 'B'
0000000000008636         db  0x0e ; '.'
0000000000008637         db  0x80 ; '.'
0000000000008638         db  0x01 ; '.'
0000000000008639         db  0x5e ; '^'
000000000000863a         db  0x0e ; '.'
000000000000863b         db  0x60 ; '`'
000000000000863c         db  0x44 ; 'D'
000000000000863d         db  0x0a ; '.'
000000000000863e         db  0x0e ; '.'
000000000000863f         db  0x38 ; '8'
0000000000008640         db  0x41 ; 'A'
0000000000008641         db  0x0e ; '.'
0000000000008642         db  0x30 ; '0'
0000000000008643         db  0x41 ; 'A'
0000000000008644         db  0x0e ; '.'
0000000000008645         db  0x28 ; '('
0000000000008646         db  0x42 ; 'B'
0000000000008647         db  0x0e ; '.'
0000000000008648         db  0x20 ; ' '
0000000000008649         db  0x42 ; 'B'
000000000000864a         db  0x0e ; '.'
000000000000864b         db  0x18 ; '.'
000000000000864c         db  0x42 ; 'B'
000000000000864d         db  0x0e ; '.'
000000000000864e         db  0x10 ; '.'
000000000000864f         db  0x42 ; 'B'
0000000000008650         db  0x0e ; '.'
0000000000008651         db  0x08 ; '.'
0000000000008652         db  0x41 ; 'A'
0000000000008653         db  0x0b ; '.'
0000000000008654         db  0x79 ; 'y'
0000000000008655         db  0x0a ; '.'
0000000000008656         db  0x0e ; '.'
0000000000008657         db  0x68 ; 'h'
0000000000008658         db  0x42 ; 'B'
0000000000008659         db  0x0e ; '.'
000000000000865a         db  0x70 ; 'p'
000000000000865b         db  0x42 ; 'B'
000000000000865c         db  0x0e ; '.'
000000000000865d         db  0x78 ; 'x'
000000000000865e         db  0x42 ; 'B'
000000000000865f         db  0x0e ; '.'
0000000000008660         db  0x80 ; '.'
0000000000008661         db  0x01 ; '.'
0000000000008662         db  0x51 ; 'Q'
0000000000008663         db  0x0b ; '.'
0000000000008664         dd         0x00000010                                  ; Length of the record
0000000000008668         dd         0x00000780                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
000000000000866c         db         0x94, 0xbc, 2 dup (0xff)                    ; begin 0x4300
0000000000008670         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x4320)
0000000000008674         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008675         align      8
0000000000008678         dd         0x00000018                                  ; Length of the record
000000000000867c         dd         0x00000794                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008680         db         0xa0, 0xbc, 2 dup (0xff)                    ; begin 0x4320
0000000000008684         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x4398)
0000000000008688         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008689         db  0x44 ; 'D'
000000000000868a         db  0x0e ; '.'
000000000000868b         db  0x70 ; 'p'
000000000000868c         db  0x02 ; '.'
000000000000868d         db  0x60 ; '`'
000000000000868e         db  0x0a ; '.'
000000000000868f         db  0x0e ; '.'
0000000000008690         db  0x08 ; '.'
0000000000008691         db  0x41 ; 'A'
0000000000008692         db  0x0b ; '.'
0000000000008693         db  0x00 ; '.'
0000000000008694         dd         0x00000028                                  ; Length of the record
0000000000008698         dd         0x000007b0                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
000000000000869c         db         0x04, 0xbd, 2 dup (0xff)                    ; begin 0x43a0
00000000000086a0         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x4475)
00000000000086a4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000086a5         db  0x41 ; 'A'
00000000000086a6         db  0x0e ; '.'
00000000000086a7         db  0x10 ; '.'
00000000000086a8         db  0x86 ; '.'
00000000000086a9         db  0x02 ; '.'
00000000000086aa         db  0x41 ; 'A'
00000000000086ab         db  0x0e ; '.'
00000000000086ac         db  0x18 ; '.'
00000000000086ad         db  0x83 ; '.'
00000000000086ae         db  0x03 ; '.'
00000000000086af         db  0x50 ; 'P'
00000000000086b0         db  0x0e ; '.'
00000000000086b1         db  0xd0 ; '.'
00000000000086b2         db  0x01 ; '.'
00000000000086b3         db  0x02 ; '.'
00000000000086b4         db  0xab ; '.'
00000000000086b5         db  0x0a ; '.'
00000000000086b6         db  0x0e ; '.'
00000000000086b7         db  0x18 ; '.'
00000000000086b8         db  0x41 ; 'A'
00000000000086b9         db  0x0e ; '.'
00000000000086ba         db  0x10 ; '.'
00000000000086bb         db  0x41 ; 'A'
00000000000086bc         db  0x0e ; '.'
00000000000086bd         db  0x08 ; '.'
00000000000086be         db  0x41 ; 'A'
00000000000086bf         db  0x0b ; '.'
00000000000086c0         dd         0x0000001c                                  ; Length of the record
00000000000086c4         dd         0x000007dc                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
00000000000086c8         db         0xb8, 0xbd, 2 dup (0xff)                    ; begin 0x4480
00000000000086cc         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x4500)
00000000000086d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000086d1         db  0x41 ; 'A'
00000000000086d2         db  0x0e ; '.'
00000000000086d3         db  0x10 ; '.'
00000000000086d4         db  0x83 ; '.'
00000000000086d5         db  0x02 ; '.'
00000000000086d6         db  0x02 ; '.'
00000000000086d7         db  0x7a ; 'z'
00000000000086d8         db  0x0e ; '.'
00000000000086d9         db  0x08 ; '.'
00000000000086da         db  0x00 ; '.'
00000000000086db         db  0x00 ; '.'
00000000000086dc         db  0x00 ; '.'
00000000000086dd         db  0x00 ; '.'
00000000000086de         db  0x00 ; '.'
00000000000086df         db  0x00 ; '.'
00000000000086e0         dd         0x00000018                                  ; Length of the record
00000000000086e4         dd         0x000007fc                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
00000000000086e8         db         0x18, 0xbe, 2 dup (0xff)                    ; begin 0x4500
00000000000086ec         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x451a)
00000000000086f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000086f1         db  0x41 ; 'A'
00000000000086f2         db  0x0e ; '.'
00000000000086f3         db  0x10 ; '.'
00000000000086f4         db  0x83 ; '.'
00000000000086f5         db  0x02 ; '.'
00000000000086f6         db  0x53 ; 'S'
00000000000086f7         db  0x0a ; '.'
00000000000086f8         db  0x0e ; '.'
00000000000086f9         db  0x08 ; '.'
00000000000086fa         db  0x41 ; 'A'
00000000000086fb         db  0x0b ; '.'
00000000000086fc         dd         0x00000010                                  ; Length of the record
0000000000008700         dd         0x00000818                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008704         db         0x1c, 0xbe, 2 dup (0xff)                    ; begin 0x4520
0000000000008708         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x4544)
000000000000870c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000870d         db  0x5f ; '_'
000000000000870e         db  0x0e ; '.'
000000000000870f         db  0x10 ; '.'
0000000000008710         dd         0x00000010                                  ; Length of the record
0000000000008714         dd         0x0000082c                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008718         db         0x38, 0xbe, 2 dup (0xff)                    ; begin 0x4550
000000000000871c         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x4552)
0000000000008720         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008721         align      4
0000000000008724         dd         0x00000020                                  ; Length of the record
0000000000008728         dd         0x00000840                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
000000000000872c         db         0x34, 0xbe, 2 dup (0xff)                    ; begin 0x4560
0000000000008730         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x4596)
0000000000008734         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008735         db  0x44 ; 'D'
0000000000008736         db  0x0e ; '.'
0000000000008737         db  0x10 ; '.'
0000000000008738         db  0x83 ; '.'
0000000000008739         db  0x02 ; '.'
000000000000873a         db  0x5d ; ']'
000000000000873b         db  0x0a ; '.'
000000000000873c         db  0x0e ; '.'
000000000000873d         db  0x08 ; '.'
000000000000873e         db  0x47 ; 'G'
000000000000873f         db  0x0b ; '.'
0000000000008740         db  0x48 ; 'H'
0000000000008741         db  0x0a ; '.'
0000000000008742         db  0x0e ; '.'
0000000000008743         db  0x08 ; '.'
0000000000008744         db  0x41 ; 'A'
0000000000008745         db  0x0b ; '.'
0000000000008746         db  0x00 ; '.'
0000000000008747         db  0x00 ; '.'
0000000000008748         dd         0x00000010                                  ; Length of the record
000000000000874c         dd         0x00000864                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008750         db         0x50, 0xbe, 2 dup (0xff)                    ; begin 0x45a0
0000000000008754         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x45c4)
0000000000008758         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008759         db  0x5f ; '_'
000000000000875a         db  0x0e ; '.'
000000000000875b         db  0x10 ; '.'
000000000000875c         dd         0x00000014                                  ; Length of the record
0000000000008760         dd         0x00000878                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008764         db         0x6c, 0xbe, 2 dup (0xff)                    ; begin 0x45d0
0000000000008768         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x4652)
000000000000876c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000876d         db  0x02 ; '.'
000000000000876e         db  0x5f ; '_'
000000000000876f         db  0x0e ; '.'
0000000000008770         db  0x10 ; '.'
0000000000008771         db  0x49 ; 'I'
0000000000008772         db  0x0e ; '.'
0000000000008773         db  0x08 ; '.'
0000000000008774         dd         0x00000014                                  ; Length of the record
0000000000008778         dd         0x00000890                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
000000000000877c         db         0xe4, 0xbe, 2 dup (0xff)                    ; begin 0x4660
0000000000008780         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x46aa)
0000000000008784         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008785         db  0x02 ; '.'
0000000000008786         db  0x45 ; 'E'
0000000000008787         db  0x0e ; '.'
0000000000008788         db  0x10 ; '.'
0000000000008789         db  0x00 ; '.'
000000000000878a         db  0x00 ; '.'
000000000000878b         db  0x00 ; '.'
000000000000878c         dd         0x00000018                                  ; Length of the record
0000000000008790         dd         0x000008a8                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008794         db         0x1c, 0xbf, 2 dup (0xff)                    ; begin 0x46b0
0000000000008798         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x46c7)
000000000000879c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000879d         db  0x41 ; 'A'
000000000000879e         db  0x0e ; '.'
000000000000879f         db  0x10 ; '.'
00000000000087a0         db  0x83 ; '.'
00000000000087a1         db  0x02 ; '.'
00000000000087a2         db  0x51 ; 'Q'
00000000000087a3         db  0x0e ; '.'
00000000000087a4         db  0x08 ; '.'
00000000000087a5         db  0x00 ; '.'
00000000000087a6         db  0x00 ; '.'
00000000000087a7         db  0x00 ; '.'
00000000000087a8         dd         0x00000018                                  ; Length of the record
00000000000087ac         dd         0x000008c4                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
00000000000087b0         db         0x20, 0xbf, 2 dup (0xff)                    ; begin 0x46d0
00000000000087b4         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x46fe)
00000000000087b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000087b9         db  0x47 ; 'G'
00000000000087ba         db  0x0e ; '.'
00000000000087bb         db  0x10 ; '.'
00000000000087bc         db  0x61 ; 'a'
00000000000087bd         db  0x0a ; '.'
00000000000087be         db  0x0e ; '.'
00000000000087bf         db  0x08 ; '.'
00000000000087c0         db  0x41 ; 'A'
00000000000087c1         db  0x0b ; '.'
00000000000087c2         db  0x00 ; '.'
00000000000087c3         db  0x00 ; '.'
00000000000087c4         dd         0x00000024                                  ; Length of the record
00000000000087c8         dd         0x000008e0                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
00000000000087cc         db         0x34, 0xbf, 2 dup (0xff)                    ; begin 0x4700
00000000000087d0         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x4728)
00000000000087d4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000087d5         db  0x41 ; 'A'
00000000000087d6         db  0x0e ; '.'
00000000000087d7         db  0x10 ; '.'
00000000000087d8         db  0x86 ; '.'
00000000000087d9         db  0x02 ; '.'
00000000000087da         db  0x41 ; 'A'
00000000000087db         db  0x0e ; '.'
00000000000087dc         db  0x18 ; '.'
00000000000087dd         db  0x83 ; '.'
00000000000087de         db  0x03 ; '.'
00000000000087df         db  0x4d ; 'M'
00000000000087e0         db  0x0e ; '.'
00000000000087e1         db  0x20 ; ' '
00000000000087e2         db  0x49 ; 'I'
00000000000087e3         db  0x0e ; '.'
00000000000087e4         db  0x18 ; '.'
00000000000087e5         db  0x47 ; 'G'
00000000000087e6         db  0x0e ; '.'
00000000000087e7         db  0x10 ; '.'
00000000000087e8         db  0x41 ; 'A'
00000000000087e9         db  0x0e ; '.'
00000000000087ea         db  0x08 ; '.'
00000000000087eb         db  0x00 ; '.'
00000000000087ec         dd         0x00000018                                  ; Length of the record
00000000000087f0         dd         0x00000908                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
00000000000087f4         db         0x3c, 0xbf, 2 dup (0xff)                    ; begin 0x4730
00000000000087f8         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4743)
00000000000087fc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000087fd         db  0x41 ; 'A'
00000000000087fe         db  0x0e ; '.'
00000000000087ff         db  0x10 ; '.'
0000000000008800         db  0x83 ; '.'
0000000000008801         db  0x02 ; '.'
0000000000008802         db  0x50 ; 'P'
0000000000008803         db  0x0e ; '.'
0000000000008804         db  0x08 ; '.'
0000000000008805         db  0x00 ; '.'
0000000000008806         db  0x00 ; '.'
0000000000008807         db  0x00 ; '.'
0000000000008808         dd         0x00000014                                  ; Length of the record
000000000000880c         dd         0x00000924                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008810         db         0x40, 0xbf, 2 dup (0xff)                    ; begin 0x4750
0000000000008814         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x4785)
0000000000008818         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008819         db  0x4b ; 'K'
000000000000881a         db  0x0e ; '.'
000000000000881b         db  0x10 ; '.'
000000000000881c         db  0x00 ; '.'
000000000000881d         db  0x00 ; '.'
000000000000881e         db  0x00 ; '.'
000000000000881f         db  0x00 ; '.'
0000000000008820         dd         0x0000003c                                  ; Length of the record
0000000000008824         dd         0x0000093c                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008828         db         0x68, 0xbf, 2 dup (0xff)                    ; begin 0x4790
000000000000882c         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x4813)
0000000000008830         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008831         db  0x42 ; 'B'
0000000000008832         db  0x0e ; '.'
0000000000008833         db  0x10 ; '.'
0000000000008834         db  0x8d ; '.'
0000000000008835         db  0x02 ; '.'
0000000000008836         db  0x42 ; 'B'
0000000000008837         db  0x0e ; '.'
0000000000008838         db  0x18 ; '.'
0000000000008839         db  0x8c ; '.'
000000000000883a         db  0x03 ; '.'
000000000000883b         db  0x44 ; 'D'
000000000000883c         db  0x0e ; '.'
000000000000883d         db  0x20 ; ' '
000000000000883e         db  0x86 ; '.'
000000000000883f         db  0x04 ; '.'
0000000000008840         db  0x41 ; 'A'
0000000000008841         db  0x0e ; '.'
0000000000008842         db  0x28 ; '('
0000000000008843         db  0x83 ; '.'
0000000000008844         db  0x05 ; '.'
0000000000008845         db  0x4a ; 'J'
0000000000008846         db  0x0e ; '.'
0000000000008847         db  0x40 ; '@'
0000000000008848         db  0x02 ; '.'
0000000000008849         db  0x64 ; 'd'
000000000000884a         db  0x0a ; '.'
000000000000884b         db  0x0e ; '.'
000000000000884c         db  0x28 ; '('
000000000000884d         db  0x41 ; 'A'
000000000000884e         db  0x0e ; '.'
000000000000884f         db  0x20 ; ' '
0000000000008850         db  0x41 ; 'A'
0000000000008851         db  0x0e ; '.'
0000000000008852         db  0x18 ; '.'
0000000000008853         db  0x42 ; 'B'
0000000000008854         db  0x0e ; '.'
0000000000008855         db  0x10 ; '.'
0000000000008856         db  0x42 ; 'B'
0000000000008857         db  0x0e ; '.'
0000000000008858         db  0x08 ; '.'
0000000000008859         db  0x41 ; 'A'
000000000000885a         db  0x0b ; '.'
000000000000885b         db  0x00 ; '.'
000000000000885c         db  0x00 ; '.'
000000000000885d         db  0x00 ; '.'
000000000000885e         db  0x00 ; '.'
000000000000885f         db  0x00 ; '.'
0000000000008860         dd         0x0000003c                                  ; Length of the record
0000000000008864         dd         0x0000097c                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008868         db         0xb8, 0xbf, 2 dup (0xff)                    ; begin 0x4820
000000000000886c         db         0xf2, 3 dup (0x00)                          ; length 0xf2 (end at 0x4912)
0000000000008870         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008871         db  0x42 ; 'B'
0000000000008872         db  0x0e ; '.'
0000000000008873         db  0x10 ; '.'
0000000000008874         db  0x8d ; '.'
0000000000008875         db  0x02 ; '.'
0000000000008876         db  0x42 ; 'B'
0000000000008877         db  0x0e ; '.'
0000000000008878         db  0x18 ; '.'
0000000000008879         db  0x8c ; '.'
000000000000887a         db  0x03 ; '.'
000000000000887b         db  0x44 ; 'D'
000000000000887c         db  0x0e ; '.'
000000000000887d         db  0x20 ; ' '
000000000000887e         db  0x86 ; '.'
000000000000887f         db  0x04 ; '.'
0000000000008880         db  0x41 ; 'A'
0000000000008881         db  0x0e ; '.'
0000000000008882         db  0x28 ; '('
0000000000008883         db  0x83 ; '.'
0000000000008884         db  0x05 ; '.'
0000000000008885         db  0x4a ; 'J'
0000000000008886         db  0x0e ; '.'
0000000000008887         db  0xa0 ; '.'
0000000000008888         db  0x10 ; '.'
0000000000008889         db  0x02 ; '.'
000000000000888a         db  0x8f ; '.'
000000000000888b         db  0x0a ; '.'
000000000000888c         db  0x0e ; '.'
000000000000888d         db  0x28 ; '('
000000000000888e         db  0x41 ; 'A'
000000000000888f         db  0x0e ; '.'
0000000000008890         db  0x20 ; ' '
0000000000008891         db  0x41 ; 'A'
0000000000008892         db  0x0e ; '.'
0000000000008893         db  0x18 ; '.'
0000000000008894         db  0x42 ; 'B'
0000000000008895         db  0x0e ; '.'
0000000000008896         db  0x10 ; '.'
0000000000008897         db  0x42 ; 'B'
0000000000008898         db  0x0e ; '.'
0000000000008899         db  0x08 ; '.'
000000000000889a         db  0x48 ; 'H'
000000000000889b         db  0x0b ; '.'
000000000000889c         db  0x00 ; '.'
000000000000889d         db  0x00 ; '.'
000000000000889e         db  0x00 ; '.'
000000000000889f         db  0x00 ; '.'
00000000000088a0         dd         0x0000004c                                  ; Length of the record
00000000000088a4         dd         0x000009bc                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
00000000000088a8         db         0x78, 0xc0, 2 dup (0xff)                    ; begin 0x4920
00000000000088ac         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x499d)
00000000000088b0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000088b1         db  0x42 ; 'B'
00000000000088b2         db  0x0e ; '.'
00000000000088b3         db  0x10 ; '.'
00000000000088b4         db  0x8c ; '.'
00000000000088b5         db  0x02 ; '.'
00000000000088b6         db  0x41 ; 'A'
00000000000088b7         db  0x0e ; '.'
00000000000088b8         db  0x18 ; '.'
00000000000088b9         db  0x86 ; '.'
00000000000088ba         db  0x03 ; '.'
00000000000088bb         db  0x44 ; 'D'
00000000000088bc         db  0x0e ; '.'
00000000000088bd         db  0x20 ; ' '
00000000000088be         db  0x83 ; '.'
00000000000088bf         db  0x04 ; '.'
00000000000088c0         db  0x69 ; 'i'
00000000000088c1         db  0x0a ; '.'
00000000000088c2         db  0x0e ; '.'
00000000000088c3         db  0x18 ; '.'
00000000000088c4         db  0x41 ; 'A'
00000000000088c5         db  0x0e ; '.'
00000000000088c6         db  0x10 ; '.'
00000000000088c7         db  0x42 ; 'B'
00000000000088c8         db  0x0e ; '.'
00000000000088c9         db  0x08 ; '.'
00000000000088ca         db  0x45 ; 'E'
00000000000088cb         db  0x0b ; '.'
00000000000088cc         db  0x55 ; 'U'
00000000000088cd         db  0x0a ; '.'
00000000000088ce         db  0x0e ; '.'
00000000000088cf         db  0x18 ; '.'
00000000000088d0         db  0x41 ; 'A'
00000000000088d1         db  0x0e ; '.'
00000000000088d2         db  0x10 ; '.'
00000000000088d3         db  0x42 ; 'B'
00000000000088d4         db  0x0e ; '.'
00000000000088d5         db  0x08 ; '.'
00000000000088d6         db  0x48 ; 'H'
00000000000088d7         db  0x0b ; '.'
00000000000088d8         db  0x41 ; 'A'
00000000000088d9         db  0x0a ; '.'
00000000000088da         db  0x0e ; '.'
00000000000088db         db  0x18 ; '.'
00000000000088dc         db  0x46 ; 'F'
00000000000088dd         db  0x0e ; '.'
00000000000088de         db  0x10 ; '.'
00000000000088df         db  0x42 ; 'B'
00000000000088e0         db  0x0e ; '.'
00000000000088e1         db  0x08 ; '.'
00000000000088e2         db  0x47 ; 'G'
00000000000088e3         db  0x0b ; '.'
00000000000088e4         db  0x49 ; 'I'
00000000000088e5         db  0x0e ; '.'
00000000000088e6         db  0x18 ; '.'
00000000000088e7         db  0x41 ; 'A'
00000000000088e8         db  0x0e ; '.'
00000000000088e9         db  0x10 ; '.'
00000000000088ea         db  0x42 ; 'B'
00000000000088eb         db  0x0e ; '.'
00000000000088ec         db  0x08 ; '.'
00000000000088ed         db  0x00 ; '.'
00000000000088ee         db  0x00 ; '.'
00000000000088ef         db  0x00 ; '.'
00000000000088f0         dd         0x00000010                                  ; Length of the record
00000000000088f4         dd         0x00000a0c                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
00000000000088f8         db         0xa8, 0xc0, 2 dup (0xff)                    ; begin 0x49a0
00000000000088fc         db         0x5c, 3 dup (0x00)                          ; length 0x5c (end at 0x49fc)
0000000000008900         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008901         align      4
0000000000008904         dd         0x00000028                                  ; Length of the record
0000000000008908         dd         0x00000a20                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
000000000000890c         db         0xf4, 0xc0, 2 dup (0xff)                    ; begin 0x4a00
0000000000008910         db         0x47, 3 dup (0x00)                          ; length 0x47 (end at 0x4a47)
0000000000008914         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008915         db  0x41 ; 'A'
0000000000008916         db  0x0e ; '.'
0000000000008917         db  0x10 ; '.'
0000000000008918         db  0x83 ; '.'
0000000000008919         db  0x02 ; '.'
000000000000891a         db  0x5a ; 'Z'
000000000000891b         db  0x0a ; '.'
000000000000891c         db  0x0e ; '.'
000000000000891d         db  0x08 ; '.'
000000000000891e         db  0x45 ; 'E'
000000000000891f         db  0x0b ; '.'
0000000000008920         db  0x5d ; ']'
0000000000008921         db  0x0a ; '.'
0000000000008922         db  0x0e ; '.'
0000000000008923         db  0x08 ; '.'
0000000000008924         db  0x43 ; 'C'
0000000000008925         db  0x0b ; '.'
0000000000008926         db  0x46 ; 'F'
0000000000008927         db  0x0e ; '.'
0000000000008928         db  0x08 ; '.'
0000000000008929         db  0x00 ; '.'
000000000000892a         db  0x00 ; '.'
000000000000892b         db  0x00 ; '.'
000000000000892c         db  0x00 ; '.'
000000000000892d         db  0x00 ; '.'
000000000000892e         db  0x00 ; '.'
000000000000892f         db  0x00 ; '.'
0000000000008930         dd         0x0000001c                                  ; Length of the record
0000000000008934         dd         0x00000a4c                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008938         db         0x18, 0xc1, 2 dup (0xff)                    ; begin 0x4a50
000000000000893c         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x4ab0)
0000000000008940         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008941         db  0x44 ; 'D'
0000000000008942         db  0x0e ; '.'
0000000000008943         db  0x10 ; '.'
0000000000008944         db  0x75 ; 'u'
0000000000008945         db  0x0a ; '.'
0000000000008946         db  0x0e ; '.'
0000000000008947         db  0x08 ; '.'
0000000000008948         db  0x47 ; 'G'
0000000000008949         db  0x0b ; '.'
000000000000894a         db  0x5f ; '_'
000000000000894b         db  0x0e ; '.'
000000000000894c         db  0x08 ; '.'
000000000000894d         db  0x00 ; '.'
000000000000894e         db  0x00 ; '.'
000000000000894f         db  0x00 ; '.'
0000000000008950         dd         0x0000001c                                  ; Length of the record
0000000000008954         dd         0x00000a6c                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008958         db         0x58, 0xc1, 2 dup (0xff)                    ; begin 0x4ab0
000000000000895c         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x4aec)
0000000000008960         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008961         db  0x44 ; 'D'
0000000000008962         db  0x0e ; '.'
0000000000008963         db  0x10 ; '.'
0000000000008964         db  0x61 ; 'a'
0000000000008965         db  0x0a ; '.'
0000000000008966         db  0x0e ; '.'
0000000000008967         db  0x08 ; '.'
0000000000008968         db  0x4b ; 'K'
0000000000008969         db  0x0b ; '.'
000000000000896a         db  0x4b ; 'K'
000000000000896b         db  0x0e ; '.'
000000000000896c         db  0x08 ; '.'
000000000000896d         db  0x00 ; '.'
000000000000896e         db  0x00 ; '.'
000000000000896f         db  0x00 ; '.'
0000000000008970         dd         0x00000034                                  ; Length of the record
0000000000008974         dd         0x00000a8c                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008978         db         0x78, 0xc1, 2 dup (0xff)                    ; begin 0x4af0
000000000000897c         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x4b6b)
0000000000008980         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008981         db  0x42 ; 'B'
0000000000008982         db  0x0e ; '.'
0000000000008983         db  0x10 ; '.'
0000000000008984         db  0x8c ; '.'
0000000000008985         db  0x02 ; '.'
0000000000008986         db  0x41 ; 'A'
0000000000008987         db  0x0e ; '.'
0000000000008988         db  0x18 ; '.'
0000000000008989         db  0x86 ; '.'
000000000000898a         db  0x03 ; '.'
000000000000898b         db  0x41 ; 'A'
000000000000898c         db  0x0e ; '.'
000000000000898d         db  0x20 ; ' '
000000000000898e         db  0x83 ; '.'
000000000000898f         db  0x04 ; '.'
0000000000008990         db  0x7d ; '}'
0000000000008991         db  0x0a ; '.'
0000000000008992         db  0x0e ; '.'
0000000000008993         db  0x18 ; '.'
0000000000008994         db  0x41 ; 'A'
0000000000008995         db  0x0e ; '.'
0000000000008996         db  0x10 ; '.'
0000000000008997         db  0x42 ; 'B'
0000000000008998         db  0x0e ; '.'
0000000000008999         db  0x08 ; '.'
000000000000899a         db  0x44 ; 'D'
000000000000899b         db  0x0b ; '.'
000000000000899c         db  0x60 ; '`'
000000000000899d         db  0x0a ; '.'
000000000000899e         db  0x0e ; '.'
000000000000899f         db  0x18 ; '.'
00000000000089a0         db  0x41 ; 'A'
00000000000089a1         db  0x0e ; '.'
00000000000089a2         db  0x10 ; '.'
00000000000089a3         db  0x42 ; 'B'
00000000000089a4         db  0x0e ; '.'
00000000000089a5         db  0x08 ; '.'
00000000000089a6         db  0x45 ; 'E'
00000000000089a7         db  0x0b ; '.'
00000000000089a8         dd         0x0000001c                                  ; Length of the record
00000000000089ac         dd         0x00000ac4                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
00000000000089b0         db         0xc0, 0xc1, 2 dup (0xff)                    ; begin 0x4b70
00000000000089b4         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x4bb0)
00000000000089b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000089b9         db  0x44 ; 'D'
00000000000089ba         db  0x0e ; '.'
00000000000089bb         db  0x10 ; '.'
00000000000089bc         db  0x83 ; '.'
00000000000089bd         db  0x02 ; '.'
00000000000089be         db  0x5a ; 'Z'
00000000000089bf         db  0x0a ; '.'
00000000000089c0         db  0x0e ; '.'
00000000000089c1         db  0x08 ; '.'
00000000000089c2         db  0x4a ; 'J'
00000000000089c3         db  0x0b ; '.'
00000000000089c4         db  0x53 ; 'S'
00000000000089c5         db  0x0e ; '.'
00000000000089c6         db  0x08 ; '.'
00000000000089c7         db  0x00 ; '.'
00000000000089c8         dd         0x0000002c                                  ; Length of the record
00000000000089cc         dd         0x00000ae4                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
00000000000089d0         db         0xe0, 0xc1, 2 dup (0xff)                    ; begin 0x4bb0
00000000000089d4         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x4c07)
00000000000089d8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000089d9         db  0x63 ; 'c'
00000000000089da         db  0x0e ; '.'
00000000000089db         db  0x10 ; '.'
00000000000089dc         db  0x8c ; '.'
00000000000089dd         db  0x02 ; '.'
00000000000089de         db  0x41 ; 'A'
00000000000089df         db  0x0e ; '.'
00000000000089e0         db  0x18 ; '.'
00000000000089e1         db  0x86 ; '.'
00000000000089e2         db  0x03 ; '.'
00000000000089e3         db  0x44 ; 'D'
00000000000089e4         db  0x0e ; '.'
00000000000089e5         db  0x20 ; ' '
00000000000089e6         db  0x83 ; '.'
00000000000089e7         db  0x04 ; '.'
00000000000089e8         db  0x6b ; 'k'
00000000000089e9         db  0x0e ; '.'
00000000000089ea         db  0x18 ; '.'
00000000000089eb         db  0x41 ; 'A'
00000000000089ec         db  0x0e ; '.'
00000000000089ed         db  0x10 ; '.'
00000000000089ee         db  0x42 ; 'B'
00000000000089ef         db  0x0e ; '.'
00000000000089f0         db  0x08 ; '.'
00000000000089f1         db  0x00 ; '.'
00000000000089f2         db  0x00 ; '.'
00000000000089f3         db  0x00 ; '.'
00000000000089f4         db  0x00 ; '.'
00000000000089f5         db  0x00 ; '.'
00000000000089f6         db  0x00 ; '.'
00000000000089f7         db  0x00 ; '.'
00000000000089f8         dd         0x00000014                                  ; Length of the record
00000000000089fc         dd         0x00000b14                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008a00         db         0x10, 0xc2, 2 dup (0xff)                    ; begin 0x4c10
0000000000008a04         db         0x04, 3 dup (0x00)                          ; length 0x4 (end at 0x4c14)
0000000000008a08         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008a09         align      16
0000000000008a10         dd         0x0000002c                                  ; Length of the record
0000000000008a14         dd         0x00000b2c                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008a18         db         0x08, 0xc2, 2 dup (0xff)                    ; begin 0x4c20
0000000000008a1c         db         0x1f, 0x11, 2 dup (0x00)                    ; length 0x111f (end at 0x5d3f)
0000000000008a20         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008a21         db  0x41 ; 'A'
0000000000008a22         db  0x0e ; '.'
0000000000008a23         db  0x10 ; '.'
0000000000008a24         db  0x86 ; '.'
0000000000008a25         db  0x02 ; '.'
0000000000008a26         db  0x43 ; 'C'
0000000000008a27         db  0x0d ; '.'
0000000000008a28         db  0x06 ; '.'
0000000000008a29         db  0x48 ; 'H'
0000000000008a2a         db  0x8f ; '.'
0000000000008a2b         db  0x03 ; '.'
0000000000008a2c         db  0x8e ; '.'
0000000000008a2d         db  0x04 ; '.'
0000000000008a2e         db  0x8d ; '.'
0000000000008a2f         db  0x05 ; '.'
0000000000008a30         db  0x8c ; '.'
0000000000008a31         db  0x06 ; '.'
0000000000008a32         db  0x48 ; 'H'
0000000000008a33         db  0x83 ; '.'
0000000000008a34         db  0x07 ; '.'
0000000000008a35         db  0x03 ; '.'
0000000000008a36         db  0xef ; '.'
0000000000008a37         db  0x01 ; '.'
0000000000008a38         db  0x0a ; '.'
0000000000008a39         db  0x0c ; '.'
0000000000008a3a         db  0x07 ; '.'
0000000000008a3b         db  0x08 ; '.'
0000000000008a3c         db  0x45 ; 'E'
0000000000008a3d         db  0x0b ; '.'
0000000000008a3e         db  0x00 ; '.'
0000000000008a3f         db  0x00 ; '.'
0000000000008a40         dd         0x00000014                                  ; Length of the record
0000000000008a44         dd         0x00000b5c                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008a48         db         0xf8, 0xd2, 2 dup (0xff)                    ; begin 0x5d40
0000000000008a4c         db         0xfe, 0x01, 2 dup (0x00)                    ; length 0x1fe (end at 0x5f3e)
0000000000008a50         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008a51         align      8
0000000000008a58         dd         0x0000004c                                  ; Length of the record
0000000000008a5c         dd         0x00000b74                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008a60         db         0xe0, 0xd4, 2 dup (0xff)                    ; begin 0x5f40
0000000000008a64         db         0xec, 0x0c, 2 dup (0x00)                    ; length 0xcec (end at 0x6c2c)
0000000000008a68         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008a69         db  0x42 ; 'B'
0000000000008a6a         db  0x0e ; '.'
0000000000008a6b         db  0x10 ; '.'
0000000000008a6c         db  0x8f ; '.'
0000000000008a6d         db  0x02 ; '.'
0000000000008a6e         db  0x42 ; 'B'
0000000000008a6f         db  0x0e ; '.'
0000000000008a70         db  0x18 ; '.'
0000000000008a71         db  0x8e ; '.'
0000000000008a72         db  0x03 ; '.'
0000000000008a73         db  0x46 ; 'F'
0000000000008a74         db  0x0e ; '.'
0000000000008a75         db  0x20 ; ' '
0000000000008a76         db  0x8d ; '.'
0000000000008a77         db  0x04 ; '.'
0000000000008a78         db  0x42 ; 'B'
0000000000008a79         db  0x0e ; '.'
0000000000008a7a         db  0x28 ; '('
0000000000008a7b         db  0x8c ; '.'
0000000000008a7c         db  0x05 ; '.'
0000000000008a7d         db  0x45 ; 'E'
0000000000008a7e         db  0x0e ; '.'
0000000000008a7f         db  0x30 ; '0'
0000000000008a80         db  0x86 ; '.'
0000000000008a81         db  0x06 ; '.'
0000000000008a82         db  0x41 ; 'A'
0000000000008a83         db  0x0e ; '.'
0000000000008a84         db  0x38 ; '8'
0000000000008a85         db  0x83 ; '.'
0000000000008a86         db  0x07 ; '.'
0000000000008a87         db  0x52 ; 'R'
0000000000008a88         db  0x0e ; '.'
0000000000008a89         db  0x90 ; '.'
0000000000008a8a         db  0x01 ; '.'
0000000000008a8b         db  0x02 ; '.'
0000000000008a8c         db  0x82 ; '.'
0000000000008a8d         db  0x0a ; '.'
0000000000008a8e         db  0x0e ; '.'
0000000000008a8f         db  0x38 ; '8'
0000000000008a90         db  0x41 ; 'A'
0000000000008a91         db  0x0e ; '.'
0000000000008a92         db  0x30 ; '0'
0000000000008a93         db  0x41 ; 'A'
0000000000008a94         db  0x0e ; '.'
0000000000008a95         db  0x28 ; '('
0000000000008a96         db  0x42 ; 'B'
0000000000008a97         db  0x0e ; '.'
0000000000008a98         db  0x20 ; ' '
0000000000008a99         db  0x42 ; 'B'
0000000000008a9a         db  0x0e ; '.'
0000000000008a9b         db  0x18 ; '.'
0000000000008a9c         db  0x42 ; 'B'
0000000000008a9d         db  0x0e ; '.'
0000000000008a9e         db  0x10 ; '.'
0000000000008a9f         db  0x42 ; 'B'
0000000000008aa0         db  0x0e ; '.'
0000000000008aa1         db  0x08 ; '.'
0000000000008aa2         db  0x48 ; 'H'
0000000000008aa3         db  0x0b ; '.'
0000000000008aa4         db  0x00 ; '.'
0000000000008aa5         db  0x00 ; '.'
0000000000008aa6         db  0x00 ; '.'
0000000000008aa7         db  0x00 ; '.'
0000000000008aa8         dd         0x00000044                                  ; Length of the record
0000000000008aac         dd         0x00000bc4                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008ab0         db         0x80, 0xe1, 2 dup (0xff)                    ; begin 0x6c30
0000000000008ab4         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x6c95)
0000000000008ab8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ab9         db  0x42 ; 'B'
0000000000008aba         db  0x0e ; '.'
0000000000008abb         db  0x10 ; '.'
0000000000008abc         db  0x8f ; '.'
0000000000008abd         db  0x02 ; '.'
0000000000008abe         db  0x42 ; 'B'
0000000000008abf         db  0x0e ; '.'
0000000000008ac0         db  0x18 ; '.'
0000000000008ac1         db  0x8e ; '.'
0000000000008ac2         db  0x03 ; '.'
0000000000008ac3         db  0x45 ; 'E'
0000000000008ac4         db  0x0e ; '.'
0000000000008ac5         db  0x20 ; ' '
0000000000008ac6         db  0x8d ; '.'
0000000000008ac7         db  0x04 ; '.'
0000000000008ac8         db  0x42 ; 'B'
0000000000008ac9         db  0x0e ; '.'
0000000000008aca         db  0x28 ; '('
0000000000008acb         db  0x8c ; '.'
0000000000008acc         db  0x05 ; '.'
0000000000008acd         db  0x48 ; 'H'
0000000000008ace         db  0x0e ; '.'
0000000000008acf         db  0x30 ; '0'
0000000000008ad0         db  0x86 ; '.'
0000000000008ad1         db  0x06 ; '.'
0000000000008ad2         db  0x48 ; 'H'
0000000000008ad3         db  0x0e ; '.'
0000000000008ad4         db  0x38 ; '8'
0000000000008ad5         db  0x83 ; '.'
0000000000008ad6         db  0x07 ; '.'
0000000000008ad7         db  0x4d ; 'M'
0000000000008ad8         db  0x0e ; '.'
0000000000008ad9         db  0x40 ; '@'
0000000000008ada         db  0x72 ; 'r'
0000000000008adb         db  0x0e ; '.'
0000000000008adc         db  0x38 ; '8'
0000000000008add         db  0x41 ; 'A'
0000000000008ade         db  0x0e ; '.'
0000000000008adf         db  0x30 ; '0'
0000000000008ae0         db  0x41 ; 'A'
0000000000008ae1         db  0x0e ; '.'
0000000000008ae2         db  0x28 ; '('
0000000000008ae3         db  0x42 ; 'B'
0000000000008ae4         db  0x0e ; '.'
0000000000008ae5         db  0x20 ; ' '
0000000000008ae6         db  0x42 ; 'B'
0000000000008ae7         db  0x0e ; '.'
0000000000008ae8         db  0x18 ; '.'
0000000000008ae9         db  0x42 ; 'B'
0000000000008aea         db  0x0e ; '.'
0000000000008aeb         db  0x10 ; '.'
0000000000008aec         db  0x42 ; 'B'
0000000000008aed         db  0x0e ; '.'
0000000000008aee         db  0x08 ; '.'
0000000000008aef         db  0x00 ; '.'
0000000000008af0         dd         0x00000014                                  ; Length of the record
0000000000008af4         dd         0x00000c0c                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008af8         db         0xa8, 0xe1, 2 dup (0xff)                    ; begin 0x6ca0
0000000000008afc         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x6ca2)
0000000000008b00         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b01         align      8
0000000000008b08         dd         0x00000010                                  ; Length of the record
0000000000008b0c         dd         0x00000c24                                  ; FDE: parent CIE at 0x7ee8 (FDE encoding = 0x1B)
0000000000008b10         db         0xa0, 0xe1, 2 dup (0xff)                    ; begin 0x6cb0
0000000000008b14         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x6cbe)
0000000000008b18         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b19         align      32


        ; Segment Segment 3
        ; Range: [0x209af0; 0x20a218[ (1832 bytes)
        ; File offset : [39664; 41088[ (1424 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x209af0; 0x209af8[ (8 bytes)
        ; File offset : [39664; 39672[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
0000000000209af0         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x209af8; 0x209b00[ (8 bytes)
        ; File offset : [39672; 39680[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
0000000000209af8         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x209b00; 0x209c38[ (312 bytes)
        ; File offset : [39680; 39992[ (312 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     longopts:
0000000000209b00         db  0x11 ; '.'                                         ; DATA XREF=main+8
0000000000209b01         db  0x6e ; 'n'
0000000000209b02         db  0x00 ; '.'
0000000000209b03         db  0x00 ; '.'
0000000000209b04         db  0x00 ; '.'
0000000000209b05         db  0x00 ; '.'
0000000000209b06         db  0x00 ; '.'
0000000000209b07         db  0x00 ; '.'
0000000000209b08         db  0x00 ; '.'
0000000000209b09         db  0x00 ; '.'
0000000000209b0a         db  0x00 ; '.'
0000000000209b0b         db  0x00 ; '.'
0000000000209b0c         db  0x00 ; '.'
0000000000209b0d         db  0x00 ; '.'
0000000000209b0e         db  0x00 ; '.'
0000000000209b0f         db  0x00 ; '.'
0000000000209b10         db  0x00 ; '.'
0000000000209b11         db  0x00 ; '.'
0000000000209b12         db  0x00 ; '.'
0000000000209b13         db  0x00 ; '.'
0000000000209b14         db  0x00 ; '.'
0000000000209b15         db  0x00 ; '.'
0000000000209b16         db  0x00 ; '.'
0000000000209b17         db  0x00 ; '.'
0000000000209b18         db  0x80 ; '.'
0000000000209b19         db  0x00 ; '.'
0000000000209b1a         db  0x00 ; '.'
0000000000209b1b         db  0x00 ; '.'
0000000000209b1c         db  0x00 ; '.'
0000000000209b1d         db  0x00 ; '.'
0000000000209b1e         db  0x00 ; '.'
0000000000209b1f         db  0x00 ; '.'
0000000000209b20         db  0x2a ; '*'
0000000000209b21         db  0x6e ; 'n'
0000000000209b22         db  0x00 ; '.'
0000000000209b23         db  0x00 ; '.'
0000000000209b24         db  0x00 ; '.'
0000000000209b25         db  0x00 ; '.'
0000000000209b26         db  0x00 ; '.'
0000000000209b27         db  0x00 ; '.'
0000000000209b28         db  0x00 ; '.'
0000000000209b29         db  0x00 ; '.'
0000000000209b2a         db  0x00 ; '.'
0000000000209b2b         db  0x00 ; '.'
0000000000209b2c         db  0x00 ; '.'
0000000000209b2d         db  0x00 ; '.'
0000000000209b2e         db  0x00 ; '.'
0000000000209b2f         db  0x00 ; '.'
0000000000209b30         db  0x00 ; '.'
0000000000209b31         db  0x00 ; '.'
0000000000209b32         db  0x00 ; '.'
0000000000209b33         db  0x00 ; '.'
0000000000209b34         db  0x00 ; '.'
0000000000209b35         db  0x00 ; '.'
0000000000209b36         db  0x00 ; '.'
0000000000209b37         db  0x00 ; '.'
0000000000209b38         db  0x70 ; 'p'
0000000000209b39         db  0x00 ; '.'
0000000000209b3a         db  0x00 ; '.'
0000000000209b3b         db  0x00 ; '.'
0000000000209b3c         db  0x00 ; '.'
0000000000209b3d         db  0x00 ; '.'
0000000000209b3e         db  0x00 ; '.'
0000000000209b3f         db  0x00 ; '.'
0000000000209b40         db  0x2f ; '/'
0000000000209b41         db  0x6e ; 'n'
0000000000209b42         db  0x00 ; '.'
0000000000209b43         db  0x00 ; '.'
0000000000209b44         db  0x00 ; '.'
0000000000209b45         db  0x00 ; '.'
0000000000209b46         db  0x00 ; '.'
0000000000209b47         db  0x00 ; '.'
0000000000209b48         db  0x00 ; '.'
0000000000209b49         db  0x00 ; '.'
0000000000209b4a         db  0x00 ; '.'
0000000000209b4b         db  0x00 ; '.'
0000000000209b4c         db  0x00 ; '.'
0000000000209b4d         db  0x00 ; '.'
0000000000209b4e         db  0x00 ; '.'
0000000000209b4f         db  0x00 ; '.'
0000000000209b50         db  0x00 ; '.'
0000000000209b51         db  0x00 ; '.'
0000000000209b52         db  0x00 ; '.'
0000000000209b53         db  0x00 ; '.'
0000000000209b54         db  0x00 ; '.'
0000000000209b55         db  0x00 ; '.'
0000000000209b56         db  0x00 ; '.'
0000000000209b57         db  0x00 ; '.'
0000000000209b58         db  0x70 ; 'p'
0000000000209b59         db  0x00 ; '.'
0000000000209b5a         db  0x00 ; '.'
0000000000209b5b         db  0x00 ; '.'
0000000000209b5c         db  0x00 ; '.'
0000000000209b5d         db  0x00 ; '.'
0000000000209b5e         db  0x00 ; '.'
0000000000209b5f         db  0x00 ; '.'
0000000000209b60         db  0x37 ; '7'
0000000000209b61         db  0x6e ; 'n'
0000000000209b62         db  0x00 ; '.'
0000000000209b63         db  0x00 ; '.'
0000000000209b64         db  0x00 ; '.'
0000000000209b65         db  0x00 ; '.'
0000000000209b66         db  0x00 ; '.'
0000000000209b67         db  0x00 ; '.'
0000000000209b68         db  0x00 ; '.'
0000000000209b69         db  0x00 ; '.'
0000000000209b6a         db  0x00 ; '.'
0000000000209b6b         db  0x00 ; '.'
0000000000209b6c         db  0x00 ; '.'
0000000000209b6d         db  0x00 ; '.'
0000000000209b6e         db  0x00 ; '.'
0000000000209b6f         db  0x00 ; '.'
0000000000209b70         db  0x00 ; '.'
0000000000209b71         db  0x00 ; '.'
0000000000209b72         db  0x00 ; '.'
0000000000209b73         db  0x00 ; '.'
0000000000209b74         db  0x00 ; '.'
0000000000209b75         db  0x00 ; '.'
0000000000209b76         db  0x00 ; '.'
0000000000209b77         db  0x00 ; '.'
0000000000209b78         db  0x76 ; 'v'
0000000000209b79         db  0x00 ; '.'
0000000000209b7a         db  0x00 ; '.'
0000000000209b7b         db  0x00 ; '.'
0000000000209b7c         db  0x00 ; '.'
0000000000209b7d         db  0x00 ; '.'
0000000000209b7e         db  0x00 ; '.'
0000000000209b7f         db  0x00 ; '.'
0000000000209b80         db  0x3f ; '?'
0000000000209b81         db  0x6e ; 'n'
0000000000209b82         db  0x00 ; '.'
0000000000209b83         db  0x00 ; '.'
0000000000209b84         db  0x00 ; '.'
0000000000209b85         db  0x00 ; '.'
0000000000209b86         db  0x00 ; '.'
0000000000209b87         db  0x00 ; '.'
0000000000209b88         db  0x00 ; '.'
0000000000209b89         db  0x00 ; '.'
0000000000209b8a         db  0x00 ; '.'
0000000000209b8b         db  0x00 ; '.'
0000000000209b8c         db  0x00 ; '.'
0000000000209b8d         db  0x00 ; '.'
0000000000209b8e         db  0x00 ; '.'
0000000000209b8f         db  0x00 ; '.'
0000000000209b90         db  0x00 ; '.'
0000000000209b91         db  0x00 ; '.'
0000000000209b92         db  0x00 ; '.'
0000000000209b93         db  0x00 ; '.'
0000000000209b94         db  0x00 ; '.'
0000000000209b95         db  0x00 ; '.'
0000000000209b96         db  0x00 ; '.'
0000000000209b97         db  0x00 ; '.'
0000000000209b98         db  0x7e ; '~'
0000000000209b99         db  0xff ; '.'
0000000000209b9a         db  0xff ; '.'
0000000000209b9b         db  0xff ; '.'
0000000000209b9c         db  0x00 ; '.'
0000000000209b9d         db  0x00 ; '.'
0000000000209b9e         db  0x00 ; '.'
0000000000209b9f         db  0x00 ; '.'
0000000000209ba0         db  0x44 ; 'D'
0000000000209ba1         db  0x6e ; 'n'
0000000000209ba2         db  0x00 ; '.'
0000000000209ba3         db  0x00 ; '.'
0000000000209ba4         db  0x00 ; '.'
0000000000209ba5         db  0x00 ; '.'
0000000000209ba6         db  0x00 ; '.'
0000000000209ba7         db  0x00 ; '.'
0000000000209ba8         db  0x00 ; '.'
0000000000209ba9         db  0x00 ; '.'
0000000000209baa         db  0x00 ; '.'
0000000000209bab         db  0x00 ; '.'
0000000000209bac         db  0x00 ; '.'
0000000000209bad         db  0x00 ; '.'
0000000000209bae         db  0x00 ; '.'
0000000000209baf         db  0x00 ; '.'
0000000000209bb0         db  0x00 ; '.'
0000000000209bb1         db  0x00 ; '.'
0000000000209bb2         db  0x00 ; '.'
0000000000209bb3         db  0x00 ; '.'
0000000000209bb4         db  0x00 ; '.'
0000000000209bb5         db  0x00 ; '.'
0000000000209bb6         db  0x00 ; '.'
0000000000209bb7         db  0x00 ; '.'
0000000000209bb8         db  0x7d ; '}'
0000000000209bb9         db  0xff ; '.'
0000000000209bba         db  0xff ; '.'
0000000000209bbb         db  0xff ; '.'
0000000000209bbc         db  0x00 ; '.'
0000000000209bbd         db  0x00 ; '.'
0000000000209bbe         db  0x00 ; '.'
0000000000209bbf         db  0x00 ; '.'
0000000000209bc0         db  0x00 ; '.'
0000000000209bc1         db  0x00 ; '.'
0000000000209bc2         db  0x00 ; '.'
0000000000209bc3         db  0x00 ; '.'
0000000000209bc4         db  0x00 ; '.'
0000000000209bc5         db  0x00 ; '.'
0000000000209bc6         db  0x00 ; '.'
0000000000209bc7         db  0x00 ; '.'
0000000000209bc8         db  0x00 ; '.'
0000000000209bc9         db  0x00 ; '.'
0000000000209bca         db  0x00 ; '.'
0000000000209bcb         db  0x00 ; '.'
0000000000209bcc         db  0x00 ; '.'
0000000000209bcd         db  0x00 ; '.'
0000000000209bce         db  0x00 ; '.'
0000000000209bcf         db  0x00 ; '.'
0000000000209bd0         db  0x00 ; '.'
0000000000209bd1         db  0x00 ; '.'
0000000000209bd2         db  0x00 ; '.'
0000000000209bd3         db  0x00 ; '.'
0000000000209bd4         db  0x00 ; '.'
0000000000209bd5         db  0x00 ; '.'
0000000000209bd6         db  0x00 ; '.'
0000000000209bd7         db  0x00 ; '.'
0000000000209bd8         db  0x00 ; '.'
0000000000209bd9         db  0x00 ; '.'
0000000000209bda         db  0x00 ; '.'
0000000000209bdb         db  0x00 ; '.'
0000000000209bdc         db  0x00 ; '.'
0000000000209bdd         db  0x00 ; '.'
0000000000209bde         db  0x00 ; '.'
0000000000209bdf         db  0x00 ; '.'
                     quoting_style_args:
0000000000209be0         db  0xa9 ; '.'
0000000000209be1         db  0x71 ; 'q'
0000000000209be2         db  0x00 ; '.'
0000000000209be3         db  0x00 ; '.'
0000000000209be4         db  0x00 ; '.'
0000000000209be5         db  0x00 ; '.'
0000000000209be6         db  0x00 ; '.'
0000000000209be7         db  0x00 ; '.'
0000000000209be8         db  0xb1 ; '.'
0000000000209be9         db  0x71 ; 'q'
0000000000209bea         db  0x00 ; '.'
0000000000209beb         db  0x00 ; '.'
0000000000209bec         db  0x00 ; '.'
0000000000209bed         db  0x00 ; '.'
0000000000209bee         db  0x00 ; '.'
0000000000209bef         db  0x00 ; '.'
0000000000209bf0         db  0xb7 ; '.'
0000000000209bf1         db  0x71 ; 'q'
0000000000209bf2         db  0x00 ; '.'
0000000000209bf3         db  0x00 ; '.'
0000000000209bf4         db  0x00 ; '.'
0000000000209bf5         db  0x00 ; '.'
0000000000209bf6         db  0x00 ; '.'
0000000000209bf7         db  0x00 ; '.'
0000000000209bf8         db  0xc4 ; '.'
0000000000209bf9         db  0x71 ; 'q'
0000000000209bfa         db  0x00 ; '.'
0000000000209bfb         db  0x00 ; '.'
0000000000209bfc         db  0x00 ; '.'
0000000000209bfd         db  0x00 ; '.'
0000000000209bfe         db  0x00 ; '.'
0000000000209bff         db  0x00 ; '.'
0000000000209c00         db  0xd1 ; '.'
0000000000209c01         db  0x71 ; 'q'
0000000000209c02         db  0x00 ; '.'
0000000000209c03         db  0x00 ; '.'
0000000000209c04         db  0x00 ; '.'
0000000000209c05         db  0x00 ; '.'
0000000000209c06         db  0x00 ; '.'
0000000000209c07         db  0x00 ; '.'
0000000000209c08         db  0xe5 ; '.'
0000000000209c09         db  0x71 ; 'q'
0000000000209c0a         db  0x00 ; '.'
0000000000209c0b         db  0x00 ; '.'
0000000000209c0c         db  0x00 ; '.'
0000000000209c0d         db  0x00 ; '.'
0000000000209c0e         db  0x00 ; '.'
0000000000209c0f         db  0x00 ; '.'
0000000000209c10         db  0xe7 ; '.'
0000000000209c11         db  0x71 ; 'q'
0000000000209c12         db  0x00 ; '.'
0000000000209c13         db  0x00 ; '.'
0000000000209c14         db  0x00 ; '.'
0000000000209c15         db  0x00 ; '.'
0000000000209c16         db  0x00 ; '.'
0000000000209c17         db  0x00 ; '.'
0000000000209c18         db  0xca ; '.'
0000000000209c19         db  0x71 ; 'q'
0000000000209c1a         db  0x00 ; '.'
0000000000209c1b         db  0x00 ; '.'
0000000000209c1c         db  0x00 ; '.'
0000000000209c1d         db  0x00 ; '.'
0000000000209c1e         db  0x00 ; '.'
0000000000209c1f         db  0x00 ; '.'
0000000000209c20         db  0x9e ; '.'
0000000000209c21         db  0x6d ; 'm'
0000000000209c22         db  0x00 ; '.'
0000000000209c23         db  0x00 ; '.'
0000000000209c24         db  0x00 ; '.'
0000000000209c25         db  0x00 ; '.'
0000000000209c26         db  0x00 ; '.'
0000000000209c27         db  0x00 ; '.'
0000000000209c28         db  0xef ; '.'
0000000000209c29         db  0x71 ; 'q'
0000000000209c2a         db  0x00 ; '.'
0000000000209c2b         db  0x00 ; '.'
0000000000209c2c         db  0x00 ; '.'
0000000000209c2d         db  0x00 ; '.'
0000000000209c2e         db  0x00 ; '.'
0000000000209c2f         db  0x00 ; '.'
0000000000209c30         db  0x00 ; '.'
0000000000209c31         db  0x00 ; '.'
0000000000209c32         db  0x00 ; '.'
0000000000209c33         db  0x00 ; '.'
0000000000209c34         db  0x00 ; '.'
0000000000209c35         db  0x00 ; '.'
0000000000209c36         db  0x00 ; '.'
0000000000209c37         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x209c38; 0x209e28[ (496 bytes)
        ; File offset : [39992; 40488[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
0000000000209c38         db  0x01 ; '.'
0000000000209c39         db  0x00 ; '.'
0000000000209c3a         db  0x00 ; '.'
0000000000209c3b         db  0x00 ; '.'
0000000000209c3c         db  0x00 ; '.'
0000000000209c3d         db  0x00 ; '.'
0000000000209c3e         db  0x00 ; '.'
0000000000209c3f         db  0x00 ; '.'
0000000000209c40         db  0x01 ; '.'
0000000000209c41         db  0x00 ; '.'
0000000000209c42         db  0x00 ; '.'
0000000000209c43         db  0x00 ; '.'
0000000000209c44         db  0x00 ; '.'
0000000000209c45         db  0x00 ; '.'
0000000000209c46         db  0x00 ; '.'
0000000000209c47         db  0x00 ; '.'
0000000000209c48         db  0x0c ; '.'
0000000000209c49         db  0x00 ; '.'
0000000000209c4a         db  0x00 ; '.'
0000000000209c4b         db  0x00 ; '.'
0000000000209c4c         db  0x00 ; '.'
0000000000209c4d         db  0x00 ; '.'
0000000000209c4e         db  0x00 ; '.'
0000000000209c4f         db  0x00 ; '.'
0000000000209c50         db  0xb8 ; '.'
0000000000209c51         db  0x13 ; '.'
0000000000209c52         db  0x00 ; '.'
0000000000209c53         db  0x00 ; '.'
0000000000209c54         db  0x00 ; '.'
0000000000209c55         db  0x00 ; '.'
0000000000209c56         db  0x00 ; '.'
0000000000209c57         db  0x00 ; '.'
0000000000209c58         db  0x0d ; '.'
0000000000209c59         db  0x00 ; '.'
0000000000209c5a         db  0x00 ; '.'
0000000000209c5b         db  0x00 ; '.'
0000000000209c5c         db  0x00 ; '.'
0000000000209c5d         db  0x00 ; '.'
0000000000209c5e         db  0x00 ; '.'
0000000000209c5f         db  0x00 ; '.'
0000000000209c60         db  0xc0 ; '.'
0000000000209c61         db  0x6c ; 'l'
0000000000209c62         db  0x00 ; '.'
0000000000209c63         db  0x00 ; '.'
0000000000209c64         db  0x00 ; '.'
0000000000209c65         db  0x00 ; '.'
0000000000209c66         db  0x00 ; '.'
0000000000209c67         db  0x00 ; '.'
0000000000209c68         db  0x19 ; '.'
0000000000209c69         db  0x00 ; '.'
0000000000209c6a         db  0x00 ; '.'
0000000000209c6b         db  0x00 ; '.'
0000000000209c6c         db  0x00 ; '.'
0000000000209c6d         db  0x00 ; '.'
0000000000209c6e         db  0x00 ; '.'
0000000000209c6f         db  0x00 ; '.'
0000000000209c70         db  0xf0 ; '.'
0000000000209c71         db  0x9a ; '.'
0000000000209c72         db  0x20 ; ' '
0000000000209c73         db  0x00 ; '.'
0000000000209c74         db  0x00 ; '.'
0000000000209c75         db  0x00 ; '.'
0000000000209c76         db  0x00 ; '.'
0000000000209c77         db  0x00 ; '.'
0000000000209c78         db  0x1b ; '.'
0000000000209c79         db  0x00 ; '.'
0000000000209c7a         db  0x00 ; '.'
0000000000209c7b         db  0x00 ; '.'
0000000000209c7c         db  0x00 ; '.'
0000000000209c7d         db  0x00 ; '.'
0000000000209c7e         db  0x00 ; '.'
0000000000209c7f         db  0x00 ; '.'
0000000000209c80         db  0x08 ; '.'
0000000000209c81         db  0x00 ; '.'
0000000000209c82         db  0x00 ; '.'
0000000000209c83         db  0x00 ; '.'
0000000000209c84         db  0x00 ; '.'
0000000000209c85         db  0x00 ; '.'
0000000000209c86         db  0x00 ; '.'
0000000000209c87         db  0x00 ; '.'
0000000000209c88         db  0x1a ; '.'
0000000000209c89         db  0x00 ; '.'
0000000000209c8a         db  0x00 ; '.'
0000000000209c8b         db  0x00 ; '.'
0000000000209c8c         db  0x00 ; '.'
0000000000209c8d         db  0x00 ; '.'
0000000000209c8e         db  0x00 ; '.'
0000000000209c8f         db  0x00 ; '.'
0000000000209c90         db  0xf8 ; '.'
0000000000209c91         db  0x9a ; '.'
0000000000209c92         db  0x20 ; ' '
0000000000209c93         db  0x00 ; '.'
0000000000209c94         db  0x00 ; '.'
0000000000209c95         db  0x00 ; '.'
0000000000209c96         db  0x00 ; '.'
0000000000209c97         db  0x00 ; '.'
0000000000209c98         db  0x1c ; '.'
0000000000209c99         db  0x00 ; '.'
0000000000209c9a         db  0x00 ; '.'
0000000000209c9b         db  0x00 ; '.'
0000000000209c9c         db  0x00 ; '.'
0000000000209c9d         db  0x00 ; '.'
0000000000209c9e         db  0x00 ; '.'
0000000000209c9f         db  0x00 ; '.'
0000000000209ca0         db  0x08 ; '.'
0000000000209ca1         db  0x00 ; '.'
0000000000209ca2         db  0x00 ; '.'
0000000000209ca3         db  0x00 ; '.'
0000000000209ca4         db  0x00 ; '.'
0000000000209ca5         db  0x00 ; '.'
0000000000209ca6         db  0x00 ; '.'
0000000000209ca7         db  0x00 ; '.'
0000000000209ca8         db  0xf5 ; '.'
0000000000209ca9         db  0xfe ; '.'
0000000000209caa         db  0xff ; '.'
0000000000209cab         db  0x6f ; 'o'
0000000000209cac         db  0x00 ; '.'
0000000000209cad         db  0x00 ; '.'
0000000000209cae         db  0x00 ; '.'
0000000000209caf         db  0x00 ; '.'
0000000000209cb0         db  0x98 ; '.'
0000000000209cb1         db  0x02 ; '.'
0000000000209cb2         db  0x00 ; '.'
0000000000209cb3         db  0x00 ; '.'
0000000000209cb4         db  0x00 ; '.'
0000000000209cb5         db  0x00 ; '.'
0000000000209cb6         db  0x00 ; '.'
0000000000209cb7         db  0x00 ; '.'
0000000000209cb8         db  0x05 ; '.'
0000000000209cb9         db  0x00 ; '.'
0000000000209cba         db  0x00 ; '.'
0000000000209cbb         db  0x00 ; '.'
0000000000209cbc         db  0x00 ; '.'
0000000000209cbd         db  0x00 ; '.'
0000000000209cbe         db  0x00 ; '.'
0000000000209cbf         db  0x00 ; '.'
0000000000209cc0         db  0x90 ; '.'
0000000000209cc1         db  0x08 ; '.'
0000000000209cc2         db  0x00 ; '.'
0000000000209cc3         db  0x00 ; '.'
0000000000209cc4         db  0x00 ; '.'
0000000000209cc5         db  0x00 ; '.'
0000000000209cc6         db  0x00 ; '.'
0000000000209cc7         db  0x00 ; '.'
0000000000209cc8         db  0x06 ; '.'
0000000000209cc9         db  0x00 ; '.'
0000000000209cca         db  0x00 ; '.'
0000000000209ccb         db  0x00 ; '.'
0000000000209ccc         db  0x00 ; '.'
0000000000209ccd         db  0x00 ; '.'
0000000000209cce         db  0x00 ; '.'
0000000000209ccf         db  0x00 ; '.'
0000000000209cd0         db  0xd8 ; '.'
0000000000209cd1         db  0x02 ; '.'
0000000000209cd2         db  0x00 ; '.'
0000000000209cd3         db  0x00 ; '.'
0000000000209cd4         db  0x00 ; '.'
0000000000209cd5         db  0x00 ; '.'
0000000000209cd6         db  0x00 ; '.'
0000000000209cd7         db  0x00 ; '.'
0000000000209cd8         db  0x0a ; '.'
0000000000209cd9         db  0x00 ; '.'
0000000000209cda         db  0x00 ; '.'
0000000000209cdb         db  0x00 ; '.'
0000000000209cdc         db  0x00 ; '.'
0000000000209cdd         db  0x00 ; '.'
0000000000209cde         db  0x00 ; '.'
0000000000209cdf         db  0x00 ; '.'
0000000000209ce0         db  0xca ; '.'
0000000000209ce1         db  0x02 ; '.'
0000000000209ce2         db  0x00 ; '.'
0000000000209ce3         db  0x00 ; '.'
0000000000209ce4         db  0x00 ; '.'
0000000000209ce5         db  0x00 ; '.'
0000000000209ce6         db  0x00 ; '.'
0000000000209ce7         db  0x00 ; '.'
0000000000209ce8         db  0x0b ; '.'
0000000000209ce9         db  0x00 ; '.'
0000000000209cea         db  0x00 ; '.'
0000000000209ceb         db  0x00 ; '.'
0000000000209cec         db  0x00 ; '.'
0000000000209ced         db  0x00 ; '.'
0000000000209cee         db  0x00 ; '.'
0000000000209cef         db  0x00 ; '.'
0000000000209cf0         db  0x18 ; '.'
0000000000209cf1         db  0x00 ; '.'
0000000000209cf2         db  0x00 ; '.'
0000000000209cf3         db  0x00 ; '.'
0000000000209cf4         db  0x00 ; '.'
0000000000209cf5         db  0x00 ; '.'
0000000000209cf6         db  0x00 ; '.'
0000000000209cf7         db  0x00 ; '.'
0000000000209cf8         db  0x15 ; '.'
0000000000209cf9         db  0x00 ; '.'
0000000000209cfa         db  0x00 ; '.'
0000000000209cfb         db  0x00 ; '.'
0000000000209cfc         db  0x00 ; '.'
0000000000209cfd         db  0x00 ; '.'
0000000000209cfe         db  0x00 ; '.'
0000000000209cff         db  0x00 ; '.'
0000000000209d00         db  0x00 ; '.'
0000000000209d01         db  0x00 ; '.'
0000000000209d02         db  0x00 ; '.'
0000000000209d03         db  0x00 ; '.'
0000000000209d04         db  0x00 ; '.'
0000000000209d05         db  0x00 ; '.'
0000000000209d06         db  0x00 ; '.'
0000000000209d07         db  0x00 ; '.'
0000000000209d08         db  0x03 ; '.'
0000000000209d09         db  0x00 ; '.'
0000000000209d0a         db  0x00 ; '.'
0000000000209d0b         db  0x00 ; '.'
0000000000209d0c         db  0x00 ; '.'
0000000000209d0d         db  0x00 ; '.'
0000000000209d0e         db  0x00 ; '.'
0000000000209d0f         db  0x00 ; '.'
0000000000209d10         db  0x28 ; '('
0000000000209d11         db  0x9e ; '.'
0000000000209d12         db  0x20 ; ' '
0000000000209d13         db  0x00 ; '.'
0000000000209d14         db  0x00 ; '.'
0000000000209d15         db  0x00 ; '.'
0000000000209d16         db  0x00 ; '.'
0000000000209d17         db  0x00 ; '.'
0000000000209d18         db  0x02 ; '.'
0000000000209d19         db  0x00 ; '.'
0000000000209d1a         db  0x00 ; '.'
0000000000209d1b         db  0x00 ; '.'
0000000000209d1c         db  0x00 ; '.'
0000000000209d1d         db  0x00 ; '.'
0000000000209d1e         db  0x00 ; '.'
0000000000209d1f         db  0x00 ; '.'
0000000000209d20         db  0x80 ; '.'
0000000000209d21         db  0x04 ; '.'
0000000000209d22         db  0x00 ; '.'
0000000000209d23         db  0x00 ; '.'
0000000000209d24         db  0x00 ; '.'
0000000000209d25         db  0x00 ; '.'
0000000000209d26         db  0x00 ; '.'
0000000000209d27         db  0x00 ; '.'
0000000000209d28         db  0x14 ; '.'
0000000000209d29         db  0x00 ; '.'
0000000000209d2a         db  0x00 ; '.'
0000000000209d2b         db  0x00 ; '.'
0000000000209d2c         db  0x00 ; '.'
0000000000209d2d         db  0x00 ; '.'
0000000000209d2e         db  0x00 ; '.'
0000000000209d2f         db  0x00 ; '.'
0000000000209d30         db  0x07 ; '.'
0000000000209d31         db  0x00 ; '.'
0000000000209d32         db  0x00 ; '.'
0000000000209d33         db  0x00 ; '.'
0000000000209d34         db  0x00 ; '.'
0000000000209d35         db  0x00 ; '.'
0000000000209d36         db  0x00 ; '.'
0000000000209d37         db  0x00 ; '.'
0000000000209d38         db  0x17 ; '.'
0000000000209d39         db  0x00 ; '.'
0000000000209d3a         db  0x00 ; '.'
0000000000209d3b         db  0x00 ; '.'
0000000000209d3c         db  0x00 ; '.'
0000000000209d3d         db  0x00 ; '.'
0000000000209d3e         db  0x00 ; '.'
0000000000209d3f         db  0x00 ; '.'
0000000000209d40         db  0x38 ; '8'
0000000000209d41         db  0x0f ; '.'
0000000000209d42         db  0x00 ; '.'
0000000000209d43         db  0x00 ; '.'
0000000000209d44         db  0x00 ; '.'
0000000000209d45         db  0x00 ; '.'
0000000000209d46         db  0x00 ; '.'
0000000000209d47         db  0x00 ; '.'
0000000000209d48         db  0x07 ; '.'
0000000000209d49         db  0x00 ; '.'
0000000000209d4a         db  0x00 ; '.'
0000000000209d4b         db  0x00 ; '.'
0000000000209d4c         db  0x00 ; '.'
0000000000209d4d         db  0x00 ; '.'
0000000000209d4e         db  0x00 ; '.'
0000000000209d4f         db  0x00 ; '.'
0000000000209d50         db  0x38 ; '8'
0000000000209d51         db  0x0c ; '.'
0000000000209d52         db  0x00 ; '.'
0000000000209d53         db  0x00 ; '.'
0000000000209d54         db  0x00 ; '.'
0000000000209d55         db  0x00 ; '.'
0000000000209d56         db  0x00 ; '.'
0000000000209d57         db  0x00 ; '.'
0000000000209d58         db  0x08 ; '.'
0000000000209d59         db  0x00 ; '.'
0000000000209d5a         db  0x00 ; '.'
0000000000209d5b         db  0x00 ; '.'
0000000000209d5c         db  0x00 ; '.'
0000000000209d5d         db  0x00 ; '.'
0000000000209d5e         db  0x00 ; '.'
0000000000209d5f         db  0x00 ; '.'
0000000000209d60         db  0x00 ; '.'
0000000000209d61         db  0x03 ; '.'
0000000000209d62         db  0x00 ; '.'
0000000000209d63         db  0x00 ; '.'
0000000000209d64         db  0x00 ; '.'
0000000000209d65         db  0x00 ; '.'
0000000000209d66         db  0x00 ; '.'
0000000000209d67         db  0x00 ; '.'
0000000000209d68         db  0x09 ; '.'
0000000000209d69         db  0x00 ; '.'
0000000000209d6a         db  0x00 ; '.'
0000000000209d6b         db  0x00 ; '.'
0000000000209d6c         db  0x00 ; '.'
0000000000209d6d         db  0x00 ; '.'
0000000000209d6e         db  0x00 ; '.'
0000000000209d6f         db  0x00 ; '.'
0000000000209d70         db  0x18 ; '.'
0000000000209d71         db  0x00 ; '.'
0000000000209d72         db  0x00 ; '.'
0000000000209d73         db  0x00 ; '.'
0000000000209d74         db  0x00 ; '.'
0000000000209d75         db  0x00 ; '.'
0000000000209d76         db  0x00 ; '.'
0000000000209d77         db  0x00 ; '.'
0000000000209d78         db  0x1e ; '.'
0000000000209d79         db  0x00 ; '.'
0000000000209d7a         db  0x00 ; '.'
0000000000209d7b         db  0x00 ; '.'
0000000000209d7c         db  0x00 ; '.'
0000000000209d7d         db  0x00 ; '.'
0000000000209d7e         db  0x00 ; '.'
0000000000209d7f         db  0x00 ; '.'
0000000000209d80         db  0x08 ; '.'
0000000000209d81         db  0x00 ; '.'
0000000000209d82         db  0x00 ; '.'
0000000000209d83         db  0x00 ; '.'
0000000000209d84         db  0x00 ; '.'
0000000000209d85         db  0x00 ; '.'
0000000000209d86         db  0x00 ; '.'
0000000000209d87         db  0x00 ; '.'
0000000000209d88         db  0xfb ; '.'
0000000000209d89         db  0xff ; '.'
0000000000209d8a         db  0xff ; '.'
0000000000209d8b         db  0x6f ; 'o'
0000000000209d8c         db  0x00 ; '.'
0000000000209d8d         db  0x00 ; '.'
0000000000209d8e         db  0x00 ; '.'
0000000000209d8f         db  0x00 ; '.'
0000000000209d90         db  0x01 ; '.'
0000000000209d91         db  0x00 ; '.'
0000000000209d92         db  0x00 ; '.'
0000000000209d93         db  0x08 ; '.'
0000000000209d94         db  0x00 ; '.'
0000000000209d95         db  0x00 ; '.'
0000000000209d96         db  0x00 ; '.'
0000000000209d97         db  0x00 ; '.'
0000000000209d98         db  0xfe ; '.'
0000000000209d99         db  0xff ; '.'
0000000000209d9a         db  0xff ; '.'
0000000000209d9b         db  0x6f ; 'o'
0000000000209d9c         db  0x00 ; '.'
0000000000209d9d         db  0x00 ; '.'
0000000000209d9e         db  0x00 ; '.'
0000000000209d9f         db  0x00 ; '.'
0000000000209da0         db  0xd8 ; '.'
0000000000209da1         db  0x0b ; '.'
0000000000209da2         db  0x00 ; '.'
0000000000209da3         db  0x00 ; '.'
0000000000209da4         db  0x00 ; '.'
0000000000209da5         db  0x00 ; '.'
0000000000209da6         db  0x00 ; '.'
0000000000209da7         db  0x00 ; '.'
0000000000209da8         db  0xff ; '.'
0000000000209da9         db  0xff ; '.'
0000000000209daa         db  0xff ; '.'
0000000000209dab         db  0x6f ; 'o'
0000000000209dac         db  0x00 ; '.'
0000000000209dad         db  0x00 ; '.'
0000000000209dae         db  0x00 ; '.'
0000000000209daf         db  0x00 ; '.'
0000000000209db0         db  0x01 ; '.'
0000000000209db1         db  0x00 ; '.'
0000000000209db2         db  0x00 ; '.'
0000000000209db3         db  0x00 ; '.'
0000000000209db4         db  0x00 ; '.'
0000000000209db5         db  0x00 ; '.'
0000000000209db6         db  0x00 ; '.'
0000000000209db7         db  0x00 ; '.'
0000000000209db8         db  0xf0 ; '.'
0000000000209db9         db  0xff ; '.'
0000000000209dba         db  0xff ; '.'
0000000000209dbb         db  0x6f ; 'o'
0000000000209dbc         db  0x00 ; '.'
0000000000209dbd         db  0x00 ; '.'
0000000000209dbe         db  0x00 ; '.'
0000000000209dbf         db  0x00 ; '.'
0000000000209dc0         db  0x5a ; 'Z'
0000000000209dc1         db  0x0b ; '.'
0000000000209dc2         db  0x00 ; '.'
0000000000209dc3         db  0x00 ; '.'
0000000000209dc4         db  0x00 ; '.'
0000000000209dc5         db  0x00 ; '.'
0000000000209dc6         db  0x00 ; '.'
0000000000209dc7         db  0x00 ; '.'
0000000000209dc8         db  0xf9 ; '.'
0000000000209dc9         db  0xff ; '.'
0000000000209dca         db  0xff ; '.'
0000000000209dcb         db  0x6f ; 'o'
0000000000209dcc         db  0x00 ; '.'
0000000000209dcd         db  0x00 ; '.'
0000000000209dce         db  0x00 ; '.'
0000000000209dcf         db  0x00 ; '.'
0000000000209dd0         db  0x16 ; '.'
0000000000209dd1         db  0x00 ; '.'
0000000000209dd2         db  0x00 ; '.'
0000000000209dd3         db  0x00 ; '.'
0000000000209dd4         db  0x00 ; '.'
0000000000209dd5         db  0x00 ; '.'
0000000000209dd6         db  0x00 ; '.'
0000000000209dd7         db  0x00 ; '.'
0000000000209dd8         db  0x00 ; '.'
0000000000209dd9         db  0x00 ; '.'
0000000000209dda         db  0x00 ; '.'
0000000000209ddb         db  0x00 ; '.'
0000000000209ddc         db  0x00 ; '.'
0000000000209ddd         db  0x00 ; '.'
0000000000209dde         db  0x00 ; '.'
0000000000209ddf         db  0x00 ; '.'
0000000000209de0         db  0x00 ; '.'
0000000000209de1         db  0x00 ; '.'
0000000000209de2         db  0x00 ; '.'
0000000000209de3         db  0x00 ; '.'
0000000000209de4         db  0x00 ; '.'
0000000000209de5         db  0x00 ; '.'
0000000000209de6         db  0x00 ; '.'
0000000000209de7         db  0x00 ; '.'
0000000000209de8         db  0x00 ; '.'
0000000000209de9         db  0x00 ; '.'
0000000000209dea         db  0x00 ; '.'
0000000000209deb         db  0x00 ; '.'
0000000000209dec         db  0x00 ; '.'
0000000000209ded         db  0x00 ; '.'
0000000000209dee         db  0x00 ; '.'
0000000000209def         db  0x00 ; '.'
0000000000209df0         db  0x00 ; '.'
0000000000209df1         db  0x00 ; '.'
0000000000209df2         db  0x00 ; '.'
0000000000209df3         db  0x00 ; '.'
0000000000209df4         db  0x00 ; '.'
0000000000209df5         db  0x00 ; '.'
0000000000209df6         db  0x00 ; '.'
0000000000209df7         db  0x00 ; '.'
0000000000209df8         db  0x00 ; '.'
0000000000209df9         db  0x00 ; '.'
0000000000209dfa         db  0x00 ; '.'
0000000000209dfb         db  0x00 ; '.'
0000000000209dfc         db  0x00 ; '.'
0000000000209dfd         db  0x00 ; '.'
0000000000209dfe         db  0x00 ; '.'
0000000000209dff         db  0x00 ; '.'
0000000000209e00         db  0x00 ; '.'
0000000000209e01         db  0x00 ; '.'
0000000000209e02         db  0x00 ; '.'
0000000000209e03         db  0x00 ; '.'
0000000000209e04         db  0x00 ; '.'
0000000000209e05         db  0x00 ; '.'
0000000000209e06         db  0x00 ; '.'
0000000000209e07         db  0x00 ; '.'
0000000000209e08         db  0x00 ; '.'
0000000000209e09         db  0x00 ; '.'
0000000000209e0a         db  0x00 ; '.'
0000000000209e0b         db  0x00 ; '.'
0000000000209e0c         db  0x00 ; '.'
0000000000209e0d         db  0x00 ; '.'
0000000000209e0e         db  0x00 ; '.'
0000000000209e0f         db  0x00 ; '.'
0000000000209e10         db  0x00 ; '.'
0000000000209e11         db  0x00 ; '.'
0000000000209e12         db  0x00 ; '.'
0000000000209e13         db  0x00 ; '.'
0000000000209e14         db  0x00 ; '.'
0000000000209e15         db  0x00 ; '.'
0000000000209e16         db  0x00 ; '.'
0000000000209e17         db  0x00 ; '.'
0000000000209e18         db  0x00 ; '.'
0000000000209e19         db  0x00 ; '.'
0000000000209e1a         db  0x00 ; '.'
0000000000209e1b         db  0x00 ; '.'
0000000000209e1c         db  0x00 ; '.'
0000000000209e1d         db  0x00 ; '.'
0000000000209e1e         db  0x00 ; '.'
0000000000209e1f         db  0x00 ; '.'
0000000000209e20         db  0x00 ; '.'
0000000000209e21         db  0x00 ; '.'
0000000000209e22         db  0x00 ; '.'
0000000000209e23         db  0x00 ; '.'
0000000000209e24         db  0x00 ; '.'
0000000000209e25         db  0x00 ; '.'
0000000000209e26         db  0x00 ; '.'
0000000000209e27         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x209e28; 0x209fe8[ (448 bytes)
        ; File offset : [40488; 40936[ (448 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
0000000000209e28         db  0x38 ; '8'
0000000000209e29         db  0x9c ; '.'
0000000000209e2a         db  0x20 ; ' '
0000000000209e2b         db  0x00 ; '.'
0000000000209e2c         db  0x00 ; '.'
0000000000209e2d         db  0x00 ; '.'
0000000000209e2e         db  0x00 ; '.'
0000000000209e2f         db  0x00 ; '.'
                     qword_209e30:
0000000000209e30         dq         0x0000000000000000                          ; DATA XREF=0x13d0
0000000000209e38         db  0x00 ; '.'                                         ; DATA XREF=0x13d6
0000000000209e39         db  0x00 ; '.'
0000000000209e3a         db  0x00 ; '.'
0000000000209e3b         db  0x00 ; '.'
0000000000209e3c         db  0x00 ; '.'
0000000000209e3d         db  0x00 ; '.'
0000000000209e3e         db  0x00 ; '.'
0000000000209e3f         db  0x00 ; '.'
                     __snprintf_chk@GOT:        // __snprintf_chk
0000000000209e40         dq         0x000000000020a220                          ; DATA XREF=j___snprintf_chk
                     free@GOT:        // free
0000000000209e48         dq         0x000000000020a228                          ; DATA XREF=j_free
                     abort@GOT:        // abort
0000000000209e50         dq         0x000000000020a230                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
0000000000209e58         dq         0x000000000020a238                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
0000000000209e60         dq         0x000000000020a240                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
0000000000209e68         dq         0x000000000020a250                          ; DATA XREF=j__exit
                     __fpending@GOT:        // __fpending
0000000000209e70         dq         0x000000000020a258                          ; DATA XREF=j___fpending
                     textdomain@GOT:        // textdomain
0000000000209e78         dq         0x000000000020a260                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
0000000000209e80         dq         0x000000000020a268                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
0000000000209e88         dq         0x000000000020a270                          ; DATA XREF=j_bindtextdomain
                     rmdir@GOT:        // rmdir
0000000000209e90         dq         0x000000000020a278                          ; DATA XREF=j_rmdir
                     dcgettext@GOT:        // dcgettext
0000000000209e98         dq         0x000000000020a280                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
0000000000209ea0         dq         0x000000000020a288                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
0000000000209ea8         dq         0x000000000020a290                          ; DATA XREF=j_strlen
                     openat@GOT:        // openat
0000000000209eb0         dq         0x000000000020a298                          ; DATA XREF=j_openat
                     __stack_chk_fail@GOT:        // __stack_chk_fail
0000000000209eb8         dq         0x000000000020a2a0                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
0000000000209ec0         dq         0x000000000020a2a8                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
0000000000209ec8         dq         0x000000000020a2b0                          ; DATA XREF=j_mbrtowc
                     __overflow@GOT:        // __overflow
0000000000209ed0         dq         0x000000000020a2b8                          ; DATA XREF=j___overflow
                     strrchr@GOT:        // strrchr
0000000000209ed8         dq         0x000000000020a2c0                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
0000000000209ee0         dq         0x000000000020a2c8                          ; DATA XREF=j_lseek
                     memset@GOT:        // memset
0000000000209ee8         dq         0x000000000020a2d0                          ; DATA XREF=j_memset
                     close@GOT:        // close
0000000000209ef0         dq         0x000000000020a2d8                          ; DATA XREF=j_close
                     closedir@GOT:        // closedir
0000000000209ef8         dq         0x000000000020a2e0                          ; DATA XREF=j_closedir
                     memcmp@GOT:        // memcmp
0000000000209f00         dq         0x000000000020a2f0                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
0000000000209f08         dq         0x000000000020a2f8                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
0000000000209f10         dq         0x000000000020a300                          ; DATA XREF=j_calloc
                     memcpy@GOT:        // memcpy
0000000000209f18         dq         0x000000000020a310                          ; DATA XREF=j_memcpy
                     fileno@GOT:        // fileno
0000000000209f20         dq         0x000000000020a318                          ; DATA XREF=j_fileno
                     readdir@GOT:        // readdir
0000000000209f28         dq         0x000000000020a320                          ; DATA XREF=j_readdir
                     malloc@GOT:        // malloc
0000000000209f30         dq         0x000000000020a328                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
0000000000209f38         dq         0x000000000020a330                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
0000000000209f40         dq         0x000000000020a338                          ; DATA XREF=j_nl_langinfo
                     __freading@GOT:        // __freading
0000000000209f48         dq         0x000000000020a340                          ; DATA XREF=j___freading
                     fwrite_unlocked@GOT:        // fwrite_unlocked
0000000000209f50         dq         0x000000000020a348                          ; DATA XREF=j_fwrite_unlocked
                     realloc@GOT:        // realloc
0000000000209f58         dq         0x000000000020a350                          ; DATA XREF=j_realloc
                     setlocale@GOT:        // setlocale
0000000000209f60         dq         0x000000000020a358                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
0000000000209f68         dq         0x000000000020a360                          ; DATA XREF=j___printf_chk
                     error@GOT:        // error
0000000000209f70         dq         0x000000000020a368                          ; DATA XREF=j_error
                     fseeko@GOT:        // fseeko
0000000000209f78         dq         0x000000000020a370                          ; DATA XREF=j_fseeko
                     fdopendir@GOT:        // fdopendir
0000000000209f80         dq         0x000000000020a378                          ; DATA XREF=j_fdopendir
                     __cxa_atexit@GOT:        // __cxa_atexit
0000000000209f88         dq         0x000000000020a380                          ; DATA XREF=j___cxa_atexit
                     exit@GOT:        // exit
0000000000209f90         dq         0x000000000020a388                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
0000000000209f98         dq         0x000000000020a390                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
0000000000209fa0         dq         0x000000000020a398                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
0000000000209fa8         dq         0x000000000020a3a8                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
0000000000209fb0         dq         0x000000000020a3b0                          ; DATA XREF=j_iswprint
                     __ctype_b_loc@GOT:        // __ctype_b_loc
0000000000209fb8         dq         0x000000000020a3c0                          ; DATA XREF=j___ctype_b_loc
                     qword_209fc0:
0000000000209fc0         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
0000000000209fc8         db  0x00 ; '.'                                         ; DATA XREF=_start+36
0000000000209fc9         db  0x00 ; '.'
0000000000209fca         db  0x00 ; '.'
0000000000209fcb         db  0x00 ; '.'
0000000000209fcc         db  0x00 ; '.'
0000000000209fcd         db  0x00 ; '.'
0000000000209fce         db  0x00 ; '.'
0000000000209fcf         db  0x00 ; '.'
                     qword_209fd0:
0000000000209fd0         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_209fd8:
0000000000209fd8         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_209fe0:
0000000000209fe0         dq         0x0000000000000000                          ; DATA XREF=j_qword_209fe0, __do_global_dtors_aux+9
0000000000209fe8         db  0x00 ; '.'
0000000000209fe9         db  0x00 ; '.'
0000000000209fea         db  0x00 ; '.'
0000000000209feb         db  0x00 ; '.'
0000000000209fec         db  0x00 ; '.'
0000000000209fed         db  0x00 ; '.'
0000000000209fee         db  0x00 ; '.'
0000000000209fef         db  0x00 ; '.'
0000000000209ff0         db  0x00 ; '.'
0000000000209ff1         db  0x00 ; '.'
0000000000209ff2         db  0x00 ; '.'
0000000000209ff3         db  0x00 ; '.'
0000000000209ff4         db  0x00 ; '.'
0000000000209ff5         db  0x00 ; '.'
0000000000209ff6         db  0x00 ; '.'
0000000000209ff7         db  0x00 ; '.'
0000000000209ff8         db  0x00 ; '.'
0000000000209ff9         db  0x00 ; '.'
0000000000209ffa         db  0x00 ; '.'
0000000000209ffb         db  0x00 ; '.'
0000000000209ffc         db  0x00 ; '.'
0000000000209ffd         db  0x00 ; '.'
0000000000209ffe         db  0x00 ; '.'
0000000000209fff         db  0x00 ; '.'


        ; Section .data
        ; Range: [0x20a000; 0x20a080[ (128 bytes)
        ; File offset : [40960; 41088[ (128 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

000000000020a000         db  0x00 ; '.'
000000000020a001         db  0x00 ; '.'
000000000020a002         db  0x00 ; '.'
000000000020a003         db  0x00 ; '.'
000000000020a004         db  0x00 ; '.'
000000000020a005         db  0x00 ; '.'
000000000020a006         db  0x00 ; '.'
000000000020a007         db  0x00 ; '.'
                     __dso_handle:
000000000020a008         dq         0x000000000020a008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     Version:
000000000020a010         dq         0x0000000000007136                          ; "8.31", DATA XREF=main+178
                     exit_failure:
000000000020a018         dd         0x00000001                                  ; DATA XREF=close_stdout+130, xalloc_die+23
000000000020a01c         db  0x00 ; '.'
000000000020a01d         db  0x00 ; '.'
000000000020a01e         db  0x00 ; '.'
000000000020a01f         db  0x00 ; '.'
                     quote_quoting_options:
000000000020a020         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
000000000020a021         db  0x00 ; '.'
000000000020a022         db  0x00 ; '.'
000000000020a023         db  0x00 ; '.'
000000000020a024         db  0x00 ; '.'
000000000020a025         db  0x00 ; '.'
000000000020a026         db  0x00 ; '.'
000000000020a027         db  0x00 ; '.'
000000000020a028         db  0x00 ; '.'
000000000020a029         db  0x00 ; '.'
000000000020a02a         db  0x00 ; '.'
000000000020a02b         db  0x00 ; '.'
000000000020a02c         db  0x00 ; '.'
000000000020a02d         db  0x00 ; '.'
000000000020a02e         db  0x00 ; '.'
000000000020a02f         db  0x00 ; '.'
000000000020a030         db  0x00 ; '.'
000000000020a031         db  0x00 ; '.'
000000000020a032         db  0x00 ; '.'
000000000020a033         db  0x00 ; '.'
000000000020a034         db  0x00 ; '.'
000000000020a035         db  0x00 ; '.'
000000000020a036         db  0x00 ; '.'
000000000020a037         db  0x00 ; '.'
000000000020a038         db  0x00 ; '.'
000000000020a039         db  0x00 ; '.'
000000000020a03a         db  0x00 ; '.'
000000000020a03b         db  0x00 ; '.'
000000000020a03c         db  0x00 ; '.'
000000000020a03d         db  0x00 ; '.'
000000000020a03e         db  0x00 ; '.'
000000000020a03f         db  0x00 ; '.'
000000000020a040         db  0x00 ; '.'
000000000020a041         db  0x00 ; '.'
000000000020a042         db  0x00 ; '.'
000000000020a043         db  0x00 ; '.'
000000000020a044         db  0x00 ; '.'
000000000020a045         db  0x00 ; '.'
000000000020a046         db  0x00 ; '.'
000000000020a047         db  0x00 ; '.'
000000000020a048         db  0x00 ; '.'
000000000020a049         db  0x00 ; '.'
000000000020a04a         db  0x00 ; '.'
000000000020a04b         db  0x00 ; '.'
000000000020a04c         db  0x00 ; '.'
000000000020a04d         db  0x00 ; '.'
000000000020a04e         db  0x00 ; '.'
000000000020a04f         db  0x00 ; '.'
000000000020a050         db  0x00 ; '.'
000000000020a051         db  0x00 ; '.'
000000000020a052         db  0x00 ; '.'
000000000020a053         db  0x00 ; '.'
000000000020a054         db  0x00 ; '.'
000000000020a055         db  0x00 ; '.'
000000000020a056         db  0x00 ; '.'
000000000020a057         db  0x00 ; '.'
                     nslots:
000000000020a058         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020a05c         align      32
                     slotvec:
000000000020a060         dq         0x000000000020a070                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
000000000020a068         db  0x00 ; '.'
000000000020a069         db  0x00 ; '.'
000000000020a06a         db  0x00 ; '.'
000000000020a06b         db  0x00 ; '.'
000000000020a06c         db  0x00 ; '.'
000000000020a06d         db  0x00 ; '.'
000000000020a06e         db  0x00 ; '.'
000000000020a06f         db  0x00 ; '.'
                     slotvec0:
000000000020a070         dq         1.26481e-321, 1.05648e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec


        ; Section .bss
        ; Range: [0x20a080; 0x20a218[ (408 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
000000000020a080         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
000000000020a081         db  0x00 ; '.'
000000000020a082         db  0x00 ; '.'
000000000020a083         db  0x00 ; '.'
000000000020a084         db  0x00 ; '.'
000000000020a085         db  0x00 ; '.'
000000000020a086         db  0x00 ; '.'
000000000020a087         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
000000000020a088         db  0x00 ; '.'                                         ; DATA XREF=main+171, main+390, main+704, usage+125, usage+162, usage+199, usage+236, usage+832, close_stdout+6, emit_bug_reporting_address+90
000000000020a089         db  0x00 ; '.'
000000000020a08a         db  0x00 ; '.'
000000000020a08b         db  0x00 ; '.'
000000000020a08c         db  0x00 ; '.'
000000000020a08d         db  0x00 ; '.'
000000000020a08e         db  0x00 ; '.'
000000000020a08f         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
000000000020a090         db  0x00 ; '.'                                         ; DATA XREF=main+252, main+317, main+328
000000000020a091         db  0x00 ; '.'
000000000020a092         db  0x00 ; '.'
000000000020a093         db  0x00 ; '.'
000000000020a094         db  0x00 ; '.'
000000000020a095         db  0x00 ; '.'
000000000020a096         db  0x00 ; '.'
000000000020a097         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
000000000020a098         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
000000000020a099         db  0x00 ; '.'
000000000020a09a         db  0x00 ; '.'
000000000020a09b         db  0x00 ; '.'
000000000020a09c         db  0x00 ; '.'
000000000020a09d         db  0x00 ; '.'
000000000020a09e         db  0x00 ; '.'
000000000020a09f         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
000000000020a0a0         db  0x00 ; '.'                                         ; DATA XREF=usage+61, close_stdout+44, set_program_name+125
000000000020a0a1         db  0x00 ; '.'
000000000020a0a2         db  0x00 ; '.'
000000000020a0a3         db  0x00 ; '.'
000000000020a0a4         db  0x00 ; '.'
000000000020a0a5         db  0x00 ; '.'
000000000020a0a6         db  0x00 ; '.'
000000000020a0a7         db  0x00 ; '.'
                     completed.7697:
000000000020a0a8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
                     verbose:
000000000020a0a9         db  0x00 ; '.'                                         ; DATA XREF=main+240, main+340, main+558
                     ignore_fail_on_non_empty:
000000000020a0aa         db  0x00 ; '.'                                         ; DATA XREF=main+150, ignorable_failure
                     remove_empty_parents:
000000000020a0ab         db  0x00 ; '.'                                         ; DATA XREF=main+94, main+224, main+300
000000000020a0ac         db  0x00 ; '.'
000000000020a0ad         db  0x00 ; '.'
000000000020a0ae         db  0x00 ; '.'
000000000020a0af         db  0x00 ; '.'
                     ignore_EPIPE:
000000000020a0b0         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
000000000020a0b1         db  0x00 ; '.'
000000000020a0b2         db  0x00 ; '.'
000000000020a0b3         db  0x00 ; '.'
000000000020a0b4         db  0x00 ; '.'
000000000020a0b5         db  0x00 ; '.'
000000000020a0b6         db  0x00 ; '.'
000000000020a0b7         db  0x00 ; '.'
                     file_name:
000000000020a0b8         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
000000000020a0b9         db  0x00 ; '.'
000000000020a0ba         db  0x00 ; '.'
000000000020a0bb         db  0x00 ; '.'
000000000020a0bc         db  0x00 ; '.'
000000000020a0bd         db  0x00 ; '.'
000000000020a0be         db  0x00 ; '.'
000000000020a0bf         db  0x00 ; '.'
                     program_name:
000000000020a0c0         db  0x00 ; '.'                                         ; DATA XREF=usage+20, prog_fprintf+113, set_program_name+109
000000000020a0c1         db  0x00 ; '.'
000000000020a0c2         db  0x00 ; '.'
000000000020a0c3         db  0x00 ; '.'
000000000020a0c4         db  0x00 ; '.'
000000000020a0c5         db  0x00 ; '.'
000000000020a0c6         db  0x00 ; '.'
000000000020a0c7         db  0x00 ; '.'
000000000020a0c8         db  0x00 ; '.'
000000000020a0c9         db  0x00 ; '.'
000000000020a0ca         db  0x00 ; '.'
000000000020a0cb         db  0x00 ; '.'
000000000020a0cc         db  0x00 ; '.'
000000000020a0cd         db  0x00 ; '.'
000000000020a0ce         db  0x00 ; '.'
000000000020a0cf         db  0x00 ; '.'
000000000020a0d0         db  0x00 ; '.'
000000000020a0d1         db  0x00 ; '.'
000000000020a0d2         db  0x00 ; '.'
000000000020a0d3         db  0x00 ; '.'
000000000020a0d4         db  0x00 ; '.'
000000000020a0d5         db  0x00 ; '.'
000000000020a0d6         db  0x00 ; '.'
000000000020a0d7         db  0x00 ; '.'
000000000020a0d8         db  0x00 ; '.'
000000000020a0d9         db  0x00 ; '.'
000000000020a0da         db  0x00 ; '.'
000000000020a0db         db  0x00 ; '.'
000000000020a0dc         db  0x00 ; '.'
000000000020a0dd         db  0x00 ; '.'
000000000020a0de         db  0x00 ; '.'
000000000020a0df         db  0x00 ; '.'
                     slot0:
000000000020a0e0         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
000000000020a0e1         db  0x00 ; '.'
000000000020a0e2         db  0x00 ; '.'
000000000020a0e3         db  0x00 ; '.'
000000000020a0e4         db  0x00 ; '.'
000000000020a0e5         db  0x00 ; '.'
000000000020a0e6         db  0x00 ; '.'
000000000020a0e7         db  0x00 ; '.'
000000000020a0e8         db  0x00 ; '.'
000000000020a0e9         db  0x00 ; '.'
000000000020a0ea         db  0x00 ; '.'
000000000020a0eb         db  0x00 ; '.'
000000000020a0ec         db  0x00 ; '.'
000000000020a0ed         db  0x00 ; '.'
000000000020a0ee         db  0x00 ; '.'
000000000020a0ef         db  0x00 ; '.'
000000000020a0f0         db  0x00 ; '.'
000000000020a0f1         db  0x00 ; '.'
000000000020a0f2         db  0x00 ; '.'
000000000020a0f3         db  0x00 ; '.'
000000000020a0f4         db  0x00 ; '.'
000000000020a0f5         db  0x00 ; '.'
000000000020a0f6         db  0x00 ; '.'
000000000020a0f7         db  0x00 ; '.'
000000000020a0f8         db  0x00 ; '.'
000000000020a0f9         db  0x00 ; '.'
000000000020a0fa         db  0x00 ; '.'
000000000020a0fb         db  0x00 ; '.'
000000000020a0fc         db  0x00 ; '.'
000000000020a0fd         db  0x00 ; '.'
000000000020a0fe         db  0x00 ; '.'
000000000020a0ff         db  0x00 ; '.'
000000000020a100         db  0x00 ; '.'
000000000020a101         db  0x00 ; '.'
000000000020a102         db  0x00 ; '.'
000000000020a103         db  0x00 ; '.'
000000000020a104         db  0x00 ; '.'
000000000020a105         db  0x00 ; '.'
000000000020a106         db  0x00 ; '.'
000000000020a107         db  0x00 ; '.'
000000000020a108         db  0x00 ; '.'
000000000020a109         db  0x00 ; '.'
000000000020a10a         db  0x00 ; '.'
000000000020a10b         db  0x00 ; '.'
000000000020a10c         db  0x00 ; '.'
000000000020a10d         db  0x00 ; '.'
000000000020a10e         db  0x00 ; '.'
000000000020a10f         db  0x00 ; '.'
000000000020a110         db  0x00 ; '.'
000000000020a111         db  0x00 ; '.'
000000000020a112         db  0x00 ; '.'
000000000020a113         db  0x00 ; '.'
000000000020a114         db  0x00 ; '.'
000000000020a115         db  0x00 ; '.'
000000000020a116         db  0x00 ; '.'
000000000020a117         db  0x00 ; '.'
000000000020a118         db  0x00 ; '.'
000000000020a119         db  0x00 ; '.'
000000000020a11a         db  0x00 ; '.'
000000000020a11b         db  0x00 ; '.'
000000000020a11c         db  0x00 ; '.'
000000000020a11d         db  0x00 ; '.'
000000000020a11e         db  0x00 ; '.'
000000000020a11f         db  0x00 ; '.'
000000000020a120         db  0x00 ; '.'
000000000020a121         db  0x00 ; '.'
000000000020a122         db  0x00 ; '.'
000000000020a123         db  0x00 ; '.'
000000000020a124         db  0x00 ; '.'
000000000020a125         db  0x00 ; '.'
000000000020a126         db  0x00 ; '.'
000000000020a127         db  0x00 ; '.'
000000000020a128         db  0x00 ; '.'
000000000020a129         db  0x00 ; '.'
000000000020a12a         db  0x00 ; '.'
000000000020a12b         db  0x00 ; '.'
000000000020a12c         db  0x00 ; '.'
000000000020a12d         db  0x00 ; '.'
000000000020a12e         db  0x00 ; '.'
000000000020a12f         db  0x00 ; '.'
000000000020a130         db  0x00 ; '.'
000000000020a131         db  0x00 ; '.'
000000000020a132         db  0x00 ; '.'
000000000020a133         db  0x00 ; '.'
000000000020a134         db  0x00 ; '.'
000000000020a135         db  0x00 ; '.'
000000000020a136         db  0x00 ; '.'
000000000020a137         db  0x00 ; '.'
000000000020a138         db  0x00 ; '.'
000000000020a139         db  0x00 ; '.'
000000000020a13a         db  0x00 ; '.'
000000000020a13b         db  0x00 ; '.'
000000000020a13c         db  0x00 ; '.'
000000000020a13d         db  0x00 ; '.'
000000000020a13e         db  0x00 ; '.'
000000000020a13f         db  0x00 ; '.'
000000000020a140         db  0x00 ; '.'
000000000020a141         db  0x00 ; '.'
000000000020a142         db  0x00 ; '.'
000000000020a143         db  0x00 ; '.'
000000000020a144         db  0x00 ; '.'
000000000020a145         db  0x00 ; '.'
000000000020a146         db  0x00 ; '.'
000000000020a147         db  0x00 ; '.'
000000000020a148         db  0x00 ; '.'
000000000020a149         db  0x00 ; '.'
000000000020a14a         db  0x00 ; '.'
000000000020a14b         db  0x00 ; '.'
000000000020a14c         db  0x00 ; '.'
000000000020a14d         db  0x00 ; '.'
000000000020a14e         db  0x00 ; '.'
000000000020a14f         db  0x00 ; '.'
000000000020a150         db  0x00 ; '.'
000000000020a151         db  0x00 ; '.'
000000000020a152         db  0x00 ; '.'
000000000020a153         db  0x00 ; '.'
000000000020a154         db  0x00 ; '.'
000000000020a155         db  0x00 ; '.'
000000000020a156         db  0x00 ; '.'
000000000020a157         db  0x00 ; '.'
000000000020a158         db  0x00 ; '.'
000000000020a159         db  0x00 ; '.'
000000000020a15a         db  0x00 ; '.'
000000000020a15b         db  0x00 ; '.'
000000000020a15c         db  0x00 ; '.'
000000000020a15d         db  0x00 ; '.'
000000000020a15e         db  0x00 ; '.'
000000000020a15f         db  0x00 ; '.'
000000000020a160         db  0x00 ; '.'
000000000020a161         db  0x00 ; '.'
000000000020a162         db  0x00 ; '.'
000000000020a163         db  0x00 ; '.'
000000000020a164         db  0x00 ; '.'
000000000020a165         db  0x00 ; '.'
000000000020a166         db  0x00 ; '.'
000000000020a167         db  0x00 ; '.'
000000000020a168         db  0x00 ; '.'
000000000020a169         db  0x00 ; '.'
000000000020a16a         db  0x00 ; '.'
000000000020a16b         db  0x00 ; '.'
000000000020a16c         db  0x00 ; '.'
000000000020a16d         db  0x00 ; '.'
000000000020a16e         db  0x00 ; '.'
000000000020a16f         db  0x00 ; '.'
000000000020a170         db  0x00 ; '.'
000000000020a171         db  0x00 ; '.'
000000000020a172         db  0x00 ; '.'
000000000020a173         db  0x00 ; '.'
000000000020a174         db  0x00 ; '.'
000000000020a175         db  0x00 ; '.'
000000000020a176         db  0x00 ; '.'
000000000020a177         db  0x00 ; '.'
000000000020a178         db  0x00 ; '.'
000000000020a179         db  0x00 ; '.'
000000000020a17a         db  0x00 ; '.'
000000000020a17b         db  0x00 ; '.'
000000000020a17c         db  0x00 ; '.'
000000000020a17d         db  0x00 ; '.'
000000000020a17e         db  0x00 ; '.'
000000000020a17f         db  0x00 ; '.'
000000000020a180         db  0x00 ; '.'
000000000020a181         db  0x00 ; '.'
000000000020a182         db  0x00 ; '.'
000000000020a183         db  0x00 ; '.'
000000000020a184         db  0x00 ; '.'
000000000020a185         db  0x00 ; '.'
000000000020a186         db  0x00 ; '.'
000000000020a187         db  0x00 ; '.'
000000000020a188         db  0x00 ; '.'
000000000020a189         db  0x00 ; '.'
000000000020a18a         db  0x00 ; '.'
000000000020a18b         db  0x00 ; '.'
000000000020a18c         db  0x00 ; '.'
000000000020a18d         db  0x00 ; '.'
000000000020a18e         db  0x00 ; '.'
000000000020a18f         db  0x00 ; '.'
000000000020a190         db  0x00 ; '.'
000000000020a191         db  0x00 ; '.'
000000000020a192         db  0x00 ; '.'
000000000020a193         db  0x00 ; '.'
000000000020a194         db  0x00 ; '.'
000000000020a195         db  0x00 ; '.'
000000000020a196         db  0x00 ; '.'
000000000020a197         db  0x00 ; '.'
000000000020a198         db  0x00 ; '.'
000000000020a199         db  0x00 ; '.'
000000000020a19a         db  0x00 ; '.'
000000000020a19b         db  0x00 ; '.'
000000000020a19c         db  0x00 ; '.'
000000000020a19d         db  0x00 ; '.'
000000000020a19e         db  0x00 ; '.'
000000000020a19f         db  0x00 ; '.'
000000000020a1a0         db  0x00 ; '.'
000000000020a1a1         db  0x00 ; '.'
000000000020a1a2         db  0x00 ; '.'
000000000020a1a3         db  0x00 ; '.'
000000000020a1a4         db  0x00 ; '.'
000000000020a1a5         db  0x00 ; '.'
000000000020a1a6         db  0x00 ; '.'
000000000020a1a7         db  0x00 ; '.'
000000000020a1a8         db  0x00 ; '.'
000000000020a1a9         db  0x00 ; '.'
000000000020a1aa         db  0x00 ; '.'
000000000020a1ab         db  0x00 ; '.'
000000000020a1ac         db  0x00 ; '.'
000000000020a1ad         db  0x00 ; '.'
000000000020a1ae         db  0x00 ; '.'
000000000020a1af         db  0x00 ; '.'
000000000020a1b0         db  0x00 ; '.'
000000000020a1b1         db  0x00 ; '.'
000000000020a1b2         db  0x00 ; '.'
000000000020a1b3         db  0x00 ; '.'
000000000020a1b4         db  0x00 ; '.'
000000000020a1b5         db  0x00 ; '.'
000000000020a1b6         db  0x00 ; '.'
000000000020a1b7         db  0x00 ; '.'
000000000020a1b8         db  0x00 ; '.'
000000000020a1b9         db  0x00 ; '.'
000000000020a1ba         db  0x00 ; '.'
000000000020a1bb         db  0x00 ; '.'
000000000020a1bc         db  0x00 ; '.'
000000000020a1bd         db  0x00 ; '.'
000000000020a1be         db  0x00 ; '.'
000000000020a1bf         db  0x00 ; '.'
000000000020a1c0         db  0x00 ; '.'
000000000020a1c1         db  0x00 ; '.'
000000000020a1c2         db  0x00 ; '.'
000000000020a1c3         db  0x00 ; '.'
000000000020a1c4         db  0x00 ; '.'
000000000020a1c5         db  0x00 ; '.'
000000000020a1c6         db  0x00 ; '.'
000000000020a1c7         db  0x00 ; '.'
000000000020a1c8         db  0x00 ; '.'
000000000020a1c9         db  0x00 ; '.'
000000000020a1ca         db  0x00 ; '.'
000000000020a1cb         db  0x00 ; '.'
000000000020a1cc         db  0x00 ; '.'
000000000020a1cd         db  0x00 ; '.'
000000000020a1ce         db  0x00 ; '.'
000000000020a1cf         db  0x00 ; '.'
000000000020a1d0         db  0x00 ; '.'
000000000020a1d1         db  0x00 ; '.'
000000000020a1d2         db  0x00 ; '.'
000000000020a1d3         db  0x00 ; '.'
000000000020a1d4         db  0x00 ; '.'
000000000020a1d5         db  0x00 ; '.'
000000000020a1d6         db  0x00 ; '.'
000000000020a1d7         db  0x00 ; '.'
000000000020a1d8         db  0x00 ; '.'
000000000020a1d9         db  0x00 ; '.'
000000000020a1da         db  0x00 ; '.'
000000000020a1db         db  0x00 ; '.'
000000000020a1dc         db  0x00 ; '.'
000000000020a1dd         db  0x00 ; '.'
000000000020a1de         db  0x00 ; '.'
000000000020a1df         db  0x00 ; '.'
                     default_quoting_options:
000000000020a1e0         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
000000000020a1e1         db  0x00 ; '.'
000000000020a1e2         db  0x00 ; '.'
000000000020a1e3         db  0x00 ; '.'
000000000020a1e4         db  0x00 ; '.'
000000000020a1e5         db  0x00 ; '.'
000000000020a1e6         db  0x00 ; '.'
000000000020a1e7         db  0x00 ; '.'
000000000020a1e8         db  0x00 ; '.'
000000000020a1e9         db  0x00 ; '.'
000000000020a1ea         db  0x00 ; '.'
000000000020a1eb         db  0x00 ; '.'
000000000020a1ec         db  0x00 ; '.'
000000000020a1ed         db  0x00 ; '.'
000000000020a1ee         db  0x00 ; '.'
000000000020a1ef         db  0x00 ; '.'
000000000020a1f0         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
000000000020a1f1         db  0x00 ; '.'
000000000020a1f2         db  0x00 ; '.'
000000000020a1f3         db  0x00 ; '.'
000000000020a1f4         db  0x00 ; '.'
000000000020a1f5         db  0x00 ; '.'
000000000020a1f6         db  0x00 ; '.'
000000000020a1f7         db  0x00 ; '.'
000000000020a1f8         db  0x00 ; '.'
000000000020a1f9         db  0x00 ; '.'
000000000020a1fa         db  0x00 ; '.'
000000000020a1fb         db  0x00 ; '.'
000000000020a1fc         db  0x00 ; '.'
000000000020a1fd         db  0x00 ; '.'
000000000020a1fe         db  0x00 ; '.'
000000000020a1ff         db  0x00 ; '.'
000000000020a200         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
000000000020a201         db  0x00 ; '.'
000000000020a202         db  0x00 ; '.'
000000000020a203         db  0x00 ; '.'
000000000020a204         db  0x00 ; '.'
000000000020a205         db  0x00 ; '.'
000000000020a206         db  0x00 ; '.'
000000000020a207         db  0x00 ; '.'
000000000020a208         db  0x00 ; '.'
000000000020a209         db  0x00 ; '.'
000000000020a20a         db  0x00 ; '.'
000000000020a20b         db  0x00 ; '.'
000000000020a20c         db  0x00 ; '.'
000000000020a20d         db  0x00 ; '.'
000000000020a20e         db  0x00 ; '.'
000000000020a20f         db  0x00 ; '.'
                     qword_20a210:
000000000020a210         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
000000000020a211         db  0x00 ; '.'
000000000020a212         db  0x00 ; '.'
000000000020a213         db  0x00 ; '.'
000000000020a214         db  0x00 ; '.'
000000000020a215         db  0x00 ; '.'
000000000020a216         db  0x00 ; '.'
000000000020a217         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x20a220; 0x20a570[ (848 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x20a220; 0x414790[ (2139504 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     __snprintf_chk:
000000000020a220         extern function code                                   ; DATA XREF=__snprintf_chk@GOT
                     free:
000000000020a228         extern function code                                   ; DATA XREF=free@GOT
                     abort:
000000000020a230         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
000000000020a238         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
000000000020a240         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
000000000020a248         extern function code
                     _exit:
000000000020a250         extern function code                                   ; DATA XREF=_exit@GOT
                     __fpending:
000000000020a258         extern function code                                   ; DATA XREF=__fpending@GOT
                     textdomain:
000000000020a260         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
000000000020a268         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
000000000020a270         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     rmdir:
000000000020a278         extern function code                                   ; DATA XREF=rmdir@GOT
                     dcgettext:
000000000020a280         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
000000000020a288         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
000000000020a290         extern function code                                   ; DATA XREF=strlen@GOT
                     openat:
000000000020a298         extern function code                                   ; DATA XREF=openat@GOT
                     __stack_chk_fail:
000000000020a2a0         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
000000000020a2a8         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
000000000020a2b0         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     __overflow:
000000000020a2b8         extern function code                                   ; DATA XREF=__overflow@GOT
                     strrchr:
000000000020a2c0         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
000000000020a2c8         extern function code                                   ; DATA XREF=lseek@GOT
                     memset:
000000000020a2d0         extern function code                                   ; DATA XREF=memset@GOT
                     close:
000000000020a2d8         extern function code                                   ; DATA XREF=close@GOT
                     closedir:
000000000020a2e0         extern function code                                   ; DATA XREF=closedir@GOT
                     __libc_start_main:
000000000020a2e8         extern function code
                     memcmp:
000000000020a2f0         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
000000000020a2f8         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
000000000020a300         extern function code                                   ; DATA XREF=calloc@GOT
                     __gmon_start__:
000000000020a308         extern function code
                     memcpy:
000000000020a310         extern function code                                   ; DATA XREF=memcpy@GOT
                     fileno:
000000000020a318         extern function code                                   ; DATA XREF=fileno@GOT
                     readdir:
000000000020a320         extern function code                                   ; DATA XREF=readdir@GOT
                     malloc:
000000000020a328         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
000000000020a330         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
000000000020a338         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __freading:
000000000020a340         extern function code                                   ; DATA XREF=__freading@GOT
                     fwrite_unlocked:
000000000020a348         extern function code                                   ; DATA XREF=fwrite_unlocked@GOT
                     realloc:
000000000020a350         extern function code                                   ; DATA XREF=realloc@GOT
                     setlocale:
000000000020a358         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
000000000020a360         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     error:
000000000020a368         extern function code                                   ; DATA XREF=error@GOT
                     fseeko:
000000000020a370         extern function code                                   ; DATA XREF=fseeko@GOT
                     fdopendir:
000000000020a378         extern function code                                   ; DATA XREF=fdopendir@GOT
                     __cxa_atexit:
000000000020a380         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     exit:
000000000020a388         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
000000000020a390         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
000000000020a398         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
000000000020a3a0         extern function code
                     mbsinit:
000000000020a3a8         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
000000000020a3b0         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
000000000020a3b8         extern function code
                     __ctype_b_loc:
000000000020a3c0         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     __snprintf_chk@@GLIBC_2.3.4:
000000000020a3c8         extern function code
                     free@@GLIBC_2.2.5:
000000000020a3d0         extern function code
                     abort@@GLIBC_2.2.5:
000000000020a3d8         extern function code
                     __errno_location@@GLIBC_2.2.5:
000000000020a3e0         extern function code
                     strncmp@@GLIBC_2.2.5:
000000000020a3e8         extern function code
                     _ITM_deregisterTMCloneTable_20a3f0:        // _ITM_deregisterTMCloneTable
000000000020a3f0         extern function code
                     _exit@@GLIBC_2.2.5:
000000000020a3f8         extern function code
                     __fpending@@GLIBC_2.2.5:
000000000020a400         extern function code
                     textdomain@@GLIBC_2.2.5:
000000000020a408         extern function code
                     fclose@@GLIBC_2.2.5:
000000000020a410         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
000000000020a418         extern function code
                     rmdir@@GLIBC_2.2.5:
000000000020a420         extern function code
                     dcgettext@@GLIBC_2.2.5:
000000000020a428         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
000000000020a430         extern function code
                     strlen@@GLIBC_2.2.5:
000000000020a438         extern function code
                     openat@@GLIBC_2.4:
000000000020a440         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
000000000020a448         extern function code
                     getopt_long@@GLIBC_2.2.5:
000000000020a450         extern function code
                     mbrtowc@@GLIBC_2.2.5:
000000000020a458         extern function code
                     __overflow@@GLIBC_2.2.5:
000000000020a460         extern function code
                     strrchr@@GLIBC_2.2.5:
000000000020a468         extern function code
                     lseek@@GLIBC_2.2.5:
000000000020a470         extern function code
                     memset@@GLIBC_2.2.5:
000000000020a478         extern function code
                     close@@GLIBC_2.2.5:
000000000020a480         extern function code
                     closedir@@GLIBC_2.2.5:
000000000020a488         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
000000000020a490         extern function code
                     memcmp@@GLIBC_2.2.5:
000000000020a498         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
000000000020a4a0         extern function code
                     calloc@@GLIBC_2.2.5:
000000000020a4a8         extern function code
                     __gmon_start___20a4b0:        // __gmon_start__
000000000020a4b0         extern function code
                     memcpy@@GLIBC_2.14:
000000000020a4b8         extern function code
                     fileno@@GLIBC_2.2.5:
000000000020a4c0         extern function code
                     readdir@@GLIBC_2.2.5:
000000000020a4c8         extern function code
                     malloc@@GLIBC_2.2.5:
000000000020a4d0         extern function code
                     fflush@@GLIBC_2.2.5:
000000000020a4d8         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
000000000020a4e0         extern function code
                     __freading@@GLIBC_2.2.5:
000000000020a4e8         extern function code
                     fwrite_unlocked@@GLIBC_2.2.5:
000000000020a4f0         extern function code
                     realloc@@GLIBC_2.2.5:
000000000020a4f8         extern function code
                     setlocale@@GLIBC_2.2.5:
000000000020a500         extern function code
                     __printf_chk@@GLIBC_2.3.4:
000000000020a508         extern function code
                     error@@GLIBC_2.2.5:
000000000020a510         extern function code
                     fseeko@@GLIBC_2.2.5:
000000000020a518         extern function code
                     fdopendir@@GLIBC_2.4:
000000000020a520         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
000000000020a528         extern function code
                     exit@@GLIBC_2.2.5:
000000000020a530         extern function code
                     fwrite@@GLIBC_2.2.5:
000000000020a538         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
000000000020a540         extern function code
                     _ITM_registerTMCloneTable_20a548:        // _ITM_registerTMCloneTable
000000000020a548         extern function code
                     mbsinit@@GLIBC_2.2.5:
000000000020a550         extern function code
                     iswprint@@GLIBC_2.2.5:
000000000020a558         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
000000000020a560         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
000000000020a568         extern function code
