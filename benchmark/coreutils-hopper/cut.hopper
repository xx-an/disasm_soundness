
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/cut
        UUID: E5FC2C3F-3883-A168-8D2A-443DAE00FE53
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0x88e0[ (35040 bytes)
        ; File offset : [0; 35040[ (35040 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0x60 ; '`'
0000000000000019         db  0x1e ; '.'
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0x60 ; '`'
0000000000000029         db  0xdc ; '.'
000000000000002a         db  0x02 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0xe0 ; '.'
00000000000000d1         db  0x88 ; '.'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0xe0 ; '.'
00000000000000d9         db  0x88 ; '.'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0x50 ; 'P'
00000000000000f1         db  0x8a ; '.'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0x50 ; 'P'
00000000000000f9         db  0x8a ; '.'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0x50 ; 'P'                                         ; DATA XREF=quotearg_free+87, rpl_fflush+18, freadahead+20, slotvec0
0000000000000101         db  0x8a ; '.'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0x50 ; 'P'
0000000000000109         db  0x06 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0x58 ; 'X'
0000000000000111         db  0x08 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0x18 ; '.'
0000000000000129         db  0x8c ; '.'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0x18 ; '.'
0000000000000131         db  0x8c ; '.'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0x18 ; '.'
0000000000000139         db  0x8c ; '.'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'                                         ; DATA XREF=cut_file+2013
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0xd0 ; '.'
0000000000000199         db  0x78 ; 'x'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0xd0 ; '.'
00000000000001a1         db  0x78 ; 'x'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0xd0 ; '.'
00000000000001a9         db  0x78 ; 'x'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0xa4 ; '.'
00000000000001b1         db  0x02 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0xa4 ; '.'
00000000000001b9         db  0x02 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0x50 ; 'P'
0000000000000209         db  0x8a ; '.'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0x50 ; 'P'
0000000000000211         db  0x8a ; '.'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0x50 ; 'P'
0000000000000219         db  0x8a ; '.'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0xb0 ; '.'
0000000000000221         db  0x05 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0xb0 ; '.'
0000000000000229         db  0x05 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0xe5 ; '.'
0000000000000285         db  0xfc ; '.'
0000000000000286         db  0x2c ; ','
0000000000000287         db  0x3f ; '?'
0000000000000288         db  0x38 ; '8'
0000000000000289         db  0x83 ; '.'
000000000000028a         db  0xa1 ; '.'
000000000000028b         db  0x68 ; 'h'
000000000000028c         db  0x8d ; '.'
000000000000028d         db  0x2a ; '*'
000000000000028e         db  0x44 ; 'D'
000000000000028f         db  0x3d ; '='
0000000000000290         db  0xae ; '.'
0000000000000291         db  0x00 ; '.'
0000000000000292         db  0xfe ; '.'
0000000000000293         db  0x53 ; 'S'
0000000000000294         db  0xc0 ; '.'
0000000000000295         db  0x87 ; '.'
0000000000000296         db  0x13 ; '.'
0000000000000297         db  0x37 ; '7'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2e0[ (72 bytes)
        ; File offset : [664; 736[ (72 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x3d ; '='
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'
00000000000002a9         db  0x4d ; 'M'
00000000000002aa         db  0x61 ; 'a'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0xa0 ; '.'
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x1c ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x3d ; '='
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x3e ; '>'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x44 ; 'D'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x66 ; 'f'
00000000000002c5         db  0x55 ; 'U'
00000000000002c6         db  0x61 ; 'a'
00000000000002c7         db  0x10 ; '.'
00000000000002c8         db  0x96 ; '.'
00000000000002c9         db  0xa0 ; '.'
00000000000002ca         db  0x89 ; '.'
00000000000002cb         db  0x97 ; '.'
00000000000002cc         db  0xce ; '.'
00000000000002cd         db  0x2c ; ','
00000000000002ce         db  0x63 ; 'c'
00000000000002cf         db  0x72 ; 'r'
00000000000002d0         db  0xe4 ; '.'
00000000000002d1         db  0x62 ; 'b'
00000000000002d2         db  0x41 ; 'A'
00000000000002d3         db  0xf5 ; '.'
00000000000002d4         db  0x39 ; '9'
00000000000002d5         db  0xf2 ; '.'
00000000000002d6         db  0x8b ; '.'
00000000000002d7         db  0x1c ; '.'
00000000000002d8         db  0x32 ; '2'
00000000000002d9         db  0xc4 ; '.'
00000000000002da         db  0xf7 ; '.'
00000000000002db         db  0x12 ; '.'
00000000000002dc         db  0xb3 ; '.'
00000000000002dd         db  0xa2 ; '.'
00000000000002de         db  0xf7 ; '.'
00000000000002df         db  0x12 ; '.'


        ; Section .dynsym
        ; Range: [0x2e0; 0x970[ (1680 bytes)
        ; File offset : [736; 2416[ (1680 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0x71 ; 'q'
00000000000002f9         db  0x01 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x12 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x71 ; 'q'
0000000000000311         db  0x02 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x12 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0x8c ; '.'
0000000000000329         db  0x00 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x12 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0x19 ; '.'
0000000000000341         db  0x01 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x12 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0x49 ; 'I'
0000000000000359         db  0x00 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x12 ; '.'
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0xdf ; '.'
0000000000000371         db  0x02 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x20 ; ' '
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0x98 ; '.'
0000000000000389         db  0x00 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x12 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0xc6 ; '.'
00000000000003a1         db  0x01 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x12 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0x49 ; 'I'
00000000000003b9         db  0x02 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x12 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0xfb ; '.'
00000000000003d1         db  0x01 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x12 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0x1f ; '.'
00000000000003e9         db  0x00 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x12 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0x1c ; '.'
0000000000000401         db  0x02 ; '.'
0000000000000402         db  0x00 ; '.'
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x12 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'
0000000000000407         db  0x00 ; '.'
0000000000000408         db  0x00 ; '.'
0000000000000409         db  0x00 ; '.'
000000000000040a         db  0x00 ; '.'
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0x5b ; '['
0000000000000419         db  0x01 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x12 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0x18 ; '.'
0000000000000431         db  0x02 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x12 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0x60 ; '`'
0000000000000449         db  0x00 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x12 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0xd2 ; '.'
0000000000000461         db  0x00 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x12 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x04 ; '.'
0000000000000479         db  0x01 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x12 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0x6a ; 'j'
0000000000000491         db  0x00 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x12 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0xac ; '.'
00000000000004a9         db  0x01 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x12 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0x3b ; ';'
00000000000004c1         db  0x00 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x12 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x57 ; 'W'
00000000000004d9         db  0x02 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x12 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0x58 ; 'X'
00000000000004f1         db  0x00 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x12 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0x4e ; 'N'
0000000000000509         db  0x01 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x12 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0xc4 ; '.'
0000000000000521         db  0x00 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x12 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0x12 ; '.'
0000000000000539         db  0x01 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x12 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0xf7 ; '.'
0000000000000551         db  0x00 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x12 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0xa5 ; '.'
0000000000000569         db  0x00 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x12 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0xe9 ; '.'
0000000000000581         db  0x00 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x12 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0x9e ; '.'
0000000000000599         db  0x00 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x12 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0x31 ; '1'
00000000000005b1         db  0x01 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x12 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0x37 ; '7'
00000000000005c9         db  0x02 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x12 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0x2a ; '*'
00000000000005e1         db  0x01 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x12 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x62 ; 'b'
00000000000005f9         db  0x02 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x12 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0xfd ; '.'
0000000000000611         db  0x00 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x12 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0xfb ; '.'
0000000000000629         db  0x02 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x20 ; ' '
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x54 ; 'T'
0000000000000641         db  0x01 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x12 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0xb8 ; '.'
0000000000000659         db  0x01 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x12 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x62 ; 'b'
0000000000000671         db  0x01 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x12 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0x0b ; '.'
0000000000000689         db  0x00 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x12 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x79 ; 'y'
00000000000006a1         db  0x01 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x12 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x0b ; '.'
00000000000006b9         db  0x01 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x12 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x9a ; '.'
00000000000006d1         db  0x01 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x12 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0x27 ; '''
00000000000006e9         db  0x02 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x12 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x84 ; '.'
0000000000000701         db  0x00 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x12 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x31 ; '1'
0000000000000719         db  0x00 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x12 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x12 ; '.'
0000000000000731         db  0x00 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x12 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0xd1 ; '.'
0000000000000749         db  0x01 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x12 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0x10 ; '.'
0000000000000761         db  0x02 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x12 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0x4a ; 'J'
0000000000000779         db  0x02 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x12 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x50 ; 'P'
0000000000000791         db  0x02 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x12 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0x43 ; 'C'
00000000000007a9         db  0x00 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x12 ; '.'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x00 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0x91 ; '.'
00000000000007c1         db  0x02 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x12 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x00 ; '.'
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x99 ; '.'
00000000000007d9         db  0x00 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x12 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x00 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0xbf ; '.'
00000000000007f1         db  0x01 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x12 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x00 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x00 ; '.'
00000000000007f9         db  0x00 ; '.'
00000000000007fa         db  0x00 ; '.'
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x00 ; '.'
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x39 ; '9'
0000000000000809         db  0x01 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x12 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x00 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0x00 ; '.'
0000000000000811         db  0x00 ; '.'
0000000000000812         db  0x00 ; '.'
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x00 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0x0a ; '.'
0000000000000821         db  0x03 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x20 ; ' '
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x00 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0x00 ; '.'
0000000000000829         db  0x00 ; '.'
000000000000082a         db  0x00 ; '.'
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x00 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x69 ; 'i'
0000000000000839         db  0x01 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x12 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x00 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0x00 ; '.'
0000000000000841         db  0x00 ; '.'
0000000000000842         db  0x00 ; '.'
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x00 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0x7b ; '{'
0000000000000851         db  0x00 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x12 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x00 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0x00 ; '.'
0000000000000859         db  0x00 ; '.'
000000000000085a         db  0x00 ; '.'
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x00 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0x01 ; '.'
0000000000000869         db  0x02 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x22 ; '"'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x00 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0x00 ; '.'
0000000000000871         db  0x00 ; '.'
0000000000000872         db  0x00 ; '.'
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x00 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0x85 ; '.'
0000000000000881         db  0x01 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x12 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x00 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0x00 ; '.'
0000000000000889         db  0x00 ; '.'
000000000000088a         db  0x00 ; '.'
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x00 ; '.'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x00 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0x47 ; 'G'
0000000000000899         db  0x01 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x11 ; '.'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x19 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0xa8 ; '.'
00000000000008a1         db  0x90 ; '.'
00000000000008a2         db  0x20 ; ' '
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x00 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0x08 ; '.'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x00 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x00 ; '.'
00000000000008b0         db  0x76 ; 'v'
00000000000008b1         db  0x02 ; '.'
00000000000008b2         db  0x00 ; '.'
00000000000008b3         db  0x00 ; '.'
00000000000008b4         db  0x11 ; '.'
00000000000008b5         db  0x00 ; '.'
00000000000008b6         db  0x19 ; '.'
00000000000008b7         db  0x00 ; '.'
00000000000008b8         db  0xa0 ; '.'
00000000000008b9         db  0x90 ; '.'
00000000000008ba         db  0x20 ; ' '
00000000000008bb         db  0x00 ; '.'
00000000000008bc         db  0x00 ; '.'
00000000000008bd         db  0x00 ; '.'
00000000000008be         db  0x00 ; '.'
00000000000008bf         db  0x00 ; '.'
00000000000008c0         db  0x08 ; '.'
00000000000008c1         db  0x00 ; '.'
00000000000008c2         db  0x00 ; '.'
00000000000008c3         db  0x00 ; '.'
00000000000008c4         db  0x00 ; '.'
00000000000008c5         db  0x00 ; '.'
00000000000008c6         db  0x00 ; '.'
00000000000008c7         db  0x00 ; '.'
00000000000008c8         db  0x92 ; '.'
00000000000008c9         db  0x00 ; '.'
00000000000008ca         db  0x00 ; '.'
00000000000008cb         db  0x00 ; '.'
00000000000008cc         db  0x11 ; '.'
00000000000008cd         db  0x00 ; '.'
00000000000008ce         db  0x19 ; '.'
00000000000008cf         db  0x00 ; '.'
00000000000008d0         db  0xb0 ; '.'
00000000000008d1         db  0x90 ; '.'
00000000000008d2         db  0x20 ; ' '
00000000000008d3         db  0x00 ; '.'
00000000000008d4         db  0x00 ; '.'
00000000000008d5         db  0x00 ; '.'
00000000000008d6         db  0x00 ; '.'
00000000000008d7         db  0x00 ; '.'
00000000000008d8         db  0x08 ; '.'
00000000000008d9         db  0x00 ; '.'
00000000000008da         db  0x00 ; '.'
00000000000008db         db  0x00 ; '.'
00000000000008dc         db  0x00 ; '.'
00000000000008dd         db  0x00 ; '.'
00000000000008de         db  0x00 ; '.'
00000000000008df         db  0x00 ; '.'
00000000000008e0         db  0xac ; '.'
00000000000008e1         db  0x00 ; '.'
00000000000008e2         db  0x00 ; '.'
00000000000008e3         db  0x00 ; '.'
00000000000008e4         db  0x21 ; '!'
00000000000008e5         db  0x00 ; '.'
00000000000008e6         db  0x19 ; '.'
00000000000008e7         db  0x00 ; '.'
00000000000008e8         db  0xc8 ; '.'
00000000000008e9         db  0x90 ; '.'
00000000000008ea         db  0x20 ; ' '
00000000000008eb         db  0x00 ; '.'
00000000000008ec         db  0x00 ; '.'
00000000000008ed         db  0x00 ; '.'
00000000000008ee         db  0x00 ; '.'
00000000000008ef         db  0x00 ; '.'
00000000000008f0         db  0x08 ; '.'
00000000000008f1         db  0x00 ; '.'
00000000000008f2         db  0x00 ; '.'
00000000000008f3         db  0x00 ; '.'
00000000000008f4         db  0x00 ; '.'
00000000000008f5         db  0x00 ; '.'
00000000000008f6         db  0x00 ; '.'
00000000000008f7         db  0x00 ; '.'
00000000000008f8         db  0x81 ; '.'
00000000000008f9         db  0x02 ; '.'
00000000000008fa         db  0x00 ; '.'
00000000000008fb         db  0x00 ; '.'
00000000000008fc         db  0x11 ; '.'
00000000000008fd         db  0x00 ; '.'
00000000000008fe         db  0x19 ; '.'
00000000000008ff         db  0x00 ; '.'
0000000000000900         db  0xc8 ; '.'
0000000000000901         db  0x90 ; '.'
0000000000000902         db  0x20 ; ' '
0000000000000903         db  0x00 ; '.'
0000000000000904         db  0x00 ; '.'
0000000000000905         db  0x00 ; '.'
0000000000000906         db  0x00 ; '.'
0000000000000907         db  0x00 ; '.'
0000000000000908         db  0x08 ; '.'
0000000000000909         db  0x00 ; '.'
000000000000090a         db  0x00 ; '.'
000000000000090b         db  0x00 ; '.'
000000000000090c         db  0x00 ; '.'
000000000000090d         db  0x00 ; '.'
000000000000090e         db  0x00 ; '.'
000000000000090f         db  0x00 ; '.'
0000000000000910         db  0xdd ; '.'
0000000000000911         db  0x01 ; '.'
0000000000000912         db  0x00 ; '.'
0000000000000913         db  0x00 ; '.'
0000000000000914         db  0x21 ; '!'
0000000000000915         db  0x00 ; '.'
0000000000000916         db  0x19 ; '.'
0000000000000917         db  0x00 ; '.'
0000000000000918         db  0xa0 ; '.'
0000000000000919         db  0x90 ; '.'
000000000000091a         db  0x20 ; ' '
000000000000091b         db  0x00 ; '.'
000000000000091c         db  0x00 ; '.'
000000000000091d         db  0x00 ; '.'
000000000000091e         db  0x00 ; '.'
000000000000091f         db  0x00 ; '.'
0000000000000920         db  0x08 ; '.'
0000000000000921         db  0x00 ; '.'
0000000000000922         db  0x00 ; '.'
0000000000000923         db  0x00 ; '.'
0000000000000924         db  0x00 ; '.'
0000000000000925         db  0x00 ; '.'
0000000000000926         db  0x00 ; '.'
0000000000000927         db  0x00 ; '.'
0000000000000928         db  0xa5 ; '.'
0000000000000929         db  0x01 ; '.'
000000000000092a         db  0x00 ; '.'
000000000000092b         db  0x00 ; '.'
000000000000092c         db  0x11 ; '.'
000000000000092d         db  0x00 ; '.'
000000000000092e         db  0x19 ; '.'
000000000000092f         db  0x00 ; '.'
0000000000000930         db  0xe0 ; '.'
0000000000000931         db  0x90 ; '.'
0000000000000932         db  0x20 ; ' '
0000000000000933         db  0x00 ; '.'
0000000000000934         db  0x00 ; '.'
0000000000000935         db  0x00 ; '.'
0000000000000936         db  0x00 ; '.'
0000000000000937         db  0x00 ; '.'
0000000000000938         db  0x08 ; '.'
0000000000000939         db  0x00 ; '.'
000000000000093a         db  0x00 ; '.'
000000000000093b         db  0x00 ; '.'
000000000000093c         db  0x00 ; '.'
000000000000093d         db  0x00 ; '.'
000000000000093e         db  0x00 ; '.'
000000000000093f         db  0x00 ; '.'
0000000000000940         db  0x51 ; 'Q'
0000000000000941         db  0x00 ; '.'
0000000000000942         db  0x00 ; '.'
0000000000000943         db  0x00 ; '.'
0000000000000944         db  0x11 ; '.'
0000000000000945         db  0x00 ; '.'
0000000000000946         db  0x19 ; '.'
0000000000000947         db  0x00 ; '.'
0000000000000948         db  0xb8 ; '.'
0000000000000949         db  0x90 ; '.'
000000000000094a         db  0x20 ; ' '
000000000000094b         db  0x00 ; '.'
000000000000094c         db  0x00 ; '.'
000000000000094d         db  0x00 ; '.'
000000000000094e         db  0x00 ; '.'
000000000000094f         db  0x00 ; '.'
0000000000000950         db  0x04 ; '.'
0000000000000951         db  0x00 ; '.'
0000000000000952         db  0x00 ; '.'
0000000000000953         db  0x00 ; '.'
0000000000000954         db  0x00 ; '.'
0000000000000955         db  0x00 ; '.'
0000000000000956         db  0x00 ; '.'
0000000000000957         db  0x00 ; '.'
0000000000000958         db  0x93 ; '.'
0000000000000959         db  0x01 ; '.'
000000000000095a         db  0x00 ; '.'
000000000000095b         db  0x00 ; '.'
000000000000095c         db  0x11 ; '.'
000000000000095d         db  0x00 ; '.'
000000000000095e         db  0x19 ; '.'
000000000000095f         db  0x00 ; '.'
0000000000000960         db  0xc0 ; '.'
0000000000000961         db  0x90 ; '.'
0000000000000962         db  0x20 ; ' '
0000000000000963         db  0x00 ; '.'
0000000000000964         db  0x00 ; '.'
0000000000000965         db  0x00 ; '.'
0000000000000966         db  0x00 ; '.'
0000000000000967         db  0x00 ; '.'
0000000000000968         db  0x08 ; '.'
0000000000000969         db  0x00 ; '.'
000000000000096a         db  0x00 ; '.'
000000000000096b         db  0x00 ; '.'
000000000000096c         db  0x00 ; '.'
000000000000096d         db  0x00 ; '.'
000000000000096e         db  0x00 ; '.'
000000000000096f         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0x970; 0xc94[ (804 bytes)
        ; File offset : [2416; 3220[ (804 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

0000000000000970         db  0x00 ; '.'
0000000000000971         db  0x6c ; 'l'
0000000000000972         db  0x69 ; 'i'
0000000000000973         db  0x62 ; 'b'
0000000000000974         db  0x63 ; 'c'
0000000000000975         db  0x2e ; '.'
0000000000000976         db  0x73 ; 's'
0000000000000977         db  0x6f ; 'o'
0000000000000978         db  0x2e ; '.'
0000000000000979         db  0x36 ; '6'
000000000000097a         db  0x00 ; '.'
000000000000097b         db  0x66 ; 'f'
000000000000097c         db  0x66 ; 'f'
000000000000097d         db  0x6c ; 'l'
000000000000097e         db  0x75 ; 'u'
000000000000097f         db  0x73 ; 's'
0000000000000980         db  0x68 ; 'h'
0000000000000981         db  0x00 ; '.'
0000000000000982         db  0x5f ; '_'
0000000000000983         db  0x5f ; '_'
0000000000000984         db  0x70 ; 'p'
0000000000000985         db  0x72 ; 'r'
0000000000000986         db  0x69 ; 'i'
0000000000000987         db  0x6e ; 'n'
0000000000000988         db  0x74 ; 't'
0000000000000989         db  0x66 ; 'f'
000000000000098a         db  0x5f ; '_'
000000000000098b         db  0x63 ; 'c'
000000000000098c         db  0x68 ; 'h'
000000000000098d         db  0x6b ; 'k'
000000000000098e         db  0x00 ; '.'
000000000000098f         db  0x63 ; 'c'
0000000000000990         db  0x6c ; 'l'
0000000000000991         db  0x65 ; 'e'
0000000000000992         db  0x61 ; 'a'
0000000000000993         db  0x72 ; 'r'
0000000000000994         db  0x65 ; 'e'
0000000000000995         db  0x72 ; 'r'
0000000000000996         db  0x72 ; 'r'
0000000000000997         db  0x5f ; '_'
0000000000000998         db  0x75 ; 'u'
0000000000000999         db  0x6e ; 'n'
000000000000099a         db  0x6c ; 'l'
000000000000099b         db  0x6f ; 'o'
000000000000099c         db  0x63 ; 'c'
000000000000099d         db  0x6b ; 'k'
000000000000099e         db  0x65 ; 'e'
000000000000099f         db  0x64 ; 'd'
00000000000009a0         db  0x00 ; '.'
00000000000009a1         db  0x73 ; 's'
00000000000009a2         db  0x65 ; 'e'
00000000000009a3         db  0x74 ; 't'
00000000000009a4         db  0x6c ; 'l'
00000000000009a5         db  0x6f ; 'o'
00000000000009a6         db  0x63 ; 'c'
00000000000009a7         db  0x61 ; 'a'
00000000000009a8         db  0x6c ; 'l'
00000000000009a9         db  0x65 ; 'e'
00000000000009aa         db  0x00 ; '.'
00000000000009ab         db  0x6d ; 'm'
00000000000009ac         db  0x62 ; 'b'
00000000000009ad         db  0x72 ; 'r'
00000000000009ae         db  0x74 ; 't'
00000000000009af         db  0x6f ; 'o'
00000000000009b0         db  0x77 ; 'w'
00000000000009b1         db  0x63 ; 'c'
00000000000009b2         db  0x00 ; '.'
00000000000009b3         db  0x66 ; 'f'
00000000000009b4         db  0x6f ; 'o'
00000000000009b5         db  0x70 ; 'p'
00000000000009b6         db  0x65 ; 'e'
00000000000009b7         db  0x6e ; 'n'
00000000000009b8         db  0x00 ; '.'
00000000000009b9         db  0x73 ; 's'
00000000000009ba         db  0x74 ; 't'
00000000000009bb         db  0x72 ; 'r'
00000000000009bc         db  0x6e ; 'n'
00000000000009bd         db  0x63 ; 'c'
00000000000009be         db  0x6d ; 'm'
00000000000009bf         db  0x70 ; 'p'
00000000000009c0         db  0x00 ; '.'
00000000000009c1         db  0x6f ; 'o'
00000000000009c2         db  0x70 ; 'p'
00000000000009c3         db  0x74 ; 't'
00000000000009c4         db  0x69 ; 'i'
00000000000009c5         db  0x6e ; 'n'
00000000000009c6         db  0x64 ; 'd'
00000000000009c7         db  0x00 ; '.'
00000000000009c8         db  0x73 ; 's'
00000000000009c9         db  0x74 ; 't'
00000000000009ca         db  0x72 ; 'r'
00000000000009cb         db  0x72 ; 'r'
00000000000009cc         db  0x63 ; 'c'
00000000000009cd         db  0x68 ; 'h'
00000000000009ce         db  0x72 ; 'r'
00000000000009cf         db  0x00 ; '.'
00000000000009d0         db  0x64 ; 'd'
00000000000009d1         db  0x63 ; 'c'
00000000000009d2         db  0x67 ; 'g'
00000000000009d3         db  0x65 ; 'e'
00000000000009d4         db  0x74 ; 't'
00000000000009d5         db  0x74 ; 't'
00000000000009d6         db  0x65 ; 'e'
00000000000009d7         db  0x78 ; 'x'
00000000000009d8         db  0x74 ; 't'
00000000000009d9         db  0x00 ; '.'
00000000000009da         db  0x5f ; '_'
00000000000009db         db  0x5f ; '_'
00000000000009dc         db  0x73 ; 's'
00000000000009dd         db  0x74 ; 't'
00000000000009de         db  0x61 ; 'a'
00000000000009df         db  0x63 ; 'c'
00000000000009e0         db  0x6b ; 'k'
00000000000009e1         db  0x5f ; '_'
00000000000009e2         db  0x63 ; 'c'
00000000000009e3         db  0x68 ; 'h'
00000000000009e4         db  0x6b ; 'k'
00000000000009e5         db  0x5f ; '_'
00000000000009e6         db  0x66 ; 'f'
00000000000009e7         db  0x61 ; 'a'
00000000000009e8         db  0x69 ; 'i'
00000000000009e9         db  0x6c ; 'l'
00000000000009ea         db  0x00 ; '.'
00000000000009eb         db  0x69 ; 'i'
00000000000009ec         db  0x73 ; 's'
00000000000009ed         db  0x77 ; 'w'
00000000000009ee         db  0x70 ; 'p'
00000000000009ef         db  0x72 ; 'r'
00000000000009f0         db  0x69 ; 'i'
00000000000009f1         db  0x6e ; 'n'
00000000000009f2         db  0x74 ; 't'
00000000000009f3         db  0x00 ; '.'
00000000000009f4         db  0x72 ; 'r'
00000000000009f5         db  0x65 ; 'e'
00000000000009f6         db  0x61 ; 'a'
00000000000009f7         db  0x6c ; 'l'
00000000000009f8         db  0x6c ; 'l'
00000000000009f9         db  0x6f ; 'o'
00000000000009fa         db  0x63 ; 'c'
00000000000009fb         db  0x00 ; '.'
00000000000009fc         db  0x61 ; 'a'
00000000000009fd         db  0x62 ; 'b'
00000000000009fe         db  0x6f ; 'o'
00000000000009ff         db  0x72 ; 'r'
0000000000000a00         db  0x74 ; 't'
0000000000000a01         db  0x00 ; '.'
0000000000000a02         db  0x73 ; 's'
0000000000000a03         db  0x74 ; 't'
0000000000000a04         db  0x64 ; 'd'
0000000000000a05         db  0x69 ; 'i'
0000000000000a06         db  0x6e ; 'n'
0000000000000a07         db  0x00 ; '.'
0000000000000a08         db  0x5f ; '_'
0000000000000a09         db  0x65 ; 'e'
0000000000000a0a         db  0x78 ; 'x'
0000000000000a0b         db  0x69 ; 'i'
0000000000000a0c         db  0x74 ; 't'
0000000000000a0d         db  0x00 ; '.'
0000000000000a0e         db  0x6d ; 'm'
0000000000000a0f         db  0x65 ; 'e'
0000000000000a10         db  0x6d ; 'm'
0000000000000a11         db  0x63 ; 'c'
0000000000000a12         db  0x68 ; 'h'
0000000000000a13         db  0x72 ; 'r'
0000000000000a14         db  0x00 ; '.'
0000000000000a15         db  0x73 ; 's'
0000000000000a16         db  0x74 ; 't'
0000000000000a17         db  0x72 ; 'r'
0000000000000a18         db  0x73 ; 's'
0000000000000a19         db  0x70 ; 'p'
0000000000000a1a         db  0x6e ; 'n'
0000000000000a1b         db  0x00 ; '.'
0000000000000a1c         db  0x70 ; 'p'
0000000000000a1d         db  0x72 ; 'r'
0000000000000a1e         db  0x6f ; 'o'
0000000000000a1f         db  0x67 ; 'g'
0000000000000a20         db  0x72 ; 'r'
0000000000000a21         db  0x61 ; 'a'
0000000000000a22         db  0x6d ; 'm'
0000000000000a23         db  0x5f ; '_'
0000000000000a24         db  0x69 ; 'i'
0000000000000a25         db  0x6e ; 'n'
0000000000000a26         db  0x76 ; 'v'
0000000000000a27         db  0x6f ; 'o'
0000000000000a28         db  0x63 ; 'c'
0000000000000a29         db  0x61 ; 'a'
0000000000000a2a         db  0x74 ; 't'
0000000000000a2b         db  0x69 ; 'i'
0000000000000a2c         db  0x6f ; 'o'
0000000000000a2d         db  0x6e ; 'n'
0000000000000a2e         db  0x5f ; '_'
0000000000000a2f         db  0x6e ; 'n'
0000000000000a30         db  0x61 ; 'a'
0000000000000a31         db  0x6d ; 'm'
0000000000000a32         db  0x65 ; 'e'
0000000000000a33         db  0x00 ; '.'
0000000000000a34         db  0x5f ; '_'
0000000000000a35         db  0x5f ; '_'
0000000000000a36         db  0x61 ; 'a'
0000000000000a37         db  0x73 ; 's'
0000000000000a38         db  0x73 ; 's'
0000000000000a39         db  0x65 ; 'e'
0000000000000a3a         db  0x72 ; 'r'
0000000000000a3b         db  0x74 ; 't'
0000000000000a3c         db  0x5f ; '_'
0000000000000a3d         db  0x66 ; 'f'
0000000000000a3e         db  0x61 ; 'a'
0000000000000a3f         db  0x69 ; 'i'
0000000000000a40         db  0x6c ; 'l'
0000000000000a41         db  0x00 ; '.'
0000000000000a42         db  0x5f ; '_'
0000000000000a43         db  0x5f ; '_'
0000000000000a44         db  0x63 ; 'c'
0000000000000a45         db  0x74 ; 't'
0000000000000a46         db  0x79 ; 'y'
0000000000000a47         db  0x70 ; 'p'
0000000000000a48         db  0x65 ; 'e'
0000000000000a49         db  0x5f ; '_'
0000000000000a4a         db  0x67 ; 'g'
0000000000000a4b         db  0x65 ; 'e'
0000000000000a4c         db  0x74 ; 't'
0000000000000a4d         db  0x5f ; '_'
0000000000000a4e         db  0x6d ; 'm'
0000000000000a4f         db  0x62 ; 'b'
0000000000000a50         db  0x5f ; '_'
0000000000000a51         db  0x63 ; 'c'
0000000000000a52         db  0x75 ; 'u'
0000000000000a53         db  0x72 ; 'r'
0000000000000a54         db  0x5f ; '_'
0000000000000a55         db  0x6d ; 'm'
0000000000000a56         db  0x61 ; 'a'
0000000000000a57         db  0x78 ; 'x'
0000000000000a58         db  0x00 ; '.'
0000000000000a59         db  0x70 ; 'p'
0000000000000a5a         db  0x6f ; 'o'
0000000000000a5b         db  0x73 ; 's'
0000000000000a5c         db  0x69 ; 'i'
0000000000000a5d         db  0x78 ; 'x'
0000000000000a5e         db  0x5f ; '_'
0000000000000a5f         db  0x66 ; 'f'
0000000000000a60         db  0x61 ; 'a'
0000000000000a61         db  0x64 ; 'd'
0000000000000a62         db  0x76 ; 'v'
0000000000000a63         db  0x69 ; 'i'
0000000000000a64         db  0x73 ; 's'
0000000000000a65         db  0x65 ; 'e'
0000000000000a66         db  0x00 ; '.'
0000000000000a67         db  0x66 ; 'f'
0000000000000a68         db  0x67 ; 'g'
0000000000000a69         db  0x65 ; 'e'
0000000000000a6a         db  0x74 ; 't'
0000000000000a6b         db  0x63 ; 'c'
0000000000000a6c         db  0x00 ; '.'
0000000000000a6d         db  0x63 ; 'c'
0000000000000a6e         db  0x61 ; 'a'
0000000000000a6f         db  0x6c ; 'l'
0000000000000a70         db  0x6c ; 'l'
0000000000000a71         db  0x6f ; 'o'
0000000000000a72         db  0x63 ; 'c'
0000000000000a73         db  0x00 ; '.'
0000000000000a74         db  0x73 ; 's'
0000000000000a75         db  0x74 ; 't'
0000000000000a76         db  0x72 ; 'r'
0000000000000a77         db  0x6c ; 'l'
0000000000000a78         db  0x65 ; 'e'
0000000000000a79         db  0x6e ; 'n'
0000000000000a7a         db  0x00 ; '.'
0000000000000a7b         db  0x75 ; 'u'
0000000000000a7c         db  0x6e ; 'n'
0000000000000a7d         db  0x67 ; 'g'
0000000000000a7e         db  0x65 ; 'e'
0000000000000a7f         db  0x74 ; 't'
0000000000000a80         db  0x63 ; 'c'
0000000000000a81         db  0x00 ; '.'
0000000000000a82         db  0x6d ; 'm'
0000000000000a83         db  0x65 ; 'e'
0000000000000a84         db  0x6d ; 'm'
0000000000000a85         db  0x73 ; 's'
0000000000000a86         db  0x65 ; 'e'
0000000000000a87         db  0x74 ; 't'
0000000000000a88         db  0x00 ; '.'
0000000000000a89         db  0x5f ; '_'
0000000000000a8a         db  0x5f ; '_'
0000000000000a8b         db  0x65 ; 'e'
0000000000000a8c         db  0x72 ; 'r'
0000000000000a8d         db  0x72 ; 'r'
0000000000000a8e         db  0x6e ; 'n'
0000000000000a8f         db  0x6f ; 'o'
0000000000000a90         db  0x5f ; '_'
0000000000000a91         db  0x6c ; 'l'
0000000000000a92         db  0x6f ; 'o'
0000000000000a93         db  0x63 ; 'c'
0000000000000a94         db  0x61 ; 'a'
0000000000000a95         db  0x74 ; 't'
0000000000000a96         db  0x69 ; 'i'
0000000000000a97         db  0x6f ; 'o'
0000000000000a98         db  0x6e ; 'n'
0000000000000a99         db  0x00 ; '.'
0000000000000a9a         db  0x6d ; 'm'
0000000000000a9b         db  0x65 ; 'e'
0000000000000a9c         db  0x6d ; 'm'
0000000000000a9d         db  0x63 ; 'c'
0000000000000a9e         db  0x6d ; 'm'
0000000000000a9f         db  0x70 ; 'p'
0000000000000aa0         db  0x00 ; '.'
0000000000000aa1         db  0x73 ; 's'
0000000000000aa2         db  0x74 ; 't'
0000000000000aa3         db  0x72 ; 'r'
0000000000000aa4         db  0x6e ; 'n'
0000000000000aa5         db  0x64 ; 'd'
0000000000000aa6         db  0x75 ; 'u'
0000000000000aa7         db  0x70 ; 'p'
0000000000000aa8         db  0x00 ; '.'
0000000000000aa9         db  0x5f ; '_'
0000000000000aaa         db  0x5f ; '_'
0000000000000aab         db  0x66 ; 'f'
0000000000000aac         db  0x70 ; 'p'
0000000000000aad         db  0x72 ; 'r'
0000000000000aae         db  0x69 ; 'i'
0000000000000aaf         db  0x6e ; 'n'
0000000000000ab0         db  0x74 ; 't'
0000000000000ab1         db  0x66 ; 'f'
0000000000000ab2         db  0x5f ; '_'
0000000000000ab3         db  0x63 ; 'c'
0000000000000ab4         db  0x68 ; 'h'
0000000000000ab5         db  0x6b ; 'k'
0000000000000ab6         db  0x00 ; '.'
0000000000000ab7         db  0x73 ; 's'
0000000000000ab8         db  0x74 ; 't'
0000000000000ab9         db  0x64 ; 'd'
0000000000000aba         db  0x6f ; 'o'
0000000000000abb         db  0x75 ; 'u'
0000000000000abc         db  0x74 ; 't'
0000000000000abd         db  0x00 ; '.'
0000000000000abe         db  0x6c ; 'l'
0000000000000abf         db  0x73 ; 's'
0000000000000ac0         db  0x65 ; 'e'
0000000000000ac1         db  0x65 ; 'e'
0000000000000ac2         db  0x6b ; 'k'
0000000000000ac3         db  0x00 ; '.'
0000000000000ac4         db  0x6d ; 'm'
0000000000000ac5         db  0x65 ; 'e'
0000000000000ac6         db  0x6d ; 'm'
0000000000000ac7         db  0x63 ; 'c'
0000000000000ac8         db  0x70 ; 'p'
0000000000000ac9         db  0x79 ; 'y'
0000000000000aca         db  0x00 ; '.'
0000000000000acb         db  0x66 ; 'f'
0000000000000acc         db  0x63 ; 'c'
0000000000000acd         db  0x6c ; 'l'
0000000000000ace         db  0x6f ; 'o'
0000000000000acf         db  0x73 ; 's'
0000000000000ad0         db  0x65 ; 'e'
0000000000000ad1         db  0x00 ; '.'
0000000000000ad2         db  0x6d ; 'm'
0000000000000ad3         db  0x61 ; 'a'
0000000000000ad4         db  0x6c ; 'l'
0000000000000ad5         db  0x6c ; 'l'
0000000000000ad6         db  0x6f ; 'o'
0000000000000ad7         db  0x63 ; 'c'
0000000000000ad8         db  0x00 ; '.'
0000000000000ad9         db  0x6d ; 'm'
0000000000000ada         db  0x62 ; 'b'
0000000000000adb         db  0x73 ; 's'
0000000000000adc         db  0x69 ; 'i'
0000000000000add         db  0x6e ; 'n'
0000000000000ade         db  0x69 ; 'i'
0000000000000adf         db  0x74 ; 't'
0000000000000ae0         db  0x00 ; '.'
0000000000000ae1         db  0x5f ; '_'
0000000000000ae2         db  0x5f ; '_'
0000000000000ae3         db  0x75 ; 'u'
0000000000000ae4         db  0x66 ; 'f'
0000000000000ae5         db  0x6c ; 'l'
0000000000000ae6         db  0x6f ; 'o'
0000000000000ae7         db  0x77 ; 'w'
0000000000000ae8         db  0x00 ; '.'
0000000000000ae9         db  0x6e ; 'n'
0000000000000aea         db  0x6c ; 'l'
0000000000000aeb         db  0x5f ; '_'
0000000000000aec         db  0x6c ; 'l'
0000000000000aed         db  0x61 ; 'a'
0000000000000aee         db  0x6e ; 'n'
0000000000000aef         db  0x67 ; 'g'
0000000000000af0         db  0x69 ; 'i'
0000000000000af1         db  0x6e ; 'n'
0000000000000af2         db  0x66 ; 'f'
0000000000000af3         db  0x6f ; 'o'
0000000000000af4         db  0x00 ; '.'
0000000000000af5         db  0x5f ; '_'
0000000000000af6         db  0x5f ; '_'
0000000000000af7         db  0x63 ; 'c'
0000000000000af8         db  0x74 ; 't'
0000000000000af9         db  0x79 ; 'y'
0000000000000afa         db  0x70 ; 'p'
0000000000000afb         db  0x65 ; 'e'
0000000000000afc         db  0x5f ; '_'
0000000000000afd         db  0x62 ; 'b'
0000000000000afe         db  0x5f ; '_'
0000000000000aff         db  0x6c ; 'l'
0000000000000b00         db  0x6f ; 'o'
0000000000000b01         db  0x63 ; 'c'
0000000000000b02         db  0x00 ; '.'
0000000000000b03         db  0x6f ; 'o'
0000000000000b04         db  0x70 ; 'p'
0000000000000b05         db  0x74 ; 't'
0000000000000b06         db  0x61 ; 'a'
0000000000000b07         db  0x72 ; 'r'
0000000000000b08         db  0x67 ; 'g'
0000000000000b09         db  0x00 ; '.'
0000000000000b0a         db  0x5f ; '_'
0000000000000b0b         db  0x5f ; '_'
0000000000000b0c         db  0x66 ; 'f'
0000000000000b0d         db  0x72 ; 'r'
0000000000000b0e         db  0x65 ; 'e'
0000000000000b0f         db  0x61 ; 'a'
0000000000000b10         db  0x64 ; 'd'
0000000000000b11         db  0x69 ; 'i'
0000000000000b12         db  0x6e ; 'n'
0000000000000b13         db  0x67 ; 'g'
0000000000000b14         db  0x00 ; '.'
0000000000000b15         db  0x73 ; 's'
0000000000000b16         db  0x74 ; 't'
0000000000000b17         db  0x64 ; 'd'
0000000000000b18         db  0x65 ; 'e'
0000000000000b19         db  0x72 ; 'r'
0000000000000b1a         db  0x72 ; 'r'
0000000000000b1b         db  0x00 ; '.'
0000000000000b1c         db  0x67 ; 'g'
0000000000000b1d         db  0x65 ; 'e'
0000000000000b1e         db  0x74 ; 't'
0000000000000b1f         db  0x6f ; 'o'
0000000000000b20         db  0x70 ; 'p'
0000000000000b21         db  0x74 ; 't'
0000000000000b22         db  0x5f ; '_'
0000000000000b23         db  0x6c ; 'l'
0000000000000b24         db  0x6f ; 'o'
0000000000000b25         db  0x6e ; 'n'
0000000000000b26         db  0x67 ; 'g'
0000000000000b27         db  0x00 ; '.'
0000000000000b28         db  0x66 ; 'f'
0000000000000b29         db  0x69 ; 'i'
0000000000000b2a         db  0x6c ; 'l'
0000000000000b2b         db  0x65 ; 'e'
0000000000000b2c         db  0x6e ; 'n'
0000000000000b2d         db  0x6f ; 'o'
0000000000000b2e         db  0x00 ; '.'
0000000000000b2f         db  0x66 ; 'f'
0000000000000b30         db  0x77 ; 'w'
0000000000000b31         db  0x72 ; 'r'
0000000000000b32         db  0x69 ; 'i'
0000000000000b33         db  0x74 ; 't'
0000000000000b34         db  0x65 ; 'e'
0000000000000b35         db  0x00 ; '.'
0000000000000b36         db  0x5f ; '_'
0000000000000b37         db  0x5f ; '_'
0000000000000b38         db  0x66 ; 'f'
0000000000000b39         db  0x70 ; 'p'
0000000000000b3a         db  0x65 ; 'e'
0000000000000b3b         db  0x6e ; 'n'
0000000000000b3c         db  0x64 ; 'd'
0000000000000b3d         db  0x69 ; 'i'
0000000000000b3e         db  0x6e ; 'n'
0000000000000b3f         db  0x67 ; 'g'
0000000000000b40         db  0x00 ; '.'
                     aFreadchk:
0000000000000b41         db         "__fread_chk", 0
0000000000000b4d         db  0x70 ; 'p'
0000000000000b4e         db  0x72 ; 'r'
0000000000000b4f         db  0x6f ; 'o'
0000000000000b50         db  0x67 ; 'g'
0000000000000b51         db  0x72 ; 'r'
0000000000000b52         db  0x61 ; 'a'
0000000000000b53         db  0x6d ; 'm'
0000000000000b54         db  0x5f ; '_'
0000000000000b55         db  0x69 ; 'i'
0000000000000b56         db  0x6e ; 'n'
0000000000000b57         db  0x76 ; 'v'
0000000000000b58         db  0x6f ; 'o'
0000000000000b59         db  0x63 ; 'c'
0000000000000b5a         db  0x61 ; 'a'
0000000000000b5b         db  0x74 ; 't'
0000000000000b5c         db  0x69 ; 'i'
0000000000000b5d         db  0x6f ; 'o'
0000000000000b5e         db  0x6e ; 'n'
0000000000000b5f         db  0x5f ; '_'
0000000000000b60         db  0x73 ; 's'
0000000000000b61         db  0x68 ; 'h'
0000000000000b62         db  0x6f ; 'o'
0000000000000b63         db  0x72 ; 'r'
0000000000000b64         db  0x74 ; 't'
0000000000000b65         db  0x5f ; '_'
0000000000000b66         db  0x6e ; 'n'
0000000000000b67         db  0x61 ; 'a'
0000000000000b68         db  0x6d ; 'm'
0000000000000b69         db  0x65 ; 'e'
0000000000000b6a         db  0x00 ; '.'
0000000000000b6b         db  0x71 ; 'q'
0000000000000b6c         db  0x73 ; 's'
0000000000000b6d         db  0x6f ; 'o'
0000000000000b6e         db  0x72 ; 'r'
0000000000000b6f         db  0x74 ; 't'
0000000000000b70         db  0x00 ; '.'
0000000000000b71         db  0x5f ; '_'
0000000000000b72         db  0x5f ; '_'
0000000000000b73         db  0x63 ; 'c'
0000000000000b74         db  0x78 ; 'x'
0000000000000b75         db  0x61 ; 'a'
0000000000000b76         db  0x5f ; '_'
0000000000000b77         db  0x66 ; 'f'
0000000000000b78         db  0x69 ; 'i'
0000000000000b79         db  0x6e ; 'n'
0000000000000b7a         db  0x61 ; 'a'
0000000000000b7b         db  0x6c ; 'l'
0000000000000b7c         db  0x69 ; 'i'
0000000000000b7d         db  0x7a ; 'z'
0000000000000b7e         db  0x65 ; 'e'
0000000000000b7f         db  0x00 ; '.'
0000000000000b80         db  0x6d ; 'm'
0000000000000b81         db  0x65 ; 'e'
0000000000000b82         db  0x6d ; 'm'
0000000000000b83         db  0x6d ; 'm'
0000000000000b84         db  0x6f ; 'o'
0000000000000b85         db  0x76 ; 'v'
0000000000000b86         db  0x65 ; 'e'
0000000000000b87         db  0x00 ; '.'
0000000000000b88         db  0x62 ; 'b'
0000000000000b89         db  0x69 ; 'i'
0000000000000b8a         db  0x6e ; 'n'
0000000000000b8b         db  0x64 ; 'd'
0000000000000b8c         db  0x74 ; 't'
0000000000000b8d         db  0x65 ; 'e'
0000000000000b8e         db  0x78 ; 'x'
0000000000000b8f         db  0x74 ; 't'
0000000000000b90         db  0x64 ; 'd'
0000000000000b91         db  0x6f ; 'o'
0000000000000b92         db  0x6d ; 'm'
0000000000000b93         db  0x61 ; 'a'
0000000000000b94         db  0x69 ; 'i'
0000000000000b95         db  0x6e ; 'n'
0000000000000b96         db  0x00 ; '.'
0000000000000b97         db  0x66 ; 'f'
0000000000000b98         db  0x77 ; 'w'
0000000000000b99         db  0x72 ; 'r'
0000000000000b9a         db  0x69 ; 'i'
0000000000000b9b         db  0x74 ; 't'
0000000000000b9c         db  0x65 ; 'e'
0000000000000b9d         db  0x5f ; '_'
0000000000000b9e         db  0x75 ; 'u'
0000000000000b9f         db  0x6e ; 'n'
0000000000000ba0         db  0x6c ; 'l'
0000000000000ba1         db  0x6f ; 'o'
0000000000000ba2         db  0x63 ; 'c'
0000000000000ba3         db  0x6b ; 'k'
0000000000000ba4         db  0x65 ; 'e'
0000000000000ba5         db  0x64 ; 'd'
0000000000000ba6         db  0x00 ; '.'
0000000000000ba7         db  0x5f ; '_'
0000000000000ba8         db  0x5f ; '_'
0000000000000ba9         db  0x6c ; 'l'
0000000000000baa         db  0x69 ; 'i'
0000000000000bab         db  0x62 ; 'b'
0000000000000bac         db  0x63 ; 'c'
0000000000000bad         db  0x5f ; '_'
0000000000000bae         db  0x73 ; 's'
0000000000000baf         db  0x74 ; 't'
0000000000000bb0         db  0x61 ; 'a'
0000000000000bb1         db  0x72 ; 'r'
0000000000000bb2         db  0x74 ; 't'
0000000000000bb3         db  0x5f ; '_'
0000000000000bb4         db  0x6d ; 'm'
0000000000000bb5         db  0x61 ; 'a'
0000000000000bb6         db  0x69 ; 'i'
0000000000000bb7         db  0x6e ; 'n'
0000000000000bb8         db  0x00 ; '.'
0000000000000bb9         db  0x66 ; 'f'
0000000000000bba         db  0x65 ; 'e'
0000000000000bbb         db  0x72 ; 'r'
0000000000000bbc         db  0x72 ; 'r'
0000000000000bbd         db  0x6f ; 'o'
0000000000000bbe         db  0x72 ; 'r'
0000000000000bbf         db  0x00 ; '.'
0000000000000bc0         db  0x66 ; 'f'
0000000000000bc1         db  0x73 ; 's'
0000000000000bc2         db  0x65 ; 'e'
0000000000000bc3         db  0x65 ; 'e'
0000000000000bc4         db  0x6b ; 'k'
0000000000000bc5         db  0x6f ; 'o'
0000000000000bc6         db  0x00 ; '.'
0000000000000bc7         db  0x5f ; '_'
0000000000000bc8         db  0x5f ; '_'
0000000000000bc9         db  0x6f ; 'o'
0000000000000bca         db  0x76 ; 'v'
0000000000000bcb         db  0x65 ; 'e'
0000000000000bcc         db  0x72 ; 'r'
0000000000000bcd         db  0x66 ; 'f'
0000000000000bce         db  0x6c ; 'l'
0000000000000bcf         db  0x6f ; 'o'
0000000000000bd0         db  0x77 ; 'w'
0000000000000bd1         db  0x00 ; '.'
0000000000000bd2         db  0x66 ; 'f'
0000000000000bd3         db  0x70 ; 'p'
0000000000000bd4         db  0x75 ; 'u'
0000000000000bd5         db  0x74 ; 't'
0000000000000bd6         db  0x73 ; 's'
0000000000000bd7         db  0x5f ; '_'
0000000000000bd8         db  0x75 ; 'u'
0000000000000bd9         db  0x6e ; 'n'
0000000000000bda         db  0x6c ; 'l'
0000000000000bdb         db  0x6f ; 'o'
0000000000000bdc         db  0x63 ; 'c'
0000000000000bdd         db  0x6b ; 'k'
0000000000000bde         db  0x65 ; 'e'
0000000000000bdf         db  0x64 ; 'd'
0000000000000be0         db  0x00 ; '.'
0000000000000be1         db  0x66 ; 'f'
0000000000000be2         db  0x72 ; 'r'
0000000000000be3         db  0x65 ; 'e'
0000000000000be4         db  0x65 ; 'e'
0000000000000be5         db  0x00 ; '.'
0000000000000be6         db  0x5f ; '_'
0000000000000be7         db  0x5f ; '_'
0000000000000be8         db  0x70 ; 'p'
0000000000000be9         db  0x72 ; 'r'
0000000000000bea         db  0x6f ; 'o'
0000000000000beb         db  0x67 ; 'g'
0000000000000bec         db  0x6e ; 'n'
0000000000000bed         db  0x61 ; 'a'
0000000000000bee         db  0x6d ; 'm'
0000000000000bef         db  0x65 ; 'e'
0000000000000bf0         db  0x00 ; '.'
0000000000000bf1         db  0x5f ; '_'
0000000000000bf2         db  0x5f ; '_'
0000000000000bf3         db  0x70 ; 'p'
0000000000000bf4         db  0x72 ; 'r'
0000000000000bf5         db  0x6f ; 'o'
0000000000000bf6         db  0x67 ; 'g'
0000000000000bf7         db  0x6e ; 'n'
0000000000000bf8         db  0x61 ; 'a'
0000000000000bf9         db  0x6d ; 'm'
0000000000000bfa         db  0x65 ; 'e'
0000000000000bfb         db  0x5f ; '_'
0000000000000bfc         db  0x66 ; 'f'
0000000000000bfd         db  0x75 ; 'u'
0000000000000bfe         db  0x6c ; 'l'
0000000000000bff         db  0x6c ; 'l'
0000000000000c00         db  0x00 ; '.'
0000000000000c01         db  0x5f ; '_'
0000000000000c02         db  0x5f ; '_'
0000000000000c03         db  0x63 ; 'c'
0000000000000c04         db  0x78 ; 'x'
0000000000000c05         db  0x61 ; 'a'
0000000000000c06         db  0x5f ; '_'
0000000000000c07         db  0x61 ; 'a'
0000000000000c08         db  0x74 ; 't'
0000000000000c09         db  0x65 ; 'e'
0000000000000c0a         db  0x78 ; 'x'
0000000000000c0b         db  0x69 ; 'i'
0000000000000c0c         db  0x74 ; 't'
0000000000000c0d         db  0x00 ; '.'
0000000000000c0e         db  0x47 ; 'G'
0000000000000c0f         db  0x4c ; 'L'
0000000000000c10         db  0x49 ; 'I'
0000000000000c11         db  0x42 ; 'B'
0000000000000c12         db  0x43 ; 'C'
0000000000000c13         db  0x5f ; '_'
0000000000000c14         db  0x32 ; '2'
0000000000000c15         db  0x2e ; '.'
0000000000000c16         db  0x33 ; '3'
0000000000000c17         db  0x00 ; '.'
0000000000000c18         db  0x47 ; 'G'
0000000000000c19         db  0x4c ; 'L'
0000000000000c1a         db  0x49 ; 'I'
0000000000000c1b         db  0x42 ; 'B'
0000000000000c1c         db  0x43 ; 'C'
0000000000000c1d         db  0x5f ; '_'
0000000000000c1e         db  0x32 ; '2'
0000000000000c1f         db  0x2e ; '.'
0000000000000c20         db  0x37 ; '7'
0000000000000c21         db  0x00 ; '.'
0000000000000c22         db  0x47 ; 'G'
0000000000000c23         db  0x4c ; 'L'
0000000000000c24         db  0x49 ; 'I'
0000000000000c25         db  0x42 ; 'B'
0000000000000c26         db  0x43 ; 'C'
0000000000000c27         db  0x5f ; '_'
0000000000000c28         db  0x32 ; '2'
0000000000000c29         db  0x2e ; '.'
0000000000000c2a         db  0x33 ; '3'
0000000000000c2b         db  0x2e ; '.'
0000000000000c2c         db  0x34 ; '4'
0000000000000c2d         db  0x00 ; '.'
0000000000000c2e         db  0x47 ; 'G'
0000000000000c2f         db  0x4c ; 'L'
0000000000000c30         db  0x49 ; 'I'
0000000000000c31         db  0x42 ; 'B'
0000000000000c32         db  0x43 ; 'C'
0000000000000c33         db  0x5f ; '_'
0000000000000c34         db  0x32 ; '2'
0000000000000c35         db  0x2e ; '.'
0000000000000c36         db  0x31 ; '1'
0000000000000c37         db  0x34 ; '4'
0000000000000c38         db  0x00 ; '.'
0000000000000c39         db  0x47 ; 'G'
0000000000000c3a         db  0x4c ; 'L'
0000000000000c3b         db  0x49 ; 'I'
0000000000000c3c         db  0x42 ; 'B'
0000000000000c3d         db  0x43 ; 'C'
0000000000000c3e         db  0x5f ; '_'
0000000000000c3f         db  0x32 ; '2'
0000000000000c40         db  0x2e ; '.'
0000000000000c41         db  0x34 ; '4'
0000000000000c42         db  0x00 ; '.'
0000000000000c43         db  0x47 ; 'G'
0000000000000c44         db  0x4c ; 'L'
0000000000000c45         db  0x49 ; 'I'
0000000000000c46         db  0x42 ; 'B'
0000000000000c47         db  0x43 ; 'C'
0000000000000c48         db  0x5f ; '_'
0000000000000c49         db  0x32 ; '2'
0000000000000c4a         db  0x2e ; '.'
0000000000000c4b         db  0x32 ; '2'
0000000000000c4c         db  0x2e ; '.'
0000000000000c4d         db  0x35 ; '5'
0000000000000c4e         db  0x00 ; '.'
0000000000000c4f         db  0x5f ; '_'
0000000000000c50         db  0x49 ; 'I'
0000000000000c51         db  0x54 ; 'T'
0000000000000c52         db  0x4d ; 'M'
0000000000000c53         db  0x5f ; '_'
0000000000000c54         db  0x64 ; 'd'
0000000000000c55         db  0x65 ; 'e'
0000000000000c56         db  0x72 ; 'r'
0000000000000c57         db  0x65 ; 'e'
0000000000000c58         db  0x67 ; 'g'
0000000000000c59         db  0x69 ; 'i'
0000000000000c5a         db  0x73 ; 's'
0000000000000c5b         db  0x74 ; 't'
0000000000000c5c         db  0x65 ; 'e'
0000000000000c5d         db  0x72 ; 'r'
0000000000000c5e         db  0x54 ; 'T'
0000000000000c5f         db  0x4d ; 'M'
0000000000000c60         db  0x43 ; 'C'
0000000000000c61         db  0x6c ; 'l'
0000000000000c62         db  0x6f ; 'o'
0000000000000c63         db  0x6e ; 'n'
0000000000000c64         db  0x65 ; 'e'
0000000000000c65         db  0x54 ; 'T'
0000000000000c66         db  0x61 ; 'a'
0000000000000c67         db  0x62 ; 'b'
0000000000000c68         db  0x6c ; 'l'
0000000000000c69         db  0x65 ; 'e'
0000000000000c6a         db  0x00 ; '.'
0000000000000c6b         db  0x5f ; '_'
0000000000000c6c         db  0x5f ; '_'
0000000000000c6d         db  0x67 ; 'g'
0000000000000c6e         db  0x6d ; 'm'
0000000000000c6f         db  0x6f ; 'o'
0000000000000c70         db  0x6e ; 'n'
0000000000000c71         db  0x5f ; '_'
0000000000000c72         db  0x73 ; 's'
0000000000000c73         db  0x74 ; 't'
0000000000000c74         db  0x61 ; 'a'
0000000000000c75         db  0x72 ; 'r'
0000000000000c76         db  0x74 ; 't'
0000000000000c77         db  0x5f ; '_'
0000000000000c78         db  0x5f ; '_'
0000000000000c79         db  0x00 ; '.'
0000000000000c7a         db  0x5f ; '_'
0000000000000c7b         db  0x49 ; 'I'
0000000000000c7c         db  0x54 ; 'T'
0000000000000c7d         db  0x4d ; 'M'
0000000000000c7e         db  0x5f ; '_'
0000000000000c7f         db  0x72 ; 'r'
0000000000000c80         db  0x65 ; 'e'
0000000000000c81         db  0x67 ; 'g'
0000000000000c82         db  0x69 ; 'i'
0000000000000c83         db  0x73 ; 's'
0000000000000c84         db  0x74 ; 't'
0000000000000c85         db  0x65 ; 'e'
0000000000000c86         db  0x72 ; 'r'
0000000000000c87         db  0x54 ; 'T'
0000000000000c88         db  0x4d ; 'M'
0000000000000c89         db  0x43 ; 'C'
0000000000000c8a         db  0x6c ; 'l'
0000000000000c8b         db  0x6f ; 'o'
0000000000000c8c         db  0x6e ; 'n'
0000000000000c8d         db  0x65 ; 'e'
0000000000000c8e         db  0x54 ; 'T'
0000000000000c8f         db  0x61 ; 'a'
0000000000000c90         db  0x62 ; 'b'
0000000000000c91         db  0x6c ; 'l'
0000000000000c92         db  0x65 ; 'e'
0000000000000c93         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xc94; 0xd20[ (140 bytes)
        ; File offset : [3220; 3360[ (140 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000c94         db  0x00 ; '.'
0000000000000c95         db  0x00 ; '.'
0000000000000c96         db  0x02 ; '.'
0000000000000c97         db  0x00 ; '.'
0000000000000c98         db  0x02 ; '.'
0000000000000c99         db  0x00 ; '.'
0000000000000c9a         db  0x02 ; '.'
0000000000000c9b         db  0x00 ; '.'
0000000000000c9c         db  0x02 ; '.'
0000000000000c9d         db  0x00 ; '.'
0000000000000c9e         db  0x02 ; '.'
0000000000000c9f         db  0x00 ; '.'
0000000000000ca0         db  0x00 ; '.'
0000000000000ca1         db  0x00 ; '.'
0000000000000ca2         db  0x02 ; '.'
0000000000000ca3         db  0x00 ; '.'
0000000000000ca4         db  0x02 ; '.'
0000000000000ca5         db  0x00 ; '.'
0000000000000ca6         db  0x02 ; '.'
0000000000000ca7         db  0x00 ; '.'
0000000000000ca8         db  0x02 ; '.'
0000000000000ca9         db  0x00 ; '.'
0000000000000caa         db  0x02 ; '.'
0000000000000cab         db  0x00 ; '.'
0000000000000cac         db  0x02 ; '.'
0000000000000cad         db  0x00 ; '.'
0000000000000cae         db  0x02 ; '.'
0000000000000caf         db  0x00 ; '.'
0000000000000cb0         db  0x02 ; '.'
0000000000000cb1         db  0x00 ; '.'
0000000000000cb2         db  0x02 ; '.'
0000000000000cb3         db  0x00 ; '.'
0000000000000cb4         db  0x02 ; '.'
0000000000000cb5         db  0x00 ; '.'
0000000000000cb6         db  0x02 ; '.'
0000000000000cb7         db  0x00 ; '.'
0000000000000cb8         db  0x03 ; '.'
0000000000000cb9         db  0x00 ; '.'
0000000000000cba         db  0x02 ; '.'
0000000000000cbb         db  0x00 ; '.'
0000000000000cbc         db  0x02 ; '.'
0000000000000cbd         db  0x00 ; '.'
0000000000000cbe         db  0x02 ; '.'
0000000000000cbf         db  0x00 ; '.'
0000000000000cc0         db  0x02 ; '.'
0000000000000cc1         db  0x00 ; '.'
0000000000000cc2         db  0x02 ; '.'
0000000000000cc3         db  0x00 ; '.'
0000000000000cc4         db  0x02 ; '.'
0000000000000cc5         db  0x00 ; '.'
0000000000000cc6         db  0x02 ; '.'
0000000000000cc7         db  0x00 ; '.'
0000000000000cc8         db  0x02 ; '.'
0000000000000cc9         db  0x00 ; '.'
0000000000000cca         db  0x02 ; '.'
0000000000000ccb         db  0x00 ; '.'
0000000000000ccc         db  0x02 ; '.'
0000000000000ccd         db  0x00 ; '.'
0000000000000cce         db  0x02 ; '.'
0000000000000ccf         db  0x00 ; '.'
0000000000000cd0         db  0x02 ; '.'
0000000000000cd1         db  0x00 ; '.'
0000000000000cd2         db  0x02 ; '.'
0000000000000cd3         db  0x00 ; '.'
0000000000000cd4         db  0x02 ; '.'
0000000000000cd5         db  0x00 ; '.'
0000000000000cd6         db  0x02 ; '.'
0000000000000cd7         db  0x00 ; '.'
0000000000000cd8         db  0x02 ; '.'
0000000000000cd9         db  0x00 ; '.'
0000000000000cda         db  0x00 ; '.'
0000000000000cdb         db  0x00 ; '.'
0000000000000cdc         db  0x04 ; '.'
0000000000000cdd         db  0x00 ; '.'
0000000000000cde         db  0x02 ; '.'
0000000000000cdf         db  0x00 ; '.'
0000000000000ce0         db  0x02 ; '.'
0000000000000ce1         db  0x00 ; '.'
0000000000000ce2         db  0x02 ; '.'
0000000000000ce3         db  0x00 ; '.'
0000000000000ce4         db  0x02 ; '.'
0000000000000ce5         db  0x00 ; '.'
0000000000000ce6         db  0x02 ; '.'
0000000000000ce7         db  0x00 ; '.'
0000000000000ce8         db  0x02 ; '.'
0000000000000ce9         db  0x00 ; '.'
0000000000000cea         db  0x02 ; '.'
0000000000000ceb         db  0x00 ; '.'
0000000000000cec         db  0x02 ; '.'
0000000000000ced         db  0x00 ; '.'
0000000000000cee         db  0x02 ; '.'
0000000000000cef         db  0x00 ; '.'
0000000000000cf0         db  0x05 ; '.'
0000000000000cf1         db  0x00 ; '.'
0000000000000cf2         db  0x06 ; '.'
0000000000000cf3         db  0x00 ; '.'
0000000000000cf4         db  0x02 ; '.'
0000000000000cf5         db  0x00 ; '.'
0000000000000cf6         db  0x02 ; '.'
0000000000000cf7         db  0x00 ; '.'
0000000000000cf8         db  0x02 ; '.'
0000000000000cf9         db  0x00 ; '.'
0000000000000cfa         db  0x02 ; '.'
0000000000000cfb         db  0x00 ; '.'
0000000000000cfc         db  0x02 ; '.'
0000000000000cfd         db  0x00 ; '.'
0000000000000cfe         db  0x02 ; '.'
0000000000000cff         db  0x00 ; '.'
0000000000000d00         db  0x02 ; '.'
0000000000000d01         db  0x00 ; '.'
0000000000000d02         db  0x05 ; '.'
0000000000000d03         db  0x00 ; '.'
0000000000000d04         db  0x00 ; '.'
0000000000000d05         db  0x00 ; '.'
0000000000000d06         db  0x02 ; '.'
0000000000000d07         db  0x00 ; '.'
0000000000000d08         db  0x02 ; '.'
0000000000000d09         db  0x00 ; '.'
0000000000000d0a         db  0x02 ; '.'
0000000000000d0b         db  0x00 ; '.'
0000000000000d0c         db  0x07 ; '.'
0000000000000d0d         db  0x00 ; '.'
0000000000000d0e         db  0x02 ; '.'
0000000000000d0f         db  0x00 ; '.'
0000000000000d10         db  0x02 ; '.'
0000000000000d11         db  0x00 ; '.'
0000000000000d12         db  0x02 ; '.'
0000000000000d13         db  0x00 ; '.'
0000000000000d14         db  0x02 ; '.'
0000000000000d15         db  0x00 ; '.'
0000000000000d16         db  0x02 ; '.'
0000000000000d17         db  0x00 ; '.'
0000000000000d18         db  0x02 ; '.'
0000000000000d19         db  0x00 ; '.'
0000000000000d1a         db  0x02 ; '.'
0000000000000d1b         db  0x00 ; '.'
0000000000000d1c         db  0x02 ; '.'
0000000000000d1d         db  0x00 ; '.'
0000000000000d1e         db  0x02 ; '.'
0000000000000d1f         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xd20; 0xd90[ (112 bytes)
        ; File offset : [3360; 3472[ (112 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000d20         db  0x01 ; '.'
0000000000000d21         db  0x00 ; '.'
0000000000000d22         db  0x06 ; '.'
0000000000000d23         db  0x00 ; '.'
0000000000000d24         db  0x01 ; '.'
0000000000000d25         db  0x00 ; '.'
0000000000000d26         db  0x00 ; '.'
0000000000000d27         db  0x00 ; '.'
0000000000000d28         db  0x10 ; '.'
0000000000000d29         db  0x00 ; '.'
0000000000000d2a         db  0x00 ; '.'
0000000000000d2b         db  0x00 ; '.'
0000000000000d2c         db  0x00 ; '.'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x00 ; '.'
0000000000000d2f         db  0x00 ; '.'
0000000000000d30         db  0x13 ; '.'
0000000000000d31         db  0x69 ; 'i'
0000000000000d32         db  0x69 ; 'i'
0000000000000d33         db  0x0d ; '.'
0000000000000d34         db  0x00 ; '.'
0000000000000d35         db  0x00 ; '.'
0000000000000d36         db  0x07 ; '.'
0000000000000d37         db  0x00 ; '.'
0000000000000d38         db  0x9e ; '.'
0000000000000d39         db  0x02 ; '.'
0000000000000d3a         db  0x00 ; '.'
0000000000000d3b         db  0x00 ; '.'
0000000000000d3c         db  0x10 ; '.'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x00 ; '.'
0000000000000d3f         db  0x00 ; '.'
0000000000000d40         db  0x17 ; '.'
0000000000000d41         db  0x69 ; 'i'
0000000000000d42         db  0x69 ; 'i'
0000000000000d43         db  0x0d ; '.'
0000000000000d44         db  0x00 ; '.'
0000000000000d45         db  0x00 ; '.'
0000000000000d46         db  0x06 ; '.'
0000000000000d47         db  0x00 ; '.'
0000000000000d48         db  0xa8 ; '.'
0000000000000d49         db  0x02 ; '.'
0000000000000d4a         db  0x00 ; '.'
0000000000000d4b         db  0x00 ; '.'
0000000000000d4c         db  0x10 ; '.'
0000000000000d4d         db  0x00 ; '.'
0000000000000d4e         db  0x00 ; '.'
0000000000000d4f         db  0x00 ; '.'
0000000000000d50         db  0x74 ; 't'
0000000000000d51         db  0x19 ; '.'
0000000000000d52         db  0x69 ; 'i'
0000000000000d53         db  0x09 ; '.'
0000000000000d54         db  0x00 ; '.'
0000000000000d55         db  0x00 ; '.'
0000000000000d56         db  0x05 ; '.'
0000000000000d57         db  0x00 ; '.'
0000000000000d58         db  0xb2 ; '.'
0000000000000d59         db  0x02 ; '.'
0000000000000d5a         db  0x00 ; '.'
0000000000000d5b         db  0x00 ; '.'
0000000000000d5c         db  0x10 ; '.'
0000000000000d5d         db  0x00 ; '.'
0000000000000d5e         db  0x00 ; '.'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0x94 ; '.'
0000000000000d61         db  0x91 ; '.'
0000000000000d62         db  0x96 ; '.'
0000000000000d63         db  0x06 ; '.'
0000000000000d64         db  0x00 ; '.'
0000000000000d65         db  0x00 ; '.'
0000000000000d66         db  0x04 ; '.'
0000000000000d67         db  0x00 ; '.'
0000000000000d68         db  0xbe ; '.'
0000000000000d69         db  0x02 ; '.'
0000000000000d6a         db  0x00 ; '.'
0000000000000d6b         db  0x00 ; '.'
0000000000000d6c         db  0x10 ; '.'
0000000000000d6d         db  0x00 ; '.'
0000000000000d6e         db  0x00 ; '.'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0x14 ; '.'
0000000000000d71         db  0x69 ; 'i'
0000000000000d72         db  0x69 ; 'i'
0000000000000d73         db  0x0d ; '.'
0000000000000d74         db  0x00 ; '.'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x03 ; '.'
0000000000000d77         db  0x00 ; '.'
0000000000000d78         db  0xc9 ; '.'
0000000000000d79         db  0x02 ; '.'
0000000000000d7a         db  0x00 ; '.'
0000000000000d7b         db  0x00 ; '.'
0000000000000d7c         db  0x10 ; '.'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x00 ; '.'
0000000000000d7f         db  0x00 ; '.'
0000000000000d80         db  0x75 ; 'u'
0000000000000d81         db  0x1a ; '.'
0000000000000d82         db  0x69 ; 'i'
0000000000000d83         db  0x09 ; '.'
0000000000000d84         db  0x00 ; '.'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x02 ; '.'
0000000000000d87         db  0x00 ; '.'
0000000000000d88         db  0xd3 ; '.'
0000000000000d89         db  0x02 ; '.'
0000000000000d8a         db  0x00 ; '.'
0000000000000d8b         db  0x00 ; '.'
0000000000000d8c         db  0x00 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x00 ; '.'
0000000000000d8f         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xd90; 0x1120[ (912 bytes)
        ; File offset : [3472; 4384[ (912 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000d90         db  0x50 ; 'P'
0000000000000d91         db  0x8a ; '.'
0000000000000d92         db  0x20 ; ' '
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x00 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x00 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0x08 ; '.'
0000000000000d99         db  0x00 ; '.'
0000000000000d9a         db  0x00 ; '.'
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x00 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x00 ; '.'
0000000000000d9f         db  0x00 ; '.'
0000000000000da0         db  0x60 ; '`'
0000000000000da1         db  0x1f ; '.'
0000000000000da2         db  0x00 ; '.'
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x00 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x00 ; '.'
0000000000000da7         db  0x00 ; '.'
0000000000000da8         db  0x58 ; 'X'
0000000000000da9         db  0x8a ; '.'
0000000000000daa         db  0x20 ; ' '
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x00 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x00 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0x08 ; '.'
0000000000000db1         db  0x00 ; '.'
0000000000000db2         db  0x00 ; '.'
0000000000000db3         db  0x00 ; '.'
0000000000000db4         db  0x00 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x00 ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0x20 ; ' '
0000000000000db9         db  0x1f ; '.'
0000000000000dba         db  0x00 ; '.'
0000000000000dbb         db  0x00 ; '.'
0000000000000dbc         db  0x00 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x00 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0x60 ; '`'
0000000000000dc1         db  0x8a ; '.'
0000000000000dc2         db  0x20 ; ' '
0000000000000dc3         db  0x00 ; '.'
0000000000000dc4         db  0x00 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x00 ; '.'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0x08 ; '.'
0000000000000dc9         db  0x00 ; '.'
0000000000000dca         db  0x00 ; '.'
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x00 ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x00 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0xa4 ; '.'
0000000000000dd1         db  0x65 ; 'e'
0000000000000dd2         db  0x00 ; '.'
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x00 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x00 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0x80 ; '.'
0000000000000dd9         db  0x8a ; '.'
0000000000000dda         db  0x20 ; ' '
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x00 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x00 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0x08 ; '.'
0000000000000de1         db  0x00 ; '.'
0000000000000de2         db  0x00 ; '.'
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x00 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x00 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0xaa ; '.'
0000000000000de9         db  0x65 ; 'e'
0000000000000dea         db  0x00 ; '.'
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x00 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x00 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0xa0 ; '.'
0000000000000df1         db  0x8a ; '.'
0000000000000df2         db  0x20 ; ' '
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x00 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x00 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0x08 ; '.'
0000000000000df9         db  0x00 ; '.'
0000000000000dfa         db  0x00 ; '.'
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x00 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x00 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0x02 ; '.'
0000000000000e01         db  0x6f ; 'o'
0000000000000e02         db  0x00 ; '.'
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x00 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x00 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0xc0 ; '.'
0000000000000e09         db  0x8a ; '.'
0000000000000e0a         db  0x20 ; ' '
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x00 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x00 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0x08 ; '.'
0000000000000e11         db  0x00 ; '.'
0000000000000e12         db  0x00 ; '.'
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x00 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x00 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0xcb ; '.'
0000000000000e19         db  0x65 ; 'e'
0000000000000e1a         db  0x00 ; '.'
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x00 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x00 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0xe0 ; '.'
0000000000000e21         db  0x8a ; '.'
0000000000000e22         db  0x20 ; ' '
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x00 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x00 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0x08 ; '.'
0000000000000e29         db  0x00 ; '.'
0000000000000e2a         db  0x00 ; '.'
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x00 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x00 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0xb5 ; '.'
0000000000000e31         db  0x65 ; 'e'
0000000000000e32         db  0x00 ; '.'
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0x00 ; '.'
0000000000000e39         db  0x8b ; '.'
0000000000000e3a         db  0x20 ; ' '
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x00 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x00 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0x08 ; '.'
0000000000000e41         db  0x00 ; '.'
0000000000000e42         db  0x00 ; '.'
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x00 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0xc4 ; '.'
0000000000000e49         db  0x65 ; 'e'
0000000000000e4a         db  0x00 ; '.'
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x00 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0x20 ; ' '
0000000000000e51         db  0x8b ; '.'
0000000000000e52         db  0x20 ; ' '
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x00 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x00 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0x08 ; '.'
0000000000000e59         db  0x00 ; '.'
0000000000000e5a         db  0x00 ; '.'
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x00 ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x00 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0xd5 ; '.'
0000000000000e61         db  0x65 ; 'e'
0000000000000e62         db  0x00 ; '.'
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x00 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0x40 ; '@'
0000000000000e69         db  0x8b ; '.'
0000000000000e6a         db  0x20 ; ' '
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x00 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x00 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0x08 ; '.'
0000000000000e71         db  0x00 ; '.'
0000000000000e72         db  0x00 ; '.'
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x00 ; '.'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0xe0 ; '.'
0000000000000e79         db  0x65 ; 'e'
0000000000000e7a         db  0x00 ; '.'
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x00 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0x60 ; '`'
0000000000000e81         db  0x8b ; '.'
0000000000000e82         db  0x20 ; ' '
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x00 ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0x08 ; '.'
0000000000000e89         db  0x00 ; '.'
0000000000000e8a         db  0x00 ; '.'
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x00 ; '.'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0xf0 ; '.'
0000000000000e91         db  0x65 ; 'e'
0000000000000e92         db  0x00 ; '.'
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'
0000000000000e98         db  0x80 ; '.'
0000000000000e99         db  0x8b ; '.'
0000000000000e9a         db  0x20 ; ' '
0000000000000e9b         db  0x00 ; '.'
0000000000000e9c         db  0x00 ; '.'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x00 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0x08 ; '.'
0000000000000ea1         db  0x00 ; '.'
0000000000000ea2         db  0x00 ; '.'
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x00 ; '.'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0xf5 ; '.'
0000000000000ea9         db  0x65 ; 'e'
0000000000000eaa         db  0x00 ; '.'
0000000000000eab         db  0x00 ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x00 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0xc0 ; '.'
0000000000000eb1         db  0x8b ; '.'
0000000000000eb2         db  0x20 ; ' '
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x00 ; '.'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0x08 ; '.'
0000000000000eb9         db  0x00 ; '.'
0000000000000eba         db  0x00 ; '.'
0000000000000ebb         db  0x00 ; '.'
0000000000000ebc         db  0x00 ; '.'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x00 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0x79 ; 'y'
0000000000000ec1         db  0x70 ; 'p'
0000000000000ec2         db  0x00 ; '.'
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x00 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0xc8 ; '.'
0000000000000ec9         db  0x8b ; '.'
0000000000000eca         db  0x20 ; ' '
0000000000000ecb         db  0x00 ; '.'
0000000000000ecc         db  0x00 ; '.'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0x08 ; '.'
0000000000000ed1         db  0x00 ; '.'
0000000000000ed2         db  0x00 ; '.'
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x00 ; '.'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0x81 ; '.'
0000000000000ed9         db  0x70 ; 'p'
0000000000000eda         db  0x00 ; '.'
0000000000000edb         db  0x00 ; '.'
0000000000000edc         db  0x00 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0xd0 ; '.'
0000000000000ee1         db  0x8b ; '.'
0000000000000ee2         db  0x20 ; ' '
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x00 ; '.'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0x08 ; '.'
0000000000000ee9         db  0x00 ; '.'
0000000000000eea         db  0x00 ; '.'
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x00 ; '.'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x00 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0x87 ; '.'
0000000000000ef1         db  0x70 ; 'p'
0000000000000ef2         db  0x00 ; '.'
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0xd8 ; '.'
0000000000000ef9         db  0x8b ; '.'
0000000000000efa         db  0x20 ; ' '
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x00 ; '.'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0x08 ; '.'
0000000000000f01         db  0x00 ; '.'
0000000000000f02         db  0x00 ; '.'
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x00 ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0x94 ; '.'
0000000000000f09         db  0x70 ; 'p'
0000000000000f0a         db  0x00 ; '.'
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x00 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0xe0 ; '.'
0000000000000f11         db  0x8b ; '.'
0000000000000f12         db  0x20 ; ' '
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x00 ; '.'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0x08 ; '.'
0000000000000f19         db  0x00 ; '.'
0000000000000f1a         db  0x00 ; '.'
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x00 ; '.'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0xa1 ; '.'
0000000000000f21         db  0x70 ; 'p'
0000000000000f22         db  0x00 ; '.'
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x00 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0xe8 ; '.'
0000000000000f29         db  0x8b ; '.'
0000000000000f2a         db  0x20 ; ' '
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x00 ; '.'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0x08 ; '.'
0000000000000f31         db  0x00 ; '.'
0000000000000f32         db  0x00 ; '.'
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x00 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0x9e ; '.'
0000000000000f39         db  0x64 ; 'd'
0000000000000f3a         db  0x00 ; '.'
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x00 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0xf0 ; '.'
0000000000000f41         db  0x8b ; '.'
0000000000000f42         db  0x20 ; ' '
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x00 ; '.'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0x08 ; '.'
0000000000000f49         db  0x00 ; '.'
0000000000000f4a         db  0x00 ; '.'
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x00 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0xb5 ; '.'
0000000000000f51         db  0x70 ; 'p'
0000000000000f52         db  0x00 ; '.'
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0xf8 ; '.'
0000000000000f59         db  0x8b ; '.'
0000000000000f5a         db  0x20 ; ' '
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x00 ; '.'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0x08 ; '.'
0000000000000f61         db  0x00 ; '.'
0000000000000f62         db  0x00 ; '.'
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x00 ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0x9a ; '.'
0000000000000f69         db  0x70 ; 'p'
0000000000000f6a         db  0x00 ; '.'
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0x00 ; '.'
0000000000000f71         db  0x8c ; '.'
0000000000000f72         db  0x20 ; ' '
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x00 ; '.'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0x08 ; '.'
0000000000000f79         db  0x00 ; '.'
0000000000000f7a         db  0x00 ; '.'
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x00 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0x65 ; 'e'
0000000000000f81         db  0x65 ; 'e'
0000000000000f82         db  0x00 ; '.'
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x00 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0x08 ; '.'
0000000000000f89         db  0x8c ; '.'
0000000000000f8a         db  0x20 ; ' '
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x00 ; '.'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0x08 ; '.'
0000000000000f91         db  0x00 ; '.'
0000000000000f92         db  0x00 ; '.'
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x00 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0xbd ; '.'
0000000000000f99         db  0x70 ; 'p'
0000000000000f9a         db  0x00 ; '.'
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'
0000000000000fa0         db  0x08 ; '.'
0000000000000fa1         db  0x90 ; '.'
0000000000000fa2         db  0x20 ; ' '
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x00 ; '.'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0x08 ; '.'
0000000000000fa9         db  0x00 ; '.'
0000000000000faa         db  0x00 ; '.'
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x00 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0x08 ; '.'
0000000000000fb1         db  0x90 ; '.'
0000000000000fb2         db  0x20 ; ' '
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x00 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0x18 ; '.'
0000000000000fb9         db  0x90 ; '.'
0000000000000fba         db  0x20 ; ' '
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x00 ; '.'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0x08 ; '.'
0000000000000fc1         db  0x00 ; '.'
0000000000000fc2         db  0x00 ; '.'
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x00 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0x01 ; '.'
0000000000000fc9         db  0x70 ; 'p'
0000000000000fca         db  0x00 ; '.'
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0x80 ; '.'
0000000000000fd1         db  0x90 ; '.'
0000000000000fd2         db  0x20 ; ' '
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x00 ; '.'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x08 ; '.'
0000000000000fd9         db  0x00 ; '.'
0000000000000fda         db  0x00 ; '.'
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x00 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0x90 ; '.'
0000000000000fe1         db  0x90 ; '.'
0000000000000fe2         db  0x20 ; ' '
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x00 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0x98 ; '.'
0000000000000fe9         db  0x90 ; '.'
0000000000000fea         db  0x20 ; ' '
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x00 ; '.'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x08 ; '.'
0000000000000ff1         db  0x00 ; '.'
0000000000000ff2         db  0x00 ; '.'
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x00 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0x60 ; '`'
0000000000000ff9         db  0x91 ; '.'
0000000000000ffa         db  0x20 ; ' '
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'
0000000000001000         db  0xd8 ; '.'                                         ; DATA XREF=freadseek+249, freadseek+269, freadseek+291
0000000000001001         db  0x8f ; '.'
0000000000001002         db  0x20 ; ' '
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x00 ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x06 ; '.'
0000000000001009         db  0x00 ; '.'
000000000000100a         db  0x00 ; '.'
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x06 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0x00 ; '.'
0000000000001011         db  0x00 ; '.'
0000000000001012         db  0x00 ; '.'
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0xe0 ; '.'
0000000000001019         db  0x8f ; '.'
000000000000101a         db  0x20 ; ' '
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x00 ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x06 ; '.'                                         ; DATA XREF=freadseek+8, freadseek+202
0000000000001021         db  0x00 ; '.'
0000000000001022         db  0x00 ; '.'
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x1f ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x00 ; '.'
0000000000001029         db  0x00 ; '.'
000000000000102a         db  0x00 ; '.'
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x00 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0xe8 ; '.'
0000000000001031         db  0x8f ; '.'
0000000000001032         db  0x20 ; ' '
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x00 ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x06 ; '.'
0000000000001039         db  0x00 ; '.'
000000000000103a         db  0x00 ; '.'
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x23 ; '#'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0x00 ; '.'
0000000000001041         db  0x00 ; '.'
0000000000001042         db  0x00 ; '.'
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x00 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0xf0 ; '.'
0000000000001049         db  0x8f ; '.'
000000000000104a         db  0x20 ; ' '
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x00 ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x06 ; '.'
0000000000001051         db  0x00 ; '.'
0000000000001052         db  0x00 ; '.'
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x38 ; '8'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0x00 ; '.'
0000000000001059         db  0x00 ; '.'
000000000000105a         db  0x00 ; '.'
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0xf8 ; '.'
0000000000001061         db  0x8f ; '.'
0000000000001062         db  0x20 ; ' '
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x00 ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x06 ; '.'
0000000000001069         db  0x00 ; '.'
000000000000106a         db  0x00 ; '.'
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x3b ; ';'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0x00 ; '.'
0000000000001071         db  0x00 ; '.'
0000000000001072         db  0x00 ; '.'
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x00 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0xa0 ; '.'
0000000000001079         db  0x90 ; '.'
000000000000107a         db  0x20 ; ' '
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x00 ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x05 ; '.'
0000000000001081         db  0x00 ; '.'
0000000000001082         db  0x00 ; '.'
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x3e ; '>'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0x00 ; '.'
0000000000001089         db  0x00 ; '.'
000000000000108a         db  0x00 ; '.'
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x00 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0xa8 ; '.'
0000000000001091         db  0x90 ; '.'
0000000000001092         db  0x20 ; ' '
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x00 ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x05 ; '.'
0000000000001099         db  0x00 ; '.'
000000000000109a         db  0x00 ; '.'
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x3d ; '='
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0x00 ; '.'
00000000000010a1         db  0x00 ; '.'
00000000000010a2         db  0x00 ; '.'
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x00 ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0xb0 ; '.'
00000000000010a9         db  0x90 ; '.'
00000000000010aa         db  0x20 ; ' '
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x00 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x05 ; '.'
00000000000010b1         db  0x00 ; '.'
00000000000010b2         db  0x00 ; '.'
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x3f ; '?'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0x00 ; '.'
00000000000010b9         db  0x00 ; '.'
00000000000010ba         db  0x00 ; '.'
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x00 ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0xb8 ; '.'
00000000000010c1         db  0x90 ; '.'
00000000000010c2         db  0x20 ; ' '
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x00 ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x05 ; '.'
00000000000010c9         db  0x00 ; '.'
00000000000010ca         db  0x00 ; '.'
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x44 ; 'D'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0x00 ; '.'
00000000000010d1         db  0x00 ; '.'
00000000000010d2         db  0x00 ; '.'
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x00 ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0xc0 ; '.'
00000000000010d9         db  0x90 ; '.'
00000000000010da         db  0x20 ; ' '
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x00 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x05 ; '.'
00000000000010e1         db  0x00 ; '.'
00000000000010e2         db  0x00 ; '.'
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x45 ; 'E'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0x00 ; '.'
00000000000010e9         db  0x00 ; '.'
00000000000010ea         db  0x00 ; '.'
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x00 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0xc8 ; '.'
00000000000010f1         db  0x90 ; '.'
00000000000010f2         db  0x20 ; ' '
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x00 ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0x05 ; '.'
00000000000010f9         db  0x00 ; '.'
00000000000010fa         db  0x00 ; '.'
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x41 ; 'A'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0x00 ; '.'
0000000000001101         db  0x00 ; '.'
0000000000001102         db  0x00 ; '.'
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x00 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0xe0 ; '.'
0000000000001109         db  0x90 ; '.'
000000000000110a         db  0x20 ; ' '
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x00 ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0x05 ; '.'
0000000000001111         db  0x00 ; '.'
0000000000001112         db  0x00 ; '.'
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x43 ; 'C'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0x00 ; '.'
0000000000001119         db  0x00 ; '.'
000000000000111a         db  0x00 ; '.'
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x00 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0x1120; 0x1648[ (1320 bytes)
        ; File offset : [4384; 5704[ (1320 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000001120         db  0x20 ; ' '
0000000000001121         db  0x8e ; '.'
0000000000001122         db  0x20 ; ' '
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x00 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0x07 ; '.'
0000000000001129         db  0x00 ; '.'
000000000000112a         db  0x00 ; '.'
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x01 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0x00 ; '.'
0000000000001131         db  0x00 ; '.'
0000000000001132         db  0x00 ; '.'
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x00 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x28 ; '('
0000000000001139         db  0x8e ; '.'
000000000000113a         db  0x20 ; ' '
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x00 ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0x07 ; '.'
0000000000001141         db  0x00 ; '.'
0000000000001142         db  0x00 ; '.'
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x02 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0x00 ; '.'
0000000000001149         db  0x00 ; '.'
000000000000114a         db  0x00 ; '.'
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x00 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x30 ; '0'
0000000000001151         db  0x8e ; '.'
0000000000001152         db  0x20 ; ' '
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x00 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0x07 ; '.'
0000000000001159         db  0x00 ; '.'
000000000000115a         db  0x00 ; '.'
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x03 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0x00 ; '.'
0000000000001161         db  0x00 ; '.'
0000000000001162         db  0x00 ; '.'
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x00 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x38 ; '8'
0000000000001169         db  0x8e ; '.'
000000000000116a         db  0x20 ; ' '
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x00 ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0x07 ; '.'
0000000000001171         db  0x00 ; '.'
0000000000001172         db  0x00 ; '.'
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x04 ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0x00 ; '.'
0000000000001179         db  0x00 ; '.'
000000000000117a         db  0x00 ; '.'
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x00 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x40 ; '@'
0000000000001181         db  0x8e ; '.'
0000000000001182         db  0x20 ; ' '
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x00 ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x07 ; '.'
0000000000001189         db  0x00 ; '.'
000000000000118a         db  0x00 ; '.'
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x05 ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0x00 ; '.'
0000000000001191         db  0x00 ; '.'
0000000000001192         db  0x00 ; '.'
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x00 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0x48 ; 'H'
0000000000001199         db  0x8e ; '.'
000000000000119a         db  0x20 ; ' '
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x00 ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x07 ; '.'
00000000000011a1         db  0x00 ; '.'
00000000000011a2         db  0x00 ; '.'
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x07 ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0x00 ; '.'
00000000000011a9         db  0x00 ; '.'
00000000000011aa         db  0x00 ; '.'
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x00 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0x50 ; 'P'
00000000000011b1         db  0x8e ; '.'
00000000000011b2         db  0x20 ; ' '
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x00 ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x07 ; '.'
00000000000011b9         db  0x00 ; '.'
00000000000011ba         db  0x00 ; '.'
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x08 ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0x00 ; '.'
00000000000011c1         db  0x00 ; '.'
00000000000011c2         db  0x00 ; '.'
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x00 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0x58 ; 'X'
00000000000011c9         db  0x8e ; '.'
00000000000011ca         db  0x20 ; ' '
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x00 ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x07 ; '.'
00000000000011d1         db  0x00 ; '.'
00000000000011d2         db  0x00 ; '.'
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x09 ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0x00 ; '.'
00000000000011d9         db  0x00 ; '.'
00000000000011da         db  0x00 ; '.'
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x00 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0x60 ; '`'
00000000000011e1         db  0x8e ; '.'
00000000000011e2         db  0x20 ; ' '
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x00 ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x07 ; '.'
00000000000011e9         db  0x00 ; '.'
00000000000011ea         db  0x00 ; '.'
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x0a ; '.'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0x00 ; '.'
00000000000011f1         db  0x00 ; '.'
00000000000011f2         db  0x00 ; '.'
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x00 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0x68 ; 'h'
00000000000011f9         db  0x8e ; '.'
00000000000011fa         db  0x20 ; ' '
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x00 ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x07 ; '.'
0000000000001201         db  0x00 ; '.'
0000000000001202         db  0x00 ; '.'
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x0b ; '.'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0x00 ; '.'
0000000000001209         db  0x00 ; '.'
000000000000120a         db  0x00 ; '.'
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x00 ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0x70 ; 'p'
0000000000001211         db  0x8e ; '.'
0000000000001212         db  0x20 ; ' '
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x00 ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x07 ; '.'
0000000000001219         db  0x00 ; '.'
000000000000121a         db  0x00 ; '.'
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x0c ; '.'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0x00 ; '.'
0000000000001221         db  0x00 ; '.'
0000000000001222         db  0x00 ; '.'
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x00 ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0x78 ; 'x'
0000000000001229         db  0x8e ; '.'
000000000000122a         db  0x20 ; ' '
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x00 ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x07 ; '.'
0000000000001231         db  0x00 ; '.'
0000000000001232         db  0x00 ; '.'
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x0d ; '.'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0x00 ; '.'
0000000000001239         db  0x00 ; '.'
000000000000123a         db  0x00 ; '.'
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x00 ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x80 ; '.'
0000000000001241         db  0x8e ; '.'
0000000000001242         db  0x20 ; ' '
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x00 ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x07 ; '.'
0000000000001249         db  0x00 ; '.'
000000000000124a         db  0x00 ; '.'
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x0e ; '.'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0x00 ; '.'
0000000000001251         db  0x00 ; '.'
0000000000001252         db  0x00 ; '.'
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x00 ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0x88 ; '.'
0000000000001259         db  0x8e ; '.'
000000000000125a         db  0x20 ; ' '
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x00 ; '.'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x07 ; '.'
0000000000001261         db  0x00 ; '.'
0000000000001262         db  0x00 ; '.'
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x0f ; '.'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x00 ; '.'
0000000000001269         db  0x00 ; '.'
000000000000126a         db  0x00 ; '.'
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x00 ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x90 ; '.'
0000000000001271         db  0x8e ; '.'
0000000000001272         db  0x20 ; ' '
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x00 ; '.'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x07 ; '.'
0000000000001279         db  0x00 ; '.'
000000000000127a         db  0x00 ; '.'
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x10 ; '.'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x00 ; '.'
0000000000001281         db  0x00 ; '.'
0000000000001282         db  0x00 ; '.'
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x00 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0x98 ; '.'
0000000000001289         db  0x8e ; '.'
000000000000128a         db  0x20 ; ' '
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x00 ; '.'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x07 ; '.'
0000000000001291         db  0x00 ; '.'
0000000000001292         db  0x00 ; '.'
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x11 ; '.'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x00 ; '.'
0000000000001299         db  0x00 ; '.'
000000000000129a         db  0x00 ; '.'
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x00 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0xa0 ; '.'
00000000000012a1         db  0x8e ; '.'
00000000000012a2         db  0x20 ; ' '
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x00 ; '.'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x07 ; '.'
00000000000012a9         db  0x00 ; '.'
00000000000012aa         db  0x00 ; '.'
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x12 ; '.'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x00 ; '.'
00000000000012b1         db  0x00 ; '.'
00000000000012b2         db  0x00 ; '.'
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x00 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0xa8 ; '.'
00000000000012b9         db  0x8e ; '.'
00000000000012ba         db  0x20 ; ' '
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x00 ; '.'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x07 ; '.'
00000000000012c1         db  0x00 ; '.'
00000000000012c2         db  0x00 ; '.'
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x13 ; '.'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0x00 ; '.'
00000000000012c9         db  0x00 ; '.'
00000000000012ca         db  0x00 ; '.'
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x00 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0xb0 ; '.'
00000000000012d1         db  0x8e ; '.'
00000000000012d2         db  0x20 ; ' '
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x00 ; '.'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x07 ; '.'
00000000000012d9         db  0x00 ; '.'
00000000000012da         db  0x00 ; '.'
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x14 ; '.'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0x00 ; '.'
00000000000012e1         db  0x00 ; '.'
00000000000012e2         db  0x00 ; '.'
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x00 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0xb8 ; '.'
00000000000012e9         db  0x8e ; '.'
00000000000012ea         db  0x20 ; ' '
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x00 ; '.'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x07 ; '.'
00000000000012f1         db  0x00 ; '.'
00000000000012f2         db  0x00 ; '.'
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x15 ; '.'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x00 ; '.'
00000000000012f9         db  0x00 ; '.'
00000000000012fa         db  0x00 ; '.'
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x00 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0xc0 ; '.'
0000000000001301         db  0x8e ; '.'
0000000000001302         db  0x20 ; ' '
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x00 ; '.'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x07 ; '.'
0000000000001309         db  0x00 ; '.'
000000000000130a         db  0x00 ; '.'
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x16 ; '.'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0x00 ; '.'
0000000000001311         db  0x00 ; '.'
0000000000001312         db  0x00 ; '.'
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x00 ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0xc8 ; '.'
0000000000001319         db  0x8e ; '.'
000000000000131a         db  0x20 ; ' '
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x00 ; '.'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x07 ; '.'
0000000000001321         db  0x00 ; '.'
0000000000001322         db  0x00 ; '.'
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x17 ; '.'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0x00 ; '.'
0000000000001329         db  0x00 ; '.'
000000000000132a         db  0x00 ; '.'
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x00 ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0xd0 ; '.'
0000000000001331         db  0x8e ; '.'
0000000000001332         db  0x20 ; ' '
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x00 ; '.'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x07 ; '.'
0000000000001339         db  0x00 ; '.'
000000000000133a         db  0x00 ; '.'
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x18 ; '.'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0x00 ; '.'
0000000000001341         db  0x00 ; '.'
0000000000001342         db  0x00 ; '.'
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x00 ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0xd8 ; '.'
0000000000001349         db  0x8e ; '.'
000000000000134a         db  0x20 ; ' '
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x00 ; '.'
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x07 ; '.'
0000000000001351         db  0x00 ; '.'
0000000000001352         db  0x00 ; '.'
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x19 ; '.'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0x00 ; '.'
0000000000001359         db  0x00 ; '.'
000000000000135a         db  0x00 ; '.'
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x00 ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0xe0 ; '.'
0000000000001361         db  0x8e ; '.'
0000000000001362         db  0x20 ; ' '
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x00 ; '.'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0x07 ; '.'
0000000000001369         db  0x00 ; '.'
000000000000136a         db  0x00 ; '.'
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x1a ; '.'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0x00 ; '.'
0000000000001371         db  0x00 ; '.'
0000000000001372         db  0x00 ; '.'
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x00 ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0xe8 ; '.'
0000000000001379         db  0x8e ; '.'
000000000000137a         db  0x20 ; ' '
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x00 ; '.'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0x07 ; '.'
0000000000001381         db  0x00 ; '.'
0000000000001382         db  0x00 ; '.'
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x1b ; '.'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0x00 ; '.'
0000000000001389         db  0x00 ; '.'
000000000000138a         db  0x00 ; '.'
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x00 ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0xf0 ; '.'
0000000000001391         db  0x8e ; '.'
0000000000001392         db  0x20 ; ' '
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x00 ; '.'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0x07 ; '.'
0000000000001399         db  0x00 ; '.'
000000000000139a         db  0x00 ; '.'
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x1c ; '.'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0x00 ; '.'
00000000000013a1         db  0x00 ; '.'
00000000000013a2         db  0x00 ; '.'
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x00 ; '.'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0xf8 ; '.'
00000000000013a9         db  0x8e ; '.'
00000000000013aa         db  0x20 ; ' '
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x00 ; '.'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x07 ; '.'
00000000000013b1         db  0x00 ; '.'
00000000000013b2         db  0x00 ; '.'
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x1d ; '.'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'
00000000000013b8         db  0x00 ; '.'
00000000000013b9         db  0x00 ; '.'
00000000000013ba         db  0x00 ; '.'
00000000000013bb         db  0x00 ; '.'
00000000000013bc         db  0x00 ; '.'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x00 ; '.'
00000000000013bf         db  0x00 ; '.'
00000000000013c0         db  0x00 ; '.'
00000000000013c1         db  0x8f ; '.'
00000000000013c2         db  0x20 ; ' '
00000000000013c3         db  0x00 ; '.'
00000000000013c4         db  0x00 ; '.'
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x00 ; '.'
00000000000013c7         db  0x00 ; '.'
00000000000013c8         db  0x07 ; '.'
00000000000013c9         db  0x00 ; '.'
00000000000013ca         db  0x00 ; '.'
00000000000013cb         db  0x00 ; '.'
00000000000013cc         db  0x1e ; '.'
00000000000013cd         db  0x00 ; '.'
00000000000013ce         db  0x00 ; '.'
00000000000013cf         db  0x00 ; '.'
00000000000013d0         db  0x00 ; '.'
00000000000013d1         db  0x00 ; '.'
00000000000013d2         db  0x00 ; '.'
00000000000013d3         db  0x00 ; '.'
00000000000013d4         db  0x00 ; '.'
00000000000013d5         db  0x00 ; '.'
00000000000013d6         db  0x00 ; '.'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0x08 ; '.'
00000000000013d9         db  0x8f ; '.'
00000000000013da         db  0x20 ; ' '
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x00 ; '.'
00000000000013dd         db  0x00 ; '.'
00000000000013de         db  0x00 ; '.'
00000000000013df         db  0x00 ; '.'
00000000000013e0         db  0x07 ; '.'
00000000000013e1         db  0x00 ; '.'
00000000000013e2         db  0x00 ; '.'
00000000000013e3         db  0x00 ; '.'
00000000000013e4         db  0x20 ; ' '
00000000000013e5         db  0x00 ; '.'
00000000000013e6         db  0x00 ; '.'
00000000000013e7         db  0x00 ; '.'
00000000000013e8         db  0x00 ; '.'
00000000000013e9         db  0x00 ; '.'
00000000000013ea         db  0x00 ; '.'
00000000000013eb         db  0x00 ; '.'
00000000000013ec         db  0x00 ; '.'
00000000000013ed         db  0x00 ; '.'
00000000000013ee         db  0x00 ; '.'
00000000000013ef         db  0x00 ; '.'
00000000000013f0         db  0x10 ; '.'
00000000000013f1         db  0x8f ; '.'
00000000000013f2         db  0x20 ; ' '
00000000000013f3         db  0x00 ; '.'
00000000000013f4         db  0x00 ; '.'
00000000000013f5         db  0x00 ; '.'
00000000000013f6         db  0x00 ; '.'
00000000000013f7         db  0x00 ; '.'
00000000000013f8         db  0x07 ; '.'
00000000000013f9         db  0x00 ; '.'
00000000000013fa         db  0x00 ; '.'
00000000000013fb         db  0x00 ; '.'
00000000000013fc         db  0x21 ; '!'
00000000000013fd         db  0x00 ; '.'
00000000000013fe         db  0x00 ; '.'
00000000000013ff         db  0x00 ; '.'
0000000000001400         db  0x00 ; '.'
0000000000001401         db  0x00 ; '.'
0000000000001402         db  0x00 ; '.'
0000000000001403         db  0x00 ; '.'
0000000000001404         db  0x00 ; '.'
0000000000001405         db  0x00 ; '.'
0000000000001406         db  0x00 ; '.'
0000000000001407         db  0x00 ; '.'
0000000000001408         db  0x18 ; '.'
0000000000001409         db  0x8f ; '.'
000000000000140a         db  0x20 ; ' '
000000000000140b         db  0x00 ; '.'
000000000000140c         db  0x00 ; '.'
000000000000140d         db  0x00 ; '.'
000000000000140e         db  0x00 ; '.'
000000000000140f         db  0x00 ; '.'
0000000000001410         db  0x07 ; '.'
0000000000001411         db  0x00 ; '.'
0000000000001412         db  0x00 ; '.'
0000000000001413         db  0x00 ; '.'
0000000000001414         db  0x22 ; '"'
0000000000001415         db  0x00 ; '.'
0000000000001416         db  0x00 ; '.'
0000000000001417         db  0x00 ; '.'
0000000000001418         db  0x00 ; '.'
0000000000001419         db  0x00 ; '.'
000000000000141a         db  0x00 ; '.'
000000000000141b         db  0x00 ; '.'
000000000000141c         db  0x00 ; '.'
000000000000141d         db  0x00 ; '.'
000000000000141e         db  0x00 ; '.'
000000000000141f         db  0x00 ; '.'
0000000000001420         db  0x20 ; ' '
0000000000001421         db  0x8f ; '.'
0000000000001422         db  0x20 ; ' '
0000000000001423         db  0x00 ; '.'
0000000000001424         db  0x00 ; '.'
0000000000001425         db  0x00 ; '.'
0000000000001426         db  0x00 ; '.'
0000000000001427         db  0x00 ; '.'
0000000000001428         db  0x07 ; '.'
0000000000001429         db  0x00 ; '.'
000000000000142a         db  0x00 ; '.'
000000000000142b         db  0x00 ; '.'
000000000000142c         db  0x24 ; '$'
000000000000142d         db  0x00 ; '.'
000000000000142e         db  0x00 ; '.'
000000000000142f         db  0x00 ; '.'
0000000000001430         db  0x00 ; '.'
0000000000001431         db  0x00 ; '.'
0000000000001432         db  0x00 ; '.'
0000000000001433         db  0x00 ; '.'
0000000000001434         db  0x00 ; '.'
0000000000001435         db  0x00 ; '.'
0000000000001436         db  0x00 ; '.'
0000000000001437         db  0x00 ; '.'
0000000000001438         db  0x28 ; '('
0000000000001439         db  0x8f ; '.'
000000000000143a         db  0x20 ; ' '
000000000000143b         db  0x00 ; '.'
000000000000143c         db  0x00 ; '.'
000000000000143d         db  0x00 ; '.'
000000000000143e         db  0x00 ; '.'
000000000000143f         db  0x00 ; '.'
0000000000001440         db  0x07 ; '.'
0000000000001441         db  0x00 ; '.'
0000000000001442         db  0x00 ; '.'
0000000000001443         db  0x00 ; '.'
0000000000001444         db  0x25 ; '%'
0000000000001445         db  0x00 ; '.'
0000000000001446         db  0x00 ; '.'
0000000000001447         db  0x00 ; '.'
0000000000001448         db  0x00 ; '.'
0000000000001449         db  0x00 ; '.'
000000000000144a         db  0x00 ; '.'
000000000000144b         db  0x00 ; '.'
000000000000144c         db  0x00 ; '.'
000000000000144d         db  0x00 ; '.'
000000000000144e         db  0x00 ; '.'
000000000000144f         db  0x00 ; '.'
0000000000001450         db  0x30 ; '0'
0000000000001451         db  0x8f ; '.'
0000000000001452         db  0x20 ; ' '
0000000000001453         db  0x00 ; '.'
0000000000001454         db  0x00 ; '.'
0000000000001455         db  0x00 ; '.'
0000000000001456         db  0x00 ; '.'
0000000000001457         db  0x00 ; '.'
0000000000001458         db  0x07 ; '.'
0000000000001459         db  0x00 ; '.'
000000000000145a         db  0x00 ; '.'
000000000000145b         db  0x00 ; '.'
000000000000145c         db  0x26 ; '&'
000000000000145d         db  0x00 ; '.'
000000000000145e         db  0x00 ; '.'
000000000000145f         db  0x00 ; '.'
0000000000001460         db  0x00 ; '.'
0000000000001461         db  0x00 ; '.'
0000000000001462         db  0x00 ; '.'
0000000000001463         db  0x00 ; '.'
0000000000001464         db  0x00 ; '.'
0000000000001465         db  0x00 ; '.'
0000000000001466         db  0x00 ; '.'
0000000000001467         db  0x00 ; '.'
0000000000001468         db  0x38 ; '8'
0000000000001469         db  0x8f ; '.'
000000000000146a         db  0x20 ; ' '
000000000000146b         db  0x00 ; '.'
000000000000146c         db  0x00 ; '.'
000000000000146d         db  0x00 ; '.'
000000000000146e         db  0x00 ; '.'
000000000000146f         db  0x00 ; '.'
0000000000001470         db  0x07 ; '.'
0000000000001471         db  0x00 ; '.'
0000000000001472         db  0x00 ; '.'
0000000000001473         db  0x00 ; '.'
0000000000001474         db  0x27 ; '''
0000000000001475         db  0x00 ; '.'
0000000000001476         db  0x00 ; '.'
0000000000001477         db  0x00 ; '.'
0000000000001478         db  0x00 ; '.'
0000000000001479         db  0x00 ; '.'
000000000000147a         db  0x00 ; '.'
000000000000147b         db  0x00 ; '.'
000000000000147c         db  0x00 ; '.'
000000000000147d         db  0x00 ; '.'
000000000000147e         db  0x00 ; '.'
000000000000147f         db  0x00 ; '.'
0000000000001480         db  0x40 ; '@'
0000000000001481         db  0x8f ; '.'
0000000000001482         db  0x20 ; ' '
0000000000001483         db  0x00 ; '.'
0000000000001484         db  0x00 ; '.'
0000000000001485         db  0x00 ; '.'
0000000000001486         db  0x00 ; '.'
0000000000001487         db  0x00 ; '.'
0000000000001488         db  0x07 ; '.'
0000000000001489         db  0x00 ; '.'
000000000000148a         db  0x00 ; '.'
000000000000148b         db  0x00 ; '.'
000000000000148c         db  0x28 ; '('
000000000000148d         db  0x00 ; '.'
000000000000148e         db  0x00 ; '.'
000000000000148f         db  0x00 ; '.'
0000000000001490         db  0x00 ; '.'
0000000000001491         db  0x00 ; '.'
0000000000001492         db  0x00 ; '.'
0000000000001493         db  0x00 ; '.'
0000000000001494         db  0x00 ; '.'
0000000000001495         db  0x00 ; '.'
0000000000001496         db  0x00 ; '.'
0000000000001497         db  0x00 ; '.'
0000000000001498         db  0x48 ; 'H'
0000000000001499         db  0x8f ; '.'
000000000000149a         db  0x20 ; ' '
000000000000149b         db  0x00 ; '.'
000000000000149c         db  0x00 ; '.'
000000000000149d         db  0x00 ; '.'
000000000000149e         db  0x00 ; '.'
000000000000149f         db  0x00 ; '.'
00000000000014a0         db  0x07 ; '.'
00000000000014a1         db  0x00 ; '.'
00000000000014a2         db  0x00 ; '.'
00000000000014a3         db  0x00 ; '.'
00000000000014a4         db  0x29 ; ')'
00000000000014a5         db  0x00 ; '.'
00000000000014a6         db  0x00 ; '.'
00000000000014a7         db  0x00 ; '.'
00000000000014a8         db  0x00 ; '.'
00000000000014a9         db  0x00 ; '.'
00000000000014aa         db  0x00 ; '.'
00000000000014ab         db  0x00 ; '.'
00000000000014ac         db  0x00 ; '.'
00000000000014ad         db  0x00 ; '.'
00000000000014ae         db  0x00 ; '.'
00000000000014af         db  0x00 ; '.'
00000000000014b0         db  0x50 ; 'P'
00000000000014b1         db  0x8f ; '.'
00000000000014b2         db  0x20 ; ' '
00000000000014b3         db  0x00 ; '.'
00000000000014b4         db  0x00 ; '.'
00000000000014b5         db  0x00 ; '.'
00000000000014b6         db  0x00 ; '.'
00000000000014b7         db  0x00 ; '.'
00000000000014b8         db  0x07 ; '.'
00000000000014b9         db  0x00 ; '.'
00000000000014ba         db  0x00 ; '.'
00000000000014bb         db  0x00 ; '.'
00000000000014bc         db  0x2a ; '*'
00000000000014bd         db  0x00 ; '.'
00000000000014be         db  0x00 ; '.'
00000000000014bf         db  0x00 ; '.'
00000000000014c0         db  0x00 ; '.'
00000000000014c1         db  0x00 ; '.'
00000000000014c2         db  0x00 ; '.'
00000000000014c3         db  0x00 ; '.'
00000000000014c4         db  0x00 ; '.'
00000000000014c5         db  0x00 ; '.'
00000000000014c6         db  0x00 ; '.'
00000000000014c7         db  0x00 ; '.'
00000000000014c8         db  0x58 ; 'X'
00000000000014c9         db  0x8f ; '.'
00000000000014ca         db  0x20 ; ' '
00000000000014cb         db  0x00 ; '.'
00000000000014cc         db  0x00 ; '.'
00000000000014cd         db  0x00 ; '.'
00000000000014ce         db  0x00 ; '.'
00000000000014cf         db  0x00 ; '.'
00000000000014d0         db  0x07 ; '.'
00000000000014d1         db  0x00 ; '.'
00000000000014d2         db  0x00 ; '.'
00000000000014d3         db  0x00 ; '.'
00000000000014d4         db  0x2b ; '+'
00000000000014d5         db  0x00 ; '.'
00000000000014d6         db  0x00 ; '.'
00000000000014d7         db  0x00 ; '.'
00000000000014d8         db  0x00 ; '.'
00000000000014d9         db  0x00 ; '.'
00000000000014da         db  0x00 ; '.'
00000000000014db         db  0x00 ; '.'
00000000000014dc         db  0x00 ; '.'
00000000000014dd         db  0x00 ; '.'
00000000000014de         db  0x00 ; '.'
00000000000014df         db  0x00 ; '.'
00000000000014e0         db  0x60 ; '`'
00000000000014e1         db  0x8f ; '.'
00000000000014e2         db  0x20 ; ' '
00000000000014e3         db  0x00 ; '.'
00000000000014e4         db  0x00 ; '.'
00000000000014e5         db  0x00 ; '.'
00000000000014e6         db  0x00 ; '.'
00000000000014e7         db  0x00 ; '.'
00000000000014e8         db  0x07 ; '.'
00000000000014e9         db  0x00 ; '.'
00000000000014ea         db  0x00 ; '.'
00000000000014eb         db  0x00 ; '.'
00000000000014ec         db  0x2c ; ','
00000000000014ed         db  0x00 ; '.'
00000000000014ee         db  0x00 ; '.'
00000000000014ef         db  0x00 ; '.'
00000000000014f0         db  0x00 ; '.'
00000000000014f1         db  0x00 ; '.'
00000000000014f2         db  0x00 ; '.'
00000000000014f3         db  0x00 ; '.'
00000000000014f4         db  0x00 ; '.'
00000000000014f5         db  0x00 ; '.'
00000000000014f6         db  0x00 ; '.'
00000000000014f7         db  0x00 ; '.'
00000000000014f8         db  0x68 ; 'h'
00000000000014f9         db  0x8f ; '.'
00000000000014fa         db  0x20 ; ' '
00000000000014fb         db  0x00 ; '.'
00000000000014fc         db  0x00 ; '.'
00000000000014fd         db  0x00 ; '.'
00000000000014fe         db  0x00 ; '.'
00000000000014ff         db  0x00 ; '.'
0000000000001500         db  0x07 ; '.'
0000000000001501         db  0x00 ; '.'
0000000000001502         db  0x00 ; '.'
0000000000001503         db  0x00 ; '.'
0000000000001504         db  0x2d ; '-'
0000000000001505         db  0x00 ; '.'
0000000000001506         db  0x00 ; '.'
0000000000001507         db  0x00 ; '.'
0000000000001508         db  0x00 ; '.'
0000000000001509         db  0x00 ; '.'
000000000000150a         db  0x00 ; '.'
000000000000150b         db  0x00 ; '.'
000000000000150c         db  0x00 ; '.'
000000000000150d         db  0x00 ; '.'
000000000000150e         db  0x00 ; '.'
000000000000150f         db  0x00 ; '.'
0000000000001510         db  0x70 ; 'p'
0000000000001511         db  0x8f ; '.'
0000000000001512         db  0x20 ; ' '
0000000000001513         db  0x00 ; '.'
0000000000001514         db  0x00 ; '.'
0000000000001515         db  0x00 ; '.'
0000000000001516         db  0x00 ; '.'
0000000000001517         db  0x00 ; '.'
0000000000001518         db  0x07 ; '.'
0000000000001519         db  0x00 ; '.'
000000000000151a         db  0x00 ; '.'
000000000000151b         db  0x00 ; '.'
000000000000151c         db  0x2e ; '.'
000000000000151d         db  0x00 ; '.'
000000000000151e         db  0x00 ; '.'
000000000000151f         db  0x00 ; '.'
0000000000001520         db  0x00 ; '.'
0000000000001521         db  0x00 ; '.'
0000000000001522         db  0x00 ; '.'
0000000000001523         db  0x00 ; '.'
0000000000001524         db  0x00 ; '.'
0000000000001525         db  0x00 ; '.'
0000000000001526         db  0x00 ; '.'
0000000000001527         db  0x00 ; '.'
0000000000001528         db  0x78 ; 'x'
0000000000001529         db  0x8f ; '.'
000000000000152a         db  0x20 ; ' '
000000000000152b         db  0x00 ; '.'
000000000000152c         db  0x00 ; '.'
000000000000152d         db  0x00 ; '.'
000000000000152e         db  0x00 ; '.'
000000000000152f         db  0x00 ; '.'
0000000000001530         db  0x07 ; '.'
0000000000001531         db  0x00 ; '.'
0000000000001532         db  0x00 ; '.'
0000000000001533         db  0x00 ; '.'
0000000000001534         db  0x2f ; '/'
0000000000001535         db  0x00 ; '.'
0000000000001536         db  0x00 ; '.'
0000000000001537         db  0x00 ; '.'
0000000000001538         db  0x00 ; '.'
0000000000001539         db  0x00 ; '.'
000000000000153a         db  0x00 ; '.'
000000000000153b         db  0x00 ; '.'
000000000000153c         db  0x00 ; '.'
000000000000153d         db  0x00 ; '.'
000000000000153e         db  0x00 ; '.'
000000000000153f         db  0x00 ; '.'
0000000000001540         db  0x80 ; '.'
0000000000001541         db  0x8f ; '.'
0000000000001542         db  0x20 ; ' '
0000000000001543         db  0x00 ; '.'
0000000000001544         db  0x00 ; '.'
0000000000001545         db  0x00 ; '.'
0000000000001546         db  0x00 ; '.'
0000000000001547         db  0x00 ; '.'
0000000000001548         db  0x07 ; '.'
0000000000001549         db  0x00 ; '.'
000000000000154a         db  0x00 ; '.'
000000000000154b         db  0x00 ; '.'
000000000000154c         db  0x30 ; '0'
000000000000154d         db  0x00 ; '.'
000000000000154e         db  0x00 ; '.'
000000000000154f         db  0x00 ; '.'
0000000000001550         db  0x00 ; '.'
0000000000001551         db  0x00 ; '.'
0000000000001552         db  0x00 ; '.'
0000000000001553         db  0x00 ; '.'
0000000000001554         db  0x00 ; '.'
0000000000001555         db  0x00 ; '.'
0000000000001556         db  0x00 ; '.'
0000000000001557         db  0x00 ; '.'
0000000000001558         db  0x88 ; '.'
0000000000001559         db  0x8f ; '.'
000000000000155a         db  0x20 ; ' '
000000000000155b         db  0x00 ; '.'
000000000000155c         db  0x00 ; '.'
000000000000155d         db  0x00 ; '.'
000000000000155e         db  0x00 ; '.'
000000000000155f         db  0x00 ; '.'
0000000000001560         db  0x07 ; '.'
0000000000001561         db  0x00 ; '.'
0000000000001562         db  0x00 ; '.'
0000000000001563         db  0x00 ; '.'
0000000000001564         db  0x31 ; '1'
0000000000001565         db  0x00 ; '.'
0000000000001566         db  0x00 ; '.'
0000000000001567         db  0x00 ; '.'
0000000000001568         db  0x00 ; '.'
0000000000001569         db  0x00 ; '.'
000000000000156a         db  0x00 ; '.'
000000000000156b         db  0x00 ; '.'
000000000000156c         db  0x00 ; '.'
000000000000156d         db  0x00 ; '.'
000000000000156e         db  0x00 ; '.'
000000000000156f         db  0x00 ; '.'
0000000000001570         db  0x90 ; '.'
0000000000001571         db  0x8f ; '.'
0000000000001572         db  0x20 ; ' '
0000000000001573         db  0x00 ; '.'
0000000000001574         db  0x00 ; '.'
0000000000001575         db  0x00 ; '.'
0000000000001576         db  0x00 ; '.'
0000000000001577         db  0x00 ; '.'
0000000000001578         db  0x07 ; '.'
0000000000001579         db  0x00 ; '.'
000000000000157a         db  0x00 ; '.'
000000000000157b         db  0x00 ; '.'
000000000000157c         db  0x32 ; '2'
000000000000157d         db  0x00 ; '.'
000000000000157e         db  0x00 ; '.'
000000000000157f         db  0x00 ; '.'
0000000000001580         db  0x00 ; '.'
0000000000001581         db  0x00 ; '.'
0000000000001582         db  0x00 ; '.'
0000000000001583         db  0x00 ; '.'
0000000000001584         db  0x00 ; '.'
0000000000001585         db  0x00 ; '.'
0000000000001586         db  0x00 ; '.'
0000000000001587         db  0x00 ; '.'
0000000000001588         db  0x98 ; '.'
0000000000001589         db  0x8f ; '.'
000000000000158a         db  0x20 ; ' '
000000000000158b         db  0x00 ; '.'
000000000000158c         db  0x00 ; '.'
000000000000158d         db  0x00 ; '.'
000000000000158e         db  0x00 ; '.'
000000000000158f         db  0x00 ; '.'
0000000000001590         db  0x07 ; '.'
0000000000001591         db  0x00 ; '.'
0000000000001592         db  0x00 ; '.'
0000000000001593         db  0x00 ; '.'
0000000000001594         db  0x33 ; '3'
0000000000001595         db  0x00 ; '.'
0000000000001596         db  0x00 ; '.'
0000000000001597         db  0x00 ; '.'
0000000000001598         db  0x00 ; '.'
0000000000001599         db  0x00 ; '.'
000000000000159a         db  0x00 ; '.'
000000000000159b         db  0x00 ; '.'
000000000000159c         db  0x00 ; '.'
000000000000159d         db  0x00 ; '.'
000000000000159e         db  0x00 ; '.'
000000000000159f         db  0x00 ; '.'
00000000000015a0         db  0xa0 ; '.'
00000000000015a1         db  0x8f ; '.'
00000000000015a2         db  0x20 ; ' '
00000000000015a3         db  0x00 ; '.'
00000000000015a4         db  0x00 ; '.'
00000000000015a5         db  0x00 ; '.'
00000000000015a6         db  0x00 ; '.'
00000000000015a7         db  0x00 ; '.'
00000000000015a8         db  0x07 ; '.'
00000000000015a9         db  0x00 ; '.'
00000000000015aa         db  0x00 ; '.'
00000000000015ab         db  0x00 ; '.'
00000000000015ac         db  0x34 ; '4'
00000000000015ad         db  0x00 ; '.'
00000000000015ae         db  0x00 ; '.'
00000000000015af         db  0x00 ; '.'
00000000000015b0         db  0x00 ; '.'
00000000000015b1         db  0x00 ; '.'
00000000000015b2         db  0x00 ; '.'
00000000000015b3         db  0x00 ; '.'
00000000000015b4         db  0x00 ; '.'
00000000000015b5         db  0x00 ; '.'
00000000000015b6         db  0x00 ; '.'
00000000000015b7         db  0x00 ; '.'
00000000000015b8         db  0xa8 ; '.'
00000000000015b9         db  0x8f ; '.'
00000000000015ba         db  0x20 ; ' '
00000000000015bb         db  0x00 ; '.'
00000000000015bc         db  0x00 ; '.'
00000000000015bd         db  0x00 ; '.'
00000000000015be         db  0x00 ; '.'
00000000000015bf         db  0x00 ; '.'
00000000000015c0         db  0x07 ; '.'
00000000000015c1         db  0x00 ; '.'
00000000000015c2         db  0x00 ; '.'
00000000000015c3         db  0x00 ; '.'
00000000000015c4         db  0x35 ; '5'
00000000000015c5         db  0x00 ; '.'
00000000000015c6         db  0x00 ; '.'
00000000000015c7         db  0x00 ; '.'
00000000000015c8         db  0x00 ; '.'
00000000000015c9         db  0x00 ; '.'
00000000000015ca         db  0x00 ; '.'
00000000000015cb         db  0x00 ; '.'
00000000000015cc         db  0x00 ; '.'
00000000000015cd         db  0x00 ; '.'
00000000000015ce         db  0x00 ; '.'
00000000000015cf         db  0x00 ; '.'
00000000000015d0         db  0xb0 ; '.'
00000000000015d1         db  0x8f ; '.'
00000000000015d2         db  0x20 ; ' '
00000000000015d3         db  0x00 ; '.'
00000000000015d4         db  0x00 ; '.'
00000000000015d5         db  0x00 ; '.'
00000000000015d6         db  0x00 ; '.'
00000000000015d7         db  0x00 ; '.'
00000000000015d8         db  0x07 ; '.'
00000000000015d9         db  0x00 ; '.'
00000000000015da         db  0x00 ; '.'
00000000000015db         db  0x00 ; '.'
00000000000015dc         db  0x36 ; '6'
00000000000015dd         db  0x00 ; '.'
00000000000015de         db  0x00 ; '.'
00000000000015df         db  0x00 ; '.'
00000000000015e0         db  0x00 ; '.'
00000000000015e1         db  0x00 ; '.'
00000000000015e2         db  0x00 ; '.'
00000000000015e3         db  0x00 ; '.'
00000000000015e4         db  0x00 ; '.'
00000000000015e5         db  0x00 ; '.'
00000000000015e6         db  0x00 ; '.'
00000000000015e7         db  0x00 ; '.'
00000000000015e8         db  0xb8 ; '.'
00000000000015e9         db  0x8f ; '.'
00000000000015ea         db  0x20 ; ' '
00000000000015eb         db  0x00 ; '.'
00000000000015ec         db  0x00 ; '.'
00000000000015ed         db  0x00 ; '.'
00000000000015ee         db  0x00 ; '.'
00000000000015ef         db  0x00 ; '.'
00000000000015f0         db  0x07 ; '.'
00000000000015f1         db  0x00 ; '.'
00000000000015f2         db  0x00 ; '.'
00000000000015f3         db  0x00 ; '.'
00000000000015f4         db  0x37 ; '7'
00000000000015f5         db  0x00 ; '.'
00000000000015f6         db  0x00 ; '.'
00000000000015f7         db  0x00 ; '.'
00000000000015f8         db  0x00 ; '.'
00000000000015f9         db  0x00 ; '.'
00000000000015fa         db  0x00 ; '.'
00000000000015fb         db  0x00 ; '.'
00000000000015fc         db  0x00 ; '.'
00000000000015fd         db  0x00 ; '.'
00000000000015fe         db  0x00 ; '.'
00000000000015ff         db  0x00 ; '.'
0000000000001600         db  0xc0 ; '.'
0000000000001601         db  0x8f ; '.'
0000000000001602         db  0x20 ; ' '
0000000000001603         db  0x00 ; '.'
0000000000001604         db  0x00 ; '.'
0000000000001605         db  0x00 ; '.'
0000000000001606         db  0x00 ; '.'
0000000000001607         db  0x00 ; '.'
0000000000001608         db  0x07 ; '.'
0000000000001609         db  0x00 ; '.'
000000000000160a         db  0x00 ; '.'
000000000000160b         db  0x00 ; '.'
000000000000160c         db  0x39 ; '9'
000000000000160d         db  0x00 ; '.'
000000000000160e         db  0x00 ; '.'
000000000000160f         db  0x00 ; '.'
0000000000001610         db  0x00 ; '.'
0000000000001611         db  0x00 ; '.'
0000000000001612         db  0x00 ; '.'
0000000000001613         db  0x00 ; '.'
0000000000001614         db  0x00 ; '.'
0000000000001615         db  0x00 ; '.'
0000000000001616         db  0x00 ; '.'
0000000000001617         db  0x00 ; '.'
0000000000001618         db  0xc8 ; '.'
0000000000001619         db  0x8f ; '.'
000000000000161a         db  0x20 ; ' '
000000000000161b         db  0x00 ; '.'
000000000000161c         db  0x00 ; '.'
000000000000161d         db  0x00 ; '.'
000000000000161e         db  0x00 ; '.'
000000000000161f         db  0x00 ; '.'
0000000000001620         db  0x07 ; '.'
0000000000001621         db  0x00 ; '.'
0000000000001622         db  0x00 ; '.'
0000000000001623         db  0x00 ; '.'
0000000000001624         db  0x3a ; ':'
0000000000001625         db  0x00 ; '.'
0000000000001626         db  0x00 ; '.'
0000000000001627         db  0x00 ; '.'
0000000000001628         db  0x00 ; '.'
0000000000001629         db  0x00 ; '.'
000000000000162a         db  0x00 ; '.'
000000000000162b         db  0x00 ; '.'
000000000000162c         db  0x00 ; '.'
000000000000162d         db  0x00 ; '.'
000000000000162e         db  0x00 ; '.'
000000000000162f         db  0x00 ; '.'
0000000000001630         db  0xd0 ; '.'
0000000000001631         db  0x8f ; '.'
0000000000001632         db  0x20 ; ' '
0000000000001633         db  0x00 ; '.'
0000000000001634         db  0x00 ; '.'
0000000000001635         db  0x00 ; '.'
0000000000001636         db  0x00 ; '.'
0000000000001637         db  0x00 ; '.'
0000000000001638         db  0x07 ; '.'
0000000000001639         db  0x00 ; '.'
000000000000163a         db  0x00 ; '.'
000000000000163b         db  0x00 ; '.'
000000000000163c         db  0x3c ; '<'
000000000000163d         db  0x00 ; '.'
000000000000163e         db  0x00 ; '.'
000000000000163f         db  0x00 ; '.'
0000000000001640         db  0x00 ; '.'
0000000000001641         db  0x00 ; '.'
0000000000001642         db  0x00 ; '.'
0000000000001643         db  0x00 ; '.'
0000000000001644         db  0x00 ; '.'
0000000000001645         db  0x00 ; '.'
0000000000001646         db  0x00 ; '.'
0000000000001647         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x1648; 0x165f[ (23 bytes)
        ; File offset : [5704; 5727[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
0000000000001648         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
000000000000164c         mov        rax, qword [qword_208fe8]                   ; qword_208fe8
0000000000001653         test       rax, rax
0000000000001656         je         loc_165a

0000000000001658         call       rax

                     loc_165a:
000000000000165a         add        rsp, 0x8                                    ; CODE XREF=_init+14
000000000000165e         ret
                        ; endp
000000000000165f         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x1660; 0x19e0[ (896 bytes)
        ; File offset : [5728; 6624[ (896 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_1660:
0000000000001660         push       qword [qword_208e10]                        ; Begin of unwind block (FDE at 0x7bc4), qword_208e10, CODE XREF=sub_1676+5
0000000000001666         jmp        qword [qword_208e10+8]                      ; 0x208e18
                        ; endp
000000000000166c         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___uflow:        // __uflow
0000000000001670         jmp        qword [__uflow@GOT]                         ; __uflow, __uflow@GOT, CODE XREF=cut_file+358, cut_file+439, cut_file+1234, cut_file+1610, cut_file+1831, cut_file+1951, getndelim2+787
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1676:
0000000000001676         push       0x0
000000000000167b         jmp        loc_1660


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
0000000000001680         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=cut_file+1792, set_fields+1009, set_fields+1274, reset_fields+33, quotearg_n_options+277, quotearg_free+55, quotearg_free+82, quotearg_free+120, xrealloc+40
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1686:
0000000000001686         push       0x1
000000000000168b         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
0000000000001690         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=set_program_name+154, sub_4200+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1696:
0000000000001696         push       0x2
000000000000169b         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
00000000000016a0         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=main+932, cut_file+1375, close_stdout+22, quotearg_n_options+28, clone_quoting_options+7, quotearg_buffer+45, quotearg_alloc_mem+42, rpl_fclose+40, close_stream+60, close_stream+104
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16a6:
00000000000016a6         push       0x3
00000000000016ab         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
00000000000016b0         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+844, usage+1037
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16b6:
00000000000016b6         push       0x4
00000000000016bb         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
00000000000016c0         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16c6:
00000000000016c6         push       0x5
00000000000016cb         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
00000000000016d0         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16d6:
00000000000016d6         push       0x6
00000000000016db         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_ferror:        // ferror
00000000000016e0         jmp        qword [ferror@GOT]                          ; ferror, ferror@GOT, CODE XREF=freadseek+164
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16e6:
00000000000016e6         push       0x7
00000000000016eb         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qsort:        // qsort
00000000000016f0         jmp        qword [qsort@GOT]                           ; qsort, qsort@GOT, CODE XREF=set_fields+370
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16f6:
00000000000016f6         push       0x8
00000000000016fb         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_clearerr_unlocked:        // clearerr_unlocked
0000000000001700         jmp        qword [clearerr_unlocked@GOT]               ; clearerr_unlocked, clearerr_unlocked@GOT, CODE XREF=cut_file+1418
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1706:
0000000000001706         push       0x9
000000000000170b         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
0000000000001710         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+87
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1716:
0000000000001716         push       0xa
000000000000171b         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
0000000000001720         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1726:
0000000000001726         push       0xb
000000000000172b         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
0000000000001730         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+75
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1736:
0000000000001736         push       0xc
000000000000173b         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
0000000000001740         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+1076, usage+56, usage+102, usage+146, usage+183, usage+220, usage+257, usage+294, usage+331, usage+368, usage+405
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1746:
0000000000001746         push       0xd
000000000000174b         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
0000000000001750         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1756:
0000000000001756         push       0xe
000000000000175b         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
0000000000001760         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=quotearg_buffer_restyled+343, sub_4200+411, sub_4200+1742, xstrdup+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1766:
0000000000001766         push       0xf
000000000000176b         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
0000000000001770         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=getndelim2+890, sub_4200+2739, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137, quotearg_n_custom_mem+140, version_etc_va+101, version_etc+192, rpl_mbrtowc+126, freadseek+360
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1776:
0000000000001776         push       0x10
000000000000177b         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
0000000000001780         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+158
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1786:
0000000000001786         push       0x11
000000000000178b         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
0000000000001790         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1796:
0000000000001796         push       0x12
000000000000179b         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___overflow:        // __overflow
00000000000017a0         jmp        qword [__overflow@GOT]                      ; __overflow, __overflow@GOT, CODE XREF=cut_file+651, cut_file+1754, cut_file+1767, cut_file+1885, cut_file+1902, cut_file+1979
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17a6:
00000000000017a6         push       0x13
00000000000017ab         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
00000000000017b0         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17b6:
00000000000017b6         push       0x14
00000000000017bb         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
00000000000017c0         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=rpl_fclose+89, j_j_fseeko+49, freadseek+329
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17c6:
00000000000017c6         push       0x15
00000000000017cb         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___assert_fail:        // __assert_fail
00000000000017d0         jmp        qword [__assert_fail@GOT]                   ; __assert_fail, __assert_fail@GOT, CODE XREF=cut_file+2018
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17d6:
00000000000017d6         push       0x16
00000000000017db         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
00000000000017e0         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17e6:
00000000000017e6         push       0x17
00000000000017eb         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fgetc:        // fgetc
00000000000017f0         jmp        qword [fgetc@GOT]                           ; fgetc, fgetc@GOT, CODE XREF=freadseek+151
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_17f6:
00000000000017f6         push       0x18
00000000000017fb         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strspn:        // strspn
0000000000001800         jmp        qword [strspn@GOT]                          ; strspn, strspn@GOT, CODE XREF=set_fields+1198
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1806:
0000000000001806         push       0x19
000000000000180b         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_posix_fadvise:        // posix_fadvise
0000000000001810         jmp        qword [posix_fadvise@GOT]                   ; posix_fadvise, posix_fadvise@GOT, CODE XREF=fdadvise, fadvise+22
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1816:
0000000000001816         push       0x1a
000000000000181b         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memchr:        // memchr
0000000000001820         jmp        qword [memchr@GOT]                          ; memchr, memchr@GOT, CODE XREF=memchr2+423
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1826:
0000000000001826         push       0x1b
000000000000182b         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strndup:        // strndup
0000000000001830         jmp        qword [strndup@GOT]                         ; strndup, strndup@GOT, CODE XREF=xstrndup+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1836:
0000000000001836         push       0x1c
000000000000183b         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
0000000000001840         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=quotearg_buffer_restyled+410
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1846:
0000000000001846         push       0x1d
000000000000184b         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
0000000000001850         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+157, usage+194, usage+231, usage+268, usage+305, usage+342, usage+379, usage+416, usage+453, usage+490, usage+527
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1856:
0000000000001856         push       0x1e
000000000000185b         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
0000000000001860         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1866:
0000000000001866         push       0x1f
000000000000186b         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
0000000000001870         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=getndelim2+326, xmemdup+35
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1876:
0000000000001876         push       0x20
000000000000187b         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
0000000000001880         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=fadvise+8, rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36, freadseek+235
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1886:
0000000000001886         push       0x21
000000000000188b         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
0000000000001890         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=getndelim2+753, xmalloc+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1896:
0000000000001896         push       0x22
000000000000189b         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
00000000000018a0         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18a6:
00000000000018a6         push       0x23
00000000000018ab         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
00000000000018b0         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18b6:
00000000000018b6         push       0x24
00000000000018bb         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_ungetc:        // ungetc
00000000000018c0         jmp        qword [ungetc@GOT]                          ; ungetc, ungetc@GOT, CODE XREF=cut_file+136, cut_file+817, cut_file+1214
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18c6:
00000000000018c6         push       0x25
00000000000018cb         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
00000000000018d0         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18d6:
00000000000018d6         push       0x26
00000000000018db         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite_unlocked:        // fwrite_unlocked
00000000000018e0         jmp        qword [fwrite_unlocked@GOT]                 ; fwrite_unlocked, fwrite_unlocked@GOT, CODE XREF=cut_file+243, cut_file+571, cut_file+1148, cut_file+1931
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18e6:
00000000000018e6         push       0x27
00000000000018eb         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
00000000000018f0         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=getndelim2+612, xrealloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_18f6:
00000000000018f6         push       0x28
00000000000018fb         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
0000000000001900         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+56, usage+819, usage+1012, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1906:
0000000000001906         push       0x29
000000000000190b         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
0000000000001910         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=usage+120, usage+807, usage+900, usage+961, usage+1000, usage+1103, emit_bug_reporting_address+37, emit_bug_reporting_address+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1916:
0000000000001916         push       0x2a
000000000000191b         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fread_chk:        // __fread_chk
0000000000001920         jmp        qword [__fread_chk@GOT]                     ; __fread_chk, __fread_chk@GOT, CODE XREF=freadseek+302
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1926:
0000000000001926         push       0x2b
000000000000192b         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memmove:        // memmove
0000000000001930         jmp        qword [memmove@GOT]                         ; memmove, memmove@GOT, CODE XREF=set_fields+493
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1936:
0000000000001936         push       0x2c
000000000000193b         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
0000000000001940         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+953, main+1090, cut_file+1396, set_fields+1097, set_fields+1266, set_fields+1421, close_stdout+125, close_stdout+157, xalloc_die+43
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1946:
0000000000001946         push       0x2d
000000000000194b         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
0000000000001950         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1956:
0000000000001956         push       0x2e
000000000000195b         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fopen:        // fopen
0000000000001960         jmp        qword [fopen@GOT]                           ; fopen, fopen@GOT, CODE XREF=cut_file+1339
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1966:
0000000000001966         push       0x2f
000000000000196b         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000001970         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1976:
0000000000001976         push       0x30
000000000000197b         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000001980         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+314, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1986:
0000000000001986         push       0x31
000000000000198b         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
0000000000001990         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1996:
0000000000001996         push       0x32
000000000000199b         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
00000000000019a0         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=usage+81, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642, version_etc_arn+718, version_etc_arn+872
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19a6:
00000000000019a6         push       0x33
00000000000019ab         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
00000000000019b0         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_4200+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19b6:
00000000000019b6         push       0x34
00000000000019bb         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
00000000000019c0         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_4200+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19c6:
00000000000019c6         push       0x35
00000000000019cb         jmp        0x1660
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
00000000000019d0         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=set_fields+107, sub_3fa0+51
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19d6:
00000000000019d6         push       0x36
00000000000019db         jmp        0x1660
                        ; endp


        ; Section .plt.got
        ; Range: [0x19e0; 0x19e8[ (8 bytes)
        ; File offset : [6624; 6632[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_208ff8:        // qword_208ff8
00000000000019e0         jmp        qword [qword_208ff8]                        ; qword, End of unwind block (FDE at 0x7bc4), Begin of unwind block (FDE at 0x7bec), qword_208ff8, CODE XREF=__do_global_dtors_aux+30
                        ; endp
00000000000019e6         align      8
00000000000019e8         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x7bec)
00000000000019e9         db  0x00 ; '.'
00000000000019ea         db  0x00 ; '.'
00000000000019eb         db  0x00 ; '.'
00000000000019ec         db  0x00 ; '.'
00000000000019ed         db  0x00 ; '.'
00000000000019ee         db  0x00 ; '.'
00000000000019ef         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x19f0; 0x645e[ (19054 bytes)
        ; File offset : [6640; 25694[ (19054 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     main:
00000000000019f0         push       r15                                         ; Begin of unwind block (FDE at 0x7cbc), DATA XREF=_start+29
00000000000019f2         push       r14
00000000000019f4         xor        r14d, r14d
00000000000019f7         push       r13
00000000000019f9         push       r12
00000000000019fb         lea        r13, qword [longopts]                       ; longopts
0000000000001a02         push       rbp
0000000000001a03         push       rbx
0000000000001a04         mov        ebp, edi
0000000000001a06         mov        rbx, rsi
0000000000001a09         lea        r12, qword [aJimMeyering+13]                ; 0x6598
0000000000001a10         sub        rsp, 0x8
0000000000001a14         mov        rdi, qword [rsi]
0000000000001a17         call       set_program_name                            ; set_program_name
0000000000001a1c         lea        rsi, qword [aWrittenBySSAnd+27]             ; argument "__locale" for method j_setlocale, 0x75a1
0000000000001a23         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
0000000000001a28         call       j_setlocale                                 ; setlocale
0000000000001a2d         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
0000000000001a34         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
0000000000001a3b         call       j_bindtextdomain                            ; bindtextdomain
0000000000001a40         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
0000000000001a47         call       j_textdomain                                ; textdomain
0000000000001a4c         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
0000000000001a53         call       atexit                                      ; atexit
0000000000001a58         mov        dword [operating_mode], 0x0                 ; operating_mode
0000000000001a62         mov        byte [suppress_non_delimited], 0x0          ; suppress_non_delimited
0000000000001a69         mov        byte [delim], 0x0                           ; delim
0000000000001a70         mov        byte [have_read_stdin], 0x0                 ; have_read_stdin
0000000000001a77         nop        word [rax+rax]

                     loc_1a80:
0000000000001a80         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long, CODE XREF=main+197, main+215, main+349, main+391, main+431, main+485, main+503, main+579
0000000000001a83         mov        rcx, r13                                    ; argument "__longopts" for method j_getopt_long
0000000000001a86         mov        rdx, r12                                    ; argument "__shortopts" for method j_getopt_long
0000000000001a89         mov        rsi, rbx                                    ; argument "___argv" for method j_getopt_long
0000000000001a8c         mov        edi, ebp                                    ; argument "___argc" for method j_getopt_long
0000000000001a8e         call       j_getopt_long                               ; getopt_long
0000000000001a93         cmp        eax, 0xffffffff
0000000000001a96         je         loc_1c38

0000000000001a9c         cmp        eax, 0x66
0000000000001a9f         je         loc_1b58

0000000000001aa5         jle        loc_1ad0

0000000000001aa7         cmp        eax, 0x7a
0000000000001aaa         je         loc_1be0

0000000000001ab0         jg         loc_1b30

0000000000001ab2         cmp        eax, 0x6e
0000000000001ab5         je         loc_1a80

0000000000001ab7         cmp        eax, 0x73
0000000000001aba         jne        loc_1e37

0000000000001ac0         mov        byte [suppress_non_delimited], 0x1          ; suppress_non_delimited
0000000000001ac7         jmp        loc_1a80
0000000000001ac9         align      16

                     loc_1ad0:
0000000000001ad0         cmp        eax, 0x63                                   ; CODE XREF=main+181
0000000000001ad3         jg         loc_1ba8

0000000000001ad9         cmp        eax, 0x62
0000000000001adc         jge        loc_1b80

0000000000001ae2         cmp        eax, 0xffffff7d
0000000000001ae7         jne        loc_1e08

0000000000001aed         lea        rax, qword [aJimMeyering]                   ; "Jim Meyering"
0000000000001af4         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001afb         mov        rcx, qword [Version]                        ; Version
0000000000001b02         push       0x0
0000000000001b04         lea        r9, qword [aDavidMackenzie]                 ; "David MacKenzie"
0000000000001b0b         lea        r8, qword [aDavidMIhnat]                    ; "David M. Ihnat"
0000000000001b12         push       rax
0000000000001b13         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6527
0000000000001b1a         lea        rsi, qword [aNbytes0+13]                    ; 0x64ad
0000000000001b21         xor        eax, eax
0000000000001b23         call       version_etc                                 ; version_etc
0000000000001b28         xor        edi, edi                                    ; argument "__status" for method j_exit
0000000000001b2a         call       j_exit                                      ; exit
                        ; endp
0000000000001b2f         align      16

                     loc_1b30:
0000000000001b30         cmp        eax, 0x80                                   ; CODE XREF=main+192
0000000000001b35         je         loc_1bf0

0000000000001b3b         cmp        eax, 0x81
0000000000001b40         jne        loc_1e37

0000000000001b46         mov        byte [complement], 0x1                      ; complement
0000000000001b4d         jmp        loc_1a80
0000000000001b52         align      8

                     loc_1b58:
0000000000001b58         mov        ecx, dword [operating_mode]                 ; operating_mode, CODE XREF=main+175
0000000000001b5e         test       ecx, ecx
0000000000001b60         jne        loc_1e51

0000000000001b66         mov        dword [operating_mode], 0x2                 ; operating_mode
0000000000001b70         mov        r15, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000001b77         jmp        loc_1a80
0000000000001b7c         align      128

                     loc_1b80:
0000000000001b80         mov        esi, dword [operating_mode]                 ; operating_mode, CODE XREF=main+236
0000000000001b86         test       esi, esi
0000000000001b88         jne        loc_1e51

0000000000001b8e         mov        dword [operating_mode], 0x1                 ; operating_mode
0000000000001b98         mov        r15, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000001b9f         jmp        loc_1a80
0000000000001ba4         align      8

                     loc_1ba8:
0000000000001ba8         cmp        eax, 0x64                                   ; CODE XREF=main+227
0000000000001bab         jne        loc_1e37

0000000000001bb1         mov        rdx, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000001bb8         movzx      eax, byte [rdx]
0000000000001bbb         test       al, al
0000000000001bbd         je         loc_1bc9

0000000000001bbf         cmp        byte [rdx+1], 0x0
0000000000001bc3         jne        loc_1e16

                     loc_1bc9:
0000000000001bc9         mov        byte [delim], al                            ; delim, CODE XREF=main+461
0000000000001bcf         mov        r14d, 0x1
0000000000001bd5         jmp        loc_1a80
0000000000001bda         align      32

                     loc_1be0:
0000000000001be0         mov        byte [line_delim], 0x0                      ; line_delim, CODE XREF=main+186
0000000000001be7         jmp        loc_1a80
0000000000001bec         align      16

                     loc_1bf0:
0000000000001bf0         mov        rdx, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5, CODE XREF=main+325
0000000000001bf7         mov        byte [output_delimiter_specified], 0x1      ; output_delimiter_specified
0000000000001bfe         mov        eax, 0x1
0000000000001c03         cmp        byte [rdx], 0x0
0000000000001c06         je         loc_1c1d

0000000000001c08         xor        eax, eax
0000000000001c0a         or         rcx, 0xffffffffffffffff
0000000000001c0e         mov        rdi, rdx
0000000000001c11         repne scasb al, byte [rdi]
0000000000001c13         mov        rax, rcx
0000000000001c16         not        rax
0000000000001c19         sub        rax, 0x1

                     loc_1c1d:
0000000000001c1d         mov        rdi, rdx                                    ; CODE XREF=main+534
0000000000001c20         mov        qword [output_delimiter_length], rax        ; output_delimiter_length
0000000000001c27         call       xstrdup                                     ; xstrdup
0000000000001c2c         mov        qword [output_delimiter_string], rax        ; output_delimiter_string
0000000000001c33         jmp        loc_1a80

                     loc_1c38:
0000000000001c38         mov        eax, dword [operating_mode]                 ; operating_mode, CODE XREF=main+166
0000000000001c3e         mov        edx, 0x5
0000000000001c43         lea        rsi, qword [aYouMustSpecify]                ; "you must specify a list of bytes, characters, or fields"
0000000000001c4a         test       eax, eax
0000000000001c4c         je         loc_1e22

0000000000001c52         test       r14b, r14b
0000000000001c55         je         loc_1c92

0000000000001c57         cmp        eax, 0x2
0000000000001c5a         mov        edx, 0x5
0000000000001c5f         lea        rsi, qword [aAnInputDelimit]                ; "an input delimiter may be specified only when operating on fields"
0000000000001c66         jne        loc_1e22

0000000000001c6c         cmp        byte [suppress_non_delimited], 0x0          ; suppress_non_delimited
0000000000001c73         je         loc_1d62

0000000000001c79         cmp        byte [complement], 0x0                      ; complement
0000000000001c80         jne        loc_1d71

0000000000001c86         xor        esi, esi
0000000000001c88         mov        rdi, r15
0000000000001c8b         call       set_fields                                  ; set_fields
0000000000001c90         jmp        loc_1ccc

                     loc_1c92:
0000000000001c92         cmp        byte [suppress_non_delimited], 0x0          ; suppress_non_delimited, CODE XREF=main+613
0000000000001c99         jne        loc_1d2e

0000000000001c9f         xor        esi, esi
0000000000001ca1         cmp        eax, 0x2
0000000000001ca4         setne      sil
0000000000001ca8         shl        esi, 0x2
0000000000001cab         cmp        byte [complement], 0x0                      ; complement
0000000000001cb2         jne        loc_1e41

                     loc_1cb8:
0000000000001cb8         mov        rdi, r15                                    ; CODE XREF=main+891
0000000000001cbb         call       set_fields                                  ; set_fields
0000000000001cc0         test       r14b, r14b
0000000000001cc3         jne        loc_1ccc

                     loc_1cc5:
0000000000001cc5         mov        byte [delim], 0x9                           ; delim, CODE XREF=main+877, main+1043, main+1116

                     loc_1ccc:
0000000000001ccc         cmp        qword [output_delimiter_string], 0x0        ; output_delimiter_string, CODE XREF=main+672, main+723, main+910
0000000000001cd4         je         loc_1db3

                     loc_1cda:
0000000000001cda         mov        eax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+1008
0000000000001ce0         cmp        eax, ebp
0000000000001ce2         je         loc_1de5

0000000000001ce8         mov        r12d, 0x1
0000000000001cee         jge        loc_1d11

                     loc_1cf0:
0000000000001cf0         cdqe                                                   ; CODE XREF=main+799
0000000000001cf2         mov        rdi, qword [rbx+rax*8]
0000000000001cf6         call       cut_file                                    ; cut_file
0000000000001cfb         and        r12d, eax
0000000000001cfe         mov        eax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5
0000000000001d04         add        eax, 0x1
0000000000001d07         cmp        eax, ebp
0000000000001d09         mov        dword [optind@@GLIBC_2.2.5], eax            ; optind@@GLIBC_2.2.5
0000000000001d0f         jl         loc_1cf0

                     loc_1d11:
0000000000001d11         cmp        byte [have_read_stdin], 0x0                 ; have_read_stdin, CODE XREF=main+766, main+1028
0000000000001d18         jne        loc_1d83

                     loc_1d1a:
0000000000001d1a         xor        r12d, 0x1                                   ; CODE XREF=main+930, main+958
0000000000001d1e         pop        rdx
0000000000001d1f         movzx      eax, r12b
0000000000001d23         pop        rbx
0000000000001d24         pop        rbp
0000000000001d25         pop        r12
0000000000001d27         pop        r13
0000000000001d29         pop        r14
0000000000001d2b         pop        r15
0000000000001d2d         ret
                        ; endp

                     loc_1d2e:
0000000000001d2e         cmp        eax, 0x2                                    ; CODE XREF=main+681
0000000000001d31         mov        edx, 0x5
0000000000001d36         lea        rsi, qword [aSuppressingNon]                ; "suppressing non-delimited lines makes sense\\n\\tonly when operating on fields"
0000000000001d3d         jne        loc_1e22

0000000000001d43         cmp        byte [complement], 0x0                      ; complement
0000000000001d4a         je         loc_1df9

0000000000001d50         mov        esi, 0x2
0000000000001d55         mov        rdi, r15
0000000000001d58         call       set_fields                                  ; set_fields
0000000000001d5d         jmp        loc_1cc5

                     loc_1d62:
0000000000001d62         xor        esi, esi                                    ; CODE XREF=main+643
0000000000001d64         cmp        byte [complement], 0x0                      ; complement
0000000000001d6b         je         loc_1cb8

                     loc_1d71:
0000000000001d71         mov        esi, 0x2                                    ; CODE XREF=main+656
0000000000001d76         mov        rdi, r15
0000000000001d79         call       set_fields                                  ; set_fields
0000000000001d7e         jmp        loc_1ccc

                     loc_1d83:
0000000000001d83         mov        rdi, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5, CODE XREF=main+808
0000000000001d8a         call       rpl_fclose                                  ; rpl_fclose
0000000000001d8f         add        eax, 0x1
0000000000001d92         jne        loc_1d1a

0000000000001d94         call       j___errno_location                          ; __errno_location
0000000000001d99         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001d9b         lea        rdx, qword [aLibs+10]                       ; argument "__format" for method j_error, 0x7062
0000000000001da2         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001da4         xor        eax, eax
0000000000001da6         xor        r12d, r12d
0000000000001da9         call       j_error                                     ; error
0000000000001dae         jmp        loc_1d1a

                     loc_1db3:
0000000000001db3         movzx      eax, byte [delim]                           ; delim, CODE XREF=main+740
0000000000001dba         mov        byte [byte_2090f1], 0x0                     ; byte_2090f1
0000000000001dc1         mov        qword [output_delimiter_length], 0x1        ; output_delimiter_length
0000000000001dcc         mov        byte [dummy.7081], al                       ; dummy.7081
0000000000001dd2         lea        rax, qword [dummy.7081]                     ; dummy.7081
0000000000001dd9         mov        qword [output_delimiter_string], rax        ; output_delimiter_string
0000000000001de0         jmp        loc_1cda

                     loc_1de5:
0000000000001de5         lea        rdi, qword [aLibs+10]                       ; 0x7062, CODE XREF=main+754
0000000000001dec         call       cut_file                                    ; cut_file
0000000000001df1         mov        r12d, eax
0000000000001df4         jmp        loc_1d11

                     loc_1df9:
0000000000001df9         xor        esi, esi                                    ; CODE XREF=main+858
0000000000001dfb         mov        rdi, r15
0000000000001dfe         call       set_fields                                  ; set_fields
0000000000001e03         jmp        loc_1cc5

                     loc_1e08:
0000000000001e08         cmp        eax, 0xffffff7e                             ; CODE XREF=main+247
0000000000001e0d         jne        loc_1e37

0000000000001e0f         xor        edi, edi                                    ; argument #1 for method usage
0000000000001e11         call       usage                                       ; usage

                     loc_1e16:
0000000000001e16         lea        rsi, qword [aTheDelimiterMu]                ; "the delimiter must be a single character", CODE XREF=main+467
0000000000001e1d         mov        edx, 0x5

                     loc_1e22:
0000000000001e22         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=main+604, main+630, main+845, main+1133
0000000000001e24         call       j_dcgettext                                 ; dcgettext
0000000000001e29         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001e2b         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001e2e         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001e30         xor        eax, eax
0000000000001e32         call       j_error                                     ; error

                     loc_1e37:
0000000000001e37         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=main+202, main+336, main+443, main+1053
0000000000001e3c         call       usage                                       ; usage

                     loc_1e41:
0000000000001e41         or         esi, 0x2                                    ; CODE XREF=main+706
0000000000001e44         mov        rdi, r15
0000000000001e47         call       set_fields                                  ; set_fields
0000000000001e4c         jmp        loc_1cc5

                     loc_1e51:
0000000000001e51         mov        edx, 0x5                                    ; CODE XREF=main+368, main+408
0000000000001e56         lea        rsi, qword [aOnlyOneTypeOfL]                ; "only one type of list may be specified"
0000000000001e5d         jmp        loc_1e22
0000000000001e5f         align      32                                          ; End of unwind block (FDE at 0x7cbc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
0000000000001e60         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x7b94)
0000000000001e62         mov        r9, rdx
0000000000001e65         pop        rsi
0000000000001e66         mov        rdx, rsp
0000000000001e69         and        rsp, 0xfffffffffffffff0
0000000000001e6d         push       rax
0000000000001e6e         push       rsp
0000000000001e6f         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
0000000000001e76         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
0000000000001e7d         lea        rdi, qword [main]                           ; main
0000000000001e84         call       qword [qword_208fd8+8]                      ; 0x208fe0
0000000000001e8a         hlt
                        ; endp
0000000000001e8b         align      16                                          ; End of unwind block (FDE at 0x7b94)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000001e90         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
0000000000001e97         push       rbp
0000000000001e98         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000001e9f         cmp        rax, rdi
0000000000001ea2         mov        rbp, rsp
0000000000001ea5         je         loc_1ec0

0000000000001ea7         mov        rax, qword [qword_208fd8]                   ; qword_208fd8
0000000000001eae         test       rax, rax
0000000000001eb1         je         loc_1ec0

0000000000001eb3         pop        rbp
0000000000001eb4         jmp        rax
                        ; endp
0000000000001eb6         align      64

                     loc_1ec0:
0000000000001ec0         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
0000000000001ec1         ret
                        ; endp
0000000000001ec2         align      16

                     register_tm_clones:
0000000000001ed0         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
0000000000001ed7         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000001ede         push       rbp
0000000000001edf         sub        rsi, rdi
0000000000001ee2         mov        rbp, rsp
0000000000001ee5         sar        rsi, 0x3
0000000000001ee9         mov        rax, rsi
0000000000001eec         shr        rax, 0x3f
0000000000001ef0         add        rsi, rax
0000000000001ef3         sar        rsi, 0x1
0000000000001ef6         je         loc_1f10

0000000000001ef8         mov        rax, qword [qword_208ff0]                   ; qword_208ff0
0000000000001eff         test       rax, rax
0000000000001f02         je         loc_1f10

0000000000001f04         pop        rbp
0000000000001f05         jmp        rax
                        ; endp
0000000000001f07         align      16

                     loc_1f10:
0000000000001f10         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000001f11         ret
                        ; endp
0000000000001f12         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
0000000000001f20         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
0000000000001f27         jne        loc_1f58

0000000000001f29         cmp        qword [qword_208ff8], 0x0                   ; qword_208ff8
0000000000001f31         push       rbp
0000000000001f32         mov        rbp, rsp
0000000000001f35         je         loc_1f43

0000000000001f37         mov        rdi, qword [__dso_handle]                   ; __dso_handle
0000000000001f3e         call       j_qword_208ff8                              ; qword_208ff8

                     loc_1f43:
0000000000001f43         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
0000000000001f48         mov        byte [completed.7697], 0x1                  ; completed.7697
0000000000001f4f         pop        rbp
0000000000001f50         ret
                        ; endp
0000000000001f51         align      8

                     loc_1f58:
0000000000001f58         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
0000000000001f5a         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000001f60         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000001f61         mov        rbp, rsp
0000000000001f64         pop        rbp
0000000000001f65         jmp        register_tm_clones                          ; register_tm_clones
0000000000001f6a         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_48: int64_t, -72


                     cut_file:
0000000000001f70         push       r15                                         ; Begin of unwind block (FDE at 0x7c04), CODE XREF=main+774, main+1020
0000000000001f72         push       r14
0000000000001f74         mov        rsi, rdi
0000000000001f77         push       r13
0000000000001f79         push       r12
0000000000001f7b         mov        ecx, 0x2
0000000000001f80         push       rbp
0000000000001f81         push       rbx
0000000000001f82         sub        rsp, 0x18
0000000000001f86         mov        qword [rsp+0x48+var_48], rdi
0000000000001f8a         lea        rdi, qword [aLibs+10]                       ; 0x7062
0000000000001f91         rep  cmpsb byte [rsi], byte [rdi]
0000000000001f93         seta       al
0000000000001f96         sbb        al, 0x0
0000000000001f98         test       al, al
0000000000001f9a         jne        loc_24a0

0000000000001fa0         mov        r15, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5
0000000000001fa7         mov        byte [have_read_stdin], 0x1                 ; have_read_stdin

                     loc_1fae:
0000000000001fae         mov        esi, 0x2                                    ; argument #2 for method fadvise, CODE XREF=cut_file+1350
0000000000001fb3         mov        rdi, r15                                    ; argument #1 for method fadvise
0000000000001fb6         call       fadvise                                     ; fadvise
0000000000001fbb         cmp        dword [operating_mode], 0x1                 ; operating_mode
0000000000001fc2         mov        rax, qword [frp]                            ; frp
0000000000001fc9         mov        qword [current_rp], rax                     ; current_rp
0000000000001fd0         je         loc_2513

0000000000001fd6         mov        rax, qword [r15+8]
0000000000001fda         cmp        rax, qword [r15+0x10]
0000000000001fde         jae        loc_243f

0000000000001fe4         lea        rdx, qword [rax+1]
0000000000001fe8         mov        qword [r15+8], rdx
0000000000001fec         movzx      edi, byte [rax]

                     loc_1fef:
0000000000001fef         mov        rsi, r15                                    ; argument "__stream" for method j_ungetc, CODE XREF=cut_file+1244
0000000000001ff2         mov        r13d, 0x1
0000000000001ff8         call       j_ungetc                                    ; ungetc
0000000000001ffd         mov        rax, qword [current_rp]                     ; current_rp
0000000000002004         cmp        qword [rax], 0x1
0000000000002008         seta       bpl
000000000000200c         xor        bpl, byte [suppress_non_delimited]          ; suppress_non_delimited
0000000000002013         xor        r12d, r12d
0000000000002016         xor        r14d, r14d
0000000000002019         nop        dword [rax]

                     loc_2020:
0000000000002020         cmp        r13, 0x1                                    ; CODE XREF=cut_file+640, cut_file+746, cut_file+763, cut_file+899, cut_file+1009, cut_file+1129
0000000000002024         sete       bl
0000000000002027         and        bl, bpl
000000000000202a         jne        loc_2130

0000000000002030         mov        rax, qword [current_rp]                     ; current_rp

                     loc_2037:
0000000000002037         cmp        qword [rax], r13                            ; CODE XREF=cut_file+712, cut_file+1113
000000000000203a         ja         loc_211a

0000000000002040         test       r12b, r12b
0000000000002043         je         loc_20c9

0000000000002049         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5
0000000000002050         mov        rdx, qword [output_delimiter_length]        ; argument "__n" for method j_fwrite_unlocked, output_delimiter_length
0000000000002057         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
000000000000205c         mov        rdi, qword [output_delimiter_string]        ; argument "__ptr" for method j_fwrite_unlocked, output_delimiter_string
0000000000002063         call       j_fwrite_unlocked                           ; fwrite_unlocked
0000000000002068         jmp        loc_20c9
000000000000206a         align      16

                     loc_2070:
0000000000002070         lea        rdx, qword [rax+1]                          ; CODE XREF=cut_file+353
0000000000002074         mov        qword [r15+8], rdx
0000000000002078         movzx      ebx, byte [rax]

                     loc_207b:
000000000000207b         movzx      eax, byte [delim]                           ; delim, CODE XREF=cut_file+365
0000000000002082         movzx      edx, byte [line_delim]                      ; line_delim
0000000000002089         cmp        ebx, eax
000000000000208b         mov        esi, eax
000000000000208d         je         loc_2270

0000000000002093         movzx      eax, dl
0000000000002096         cmp        ebx, eax
0000000000002098         je         loc_2370

000000000000209e         cmp        ebx, 0xffffffff
00000000000020a1         je         loc_23a0

00000000000020a7         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000020ae         mov        rax, qword [rdi+0x28]
00000000000020b2         cmp        rax, qword [rdi+0x30]
00000000000020b6         jae        loc_21f8

00000000000020bc         lea        rdx, qword [rax+1]
00000000000020c0         mov        qword [rdi+0x28], rdx
00000000000020c4         mov        byte [rax], bl

                     loc_20c6:
00000000000020c6         mov        r14d, ebx                                   ; CODE XREF=cut_file+656

                     loc_20c9:
00000000000020c9         mov        rax, qword [r15+8]                          ; CODE XREF=cut_file+211, cut_file+248
00000000000020cd         cmp        rax, qword [r15+0x10]
00000000000020d1         jb         loc_2070

00000000000020d3         mov        rdi, r15                                    ; argument #1 for method j___uflow
00000000000020d6         call       j___uflow                                   ; __uflow
00000000000020db         mov        ebx, eax
00000000000020dd         jmp        loc_207b
00000000000020df         align      32

                     loc_20e0:
00000000000020e0         lea        rdx, qword [rax+1]                          ; CODE XREF=cut_file+434
00000000000020e4         mov        qword [r15+8], rdx
00000000000020e8         movzx      eax, byte [rax]

                     loc_20eb:
00000000000020eb         movzx      ecx, byte [delim]                           ; delim, CODE XREF=cut_file+444
00000000000020f2         movzx      edx, byte [line_delim]                      ; line_delim
00000000000020f9         cmp        ecx, eax
00000000000020fb         mov        esi, ecx
00000000000020fd         je         loc_2240

0000000000002103         movzx      ecx, dl
0000000000002106         cmp        eax, ecx
0000000000002108         je         loc_22b8

000000000000210e         cmp        eax, 0xffffffff
0000000000002111         je         loc_23b8

0000000000002117         mov        r14d, eax

                     loc_211a:
000000000000211a         mov        rax, qword [r15+8]                          ; CODE XREF=cut_file+202
000000000000211e         cmp        rax, qword [r15+0x10]
0000000000002122         jb         loc_20e0

0000000000002124         mov        rdi, r15                                    ; argument #1 for method j___uflow
0000000000002127         call       j___uflow                                   ; __uflow
000000000000212c         jmp        loc_20eb
000000000000212e         align      16

                     loc_2130:
0000000000002130         movzx      r9d, byte [line_delim]                      ; argument #6 for method getndelim2, line_delim, CODE XREF=cut_file+186
0000000000002138         movzx      r8d, byte [delim]                           ; argument #5 for method getndelim2, delim
0000000000002140         sub        rsp, 0x8
0000000000002144         push       r15                                         ; argument #7 for method getndelim2
0000000000002146         lea        rsi, qword [field_1_bufsize]                ; argument #2 for method getndelim2, field_1_bufsize
000000000000214d         lea        rdi, qword [field_1_buffer]                 ; argument #1 for method getndelim2, field_1_buffer
0000000000002154         xor        edx, edx                                    ; argument #3 for method getndelim2
0000000000002156         mov        rcx, 0xffffffffffffffff                     ; argument #4 for method getndelim2
000000000000215d         call       getndelim2                                  ; getndelim2
0000000000002162         mov        r13, rax
0000000000002165         test       r13, r13
0000000000002168         pop        rax
0000000000002169         pop        rdx
000000000000216a         js         loc_2669

0000000000002170         je         loc_2738

0000000000002176         mov        rdi, qword [field_1_buffer]                 ; field_1_buffer
000000000000217d         movzx      eax, byte [delim]                           ; delim
0000000000002184         lea        rdx, qword [r13-1]
0000000000002188         cmp        byte [rdi+r13-1], al
000000000000218d         je         loc_2208

000000000000218f         cmp        byte [suppress_non_delimited], 0x0          ; suppress_non_delimited
0000000000002196         jne        loc_23d0

000000000000219c         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5
00000000000021a3         mov        rdx, r13                                    ; argument "__n" for method j_fwrite_unlocked
00000000000021a6         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
00000000000021ab         call       j_fwrite_unlocked                           ; fwrite_unlocked
00000000000021b0         mov        rdx, qword [field_1_buffer]                 ; field_1_buffer
00000000000021b7         movzx      r14d, byte [line_delim]                     ; line_delim
00000000000021bf         movsx      edx, byte [rdx+r13-1]
00000000000021c5         cmp        edx, r14d
00000000000021c8         je         loc_21ea

00000000000021ca         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000021d1         mov        rdx, qword [rdi+0x28]
00000000000021d5         cmp        rdx, qword [rdi+0x30]
00000000000021d9         jae        loc_2654

00000000000021df         lea        rcx, qword [rdx+1]
00000000000021e3         mov        qword [rdi+0x28], rcx
00000000000021e7         mov        byte [rdx], r14b

                     loc_21ea:
00000000000021ea         mov        r13d, 0x1                                   ; CODE XREF=cut_file+600, cut_file+1780
00000000000021f0         jmp        loc_2020
00000000000021f5         align      8

                     loc_21f8:
00000000000021f8         movzx      esi, bl                                     ; argument #2 for method j___overflow, CODE XREF=cut_file+326
00000000000021fb         call       j___overflow                                ; __overflow
0000000000002200         jmp        loc_20c6
0000000000002205         align      8

                     loc_2208:
0000000000002208         mov        rax, qword [current_rp]                     ; current_rp, CODE XREF=cut_file+541
000000000000220f         cmp        qword [rax], 0x1
0000000000002213         jbe        loc_23e0

                     loc_2219:
0000000000002219         cmp        qword [rax+8], 0x1                          ; CODE XREF=cut_file+1178, cut_file+1226, cut_file+1974
000000000000221e         ja         loc_23c0

0000000000002224         add        rax, 0x10
0000000000002228         mov        r13d, 0x2
000000000000222e         xor        r14d, r14d
0000000000002231         mov        qword [current_rp], rax                     ; current_rp
0000000000002238         jmp        loc_2037
000000000000223d         align      64

                     loc_2240:
0000000000002240         cmp        sil, dl                                     ; CODE XREF=cut_file+397
0000000000002243         mov        ecx, r14d
0000000000002246         mov        r14d, eax
0000000000002249         je         loc_2281

                     loc_224b:
000000000000224b         mov        rax, qword [current_rp]                     ; current_rp, CODE XREF=cut_file+783, cut_file+869
0000000000002252         add        r13, 0x1
0000000000002256         cmp        r13, qword [rax+8]
000000000000225a         jbe        loc_2020

0000000000002260         add        rax, 0x10
0000000000002264         mov        qword [current_rp], rax                     ; current_rp
000000000000226b         jmp        loc_2020

                     loc_2270:
0000000000002270         cmp        sil, dl                                     ; CODE XREF=cut_file+285
0000000000002273         mov        ecx, r14d
0000000000002276         mov        r12d, 0x1
000000000000227c         mov        r14d, ebx
000000000000227f         jne        loc_224b

                     loc_2281:
0000000000002281         mov        rax, qword [r15+8]                          ; CODE XREF=cut_file+729, cut_file+1058
0000000000002285         cmp        rax, qword [r15+0x10]
0000000000002289         jae        loc_2690

000000000000228f         lea        rdx, qword [rax+1]
0000000000002293         mov        qword [r15+8], rdx
0000000000002297         movzx      edi, byte [rax]

                     loc_229a:
000000000000229a         mov        rsi, r15                                    ; argument "__stream" for method j_ungetc, CODE XREF=cut_file+1845
000000000000229d         mov        dword [rsp+0x48+var_3C], ecx
00000000000022a1         call       j_ungetc                                    ; ungetc
00000000000022a6         movzx      eax, byte [delim]                           ; delim
00000000000022ad         mov        ecx, dword [rsp+0x48+var_3C]
00000000000022b1         mov        esi, eax
00000000000022b3         jmp        loc_22cb
00000000000022b5         align      8

                     loc_22b8:
00000000000022b8         cmp        sil, dl                                     ; CODE XREF=cut_file+408
00000000000022bb         mov        ecx, r14d
00000000000022be         mov        r14d, eax
00000000000022c1         movzx      eax, sil
00000000000022c5         je         loc_2389

                     loc_22cb:
00000000000022cb         cmp        eax, r14d                                   ; CODE XREF=cut_file+835, cut_file+1043
00000000000022ce         movzx      edx, byte [line_delim]                      ; line_delim
00000000000022d5         je         loc_224b

                     loc_22db:
00000000000022db         cmp        r14d, 0xffffffff                            ; CODE XREF=cut_file+1052, cut_file+1087
00000000000022df         movzx      eax, dl
00000000000022e2         sete       bl
00000000000022e5         cmp        eax, r14d
00000000000022e8         sete       dil
00000000000022ec         test       bl, bl
00000000000022ee         jne        loc_22f9

00000000000022f0         test       dil, dil
00000000000022f3         je         loc_2020

                     loc_22f9:
00000000000022f9         test       r12b, r12b                                  ; CODE XREF=cut_file+894, cut_file+1880
00000000000022fc         jne        loc_230d

00000000000022fe         cmp        byte [suppress_non_delimited], 0x1          ; suppress_non_delimited
0000000000002305         jne        loc_230d

0000000000002307         cmp        r13, 0x1
000000000000230b         je         loc_2342

                     loc_230d:
000000000000230d         cmp        eax, ecx                                    ; CODE XREF=cut_file+908, cut_file+917
000000000000230f         setne      r9b
0000000000002313         cmp        sil, dl
0000000000002316         sete       cl
0000000000002319         or         r9b, cl
000000000000231c         jne        loc_2323

000000000000231e         test       dil, dil
0000000000002321         je         loc_2342

                     loc_2323:
0000000000002323         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=cut_file+940
000000000000232a         mov        rcx, qword [rdi+0x28]
000000000000232e         cmp        rcx, qword [rdi+0x30]
0000000000002332         jae        loc_2648

0000000000002338         lea        rax, qword [rcx+1]
000000000000233c         mov        qword [rdi+0x28], rax
0000000000002340         mov        byte [rcx], dl

                     loc_2342:
0000000000002342         test       bl, bl                                      ; CODE XREF=cut_file+923, cut_file+945, cut_file+1759
0000000000002344         jne        loc_2458

000000000000234a         mov        rax, qword [frp]                            ; frp
0000000000002351         xor        r12d, r12d
0000000000002354         mov        r13d, 0x1
000000000000235a         mov        qword [current_rp], rax                     ; current_rp
0000000000002361         jmp        loc_2020
0000000000002366         align      16

                     loc_2370:
0000000000002370         cmp        sil, dl                                     ; CODE XREF=cut_file+296
0000000000002373         mov        ecx, r14d
0000000000002376         mov        r12d, 0x1
000000000000237c         mov        r14d, ebx
000000000000237f         movzx      eax, sil
0000000000002383         jne        loc_22cb

                     loc_2389:
0000000000002389         cmp        eax, r14d                                   ; CODE XREF=cut_file+853
000000000000238c         jne        loc_22db

0000000000002392         jmp        loc_2281
0000000000002397         align      32

                     loc_23a0:
00000000000023a0         mov        ecx, r14d                                   ; CODE XREF=cut_file+305
00000000000023a3         mov        r12d, 0x1

                     loc_23a9:
00000000000023a9         mov        r14d, 0xffffffff                            ; CODE XREF=cut_file+1099
00000000000023af         jmp        loc_22db
00000000000023b4         align      8

                     loc_23b8:
00000000000023b8         mov        ecx, r14d                                   ; CODE XREF=cut_file+417
00000000000023bb         jmp        loc_23a9
00000000000023bd         align      64

                     loc_23c0:
00000000000023c0         mov        r13d, 0x2                                   ; CODE XREF=cut_file+686
00000000000023c6         xor        r14d, r14d
00000000000023c9         jmp        loc_2037
00000000000023ce         align      16

                     loc_23d0:
00000000000023d0         mov        r13d, 0x1                                   ; CODE XREF=cut_file+550
00000000000023d6         xor        r14d, r14d
00000000000023d9         jmp        loc_2020
00000000000023de         align      32

                     loc_23e0:
00000000000023e0         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_fwrite_unlocked, stdout@@GLIBC_2.2.5, CODE XREF=cut_file+675
00000000000023e7         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
00000000000023ec         call       j_fwrite_unlocked                           ; fwrite_unlocked
00000000000023f1         movzx      eax, byte [line_delim]                      ; line_delim
00000000000023f8         cmp        byte [delim], al                            ; delim
00000000000023fe         je         loc_240f

0000000000002400         mov        rax, qword [current_rp]                     ; current_rp
0000000000002407         mov        r12d, ebx
000000000000240a         jmp        loc_2219

                     loc_240f:
000000000000240f         mov        rax, qword [r15+8]                          ; CODE XREF=cut_file+1166
0000000000002413         cmp        rax, qword [r15+0x10]
0000000000002417         jae        loc_270c

000000000000241d         lea        rdx, qword [rax+1]
0000000000002421         mov        qword [r15+8], rdx
0000000000002425         movzx      edi, byte [rax]

                     loc_2428:
0000000000002428         mov        rsi, r15                                    ; argument "__stream" for method j_ungetc, CODE XREF=cut_file+1961
000000000000242b         mov        r12d, ebx
000000000000242e         call       j_ungetc                                    ; ungetc
0000000000002433         mov        rax, qword [current_rp]                     ; current_rp
000000000000243a         jmp        loc_2219

                     loc_243f:
000000000000243f         mov        rdi, r15                                    ; argument #1 for method j___uflow, CODE XREF=cut_file+110
0000000000002442         call       j___uflow                                   ; __uflow
0000000000002447         cmp        eax, 0xffffffff
000000000000244a         mov        edi, eax
000000000000244c         jne        loc_1fef

0000000000002452         nop        word [rax+rax]

                     loc_2458:
0000000000002458         mov        eax, dword [r15]                            ; CODE XREF=cut_file+980, cut_file+1640

                     loc_245b:
000000000000245b         test       al, 0x20                                    ; CODE XREF=cut_file+1681, cut_file+1813, cut_file+1987
000000000000245d         jne        loc_24bc

000000000000245f         mov        rsi, qword [rsp+0x48+var_48]
0000000000002463         lea        rdi, qword [aLibs+10]                       ; 0x7062
000000000000246a         mov        ecx, 0x2
000000000000246f         rep  cmpsb byte [rsi], byte [rdi]
0000000000002471         mov        rdi, r15
0000000000002474         seta       al
0000000000002477         sbb        al, 0x0
0000000000002479         test       al, al
000000000000247b         je         loc_24fa

000000000000247d         call       rpl_fclose                                  ; rpl_fclose
0000000000002482         mov        edx, eax
0000000000002484         mov        eax, 0x1
0000000000002489         cmp        edx, 0xffffffff
000000000000248c         je         loc_24bc

000000000000248e         add        rsp, 0x18
0000000000002492         pop        rbx
0000000000002493         pop        rbp
0000000000002494         pop        r12
0000000000002496         pop        r13
0000000000002498         pop        r14
000000000000249a         pop        r15
000000000000249c         ret
                        ; endp
000000000000249d         align      32

                     loc_24a0:
00000000000024a0         mov        rdi, qword [rsp+0x48+var_48]                ; argument "__filename" for method j_fopen, CODE XREF=cut_file+42
00000000000024a4         lea        rsi, qword [aDelimiter+8]                   ; argument "__modes" for method j_fopen, 0x65d3
00000000000024ab         call       j_fopen                                     ; fopen
00000000000024b0         test       rax, rax
00000000000024b3         mov        r15, rax
00000000000024b6         jne        loc_1fae

                     loc_24bc:
00000000000024bc         mov        rdx, qword [rsp+0x48+var_48]                ; CODE XREF=cut_file+1261, cut_file+1308
00000000000024c0         mov        esi, 0x3
00000000000024c5         xor        edi, edi
00000000000024c7         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
00000000000024cc         mov        rbx, rax
00000000000024cf         call       j___errno_location                          ; __errno_location
00000000000024d4         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000024d6         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x7016
00000000000024dd         mov        rcx, rbx
00000000000024e0         xor        eax, eax
00000000000024e2         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000024e4         call       j_error                                     ; error
00000000000024e9         add        rsp, 0x18
00000000000024ed         xor        eax, eax
00000000000024ef         pop        rbx
00000000000024f0         pop        rbp
00000000000024f1         pop        r12
00000000000024f3         pop        r13
00000000000024f5         pop        r14
00000000000024f7         pop        r15
00000000000024f9         ret
                        ; endp

                     loc_24fa:
00000000000024fa         call       j_clearerr_unlocked                         ; clearerr_unlocked, CODE XREF=cut_file+1291
00000000000024ff         add        rsp, 0x18
0000000000002503         mov        eax, 0x1
0000000000002508         pop        rbx
0000000000002509         pop        rbp
000000000000250a         pop        r12
000000000000250c         pop        r13
000000000000250e         pop        r14
0000000000002510         pop        r15
0000000000002512         ret
                        ; endp

                     loc_2513:
0000000000002513         xor        ebx, ebx                                    ; CODE XREF=cut_file+96
0000000000002515         xor        r12d, r12d
0000000000002518         nop        dword [rax+rax]

                     loc_2520:
0000000000002520         mov        rax, qword [r15+8]                          ; CODE XREF=cut_file+1530, cut_file+1747, cut_file+1907
0000000000002524         cmp        rax, qword [r15+0x10]
0000000000002528         jae        loc_25b7

                     loc_252e:
000000000000252e         lea        rdx, qword [rax+1]                          ; CODE XREF=cut_file+1601
0000000000002532         movzx      esi, byte [line_delim]                      ; line_delim
0000000000002539         mov        qword [r15+8], rdx
000000000000253d         movzx      ebp, byte [rax]
0000000000002540         cmp        ebp, esi
0000000000002542         je         loc_2610

                     loc_2548:
0000000000002548         mov        rax, qword [current_rp]                     ; current_rp, CODE XREF=cut_file+1631
000000000000254f         add        rbx, 0x1
0000000000002553         cmp        rbx, qword [rax+8]
0000000000002557         jbe        loc_2564

0000000000002559         add        rax, 0x10
000000000000255d         mov        qword [current_rp], rax                     ; current_rp

                     loc_2564:
0000000000002564         mov        rax, qword [rax]                            ; CODE XREF=cut_file+1511
0000000000002567         cmp        rbx, rax
000000000000256a         jb         loc_2520

000000000000256c         movzx      edx, byte [output_delimiter_specified]      ; output_delimiter_specified
0000000000002573         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000257a         test       dl, dl
000000000000257c         je         loc_2590

000000000000257e         cmp        rbx, rax
0000000000002581         sete       al
0000000000002584         and        r12b, al
0000000000002587         jne        loc_26e8

000000000000258d         mov        r12d, edx

                     loc_2590:
0000000000002590         mov        rax, qword [rcx+0x28]                       ; CODE XREF=cut_file+1548, cut_file+1943
0000000000002594         cmp        rax, qword [rcx+0x30]
0000000000002598         jae        loc_26d7

000000000000259e         lea        rdx, qword [rax+1]
00000000000025a2         mov        qword [rcx+0x28], rdx
00000000000025a6         mov        byte [rax], bpl
00000000000025a9         mov        rax, qword [r15+8]
00000000000025ad         cmp        rax, qword [r15+0x10]
00000000000025b1         jb         loc_252e

                     loc_25b7:
00000000000025b7         mov        rdi, r15                                    ; argument #1 for method j___uflow, CODE XREF=cut_file+1464
00000000000025ba         call       j___uflow                                   ; __uflow
00000000000025bf         movzx      esi, byte [line_delim]                      ; line_delim
00000000000025c6         mov        ebp, eax
00000000000025c8         cmp        ebp, esi
00000000000025ca         je         loc_2610

00000000000025cc         cmp        ebp, 0xffffffff
00000000000025cf         jne        loc_2548

00000000000025d5         test       rbx, rbx
00000000000025d8         je         loc_2458

00000000000025de         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000025e5         mov        rdx, qword [rdi+0x28]
00000000000025e9         cmp        rdx, qword [rdi+0x30]
00000000000025ed         jae        loc_272b

00000000000025f3         lea        rcx, qword [rdx+1]
00000000000025f7         mov        qword [rdi+0x28], rcx
00000000000025fb         mov        byte [rdx], sil
00000000000025fe         mov        eax, dword [r15]
0000000000002601         jmp        loc_245b
0000000000002606         align      16

                     loc_2610:
0000000000002610         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=cut_file+1490, cut_file+1626
0000000000002617         mov        rax, qword [rdi+0x28]
000000000000261b         cmp        rax, qword [rdi+0x30]
000000000000261f         jae        loc_26cd

0000000000002625         lea        rdx, qword [rax+1]
0000000000002629         mov        qword [rdi+0x28], rdx
000000000000262d         mov        byte [rax], sil

                     loc_2630:
0000000000002630         mov        rax, qword [frp]                            ; frp, CODE XREF=cut_file+1890
0000000000002637         xor        ebx, ebx
0000000000002639         xor        r12d, r12d
000000000000263c         mov        qword [current_rp], rax                     ; current_rp
0000000000002643         jmp        loc_2520

                     loc_2648:
0000000000002648         mov        esi, eax                                    ; argument #2 for method j___overflow, CODE XREF=cut_file+962
000000000000264a         call       j___overflow                                ; __overflow
000000000000264f         jmp        loc_2342

                     loc_2654:
0000000000002654         mov        esi, r14d                                   ; argument #2 for method j___overflow, CODE XREF=cut_file+617
0000000000002657         call       j___overflow                                ; __overflow
000000000000265c         movzx      r14d, byte [line_delim]                     ; line_delim
0000000000002664         jmp        loc_21ea

                     loc_2669:
0000000000002669         mov        rdi, qword [field_1_buffer]                 ; argument "__ptr" for method j_free, field_1_buffer, CODE XREF=cut_file+506
0000000000002670         call       j_free                                      ; free
0000000000002675         mov        eax, dword [r15]
0000000000002678         mov        qword [field_1_buffer], 0x0                 ; field_1_buffer
0000000000002683         test       al, 0x30
0000000000002685         jne        loc_245b

000000000000268b         call       xalloc_die                                  ; xalloc_die
                        ; endp

                     loc_2690:
0000000000002690         mov        rdi, r15                                    ; argument #1 for method j___uflow, CODE XREF=cut_file+793
0000000000002693         mov        dword [rsp+0x48+var_3C], ecx
0000000000002697         call       j___uflow                                   ; __uflow
000000000000269c         cmp        eax, 0xffffffff
000000000000269f         mov        edi, eax
00000000000026a1         mov        ecx, dword [rsp+0x48+var_3C]
00000000000026a5         jne        loc_229a

00000000000026ab         movzx      eax, byte [line_delim]                      ; line_delim
00000000000026b2         movzx      esi, byte [delim]                           ; delim
00000000000026b9         mov        r14d, 0xffffffff
00000000000026bf         xor        edi, edi
00000000000026c1         mov        ebx, 0x1
00000000000026c6         mov        edx, eax
00000000000026c8         jmp        loc_22f9

                     loc_26cd:
00000000000026cd         call       j___overflow                                ; __overflow, CODE XREF=cut_file+1711
00000000000026d2         jmp        loc_2630

                     loc_26d7:
00000000000026d7         movzx      esi, bpl                                    ; argument #2 for method j___overflow, CODE XREF=cut_file+1576
00000000000026db         mov        rdi, rcx                                    ; argument #1 for method j___overflow
00000000000026de         call       j___overflow                                ; __overflow
00000000000026e3         jmp        loc_2520

                     loc_26e8:
00000000000026e8         mov        rdx, qword [output_delimiter_length]        ; argument "__n" for method j_fwrite_unlocked, output_delimiter_length, CODE XREF=cut_file+1559
00000000000026ef         mov        rdi, qword [output_delimiter_string]        ; argument "__ptr" for method j_fwrite_unlocked, output_delimiter_string
00000000000026f6         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite_unlocked
00000000000026fb         call       j_fwrite_unlocked                           ; fwrite_unlocked
0000000000002700         mov        rcx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002707         jmp        loc_2590

                     loc_270c:
000000000000270c         mov        rdi, r15                                    ; argument #1 for method j___uflow, CODE XREF=cut_file+1191
000000000000270f         call       j___uflow                                   ; __uflow
0000000000002714         cmp        eax, 0xffffffff
0000000000002717         mov        edi, eax
0000000000002719         jne        loc_2428

000000000000271f         mov        rax, qword [current_rp]                     ; current_rp
0000000000002726         jmp        loc_2219

                     loc_272b:
000000000000272b         call       j___overflow                                ; __overflow, CODE XREF=cut_file+1661
0000000000002730         mov        eax, dword [r15]
0000000000002733         jmp        loc_245b

                     loc_2738:
0000000000002738         lea        rcx, qword [__PRETTY_FUNCTION__.7017]       ; argument "__function" for method j___assert_fail, "cut_fields", CODE XREF=cut_file+512
000000000000273f         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/cut.c"
0000000000002746         lea        rdi, qword [aNbytes0]                       ; argument "__assertion" for method j___assert_fail, "n_bytes != 0"
000000000000274d         mov        edx, 0x149                                  ; argument "__line" for method j___assert_fail
0000000000002752         call       j___assert_fail                             ; __assert_fail
                        ; endp
0000000000002757         align      32                                          ; End of unwind block (FDE at 0x7c04)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
0000000000002760         push       r13                                         ; Begin of unwind block (FDE at 0x7c90), CODE XREF=main+1057, main+1100, set_fields+1107, set_fields+1284, set_fields+1431
0000000000002762         push       r12
0000000000002764         mov        edx, 0x5
0000000000002769         push       rbp
000000000000276a         push       rbx
000000000000276b         mov        ebp, edi
000000000000276d         sub        rsp, 0x88
0000000000002774         mov        rbx, qword [program_name]                   ; program_name
000000000000277b         mov        rax, qword [fs:0x28]
0000000000002784         mov        qword [rsp+0xa8+var_30], rax
0000000000002789         xor        eax, eax
000000000000278b         test       edi, edi
000000000000278d         je         loc_27bd

000000000000278f         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
0000000000002796         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002798         call       j_dcgettext                                 ; dcgettext
000000000000279d         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
00000000000027a4         mov        rdx, rax
00000000000027a7         mov        rcx, rbx
00000000000027aa         mov        esi, 0x1
00000000000027af         xor        eax, eax
00000000000027b1         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_27b6:
00000000000027b6         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+966
00000000000027b8         call       j_exit                                      ; exit
                        ; endp

                     loc_27bd:
00000000000027bd         lea        rsi, qword [aUsageSOptionFi]                ; argument "msgid" for method j_dcgettext, "Usage: %s OPTION... [FILE]...\\n", CODE XREF=usage+45
00000000000027c4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000027c6         call       j_dcgettext                                 ; dcgettext
00000000000027cb         mov        rdx, rbx
00000000000027ce         mov        rsi, rax
00000000000027d1         mov        edi, 0x1
00000000000027d6         xor        eax, eax
00000000000027d8         call       j___printf_chk                              ; __printf_chk
00000000000027dd         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000027e4         lea        rsi, qword [aPrintSelectedP]                ; argument "msgid" for method j_dcgettext, "Print selected parts of lines from each FILE to standard output.\\n"
00000000000027eb         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000027f0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000027f2         call       j_dcgettext                                 ; dcgettext
00000000000027f7         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000027fa         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000027fd         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002802         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002809         lea        rsi, qword [aNwithNoFileOrW]                ; argument "msgid" for method j_dcgettext, "\\nWith no FILE, or when FILE is -, read standard input.\\n"
0000000000002810         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002815         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002817         call       j_dcgettext                                 ; dcgettext
000000000000281c         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000281f         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002822         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002827         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000282e         lea        rsi, qword [aNmandatoryArgu]                ; argument "msgid" for method j_dcgettext, "\\nMandatory arguments to long options are mandatory for short options too.\\n"
0000000000002835         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000283a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000283c         call       j_dcgettext                                 ; dcgettext
0000000000002841         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002844         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002847         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000284c         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002853         lea        rsi, qword [aBByteslistSele]                ; argument "msgid" for method j_dcgettext, "  -b, --bytes=LIST        select only these bytes\\n  -c, --characters=LIST   select only these characters\\n  -d, --delimiter=DELIM   use DELIM instead of TAB for field delimiter\\n"
000000000000285a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000285f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002861         call       j_dcgettext                                 ; dcgettext
0000000000002866         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002869         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000286c         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002871         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002878         lea        rsi, qword [aFFieldslistSel]                ; argument "msgid" for method j_dcgettext, "  -f, --fields=LIST       select only these fields;  also print any line\\n                            that contains no delimiter character, unless\\n                            the -s option is specified\\n  -n                      (ignored)\\n"
000000000000287f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002884         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002886         call       j_dcgettext                                 ; dcgettext
000000000000288b         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000288e         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002891         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002896         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000289d         lea        rsi, qword [aComplementComp]                ; argument "msgid" for method j_dcgettext, "      --complement        complement the set of selected bytes, characters\\n                            or fields\\n"
00000000000028a4         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000028a9         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000028ab         call       j_dcgettext                                 ; dcgettext
00000000000028b0         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000028b3         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000028b6         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000028bb         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000028c2         lea        rsi, qword [aSOnlydelimited]                ; argument "msgid" for method j_dcgettext, "  -s, --only-delimited    do not print lines not containing delimiters\\n      --output-delimiter=STRING  use STRING as the output delimiter\\n                            the default is to use the input delimiter\\n"
00000000000028c9         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000028ce         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000028d0         call       j_dcgettext                                 ; dcgettext
00000000000028d5         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000028d8         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000028db         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000028e0         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000028e7         lea        rsi, qword [aZZeroterminate]                ; argument "msgid" for method j_dcgettext, "  -z, --zero-terminated    line delimiter is NUL, not newline\\n"
00000000000028ee         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000028f3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000028f5         call       j_dcgettext                                 ; dcgettext
00000000000028fa         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000028fd         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002900         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002905         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000290c         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
0000000000002913         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002918         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000291a         call       j_dcgettext                                 ; dcgettext
000000000000291f         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002922         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002925         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000292a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002931         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
0000000000002938         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000293d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000293f         call       j_dcgettext                                 ; dcgettext
0000000000002944         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002947         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000294a         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000294f         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000002956         lea        rsi, qword [aNuseOneAndOnly]                ; argument "msgid" for method j_dcgettext, "\\nUse one, and only one of -b, -c or -f.  Each LIST is made up of one\\nrange, or many ranges separated by commas.  Selected input is written\\nin the same order that it is read, and is written exactly once.\\n"
000000000000295d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002962         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002964         call       j_dcgettext                                 ; dcgettext
0000000000002969         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000296c         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000296f         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002974         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000297b         lea        rsi, qword [aEachRangeIsOne]                ; argument "msgid" for method j_dcgettext, "Each range is one of:\\n\\n  N     N'th byte, character or field, counted from 1\\n  N-    from N'th byte, character or field, to end of line\\n  N-M   from N'th to M'th (included) byte, character or field\\n  -M    from first to M'th (included) byte, character or f…"
0000000000002982         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002987         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002989         call       j_dcgettext                                 ; dcgettext
000000000000298e         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002991         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002994         lea        rbx, qword [aNbytes0+13]                    ; 0x64ad
000000000000299b         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000029a0         lea        rax, qword [aNbytes0+17]                    ; 0x64b1
00000000000029a7         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
00000000000029ae         mov        qword [rsp+0xa8+var_48], 0x0
00000000000029b7         mov        qword [rsp+0xa8+var_40], 0x0
00000000000029c0         mov        rdx, rsp
00000000000029c3         mov        qword [rsp+0xa8+var_A8], rax
00000000000029c7         lea        rax, qword [aTestInvocation]                ; "test invocation"
00000000000029ce         mov        qword [rsp+0xa8+var_78], rcx
00000000000029d3         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
00000000000029da         mov        qword [rsp+0xa8+var_A0], rax
00000000000029df         lea        rax, qword [aCoreutils]                     ; "coreutils"
00000000000029e6         mov        qword [rsp+0xa8+var_68], rcx
00000000000029eb         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
00000000000029f2         mov        qword [rsp+0xa8+var_98], rax
00000000000029f7         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
00000000000029fe         mov        qword [rsp+0xa8+var_58], rcx
0000000000002a03         mov        qword [rsp+0xa8+var_90], rax
0000000000002a08         lea        rax, qword [aSha224sum]                     ; "sha224sum"
0000000000002a0f         mov        qword [rsp+0xa8+var_88], rax
0000000000002a14         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
0000000000002a1b         mov        qword [rsp+0xa8+var_80], rax
0000000000002a20         mov        qword [rsp+0xa8+var_70], rax
0000000000002a25         mov        qword [rsp+0xa8+var_60], rax
0000000000002a2a         mov        qword [rsp+0xa8+var_50], rax
0000000000002a2f         nop

                     loc_2a30:
0000000000002a30         add        rdx, 0x10                                   ; CODE XREF=usage+749
0000000000002a34         mov        rdi, qword [rdx]
0000000000002a37         test       rdi, rdi
0000000000002a3a         je         loc_2a4f

0000000000002a3c         mov        ecx, 0x4
0000000000002a41         mov        rsi, rbx
0000000000002a44         rep  cmpsb byte [rsi], byte [rdi]
0000000000002a46         seta       al
0000000000002a49         sbb        al, 0x0
0000000000002a4b         test       al, al
0000000000002a4d         jne        loc_2a30

                     loc_2a4f:
0000000000002a4f         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+730
0000000000002a53         xor        edi, edi
0000000000002a55         mov        edx, 0x5
0000000000002a5a         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
0000000000002a61         test       r12, r12
0000000000002a64         je         loc_2b2b

0000000000002a6a         call       j_dcgettext                                 ; dcgettext
0000000000002a6f         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002a76         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6527
0000000000002a7d         mov        rsi, rax
0000000000002a80         mov        edi, 0x1
0000000000002a85         xor        eax, eax
0000000000002a87         call       j___printf_chk                              ; __printf_chk
0000000000002a8c         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000002a8e         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000002a93         call       j_setlocale                                 ; setlocale
0000000000002a98         test       rax, rax
0000000000002a9b         je         loc_2ab9

0000000000002a9d         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x6535
0000000000002aa4         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000002aa9         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
0000000000002aac         call       j_strncmp                                   ; strncmp
0000000000002ab1         test       eax, eax
0000000000002ab3         jne        loc_2bc0

                     loc_2ab9:
0000000000002ab9         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+827, usage+1157
0000000000002ac0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002ac2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002ac7         call       j_dcgettext                                 ; dcgettext
0000000000002acc         lea        rcx, qword [aNbytes0+13]                    ; 0x64ad
0000000000002ad3         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002ada         mov        rsi, rax
0000000000002add         mov        edi, 0x1
0000000000002ae2         xor        eax, eax
0000000000002ae4         call       j___printf_chk                              ; __printf_chk
0000000000002ae9         cmp        r12, rbx
0000000000002aec         lea        rcx, qword [aMulticallInvoc+10]             ; 0x64cd
0000000000002af3         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0x75a1
0000000000002afa         cmove      rbx, rcx

                     loc_2afe:
0000000000002afe         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+1108
0000000000002b05         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002b07         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002b0c         call       j_dcgettext                                 ; dcgettext
0000000000002b11         mov        rcx, rbx
0000000000002b14         mov        rsi, rax
0000000000002b17         mov        rdx, r12
0000000000002b1a         mov        edi, 0x1
0000000000002b1f         xor        eax, eax
0000000000002b21         call       j___printf_chk                              ; __printf_chk
0000000000002b26         jmp        loc_27b6

                     loc_2b2b:
0000000000002b2b         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+772
0000000000002b30         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002b37         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6527
0000000000002b3e         mov        rsi, rax
0000000000002b41         mov        edi, 0x1
0000000000002b46         xor        eax, eax
0000000000002b48         call       j___printf_chk                              ; __printf_chk
0000000000002b4d         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000002b4f         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
0000000000002b54         call       j_setlocale                                 ; setlocale
0000000000002b59         test       rax, rax
0000000000002b5c         je         loc_2b76

0000000000002b5e         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x6535
0000000000002b65         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000002b6a         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
0000000000002b6d         call       j_strncmp                                   ; strncmp
0000000000002b72         test       eax, eax
0000000000002b74         jne        loc_2bb9

                     loc_2b76:
0000000000002b76         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+1020
0000000000002b7d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002b82         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002b84         lea        r12, qword [aNbytes0+13]                    ; 0x64ad
0000000000002b8b         lea        rbx, qword [aMulticallInvoc+10]             ; 0x64cd
0000000000002b92         call       j_dcgettext                                 ; dcgettext
0000000000002b97         lea        rcx, qword [aNbytes0+13]                    ; 0x64ad
0000000000002b9e         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002ba5         mov        rsi, rax
0000000000002ba8         mov        edi, 0x1
0000000000002bad         xor        eax, eax
0000000000002baf         call       j___printf_chk                              ; __printf_chk
0000000000002bb4         jmp        loc_2afe

                     loc_2bb9:
0000000000002bb9         lea        r12, qword [aNbytes0+13]                    ; 0x64ad, CODE XREF=usage+1044

                     loc_2bc0:
0000000000002bc0         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+851
0000000000002bc7         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
0000000000002bce         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002bd0         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002bd5         call       j_dcgettext                                 ; dcgettext
0000000000002bda         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002bdd         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002be0         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000002be5         jmp        loc_2ab9
0000000000002bea         align      16                                          ; End of unwind block (FDE at 0x7c90)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     compare_ranges:
0000000000002bf0         mov        eax, dword [rsi]                            ; Begin of unwind block (FDE at 0x7d14), DATA XREF=set_fields+353
0000000000002bf2         cmp        dword [rdi], eax
0000000000002bf4         jl         loc_2c00

0000000000002bf6         setg       al
0000000000002bf9         movzx      eax, al
0000000000002bfc         ret
                        ; endp
0000000000002bfd         align      1024

                     loc_2c00:
0000000000002c00         mov        eax, 0xffffffff                             ; CODE XREF=compare_ranges+4
0000000000002c05         ret
                        ; endp
0000000000002c06         align      16                                          ; End of unwind block (FDE at 0x7d14)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     add_range_pair:
0000000000002c10         push       rbp                                         ; Begin of unwind block (FDE at 0x7d28), CODE XREF=set_fields+194, set_fields+319, set_fields+675, set_fields+946, set_fields+996, set_fields+1047
0000000000002c11         push       rbx
0000000000002c12         mov        rbx, rsi
0000000000002c15         mov        rbp, rdi
0000000000002c18         sub        rsp, 0x8
0000000000002c1c         mov        rsi, qword [n_frp]                          ; n_frp
0000000000002c23         cmp        rsi, qword [n_frp_allocated]                ; n_frp_allocated
0000000000002c2a         mov        rdi, qword [frp]                            ; frp
0000000000002c31         je         loc_2c60

                     loc_2c33:
0000000000002c33         mov        rax, rsi                                    ; CODE XREF=add_range_pair+144
0000000000002c36         add        rsi, 0x1
0000000000002c3a         shl        rax, 0x4
0000000000002c3e         add        rdi, rax
0000000000002c41         mov        qword [rdi], rbp
0000000000002c44         mov        qword [rdi+8], rbx
0000000000002c48         mov        qword [n_frp], rsi                          ; n_frp
0000000000002c4f         add        rsp, 0x8
0000000000002c53         pop        rbx
0000000000002c54         pop        rbp
0000000000002c55         ret
                        ; endp
0000000000002c56         align      32

                     loc_2c60:
0000000000002c60         test       rdi, rdi                                    ; CODE XREF=add_range_pair+33
0000000000002c63         je         loc_2ca8

0000000000002c65         movabs     rax, 0x555555555555554
0000000000002c6f         cmp        rsi, rax
0000000000002c72         ja         loc_2ccd

0000000000002c74         mov        rax, rsi
0000000000002c77         shr        rax, 0x1
0000000000002c7a         lea        rsi, qword [rsi+rax+1]

                     loc_2c7f:
0000000000002c7f         mov        qword [n_frp_allocated], rsi                ; n_frp_allocated, CODE XREF=add_range_pair+187
0000000000002c86         shl        rsi, 0x4                                    ; argument #2 for method xrealloc
0000000000002c8a         call       xrealloc                                    ; xrealloc
0000000000002c8f         mov        rsi, qword [n_frp]                          ; n_frp
0000000000002c96         mov        rdi, rax
0000000000002c99         mov        qword [frp], rax                            ; frp
0000000000002ca0         jmp        loc_2c33
0000000000002ca2         align      8

                     loc_2ca8:
0000000000002ca8         test       rsi, rsi                                    ; CODE XREF=add_range_pair+83
0000000000002cab         mov        eax, 0x8
0000000000002cb0         mov        edx, 0x10
0000000000002cb5         cmove      rsi, rax
0000000000002cb9         mov        rax, rdx
0000000000002cbc         xor        ecx, ecx
0000000000002cbe         mul        rsi
0000000000002cc1         jo         loc_2cd2

                     loc_2cc3:
0000000000002cc3         test       rax, rax                                    ; CODE XREF=add_range_pair+199
0000000000002cc6         js         loc_2ccd

0000000000002cc8         test       rcx, rcx
0000000000002ccb         je         loc_2c7f

                     loc_2ccd:
0000000000002ccd         call       xalloc_die                                  ; xalloc_die, CODE XREF=add_range_pair+98, add_range_pair+182
                        ; endp

                     loc_2cd2:
0000000000002cd2         mov        ecx, 0x1                                    ; CODE XREF=add_range_pair+177
0000000000002cd7         jmp        loc_2cc3
0000000000002cd9         align      32                                          ; End of unwind block (FDE at 0x7d28)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     set_fields:
0000000000002ce0         push       r15                                         ; Begin of unwind block (FDE at 0x7d54), CODE XREF=main+667, main+715, main+872, main+905, main+1038, main+1111
0000000000002ce2         push       r14
0000000000002ce4         mov        eax, esi
0000000000002ce6         push       r13
0000000000002ce8         push       r12
0000000000002cea         mov        r14, rdi
0000000000002ced         push       rbp
0000000000002cee         push       rbx
0000000000002cef         sub        rsp, 0x28
0000000000002cf3         and        eax, 0x1
0000000000002cf6         mov        dword [rsp+0x58+var_3C], esi
0000000000002cfa         mov        dword [rsp+0x58+var_40], eax
0000000000002cfe         je         loc_2d1e

0000000000002d00         lea        rdi, qword [aLibs+10]                       ; 0x7062
0000000000002d07         mov        ecx, 0x2
0000000000002d0c         mov        rsi, r14
0000000000002d0f         rep  cmpsb byte [rsi], byte [rdi]
0000000000002d11         seta       al
0000000000002d14         sbb        al, 0x0
0000000000002d16         test       al, al
0000000000002d18         je         loc_3019

                     loc_2d1e:
0000000000002d1e         xor        r15d, r15d                                  ; CODE XREF=set_fields+30
0000000000002d21         xor        ebx, ebx

                     loc_2d23:
0000000000002d23         mov        ebp, ebx                                    ; CODE XREF=set_fields+840
0000000000002d25         xor        r13d, r13d
0000000000002d28         xor        r12d, r12d
0000000000002d2b         mov        qword [rsp+0x58+var_48], 0x1
0000000000002d34         jmp        loc_2dbe
0000000000002d39         align      64

                     loc_2d40:
0000000000002d40         cmp        r8b, 0x2c                                   ; CODE XREF=set_fields+230
0000000000002d44         mov        byte [rsp+0x58+var_50], r8b
0000000000002d49         je         loc_2d67

0000000000002d4b         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000002d50         movzx      edx, byte [rsp+0x58+var_50]
0000000000002d55         mov        r10, qword [rax]
0000000000002d58         test       byte [r10+rdx*2], 0x1
0000000000002d5d         jne        loc_2d67

0000000000002d5f         test       dl, dl
0000000000002d61         jne        loc_2fa0

                     loc_2d67:
0000000000002d67         test       bpl, bpl                                    ; CODE XREF=set_fields+105, set_fields+125
0000000000002d6a         je         loc_2e10

0000000000002d70         test       bl, bl
0000000000002d72         jne        loc_2f60

0000000000002d78         test       r12b, r12b
0000000000002d7b         jne        loc_2f70

0000000000002d81         mov        eax, dword [rsp+0x58+var_40]
0000000000002d85         test       eax, eax
0000000000002d87         je         loc_31e9

0000000000002d8d         mov        qword [rsp+0x58+var_48], 0x1

                     loc_2d96:
0000000000002d96         mov        rdi, qword [rsp+0x58+var_48]                ; CODE XREF=set_fields+643
0000000000002d9b         mov        rsi, 0xffffffffffffffff
0000000000002da2         call       add_range_pair                              ; add_range_pair

                     loc_2da7:
0000000000002da7         cmp        byte [r14], 0x0                             ; CODE XREF=set_fields+680
0000000000002dab         je         loc_2e2a

                     loc_2dad:
0000000000002dad         xor        r15d, r15d                                  ; CODE XREF=set_fields+328
0000000000002db0         xor        r13d, r13d
0000000000002db3         xor        ebp, ebp
0000000000002db5         xor        r12d, r12d
0000000000002db8         xor        ebx, ebx

                     loc_2dba:
0000000000002dba         add        r14, 0x1                                    ; CODE XREF=set_fields+292, set_fields+698, set_fields+809

                     loc_2dbe:
0000000000002dbe         movzx      r8d, byte [r14]                             ; CODE XREF=set_fields+84
0000000000002dc2         cmp        r8b, 0x2d
0000000000002dc6         jne        loc_2d40

0000000000002dcc         test       bpl, bpl
0000000000002dcf         jne        loc_315d

0000000000002dd5         test       r15, r15
0000000000002dd8         sete       r9b
0000000000002ddc         and        r9b, bl
0000000000002ddf         mov        r13d, r9d
0000000000002de2         jne        loc_3106

0000000000002de8         test       bl, bl
0000000000002dea         jne        loc_2f90

0000000000002df0         mov        r13d, ebx
0000000000002df3         xor        r15d, r15d
0000000000002df6         mov        ebp, 0x1
0000000000002dfb         mov        qword [rsp+0x58+var_48], 0x1
0000000000002e04         jmp        loc_2dba
0000000000002e06         align      16

                     loc_2e10:
0000000000002e10         test       r15, r15                                    ; CODE XREF=set_fields+138
0000000000002e13         je         loc_3106

0000000000002e19         mov        rsi, r15
0000000000002e1c         mov        rdi, r15
0000000000002e1f         call       add_range_pair                              ; add_range_pair
0000000000002e24         cmp        byte [r14], 0x0
0000000000002e28         jne        loc_2dad

                     loc_2e2a:
0000000000002e2a         mov        rsi, qword [n_frp]                          ; n_frp, CODE XREF=set_fields+203
0000000000002e31         test       rsi, rsi
0000000000002e34         je         loc_321d

0000000000002e3a         mov        rdi, qword [frp]                            ; argument "__base" for method j_qsort, frp
0000000000002e41         lea        rcx, qword [compare_ranges]                 ; argument "__compar" for method j_qsort, compare_ranges
0000000000002e48         mov        edx, 0x10                                   ; argument "__size" for method j_qsort
0000000000002e4d         xor        r15d, r15d
0000000000002e50         xor        ebp, ebp
0000000000002e52         call       j_qsort                                     ; qsort
0000000000002e57         mov        rbx, qword [n_frp]                          ; n_frp
0000000000002e5e         mov        rcx, qword [frp]                            ; frp
0000000000002e65         cmp        r15, rbx
0000000000002e68         jae        loc_2efd

0000000000002e6e         nop

                     loc_2e70:
0000000000002e70         add        r15, 0x1                                    ; CODE XREF=set_fields+535
0000000000002e74         cmp        r15, rbx
0000000000002e77         jae        loc_2ef0

0000000000002e79         mov        r13, r15
0000000000002e7c         lea        rdx, qword [rcx+rbp]
0000000000002e80         shl        r13, 0x4
0000000000002e84         lea        rdi, qword [rcx+r13]
0000000000002e88         mov        rax, qword [rdx+8]
0000000000002e8c         cmp        rax, qword [rdi]
0000000000002e8f         jb         loc_2ef0

0000000000002e91         lea        r14, qword [rbp+0x20]
0000000000002e95         jmp        loc_2eb1
0000000000002e97         align      32

                     loc_2ea0:
0000000000002ea0         lea        rdi, qword [rcx+r13]                        ; CODE XREF=set_fields+526
0000000000002ea4         lea        rdx, qword [rcx+rbp]
0000000000002ea8         mov        rax, qword [rdx+8]
0000000000002eac         cmp        qword [rdi], rax
0000000000002eaf         ja         loc_2ef0

                     loc_2eb1:
0000000000002eb1         cmp        qword [rdi+8], rax                          ; argument "__dest" for method j_memmove, CODE XREF=set_fields+437
0000000000002eb5         lea        rsi, qword [rcx+r14]                        ; argument "__src" for method j_memmove
0000000000002eb9         cmovae     rax, qword [rdi+8]
0000000000002ebe         sub        rbx, r15
0000000000002ec1         shl        rbx, 0x4
0000000000002ec5         mov        qword [rdx+8], rax
0000000000002ec9         lea        rdx, qword [rbx-0x10]                       ; argument "__n" for method j_memmove
0000000000002ecd         call       j_memmove                                   ; memmove
0000000000002ed2         mov        rax, qword [n_frp]                          ; n_frp
0000000000002ed9         mov        rcx, qword [frp]                            ; frp
0000000000002ee0         lea        rbx, qword [rax-1]
0000000000002ee4         cmp        rbx, r15
0000000000002ee7         mov        qword [n_frp], rbx                          ; n_frp
0000000000002eee         ja         loc_2ea0

                     loc_2ef0:
0000000000002ef0         add        rbp, 0x10                                   ; CODE XREF=set_fields+407, set_fields+431, set_fields+463
0000000000002ef4         cmp        r15, rbx
0000000000002ef7         jb         loc_2e70

                     loc_2efd:
0000000000002efd         test       byte [rsp+0x58+var_3C], 0x2                 ; CODE XREF=set_fields+392
0000000000002f02         jne        loc_302d

                     loc_2f08:
0000000000002f08         add        rbx, 0x1                                    ; CODE XREF=set_fields+1028
0000000000002f0c         mov        rdi, rcx
0000000000002f0f         mov        rsi, rbx
0000000000002f12         mov        qword [n_frp], rbx                          ; n_frp
0000000000002f19         shl        rsi, 0x4
0000000000002f1d         call       xrealloc                                    ; xrealloc
0000000000002f22         mov        rdx, qword [n_frp]                          ; n_frp
0000000000002f29         mov        qword [frp], rax                            ; frp
0000000000002f30         shl        rdx, 0x4
0000000000002f34         lea        rax, qword [rax+rdx-0x10]
0000000000002f39         mov        rdx, 0xffffffffffffffff
0000000000002f40         mov        qword [rax+8], rdx
0000000000002f44         mov        qword [rax], rdx
0000000000002f47         add        rsp, 0x28
0000000000002f4b         pop        rbx
0000000000002f4c         pop        rbp
0000000000002f4d         pop        r12
0000000000002f4f         pop        r13
0000000000002f51         pop        r14
0000000000002f53         pop        r15
0000000000002f55         ret
                        ; endp
0000000000002f56         align      32

                     loc_2f60:
0000000000002f60         test       r12b, r12b                                  ; CODE XREF=set_fields+146
0000000000002f63         je         loc_2d96

0000000000002f69         nop        dword [rax]

                     loc_2f70:
0000000000002f70         cmp        qword [rsp+0x58+var_48], r15                ; CODE XREF=set_fields+155
0000000000002f75         ja         loc_3148

0000000000002f7b         mov        rdi, qword [rsp+0x58+var_48]
0000000000002f80         mov        rsi, r15
0000000000002f83         call       add_range_pair                              ; add_range_pair
0000000000002f88         jmp        loc_2da7
0000000000002f8d         align      16

                     loc_2f90:
0000000000002f90         mov        qword [rsp+0x58+var_48], r15                ; CODE XREF=set_fields+266
0000000000002f95         mov        ebp, ebx
0000000000002f97         xor        r15d, r15d
0000000000002f9a         jmp        loc_2dba
0000000000002f9f         align      32

                     loc_2fa0:
0000000000002fa0         movsx      eax, dl                                     ; CODE XREF=set_fields+129
0000000000002fa3         lea        edx, dword [rax-0x30]
0000000000002fa6         cmp        edx, 0x9
0000000000002fa9         ja         loc_323c

0000000000002faf         test       r13b, r13b
0000000000002fb2         je         loc_3010

0000000000002fb4         cmp        qword [num_start.6877], 0x0                 ; num_start.6877
0000000000002fbc         je         loc_3010

                     loc_2fbe:
0000000000002fbe         test       bpl, bpl                                    ; CODE XREF=set_fields+823
0000000000002fc1         mov        edx, 0x1
0000000000002fc6         movabs     rcx, 0x1999999999999999
0000000000002fd0         cmovne     r12d, ebp
0000000000002fd4         cmove      ebx, edx
0000000000002fd7         cmp        r15, rcx
0000000000002fda         ja         loc_317d

0000000000002fe0         sub        eax, 0x30
0000000000002fe3         lea        rdx, qword [r15+r15*4]
0000000000002fe7         cdqe
0000000000002fe9         lea        rax, qword [rax+rdx*2]
0000000000002fed         cmp        rax, r15
0000000000002ff0         jb         loc_317d

0000000000002ff6         cmp        rax, 0xffffffffffffffff
0000000000002ffa         je         loc_317d

0000000000003000         mov        r15, rax
0000000000003003         mov        r13d, 0x1
0000000000003009         jmp        loc_2dba
000000000000300e         align      16

                     loc_3010:
0000000000003010         mov        qword [num_start.6877], r14                 ; num_start.6877, CODE XREF=set_fields+722, set_fields+732
0000000000003017         jmp        loc_2fbe

                     loc_3019:
0000000000003019         add        r14, 0x1                                    ; CODE XREF=set_fields+56
000000000000301d         mov        r15d, 0x1
0000000000003023         mov        ebx, 0x1
0000000000003028         jmp        loc_2d23

                     loc_302d:
000000000000302d         mov        rax, qword [rcx]                            ; CODE XREF=set_fields+546
0000000000003030         mov        qword [frp], 0x0                            ; frp
000000000000303b         mov        qword [n_frp], 0x0                          ; n_frp
0000000000003046         mov        qword [n_frp_allocated], 0x0                ; n_frp_allocated
0000000000003051         cmp        rax, 0x1
0000000000003055         ja         loc_30e9

                     loc_305b:
000000000000305b         cmp        rbx, 0x1                                    ; CODE XREF=set_fields+1057
000000000000305f         jbe        loc_30a5

0000000000003061         mov        rax, rbx
0000000000003064         lea        rbp, qword [rcx+8]
0000000000003068         shl        rax, 0x4
000000000000306c         lea        r12, qword [rcx+rax-8]
0000000000003071         nop        dword [rax]

                     loc_3078:
0000000000003078         mov        rax, qword [rbp]                            ; CODE XREF=set_fields+963
000000000000307c         lea        rdi, qword [rax+1]
0000000000003080         mov        rax, qword [rbp+8]
0000000000003084         cmp        rdi, rax
0000000000003087         je         loc_309c

0000000000003089         lea        rsi, qword [rax-1]
000000000000308d         mov        qword [rsp+0x58+var_50], rcx
0000000000003092         call       add_range_pair                              ; add_range_pair
0000000000003097         mov        rcx, qword [rsp+0x58+var_50]

                     loc_309c:
000000000000309c         add        rbp, 0x10                                   ; CODE XREF=set_fields+935
00000000000030a0         cmp        r12, rbp
00000000000030a3         jne        loc_3078

                     loc_30a5:
00000000000030a5         shl        rbx, 0x4                                    ; CODE XREF=set_fields+895
00000000000030a9         mov        rax, qword [rcx+rbx-8]
00000000000030ae         cmp        rax, 0xffffffffffffffff
00000000000030b2         je         loc_30ce

00000000000030b4         lea        rdi, qword [rax+1]
00000000000030b8         mov        rsi, 0xffffffffffffffff
00000000000030bf         mov        qword [rsp+0x58+var_50], rcx
00000000000030c4         call       add_range_pair                              ; add_range_pair
00000000000030c9         mov        rcx, qword [rsp+0x58+var_50]

                     loc_30ce:
00000000000030ce         mov        rdi, rcx                                    ; argument "__ptr" for method j_free, CODE XREF=set_fields+978
00000000000030d1         call       j_free                                      ; free
00000000000030d6         mov        rbx, qword [n_frp]                          ; n_frp
00000000000030dd         mov        rcx, qword [frp]                            ; frp
00000000000030e4         jmp        loc_2f08

                     loc_30e9:
00000000000030e9         lea        rsi, qword [rax-1]                          ; CODE XREF=set_fields+885
00000000000030ed         mov        edi, 0x1
00000000000030f2         mov        qword [rsp+0x58+var_50], rcx
00000000000030f7         call       add_range_pair                              ; add_range_pair
00000000000030fc         mov        rcx, qword [rsp+0x58+var_50]
0000000000003101         jmp        loc_305b

                     loc_3106:
0000000000003106         test       byte [rsp+0x58+var_3C], 0x4                 ; CODE XREF=set_fields+258, set_fields+307
000000000000310b         mov        edx, 0x5
0000000000003110         je         loc_3138

0000000000003112         lea        rsi, qword [aBytecharacterP]                ; argument "msgid" for method j_dcgettext, "byte/character positions are numbered from 1"
0000000000003119         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000311b         call       j_dcgettext                                 ; dcgettext

                     loc_3120:
0000000000003120         mov        rdx, rax                                    ; argument "__format" for method j_error, CODE XREF=set_fields+1126, set_fields+1147, set_fields+1179, set_fields+1320, set_fields+1367
0000000000003123         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003125         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000003127         xor        eax, eax
0000000000003129         call       j_error                                     ; error
000000000000312e         mov        edi, 0x1                                    ; argument #1 for method usage
0000000000003133         call       usage                                       ; usage

                     loc_3138:
0000000000003138         lea        rsi, qword [aFieldsAreNumbe]                ; argument "msgid" for method j_dcgettext, "fields are numbered from 1", CODE XREF=set_fields+1072
000000000000313f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003141         call       j_dcgettext                                 ; dcgettext
0000000000003146         jmp        loc_3120

                     loc_3148:
0000000000003148         lea        rsi, qword [aInvalidDecreas]                ; "invalid decreasing range", CODE XREF=set_fields+661
000000000000314f         mov        edx, 0x5

                     loc_3154:
0000000000003154         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=set_fields+1301, set_fields+1443
0000000000003156         call       j_dcgettext                                 ; dcgettext
000000000000315b         jmp        loc_3120

                     loc_315d:
000000000000315d         test       byte [rsp+0x58+var_3C], 0x4                 ; CODE XREF=set_fields+239
0000000000003162         mov        edx, 0x5
0000000000003167         je         loc_31fa

000000000000316d         lea        rsi, qword [aInvalidByteOrC]                ; argument "msgid" for method j_dcgettext, "invalid byte or character range"
0000000000003174         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003176         call       j_dcgettext                                 ; dcgettext
000000000000317b         jmp        loc_3120

                     loc_317d:
000000000000317d         mov        rbx, qword [num_start.6877]                 ; num_start.6877, CODE XREF=set_fields+762, set_fields+784, set_fields+794
0000000000003184         lea        rsi, qword [a0123456789]                    ; argument "__accept" for method j_strspn, "0123456789"
000000000000318b         mov        rdi, rbx                                    ; argument "__s" for method j_strspn
000000000000318e         call       j_strspn                                    ; strspn
0000000000003193         mov        rdi, rbx
0000000000003196         mov        rsi, rax
0000000000003199         call       xstrndup                                    ; xstrndup
000000000000319e         mov        rdi, rax
00000000000031a1         mov        rbx, rax
00000000000031a4         call       quote                                       ; quote
00000000000031a9         test       byte [rsp+0x58+var_3C], 0x4
00000000000031ae         mov        rbp, rax
00000000000031b1         mov        edx, 0x5
00000000000031b6         je         loc_320d

00000000000031b8         lea        rsi, qword [aBytecharacterO]                ; argument "msgid" for method j_dcgettext, "byte/character offset %s is too large"
00000000000031bf         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000031c1         call       j_dcgettext                                 ; dcgettext

                     loc_31c6:
00000000000031c6         mov        rdx, rax                                    ; argument "__format" for method j_error, CODE XREF=set_fields+1339
00000000000031c9         mov        rcx, rbp
00000000000031cc         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000031ce         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000031d0         xor        eax, eax
00000000000031d2         call       j_error                                     ; error
00000000000031d7         mov        rdi, rbx                                    ; argument "__ptr" for method j_free
00000000000031da         call       j_free                                      ; free
00000000000031df         mov        edi, 0x1                                    ; argument #1 for method usage
00000000000031e4         call       usage                                       ; usage

                     loc_31e9:
00000000000031e9         mov        edx, 0x5                                    ; CODE XREF=set_fields+167
00000000000031ee         lea        rsi, qword [aInvalidRangeWi]                ; "invalid range with no endpoint: -"
00000000000031f5         jmp        loc_3154

                     loc_31fa:
00000000000031fa         lea        rsi, qword [aInvalidFieldRa]                ; argument "msgid" for method j_dcgettext, "invalid field range", CODE XREF=set_fields+1159
0000000000003201         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003203         call       j_dcgettext                                 ; dcgettext
0000000000003208         jmp        loc_3120

                     loc_320d:
000000000000320d         lea        rsi, qword [aFieldNumberSIs]                ; argument "msgid" for method j_dcgettext, "field number %s is too large", CODE XREF=set_fields+1238
0000000000003214         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003216         call       j_dcgettext                                 ; dcgettext
000000000000321b         jmp        loc_31c6

                     loc_321d:
000000000000321d         test       byte [rsp+0x58+var_3C], 0x4                 ; CODE XREF=set_fields+340
0000000000003222         mov        edx, 0x5
0000000000003227         je         loc_327c

0000000000003229         lea        rsi, qword [aMissingListOfB]                ; argument "msgid" for method j_dcgettext, "missing list of byte/character positions"
0000000000003230         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003232         call       j_dcgettext                                 ; dcgettext
0000000000003237         jmp        loc_3120

                     loc_323c:
000000000000323c         mov        rdi, r14                                    ; CODE XREF=set_fields+713
000000000000323f         call       quote                                       ; quote
0000000000003244         test       byte [rsp+0x58+var_3C], 0x4
0000000000003249         mov        rbx, rax
000000000000324c         mov        edx, 0x5
0000000000003251         je         loc_3288

0000000000003253         lea        rsi, qword [aInvalidBytecha]                ; argument "msgid" for method j_dcgettext, "invalid byte/character position %s"
000000000000325a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000325c         call       j_dcgettext                                 ; dcgettext

                     loc_3261:
0000000000003261         mov        rdx, rax                                    ; argument "__format" for method j_error, CODE XREF=set_fields+1462
0000000000003264         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003266         mov        rcx, rbx
0000000000003269         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000326b         xor        eax, eax
000000000000326d         call       j_error                                     ; error
0000000000003272         mov        edi, 0x1                                    ; argument #1 for method usage
0000000000003277         call       usage                                       ; usage

                     loc_327c:
000000000000327c         lea        rsi, qword [aMissingListOfF]                ; "missing list of fields", CODE XREF=set_fields+1351
0000000000003283         jmp        loc_3154

                     loc_3288:
0000000000003288         lea        rsi, qword [aInvalidFieldVa]                ; argument "msgid" for method j_dcgettext, "invalid field value %s", CODE XREF=set_fields+1393
000000000000328f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003291         call       j_dcgettext                                 ; dcgettext
0000000000003296         jmp        loc_3261
0000000000003298         align      32                                          ; End of unwind block (FDE at 0x7d54)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     reset_fields:
00000000000032a0         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x7da0)
00000000000032a4         mov        rdi, qword [frp]                            ; argument "__ptr" for method j_free, frp
00000000000032ab         mov        qword [n_frp], 0x0                          ; n_frp
00000000000032b6         mov        qword [n_frp_allocated], 0x0                ; n_frp_allocated
00000000000032c1         call       j_free                                      ; free
00000000000032c6         mov        qword [frp], 0x0                            ; frp
00000000000032d1         add        rsp, 0x8
00000000000032d5         ret
                        ; endp
00000000000032d6         align      32                                          ; End of unwind block (FDE at 0x7da0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
00000000000032e0         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0x7dbc), file_name
00000000000032e7         ret
                        ; endp
00000000000032e8         align      16                                          ; End of unwind block (FDE at 0x7dbc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
00000000000032f0         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x7dd0), ignore_EPIPE
00000000000032f7         ret
                        ; endp
00000000000032f8         align      256                                         ; End of unwind block (FDE at 0x7dd0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
0000000000003300         push       rbp                                         ; Begin of unwind block (FDE at 0x7de4), DATA XREF=main+92
0000000000003301         push       rbx
0000000000003302         sub        rsp, 0x8
0000000000003306         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000330d         call       close_stream                                ; close_stream
0000000000003312         test       eax, eax
0000000000003314         je         loc_332c

0000000000003316         call       j___errno_location                          ; __errno_location
000000000000331b         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
0000000000003322         mov        rbx, rax
0000000000003325         je         loc_3343

0000000000003327         cmp        dword [rax], 0x20
000000000000332a         jne        loc_3343

                     loc_332c:
000000000000332c         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
0000000000003333         call       close_stream                                ; close_stream
0000000000003338         test       eax, eax
000000000000333a         jne        loc_3382

000000000000333c         add        rsp, 0x8
0000000000003340         pop        rbx
0000000000003341         pop        rbp
0000000000003342         ret
                        ; endp

                     loc_3343:
0000000000003343         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
000000000000334a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000334c         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003351         call       j_dcgettext                                 ; dcgettext
0000000000003356         mov        rdi, qword [file_name]                      ; file_name
000000000000335d         mov        rbp, rax
0000000000003360         test       rdi, rdi
0000000000003363         je         loc_338d

0000000000003365         call       quotearg_colon                              ; quotearg_colon
000000000000336a         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
000000000000336c         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000003373         mov        rcx, rax
0000000000003376         mov        r8, rbp
0000000000003379         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000337b         xor        eax, eax
000000000000337d         call       j_error                                     ; error

                     loc_3382:
0000000000003382         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
0000000000003388         call       j__exit                                     ; _exit
                        ; endp

                     loc_338d:
000000000000338d         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
000000000000338f         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x7016
0000000000003396         mov        rcx, rax
0000000000003399         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000339b         xor        eax, eax
000000000000339d         call       j_error                                     ; error
00000000000033a2         jmp        loc_3382
00000000000033a4         align      16                                          ; End of unwind block (FDE at 0x7de4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fdadvise:
00000000000033b0         jmp        j_posix_fadvise                             ; posix_fadvise, Begin of unwind block (FDE at 0x7e14)
                        ; endp
00000000000033b5         align      64                                          ; End of unwind block (FDE at 0x7e14)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fadvise:
00000000000033c0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7e28), CODE XREF=cut_file+70
00000000000033c3         je         loc_33e0

00000000000033c5         push       rbx
00000000000033c6         mov        ebx, esi
00000000000033c8         call       j_fileno                                    ; fileno
00000000000033cd         mov        ecx, ebx                                    ; argument "__advise" for method j_posix_fadvise
00000000000033cf         xor        edx, edx                                    ; argument "__len" for method j_posix_fadvise
00000000000033d1         xor        esi, esi                                    ; argument "__offset" for method j_posix_fadvise
00000000000033d3         pop        rbx
00000000000033d4         mov        edi, eax                                    ; argument "__fd" for method j_posix_fadvise
00000000000033d6         jmp        j_posix_fadvise                             ; posix_fadvise
                        ; endp
00000000000033db         align      32

                     loc_33e0:
00000000000033e0         ret                                                    ; CODE XREF=fadvise+3
                        ; endp
00000000000033e2         align      16                                          ; End of unwind block (FDE at 0x7e28)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_64: int32_t, -100
        ;    var_68: int32_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_84: int32_t, -132
        ;    var_90: int64_t, -144


                     getndelim2:
00000000000033f0         push       r15                                         ; Begin of unwind block (FDE at 0x7e44), CODE XREF=cut_file+493
00000000000033f2         push       r14
00000000000033f4         push       r13
00000000000033f6         push       r12
00000000000033f8         push       rbp
00000000000033f9         push       rbx
00000000000033fa         sub        rsp, 0x68
00000000000033fe         mov        r15, qword [rdi]
0000000000003401         mov        r12, qword [rsi]
0000000000003404         mov        rbx, qword [fs:0x28]
000000000000340d         mov        qword [rsp+0x98+var_40], rbx
0000000000003412         xor        ebx, ebx
0000000000003414         mov        qword [rsp+0x98+var_58], rdi
0000000000003419         mov        qword [rsp+0x98+var_50], rsi
000000000000341e         test       r15, r15
0000000000003421         mov        qword [rsp+0x98+var_78], rdx
0000000000003426         mov        qword [rsp+0x98+var_90], rcx
000000000000342b         mov        dword [rsp+0x98+var_84], r8d
0000000000003430         mov        dword [rsp+0x98+var_64], r9d
0000000000003435         mov        r14, qword [rsp+0x98+arg_0]
000000000000343d         je         loc_36d0

                     loc_3443:
0000000000003443         cmp        r12, qword [rsp+0x98+var_78]                ; CODE XREF=getndelim2+764
0000000000003448         jae        loc_3488

                     loc_344a:
000000000000344a         mov        rax, qword [rsp+0x98+var_58]                ; CODE XREF=getndelim2+173, getndelim2+815, getndelim2+885
000000000000344f         mov        qword [rax], r15
0000000000003452         mov        rax, qword [rsp+0x98+var_50]
0000000000003457         mov        qword [rax], r12

                     loc_345a:
000000000000345a         mov        rax, 0xffffffffffffffff                     ; CODE XREF=getndelim2+770, getndelim2+868

                     loc_3461:
0000000000003461         mov        rbx, qword [rsp+0x98+var_40]                ; CODE XREF=getndelim2+862
0000000000003466         xor        rbx, qword [fs:0x28]
000000000000346f         jne        loc_376a

0000000000003475         add        rsp, 0x68
0000000000003479         pop        rbx
000000000000347a         pop        rbp
000000000000347b         pop        r12
000000000000347d         pop        r13
000000000000347f         pop        r14
0000000000003481         pop        r15
0000000000003483         ret
                        ; endp
0000000000003484         align      8

                     loc_3488:
0000000000003488         mov        rbp, r12                                    ; CODE XREF=getndelim2+88
000000000000348b         sub        rbp, qword [rsp+0x98+var_78]
0000000000003490         sete       dl
0000000000003493         cmp        r12, qword [rsp+0x98+var_90]
0000000000003498         setae      al
000000000000349b         test       dl, al
000000000000349d         jne        loc_344a

000000000000349f         mov        eax, dword [rsp+0x98+var_84]
00000000000034a3         cmp        eax, 0xffffffff
00000000000034a6         je         loc_35d0

00000000000034ac         mov        ebx, dword [rsp+0x98+var_64]
00000000000034b0         cmp        ebx, 0xffffffff
00000000000034b3         cmove      ebx, eax
00000000000034b6         mov        dword [rsp+0x98+var_64], ebx

                     loc_34ba:
00000000000034ba         mov        rax, qword [rsp+0x98+var_78]                ; CODE XREF=getndelim2+488
00000000000034bf         mov        qword [rsp+0x98+var_70], r15
00000000000034c4         lea        rbx, qword [r15+rax]
00000000000034c8         lea        rax, qword [rsp+0x98+var_48]
00000000000034cd         mov        qword [rsp+0x98+var_80], rax
00000000000034d2         jmp        loc_3569
00000000000034d7         align      32

                     loc_34e0:
00000000000034e0         cmp        dword [rsp+0x98+var_84], 0xffffffff         ; CODE XREF=getndelim2+396
00000000000034e5         mov        r13, qword [rsp+0x98+var_48]
00000000000034ea         jne        loc_3690

                     loc_34f0:
00000000000034f0         lea        rcx, qword [r13+1]                          ; CODE XREF=getndelim2+694
00000000000034f4         xor        r13d, r13d

                     loc_34f7:
00000000000034f7         mov        rdi, qword [rsp+0x98+var_90]                ; CODE XREF=getndelim2+467, getndelim2+722
00000000000034fc         cmp        r12, rdi
00000000000034ff         jae        loc_350a

0000000000003501         cmp        rbp, rcx
0000000000003504         jb         loc_35f0

                     loc_350a:
000000000000350a         cmp        rbp, 0x1                                    ; CODE XREF=getndelim2+271, getndelim2+642
000000000000350e         jbe        loc_3546

0000000000003510         lea        rcx, qword [rbp-1]
0000000000003514         cmp        qword [rsp+0x98+var_48], rcx
0000000000003519         cmovbe     rcx, qword [rsp+0x98+var_48]
000000000000351f         test       r15, r15
0000000000003522         je         loc_35e0

0000000000003528         mov        rdx, rcx                                    ; argument "__n" for method j_memcpy
000000000000352b         mov        rsi, r15                                    ; argument "__src" for method j_memcpy
000000000000352e         mov        rdi, rbx                                    ; argument "__dest" for method j_memcpy
0000000000003531         mov        qword [rsp+0x98+var_60], rcx
0000000000003536         call       j_memcpy                                    ; memcpy
000000000000353b         mov        rcx, qword [rsp+0x98+var_60]

                     loc_3540:
0000000000003540         add        rbx, rcx                                    ; CODE XREF=getndelim2+503
0000000000003543         sub        rbp, rcx

                     loc_3546:
0000000000003546         test       r15, r15                                    ; CODE XREF=getndelim2+286
0000000000003549         je         loc_3560

000000000000354b         mov        rsi, qword [rsp+0x98+var_48]
0000000000003550         mov        rdi, r14
0000000000003553         call       freadseek                                   ; freadseek
0000000000003558         test       eax, eax
000000000000355a         jne        loc_3760

                     loc_3560:
0000000000003560         test       r13b, r13b                                  ; CODE XREF=getndelim2+345
0000000000003563         jne        loc_3728

                     loc_3569:
0000000000003569         mov        rsi, qword [rsp+0x98+var_80]                ; CODE XREF=getndelim2+226
000000000000356e         mov        rdi, r14
0000000000003571         call       freadptr                                    ; freadptr
0000000000003576         test       rax, rax
0000000000003579         mov        r15, rax
000000000000357c         jne        loc_34e0

0000000000003582         mov        rax, qword [r14+8]
0000000000003586         cmp        rax, qword [r14+0x10]
000000000000358a         jae        loc_3700

0000000000003590         lea        rdx, qword [rax+1]
0000000000003594         mov        qword [r14+8], rdx
0000000000003598         movzx      eax, byte [rax]
000000000000359b         mov        dword [rsp+0x98+var_68], eax

                     loc_359f:
000000000000359f         mov        eax, dword [rsp+0x98+var_68]                ; CODE XREF=getndelim2+799
00000000000035a3         cmp        dword [rsp+0x98+var_84], eax
00000000000035a7         mov        ecx, 0x2
00000000000035ac         mov        qword [rsp+0x98+var_48], 0x1
00000000000035b5         sete       r13b
00000000000035b9         cmp        dword [rsp+0x98+var_64], eax
00000000000035bd         sete       al
00000000000035c0         or         r13d, eax
00000000000035c3         jmp        loc_34f7
00000000000035c8         align      16

                     loc_35d0:
00000000000035d0         mov        eax, dword [rsp+0x98+var_64]                ; CODE XREF=getndelim2+182
00000000000035d4         mov        dword [rsp+0x98+var_84], eax
00000000000035d8         jmp        loc_34ba
00000000000035dd         align      32

                     loc_35e0:
00000000000035e0         movzx      eax, byte [rsp+0x98+var_68]                 ; CODE XREF=getndelim2+306
00000000000035e5         mov        byte [rbx], al
00000000000035e7         jmp        loc_3540
00000000000035ec         align      16

                     loc_35f0:
00000000000035f0         lea        rax, qword [r12+0x40]                       ; CODE XREF=getndelim2+276
00000000000035f5         lea        rdx, qword [r12+r12]
00000000000035f9         cmp        r12, 0x3f
00000000000035fd         cmovbe     rdx, rax
0000000000003601         sub        rbx, qword [rsp+0x98+var_70]
0000000000003606         mov        rsi, rdx
0000000000003609         sub        rsi, rbx
000000000000360c         lea        rax, qword [rbx+rcx]
0000000000003610         cmp        rsi, rcx
0000000000003613         cmovb      rdx, rax
0000000000003617         cmp        r12, rdx
000000000000361a         jae        loc_3680

000000000000361c         cmp        rdx, rdi
000000000000361f         ja         loc_3680

                     loc_3621:
0000000000003621         mov        rax, qword [rsp+0x98+var_78]                ; CODE XREF=getndelim2+661
0000000000003626         cmp        rdx, rax
0000000000003629         jns        loc_3641

000000000000362b         movabs     rdx, 0x8000000000000000
0000000000003635         add        rdx, rax
0000000000003638         cmp        r12, rdx
000000000000363b         je         loc_3760

                     loc_3641:
0000000000003641         mov        rdi, qword [rsp+0x98+var_70]                ; argument "__ptr" for method j_realloc, CODE XREF=getndelim2+569
0000000000003646         mov        rbp, rdx
0000000000003649         mov        rsi, rdx                                    ; argument "__size" for method j_realloc
000000000000364c         sub        rbp, rbx
000000000000364f         mov        qword [rsp+0x98+var_60], rdx
0000000000003654         call       j_realloc                                   ; realloc
0000000000003659         test       rax, rax
000000000000365c         je         loc_3760

0000000000003662         mov        rdx, qword [rsp+0x98+var_60]
0000000000003667         add        rbx, rax
000000000000366a         mov        qword [rsp+0x98+var_70], rax
000000000000366f         mov        r12, rdx
0000000000003672         jmp        loc_350a
0000000000003677         align      128

                     loc_3680:
0000000000003680         mov        rdx, qword [rsp+0x98+var_90]                ; CODE XREF=getndelim2+554, getndelim2+559
0000000000003685         jmp        loc_3621
0000000000003687         align      16

                     loc_3690:
0000000000003690         mov        edx, dword [rsp+0x98+var_64]                ; CODE XREF=getndelim2+250
0000000000003694         mov        esi, dword [rsp+0x98+var_84]
0000000000003698         mov        rcx, r13
000000000000369b         mov        rdi, rax
000000000000369e         call       memchr2                                     ; memchr2
00000000000036a3         test       rax, rax
00000000000036a6         je         loc_34f0

00000000000036ac         sub        rax, r15
00000000000036af         mov        r13d, 0x1
00000000000036b5         lea        rdx, qword [rax+1]
00000000000036b9         lea        rcx, qword [rax+2]
00000000000036bd         mov        qword [rsp+0x98+var_48], rdx
00000000000036c2         jmp        loc_34f7
00000000000036c7         align      16

                     loc_36d0:
00000000000036d0         cmp        rcx, 0x40                                   ; CODE XREF=getndelim2+77
00000000000036d4         mov        r12d, 0x40
00000000000036da         cmovbe     r12, rcx
00000000000036de         mov        rdi, r12                                    ; argument "__size" for method j_malloc
00000000000036e1         call       j_malloc                                    ; malloc
00000000000036e6         test       rax, rax
00000000000036e9         mov        r15, rax
00000000000036ec         jne        loc_3443

00000000000036f2         jmp        loc_345a
00000000000036f7         align      256

                     loc_3700:
0000000000003700         mov        rdi, r14                                    ; argument #1 for method j___uflow, CODE XREF=getndelim2+410
0000000000003703         call       j___uflow                                   ; __uflow
0000000000003708         cmp        eax, 0xffffffff
000000000000370b         mov        dword [rsp+0x98+var_68], eax
000000000000370f         jne        loc_359f

0000000000003715         mov        r15, qword [rsp+0x98+var_70]
000000000000371a         cmp        rbx, r15
000000000000371d         jne        loc_372d

000000000000371f         jmp        loc_344a
0000000000003724         align      8

                     loc_3728:
0000000000003728         mov        r15, qword [rsp+0x98+var_70]                ; CODE XREF=getndelim2+371

                     loc_372d:
000000000000372d         mov        rsi, qword [rsp+0x98+var_58]                ; CODE XREF=getndelim2+813
0000000000003732         mov        rax, qword [rsp+0x98+var_78]
0000000000003737         mov        byte [rbx], 0x0
000000000000373a         mov        qword [rsi], r15
000000000000373d         mov        rsi, qword [rsp+0x98+var_50]
0000000000003742         add        rax, r15
0000000000003745         sub        rbx, rax
0000000000003748         mov        rax, rbx
000000000000374b         mov        qword [rsi], r12
000000000000374e         jne        loc_3461

0000000000003754         jmp        loc_345a
0000000000003759         align      32

                     loc_3760:
0000000000003760         mov        r15, qword [rsp+0x98+var_70]                ; CODE XREF=getndelim2+362, getndelim2+587, getndelim2+620
0000000000003765         jmp        loc_344a

                     loc_376a:
000000000000376a         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=getndelim2+127
                        ; endp
000000000000376f         align      16                                          ; End of unwind block (FDE at 0x7e44)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     memchr2:
0000000000003770         cmp        sil, dl                                     ; Begin of unwind block (FDE at 0x7e94), CODE XREF=getndelim2+686
0000000000003773         je         loc_3910

0000000000003779         test       rcx, rcx
000000000000377c         push       r15
000000000000377e         mov        r11d, edx
0000000000003781         push       r14
0000000000003783         push       r13
0000000000003785         push       r12
0000000000003787         push       rbp
0000000000003788         push       rbx
0000000000003789         mov        ebx, esi
000000000000378b         je         loc_37d4

000000000000378d         test       dil, 0x7
0000000000003791         je         loc_37d4

0000000000003793         movzx      eax, byte [rdi]
0000000000003796         cmp        al, dl
0000000000003798         je         loc_38f8

000000000000379e         cmp        al, sil
00000000000037a1         jne        loc_37ca

00000000000037a3         jmp        loc_38f8
00000000000037a8         align      16

                     loc_37b0:
00000000000037b0         test       dil, 0x7                                    ; CODE XREF=memchr2+98
00000000000037b4         je         loc_37d4

00000000000037b6         movzx      eax, byte [rdi]
00000000000037b9         cmp        al, r11b
00000000000037bc         je         loc_38f8

00000000000037c2         cmp        al, bl
00000000000037c4         je         loc_38f8

                     loc_37ca:
00000000000037ca         add        rdi, 0x1                                    ; CODE XREF=memchr2+49
00000000000037ce         sub        rcx, 0x1
00000000000037d2         jne        loc_37b0

                     loc_37d4:
00000000000037d4         mov        r12d, esi                                   ; CODE XREF=memchr2+27, memchr2+33, memchr2+68
00000000000037d7         movzx      eax, sil
00000000000037db         mov        r13d, edx
00000000000037de         shl        r12d, 0x8
00000000000037e2         shl        r13d, 0x8
00000000000037e6         movzx      r12d, r12w
00000000000037ea         movzx      r13d, r13w
00000000000037ee         or         r12d, eax
00000000000037f1         movzx      eax, dl
00000000000037f4         movsxd     r12, r12d
00000000000037f7         or         r13d, eax
00000000000037fa         mov        rax, r12
00000000000037fd         movsxd     r13, r13d
0000000000003800         shl        rax, 0x10
0000000000003804         or         r12, rax
0000000000003807         mov        rax, r13
000000000000380a         shl        rax, 0x10
000000000000380e         or         r13, rax
0000000000003811         mov        rax, r12
0000000000003814         shl        rax, 0x20
0000000000003818         or         r12, rax
000000000000381b         mov        rax, r13
000000000000381e         shl        rax, 0x20
0000000000003822         or         r13, rax
0000000000003825         cmp        rcx, 0x7
0000000000003829         jbe        loc_391c

000000000000382f         mov        rax, qword [rdi]
0000000000003832         mov        r9, r12
0000000000003835         movabs     rbp, 0xfefefefefefefeff
000000000000383f         movabs     r15, 0x8080808080808080
0000000000003849         xor        r9, rax
000000000000384c         xor        rax, r13
000000000000384f         lea        r8, qword [r9+rbp]
0000000000003853         not        r9
0000000000003856         and        r8, r9
0000000000003859         lea        r9, qword [rax+rbp]
000000000000385d         not        rax
0000000000003860         and        rax, r9
0000000000003863         or         rax, r8
0000000000003866         test       rax, r15
0000000000003869         jne        loc_3921

000000000000386f         lea        r9, qword [rcx-8]
0000000000003873         mov        rax, rdi
0000000000003876         mov        r14, r9
0000000000003879         and        r14d, 0x7
000000000000387d         jmp        loc_38ac
000000000000387f         align      128

                     loc_3880:
0000000000003880         mov        rdi, qword [rax]                            ; CODE XREF=memchr2+326
0000000000003883         mov        r10, rdi
0000000000003886         xor        rdi, r13
0000000000003889         xor        r10, r12
000000000000388c         lea        r8, qword [r10+rbp]
0000000000003890         not        r10
0000000000003893         and        r8, r10
0000000000003896         lea        r10, qword [rdi+rbp]
000000000000389a         not        rdi
000000000000389d         and        rdi, r10
00000000000038a0         or         r8, rdi
00000000000038a3         test       r8, r15
00000000000038a6         jne        loc_38b8

00000000000038a8         sub        r9, 0x8

                     loc_38ac:
00000000000038ac         add        rax, 0x8                                    ; CODE XREF=memchr2+269
00000000000038b0         cmp        r9, r14
00000000000038b3         mov        rcx, r9
00000000000038b6         jne        loc_3880

                     loc_38b8:
00000000000038b8         test       rcx, rcx                                    ; CODE XREF=memchr2+310, memchr2+431
00000000000038bb         je         loc_38e5

                     loc_38bd:
00000000000038bd         movzx      edi, byte [rax]                             ; CODE XREF=memchr2+436
00000000000038c0         cmp        dil, dl
00000000000038c3         je         loc_38e7

00000000000038c5         cmp        dil, sil
00000000000038c8         je         loc_38e7

00000000000038ca         lea        rdx, qword [rax+rcx]
00000000000038ce         jmp        loc_38dc

                     loc_38d0:
00000000000038d0         movzx      ecx, byte [rax]                             ; CODE XREF=memchr2+371
00000000000038d3         cmp        cl, bl
00000000000038d5         je         loc_38e7

00000000000038d7         cmp        cl, r11b
00000000000038da         je         loc_38e7

                     loc_38dc:
00000000000038dc         add        rax, 0x1                                    ; CODE XREF=memchr2+350
00000000000038e0         cmp        rax, rdx
00000000000038e3         jne        loc_38d0

                     loc_38e5:
00000000000038e5         xor        eax, eax                                    ; CODE XREF=memchr2+331

                     loc_38e7:
00000000000038e7         pop        rbx                                         ; CODE XREF=memchr2+339, memchr2+344, memchr2+357, memchr2+362
00000000000038e8         pop        rbp
00000000000038e9         pop        r12
00000000000038eb         pop        r13
00000000000038ed         pop        r14
00000000000038ef         pop        r15
00000000000038f1         ret
                        ; endp
00000000000038f2         align      8

                     loc_38f8:
00000000000038f8         pop        rbx                                         ; CODE XREF=memchr2+40, memchr2+51, memchr2+76, memchr2+84
00000000000038f9         mov        rax, rdi
00000000000038fc         pop        rbp
00000000000038fd         pop        r12
00000000000038ff         pop        r13
0000000000003901         pop        r14
0000000000003903         pop        r15
0000000000003905         ret
                        ; endp
0000000000003906         align      16

                     loc_3910:
0000000000003910         movzx      esi, sil                                    ; argument "__c" for method j_memchr, CODE XREF=memchr2+3
0000000000003914         mov        rdx, rcx                                    ; argument "__n" for method j_memchr
0000000000003917         jmp        j_memchr                                    ; memchr
                        ; endp

                     loc_391c:
000000000000391c         mov        rax, rdi                                    ; CODE XREF=memchr2+185
000000000000391f         jmp        loc_38b8

                     loc_3921:
0000000000003921         mov        rax, rdi                                    ; CODE XREF=memchr2+249
0000000000003924         jmp        loc_38bd
0000000000003926         align      16                                          ; End of unwind block (FDE at 0x7e94)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000003930         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7f04), CODE XREF=main+39
0000000000003933         push       rbx
0000000000003934         je         loc_39ad

0000000000003936         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
000000000000393b         mov        rbx, rdi
000000000000393e         call       j_strrchr                                   ; strrchr
0000000000003943         test       rax, rax
0000000000003946         je         loc_399d

0000000000003948         lea        r8, qword [rax+1]
000000000000394c         mov        rdx, r8
000000000000394f         sub        rdx, rbx
0000000000003952         cmp        rdx, 0x6
0000000000003956         jle        loc_399d

0000000000003958         lea        rsi, qword [rax-6]
000000000000395c         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000003963         mov        ecx, 0x7
0000000000003968         rep  cmpsb byte [rsi], byte [rdi]
000000000000396a         seta       dl
000000000000396d         sbb        dl, 0x0
0000000000003970         test       dl, dl
0000000000003972         jne        loc_399d

0000000000003974         lea        rdi, qword [aLibs+8]                        ; 0x7060
000000000000397b         mov        ecx, 0x3
0000000000003980         mov        rsi, r8
0000000000003983         mov        rbx, r8
0000000000003986         rep  cmpsb byte [rsi], byte [rdi]
0000000000003988         seta       dl
000000000000398b         sbb        dl, 0x0
000000000000398e         test       dl, dl
0000000000003990         jne        loc_399d

0000000000003992         lea        rbx, qword [rax+4]
0000000000003996         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_399d:
000000000000399d         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
00000000000039a4         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
00000000000039ab         pop        rbx
00000000000039ac         ret
                        ; endp

                     loc_39ad:
00000000000039ad         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
00000000000039b4         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
00000000000039bb         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
00000000000039c0         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
00000000000039c5         call       j_fwrite                                    ; fwrite
00000000000039ca         call       j_abort                                     ; abort
                        ; endp
00000000000039cf         align      16                                          ; End of unwind block (FDE at 0x7f04)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
00000000000039d0         push       rbp                                         ; Begin of unwind block (FDE at 0x7f24), CODE XREF=sub_4200+2597, sub_4200+2619
00000000000039d1         push       rbx
00000000000039d2         mov        rbp, rdi
00000000000039d5         mov        ebx, esi
00000000000039d7         sub        rsp, 0x8
00000000000039db         call       locale_charset                              ; locale_charset
00000000000039e0         movzx      edx, byte [rax]
00000000000039e3         and        edx, 0xffffffdf
00000000000039e6         cmp        dl, 0x55
00000000000039e9         je         loc_3a60

00000000000039eb         cmp        dl, 0x47
00000000000039ee         je         loc_3a10

                     loc_39f0:
00000000000039f0         lea        rax, qword [aLibs+27]                       ; 0x7073, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
00000000000039f7         lea        rdx, qword [aLibs+29]                       ; 0x7075
00000000000039fe         cmp        ebx, 0x9
0000000000003a01         cmovne     rax, rdx
0000000000003a05         add        rsp, 0x8
0000000000003a09         pop        rbx
0000000000003a0a         pop        rbp
0000000000003a0b         ret
                        ; endp
0000000000003a0c         align      16

                     loc_3a10:
0000000000003a10         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
0000000000003a14         and        edx, 0xffffffdf
0000000000003a17         cmp        dl, 0x42
0000000000003a1a         jne        loc_39f0

0000000000003a1c         cmp        byte [rax+2], 0x31
0000000000003a20         jne        loc_39f0

0000000000003a22         cmp        byte [rax+3], 0x38
0000000000003a26         jne        loc_39f0

0000000000003a28         cmp        byte [rax+4], 0x30
0000000000003a2c         jne        loc_39f0

0000000000003a2e         cmp        byte [rax+5], 0x33
0000000000003a32         jne        loc_39f0

0000000000003a34         cmp        byte [rax+6], 0x30
0000000000003a38         jne        loc_39f0

0000000000003a3a         cmp        byte [rax+7], 0x0
0000000000003a3e         jne        loc_39f0

0000000000003a40         cmp        byte [rbp], 0x60
0000000000003a44         lea        rax, qword [aLibs+20]                       ; 0x706c
0000000000003a4b         lea        rdx, qword [aLibs+24]                       ; 0x7070
0000000000003a52         cmovne     rax, rdx
0000000000003a56         add        rsp, 0x8
0000000000003a5a         pop        rbx
0000000000003a5b         pop        rbp
0000000000003a5c         ret
                        ; endp
0000000000003a5d         align      32

                     loc_3a60:
0000000000003a60         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
0000000000003a64         and        edx, 0xffffffdf
0000000000003a67         cmp        dl, 0x54
0000000000003a6a         jne        loc_39f0

0000000000003a6c         movzx      edx, byte [rax+2]
0000000000003a70         and        edx, 0xffffffdf
0000000000003a73         cmp        dl, 0x46
0000000000003a76         jne        loc_39f0

0000000000003a7c         cmp        byte [rax+3], 0x2d
0000000000003a80         jne        loc_39f0

0000000000003a86         cmp        byte [rax+4], 0x38
0000000000003a8a         jne        loc_39f0

0000000000003a90         cmp        byte [rax+5], 0x0
0000000000003a94         jne        loc_39f0

0000000000003a9a         cmp        byte [rbp], 0x60
0000000000003a9e         lea        rax, qword [aLibs+12]                       ; 0x7064
0000000000003aa5         lea        rdx, qword [aLibs+16]                       ; 0x7068
0000000000003aac         cmovne     rax, rdx
0000000000003ab0         add        rsp, 0x8
0000000000003ab4         pop        rbx
0000000000003ab5         pop        rbp
0000000000003ab6         ret
                        ; endp
0000000000003ab7         align      64                                          ; End of unwind block (FDE at 0x7f24)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
0000000000003ac0         push       r15                                         ; Begin of unwind block (FDE at 0x7f68), CODE XREF=sub_4200+1165, sub_4200+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
0000000000003ac2         push       r14
0000000000003ac4         mov        r15d, r8d
0000000000003ac7         push       r13
0000000000003ac9         push       r12
0000000000003acb         mov        r14, rdi
0000000000003ace         push       rbp
0000000000003acf         push       rbx
0000000000003ad0         mov        ebx, r9d
0000000000003ad3         mov        r13, rsi
0000000000003ad6         mov        rbp, rcx
0000000000003ad9         and        ebx, 0x2
0000000000003adc         sub        rsp, 0xb8
0000000000003ae3         mov        rax, qword [rsp+0xe8+arg_0]
0000000000003aeb         mov        qword [rsp+0xe8+var_D8], rdx
0000000000003af0         mov        dword [rsp+0xe8+var_E0], r8d
0000000000003af5         mov        dword [rsp+0xe8+var_70], r9d
0000000000003afa         mov        qword [rsp+0xe8+var_C8], rax
0000000000003aff         mov        rax, qword [rsp+0xe8+arg_8]
0000000000003b07         mov        qword [rsp+0xe8+var_80], rax
0000000000003b0c         mov        rax, qword [rsp+0xe8+arg_10]
0000000000003b14         mov        qword [rsp+0xe8+var_88], rax
0000000000003b19         mov        rax, qword [fs:0x28]
0000000000003b22         mov        qword [rsp+0xe8+var_40], rax
0000000000003b2a         xor        eax, eax
0000000000003b2c         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000003b31         cmp        r15d, 0xa
0000000000003b35         mov        qword [rsp+0xe8+var_90], rax
0000000000003b3a         ja         loc_4cef

0000000000003b40         lea        rcx, qword [switch_table_70e0]              ; switch_table_70e0
0000000000003b47         mov        edx, r15d
0000000000003b4a         movsxd     rax, dword [rcx+rdx*4]
0000000000003b4e         add        rax, rcx
0000000000003b51         jmp        rax                                         ; switch statement using table at 0x70e0, with 11 cases, 0x3b53,0x4724,0x4780,0x47d5,0x481a,0x4854,0x48fa,0x4934,0x4b28

                     loc_3b53:
0000000000003b53         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_4200+1318
0000000000003b58         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003b5d         xor        r12d, r12d
0000000000003b60         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003b69         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003b6e         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_3b73:
0000000000003b73         lea        rax, qword [aLibs+29]                       ; 0x7075, CODE XREF=sub_4200+1876
0000000000003b7a         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003b83         xor        r15d, r15d
0000000000003b86         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000003b8e         mov        qword [rsp+0xe8+var_A0], rax

                     loc_3b93:
0000000000003b93         xor        r11d, r11d                                  ; CODE XREF=sub_4200+180, sub_4200+1400, sub_4200+1488, sub_4200+1557, sub_4200+1615, sub_4200+1781, sub_4200+1839, sub_4200+2408, sub_4200+2485
0000000000003b96         mov        rax, rbp
0000000000003b99         mov        r8d, r12d
0000000000003b9c         mov        rbp, r11
0000000000003b9f         mov        r11, rax
0000000000003ba2         nop        word [rax+rax]

                     loc_3ba8:
0000000000003ba8         cmp        r11, rbp                                    ; CODE XREF=sub_3cb0+194
0000000000003bab         setne      r12b
0000000000003baf         cmp        r11, 0xffffffffffffffff
0000000000003bb3         jne        loc_3bc2

0000000000003bb5         mov        rax, qword [rsp+0xe8+var_D8]
0000000000003bba         cmp        byte [rax+rbp], 0x0
0000000000003bbe         setne      r12b

                     loc_3bc2:
0000000000003bc2         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
0000000000003bc5         je         loc_4220

0000000000003bcb         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000003bd0         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000003bd5         lea        r9, qword [rdi+rbp]
0000000000003bd9         setne      al
0000000000003bdc         and        al, byte [rsp+0xe8+var_DB]
0000000000003be0         mov        r10d, eax
0000000000003be3         je         loc_3c90

0000000000003be9         mov        rax, qword [rsp+0xe8+var_D0]
0000000000003bee         test       rax, rax
0000000000003bf1         je         loc_4020

0000000000003bf7         cmp        r11, 0xffffffffffffffff
0000000000003bfb         lea        rbx, qword [rbp+rax]
0000000000003c00         jne        loc_3c30

0000000000003c02         cmp        rax, 0x1
0000000000003c06         jbe        loc_3c30

0000000000003c08         mov        byte [rsp+0xe8+var_B0], r8b
0000000000003c0d         mov        byte [rsp+0xe8+var_B8], r10b
0000000000003c12         mov        qword [rsp+0xe8+var_C0], r9
0000000000003c17         call       j_strlen                                    ; strlen
0000000000003c1c         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000003c22         movzx      r10d, byte [rsp+0xe8+var_B8]
0000000000003c28         mov        r11, rax
0000000000003c2b         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_3c30:
0000000000003c30         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
0000000000003c33         mov        byte [rsp+0xe8+var_C0], r10b
0000000000003c38         ja         loc_41f0

0000000000003c3e         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
0000000000003c43         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
0000000000003c48         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
0000000000003c4b         mov        qword [rsp+0xe8+var_A8], r11
0000000000003c50         mov        byte [rsp+0xe8+var_B0], r8b
0000000000003c55         mov        qword [rsp+0xe8+var_B8], r9
0000000000003c5a         call       j_memcmp                                    ; memcmp
0000000000003c5f         test       eax, eax
0000000000003c61         mov        r9, qword [rsp+0xe8+var_B8]
0000000000003c66         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000003c6c         mov        r11, qword [rsp+0xe8+var_A8]
0000000000003c71         jne        loc_41f0

0000000000003c77         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000003c7c         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000003c82         jne        loc_4c05

0000000000003c88         nop        dword [rax+rax]

                     loc_3c90:
0000000000003c90         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_41e0+19
0000000000003c94         cmp        bl, 0x7e
0000000000003c97         ja         loc_3fb8

0000000000003c9d         lea        rcx, qword [switch_table_70e0+44]           ; 0x710c
0000000000003ca4         movzx      edx, bl
0000000000003ca7         movsxd     rax, dword [rcx+rdx*4]
0000000000003cab         add        rax, rcx
0000000000003cae         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3cb0:
0000000000003cb0         xor        r10d, r10d
0000000000003cb3         cmp        r11, 0x1
0000000000003cb7         setne      al
0000000000003cba         cmp        r11, 0xffffffffffffffff
0000000000003cbe         jne        loc_3ccc

0000000000003cc0         mov        rax, qword [rsp+arg_8]
0000000000003cc5         cmp        byte [rax+1], 0x0
0000000000003cc9         setne      al

                     loc_3ccc:
0000000000003ccc         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3cb0+14
0000000000003cd1         sete       dl
0000000000003cd4         test       al, al
0000000000003cd6         je         loc_3f28

                     loc_3cdc:
0000000000003cdc         xor        r12d, r12d                                  ; CODE XREF=sub_3f20+11
0000000000003cdf         xor        eax, eax
0000000000003ce1         nop        dword [rax]
                        ; endp

                     loc_3ce8:
0000000000003ce8         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_3ed0+50, sub_3fa0+119
0000000000003ced         jne        loc_3e02

0000000000003cf3         test       dl, dl
0000000000003cf5         jne        loc_3e02

                     loc_3cfb:
0000000000003cfb         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_3db0+87
0000000000003d00         test       rsi, rsi
0000000000003d03         je         loc_3d19

0000000000003d05         mov        edx, ebx
0000000000003d07         shr        dl, 0x5
0000000000003d0a         movzx      edx, dl
0000000000003d0d         mov        edx, dword [rsi+rdx*4]
0000000000003d10         bt         edx, ebx
0000000000003d13         jb         loc_3e63

                     loc_3d19:
0000000000003d19         test       r10b, r10b                                  ; CODE XREF=sub_3cb0+83, sub_3db0+93
0000000000003d1c         jne        loc_3e63

0000000000003d22         xor        eax, 0x1
0000000000003d25         add        rbp, 0x1
0000000000003d29         and        eax, r8d

                     loc_3d2c:
0000000000003d2c         test       al, al                                      ; CODE XREF=sub_4200+936
0000000000003d2e         je         loc_3d50

0000000000003d30         cmp        r13, r15
0000000000003d33         jbe        loc_3d3a

0000000000003d35         mov        byte [r14+r15], 0x27

                     loc_3d3a:
0000000000003d3a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_3cb0+131
0000000000003d3e         cmp        r13, rax
0000000000003d41         jbe        loc_3d49

0000000000003d43         mov        byte [r14+r15+1], 0x27

                     loc_3d49:
0000000000003d49         add        r15, 0x2                                    ; CODE XREF=sub_3cb0+145
0000000000003d4d         xor        r8d, r8d

                     loc_3d50:
0000000000003d50         cmp        r15, r13                                    ; CODE XREF=sub_3cb0+126, sub_3db0+275, sub_4200+869
0000000000003d53         jae        loc_3d59

0000000000003d55         mov        byte [r14+r15], bl

                     loc_3d59:
0000000000003d59         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_3cb0+163
0000000000003d5e         add        r15, 0x1
0000000000003d62         mov        eax, 0x0
0000000000003d67         test       r12b, r12b
0000000000003d6a         cmove      edi, eax
0000000000003d6d         mov        byte [rsp+0xe8+var_DA], dil
0000000000003d72         jmp        loc_3ba8
0000000000003d77         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3d80:
0000000000003d80         xor        r10d, r10d
0000000000003d83         mov        eax, dword [rsp+arg_0]
0000000000003d87         cmp        eax, 0x2
0000000000003d8a         je         loc_4348

0000000000003d90         cmp        eax, 0x5
0000000000003d93         je         loc_4308

0000000000003d99         cmp        eax, 0x2
0000000000003d9c         mov        ebx, 0x3f
0000000000003da1         sete       dl
0000000000003da4         xor        r12d, r12d
0000000000003da7         xor        eax, eax
0000000000003da9         jmp        sub_3cb0+56
                        ; endp
0000000000003dae         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_3db0:
0000000000003db0         xor        r10d, r10d
0000000000003db3         cmp        dword [rsp+arg_0], 0x2
0000000000003db8         je         loc_42c0

0000000000003dbe         mov        byte [rsp+arg_74], r12b
0000000000003dc3         xor        edx, edx
0000000000003dc5         xor        eax, eax
0000000000003dc7         mov        ebx, 0x27
0000000000003dcc         jmp        sub_3cb0+56
                        ; endp
0000000000003dd1         nop        dword [rax]
0000000000003dd8         mov        edx, 0x9
0000000000003ddd         mov        ebx, 0x74

                     loc_3de2:
0000000000003de2         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3f70+10, sub_4060+37, sub_41a0+53
0000000000003de7         sete       al
0000000000003dea         and        al, byte [rsp+arg_7]
0000000000003dee         jne        sub_3f20+30

0000000000003df4         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_3db0+114
0000000000003df9         jne        loc_3e60

                     loc_3dfb:
0000000000003dfb         mov        ebx, edx                                    ; CODE XREF=sub_3ed0+18
0000000000003dfd         xor        r12d, r12d
0000000000003e00         xor        eax, eax
                        ; endp

                     loc_3e02:
0000000000003e02         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_3cb0+61, sub_3cb0+69
0000000000003e07         jne        loc_3cfb

0000000000003e0d         jmp        loc_3d19
0000000000003e12         nop        word [rax+rax]
0000000000003e18         mov        edx, 0x8
0000000000003e1d         mov        ebx, 0x62
0000000000003e22         jmp        sub_3db0+68
0000000000003e24         nop        dword [rax]
0000000000003e28         cmp        dword [rsp+8], 0x2
0000000000003e2d         je         sub_4200                                    ; sub_4200
0000000000003e33         cmp        byte [rsp+0xd], 0x0
0000000000003e38         je         sub_4040+16

                     loc_3e3e:
0000000000003e3e         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_4040+8
0000000000003e43         je         loc_4050

0000000000003e49         cmp        qword [rsp+arg_10], 0x0
0000000000003e4f         jne        loc_420b

0000000000003e55         mov        ebx, 0x5c
0000000000003e5a         nop        word [rax+rax]
                        ; endp

                     loc_3e60:
0000000000003e60         xor        r12d, r12d                                  ; CODE XREF=sub_3db0+73, sub_41a0+29
                        ; endp

                     loc_3e63:
0000000000003e63         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_3cb0+99, sub_3cb0+108
0000000000003e68         sete       dl
0000000000003e6b         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000003e70         mov        eax, edx
0000000000003e72         jne        loc_46c8

0000000000003e78         mov        eax, r8d
0000000000003e7b         xor        eax, 0x1
0000000000003e7e         and        al, dl
0000000000003e80         je         loc_3eb1

0000000000003e82         cmp        r13, r15
0000000000003e85         jbe        loc_3e8c

0000000000003e87         mov        byte [r14+r15], 0x27

                     loc_3e8c:
0000000000003e8c         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_3db0+213
0000000000003e90         cmp        r13, rdx
0000000000003e93         jbe        loc_3e9b

0000000000003e95         mov        byte [r14+r15+1], 0x24

                     loc_3e9b:
0000000000003e9b         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_3db0+227
0000000000003e9f         cmp        r13, rdx
0000000000003ea2         jbe        loc_3eaa

0000000000003ea4         mov        byte [r14+r15+2], 0x27

                     loc_3eaa:
0000000000003eaa         add        r15, 0x3                                    ; CODE XREF=sub_3db0+242
0000000000003eae         mov        r8d, eax

                     loc_3eb1:
0000000000003eb1         cmp        r13, r15                                    ; CODE XREF=sub_3db0+208
0000000000003eb4         jbe        loc_3ebb

0000000000003eb6         mov        byte [r14+r15], 0x5c

                     loc_3ebb:
0000000000003ebb         add        r15, 0x1                                    ; CODE XREF=sub_3db0+260
0000000000003ebf         add        rbp, 0x1
0000000000003ec3         jmp        loc_3d50
0000000000003ec8         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3ed0:
0000000000003ed0         cmp        byte [rsp+arg_5], 0x0
0000000000003ed5         jne        loc_40a3

0000000000003edb         xor        edx, edx
0000000000003edd         test       byte [rsp+arg_70], 0x1
0000000000003ee2         je         loc_3dfb

0000000000003ee8         add        rbp, 0x1
0000000000003eec         jmp        quotearg_buffer_restyled+232
                        ; endp
0000000000003ef1         nop        dword [rax]
0000000000003ef8         cmp        dword [rsp+8], 0x2
0000000000003efd         sete       dl
0000000000003f00         xor        eax, eax
0000000000003f02         jmp        sub_3cb0+56
0000000000003f07         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3f10:
0000000000003f10         mov        edx, 0x7
0000000000003f15         mov        ebx, 0x61
0000000000003f1a         jmp        sub_3db0+68
                        ; endp
0000000000003f1f         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3f20:
0000000000003f20         cmp        dword [rsp+8], 0x2
0000000000003f25         sete       dl
                        ; endp

                     loc_3f28:
0000000000003f28         test       rbp, rbp                                    ; CODE XREF=sub_3cb0+38, sub_4140+35
0000000000003f2b         jne        loc_3cdc

0000000000003f31         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_4170+43
0000000000003f36         and        al, dl
0000000000003f38         je         sub_3cb0+56

0000000000003f3e         mov        rbp, r11
0000000000003f41         mov        dword [rsp+arg_0], 0x2
0000000000003f49         jmp        sub_4200+1097
                        ; endp
0000000000003f4e         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3f50:
0000000000003f50         cmp        dword [rsp+arg_0], 0x2
0000000000003f55         sete       dl
0000000000003f58         xor        r12d, r12d
0000000000003f5b         jmp        sub_3f20+17
                        ; endp
0000000000003f5d         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3f60:
0000000000003f60         cmp        dword [rsp+arg_0], 0x2
0000000000003f65         mov        ebx, 0x20
0000000000003f6a         sete       dl
0000000000003f6d         jmp        sub_3f20+17
                        ; endp
0000000000003f6f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3f70:
0000000000003f70         mov        edx, 0xd
0000000000003f75         mov        ebx, 0x72
0000000000003f7a         jmp        loc_3de2
0000000000003f7f         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3f80:
0000000000003f80         mov        edx, 0xc
0000000000003f85         mov        ebx, 0x66
0000000000003f8a         jmp        sub_3db0+68
                        ; endp
0000000000003f8f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3f90:
0000000000003f90         mov        edx, 0xb
0000000000003f95         mov        ebx, 0x76
0000000000003f9a         jmp        sub_3db0+68
                        ; endp
0000000000003f9f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3fa0:
0000000000003fa0         mov        edx, 0xa
0000000000003fa5         mov        ebx, 0x6e
0000000000003faa         jmp        sub_3db0+50
                        ; endp
0000000000003faf         align      16

                     loc_3fb0:
0000000000003fb0         xor        r10d, r10d                                  ; CODE XREF=sub_3fa0+135
0000000000003fb3         nop        dword [rax+rax]

                     loc_3fb8:
0000000000003fb8         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
0000000000003fbe         jne        loc_4368

0000000000003fc4         mov        qword [rsp+0xe8+var_B0], r11
0000000000003fc9         mov        byte [rsp+0xe8+var_B8], r8b
0000000000003fce         mov        byte [rsp+0xe8+var_C0], r10b
0000000000003fd3         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000003fd8         mov        rcx, qword [rax]
0000000000003fdb         movzx      edx, bl
0000000000003fde         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000003fe4         movzx      r8d, byte [rsp+0xe8+var_B8]
0000000000003fea         mov        r11, qword [rsp+0xe8+var_B0]
0000000000003fef         mov        edi, 0x1
0000000000003ff4         movzx      eax, word [rcx+rdx*2]
0000000000003ff8         and        ax, 0x4000
0000000000003ffc         setne      r12b
0000000000004000         sete       al                                          ; DATA XREF=sub_3fa0+88
0000000000004003         and        al, byte [rsp+0xe8+var_DB]

                     loc_4007:
0000000000004007         test       al, al                                      ; CODE XREF=sub_4200+2221
0000000000004009         jne        loc_49a1

000000000000400f         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000004014         sete       dl
0000000000004017         jmp        loc_3ce8
000000000000401c         align      32

                     loc_4020:
0000000000004020         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
0000000000004024         cmp        bl, 0x7e
0000000000004027         ja         loc_3fb0

0000000000004029         lea        rcx, qword [switch_table_70e0+552]          ; 0x7308
0000000000004030         movzx      edx, bl
0000000000004033         movsxd     rax, dword [rcx+rdx*4]
0000000000004037         add        rax, rcx
000000000000403a         jmp        rax
                        ; endp
000000000000403c         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_4040:
0000000000004040         xor        r10d, r10d
0000000000004043         cmp        byte [rsp+arg_5], 0x0
0000000000004048         jne        loc_3e3e

000000000000404e         nop

                     loc_4050:
0000000000004050         mov        edx, 0x5c                                   ; CODE XREF=sub_3db0+136, sub_3db0+147
0000000000004055         mov        ebx, 0x5c
000000000000405a         jmp        sub_3db0+68
                        ; endp
000000000000405f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4060:
0000000000004060         mov        edx, 0xc
0000000000004065         xor        r10d, r10d
0000000000004068         mov        ebx, 0x66
000000000000406d         jmp        sub_3db0+68
                        ; endp
0000000000004072         nop        word [rax+rax]
0000000000004078         mov        edx, 0xa
000000000000407d         xor        r10d, r10d
0000000000004080         mov        ebx, 0x6e
0000000000004085         jmp        sub_3db0+50
000000000000408a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4090:
0000000000004090         mov        ebx, 0x61
0000000000004095         jmp        sub_3db0+176
                        ; endp
000000000000409a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_40a0:
00000000000040a0         xor        r10d, r10d
                        ; endp

                     loc_40a3:
00000000000040a3         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3ed0+5
00000000000040a8         sete       dl
00000000000040ab         cmp        byte [rsp+arg_7], 0x0
00000000000040b0         jne        loc_4c4a

00000000000040b6         mov        eax, r8d
00000000000040b9         mov        rcx, r15
00000000000040bc         xor        eax, 0x1
00000000000040bf         and        al, dl
00000000000040c1         je         loc_40f0

00000000000040c3         cmp        r13, r15
00000000000040c6         jbe        loc_40cd

00000000000040c8         mov        byte [r14+r15], 0x27

                     loc_40cd:
00000000000040cd         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_40a0+38
00000000000040d1         cmp        r13, rcx
00000000000040d4         jbe        loc_40dc

00000000000040d6         mov        byte [r14+r15+1], 0x24

                     loc_40dc:
00000000000040dc         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_40a0+52
00000000000040e0         cmp        r13, rcx
00000000000040e3         ja         loc_4719

                     loc_40e9:
00000000000040e9         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_4200+1311
00000000000040ed         mov        r8d, eax

                     loc_40f0:
00000000000040f0         cmp        r13, rcx                                    ; CODE XREF=sub_40a0+33
00000000000040f3         jbe        loc_40fa

00000000000040f5         mov        byte [r14+rcx], 0x5c

                     loc_40fa:
00000000000040fa         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_40a0+83
00000000000040ff         lea        r15, qword [rcx+1]
0000000000004103         je         loc_4709

0000000000004109         lea        rax, qword [rbp+1]
000000000000410d         cmp        rax, r11
0000000000004110         jae        loc_412b

0000000000004112         mov        rax, qword [rsp+arg_8]
0000000000004117         movzx      eax, byte [rax+rbp+1]
000000000000411c         mov        byte [rsp+arg_20], al
0000000000004120         sub        eax, 0x30
0000000000004123         cmp        al, 0x9
0000000000004125         jbe        loc_4959

                     loc_412b:
000000000000412b         mov        eax, r12d                                   ; CODE XREF=sub_40a0+112
000000000000412e         mov        ebx, 0x30
0000000000004133         xor        r12d, r12d
0000000000004136         jmp        sub_3cb0+56
                        ; endp
000000000000413b         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_4140:
0000000000004140         cmp        dword [rsp+arg_0], 0x2
0000000000004145         mov        r12d, r10d
0000000000004148         sete       dl
000000000000414b         xor        r10d, r10d
000000000000414e         xor        eax, eax
0000000000004150         jmp        sub_3cb0+56
                        ; endp
0000000000004155         nop        dword [rax]
0000000000004158         cmp        dword [rsp+8], 0x2
000000000000415d         sete       dl
0000000000004160         xor        r10d, r10d
0000000000004163         jmp        sub_3f20+8
0000000000004168         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4170:
0000000000004170         cmp        dword [rsp+8], 0x2
0000000000004175         sete       dl
0000000000004178         xor        r10d, r10d
000000000000417b         xor        r12d, r12d
000000000000417e         jmp        sub_3f20+17
                        ; endp
0000000000004183         nop        dword [rax+rax]
0000000000004188         cmp        dword [rsp+8], 0x2
000000000000418d         mov        r12d, r10d
0000000000004190         mov        ebx, 0x20
0000000000004195         sete       dl
0000000000004198         xor        r10d, r10d
000000000000419b         jmp        sub_3f20+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_41a0:
00000000000041a0         mov        edx, 0xd
00000000000041a5         xor        r10d, r10d
00000000000041a8         mov        ebx, 0x72
00000000000041ad         jmp        sub_3db0+50
                        ; endp
00000000000041b2         nop        word [rax+rax]
00000000000041b8         mov        ebx, 0x76
00000000000041bd         jmp        sub_3db0+176
00000000000041c2         nop        word [rax+rax]
00000000000041c8         mov        edx, 0x9
00000000000041cd         xor        r10d, r10d
00000000000041d0         mov        ebx, 0x74
00000000000041d5         jmp        sub_3db0+50
00000000000041da         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_41e0:
00000000000041e0         mov        ebx, 0x62
00000000000041e5         jmp        sub_3db0+176
                        ; endp
00000000000041ea         nop        word [rax+rax]

                     loc_41f0:
00000000000041f0         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
00000000000041f3         jmp        loc_3c90
00000000000041f8         align      512


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_4200:
0000000000004200         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3db0+125
0000000000004205         jne        sub_4200+2416
                        ; endp

                     loc_420b:
000000000000420b         add        rbp, 0x1                                    ; CODE XREF=sub_3db0+159
000000000000420f         mov        eax, r8d
0000000000004212         xor        r12d, r12d
0000000000004215         mov        ebx, 0x5c
000000000000421a         jmp        sub_3cb0+124
                        ; endp
000000000000421f         align      32

                     loc_4220:
0000000000004220         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
0000000000004225         movzx      ebx, byte [rsp+0xe8+var_D9]
000000000000422a         mov        r12d, r8d
000000000000422d         mov        rbp, r11
0000000000004230         sete       dl
0000000000004233         mov        eax, ebx
0000000000004235         test       r15, r15
0000000000004238         sete       cl
000000000000423b         and        eax, edx
000000000000423d         and        al, cl
000000000000423f         jne        loc_4ca6

0000000000004245         mov        eax, ebx
0000000000004247         xor        eax, 0x1
000000000000424a         and        dl, al
000000000000424c         je         loc_4bbc

0000000000004252         cmp        byte [rsp+0xe8+var_6C], 0x0
0000000000004257         je         loc_4bba

000000000000425d         cmp        byte [rsp+0xe8+var_DA], 0x0
0000000000004262         jne        loc_4c5d

0000000000004268         test       r13, r13
000000000000426b         sete       al
000000000000426e         cmp        qword [rsp+0xe8+var_98], 0x0
0000000000004274         setne      dl
0000000000004277         and        al, dl
0000000000004279         je         loc_4c9c

000000000000427f         mov        r13, qword [rsp+0xe8+var_98]

                     loc_4284:
0000000000004284         lea        rbx, qword [aLibs+29]                       ; 0x7075, CODE XREF=sub_4200+2781
000000000000428b         mov        byte [r14], 0x27
000000000000428f         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000004297         mov        r15d, 0x1
000000000000429d         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000042a6         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000042ab         mov        qword [rsp+0xe8+var_A0], rbx
00000000000042b0         mov        byte [rsp+0xe8+var_6C], al
00000000000042b4         jmp        loc_3b93
00000000000042b9         align      64

                     loc_42c0:
00000000000042c0         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3db0+8
00000000000042c5         jne        sub_4200+2416

00000000000042cb         test       r13, r13
00000000000042ce         je         loc_46d0

00000000000042d4         xor        edx, edx
00000000000042d6         cmp        qword [rsp+arg_48], 0x0
00000000000042dc         jne        loc_46d0

                     loc_42e2:
00000000000042e2         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_4200+1284, sub_4200+2794
00000000000042e7         add        r15, 0x3
00000000000042eb         xor        eax, eax
00000000000042ed         mov        byte [rsp+arg_74], r12b
00000000000042f2         xor        r8d, r8d
00000000000042f5         mov        r13, rdx
00000000000042f8         mov        ebx, 0x27
00000000000042fd         jmp        sub_3cb0+105
                        ; endp
0000000000004302         align      8

                     loc_4308:
0000000000004308         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_3d80+19
000000000000430d         je         loc_4330

000000000000430f         lea        rcx, qword [rbp+2]
0000000000004313         cmp        rcx, r11
0000000000004316         jae        loc_4330

0000000000004318         mov        rax, qword [rsp+arg_8]
000000000000431d         cmp        byte [rax+rbp+1], 0x3f
0000000000004322         je         loc_4ab2

0000000000004328         nop        dword [rax+rax]

                     loc_4330:
0000000000004330         xor        edx, edx                                    ; CODE XREF=sub_4200+269, sub_4200+278, sub_4200+2233, sub_4200+2253
0000000000004332         xor        r12d, r12d
0000000000004335         xor        eax, eax
0000000000004337         mov        ebx, 0x3f
000000000000433c         jmp        sub_3cb0+56
                        ; endp
0000000000004341         align      8

                     loc_4348:
0000000000004348         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3d80+10
000000000000434d         jne        loc_4b70

0000000000004353         xor        r12d, r12d
0000000000004356         xor        eax, eax
0000000000004358         mov        ebx, 0x3f
000000000000435d         jmp        sub_3cb0+105
                        ; endp
0000000000004362         align      8

                     loc_4368:
0000000000004368         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_3fa0+30
0000000000004370         cmp        r11, 0xffffffffffffffff
0000000000004374         mov        qword [rsp+0xe8+var_48], 0x0
0000000000004380         mov        qword [rsp+0xe8+var_C0], rax
0000000000004385         jne        loc_43b4

0000000000004387         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
000000000000438c         mov        byte [rsp+0xe8+var_A8], r8b
0000000000004391         mov        byte [rsp+0xe8+var_B0], r10b
0000000000004396         mov        qword [rsp+0xe8+var_B8], r9
000000000000439b         call       j_strlen                                    ; strlen
00000000000043a0         movzx      r8d, byte [rsp+0xe8+var_A8]
00000000000043a6         movzx      r10d, byte [rsp+0xe8+var_B0]
00000000000043ac         mov        r11, rax
00000000000043af         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_43b4:
00000000000043b4         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_4200+389
00000000000043bc         xor        ecx, ecx
00000000000043be         mov        byte [rsp+0xe8+var_6A], bl
00000000000043c2         mov        byte [rsp+0xe8+var_6B], r8b
00000000000043c7         mov        rbx, rcx
00000000000043ca         mov        qword [rsp+0xe8+var_60], r9
00000000000043d2         mov        qword [rsp+0xe8+var_B0], rax
00000000000043d7         mov        byte [rsp+0xe8+var_69], r10b
00000000000043dc         mov        qword [rsp+0xe8+var_68], r15
00000000000043e4         mov        qword [rsp+0xe8+var_A8], r14
00000000000043e9         mov        qword [rsp+0xe8+var_78], r13
00000000000043ee         mov        qword [rsp+0xe8+var_B8], r11

                     loc_43f3:
00000000000043f3         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_4200+623
00000000000043f8         lea        r14, qword [rbp+rbx]
00000000000043fd         mov        rdx, qword [rsp+0xe8+var_B8]
0000000000004402         mov        rcx, qword [rsp+0xe8+var_C0]
0000000000004407         mov        rdi, qword [rsp+0xe8+var_B0]
000000000000440c         lea        r13, qword [rax+r14]
0000000000004410         sub        rdx, r14
0000000000004413         mov        rsi, r13
0000000000004416         call       rpl_mbrtowc                                 ; rpl_mbrtowc
000000000000441b         test       rax, rax
000000000000441e         mov        r15, rax
0000000000004421         je         loc_4471

0000000000004423         cmp        rax, 0xffffffffffffffff
0000000000004427         je         loc_4a45

000000000000442d         cmp        rax, 0xfffffffffffffffe
0000000000004431         je         loc_49d1

0000000000004437         cmp        dword [rsp+0xe8+var_E0], 0x2
000000000000443c         sete       al
000000000000443f         and        al, byte [rsp+0xe8+var_D9]
0000000000004443         jne        loc_45e0

                     loc_4449:
0000000000004449         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_4200+996, sub_4200+1031
0000000000004450         call       j_iswprint                                  ; iswprint
0000000000004455         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
000000000000445a         test       eax, eax
000000000000445c         mov        eax, 0x0
0000000000004461         cmove      r12d, eax
0000000000004465         add        rbx, r15
0000000000004468         call       j_mbsinit                                   ; mbsinit
000000000000446d         test       eax, eax
000000000000446f         je         loc_43f3

                     loc_4471:
0000000000004471         mov        edx, r12d                                   ; CODE XREF=sub_4200+545
0000000000004474         mov        rdi, rbx
0000000000004477         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000447d         xor        edx, 0x1
0000000000004480         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000004485         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000448b         and        dl, byte [rsp+0xe8+var_DB]
000000000000448f         mov        r15, qword [rsp+0xe8+var_68]
0000000000004497         mov        r14, qword [rsp+0xe8+var_A8]
000000000000449c         mov        r13, qword [rsp+0xe8+var_78]
00000000000044a1         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_44a6:
00000000000044a6         cmp        rdi, 0x1                                    ; CODE XREF=sub_4200+2112, sub_4200+2168
00000000000044aa         jbe        loc_4aab

                     loc_44b0:
00000000000044b0         mov        rcx, rdi                                    ; CODE XREF=sub_4200+1961
00000000000044b3         xor        esi, esi
00000000000044b5         movzx      r9d, byte [rsp+0xe8+var_D9]
00000000000044bb         add        rcx, rbp
00000000000044be         mov        rdi, qword [rsp+0xe8+var_D8]
00000000000044c3         jmp        loc_457e
00000000000044c8         align      16

                     loc_44d0:
00000000000044d0         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_4200+896
00000000000044d5         sete       al
00000000000044d8         test       r9b, r9b
00000000000044db         jne        loc_4990

00000000000044e1         mov        esi, r8d
00000000000044e4         xor        esi, 0x1
00000000000044e7         and        al, sil
00000000000044ea         je         loc_451b

00000000000044ec         cmp        r13, r15
00000000000044ef         jbe        loc_44f6

00000000000044f1         mov        byte [r14+r15], 0x27

                     loc_44f6:
00000000000044f6         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_4200+751
00000000000044fa         cmp        r13, rsi
00000000000044fd         jbe        loc_4505

00000000000044ff         mov        byte [r14+r15+1], 0x24

                     loc_4505:
0000000000004505         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_4200+765
0000000000004509         cmp        r13, rsi
000000000000450c         jbe        loc_4514

000000000000450e         mov        byte [r14+r15+2], 0x27

                     loc_4514:
0000000000004514         add        r15, 0x3                                    ; CODE XREF=sub_4200+780
0000000000004518         mov        r8d, eax

                     loc_451b:
000000000000451b         cmp        r13, r15                                    ; CODE XREF=sub_4200+746
000000000000451e         jbe        loc_4525

0000000000004520         mov        byte [r14+r15], 0x5c

                     loc_4525:
0000000000004525         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4200+798
0000000000004529         cmp        r13, rax
000000000000452c         jbe        loc_453b

000000000000452e         mov        eax, ebx
0000000000004530         shr        al, 0x6
0000000000004533         add        eax, 0x30
0000000000004536         mov        byte [r14+r15+1], al

                     loc_453b:
000000000000453b         lea        rax, qword [r15+2]                          ; CODE XREF=sub_4200+812
000000000000453f         cmp        r13, rax
0000000000004542         jbe        loc_4554

0000000000004544         mov        eax, ebx
0000000000004546         shr        al, 0x3
0000000000004549         and        eax, 0x7
000000000000454c         add        eax, 0x30
000000000000454f         mov        byte [r14+r15+2], al

                     loc_4554:
0000000000004554         and        ebx, 0x7                                    ; CODE XREF=sub_4200+834
0000000000004557         add        rbp, 0x1
000000000000455b         add        r15, 0x3
000000000000455f         add        ebx, 0x30
0000000000004562         cmp        rbp, rcx
0000000000004565         jae        loc_3d50

000000000000456b         mov        esi, edx

                     loc_456d:
000000000000456d         cmp        r13, r15                                    ; CODE XREF=sub_4200+985, sub_4200+1969
0000000000004570         jbe        loc_4576

0000000000004572         mov        byte [r14+r15], bl

                     loc_4576:
0000000000004576         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_4200+880
000000000000457a         add        r15, 0x1

                     loc_457e:
000000000000457e         test       dl, dl                                      ; CODE XREF=sub_4200+707
0000000000004580         jne        loc_44d0

0000000000004586         mov        eax, esi
0000000000004588         xor        eax, 0x1
000000000000458b         and        eax, r8d
000000000000458e         test       r10b, r10b
0000000000004591         je         loc_45a1

0000000000004593         cmp        r13, r15
0000000000004596         jbe        loc_459d

0000000000004598         mov        byte [r14+r15], 0x5c

                     loc_459d:
000000000000459d         add        r15, 0x1                                    ; CODE XREF=sub_4200+918

                     loc_45a1:
00000000000045a1         add        rbp, 0x1                                    ; CODE XREF=sub_4200+913
00000000000045a5         cmp        rbp, rcx
00000000000045a8         jae        loc_3d2c

00000000000045ae         test       al, al
00000000000045b0         je         loc_49ae

00000000000045b6         cmp        r13, r15
00000000000045b9         jbe        loc_45c0

00000000000045bb         mov        byte [r14+r15], 0x27

                     loc_45c0:
00000000000045c0         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4200+953
00000000000045c4         cmp        r13, rax
00000000000045c7         jbe        loc_45cf

00000000000045c9         mov        byte [r14+r15+1], 0x27

                     loc_45cf:
00000000000045cf         add        r15, 0x2                                    ; CODE XREF=sub_4200+967
00000000000045d3         xor        r10d, r10d
00000000000045d6         xor        r8d, r8d
00000000000045d9         jmp        loc_456d
00000000000045db         align      32

                     loc_45e0:
00000000000045e0         cmp        r15, 0x1                                    ; CODE XREF=sub_4200+579
00000000000045e4         je         loc_4449

00000000000045ea         mov        rdi, qword [rsp+0xe8+var_D8]
00000000000045ef         lea        rcx, qword [rdi+r15]
00000000000045f3         lea        rdx, qword [rdi+r14+1]
00000000000045f8         lea        r8, qword [rcx+r14]
00000000000045fc         jmp        loc_460d
00000000000045fe         align      512

                     loc_4600:
0000000000004600         add        rdx, 0x1                                    ; CODE XREF=sub_4200+1046, sub_4200+1072
0000000000004604         cmp        r8, rdx
0000000000004607         je         loc_4449

                     loc_460d:
000000000000460d         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_4200+1020
0000000000004610         sub        ecx, 0x5b
0000000000004613         cmp        cl, 0x21
0000000000004616         ja         loc_4600

0000000000004618         mov        esi, 0x1
000000000000461d         shl        rsi, cl
0000000000004620         mov        rcx, rsi
0000000000004623         movabs     rsi, 0x20000002b
000000000000462d         test       rcx, rsi
0000000000004630         je         loc_4600

0000000000004632         mov        r14, qword [rsp+0xe8+var_A8]
0000000000004637         mov        r13, qword [rsp+0xe8+var_78]
000000000000463c         mov        rbp, qword [rsp+0xe8+var_B8]
0000000000004641         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_4649:
0000000000004649         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_4200+1227, sub_4200+1948, sub_4200+2585, sub_4200+2734
000000000000464e         je         loc_4660

0000000000004650         test       al, al
0000000000004652         mov        eax, 0x4
0000000000004657         cmove      eax, dword [rsp+0xe8+var_E0]
000000000000465c         mov        dword [rsp+0xe8+var_E0], eax

                     loc_4660:
0000000000004660         sub        rsp, 0x8                                    ; CODE XREF=sub_4200+1102
0000000000004664         mov        rcx, rbp
0000000000004667         mov        rsi, r13
000000000000466a         push       qword [rsp+0xf0+var_88]
000000000000466e         push       qword [rsp+0xf8+var_80]
0000000000004672         mov        rdi, r14
0000000000004675         push       0x0
0000000000004677         mov        r9d, dword [rsp+0x108+var_70]
000000000000467f         mov        r8d, dword [rsp+0x108+var_E0]
0000000000004684         mov        rdx, qword [rsp+0x108+var_D8]
0000000000004689         and        r9d, 0xfffffffd
000000000000468d         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004692         add        rsp, 0x20
0000000000004696         mov        r15, rax

                     loc_4699:
0000000000004699         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_4200+2549, sub_4200+2560, sub_4200+2711
00000000000046a1         xor        rbx, qword [fs:0x28]
00000000000046aa         mov        rax, r15
00000000000046ad         jne        loc_4cb3

00000000000046b3         add        rsp, 0xb8
00000000000046ba         pop        rbx
00000000000046bb         pop        rbp
00000000000046bc         pop        r12
00000000000046be         pop        r13
00000000000046c0         pop        r14
00000000000046c2         pop        r15
00000000000046c4         ret
                        ; endp
00000000000046c5         align      8

                     loc_46c8:
00000000000046c8         mov        rbp, r11                                    ; CODE XREF=sub_3db0+194
00000000000046cb         jmp        loc_4649

                     loc_46d0:
00000000000046d0         cmp        r13, r15                                    ; CODE XREF=sub_4200+206, sub_4200+220
00000000000046d3         jbe        loc_46da

00000000000046d5         mov        byte [r14+r15], 0x27

                     loc_46da:
00000000000046da         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4200+1235
00000000000046de         cmp        r13, rax
00000000000046e1         jbe        loc_46e9

00000000000046e3         mov        byte [r14+r15+1], 0x5c

                     loc_46e9:
00000000000046e9         lea        rax, qword [r15+2]                          ; CODE XREF=sub_4200+1249
00000000000046ed         cmp        r13, rax
00000000000046f0         jbe        loc_4ce2

00000000000046f6         mov        rdx, r13
00000000000046f9         mov        byte [r14+r15+2], 0x27
00000000000046ff         mov        r13, qword [rsp+arg_48]
0000000000004704         jmp        loc_42e2

                     loc_4709:
0000000000004709         mov        eax, r12d                                   ; CODE XREF=sub_40a0+99
000000000000470c         mov        ebx, 0x30
0000000000004711         xor        r12d, r12d
0000000000004714         jmp        sub_3cb0+105
                        ; endp

                     loc_4719:
0000000000004719         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_40a0+67
000000000000471f         jmp        loc_40e9

                     loc_4724:
0000000000004724         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
0000000000004726         jne        loc_3b53

000000000000472c         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_4731:
0000000000004731         test       r13, r13                                    ; CODE XREF=sub_4200+2749
0000000000004734         jne        loc_4cca

000000000000473a         lea        rax, qword [aLibs+29]                       ; 0x7075
0000000000004741         mov        qword [rsp+0xe8+var_98], 0x0
000000000000474a         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000474f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004754         xor        r12d, r12d
0000000000004757         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000475c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004765         mov        qword [rsp+0xe8+var_A0], rax
000000000000476a         mov        r15d, 0x1
0000000000004770         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000004778         jmp        loc_3b93
000000000000477d         align      128

                     loc_4780:
0000000000004780         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
0000000000004782         jne        loc_4b7d

0000000000004788         test       r13, r13
000000000000478b         je         loc_49b6

0000000000004791         mov        byte [r14], 0x22
0000000000004795         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000479a         xor        r12d, r12d
000000000000479d         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000047a2         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_47ab:
00000000000047ab         lea        rax, qword [aLibs+27]                       ; 0x7073, CODE XREF=sub_4200+1996
00000000000047b2         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000047b7         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000047bc         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000047c5         mov        r15d, 0x1
00000000000047cb         mov        qword [rsp+0xe8+var_A0], rax
00000000000047d0         jmp        loc_3b93

                     loc_47d5:
00000000000047d5         lea        rax, qword [aLibs+27]                       ; case 6, 0x7073, CODE XREF=quotearg_buffer_restyled+145
00000000000047dc         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000047e1         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000047e6         xor        r12d, r12d
00000000000047e9         mov        qword [rsp+0xe8+var_98], 0x0
00000000000047f2         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000047f7         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000047fc         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004805         xor        r15d, r15d
0000000000004808         mov        qword [rsp+0xe8+var_A0], rax
000000000000480d         mov        dword [rsp+0xe8+var_E0], 0x5
0000000000004815         jmp        loc_3b93

                     loc_481a:
000000000000481a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
000000000000481f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004824         xor        r12d, r12d
0000000000004827         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004830         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000004835         xor        r15d, r15d
0000000000004838         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000483d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000004846         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000484f         jmp        loc_3b93

                     loc_4854:
0000000000004854         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
0000000000004859         je         loc_48b1

000000000000485b         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0x7077
0000000000004862         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004864         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004869         call       j_dcgettext                                 ; dcgettext
000000000000486e         mov        rcx, rax
0000000000004871         mov        qword [rsp+0xe8+var_80], rax
0000000000004876         lea        rax, qword [aLibs+31]                       ; 0x7077
000000000000487d         cmp        rcx, rax
0000000000004880         je         loc_4c1e

                     loc_4886:
0000000000004886         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x7075, CODE XREF=sub_4200+2607
000000000000488d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000488f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004894         call       j_dcgettext                                 ; dcgettext
0000000000004899         mov        rcx, rax
000000000000489c         mov        qword [rsp+0xe8+var_88], rax
00000000000048a1         lea        rax, qword [aLibs+29]                       ; 0x7075
00000000000048a8         cmp        rcx, rax
00000000000048ab         je         loc_4c34

                     loc_48b1:
00000000000048b1         xor        r15d, r15d                                  ; CODE XREF=sub_4200+1625, sub_4200+2629
00000000000048b4         test       ebx, ebx
00000000000048b6         je         loc_4a7d

                     loc_48bc:
00000000000048bc         test       ebx, ebx                                    ; CODE XREF=sub_4200+2183, sub_4200+2214
00000000000048be         mov        rbx, qword [rsp+0xe8+var_88]
00000000000048c3         setne      byte [rsp+0xe8+var_D9]
00000000000048c8         xor        r12d, r12d
00000000000048cb         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
00000000000048ce         call       j_strlen                                    ; strlen
00000000000048d3         mov        qword [rsp+0xe8+var_A0], rbx
00000000000048d8         mov        qword [rsp+0xe8+var_D0], rax
00000000000048dd         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000048e2         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000048e7         mov        qword [rsp+0xe8+var_98], 0x0
00000000000048f0         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000048f5         jmp        loc_3b93

                     loc_48fa:
00000000000048fa         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
00000000000048ff         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004904         xor        r12d, r12d
0000000000004907         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004910         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000004915         xor        r15d, r15d
0000000000004918         mov        byte [rsp+0xe8+var_DB], 0x0
000000000000491d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000004926         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000492f         jmp        loc_3b93

                     loc_4934:
0000000000004934         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000004939         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000493e         xor        r12d, r12d
0000000000004941         mov        qword [rsp+0xe8+var_98], 0x0
000000000000494a         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000494f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004954         jmp        loc_3b73

                     loc_4959:
0000000000004959         cmp        r13, r15                                    ; CODE XREF=sub_40a0+133
000000000000495c         jbe        loc_4963

000000000000495e         mov        byte [r14+r15], 0x30

                     loc_4963:
0000000000004963         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_4200+1884
0000000000004967         cmp        r13, rax
000000000000496a         jbe        loc_4972

000000000000496c         mov        byte [r14+rcx+2], 0x30

                     loc_4972:
0000000000004972         mov        eax, r12d                                   ; CODE XREF=sub_4200+1898
0000000000004975         lea        r15, qword [rcx+3]
0000000000004979         xor        r12d, r12d
000000000000497c         mov        ebx, 0x30
0000000000004981         jmp        sub_3cb0+56
                        ; endp
0000000000004986         align      16

                     loc_4990:
0000000000004990         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_4200+731
0000000000004995         mov        rbp, r11
0000000000004998         mov        byte [rsp+0xe8+var_DB], bl
000000000000499c         jmp        loc_4649

                     loc_49a1:
00000000000049a1         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_3fa0+105
00000000000049a6         xor        r12d, r12d
00000000000049a9         jmp        loc_44b0

                     loc_49ae:
00000000000049ae         xor        r10d, r10d                                  ; CODE XREF=sub_4200+944
00000000000049b1         jmp        loc_456d

                     loc_49b6:
00000000000049b6         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_4200+1419
00000000000049bf         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000049c4         xor        r12d, r12d
00000000000049c7         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000049cc         jmp        loc_47ab

                     loc_49d1:
00000000000049d1         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_4200+561
00000000000049d6         mov        rsi, r14
00000000000049d9         mov        rcx, r13
00000000000049dc         mov        rax, rbx
00000000000049df         mov        rdi, rbx
00000000000049e2         movzx      r8d, byte [rsp+0xe8+var_6B]
00000000000049e8         movzx      ebx, byte [rsp+0xe8+var_6A]
00000000000049ed         mov        r9, qword [rsp+0xe8+var_60]
00000000000049f5         cmp        rsi, r11
00000000000049f8         movzx      r10d, byte [rsp+0xe8+var_69]
00000000000049fe         mov        r15, qword [rsp+0xe8+var_68]
0000000000004a06         mov        r14, qword [rsp+0xe8+var_A8]
0000000000004a0b         mov        r13, qword [rsp+0xe8+var_78]
0000000000004a10         jae        loc_4a38

0000000000004a12         cmp        byte [rcx], 0x0
0000000000004a15         jne        loc_4a27

0000000000004a17         jmp        loc_4a38
0000000000004a19         align      32

                     loc_4a20:
0000000000004a20         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_4200+2099
0000000000004a25         je         loc_4a35

                     loc_4a27:
0000000000004a27         add        rax, 0x1                                    ; CODE XREF=sub_4200+2069
0000000000004a2b         lea        rdx, qword [rbp+rax]
0000000000004a30         cmp        r11, rdx
0000000000004a33         ja         loc_4a20

                     loc_4a35:
0000000000004a35         mov        rdi, rax                                    ; CODE XREF=sub_4200+2085

                     loc_4a38:
0000000000004a38         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_4200+2064, sub_4200+2071
0000000000004a3d         xor        r12d, r12d
0000000000004a40         jmp        loc_44a6

                     loc_4a45:
0000000000004a45         mov        rdi, rbx                                    ; CODE XREF=sub_4200+551
0000000000004a48         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000004a4e         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000004a53         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000004a59         mov        r15, qword [rsp+0xe8+var_68]
0000000000004a61         xor        r12d, r12d
0000000000004a64         mov        r14, qword [rsp+0xe8+var_A8]
0000000000004a69         mov        r13, qword [rsp+0xe8+var_78]
0000000000004a6e         mov        r11, qword [rsp+0xe8+var_B8]
0000000000004a73         movzx      edx, byte [rsp+0xe8+var_DB]
0000000000004a78         jmp        loc_44a6

                     loc_4a7d:
0000000000004a7d         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_4200+1718
0000000000004a82         movzx      eax, byte [rdx]
0000000000004a85         test       al, al
0000000000004a87         je         loc_48bc

0000000000004a8d         nop        dword [rax]

                     loc_4a90:
0000000000004a90         cmp        r13, r15                                    ; CODE XREF=sub_4200+2212
0000000000004a93         jbe        loc_4a99

0000000000004a95         mov        byte [r14+r15], al

                     loc_4a99:
0000000000004a99         add        r15, 0x1                                    ; CODE XREF=sub_4200+2195
0000000000004a9d         movzx      eax, byte [rdx+r15]
0000000000004aa2         test       al, al
0000000000004aa4         jne        loc_4a90

0000000000004aa6         jmp        loc_48bc

                     loc_4aab:
0000000000004aab         mov        eax, edx                                    ; CODE XREF=sub_4200+682
0000000000004aad         jmp        loc_4007

                     loc_4ab2:
0000000000004ab2         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_4200+290
0000000000004ab6         cmp        bl, 0x3e
0000000000004ab9         ja         loc_4330

0000000000004abf         movabs     rax, 0x7000a38200000000
0000000000004ac9         bt         rax, rbx
0000000000004acd         jae        loc_4330

0000000000004ad3         cmp        byte [rsp+arg_7], 0x0
0000000000004ad8         jne        loc_4cc2

0000000000004ade         cmp        r13, r15
0000000000004ae1         jbe        loc_4ae8

0000000000004ae3         mov        byte [r14+r15], 0x3f

                     loc_4ae8:
0000000000004ae8         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4200+2273
0000000000004aec         cmp        r13, rax
0000000000004aef         jbe        loc_4af7

0000000000004af1         mov        byte [r14+r15+1], 0x22

                     loc_4af7:
0000000000004af7         lea        rax, qword [r15+2]                          ; CODE XREF=sub_4200+2287
0000000000004afb         cmp        r13, rax
0000000000004afe         jbe        loc_4b06

0000000000004b00         mov        byte [r14+r15+2], 0x22

                     loc_4b06:
0000000000004b06         lea        rax, qword [r15+3]                          ; CODE XREF=sub_4200+2302
0000000000004b0a         cmp        r13, rax
0000000000004b0d         jbe        loc_4b15

0000000000004b0f         mov        byte [r14+r15+3], 0x3f

                     loc_4b15:
0000000000004b15         add        r15, 0x4                                    ; CODE XREF=sub_4200+2317
0000000000004b19         xor        edx, edx
0000000000004b1b         xor        r12d, r12d
0000000000004b1e         xor        eax, eax
0000000000004b20         mov        rbp, rcx
0000000000004b23         jmp        sub_3cb0+56
                        ; endp

                     loc_4b28:
0000000000004b28         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
0000000000004b2a         je         loc_4cb8

0000000000004b30         lea        rax, qword [aLibs+29]                       ; 0x7075
0000000000004b37         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004b3c         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004b41         xor        r12d, r12d
0000000000004b44         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004b4d         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000004b52         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000004b57         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004b60         xor        r15d, r15d
0000000000004b63         mov        qword [rsp+0xe8+var_A0], rax
0000000000004b68         jmp        loc_3b93
0000000000004b6d         align      16

                     loc_4b70:
0000000000004b70         mov        rbp, r11                                    ; CODE XREF=sub_4200+333
0000000000004b73         movzx      eax, byte [rsp+arg_7]
0000000000004b78         jmp        sub_4200+1097
                        ; endp

                     loc_4b7d:
0000000000004b7d         lea        rax, qword [aLibs+27]                       ; 0x7073, CODE XREF=sub_4200+1410
0000000000004b84         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004b89         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004b8e         xor        r12d, r12d
0000000000004b91         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004b9a         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000004b9f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004ba4         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004bad         xor        r15d, r15d
0000000000004bb0         mov        qword [rsp+0xe8+var_A0], rax
0000000000004bb5         jmp        loc_3b93

                     loc_4bba:
0000000000004bba         mov        eax, edx                                    ; CODE XREF=sub_4200+87

                     loc_4bbc:
0000000000004bbc         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_4200+76, sub_4200+2721
0000000000004bc1         test       rbx, rbx
0000000000004bc4         je         loc_4bf2

0000000000004bc6         test       al, al
0000000000004bc8         je         loc_4bf2

0000000000004bca         movzx      ecx, byte [rbx]
0000000000004bcd         mov        rax, rbx
0000000000004bd0         test       cl, cl
0000000000004bd2         je         loc_4bf2

0000000000004bd4         mov        rdx, r15
0000000000004bd7         sub        rax, r15

                     loc_4bda:
0000000000004bda         cmp        r13, rdx                                    ; CODE XREF=sub_4200+2541
0000000000004bdd         jbe        loc_4be3

0000000000004bdf         mov        byte [r14+rdx], cl

                     loc_4be3:
0000000000004be3         add        rdx, 0x1                                    ; CODE XREF=sub_4200+2525
0000000000004be7         movzx      ecx, byte [rax+rdx]
0000000000004beb         test       cl, cl
0000000000004bed         jne        loc_4bda

0000000000004bef         mov        r15, rdx

                     loc_4bf2:
0000000000004bf2         cmp        r13, r15                                    ; CODE XREF=sub_4200+2500, sub_4200+2504, sub_4200+2514
0000000000004bf5         jbe        loc_4699

0000000000004bfb         mov        byte [r14+r15], 0x0
0000000000004c00         jmp        loc_4699

                     loc_4c05:
0000000000004c05         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
0000000000004c0a         movzx      ebx, byte [rsp+0xe8+var_D9]
0000000000004c0f         mov        rbp, r11
0000000000004c12         sete       al
0000000000004c15         mov        byte [rsp+0xe8+var_DB], bl
0000000000004c19         jmp        loc_4649

                     loc_4c1e:
0000000000004c1e         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_4200+1664
0000000000004c22         mov        rdi, rcx
0000000000004c25         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000004c2a         mov        qword [rsp+0xe8+var_80], rax
0000000000004c2f         jmp        loc_4886

                     loc_4c34:
0000000000004c34         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_4200+1707
0000000000004c38         mov        rdi, rcx
0000000000004c3b         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000004c40         mov        qword [rsp+0xe8+var_88], rax
0000000000004c45         jmp        loc_48b1

                     loc_4c4a:
0000000000004c4a         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_40a0+16
0000000000004c4f         mov        rbp, r11
0000000000004c52         mov        eax, edx
0000000000004c54         mov        byte [rsp+arg_5], bl
0000000000004c58         jmp        sub_4200+1097
                        ; endp

                     loc_4c5d:
0000000000004c5d         sub        rsp, 0x8                                    ; CODE XREF=sub_4200+98
0000000000004c61         mov        r8d, 0x5
0000000000004c67         mov        rcx, r11
0000000000004c6a         push       qword [rsp+0xf0+var_88]
0000000000004c6e         push       qword [rsp+0xf8+var_80]
0000000000004c72         mov        rdi, r14
0000000000004c75         push       qword [rsp+0x100+var_C8]
0000000000004c79         mov        r9d, dword [rsp+0x108+var_70]
0000000000004c81         mov        rdx, qword [rsp+0x108+var_D8]
0000000000004c86         mov        rsi, qword [rsp+0x108+var_98]
0000000000004c8b         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004c90         add        rsp, 0x20
0000000000004c94         mov        r15, rax
0000000000004c97         jmp        loc_4699

                     loc_4c9c:
0000000000004c9c         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_4200+121
0000000000004ca1         jmp        loc_4bbc

                     loc_4ca6:
0000000000004ca6         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_4200+63
0000000000004cae         jmp        loc_4649

                     loc_4cb3:
0000000000004cb3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_4200+1197
                        ; endp

                     loc_4cb8:
0000000000004cb8         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_4200+2346
0000000000004cbd         jmp        loc_4731

                     loc_4cc2:
0000000000004cc2         mov        rbp, r11                                    ; CODE XREF=sub_4200+2264
0000000000004cc5         jmp        sub_4200+1120
                        ; endp

                     loc_4cca:
0000000000004cca         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_4200+1332
0000000000004ccf         xor        eax, eax
0000000000004cd1         xor        r12d, r12d
0000000000004cd4         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004cdd         jmp        loc_4284

                     loc_4ce2:
0000000000004ce2         mov        rdx, r13                                    ; CODE XREF=sub_4200+1264
0000000000004ce5         mov        r13, qword [rsp+arg_48]
0000000000004cea         jmp        loc_42e2

                     loc_4cef:
0000000000004cef         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
0000000000004cf4         align      256                                         ; End of unwind block (FDE at 0x7f68)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
0000000000004d00         push       r15                                         ; Begin of unwind block (FDE at 0x7fe0), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
0000000000004d02         push       r14
0000000000004d04         movsxd     r15, edi
0000000000004d07         push       r13
0000000000004d09         push       r12
0000000000004d0b         mov        r14, rdx
0000000000004d0e         push       rbp
0000000000004d0f         push       rbx
0000000000004d10         mov        rbp, rcx
0000000000004d13         sub        rsp, 0x28
0000000000004d17         mov        qword [rsp+0x58+var_50], rsi
0000000000004d1c         call       j___errno_location                          ; __errno_location
0000000000004d21         mov        r13, rax
0000000000004d24         mov        eax, dword [rax]
0000000000004d26         test       r15d, r15d
0000000000004d29         mov        rbx, qword [nslots+8]                       ; 0x209080
0000000000004d30         mov        dword [rsp+0x58+var_40], eax
0000000000004d34         js         loc_4ea1

0000000000004d3a         cmp        dword [nslots], r15d                        ; nslots
0000000000004d41         jg         loc_4da5

0000000000004d43         cmp        r15d, 0x7fffffff
0000000000004d4a         je         loc_4ea6

0000000000004d50         lea        r12d, dword [r15+1]
0000000000004d54         lea        rax, qword [slotvec0]                       ; slotvec0
0000000000004d5b         movsxd     rsi, r12d
0000000000004d5e         shl        rsi, 0x4
0000000000004d62         cmp        rbx, rax
0000000000004d65         je         loc_4e80

0000000000004d6b         mov        rdi, rbx                                    ; argument #1 for method xrealloc
0000000000004d6e         call       xrealloc                                    ; xrealloc
0000000000004d73         mov        rbx, rax
0000000000004d76         mov        qword [nslots+8], rax                       ; 0x209080

                     loc_4d7d:
0000000000004d7d         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
0000000000004d84         mov        edx, r12d
0000000000004d87         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000004d89         sub        edx, edi
0000000000004d8b         shl        rdi, 0x4
0000000000004d8f         movsxd     rdx, edx
0000000000004d92         add        rdi, rbx                                    ; argument "__s" for method j_memset
0000000000004d95         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
0000000000004d99         call       j_memset                                    ; memset
0000000000004d9e         mov        dword [nslots], r12d                        ; nslots

                     loc_4da5:
0000000000004da5         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
0000000000004da8         shl        r15, 0x4
0000000000004dac         sub        rsp, 0x8
0000000000004db0         add        rbx, r15
0000000000004db3         lea        r15, qword [rbp+8]
0000000000004db7         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000004dbb         mov        r11, qword [rbx]
0000000000004dbe         mov        r12, qword [rbx+8]
0000000000004dc2         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000004dc5         or         eax, 0x1
0000000000004dc8         mov        dword [rsp+0x60+var_3C], eax
0000000000004dcc         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000004dcf         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
0000000000004dd2         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000004dd5         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000004dd7         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
0000000000004dda         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000004ddf         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
0000000000004de2         mov        qword [rsp+0x78+var_48], r11
0000000000004de7         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004dec         add        rsp, 0x20
0000000000004df0         mov        r11, qword [rsp+0x58+var_48]
0000000000004df5         cmp        r11, rax
0000000000004df8         ja         loc_4e61

0000000000004dfa         lea        rsi, qword [rax+1]
0000000000004dfe         lea        rax, qword [slot0]                          ; slot0
0000000000004e05         cmp        r12, rax
0000000000004e08         mov        qword [rbx], rsi
0000000000004e0b         je         loc_4e1f

0000000000004e0d         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000004e10         mov        qword [rsp+0x58+var_48], rsi
0000000000004e15         call       j_free                                      ; free
0000000000004e1a         mov        rsi, qword [rsp+0x58+var_48]

                     loc_4e1f:
0000000000004e1f         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
0000000000004e22         mov        qword [rsp+0x58+var_48], rsi
0000000000004e27         call       xmalloc                                     ; xmalloc
0000000000004e2c         sub        rsp, 0x8
0000000000004e30         mov        qword [rbx+8], rax
0000000000004e34         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000004e38         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000004e3b         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000004e3e         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000004e41         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000004e43         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
0000000000004e48         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
0000000000004e4b         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000004e50         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
0000000000004e55         mov        r12, rax
0000000000004e58         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004e5d         add        rsp, 0x20

                     loc_4e61:
0000000000004e61         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
0000000000004e65         mov        dword [r13], eax
0000000000004e69         add        rsp, 0x28
0000000000004e6d         mov        rax, r12
0000000000004e70         pop        rbx
0000000000004e71         pop        rbp
0000000000004e72         pop        r12
0000000000004e74         pop        r13
0000000000004e76         pop        r14
0000000000004e78         pop        r15
0000000000004e7a         ret
                        ; endp
0000000000004e7b         align      128

                     loc_4e80:
0000000000004e80         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
0000000000004e82         call       xrealloc                                    ; xrealloc
0000000000004e87         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
0000000000004e8f         mov        rbx, rax
0000000000004e92         mov        qword [nslots+8], rax                       ; 0x209080
0000000000004e99         movups     xmmword [rax], xmm0
0000000000004e9c         jmp        loc_4d7d

                     loc_4ea1:
0000000000004ea1         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_4ea6:
0000000000004ea6         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4eab:
0000000000004eab         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x7fe0)
                     clone_quoting_options:
0000000000004eb0         push       r12                                         ; Begin of unwind block (FDE at 0x804c)
0000000000004eb2         push       rbp
0000000000004eb3         push       rbx
0000000000004eb4         mov        rbx, rdi
0000000000004eb7         call       j___errno_location                          ; __errno_location
0000000000004ebc         mov        r12d, dword [rax]
0000000000004ebf         mov        rbp, rax
0000000000004ec2         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000004ec9         test       rbx, rbx
0000000000004ecc         mov        esi, 0x38                                   ; argument #2 for method xmemdup
0000000000004ed1         cmove      rbx, rax
0000000000004ed5         mov        rdi, rbx                                    ; argument #1 for method xmemdup
0000000000004ed8         call       xmemdup                                     ; xmemdup
0000000000004edd         mov        dword [rbp], r12d
0000000000004ee1         pop        rbx
0000000000004ee2         pop        rbp
0000000000004ee3         pop        r12
0000000000004ee5         ret
                        ; endp
0000000000004ee6         align      16                                          ; End of unwind block (FDE at 0x804c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
0000000000004ef0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8078), default_quoting_options
0000000000004ef7         test       rdi, rdi
0000000000004efa         cmove      rdi, rax
0000000000004efe         mov        eax, dword [rdi]
0000000000004f00         ret
                        ; endp
0000000000004f01         align      16                                          ; End of unwind block (FDE at 0x8078)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
0000000000004f10         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x808c), default_quoting_options
0000000000004f17         test       rdi, rdi
0000000000004f1a         cmove      rdi, rax
0000000000004f1e         mov        dword [rdi], esi
0000000000004f20         ret
                        ; endp
0000000000004f21         align      16                                          ; End of unwind block (FDE at 0x808c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
0000000000004f30         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x80a0), default_quoting_options
0000000000004f37         test       rdi, rdi
0000000000004f3a         mov        ecx, esi
0000000000004f3c         cmove      rdi, rax
0000000000004f40         mov        eax, esi
0000000000004f42         and        ecx, 0x1f
0000000000004f45         shr        al, 0x5
0000000000004f48         movzx      eax, al
0000000000004f4b         lea        rdi, qword [rdi+rax*4+8]
0000000000004f50         mov        esi, dword [rdi]
0000000000004f52         mov        eax, esi
0000000000004f54         shr        eax, cl
0000000000004f56         xor        edx, eax
0000000000004f58         and        eax, 0x1
0000000000004f5b         and        edx, 0x1
0000000000004f5e         shl        edx, cl
0000000000004f60         xor        edx, esi
0000000000004f62         mov        dword [rdi], edx
0000000000004f64         ret
                        ; endp
0000000000004f65         align      16                                          ; End of unwind block (FDE at 0x80a0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
0000000000004f70         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x80b4), default_quoting_options
0000000000004f77         test       rdi, rdi
0000000000004f7a         cmove      rdi, rax
0000000000004f7e         mov        eax, dword [rdi+4]
0000000000004f81         mov        dword [rdi+4], esi
0000000000004f84         ret
                        ; endp
0000000000004f85         align      16                                          ; End of unwind block (FDE at 0x80b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
0000000000004f90         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x80c8), default_quoting_options
0000000000004f97         test       rdi, rdi
0000000000004f9a         cmove      rdi, rax
0000000000004f9e         test       rsi, rsi
0000000000004fa1         mov        dword [rdi], 0xa
0000000000004fa7         je         loc_4fb7

0000000000004fa9         test       rdx, rdx
0000000000004fac         je         loc_4fb7

0000000000004fae         mov        qword [rdi+0x28], rsi
0000000000004fb2         mov        qword [rdi+0x30], rdx
0000000000004fb6         ret
                        ; endp

                     loc_4fb7:
0000000000004fb7         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
0000000000004fbb         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
0000000000004fc0         push       r15                                         ; End of unwind block (FDE at 0x80c8), Begin of unwind block (FDE at 0x80dc)
0000000000004fc2         push       r14
0000000000004fc4         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000004fcb         push       r13
0000000000004fcd         push       r12
0000000000004fcf         mov        r13, rdi
0000000000004fd2         push       rbp
0000000000004fd3         push       rbx
0000000000004fd4         mov        rbx, r8
0000000000004fd7         mov        r14, rsi
0000000000004fda         mov        r15, rdx
0000000000004fdd         sub        rsp, 0x18
0000000000004fe1         test       r8, r8
0000000000004fe4         cmove      rbx, rax
0000000000004fe8         mov        qword [rsp+0x48+var_40], rcx
0000000000004fed         call       j___errno_location                          ; __errno_location
0000000000004ff2         mov        r12d, dword [rax]
0000000000004ff5         mov        rbp, rax
0000000000004ff8         lea        rax, qword [rbx+8]
0000000000004ffc         sub        rsp, 0x8
0000000000005000         mov        r9d, dword [rbx+4]
0000000000005004         push       qword [rbx+0x30]
0000000000005007         mov        r8d, dword [rbx]
000000000000500a         push       qword [rbx+0x28]
000000000000500d         mov        rdx, r15
0000000000005010         push       rax
0000000000005011         mov        rcx, qword [rsp+0x68+var_40]
0000000000005016         mov        rsi, r14
0000000000005019         mov        rdi, r13
000000000000501c         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000005021         mov        dword [rbp], r12d
0000000000005025         add        rsp, 0x38
0000000000005029         pop        rbx
000000000000502a         pop        rbp
000000000000502b         pop        r12
000000000000502d         pop        r13
000000000000502f         pop        r14
0000000000005031         pop        r15
0000000000005033         ret
                        ; endp
0000000000005034         align      64                                          ; End of unwind block (FDE at 0x80dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
0000000000005040         push       r15                                         ; Begin of unwind block (FDE at 0x8130), CODE XREF=quotearg_alloc+5
0000000000005042         push       r14
0000000000005044         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000504b         push       r13
000000000000504d         push       r12
000000000000504f         mov        r12, rdx
0000000000005052         push       rbp
0000000000005053         push       rbx
0000000000005054         mov        rbx, rcx
0000000000005057         mov        r14, rdi
000000000000505a         mov        r15, rsi
000000000000505d         sub        rsp, 0x38
0000000000005061         test       rcx, rcx
0000000000005064         cmove      rbx, rax
0000000000005068         xor        ebp, ebp
000000000000506a         call       j___errno_location                          ; __errno_location
000000000000506f         test       r12, r12
0000000000005072         mov        r13, rax
0000000000005075         mov        eax, dword [rax]
0000000000005077         sete       bpl
000000000000507b         or         ebp, dword [rbx+4]
000000000000507e         lea        r10, qword [rbx+8]
0000000000005082         sub        rsp, 0x8
0000000000005086         mov        r8d, dword [rbx]
0000000000005089         mov        rcx, r15
000000000000508c         mov        dword [rsp+0x70+var_5C], eax
0000000000005090         push       qword [rbx+0x30]
0000000000005093         mov        rdx, r14
0000000000005096         push       qword [rbx+0x28]
0000000000005099         push       r10
000000000000509b         xor        esi, esi
000000000000509d         mov        r9d, ebp
00000000000050a0         xor        edi, edi
00000000000050a2         mov        qword [rsp+0x88+var_48], r10
00000000000050a7         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000050ac         lea        rsi, qword [rax+1]
00000000000050b0         mov        qword [rsp+0x88+var_40], rax
00000000000050b5         add        rsp, 0x20
00000000000050b9         mov        rdi, rsi
00000000000050bc         mov        qword [rsp+0x68+var_50], rsi
00000000000050c1         call       xmalloc                                     ; xmalloc
00000000000050c6         mov        qword [rsp+0x68+var_58], rax
00000000000050cb         sub        rsp, 0x8
00000000000050cf         push       qword [rbx+0x30]
00000000000050d2         push       qword [rbx+0x28]
00000000000050d5         mov        r10, qword [rsp+0x80+var_48]
00000000000050da         mov        r9d, ebp
00000000000050dd         mov        r8d, dword [rbx]
00000000000050e0         mov        rcx, r15
00000000000050e3         mov        rdx, r14
00000000000050e6         mov        rdi, rax
00000000000050e9         push       r10
00000000000050eb         mov        rsi, qword [rsp+0x88+var_50]
00000000000050f0         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000050f5         mov        eax, dword [rsp+0x88+var_5C]
00000000000050f9         add        rsp, 0x20
00000000000050fd         test       r12, r12
0000000000005100         mov        dword [r13], eax
0000000000005104         je         loc_510f

0000000000005106         mov        r11, qword [rsp+0x68+var_40]
000000000000510b         mov        qword [r12], r11

                     loc_510f:
000000000000510f         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
0000000000005114         add        rsp, 0x38
0000000000005118         pop        rbx
0000000000005119         pop        rbp
000000000000511a         pop        r12
000000000000511c         pop        r13
000000000000511e         pop        r14
0000000000005120         pop        r15
0000000000005122         ret
                        ; endp
0000000000005123         align      16                                          ; End of unwind block (FDE at 0x8130)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
0000000000005130         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x819c)
0000000000005133         xor        edx, edx
0000000000005135         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
000000000000513a         align      64                                          ; End of unwind block (FDE at 0x819c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
0000000000005140         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0x81b0), nslots
0000000000005146         push       r12
0000000000005148         mov        r12, qword [nslots+8]                       ; 0x209080
000000000000514f         push       rbp
0000000000005150         push       rbx
0000000000005151         cmp        eax, 0x1
0000000000005154         jle        loc_5181

0000000000005156         sub        eax, 0x2
0000000000005159         lea        rbx, qword [r12+0x18]
000000000000515e         shl        rax, 0x4
0000000000005162         lea        rbp, qword [r12+rax+0x28]
0000000000005167         nop        word [rax+rax]

                     loc_5170:
0000000000005170         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
0000000000005173         add        rbx, 0x10
0000000000005177         call       j_free                                      ; free
000000000000517c         cmp        rbx, rbp
000000000000517f         jne        loc_5170

                     loc_5181:
0000000000005181         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
0000000000005186         lea        rbx, qword [slot0]                          ; slot0
000000000000518d         cmp        rdi, rbx
0000000000005190         je         loc_51a9

0000000000005192         call       j_free                                      ; free
0000000000005197         mov        qword [slotvec0], 0x100                     ; slotvec0
00000000000051a2         mov        qword [slotvec0+8], rbx                     ; 0x209098

                     loc_51a9:
00000000000051a9         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
00000000000051b0         cmp        r12, rbx
00000000000051b3         je         loc_51c4

00000000000051b5         mov        rdi, r12                                    ; argument "__ptr" for method j_free
00000000000051b8         call       j_free                                      ; free
00000000000051bd         mov        qword [nslots+8], rbx                       ; 0x209080

                     loc_51c4:
00000000000051c4         pop        rbx                                         ; CODE XREF=quotearg_free+115
00000000000051c5         mov        dword [nslots], 0x1                         ; nslots
00000000000051cf         pop        rbp
00000000000051d0         pop        r12
00000000000051d2         ret
                        ; endp
00000000000051d3         align      32                                          ; End of unwind block (FDE at 0x81b0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
00000000000051e0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x81dc), default_quoting_options
00000000000051e7         mov        rdx, 0xffffffffffffffff
00000000000051ee         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000051f3         align      512                                         ; End of unwind block (FDE at 0x81dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
0000000000005200         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x81f0), default_quoting_options
0000000000005207         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000520c         align      16                                          ; End of unwind block (FDE at 0x81f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
0000000000005210         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8204), default_quoting_options
0000000000005217         mov        rsi, rdi
000000000000521a         mov        rdx, 0xffffffffffffffff
0000000000005221         xor        edi, edi
0000000000005223         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005228         align      16                                          ; End of unwind block (FDE at 0x8204)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
0000000000005230         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8218), default_quoting_options
0000000000005237         mov        rdx, rsi
000000000000523a         mov        rsi, rdi
000000000000523d         xor        edi, edi
000000000000523f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005244         align      16                                          ; End of unwind block (FDE at 0x8218)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
0000000000005250         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x822c)
0000000000005254         mov        rax, rdx
0000000000005257         mov        rdx, qword [fs:0x28]
0000000000005260         mov        qword [rsp+0x48+var_10], rdx
0000000000005265         xor        edx, edx
0000000000005267         cmp        esi, 0xa
000000000000526a         je         loc_52d4

000000000000526c         mov        dword [rsp+0x48+var_48], esi
000000000000526f         mov        rcx, rsp
0000000000005272         mov        rdx, 0xffffffffffffffff
0000000000005279         mov        rsi, rax
000000000000527c         mov        qword [rsp+0x48+var_44], 0x0
0000000000005285         mov        qword [rsp+0x48+var_3C], 0x0
000000000000528e         mov        qword [rsp+0x48+var_34], 0x0
0000000000005297         mov        qword [rsp+0x48+var_2C], 0x0
00000000000052a0         mov        qword [rsp+0x48+var_24], 0x0
00000000000052a9         mov        qword [rsp+0x48+var_1C], 0x0
00000000000052b2         mov        dword [rsp+0x48+var_14], 0x0
00000000000052ba         call       quotearg_n_options                          ; quotearg_n_options
00000000000052bf         mov        rcx, qword [rsp+0x48+var_10]
00000000000052c4         xor        rcx, qword [fs:0x28]
00000000000052cd         jne        loc_52d9

00000000000052cf         add        rsp, 0x48
00000000000052d3         ret
                        ; endp

                     loc_52d4:
00000000000052d4         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_52d9:
00000000000052d9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
00000000000052de         align      32                                          ; End of unwind block (FDE at 0x822c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
00000000000052e0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x8248), CODE XREF=quotearg_style_mem+10
00000000000052e4         mov        rax, rdx
00000000000052e7         mov        rdx, rcx
00000000000052ea         mov        rcx, qword [fs:0x28]
00000000000052f3         mov        qword [rsp+0x48+var_10], rcx
00000000000052f8         xor        ecx, ecx
00000000000052fa         cmp        esi, 0xa
00000000000052fd         je         loc_5360

00000000000052ff         mov        dword [rsp+0x48+var_48], esi
0000000000005302         mov        rcx, rsp
0000000000005305         mov        rsi, rax
0000000000005308         mov        qword [rsp+0x48+var_44], 0x0
0000000000005311         mov        qword [rsp+0x48+var_3C], 0x0
000000000000531a         mov        qword [rsp+0x48+var_34], 0x0
0000000000005323         mov        qword [rsp+0x48+var_2C], 0x0
000000000000532c         mov        qword [rsp+0x48+var_24], 0x0
0000000000005335         mov        qword [rsp+0x48+var_1C], 0x0
000000000000533e         mov        dword [rsp+0x48+var_14], 0x0
0000000000005346         call       quotearg_n_options                          ; quotearg_n_options
000000000000534b         mov        rdx, qword [rsp+0x48+var_10]
0000000000005350         xor        rdx, qword [fs:0x28]
0000000000005359         jne        loc_5365

000000000000535b         add        rsp, 0x48
000000000000535f         ret
                        ; endp

                     loc_5360:
0000000000005360         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_5365:
0000000000005365         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
000000000000536a         align      16                                          ; End of unwind block (FDE at 0x8248)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
0000000000005370         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x8264)
0000000000005373         mov        esi, edi
0000000000005375         xor        edi, edi
0000000000005377         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
000000000000537c         align      128                                         ; End of unwind block (FDE at 0x8264)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
0000000000005380         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x8278)
0000000000005383         mov        rdx, rsi
0000000000005386         mov        esi, edi
0000000000005388         xor        edi, edi
000000000000538a         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
000000000000538f         align      16                                          ; End of unwind block (FDE at 0x8278)

                     quotearg_char_mem:
0000000000005390         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x828c), CODE XREF=quotearg_char+11
0000000000005394         mov        ecx, edx
0000000000005396         mov        rax, qword [fs:0x28]
000000000000539f         mov        qword [rsp+0x48+var_10], rax
00000000000053a4         xor        eax, eax
00000000000053a6         mov        rax, qword [qword_209290]                   ; qword_209290
00000000000053ad         mov        r8, rsp
00000000000053b0         and        ecx, 0x1f
00000000000053b3         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
00000000000053bb         mov        qword [rsp+0x48+var_18], rax
00000000000053c0         mov        eax, edx
00000000000053c2         movaps     xmmword [rsp+0x48+var_48], xmm0
00000000000053c6         shr        al, 0x5
00000000000053c9         movzx      eax, al
00000000000053cc         lea        r9, qword [r8+rax*4+8]
00000000000053d1         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x209270
00000000000053d9         movaps     xmmword [rsp+0x48+var_38], xmm0
00000000000053de         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x209280
00000000000053e6         movaps     xmmword [rsp+0x48+var_28], xmm0
00000000000053eb         mov        edx, dword [r9]
00000000000053ee         mov        eax, edx
00000000000053f0         shr        eax, cl
00000000000053f2         not        eax
00000000000053f4         and        eax, 0x1
00000000000053f7         shl        eax, cl
00000000000053f9         mov        rcx, r8
00000000000053fc         xor        eax, edx
00000000000053fe         mov        rdx, rsi
0000000000005401         mov        rsi, rdi
0000000000005404         mov        dword [r9], eax
0000000000005407         xor        edi, edi
0000000000005409         call       quotearg_n_options                          ; quotearg_n_options
000000000000540e         mov        rsi, qword [rsp+0x48+var_10]
0000000000005413         xor        rsi, qword [fs:0x28]
000000000000541c         jne        loc_5423

000000000000541e         add        rsp, 0x48
0000000000005422         ret
                        ; endp

                     loc_5423:
0000000000005423         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
0000000000005428         align      16                                          ; End of unwind block (FDE at 0x828c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
0000000000005430         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0x82a8)
0000000000005434         mov        rsi, 0xffffffffffffffff
000000000000543b         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
0000000000005440         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0x82a8), Begin of unwind block (FDE at 0x82bc), CODE XREF=close_stdout+101
0000000000005445         mov        rsi, 0xffffffffffffffff
000000000000544c         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000005451         align      32                                          ; End of unwind block (FDE at 0x82bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
0000000000005460         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0x82d0)
0000000000005465         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
000000000000546a         align      16                                          ; End of unwind block (FDE at 0x82d0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
0000000000005470         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x82e4), CODE XREF=cut_file+1367
0000000000005474         mov        rax, rdx
0000000000005477         mov        rdx, qword [fs:0x28]
0000000000005480         mov        qword [rsp+0x48+var_10], rdx
0000000000005485         xor        edx, edx
0000000000005487         cmp        esi, 0xa
000000000000548a         je         loc_54f4

000000000000548c         mov        dword [rsp+0x48+var_48], esi
000000000000548f         mov        rcx, rsp
0000000000005492         mov        rdx, 0xffffffffffffffff
0000000000005499         mov        rsi, rax
000000000000549c         mov        qword [rsp+0x48+var_44], 0x0
00000000000054a5         mov        qword [rsp+0x48+var_3C], 0x4000000
00000000000054ae         mov        qword [rsp+0x48+var_34], 0x0
00000000000054b7         mov        qword [rsp+0x48+var_2C], 0x0
00000000000054c0         mov        qword [rsp+0x48+var_24], 0x0
00000000000054c9         mov        qword [rsp+0x48+var_1C], 0x0
00000000000054d2         mov        dword [rsp+0x48+var_14], 0x0
00000000000054da         call       quotearg_n_options                          ; quotearg_n_options
00000000000054df         mov        rcx, qword [rsp+0x48+var_10]
00000000000054e4         xor        rcx, qword [fs:0x28]
00000000000054ed         jne        loc_54f9

00000000000054ef         add        rsp, 0x48
00000000000054f3         ret
                        ; endp

                     loc_54f4:
00000000000054f4         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_54f9:
00000000000054f9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
00000000000054fe         align      256                                         ; End of unwind block (FDE at 0x82e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom_mem:
0000000000005500         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x8300), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
0000000000005504         mov        r9, rcx
0000000000005507         mov        rcx, qword [qword_209290]                   ; qword_209290
000000000000550e         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000005516         mov        rax, qword [fs:0x28]
000000000000551f         mov        qword [rsp+0x48+var_10], rax
0000000000005524         xor        eax, eax
0000000000005526         movaps     xmmword [rsp+0x48+var_48], xmm0
000000000000552a         test       rsi, rsi
000000000000552d         mov        qword [rsp+0x48+var_18], rcx
0000000000005532         mov        dword [rsp+0x48+var_48], 0xa
0000000000005539         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x209270
0000000000005541         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000005546         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x209280
000000000000554e         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000005553         je         loc_5587

0000000000005555         test       rdx, rdx
0000000000005558         je         loc_5587

000000000000555a         mov        qword [rsp+0x48+var_20], rsi
000000000000555f         mov        qword [rsp+0x48+var_18], rdx
0000000000005564         mov        rcx, rsp
0000000000005567         mov        rdx, r8
000000000000556a         mov        rsi, r9
000000000000556d         call       quotearg_n_options                          ; quotearg_n_options
0000000000005572         mov        rdi, qword [rsp+0x48+var_10]
0000000000005577         xor        rdi, qword [fs:0x28]
0000000000005580         jne        loc_558c

0000000000005582         add        rsp, 0x48
0000000000005586         ret
                        ; endp

                     loc_5587:
0000000000005587         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_558c:
000000000000558c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
0000000000005591         align      32                                          ; End of unwind block (FDE at 0x8300)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_custom:
00000000000055a0         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0x831c)
00000000000055a7         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
00000000000055ac         align      16                                          ; End of unwind block (FDE at 0x831c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
00000000000055b0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x8330)
00000000000055b3         mov        r8, 0xffffffffffffffff
00000000000055ba         mov        rdx, rsi
00000000000055bd         mov        rsi, rdi
00000000000055c0         xor        edi, edi
00000000000055c2         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
00000000000055c7         align      16                                          ; End of unwind block (FDE at 0x8330)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
00000000000055d0         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0x8344)
00000000000055d3         mov        rcx, rdx
00000000000055d6         mov        rdx, rsi
00000000000055d9         mov        rsi, rdi
00000000000055dc         xor        edi, edi
00000000000055de         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
00000000000055e3         align      16                                          ; End of unwind block (FDE at 0x8344)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
00000000000055f0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x8358), quote_quoting_options
00000000000055f7         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000055fc         align      512                                         ; End of unwind block (FDE at 0x8358)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
0000000000005600         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x836c), quote_quoting_options
0000000000005607         mov        rdx, rsi
000000000000560a         mov        rsi, rdi
000000000000560d         xor        edi, edi
000000000000560f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005614         align      32                                          ; End of unwind block (FDE at 0x836c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
0000000000005620         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x8380), quote_quoting_options
0000000000005627         mov        rdx, 0xffffffffffffffff
000000000000562e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005633         align      64                                          ; End of unwind block (FDE at 0x8380)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
0000000000005640         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x8394), quote_quoting_options, CODE XREF=set_fields+1220, set_fields+1375
0000000000005647         mov        rsi, rdi
000000000000564a         mov        rdx, 0xffffffffffffffff
0000000000005651         xor        edi, edi
0000000000005653         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005658         align      32                                          ; End of unwind block (FDE at 0x8394)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
0000000000005660         push       r15                                         ; Begin of unwind block (FDE at 0x83ac), CODE XREF=version_etc_va+75, version_etc+161
0000000000005662         push       r14
0000000000005664         push       r13
0000000000005666         push       r12
0000000000005668         mov        r12, r9
000000000000566b         push       rbp
000000000000566c         push       rbx
000000000000566d         mov        rbp, rdi
0000000000005670         mov        rbx, r8
0000000000005673         sub        rsp, 0x28
0000000000005677         test       rsi, rsi
000000000000567a         je         loc_5798

0000000000005680         mov        r8, rdx
0000000000005683         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
000000000000568a         mov        r9, rcx
000000000000568d         xor        eax, eax
000000000000568f         mov        rcx, rsi
0000000000005692         mov        esi, 0x1
0000000000005697         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_569c:
000000000000569c         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0x755b, CODE XREF=version_etc_arn+337
00000000000056a3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000056a5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000056aa         call       j_dcgettext                                 ; dcgettext
00000000000056af         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
00000000000056b6         mov        rcx, rax
00000000000056b9         mov        r8d, 0x7e3
00000000000056bf         mov        esi, 0x1
00000000000056c4         mov        rdi, rbp
00000000000056c7         xor        eax, eax
00000000000056c9         call       j___fprintf_chk                             ; __fprintf_chk
00000000000056ce         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
00000000000056d5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000056d7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000056dc         call       j_dcgettext                                 ; dcgettext
00000000000056e1         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
00000000000056e4         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000056e7         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000056ec         cmp        r12, 0x9
00000000000056f0         ja         loc_5a30

00000000000056f6         lea        rdx, qword [switch_table_7848]              ; switch_table_7848
00000000000056fd         movsxd     rax, dword [rdx+r12*4]
0000000000005701         add        rax, rdx
0000000000005704         jmp        rax                                         ; switch statement using table at 0x7848, with 10 cases, 0x5710,0x5786,0x57c0,0x5818,0x5858,0x58a0,0x58f0,0x5948,0x5978,0x59e0
0000000000005706         align      16

                     loc_5710:
0000000000005710         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
0000000000005714         mov        rax, qword [rbx+0x10]
0000000000005718         lea        rsi, qword [aWrittenBySSSns_7758]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
000000000000571f         mov        r8, qword [rbx+8]
0000000000005723         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005728         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000572a         mov        r13, qword [rbx+0x30]
000000000000572e         mov        r12, qword [rbx+0x28]
0000000000005732         mov        qword [rsp+0x58+var_48], r9
0000000000005737         mov        r15, qword [rbx+0x20]
000000000000573b         mov        r14, qword [rbx+0x18]
000000000000573f         mov        qword [rsp+0x58+var_58], rax
0000000000005743         mov        qword [rsp+0x58+var_50], r8
0000000000005748         mov        rbx, qword [rbx]
000000000000574b         call       j_dcgettext                                 ; dcgettext
0000000000005750         sub        rsp, 0x8

                     loc_5754:
0000000000005754         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
0000000000005759         mov        rdx, rax
000000000000575c         mov        rcx, rbx
000000000000575f         mov        esi, 0x1
0000000000005764         mov        rdi, rbp
0000000000005767         xor        eax, eax
0000000000005769         push       r9
000000000000576b         push       r13
000000000000576d         push       r12
000000000000576f         push       r15
0000000000005771         push       r14
0000000000005773         mov        r9, qword [rsp+0x88+var_58]
0000000000005778         mov        r8, qword [rsp+0x88+var_50]
000000000000577d         call       j___fprintf_chk                             ; __fprintf_chk
0000000000005782         add        rsp, 0x30

                     loc_5786:
0000000000005786         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
000000000000578a         pop        rbx
000000000000578b         pop        rbp
000000000000578c         pop        r12
000000000000578e         pop        r13
0000000000005790         pop        r14
0000000000005792         pop        r15
0000000000005794         ret
                        ; endp
0000000000005795         align      8

                     loc_5798:
0000000000005798         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
000000000000579b         mov        rcx, rdx
000000000000579e         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
00000000000057a5         mov        esi, 0x1
00000000000057aa         xor        eax, eax
00000000000057ac         call       j___fprintf_chk                             ; __fprintf_chk
00000000000057b1         jmp        loc_569c
00000000000057b6         align      64

                     loc_57c0:
00000000000057c0         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
00000000000057c4         mov        r9, qword [rbx+0x38]
00000000000057c8         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
00000000000057cf         mov        rax, qword [rbx+0x10]
00000000000057d3         mov        r8, qword [rbx+8]
00000000000057d7         mov        edx, 0x5
00000000000057dc         mov        r13, qword [rbx+0x30]
00000000000057e0         mov        r12, qword [rbx+0x28]
00000000000057e4         mov        r15, qword [rbx+0x20]
00000000000057e8         mov        r14, qword [rbx+0x18]
00000000000057ec         mov        rbx, qword [rbx]
00000000000057ef         mov        qword [rsp+0x58+var_40], r10
00000000000057f4         mov        qword [rsp+0x58+var_48], r9
00000000000057f9         mov        qword [rsp+0x58+var_58], rax
00000000000057fd         mov        qword [rsp+0x58+var_50], r8

                     loc_5802:
0000000000005802         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
0000000000005804         call       j_dcgettext                                 ; dcgettext
0000000000005809         mov        r10, qword [rsp+0x58+var_40]
000000000000580e         push       r10
0000000000005810         jmp        loc_5754
0000000000005815         align      8

                     loc_5818:
0000000000005818         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
000000000000581b         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
0000000000005822         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005827         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005829         call       j_dcgettext                                 ; dcgettext
000000000000582e         add        rsp, 0x28
0000000000005832         mov        rcx, rbx
0000000000005835         mov        rdi, rbp
0000000000005838         pop        rbx
0000000000005839         pop        rbp
000000000000583a         pop        r12
000000000000583c         pop        r13
000000000000583e         pop        r14
0000000000005840         pop        r15
0000000000005842         mov        rdx, rax
0000000000005845         mov        esi, 0x1
000000000000584a         xor        eax, eax
000000000000584c         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000005851         align      8

                     loc_5858:
0000000000005858         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
000000000000585c         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
0000000000005863         mov        rbx, qword [rbx]
0000000000005866         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000586b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000586d         call       j_dcgettext                                 ; dcgettext
0000000000005872         add        rsp, 0x28
0000000000005876         mov        r8, r12
0000000000005879         mov        rcx, rbx
000000000000587c         mov        rdi, rbp
000000000000587f         mov        rdx, rax
0000000000005882         mov        esi, 0x1
0000000000005887         pop        rbx
0000000000005888         pop        rbp
0000000000005889         pop        r12
000000000000588b         pop        r13
000000000000588d         pop        r14
000000000000588f         pop        r15
0000000000005891         xor        eax, eax
0000000000005893         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000005898         align      32

                     loc_58a0:
00000000000058a0         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
00000000000058a4         mov        r12, qword [rbx+8]
00000000000058a8         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
00000000000058af         mov        rbx, qword [rbx]
00000000000058b2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000058b7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000058b9         call       j_dcgettext                                 ; dcgettext
00000000000058be         add        rsp, 0x28
00000000000058c2         mov        r9, r13
00000000000058c5         mov        r8, r12
00000000000058c8         mov        rcx, rbx
00000000000058cb         mov        rdi, rbp
00000000000058ce         mov        rdx, rax
00000000000058d1         pop        rbx
00000000000058d2         pop        rbp
00000000000058d3         pop        r12
00000000000058d5         pop        r13
00000000000058d7         pop        r14
00000000000058d9         pop        r15
00000000000058db         mov        esi, 0x1
00000000000058e0         xor        eax, eax
00000000000058e2         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
00000000000058e7         align      16

                     loc_58f0:
00000000000058f0         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
00000000000058f7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000058fc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000058fe         mov        r14, qword [rbx+0x18]
0000000000005902         mov        r13, qword [rbx+0x10]
0000000000005906         mov        r12, qword [rbx+8]
000000000000590a         mov        rbx, qword [rbx]
000000000000590d         call       j_dcgettext                                 ; dcgettext
0000000000005912         sub        rsp, 0x8

                     loc_5916:
0000000000005916         push       r14                                         ; CODE XREF=version_etc_arn+784
0000000000005918         mov        rdx, rax
000000000000591b         mov        r9, r13
000000000000591e         mov        r8, r12
0000000000005921         mov        rcx, rbx
0000000000005924         mov        rdi, rbp
0000000000005927         mov        esi, 0x1
000000000000592c         xor        eax, eax
000000000000592e         call       j___fprintf_chk                             ; __fprintf_chk
0000000000005933         pop        rax
0000000000005934         pop        rdx
0000000000005935         add        rsp, 0x28
0000000000005939         pop        rbx
000000000000593a         pop        rbp
000000000000593b         pop        r12
000000000000593d         pop        r13
000000000000593f         pop        r14
0000000000005941         pop        r15
0000000000005943         ret
                        ; endp
0000000000005944         align      8

                     loc_5948:
0000000000005948         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
000000000000594c         lea        rsi, qword [aWrittenBySSSns_76d8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
0000000000005953         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005958         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000595a         mov        r14, qword [rbx+0x18]
000000000000595e         mov        r13, qword [rbx+0x10]
0000000000005962         mov        r12, qword [rbx+8]
0000000000005966         mov        rbx, qword [rbx]
0000000000005969         call       j_dcgettext                                 ; dcgettext
000000000000596e         push       r15
0000000000005970         jmp        loc_5916
0000000000005972         align      8

                     loc_5978:
0000000000005978         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
000000000000597c         mov        r12, qword [rbx+0x28]
0000000000005980         lea        rsi, qword [aWrittenBySSSns_7700]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
0000000000005987         mov        r15, qword [rbx+0x20]
000000000000598b         mov        r14, qword [rbx+0x18]
000000000000598f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005994         mov        r13, qword [rbx+0x10]
0000000000005998         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000599a         mov        rbx, qword [rbx]
000000000000599d         mov        qword [rsp+0x58+var_58], r8
00000000000059a1         call       j_dcgettext                                 ; dcgettext
00000000000059a6         sub        rsp, 0x8
00000000000059aa         mov        r9, r13
00000000000059ad         push       r12
00000000000059af         push       r15
00000000000059b1         push       r14

                     loc_59b3:
00000000000059b3         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
00000000000059b8         mov        rcx, rbx
00000000000059bb         mov        rdx, rax
00000000000059be         mov        rdi, rbp
00000000000059c1         mov        esi, 0x1
00000000000059c6         xor        eax, eax
00000000000059c8         call       j___fprintf_chk                             ; __fprintf_chk
00000000000059cd         add        rsp, 0x20
00000000000059d1         add        rsp, 0x28
00000000000059d5         pop        rbx
00000000000059d6         pop        rbp
00000000000059d7         pop        r12
00000000000059d9         pop        r13
00000000000059db         pop        r14
00000000000059dd         pop        r15
00000000000059df         ret
                        ; endp

                     loc_59e0:
00000000000059e0         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
00000000000059e4         mov        r13, qword [rbx+0x30]
00000000000059e8         lea        rsi, qword [aWrittenBySSSns_7728]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
00000000000059ef         mov        r12, qword [rbx+0x28]
00000000000059f3         mov        r15, qword [rbx+0x20]
00000000000059f7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000059fc         mov        r14, qword [rbx+0x18]
0000000000005a00         mov        r8, qword [rbx+8]
0000000000005a04         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005a06         mov        qword [rsp+0x58+var_50], r9
0000000000005a0b         mov        rbx, qword [rbx]
0000000000005a0e         mov        qword [rsp+0x58+var_58], r8
0000000000005a12         call       j_dcgettext                                 ; dcgettext
0000000000005a17         push       r13
0000000000005a19         push       r12
0000000000005a1b         push       r15
0000000000005a1d         push       r14
0000000000005a1f         mov        r9, qword [rsp+0x78+var_50]
0000000000005a24         jmp        loc_59b3
0000000000005a26         align      16

                     loc_5a30:
0000000000005a30         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
0000000000005a34         mov        r9, qword [rbx+0x38]
0000000000005a38         mov        edx, 0x5
0000000000005a3d         mov        rax, qword [rbx+0x10]
0000000000005a41         mov        r8, qword [rbx+8]
0000000000005a45         lea        rsi, qword [aWrittenBySSSns_77c0]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
0000000000005a4c         mov        r13, qword [rbx+0x30]
0000000000005a50         mov        r12, qword [rbx+0x28]
0000000000005a54         mov        r15, qword [rbx+0x20]
0000000000005a58         mov        r14, qword [rbx+0x18]
0000000000005a5c         mov        qword [rsp+0x58+var_40], r10
0000000000005a61         mov        qword [rsp+0x58+var_48], r9
0000000000005a66         mov        qword [rsp+0x58+var_58], rax
0000000000005a6a         mov        qword [rsp+0x58+var_50], r8
0000000000005a6f         mov        rbx, qword [rbx]
0000000000005a72         jmp        loc_5802
0000000000005a77         align      128                                         ; End of unwind block (FDE at 0x83ac)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
0000000000005a80         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0x84c0)
0000000000005a83         cmp        qword [r8], 0x0
0000000000005a87         je         j_version_etc_arn                           ; version_etc_arn

0000000000005a89         nop        dword [rax]

                     loc_5a90:
0000000000005a90         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
0000000000005a94         cmp        qword [r8+r9*8], 0x0
0000000000005a99         jne        loc_5a90

                     j_version_etc_arn:        // version_etc_arn
0000000000005a9b         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
0000000000005aa0         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0x84c0), Begin of unwind block (FDE at 0x84d4)
0000000000005aa4         mov        r10, r8
0000000000005aa7         xor        r9d, r9d
0000000000005aaa         mov        rax, qword [fs:0x28]
0000000000005ab3         mov        qword [rsp+0x68+var_10], rax
0000000000005ab8         xor        eax, eax
0000000000005aba         mov        r8, rsp
0000000000005abd         nop        dword [rax]

                     loc_5ac0:
0000000000005ac0         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000005ac3         cmp        eax, 0x2f
0000000000005ac6         ja         loc_5b0a

0000000000005ac8         mov        r11d, eax
0000000000005acb         add        r11, qword [r10+0x10]
0000000000005acf         add        eax, 0x8
0000000000005ad2         mov        dword [r10], eax

                     loc_5ad5:
0000000000005ad5         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000005ad8         test       rax, rax
0000000000005adb         mov        qword [r8+r9*8], rax
0000000000005adf         je         loc_5aeb

0000000000005ae1         add        r9, 0x1
0000000000005ae5         cmp        r9, 0xa
0000000000005ae9         jne        loc_5ac0

                     loc_5aeb:
0000000000005aeb         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
0000000000005af0         mov        rax, qword [rsp+0x68+var_10]
0000000000005af5         xor        rax, qword [fs:0x28]
0000000000005afe         jne        loc_5b05

0000000000005b00         add        rsp, 0x68
0000000000005b04         ret
                        ; endp

                     loc_5b05:
0000000000005b05         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_5b0a:
0000000000005b0a         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
0000000000005b0e         lea        rax, qword [r11+8]
0000000000005b12         mov        qword [r10+8], rax
0000000000005b16         jmp        loc_5ad5
0000000000005b18         align      32                                          ; End of unwind block (FDE at 0x84d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
0000000000005b20         push       rbp                                         ; Begin of unwind block (FDE at 0x84f0), CODE XREF=main+307
0000000000005b21         push       rbx
0000000000005b22         mov        r10d, 0x20
0000000000005b28         xor        r11d, r11d
0000000000005b2b         sub        rsp, 0xb8
0000000000005b32         mov        rax, qword [fs:0x28]
0000000000005b3b         mov        qword [rsp+0xc8+var_50], rax
0000000000005b40         xor        eax, eax
0000000000005b42         lea        rax, qword [rsp+0xc8+arg_0]
0000000000005b4a         mov        qword [rsp+0xc8+var_28], r8
0000000000005b52         lea        rbx, qword [rsp+0xc8+arg_0]
0000000000005b5a         lea        r8, qword [rsp+0xc8+var_A8]
0000000000005b5f         mov        qword [rsp+0xc8+var_20], r9
0000000000005b67         mov        dword [rsp+0xc8+var_C0], 0x20
0000000000005b6f         mov        qword [rsp+0xc8+var_B8], rax
0000000000005b74         lea        rax, qword [rsp+0xc8+var_48]
0000000000005b7c         xor        r9d, r9d
0000000000005b7f         mov        qword [rsp+0xc8+var_B0], rax
0000000000005b84         mov        rbp, rax
0000000000005b87         nop        word [rax+rax]

                     loc_5b90:
0000000000005b90         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
0000000000005b94         ja         loc_5bec

0000000000005b96         mov        eax, r10d
0000000000005b99         mov        r11d, 0x1
0000000000005b9f         add        r10d, 0x8
0000000000005ba3         add        rax, rbp

                     loc_5ba6:
0000000000005ba6         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
0000000000005ba9         test       rax, rax
0000000000005bac         mov        qword [r8+r9*8], rax
0000000000005bb0         je         loc_5bbc

0000000000005bb2         add        r9, 0x1
0000000000005bb6         cmp        r9, 0xa
0000000000005bba         jne        loc_5b90

                     loc_5bbc:
0000000000005bbc         test       r11b, r11b                                  ; CODE XREF=version_etc+144
0000000000005bbf         jne        loc_5be5

                     loc_5bc1:
0000000000005bc1         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000005bc6         mov        rax, qword [rsp+0xc8+var_50]
0000000000005bcb         xor        rax, qword [fs:0x28]
0000000000005bd4         jne        loc_5be0

0000000000005bd6         add        rsp, 0xb8
0000000000005bdd         pop        rbx
0000000000005bde         pop        rbp
0000000000005bdf         ret
                        ; endp

                     loc_5be0:
0000000000005be0         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_5be5:
0000000000005be5         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
0000000000005bea         jmp        loc_5bc1

                     loc_5bec:
0000000000005bec         mov        rax, rbx                                    ; CODE XREF=version_etc+116
0000000000005bef         add        rbx, 0x8
0000000000005bf3         jmp        loc_5ba6
0000000000005bf5         align      1024                                        ; End of unwind block (FDE at 0x84f0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
0000000000005c00         push       rbx                                         ; Begin of unwind block (FDE at 0x851c)
0000000000005c01         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
0000000000005c08         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005c0d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005c0f         call       j_dcgettext                                 ; dcgettext
0000000000005c14         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
0000000000005c1b         mov        rsi, rax
0000000000005c1e         mov        edi, 0x1
0000000000005c23         xor        eax, eax
0000000000005c25         call       j___printf_chk                              ; __printf_chk
0000000000005c2a         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
0000000000005c31         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005c36         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005c38         call       j_dcgettext                                 ; dcgettext
0000000000005c3d         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000005c44         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x6527
0000000000005c4b         mov        rsi, rax
0000000000005c4e         mov        edi, 0x1
0000000000005c53         xor        eax, eax
0000000000005c55         call       j___printf_chk                              ; __printf_chk
0000000000005c5a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000005c61         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
0000000000005c68         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005c6a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005c6f         call       j_dcgettext                                 ; dcgettext
0000000000005c74         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000005c77         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000005c7a         pop        rbx
0000000000005c7b         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
0000000000005c80         push       rbx                                         ; End of unwind block (FDE at 0x851c), Begin of unwind block (FDE at 0x853c), CODE XREF=quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15
0000000000005c81         mov        rbx, rdi
0000000000005c84         call       j_malloc                                    ; malloc
0000000000005c89         test       rax, rax
0000000000005c8c         jne        loc_5c93

0000000000005c8e         test       rbx, rbx
0000000000005c91         jne        loc_5c95

                     loc_5c93:
0000000000005c93         pop        rbx                                         ; CODE XREF=xmalloc+12
0000000000005c94         ret
                        ; endp

                     loc_5c95:
0000000000005c95         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5c9a:
0000000000005c9a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x853c)
                     xnmalloc:
0000000000005ca0         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x8558)
0000000000005ca3         mul        rsi
0000000000005ca6         mov        rdi, rax
0000000000005ca9         seto       al
0000000000005cac         test       rdi, rdi
0000000000005caf         js         loc_5cbb

0000000000005cb1         movzx      eax, al
0000000000005cb4         test       rax, rax
0000000000005cb7         jne        loc_5cbb

0000000000005cb9         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_5cbb:
0000000000005cbb         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
0000000000005cbf         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5cc4:
0000000000005cc4         nop                                                    ; End of unwind block (FDE at 0x8558)
0000000000005cc6         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000005cd0         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0x856c)
                        ; endp
0000000000005cd2         align      32                                          ; End of unwind block (FDE at 0x856c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000005ce0         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x8580), CODE XREF=add_range_pair+122, set_fields+573, quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
0000000000005ce3         push       rbx
0000000000005ce4         mov        rbx, rsi
0000000000005ce7         jne        loc_5cee

0000000000005ce9         test       rdi, rdi
0000000000005cec         jne        loc_5d08

                     loc_5cee:
0000000000005cee         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000005cf1         call       j_realloc                                   ; realloc
0000000000005cf6         test       rax, rax
0000000000005cf9         jne        loc_5d00

0000000000005cfb         test       rbx, rbx
0000000000005cfe         jne        loc_5d11

                     loc_5d00:
0000000000005d00         pop        rbx                                         ; CODE XREF=xrealloc+25
0000000000005d01         ret
                        ; endp
0000000000005d02         align      8

                     loc_5d08:
0000000000005d08         call       j_free                                      ; free, CODE XREF=xrealloc+12
0000000000005d0d         xor        eax, eax
0000000000005d0f         pop        rbx
0000000000005d10         ret
                        ; endp

                     loc_5d11:
0000000000005d11         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5d16:
0000000000005d16         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x8580)
                     xnrealloc:
0000000000005d20         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x85a4)
0000000000005d23         mul        rdx
0000000000005d26         mov        rsi, rax
0000000000005d29         seto       al
0000000000005d2c         test       rsi, rsi
0000000000005d2f         js         loc_5d3b

0000000000005d31         movzx      eax, al
0000000000005d34         test       rax, rax
0000000000005d37         jne        loc_5d3b

0000000000005d39         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_5d3b:
0000000000005d3b         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
0000000000005d3f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5d44:
0000000000005d44         nop                                                    ; End of unwind block (FDE at 0x85a4)
0000000000005d46         nop        word [cs:rax+rax]
                     x2nrealloc:
0000000000005d50         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x85b8)
0000000000005d53         mov        r9, rdx
0000000000005d56         mov        rcx, qword [rsi]
0000000000005d59         je         loc_5d90

0000000000005d5b         xor        edx, edx
0000000000005d5d         movabs     rax, 0x5555555555555554
0000000000005d67         div        r9
0000000000005d6a         cmp        rax, rcx
0000000000005d6d         jbe        loc_5dab

0000000000005d6f         mov        rax, rcx
0000000000005d72         shr        rax, 0x1
0000000000005d75         lea        rcx, qword [rax+rcx+1]

                     loc_5d7a:
0000000000005d7a         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
0000000000005d7d         imul       rcx, r9                                     ; argument #4 for method xrealloc
0000000000005d81         mov        rsi, rcx                                    ; argument #2 for method xrealloc
0000000000005d84         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000005d89         align      16

                     loc_5d90:
0000000000005d90         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
0000000000005d93         je         loc_5db8

                     loc_5d95:
0000000000005d95         mov        rax, rcx                                    ; CODE XREF=sub_5db4+28
0000000000005d98         mul        r9
0000000000005d9b         seto       dl
0000000000005d9e         test       rax, rax
0000000000005da1         movzx      edx, dl
0000000000005da4         js         loc_5dab

0000000000005da6         test       rdx, rdx
0000000000005da9         je         loc_5d7a

                     loc_5dab:
0000000000005dab         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
0000000000005daf         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5db4:
0000000000005db4         nop        dword [rax]
                        ; endp

                     loc_5db8:
0000000000005db8         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
0000000000005dba         mov        eax, 0x80
0000000000005dbf         xor        r8d, r8d
0000000000005dc2         div        r9
0000000000005dc5         test       rax, rax
0000000000005dc8         sete       r8b
0000000000005dcc         lea        rcx, qword [r8+rax]
0000000000005dd0         jmp        loc_5d95
0000000000005dd2         align      32                                          ; End of unwind block (FDE at 0x85b8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000005de0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x85d0)
0000000000005de3         mov        rax, qword [rsi]
0000000000005de6         je         loc_5e10

0000000000005de8         movabs     rdx, 0x5555555555555553
0000000000005df2         cmp        rax, rdx
0000000000005df5         ja         loc_5e21

0000000000005df7         mov        rdx, rax
0000000000005dfa         shr        rdx, 0x1
0000000000005dfd         lea        rax, qword [rdx+rax+1]

                     loc_5e02:
0000000000005e02         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
0000000000005e05         mov        rsi, rax                                    ; argument #2 for method xrealloc
0000000000005e08         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000005e0d         align      16

                     loc_5e10:
0000000000005e10         test       rax, rax                                    ; CODE XREF=x2realloc+6
0000000000005e13         mov        edx, 0x80
0000000000005e18         cmove      rax, rdx
0000000000005e1c         test       rax, rax
0000000000005e1f         jns        loc_5e02

                     loc_5e21:
0000000000005e21         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
0000000000005e25         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5e2a:
0000000000005e2a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x85d0)
                     xzalloc:
0000000000005e30         push       rbx                                         ; Begin of unwind block (FDE at 0x85e8)
0000000000005e31         mov        rbx, rdi
0000000000005e34         call       xmalloc                                     ; xmalloc
0000000000005e39         mov        rdx, rbx                                    ; argument "__n" for method j_memset
0000000000005e3c         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000005e3e         mov        rdi, rax                                    ; argument "__s" for method j_memset
0000000000005e41         pop        rbx
0000000000005e42         jmp        j_memset                                    ; memset
                        ; endp
0000000000005e47         align      16                                          ; End of unwind block (FDE at 0x85e8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
0000000000005e50         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x8604)
0000000000005e53         sub        rsp, 0x8
0000000000005e57         mul        rsi
0000000000005e5a         seto       dl
0000000000005e5d         test       rax, rax
0000000000005e60         js         loc_5e79

0000000000005e62         movzx      edx, dl
0000000000005e65         test       rdx, rdx
0000000000005e68         jne        loc_5e79

0000000000005e6a         call       j_calloc                                    ; calloc
0000000000005e6f         test       rax, rax
0000000000005e72         je         loc_5e79

0000000000005e74         add        rsp, 0x8
0000000000005e78         ret
                        ; endp

                     loc_5e79:
0000000000005e79         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5e7e:
0000000000005e7e         nop                                                    ; End of unwind block (FDE at 0x8604)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmemdup:
0000000000005e80         push       rbp                                         ; Begin of unwind block (FDE at 0x8620), CODE XREF=clone_quoting_options+40
0000000000005e81         push       rbx
0000000000005e82         mov        rbp, rdi
0000000000005e85         mov        rdi, rsi
0000000000005e88         mov        rbx, rsi
0000000000005e8b         sub        rsp, 0x8
0000000000005e8f         call       xmalloc                                     ; xmalloc
0000000000005e94         add        rsp, 0x8
0000000000005e98         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
0000000000005e9b         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
0000000000005e9e         pop        rbx
0000000000005e9f         pop        rbp
0000000000005ea0         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000005ea3         jmp        j_memcpy                                    ; memcpy
                        ; endp
0000000000005ea8         align      16                                          ; End of unwind block (FDE at 0x8620)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000005eb0         push       rbx                                         ; Begin of unwind block (FDE at 0x8648), CODE XREF=main+567
0000000000005eb1         mov        rbx, rdi
0000000000005eb4         call       j_strlen                                    ; strlen
0000000000005eb9         mov        rdi, rbx
0000000000005ebc         lea        rsi, qword [rax+1]
0000000000005ec0         pop        rbx
0000000000005ec1         jmp        xmemdup                                     ; xmemdup
                        ; endp
0000000000005ec3         align      16                                          ; End of unwind block (FDE at 0x8648)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000005ed0         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x8664), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=cut_file+1819, add_range_pair+189, quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41, xstrndup+19
0000000000005ed7         sub        rsp, 0x8
0000000000005edb         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000005ee0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000005ee2         call       j_dcgettext                                 ; dcgettext
0000000000005ee7         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
0000000000005eed         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x7016
0000000000005ef4         mov        rcx, rax
0000000000005ef7         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000005ef9         xor        eax, eax
0000000000005efb         call       j_error                                     ; error
0000000000005f00         call       j_abort                                     ; abort
                        ; endp
0000000000005f05         align      16                                          ; End of unwind block (FDE at 0x8664)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrndup:
0000000000005f10         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x867c), CODE XREF=set_fields+1209
0000000000005f14         call       j_strndup                                   ; strndup
0000000000005f19         test       rax, rax
0000000000005f1c         je         loc_5f23

0000000000005f1e         add        rsp, 0x8
0000000000005f22         ret
                        ; endp

                     loc_5f23:
0000000000005f23         call       xalloc_die                                  ; xalloc_die, CODE XREF=xstrndup+12
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_5f28:
0000000000005f28         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x867c)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
0000000000005f30         push       r12                                         ; Begin of unwind block (FDE at 0x869c), CODE XREF=main+922, cut_file+1293, close_stream+21
0000000000005f32         push       rbp
0000000000005f33         push       rbx
0000000000005f34         mov        rbx, rdi
0000000000005f37         call       j_fileno                                    ; fileno
0000000000005f3c         test       eax, eax
0000000000005f3e         mov        rdi, rbx
0000000000005f41         js         loc_5f97

0000000000005f43         call       j___freading                                ; __freading
0000000000005f48         test       eax, eax
0000000000005f4a         jne        loc_5f78

                     loc_5f4c:
0000000000005f4c         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
0000000000005f4f         call       rpl_fflush                                  ; rpl_fflush
0000000000005f54         test       eax, eax
0000000000005f56         je         loc_5f94

0000000000005f58         call       j___errno_location                          ; __errno_location
0000000000005f5d         mov        r12d, dword [rax]
0000000000005f60         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
0000000000005f63         mov        rbp, rax
0000000000005f66         call       j_fclose                                    ; fclose
0000000000005f6b         test       r12d, r12d
0000000000005f6e         jne        loc_5fa0

                     loc_5f70:
0000000000005f70         pop        rbx                                         ; CODE XREF=rpl_fclose+121
0000000000005f71         pop        rbp
0000000000005f72         pop        r12
0000000000005f74         ret
                        ; endp
0000000000005f75         align      8

                     loc_5f78:
0000000000005f78         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
0000000000005f7b         call       j_fileno                                    ; fileno
0000000000005f80         xor        esi, esi                                    ; argument "__offset" for method j_lseek
0000000000005f82         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000005f87         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000005f89         call       j_lseek                                     ; lseek
0000000000005f8e         cmp        rax, 0xffffffffffffffff
0000000000005f92         jne        loc_5f4c

                     loc_5f94:
0000000000005f94         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_5f97:
0000000000005f97         pop        rbx                                         ; CODE XREF=rpl_fclose+17
0000000000005f98         pop        rbp
0000000000005f99         pop        r12
0000000000005f9b         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_5fa0:
0000000000005fa0         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
0000000000005fa4         mov        eax, 0xffffffff
0000000000005fa9         jmp        loc_5f70
0000000000005fab         align      16                                          ; End of unwind block (FDE at 0x869c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
0000000000005fb0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x86d4), CODE XREF=rpl_fclose+31
0000000000005fb3         push       rbx
0000000000005fb4         mov        rbx, rdi
0000000000005fb7         je         loc_5fca

0000000000005fb9         call       j___freading                                ; __freading
0000000000005fbe         test       eax, eax
0000000000005fc0         je         loc_5fca

0000000000005fc2         test       dword [rbx], 0x100
0000000000005fc8         jne        loc_5fd8

                     loc_5fca:
0000000000005fca         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
0000000000005fcd         pop        rbx
0000000000005fce         jmp        j_fflush                                    ; fflush
                        ; endp
0000000000005fd3         align      8

                     loc_5fd8:
0000000000005fd8         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
0000000000005fdb         mov        edx, 0x1
0000000000005fe0         xor        esi, esi
0000000000005fe2         call       rpl_fseeko                                  ; rpl_fseeko
0000000000005fe7         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
0000000000005fea         pop        rbx
0000000000005feb         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     freadptr:
0000000000005ff0         mov        rax, qword [rdi+0x20]                       ; End of unwind block (FDE at 0x86d4), Begin of unwind block (FDE at 0x86f4), CODE XREF=getndelim2+385, freadseek+106
0000000000005ff4         cmp        qword [rdi+0x28], rax
0000000000005ff8         ja         loc_6010

0000000000005ffa         mov        rax, qword [rdi+8]
0000000000005ffe         mov        rdx, qword [rdi+0x10]
0000000000006002         sub        rdx, rax
0000000000006005         je         loc_6010

0000000000006007         mov        qword [rsi], rdx
000000000000600a         ret
                        ; endp
000000000000600b         align      16

                     loc_6010:
0000000000006010         xor        eax, eax                                    ; CODE XREF=freadptr+8, freadptr+21
0000000000006012         ret
                        ; endp
0000000000006013         align      32                                          ; End of unwind block (FDE at 0x86f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
0000000000006020         mov        rax, qword [rdi+8]                          ; Begin of unwind block (FDE at 0x870c), CODE XREF=rpl_fflush+50, freadseek+350
0000000000006024         cmp        qword [rdi+0x10], rax
0000000000006028         je         loc_6030

                     j_j_fseeko:        // fseeko
000000000000602a         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
000000000000602f         align      16

                     loc_6030:
0000000000006030         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
0000000000006034         cmp        qword [rdi+0x28], rax
0000000000006038         jne        j_j_fseeko                                  ; fseeko

000000000000603a         cmp        qword [rdi+0x48], 0x0
000000000000603f         jne        j_j_fseeko                                  ; fseeko

0000000000006041         push       r12
0000000000006043         push       rbp
0000000000006044         mov        r12d, edx
0000000000006047         push       rbx
0000000000006048         mov        rbp, rsi
000000000000604b         mov        rbx, rdi
000000000000604e         call       j_fileno                                    ; fileno
0000000000006053         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000006056         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000006059         mov        edi, eax                                    ; argument "__fd" for method j_lseek
000000000000605b         call       j_lseek                                     ; lseek
0000000000006060         cmp        rax, 0xffffffffffffffff
0000000000006064         je         loc_6072

0000000000006066         and        dword [rbx], 0xffffffef
0000000000006069         mov        qword [rbx+0x90], rax
0000000000006070         xor        eax, eax

                     loc_6072:
0000000000006072         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
0000000000006073         pop        rbp
0000000000006074         pop        r12
0000000000006076         ret
                        ; endp
0000000000006077         align      128                                         ; End of unwind block (FDE at 0x870c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
0000000000006080         push       r13                                         ; Begin of unwind block (FDE at 0x873c), CODE XREF=sub_4200+534
0000000000006082         push       r12
0000000000006084         mov        r13, rsi
0000000000006087         push       rbp
0000000000006088         push       rbx
0000000000006089         mov        rbx, rdi
000000000000608c         mov        r12, rdx
000000000000608f         sub        rsp, 0x18
0000000000006093         mov        rax, qword [fs:0x28]
000000000000609c         mov        qword [rsp+0x38+var_30], rax
00000000000060a1         xor        eax, eax
00000000000060a3         lea        rax, qword [rsp+0x38+var_34]
00000000000060a8         test       rdi, rdi
00000000000060ab         cmove      rbx, rax
00000000000060af         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
00000000000060b2         call       j_mbrtowc                                   ; mbrtowc
00000000000060b7         cmp        rax, 0xfffffffffffffffd
00000000000060bb         mov        rbp, rax
00000000000060be         jbe        loc_60e0

00000000000060c0         test       r12, r12
00000000000060c3         je         loc_60e0

00000000000060c5         xor        edi, edi
00000000000060c7         call       hard_locale                                 ; hard_locale
00000000000060cc         test       al, al
00000000000060ce         jne        loc_60e0

00000000000060d0         movzx      eax, byte [r13]
00000000000060d5         mov        ebp, 0x1
00000000000060da         mov        dword [rbx], eax
00000000000060dc         nop        dword [rax]

                     loc_60e0:
00000000000060e0         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
00000000000060e5         xor        rdx, qword [fs:0x28]
00000000000060ee         mov        rax, rbp
00000000000060f1         jne        loc_60fe

00000000000060f3         add        rsp, 0x18
00000000000060f7         pop        rbx
00000000000060f8         pop        rbp
00000000000060f9         pop        r12
00000000000060fb         pop        r13
00000000000060fd         ret
                        ; endp

                     loc_60fe:
00000000000060fe         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
0000000000006103         align      16                                          ; End of unwind block (FDE at 0x873c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
0000000000006110         push       r12                                         ; Begin of unwind block (FDE at 0x877c), CODE XREF=close_stdout+13, close_stdout+51
0000000000006112         push       rbp
0000000000006113         mov        rbp, rdi
0000000000006116         push       rbx
0000000000006117         call       j___fpending                                ; __fpending
000000000000611c         mov        ebx, dword [rbp]
000000000000611f         mov        rdi, rbp
0000000000006122         mov        r12, rax
0000000000006125         call       rpl_fclose                                  ; rpl_fclose
000000000000612a         and        ebx, 0x20
000000000000612d         test       ebx, ebx
000000000000612f         jne        loc_6148

0000000000006131         test       eax, eax
0000000000006133         je         loc_613f

0000000000006135         test       r12, r12
0000000000006138         mov        eax, 0xffffffff
000000000000613d         je         loc_6178

                     loc_613f:
000000000000613f         pop        rbx                                         ; CODE XREF=close_stream+35
0000000000006140         pop        rbp
0000000000006141         pop        r12
0000000000006143         ret
                        ; endp
0000000000006144         align      8

                     loc_6148:
0000000000006148         test       eax, eax                                    ; CODE XREF=close_stream+31
000000000000614a         jne        loc_6168

000000000000614c         call       j___errno_location                          ; __errno_location
0000000000006151         mov        dword [rax], 0x0
0000000000006157         mov        eax, 0xffffffff
000000000000615c         pop        rbx
000000000000615d         pop        rbp
000000000000615e         pop        r12
0000000000006160         ret
                        ; endp
0000000000006161         align      8

                     loc_6168:
0000000000006168         pop        rbx                                         ; CODE XREF=close_stream+58
0000000000006169         mov        eax, 0xffffffff
000000000000616e         pop        rbp
000000000000616f         pop        r12
0000000000006171         ret
                        ; endp
0000000000006172         align      8

                     loc_6178:
0000000000006178         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
000000000000617d         cmp        dword [rax], 0x9
0000000000006180         pop        rbx
0000000000006181         pop        rbp
0000000000006182         pop        r12
0000000000006184         setne      al
0000000000006187         movzx      eax, al
000000000000618a         neg        eax
000000000000618c         ret
                        ; endp
000000000000618d         align      16                                          ; End of unwind block (FDE at 0x877c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_1038: int8_t, -4152
        ;    var_1040: int64_t, -4160


                     freadseek:
0000000000006190         push       r14                                         ; Begin of unwind block (FDE at 0x87cc), CODE XREF=getndelim2+355
0000000000006192         push       r13
0000000000006194         push       r12
0000000000006196         push       rbp
0000000000006197         push       rbx
0000000000006198         sub        rsp, 0x1020
000000000000619f         mov        rax, qword [fs:0x28]
00000000000061a8         mov        qword [rsp+0x1048+var_30], rax
00000000000061b0         xor        eax, eax
00000000000061b2         test       rsi, rsi
00000000000061b5         je         loc_6243

00000000000061bb         mov        r12, rdi
00000000000061be         mov        rbx, rsi
00000000000061c1         call       freadahead                                  ; freadahead
00000000000061c6         test       rax, rax
00000000000061c9         mov        rbp, rax
00000000000061cc         je         loc_6278

00000000000061d2         lea        r13, qword [rsp+0x1048+var_1040]
00000000000061d7         jmp        loc_61f4
00000000000061d9         align      32

                     loc_61e0:
00000000000061e0         sub        rbx, 0x1                                    ; CODE XREF=freadseek+159
00000000000061e4         je         loc_6270

00000000000061ea         sub        rbp, 0x1
00000000000061ee         je         loc_6278

                     loc_61f4:
00000000000061f4         mov        rsi, r13                                    ; CODE XREF=freadseek+71
00000000000061f7         mov        rdi, r12
00000000000061fa         call       freadptr                                    ; freadptr
00000000000061ff         test       rax, rax
0000000000006202         je         loc_6224

0000000000006204         mov        rax, qword [rsp+0x1048+var_1040]
0000000000006209         test       rax, rax
000000000000620c         je         loc_6224

000000000000620e         cmp        rax, rbx
0000000000006211         cmova      rax, rbx
0000000000006215         add        qword [r12+8], rax
000000000000621a         sub        rbx, rax
000000000000621d         je         loc_6270

000000000000621f         sub        rbp, rax
0000000000006222         je         loc_6278

                     loc_6224:
0000000000006224         mov        rdi, r12                                    ; argument "__stream" for method j_fgetc, CODE XREF=freadseek+114, freadseek+124
0000000000006227         call       j_fgetc                                     ; fgetc
000000000000622c         cmp        eax, 0xffffffff
000000000000622f         jne        loc_61e0

                     loc_6231:
0000000000006231         mov        rdi, r12                                    ; argument "__stream" for method j_ferror, CODE XREF=freadseek+312
0000000000006234         call       j_ferror                                    ; ferror
0000000000006239         test       eax, eax
000000000000623b         setne      al
000000000000623e         movzx      eax, al
0000000000006241         neg        eax

                     loc_6243:
0000000000006243         mov        rcx, qword [rsp+0x1048+var_30]              ; CODE XREF=freadseek+37, freadseek+226, freadseek+355
000000000000624b         xor        rcx, qword [fs:0x28]
0000000000006254         jne        loc_62f8

000000000000625a         add        rsp, 0x1020
0000000000006261         pop        rbx
0000000000006262         pop        rbp
0000000000006263         pop        r12
0000000000006265         pop        r13
0000000000006267         pop        r14
0000000000006269         ret
                        ; endp
000000000000626a         align      16

                     loc_6270:
0000000000006270         xor        eax, eax                                    ; CODE XREF=freadseek+84, freadseek+141, freadseek+267
0000000000006272         jmp        loc_6243
0000000000006274         align      8

                     loc_6278:
0000000000006278         mov        rdi, r12                                    ; argument "__stream" for method j_fileno, CODE XREF=freadseek+60, freadseek+94, freadseek+146
000000000000627b         call       j_fileno                                    ; fileno
0000000000006280         test       eax, eax
0000000000006282         jns        loc_62d0

                     loc_6284:
0000000000006284         lea        r14, qword [rsp+0x1048+var_1038]            ; CODE XREF=freadseek+337
0000000000006289         mov        r13d, 0x1000
000000000000628f         jmp        loc_629d
0000000000006291         align      8

                     loc_6298:
0000000000006298         sub        rbx, rbp                                    ; CODE XREF=freadseek+310
000000000000629b         je         loc_6270

                     loc_629d:
000000000000629d         cmp        rbx, 0x1000                                 ; CODE XREF=freadseek+255
00000000000062a4         mov        rbp, r13
00000000000062a7         mov        r8, r12
00000000000062aa         cmovbe     rbp, rbx
00000000000062ae         mov        edx, 0x1
00000000000062b3         mov        esi, 0x1000
00000000000062b8         mov        rcx, rbp
00000000000062bb         mov        rdi, r14
00000000000062be         call       j___fread_chk                               ; __fread_chk
00000000000062c3         cmp        rbp, rax
00000000000062c6         jbe        loc_6298

00000000000062c8         jmp        loc_6231
00000000000062cd         align      16

                     loc_62d0:
00000000000062d0         xor        esi, esi                                    ; argument "__offset" for method j_lseek, CODE XREF=freadseek+242
00000000000062d2         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
00000000000062d7         mov        edi, eax                                    ; argument "__fd" for method j_lseek
00000000000062d9         call       j_lseek                                     ; lseek
00000000000062de         test       rax, rax
00000000000062e1         js         loc_6284

00000000000062e3         mov        edx, 0x1
00000000000062e8         mov        rsi, rbx
00000000000062eb         mov        rdi, r12
00000000000062ee         call       rpl_fseeko                                  ; rpl_fseeko
00000000000062f3         jmp        loc_6243

                     loc_62f8:
00000000000062f8         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=freadseek+196
                        ; endp
00000000000062fd         align      256                                         ; End of unwind block (FDE at 0x87cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
0000000000006300         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x8814), CODE XREF=rpl_mbrtowc+71
0000000000006304         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000006306         call       j_setlocale                                 ; setlocale
000000000000630b         mov        rdx, rax
000000000000630e         mov        eax, 0x1
0000000000006313         test       rdx, rdx
0000000000006316         je         loc_6335

0000000000006318         lea        rdi, qword [aMemoryExhauste+17]             ; 0x78c0
000000000000631f         mov        ecx, 0x2
0000000000006324         mov        rsi, rdx
0000000000006327         rep  cmpsb byte [rsi], byte [rdi]
0000000000006329         seta       cl
000000000000632c         sbb        cl, 0x0
000000000000632f         xor        eax, eax
0000000000006331         test       cl, cl
0000000000006333         jne        loc_6340

                     loc_6335:
0000000000006335         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
0000000000006339         ret
                        ; endp
000000000000633a         align      64

                     loc_6340:
0000000000006340         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
0000000000006347         mov        ecx, 0x6
000000000000634c         mov        rsi, rdx
000000000000634f         rep  cmpsb byte [rsi], byte [rdi]
0000000000006351         seta       al
0000000000006354         sbb        al, 0x0
0000000000006356         test       al, al
0000000000006358         setne      al
000000000000635b         add        rsp, 0x8
000000000000635f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000006360         sub        rsp, 0x8                                    ; End of unwind block (FDE at 0x8814), Begin of unwind block (FDE at 0x8834), CODE XREF=gettext_quote.part.1+11
0000000000006364         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000006369         call       j_nl_langinfo                               ; nl_langinfo
000000000000636e         test       rax, rax
0000000000006371         je         loc_6390

0000000000006373         cmp        byte [rax], 0x0
0000000000006376         lea        rdx, qword [aAscii]                         ; "ASCII"
000000000000637d         cmove      rax, rdx
0000000000006381         add        rsp, 0x8
0000000000006385         ret
                        ; endp
0000000000006386         align      16

                     loc_6390:
0000000000006390         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
0000000000006397         add        rsp, 0x8
000000000000639b         ret
                        ; endp
000000000000639c         align      32                                          ; End of unwind block (FDE at 0x8834)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     freadahead:
00000000000063a0         xor        eax, eax                                    ; Begin of unwind block (FDE at 0x8854), CODE XREF=freadseek+49
00000000000063a2         mov        rcx, qword [rdi+0x20]
00000000000063a6         cmp        qword [rdi+0x28], rcx
00000000000063aa         ja         loc_63c7

00000000000063ac         mov        rax, qword [rdi+0x10]
00000000000063b0         sub        rax, qword [rdi+8]
00000000000063b4         test       dword [rdi], 0x100
00000000000063ba         je         loc_63c7

00000000000063bc         mov        rdx, qword [rdi+0x58]
00000000000063c0         sub        rdx, qword [rdi+0x48]
00000000000063c4         add        rax, rdx

                     loc_63c7:
00000000000063c7         ret                                                    ; CODE XREF=freadahead+10, freadahead+26
                        ; endp
00000000000063c9         align      16                                          ; End of unwind block (FDE at 0x8854)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
00000000000063d0         push       r15                                         ; Begin of unwind block (FDE at 0x886c), DATA XREF=_start+22
00000000000063d2         push       r14
00000000000063d4         mov        r15, rdx
00000000000063d7         push       r13
00000000000063d9         push       r12
00000000000063db         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
00000000000063e2         push       rbp
00000000000063e3         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
00000000000063ea         push       rbx
00000000000063eb         mov        r13d, edi
00000000000063ee         mov        r14, rsi
00000000000063f1         sub        rbp, r12
00000000000063f4         sub        rsp, 0x8
00000000000063f8         sar        rbp, 0x3
00000000000063fc         call       _init                                       ; _init
0000000000006401         test       rbp, rbp
0000000000006404         je         loc_6426

0000000000006406         xor        ebx, ebx
0000000000006408         nop        dword [rax+rax]

                     loc_6410:
0000000000006410         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
0000000000006413         mov        rsi, r14
0000000000006416         mov        edi, r13d
0000000000006419         call       qword [r12+rbx*8]
000000000000641d         add        rbx, 0x1
0000000000006421         cmp        rbp, rbx
0000000000006424         jne        loc_6410

                     loc_6426:
0000000000006426         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
000000000000642a         pop        rbx
000000000000642b         pop        rbp
000000000000642c         pop        r12
000000000000642e         pop        r13
0000000000006430         pop        r14
0000000000006432         pop        r15
0000000000006434         ret
                        ; endp
0000000000006435         align      64                                          ; End of unwind block (FDE at 0x886c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
0000000000006440         ret                                                    ; Begin of unwind block (FDE at 0x88b4), DATA XREF=_start+15
                        ; endp
0000000000006442         align      16                                          ; End of unwind block (FDE at 0x88b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
0000000000006450         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0x88cc), __dso_handle, CODE XREF=main+99
0000000000006457         xor        esi, esi
0000000000006459         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
000000000000645e         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x88cc)
000000000000645f         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x6460; 0x6469[ (9 bytes)
        ; File offset : [25696; 25705[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
0000000000006460         sub        rsp, 0x8
0000000000006464         add        rsp, 0x8
0000000000006468         ret
                        ; endp
0000000000006469         db  0x00 ; '.'
000000000000646a         db  0x00 ; '.'
000000000000646b         db  0x00 ; '.'
000000000000646c         db  0x00 ; '.'
000000000000646d         db  0x00 ; '.'
000000000000646e         db  0x00 ; '.'
000000000000646f         db  0x00 ; '.'
0000000000006470         db  0x00 ; '.'
0000000000006471         db  0x00 ; '.'
0000000000006472         db  0x00 ; '.'
0000000000006473         db  0x00 ; '.'
0000000000006474         db  0x00 ; '.'
0000000000006475         db  0x00 ; '.'
0000000000006476         db  0x00 ; '.'
0000000000006477         db  0x00 ; '.'
0000000000006478         db  0x00 ; '.'
0000000000006479         db  0x00 ; '.'
000000000000647a         db  0x00 ; '.'
000000000000647b         db  0x00 ; '.'
000000000000647c         db  0x00 ; '.'
000000000000647d         db  0x00 ; '.'
000000000000647e         db  0x00 ; '.'
000000000000647f         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x6480; 0x78ce[ (5198 bytes)
        ; File offset : [25728; 30926[ (5198 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
0000000000006480         db  0x01 ; '.'
0000000000006481         db  0x00 ; '.'
0000000000006482         db  0x02 ; '.'
0000000000006483         db  0x00 ; '.'
                     aCoreutils831sr:
0000000000006484         db         "../coreutils-8.31/src/cut.c", 0            ; DATA XREF=cut_file+1999
                     aNbytes0:
00000000000064a0         db         "n_bytes != 0", 0                           ; DATA XREF=cut_file+2006
00000000000064ad         db  0x63 ; 'c'                                         ; DATA XREF=main+298, usage+564, usage+876, usage+1060, usage+1079, usage+1113
00000000000064ae         db  0x75 ; 'u'
00000000000064af         db  0x74 ; 't'
00000000000064b0         db  0x00 ; '.'
00000000000064b1         db  0x5b ; '['                                         ; DATA XREF=usage+576
00000000000064b2         db  0x00 ; '.'
                     aTestInvocation:
00000000000064b3         db         "test invocation", 0                        ; DATA XREF=usage+615
                     aMulticallInvoc:
00000000000064c3         db         "Multi-call invocation", 0                  ; DATA XREF=usage+663
                     aSha224sum:
00000000000064d9         db         "sha224sum", 0                              ; DATA XREF=usage+680
                     aSha2Utilities:
00000000000064e3         db         "sha2 utilities", 0                         ; DATA XREF=usage+692
                     aSha256sum:
00000000000064f2         db         "sha256sum", 0                              ; DATA XREF=usage+583
                     aSha384sum:
00000000000064fc         db         "sha384sum", 0                              ; DATA XREF=usage+627
                     aSha512sum:
0000000000006506         db         "sha512sum", 0                              ; DATA XREF=usage+651
                     aNsOnlineHelpSn:
0000000000006510         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+762
0000000000006527         db  0x47 ; 'G'                                         ; DATA XREF=main+291, usage+790, usage+983, emit_bug_reporting_address+68
0000000000006528         db  0x4e ; 'N'
0000000000006529         db  0x55 ; 'U'
000000000000652a         db  0x20 ; ' '
                     aCoreutils:
000000000000652b         db         "coreutils", 0                              ; DATA XREF=main+68, main+80, usage+639
0000000000006535         db  0x65 ; 'e'                                         ; DATA XREF=usage+829, usage+1022
0000000000006536         db  0x6e ; 'n'
0000000000006537         db  0x5f ; '_'
0000000000006538         db  0x00 ; '.'
                     aFullDocumentat:
0000000000006539         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+857, usage+1046
                     aUsrlocalsharel:
0000000000006554         db         "/usr/local/share/locale", 0                ; DATA XREF=main+61
                     aDavidMackenzie:
000000000000656c         db         "David MacKenzie", 0                        ; DATA XREF=main+276
                     aDavidMIhnat:
000000000000657c         db         "David M. Ihnat", 0                         ; DATA XREF=main+283
                     aJimMeyering:
000000000000658b         db         "Jim Meyering", 0                           ; DATA XREF=main+253
0000000000006598         db  0x62 ; 'b'                                         ; DATA XREF=main+25
0000000000006599         db  0x3a ; ':'
000000000000659a         db  0x63 ; 'c'
000000000000659b         db  0x3a ; ':'
000000000000659c         db  0x64 ; 'd'
000000000000659d         db  0x3a ; ':'
000000000000659e         db  0x66 ; 'f'
000000000000659f         db  0x3a ; ':'
00000000000065a0         db  0x6e ; 'n'
00000000000065a1         db  0x73 ; 's'
00000000000065a2         db  0x7a ; 'z'
00000000000065a3         db  0x00 ; '.'
                     aBytes:
00000000000065a4         db         "bytes", 0
                     aCharacters:
00000000000065aa         db         "characters", 0
                     aOnlydelimited:
00000000000065b5         db         "only-delimited", 0
00000000000065c4         db  0x6f ; 'o'
00000000000065c5         db  0x75 ; 'u'
00000000000065c6         db  0x74 ; 't'
00000000000065c7         db  0x70 ; 'p'
00000000000065c8         db  0x75 ; 'u'
00000000000065c9         db  0x74 ; 't'
00000000000065ca         db  0x2d ; '-'
                     aDelimiter:
00000000000065cb         db         "delimiter", 0
                     aComplement:
00000000000065d5         db         "complement", 0
                     aZeroterminated:
00000000000065e0         db         "zero-terminated", 0
                     aHelp:
00000000000065f0         db         "help", 0
                     aVersion:
00000000000065f5         db         "version", 0
00000000000065fd         align      512
                     aTrySHelpForMor:
0000000000006600         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
0000000000006627         align      8
                     aUsageSOptionFi:
0000000000006628         db         "Usage: %s OPTION... [FILE]...\n", 0        ; DATA XREF=usage+93
0000000000006647         align      8
                     aPrintSelectedP:
0000000000006648         db         "Print selected parts of lines from each FILE to standard output.\n", 0 ; DATA XREF=usage+132
000000000000668a         align      16
                     aNwithNoFileOrW:
0000000000006690         db         "\nWith no FILE, or when FILE is -, read standard input.\n", 0 ; DATA XREF=usage+169
                     aNmandatoryArgu:
00000000000066c8         db         "\nMandatory arguments to long options are mandatory for short options too.\n", 0 ; DATA XREF=usage+206
0000000000006713         align      8
                     aBByteslistSele:
0000000000006718         db         "  -b, --bytes=LIST        select only these bytes\n  -c, --characters=LIST   select only these characters\n  -d, --delimiter=DELIM   use DELIM instead of TAB for field delimiter\n", 0 ; DATA XREF=usage+243
00000000000067c9         align      16
                     aFFieldslistSel:
00000000000067d0         db         "  -f, --fields=LIST       select only these fields;  also print any line\n                            that contains no delimiter character, unless\n                            the -s option is specified\n  -n                      (ignored)\n", 0 ; DATA XREF=usage+280
00000000000068be         align      64
                     aComplementComp:
00000000000068c0         db         "      --complement        complement the set of selected bytes, characters\n                            or fields\n", 0 ; DATA XREF=usage+317
0000000000006932         align      8
                     aSOnlydelimited:
0000000000006938         db         "  -s, --only-delimited    do not print lines not containing delimiters\n      --output-delimiter=STRING  use STRING as the output delimiter\n                            the default is to use the input delimiter\n", 0 ; DATA XREF=usage+354
0000000000006a0a         align      16
                     aZZeroterminate:
0000000000006a10         db         "  -z, --zero-terminated    line delimiter is NUL, not newline\n", 0 ; DATA XREF=usage+391
0000000000006a4f         align      16
                     aHelpDisplayThi:
0000000000006a50         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+428
0000000000006a7d         align      128
                     aVersionOutputV:
0000000000006a80         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+465
0000000000006ab6         align      8
                     aNuseOneAndOnly:
0000000000006ab8         db         "\nUse one, and only one of -b, -c or -f.  Each LIST is made up of one\nrange, or many ranges separated by commas.  Selected input is written\nin the same order that it is read, and is written exactly once.\n", 0 ; DATA XREF=usage+502
0000000000006b84         align      8
                     aEachRangeIsOne:
0000000000006b88         db         "Each range is one of:\n\n  N     N'th byte, character or field, counted from 1\n  N-    from N'th byte, character or field, to end of line\n  N-M   from N'th to M'th (included) byte, character or field\n  -M    from first to M'th (included) byte, character or f" ; DATA XREF=usage+539
0000000000006c88         db         "ield\n", 0
0000000000006c8e         align      16
                     aHttpswwwgnuorg:
0000000000006c90         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+783, usage+883, usage+976, usage+1086, emit_bug_reporting_address+61
                     aReportAnyTrans:
0000000000006cb8         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+1127
0000000000006cff         align      256
                     aOrAvailableLoc:
0000000000006d00         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+926
0000000000006d33         align      8
                     aOnlyOneTypeOfL:
0000000000006d38         db         "only one type of list may be specified", 0 ; DATA XREF=main+1126
0000000000006d5f         align      32
                     aTheDelimiterMu:
0000000000006d60         db         "the delimiter must be a single character", 0 ; DATA XREF=main+1062
0000000000006d89         align      16
                     aYouMustSpecify:
0000000000006d90         db         "you must specify a list of bytes, characters, or fields", 0 ; DATA XREF=main+595
                     aAnInputDelimit:
0000000000006dc8         db         "an input delimiter may be specified only when operating on fields", 0 ; DATA XREF=main+623
0000000000006e0a         align      16
                     aSuppressingNon:
0000000000006e10         db         "suppressing non-delimited lines makes sense\n\tonly when operating on fields", 0 ; DATA XREF=main+838
0000000000006e5b         align      32
                     __PRETTY_FUNCTION__.7017:
0000000000006e60         db         "cut_fields", 0                             ; DATA XREF=cut_file+1992
                     aInvalidFieldRa:
0000000000006e6b         db         "invalid field range", 0                    ; DATA XREF=set_fields+1306
                     aFieldsAreNumbe:
0000000000006e7f         db         "fields are numbered from 1", 0             ; DATA XREF=set_fields+1112
                     aInvalidDecreas:
0000000000006e9a         db         "invalid decreasing range", 0               ; DATA XREF=set_fields+1128
                     a0123456789:
0000000000006eb3         db         "0123456789", 0                             ; DATA XREF=set_fields+1188
                     aFieldNumberSIs:
0000000000006ebe         db         "field number %s is too large", 0           ; DATA XREF=set_fields+1325
                     aInvalidFieldVa:
0000000000006edb         db         "invalid field value %s", 0                 ; DATA XREF=set_fields+1448
                     aMissingListOfF:
0000000000006ef2         db         "missing list of fields", 0                 ; DATA XREF=set_fields+1436
0000000000006f09         align      16
                     aInvalidByteOrC:
0000000000006f10         db         "invalid byte or character range", 0        ; DATA XREF=set_fields+1165
                     aBytecharacterP:
0000000000006f30         db         "byte/character positions are numbered from 1", 0 ; DATA XREF=set_fields+1074
0000000000006f5d         align      32
                     aInvalidRangeWi:
0000000000006f60         db         "invalid range with no endpoint: -", 0      ; DATA XREF=set_fields+1294
0000000000006f82         align      8
                     aBytecharacterO:
0000000000006f88         db         "byte/character offset %s is too large", 0  ; DATA XREF=set_fields+1240
0000000000006fae         align      16
                     aInvalidBytecha:
0000000000006fb0         db         "invalid byte/character position %s", 0     ; DATA XREF=set_fields+1395
0000000000006fd3         align      8
                     aMissingListOfB:
0000000000006fd8         db         "missing list of byte/character positions", 0 ; DATA XREF=set_fields+1353
                     a831:
0000000000007001         db         "8.31", 0                                   ; DATA XREF=Version
                     aWriteError:
0000000000007006         db         "write error", 0                            ; DATA XREF=close_stdout+67
                     aSS:
0000000000007012         db         "%s: %s", 0                                 ; DATA XREF=close_stdout+108
0000000000007019         align      32
                     aANullArgv0WasP:
0000000000007020         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
0000000000007058         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
0000000000007060         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
0000000000007061         db  0x74 ; 't'
0000000000007062         db  0x2d ; '-'                                         ; DATA XREF=main+939, main+1013, cut_file+26, cut_file+1267, set_fields+32
0000000000007063         db  0x00 ; '.'
0000000000007064         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
0000000000007065         db  0x80 ; '.'
0000000000007066         db  0x98 ; '.'
0000000000007067         db  0x00 ; '.'
0000000000007068         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
0000000000007069         db  0x80 ; '.'
000000000000706a         db  0x99 ; '.'
000000000000706b         db  0x00 ; '.'
000000000000706c         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
000000000000706d         db  0x07 ; '.'
000000000000706e         db  0x65 ; 'e'
000000000000706f         db  0x00 ; '.'
0000000000007070         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
0000000000007071         db  0xaf ; '.'
0000000000007072         db  0x00 ; '.'
0000000000007073         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_4200+1451, sub_4200+1493, sub_4200+2429
0000000000007074         db  0x00 ; '.'
0000000000007075         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_4200+132, sub_4200+1338, sub_4200+1670, sub_4200+1697, sub_4200+2352
0000000000007076         db  0x00 ; '.'
0000000000007077         db  0x60 ; '`'                                         ; DATA XREF=sub_4200+1627, sub_4200+1654
0000000000007078         db  0x00 ; '.'
                     aLiteral:
0000000000007079         db         "literal", 0
                     aShell:
0000000000007081         db         "shell", 0
                     aShellalways:
0000000000007087         db         "shell-always", 0
0000000000007094         db  0x73 ; 's'
0000000000007095         db  0x68 ; 'h'
0000000000007096         db  0x65 ; 'e'
0000000000007097         db  0x6c ; 'l'
0000000000007098         db  0x6c ; 'l'
0000000000007099         db  0x2d ; '-'
                     aEscape:
000000000000709a         db         "escape", 0
                     aShellescapealw:
00000000000070a1         db         "shell-escape-always", 0
                     aCmaybe:
00000000000070b5         db         "c-maybe", 0
                     aClocale:
00000000000070bd         db         "clocale", 0
00000000000070c5         align      32
                     switch_table_70e0:        // switch_table
00000000000070e0         dd         quotearg_buffer_restyled.loc_48fa-switch_table_70e0, quotearg_buffer_restyled.loc_3b53-switch_table_70e0, quotearg_buffer_restyled.loc_4b28-switch_table_70e0, quotearg_buffer_restyled.loc_4934-switch_table_70e0 ; switch table used at 0x3b51 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
00000000000070f0         dd         quotearg_buffer_restyled.loc_4724-switch_table_70e0, quotearg_buffer_restyled.loc_4780-switch_table_70e0, quotearg_buffer_restyled.loc_47d5-switch_table_70e0, quotearg_buffer_restyled.loc_481a-switch_table_70e0
0000000000007100         dd         3 dup (quotearg_buffer_restyled.loc_4854-switch_table_70e0)
000000000000710c         db  0xc4 ; '.'                                         ; DATA XREF=quotearg_buffer_restyled+477
000000000000710d         db  0xcd ; '.'
000000000000710e         db  0xff ; '.'
000000000000710f         db  0xff ; '.'
0000000000007110         db  0xac ; '.'
0000000000007111         db  0xce ; '.'
0000000000007112         db  0xff ; '.'
0000000000007113         db  0xff ; '.'
0000000000007114         db  0xac ; '.'
0000000000007115         db  0xce ; '.'
0000000000007116         db  0xff ; '.'
0000000000007117         db  0xff ; '.'
0000000000007118         db  0xac ; '.'
0000000000007119         db  0xce ; '.'
000000000000711a         db  0xff ; '.'
000000000000711b         db  0xff ; '.'
000000000000711c         db  0xac ; '.'
000000000000711d         db  0xce ; '.'
000000000000711e         db  0xff ; '.'
000000000000711f         db  0xff ; '.'
0000000000007120         db  0xac ; '.'
0000000000007121         db  0xce ; '.'
0000000000007122         db  0xff ; '.'
0000000000007123         db  0xff ; '.'
0000000000007124         db  0xac ; '.'
0000000000007125         db  0xce ; '.'
0000000000007126         db  0xff ; '.'
0000000000007127         db  0xff ; '.'
0000000000007128         db  0x04 ; '.'
0000000000007129         db  0xce ; '.'
000000000000712a         db  0xff ; '.'
000000000000712b         db  0xff ; '.'
000000000000712c         db  0x0c ; '.'
000000000000712d         db  0xcd ; '.'
000000000000712e         db  0xff ; '.'
000000000000712f         db  0xff ; '.'
0000000000007130         db  0xcc ; '.'
0000000000007131         db  0xcc ; '.'
0000000000007132         db  0xff ; '.'
0000000000007133         db  0xff ; '.'
0000000000007134         db  0x94 ; '.'
0000000000007135         db  0xce ; '.'
0000000000007136         db  0xff ; '.'
0000000000007137         db  0xff ; '.'
0000000000007138         db  0x84 ; '.'
0000000000007139         db  0xce ; '.'
000000000000713a         db  0xff ; '.'
000000000000713b         db  0xff ; '.'
000000000000713c         db  0x74 ; 't'
000000000000713d         db  0xce ; '.'
000000000000713e         db  0xff ; '.'
000000000000713f         db  0xff ; '.'
0000000000007140         db  0x64 ; 'd'
0000000000007141         db  0xce ; '.'
0000000000007142         db  0xff ; '.'
0000000000007143         db  0xff ; '.'
0000000000007144         db  0xac ; '.'
0000000000007145         db  0xce ; '.'
0000000000007146         db  0xff ; '.'
0000000000007147         db  0xff ; '.'
0000000000007148         db  0xac ; '.'
0000000000007149         db  0xce ; '.'
000000000000714a         db  0xff ; '.'
000000000000714b         db  0xff ; '.'
000000000000714c         db  0xac ; '.'
000000000000714d         db  0xce ; '.'
000000000000714e         db  0xff ; '.'
000000000000714f         db  0xff ; '.'
0000000000007150         db  0xac ; '.'
0000000000007151         db  0xce ; '.'
0000000000007152         db  0xff ; '.'
0000000000007153         db  0xff ; '.'
0000000000007154         db  0xac ; '.'
0000000000007155         db  0xce ; '.'
0000000000007156         db  0xff ; '.'
0000000000007157         db  0xff ; '.'
0000000000007158         db  0xac ; '.'
0000000000007159         db  0xce ; '.'
000000000000715a         db  0xff ; '.'
000000000000715b         db  0xff ; '.'
000000000000715c         db  0xac ; '.'
000000000000715d         db  0xce ; '.'
000000000000715e         db  0xff ; '.'
000000000000715f         db  0xff ; '.'
0000000000007160         db  0xac ; '.'
0000000000007161         db  0xce ; '.'
0000000000007162         db  0xff ; '.'
0000000000007163         db  0xff ; '.'
0000000000007164         db  0xac ; '.'
0000000000007165         db  0xce ; '.'
0000000000007166         db  0xff ; '.'
0000000000007167         db  0xff ; '.'
0000000000007168         db  0xac ; '.'
0000000000007169         db  0xce ; '.'
000000000000716a         db  0xff ; '.'
000000000000716b         db  0xff ; '.'
000000000000716c         db  0xac ; '.'
000000000000716d         db  0xce ; '.'
000000000000716e         db  0xff ; '.'
000000000000716f         db  0xff ; '.'
0000000000007170         db  0xac ; '.'
0000000000007171         db  0xce ; '.'
0000000000007172         db  0xff ; '.'
0000000000007173         db  0xff ; '.'
0000000000007174         db  0xac ; '.'
0000000000007175         db  0xce ; '.'
0000000000007176         db  0xff ; '.'
0000000000007177         db  0xff ; '.'
0000000000007178         db  0xac ; '.'
0000000000007179         db  0xce ; '.'
000000000000717a         db  0xff ; '.'
000000000000717b         db  0xff ; '.'
000000000000717c         db  0xac ; '.'
000000000000717d         db  0xce ; '.'
000000000000717e         db  0xff ; '.'
000000000000717f         db  0xff ; '.'
0000000000007180         db  0xac ; '.'
0000000000007181         db  0xce ; '.'
0000000000007182         db  0xff ; '.'
0000000000007183         db  0xff ; '.'
0000000000007184         db  0xac ; '.'
0000000000007185         db  0xce ; '.'
0000000000007186         db  0xff ; '.'
0000000000007187         db  0xff ; '.'
0000000000007188         db  0xac ; '.'
0000000000007189         db  0xce ; '.'
000000000000718a         db  0xff ; '.'
000000000000718b         db  0xff ; '.'
000000000000718c         db  0x54 ; 'T'
000000000000718d         db  0xce ; '.'
000000000000718e         db  0xff ; '.'
000000000000718f         db  0xff ; '.'
0000000000007190         db  0x44 ; 'D'
0000000000007191         db  0xce ; '.'
0000000000007192         db  0xff ; '.'
0000000000007193         db  0xff ; '.'
0000000000007194         db  0x44 ; 'D'
0000000000007195         db  0xce ; '.'
0000000000007196         db  0xff ; '.'
0000000000007197         db  0xff ; '.'
0000000000007198         db  0x14 ; '.'
0000000000007199         db  0xce ; '.'
000000000000719a         db  0xff ; '.'
000000000000719b         db  0xff ; '.'
000000000000719c         db  0x44 ; 'D'
000000000000719d         db  0xce ; '.'
000000000000719e         db  0xff ; '.'
000000000000719f         db  0xff ; '.'
00000000000071a0         db  0xec ; '.'
00000000000071a1         db  0xcd ; '.'
00000000000071a2         db  0xff ; '.'
00000000000071a3         db  0xff ; '.'
00000000000071a4         db  0x44 ; 'D'
00000000000071a5         db  0xce ; '.'
00000000000071a6         db  0xff ; '.'
00000000000071a7         db  0xff ; '.'
00000000000071a8         db  0xa7 ; '.'
00000000000071a9         db  0xcc ; '.'
00000000000071aa         db  0xff ; '.'
00000000000071ab         db  0xff ; '.'
00000000000071ac         db  0x44 ; 'D'
00000000000071ad         db  0xce ; '.'
00000000000071ae         db  0xff ; '.'
00000000000071af         db  0xff ; '.'
00000000000071b0         db  0x44 ; 'D'
00000000000071b1         db  0xce ; '.'
00000000000071b2         db  0xff ; '.'
00000000000071b3         db  0xff ; '.'
00000000000071b4         db  0x44 ; 'D'
00000000000071b5         db  0xce ; '.'
00000000000071b6         db  0xff ; '.'
00000000000071b7         db  0xff ; '.'
00000000000071b8         db  0xec ; '.'
00000000000071b9         db  0xcd ; '.'
00000000000071ba         db  0xff ; '.'
00000000000071bb         db  0xff ; '.'
00000000000071bc         db  0xec ; '.'
00000000000071bd         db  0xcd ; '.'
00000000000071be         db  0xff ; '.'
00000000000071bf         db  0xff ; '.'
00000000000071c0         db  0xec ; '.'
00000000000071c1         db  0xcd ; '.'
00000000000071c2         db  0xff ; '.'
00000000000071c3         db  0xff ; '.'
00000000000071c4         db  0xec ; '.'
00000000000071c5         db  0xcd ; '.'
00000000000071c6         db  0xff ; '.'
00000000000071c7         db  0xff ; '.'
00000000000071c8         db  0xec ; '.'
00000000000071c9         db  0xcd ; '.'
00000000000071ca         db  0xff ; '.'
00000000000071cb         db  0xff ; '.'
00000000000071cc         db  0xec ; '.'
00000000000071cd         db  0xcd ; '.'
00000000000071ce         db  0xff ; '.'
00000000000071cf         db  0xff ; '.'
00000000000071d0         db  0xec ; '.'
00000000000071d1         db  0xcd ; '.'
00000000000071d2         db  0xff ; '.'
00000000000071d3         db  0xff ; '.'
00000000000071d4         db  0xec ; '.'
00000000000071d5         db  0xcd ; '.'
00000000000071d6         db  0xff ; '.'
00000000000071d7         db  0xff ; '.'
00000000000071d8         db  0xec ; '.'
00000000000071d9         db  0xcd ; '.'
00000000000071da         db  0xff ; '.'
00000000000071db         db  0xff ; '.'
00000000000071dc         db  0xec ; '.'
00000000000071dd         db  0xcd ; '.'
00000000000071de         db  0xff ; '.'
00000000000071df         db  0xff ; '.'
00000000000071e0         db  0xec ; '.'
00000000000071e1         db  0xcd ; '.'
00000000000071e2         db  0xff ; '.'
00000000000071e3         db  0xff ; '.'
00000000000071e4         db  0xec ; '.'
00000000000071e5         db  0xcd ; '.'
00000000000071e6         db  0xff ; '.'
00000000000071e7         db  0xff ; '.'
00000000000071e8         db  0xec ; '.'
00000000000071e9         db  0xcd ; '.'
00000000000071ea         db  0xff ; '.'
00000000000071eb         db  0xff ; '.'
00000000000071ec         db  0xec ; '.'
00000000000071ed         db  0xcd ; '.'
00000000000071ee         db  0xff ; '.'
00000000000071ef         db  0xff ; '.'
00000000000071f0         db  0xec ; '.'
00000000000071f1         db  0xcd ; '.'
00000000000071f2         db  0xff ; '.'
00000000000071f3         db  0xff ; '.'
00000000000071f4         db  0xec ; '.'
00000000000071f5         db  0xcd ; '.'
00000000000071f6         db  0xff ; '.'
00000000000071f7         db  0xff ; '.'
00000000000071f8         db  0x44 ; 'D'
00000000000071f9         db  0xce ; '.'
00000000000071fa         db  0xff ; '.'
00000000000071fb         db  0xff ; '.'
00000000000071fc         db  0x44 ; 'D'
00000000000071fd         db  0xce ; '.'
00000000000071fe         db  0xff ; '.'
00000000000071ff         db  0xff ; '.'
0000000000007200         db  0x44 ; 'D'
0000000000007201         db  0xce ; '.'
0000000000007202         db  0xff ; '.'
0000000000007203         db  0xff ; '.'
0000000000007204         db  0x44 ; 'D'
0000000000007205         db  0xce ; '.'
0000000000007206         db  0xff ; '.'
0000000000007207         db  0xff ; '.'
0000000000007208         db  0x77 ; 'w'
0000000000007209         db  0xcc ; '.'
000000000000720a         db  0xff ; '.'
000000000000720b         db  0xff ; '.'
000000000000720c         db  0xac ; '.'
000000000000720d         db  0xce ; '.'
000000000000720e         db  0xff ; '.'
000000000000720f         db  0xff ; '.'
0000000000007210         db  0xec ; '.'
0000000000007211         db  0xcd ; '.'
0000000000007212         db  0xff ; '.'
0000000000007213         db  0xff ; '.'
0000000000007214         db  0xec ; '.'
0000000000007215         db  0xcd ; '.'
0000000000007216         db  0xff ; '.'
0000000000007217         db  0xff ; '.'
0000000000007218         db  0xec ; '.'
0000000000007219         db  0xcd ; '.'
000000000000721a         db  0xff ; '.'
000000000000721b         db  0xff ; '.'
000000000000721c         db  0xec ; '.'
000000000000721d         db  0xcd ; '.'
000000000000721e         db  0xff ; '.'
000000000000721f         db  0xff ; '.'
0000000000007220         db  0xec ; '.'
0000000000007221         db  0xcd ; '.'
0000000000007222         db  0xff ; '.'
0000000000007223         db  0xff ; '.'
0000000000007224         db  0xec ; '.'
0000000000007225         db  0xcd ; '.'
0000000000007226         db  0xff ; '.'
0000000000007227         db  0xff ; '.'
0000000000007228         db  0xec ; '.'
0000000000007229         db  0xcd ; '.'
000000000000722a         db  0xff ; '.'
000000000000722b         db  0xff ; '.'
000000000000722c         db  0xec ; '.'
000000000000722d         db  0xcd ; '.'
000000000000722e         db  0xff ; '.'
000000000000722f         db  0xff ; '.'
0000000000007230         db  0xec ; '.'
0000000000007231         db  0xcd ; '.'
0000000000007232         db  0xff ; '.'
0000000000007233         db  0xff ; '.'
0000000000007234         db  0xec ; '.'
0000000000007235         db  0xcd ; '.'
0000000000007236         db  0xff ; '.'
0000000000007237         db  0xff ; '.'
0000000000007238         db  0xec ; '.'
0000000000007239         db  0xcd ; '.'
000000000000723a         db  0xff ; '.'
000000000000723b         db  0xff ; '.'
000000000000723c         db  0xec ; '.'
000000000000723d         db  0xcd ; '.'
000000000000723e         db  0xff ; '.'
000000000000723f         db  0xff ; '.'
0000000000007240         db  0xec ; '.'
0000000000007241         db  0xcd ; '.'
0000000000007242         db  0xff ; '.'
0000000000007243         db  0xff ; '.'
0000000000007244         db  0xec ; '.'
0000000000007245         db  0xcd ; '.'
0000000000007246         db  0xff ; '.'
0000000000007247         db  0xff ; '.'
0000000000007248         db  0xec ; '.'
0000000000007249         db  0xcd ; '.'
000000000000724a         db  0xff ; '.'
000000000000724b         db  0xff ; '.'
000000000000724c         db  0xec ; '.'
000000000000724d         db  0xcd ; '.'
000000000000724e         db  0xff ; '.'
000000000000724f         db  0xff ; '.'
0000000000007250         db  0xec ; '.'
0000000000007251         db  0xcd ; '.'
0000000000007252         db  0xff ; '.'
0000000000007253         db  0xff ; '.'
0000000000007254         db  0xec ; '.'
0000000000007255         db  0xcd ; '.'
0000000000007256         db  0xff ; '.'
0000000000007257         db  0xff ; '.'
0000000000007258         db  0xec ; '.'
0000000000007259         db  0xcd ; '.'
000000000000725a         db  0xff ; '.'
000000000000725b         db  0xff ; '.'
000000000000725c         db  0xec ; '.'
000000000000725d         db  0xcd ; '.'
000000000000725e         db  0xff ; '.'
000000000000725f         db  0xff ; '.'
0000000000007260         db  0xec ; '.'
0000000000007261         db  0xcd ; '.'
0000000000007262         db  0xff ; '.'
0000000000007263         db  0xff ; '.'
0000000000007264         db  0xec ; '.'
0000000000007265         db  0xcd ; '.'
0000000000007266         db  0xff ; '.'
0000000000007267         db  0xff ; '.'
0000000000007268         db  0xec ; '.'
0000000000007269         db  0xcd ; '.'
000000000000726a         db  0xff ; '.'
000000000000726b         db  0xff ; '.'
000000000000726c         db  0xec ; '.'
000000000000726d         db  0xcd ; '.'
000000000000726e         db  0xff ; '.'
000000000000726f         db  0xff ; '.'
0000000000007270         db  0xec ; '.'
0000000000007271         db  0xcd ; '.'
0000000000007272         db  0xff ; '.'
0000000000007273         db  0xff ; '.'
0000000000007274         db  0xec ; '.'
0000000000007275         db  0xcd ; '.'
0000000000007276         db  0xff ; '.'
0000000000007277         db  0xff ; '.'
0000000000007278         db  0x44 ; 'D'
0000000000007279         db  0xce ; '.'
000000000000727a         db  0xff ; '.'
000000000000727b         db  0xff ; '.'
000000000000727c         db  0x1c ; '.'
000000000000727d         db  0xcd ; '.'
000000000000727e         db  0xff ; '.'
000000000000727f         db  0xff ; '.'
0000000000007280         db  0xec ; '.'
0000000000007281         db  0xcd ; '.'
0000000000007282         db  0xff ; '.'
0000000000007283         db  0xff ; '.'
0000000000007284         db  0x44 ; 'D'
0000000000007285         db  0xce ; '.'
0000000000007286         db  0xff ; '.'
0000000000007287         db  0xff ; '.'
0000000000007288         db  0xec ; '.'
0000000000007289         db  0xcd ; '.'
000000000000728a         db  0xff ; '.'
000000000000728b         db  0xff ; '.'
000000000000728c         db  0x44 ; 'D'
000000000000728d         db  0xce ; '.'
000000000000728e         db  0xff ; '.'
000000000000728f         db  0xff ; '.'
0000000000007290         db  0xec ; '.'
0000000000007291         db  0xcd ; '.'
0000000000007292         db  0xff ; '.'
0000000000007293         db  0xff ; '.'
0000000000007294         db  0xec ; '.'
0000000000007295         db  0xcd ; '.'
0000000000007296         db  0xff ; '.'
0000000000007297         db  0xff ; '.'
0000000000007298         db  0xec ; '.'
0000000000007299         db  0xcd ; '.'
000000000000729a         db  0xff ; '.'
000000000000729b         db  0xff ; '.'
000000000000729c         db  0xec ; '.'
000000000000729d         db  0xcd ; '.'
000000000000729e         db  0xff ; '.'
000000000000729f         db  0xff ; '.'
00000000000072a0         db  0xec ; '.'
00000000000072a1         db  0xcd ; '.'
00000000000072a2         db  0xff ; '.'
00000000000072a3         db  0xff ; '.'
00000000000072a4         db  0xec ; '.'
00000000000072a5         db  0xcd ; '.'
00000000000072a6         db  0xff ; '.'
00000000000072a7         db  0xff ; '.'
00000000000072a8         db  0xec ; '.'
00000000000072a9         db  0xcd ; '.'
00000000000072aa         db  0xff ; '.'
00000000000072ab         db  0xff ; '.'
00000000000072ac         db  0xec ; '.'
00000000000072ad         db  0xcd ; '.'
00000000000072ae         db  0xff ; '.'
00000000000072af         db  0xff ; '.'
00000000000072b0         db  0xec ; '.'
00000000000072b1         db  0xcd ; '.'
00000000000072b2         db  0xff ; '.'
00000000000072b3         db  0xff ; '.'
00000000000072b4         db  0xec ; '.'
00000000000072b5         db  0xcd ; '.'
00000000000072b6         db  0xff ; '.'
00000000000072b7         db  0xff ; '.'
00000000000072b8         db  0xec ; '.'
00000000000072b9         db  0xcd ; '.'
00000000000072ba         db  0xff ; '.'
00000000000072bb         db  0xff ; '.'
00000000000072bc         db  0xec ; '.'
00000000000072bd         db  0xcd ; '.'
00000000000072be         db  0xff ; '.'
00000000000072bf         db  0xff ; '.'
00000000000072c0         db  0xec ; '.'
00000000000072c1         db  0xcd ; '.'
00000000000072c2         db  0xff ; '.'
00000000000072c3         db  0xff ; '.'
00000000000072c4         db  0xec ; '.'
00000000000072c5         db  0xcd ; '.'
00000000000072c6         db  0xff ; '.'
00000000000072c7         db  0xff ; '.'
00000000000072c8         db  0xec ; '.'
00000000000072c9         db  0xcd ; '.'
00000000000072ca         db  0xff ; '.'
00000000000072cb         db  0xff ; '.'
00000000000072cc         db  0xec ; '.'
00000000000072cd         db  0xcd ; '.'
00000000000072ce         db  0xff ; '.'
00000000000072cf         db  0xff ; '.'
00000000000072d0         db  0xec ; '.'
00000000000072d1         db  0xcd ; '.'
00000000000072d2         db  0xff ; '.'
00000000000072d3         db  0xff ; '.'
00000000000072d4         db  0xec ; '.'
00000000000072d5         db  0xcd ; '.'
00000000000072d6         db  0xff ; '.'
00000000000072d7         db  0xff ; '.'
00000000000072d8         db  0xec ; '.'
00000000000072d9         db  0xcd ; '.'
00000000000072da         db  0xff ; '.'
00000000000072db         db  0xff ; '.'
00000000000072dc         db  0xec ; '.'
00000000000072dd         db  0xcd ; '.'
00000000000072de         db  0xff ; '.'
00000000000072df         db  0xff ; '.'
00000000000072e0         db  0xec ; '.'
00000000000072e1         db  0xcd ; '.'
00000000000072e2         db  0xff ; '.'
00000000000072e3         db  0xff ; '.'
00000000000072e4         db  0xec ; '.'
00000000000072e5         db  0xcd ; '.'
00000000000072e6         db  0xff ; '.'
00000000000072e7         db  0xff ; '.'
00000000000072e8         db  0xec ; '.'
00000000000072e9         db  0xcd ; '.'
00000000000072ea         db  0xff ; '.'
00000000000072eb         db  0xff ; '.'
00000000000072ec         db  0xec ; '.'
00000000000072ed         db  0xcd ; '.'
00000000000072ee         db  0xff ; '.'
00000000000072ef         db  0xff ; '.'
00000000000072f0         db  0xec ; '.'
00000000000072f1         db  0xcd ; '.'
00000000000072f2         db  0xff ; '.'
00000000000072f3         db  0xff ; '.'
00000000000072f4         db  0xec ; '.'
00000000000072f5         db  0xcd ; '.'
00000000000072f6         db  0xff ; '.'
00000000000072f7         db  0xff ; '.'
00000000000072f8         db  0xa7 ; '.'
00000000000072f9         db  0xcb ; '.'
00000000000072fa         db  0xff ; '.'
00000000000072fb         db  0xff ; '.'
00000000000072fc         db  0x44 ; 'D'
00000000000072fd         db  0xce ; '.'
00000000000072fe         db  0xff ; '.'
00000000000072ff         db  0xff ; '.'
0000000000007300         db  0xa7 ; '.'
0000000000007301         db  0xcb ; '.'
0000000000007302         db  0xff ; '.'
0000000000007303         db  0xff ; '.'
0000000000007304         db  0x14 ; '.'
0000000000007305         db  0xce ; '.'
0000000000007306         db  0xff ; '.'
0000000000007307         db  0xff ; '.'
0000000000007308         db  0x98 ; '.'                                         ; DATA XREF=sub_3fa0+137
0000000000007309         db  0xcd ; '.'
000000000000730a         db  0xff ; '.'
000000000000730b         db  0xff ; '.'
000000000000730c         db  0xa8 ; '.'
000000000000730d         db  0xcc ; '.'
000000000000730e         db  0xff ; '.'
000000000000730f         db  0xff ; '.'
0000000000007310         db  0xa8 ; '.'
0000000000007311         db  0xcc ; '.'
0000000000007312         db  0xff ; '.'
0000000000007313         db  0xff ; '.'
0000000000007314         db  0xa8 ; '.'
0000000000007315         db  0xcc ; '.'
0000000000007316         db  0xff ; '.'
0000000000007317         db  0xff ; '.'
0000000000007318         db  0xa8 ; '.'
0000000000007319         db  0xcc ; '.'
000000000000731a         db  0xff ; '.'
000000000000731b         db  0xff ; '.'
000000000000731c         db  0xa8 ; '.'
000000000000731d         db  0xcc ; '.'
000000000000731e         db  0xff ; '.'
000000000000731f         db  0xff ; '.'
0000000000007320         db  0xa8 ; '.'
0000000000007321         db  0xcc ; '.'
0000000000007322         db  0xff ; '.'
0000000000007323         db  0xff ; '.'
0000000000007324         db  0x88 ; '.'
0000000000007325         db  0xcd ; '.'
0000000000007326         db  0xff ; '.'
0000000000007327         db  0xff ; '.'
0000000000007328         db  0xd8 ; '.'
0000000000007329         db  0xce ; '.'
000000000000732a         db  0xff ; '.'
000000000000732b         db  0xff ; '.'
000000000000732c         db  0xc0 ; '.'
000000000000732d         db  0xce ; '.'
000000000000732e         db  0xff ; '.'
000000000000732f         db  0xff ; '.'
0000000000007330         db  0x70 ; 'p'
0000000000007331         db  0xcd ; '.'
0000000000007332         db  0xff ; '.'
0000000000007333         db  0xff ; '.'
0000000000007334         db  0xb0 ; '.'
0000000000007335         db  0xce ; '.'
0000000000007336         db  0xff ; '.'
0000000000007337         db  0xff ; '.'
0000000000007338         db  0x58 ; 'X'
0000000000007339         db  0xcd ; '.'
000000000000733a         db  0xff ; '.'
000000000000733b         db  0xff ; '.'
000000000000733c         db  0x98 ; '.'
000000000000733d         db  0xce ; '.'
000000000000733e         db  0xff ; '.'
000000000000733f         db  0xff ; '.'
0000000000007340         db  0xa8 ; '.'
0000000000007341         db  0xcc ; '.'
0000000000007342         db  0xff ; '.'
0000000000007343         db  0xff ; '.'
0000000000007344         db  0xa8 ; '.'
0000000000007345         db  0xcc ; '.'
0000000000007346         db  0xff ; '.'
0000000000007347         db  0xff ; '.'
0000000000007348         db  0xa8 ; '.'
0000000000007349         db  0xcc ; '.'
000000000000734a         db  0xff ; '.'
000000000000734b         db  0xff ; '.'
000000000000734c         db  0xa8 ; '.'
000000000000734d         db  0xcc ; '.'
000000000000734e         db  0xff ; '.'
000000000000734f         db  0xff ; '.'
0000000000007350         db  0xa8 ; '.'
0000000000007351         db  0xcc ; '.'
0000000000007352         db  0xff ; '.'
0000000000007353         db  0xff ; '.'
0000000000007354         db  0xa8 ; '.'
0000000000007355         db  0xcc ; '.'
0000000000007356         db  0xff ; '.'
0000000000007357         db  0xff ; '.'
0000000000007358         db  0xa8 ; '.'
0000000000007359         db  0xcc ; '.'
000000000000735a         db  0xff ; '.'
000000000000735b         db  0xff ; '.'
000000000000735c         db  0xa8 ; '.'
000000000000735d         db  0xcc ; '.'
000000000000735e         db  0xff ; '.'
000000000000735f         db  0xff ; '.'
0000000000007360         db  0xa8 ; '.'
0000000000007361         db  0xcc ; '.'
0000000000007362         db  0xff ; '.'
0000000000007363         db  0xff ; '.'
0000000000007364         db  0xa8 ; '.'
0000000000007365         db  0xcc ; '.'
0000000000007366         db  0xff ; '.'
0000000000007367         db  0xff ; '.'
0000000000007368         db  0xa8 ; '.'
0000000000007369         db  0xcc ; '.'
000000000000736a         db  0xff ; '.'
000000000000736b         db  0xff ; '.'
000000000000736c         db  0xa8 ; '.'
000000000000736d         db  0xcc ; '.'
000000000000736e         db  0xff ; '.'
000000000000736f         db  0xff ; '.'
0000000000007370         db  0xa8 ; '.'
0000000000007371         db  0xcc ; '.'
0000000000007372         db  0xff ; '.'
0000000000007373         db  0xff ; '.'
0000000000007374         db  0xa8 ; '.'
0000000000007375         db  0xcc ; '.'
0000000000007376         db  0xff ; '.'
0000000000007377         db  0xff ; '.'
0000000000007378         db  0xa8 ; '.'
0000000000007379         db  0xcc ; '.'
000000000000737a         db  0xff ; '.'
000000000000737b         db  0xff ; '.'
000000000000737c         db  0xa8 ; '.'
000000000000737d         db  0xcc ; '.'
000000000000737e         db  0xff ; '.'
000000000000737f         db  0xff ; '.'
0000000000007380         db  0xa8 ; '.'
0000000000007381         db  0xcc ; '.'
0000000000007382         db  0xff ; '.'
0000000000007383         db  0xff ; '.'
0000000000007384         db  0xa8 ; '.'
0000000000007385         db  0xcc ; '.'
0000000000007386         db  0xff ; '.'
0000000000007387         db  0xff ; '.'
0000000000007388         db  0x80 ; '.'
0000000000007389         db  0xce ; '.'
000000000000738a         db  0xff ; '.'
000000000000738b         db  0xff ; '.'
000000000000738c         db  0x68 ; 'h'
000000000000738d         db  0xce ; '.'
000000000000738e         db  0xff ; '.'
000000000000738f         db  0xff ; '.'
0000000000007390         db  0x68 ; 'h'
0000000000007391         db  0xce ; '.'
0000000000007392         db  0xff ; '.'
0000000000007393         db  0xff ; '.'
0000000000007394         db  0x50 ; 'P'
0000000000007395         db  0xce ; '.'
0000000000007396         db  0xff ; '.'
0000000000007397         db  0xff ; '.'
0000000000007398         db  0x68 ; 'h'
0000000000007399         db  0xce ; '.'
000000000000739a         db  0xff ; '.'
000000000000739b         db  0xff ; '.'
000000000000739c         db  0x38 ; '8'
000000000000739d         db  0xce ; '.'
000000000000739e         db  0xff ; '.'
000000000000739f         db  0xff ; '.'
00000000000073a0         db  0x68 ; 'h'
00000000000073a1         db  0xce ; '.'
00000000000073a2         db  0xff ; '.'
00000000000073a3         db  0xff ; '.'
00000000000073a4         db  0xa8 ; '.'
00000000000073a5         db  0xca ; '.'
00000000000073a6         db  0xff ; '.'
00000000000073a7         db  0xff ; '.'
00000000000073a8         db  0x68 ; 'h'
00000000000073a9         db  0xce ; '.'
00000000000073aa         db  0xff ; '.'
00000000000073ab         db  0xff ; '.'
00000000000073ac         db  0x68 ; 'h'
00000000000073ad         db  0xce ; '.'
00000000000073ae         db  0xff ; '.'
00000000000073af         db  0xff ; '.'
00000000000073b0         db  0x68 ; 'h'
00000000000073b1         db  0xce ; '.'
00000000000073b2         db  0xff ; '.'
00000000000073b3         db  0xff ; '.'
00000000000073b4         db  0x38 ; '8'
00000000000073b5         db  0xce ; '.'
00000000000073b6         db  0xff ; '.'
00000000000073b7         db  0xff ; '.'
00000000000073b8         db  0x38 ; '8'
00000000000073b9         db  0xce ; '.'
00000000000073ba         db  0xff ; '.'
00000000000073bb         db  0xff ; '.'
00000000000073bc         db  0x38 ; '8'
00000000000073bd         db  0xce ; '.'
00000000000073be         db  0xff ; '.'
00000000000073bf         db  0xff ; '.'
00000000000073c0         db  0x38 ; '8'
00000000000073c1         db  0xce ; '.'
00000000000073c2         db  0xff ; '.'
00000000000073c3         db  0xff ; '.'
00000000000073c4         db  0x38 ; '8'
00000000000073c5         db  0xce ; '.'
00000000000073c6         db  0xff ; '.'
00000000000073c7         db  0xff ; '.'
00000000000073c8         db  0x38 ; '8'
00000000000073c9         db  0xce ; '.'
00000000000073ca         db  0xff ; '.'
00000000000073cb         db  0xff ; '.'
00000000000073cc         db  0x38 ; '8'
00000000000073cd         db  0xce ; '.'
00000000000073ce         db  0xff ; '.'
00000000000073cf         db  0xff ; '.'
00000000000073d0         db  0x38 ; '8'
00000000000073d1         db  0xce ; '.'
00000000000073d2         db  0xff ; '.'
00000000000073d3         db  0xff ; '.'
00000000000073d4         db  0x38 ; '8'
00000000000073d5         db  0xce ; '.'
00000000000073d6         db  0xff ; '.'
00000000000073d7         db  0xff ; '.'
00000000000073d8         db  0x38 ; '8'
00000000000073d9         db  0xce ; '.'
00000000000073da         db  0xff ; '.'
00000000000073db         db  0xff ; '.'
00000000000073dc         db  0x38 ; '8'
00000000000073dd         db  0xce ; '.'
00000000000073de         db  0xff ; '.'
00000000000073df         db  0xff ; '.'
00000000000073e0         db  0x38 ; '8'
00000000000073e1         db  0xce ; '.'
00000000000073e2         db  0xff ; '.'
00000000000073e3         db  0xff ; '.'
00000000000073e4         db  0x38 ; '8'
00000000000073e5         db  0xce ; '.'
00000000000073e6         db  0xff ; '.'
00000000000073e7         db  0xff ; '.'
00000000000073e8         db  0x38 ; '8'
00000000000073e9         db  0xce ; '.'
00000000000073ea         db  0xff ; '.'
00000000000073eb         db  0xff ; '.'
00000000000073ec         db  0x38 ; '8'
00000000000073ed         db  0xce ; '.'
00000000000073ee         db  0xff ; '.'
00000000000073ef         db  0xff ; '.'
00000000000073f0         db  0x38 ; '8'
00000000000073f1         db  0xce ; '.'
00000000000073f2         db  0xff ; '.'
00000000000073f3         db  0xff ; '.'
00000000000073f4         db  0x68 ; 'h'
00000000000073f5         db  0xce ; '.'
00000000000073f6         db  0xff ; '.'
00000000000073f7         db  0xff ; '.'
00000000000073f8         db  0x68 ; 'h'
00000000000073f9         db  0xce ; '.'
00000000000073fa         db  0xff ; '.'
00000000000073fb         db  0xff ; '.'
00000000000073fc         db  0x68 ; 'h'
00000000000073fd         db  0xce ; '.'
00000000000073fe         db  0xff ; '.'
00000000000073ff         db  0xff ; '.'
0000000000007400         db  0x68 ; 'h'
0000000000007401         db  0xce ; '.'
0000000000007402         db  0xff ; '.'
0000000000007403         db  0xff ; '.'
0000000000007404         db  0x78 ; 'x'
0000000000007405         db  0xca ; '.'
0000000000007406         db  0xff ; '.'
0000000000007407         db  0xff ; '.'
0000000000007408         db  0xa8 ; '.'
0000000000007409         db  0xcc ; '.'
000000000000740a         db  0xff ; '.'
000000000000740b         db  0xff ; '.'
000000000000740c         db  0x38 ; '8'
000000000000740d         db  0xce ; '.'
000000000000740e         db  0xff ; '.'
000000000000740f         db  0xff ; '.'
0000000000007410         db  0x38 ; '8'
0000000000007411         db  0xce ; '.'
0000000000007412         db  0xff ; '.'
0000000000007413         db  0xff ; '.'
0000000000007414         db  0x38 ; '8'
0000000000007415         db  0xce ; '.'
0000000000007416         db  0xff ; '.'
0000000000007417         db  0xff ; '.'
0000000000007418         db  0x38 ; '8'
0000000000007419         db  0xce ; '.'
000000000000741a         db  0xff ; '.'
000000000000741b         db  0xff ; '.'
000000000000741c         db  0x38 ; '8'
000000000000741d         db  0xce ; '.'
000000000000741e         db  0xff ; '.'
000000000000741f         db  0xff ; '.'
0000000000007420         db  0x38 ; '8'
0000000000007421         db  0xce ; '.'
0000000000007422         db  0xff ; '.'
0000000000007423         db  0xff ; '.'
0000000000007424         db  0x38 ; '8'
0000000000007425         db  0xce ; '.'
0000000000007426         db  0xff ; '.'
0000000000007427         db  0xff ; '.'
0000000000007428         db  0x38 ; '8'
0000000000007429         db  0xce ; '.'
000000000000742a         db  0xff ; '.'
000000000000742b         db  0xff ; '.'
000000000000742c         db  0x38 ; '8'
000000000000742d         db  0xce ; '.'
000000000000742e         db  0xff ; '.'
000000000000742f         db  0xff ; '.'
0000000000007430         db  0x38 ; '8'
0000000000007431         db  0xce ; '.'
0000000000007432         db  0xff ; '.'
0000000000007433         db  0xff ; '.'
0000000000007434         db  0x38 ; '8'
0000000000007435         db  0xce ; '.'
0000000000007436         db  0xff ; '.'
0000000000007437         db  0xff ; '.'
0000000000007438         db  0x38 ; '8'
0000000000007439         db  0xce ; '.'
000000000000743a         db  0xff ; '.'
000000000000743b         db  0xff ; '.'
000000000000743c         db  0x38 ; '8'
000000000000743d         db  0xce ; '.'
000000000000743e         db  0xff ; '.'
000000000000743f         db  0xff ; '.'
0000000000007440         db  0x38 ; '8'
0000000000007441         db  0xce ; '.'
0000000000007442         db  0xff ; '.'
0000000000007443         db  0xff ; '.'
0000000000007444         db  0x38 ; '8'
0000000000007445         db  0xce ; '.'
0000000000007446         db  0xff ; '.'
0000000000007447         db  0xff ; '.'
0000000000007448         db  0x38 ; '8'
0000000000007449         db  0xce ; '.'
000000000000744a         db  0xff ; '.'
000000000000744b         db  0xff ; '.'
000000000000744c         db  0x38 ; '8'
000000000000744d         db  0xce ; '.'
000000000000744e         db  0xff ; '.'
000000000000744f         db  0xff ; '.'
0000000000007450         db  0x38 ; '8'
0000000000007451         db  0xce ; '.'
0000000000007452         db  0xff ; '.'
0000000000007453         db  0xff ; '.'
0000000000007454         db  0x38 ; '8'
0000000000007455         db  0xce ; '.'
0000000000007456         db  0xff ; '.'
0000000000007457         db  0xff ; '.'
0000000000007458         db  0x38 ; '8'
0000000000007459         db  0xce ; '.'
000000000000745a         db  0xff ; '.'
000000000000745b         db  0xff ; '.'
000000000000745c         db  0x38 ; '8'
000000000000745d         db  0xce ; '.'
000000000000745e         db  0xff ; '.'
000000000000745f         db  0xff ; '.'
0000000000007460         db  0x38 ; '8'
0000000000007461         db  0xce ; '.'
0000000000007462         db  0xff ; '.'
0000000000007463         db  0xff ; '.'
0000000000007464         db  0x38 ; '8'
0000000000007465         db  0xce ; '.'
0000000000007466         db  0xff ; '.'
0000000000007467         db  0xff ; '.'
0000000000007468         db  0x38 ; '8'
0000000000007469         db  0xce ; '.'
000000000000746a         db  0xff ; '.'
000000000000746b         db  0xff ; '.'
000000000000746c         db  0x38 ; '8'
000000000000746d         db  0xce ; '.'
000000000000746e         db  0xff ; '.'
000000000000746f         db  0xff ; '.'
0000000000007470         db  0x38 ; '8'
0000000000007471         db  0xce ; '.'
0000000000007472         db  0xff ; '.'
0000000000007473         db  0xff ; '.'
0000000000007474         db  0x68 ; 'h'
0000000000007475         db  0xce ; '.'
0000000000007476         db  0xff ; '.'
0000000000007477         db  0xff ; '.'
0000000000007478         db  0x38 ; '8'
0000000000007479         db  0xcd ; '.'
000000000000747a         db  0xff ; '.'
000000000000747b         db  0xff ; '.'
000000000000747c         db  0x38 ; '8'
000000000000747d         db  0xce ; '.'
000000000000747e         db  0xff ; '.'
000000000000747f         db  0xff ; '.'
0000000000007480         db  0x68 ; 'h'
0000000000007481         db  0xce ; '.'
0000000000007482         db  0xff ; '.'
0000000000007483         db  0xff ; '.'
0000000000007484         db  0x38 ; '8'
0000000000007485         db  0xce ; '.'
0000000000007486         db  0xff ; '.'
0000000000007487         db  0xff ; '.'
0000000000007488         db  0x68 ; 'h'
0000000000007489         db  0xce ; '.'
000000000000748a         db  0xff ; '.'
000000000000748b         db  0xff ; '.'
000000000000748c         db  0x38 ; '8'
000000000000748d         db  0xce ; '.'
000000000000748e         db  0xff ; '.'
000000000000748f         db  0xff ; '.'
0000000000007490         db  0x38 ; '8'
0000000000007491         db  0xce ; '.'
0000000000007492         db  0xff ; '.'
0000000000007493         db  0xff ; '.'
0000000000007494         db  0x38 ; '8'
0000000000007495         db  0xce ; '.'
0000000000007496         db  0xff ; '.'
0000000000007497         db  0xff ; '.'
0000000000007498         db  0x38 ; '8'
0000000000007499         db  0xce ; '.'
000000000000749a         db  0xff ; '.'
000000000000749b         db  0xff ; '.'
000000000000749c         db  0x38 ; '8'
000000000000749d         db  0xce ; '.'
000000000000749e         db  0xff ; '.'
000000000000749f         db  0xff ; '.'
00000000000074a0         db  0x38 ; '8'
00000000000074a1         db  0xce ; '.'
00000000000074a2         db  0xff ; '.'
00000000000074a3         db  0xff ; '.'
00000000000074a4         db  0x38 ; '8'
00000000000074a5         db  0xce ; '.'
00000000000074a6         db  0xff ; '.'
00000000000074a7         db  0xff ; '.'
00000000000074a8         db  0x38 ; '8'
00000000000074a9         db  0xce ; '.'
00000000000074aa         db  0xff ; '.'
00000000000074ab         db  0xff ; '.'
00000000000074ac         db  0x38 ; '8'
00000000000074ad         db  0xce ; '.'
00000000000074ae         db  0xff ; '.'
00000000000074af         db  0xff ; '.'
00000000000074b0         db  0x38 ; '8'
00000000000074b1         db  0xce ; '.'
00000000000074b2         db  0xff ; '.'
00000000000074b3         db  0xff ; '.'
00000000000074b4         db  0x38 ; '8'
00000000000074b5         db  0xce ; '.'
00000000000074b6         db  0xff ; '.'
00000000000074b7         db  0xff ; '.'
00000000000074b8         db  0x38 ; '8'
00000000000074b9         db  0xce ; '.'
00000000000074ba         db  0xff ; '.'
00000000000074bb         db  0xff ; '.'
00000000000074bc         db  0x38 ; '8'
00000000000074bd         db  0xce ; '.'
00000000000074be         db  0xff ; '.'
00000000000074bf         db  0xff ; '.'
00000000000074c0         db  0x38 ; '8'
00000000000074c1         db  0xce ; '.'
00000000000074c2         db  0xff ; '.'
00000000000074c3         db  0xff ; '.'
00000000000074c4         db  0x38 ; '8'
00000000000074c5         db  0xce ; '.'
00000000000074c6         db  0xff ; '.'
00000000000074c7         db  0xff ; '.'
00000000000074c8         db  0x38 ; '8'
00000000000074c9         db  0xce ; '.'
00000000000074ca         db  0xff ; '.'
00000000000074cb         db  0xff ; '.'
00000000000074cc         db  0x38 ; '8'
00000000000074cd         db  0xce ; '.'
00000000000074ce         db  0xff ; '.'
00000000000074cf         db  0xff ; '.'
00000000000074d0         db  0x38 ; '8'
00000000000074d1         db  0xce ; '.'
00000000000074d2         db  0xff ; '.'
00000000000074d3         db  0xff ; '.'
00000000000074d4         db  0x38 ; '8'
00000000000074d5         db  0xce ; '.'
00000000000074d6         db  0xff ; '.'
00000000000074d7         db  0xff ; '.'
00000000000074d8         db  0x38 ; '8'
00000000000074d9         db  0xce ; '.'
00000000000074da         db  0xff ; '.'
00000000000074db         db  0xff ; '.'
00000000000074dc         db  0x38 ; '8'
00000000000074dd         db  0xce ; '.'
00000000000074de         db  0xff ; '.'
00000000000074df         db  0xff ; '.'
00000000000074e0         db  0x38 ; '8'
00000000000074e1         db  0xce ; '.'
00000000000074e2         db  0xff ; '.'
00000000000074e3         db  0xff ; '.'
00000000000074e4         db  0x38 ; '8'
00000000000074e5         db  0xce ; '.'
00000000000074e6         db  0xff ; '.'
00000000000074e7         db  0xff ; '.'
00000000000074e8         db  0x38 ; '8'
00000000000074e9         db  0xce ; '.'
00000000000074ea         db  0xff ; '.'
00000000000074eb         db  0xff ; '.'
00000000000074ec         db  0x38 ; '8'
00000000000074ed         db  0xce ; '.'
00000000000074ee         db  0xff ; '.'
00000000000074ef         db  0xff ; '.'
00000000000074f0         db  0x38 ; '8'
00000000000074f1         db  0xce ; '.'
00000000000074f2         db  0xff ; '.'
00000000000074f3         db  0xff ; '.'
00000000000074f4         db  0xa8 ; '.'
00000000000074f5         db  0xc9 ; '.'
00000000000074f6         db  0xff ; '.'
00000000000074f7         db  0xff ; '.'
00000000000074f8         db  0x68 ; 'h'
00000000000074f9         db  0xce ; '.'
00000000000074fa         db  0xff ; '.'
00000000000074fb         db  0xff ; '.'
00000000000074fc         db  0xa8 ; '.'
00000000000074fd         db  0xc9 ; '.'
00000000000074fe         db  0xff ; '.'
00000000000074ff         db  0xff ; '.'
0000000000007500         db  0x50 ; 'P'
0000000000007501         db  0xce ; '.'
0000000000007502         db  0xff ; '.'
0000000000007503         db  0xff ; '.'
0000000000007504         db  0x00 ; '.'
0000000000007505         db  0x00 ; '.'
0000000000007506         db  0x00 ; '.'
0000000000007507         db  0x00 ; '.'
0000000000007508         db  0x00 ; '.'
0000000000007509         db  0x00 ; '.'
000000000000750a         db  0x00 ; '.'
000000000000750b         db  0x00 ; '.'
000000000000750c         db  0x00 ; '.'
000000000000750d         db  0x00 ; '.'
000000000000750e         db  0x00 ; '.'
000000000000750f         db  0x00 ; '.'
0000000000007510         db  0x00 ; '.'
0000000000007511         db  0x00 ; '.'
0000000000007512         db  0x00 ; '.'
0000000000007513         db  0x00 ; '.'
0000000000007514         db  0x00 ; '.'
0000000000007515         db  0x00 ; '.'
0000000000007516         db  0x00 ; '.'
0000000000007517         db  0x00 ; '.'
0000000000007518         db  0x00 ; '.'
0000000000007519         db  0x00 ; '.'
000000000000751a         db  0x00 ; '.'
000000000000751b         db  0x00 ; '.'
000000000000751c         db  0x00 ; '.'
000000000000751d         db  0x00 ; '.'
000000000000751e         db  0x00 ; '.'
000000000000751f         db  0x00 ; '.'
                     quoting_style_vals:
0000000000007520         db  0x00 ; '.'
0000000000007521         db  0x00 ; '.'
0000000000007522         db  0x00 ; '.'
0000000000007523         db  0x00 ; '.'
0000000000007524         db  0x01 ; '.'
0000000000007525         db  0x00 ; '.'
0000000000007526         db  0x00 ; '.'
0000000000007527         db  0x00 ; '.'
0000000000007528         db  0x02 ; '.'
0000000000007529         db  0x00 ; '.'
000000000000752a         db  0x00 ; '.'
000000000000752b         db  0x00 ; '.'
000000000000752c         db  0x03 ; '.'
000000000000752d         db  0x00 ; '.'
000000000000752e         db  0x00 ; '.'
000000000000752f         db  0x00 ; '.'
0000000000007530         db  0x04 ; '.'
0000000000007531         db  0x00 ; '.'
0000000000007532         db  0x00 ; '.'
0000000000007533         db  0x00 ; '.'
0000000000007534         db  0x05 ; '.'
0000000000007535         db  0x00 ; '.'
0000000000007536         db  0x00 ; '.'
0000000000007537         db  0x00 ; '.'
0000000000007538         db  0x06 ; '.'
0000000000007539         db  0x00 ; '.'
000000000000753a         db  0x00 ; '.'
000000000000753b         db  0x00 ; '.'
000000000000753c         db  0x07 ; '.'
000000000000753d         db  0x00 ; '.'
000000000000753e         db  0x00 ; '.'
000000000000753f         db  0x00 ; '.'
0000000000007540         db  0x08 ; '.'
0000000000007541         db  0x00 ; '.'
0000000000007542         db  0x00 ; '.'
0000000000007543         db  0x00 ; '.'
0000000000007544         db  0x09 ; '.'
0000000000007545         db  0x00 ; '.'
0000000000007546         db  0x00 ; '.'
0000000000007547         db  0x00 ; '.'
                     aSSSn:
0000000000007548         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
0000000000007554         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
000000000000755b         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
000000000000755c         db  0x43 ; 'C'
000000000000755d         db  0x29 ; ')'
000000000000755e         db  0x00 ; '.'
                     aWrittenBySn:
000000000000755f         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
000000000000756f         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
0000000000007586         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
00000000000075a2         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
00000000000075b7         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
00000000000075cd         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
00000000000075e1         align      8
                     aNlicenseGplv3G:
00000000000075e8         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
00000000000076b4         align      8
                     aWrittenBySSSna:
00000000000076b8         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_76d8:        // aWrittenBySSSns
00000000000076d8         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
00000000000076fc         align      256
                     aWrittenBySSSns_7700:        // aWrittenBySSSns
0000000000007700         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_7728:        // aWrittenBySSSns
0000000000007728         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
0000000000007754         align      8
                     aWrittenBySSSns_7758:        // aWrittenBySSSns
0000000000007758         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
0000000000007788         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
00000000000077bc         align      64
                     aWrittenBySSSns_77c0:        // aWrittenBySSSns
00000000000077c0         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
00000000000077fc         align      2048
                     aGeneralHelpUsi:
0000000000007800         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
0000000000007841         align      8
                     switch_table_7848:        // switch_table
0000000000007848         dd         version_etc_arn.loc_5786-switch_table_7848, version_etc_arn.loc_5818-switch_table_7848, version_etc_arn.loc_5858-switch_table_7848, version_etc_arn.loc_58a0-switch_table_7848 ; switch table used at 0x5704 containing 10 entries, DATA XREF=version_etc_arn+150
0000000000007858         dd         version_etc_arn.loc_58f0-switch_table_7848, version_etc_arn.loc_5948-switch_table_7848, version_etc_arn.loc_5978-switch_table_7848, version_etc_arn.loc_59e0-switch_table_7848
0000000000007868         dd         version_etc_arn.loc_5710-switch_table_7848, version_etc_arn.loc_57c0-switch_table_7848
0000000000007870         align      128
                     version_etc_copyright:
0000000000007880         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
00000000000078af         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
00000000000078c0         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
00000000000078c1         db  0x00 ; '.'
                     aPosix:
00000000000078c2         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aAscii:
00000000000078c8         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
00000000000078ce         db  0x00 ; '.'
00000000000078cf         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0x78d0; 0x7b74[ (676 bytes)
        ; File offset : [30928; 31604[ (676 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

00000000000078d0         db  0x01 ; '.'
00000000000078d1         db  0x1b ; '.'
00000000000078d2         db  0x03 ; '.'
00000000000078d3         db  0x3b ; ';'
00000000000078d4         db  0xa4 ; '.'
00000000000078d5         db  0x02 ; '.'
00000000000078d6         db  0x00 ; '.'
00000000000078d7         db  0x00 ; '.'
00000000000078d8         db  0x53 ; 'S'
00000000000078d9         db  0x00 ; '.'
00000000000078da         db  0x00 ; '.'
00000000000078db         db  0x00 ; '.'
00000000000078dc         db  0x90 ; '.'
00000000000078dd         db  0x9d ; '.'
00000000000078de         db  0xff ; '.'
00000000000078df         db  0xff ; '.'
00000000000078e0         db  0xf0 ; '.'
00000000000078e1         db  0x02 ; '.'
00000000000078e2         db  0x00 ; '.'
00000000000078e3         db  0x00 ; '.'
00000000000078e4         db  0x10 ; '.'
00000000000078e5         db  0xa1 ; '.'
00000000000078e6         db  0xff ; '.'
00000000000078e7         db  0xff ; '.'
00000000000078e8         db  0x18 ; '.'
00000000000078e9         db  0x03 ; '.'
00000000000078ea         db  0x00 ; '.'
00000000000078eb         db  0x00 ; '.'
00000000000078ec         db  0x20 ; ' '
00000000000078ed         db  0xa1 ; '.'
00000000000078ee         db  0xff ; '.'
00000000000078ef         db  0xff ; '.'
00000000000078f0         db  0xe8 ; '.'
00000000000078f1         db  0x03 ; '.'
00000000000078f2         db  0x00 ; '.'
00000000000078f3         db  0x00 ; '.'
00000000000078f4         db  0x90 ; '.'
00000000000078f5         db  0xa5 ; '.'
00000000000078f6         db  0xff ; '.'
00000000000078f7         db  0xff ; '.'
00000000000078f8         db  0xc0 ; '.'
00000000000078f9         db  0x02 ; '.'
00000000000078fa         db  0x00 ; '.'
00000000000078fb         db  0x00 ; '.'
00000000000078fc         db  0xa0 ; '.'
00000000000078fd         db  0xa6 ; '.'
00000000000078fe         db  0xff ; '.'
00000000000078ff         db  0xff ; '.'
0000000000007900         db  0x30 ; '0'
0000000000007901         db  0x03 ; '.'
0000000000007902         db  0x00 ; '.'
0000000000007903         db  0x00 ; '.'
0000000000007904         db  0x90 ; '.'
0000000000007905         db  0xae ; '.'
0000000000007906         db  0xff ; '.'
0000000000007907         db  0xff ; '.'
0000000000007908         db  0xbc ; '.'
0000000000007909         db  0x03 ; '.'
000000000000790a         db  0x00 ; '.'
000000000000790b         db  0x00 ; '.'
000000000000790c         db  0x20 ; ' '
000000000000790d         db  0xb3 ; '.'
000000000000790e         db  0xff ; '.'
000000000000790f         db  0xff ; '.'
0000000000007910         db  0x40 ; '@'
0000000000007911         db  0x04 ; '.'
0000000000007912         db  0x00 ; '.'
0000000000007913         db  0x00 ; '.'
0000000000007914         db  0x40 ; '@'
0000000000007915         db  0xb3 ; '.'
0000000000007916         db  0xff ; '.'
0000000000007917         db  0xff ; '.'
0000000000007918         db  0x54 ; 'T'
0000000000007919         db  0x04 ; '.'
000000000000791a         db  0x00 ; '.'
000000000000791b         db  0x00 ; '.'
000000000000791c         db  0x10 ; '.'
000000000000791d         db  0xb4 ; '.'
000000000000791e         db  0xff ; '.'
000000000000791f         db  0xff ; '.'
0000000000007920         db  0x80 ; '.'
0000000000007921         db  0x04 ; '.'
0000000000007922         db  0x00 ; '.'
0000000000007923         db  0x00 ; '.'
0000000000007924         db  0xd0 ; '.'
0000000000007925         db  0xb9 ; '.'
0000000000007926         db  0xff ; '.'
0000000000007927         db  0xff ; '.'
0000000000007928         db  0xcc ; '.'
0000000000007929         db  0x04 ; '.'
000000000000792a         db  0x00 ; '.'
000000000000792b         db  0x00 ; '.'
000000000000792c         db  0x10 ; '.'
000000000000792d         db  0xba ; '.'
000000000000792e         db  0xff ; '.'
000000000000792f         db  0xff ; '.'
0000000000007930         db  0xe8 ; '.'
0000000000007931         db  0x04 ; '.'
0000000000007932         db  0x00 ; '.'
0000000000007933         db  0x00 ; '.'
0000000000007934         db  0x20 ; ' '
0000000000007935         db  0xba ; '.'
0000000000007936         db  0xff ; '.'
0000000000007937         db  0xff ; '.'
0000000000007938         db  0xfc ; '.'
0000000000007939         db  0x04 ; '.'
000000000000793a         db  0x00 ; '.'
000000000000793b         db  0x00 ; '.'
000000000000793c         db  0x30 ; '0'
000000000000793d         db  0xba ; '.'
000000000000793e         db  0xff ; '.'
000000000000793f         db  0xff ; '.'
0000000000007940         db  0x10 ; '.'
0000000000007941         db  0x05 ; '.'
0000000000007942         db  0x00 ; '.'
0000000000007943         db  0x00 ; '.'
0000000000007944         db  0xe0 ; '.'
0000000000007945         db  0xba ; '.'
0000000000007946         db  0xff ; '.'
0000000000007947         db  0xff ; '.'
0000000000007948         db  0x40 ; '@'
0000000000007949         db  0x05 ; '.'
000000000000794a         db  0x00 ; '.'
000000000000794b         db  0x00 ; '.'
000000000000794c         db  0xf0 ; '.'
000000000000794d         db  0xba ; '.'
000000000000794e         db  0xff ; '.'
000000000000794f         db  0xff ; '.'
0000000000007950         db  0x54 ; 'T'
0000000000007951         db  0x05 ; '.'
0000000000007952         db  0x00 ; '.'
0000000000007953         db  0x00 ; '.'
0000000000007954         db  0x20 ; ' '
0000000000007955         db  0xbb ; '.'
0000000000007956         db  0xff ; '.'
0000000000007957         db  0xff ; '.'
0000000000007958         db  0x70 ; 'p'
0000000000007959         db  0x05 ; '.'
000000000000795a         db  0x00 ; '.'
000000000000795b         db  0x00 ; '.'
000000000000795c         db  0xa0 ; '.'
000000000000795d         db  0xbe ; '.'
000000000000795e         db  0xff ; '.'
000000000000795f         db  0xff ; '.'
0000000000007960         db  0xc0 ; '.'
0000000000007961         db  0x05 ; '.'
0000000000007962         db  0x00 ; '.'
0000000000007963         db  0x00 ; '.'
0000000000007964         db  0x60 ; '`'
0000000000007965         db  0xc0 ; '.'
0000000000007966         db  0xff ; '.'
0000000000007967         db  0xff ; '.'
0000000000007968         db  0x30 ; '0'
0000000000007969         db  0x06 ; '.'
000000000000796a         db  0x00 ; '.'
000000000000796b         db  0x00 ; '.'
000000000000796c         db  0x00 ; '.'
000000000000796d         db  0xc1 ; '.'
000000000000796e         db  0xff ; '.'
000000000000796f         db  0xff ; '.'
0000000000007970         db  0x50 ; 'P'
0000000000007971         db  0x06 ; '.'
0000000000007972         db  0x00 ; '.'
0000000000007973         db  0x00 ; '.'
0000000000007974         db  0xf0 ; '.'
0000000000007975         db  0xc1 ; '.'
0000000000007976         db  0xff ; '.'
0000000000007977         db  0xff ; '.'
0000000000007978         db  0x94 ; '.'
0000000000007979         db  0x06 ; '.'
000000000000797a         db  0x00 ; '.'
000000000000797b         db  0x00 ; '.'
000000000000797c         db  0x30 ; '0'
000000000000797d         db  0xd4 ; '.'
000000000000797e         db  0xff ; '.'
000000000000797f         db  0xff ; '.'
0000000000007980         db  0x0c ; '.'
0000000000007981         db  0x07 ; '.'
0000000000007982         db  0x00 ; '.'
0000000000007983         db  0x00 ; '.'
0000000000007984         db  0xe0 ; '.'
0000000000007985         db  0xd5 ; '.'
0000000000007986         db  0xff ; '.'
0000000000007987         db  0xff ; '.'
0000000000007988         db  0x78 ; 'x'
0000000000007989         db  0x07 ; '.'
000000000000798a         db  0x00 ; '.'
000000000000798b         db  0x00 ; '.'
000000000000798c         db  0x20 ; ' '
000000000000798d         db  0xd6 ; '.'
000000000000798e         db  0xff ; '.'
000000000000798f         db  0xff ; '.'
0000000000007990         db  0xa4 ; '.'
0000000000007991         db  0x07 ; '.'
0000000000007992         db  0x00 ; '.'
0000000000007993         db  0x00 ; '.'
0000000000007994         db  0x40 ; '@'
0000000000007995         db  0xd6 ; '.'
0000000000007996         db  0xff ; '.'
0000000000007997         db  0xff ; '.'
0000000000007998         db  0xb8 ; '.'
0000000000007999         db  0x07 ; '.'
000000000000799a         db  0x00 ; '.'
000000000000799b         db  0x00 ; '.'
000000000000799c         db  0x60 ; '`'
000000000000799d         db  0xd6 ; '.'
000000000000799e         db  0xff ; '.'
000000000000799f         db  0xff ; '.'
00000000000079a0         db  0xcc ; '.'
00000000000079a1         db  0x07 ; '.'
00000000000079a2         db  0x00 ; '.'
00000000000079a3         db  0x00 ; '.'
00000000000079a4         db  0xa0 ; '.'
00000000000079a5         db  0xd6 ; '.'
00000000000079a6         db  0xff ; '.'
00000000000079a7         db  0xff ; '.'
00000000000079a8         db  0xe0 ; '.'
00000000000079a9         db  0x07 ; '.'
00000000000079aa         db  0x00 ; '.'
00000000000079ab         db  0x00 ; '.'
00000000000079ac         db  0xc0 ; '.'
00000000000079ad         db  0xd6 ; '.'
00000000000079ae         db  0xff ; '.'
00000000000079af         db  0xff ; '.'
00000000000079b0         db  0xf4 ; '.'
00000000000079b1         db  0x07 ; '.'
00000000000079b2         db  0x00 ; '.'
00000000000079b3         db  0x00 ; '.'
00000000000079b4         db  0xf0 ; '.'
00000000000079b5         db  0xd6 ; '.'
00000000000079b6         db  0xff ; '.'
00000000000079b7         db  0xff ; '.'
00000000000079b8         db  0x08 ; '.'
00000000000079b9         db  0x08 ; '.'
00000000000079ba         db  0x00 ; '.'
00000000000079bb         db  0x00 ; '.'
00000000000079bc         db  0x70 ; 'p'
00000000000079bd         db  0xd7 ; '.'
00000000000079be         db  0xff ; '.'
00000000000079bf         db  0xff ; '.'
00000000000079c0         db  0x5c ; '\'
00000000000079c1         db  0x08 ; '.'
00000000000079c2         db  0x00 ; '.'
00000000000079c3         db  0x00 ; '.'
00000000000079c4         db  0x60 ; '`'
00000000000079c5         db  0xd8 ; '.'
00000000000079c6         db  0xff ; '.'
00000000000079c7         db  0xff ; '.'
00000000000079c8         db  0xc8 ; '.'
00000000000079c9         db  0x08 ; '.'
00000000000079ca         db  0x00 ; '.'
00000000000079cb         db  0x00 ; '.'
00000000000079cc         db  0x70 ; 'p'
00000000000079cd         db  0xd8 ; '.'
00000000000079ce         db  0xff ; '.'
00000000000079cf         db  0xff ; '.'
00000000000079d0         db  0xdc ; '.'
00000000000079d1         db  0x08 ; '.'
00000000000079d2         db  0x00 ; '.'
00000000000079d3         db  0x00 ; '.'
00000000000079d4         db  0x10 ; '.'
00000000000079d5         db  0xd9 ; '.'
00000000000079d6         db  0xff ; '.'
00000000000079d7         db  0xff ; '.'
00000000000079d8         db  0x08 ; '.'
00000000000079d9         db  0x09 ; '.'
00000000000079da         db  0x00 ; '.'
00000000000079db         db  0x00 ; '.'
00000000000079dc         db  0x30 ; '0'
00000000000079dd         db  0xd9 ; '.'
00000000000079de         db  0xff ; '.'
00000000000079df         db  0xff ; '.'
00000000000079e0         db  0x1c ; '.'
00000000000079e1         db  0x09 ; '.'
00000000000079e2         db  0x00 ; '.'
00000000000079e3         db  0x00 ; '.'
00000000000079e4         db  0x40 ; '@'
00000000000079e5         db  0xd9 ; '.'
00000000000079e6         db  0xff ; '.'
00000000000079e7         db  0xff ; '.'
00000000000079e8         db  0x30 ; '0'
00000000000079e9         db  0x09 ; '.'
00000000000079ea         db  0x00 ; '.'
00000000000079eb         db  0x00 ; '.'
00000000000079ec         db  0x60 ; '`'
00000000000079ed         db  0xd9 ; '.'
00000000000079ee         db  0xff ; '.'
00000000000079ef         db  0xff ; '.'
00000000000079f0         db  0x44 ; 'D'
00000000000079f1         db  0x09 ; '.'
00000000000079f2         db  0x00 ; '.'
00000000000079f3         db  0x00 ; '.'
00000000000079f4         db  0x80 ; '.'
00000000000079f5         db  0xd9 ; '.'
00000000000079f6         db  0xff ; '.'
00000000000079f7         db  0xff ; '.'
00000000000079f8         db  0x58 ; 'X'
00000000000079f9         db  0x09 ; '.'
00000000000079fa         db  0x00 ; '.'
00000000000079fb         db  0x00 ; '.'
00000000000079fc         db  0x10 ; '.'
00000000000079fd         db  0xda ; '.'
00000000000079fe         db  0xff ; '.'
00000000000079ff         db  0xff ; '.'
0000000000007a00         db  0x74 ; 't'
0000000000007a01         db  0x09 ; '.'
0000000000007a02         db  0x00 ; '.'
0000000000007a03         db  0x00 ; '.'
0000000000007a04         db  0xa0 ; '.'
0000000000007a05         db  0xda ; '.'
0000000000007a06         db  0xff ; '.'
0000000000007a07         db  0xff ; '.'
0000000000007a08         db  0x90 ; '.'
0000000000007a09         db  0x09 ; '.'
0000000000007a0a         db  0x00 ; '.'
0000000000007a0b         db  0x00 ; '.'
0000000000007a0c         db  0xb0 ; '.'
0000000000007a0d         db  0xda ; '.'
0000000000007a0e         db  0xff ; '.'
0000000000007a0f         db  0xff ; '.'
0000000000007a10         db  0xa4 ; '.'
0000000000007a11         db  0x09 ; '.'
0000000000007a12         db  0x00 ; '.'
0000000000007a13         db  0x00 ; '.'
0000000000007a14         db  0xc0 ; '.'
0000000000007a15         db  0xda ; '.'
0000000000007a16         db  0xff ; '.'
0000000000007a17         db  0xff ; '.'
0000000000007a18         db  0xb8 ; '.'
0000000000007a19         db  0x09 ; '.'
0000000000007a1a         db  0x00 ; '.'
0000000000007a1b         db  0x00 ; '.'
0000000000007a1c         db  0x60 ; '`'
0000000000007a1d         db  0xdb ; '.'
0000000000007a1e         db  0xff ; '.'
0000000000007a1f         db  0xff ; '.'
0000000000007a20         db  0xd4 ; '.'
0000000000007a21         db  0x09 ; '.'
0000000000007a22         db  0x00 ; '.'
0000000000007a23         db  0x00 ; '.'
0000000000007a24         db  0x70 ; 'p'
0000000000007a25         db  0xdb ; '.'
0000000000007a26         db  0xff ; '.'
0000000000007a27         db  0xff ; '.'
0000000000007a28         db  0xe8 ; '.'
0000000000007a29         db  0x09 ; '.'
0000000000007a2a         db  0x00 ; '.'
0000000000007a2b         db  0x00 ; '.'
0000000000007a2c         db  0x90 ; '.'
0000000000007a2d         db  0xdb ; '.'
0000000000007a2e         db  0xff ; '.'
0000000000007a2f         db  0xff ; '.'
0000000000007a30         db  0xfc ; '.'
0000000000007a31         db  0x09 ; '.'
0000000000007a32         db  0x00 ; '.'
0000000000007a33         db  0x00 ; '.'
0000000000007a34         db  0xa0 ; '.'
0000000000007a35         db  0xdb ; '.'
0000000000007a36         db  0xff ; '.'
0000000000007a37         db  0xff ; '.'
0000000000007a38         db  0x10 ; '.'
0000000000007a39         db  0x0a ; '.'
0000000000007a3a         db  0x00 ; '.'
0000000000007a3b         db  0x00 ; '.'
0000000000007a3c         db  0x30 ; '0'
0000000000007a3d         db  0xdc ; '.'
0000000000007a3e         db  0xff ; '.'
0000000000007a3f         db  0xff ; '.'
0000000000007a40         db  0x2c ; ','
0000000000007a41         db  0x0a ; '.'
0000000000007a42         db  0x00 ; '.'
0000000000007a43         db  0x00 ; '.'
0000000000007a44         db  0xd0 ; '.'
0000000000007a45         db  0xdc ; '.'
0000000000007a46         db  0xff ; '.'
0000000000007a47         db  0xff ; '.'
0000000000007a48         db  0x48 ; 'H'
0000000000007a49         db  0x0a ; '.'
0000000000007a4a         db  0x00 ; '.'
0000000000007a4b         db  0x00 ; '.'
0000000000007a4c         db  0xe0 ; '.'
0000000000007a4d         db  0xdc ; '.'
0000000000007a4e         db  0xff ; '.'
0000000000007a4f         db  0xff ; '.'
0000000000007a50         db  0x5c ; '\'
0000000000007a51         db  0x0a ; '.'
0000000000007a52         db  0x00 ; '.'
0000000000007a53         db  0x00 ; '.'
0000000000007a54         db  0x00 ; '.'
0000000000007a55         db  0xdd ; '.'
0000000000007a56         db  0xff ; '.'
0000000000007a57         db  0xff ; '.'
0000000000007a58         db  0x70 ; 'p'
0000000000007a59         db  0x0a ; '.'
0000000000007a5a         db  0x00 ; '.'
0000000000007a5b         db  0x00 ; '.'
0000000000007a5c         db  0x20 ; ' '
0000000000007a5d         db  0xdd ; '.'
0000000000007a5e         db  0xff ; '.'
0000000000007a5f         db  0xff ; '.'
0000000000007a60         db  0x84 ; '.'
0000000000007a61         db  0x0a ; '.'
0000000000007a62         db  0x00 ; '.'
0000000000007a63         db  0x00 ; '.'
0000000000007a64         db  0x30 ; '0'
0000000000007a65         db  0xdd ; '.'
0000000000007a66         db  0xff ; '.'
0000000000007a67         db  0xff ; '.'
0000000000007a68         db  0x98 ; '.'
0000000000007a69         db  0x0a ; '.'
0000000000007a6a         db  0x00 ; '.'
0000000000007a6b         db  0x00 ; '.'
0000000000007a6c         db  0x50 ; 'P'
0000000000007a6d         db  0xdd ; '.'
0000000000007a6e         db  0xff ; '.'
0000000000007a6f         db  0xff ; '.'
0000000000007a70         db  0xac ; '.'
0000000000007a71         db  0x0a ; '.'
0000000000007a72         db  0x00 ; '.'
0000000000007a73         db  0x00 ; '.'
0000000000007a74         db  0x70 ; 'p'
0000000000007a75         db  0xdd ; '.'
0000000000007a76         db  0xff ; '.'
0000000000007a77         db  0xff ; '.'
0000000000007a78         db  0xc0 ; '.'
0000000000007a79         db  0x0a ; '.'
0000000000007a7a         db  0x00 ; '.'
0000000000007a7b         db  0x00 ; '.'
0000000000007a7c         db  0x90 ; '.'
0000000000007a7d         db  0xdd ; '.'
0000000000007a7e         db  0xff ; '.'
0000000000007a7f         db  0xff ; '.'
0000000000007a80         db  0xd8 ; '.'
0000000000007a81         db  0x0a ; '.'
0000000000007a82         db  0x00 ; '.'
0000000000007a83         db  0x00 ; '.'
0000000000007a84         db  0xb0 ; '.'
0000000000007a85         db  0xe1 ; '.'
0000000000007a86         db  0xff ; '.'
0000000000007a87         db  0xff ; '.'
0000000000007a88         db  0xec ; '.'
0000000000007a89         db  0x0b ; '.'
0000000000007a8a         db  0x00 ; '.'
0000000000007a8b         db  0x00 ; '.'
0000000000007a8c         db  0xd0 ; '.'
0000000000007a8d         db  0xe1 ; '.'
0000000000007a8e         db  0xff ; '.'
0000000000007a8f         db  0xff ; '.'
0000000000007a90         db  0x00 ; '.'
0000000000007a91         db  0x0c ; '.'
0000000000007a92         db  0x00 ; '.'
0000000000007a93         db  0x00 ; '.'
0000000000007a94         db  0x50 ; 'P'
0000000000007a95         db  0xe2 ; '.'
0000000000007a96         db  0xff ; '.'
0000000000007a97         db  0xff ; '.'
0000000000007a98         db  0x1c ; '.'
0000000000007a99         db  0x0c ; '.'
0000000000007a9a         db  0x00 ; '.'
0000000000007a9b         db  0x00 ; '.'
0000000000007a9c         db  0x30 ; '0'
0000000000007a9d         db  0xe3 ; '.'
0000000000007a9e         db  0xff ; '.'
0000000000007a9f         db  0xff ; '.'
0000000000007aa0         db  0x48 ; 'H'
0000000000007aa1         db  0x0c ; '.'
0000000000007aa2         db  0x00 ; '.'
0000000000007aa3         db  0x00 ; '.'
0000000000007aa4         db  0xb0 ; '.'
0000000000007aa5         db  0xe3 ; '.'
0000000000007aa6         db  0xff ; '.'
0000000000007aa7         db  0xff ; '.'
0000000000007aa8         db  0x68 ; 'h'
0000000000007aa9         db  0x0c ; '.'
0000000000007aaa         db  0x00 ; '.'
0000000000007aab         db  0x00 ; '.'
0000000000007aac         db  0xd0 ; '.'
0000000000007aad         db  0xe3 ; '.'
0000000000007aae         db  0xff ; '.'
0000000000007aaf         db  0xff ; '.'
0000000000007ab0         db  0x84 ; '.'
0000000000007ab1         db  0x0c ; '.'
0000000000007ab2         db  0x00 ; '.'
0000000000007ab3         db  0x00 ; '.'
0000000000007ab4         db  0x00 ; '.'
0000000000007ab5         db  0xe4 ; '.'
0000000000007ab6         db  0xff ; '.'
0000000000007ab7         db  0xff ; '.'
0000000000007ab8         db  0x98 ; '.'
0000000000007ab9         db  0x0c ; '.'
0000000000007aba         db  0x00 ; '.'
0000000000007abb         db  0x00 ; '.'
0000000000007abc         db  0x10 ; '.'
0000000000007abd         db  0xe4 ; '.'
0000000000007abe         db  0xff ; '.'
0000000000007abf         db  0xff ; '.'
0000000000007ac0         db  0xac ; '.'
0000000000007ac1         db  0x0c ; '.'
0000000000007ac2         db  0x00 ; '.'
0000000000007ac3         db  0x00 ; '.'
0000000000007ac4         db  0x50 ; 'P'
0000000000007ac5         db  0xe4 ; '.'
0000000000007ac6         db  0xff ; '.'
0000000000007ac7         db  0xff ; '.'
0000000000007ac8         db  0xd0 ; '.'
0000000000007ac9         db  0x0c ; '.'
0000000000007aca         db  0x00 ; '.'
0000000000007acb         db  0x00 ; '.'
0000000000007acc         db  0x80 ; '.'
0000000000007acd         db  0xe4 ; '.'
0000000000007ace         db  0xff ; '.'
0000000000007acf         db  0xff ; '.'
0000000000007ad0         db  0xe4 ; '.'
0000000000007ad1         db  0x0c ; '.'
0000000000007ad2         db  0x00 ; '.'
0000000000007ad3         db  0x00 ; '.'
0000000000007ad4         db  0x10 ; '.'
0000000000007ad5         db  0xe5 ; '.'
0000000000007ad6         db  0xff ; '.'
0000000000007ad7         db  0xff ; '.'
0000000000007ad8         db  0xfc ; '.'
0000000000007ad9         db  0x0c ; '.'
0000000000007ada         db  0x00 ; '.'
0000000000007adb         db  0x00 ; '.'
0000000000007adc         db  0x60 ; '`'
0000000000007add         db  0xe5 ; '.'
0000000000007ade         db  0xff ; '.'
0000000000007adf         db  0xff ; '.'
0000000000007ae0         db  0x14 ; '.'
0000000000007ae1         db  0x0d ; '.'
0000000000007ae2         db  0x00 ; '.'
0000000000007ae3         db  0x00 ; '.'
0000000000007ae4         db  0x80 ; '.'
0000000000007ae5         db  0xe5 ; '.'
0000000000007ae6         db  0xff ; '.'
0000000000007ae7         db  0xff ; '.'
0000000000007ae8         db  0x30 ; '0'
0000000000007ae9         db  0x0d ; '.'
0000000000007aea         db  0x00 ; '.'
0000000000007aeb         db  0x00 ; '.'
0000000000007aec         db  0xb0 ; '.'
0000000000007aed         db  0xe5 ; '.'
0000000000007aee         db  0xff ; '.'
0000000000007aef         db  0xff ; '.'
0000000000007af0         db  0x4c ; 'L'
0000000000007af1         db  0x0d ; '.'
0000000000007af2         db  0x00 ; '.'
0000000000007af3         db  0x00 ; '.'
0000000000007af4         db  0xe0 ; '.'
0000000000007af5         db  0xe5 ; '.'
0000000000007af6         db  0xff ; '.'
0000000000007af7         db  0xff ; '.'
0000000000007af8         db  0x74 ; 't'
0000000000007af9         db  0x0d ; '.'
0000000000007afa         db  0x00 ; '.'
0000000000007afb         db  0x00 ; '.'
0000000000007afc         db  0x00 ; '.'
0000000000007afd         db  0xe6 ; '.'
0000000000007afe         db  0xff ; '.'
0000000000007aff         db  0xff ; '.'
0000000000007b00         db  0x90 ; '.'
0000000000007b01         db  0x0d ; '.'
0000000000007b02         db  0x00 ; '.'
0000000000007b03         db  0x00 ; '.'
0000000000007b04         db  0x40 ; '@'
0000000000007b05         db  0xe6 ; '.'
0000000000007b06         db  0xff ; '.'
0000000000007b07         db  0xff ; '.'
0000000000007b08         db  0xa8 ; '.'
0000000000007b09         db  0x0d ; '.'
0000000000007b0a         db  0x00 ; '.'
0000000000007b0b         db  0x00 ; '.'
0000000000007b0c         db  0x60 ; '`'
0000000000007b0d         db  0xe6 ; '.'
0000000000007b0e         db  0xff ; '.'
0000000000007b0f         db  0xff ; '.'
0000000000007b10         db  0xc8 ; '.'
0000000000007b11         db  0x0d ; '.'
0000000000007b12         db  0x00 ; '.'
0000000000007b13         db  0x00 ; '.'
0000000000007b14         db  0xe0 ; '.'
0000000000007b15         db  0xe6 ; '.'
0000000000007b16         db  0xff ; '.'
0000000000007b17         db  0xff ; '.'
0000000000007b18         db  0x00 ; '.'
0000000000007b19         db  0x0e ; '.'
0000000000007b1a         db  0x00 ; '.'
0000000000007b1b         db  0x00 ; '.'
0000000000007b1c         db  0x20 ; ' '
0000000000007b1d         db  0xe7 ; '.'
0000000000007b1e         db  0xff ; '.'
0000000000007b1f         db  0xff ; '.'
0000000000007b20         db  0x20 ; ' '
0000000000007b21         db  0x0e ; '.'
0000000000007b22         db  0x00 ; '.'
0000000000007b23         db  0x00 ; '.'
0000000000007b24         db  0x50 ; 'P'
0000000000007b25         db  0xe7 ; '.'
0000000000007b26         db  0xff ; '.'
0000000000007b27         db  0xff ; '.'
0000000000007b28         db  0x38 ; '8'
0000000000007b29         db  0x0e ; '.'
0000000000007b2a         db  0x00 ; '.'
0000000000007b2b         db  0x00 ; '.'
0000000000007b2c         db  0xb0 ; '.'
0000000000007b2d         db  0xe7 ; '.'
0000000000007b2e         db  0xff ; '.'
0000000000007b2f         db  0xff ; '.'
0000000000007b30         db  0x68 ; 'h'
0000000000007b31         db  0x0e ; '.'
0000000000007b32         db  0x00 ; '.'
0000000000007b33         db  0x00 ; '.'
0000000000007b34         db  0x40 ; '@'
0000000000007b35         db  0xe8 ; '.'
0000000000007b36         db  0xff ; '.'
0000000000007b37         db  0xff ; '.'
0000000000007b38         db  0xa8 ; '.'
0000000000007b39         db  0x0e ; '.'
0000000000007b3a         db  0x00 ; '.'
0000000000007b3b         db  0x00 ; '.'
0000000000007b3c         db  0xc0 ; '.'
0000000000007b3d         db  0xe8 ; '.'
0000000000007b3e         db  0xff ; '.'
0000000000007b3f         db  0xff ; '.'
0000000000007b40         db  0xf8 ; '.'
0000000000007b41         db  0x0e ; '.'
0000000000007b42         db  0x00 ; '.'
0000000000007b43         db  0x00 ; '.'
0000000000007b44         db  0x30 ; '0'
0000000000007b45         db  0xea ; '.'
0000000000007b46         db  0xff ; '.'
0000000000007b47         db  0xff ; '.'
0000000000007b48         db  0x40 ; '@'
0000000000007b49         db  0x0f ; '.'
0000000000007b4a         db  0x00 ; '.'
0000000000007b4b         db  0x00 ; '.'
0000000000007b4c         db  0x90 ; '.'
0000000000007b4d         db  0xea ; '.'
0000000000007b4e         db  0xff ; '.'
0000000000007b4f         db  0xff ; '.'
0000000000007b50         db  0x60 ; '`'
0000000000007b51         db  0x0f ; '.'
0000000000007b52         db  0x00 ; '.'
0000000000007b53         db  0x00 ; '.'
0000000000007b54         db  0xd0 ; '.'
0000000000007b55         db  0xea ; '.'
0000000000007b56         db  0xff ; '.'
0000000000007b57         db  0xff ; '.'
0000000000007b58         db  0x80 ; '.'
0000000000007b59         db  0x0f ; '.'
0000000000007b5a         db  0x00 ; '.'
0000000000007b5b         db  0x00 ; '.'
0000000000007b5c         db  0x00 ; '.'
0000000000007b5d         db  0xeb ; '.'
0000000000007b5e         db  0xff ; '.'
0000000000007b5f         db  0xff ; '.'
0000000000007b60         db  0x98 ; '.'
0000000000007b61         db  0x0f ; '.'
0000000000007b62         db  0x00 ; '.'
0000000000007b63         db  0x00 ; '.'
0000000000007b64         db  0x70 ; 'p'
0000000000007b65         db  0xeb ; '.'
0000000000007b66         db  0xff ; '.'
0000000000007b67         db  0xff ; '.'
0000000000007b68         db  0xe0 ; '.'
0000000000007b69         db  0x0f ; '.'
0000000000007b6a         db  0x00 ; '.'
0000000000007b6b         db  0x00 ; '.'
0000000000007b6c         db  0x80 ; '.'
0000000000007b6d         db  0xeb ; '.'
0000000000007b6e         db  0xff ; '.'
0000000000007b6f         db  0xff ; '.'
0000000000007b70         db  0xf8 ; '.'
0000000000007b71         db  0x0f ; '.'
0000000000007b72         db  0x00 ; '.'
0000000000007b73         db  0x00 ; '.'
0000000000007b74         db  0x00 ; '.'
0000000000007b75         db  0x00 ; '.'
0000000000007b76         db  0x00 ; '.'
0000000000007b77         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x7b78; 0x88e0[ (3432 bytes)
        ; File offset : [31608; 35040[ (3432 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000007b78         dd         0x00000014                                  ; Length of the record
0000000000007b7c         dd         0x00000000                                  ; CIE ID
0000000000007b80         db         0x01                                        ; Version
0000000000007b81         db         "zR", 0                                     ; Augmentation String
0000000000007b84         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000007b85         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000007b86         db         0x10                                        ; Return address register
0000000000007b87         db         0x01                                        ; Augmentation data length
0000000000007b88         db         0x1b                                        ; FDE encoding
0000000000007b89         db  0x0c ; '.'
0000000000007b8a         db  0x07 ; '.'
0000000000007b8b         db  0x08 ; '.'
0000000000007b8c         db  0x90 ; '.'
0000000000007b8d         db  0x01 ; '.'
0000000000007b8e         db  0x07 ; '.'
0000000000007b8f         db  0x10 ; '.'
0000000000007b90         dd         0x00000014                                  ; Length of the record
0000000000007b94         dd         0x0000001c                                  ; FDE: parent CIE at 0x7b78 (FDE encoding = 0x1B)
0000000000007b98         db         0xc8, 0xa2, 2 dup (0xff)                    ; begin 0x1e60
0000000000007b9c         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x1e8b)
0000000000007ba0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007ba1         align      8
0000000000007ba8         dd         0x00000014                                  ; Length of the record
0000000000007bac         dd         0x00000000                                  ; CIE ID
0000000000007bb0         db         0x01                                        ; Version
0000000000007bb1         db         "zR", 0                                     ; Augmentation String
0000000000007bb4         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000007bb5         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000007bb6         db         0x10                                        ; Return address register
0000000000007bb7         db         0x01                                        ; Augmentation data length
0000000000007bb8         db         0x1b                                        ; FDE encoding
0000000000007bb9         db  0x0c ; '.'
0000000000007bba         db  0x07 ; '.'
0000000000007bbb         db  0x08 ; '.'
0000000000007bbc         db  0x90 ; '.'
0000000000007bbd         db  0x01 ; '.'
0000000000007bbe         db  0x00 ; '.'
0000000000007bbf         db  0x00 ; '.'
0000000000007bc0         dd         0x00000024                                  ; Length of the record
0000000000007bc4         dd         0x0000001c                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000007bc8         db         0x98, 0x9a, 2 dup (0xff)                    ; begin 0x1660
0000000000007bcc         db         0x80, 0x03, 2 dup (0x00)                    ; length 0x380 (end at 0x19e0)
0000000000007bd0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007bd1         db  0x0e ; '.'
0000000000007bd2         db  0x10 ; '.'
0000000000007bd3         db  0x46 ; 'F'
0000000000007bd4         db  0x0e ; '.'
0000000000007bd5         db  0x18 ; '.'
0000000000007bd6         db  0x4a ; 'J'
0000000000007bd7         db  0x0f ; '.'
0000000000007bd8         db  0x0b ; '.'
0000000000007bd9         db  0x77 ; 'w'
0000000000007bda         db  0x08 ; '.'
0000000000007bdb         db  0x80 ; '.'
0000000000007bdc         db  0x00 ; '.'
0000000000007bdd         db  0x3f ; '?'
0000000000007bde         db  0x1a ; '.'
0000000000007bdf         db  0x3b ; ';'
0000000000007be0         db  0x2a ; '*'
0000000000007be1         db  0x33 ; '3'
0000000000007be2         db  0x24 ; '$'
0000000000007be3         db  0x22 ; '"'
0000000000007be4         db  0x00 ; '.'
0000000000007be5         db  0x00 ; '.'
0000000000007be6         db  0x00 ; '.'
0000000000007be7         db  0x00 ; '.'
0000000000007be8         dd         0x00000014                                  ; Length of the record
0000000000007bec         dd         0x00000044                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000007bf0         db         0xf0, 0x9d, 2 dup (0xff)                    ; begin 0x19e0
0000000000007bf4         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x19e8)
0000000000007bf8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007bf9         align      1024
0000000000007c00         dd         0x00000088                                  ; Length of the record
0000000000007c04         dd         0x0000005c                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000007c08         db         0x68, 0xa3, 2 dup (0xff)                    ; begin 0x1f70
0000000000007c0c         db         0xe7, 0x07, 2 dup (0x00)                    ; length 0x7e7 (end at 0x2757)
0000000000007c10         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007c11         db  0x42 ; 'B'
0000000000007c12         db  0x0e ; '.'
0000000000007c13         db  0x10 ; '.'
0000000000007c14         db  0x8f ; '.'
0000000000007c15         db  0x02 ; '.'
0000000000007c16         db  0x42 ; 'B'
0000000000007c17         db  0x0e ; '.'
0000000000007c18         db  0x18 ; '.'
0000000000007c19         db  0x8e ; '.'
0000000000007c1a         db  0x03 ; '.'
0000000000007c1b         db  0x45 ; 'E'
0000000000007c1c         db  0x0e ; '.'
0000000000007c1d         db  0x20 ; ' '
0000000000007c1e         db  0x8d ; '.'
0000000000007c1f         db  0x04 ; '.'
0000000000007c20         db  0x42 ; 'B'
0000000000007c21         db  0x0e ; '.'
0000000000007c22         db  0x28 ; '('
0000000000007c23         db  0x8c ; '.'
0000000000007c24         db  0x05 ; '.'
0000000000007c25         db  0x46 ; 'F'
0000000000007c26         db  0x0e ; '.'
0000000000007c27         db  0x30 ; '0'
0000000000007c28         db  0x86 ; '.'
0000000000007c29         db  0x06 ; '.'
0000000000007c2a         db  0x41 ; 'A'
0000000000007c2b         db  0x0e ; '.'
0000000000007c2c         db  0x38 ; '8'
0000000000007c2d         db  0x83 ; '.'
0000000000007c2e         db  0x07 ; '.'
0000000000007c2f         db  0x44 ; 'D'
0000000000007c30         db  0x0e ; '.'
0000000000007c31         db  0x50 ; 'P'
0000000000007c32         db  0x03 ; '.'
0000000000007c33         db  0xbe ; '.'
0000000000007c34         db  0x01 ; '.'
0000000000007c35         db  0x0e ; '.'
0000000000007c36         db  0x58 ; 'X'
0000000000007c37         db  0x42 ; 'B'
0000000000007c38         db  0x0e ; '.'
0000000000007c39         db  0x60 ; '`'
0000000000007c3a         db  0x63 ; 'c'
0000000000007c3b         db  0x0e ; '.'
0000000000007c3c         db  0x58 ; 'X'
0000000000007c3d         db  0x41 ; 'A'
0000000000007c3e         db  0x0e ; '.'
0000000000007c3f         db  0x50 ; 'P'
0000000000007c40         db  0x03 ; '.'
0000000000007c41         db  0x28 ; '('
0000000000007c42         db  0x03 ; '.'
0000000000007c43         db  0x0a ; '.'
0000000000007c44         db  0x0e ; '.'
0000000000007c45         db  0x38 ; '8'
0000000000007c46         db  0x41 ; 'A'
0000000000007c47         db  0x0e ; '.'
0000000000007c48         db  0x30 ; '0'
0000000000007c49         db  0x41 ; 'A'
0000000000007c4a         db  0x0e ; '.'
0000000000007c4b         db  0x28 ; '('
0000000000007c4c         db  0x42 ; 'B'
0000000000007c4d         db  0x0e ; '.'
0000000000007c4e         db  0x20 ; ' '
0000000000007c4f         db  0x42 ; 'B'
0000000000007c50         db  0x0e ; '.'
0000000000007c51         db  0x18 ; '.'
0000000000007c52         db  0x42 ; 'B'
0000000000007c53         db  0x0e ; '.'
0000000000007c54         db  0x10 ; '.'
0000000000007c55         db  0x42 ; 'B'
0000000000007c56         db  0x0e ; '.'
0000000000007c57         db  0x08 ; '.'
0000000000007c58         db  0x44 ; 'D'
0000000000007c59         db  0x0b ; '.'
0000000000007c5a         db  0x02 ; '.'
0000000000007c5b         db  0x4d ; 'M'
0000000000007c5c         db  0x0a ; '.'
0000000000007c5d         db  0x0e ; '.'
0000000000007c5e         db  0x38 ; '8'
0000000000007c5f         db  0x43 ; 'C'
0000000000007c60         db  0x0e ; '.'
0000000000007c61         db  0x30 ; '0'
0000000000007c62         db  0x41 ; 'A'
0000000000007c63         db  0x0e ; '.'
0000000000007c64         db  0x28 ; '('
0000000000007c65         db  0x42 ; 'B'
0000000000007c66         db  0x0e ; '.'
0000000000007c67         db  0x20 ; ' '
0000000000007c68         db  0x42 ; 'B'
0000000000007c69         db  0x0e ; '.'
0000000000007c6a         db  0x18 ; '.'
0000000000007c6b         db  0x42 ; 'B'
0000000000007c6c         db  0x0e ; '.'
0000000000007c6d         db  0x10 ; '.'
0000000000007c6e         db  0x42 ; 'B'
0000000000007c6f         db  0x0e ; '.'
0000000000007c70         db  0x08 ; '.'
0000000000007c71         db  0x41 ; 'A'
0000000000007c72         db  0x0b ; '.'
0000000000007c73         db  0x49 ; 'I'
0000000000007c74         db  0x0a ; '.'
0000000000007c75         db  0x0e ; '.'
0000000000007c76         db  0x38 ; '8'
0000000000007c77         db  0x46 ; 'F'
0000000000007c78         db  0x0e ; '.'
0000000000007c79         db  0x30 ; '0'
0000000000007c7a         db  0x41 ; 'A'
0000000000007c7b         db  0x0e ; '.'
0000000000007c7c         db  0x28 ; '('
0000000000007c7d         db  0x42 ; 'B'
0000000000007c7e         db  0x0e ; '.'
0000000000007c7f         db  0x20 ; ' '
0000000000007c80         db  0x42 ; 'B'
0000000000007c81         db  0x0e ; '.'
0000000000007c82         db  0x18 ; '.'
0000000000007c83         db  0x42 ; 'B'
0000000000007c84         db  0x0e ; '.'
0000000000007c85         db  0x10 ; '.'
0000000000007c86         db  0x42 ; 'B'
0000000000007c87         db  0x0e ; '.'
0000000000007c88         db  0x08 ; '.'
0000000000007c89         db  0x41 ; 'A'
0000000000007c8a         db  0x0b ; '.'
0000000000007c8b         db  0x00 ; '.'
0000000000007c8c         dd         0x00000028                                  ; Length of the record
0000000000007c90         dd         0x000000e8                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000007c94         db         0xcc, 0xaa, 2 dup (0xff)                    ; begin 0x2760
0000000000007c98         db         0x8a, 0x04, 2 dup (0x00)                    ; length 0x48a (end at 0x2bea)
0000000000007c9c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007c9d         db  0x42 ; 'B'
0000000000007c9e         db  0x0e ; '.'
0000000000007c9f         db  0x10 ; '.'
0000000000007ca0         db  0x8d ; '.'
0000000000007ca1         db  0x02 ; '.'
0000000000007ca2         db  0x42 ; 'B'
0000000000007ca3         db  0x0e ; '.'
0000000000007ca4         db  0x18 ; '.'
0000000000007ca5         db  0x8c ; '.'
0000000000007ca6         db  0x03 ; '.'
0000000000007ca7         db  0x46 ; 'F'
0000000000007ca8         db  0x0e ; '.'
0000000000007ca9         db  0x20 ; ' '
0000000000007caa         db  0x86 ; '.'
0000000000007cab         db  0x04 ; '.'
0000000000007cac         db  0x41 ; 'A'
0000000000007cad         db  0x0e ; '.'
0000000000007cae         db  0x28 ; '('
0000000000007caf         db  0x83 ; '.'
0000000000007cb0         db  0x05 ; '.'
0000000000007cb1         db  0x49 ; 'I'
0000000000007cb2         db  0x0e ; '.'
0000000000007cb3         db  0xb0 ; '.'
0000000000007cb4         db  0x01 ; '.'
0000000000007cb5         db  0x00 ; '.'
0000000000007cb6         db  0x00 ; '.'
0000000000007cb7         db  0x00 ; '.'
0000000000007cb8         dd         0x00000054                                  ; Length of the record
0000000000007cbc         dd         0x00000114                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000007cc0         db         0x30, 0x9d, 2 dup (0xff)                    ; begin 0x19f0
0000000000007cc4         db         0x6f, 0x04, 2 dup (0x00)                    ; length 0x46f (end at 0x1e5f)
0000000000007cc8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007cc9         db  0x42 ; 'B'
0000000000007cca         db  0x0e ; '.'
0000000000007ccb         db  0x10 ; '.'
0000000000007ccc         db  0x8f ; '.'
0000000000007ccd         db  0x02 ; '.'
0000000000007cce         db  0x42 ; 'B'
0000000000007ccf         db  0x0e ; '.'
0000000000007cd0         db  0x18 ; '.'
0000000000007cd1         db  0x8e ; '.'
0000000000007cd2         db  0x03 ; '.'
0000000000007cd3         db  0x45 ; 'E'
0000000000007cd4         db  0x0e ; '.'
0000000000007cd5         db  0x20 ; ' '
0000000000007cd6         db  0x8d ; '.'
0000000000007cd7         db  0x04 ; '.'
0000000000007cd8         db  0x42 ; 'B'
0000000000007cd9         db  0x0e ; '.'
0000000000007cda         db  0x28 ; '('
0000000000007cdb         db  0x8c ; '.'
0000000000007cdc         db  0x05 ; '.'
0000000000007cdd         db  0x48 ; 'H'
0000000000007cde         db  0x0e ; '.'
0000000000007cdf         db  0x30 ; '0'
0000000000007ce0         db  0x86 ; '.'
0000000000007ce1         db  0x06 ; '.'
0000000000007ce2         db  0x41 ; 'A'
0000000000007ce3         db  0x0e ; '.'
0000000000007ce4         db  0x38 ; '8'
0000000000007ce5         db  0x83 ; '.'
0000000000007ce6         db  0x07 ; '.'
0000000000007ce7         db  0x50 ; 'P'
0000000000007ce8         db  0x0e ; '.'
0000000000007ce9         db  0x40 ; '@'
0000000000007cea         db  0x02 ; '.'
0000000000007ceb         db  0xf0 ; '.'
0000000000007cec         db  0x0a ; '.'
0000000000007ced         db  0x0e ; '.'
0000000000007cee         db  0x48 ; 'H'
0000000000007cef         db  0x4f ; 'O'
0000000000007cf0         db  0x0e ; '.'
0000000000007cf1         db  0x50 ; 'P'
0000000000007cf2         db  0x5d ; ']'
0000000000007cf3         db  0x0b ; '.'
0000000000007cf4         db  0x03 ; '.'
0000000000007cf5         db  0xef ; '.'
0000000000007cf6         db  0x01 ; '.'
0000000000007cf7         db  0x0a ; '.'
0000000000007cf8         db  0x0e ; '.'
0000000000007cf9         db  0x38 ; '8'
0000000000007cfa         db  0x45 ; 'E'
0000000000007cfb         db  0x0e ; '.'
0000000000007cfc         db  0x30 ; '0'
0000000000007cfd         db  0x41 ; 'A'
0000000000007cfe         db  0x0e ; '.'
0000000000007cff         db  0x28 ; '('
0000000000007d00         db  0x42 ; 'B'
0000000000007d01         db  0x0e ; '.'
0000000000007d02         db  0x20 ; ' '
0000000000007d03         db  0x42 ; 'B'
0000000000007d04         db  0x0e ; '.'
0000000000007d05         db  0x18 ; '.'
0000000000007d06         db  0x42 ; 'B'
0000000000007d07         db  0x0e ; '.'
0000000000007d08         db  0x10 ; '.'
0000000000007d09         db  0x42 ; 'B'
0000000000007d0a         db  0x0e ; '.'
0000000000007d0b         db  0x08 ; '.'
0000000000007d0c         db  0x41 ; 'A'
0000000000007d0d         db  0x0b ; '.'
0000000000007d0e         db  0x00 ; '.'
0000000000007d0f         db  0x00 ; '.'
0000000000007d10         dd         0x00000010                                  ; Length of the record
0000000000007d14         dd         0x0000016c                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000007d18         db         0xd8, 0xae, 2 dup (0xff)                    ; begin 0x2bf0
0000000000007d1c         db         0x16, 3 dup (0x00)                          ; length 0x16 (end at 0x2c06)
0000000000007d20         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007d21         align      4
0000000000007d24         dd         0x00000028                                  ; Length of the record
0000000000007d28         dd         0x00000180                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000007d2c         db         0xe4, 0xae, 2 dup (0xff)                    ; begin 0x2c10
0000000000007d30         db         0xc9, 3 dup (0x00)                          ; length 0xc9 (end at 0x2cd9)
0000000000007d34         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007d35         db  0x41 ; 'A'
0000000000007d36         db  0x0e ; '.'
0000000000007d37         db  0x10 ; '.'
0000000000007d38         db  0x86 ; '.'
0000000000007d39         db  0x02 ; '.'
0000000000007d3a         db  0x41 ; 'A'
0000000000007d3b         db  0x0e ; '.'
0000000000007d3c         db  0x18 ; '.'
0000000000007d3d         db  0x83 ; '.'
0000000000007d3e         db  0x03 ; '.'
0000000000007d3f         db  0x4a ; 'J'
0000000000007d40         db  0x0e ; '.'
0000000000007d41         db  0x20 ; ' '
0000000000007d42         db  0x77 ; 'w'
0000000000007d43         db  0x0a ; '.'
0000000000007d44         db  0x0e ; '.'
0000000000007d45         db  0x18 ; '.'
0000000000007d46         db  0x41 ; 'A'
0000000000007d47         db  0x0e ; '.'
0000000000007d48         db  0x10 ; '.'
0000000000007d49         db  0x41 ; 'A'
0000000000007d4a         db  0x0e ; '.'
0000000000007d4b         db  0x08 ; '.'
0000000000007d4c         db  0x4b ; 'K'
0000000000007d4d         db  0x0b ; '.'
0000000000007d4e         db  0x00 ; '.'
0000000000007d4f         db  0x00 ; '.'
0000000000007d50         dd         0x00000048                                  ; Length of the record
0000000000007d54         dd         0x000001ac                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000007d58         db         0x88, 0xaf, 2 dup (0xff)                    ; begin 0x2ce0
0000000000007d5c         db         0xb8, 0x05, 2 dup (0x00)                    ; length 0x5b8 (end at 0x3298)
0000000000007d60         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007d61         db  0x42 ; 'B'
0000000000007d62         db  0x0e ; '.'
0000000000007d63         db  0x10 ; '.'
0000000000007d64         db  0x8f ; '.'
0000000000007d65         db  0x02 ; '.'
0000000000007d66         db  0x42 ; 'B'
0000000000007d67         db  0x0e ; '.'
0000000000007d68         db  0x18 ; '.'
0000000000007d69         db  0x8e ; '.'
0000000000007d6a         db  0x03 ; '.'
0000000000007d6b         db  0x44 ; 'D'
0000000000007d6c         db  0x0e ; '.'
0000000000007d6d         db  0x20 ; ' '
0000000000007d6e         db  0x8d ; '.'
0000000000007d6f         db  0x04 ; '.'
0000000000007d70         db  0x42 ; 'B'
0000000000007d71         db  0x0e ; '.'
0000000000007d72         db  0x28 ; '('
0000000000007d73         db  0x8c ; '.'
0000000000007d74         db  0x05 ; '.'
0000000000007d75         db  0x44 ; 'D'
0000000000007d76         db  0x0e ; '.'
0000000000007d77         db  0x30 ; '0'
0000000000007d78         db  0x86 ; '.'
0000000000007d79         db  0x06 ; '.'
0000000000007d7a         db  0x41 ; 'A'
0000000000007d7b         db  0x0e ; '.'
0000000000007d7c         db  0x38 ; '8'
0000000000007d7d         db  0x83 ; '.'
0000000000007d7e         db  0x07 ; '.'
0000000000007d7f         db  0x44 ; 'D'
0000000000007d80         db  0x0e ; '.'
0000000000007d81         db  0x60 ; '`'
0000000000007d82         db  0x03 ; '.'
0000000000007d83         db  0x58 ; 'X'
0000000000007d84         db  0x02 ; '.'
0000000000007d85         db  0x0a ; '.'
0000000000007d86         db  0x0e ; '.'
0000000000007d87         db  0x38 ; '8'
0000000000007d88         db  0x41 ; 'A'
0000000000007d89         db  0x0e ; '.'
0000000000007d8a         db  0x30 ; '0'
0000000000007d8b         db  0x41 ; 'A'
0000000000007d8c         db  0x0e ; '.'
0000000000007d8d         db  0x28 ; '('
0000000000007d8e         db  0x42 ; 'B'
0000000000007d8f         db  0x0e ; '.'
0000000000007d90         db  0x20 ; ' '
0000000000007d91         db  0x42 ; 'B'
0000000000007d92         db  0x0e ; '.'
0000000000007d93         db  0x18 ; '.'
0000000000007d94         db  0x42 ; 'B'
0000000000007d95         db  0x0e ; '.'
0000000000007d96         db  0x10 ; '.'
0000000000007d97         db  0x42 ; 'B'
0000000000007d98         db  0x0e ; '.'
0000000000007d99         db  0x08 ; '.'
0000000000007d9a         db  0x4b ; 'K'
0000000000007d9b         db  0x0b ; '.'
0000000000007d9c         dd         0x00000018                                  ; Length of the record
0000000000007da0         dd         0x000001f8                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000007da4         db         0xfc, 0xb4, 2 dup (0xff)                    ; begin 0x32a0
0000000000007da8         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x32d6)
0000000000007dac         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007dad         db  0x44 ; 'D'
0000000000007dae         db  0x0e ; '.'
0000000000007daf         db  0x10 ; '.'
0000000000007db0         db  0x71 ; 'q'
0000000000007db1         db  0x0e ; '.'
0000000000007db2         db  0x08 ; '.'
0000000000007db3         db  0x00 ; '.'
0000000000007db4         db  0x00 ; '.'
0000000000007db5         db  0x00 ; '.'
0000000000007db6         db  0x00 ; '.'
0000000000007db7         db  0x00 ; '.'
0000000000007db8         dd         0x00000010                                  ; Length of the record
0000000000007dbc         dd         0x00000214                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000007dc0         db         0x20, 0xb5, 2 dup (0xff)                    ; begin 0x32e0
0000000000007dc4         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x32e8)
0000000000007dc8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007dc9         align      4
0000000000007dcc         dd         0x00000010                                  ; Length of the record
0000000000007dd0         dd         0x00000228                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000007dd4         db         0x1c, 0xb5, 2 dup (0xff)                    ; begin 0x32f0
0000000000007dd8         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x32f8)
0000000000007ddc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007ddd         align      32
0000000000007de0         dd         0x0000002c                                  ; Length of the record
0000000000007de4         dd         0x0000023c                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000007de8         db         0x18, 0xb5, 2 dup (0xff)                    ; begin 0x3300
0000000000007dec         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x33a4)
0000000000007df0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007df1         db  0x41 ; 'A'
0000000000007df2         db  0x0e ; '.'
0000000000007df3         db  0x10 ; '.'
0000000000007df4         db  0x86 ; '.'
0000000000007df5         db  0x02 ; '.'
0000000000007df6         db  0x41 ; 'A'
0000000000007df7         db  0x0e ; '.'
0000000000007df8         db  0x18 ; '.'
0000000000007df9         db  0x83 ; '.'
0000000000007dfa         db  0x03 ; '.'
0000000000007dfb         db  0x44 ; 'D'
0000000000007dfc         db  0x0e ; '.'
0000000000007dfd         db  0x20 ; ' '
0000000000007dfe         db  0x7a ; 'z'
0000000000007dff         db  0x0a ; '.'
0000000000007e00         db  0x0e ; '.'
0000000000007e01         db  0x18 ; '.'
0000000000007e02         db  0x41 ; 'A'
0000000000007e03         db  0x0e ; '.'
0000000000007e04         db  0x10 ; '.'
0000000000007e05         db  0x41 ; 'A'
0000000000007e06         db  0x0e ; '.'
0000000000007e07         db  0x08 ; '.'
0000000000007e08         db  0x41 ; 'A'
0000000000007e09         db  0x0b ; '.'
0000000000007e0a         db  0x00 ; '.'
0000000000007e0b         db  0x00 ; '.'
0000000000007e0c         db  0x00 ; '.'
0000000000007e0d         db  0x00 ; '.'
0000000000007e0e         db  0x00 ; '.'
0000000000007e0f         db  0x00 ; '.'
0000000000007e10         dd         0x00000010                                  ; Length of the record
0000000000007e14         dd         0x0000026c                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000007e18         db         0x98, 0xb5, 2 dup (0xff)                    ; begin 0x33b0
0000000000007e1c         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x33b5)
0000000000007e20         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007e21         align      4
0000000000007e24         dd         0x00000018                                  ; Length of the record
0000000000007e28         dd         0x00000280                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000007e2c         db         0x94, 0xb5, 2 dup (0xff)                    ; begin 0x33c0
0000000000007e30         db         0x22, 3 dup (0x00)                          ; length 0x22 (end at 0x33e2)
0000000000007e34         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007e35         db  0x46 ; 'F'
0000000000007e36         db  0x0e ; '.'
0000000000007e37         db  0x10 ; '.'
0000000000007e38         db  0x83 ; '.'
0000000000007e39         db  0x02 ; '.'
0000000000007e3a         db  0x4e ; 'N'
0000000000007e3b         db  0xc3 ; '.'
0000000000007e3c         db  0x0e ; '.'
0000000000007e3d         db  0x08 ; '.'
0000000000007e3e         db  0x00 ; '.'
0000000000007e3f         db  0x00 ; '.'
0000000000007e40         dd         0x0000004c                                  ; Length of the record
0000000000007e44         dd         0x0000029c                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000007e48         db         0xa8, 0xb5, 2 dup (0xff)                    ; begin 0x33f0
0000000000007e4c         db         0x7f, 0x03, 2 dup (0x00)                    ; length 0x37f (end at 0x376f)
0000000000007e50         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007e51         db  0x42 ; 'B'
0000000000007e52         db  0x0e ; '.'
0000000000007e53         db  0x10 ; '.'
0000000000007e54         db  0x8f ; '.'
0000000000007e55         db  0x02 ; '.'
0000000000007e56         db  0x42 ; 'B'
0000000000007e57         db  0x0e ; '.'
0000000000007e58         db  0x18 ; '.'
0000000000007e59         db  0x8e ; '.'
0000000000007e5a         db  0x03 ; '.'
0000000000007e5b         db  0x42 ; 'B'
0000000000007e5c         db  0x0e ; '.'
0000000000007e5d         db  0x20 ; ' '
0000000000007e5e         db  0x8d ; '.'
0000000000007e5f         db  0x04 ; '.'
0000000000007e60         db  0x42 ; 'B'
0000000000007e61         db  0x0e ; '.'
0000000000007e62         db  0x28 ; '('
0000000000007e63         db  0x8c ; '.'
0000000000007e64         db  0x05 ; '.'
0000000000007e65         db  0x41 ; 'A'
0000000000007e66         db  0x0e ; '.'
0000000000007e67         db  0x30 ; '0'
0000000000007e68         db  0x86 ; '.'
0000000000007e69         db  0x06 ; '.'
0000000000007e6a         db  0x41 ; 'A'
0000000000007e6b         db  0x0e ; '.'
0000000000007e6c         db  0x38 ; '8'
0000000000007e6d         db  0x83 ; '.'
0000000000007e6e         db  0x07 ; '.'
0000000000007e6f         db  0x44 ; 'D'
0000000000007e70         db  0x0e ; '.'
0000000000007e71         db  0xa0 ; '.'
0000000000007e72         db  0x01 ; '.'
0000000000007e73         db  0x02 ; '.'
0000000000007e74         db  0x7b ; '{'
0000000000007e75         db  0x0a ; '.'
0000000000007e76         db  0x0e ; '.'
0000000000007e77         db  0x38 ; '8'
0000000000007e78         db  0x41 ; 'A'
0000000000007e79         db  0x0e ; '.'
0000000000007e7a         db  0x30 ; '0'
0000000000007e7b         db  0x41 ; 'A'
0000000000007e7c         db  0x0e ; '.'
0000000000007e7d         db  0x28 ; '('
0000000000007e7e         db  0x42 ; 'B'
0000000000007e7f         db  0x0e ; '.'
0000000000007e80         db  0x20 ; ' '
0000000000007e81         db  0x42 ; 'B'
0000000000007e82         db  0x0e ; '.'
0000000000007e83         db  0x18 ; '.'
0000000000007e84         db  0x42 ; 'B'
0000000000007e85         db  0x0e ; '.'
0000000000007e86         db  0x10 ; '.'
0000000000007e87         db  0x42 ; 'B'
0000000000007e88         db  0x0e ; '.'
0000000000007e89         db  0x08 ; '.'
0000000000007e8a         db  0x45 ; 'E'
0000000000007e8b         db  0x0b ; '.'
0000000000007e8c         db  0x00 ; '.'
0000000000007e8d         db  0x00 ; '.'
0000000000007e8e         db  0x00 ; '.'
0000000000007e8f         db  0x00 ; '.'
0000000000007e90         dd         0x0000006c                                  ; Length of the record
0000000000007e94         dd         0x000002ec                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000007e98         db         0xd8, 0xb8, 2 dup (0xff)                    ; begin 0x3770
0000000000007e9c         db         0xb6, 0x01, 2 dup (0x00)                    ; length 0x1b6 (end at 0x3926)
0000000000007ea0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007ea1         db  0x4e ; 'N'
0000000000007ea2         db  0x0e ; '.'
0000000000007ea3         db  0x10 ; '.'
0000000000007ea4         db  0x8f ; '.'
0000000000007ea5         db  0x02 ; '.'
0000000000007ea6         db  0x45 ; 'E'
0000000000007ea7         db  0x0e ; '.'
0000000000007ea8         db  0x18 ; '.'
0000000000007ea9         db  0x8e ; '.'
0000000000007eaa         db  0x03 ; '.'
0000000000007eab         db  0x42 ; 'B'
0000000000007eac         db  0x0e ; '.'
0000000000007ead         db  0x20 ; ' '
0000000000007eae         db  0x8d ; '.'
0000000000007eaf         db  0x04 ; '.'
0000000000007eb0         db  0x42 ; 'B'
0000000000007eb1         db  0x0e ; '.'
0000000000007eb2         db  0x28 ; '('
0000000000007eb3         db  0x8c ; '.'
0000000000007eb4         db  0x05 ; '.'
0000000000007eb5         db  0x41 ; 'A'
0000000000007eb6         db  0x0e ; '.'
0000000000007eb7         db  0x30 ; '0'
0000000000007eb8         db  0x86 ; '.'
0000000000007eb9         db  0x06 ; '.'
0000000000007eba         db  0x41 ; 'A'
0000000000007ebb         db  0x0e ; '.'
0000000000007ebc         db  0x38 ; '8'
0000000000007ebd         db  0x83 ; '.'
0000000000007ebe         db  0x07 ; '.'
0000000000007ebf         db  0x03 ; '.'
0000000000007ec0         db  0x5f ; '_'
0000000000007ec1         db  0x01 ; '.'
0000000000007ec2         db  0x0a ; '.'
0000000000007ec3         db  0x0e ; '.'
0000000000007ec4         db  0x30 ; '0'
0000000000007ec5         db  0x41 ; 'A'
0000000000007ec6         db  0x0e ; '.'
0000000000007ec7         db  0x28 ; '('
0000000000007ec8         db  0x42 ; 'B'
0000000000007ec9         db  0x0e ; '.'
0000000000007eca         db  0x20 ; ' '
0000000000007ecb         db  0x42 ; 'B'
0000000000007ecc         db  0x0e ; '.'
0000000000007ecd         db  0x18 ; '.'
0000000000007ece         db  0x42 ; 'B'
0000000000007ecf         db  0x0e ; '.'
0000000000007ed0         db  0x10 ; '.'
0000000000007ed1         db  0x42 ; 'B'
0000000000007ed2         db  0x0e ; '.'
0000000000007ed3         db  0x08 ; '.'
0000000000007ed4         db  0x47 ; 'G'
0000000000007ed5         db  0x0b ; '.'
0000000000007ed6         db  0x41 ; 'A'
0000000000007ed7         db  0x0e ; '.'
0000000000007ed8         db  0x30 ; '0'
0000000000007ed9         db  0x44 ; 'D'
0000000000007eda         db  0x0e ; '.'
0000000000007edb         db  0x28 ; '('
0000000000007edc         db  0x42 ; 'B'
0000000000007edd         db  0x0e ; '.'
0000000000007ede         db  0x20 ; ' '
0000000000007edf         db  0x42 ; 'B'
0000000000007ee0         db  0x0e ; '.'
0000000000007ee1         db  0x18 ; '.'
0000000000007ee2         db  0x42 ; 'B'
0000000000007ee3         db  0x0e ; '.'
0000000000007ee4         db  0x10 ; '.'
0000000000007ee5         db  0x42 ; 'B'
0000000000007ee6         db  0x0e ; '.'
0000000000007ee7         db  0x08 ; '.'
0000000000007ee8         db  0x4b ; 'K'
0000000000007ee9         db  0xc3 ; '.'
0000000000007eea         db  0xc6 ; '.'
0000000000007eeb         db  0xcc ; '.'
0000000000007eec         db  0xcd ; '.'
0000000000007eed         db  0xce ; '.'
0000000000007eee         db  0xcf ; '.'
0000000000007eef         db  0x4c ; 'L'
0000000000007ef0         db  0x0e ; '.'
0000000000007ef1         db  0x38 ; '8'
0000000000007ef2         db  0x83 ; '.'
0000000000007ef3         db  0x07 ; '.'
0000000000007ef4         db  0x86 ; '.'
0000000000007ef5         db  0x06 ; '.'
0000000000007ef6         db  0x8c ; '.'
0000000000007ef7         db  0x05 ; '.'
0000000000007ef8         db  0x8d ; '.'
0000000000007ef9         db  0x04 ; '.'
0000000000007efa         db  0x8e ; '.'
0000000000007efb         db  0x03 ; '.'
0000000000007efc         db  0x8f ; '.'
0000000000007efd         db  0x02 ; '.'
0000000000007efe         db  0x00 ; '.'
0000000000007eff         db  0x00 ; '.'
0000000000007f00         dd         0x0000001c                                  ; Length of the record
0000000000007f04         dd         0x0000035c                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000007f08         db         0x28, 0xba, 2 dup (0xff)                    ; begin 0x3930
0000000000007f0c         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x39cf)
0000000000007f10         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007f11         db  0x44 ; 'D'
0000000000007f12         db  0x0e ; '.'
0000000000007f13         db  0x10 ; '.'
0000000000007f14         db  0x83 ; '.'
0000000000007f15         db  0x02 ; '.'
0000000000007f16         db  0x02 ; '.'
0000000000007f17         db  0x78 ; 'x'
0000000000007f18         db  0x0a ; '.'
0000000000007f19         db  0x0e ; '.'
0000000000007f1a         db  0x08 ; '.'
0000000000007f1b         db  0x41 ; 'A'
0000000000007f1c         db  0x0b ; '.'
0000000000007f1d         db  0x00 ; '.'
0000000000007f1e         db  0x00 ; '.'
0000000000007f1f         db  0x00 ; '.'
0000000000007f20         dd         0x00000040                                  ; Length of the record
0000000000007f24         dd         0x0000037c                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000007f28         db         0xa8, 0xba, 2 dup (0xff)                    ; begin 0x39d0
0000000000007f2c         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x3ab7)
0000000000007f30         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007f31         db  0x41 ; 'A'
0000000000007f32         db  0x0e ; '.'
0000000000007f33         db  0x10 ; '.'
0000000000007f34         db  0x86 ; '.'
0000000000007f35         db  0x02 ; '.'
0000000000007f36         db  0x41 ; 'A'
0000000000007f37         db  0x0e ; '.'
0000000000007f38         db  0x18 ; '.'
0000000000007f39         db  0x83 ; '.'
0000000000007f3a         db  0x03 ; '.'
0000000000007f3b         db  0x49 ; 'I'
0000000000007f3c         db  0x0e ; '.'
0000000000007f3d         db  0x20 ; ' '
0000000000007f3e         db  0x6e ; 'n'
0000000000007f3f         db  0x0a ; '.'
0000000000007f40         db  0x0e ; '.'
0000000000007f41         db  0x18 ; '.'
0000000000007f42         db  0x41 ; 'A'
0000000000007f43         db  0x0e ; '.'
0000000000007f44         db  0x10 ; '.'
0000000000007f45         db  0x41 ; 'A'
0000000000007f46         db  0x0e ; '.'
0000000000007f47         db  0x08 ; '.'
0000000000007f48         db  0x45 ; 'E'
0000000000007f49         db  0x0b ; '.'
0000000000007f4a         db  0x02 ; '.'
0000000000007f4b         db  0x4a ; 'J'
0000000000007f4c         db  0x0a ; '.'
0000000000007f4d         db  0x0e ; '.'
0000000000007f4e         db  0x18 ; '.'
0000000000007f4f         db  0x41 ; 'A'
0000000000007f50         db  0x0e ; '.'
0000000000007f51         db  0x10 ; '.'
0000000000007f52         db  0x41 ; 'A'
0000000000007f53         db  0x0e ; '.'
0000000000007f54         db  0x08 ; '.'
0000000000007f55         db  0x44 ; 'D'
0000000000007f56         db  0x0b ; '.'
0000000000007f57         db  0x02 ; '.'
0000000000007f58         db  0x54 ; 'T'
0000000000007f59         db  0x0e ; '.'
0000000000007f5a         db  0x18 ; '.'
0000000000007f5b         db  0x41 ; 'A'
0000000000007f5c         db  0x0e ; '.'
0000000000007f5d         db  0x10 ; '.'
0000000000007f5e         db  0x41 ; 'A'
0000000000007f5f         db  0x0e ; '.'
0000000000007f60         db  0x08 ; '.'
0000000000007f61         db  0x00 ; '.'
0000000000007f62         db  0x00 ; '.'
0000000000007f63         db  0x00 ; '.'
0000000000007f64         dd         0x00000074                                  ; Length of the record
0000000000007f68         dd         0x000003c0                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000007f6c         db         0x54, 0xbb, 2 dup (0xff)                    ; begin 0x3ac0
0000000000007f70         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x4cf4)
0000000000007f74         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007f75         db  0x42 ; 'B'
0000000000007f76         db  0x0e ; '.'
0000000000007f77         db  0x10 ; '.'
0000000000007f78         db  0x8f ; '.'
0000000000007f79         db  0x02 ; '.'
0000000000007f7a         db  0x42 ; 'B'
0000000000007f7b         db  0x0e ; '.'
0000000000007f7c         db  0x18 ; '.'
0000000000007f7d         db  0x8e ; '.'
0000000000007f7e         db  0x03 ; '.'
0000000000007f7f         db  0x45 ; 'E'
0000000000007f80         db  0x0e ; '.'
0000000000007f81         db  0x20 ; ' '
0000000000007f82         db  0x8d ; '.'
0000000000007f83         db  0x04 ; '.'
0000000000007f84         db  0x42 ; 'B'
0000000000007f85         db  0x0e ; '.'
0000000000007f86         db  0x28 ; '('
0000000000007f87         db  0x8c ; '.'
0000000000007f88         db  0x05 ; '.'
0000000000007f89         db  0x44 ; 'D'
0000000000007f8a         db  0x0e ; '.'
0000000000007f8b         db  0x30 ; '0'
0000000000007f8c         db  0x86 ; '.'
0000000000007f8d         db  0x06 ; '.'
0000000000007f8e         db  0x41 ; 'A'
0000000000007f8f         db  0x0e ; '.'
0000000000007f90         db  0x38 ; '8'
0000000000007f91         db  0x83 ; '.'
0000000000007f92         db  0x07 ; '.'
0000000000007f93         db  0x53 ; 'S'
0000000000007f94         db  0x0e ; '.'
0000000000007f95         db  0xf0 ; '.'
0000000000007f96         db  0x01 ; '.'
0000000000007f97         db  0x03 ; '.'
0000000000007f98         db  0x81 ; '.'
0000000000007f99         db  0x0b ; '.'
0000000000007f9a         db  0x0e ; '.'
0000000000007f9b         db  0xf8 ; '.'
0000000000007f9c         db  0x01 ; '.'
0000000000007f9d         db  0x4a ; 'J'
0000000000007f9e         db  0x0e ; '.'
0000000000007f9f         db  0x80 ; '.'
0000000000007fa0         db  0x02 ; '.'
0000000000007fa1         db  0x44 ; 'D'
0000000000007fa2         db  0x0e ; '.'
0000000000007fa3         db  0x88 ; '.'
0000000000007fa4         db  0x02 ; '.'
0000000000007fa5         db  0x45 ; 'E'
0000000000007fa6         db  0x0e ; '.'
0000000000007fa7         db  0x90 ; '.'
0000000000007fa8         db  0x02 ; '.'
0000000000007fa9         db  0x5f ; '_'
0000000000007faa         db  0x0e ; '.'
0000000000007fab         db  0xf0 ; '.'
0000000000007fac         db  0x01 ; '.'
0000000000007fad         db  0x64 ; 'd'
0000000000007fae         db  0x0a ; '.'
0000000000007faf         db  0x0e ; '.'
0000000000007fb0         db  0x38 ; '8'
0000000000007fb1         db  0x41 ; 'A'
0000000000007fb2         db  0x0e ; '.'
0000000000007fb3         db  0x30 ; '0'
0000000000007fb4         db  0x41 ; 'A'
0000000000007fb5         db  0x0e ; '.'
0000000000007fb6         db  0x28 ; '('
0000000000007fb7         db  0x42 ; 'B'
0000000000007fb8         db  0x0e ; '.'
0000000000007fb9         db  0x20 ; ' '
0000000000007fba         db  0x42 ; 'B'
0000000000007fbb         db  0x0e ; '.'
0000000000007fbc         db  0x18 ; '.'
0000000000007fbd         db  0x42 ; 'B'
0000000000007fbe         db  0x0e ; '.'
0000000000007fbf         db  0x10 ; '.'
0000000000007fc0         db  0x42 ; 'B'
0000000000007fc1         db  0x0e ; '.'
0000000000007fc2         db  0x08 ; '.'
0000000000007fc3         db  0x44 ; 'D'
0000000000007fc4         db  0x0b ; '.'
0000000000007fc5         db  0x03 ; '.'
0000000000007fc6         db  0x99 ; '.'
0000000000007fc7         db  0x05 ; '.'
0000000000007fc8         db  0x0e ; '.'
0000000000007fc9         db  0xf8 ; '.'
0000000000007fca         db  0x01 ; '.'
0000000000007fcb         db  0x4d ; 'M'
0000000000007fcc         db  0x0e ; '.'
0000000000007fcd         db  0x80 ; '.'
0000000000007fce         db  0x02 ; '.'
0000000000007fcf         db  0x44 ; 'D'
0000000000007fd0         db  0x0e ; '.'
0000000000007fd1         db  0x88 ; '.'
0000000000007fd2         db  0x02 ; '.'
0000000000007fd3         db  0x47 ; 'G'
0000000000007fd4         db  0x0e ; '.'
0000000000007fd5         db  0x90 ; '.'
0000000000007fd6         db  0x02 ; '.'
0000000000007fd7         db  0x5b ; '['
0000000000007fd8         db  0x0e ; '.'
0000000000007fd9         db  0xf0 ; '.'
0000000000007fda         db  0x01 ; '.'
0000000000007fdb         db  0x00 ; '.'
0000000000007fdc         dd         0x00000068                                  ; Length of the record
0000000000007fe0         dd         0x00000438                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000007fe4         db         0x1c, 0xcd, 2 dup (0xff)                    ; begin 0x4d00
0000000000007fe8         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x4eab)
0000000000007fec         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007fed         db  0x42 ; 'B'
0000000000007fee         db  0x0e ; '.'
0000000000007fef         db  0x10 ; '.'
0000000000007ff0         db  0x8f ; '.'
0000000000007ff1         db  0x02 ; '.'
0000000000007ff2         db  0x42 ; 'B'
0000000000007ff3         db  0x0e ; '.'
0000000000007ff4         db  0x18 ; '.'
0000000000007ff5         db  0x8e ; '.'
0000000000007ff6         db  0x03 ; '.'
0000000000007ff7         db  0x45 ; 'E'
0000000000007ff8         db  0x0e ; '.'
0000000000007ff9         db  0x20 ; ' '
0000000000007ffa         db  0x8d ; '.'
0000000000007ffb         db  0x04 ; '.'
0000000000007ffc         db  0x42 ; 'B'
0000000000007ffd         db  0x0e ; '.'
0000000000007ffe         db  0x28 ; '('
0000000000007fff         db  0x8c ; '.'
0000000000008000         db  0x05 ; '.'
0000000000008001         db  0x44 ; 'D'
0000000000008002         db  0x0e ; '.'
0000000000008003         db  0x30 ; '0'
0000000000008004         db  0x86 ; '.'
0000000000008005         db  0x06 ; '.'
0000000000008006         db  0x41 ; 'A'
0000000000008007         db  0x0e ; '.'
0000000000008008         db  0x38 ; '8'
0000000000008009         db  0x83 ; '.'
000000000000800a         db  0x07 ; '.'
000000000000800b         db  0x47 ; 'G'
000000000000800c         db  0x0e ; '.'
000000000000800d         db  0x60 ; '`'
000000000000800e         db  0x02 ; '.'
000000000000800f         db  0x99 ; '.'
0000000000008010         db  0x0e ; '.'
0000000000008011         db  0x68 ; 'h'
0000000000008012         db  0x5f ; '_'
0000000000008013         db  0x0e ; '.'
0000000000008014         db  0x70 ; 'p'
0000000000008015         db  0x46 ; 'F'
0000000000008016         db  0x0e ; '.'
0000000000008017         db  0x78 ; 'x'
0000000000008018         db  0x42 ; 'B'
0000000000008019         db  0x0e ; '.'
000000000000801a         db  0x80 ; '.'
000000000000801b         db  0x01 ; '.'
000000000000801c         db  0x59 ; 'Y'
000000000000801d         db  0x0e ; '.'
000000000000801e         db  0x60 ; '`'
000000000000801f         db  0x02 ; '.'
0000000000008020         db  0x40 ; '@'
0000000000008021         db  0x0e ; '.'
0000000000008022         db  0x68 ; 'h'
0000000000008023         db  0x4b ; 'K'
0000000000008024         db  0x0e ; '.'
0000000000008025         db  0x70 ; 'p'
0000000000008026         db  0x43 ; 'C'
0000000000008027         db  0x0e ; '.'
0000000000008028         db  0x78 ; 'x'
0000000000008029         db  0x45 ; 'E'
000000000000802a         db  0x0e ; '.'
000000000000802b         db  0x80 ; '.'
000000000000802c         db  0x01 ; '.'
000000000000802d         db  0x5e ; '^'
000000000000802e         db  0x0e ; '.'
000000000000802f         db  0x60 ; '`'
0000000000008030         db  0x4c ; 'L'
0000000000008031         db  0x0a ; '.'
0000000000008032         db  0x0e ; '.'
0000000000008033         db  0x38 ; '8'
0000000000008034         db  0x44 ; 'D'
0000000000008035         db  0x0e ; '.'
0000000000008036         db  0x30 ; '0'
0000000000008037         db  0x41 ; 'A'
0000000000008038         db  0x0e ; '.'
0000000000008039         db  0x28 ; '('
000000000000803a         db  0x42 ; 'B'
000000000000803b         db  0x0e ; '.'
000000000000803c         db  0x20 ; ' '
000000000000803d         db  0x42 ; 'B'
000000000000803e         db  0x0e ; '.'
000000000000803f         db  0x18 ; '.'
0000000000008040         db  0x42 ; 'B'
0000000000008041         db  0x0e ; '.'
0000000000008042         db  0x10 ; '.'
0000000000008043         db  0x42 ; 'B'
0000000000008044         db  0x0e ; '.'
0000000000008045         db  0x08 ; '.'
0000000000008046         db  0x46 ; 'F'
0000000000008047         db  0x0b ; '.'
0000000000008048         dd         0x00000028                                  ; Length of the record
000000000000804c         dd         0x000004a4                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000008050         db         0x60, 0xce, 2 dup (0xff)                    ; begin 0x4eb0
0000000000008054         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x4ee6)
0000000000008058         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008059         db  0x42 ; 'B'
000000000000805a         db  0x0e ; '.'
000000000000805b         db  0x10 ; '.'
000000000000805c         db  0x8c ; '.'
000000000000805d         db  0x02 ; '.'
000000000000805e         db  0x41 ; 'A'
000000000000805f         db  0x0e ; '.'
0000000000008060         db  0x18 ; '.'
0000000000008061         db  0x86 ; '.'
0000000000008062         db  0x03 ; '.'
0000000000008063         db  0x41 ; 'A'
0000000000008064         db  0x0e ; '.'
0000000000008065         db  0x20 ; ' '
0000000000008066         db  0x83 ; '.'
0000000000008067         db  0x04 ; '.'
0000000000008068         db  0x6e ; 'n'
0000000000008069         db  0x0e ; '.'
000000000000806a         db  0x18 ; '.'
000000000000806b         db  0x41 ; 'A'
000000000000806c         db  0x0e ; '.'
000000000000806d         db  0x10 ; '.'
000000000000806e         db  0x42 ; 'B'
000000000000806f         db  0x0e ; '.'
0000000000008070         db  0x08 ; '.'
0000000000008071         db  0x00 ; '.'
0000000000008072         db  0x00 ; '.'
0000000000008073         db  0x00 ; '.'
0000000000008074         dd         0x00000010                                  ; Length of the record
0000000000008078         dd         0x000004d0                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
000000000000807c         db         0x74, 0xce, 2 dup (0xff)                    ; begin 0x4ef0
0000000000008080         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4f01)
0000000000008084         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008085         align      8
0000000000008088         dd         0x00000010                                  ; Length of the record
000000000000808c         dd         0x000004e4                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000008090         db         0x80, 0xce, 2 dup (0xff)                    ; begin 0x4f10
0000000000008094         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4f21)
0000000000008098         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008099         align      4
000000000000809c         dd         0x00000010                                  ; Length of the record
00000000000080a0         dd         0x000004f8                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
00000000000080a4         db         0x8c, 0xce, 2 dup (0xff)                    ; begin 0x4f30
00000000000080a8         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x4f65)
00000000000080ac         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000080ad         align      16
00000000000080b0         dd         0x00000010                                  ; Length of the record
00000000000080b4         dd         0x0000050c                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
00000000000080b8         db         0xb8, 0xce, 2 dup (0xff)                    ; begin 0x4f70
00000000000080bc         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x4f85)
00000000000080c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000080c1         align      4
00000000000080c4         dd         0x00000010                                  ; Length of the record
00000000000080c8         dd         0x00000520                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
00000000000080cc         db         0xc4, 0xce, 2 dup (0xff)                    ; begin 0x4f90
00000000000080d0         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x4fc0)
00000000000080d4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000080d5         db  0x6b ; 'k'
00000000000080d6         db  0x0e ; '.'
00000000000080d7         db  0x10 ; '.'
00000000000080d8         dd         0x00000050                                  ; Length of the record
00000000000080dc         dd         0x00000534                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
00000000000080e0         db         0xe0, 0xce, 2 dup (0xff)                    ; begin 0x4fc0
00000000000080e4         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x5034)
00000000000080e8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000080e9         db  0x42 ; 'B'
00000000000080ea         db  0x0e ; '.'
00000000000080eb         db  0x10 ; '.'
00000000000080ec         db  0x8f ; '.'
00000000000080ed         db  0x02 ; '.'
00000000000080ee         db  0x42 ; 'B'
00000000000080ef         db  0x0e ; '.'
00000000000080f0         db  0x18 ; '.'
00000000000080f1         db  0x8e ; '.'
00000000000080f2         db  0x03 ; '.'
00000000000080f3         db  0x49 ; 'I'
00000000000080f4         db  0x0e ; '.'
00000000000080f5         db  0x20 ; ' '
00000000000080f6         db  0x8d ; '.'
00000000000080f7         db  0x04 ; '.'
00000000000080f8         db  0x42 ; 'B'
00000000000080f9         db  0x0e ; '.'
00000000000080fa         db  0x28 ; '('
00000000000080fb         db  0x8c ; '.'
00000000000080fc         db  0x05 ; '.'
00000000000080fd         db  0x44 ; 'D'
00000000000080fe         db  0x0e ; '.'
00000000000080ff         db  0x30 ; '0'
0000000000008100         db  0x86 ; '.'
0000000000008101         db  0x06 ; '.'
0000000000008102         db  0x41 ; 'A'
0000000000008103         db  0x0e ; '.'
0000000000008104         db  0x38 ; '8'
0000000000008105         db  0x83 ; '.'
0000000000008106         db  0x07 ; '.'
0000000000008107         db  0x4d ; 'M'
0000000000008108         db  0x0e ; '.'
0000000000008109         db  0x50 ; 'P'
000000000000810a         db  0x5f ; '_'
000000000000810b         db  0x0e ; '.'
000000000000810c         db  0x58 ; 'X'
000000000000810d         db  0x47 ; 'G'
000000000000810e         db  0x0e ; '.'
000000000000810f         db  0x60 ; '`'
0000000000008110         db  0x46 ; 'F'
0000000000008111         db  0x0e ; '.'
0000000000008112         db  0x68 ; 'h'
0000000000008113         db  0x44 ; 'D'
0000000000008114         db  0x0e ; '.'
0000000000008115         db  0x70 ; 'p'
0000000000008116         db  0x58 ; 'X'
0000000000008117         db  0x0e ; '.'
0000000000008118         db  0x38 ; '8'
0000000000008119         db  0x41 ; 'A'
000000000000811a         db  0x0e ; '.'
000000000000811b         db  0x30 ; '0'
000000000000811c         db  0x41 ; 'A'
000000000000811d         db  0x0e ; '.'
000000000000811e         db  0x28 ; '('
000000000000811f         db  0x42 ; 'B'
0000000000008120         db  0x0e ; '.'
0000000000008121         db  0x20 ; ' '
0000000000008122         db  0x42 ; 'B'
0000000000008123         db  0x0e ; '.'
0000000000008124         db  0x18 ; '.'
0000000000008125         db  0x42 ; 'B'
0000000000008126         db  0x0e ; '.'
0000000000008127         db  0x10 ; '.'
0000000000008128         db  0x42 ; 'B'
0000000000008129         db  0x0e ; '.'
000000000000812a         db  0x08 ; '.'
000000000000812b         db  0x00 ; '.'
000000000000812c         dd         0x00000068                                  ; Length of the record
0000000000008130         dd         0x00000588                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000008134         db         0x0c, 0xcf, 2 dup (0xff)                    ; begin 0x5040
0000000000008138         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x5123)
000000000000813c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000813d         db  0x42 ; 'B'
000000000000813e         db  0x0e ; '.'
000000000000813f         db  0x10 ; '.'
0000000000008140         db  0x8f ; '.'
0000000000008141         db  0x02 ; '.'
0000000000008142         db  0x42 ; 'B'
0000000000008143         db  0x0e ; '.'
0000000000008144         db  0x18 ; '.'
0000000000008145         db  0x8e ; '.'
0000000000008146         db  0x03 ; '.'
0000000000008147         db  0x49 ; 'I'
0000000000008148         db  0x0e ; '.'
0000000000008149         db  0x20 ; ' '
000000000000814a         db  0x8d ; '.'
000000000000814b         db  0x04 ; '.'
000000000000814c         db  0x42 ; 'B'
000000000000814d         db  0x0e ; '.'
000000000000814e         db  0x28 ; '('
000000000000814f         db  0x8c ; '.'
0000000000008150         db  0x05 ; '.'
0000000000008151         db  0x44 ; 'D'
0000000000008152         db  0x0e ; '.'
0000000000008153         db  0x30 ; '0'
0000000000008154         db  0x86 ; '.'
0000000000008155         db  0x06 ; '.'
0000000000008156         db  0x41 ; 'A'
0000000000008157         db  0x0e ; '.'
0000000000008158         db  0x38 ; '8'
0000000000008159         db  0x83 ; '.'
000000000000815a         db  0x07 ; '.'
000000000000815b         db  0x4d ; 'M'
000000000000815c         db  0x0e ; '.'
000000000000815d         db  0x70 ; 'p'
000000000000815e         db  0x65 ; 'e'
000000000000815f         db  0x0e ; '.'
0000000000008160         db  0x78 ; 'x'
0000000000008161         db  0x4d ; 'M'
0000000000008162         db  0x0e ; '.'
0000000000008163         db  0x80 ; '.'
0000000000008164         db  0x01 ; '.'
0000000000008165         db  0x46 ; 'F'
0000000000008166         db  0x0e ; '.'
0000000000008167         db  0x88 ; '.'
0000000000008168         db  0x01 ; '.'
0000000000008169         db  0x42 ; 'B'
000000000000816a         db  0x0e ; '.'
000000000000816b         db  0x90 ; '.'
000000000000816c         db  0x01 ; '.'
000000000000816d         db  0x5e ; '^'
000000000000816e         db  0x0e ; '.'
000000000000816f         db  0x70 ; 'p'
0000000000008170         db  0x56 ; 'V'
0000000000008171         db  0x0e ; '.'
0000000000008172         db  0x78 ; 'x'
0000000000008173         db  0x43 ; 'C'
0000000000008174         db  0x0e ; '.'
0000000000008175         db  0x80 ; '.'
0000000000008176         db  0x01 ; '.'
0000000000008177         db  0x43 ; 'C'
0000000000008178         db  0x0e ; '.'
0000000000008179         db  0x88 ; '.'
000000000000817a         db  0x01 ; '.'
000000000000817b         db  0x56 ; 'V'
000000000000817c         db  0x0e ; '.'
000000000000817d         db  0x90 ; '.'
000000000000817e         db  0x01 ; '.'
000000000000817f         db  0x52 ; 'R'
0000000000008180         db  0x0e ; '.'
0000000000008181         db  0x70 ; 'p'
0000000000008182         db  0x5b ; '['
0000000000008183         db  0x0e ; '.'
0000000000008184         db  0x38 ; '8'
0000000000008185         db  0x41 ; 'A'
0000000000008186         db  0x0e ; '.'
0000000000008187         db  0x30 ; '0'
0000000000008188         db  0x41 ; 'A'
0000000000008189         db  0x0e ; '.'
000000000000818a         db  0x28 ; '('
000000000000818b         db  0x42 ; 'B'
000000000000818c         db  0x0e ; '.'
000000000000818d         db  0x20 ; ' '
000000000000818e         db  0x42 ; 'B'
000000000000818f         db  0x0e ; '.'
0000000000008190         db  0x18 ; '.'
0000000000008191         db  0x42 ; 'B'
0000000000008192         db  0x0e ; '.'
0000000000008193         db  0x10 ; '.'
0000000000008194         db  0x42 ; 'B'
0000000000008195         db  0x0e ; '.'
0000000000008196         db  0x08 ; '.'
0000000000008197         db  0x00 ; '.'
0000000000008198         dd         0x00000010                                  ; Length of the record
000000000000819c         dd         0x000005f4                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
00000000000081a0         db         0x90, 0xcf, 2 dup (0xff)                    ; begin 0x5130
00000000000081a4         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x513a)
00000000000081a8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000081a9         align      4
00000000000081ac         dd         0x00000028                                  ; Length of the record
00000000000081b0         dd         0x00000608                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
00000000000081b4         db         0x8c, 0xcf, 2 dup (0xff)                    ; begin 0x5140
00000000000081b8         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x51d3)
00000000000081bc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000081bd         db  0x48 ; 'H'
00000000000081be         db  0x0e ; '.'
00000000000081bf         db  0x10 ; '.'
00000000000081c0         db  0x8c ; '.'
00000000000081c1         db  0x02 ; '.'
00000000000081c2         db  0x48 ; 'H'
00000000000081c3         db  0x0e ; '.'
00000000000081c4         db  0x18 ; '.'
00000000000081c5         db  0x86 ; '.'
00000000000081c6         db  0x03 ; '.'
00000000000081c7         db  0x41 ; 'A'
00000000000081c8         db  0x0e ; '.'
00000000000081c9         db  0x20 ; ' '
00000000000081ca         db  0x83 ; '.'
00000000000081cb         db  0x04 ; '.'
00000000000081cc         db  0x02 ; '.'
00000000000081cd         db  0x74 ; 't'
00000000000081ce         db  0x0e ; '.'
00000000000081cf         db  0x18 ; '.'
00000000000081d0         db  0x4b ; 'K'
00000000000081d1         db  0x0e ; '.'
00000000000081d2         db  0x10 ; '.'
00000000000081d3         db  0x42 ; 'B'
00000000000081d4         db  0x0e ; '.'
00000000000081d5         db  0x08 ; '.'
00000000000081d6         db  0x00 ; '.'
00000000000081d7         db  0x00 ; '.'
00000000000081d8         dd         0x00000010                                  ; Length of the record
00000000000081dc         dd         0x00000634                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
00000000000081e0         db         0x00, 0xd0, 2 dup (0xff)                    ; begin 0x51e0
00000000000081e4         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x51f3)
00000000000081e8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000081e9         align      4
00000000000081ec         dd         0x00000010                                  ; Length of the record
00000000000081f0         dd         0x00000648                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
00000000000081f4         db         0x0c, 0xd0, 2 dup (0xff)                    ; begin 0x5200
00000000000081f8         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x520c)
00000000000081fc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000081fd         align      512
0000000000008200         dd         0x00000010                                  ; Length of the record
0000000000008204         dd         0x0000065c                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000008208         db         0x08, 0xd0, 2 dup (0xff)                    ; begin 0x5210
000000000000820c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x5228)
0000000000008210         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008211         align      4
0000000000008214         dd         0x00000010                                  ; Length of the record
0000000000008218         dd         0x00000670                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
000000000000821c         db         0x14, 0xd0, 2 dup (0xff)                    ; begin 0x5230
0000000000008220         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x5244)
0000000000008224         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008225         align      8
0000000000008228         dd         0x00000018                                  ; Length of the record
000000000000822c         dd         0x00000684                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000008230         db         0x20, 0xd0, 2 dup (0xff)                    ; begin 0x5250
0000000000008234         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x52de)
0000000000008238         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008239         db  0x44 ; 'D'
000000000000823a         db  0x0e ; '.'
000000000000823b         db  0x50 ; 'P'
000000000000823c         db  0x02 ; '.'
000000000000823d         db  0x7f ; '.'
000000000000823e         db  0x0a ; '.'
000000000000823f         db  0x0e ; '.'
0000000000008240         db  0x08 ; '.'
0000000000008241         db  0x41 ; 'A'
0000000000008242         db  0x0b ; '.'
0000000000008243         db  0x00 ; '.'
0000000000008244         dd         0x00000018                                  ; Length of the record
0000000000008248         dd         0x000006a0                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
000000000000824c         db         0x94, 0xd0, 2 dup (0xff)                    ; begin 0x52e0
0000000000008250         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x536a)
0000000000008254         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008255         db  0x44 ; 'D'
0000000000008256         db  0x0e ; '.'
0000000000008257         db  0x50 ; 'P'
0000000000008258         db  0x02 ; '.'
0000000000008259         db  0x7b ; '{'
000000000000825a         db  0x0a ; '.'
000000000000825b         db  0x0e ; '.'
000000000000825c         db  0x08 ; '.'
000000000000825d         db  0x41 ; 'A'
000000000000825e         db  0x0b ; '.'
000000000000825f         db  0x00 ; '.'
0000000000008260         dd         0x00000010                                  ; Length of the record
0000000000008264         dd         0x000006bc                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000008268         db         0x08, 0xd1, 2 dup (0xff)                    ; begin 0x5370
000000000000826c         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x537c)
0000000000008270         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008271         align      4
0000000000008274         dd         0x00000010                                  ; Length of the record
0000000000008278         dd         0x000006d0                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
000000000000827c         db         0x04, 0xd1, 2 dup (0xff)                    ; begin 0x5380
0000000000008280         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x538f)
0000000000008284         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008285         align      8
0000000000008288         dd         0x00000018                                  ; Length of the record
000000000000828c         dd         0x000006e4                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000008290         db         0x00, 0xd1, 2 dup (0xff)                    ; begin 0x5390
0000000000008294         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x5428)
0000000000008298         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008299         db  0x44 ; 'D'
000000000000829a         db  0x0e ; '.'
000000000000829b         db  0x50 ; 'P'
000000000000829c         db  0x02 ; '.'
000000000000829d         db  0x8e ; '.'
000000000000829e         db  0x0a ; '.'
000000000000829f         db  0x0e ; '.'
00000000000082a0         db  0x08 ; '.'
00000000000082a1         db  0x41 ; 'A'
00000000000082a2         db  0x0b ; '.'
00000000000082a3         db  0x00 ; '.'
00000000000082a4         dd         0x00000010                                  ; Length of the record
00000000000082a8         dd         0x00000700                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
00000000000082ac         db         0x84, 0xd1, 2 dup (0xff)                    ; begin 0x5430
00000000000082b0         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x5440)
00000000000082b4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000082b5         align      8
00000000000082b8         dd         0x00000010                                  ; Length of the record
00000000000082bc         dd         0x00000714                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
00000000000082c0         db         0x80, 0xd1, 2 dup (0xff)                    ; begin 0x5440
00000000000082c4         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x5451)
00000000000082c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000082c9         align      4
00000000000082cc         dd         0x00000010                                  ; Length of the record
00000000000082d0         dd         0x00000728                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
00000000000082d4         db         0x8c, 0xd1, 2 dup (0xff)                    ; begin 0x5460
00000000000082d8         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x546a)
00000000000082dc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000082dd         align      32
00000000000082e0         dd         0x00000018                                  ; Length of the record
00000000000082e4         dd         0x0000073c                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
00000000000082e8         db         0x88, 0xd1, 2 dup (0xff)                    ; begin 0x5470
00000000000082ec         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x54fe)
00000000000082f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000082f1         db  0x44 ; 'D'
00000000000082f2         db  0x0e ; '.'
00000000000082f3         db  0x50 ; 'P'
00000000000082f4         db  0x02 ; '.'
00000000000082f5         db  0x7f ; '.'
00000000000082f6         db  0x0a ; '.'
00000000000082f7         db  0x0e ; '.'
00000000000082f8         db  0x08 ; '.'
00000000000082f9         db  0x41 ; 'A'
00000000000082fa         db  0x0b ; '.'
00000000000082fb         db  0x00 ; '.'
00000000000082fc         dd         0x00000018                                  ; Length of the record
0000000000008300         dd         0x00000758                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000008304         db         0xfc, 0xd1, 2 dup (0xff)                    ; begin 0x5500
0000000000008308         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x5591)
000000000000830c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000830d         db  0x44 ; 'D'
000000000000830e         db  0x0e ; '.'
000000000000830f         db  0x50 ; 'P'
0000000000008310         db  0x02 ; '.'
0000000000008311         db  0x82 ; '.'
0000000000008312         db  0x0a ; '.'
0000000000008313         db  0x0e ; '.'
0000000000008314         db  0x08 ; '.'
0000000000008315         db  0x41 ; 'A'
0000000000008316         db  0x0b ; '.'
0000000000008317         db  0x00 ; '.'
0000000000008318         dd         0x00000010                                  ; Length of the record
000000000000831c         dd         0x00000774                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000008320         db         0x80, 0xd2, 2 dup (0xff)                    ; begin 0x55a0
0000000000008324         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x55ac)
0000000000008328         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008329         align      4
000000000000832c         dd         0x00000010                                  ; Length of the record
0000000000008330         dd         0x00000788                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000008334         db         0x7c, 0xd2, 2 dup (0xff)                    ; begin 0x55b0
0000000000008338         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x55c7)
000000000000833c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000833d         align      64
0000000000008340         dd         0x00000010                                  ; Length of the record
0000000000008344         dd         0x0000079c                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000008348         db         0x88, 0xd2, 2 dup (0xff)                    ; begin 0x55d0
000000000000834c         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x55e3)
0000000000008350         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008351         align      4
0000000000008354         dd         0x00000010                                  ; Length of the record
0000000000008358         dd         0x000007b0                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
000000000000835c         db         0x94, 0xd2, 2 dup (0xff)                    ; begin 0x55f0
0000000000008360         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x55fc)
0000000000008364         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008365         align      8
0000000000008368         dd         0x00000010                                  ; Length of the record
000000000000836c         dd         0x000007c4                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000008370         db         0x90, 0xd2, 2 dup (0xff)                    ; begin 0x5600
0000000000008374         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x5614)
0000000000008378         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008379         align      4
000000000000837c         dd         0x00000010                                  ; Length of the record
0000000000008380         dd         0x000007d8                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000008384         db         0x9c, 0xd2, 2 dup (0xff)                    ; begin 0x5620
0000000000008388         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5633)
000000000000838c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000838d         align      16
0000000000008390         dd         0x00000014                                  ; Length of the record
0000000000008394         dd         0x000007ec                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000008398         db         0xa8, 0xd2, 2 dup (0xff)                    ; begin 0x5640
000000000000839c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x5658)
00000000000083a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000083a1         align      8
00000000000083a8         dd         0x00000110                                  ; Length of the record
00000000000083ac         dd         0x00000804                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
00000000000083b0         db         0xb0, 0xd2, 2 dup (0xff)                    ; begin 0x5660
00000000000083b4         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x5a77)
00000000000083b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000083b9         db  0x42 ; 'B'
00000000000083ba         db  0x0e ; '.'
00000000000083bb         db  0x10 ; '.'
00000000000083bc         db  0x8f ; '.'
00000000000083bd         db  0x02 ; '.'
00000000000083be         db  0x42 ; 'B'
00000000000083bf         db  0x0e ; '.'
00000000000083c0         db  0x18 ; '.'
00000000000083c1         db  0x8e ; '.'
00000000000083c2         db  0x03 ; '.'
00000000000083c3         db  0x42 ; 'B'
00000000000083c4         db  0x0e ; '.'
00000000000083c5         db  0x20 ; ' '
00000000000083c6         db  0x8d ; '.'
00000000000083c7         db  0x04 ; '.'
00000000000083c8         db  0x42 ; 'B'
00000000000083c9         db  0x0e ; '.'
00000000000083ca         db  0x28 ; '('
00000000000083cb         db  0x8c ; '.'
00000000000083cc         db  0x05 ; '.'
00000000000083cd         db  0x44 ; 'D'
00000000000083ce         db  0x0e ; '.'
00000000000083cf         db  0x30 ; '0'
00000000000083d0         db  0x86 ; '.'
00000000000083d1         db  0x06 ; '.'
00000000000083d2         db  0x41 ; 'A'
00000000000083d3         db  0x0e ; '.'
00000000000083d4         db  0x38 ; '8'
00000000000083d5         db  0x83 ; '.'
00000000000083d6         db  0x07 ; '.'
00000000000083d7         db  0x4a ; 'J'
00000000000083d8         db  0x0e ; '.'
00000000000083d9         db  0x60 ; '`'
00000000000083da         db  0x02 ; '.'
00000000000083db         db  0xdd ; '.'
00000000000083dc         db  0x0e ; '.'
00000000000083dd         db  0x68 ; 'h'
00000000000083de         db  0x57 ; 'W'
00000000000083df         db  0x0e ; '.'
00000000000083e0         db  0x70 ; 'p'
00000000000083e1         db  0x42 ; 'B'
00000000000083e2         db  0x0e ; '.'
00000000000083e3         db  0x78 ; 'x'
00000000000083e4         db  0x42 ; 'B'
00000000000083e5         db  0x0e ; '.'
00000000000083e6         db  0x80 ; '.'
00000000000083e7         db  0x01 ; '.'
00000000000083e8         db  0x42 ; 'B'
00000000000083e9         db  0x0e ; '.'
00000000000083ea         db  0x88 ; '.'
00000000000083eb         db  0x01 ; '.'
00000000000083ec         db  0x42 ; 'B'
00000000000083ed         db  0x0e ; '.'
00000000000083ee         db  0x90 ; '.'
00000000000083ef         db  0x01 ; '.'
00000000000083f0         db  0x53 ; 'S'
00000000000083f1         db  0x0e ; '.'
00000000000083f2         db  0x60 ; '`'
00000000000083f3         db  0x44 ; 'D'
00000000000083f4         db  0x0a ; '.'
00000000000083f5         db  0x0e ; '.'
00000000000083f6         db  0x38 ; '8'
00000000000083f7         db  0x41 ; 'A'
00000000000083f8         db  0x0e ; '.'
00000000000083f9         db  0x30 ; '0'
00000000000083fa         db  0x41 ; 'A'
00000000000083fb         db  0x0e ; '.'
00000000000083fc         db  0x28 ; '('
00000000000083fd         db  0x42 ; 'B'
00000000000083fe         db  0x0e ; '.'
00000000000083ff         db  0x20 ; ' '
0000000000008400         db  0x42 ; 'B'
0000000000008401         db  0x0e ; '.'
0000000000008402         db  0x18 ; '.'
0000000000008403         db  0x42 ; 'B'
0000000000008404         db  0x0e ; '.'
0000000000008405         db  0x10 ; '.'
0000000000008406         db  0x42 ; 'B'
0000000000008407         db  0x0e ; '.'
0000000000008408         db  0x08 ; '.'
0000000000008409         db  0x44 ; 'D'
000000000000840a         db  0x0b ; '.'
000000000000840b         db  0x02 ; '.'
000000000000840c         db  0x78 ; 'x'
000000000000840d         db  0x0a ; '.'
000000000000840e         db  0x0e ; '.'
000000000000840f         db  0x68 ; 'h'
0000000000008410         db  0x48 ; 'H'
0000000000008411         db  0x0b ; '.'
0000000000008412         db  0x5a ; 'Z'
0000000000008413         db  0x0a ; '.'
0000000000008414         db  0x0e ; '.'
0000000000008415         db  0x38 ; '8'
0000000000008416         db  0x47 ; 'G'
0000000000008417         db  0x0e ; '.'
0000000000008418         db  0x30 ; '0'
0000000000008419         db  0x41 ; 'A'
000000000000841a         db  0x0e ; '.'
000000000000841b         db  0x28 ; '('
000000000000841c         db  0x42 ; 'B'
000000000000841d         db  0x0e ; '.'
000000000000841e         db  0x20 ; ' '
000000000000841f         db  0x42 ; 'B'
0000000000008420         db  0x0e ; '.'
0000000000008421         db  0x18 ; '.'
0000000000008422         db  0x42 ; 'B'
0000000000008423         db  0x0e ; '.'
0000000000008424         db  0x10 ; '.'
0000000000008425         db  0x42 ; 'B'
0000000000008426         db  0x0e ; '.'
0000000000008427         db  0x08 ; '.'
0000000000008428         db  0x56 ; 'V'
0000000000008429         db  0x0b ; '.'
000000000000842a         db  0x5e ; '^'
000000000000842b         db  0x0a ; '.'
000000000000842c         db  0x0e ; '.'
000000000000842d         db  0x38 ; '8'
000000000000842e         db  0x52 ; 'R'
000000000000842f         db  0x0e ; '.'
0000000000008430         db  0x30 ; '0'
0000000000008431         db  0x41 ; 'A'
0000000000008432         db  0x0e ; '.'
0000000000008433         db  0x28 ; '('
0000000000008434         db  0x42 ; 'B'
0000000000008435         db  0x0e ; '.'
0000000000008436         db  0x20 ; ' '
0000000000008437         db  0x42 ; 'B'
0000000000008438         db  0x0e ; '.'
0000000000008439         db  0x18 ; '.'
000000000000843a         db  0x42 ; 'B'
000000000000843b         db  0x0e ; '.'
000000000000843c         db  0x10 ; '.'
000000000000843d         db  0x42 ; 'B'
000000000000843e         db  0x0e ; '.'
000000000000843f         db  0x08 ; '.'
0000000000008440         db  0x4f ; 'O'
0000000000008441         db  0x0b ; '.'
0000000000008442         db  0x62 ; 'b'
0000000000008443         db  0x0a ; '.'
0000000000008444         db  0x0e ; '.'
0000000000008445         db  0x38 ; '8'
0000000000008446         db  0x50 ; 'P'
0000000000008447         db  0x0e ; '.'
0000000000008448         db  0x30 ; '0'
0000000000008449         db  0x41 ; 'A'
000000000000844a         db  0x0e ; '.'
000000000000844b         db  0x28 ; '('
000000000000844c         db  0x42 ; 'B'
000000000000844d         db  0x0e ; '.'
000000000000844e         db  0x20 ; ' '
000000000000844f         db  0x42 ; 'B'
0000000000008450         db  0x0e ; '.'
0000000000008451         db  0x18 ; '.'
0000000000008452         db  0x42 ; 'B'
0000000000008453         db  0x0e ; '.'
0000000000008454         db  0x10 ; '.'
0000000000008455         db  0x42 ; 'B'
0000000000008456         db  0x0e ; '.'
0000000000008457         db  0x08 ; '.'
0000000000008458         db  0x55 ; 'U'
0000000000008459         db  0x0b ; '.'
000000000000845a         db  0x66 ; 'f'
000000000000845b         db  0x0e ; '.'
000000000000845c         db  0x68 ; 'h'
000000000000845d         db  0x42 ; 'B'
000000000000845e         db  0x0e ; '.'
000000000000845f         db  0x70 ; 'p'
0000000000008460         db  0x5c ; '\'
0000000000008461         db  0x0e ; '.'
0000000000008462         db  0x68 ; 'h'
0000000000008463         db  0x41 ; 'A'
0000000000008464         db  0x0e ; '.'
0000000000008465         db  0x60 ; '`'
0000000000008466         db  0x44 ; 'D'
0000000000008467         db  0x0a ; '.'
0000000000008468         db  0x0e ; '.'
0000000000008469         db  0x38 ; '8'
000000000000846a         db  0x41 ; 'A'
000000000000846b         db  0x0e ; '.'
000000000000846c         db  0x30 ; '0'
000000000000846d         db  0x41 ; 'A'
000000000000846e         db  0x0e ; '.'
000000000000846f         db  0x28 ; '('
0000000000008470         db  0x42 ; 'B'
0000000000008471         db  0x0e ; '.'
0000000000008472         db  0x20 ; ' '
0000000000008473         db  0x42 ; 'B'
0000000000008474         db  0x0e ; '.'
0000000000008475         db  0x18 ; '.'
0000000000008476         db  0x42 ; 'B'
0000000000008477         db  0x0e ; '.'
0000000000008478         db  0x10 ; '.'
0000000000008479         db  0x42 ; 'B'
000000000000847a         db  0x0e ; '.'
000000000000847b         db  0x08 ; '.'
000000000000847c         db  0x45 ; 'E'
000000000000847d         db  0x0b ; '.'
000000000000847e         db  0x68 ; 'h'
000000000000847f         db  0x0a ; '.'
0000000000008480         db  0x0e ; '.'
0000000000008481         db  0x68 ; 'h'
0000000000008482         db  0x48 ; 'H'
0000000000008483         db  0x0b ; '.'
0000000000008484         db  0x72 ; 'r'
0000000000008485         db  0x0e ; '.'
0000000000008486         db  0x68 ; 'h'
0000000000008487         db  0x45 ; 'E'
0000000000008488         db  0x0e ; '.'
0000000000008489         db  0x70 ; 'p'
000000000000848a         db  0x42 ; 'B'
000000000000848b         db  0x0e ; '.'
000000000000848c         db  0x78 ; 'x'
000000000000848d         db  0x42 ; 'B'
000000000000848e         db  0x0e ; '.'
000000000000848f         db  0x80 ; '.'
0000000000008490         db  0x01 ; '.'
0000000000008491         db  0x5e ; '^'
0000000000008492         db  0x0e ; '.'
0000000000008493         db  0x60 ; '`'
0000000000008494         db  0x44 ; 'D'
0000000000008495         db  0x0a ; '.'
0000000000008496         db  0x0e ; '.'
0000000000008497         db  0x38 ; '8'
0000000000008498         db  0x41 ; 'A'
0000000000008499         db  0x0e ; '.'
000000000000849a         db  0x30 ; '0'
000000000000849b         db  0x41 ; 'A'
000000000000849c         db  0x0e ; '.'
000000000000849d         db  0x28 ; '('
000000000000849e         db  0x42 ; 'B'
000000000000849f         db  0x0e ; '.'
00000000000084a0         db  0x20 ; ' '
00000000000084a1         db  0x42 ; 'B'
00000000000084a2         db  0x0e ; '.'
00000000000084a3         db  0x18 ; '.'
00000000000084a4         db  0x42 ; 'B'
00000000000084a5         db  0x0e ; '.'
00000000000084a6         db  0x10 ; '.'
00000000000084a7         db  0x42 ; 'B'
00000000000084a8         db  0x0e ; '.'
00000000000084a9         db  0x08 ; '.'
00000000000084aa         db  0x41 ; 'A'
00000000000084ab         db  0x0b ; '.'
00000000000084ac         db  0x79 ; 'y'
00000000000084ad         db  0x0a ; '.'
00000000000084ae         db  0x0e ; '.'
00000000000084af         db  0x68 ; 'h'
00000000000084b0         db  0x42 ; 'B'
00000000000084b1         db  0x0e ; '.'
00000000000084b2         db  0x70 ; 'p'
00000000000084b3         db  0x42 ; 'B'
00000000000084b4         db  0x0e ; '.'
00000000000084b5         db  0x78 ; 'x'
00000000000084b6         db  0x42 ; 'B'
00000000000084b7         db  0x0e ; '.'
00000000000084b8         db  0x80 ; '.'
00000000000084b9         db  0x01 ; '.'
00000000000084ba         db  0x51 ; 'Q'
00000000000084bb         db  0x0b ; '.'
00000000000084bc         dd         0x00000010                                  ; Length of the record
00000000000084c0         dd         0x00000918                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
00000000000084c4         db         0xbc, 0xd5, 2 dup (0xff)                    ; begin 0x5a80
00000000000084c8         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x5aa0)
00000000000084cc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000084cd         align      16
00000000000084d0         dd         0x00000018                                  ; Length of the record
00000000000084d4         dd         0x0000092c                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
00000000000084d8         db         0xc8, 0xd5, 2 dup (0xff)                    ; begin 0x5aa0
00000000000084dc         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x5b18)
00000000000084e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000084e1         db  0x44 ; 'D'
00000000000084e2         db  0x0e ; '.'
00000000000084e3         db  0x70 ; 'p'
00000000000084e4         db  0x02 ; '.'
00000000000084e5         db  0x60 ; '`'
00000000000084e6         db  0x0a ; '.'
00000000000084e7         db  0x0e ; '.'
00000000000084e8         db  0x08 ; '.'
00000000000084e9         db  0x41 ; 'A'
00000000000084ea         db  0x0b ; '.'
00000000000084eb         db  0x00 ; '.'
00000000000084ec         dd         0x00000028                                  ; Length of the record
00000000000084f0         dd         0x00000948                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
00000000000084f4         db         0x2c, 0xd6, 2 dup (0xff)                    ; begin 0x5b20
00000000000084f8         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x5bf5)
00000000000084fc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000084fd         db  0x41 ; 'A'
00000000000084fe         db  0x0e ; '.'
00000000000084ff         db  0x10 ; '.'
0000000000008500         db  0x86 ; '.'
0000000000008501         db  0x02 ; '.'
0000000000008502         db  0x41 ; 'A'
0000000000008503         db  0x0e ; '.'
0000000000008504         db  0x18 ; '.'
0000000000008505         db  0x83 ; '.'
0000000000008506         db  0x03 ; '.'
0000000000008507         db  0x50 ; 'P'
0000000000008508         db  0x0e ; '.'
0000000000008509         db  0xd0 ; '.'
000000000000850a         db  0x01 ; '.'
000000000000850b         db  0x02 ; '.'
000000000000850c         db  0xab ; '.'
000000000000850d         db  0x0a ; '.'
000000000000850e         db  0x0e ; '.'
000000000000850f         db  0x18 ; '.'
0000000000008510         db  0x41 ; 'A'
0000000000008511         db  0x0e ; '.'
0000000000008512         db  0x10 ; '.'
0000000000008513         db  0x41 ; 'A'
0000000000008514         db  0x0e ; '.'
0000000000008515         db  0x08 ; '.'
0000000000008516         db  0x41 ; 'A'
0000000000008517         db  0x0b ; '.'
0000000000008518         dd         0x0000001c                                  ; Length of the record
000000000000851c         dd         0x00000974                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000008520         db         0xe0, 0xd6, 2 dup (0xff)                    ; begin 0x5c00
0000000000008524         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x5c80)
0000000000008528         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008529         db  0x41 ; 'A'
000000000000852a         db  0x0e ; '.'
000000000000852b         db  0x10 ; '.'
000000000000852c         db  0x83 ; '.'
000000000000852d         db  0x02 ; '.'
000000000000852e         db  0x02 ; '.'
000000000000852f         db  0x7a ; 'z'
0000000000008530         db  0x0e ; '.'
0000000000008531         db  0x08 ; '.'
0000000000008532         db  0x00 ; '.'
0000000000008533         db  0x00 ; '.'
0000000000008534         db  0x00 ; '.'
0000000000008535         db  0x00 ; '.'
0000000000008536         db  0x00 ; '.'
0000000000008537         db  0x00 ; '.'
0000000000008538         dd         0x00000018                                  ; Length of the record
000000000000853c         dd         0x00000994                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000008540         db         0x40, 0xd7, 2 dup (0xff)                    ; begin 0x5c80
0000000000008544         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x5c9a)
0000000000008548         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008549         db  0x41 ; 'A'
000000000000854a         db  0x0e ; '.'
000000000000854b         db  0x10 ; '.'
000000000000854c         db  0x83 ; '.'
000000000000854d         db  0x02 ; '.'
000000000000854e         db  0x53 ; 'S'
000000000000854f         db  0x0a ; '.'
0000000000008550         db  0x0e ; '.'
0000000000008551         db  0x08 ; '.'
0000000000008552         db  0x41 ; 'A'
0000000000008553         db  0x0b ; '.'
0000000000008554         dd         0x00000010                                  ; Length of the record
0000000000008558         dd         0x000009b0                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
000000000000855c         db         0x44, 0xd7, 2 dup (0xff)                    ; begin 0x5ca0
0000000000008560         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x5cc4)
0000000000008564         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008565         db  0x5f ; '_'
0000000000008566         db  0x0e ; '.'
0000000000008567         db  0x10 ; '.'
0000000000008568         dd         0x00000010                                  ; Length of the record
000000000000856c         dd         0x000009c4                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000008570         db         0x60, 0xd7, 2 dup (0xff)                    ; begin 0x5cd0
0000000000008574         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x5cd2)
0000000000008578         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008579         align      4
000000000000857c         dd         0x00000020                                  ; Length of the record
0000000000008580         dd         0x000009d8                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000008584         db         0x5c, 0xd7, 2 dup (0xff)                    ; begin 0x5ce0
0000000000008588         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x5d16)
000000000000858c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000858d         db  0x44 ; 'D'
000000000000858e         db  0x0e ; '.'
000000000000858f         db  0x10 ; '.'
0000000000008590         db  0x83 ; '.'
0000000000008591         db  0x02 ; '.'
0000000000008592         db  0x5d ; ']'
0000000000008593         db  0x0a ; '.'
0000000000008594         db  0x0e ; '.'
0000000000008595         db  0x08 ; '.'
0000000000008596         db  0x47 ; 'G'
0000000000008597         db  0x0b ; '.'
0000000000008598         db  0x48 ; 'H'
0000000000008599         db  0x0a ; '.'
000000000000859a         db  0x0e ; '.'
000000000000859b         db  0x08 ; '.'
000000000000859c         db  0x41 ; 'A'
000000000000859d         db  0x0b ; '.'
000000000000859e         db  0x00 ; '.'
000000000000859f         db  0x00 ; '.'
00000000000085a0         dd         0x00000010                                  ; Length of the record
00000000000085a4         dd         0x000009fc                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
00000000000085a8         db         0x78, 0xd7, 2 dup (0xff)                    ; begin 0x5d20
00000000000085ac         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x5d44)
00000000000085b0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000085b1         db  0x5f ; '_'
00000000000085b2         db  0x0e ; '.'
00000000000085b3         db  0x10 ; '.'
00000000000085b4         dd         0x00000014                                  ; Length of the record
00000000000085b8         dd         0x00000a10                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
00000000000085bc         db         0x94, 0xd7, 2 dup (0xff)                    ; begin 0x5d50
00000000000085c0         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x5dd2)
00000000000085c4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000085c5         db  0x02 ; '.'
00000000000085c6         db  0x5f ; '_'
00000000000085c7         db  0x0e ; '.'
00000000000085c8         db  0x10 ; '.'
00000000000085c9         db  0x49 ; 'I'
00000000000085ca         db  0x0e ; '.'
00000000000085cb         db  0x08 ; '.'
00000000000085cc         dd         0x00000014                                  ; Length of the record
00000000000085d0         dd         0x00000a28                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
00000000000085d4         db         0x0c, 0xd8, 2 dup (0xff)                    ; begin 0x5de0
00000000000085d8         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x5e2a)
00000000000085dc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000085dd         db  0x02 ; '.'
00000000000085de         db  0x45 ; 'E'
00000000000085df         db  0x0e ; '.'
00000000000085e0         db  0x10 ; '.'
00000000000085e1         db  0x00 ; '.'
00000000000085e2         db  0x00 ; '.'
00000000000085e3         db  0x00 ; '.'
00000000000085e4         dd         0x00000018                                  ; Length of the record
00000000000085e8         dd         0x00000a40                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
00000000000085ec         db         0x44, 0xd8, 2 dup (0xff)                    ; begin 0x5e30
00000000000085f0         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x5e47)
00000000000085f4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000085f5         db  0x41 ; 'A'
00000000000085f6         db  0x0e ; '.'
00000000000085f7         db  0x10 ; '.'
00000000000085f8         db  0x83 ; '.'
00000000000085f9         db  0x02 ; '.'
00000000000085fa         db  0x51 ; 'Q'
00000000000085fb         db  0x0e ; '.'
00000000000085fc         db  0x08 ; '.'
00000000000085fd         db  0x00 ; '.'
00000000000085fe         db  0x00 ; '.'
00000000000085ff         db  0x00 ; '.'
0000000000008600         dd         0x00000018                                  ; Length of the record
0000000000008604         dd         0x00000a5c                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000008608         db         0x48, 0xd8, 2 dup (0xff)                    ; begin 0x5e50
000000000000860c         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x5e7e)
0000000000008610         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008611         db  0x47 ; 'G'
0000000000008612         db  0x0e ; '.'
0000000000008613         db  0x10 ; '.'
0000000000008614         db  0x61 ; 'a'
0000000000008615         db  0x0a ; '.'
0000000000008616         db  0x0e ; '.'
0000000000008617         db  0x08 ; '.'
0000000000008618         db  0x41 ; 'A'
0000000000008619         db  0x0b ; '.'
000000000000861a         db  0x00 ; '.'
000000000000861b         db  0x00 ; '.'
000000000000861c         dd         0x00000024                                  ; Length of the record
0000000000008620         dd         0x00000a78                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000008624         db         0x5c, 0xd8, 2 dup (0xff)                    ; begin 0x5e80
0000000000008628         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x5ea8)
000000000000862c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000862d         db  0x41 ; 'A'
000000000000862e         db  0x0e ; '.'
000000000000862f         db  0x10 ; '.'
0000000000008630         db  0x86 ; '.'
0000000000008631         db  0x02 ; '.'
0000000000008632         db  0x41 ; 'A'
0000000000008633         db  0x0e ; '.'
0000000000008634         db  0x18 ; '.'
0000000000008635         db  0x83 ; '.'
0000000000008636         db  0x03 ; '.'
0000000000008637         db  0x4d ; 'M'
0000000000008638         db  0x0e ; '.'
0000000000008639         db  0x20 ; ' '
000000000000863a         db  0x49 ; 'I'
000000000000863b         db  0x0e ; '.'
000000000000863c         db  0x18 ; '.'
000000000000863d         db  0x47 ; 'G'
000000000000863e         db  0x0e ; '.'
000000000000863f         db  0x10 ; '.'
0000000000008640         db  0x41 ; 'A'
0000000000008641         db  0x0e ; '.'
0000000000008642         db  0x08 ; '.'
0000000000008643         db  0x00 ; '.'
0000000000008644         dd         0x00000018                                  ; Length of the record
0000000000008648         dd         0x00000aa0                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
000000000000864c         db         0x64, 0xd8, 2 dup (0xff)                    ; begin 0x5eb0
0000000000008650         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5ec3)
0000000000008654         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008655         db  0x41 ; 'A'
0000000000008656         db  0x0e ; '.'
0000000000008657         db  0x10 ; '.'
0000000000008658         db  0x83 ; '.'
0000000000008659         db  0x02 ; '.'
000000000000865a         db  0x50 ; 'P'
000000000000865b         db  0x0e ; '.'
000000000000865c         db  0x08 ; '.'
000000000000865d         db  0x00 ; '.'
000000000000865e         db  0x00 ; '.'
000000000000865f         db  0x00 ; '.'
0000000000008660         dd         0x00000014                                  ; Length of the record
0000000000008664         dd         0x00000abc                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000008668         db         0x68, 0xd8, 2 dup (0xff)                    ; begin 0x5ed0
000000000000866c         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x5f05)
0000000000008670         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008671         db  0x4b ; 'K'
0000000000008672         db  0x0e ; '.'
0000000000008673         db  0x10 ; '.'
0000000000008674         db  0x00 ; '.'
0000000000008675         db  0x00 ; '.'
0000000000008676         db  0x00 ; '.'
0000000000008677         db  0x00 ; '.'
0000000000008678         dd         0x0000001c                                  ; Length of the record
000000000000867c         dd         0x00000ad4                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000008680         db         0x90, 0xd8, 2 dup (0xff)                    ; begin 0x5f10
0000000000008684         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x5f28)
0000000000008688         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008689         db  0x44 ; 'D'
000000000000868a         db  0x0e ; '.'
000000000000868b         db  0x10 ; '.'
000000000000868c         db  0x4e ; 'N'
000000000000868d         db  0x0a ; '.'
000000000000868e         db  0x0e ; '.'
000000000000868f         db  0x08 ; '.'
0000000000008690         db  0x41 ; 'A'
0000000000008691         db  0x0b ; '.'
0000000000008692         db  0x00 ; '.'
0000000000008693         db  0x00 ; '.'
0000000000008694         db  0x00 ; '.'
0000000000008695         db  0x00 ; '.'
0000000000008696         db  0x00 ; '.'
0000000000008697         db  0x00 ; '.'
0000000000008698         dd         0x00000034                                  ; Length of the record
000000000000869c         dd         0x00000af4                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
00000000000086a0         db         0x90, 0xd8, 2 dup (0xff)                    ; begin 0x5f30
00000000000086a4         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x5fab)
00000000000086a8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000086a9         db  0x42 ; 'B'
00000000000086aa         db  0x0e ; '.'
00000000000086ab         db  0x10 ; '.'
00000000000086ac         db  0x8c ; '.'
00000000000086ad         db  0x02 ; '.'
00000000000086ae         db  0x41 ; 'A'
00000000000086af         db  0x0e ; '.'
00000000000086b0         db  0x18 ; '.'
00000000000086b1         db  0x86 ; '.'
00000000000086b2         db  0x03 ; '.'
00000000000086b3         db  0x41 ; 'A'
00000000000086b4         db  0x0e ; '.'
00000000000086b5         db  0x20 ; ' '
00000000000086b6         db  0x83 ; '.'
00000000000086b7         db  0x04 ; '.'
00000000000086b8         db  0x7d ; '}'
00000000000086b9         db  0x0a ; '.'
00000000000086ba         db  0x0e ; '.'
00000000000086bb         db  0x18 ; '.'
00000000000086bc         db  0x41 ; 'A'
00000000000086bd         db  0x0e ; '.'
00000000000086be         db  0x10 ; '.'
00000000000086bf         db  0x42 ; 'B'
00000000000086c0         db  0x0e ; '.'
00000000000086c1         db  0x08 ; '.'
00000000000086c2         db  0x44 ; 'D'
00000000000086c3         db  0x0b ; '.'
00000000000086c4         db  0x60 ; '`'
00000000000086c5         db  0x0a ; '.'
00000000000086c6         db  0x0e ; '.'
00000000000086c7         db  0x18 ; '.'
00000000000086c8         db  0x41 ; 'A'
00000000000086c9         db  0x0e ; '.'
00000000000086ca         db  0x10 ; '.'
00000000000086cb         db  0x42 ; 'B'
00000000000086cc         db  0x0e ; '.'
00000000000086cd         db  0x08 ; '.'
00000000000086ce         db  0x45 ; 'E'
00000000000086cf         db  0x0b ; '.'
00000000000086d0         dd         0x0000001c                                  ; Length of the record
00000000000086d4         dd         0x00000b2c                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
00000000000086d8         db         2 dup (0xd8), 2 dup (0xff)                  ; begin 0x5fb0
00000000000086dc         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x5ff0)
00000000000086e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000086e1         db  0x44 ; 'D'
00000000000086e2         db  0x0e ; '.'
00000000000086e3         db  0x10 ; '.'
00000000000086e4         db  0x83 ; '.'
00000000000086e5         db  0x02 ; '.'
00000000000086e6         db  0x5a ; 'Z'
00000000000086e7         db  0x0a ; '.'
00000000000086e8         db  0x0e ; '.'
00000000000086e9         db  0x08 ; '.'
00000000000086ea         db  0x4a ; 'J'
00000000000086eb         db  0x0b ; '.'
00000000000086ec         db  0x53 ; 'S'
00000000000086ed         db  0x0e ; '.'
00000000000086ee         db  0x08 ; '.'
00000000000086ef         db  0x00 ; '.'
00000000000086f0         dd         0x00000014                                  ; Length of the record
00000000000086f4         dd         0x00000b4c                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
00000000000086f8         db         0xf8, 0xd8, 2 dup (0xff)                    ; begin 0x5ff0
00000000000086fc         db         0x23, 3 dup (0x00)                          ; length 0x23 (end at 0x6013)
0000000000008700         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008701         align      8
0000000000008708         dd         0x0000002c                                  ; Length of the record
000000000000870c         dd         0x00000b64                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000008710         db         0x10, 0xd9, 2 dup (0xff)                    ; begin 0x6020
0000000000008714         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x6077)
0000000000008718         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008719         db  0x63 ; 'c'
000000000000871a         db  0x0e ; '.'
000000000000871b         db  0x10 ; '.'
000000000000871c         db  0x8c ; '.'
000000000000871d         db  0x02 ; '.'
000000000000871e         db  0x41 ; 'A'
000000000000871f         db  0x0e ; '.'
0000000000008720         db  0x18 ; '.'
0000000000008721         db  0x86 ; '.'
0000000000008722         db  0x03 ; '.'
0000000000008723         db  0x44 ; 'D'
0000000000008724         db  0x0e ; '.'
0000000000008725         db  0x20 ; ' '
0000000000008726         db  0x83 ; '.'
0000000000008727         db  0x04 ; '.'
0000000000008728         db  0x6b ; 'k'
0000000000008729         db  0x0e ; '.'
000000000000872a         db  0x18 ; '.'
000000000000872b         db  0x41 ; 'A'
000000000000872c         db  0x0e ; '.'
000000000000872d         db  0x10 ; '.'
000000000000872e         db  0x42 ; 'B'
000000000000872f         db  0x0e ; '.'
0000000000008730         db  0x08 ; '.'
0000000000008731         db  0x00 ; '.'
0000000000008732         db  0x00 ; '.'
0000000000008733         db  0x00 ; '.'
0000000000008734         db  0x00 ; '.'
0000000000008735         db  0x00 ; '.'
0000000000008736         db  0x00 ; '.'
0000000000008737         db  0x00 ; '.'
0000000000008738         dd         0x0000003c                                  ; Length of the record
000000000000873c         dd         0x00000b94                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000008740         db         0x40, 0xd9, 2 dup (0xff)                    ; begin 0x6080
0000000000008744         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x6103)
0000000000008748         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008749         db  0x42 ; 'B'
000000000000874a         db  0x0e ; '.'
000000000000874b         db  0x10 ; '.'
000000000000874c         db  0x8d ; '.'
000000000000874d         db  0x02 ; '.'
000000000000874e         db  0x42 ; 'B'
000000000000874f         db  0x0e ; '.'
0000000000008750         db  0x18 ; '.'
0000000000008751         db  0x8c ; '.'
0000000000008752         db  0x03 ; '.'
0000000000008753         db  0x44 ; 'D'
0000000000008754         db  0x0e ; '.'
0000000000008755         db  0x20 ; ' '
0000000000008756         db  0x86 ; '.'
0000000000008757         db  0x04 ; '.'
0000000000008758         db  0x41 ; 'A'
0000000000008759         db  0x0e ; '.'
000000000000875a         db  0x28 ; '('
000000000000875b         db  0x83 ; '.'
000000000000875c         db  0x05 ; '.'
000000000000875d         db  0x4a ; 'J'
000000000000875e         db  0x0e ; '.'
000000000000875f         db  0x40 ; '@'
0000000000008760         db  0x02 ; '.'
0000000000008761         db  0x64 ; 'd'
0000000000008762         db  0x0a ; '.'
0000000000008763         db  0x0e ; '.'
0000000000008764         db  0x28 ; '('
0000000000008765         db  0x41 ; 'A'
0000000000008766         db  0x0e ; '.'
0000000000008767         db  0x20 ; ' '
0000000000008768         db  0x41 ; 'A'
0000000000008769         db  0x0e ; '.'
000000000000876a         db  0x18 ; '.'
000000000000876b         db  0x42 ; 'B'
000000000000876c         db  0x0e ; '.'
000000000000876d         db  0x10 ; '.'
000000000000876e         db  0x42 ; 'B'
000000000000876f         db  0x0e ; '.'
0000000000008770         db  0x08 ; '.'
0000000000008771         db  0x41 ; 'A'
0000000000008772         db  0x0b ; '.'
0000000000008773         db  0x00 ; '.'
0000000000008774         db  0x00 ; '.'
0000000000008775         db  0x00 ; '.'
0000000000008776         db  0x00 ; '.'
0000000000008777         db  0x00 ; '.'
0000000000008778         dd         0x0000004c                                  ; Length of the record
000000000000877c         dd         0x00000bd4                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000008780         db         0x90, 0xd9, 2 dup (0xff)                    ; begin 0x6110
0000000000008784         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x618d)
0000000000008788         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008789         db  0x42 ; 'B'
000000000000878a         db  0x0e ; '.'
000000000000878b         db  0x10 ; '.'
000000000000878c         db  0x8c ; '.'
000000000000878d         db  0x02 ; '.'
000000000000878e         db  0x41 ; 'A'
000000000000878f         db  0x0e ; '.'
0000000000008790         db  0x18 ; '.'
0000000000008791         db  0x86 ; '.'
0000000000008792         db  0x03 ; '.'
0000000000008793         db  0x44 ; 'D'
0000000000008794         db  0x0e ; '.'
0000000000008795         db  0x20 ; ' '
0000000000008796         db  0x83 ; '.'
0000000000008797         db  0x04 ; '.'
0000000000008798         db  0x69 ; 'i'
0000000000008799         db  0x0a ; '.'
000000000000879a         db  0x0e ; '.'
000000000000879b         db  0x18 ; '.'
000000000000879c         db  0x41 ; 'A'
000000000000879d         db  0x0e ; '.'
000000000000879e         db  0x10 ; '.'
000000000000879f         db  0x42 ; 'B'
00000000000087a0         db  0x0e ; '.'
00000000000087a1         db  0x08 ; '.'
00000000000087a2         db  0x45 ; 'E'
00000000000087a3         db  0x0b ; '.'
00000000000087a4         db  0x55 ; 'U'
00000000000087a5         db  0x0a ; '.'
00000000000087a6         db  0x0e ; '.'
00000000000087a7         db  0x18 ; '.'
00000000000087a8         db  0x41 ; 'A'
00000000000087a9         db  0x0e ; '.'
00000000000087aa         db  0x10 ; '.'
00000000000087ab         db  0x42 ; 'B'
00000000000087ac         db  0x0e ; '.'
00000000000087ad         db  0x08 ; '.'
00000000000087ae         db  0x48 ; 'H'
00000000000087af         db  0x0b ; '.'
00000000000087b0         db  0x41 ; 'A'
00000000000087b1         db  0x0a ; '.'
00000000000087b2         db  0x0e ; '.'
00000000000087b3         db  0x18 ; '.'
00000000000087b4         db  0x46 ; 'F'
00000000000087b5         db  0x0e ; '.'
00000000000087b6         db  0x10 ; '.'
00000000000087b7         db  0x42 ; 'B'
00000000000087b8         db  0x0e ; '.'
00000000000087b9         db  0x08 ; '.'
00000000000087ba         db  0x47 ; 'G'
00000000000087bb         db  0x0b ; '.'
00000000000087bc         db  0x49 ; 'I'
00000000000087bd         db  0x0e ; '.'
00000000000087be         db  0x18 ; '.'
00000000000087bf         db  0x41 ; 'A'
00000000000087c0         db  0x0e ; '.'
00000000000087c1         db  0x10 ; '.'
00000000000087c2         db  0x42 ; 'B'
00000000000087c3         db  0x0e ; '.'
00000000000087c4         db  0x08 ; '.'
00000000000087c5         db  0x00 ; '.'
00000000000087c6         db  0x00 ; '.'
00000000000087c7         db  0x00 ; '.'
00000000000087c8         dd         0x00000044                                  ; Length of the record
00000000000087cc         dd         0x00000c24                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
00000000000087d0         db         0xc0, 0xd9, 2 dup (0xff)                    ; begin 0x6190
00000000000087d4         db         0x6d, 0x01, 2 dup (0x00)                    ; length 0x16d (end at 0x62fd)
00000000000087d8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000087d9         db  0x42 ; 'B'
00000000000087da         db  0x0e ; '.'
00000000000087db         db  0x10 ; '.'
00000000000087dc         db  0x8e ; '.'
00000000000087dd         db  0x02 ; '.'
00000000000087de         db  0x42 ; 'B'
00000000000087df         db  0x0e ; '.'
00000000000087e0         db  0x18 ; '.'
00000000000087e1         db  0x8d ; '.'
00000000000087e2         db  0x03 ; '.'
00000000000087e3         db  0x42 ; 'B'
00000000000087e4         db  0x0e ; '.'
00000000000087e5         db  0x20 ; ' '
00000000000087e6         db  0x8c ; '.'
00000000000087e7         db  0x04 ; '.'
00000000000087e8         db  0x41 ; 'A'
00000000000087e9         db  0x0e ; '.'
00000000000087ea         db  0x28 ; '('
00000000000087eb         db  0x86 ; '.'
00000000000087ec         db  0x05 ; '.'
00000000000087ed         db  0x41 ; 'A'
00000000000087ee         db  0x0e ; '.'
00000000000087ef         db  0x30 ; '0'
00000000000087f0         db  0x83 ; '.'
00000000000087f1         db  0x06 ; '.'
00000000000087f2         db  0x47 ; 'G'
00000000000087f3         db  0x0e ; '.'
00000000000087f4         db  0xd0 ; '.'
00000000000087f5         db  0x20 ; ' '
00000000000087f6         db  0x02 ; '.'
00000000000087f7         db  0xc2 ; '.'
00000000000087f8         db  0x0a ; '.'
00000000000087f9         db  0x0e ; '.'
00000000000087fa         db  0x30 ; '0'
00000000000087fb         db  0x41 ; 'A'
00000000000087fc         db  0x0e ; '.'
00000000000087fd         db  0x28 ; '('
00000000000087fe         db  0x41 ; 'A'
00000000000087ff         db  0x0e ; '.'
0000000000008800         db  0x20 ; ' '
0000000000008801         db  0x42 ; 'B'
0000000000008802         db  0x0e ; '.'
0000000000008803         db  0x18 ; '.'
0000000000008804         db  0x42 ; 'B'
0000000000008805         db  0x0e ; '.'
0000000000008806         db  0x10 ; '.'
0000000000008807         db  0x42 ; 'B'
0000000000008808         db  0x0e ; '.'
0000000000008809         db  0x08 ; '.'
000000000000880a         db  0x47 ; 'G'
000000000000880b         db  0x0b ; '.'
000000000000880c         db  0x00 ; '.'
000000000000880d         db  0x00 ; '.'
000000000000880e         db  0x00 ; '.'
000000000000880f         db  0x00 ; '.'
0000000000008810         dd         0x0000001c                                  ; Length of the record
0000000000008814         dd         0x00000c6c                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000008818         db         0xe8, 0xda, 2 dup (0xff)                    ; begin 0x6300
000000000000881c         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x6360)
0000000000008820         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008821         db  0x44 ; 'D'
0000000000008822         db  0x0e ; '.'
0000000000008823         db  0x10 ; '.'
0000000000008824         db  0x75 ; 'u'
0000000000008825         db  0x0a ; '.'
0000000000008826         db  0x0e ; '.'
0000000000008827         db  0x08 ; '.'
0000000000008828         db  0x47 ; 'G'
0000000000008829         db  0x0b ; '.'
000000000000882a         db  0x5f ; '_'
000000000000882b         db  0x0e ; '.'
000000000000882c         db  0x08 ; '.'
000000000000882d         db  0x00 ; '.'
000000000000882e         db  0x00 ; '.'
000000000000882f         db  0x00 ; '.'
0000000000008830         dd         0x0000001c                                  ; Length of the record
0000000000008834         dd         0x00000c8c                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000008838         db         0x28, 0xdb, 2 dup (0xff)                    ; begin 0x6360
000000000000883c         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x639c)
0000000000008840         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008841         db  0x44 ; 'D'
0000000000008842         db  0x0e ; '.'
0000000000008843         db  0x10 ; '.'
0000000000008844         db  0x61 ; 'a'
0000000000008845         db  0x0a ; '.'
0000000000008846         db  0x0e ; '.'
0000000000008847         db  0x08 ; '.'
0000000000008848         db  0x4b ; 'K'
0000000000008849         db  0x0b ; '.'
000000000000884a         db  0x4b ; 'K'
000000000000884b         db  0x0e ; '.'
000000000000884c         db  0x08 ; '.'
000000000000884d         db  0x00 ; '.'
000000000000884e         db  0x00 ; '.'
000000000000884f         db  0x00 ; '.'
0000000000008850         dd         0x00000014                                  ; Length of the record
0000000000008854         dd         0x00000cac                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000008858         db         0x48, 0xdb, 2 dup (0xff)                    ; begin 0x63a0
000000000000885c         db         0x29, 3 dup (0x00)                          ; length 0x29 (end at 0x63c9)
0000000000008860         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008861         align      8
0000000000008868         dd         0x00000044                                  ; Length of the record
000000000000886c         dd         0x00000cc4                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
0000000000008870         db         0x60, 0xdb, 2 dup (0xff)                    ; begin 0x63d0
0000000000008874         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x6435)
0000000000008878         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008879         db  0x42 ; 'B'
000000000000887a         db  0x0e ; '.'
000000000000887b         db  0x10 ; '.'
000000000000887c         db  0x8f ; '.'
000000000000887d         db  0x02 ; '.'
000000000000887e         db  0x42 ; 'B'
000000000000887f         db  0x0e ; '.'
0000000000008880         db  0x18 ; '.'
0000000000008881         db  0x8e ; '.'
0000000000008882         db  0x03 ; '.'
0000000000008883         db  0x45 ; 'E'
0000000000008884         db  0x0e ; '.'
0000000000008885         db  0x20 ; ' '
0000000000008886         db  0x8d ; '.'
0000000000008887         db  0x04 ; '.'
0000000000008888         db  0x42 ; 'B'
0000000000008889         db  0x0e ; '.'
000000000000888a         db  0x28 ; '('
000000000000888b         db  0x8c ; '.'
000000000000888c         db  0x05 ; '.'
000000000000888d         db  0x48 ; 'H'
000000000000888e         db  0x0e ; '.'
000000000000888f         db  0x30 ; '0'
0000000000008890         db  0x86 ; '.'
0000000000008891         db  0x06 ; '.'
0000000000008892         db  0x48 ; 'H'
0000000000008893         db  0x0e ; '.'
0000000000008894         db  0x38 ; '8'
0000000000008895         db  0x83 ; '.'
0000000000008896         db  0x07 ; '.'
0000000000008897         db  0x4d ; 'M'
0000000000008898         db  0x0e ; '.'
0000000000008899         db  0x40 ; '@'
000000000000889a         db  0x72 ; 'r'
000000000000889b         db  0x0e ; '.'
000000000000889c         db  0x38 ; '8'
000000000000889d         db  0x41 ; 'A'
000000000000889e         db  0x0e ; '.'
000000000000889f         db  0x30 ; '0'
00000000000088a0         db  0x41 ; 'A'
00000000000088a1         db  0x0e ; '.'
00000000000088a2         db  0x28 ; '('
00000000000088a3         db  0x42 ; 'B'
00000000000088a4         db  0x0e ; '.'
00000000000088a5         db  0x20 ; ' '
00000000000088a6         db  0x42 ; 'B'
00000000000088a7         db  0x0e ; '.'
00000000000088a8         db  0x18 ; '.'
00000000000088a9         db  0x42 ; 'B'
00000000000088aa         db  0x0e ; '.'
00000000000088ab         db  0x10 ; '.'
00000000000088ac         db  0x42 ; 'B'
00000000000088ad         db  0x0e ; '.'
00000000000088ae         db  0x08 ; '.'
00000000000088af         db  0x00 ; '.'
00000000000088b0         dd         0x00000014                                  ; Length of the record
00000000000088b4         dd         0x00000d0c                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
00000000000088b8         db         0x88, 0xdb, 2 dup (0xff)                    ; begin 0x6440
00000000000088bc         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x6442)
00000000000088c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000088c1         align      8
00000000000088c8         dd         0x00000010                                  ; Length of the record
00000000000088cc         dd         0x00000d24                                  ; FDE: parent CIE at 0x7ba8 (FDE encoding = 0x1B)
00000000000088d0         db         0x80, 0xdb, 2 dup (0xff)                    ; begin 0x6450
00000000000088d4         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x645e)
00000000000088d8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000088d9         align      32


        ; Segment Segment 3
        ; Range: [0x208a50; 0x2092a8[ (2136 bytes)
        ; File offset : [35408; 37024[ (1616 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x208a50; 0x208a58[ (8 bytes)
        ; File offset : [35408; 35416[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
0000000000208a50         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x208a58; 0x208a60[ (8 bytes)
        ; File offset : [35416; 35424[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
0000000000208a58         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x208a60; 0x208c18[ (440 bytes)
        ; File offset : [35424; 35864[ (440 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     longopts:
0000000000208a60         db  0xa4 ; '.'                                         ; DATA XREF=main+11
0000000000208a61         db  0x65 ; 'e'
0000000000208a62         db  0x00 ; '.'
0000000000208a63         db  0x00 ; '.'
0000000000208a64         db  0x00 ; '.'
0000000000208a65         db  0x00 ; '.'
0000000000208a66         db  0x00 ; '.'
0000000000208a67         db  0x00 ; '.'
0000000000208a68         db  0x01 ; '.'
0000000000208a69         db  0x00 ; '.'
0000000000208a6a         db  0x00 ; '.'
0000000000208a6b         db  0x00 ; '.'
0000000000208a6c         db  0x00 ; '.'
0000000000208a6d         db  0x00 ; '.'
0000000000208a6e         db  0x00 ; '.'
0000000000208a6f         db  0x00 ; '.'
0000000000208a70         db  0x00 ; '.'
0000000000208a71         db  0x00 ; '.'
0000000000208a72         db  0x00 ; '.'
0000000000208a73         db  0x00 ; '.'
0000000000208a74         db  0x00 ; '.'
0000000000208a75         db  0x00 ; '.'
0000000000208a76         db  0x00 ; '.'
0000000000208a77         db  0x00 ; '.'
0000000000208a78         db  0x62 ; 'b'
0000000000208a79         db  0x00 ; '.'
0000000000208a7a         db  0x00 ; '.'
0000000000208a7b         db  0x00 ; '.'
0000000000208a7c         db  0x00 ; '.'
0000000000208a7d         db  0x00 ; '.'
0000000000208a7e         db  0x00 ; '.'
0000000000208a7f         db  0x00 ; '.'
0000000000208a80         db  0xaa ; '.'
0000000000208a81         db  0x65 ; 'e'
0000000000208a82         db  0x00 ; '.'
0000000000208a83         db  0x00 ; '.'
0000000000208a84         db  0x00 ; '.'
0000000000208a85         db  0x00 ; '.'
0000000000208a86         db  0x00 ; '.'
0000000000208a87         db  0x00 ; '.'
0000000000208a88         db  0x01 ; '.'
0000000000208a89         db  0x00 ; '.'
0000000000208a8a         db  0x00 ; '.'
0000000000208a8b         db  0x00 ; '.'
0000000000208a8c         db  0x00 ; '.'
0000000000208a8d         db  0x00 ; '.'
0000000000208a8e         db  0x00 ; '.'
0000000000208a8f         db  0x00 ; '.'
0000000000208a90         db  0x00 ; '.'
0000000000208a91         db  0x00 ; '.'
0000000000208a92         db  0x00 ; '.'
0000000000208a93         db  0x00 ; '.'
0000000000208a94         db  0x00 ; '.'
0000000000208a95         db  0x00 ; '.'
0000000000208a96         db  0x00 ; '.'
0000000000208a97         db  0x00 ; '.'
0000000000208a98         db  0x63 ; 'c'
0000000000208a99         db  0x00 ; '.'
0000000000208a9a         db  0x00 ; '.'
0000000000208a9b         db  0x00 ; '.'
0000000000208a9c         db  0x00 ; '.'
0000000000208a9d         db  0x00 ; '.'
0000000000208a9e         db  0x00 ; '.'
0000000000208a9f         db  0x00 ; '.'
0000000000208aa0         db  0x02 ; '.'
0000000000208aa1         db  0x6f ; 'o'
0000000000208aa2         db  0x00 ; '.'
0000000000208aa3         db  0x00 ; '.'
0000000000208aa4         db  0x00 ; '.'
0000000000208aa5         db  0x00 ; '.'
0000000000208aa6         db  0x00 ; '.'
0000000000208aa7         db  0x00 ; '.'
0000000000208aa8         db  0x01 ; '.'
0000000000208aa9         db  0x00 ; '.'
0000000000208aaa         db  0x00 ; '.'
0000000000208aab         db  0x00 ; '.'
0000000000208aac         db  0x00 ; '.'
0000000000208aad         db  0x00 ; '.'
0000000000208aae         db  0x00 ; '.'
0000000000208aaf         db  0x00 ; '.'
0000000000208ab0         db  0x00 ; '.'
0000000000208ab1         db  0x00 ; '.'
0000000000208ab2         db  0x00 ; '.'
0000000000208ab3         db  0x00 ; '.'
0000000000208ab4         db  0x00 ; '.'
0000000000208ab5         db  0x00 ; '.'
0000000000208ab6         db  0x00 ; '.'
0000000000208ab7         db  0x00 ; '.'
0000000000208ab8         db  0x66 ; 'f'
0000000000208ab9         db  0x00 ; '.'
0000000000208aba         db  0x00 ; '.'
0000000000208abb         db  0x00 ; '.'
0000000000208abc         db  0x00 ; '.'
0000000000208abd         db  0x00 ; '.'
0000000000208abe         db  0x00 ; '.'
0000000000208abf         db  0x00 ; '.'
0000000000208ac0         db  0xcb ; '.'
0000000000208ac1         db  0x65 ; 'e'
0000000000208ac2         db  0x00 ; '.'
0000000000208ac3         db  0x00 ; '.'
0000000000208ac4         db  0x00 ; '.'
0000000000208ac5         db  0x00 ; '.'
0000000000208ac6         db  0x00 ; '.'
0000000000208ac7         db  0x00 ; '.'
0000000000208ac8         db  0x01 ; '.'
0000000000208ac9         db  0x00 ; '.'
0000000000208aca         db  0x00 ; '.'
0000000000208acb         db  0x00 ; '.'
0000000000208acc         db  0x00 ; '.'
0000000000208acd         db  0x00 ; '.'
0000000000208ace         db  0x00 ; '.'
0000000000208acf         db  0x00 ; '.'
0000000000208ad0         db  0x00 ; '.'
0000000000208ad1         db  0x00 ; '.'
0000000000208ad2         db  0x00 ; '.'
0000000000208ad3         db  0x00 ; '.'
0000000000208ad4         db  0x00 ; '.'
0000000000208ad5         db  0x00 ; '.'
0000000000208ad6         db  0x00 ; '.'
0000000000208ad7         db  0x00 ; '.'
0000000000208ad8         db  0x64 ; 'd'
0000000000208ad9         db  0x00 ; '.'
0000000000208ada         db  0x00 ; '.'
0000000000208adb         db  0x00 ; '.'
0000000000208adc         db  0x00 ; '.'
0000000000208add         db  0x00 ; '.'
0000000000208ade         db  0x00 ; '.'
0000000000208adf         db  0x00 ; '.'
0000000000208ae0         db  0xb5 ; '.'
0000000000208ae1         db  0x65 ; 'e'
0000000000208ae2         db  0x00 ; '.'
0000000000208ae3         db  0x00 ; '.'
0000000000208ae4         db  0x00 ; '.'
0000000000208ae5         db  0x00 ; '.'
0000000000208ae6         db  0x00 ; '.'
0000000000208ae7         db  0x00 ; '.'
0000000000208ae8         db  0x00 ; '.'
0000000000208ae9         db  0x00 ; '.'
0000000000208aea         db  0x00 ; '.'
0000000000208aeb         db  0x00 ; '.'
0000000000208aec         db  0x00 ; '.'
0000000000208aed         db  0x00 ; '.'
0000000000208aee         db  0x00 ; '.'
0000000000208aef         db  0x00 ; '.'
0000000000208af0         db  0x00 ; '.'
0000000000208af1         db  0x00 ; '.'
0000000000208af2         db  0x00 ; '.'
0000000000208af3         db  0x00 ; '.'
0000000000208af4         db  0x00 ; '.'
0000000000208af5         db  0x00 ; '.'
0000000000208af6         db  0x00 ; '.'
0000000000208af7         db  0x00 ; '.'
0000000000208af8         db  0x73 ; 's'
0000000000208af9         db  0x00 ; '.'
0000000000208afa         db  0x00 ; '.'
0000000000208afb         db  0x00 ; '.'
0000000000208afc         db  0x00 ; '.'
0000000000208afd         db  0x00 ; '.'
0000000000208afe         db  0x00 ; '.'
0000000000208aff         db  0x00 ; '.'
0000000000208b00         db  0xc4 ; '.'
0000000000208b01         db  0x65 ; 'e'
0000000000208b02         db  0x00 ; '.'
0000000000208b03         db  0x00 ; '.'
0000000000208b04         db  0x00 ; '.'
0000000000208b05         db  0x00 ; '.'
0000000000208b06         db  0x00 ; '.'
0000000000208b07         db  0x00 ; '.'
0000000000208b08         db  0x01 ; '.'
0000000000208b09         db  0x00 ; '.'
0000000000208b0a         db  0x00 ; '.'
0000000000208b0b         db  0x00 ; '.'
0000000000208b0c         db  0x00 ; '.'
0000000000208b0d         db  0x00 ; '.'
0000000000208b0e         db  0x00 ; '.'
0000000000208b0f         db  0x00 ; '.'
0000000000208b10         db  0x00 ; '.'
0000000000208b11         db  0x00 ; '.'
0000000000208b12         db  0x00 ; '.'
0000000000208b13         db  0x00 ; '.'
0000000000208b14         db  0x00 ; '.'
0000000000208b15         db  0x00 ; '.'
0000000000208b16         db  0x00 ; '.'
0000000000208b17         db  0x00 ; '.'
0000000000208b18         db  0x80 ; '.'
0000000000208b19         db  0x00 ; '.'
0000000000208b1a         db  0x00 ; '.'
0000000000208b1b         db  0x00 ; '.'
0000000000208b1c         db  0x00 ; '.'
0000000000208b1d         db  0x00 ; '.'
0000000000208b1e         db  0x00 ; '.'
0000000000208b1f         db  0x00 ; '.'
0000000000208b20         db  0xd5 ; '.'
0000000000208b21         db  0x65 ; 'e'
0000000000208b22         db  0x00 ; '.'
0000000000208b23         db  0x00 ; '.'
0000000000208b24         db  0x00 ; '.'
0000000000208b25         db  0x00 ; '.'
0000000000208b26         db  0x00 ; '.'
0000000000208b27         db  0x00 ; '.'
0000000000208b28         db  0x00 ; '.'
0000000000208b29         db  0x00 ; '.'
0000000000208b2a         db  0x00 ; '.'
0000000000208b2b         db  0x00 ; '.'
0000000000208b2c         db  0x00 ; '.'
0000000000208b2d         db  0x00 ; '.'
0000000000208b2e         db  0x00 ; '.'
0000000000208b2f         db  0x00 ; '.'
0000000000208b30         db  0x00 ; '.'
0000000000208b31         db  0x00 ; '.'
0000000000208b32         db  0x00 ; '.'
0000000000208b33         db  0x00 ; '.'
0000000000208b34         db  0x00 ; '.'
0000000000208b35         db  0x00 ; '.'
0000000000208b36         db  0x00 ; '.'
0000000000208b37         db  0x00 ; '.'
0000000000208b38         db  0x81 ; '.'
0000000000208b39         db  0x00 ; '.'
0000000000208b3a         db  0x00 ; '.'
0000000000208b3b         db  0x00 ; '.'
0000000000208b3c         db  0x00 ; '.'
0000000000208b3d         db  0x00 ; '.'
0000000000208b3e         db  0x00 ; '.'
0000000000208b3f         db  0x00 ; '.'
0000000000208b40         db  0xe0 ; '.'
0000000000208b41         db  0x65 ; 'e'
0000000000208b42         db  0x00 ; '.'
0000000000208b43         db  0x00 ; '.'
0000000000208b44         db  0x00 ; '.'
0000000000208b45         db  0x00 ; '.'
0000000000208b46         db  0x00 ; '.'
0000000000208b47         db  0x00 ; '.'
0000000000208b48         db  0x00 ; '.'
0000000000208b49         db  0x00 ; '.'
0000000000208b4a         db  0x00 ; '.'
0000000000208b4b         db  0x00 ; '.'
0000000000208b4c         db  0x00 ; '.'
0000000000208b4d         db  0x00 ; '.'
0000000000208b4e         db  0x00 ; '.'
0000000000208b4f         db  0x00 ; '.'
0000000000208b50         db  0x00 ; '.'
0000000000208b51         db  0x00 ; '.'
0000000000208b52         db  0x00 ; '.'
0000000000208b53         db  0x00 ; '.'
0000000000208b54         db  0x00 ; '.'
0000000000208b55         db  0x00 ; '.'
0000000000208b56         db  0x00 ; '.'
0000000000208b57         db  0x00 ; '.'
0000000000208b58         db  0x7a ; 'z'
0000000000208b59         db  0x00 ; '.'
0000000000208b5a         db  0x00 ; '.'
0000000000208b5b         db  0x00 ; '.'
0000000000208b5c         db  0x00 ; '.'
0000000000208b5d         db  0x00 ; '.'
0000000000208b5e         db  0x00 ; '.'
0000000000208b5f         db  0x00 ; '.'
0000000000208b60         db  0xf0 ; '.'
0000000000208b61         db  0x65 ; 'e'
0000000000208b62         db  0x00 ; '.'
0000000000208b63         db  0x00 ; '.'
0000000000208b64         db  0x00 ; '.'
0000000000208b65         db  0x00 ; '.'
0000000000208b66         db  0x00 ; '.'
0000000000208b67         db  0x00 ; '.'
0000000000208b68         db  0x00 ; '.'
0000000000208b69         db  0x00 ; '.'
0000000000208b6a         db  0x00 ; '.'
0000000000208b6b         db  0x00 ; '.'
0000000000208b6c         db  0x00 ; '.'
0000000000208b6d         db  0x00 ; '.'
0000000000208b6e         db  0x00 ; '.'
0000000000208b6f         db  0x00 ; '.'
0000000000208b70         db  0x00 ; '.'
0000000000208b71         db  0x00 ; '.'
0000000000208b72         db  0x00 ; '.'
0000000000208b73         db  0x00 ; '.'
0000000000208b74         db  0x00 ; '.'
0000000000208b75         db  0x00 ; '.'
0000000000208b76         db  0x00 ; '.'
0000000000208b77         db  0x00 ; '.'
0000000000208b78         db  0x7e ; '~'
0000000000208b79         db  0xff ; '.'
0000000000208b7a         db  0xff ; '.'
0000000000208b7b         db  0xff ; '.'
0000000000208b7c         db  0x00 ; '.'
0000000000208b7d         db  0x00 ; '.'
0000000000208b7e         db  0x00 ; '.'
0000000000208b7f         db  0x00 ; '.'
0000000000208b80         db  0xf5 ; '.'
0000000000208b81         db  0x65 ; 'e'
0000000000208b82         db  0x00 ; '.'
0000000000208b83         db  0x00 ; '.'
0000000000208b84         db  0x00 ; '.'
0000000000208b85         db  0x00 ; '.'
0000000000208b86         db  0x00 ; '.'
0000000000208b87         db  0x00 ; '.'
0000000000208b88         db  0x00 ; '.'
0000000000208b89         db  0x00 ; '.'
0000000000208b8a         db  0x00 ; '.'
0000000000208b8b         db  0x00 ; '.'
0000000000208b8c         db  0x00 ; '.'
0000000000208b8d         db  0x00 ; '.'
0000000000208b8e         db  0x00 ; '.'
0000000000208b8f         db  0x00 ; '.'
0000000000208b90         db  0x00 ; '.'
0000000000208b91         db  0x00 ; '.'
0000000000208b92         db  0x00 ; '.'
0000000000208b93         db  0x00 ; '.'
0000000000208b94         db  0x00 ; '.'
0000000000208b95         db  0x00 ; '.'
0000000000208b96         db  0x00 ; '.'
0000000000208b97         db  0x00 ; '.'
0000000000208b98         db  0x7d ; '}'
0000000000208b99         db  0xff ; '.'
0000000000208b9a         db  0xff ; '.'
0000000000208b9b         db  0xff ; '.'
0000000000208b9c         db  0x00 ; '.'
0000000000208b9d         db  0x00 ; '.'
0000000000208b9e         db  0x00 ; '.'
0000000000208b9f         db  0x00 ; '.'
0000000000208ba0         db  0x00 ; '.'
0000000000208ba1         db  0x00 ; '.'
0000000000208ba2         db  0x00 ; '.'
0000000000208ba3         db  0x00 ; '.'
0000000000208ba4         db  0x00 ; '.'
0000000000208ba5         db  0x00 ; '.'
0000000000208ba6         db  0x00 ; '.'
0000000000208ba7         db  0x00 ; '.'
0000000000208ba8         db  0x00 ; '.'
0000000000208ba9         db  0x00 ; '.'
0000000000208baa         db  0x00 ; '.'
0000000000208bab         db  0x00 ; '.'
0000000000208bac         db  0x00 ; '.'
0000000000208bad         db  0x00 ; '.'
0000000000208bae         db  0x00 ; '.'
0000000000208baf         db  0x00 ; '.'
0000000000208bb0         db  0x00 ; '.'
0000000000208bb1         db  0x00 ; '.'
0000000000208bb2         db  0x00 ; '.'
0000000000208bb3         db  0x00 ; '.'
0000000000208bb4         db  0x00 ; '.'
0000000000208bb5         db  0x00 ; '.'
0000000000208bb6         db  0x00 ; '.'
0000000000208bb7         db  0x00 ; '.'
0000000000208bb8         db  0x00 ; '.'
0000000000208bb9         db  0x00 ; '.'
0000000000208bba         db  0x00 ; '.'
0000000000208bbb         db  0x00 ; '.'
0000000000208bbc         db  0x00 ; '.'
0000000000208bbd         db  0x00 ; '.'
0000000000208bbe         db  0x00 ; '.'
0000000000208bbf         db  0x00 ; '.'
                     quoting_style_args:
0000000000208bc0         db  0x79 ; 'y'
0000000000208bc1         db  0x70 ; 'p'
0000000000208bc2         db  0x00 ; '.'
0000000000208bc3         db  0x00 ; '.'
0000000000208bc4         db  0x00 ; '.'
0000000000208bc5         db  0x00 ; '.'
0000000000208bc6         db  0x00 ; '.'
0000000000208bc7         db  0x00 ; '.'
0000000000208bc8         db  0x81 ; '.'
0000000000208bc9         db  0x70 ; 'p'
0000000000208bca         db  0x00 ; '.'
0000000000208bcb         db  0x00 ; '.'
0000000000208bcc         db  0x00 ; '.'
0000000000208bcd         db  0x00 ; '.'
0000000000208bce         db  0x00 ; '.'
0000000000208bcf         db  0x00 ; '.'
0000000000208bd0         db  0x87 ; '.'
0000000000208bd1         db  0x70 ; 'p'
0000000000208bd2         db  0x00 ; '.'
0000000000208bd3         db  0x00 ; '.'
0000000000208bd4         db  0x00 ; '.'
0000000000208bd5         db  0x00 ; '.'
0000000000208bd6         db  0x00 ; '.'
0000000000208bd7         db  0x00 ; '.'
0000000000208bd8         db  0x94 ; '.'
0000000000208bd9         db  0x70 ; 'p'
0000000000208bda         db  0x00 ; '.'
0000000000208bdb         db  0x00 ; '.'
0000000000208bdc         db  0x00 ; '.'
0000000000208bdd         db  0x00 ; '.'
0000000000208bde         db  0x00 ; '.'
0000000000208bdf         db  0x00 ; '.'
0000000000208be0         db  0xa1 ; '.'
0000000000208be1         db  0x70 ; 'p'
0000000000208be2         db  0x00 ; '.'
0000000000208be3         db  0x00 ; '.'
0000000000208be4         db  0x00 ; '.'
0000000000208be5         db  0x00 ; '.'
0000000000208be6         db  0x00 ; '.'
0000000000208be7         db  0x00 ; '.'
0000000000208be8         db  0x9e ; '.'
0000000000208be9         db  0x64 ; 'd'
0000000000208bea         db  0x00 ; '.'
0000000000208beb         db  0x00 ; '.'
0000000000208bec         db  0x00 ; '.'
0000000000208bed         db  0x00 ; '.'
0000000000208bee         db  0x00 ; '.'
0000000000208bef         db  0x00 ; '.'
0000000000208bf0         db  0xb5 ; '.'
0000000000208bf1         db  0x70 ; 'p'
0000000000208bf2         db  0x00 ; '.'
0000000000208bf3         db  0x00 ; '.'
0000000000208bf4         db  0x00 ; '.'
0000000000208bf5         db  0x00 ; '.'
0000000000208bf6         db  0x00 ; '.'
0000000000208bf7         db  0x00 ; '.'
0000000000208bf8         db  0x9a ; '.'
0000000000208bf9         db  0x70 ; 'p'
0000000000208bfa         db  0x00 ; '.'
0000000000208bfb         db  0x00 ; '.'
0000000000208bfc         db  0x00 ; '.'
0000000000208bfd         db  0x00 ; '.'
0000000000208bfe         db  0x00 ; '.'
0000000000208bff         db  0x00 ; '.'
0000000000208c00         db  0x65 ; 'e'
0000000000208c01         db  0x65 ; 'e'
0000000000208c02         db  0x00 ; '.'
0000000000208c03         db  0x00 ; '.'
0000000000208c04         db  0x00 ; '.'
0000000000208c05         db  0x00 ; '.'
0000000000208c06         db  0x00 ; '.'
0000000000208c07         db  0x00 ; '.'
0000000000208c08         db  0xbd ; '.'
0000000000208c09         db  0x70 ; 'p'
0000000000208c0a         db  0x00 ; '.'
0000000000208c0b         db  0x00 ; '.'
0000000000208c0c         db  0x00 ; '.'
0000000000208c0d         db  0x00 ; '.'
0000000000208c0e         db  0x00 ; '.'
0000000000208c0f         db  0x00 ; '.'
0000000000208c10         db  0x00 ; '.'
0000000000208c11         db  0x00 ; '.'
0000000000208c12         db  0x00 ; '.'
0000000000208c13         db  0x00 ; '.'
0000000000208c14         db  0x00 ; '.'
0000000000208c15         db  0x00 ; '.'
0000000000208c16         db  0x00 ; '.'
0000000000208c17         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x208c18; 0x208e08[ (496 bytes)
        ; File offset : [35864; 36360[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
0000000000208c18         db  0x01 ; '.'
0000000000208c19         db  0x00 ; '.'
0000000000208c1a         db  0x00 ; '.'
0000000000208c1b         db  0x00 ; '.'
0000000000208c1c         db  0x00 ; '.'
0000000000208c1d         db  0x00 ; '.'
0000000000208c1e         db  0x00 ; '.'
0000000000208c1f         db  0x00 ; '.'
0000000000208c20         db  0x01 ; '.'
0000000000208c21         db  0x00 ; '.'
0000000000208c22         db  0x00 ; '.'
0000000000208c23         db  0x00 ; '.'
0000000000208c24         db  0x00 ; '.'
0000000000208c25         db  0x00 ; '.'
0000000000208c26         db  0x00 ; '.'
0000000000208c27         db  0x00 ; '.'
0000000000208c28         db  0x0c ; '.'
0000000000208c29         db  0x00 ; '.'
0000000000208c2a         db  0x00 ; '.'
0000000000208c2b         db  0x00 ; '.'
0000000000208c2c         db  0x00 ; '.'
0000000000208c2d         db  0x00 ; '.'
0000000000208c2e         db  0x00 ; '.'
0000000000208c2f         db  0x00 ; '.'
0000000000208c30         db  0x48 ; 'H'
0000000000208c31         db  0x16 ; '.'
0000000000208c32         db  0x00 ; '.'
0000000000208c33         db  0x00 ; '.'
0000000000208c34         db  0x00 ; '.'
0000000000208c35         db  0x00 ; '.'
0000000000208c36         db  0x00 ; '.'
0000000000208c37         db  0x00 ; '.'
0000000000208c38         db  0x0d ; '.'
0000000000208c39         db  0x00 ; '.'
0000000000208c3a         db  0x00 ; '.'
0000000000208c3b         db  0x00 ; '.'
0000000000208c3c         db  0x00 ; '.'
0000000000208c3d         db  0x00 ; '.'
0000000000208c3e         db  0x00 ; '.'
0000000000208c3f         db  0x00 ; '.'
0000000000208c40         db  0x60 ; '`'
0000000000208c41         db  0x64 ; 'd'
0000000000208c42         db  0x00 ; '.'
0000000000208c43         db  0x00 ; '.'
0000000000208c44         db  0x00 ; '.'
0000000000208c45         db  0x00 ; '.'
0000000000208c46         db  0x00 ; '.'
0000000000208c47         db  0x00 ; '.'
0000000000208c48         db  0x19 ; '.'
0000000000208c49         db  0x00 ; '.'
0000000000208c4a         db  0x00 ; '.'
0000000000208c4b         db  0x00 ; '.'
0000000000208c4c         db  0x00 ; '.'
0000000000208c4d         db  0x00 ; '.'
0000000000208c4e         db  0x00 ; '.'
0000000000208c4f         db  0x00 ; '.'
0000000000208c50         db  0x50 ; 'P'
0000000000208c51         db  0x8a ; '.'
0000000000208c52         db  0x20 ; ' '
0000000000208c53         db  0x00 ; '.'
0000000000208c54         db  0x00 ; '.'
0000000000208c55         db  0x00 ; '.'
0000000000208c56         db  0x00 ; '.'
0000000000208c57         db  0x00 ; '.'
0000000000208c58         db  0x1b ; '.'
0000000000208c59         db  0x00 ; '.'
0000000000208c5a         db  0x00 ; '.'
0000000000208c5b         db  0x00 ; '.'
0000000000208c5c         db  0x00 ; '.'
0000000000208c5d         db  0x00 ; '.'
0000000000208c5e         db  0x00 ; '.'
0000000000208c5f         db  0x00 ; '.'
0000000000208c60         db  0x08 ; '.'
0000000000208c61         db  0x00 ; '.'
0000000000208c62         db  0x00 ; '.'
0000000000208c63         db  0x00 ; '.'
0000000000208c64         db  0x00 ; '.'
0000000000208c65         db  0x00 ; '.'
0000000000208c66         db  0x00 ; '.'
0000000000208c67         db  0x00 ; '.'
0000000000208c68         db  0x1a ; '.'
0000000000208c69         db  0x00 ; '.'
0000000000208c6a         db  0x00 ; '.'
0000000000208c6b         db  0x00 ; '.'
0000000000208c6c         db  0x00 ; '.'
0000000000208c6d         db  0x00 ; '.'
0000000000208c6e         db  0x00 ; '.'
0000000000208c6f         db  0x00 ; '.'
0000000000208c70         db  0x58 ; 'X'
0000000000208c71         db  0x8a ; '.'
0000000000208c72         db  0x20 ; ' '
0000000000208c73         db  0x00 ; '.'
0000000000208c74         db  0x00 ; '.'
0000000000208c75         db  0x00 ; '.'
0000000000208c76         db  0x00 ; '.'
0000000000208c77         db  0x00 ; '.'
0000000000208c78         db  0x1c ; '.'
0000000000208c79         db  0x00 ; '.'
0000000000208c7a         db  0x00 ; '.'
0000000000208c7b         db  0x00 ; '.'
0000000000208c7c         db  0x00 ; '.'
0000000000208c7d         db  0x00 ; '.'
0000000000208c7e         db  0x00 ; '.'
0000000000208c7f         db  0x00 ; '.'
0000000000208c80         db  0x08 ; '.'
0000000000208c81         db  0x00 ; '.'
0000000000208c82         db  0x00 ; '.'
0000000000208c83         db  0x00 ; '.'
0000000000208c84         db  0x00 ; '.'
0000000000208c85         db  0x00 ; '.'
0000000000208c86         db  0x00 ; '.'
0000000000208c87         db  0x00 ; '.'
0000000000208c88         db  0xf5 ; '.'
0000000000208c89         db  0xfe ; '.'
0000000000208c8a         db  0xff ; '.'
0000000000208c8b         db  0x6f ; 'o'
0000000000208c8c         db  0x00 ; '.'
0000000000208c8d         db  0x00 ; '.'
0000000000208c8e         db  0x00 ; '.'
0000000000208c8f         db  0x00 ; '.'
0000000000208c90         db  0x98 ; '.'
0000000000208c91         db  0x02 ; '.'
0000000000208c92         db  0x00 ; '.'
0000000000208c93         db  0x00 ; '.'
0000000000208c94         db  0x00 ; '.'
0000000000208c95         db  0x00 ; '.'
0000000000208c96         db  0x00 ; '.'
0000000000208c97         db  0x00 ; '.'
0000000000208c98         db  0x05 ; '.'
0000000000208c99         db  0x00 ; '.'
0000000000208c9a         db  0x00 ; '.'
0000000000208c9b         db  0x00 ; '.'
0000000000208c9c         db  0x00 ; '.'
0000000000208c9d         db  0x00 ; '.'
0000000000208c9e         db  0x00 ; '.'
0000000000208c9f         db  0x00 ; '.'
0000000000208ca0         db  0x70 ; 'p'
0000000000208ca1         db  0x09 ; '.'
0000000000208ca2         db  0x00 ; '.'
0000000000208ca3         db  0x00 ; '.'
0000000000208ca4         db  0x00 ; '.'
0000000000208ca5         db  0x00 ; '.'
0000000000208ca6         db  0x00 ; '.'
0000000000208ca7         db  0x00 ; '.'
0000000000208ca8         db  0x06 ; '.'
0000000000208ca9         db  0x00 ; '.'
0000000000208caa         db  0x00 ; '.'
0000000000208cab         db  0x00 ; '.'
0000000000208cac         db  0x00 ; '.'
0000000000208cad         db  0x00 ; '.'
0000000000208cae         db  0x00 ; '.'
0000000000208caf         db  0x00 ; '.'
0000000000208cb0         db  0xe0 ; '.'
0000000000208cb1         db  0x02 ; '.'
0000000000208cb2         db  0x00 ; '.'
0000000000208cb3         db  0x00 ; '.'
0000000000208cb4         db  0x00 ; '.'
0000000000208cb5         db  0x00 ; '.'
0000000000208cb6         db  0x00 ; '.'
0000000000208cb7         db  0x00 ; '.'
0000000000208cb8         db  0x0a ; '.'
0000000000208cb9         db  0x00 ; '.'
0000000000208cba         db  0x00 ; '.'
0000000000208cbb         db  0x00 ; '.'
0000000000208cbc         db  0x00 ; '.'
0000000000208cbd         db  0x00 ; '.'
0000000000208cbe         db  0x00 ; '.'
0000000000208cbf         db  0x00 ; '.'
0000000000208cc0         db  0x24 ; '$'
0000000000208cc1         db  0x03 ; '.'
0000000000208cc2         db  0x00 ; '.'
0000000000208cc3         db  0x00 ; '.'
0000000000208cc4         db  0x00 ; '.'
0000000000208cc5         db  0x00 ; '.'
0000000000208cc6         db  0x00 ; '.'
0000000000208cc7         db  0x00 ; '.'
0000000000208cc8         db  0x0b ; '.'
0000000000208cc9         db  0x00 ; '.'
0000000000208cca         db  0x00 ; '.'
0000000000208ccb         db  0x00 ; '.'
0000000000208ccc         db  0x00 ; '.'
0000000000208ccd         db  0x00 ; '.'
0000000000208cce         db  0x00 ; '.'
0000000000208ccf         db  0x00 ; '.'
0000000000208cd0         db  0x18 ; '.'
0000000000208cd1         db  0x00 ; '.'
0000000000208cd2         db  0x00 ; '.'
0000000000208cd3         db  0x00 ; '.'
0000000000208cd4         db  0x00 ; '.'
0000000000208cd5         db  0x00 ; '.'
0000000000208cd6         db  0x00 ; '.'
0000000000208cd7         db  0x00 ; '.'
0000000000208cd8         db  0x15 ; '.'
0000000000208cd9         db  0x00 ; '.'
0000000000208cda         db  0x00 ; '.'
0000000000208cdb         db  0x00 ; '.'
0000000000208cdc         db  0x00 ; '.'
0000000000208cdd         db  0x00 ; '.'
0000000000208cde         db  0x00 ; '.'
0000000000208cdf         db  0x00 ; '.'
0000000000208ce0         db  0x00 ; '.'
0000000000208ce1         db  0x00 ; '.'
0000000000208ce2         db  0x00 ; '.'
0000000000208ce3         db  0x00 ; '.'
0000000000208ce4         db  0x00 ; '.'
0000000000208ce5         db  0x00 ; '.'
0000000000208ce6         db  0x00 ; '.'
0000000000208ce7         db  0x00 ; '.'
0000000000208ce8         db  0x03 ; '.'
0000000000208ce9         db  0x00 ; '.'
0000000000208cea         db  0x00 ; '.'
0000000000208ceb         db  0x00 ; '.'
0000000000208cec         db  0x00 ; '.'
0000000000208ced         db  0x00 ; '.'
0000000000208cee         db  0x00 ; '.'
0000000000208cef         db  0x00 ; '.'
0000000000208cf0         db  0x08 ; '.'
0000000000208cf1         db  0x8e ; '.'
0000000000208cf2         db  0x20 ; ' '
0000000000208cf3         db  0x00 ; '.'
0000000000208cf4         db  0x00 ; '.'
0000000000208cf5         db  0x00 ; '.'
0000000000208cf6         db  0x00 ; '.'
0000000000208cf7         db  0x00 ; '.'
0000000000208cf8         db  0x02 ; '.'
0000000000208cf9         db  0x00 ; '.'
0000000000208cfa         db  0x00 ; '.'
0000000000208cfb         db  0x00 ; '.'
0000000000208cfc         db  0x00 ; '.'
0000000000208cfd         db  0x00 ; '.'
0000000000208cfe         db  0x00 ; '.'
0000000000208cff         db  0x00 ; '.'
0000000000208d00         db  0x28 ; '('
0000000000208d01         db  0x05 ; '.'
0000000000208d02         db  0x00 ; '.'
0000000000208d03         db  0x00 ; '.'
0000000000208d04         db  0x00 ; '.'
0000000000208d05         db  0x00 ; '.'
0000000000208d06         db  0x00 ; '.'
0000000000208d07         db  0x00 ; '.'
0000000000208d08         db  0x14 ; '.'
0000000000208d09         db  0x00 ; '.'
0000000000208d0a         db  0x00 ; '.'
0000000000208d0b         db  0x00 ; '.'
0000000000208d0c         db  0x00 ; '.'
0000000000208d0d         db  0x00 ; '.'
0000000000208d0e         db  0x00 ; '.'
0000000000208d0f         db  0x00 ; '.'
0000000000208d10         db  0x07 ; '.'
0000000000208d11         db  0x00 ; '.'
0000000000208d12         db  0x00 ; '.'
0000000000208d13         db  0x00 ; '.'
0000000000208d14         db  0x00 ; '.'
0000000000208d15         db  0x00 ; '.'
0000000000208d16         db  0x00 ; '.'
0000000000208d17         db  0x00 ; '.'
0000000000208d18         db  0x17 ; '.'
0000000000208d19         db  0x00 ; '.'
0000000000208d1a         db  0x00 ; '.'
0000000000208d1b         db  0x00 ; '.'
0000000000208d1c         db  0x00 ; '.'
0000000000208d1d         db  0x00 ; '.'
0000000000208d1e         db  0x00 ; '.'
0000000000208d1f         db  0x00 ; '.'
0000000000208d20         db  0x20 ; ' '
0000000000208d21         db  0x11 ; '.'
0000000000208d22         db  0x00 ; '.'
0000000000208d23         db  0x00 ; '.'
0000000000208d24         db  0x00 ; '.'
0000000000208d25         db  0x00 ; '.'
0000000000208d26         db  0x00 ; '.'
0000000000208d27         db  0x00 ; '.'
0000000000208d28         db  0x07 ; '.'
0000000000208d29         db  0x00 ; '.'
0000000000208d2a         db  0x00 ; '.'
0000000000208d2b         db  0x00 ; '.'
0000000000208d2c         db  0x00 ; '.'
0000000000208d2d         db  0x00 ; '.'
0000000000208d2e         db  0x00 ; '.'
0000000000208d2f         db  0x00 ; '.'
0000000000208d30         db  0x90 ; '.'
0000000000208d31         db  0x0d ; '.'
0000000000208d32         db  0x00 ; '.'
0000000000208d33         db  0x00 ; '.'
0000000000208d34         db  0x00 ; '.'
0000000000208d35         db  0x00 ; '.'
0000000000208d36         db  0x00 ; '.'
0000000000208d37         db  0x00 ; '.'
0000000000208d38         db  0x08 ; '.'
0000000000208d39         db  0x00 ; '.'
0000000000208d3a         db  0x00 ; '.'
0000000000208d3b         db  0x00 ; '.'
0000000000208d3c         db  0x00 ; '.'
0000000000208d3d         db  0x00 ; '.'
0000000000208d3e         db  0x00 ; '.'
0000000000208d3f         db  0x00 ; '.'
0000000000208d40         db  0x90 ; '.'
0000000000208d41         db  0x03 ; '.'
0000000000208d42         db  0x00 ; '.'
0000000000208d43         db  0x00 ; '.'
0000000000208d44         db  0x00 ; '.'
0000000000208d45         db  0x00 ; '.'
0000000000208d46         db  0x00 ; '.'
0000000000208d47         db  0x00 ; '.'
0000000000208d48         db  0x09 ; '.'
0000000000208d49         db  0x00 ; '.'
0000000000208d4a         db  0x00 ; '.'
0000000000208d4b         db  0x00 ; '.'
0000000000208d4c         db  0x00 ; '.'
0000000000208d4d         db  0x00 ; '.'
0000000000208d4e         db  0x00 ; '.'
0000000000208d4f         db  0x00 ; '.'
0000000000208d50         db  0x18 ; '.'
0000000000208d51         db  0x00 ; '.'
0000000000208d52         db  0x00 ; '.'
0000000000208d53         db  0x00 ; '.'
0000000000208d54         db  0x00 ; '.'
0000000000208d55         db  0x00 ; '.'
0000000000208d56         db  0x00 ; '.'
0000000000208d57         db  0x00 ; '.'
0000000000208d58         db  0x1e ; '.'
0000000000208d59         db  0x00 ; '.'
0000000000208d5a         db  0x00 ; '.'
0000000000208d5b         db  0x00 ; '.'
0000000000208d5c         db  0x00 ; '.'
0000000000208d5d         db  0x00 ; '.'
0000000000208d5e         db  0x00 ; '.'
0000000000208d5f         db  0x00 ; '.'
0000000000208d60         db  0x08 ; '.'
0000000000208d61         db  0x00 ; '.'
0000000000208d62         db  0x00 ; '.'
0000000000208d63         db  0x00 ; '.'
0000000000208d64         db  0x00 ; '.'
0000000000208d65         db  0x00 ; '.'
0000000000208d66         db  0x00 ; '.'
0000000000208d67         db  0x00 ; '.'
0000000000208d68         db  0xfb ; '.'
0000000000208d69         db  0xff ; '.'
0000000000208d6a         db  0xff ; '.'
0000000000208d6b         db  0x6f ; 'o'
0000000000208d6c         db  0x00 ; '.'
0000000000208d6d         db  0x00 ; '.'
0000000000208d6e         db  0x00 ; '.'
0000000000208d6f         db  0x00 ; '.'
0000000000208d70         db  0x01 ; '.'
0000000000208d71         db  0x00 ; '.'
0000000000208d72         db  0x00 ; '.'
0000000000208d73         db  0x08 ; '.'
0000000000208d74         db  0x00 ; '.'
0000000000208d75         db  0x00 ; '.'
0000000000208d76         db  0x00 ; '.'
0000000000208d77         db  0x00 ; '.'
0000000000208d78         db  0xfe ; '.'
0000000000208d79         db  0xff ; '.'
0000000000208d7a         db  0xff ; '.'
0000000000208d7b         db  0x6f ; 'o'
0000000000208d7c         db  0x00 ; '.'
0000000000208d7d         db  0x00 ; '.'
0000000000208d7e         db  0x00 ; '.'
0000000000208d7f         db  0x00 ; '.'
0000000000208d80         db  0x20 ; ' '
0000000000208d81         db  0x0d ; '.'
0000000000208d82         db  0x00 ; '.'
0000000000208d83         db  0x00 ; '.'
0000000000208d84         db  0x00 ; '.'
0000000000208d85         db  0x00 ; '.'
0000000000208d86         db  0x00 ; '.'
0000000000208d87         db  0x00 ; '.'
0000000000208d88         db  0xff ; '.'
0000000000208d89         db  0xff ; '.'
0000000000208d8a         db  0xff ; '.'
0000000000208d8b         db  0x6f ; 'o'
0000000000208d8c         db  0x00 ; '.'
0000000000208d8d         db  0x00 ; '.'
0000000000208d8e         db  0x00 ; '.'
0000000000208d8f         db  0x00 ; '.'
0000000000208d90         db  0x01 ; '.'
0000000000208d91         db  0x00 ; '.'
0000000000208d92         db  0x00 ; '.'
0000000000208d93         db  0x00 ; '.'
0000000000208d94         db  0x00 ; '.'
0000000000208d95         db  0x00 ; '.'
0000000000208d96         db  0x00 ; '.'
0000000000208d97         db  0x00 ; '.'
0000000000208d98         db  0xf0 ; '.'
0000000000208d99         db  0xff ; '.'
0000000000208d9a         db  0xff ; '.'
0000000000208d9b         db  0x6f ; 'o'
0000000000208d9c         db  0x00 ; '.'
0000000000208d9d         db  0x00 ; '.'
0000000000208d9e         db  0x00 ; '.'
0000000000208d9f         db  0x00 ; '.'
0000000000208da0         db  0x94 ; '.'
0000000000208da1         db  0x0c ; '.'
0000000000208da2         db  0x00 ; '.'
0000000000208da3         db  0x00 ; '.'
0000000000208da4         db  0x00 ; '.'
0000000000208da5         db  0x00 ; '.'
0000000000208da6         db  0x00 ; '.'
0000000000208da7         db  0x00 ; '.'
0000000000208da8         db  0xf9 ; '.'
0000000000208da9         db  0xff ; '.'
0000000000208daa         db  0xff ; '.'
0000000000208dab         db  0x6f ; 'o'
0000000000208dac         db  0x00 ; '.'
0000000000208dad         db  0x00 ; '.'
0000000000208dae         db  0x00 ; '.'
0000000000208daf         db  0x00 ; '.'
0000000000208db0         db  0x1a ; '.'
0000000000208db1         db  0x00 ; '.'
0000000000208db2         db  0x00 ; '.'
0000000000208db3         db  0x00 ; '.'
0000000000208db4         db  0x00 ; '.'
0000000000208db5         db  0x00 ; '.'
0000000000208db6         db  0x00 ; '.'
0000000000208db7         db  0x00 ; '.'
0000000000208db8         db  0x00 ; '.'
0000000000208db9         db  0x00 ; '.'
0000000000208dba         db  0x00 ; '.'
0000000000208dbb         db  0x00 ; '.'
0000000000208dbc         db  0x00 ; '.'
0000000000208dbd         db  0x00 ; '.'
0000000000208dbe         db  0x00 ; '.'
0000000000208dbf         db  0x00 ; '.'
0000000000208dc0         db  0x00 ; '.'
0000000000208dc1         db  0x00 ; '.'
0000000000208dc2         db  0x00 ; '.'
0000000000208dc3         db  0x00 ; '.'
0000000000208dc4         db  0x00 ; '.'
0000000000208dc5         db  0x00 ; '.'
0000000000208dc6         db  0x00 ; '.'
0000000000208dc7         db  0x00 ; '.'
0000000000208dc8         db  0x00 ; '.'
0000000000208dc9         db  0x00 ; '.'
0000000000208dca         db  0x00 ; '.'
0000000000208dcb         db  0x00 ; '.'
0000000000208dcc         db  0x00 ; '.'
0000000000208dcd         db  0x00 ; '.'
0000000000208dce         db  0x00 ; '.'
0000000000208dcf         db  0x00 ; '.'
0000000000208dd0         db  0x00 ; '.'
0000000000208dd1         db  0x00 ; '.'
0000000000208dd2         db  0x00 ; '.'
0000000000208dd3         db  0x00 ; '.'
0000000000208dd4         db  0x00 ; '.'
0000000000208dd5         db  0x00 ; '.'
0000000000208dd6         db  0x00 ; '.'
0000000000208dd7         db  0x00 ; '.'
0000000000208dd8         db  0x00 ; '.'
0000000000208dd9         db  0x00 ; '.'
0000000000208dda         db  0x00 ; '.'
0000000000208ddb         db  0x00 ; '.'
0000000000208ddc         db  0x00 ; '.'
0000000000208ddd         db  0x00 ; '.'
0000000000208dde         db  0x00 ; '.'
0000000000208ddf         db  0x00 ; '.'
0000000000208de0         db  0x00 ; '.'
0000000000208de1         db  0x00 ; '.'
0000000000208de2         db  0x00 ; '.'
0000000000208de3         db  0x00 ; '.'
0000000000208de4         db  0x00 ; '.'
0000000000208de5         db  0x00 ; '.'
0000000000208de6         db  0x00 ; '.'
0000000000208de7         db  0x00 ; '.'
0000000000208de8         db  0x00 ; '.'
0000000000208de9         db  0x00 ; '.'
0000000000208dea         db  0x00 ; '.'
0000000000208deb         db  0x00 ; '.'
0000000000208dec         db  0x00 ; '.'
0000000000208ded         db  0x00 ; '.'
0000000000208dee         db  0x00 ; '.'
0000000000208def         db  0x00 ; '.'
0000000000208df0         db  0x00 ; '.'
0000000000208df1         db  0x00 ; '.'
0000000000208df2         db  0x00 ; '.'
0000000000208df3         db  0x00 ; '.'
0000000000208df4         db  0x00 ; '.'
0000000000208df5         db  0x00 ; '.'
0000000000208df6         db  0x00 ; '.'
0000000000208df7         db  0x00 ; '.'
0000000000208df8         db  0x00 ; '.'
0000000000208df9         db  0x00 ; '.'
0000000000208dfa         db  0x00 ; '.'
0000000000208dfb         db  0x00 ; '.'
0000000000208dfc         db  0x00 ; '.'
0000000000208dfd         db  0x00 ; '.'
0000000000208dfe         db  0x00 ; '.'
0000000000208dff         db  0x00 ; '.'
0000000000208e00         db  0x00 ; '.'
0000000000208e01         db  0x00 ; '.'
0000000000208e02         db  0x00 ; '.'
0000000000208e03         db  0x00 ; '.'
0000000000208e04         db  0x00 ; '.'
0000000000208e05         db  0x00 ; '.'
0000000000208e06         db  0x00 ; '.'
0000000000208e07         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x208e08; 0x209000[ (504 bytes)
        ; File offset : [36360; 36864[ (504 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
0000000000208e08         db  0x18 ; '.'
0000000000208e09         db  0x8c ; '.'
0000000000208e0a         db  0x20 ; ' '
0000000000208e0b         db  0x00 ; '.'
0000000000208e0c         db  0x00 ; '.'
0000000000208e0d         db  0x00 ; '.'
0000000000208e0e         db  0x00 ; '.'
0000000000208e0f         db  0x00 ; '.'
                     qword_208e10:
0000000000208e10         dq         0x0000000000000000                          ; DATA XREF=0x1660
0000000000208e18         db  0x00 ; '.'                                         ; DATA XREF=0x1666
0000000000208e19         db  0x00 ; '.'
0000000000208e1a         db  0x00 ; '.'
0000000000208e1b         db  0x00 ; '.'
0000000000208e1c         db  0x00 ; '.'
0000000000208e1d         db  0x00 ; '.'
0000000000208e1e         db  0x00 ; '.'
0000000000208e1f         db  0x00 ; '.'
                     __uflow@GOT:        // __uflow
0000000000208e20         dq         0x00000000002092b0                          ; DATA XREF=j___uflow
                     free@GOT:        // free
0000000000208e28         dq         0x00000000002092b8                          ; DATA XREF=j_free
                     abort@GOT:        // abort
0000000000208e30         dq         0x00000000002092c0                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
0000000000208e38         dq         0x00000000002092c8                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
0000000000208e40         dq         0x00000000002092d0                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
0000000000208e48         dq         0x00000000002092e0                          ; DATA XREF=j__exit
                     __fpending@GOT:        // __fpending
0000000000208e50         dq         0x00000000002092e8                          ; DATA XREF=j___fpending
                     ferror@GOT:        // ferror
0000000000208e58         dq         0x00000000002092f0                          ; DATA XREF=j_ferror
                     qsort@GOT:        // qsort
0000000000208e60         dq         0x00000000002092f8                          ; DATA XREF=j_qsort
                     clearerr_unlocked@GOT:        // clearerr_unlocked
0000000000208e68         dq         0x0000000000209300                          ; DATA XREF=j_clearerr_unlocked
                     textdomain@GOT:        // textdomain
0000000000208e70         dq         0x0000000000209308                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
0000000000208e78         dq         0x0000000000209310                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
0000000000208e80         dq         0x0000000000209318                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
0000000000208e88         dq         0x0000000000209320                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
0000000000208e90         dq         0x0000000000209328                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
0000000000208e98         dq         0x0000000000209330                          ; DATA XREF=j_strlen
                     __stack_chk_fail@GOT:        // __stack_chk_fail
0000000000208ea0         dq         0x0000000000209338                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
0000000000208ea8         dq         0x0000000000209340                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
0000000000208eb0         dq         0x0000000000209348                          ; DATA XREF=j_mbrtowc
                     __overflow@GOT:        // __overflow
0000000000208eb8         dq         0x0000000000209350                          ; DATA XREF=j___overflow
                     strrchr@GOT:        // strrchr
0000000000208ec0         dq         0x0000000000209358                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
0000000000208ec8         dq         0x0000000000209360                          ; DATA XREF=j_lseek
                     __assert_fail@GOT:        // __assert_fail
0000000000208ed0         dq         0x0000000000209368                          ; DATA XREF=j___assert_fail
                     memset@GOT:        // memset
0000000000208ed8         dq         0x0000000000209370                          ; DATA XREF=j_memset
                     fgetc@GOT:        // fgetc
0000000000208ee0         dq         0x0000000000209378                          ; DATA XREF=j_fgetc
                     strspn@GOT:        // strspn
0000000000208ee8         dq         0x0000000000209380                          ; DATA XREF=j_strspn
                     posix_fadvise@GOT:        // posix_fadvise
0000000000208ef0         dq         0x0000000000209388                          ; DATA XREF=j_posix_fadvise
                     memchr@GOT:        // memchr
0000000000208ef8         dq         0x0000000000209390                          ; DATA XREF=j_memchr
                     strndup@GOT:        // strndup
0000000000208f00         dq         0x0000000000209398                          ; DATA XREF=j_strndup
                     memcmp@GOT:        // memcmp
0000000000208f08         dq         0x00000000002093a8                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
0000000000208f10         dq         0x00000000002093b0                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
0000000000208f18         dq         0x00000000002093b8                          ; DATA XREF=j_calloc
                     memcpy@GOT:        // memcpy
0000000000208f20         dq         0x00000000002093c8                          ; DATA XREF=j_memcpy
                     fileno@GOT:        // fileno
0000000000208f28         dq         0x00000000002093d0                          ; DATA XREF=j_fileno
                     malloc@GOT:        // malloc
0000000000208f30         dq         0x00000000002093d8                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
0000000000208f38         dq         0x00000000002093e0                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
0000000000208f40         dq         0x00000000002093e8                          ; DATA XREF=j_nl_langinfo
                     ungetc@GOT:        // ungetc
0000000000208f48         dq         0x00000000002093f0                          ; DATA XREF=j_ungetc
                     __freading@GOT:        // __freading
0000000000208f50         dq         0x00000000002093f8                          ; DATA XREF=j___freading
                     fwrite_unlocked@GOT:        // fwrite_unlocked
0000000000208f58         dq         0x0000000000209400                          ; DATA XREF=j_fwrite_unlocked
                     realloc@GOT:        // realloc
0000000000208f60         dq         0x0000000000209408                          ; DATA XREF=j_realloc
                     setlocale@GOT:        // setlocale
0000000000208f68         dq         0x0000000000209410                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
0000000000208f70         dq         0x0000000000209418                          ; DATA XREF=j___printf_chk
                     __fread_chk@GOT:        // __fread_chk
0000000000208f78         dq         0x0000000000209420                          ; DATA XREF=j___fread_chk
                     memmove@GOT:        // memmove
0000000000208f80         dq         0x0000000000209428                          ; DATA XREF=j_memmove
                     error@GOT:        // error
0000000000208f88         dq         0x0000000000209430                          ; DATA XREF=j_error
                     fseeko@GOT:        // fseeko
0000000000208f90         dq         0x0000000000209438                          ; DATA XREF=j_fseeko
                     fopen@GOT:        // fopen
0000000000208f98         dq         0x0000000000209440                          ; DATA XREF=j_fopen
                     __cxa_atexit@GOT:        // __cxa_atexit
0000000000208fa0         dq         0x0000000000209448                          ; DATA XREF=j___cxa_atexit
                     exit@GOT:        // exit
0000000000208fa8         dq         0x0000000000209450                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
0000000000208fb0         dq         0x0000000000209458                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
0000000000208fb8         dq         0x0000000000209460                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
0000000000208fc0         dq         0x0000000000209470                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
0000000000208fc8         dq         0x0000000000209478                          ; DATA XREF=j_iswprint
                     __ctype_b_loc@GOT:        // __ctype_b_loc
0000000000208fd0         dq         0x0000000000209488                          ; DATA XREF=j___ctype_b_loc
                     qword_208fd8:
0000000000208fd8         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
0000000000208fe0         db  0x00 ; '.'                                         ; DATA XREF=_start+36
0000000000208fe1         db  0x00 ; '.'
0000000000208fe2         db  0x00 ; '.'
0000000000208fe3         db  0x00 ; '.'
0000000000208fe4         db  0x00 ; '.'
0000000000208fe5         db  0x00 ; '.'
0000000000208fe6         db  0x00 ; '.'
0000000000208fe7         db  0x00 ; '.'
                     qword_208fe8:
0000000000208fe8         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_208ff0:
0000000000208ff0         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_208ff8:
0000000000208ff8         dq         0x0000000000000000                          ; DATA XREF=j_qword_208ff8, __do_global_dtors_aux+9


        ; Section .data
        ; Range: [0x209000; 0x2090a0[ (160 bytes)
        ; File offset : [36864; 37024[ (160 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

0000000000209000         align      8
                     __dso_handle:
0000000000209008         dq         0x0000000000209008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     line_delim:
0000000000209010         db         0x0a                                        ; DATA XREF=main+496, cut_file+274, cut_file+386, cut_file+448, cut_file+583, cut_file+862, cut_file+1153, cut_file+1474, cut_file+1615, cut_file+1772, cut_file+1851
0000000000209011         align      8
                     Version:
0000000000209018         dq         0x0000000000007001                          ; "8.31", DATA XREF=main+267
                     exit_failure:
0000000000209020         dd         0x00000001                                  ; DATA XREF=close_stdout+130, xalloc_die+23
0000000000209024         db  0x00 ; '.'
0000000000209025         db  0x00 ; '.'
0000000000209026         db  0x00 ; '.'
0000000000209027         db  0x00 ; '.'
0000000000209028         db  0x00 ; '.'
0000000000209029         db  0x00 ; '.'
000000000020902a         db  0x00 ; '.'
000000000020902b         db  0x00 ; '.'
000000000020902c         db  0x00 ; '.'
000000000020902d         db  0x00 ; '.'
000000000020902e         db  0x00 ; '.'
000000000020902f         db  0x00 ; '.'
0000000000209030         db  0x00 ; '.'
0000000000209031         db  0x00 ; '.'
0000000000209032         db  0x00 ; '.'
0000000000209033         db  0x00 ; '.'
0000000000209034         db  0x00 ; '.'
0000000000209035         db  0x00 ; '.'
0000000000209036         db  0x00 ; '.'
0000000000209037         db  0x00 ; '.'
0000000000209038         db  0x00 ; '.'
0000000000209039         db  0x00 ; '.'
000000000020903a         db  0x00 ; '.'
000000000020903b         db  0x00 ; '.'
000000000020903c         db  0x00 ; '.'
000000000020903d         db  0x00 ; '.'
000000000020903e         db  0x00 ; '.'
000000000020903f         db  0x00 ; '.'
                     quote_quoting_options:
0000000000209040         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
0000000000209041         db  0x00 ; '.'
0000000000209042         db  0x00 ; '.'
0000000000209043         db  0x00 ; '.'
0000000000209044         db  0x00 ; '.'
0000000000209045         db  0x00 ; '.'
0000000000209046         db  0x00 ; '.'
0000000000209047         db  0x00 ; '.'
0000000000209048         db  0x00 ; '.'
0000000000209049         db  0x00 ; '.'
000000000020904a         db  0x00 ; '.'
000000000020904b         db  0x00 ; '.'
000000000020904c         db  0x00 ; '.'
000000000020904d         db  0x00 ; '.'
000000000020904e         db  0x00 ; '.'
000000000020904f         db  0x00 ; '.'
0000000000209050         db  0x00 ; '.'
0000000000209051         db  0x00 ; '.'
0000000000209052         db  0x00 ; '.'
0000000000209053         db  0x00 ; '.'
0000000000209054         db  0x00 ; '.'
0000000000209055         db  0x00 ; '.'
0000000000209056         db  0x00 ; '.'
0000000000209057         db  0x00 ; '.'
0000000000209058         db  0x00 ; '.'
0000000000209059         db  0x00 ; '.'
000000000020905a         db  0x00 ; '.'
000000000020905b         db  0x00 ; '.'
000000000020905c         db  0x00 ; '.'
000000000020905d         db  0x00 ; '.'
000000000020905e         db  0x00 ; '.'
000000000020905f         db  0x00 ; '.'
0000000000209060         db  0x00 ; '.'
0000000000209061         db  0x00 ; '.'
0000000000209062         db  0x00 ; '.'
0000000000209063         db  0x00 ; '.'
0000000000209064         db  0x00 ; '.'
0000000000209065         db  0x00 ; '.'
0000000000209066         db  0x00 ; '.'
0000000000209067         db  0x00 ; '.'
0000000000209068         db  0x00 ; '.'
0000000000209069         db  0x00 ; '.'
000000000020906a         db  0x00 ; '.'
000000000020906b         db  0x00 ; '.'
000000000020906c         db  0x00 ; '.'
000000000020906d         db  0x00 ; '.'
000000000020906e         db  0x00 ; '.'
000000000020906f         db  0x00 ; '.'
0000000000209070         db  0x00 ; '.'
0000000000209071         db  0x00 ; '.'
0000000000209072         db  0x00 ; '.'
0000000000209073         db  0x00 ; '.'
0000000000209074         db  0x00 ; '.'
0000000000209075         db  0x00 ; '.'
0000000000209076         db  0x00 ; '.'
0000000000209077         db  0x00 ; '.'
                     nslots:
0000000000209078         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020907c         align      2
0000000000209082         db  0x20 ; ' '
0000000000209083         db  0x00 ; '.'
0000000000209084         db  0x00 ; '.'
0000000000209085         db  0x00 ; '.'
0000000000209086         db  0x00 ; '.'
0000000000209087         db  0x00 ; '.'
0000000000209088         db  0x00 ; '.'
0000000000209089         db  0x00 ; '.'
000000000020908a         db  0x00 ; '.'
000000000020908b         db  0x00 ; '.'
000000000020908c         db  0x00 ; '.'
000000000020908d         db  0x00 ; '.'
000000000020908e         db  0x00 ; '.'
000000000020908f         db  0x00 ; '.'
                     slotvec0:
0000000000209090         dq         1.26481e-321, 1.05452e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105


        ; Section .bss
        ; Range: [0x2090a0; 0x2092a8[ (520 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
00000000002090a0         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
00000000002090a1         db  0x00 ; '.'
00000000002090a2         db  0x00 ; '.'
00000000002090a3         db  0x00 ; '.'
00000000002090a4         db  0x00 ; '.'
00000000002090a5         db  0x00 ; '.'
00000000002090a6         db  0x00 ; '.'
00000000002090a7         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
00000000002090a8         db  0x00 ; '.'                                         ; DATA XREF=main+260, cut_file+217, cut_file+311, cut_file+556, cut_file+602, cut_file+947, cut_file+1136, cut_file+1539, cut_file+1646, cut_file+1696, cut_file+1936
00000000002090a9         db  0x00 ; '.'
00000000002090aa         db  0x00 ; '.'
00000000002090ab         db  0x00 ; '.'
00000000002090ac         db  0x00 ; '.'
00000000002090ad         db  0x00 ; '.'
00000000002090ae         db  0x00 ; '.'
00000000002090af         db  0x00 ; '.'
                     stdin@@GLIBC_2.2.5:
00000000002090b0         db  0x00 ; '.'                                         ; DATA XREF=main+915, cut_file+48
00000000002090b1         db  0x00 ; '.'
00000000002090b2         db  0x00 ; '.'
00000000002090b3         db  0x00 ; '.'
00000000002090b4         db  0x00 ; '.'
00000000002090b5         db  0x00 ; '.'
00000000002090b6         db  0x00 ; '.'
00000000002090b7         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
00000000002090b8         db  0x00 ; '.'                                         ; DATA XREF=main+746, main+782, main+793
00000000002090b9         db  0x00 ; '.'
00000000002090ba         db  0x00 ; '.'
00000000002090bb         db  0x00 ; '.'
00000000002090bc         db  0x00 ; '.'
00000000002090bd         db  0x00 ; '.'
00000000002090be         db  0x00 ; '.'
00000000002090bf         db  0x00 ; '.'
                     optarg@@GLIBC_2.2.5:
00000000002090c0         db  0x00 ; '.'                                         ; DATA XREF=main+384, main+424, main+449, main+512
00000000002090c1         db  0x00 ; '.'
00000000002090c2         db  0x00 ; '.'
00000000002090c3         db  0x00 ; '.'
00000000002090c4         db  0x00 ; '.'
00000000002090c5         db  0x00 ; '.'
00000000002090c6         db  0x00 ; '.'
00000000002090c7         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
00000000002090c8         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
00000000002090c9         db  0x00 ; '.'
00000000002090ca         db  0x00 ; '.'
00000000002090cb         db  0x00 ; '.'
00000000002090cc         db  0x00 ; '.'
00000000002090cd         db  0x00 ; '.'
00000000002090ce         db  0x00 ; '.'
00000000002090cf         db  0x00 ; '.'
00000000002090d0         db  0x00 ; '.'
00000000002090d1         db  0x00 ; '.'
00000000002090d2         db  0x00 ; '.'
00000000002090d3         db  0x00 ; '.'
00000000002090d4         db  0x00 ; '.'
00000000002090d5         db  0x00 ; '.'
00000000002090d6         db  0x00 ; '.'
00000000002090d7         db  0x00 ; '.'
00000000002090d8         db  0x00 ; '.'
00000000002090d9         db  0x00 ; '.'
00000000002090da         db  0x00 ; '.'
00000000002090db         db  0x00 ; '.'
00000000002090dc         db  0x00 ; '.'
00000000002090dd         db  0x00 ; '.'
00000000002090de         db  0x00 ; '.'
00000000002090df         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
00000000002090e0         db  0x00 ; '.'                                         ; DATA XREF=usage+61, close_stdout+44, set_program_name+125
00000000002090e1         db  0x00 ; '.'
00000000002090e2         db  0x00 ; '.'
00000000002090e3         db  0x00 ; '.'
00000000002090e4         db  0x00 ; '.'
00000000002090e5         db  0x00 ; '.'
00000000002090e6         db  0x00 ; '.'
00000000002090e7         db  0x00 ; '.'
                     completed.7697:
00000000002090e8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
00000000002090e9         db  0x00 ; '.'
00000000002090ea         db  0x00 ; '.'
00000000002090eb         db  0x00 ; '.'
00000000002090ec         db  0x00 ; '.'
00000000002090ed         db  0x00 ; '.'
00000000002090ee         db  0x00 ; '.'
00000000002090ef         db  0x00 ; '.'
                     dummy.7081:
00000000002090f0         db  0x00 ; '.'                                         ; DATA XREF=main+988, main+994
                     byte_2090f1:
00000000002090f1         db  0x00 ; '.'                                         ; DATA XREF=main+970
                     have_read_stdin:
00000000002090f2         db  0x00 ; '.'                                         ; DATA XREF=main+128, main+801, cut_file+55
00000000002090f3         db  0x00 ; '.'
00000000002090f4         db  0x00 ; '.'
00000000002090f5         db  0x00 ; '.'
00000000002090f6         db  0x00 ; '.'
00000000002090f7         db  0x00 ; '.'
                     output_delimiter_string:
00000000002090f8         db  0x00 ; '.'                                         ; DATA XREF=main+572, main+732, main+1001, cut_file+236, cut_file+1919
00000000002090f9         db  0x00 ; '.'
00000000002090fa         db  0x00 ; '.'
00000000002090fb         db  0x00 ; '.'
00000000002090fc         db  0x00 ; '.'
00000000002090fd         db  0x00 ; '.'
00000000002090fe         db  0x00 ; '.'
00000000002090ff         db  0x00 ; '.'
                     output_delimiter_length:
0000000000209100         db  0x00 ; '.'                                         ; DATA XREF=main+560, main+977, cut_file+224, cut_file+1912
0000000000209101         db  0x00 ; '.'
0000000000209102         db  0x00 ; '.'
0000000000209103         db  0x00 ; '.'
0000000000209104         db  0x00 ; '.'
0000000000209105         db  0x00 ; '.'
0000000000209106         db  0x00 ; '.'
0000000000209107         db  0x00 ; '.'
                     output_delimiter_specified:
0000000000209108         db  0x00 ; '.'                                         ; DATA XREF=main+519, cut_file+1532
                     delim:
0000000000209109         db  0x00 ; '.'                                         ; DATA XREF=main+121, main+473, main+725, main+963, cut_file+267, cut_file+379, cut_file+456, cut_file+525, cut_file+822, cut_file+1160, cut_file+1858
                     complement:
000000000020910a         db  0x00 ; '.'                                         ; DATA XREF=main+342, main+649, main+699, main+851, main+884
                     suppress_non_delimited:
000000000020910b         db  0x00 ; '.'                                         ; DATA XREF=main+114, main+208, main+636, main+674, cut_file+156, cut_file+543, cut_file+910
                     operating_mode:
000000000020910c         db  0x00 ; '.'                                         ; DATA XREF=main+104, main+360, main+374, main+400, main+414, main+584, cut_file+75
000000000020910d         db  0x00 ; '.'
000000000020910e         db  0x00 ; '.'
000000000020910f         db  0x00 ; '.'
                     field_1_bufsize:
0000000000209110         db  0x00 ; '.'                                         ; DATA XREF=cut_file+470
0000000000209111         db  0x00 ; '.'
0000000000209112         db  0x00 ; '.'
0000000000209113         db  0x00 ; '.'
0000000000209114         db  0x00 ; '.'
0000000000209115         db  0x00 ; '.'
0000000000209116         db  0x00 ; '.'
0000000000209117         db  0x00 ; '.'
                     field_1_buffer:
0000000000209118         db  0x00 ; '.'                                         ; DATA XREF=cut_file+477, cut_file+518, cut_file+576, cut_file+1785, cut_file+1800
0000000000209119         db  0x00 ; '.'
000000000020911a         db  0x00 ; '.'
000000000020911b         db  0x00 ; '.'
000000000020911c         db  0x00 ; '.'
000000000020911d         db  0x00 ; '.'
000000000020911e         db  0x00 ; '.'
000000000020911f         db  0x00 ; '.'
                     current_rp:
0000000000209120         db  0x00 ; '.'                                         ; DATA XREF=cut_file+89, cut_file+141, cut_file+192, cut_file+664, cut_file+705, cut_file+731, cut_file+756, cut_file+1002, cut_file+1168, cut_file+1219, cut_file+1496
0000000000209121         db  0x00 ; '.'
0000000000209122         db  0x00 ; '.'
0000000000209123         db  0x00 ; '.'
0000000000209124         db  0x00 ; '.'
0000000000209125         db  0x00 ; '.'
0000000000209126         db  0x00 ; '.'
0000000000209127         db  0x00 ; '.'
                     num_start.6877:
0000000000209128         db  0x00 ; '.'                                         ; DATA XREF=set_fields+724, set_fields+816, set_fields+1181
0000000000209129         db  0x00 ; '.'
000000000020912a         db  0x00 ; '.'
000000000020912b         db  0x00 ; '.'
000000000020912c         db  0x00 ; '.'
000000000020912d         db  0x00 ; '.'
000000000020912e         db  0x00 ; '.'
000000000020912f         db  0x00 ; '.'
                     n_frp_allocated:
0000000000209130         db  0x00 ; '.'                                         ; DATA XREF=add_range_pair+19, add_range_pair+111, set_fields+870, reset_fields+22
0000000000209131         db  0x00 ; '.'
0000000000209132         db  0x00 ; '.'
0000000000209133         db  0x00 ; '.'
0000000000209134         db  0x00 ; '.'
0000000000209135         db  0x00 ; '.'
0000000000209136         db  0x00 ; '.'
0000000000209137         db  0x00 ; '.'
                     ignore_EPIPE:
0000000000209138         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
0000000000209139         db  0x00 ; '.'
000000000020913a         db  0x00 ; '.'
000000000020913b         db  0x00 ; '.'
000000000020913c         db  0x00 ; '.'
000000000020913d         db  0x00 ; '.'
000000000020913e         db  0x00 ; '.'
000000000020913f         db  0x00 ; '.'
                     file_name:
0000000000209140         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
0000000000209141         db  0x00 ; '.'
0000000000209142         db  0x00 ; '.'
0000000000209143         db  0x00 ; '.'
0000000000209144         db  0x00 ; '.'
0000000000209145         db  0x00 ; '.'
0000000000209146         db  0x00 ; '.'
0000000000209147         db  0x00 ; '.'
                     program_name:
0000000000209148         db  0x00 ; '.'                                         ; DATA XREF=usage+20, set_program_name+109
0000000000209149         db  0x00 ; '.'
000000000020914a         db  0x00 ; '.'
000000000020914b         db  0x00 ; '.'
000000000020914c         db  0x00 ; '.'
000000000020914d         db  0x00 ; '.'
000000000020914e         db  0x00 ; '.'
000000000020914f         db  0x00 ; '.'
0000000000209150         db  0x00 ; '.'
0000000000209151         db  0x00 ; '.'
0000000000209152         db  0x00 ; '.'
0000000000209153         db  0x00 ; '.'
0000000000209154         db  0x00 ; '.'
0000000000209155         db  0x00 ; '.'
0000000000209156         db  0x00 ; '.'
0000000000209157         db  0x00 ; '.'
0000000000209158         db  0x00 ; '.'
0000000000209159         db  0x00 ; '.'
000000000020915a         db  0x00 ; '.'
000000000020915b         db  0x00 ; '.'
000000000020915c         db  0x00 ; '.'
000000000020915d         db  0x00 ; '.'
000000000020915e         db  0x00 ; '.'
000000000020915f         db  0x00 ; '.'
                     slot0:
0000000000209160         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
0000000000209161         db  0x00 ; '.'
0000000000209162         db  0x00 ; '.'
0000000000209163         db  0x00 ; '.'
0000000000209164         db  0x00 ; '.'
0000000000209165         db  0x00 ; '.'
0000000000209166         db  0x00 ; '.'
0000000000209167         db  0x00 ; '.'
0000000000209168         db  0x00 ; '.'
0000000000209169         db  0x00 ; '.'
000000000020916a         db  0x00 ; '.'
000000000020916b         db  0x00 ; '.'
000000000020916c         db  0x00 ; '.'
000000000020916d         db  0x00 ; '.'
000000000020916e         db  0x00 ; '.'
000000000020916f         db  0x00 ; '.'
0000000000209170         db  0x00 ; '.'
0000000000209171         db  0x00 ; '.'
0000000000209172         db  0x00 ; '.'
0000000000209173         db  0x00 ; '.'
0000000000209174         db  0x00 ; '.'
0000000000209175         db  0x00 ; '.'
0000000000209176         db  0x00 ; '.'
0000000000209177         db  0x00 ; '.'
0000000000209178         db  0x00 ; '.'
0000000000209179         db  0x00 ; '.'
000000000020917a         db  0x00 ; '.'
000000000020917b         db  0x00 ; '.'
000000000020917c         db  0x00 ; '.'
000000000020917d         db  0x00 ; '.'
000000000020917e         db  0x00 ; '.'
000000000020917f         db  0x00 ; '.'
0000000000209180         db  0x00 ; '.'
0000000000209181         db  0x00 ; '.'
0000000000209182         db  0x00 ; '.'
0000000000209183         db  0x00 ; '.'
0000000000209184         db  0x00 ; '.'
0000000000209185         db  0x00 ; '.'
0000000000209186         db  0x00 ; '.'
0000000000209187         db  0x00 ; '.'
0000000000209188         db  0x00 ; '.'
0000000000209189         db  0x00 ; '.'
000000000020918a         db  0x00 ; '.'
000000000020918b         db  0x00 ; '.'
000000000020918c         db  0x00 ; '.'
000000000020918d         db  0x00 ; '.'
000000000020918e         db  0x00 ; '.'
000000000020918f         db  0x00 ; '.'
0000000000209190         db  0x00 ; '.'
0000000000209191         db  0x00 ; '.'
0000000000209192         db  0x00 ; '.'
0000000000209193         db  0x00 ; '.'
0000000000209194         db  0x00 ; '.'
0000000000209195         db  0x00 ; '.'
0000000000209196         db  0x00 ; '.'
0000000000209197         db  0x00 ; '.'
0000000000209198         db  0x00 ; '.'
0000000000209199         db  0x00 ; '.'
000000000020919a         db  0x00 ; '.'
000000000020919b         db  0x00 ; '.'
000000000020919c         db  0x00 ; '.'
000000000020919d         db  0x00 ; '.'
000000000020919e         db  0x00 ; '.'
000000000020919f         db  0x00 ; '.'
00000000002091a0         db  0x00 ; '.'
00000000002091a1         db  0x00 ; '.'
00000000002091a2         db  0x00 ; '.'
00000000002091a3         db  0x00 ; '.'
00000000002091a4         db  0x00 ; '.'
00000000002091a5         db  0x00 ; '.'
00000000002091a6         db  0x00 ; '.'
00000000002091a7         db  0x00 ; '.'
00000000002091a8         db  0x00 ; '.'
00000000002091a9         db  0x00 ; '.'
00000000002091aa         db  0x00 ; '.'
00000000002091ab         db  0x00 ; '.'
00000000002091ac         db  0x00 ; '.'
00000000002091ad         db  0x00 ; '.'
00000000002091ae         db  0x00 ; '.'
00000000002091af         db  0x00 ; '.'
00000000002091b0         db  0x00 ; '.'
00000000002091b1         db  0x00 ; '.'
00000000002091b2         db  0x00 ; '.'
00000000002091b3         db  0x00 ; '.'
00000000002091b4         db  0x00 ; '.'
00000000002091b5         db  0x00 ; '.'
00000000002091b6         db  0x00 ; '.'
00000000002091b7         db  0x00 ; '.'
00000000002091b8         db  0x00 ; '.'
00000000002091b9         db  0x00 ; '.'
00000000002091ba         db  0x00 ; '.'
00000000002091bb         db  0x00 ; '.'
00000000002091bc         db  0x00 ; '.'
00000000002091bd         db  0x00 ; '.'
00000000002091be         db  0x00 ; '.'
00000000002091bf         db  0x00 ; '.'
00000000002091c0         db  0x00 ; '.'
00000000002091c1         db  0x00 ; '.'
00000000002091c2         db  0x00 ; '.'
00000000002091c3         db  0x00 ; '.'
00000000002091c4         db  0x00 ; '.'
00000000002091c5         db  0x00 ; '.'
00000000002091c6         db  0x00 ; '.'
00000000002091c7         db  0x00 ; '.'
00000000002091c8         db  0x00 ; '.'
00000000002091c9         db  0x00 ; '.'
00000000002091ca         db  0x00 ; '.'
00000000002091cb         db  0x00 ; '.'
00000000002091cc         db  0x00 ; '.'
00000000002091cd         db  0x00 ; '.'
00000000002091ce         db  0x00 ; '.'
00000000002091cf         db  0x00 ; '.'
00000000002091d0         db  0x00 ; '.'
00000000002091d1         db  0x00 ; '.'
00000000002091d2         db  0x00 ; '.'
00000000002091d3         db  0x00 ; '.'
00000000002091d4         db  0x00 ; '.'
00000000002091d5         db  0x00 ; '.'
00000000002091d6         db  0x00 ; '.'
00000000002091d7         db  0x00 ; '.'
00000000002091d8         db  0x00 ; '.'
00000000002091d9         db  0x00 ; '.'
00000000002091da         db  0x00 ; '.'
00000000002091db         db  0x00 ; '.'
00000000002091dc         db  0x00 ; '.'
00000000002091dd         db  0x00 ; '.'
00000000002091de         db  0x00 ; '.'
00000000002091df         db  0x00 ; '.'
00000000002091e0         db  0x00 ; '.'
00000000002091e1         db  0x00 ; '.'
00000000002091e2         db  0x00 ; '.'
00000000002091e3         db  0x00 ; '.'
00000000002091e4         db  0x00 ; '.'
00000000002091e5         db  0x00 ; '.'
00000000002091e6         db  0x00 ; '.'
00000000002091e7         db  0x00 ; '.'
00000000002091e8         db  0x00 ; '.'
00000000002091e9         db  0x00 ; '.'
00000000002091ea         db  0x00 ; '.'
00000000002091eb         db  0x00 ; '.'
00000000002091ec         db  0x00 ; '.'
00000000002091ed         db  0x00 ; '.'
00000000002091ee         db  0x00 ; '.'
00000000002091ef         db  0x00 ; '.'
00000000002091f0         db  0x00 ; '.'
00000000002091f1         db  0x00 ; '.'
00000000002091f2         db  0x00 ; '.'
00000000002091f3         db  0x00 ; '.'
00000000002091f4         db  0x00 ; '.'
00000000002091f5         db  0x00 ; '.'
00000000002091f6         db  0x00 ; '.'
00000000002091f7         db  0x00 ; '.'
00000000002091f8         db  0x00 ; '.'
00000000002091f9         db  0x00 ; '.'
00000000002091fa         db  0x00 ; '.'
00000000002091fb         db  0x00 ; '.'
00000000002091fc         db  0x00 ; '.'
00000000002091fd         db  0x00 ; '.'
00000000002091fe         db  0x00 ; '.'
00000000002091ff         db  0x00 ; '.'
0000000000209200         db  0x00 ; '.'
0000000000209201         db  0x00 ; '.'
0000000000209202         db  0x00 ; '.'
0000000000209203         db  0x00 ; '.'
0000000000209204         db  0x00 ; '.'
0000000000209205         db  0x00 ; '.'
0000000000209206         db  0x00 ; '.'
0000000000209207         db  0x00 ; '.'
0000000000209208         db  0x00 ; '.'
0000000000209209         db  0x00 ; '.'
000000000020920a         db  0x00 ; '.'
000000000020920b         db  0x00 ; '.'
000000000020920c         db  0x00 ; '.'
000000000020920d         db  0x00 ; '.'
000000000020920e         db  0x00 ; '.'
000000000020920f         db  0x00 ; '.'
0000000000209210         db  0x00 ; '.'
0000000000209211         db  0x00 ; '.'
0000000000209212         db  0x00 ; '.'
0000000000209213         db  0x00 ; '.'
0000000000209214         db  0x00 ; '.'
0000000000209215         db  0x00 ; '.'
0000000000209216         db  0x00 ; '.'
0000000000209217         db  0x00 ; '.'
0000000000209218         db  0x00 ; '.'
0000000000209219         db  0x00 ; '.'
000000000020921a         db  0x00 ; '.'
000000000020921b         db  0x00 ; '.'
000000000020921c         db  0x00 ; '.'
000000000020921d         db  0x00 ; '.'
000000000020921e         db  0x00 ; '.'
000000000020921f         db  0x00 ; '.'
0000000000209220         db  0x00 ; '.'
0000000000209221         db  0x00 ; '.'
0000000000209222         db  0x00 ; '.'
0000000000209223         db  0x00 ; '.'
0000000000209224         db  0x00 ; '.'
0000000000209225         db  0x00 ; '.'
0000000000209226         db  0x00 ; '.'
0000000000209227         db  0x00 ; '.'
0000000000209228         db  0x00 ; '.'
0000000000209229         db  0x00 ; '.'
000000000020922a         db  0x00 ; '.'
000000000020922b         db  0x00 ; '.'
000000000020922c         db  0x00 ; '.'
000000000020922d         db  0x00 ; '.'
000000000020922e         db  0x00 ; '.'
000000000020922f         db  0x00 ; '.'
0000000000209230         db  0x00 ; '.'
0000000000209231         db  0x00 ; '.'
0000000000209232         db  0x00 ; '.'
0000000000209233         db  0x00 ; '.'
0000000000209234         db  0x00 ; '.'
0000000000209235         db  0x00 ; '.'
0000000000209236         db  0x00 ; '.'
0000000000209237         db  0x00 ; '.'
0000000000209238         db  0x00 ; '.'
0000000000209239         db  0x00 ; '.'
000000000020923a         db  0x00 ; '.'
000000000020923b         db  0x00 ; '.'
000000000020923c         db  0x00 ; '.'
000000000020923d         db  0x00 ; '.'
000000000020923e         db  0x00 ; '.'
000000000020923f         db  0x00 ; '.'
0000000000209240         db  0x00 ; '.'
0000000000209241         db  0x00 ; '.'
0000000000209242         db  0x00 ; '.'
0000000000209243         db  0x00 ; '.'
0000000000209244         db  0x00 ; '.'
0000000000209245         db  0x00 ; '.'
0000000000209246         db  0x00 ; '.'
0000000000209247         db  0x00 ; '.'
0000000000209248         db  0x00 ; '.'
0000000000209249         db  0x00 ; '.'
000000000020924a         db  0x00 ; '.'
000000000020924b         db  0x00 ; '.'
000000000020924c         db  0x00 ; '.'
000000000020924d         db  0x00 ; '.'
000000000020924e         db  0x00 ; '.'
000000000020924f         db  0x00 ; '.'
0000000000209250         db  0x00 ; '.'
0000000000209251         db  0x00 ; '.'
0000000000209252         db  0x00 ; '.'
0000000000209253         db  0x00 ; '.'
0000000000209254         db  0x00 ; '.'
0000000000209255         db  0x00 ; '.'
0000000000209256         db  0x00 ; '.'
0000000000209257         db  0x00 ; '.'
0000000000209258         db  0x00 ; '.'
0000000000209259         db  0x00 ; '.'
000000000020925a         db  0x00 ; '.'
000000000020925b         db  0x00 ; '.'
000000000020925c         db  0x00 ; '.'
000000000020925d         db  0x00 ; '.'
000000000020925e         db  0x00 ; '.'
000000000020925f         db  0x00 ; '.'
                     default_quoting_options:
0000000000209260         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
0000000000209261         db  0x00 ; '.'
0000000000209262         db  0x00 ; '.'
0000000000209263         db  0x00 ; '.'
0000000000209264         db  0x00 ; '.'
0000000000209265         db  0x00 ; '.'
0000000000209266         db  0x00 ; '.'
0000000000209267         db  0x00 ; '.'
0000000000209268         db  0x00 ; '.'
0000000000209269         db  0x00 ; '.'
000000000020926a         db  0x00 ; '.'
000000000020926b         db  0x00 ; '.'
000000000020926c         db  0x00 ; '.'
000000000020926d         db  0x00 ; '.'
000000000020926e         db  0x00 ; '.'
000000000020926f         db  0x00 ; '.'
0000000000209270         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
0000000000209271         db  0x00 ; '.'
0000000000209272         db  0x00 ; '.'
0000000000209273         db  0x00 ; '.'
0000000000209274         db  0x00 ; '.'
0000000000209275         db  0x00 ; '.'
0000000000209276         db  0x00 ; '.'
0000000000209277         db  0x00 ; '.'
0000000000209278         db  0x00 ; '.'
0000000000209279         db  0x00 ; '.'
000000000020927a         db  0x00 ; '.'
000000000020927b         db  0x00 ; '.'
000000000020927c         db  0x00 ; '.'
000000000020927d         db  0x00 ; '.'
000000000020927e         db  0x00 ; '.'
000000000020927f         db  0x00 ; '.'
0000000000209280         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
0000000000209281         db  0x00 ; '.'
0000000000209282         db  0x00 ; '.'
0000000000209283         db  0x00 ; '.'
0000000000209284         db  0x00 ; '.'
0000000000209285         db  0x00 ; '.'
0000000000209286         db  0x00 ; '.'
0000000000209287         db  0x00 ; '.'
0000000000209288         db  0x00 ; '.'
0000000000209289         db  0x00 ; '.'
000000000020928a         db  0x00 ; '.'
000000000020928b         db  0x00 ; '.'
000000000020928c         db  0x00 ; '.'
000000000020928d         db  0x00 ; '.'
000000000020928e         db  0x00 ; '.'
000000000020928f         db  0x00 ; '.'
                     qword_209290:
0000000000209290         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
0000000000209291         db  0x00 ; '.'
0000000000209292         db  0x00 ; '.'
0000000000209293         db  0x00 ; '.'
0000000000209294         db  0x00 ; '.'
0000000000209295         db  0x00 ; '.'
0000000000209296         db  0x00 ; '.'
0000000000209297         db  0x00 ; '.'
                     frp:
0000000000209298         db  0x00 ; '.'                                         ; DATA XREF=cut_file+82, cut_file+986, cut_file+1728, add_range_pair+26, add_range_pair+137, set_fields+346, set_fields+382, set_fields+505, set_fields+585, set_fields+848, set_fields+1021
0000000000209299         db  0x00 ; '.'
000000000020929a         db  0x00 ; '.'
000000000020929b         db  0x00 ; '.'
000000000020929c         db  0x00 ; '.'
000000000020929d         db  0x00 ; '.'
000000000020929e         db  0x00 ; '.'
000000000020929f         db  0x00 ; '.'
                     n_frp:
00000000002092a0         db  0x00 ; '.'                                         ; DATA XREF=add_range_pair+12, add_range_pair+56, add_range_pair+127, set_fields+330, set_fields+375, set_fields+498, set_fields+519, set_fields+562, set_fields+578, set_fields+859, set_fields+1014
00000000002092a1         db  0x00 ; '.'
00000000002092a2         db  0x00 ; '.'
00000000002092a3         db  0x00 ; '.'
00000000002092a4         db  0x00 ; '.'
00000000002092a5         db  0x00 ; '.'
00000000002092a6         db  0x00 ; '.'
00000000002092a7         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x2092b0; 0x209670[ (960 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x2092b0; 0x412920[ (2135664 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     __uflow:
00000000002092b0         extern function code                                   ; DATA XREF=__uflow@GOT
                     free:
00000000002092b8         extern function code                                   ; DATA XREF=free@GOT
                     abort:
00000000002092c0         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
00000000002092c8         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
00000000002092d0         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
00000000002092d8         extern function code
                     _exit:
00000000002092e0         extern function code                                   ; DATA XREF=_exit@GOT
                     __fpending:
00000000002092e8         extern function code                                   ; DATA XREF=__fpending@GOT
                     ferror:
00000000002092f0         extern function code                                   ; DATA XREF=ferror@GOT
                     qsort:
00000000002092f8         extern function code                                   ; DATA XREF=qsort@GOT
                     clearerr_unlocked:
0000000000209300         extern function code                                   ; DATA XREF=clearerr_unlocked@GOT
                     textdomain:
0000000000209308         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
0000000000209310         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
0000000000209318         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
0000000000209320         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
0000000000209328         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
0000000000209330         extern function code                                   ; DATA XREF=strlen@GOT
                     __stack_chk_fail:
0000000000209338         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
0000000000209340         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
0000000000209348         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     __overflow:
0000000000209350         extern function code                                   ; DATA XREF=__overflow@GOT
                     strrchr:
0000000000209358         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
0000000000209360         extern function code                                   ; DATA XREF=lseek@GOT
                     __assert_fail:
0000000000209368         extern function code                                   ; DATA XREF=__assert_fail@GOT
                     memset:
0000000000209370         extern function code                                   ; DATA XREF=memset@GOT
                     fgetc:
0000000000209378         extern function code                                   ; DATA XREF=fgetc@GOT
                     strspn:
0000000000209380         extern function code                                   ; DATA XREF=strspn@GOT
                     posix_fadvise:
0000000000209388         extern function code                                   ; DATA XREF=posix_fadvise@GOT
                     memchr:
0000000000209390         extern function code                                   ; DATA XREF=memchr@GOT
                     strndup:
0000000000209398         extern function code                                   ; DATA XREF=strndup@GOT
                     __libc_start_main:
00000000002093a0         extern function code
                     memcmp:
00000000002093a8         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
00000000002093b0         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
00000000002093b8         extern function code                                   ; DATA XREF=calloc@GOT
                     __gmon_start__:
00000000002093c0         extern function code
                     memcpy:
00000000002093c8         extern function code                                   ; DATA XREF=memcpy@GOT
                     fileno:
00000000002093d0         extern function code                                   ; DATA XREF=fileno@GOT
                     malloc:
00000000002093d8         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
00000000002093e0         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
00000000002093e8         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     ungetc:
00000000002093f0         extern function code                                   ; DATA XREF=ungetc@GOT
                     __freading:
00000000002093f8         extern function code                                   ; DATA XREF=__freading@GOT
                     fwrite_unlocked:
0000000000209400         extern function code                                   ; DATA XREF=fwrite_unlocked@GOT
                     realloc:
0000000000209408         extern function code                                   ; DATA XREF=realloc@GOT
                     setlocale:
0000000000209410         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
0000000000209418         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     __fread_chk:
0000000000209420         extern function code                                   ; DATA XREF=__fread_chk@GOT
                     memmove:
0000000000209428         extern function code                                   ; DATA XREF=memmove@GOT
                     error:
0000000000209430         extern function code                                   ; DATA XREF=error@GOT
                     fseeko:
0000000000209438         extern function code                                   ; DATA XREF=fseeko@GOT
                     fopen:
0000000000209440         extern function code                                   ; DATA XREF=fopen@GOT
                     __cxa_atexit:
0000000000209448         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     exit:
0000000000209450         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
0000000000209458         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
0000000000209460         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
0000000000209468         extern function code
                     mbsinit:
0000000000209470         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
0000000000209478         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
0000000000209480         extern function code
                     __ctype_b_loc:
0000000000209488         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     __uflow@@GLIBC_2.2.5:
0000000000209490         extern function code
                     free@@GLIBC_2.2.5:
0000000000209498         extern function code
                     abort@@GLIBC_2.2.5:
00000000002094a0         extern function code
                     __errno_location@@GLIBC_2.2.5:
00000000002094a8         extern function code
                     strncmp@@GLIBC_2.2.5:
00000000002094b0         extern function code
                     _ITM_deregisterTMCloneTable_2094b8:        // _ITM_deregisterTMCloneTable
00000000002094b8         extern function code
                     _exit@@GLIBC_2.2.5:
00000000002094c0         extern function code
                     __fpending@@GLIBC_2.2.5:
00000000002094c8         extern function code
                     ferror@@GLIBC_2.2.5:
00000000002094d0         extern function code
                     qsort@@GLIBC_2.2.5:
00000000002094d8         extern function code
                     clearerr_unlocked@@GLIBC_2.2.5:
00000000002094e0         extern function code
                     textdomain@@GLIBC_2.2.5:
00000000002094e8         extern function code
                     fclose@@GLIBC_2.2.5:
00000000002094f0         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
00000000002094f8         extern function code
                     dcgettext@@GLIBC_2.2.5:
0000000000209500         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
0000000000209508         extern function code
                     strlen@@GLIBC_2.2.5:
0000000000209510         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
0000000000209518         extern function code
                     getopt_long@@GLIBC_2.2.5:
0000000000209520         extern function code
                     mbrtowc@@GLIBC_2.2.5:
0000000000209528         extern function code
                     __overflow@@GLIBC_2.2.5:
0000000000209530         extern function code
                     strrchr@@GLIBC_2.2.5:
0000000000209538         extern function code
                     lseek@@GLIBC_2.2.5:
0000000000209540         extern function code
                     __assert_fail@@GLIBC_2.2.5:
0000000000209548         extern function code
                     memset@@GLIBC_2.2.5:
0000000000209550         extern function code
                     fgetc@@GLIBC_2.2.5:
0000000000209558         extern function code
                     strspn@@GLIBC_2.2.5:
0000000000209560         extern function code
                     posix_fadvise@@GLIBC_2.2.5:
0000000000209568         extern function code
                     memchr@@GLIBC_2.2.5:
0000000000209570         extern function code
                     strndup@@GLIBC_2.2.5:
0000000000209578         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
0000000000209580         extern function code
                     memcmp@@GLIBC_2.2.5:
0000000000209588         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
0000000000209590         extern function code
                     calloc@@GLIBC_2.2.5:
0000000000209598         extern function code
                     __gmon_start___2095a0:        // __gmon_start__
00000000002095a0         extern function code
                     memcpy@@GLIBC_2.14:
00000000002095a8         extern function code
                     fileno@@GLIBC_2.2.5:
00000000002095b0         extern function code
                     malloc@@GLIBC_2.2.5:
00000000002095b8         extern function code
                     fflush@@GLIBC_2.2.5:
00000000002095c0         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
00000000002095c8         extern function code
                     ungetc@@GLIBC_2.2.5:
00000000002095d0         extern function code
                     __freading@@GLIBC_2.2.5:
00000000002095d8         extern function code
                     fwrite_unlocked@@GLIBC_2.2.5:
00000000002095e0         extern function code
                     realloc@@GLIBC_2.2.5:
00000000002095e8         extern function code
                     setlocale@@GLIBC_2.2.5:
00000000002095f0         extern function code
                     __printf_chk@@GLIBC_2.3.4:
00000000002095f8         extern function code
                     __fread_chk@@GLIBC_2.7:
0000000000209600         extern function code
                     memmove@@GLIBC_2.2.5:
0000000000209608         extern function code
                     error@@GLIBC_2.2.5:
0000000000209610         extern function code
                     fseeko@@GLIBC_2.2.5:
0000000000209618         extern function code
                     fopen@@GLIBC_2.2.5:
0000000000209620         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
0000000000209628         extern function code
                     exit@@GLIBC_2.2.5:
0000000000209630         extern function code
                     fwrite@@GLIBC_2.2.5:
0000000000209638         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
0000000000209640         extern function code
                     _ITM_registerTMCloneTable_209648:        // _ITM_registerTMCloneTable
0000000000209648         extern function code
                     mbsinit@@GLIBC_2.2.5:
0000000000209650         extern function code
                     iswprint@@GLIBC_2.2.5:
0000000000209658         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
0000000000209660         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
0000000000209668         extern function code
