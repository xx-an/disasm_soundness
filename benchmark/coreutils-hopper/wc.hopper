
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/wc
        UUID: 87FFFFE9-E3F0-30E9-4C89-E6EE09EDADC7
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0x9390[ (37776 bytes)
        ; File offset : [0; 37776[ (37776 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0x40 ; '@'
0000000000000019         db  0x28 ; '('
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0x68 ; 'h'
0000000000000029         db  0x4f ; 'O'
000000000000002a         db  0x03 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0x90 ; '.'
00000000000000d1         db  0x93 ; '.'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0x90 ; '.'
00000000000000d9         db  0x93 ; '.'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0x30 ; '0'
00000000000000f1         db  0x9a ; '.'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0x30 ; '0'
00000000000000f9         db  0x9a ; '.'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0x30 ; '0'                                         ; DATA XREF=quotearg_free+87, rpl_fflush+18, slotvec0
0000000000000101         db  0x9a ; '.'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0x58 ; 'X'
0000000000000109         db  0x06 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0x68 ; 'h'
0000000000000111         db  0x08 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0xb8 ; '.'
0000000000000129         db  0x9b ; '.'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0xb8 ; '.'
0000000000000131         db  0x9b ; '.'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0xb8 ; '.'
0000000000000139         db  0x9b ; '.'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0x70 ; 'p'
0000000000000199         db  0x81 ; '.'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0x70 ; 'p'
00000000000001a1         db  0x81 ; '.'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0x70 ; 'p'
00000000000001a9         db  0x81 ; '.'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0x2c ; ','
00000000000001b1         db  0x03 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0x2c ; ','
00000000000001b9         db  0x03 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'                                         ; DATA XREF=main+22, main+1818
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'
0000000000000201         db  0xe5 ; '.'                                         ; DATA XREF=wc+301
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'
0000000000000208         db  0x30 ; '0'
0000000000000209         db  0x9a ; '.'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0x30 ; '0'
0000000000000211         db  0x9a ; '.'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0x30 ; '0'
0000000000000219         db  0x9a ; '.'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0xd0 ; '.'
0000000000000221         db  0x05 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0xd0 ; '.'
0000000000000229         db  0x05 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0x87 ; '.'
0000000000000285         db  0xff ; '.'
0000000000000286         db  0xff ; '.'
0000000000000287         db  0xe9 ; '.'
0000000000000288         db  0xe3 ; '.'
0000000000000289         db  0xf0 ; '.'
000000000000028a         db  0x30 ; '0'
000000000000028b         db  0xe9 ; '.'
000000000000028c         db  0x4c ; 'L'
000000000000028d         db  0x89 ; '.'
000000000000028e         db  0xe6 ; '.'
000000000000028f         db  0xee ; '.'
0000000000000290         db  0x09 ; '.'
0000000000000291         db  0xed ; '.'
0000000000000292         db  0xad ; '.'
0000000000000293         db  0xc7 ; '.'
0000000000000294         db  0xe7 ; '.'
0000000000000295         db  0x57 ; 'W'
0000000000000296         db  0x90 ; '.'
0000000000000297         db  0x97 ; '.'


        ; Section .gnu.hash
        ; Range: [0x298; 0x304[ (108 bytes)
        ; File offset : [664; 772[ (108 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x47 ; 'G'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x02 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x07 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x26 ; '&'
00000000000002a9         db  0xa1 ; '.'
00000000000002aa         db  0x48 ; 'H'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0x12 ; '.'
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0xae ; '.'
00000000000002af         db  0x16 ; '.'
00000000000002b0         db  0x20 ; ' '
00000000000002b1         db  0xd0 ; '.'
00000000000002b2         db  0x10 ; '.'
00000000000002b3         db  0x12 ; '.'
00000000000002b4         db  0xa0 ; '.'
00000000000002b5         db  0x04 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x90 ; '.'
00000000000002b8         db  0x47 ; 'G'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x4c ; 'L'
00000000000002bd         db  0x00 ; '.'
00000000000002be         db  0x00 ; '.'
00000000000002bf         db  0x00 ; '.'
00000000000002c0         db  0x54 ; 'T'
00000000000002c1         db  0x00 ; '.'
00000000000002c2         db  0x00 ; '.'
00000000000002c3         db  0x00 ; '.'
00000000000002c4         db  0xb6 ; '.'
00000000000002c5         db  0xfa ; '.'
00000000000002c6         db  0x01 ; '.'
00000000000002c7         db  0xeb ; '.'
00000000000002c8         db  0x8c ; '.'
00000000000002c9         db  0xc7 ; '.'
00000000000002ca         db  0xe0 ; '.'
00000000000002cb         db  0x60 ; '`'
00000000000002cc         db  0x28 ; '('
00000000000002cd         db  0x1d ; '.'
00000000000002ce         db  0x8c ; '.'
00000000000002cf         db  0x1c ; '.'
00000000000002d0         db  0x7e ; '~'
00000000000002d1         db  0x6a ; 'j'
00000000000002d2         db  0x9a ; '.'
00000000000002d3         db  0x75 ; 'u'
00000000000002d4         db  0x03 ; '.'
00000000000002d5         db  0x3e ; '>'
00000000000002d6         db  0x7f ; '.'
00000000000002d7         db  0x5b ; '['
00000000000002d8         db  0xbc ; '.'
00000000000002d9         db  0x50 ; 'P'
00000000000002da         db  0x76 ; 'v'
00000000000002db         db  0x9e ; '.'
00000000000002dc         db  0x66 ; 'f'
00000000000002dd         db  0x55 ; 'U'
00000000000002de         db  0x61 ; 'a'
00000000000002df         db  0x10 ; '.'
00000000000002e0         db  0x4e ; 'N'
00000000000002e1         db  0x8e ; '.'
00000000000002e2         db  0xfd ; '.'
00000000000002e3         db  0x7f ; '.'
00000000000002e4         db  0x96 ; '.'
00000000000002e5         db  0xa0 ; '.'
00000000000002e6         db  0x89 ; '.'
00000000000002e7         db  0x97 ; '.'
00000000000002e8         db  0x92 ; '.'
00000000000002e9         db  0x98 ; '.'
00000000000002ea         db  0x3c ; '<'
00000000000002eb         db  0xad ; '.'
00000000000002ec         db  0xce ; '.'
00000000000002ed         db  0x2c ; ','
00000000000002ee         db  0x63 ; 'c'
00000000000002ef         db  0x72 ; 'r'
00000000000002f0         db  0xe4 ; '.'
00000000000002f1         db  0x62 ; 'b'
00000000000002f2         db  0x41 ; 'A'
00000000000002f3         db  0xf5 ; '.'
00000000000002f4         db  0x39 ; '9'
00000000000002f5         db  0xf2 ; '.'
00000000000002f6         db  0x8b ; '.'
00000000000002f7         db  0x1c ; '.'
00000000000002f8         db  0x32 ; '2'
00000000000002f9         db  0xc4 ; '.'
00000000000002fa         db  0xf7 ; '.'
00000000000002fb         db  0x12 ; '.'
00000000000002fc         db  0xb2 ; '.'
00000000000002fd         db  0xa2 ; '.'
00000000000002fe         db  0xf7 ; '.'
00000000000002ff         db  0x12 ; '.'
0000000000000300         db  0x4d ; 'M'
0000000000000301         db  0x3e ; '>'
0000000000000302         db  0xa5 ; '.'
0000000000000303         db  0x0b ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'


        ; Section .dynsym
        ; Range: [0x308; 0xb30[ (2088 bytes)
        ; File offset : [776; 2864[ (2088 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x00 ; '.'
0000000000000311         db  0x00 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x00 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x9f ; '.'
0000000000000321         db  0x01 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x12 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0x00 ; '.'
0000000000000329         db  0x00 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x00 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x15 ; '.'
0000000000000339         db  0x03 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x12 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'                                         ; DATA XREF=main+1626
0000000000000340         db  0x00 ; '.'
0000000000000341         db  0x00 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x00 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x89 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x12 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0x00 ; '.'
0000000000000359         db  0x00 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x00 ; '.'
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x0d ; '.'
0000000000000369         db  0x01 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x12 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0x00 ; '.'
0000000000000371         db  0x00 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x00 ; '.'
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x37 ; '7'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x12 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0x00 ; '.'
0000000000000389         db  0x00 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x00 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x88 ; '.'
0000000000000399         db  0x03 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x20 ; ' '
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0x00 ; '.'
00000000000003a1         db  0x00 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x00 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x95 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x12 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0x00 ; '.'
00000000000003b9         db  0x00 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x00 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x37 ; '7'
00000000000003c9         db  0x02 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x12 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0x00 ; '.'
00000000000003d1         db  0x00 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x00 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0xeb ; '.'
00000000000003e1         db  0x02 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x12 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0x00 ; '.'
00000000000003e9         db  0x00 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x00 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x49 ; 'I'
00000000000003f9         db  0x02 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x12 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'
0000000000000400         db  0x00 ; '.'
0000000000000401         db  0x00 ; '.'
0000000000000402         db  0x00 ; '.'
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x00 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'
0000000000000407         db  0x00 ; '.'
0000000000000408         db  0x00 ; '.'
0000000000000409         db  0x00 ; '.'
000000000000040a         db  0x00 ; '.'
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0xbf ; '.'
0000000000000411         db  0x02 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x12 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0x00 ; '.'
0000000000000419         db  0x00 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x00 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x61 ; 'a'
0000000000000429         db  0x01 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x12 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0x00 ; '.'
0000000000000431         db  0x00 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x00 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0xbb ; '.'
0000000000000441         db  0x02 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x12 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0x00 ; '.'
0000000000000449         db  0x00 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x00 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x4e ; 'N'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x12 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0x00 ; '.'
0000000000000461         db  0x00 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x00 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0xc8 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x12 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x00 ; '.'
0000000000000479         db  0x00 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x00 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0xff ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x12 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0x00 ; '.'
0000000000000491         db  0x00 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x00 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x61 ; 'a'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x12 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x00 ; '.'
00000000000004a9         db  0x00 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x00 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0xff ; '.'
00000000000004b9         db  0x01 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x12 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0x00 ; '.'
00000000000004c1         db  0x00 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x00 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x29 ; ')'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x12 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x00 ; '.'
00000000000004d9         db  0x00 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x00 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x42 ; 'B'
00000000000004e9         db  0x02 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x12 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0x00 ; '.'
00000000000004f1         db  0x00 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x00 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0xf9 ; '.'
0000000000000501         db  0x02 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x12 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0x00 ; '.'
0000000000000509         db  0x00 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x00 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x46 ; 'F'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x12 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0x00 ; '.'
0000000000000521         db  0x00 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x00 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x54 ; 'T'
0000000000000531         db  0x01 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x12 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0x00 ; '.'
0000000000000539         db  0x00 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x00 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0xba ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x12 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0x00 ; '.'
0000000000000551         db  0x00 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x00 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x06 ; '.'
0000000000000561         db  0x01 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x12 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0x00 ; '.'
0000000000000569         db  0x00 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x00 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0xf2 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x12 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0x00 ; '.'
0000000000000581         db  0x00 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x00 ; '.'
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x62 ; 'b'
0000000000000591         db  0x01 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x12 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0x00 ; '.'
0000000000000599         db  0x00 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x00 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0xe4 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x12 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0x00 ; '.'
00000000000005b1         db  0x00 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x00 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x9b ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x12 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0x00 ; '.'
00000000000005c9         db  0x00 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x00 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x1e ; '.'
00000000000005d9         db  0x01 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x12 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0x00 ; '.'
00000000000005e1         db  0x00 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x00 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0xd9 ; '.'
00000000000005f1         db  0x02 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x12 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0x00 ; '.'
00000000000005f9         db  0x00 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x00 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x23 ; '#'
0000000000000609         db  0x01 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x12 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x00 ; '.'
0000000000000611         db  0x00 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x00 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x1a ; '.'
0000000000000621         db  0x03 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x12 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0x00 ; '.'
0000000000000629         db  0x00 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x00 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0xf8 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x12 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x00 ; '.'
0000000000000641         db  0x00 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x00 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0xd2 ; '.'
0000000000000651         db  0x02 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x12 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x00 ; '.'
0000000000000659         db  0x00 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x00 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x68 ; 'h'
0000000000000669         db  0x01 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x12 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x00 ; '.'
0000000000000671         db  0x00 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x00 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0xdf ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x12 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0x00 ; '.'
0000000000000689         db  0x00 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x00 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0xa4 ; '.'
0000000000000699         db  0x03 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x20 ; ' '
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x00 ; '.'
00000000000006a1         db  0x00 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x00 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x5a ; 'Z'
00000000000006b1         db  0x01 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x12 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x00 ; '.'
00000000000006b9         db  0x00 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x00 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x14 ; '.'
00000000000006c9         db  0x02 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x12 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x00 ; '.'
00000000000006d1         db  0x00 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x00 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0xa4 ; '.'
00000000000006e1         db  0x02 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x12 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0x00 ; '.'
00000000000006e9         db  0x00 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x00 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0xd4 ; '.'
00000000000006f9         db  0x01 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x12 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x00 ; '.'
0000000000000701         db  0x00 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x00 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x76 ; 'v'
0000000000000711         db  0x01 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x12 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x00 ; '.'
0000000000000719         db  0x00 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x00 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x0b ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x12 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x00 ; '.'
0000000000000731         db  0x00 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x00 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x85 ; '.'
0000000000000741         db  0x01 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x12 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0x00 ; '.'
0000000000000749         db  0x00 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x00 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x0b ; '.'
0000000000000759         db  0x02 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x12 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0x00 ; '.'
0000000000000761         db  0x00 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x00 ; '.'
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0xc2 ; '.'
0000000000000771         db  0x01 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x12 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0x00 ; '.'
0000000000000779         db  0x00 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x00 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x7b ; '{'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x12 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x00 ; '.'
0000000000000791         db  0x00 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x00 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x1f ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x12 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0x00 ; '.'
00000000000007a9         db  0x00 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x00 ; '.'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x12 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x12 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0x00 ; '.'
00000000000007c1         db  0x00 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x00 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x9c ; '.'
00000000000007d1         db  0x02 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x12 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x00 ; '.'
00000000000007d9         db  0x00 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x00 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x00 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x00 ; '.'
00000000000007e1         db  0x00 ; '.'
00000000000007e2         db  0x00 ; '.'
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x58 ; 'X'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x12 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0x00 ; '.'
00000000000007f1         db  0x00 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x00 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x00 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x00 ; '.'
00000000000007f9         db  0x00 ; '.'
00000000000007fa         db  0x00 ; '.'
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x83 ; '.'
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x12 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x00 ; '.'
0000000000000809         db  0x00 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x00 ; '.'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x00 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0x00 ; '.'
0000000000000811         db  0x00 ; '.'
0000000000000812         db  0x00 ; '.'
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0xec ; '.'
0000000000000819         db  0x02 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x12 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0x00 ; '.'
0000000000000821         db  0x00 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x00 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x00 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0x00 ; '.'
0000000000000829         db  0x00 ; '.'
000000000000082a         db  0x00 ; '.'
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x32 ; '2'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x12 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x00 ; '.'
0000000000000839         db  0x00 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x00 ; '.'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x00 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0x00 ; '.'
0000000000000841         db  0x00 ; '.'
0000000000000842         db  0x00 ; '.'
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0xf2 ; '.'
0000000000000849         db  0x02 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x12 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0x00 ; '.'
0000000000000851         db  0x00 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x00 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x00 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0x00 ; '.'
0000000000000859         db  0x00 ; '.'
000000000000085a         db  0x00 ; '.'
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x31 ; '1'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x12 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0x00 ; '.'
0000000000000869         db  0x00 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x00 ; '.'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x00 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0x00 ; '.'
0000000000000871         db  0x00 ; '.'
0000000000000872         db  0x00 ; '.'
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x04 ; '.'
0000000000000879         db  0x03 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x12 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0x00 ; '.'
0000000000000881         db  0x00 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x00 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x00 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0x00 ; '.'
0000000000000889         db  0x00 ; '.'
000000000000088a         db  0x00 ; '.'
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x44 ; 'D'
0000000000000891         db  0x03 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x12 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'
0000000000000898         db  0x00 ; '.'
0000000000000899         db  0x00 ; '.'
000000000000089a         db  0x00 ; '.'
000000000000089b         db  0x00 ; '.'
000000000000089c         db  0x00 ; '.'
000000000000089d         db  0x00 ; '.'
000000000000089e         db  0x00 ; '.'
000000000000089f         db  0x00 ; '.'
00000000000008a0         db  0x00 ; '.'
00000000000008a1         db  0x00 ; '.'
00000000000008a2         db  0x00 ; '.'
00000000000008a3         db  0x00 ; '.'
00000000000008a4         db  0x00 ; '.'
00000000000008a5         db  0x00 ; '.'
00000000000008a6         db  0x00 ; '.'
00000000000008a7         db  0x00 ; '.'
00000000000008a8         db  0xca ; '.'
00000000000008a9         db  0x02 ; '.'
00000000000008aa         db  0x00 ; '.'
00000000000008ab         db  0x00 ; '.'
00000000000008ac         db  0x12 ; '.'
00000000000008ad         db  0x00 ; '.'
00000000000008ae         db  0x00 ; '.'
00000000000008af         db  0x00 ; '.'
00000000000008b0         db  0x00 ; '.'
00000000000008b1         db  0x00 ; '.'
00000000000008b2         db  0x00 ; '.'
00000000000008b3         db  0x00 ; '.'
00000000000008b4         db  0x00 ; '.'
00000000000008b5         db  0x00 ; '.'
00000000000008b6         db  0x00 ; '.'
00000000000008b7         db  0x00 ; '.'
00000000000008b8         db  0x00 ; '.'
00000000000008b9         db  0x00 ; '.'
00000000000008ba         db  0x00 ; '.'
00000000000008bb         db  0x00 ; '.'
00000000000008bc         db  0x00 ; '.'
00000000000008bd         db  0x00 ; '.'
00000000000008be         db  0x00 ; '.'
00000000000008bf         db  0x00 ; '.'
00000000000008c0         db  0x2a ; '*'
00000000000008c1         db  0x01 ; '.'
00000000000008c2         db  0x00 ; '.'
00000000000008c3         db  0x00 ; '.'
00000000000008c4         db  0x12 ; '.'
00000000000008c5         db  0x00 ; '.'
00000000000008c6         db  0x00 ; '.'
00000000000008c7         db  0x00 ; '.'
00000000000008c8         db  0x00 ; '.'
00000000000008c9         db  0x00 ; '.'
00000000000008ca         db  0x00 ; '.'
00000000000008cb         db  0x00 ; '.'
00000000000008cc         db  0x00 ; '.'
00000000000008cd         db  0x00 ; '.'
00000000000008ce         db  0x00 ; '.'
00000000000008cf         db  0x00 ; '.'
00000000000008d0         db  0x00 ; '.'
00000000000008d1         db  0x00 ; '.'
00000000000008d2         db  0x00 ; '.'
00000000000008d3         db  0x00 ; '.'
00000000000008d4         db  0x00 ; '.'
00000000000008d5         db  0x00 ; '.'
00000000000008d6         db  0x00 ; '.'
00000000000008d7         db  0x00 ; '.'
00000000000008d8         db  0x96 ; '.'
00000000000008d9         db  0x00 ; '.'
00000000000008da         db  0x00 ; '.'
00000000000008db         db  0x00 ; '.'
00000000000008dc         db  0x12 ; '.'
00000000000008dd         db  0x00 ; '.'
00000000000008de         db  0x00 ; '.'
00000000000008df         db  0x00 ; '.'
00000000000008e0         db  0x00 ; '.'
00000000000008e1         db  0x00 ; '.'
00000000000008e2         db  0x00 ; '.'
00000000000008e3         db  0x00 ; '.'
00000000000008e4         db  0x00 ; '.'
00000000000008e5         db  0x00 ; '.'
00000000000008e6         db  0x00 ; '.'
00000000000008e7         db  0x00 ; '.'
00000000000008e8         db  0x00 ; '.'
00000000000008e9         db  0x00 ; '.'
00000000000008ea         db  0x00 ; '.'
00000000000008eb         db  0x00 ; '.'
00000000000008ec         db  0x00 ; '.'
00000000000008ed         db  0x00 ; '.'
00000000000008ee         db  0x00 ; '.'
00000000000008ef         db  0x00 ; '.'
00000000000008f0         db  0x30 ; '0'
00000000000008f1         db  0x02 ; '.'
00000000000008f2         db  0x00 ; '.'
00000000000008f3         db  0x00 ; '.'
00000000000008f4         db  0x12 ; '.'
00000000000008f5         db  0x00 ; '.'
00000000000008f6         db  0x00 ; '.'
00000000000008f7         db  0x00 ; '.'
00000000000008f8         db  0x00 ; '.'
00000000000008f9         db  0x00 ; '.'
00000000000008fa         db  0x00 ; '.'
00000000000008fb         db  0x00 ; '.'
00000000000008fc         db  0x00 ; '.'
00000000000008fd         db  0x00 ; '.'
00000000000008fe         db  0x00 ; '.'
00000000000008ff         db  0x00 ; '.'
0000000000000900         db  0x00 ; '.'
0000000000000901         db  0x00 ; '.'
0000000000000902         db  0x00 ; '.'
0000000000000903         db  0x00 ; '.'
0000000000000904         db  0x00 ; '.'
0000000000000905         db  0x00 ; '.'
0000000000000906         db  0x00 ; '.'
0000000000000907         db  0x00 ; '.'
0000000000000908         db  0x3f ; '?'
0000000000000909         db  0x01 ; '.'
000000000000090a         db  0x00 ; '.'
000000000000090b         db  0x00 ; '.'
000000000000090c         db  0x12 ; '.'
000000000000090d         db  0x00 ; '.'
000000000000090e         db  0x00 ; '.'
000000000000090f         db  0x00 ; '.'
0000000000000910         db  0x00 ; '.'
0000000000000911         db  0x00 ; '.'
0000000000000912         db  0x00 ; '.'
0000000000000913         db  0x00 ; '.'
0000000000000914         db  0x00 ; '.'
0000000000000915         db  0x00 ; '.'
0000000000000916         db  0x00 ; '.'
0000000000000917         db  0x00 ; '.'
0000000000000918         db  0x00 ; '.'
0000000000000919         db  0x00 ; '.'
000000000000091a         db  0x00 ; '.'
000000000000091b         db  0x00 ; '.'
000000000000091c         db  0x00 ; '.'
000000000000091d         db  0x00 ; '.'
000000000000091e         db  0x00 ; '.'
000000000000091f         db  0x00 ; '.'
0000000000000920         db  0xb3 ; '.'
0000000000000921         db  0x03 ; '.'
0000000000000922         db  0x00 ; '.'
0000000000000923         db  0x00 ; '.'
0000000000000924         db  0x20 ; ' '
0000000000000925         db  0x00 ; '.'
0000000000000926         db  0x00 ; '.'
0000000000000927         db  0x00 ; '.'
0000000000000928         db  0x00 ; '.'
0000000000000929         db  0x00 ; '.'
000000000000092a         db  0x00 ; '.'
000000000000092b         db  0x00 ; '.'
000000000000092c         db  0x00 ; '.'
000000000000092d         db  0x00 ; '.'
000000000000092e         db  0x00 ; '.'
000000000000092f         db  0x00 ; '.'
0000000000000930         db  0x00 ; '.'
0000000000000931         db  0x00 ; '.'
0000000000000932         db  0x00 ; '.'
0000000000000933         db  0x00 ; '.'
0000000000000934         db  0x00 ; '.'
0000000000000935         db  0x00 ; '.'
0000000000000936         db  0x00 ; '.'
0000000000000937         db  0x00 ; '.'
0000000000000938         db  0x7d ; '}'
0000000000000939         db  0x01 ; '.'
000000000000093a         db  0x00 ; '.'
000000000000093b         db  0x00 ; '.'
000000000000093c         db  0x12 ; '.'
000000000000093d         db  0x00 ; '.'
000000000000093e         db  0x00 ; '.'
000000000000093f         db  0x00 ; '.'
0000000000000940         db  0x00 ; '.'
0000000000000941         db  0x00 ; '.'
0000000000000942         db  0x00 ; '.'
0000000000000943         db  0x00 ; '.'
0000000000000944         db  0x00 ; '.'
0000000000000945         db  0x00 ; '.'
0000000000000946         db  0x00 ; '.'
0000000000000947         db  0x00 ; '.'
0000000000000948         db  0x00 ; '.'
0000000000000949         db  0x00 ; '.'
000000000000094a         db  0x00 ; '.'
000000000000094b         db  0x00 ; '.'
000000000000094c         db  0x00 ; '.'
000000000000094d         db  0x00 ; '.'
000000000000094e         db  0x00 ; '.'
000000000000094f         db  0x00 ; '.'
0000000000000950         db  0x72 ; 'r'
0000000000000951         db  0x00 ; '.'
0000000000000952         db  0x00 ; '.'
0000000000000953         db  0x00 ; '.'
0000000000000954         db  0x12 ; '.'
0000000000000955         db  0x00 ; '.'
0000000000000956         db  0x00 ; '.'
0000000000000957         db  0x00 ; '.'
0000000000000958         db  0x00 ; '.'
0000000000000959         db  0x00 ; '.'
000000000000095a         db  0x00 ; '.'
000000000000095b         db  0x00 ; '.'
000000000000095c         db  0x00 ; '.'
000000000000095d         db  0x00 ; '.'
000000000000095e         db  0x00 ; '.'
000000000000095f         db  0x00 ; '.'
0000000000000960         db  0x00 ; '.'
0000000000000961         db  0x00 ; '.'
0000000000000962         db  0x00 ; '.'
0000000000000963         db  0x00 ; '.'
0000000000000964         db  0x00 ; '.'
0000000000000965         db  0x00 ; '.'
0000000000000966         db  0x00 ; '.'
0000000000000967         db  0x00 ; '.'
0000000000000968         db  0x8d ; '.'
0000000000000969         db  0x02 ; '.'
000000000000096a         db  0x00 ; '.'
000000000000096b         db  0x00 ; '.'
000000000000096c         db  0x22 ; '"'
000000000000096d         db  0x00 ; '.'
000000000000096e         db  0x00 ; '.'
000000000000096f         db  0x00 ; '.'
0000000000000970         db  0x00 ; '.'
0000000000000971         db  0x00 ; '.'
0000000000000972         db  0x00 ; '.'
0000000000000973         db  0x00 ; '.'
0000000000000974         db  0x00 ; '.'
0000000000000975         db  0x00 ; '.'
0000000000000976         db  0x00 ; '.'
0000000000000977         db  0x00 ; '.'
0000000000000978         db  0x00 ; '.'
0000000000000979         db  0x00 ; '.'
000000000000097a         db  0x00 ; '.'
000000000000097b         db  0x00 ; '.'
000000000000097c         db  0x00 ; '.'
000000000000097d         db  0x00 ; '.'
000000000000097e         db  0x00 ; '.'
000000000000097f         db  0x00 ; '.'
0000000000000980         db  0x36 ; '6'
0000000000000981         db  0x01 ; '.'
0000000000000982         db  0x00 ; '.'
0000000000000983         db  0x00 ; '.'
0000000000000984         db  0x12 ; '.'
0000000000000985         db  0x00 ; '.'
0000000000000986         db  0x00 ; '.'
0000000000000987         db  0x00 ; '.'
0000000000000988         db  0x00 ; '.'
0000000000000989         db  0x00 ; '.'
000000000000098a         db  0x00 ; '.'
000000000000098b         db  0x00 ; '.'
000000000000098c         db  0x00 ; '.'
000000000000098d         db  0x00 ; '.'
000000000000098e         db  0x00 ; '.'
000000000000098f         db  0x00 ; '.'
0000000000000990         db  0x00 ; '.'
0000000000000991         db  0x00 ; '.'
0000000000000992         db  0x00 ; '.'
0000000000000993         db  0x00 ; '.'
0000000000000994         db  0x00 ; '.'
0000000000000995         db  0x00 ; '.'
0000000000000996         db  0x00 ; '.'
0000000000000997         db  0x00 ; '.'
0000000000000998         db  0x91 ; '.'
0000000000000999         db  0x01 ; '.'
000000000000099a         db  0x00 ; '.'
000000000000099b         db  0x00 ; '.'
000000000000099c         db  0x12 ; '.'
000000000000099d         db  0x00 ; '.'
000000000000099e         db  0x00 ; '.'
000000000000099f         db  0x00 ; '.'
00000000000009a0         db  0x00 ; '.'
00000000000009a1         db  0x00 ; '.'
00000000000009a2         db  0x00 ; '.'
00000000000009a3         db  0x00 ; '.'
00000000000009a4         db  0x00 ; '.'
00000000000009a5         db  0x00 ; '.'
00000000000009a6         db  0x00 ; '.'
00000000000009a7         db  0x00 ; '.'
00000000000009a8         db  0x00 ; '.'
00000000000009a9         db  0x00 ; '.'
00000000000009aa         db  0x00 ; '.'
00000000000009ab         db  0x00 ; '.'
00000000000009ac         db  0x00 ; '.'
00000000000009ad         db  0x00 ; '.'
00000000000009ae         db  0x00 ; '.'
00000000000009af         db  0x00 ; '.'
00000000000009b0         db  0x70 ; 'p'
00000000000009b1         db  0x02 ; '.'
00000000000009b2         db  0x00 ; '.'
00000000000009b3         db  0x00 ; '.'
00000000000009b4         db  0x11 ; '.'
00000000000009b5         db  0x00 ; '.'
00000000000009b6         db  0x18 ; '.'
00000000000009b7         db  0x00 ; '.'
00000000000009b8         db  0x80 ; '.'
00000000000009b9         db  0xa0 ; '.'
00000000000009ba         db  0x20 ; ' '
00000000000009bb         db  0x00 ; '.'
00000000000009bc         db  0x00 ; '.'
00000000000009bd         db  0x00 ; '.'
00000000000009be         db  0x00 ; '.'
00000000000009bf         db  0x00 ; '.'
00000000000009c0         db  0x08 ; '.'
00000000000009c1         db  0x00 ; '.'
00000000000009c2         db  0x00 ; '.'
00000000000009c3         db  0x00 ; '.'
00000000000009c4         db  0x00 ; '.'
00000000000009c5         db  0x00 ; '.'
00000000000009c6         db  0x00 ; '.'
00000000000009c7         db  0x00 ; '.'
00000000000009c8         db  0xed ; '.'
00000000000009c9         db  0x01 ; '.'
00000000000009ca         db  0x00 ; '.'
00000000000009cb         db  0x00 ; '.'
00000000000009cc         db  0x12 ; '.'
00000000000009cd         db  0x00 ; '.'
00000000000009ce         db  0x0e ; '.'
00000000000009cf         db  0x00 ; '.'
00000000000009d0         db  0x40 ; '@'
00000000000009d1         db  0x6c ; 'l'
00000000000009d2         db  0x00 ; '.'
00000000000009d3         db  0x00 ; '.'
00000000000009d4         db  0x00 ; '.'
00000000000009d5         db  0x00 ; '.'
00000000000009d6         db  0x00 ; '.'
00000000000009d7         db  0x00 ; '.'
00000000000009d8         db  0xeb ; '.'
00000000000009d9         db  0x00 ; '.'
00000000000009da         db  0x00 ; '.'
00000000000009db         db  0x00 ; '.'
00000000000009dc         db  0x00 ; '.'
00000000000009dd         db  0x00 ; '.'
00000000000009de         db  0x00 ; '.'
00000000000009df         db  0x00 ; '.'
00000000000009e0         db  0x4d ; 'M'
00000000000009e1         db  0x01 ; '.'
00000000000009e2         db  0x00 ; '.'
00000000000009e3         db  0x00 ; '.'
00000000000009e4         db  0x11 ; '.'
00000000000009e5         db  0x00 ; '.'
00000000000009e6         db  0x19 ; '.'
00000000000009e7         db  0x00 ; '.'
00000000000009e8         db  0xa8 ; '.'
00000000000009e9         db  0xa0 ; '.'
00000000000009ea         db  0x20 ; ' '
00000000000009eb         db  0x00 ; '.'
00000000000009ec         db  0x00 ; '.'
00000000000009ed         db  0x00 ; '.'
00000000000009ee         db  0x00 ; '.'
00000000000009ef         db  0x00 ; '.'
00000000000009f0         db  0x08 ; '.'
00000000000009f1         db  0x00 ; '.'
00000000000009f2         db  0x00 ; '.'
00000000000009f3         db  0x00 ; '.'
00000000000009f4         db  0x00 ; '.'
00000000000009f5         db  0x00 ; '.'
00000000000009f6         db  0x00 ; '.'
00000000000009f7         db  0x00 ; '.'
00000000000009f8         db  0xdc ; '.'
00000000000009f9         db  0x01 ; '.'
00000000000009fa         db  0x00 ; '.'
00000000000009fb         db  0x00 ; '.'
00000000000009fc         db  0x12 ; '.'
00000000000009fd         db  0x00 ; '.'
00000000000009fe         db  0x0e ; '.'
00000000000009ff         db  0x00 ; '.'
0000000000000a00         db  0x20 ; ' '
0000000000000a01         db  0x6c ; 'l'
0000000000000a02         db  0x00 ; '.'
0000000000000a03         db  0x00 ; '.'
0000000000000a04         db  0x00 ; '.'
0000000000000a05         db  0x00 ; '.'
0000000000000a06         db  0x00 ; '.'
0000000000000a07         db  0x00 ; '.'
0000000000000a08         db  0x15 ; '.'
0000000000000a09         db  0x00 ; '.'
0000000000000a0a         db  0x00 ; '.'
0000000000000a0b         db  0x00 ; '.'
0000000000000a0c         db  0x00 ; '.'
0000000000000a0d         db  0x00 ; '.'
0000000000000a0e         db  0x00 ; '.'
0000000000000a0f         db  0x00 ; '.'
0000000000000a10         db  0xa6 ; '.'
0000000000000a11         db  0x01 ; '.'
0000000000000a12         db  0x00 ; '.'
0000000000000a13         db  0x00 ; '.'
0000000000000a14         db  0x12 ; '.'
0000000000000a15         db  0x00 ; '.'
0000000000000a16         db  0x0e ; '.'
0000000000000a17         db  0x00 ; '.'
0000000000000a18         db  0x30 ; '0'
0000000000000a19         db  0x6d ; 'm'
0000000000000a1a         db  0x00 ; '.'
0000000000000a1b         db  0x00 ; '.'
0000000000000a1c         db  0x00 ; '.'
0000000000000a1d         db  0x00 ; '.'
0000000000000a1e         db  0x00 ; '.'
0000000000000a1f         db  0x00 ; '.'
0000000000000a20         db  0x38 ; '8'
0000000000000a21         db  0x00 ; '.'
0000000000000a22         db  0x00 ; '.'
0000000000000a23         db  0x00 ; '.'
0000000000000a24         db  0x00 ; '.'
0000000000000a25         db  0x00 ; '.'
0000000000000a26         db  0x00 ; '.'
0000000000000a27         db  0x00 ; '.'
0000000000000a28         db  0x29 ; ')'
0000000000000a29         db  0x03 ; '.'
0000000000000a2a         db  0x00 ; '.'
0000000000000a2b         db  0x00 ; '.'
0000000000000a2c         db  0x11 ; '.'
0000000000000a2d         db  0x00 ; '.'
0000000000000a2e         db  0x19 ; '.'
0000000000000a2f         db  0x00 ; '.'
0000000000000a30         db  0xa0 ; '.'
0000000000000a31         db  0xa0 ; '.'
0000000000000a32         db  0x20 ; ' '
0000000000000a33         db  0x00 ; '.'
0000000000000a34         db  0x00 ; '.'
0000000000000a35         db  0x00 ; '.'
0000000000000a36         db  0x00 ; '.'
0000000000000a37         db  0x00 ; '.'
0000000000000a38         db  0x08 ; '.'
0000000000000a39         db  0x00 ; '.'
0000000000000a3a         db  0x00 ; '.'
0000000000000a3b         db  0x00 ; '.'
0000000000000a3c         db  0x00 ; '.'
0000000000000a3d         db  0x00 ; '.'
0000000000000a3e         db  0x00 ; '.'
0000000000000a3f         db  0x00 ; '.'
0000000000000a40         db  0x8f ; '.'
0000000000000a41         db  0x00 ; '.'
0000000000000a42         db  0x00 ; '.'
0000000000000a43         db  0x00 ; '.'
0000000000000a44         db  0x11 ; '.'
0000000000000a45         db  0x00 ; '.'
0000000000000a46         db  0x19 ; '.'
0000000000000a47         db  0x00 ; '.'
0000000000000a48         db  0xb0 ; '.'
0000000000000a49         db  0xa0 ; '.'
0000000000000a4a         db  0x20 ; ' '
0000000000000a4b         db  0x00 ; '.'
0000000000000a4c         db  0x00 ; '.'
0000000000000a4d         db  0x00 ; '.'
0000000000000a4e         db  0x00 ; '.'
0000000000000a4f         db  0x00 ; '.'
0000000000000a50         db  0x08 ; '.'
0000000000000a51         db  0x00 ; '.'
0000000000000a52         db  0x00 ; '.'
0000000000000a53         db  0x00 ; '.'
0000000000000a54         db  0x00 ; '.'
0000000000000a55         db  0x00 ; '.'
0000000000000a56         db  0x00 ; '.'
0000000000000a57         db  0x00 ; '.'
0000000000000a58         db  0xac ; '.'
0000000000000a59         db  0x02 ; '.'
0000000000000a5a         db  0x00 ; '.'
0000000000000a5b         db  0x00 ; '.'
0000000000000a5c         db  0x12 ; '.'
0000000000000a5d         db  0x00 ; '.'
0000000000000a5e         db  0x0e ; '.'
0000000000000a5f         db  0x00 ; '.'
0000000000000a60         db  0x00 ; '.'
0000000000000a61         db  0x6c ; 'l'
0000000000000a62         db  0x00 ; '.'
0000000000000a63         db  0x00 ; '.'
0000000000000a64         db  0x00 ; '.'
0000000000000a65         db  0x00 ; '.'
0000000000000a66         db  0x00 ; '.'
0000000000000a67         db  0x00 ; '.'
0000000000000a68         db  0x11 ; '.'
0000000000000a69         db  0x00 ; '.'
0000000000000a6a         db  0x00 ; '.'
0000000000000a6b         db  0x00 ; '.'
0000000000000a6c         db  0x00 ; '.'
0000000000000a6d         db  0x00 ; '.'
0000000000000a6e         db  0x00 ; '.'
0000000000000a6f         db  0x00 ; '.'
0000000000000a70         db  0xa2 ; '.'
0000000000000a71         db  0x00 ; '.'
0000000000000a72         db  0x00 ; '.'
0000000000000a73         db  0x00 ; '.'
0000000000000a74         db  0x21 ; '!'
0000000000000a75         db  0x00 ; '.'
0000000000000a76         db  0x19 ; '.'
0000000000000a77         db  0x00 ; '.'
0000000000000a78         db  0xc8 ; '.'
0000000000000a79         db  0xa0 ; '.'
0000000000000a7a         db  0x20 ; ' '
0000000000000a7b         db  0x00 ; '.'
0000000000000a7c         db  0x00 ; '.'
0000000000000a7d         db  0x00 ; '.'
0000000000000a7e         db  0x00 ; '.'
0000000000000a7f         db  0x00 ; '.'
0000000000000a80         db  0x08 ; '.'
0000000000000a81         db  0x00 ; '.'
0000000000000a82         db  0x00 ; '.'
0000000000000a83         db  0x00 ; '.'
0000000000000a84         db  0x00 ; '.'
0000000000000a85         db  0x00 ; '.'
0000000000000a86         db  0x00 ; '.'
0000000000000a87         db  0x00 ; '.'
0000000000000a88         db  0x1b ; '.'
0000000000000a89         db  0x02 ; '.'
0000000000000a8a         db  0x00 ; '.'
0000000000000a8b         db  0x00 ; '.'
0000000000000a8c         db  0x12 ; '.'
0000000000000a8d         db  0x00 ; '.'
0000000000000a8e         db  0x0e ; '.'
0000000000000a8f         db  0x00 ; '.'
0000000000000a90         db  0xe0 ; '.'
0000000000000a91         db  0x6d ; 'm'
0000000000000a92         db  0x00 ; '.'
0000000000000a93         db  0x00 ; '.'
0000000000000a94         db  0x00 ; '.'
0000000000000a95         db  0x00 ; '.'
0000000000000a96         db  0x00 ; '.'
0000000000000a97         db  0x00 ; '.'
0000000000000a98         db  0x2a ; '*'
0000000000000a99         db  0x00 ; '.'
0000000000000a9a         db  0x00 ; '.'
0000000000000a9b         db  0x00 ; '.'
0000000000000a9c         db  0x00 ; '.'
0000000000000a9d         db  0x00 ; '.'
0000000000000a9e         db  0x00 ; '.'
0000000000000a9f         db  0x00 ; '.'
0000000000000aa0         db  0x34 ; '4'
0000000000000aa1         db  0x03 ; '.'
0000000000000aa2         db  0x00 ; '.'
0000000000000aa3         db  0x00 ; '.'
0000000000000aa4         db  0x11 ; '.'
0000000000000aa5         db  0x00 ; '.'
0000000000000aa6         db  0x19 ; '.'
0000000000000aa7         db  0x00 ; '.'
0000000000000aa8         db  0xc8 ; '.'
0000000000000aa9         db  0xa0 ; '.'
0000000000000aaa         db  0x20 ; ' '
0000000000000aab         db  0x00 ; '.'
0000000000000aac         db  0x00 ; '.'
0000000000000aad         db  0x00 ; '.'
0000000000000aae         db  0x00 ; '.'
0000000000000aaf         db  0x00 ; '.'
0000000000000ab0         db  0x08 ; '.'
0000000000000ab1         db  0x00 ; '.'
0000000000000ab2         db  0x00 ; '.'
0000000000000ab3         db  0x00 ; '.'
0000000000000ab4         db  0x00 ; '.'
0000000000000ab5         db  0x00 ; '.'
0000000000000ab6         db  0x00 ; '.'
0000000000000ab7         db  0x00 ; '.'
0000000000000ab8         db  0x52 ; 'R'
0000000000000ab9         db  0x02 ; '.'
0000000000000aba         db  0x00 ; '.'
0000000000000abb         db  0x00 ; '.'
0000000000000abc         db  0x21 ; '!'
0000000000000abd         db  0x00 ; '.'
0000000000000abe         db  0x19 ; '.'
0000000000000abf         db  0x00 ; '.'
0000000000000ac0         db  0xa0 ; '.'
0000000000000ac1         db  0xa0 ; '.'
0000000000000ac2         db  0x20 ; ' '
0000000000000ac3         db  0x00 ; '.'
0000000000000ac4         db  0x00 ; '.'
0000000000000ac5         db  0x00 ; '.'
0000000000000ac6         db  0x00 ; '.'
0000000000000ac7         db  0x00 ; '.'
0000000000000ac8         db  0x08 ; '.'
0000000000000ac9         db  0x00 ; '.'
0000000000000aca         db  0x00 ; '.'
0000000000000acb         db  0x00 ; '.'
0000000000000acc         db  0x00 ; '.'
0000000000000acd         db  0x00 ; '.'
0000000000000ace         db  0x00 ; '.'
0000000000000acf         db  0x00 ; '.'
0000000000000ad0         db  0xcd ; '.'
0000000000000ad1         db  0x01 ; '.'
0000000000000ad2         db  0x00 ; '.'
0000000000000ad3         db  0x00 ; '.'
0000000000000ad4         db  0x11 ; '.'
0000000000000ad5         db  0x00 ; '.'
0000000000000ad6         db  0x19 ; '.'
0000000000000ad7         db  0x00 ; '.'
0000000000000ad8         db  0xe0 ; '.'
0000000000000ad9         db  0xa0 ; '.'
0000000000000ada         db  0x20 ; ' '
0000000000000adb         db  0x00 ; '.'
0000000000000adc         db  0x00 ; '.'
0000000000000add         db  0x00 ; '.'
0000000000000ade         db  0x00 ; '.'
0000000000000adf         db  0x00 ; '.'
0000000000000ae0         db  0x08 ; '.'
0000000000000ae1         db  0x00 ; '.'
0000000000000ae2         db  0x00 ; '.'
0000000000000ae3         db  0x00 ; '.'
0000000000000ae4         db  0x00 ; '.'
0000000000000ae5         db  0x00 ; '.'
0000000000000ae6         db  0x00 ; '.'
0000000000000ae7         db  0x00 ; '.'
0000000000000ae8         db  0x3f ; '?'
0000000000000ae9         db  0x00 ; '.'
0000000000000aea         db  0x00 ; '.'
0000000000000aeb         db  0x00 ; '.'
0000000000000aec         db  0x11 ; '.'
0000000000000aed         db  0x00 ; '.'
0000000000000aee         db  0x19 ; '.'
0000000000000aef         db  0x00 ; '.'
0000000000000af0         db  0xb8 ; '.'
0000000000000af1         db  0xa0 ; '.'
0000000000000af2         db  0x20 ; ' '
0000000000000af3         db  0x00 ; '.'
0000000000000af4         db  0x00 ; '.'
0000000000000af5         db  0x00 ; '.'
0000000000000af6         db  0x00 ; '.'
0000000000000af7         db  0x00 ; '.'
0000000000000af8         db  0x04 ; '.'
0000000000000af9         db  0x00 ; '.'
0000000000000afa         db  0x00 ; '.'
0000000000000afb         db  0x00 ; '.'
0000000000000afc         db  0x00 ; '.'
0000000000000afd         db  0x00 ; '.'
0000000000000afe         db  0x00 ; '.'
0000000000000aff         db  0x00 ; '.'
0000000000000b00         db  0xbb ; '.'
0000000000000b01         db  0x01 ; '.'
0000000000000b02         db  0x00 ; '.'
0000000000000b03         db  0x00 ; '.'
0000000000000b04         db  0x11 ; '.'
0000000000000b05         db  0x00 ; '.'
0000000000000b06         db  0x19 ; '.'
0000000000000b07         db  0x00 ; '.'
0000000000000b08         db  0xc0 ; '.'
0000000000000b09         db  0xa0 ; '.'
0000000000000b0a         db  0x20 ; ' '
0000000000000b0b         db  0x00 ; '.'
0000000000000b0c         db  0x00 ; '.'
0000000000000b0d         db  0x00 ; '.'
0000000000000b0e         db  0x00 ; '.'
0000000000000b0f         db  0x00 ; '.'
0000000000000b10         db  0x08 ; '.'
0000000000000b11         db  0x00 ; '.'
0000000000000b12         db  0x00 ; '.'
0000000000000b13         db  0x00 ; '.'
0000000000000b14         db  0x00 ; '.'
0000000000000b15         db  0x00 ; '.'
0000000000000b16         db  0x00 ; '.'
0000000000000b17         db  0x00 ; '.'
0000000000000b18         db  0x0c ; '.'
0000000000000b19         db  0x03 ; '.'
0000000000000b1a         db  0x00 ; '.'
0000000000000b1b         db  0x00 ; '.'
0000000000000b1c         db  0x12 ; '.'
0000000000000b1d         db  0x00 ; '.'
0000000000000b1e         db  0x0e ; '.'
0000000000000b1f         db  0x00 ; '.'
0000000000000b20         db  0x70 ; 'p'
0000000000000b21         db  0x6d ; 'm'
0000000000000b22         db  0x00 ; '.'
0000000000000b23         db  0x00 ; '.'
0000000000000b24         db  0x00 ; '.'
0000000000000b25         db  0x00 ; '.'
0000000000000b26         db  0x00 ; '.'
0000000000000b27         db  0x00 ; '.'
0000000000000b28         db  0x6a ; 'j'
0000000000000b29         db  0x00 ; '.'
0000000000000b2a         db  0x00 ; '.'
0000000000000b2b         db  0x00 ; '.'
0000000000000b2c         db  0x00 ; '.'
0000000000000b2d         db  0x00 ; '.'
0000000000000b2e         db  0x00 ; '.'
0000000000000b2f         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0xb30; 0xefd[ (973 bytes)
        ; File offset : [2864; 3837[ (973 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

0000000000000b30         db  0x00 ; '.'
0000000000000b31         db  0x6c ; 'l'
0000000000000b32         db  0x69 ; 'i'
0000000000000b33         db  0x62 ; 'b'
0000000000000b34         db  0x63 ; 'c'
0000000000000b35         db  0x2e ; '.'
0000000000000b36         db  0x73 ; 's'
0000000000000b37         db  0x6f ; 'o'
0000000000000b38         db  0x2e ; '.'
0000000000000b39         db  0x36 ; '6'
0000000000000b3a         db  0x00 ; '.'
0000000000000b3b         db  0x66 ; 'f'
0000000000000b3c         db  0x66 ; 'f'
0000000000000b3d         db  0x6c ; 'l'
0000000000000b3e         db  0x75 ; 'u'
0000000000000b3f         db  0x73 ; 's'
0000000000000b40         db  0x68 ; 'h'
0000000000000b41         db  0x00 ; '.'
0000000000000b42         db  0x5f ; '_'
0000000000000b43         db  0x5f ; '_'
0000000000000b44         db  0x70 ; 'p'
0000000000000b45         db  0x72 ; 'r'
0000000000000b46         db  0x69 ; 'i'
0000000000000b47         db  0x6e ; 'n'
0000000000000b48         db  0x74 ; 't'
0000000000000b49         db  0x66 ; 'f'
0000000000000b4a         db  0x5f ; '_'
0000000000000b4b         db  0x63 ; 'c'
0000000000000b4c         db  0x68 ; 'h'
0000000000000b4d         db  0x6b ; 'k'
0000000000000b4e         db  0x00 ; '.'
0000000000000b4f         db  0x73 ; 's'
0000000000000b50         db  0x65 ; 'e'
0000000000000b51         db  0x74 ; 't'
0000000000000b52         db  0x6c ; 'l'
0000000000000b53         db  0x6f ; 'o'
0000000000000b54         db  0x63 ; 'c'
0000000000000b55         db  0x61 ; 'a'
0000000000000b56         db  0x6c ; 'l'
0000000000000b57         db  0x65 ; 'e'
0000000000000b58         db  0x00 ; '.'
0000000000000b59         db  0x6d ; 'm'
0000000000000b5a         db  0x62 ; 'b'
0000000000000b5b         db  0x72 ; 'r'
0000000000000b5c         db  0x74 ; 't'
0000000000000b5d         db  0x6f ; 'o'
0000000000000b5e         db  0x77 ; 'w'
0000000000000b5f         db  0x63 ; 'c'
0000000000000b60         db  0x00 ; '.'
0000000000000b61         db  0x66 ; 'f'
0000000000000b62         db  0x6f ; 'o'
0000000000000b63         db  0x70 ; 'p'
0000000000000b64         db  0x65 ; 'e'
0000000000000b65         db  0x6e ; 'n'
0000000000000b66         db  0x00 ; '.'
0000000000000b67         db  0x73 ; 's'
0000000000000b68         db  0x74 ; 't'
0000000000000b69         db  0x72 ; 'r'
0000000000000b6a         db  0x6e ; 'n'
0000000000000b6b         db  0x63 ; 'c'
0000000000000b6c         db  0x6d ; 'm'
0000000000000b6d         db  0x70 ; 'p'
0000000000000b6e         db  0x00 ; '.'
0000000000000b6f         db  0x6f ; 'o'
0000000000000b70         db  0x70 ; 'p'
0000000000000b71         db  0x74 ; 't'
0000000000000b72         db  0x69 ; 'i'
0000000000000b73         db  0x6e ; 'n'
0000000000000b74         db  0x64 ; 'd'
0000000000000b75         db  0x00 ; '.'
0000000000000b76         db  0x73 ; 's'
0000000000000b77         db  0x74 ; 't'
0000000000000b78         db  0x72 ; 'r'
0000000000000b79         db  0x72 ; 'r'
0000000000000b7a         db  0x63 ; 'c'
0000000000000b7b         db  0x68 ; 'h'
0000000000000b7c         db  0x72 ; 'r'
0000000000000b7d         db  0x00 ; '.'
0000000000000b7e         db  0x64 ; 'd'
0000000000000b7f         db  0x63 ; 'c'
0000000000000b80         db  0x67 ; 'g'
0000000000000b81         db  0x65 ; 'e'
0000000000000b82         db  0x74 ; 't'
0000000000000b83         db  0x74 ; 't'
0000000000000b84         db  0x65 ; 'e'
0000000000000b85         db  0x78 ; 'x'
0000000000000b86         db  0x74 ; 't'
0000000000000b87         db  0x00 ; '.'
0000000000000b88         db  0x69 ; 'i'
0000000000000b89         db  0x73 ; 's'
0000000000000b8a         db  0x77 ; 'w'
0000000000000b8b         db  0x73 ; 's'
0000000000000b8c         db  0x70 ; 'p'
0000000000000b8d         db  0x61 ; 'a'
0000000000000b8e         db  0x63 ; 'c'
0000000000000b8f         db  0x65 ; 'e'
0000000000000b90         db  0x00 ; '.'
0000000000000b91         db  0x5f ; '_'
0000000000000b92         db  0x5f ; '_'
0000000000000b93         db  0x73 ; 's'
0000000000000b94         db  0x74 ; 't'
0000000000000b95         db  0x61 ; 'a'
0000000000000b96         db  0x63 ; 'c'
0000000000000b97         db  0x6b ; 'k'
0000000000000b98         db  0x5f ; '_'
0000000000000b99         db  0x63 ; 'c'
0000000000000b9a         db  0x68 ; 'h'
0000000000000b9b         db  0x6b ; 'k'
0000000000000b9c         db  0x5f ; '_'
0000000000000b9d         db  0x66 ; 'f'
0000000000000b9e         db  0x61 ; 'a'
0000000000000b9f         db  0x69 ; 'i'
0000000000000ba0         db  0x6c ; 'l'
0000000000000ba1         db  0x00 ; '.'
0000000000000ba2         db  0x69 ; 'i'
0000000000000ba3         db  0x73 ; 's'
0000000000000ba4         db  0x77 ; 'w'
                     aPrint:
0000000000000ba5         db         "print", 0
0000000000000bab         db  0x72 ; 'r'
0000000000000bac         db  0x65 ; 'e'
0000000000000bad         db  0x61 ; 'a'
0000000000000bae         db  0x6c ; 'l'
0000000000000baf         db  0x6c ; 'l'
0000000000000bb0         db  0x6f ; 'o'
0000000000000bb1         db  0x63 ; 'c'
0000000000000bb2         db  0x00 ; '.'
0000000000000bb3         db  0x62 ; 'b'
0000000000000bb4         db  0x74 ; 't'
0000000000000bb5         db  0x6f ; 'o'
0000000000000bb6         db  0x77 ; 'w'
0000000000000bb7         db  0x63 ; 'c'
0000000000000bb8         db  0x00 ; '.'
0000000000000bb9         db  0x61 ; 'a'
0000000000000bba         db  0x62 ; 'b'
0000000000000bbb         db  0x6f ; 'o'
0000000000000bbc         db  0x72 ; 'r'
0000000000000bbd         db  0x74 ; 't'
0000000000000bbe         db  0x00 ; '.'
0000000000000bbf         db  0x73 ; 's'
0000000000000bc0         db  0x74 ; 't'
0000000000000bc1         db  0x64 ; 'd'
0000000000000bc2         db  0x69 ; 'i'
0000000000000bc3         db  0x6e ; 'n'
0000000000000bc4         db  0x00 ; '.'
0000000000000bc5         db  0x5f ; '_'
0000000000000bc6         db  0x65 ; 'e'
0000000000000bc7         db  0x78 ; 'x'
0000000000000bc8         db  0x69 ; 'i'
0000000000000bc9         db  0x74 ; 't'
0000000000000bca         db  0x00 ; '.'
0000000000000bcb         db  0x6d ; 'm'
0000000000000bcc         db  0x65 ; 'e'
0000000000000bcd         db  0x6d ; 'm'
0000000000000bce         db  0x63 ; 'c'
0000000000000bcf         db  0x68 ; 'h'
0000000000000bd0         db  0x72 ; 'r'
0000000000000bd1         db  0x00 ; '.'
0000000000000bd2         db  0x70 ; 'p'
0000000000000bd3         db  0x72 ; 'r'
0000000000000bd4         db  0x6f ; 'o'
0000000000000bd5         db  0x67 ; 'g'
0000000000000bd6         db  0x72 ; 'r'
0000000000000bd7         db  0x61 ; 'a'
0000000000000bd8         db  0x6d ; 'm'
0000000000000bd9         db  0x5f ; '_'
0000000000000bda         db  0x69 ; 'i'
0000000000000bdb         db  0x6e ; 'n'
0000000000000bdc         db  0x76 ; 'v'
0000000000000bdd         db  0x6f ; 'o'
0000000000000bde         db  0x63 ; 'c'
0000000000000bdf         db  0x61 ; 'a'
0000000000000be0         db  0x74 ; 't'
0000000000000be1         db  0x69 ; 'i'
0000000000000be2         db  0x6f ; 'o'
0000000000000be3         db  0x6e ; 'n'
0000000000000be4         db  0x5f ; '_'
0000000000000be5         db  0x6e ; 'n'
0000000000000be6         db  0x61 ; 'a'
0000000000000be7         db  0x6d ; 'm'
0000000000000be8         db  0x65 ; 'e'
0000000000000be9         db  0x00 ; '.'
0000000000000bea         db  0x5f ; '_'
0000000000000beb         db  0x5f ; '_'
0000000000000bec         db  0x61 ; 'a'
0000000000000bed         db  0x73 ; 's'
0000000000000bee         db  0x73 ; 's'
0000000000000bef         db  0x65 ; 'e'
0000000000000bf0         db  0x72 ; 'r'
0000000000000bf1         db  0x74 ; 't'
0000000000000bf2         db  0x5f ; '_'
0000000000000bf3         db  0x66 ; 'f'
0000000000000bf4         db  0x61 ; 'a'
0000000000000bf5         db  0x69 ; 'i'
0000000000000bf6         db  0x6c ; 'l'
0000000000000bf7         db  0x00 ; '.'
0000000000000bf8         db  0x5f ; '_'
0000000000000bf9         db  0x5f ; '_'
0000000000000bfa         db  0x63 ; 'c'
0000000000000bfb         db  0x74 ; 't'
0000000000000bfc         db  0x79 ; 'y'
0000000000000bfd         db  0x70 ; 'p'
0000000000000bfe         db  0x65 ; 'e'
0000000000000bff         db  0x5f ; '_'
                     aGetmbcurmax:
0000000000000c00         db         "get_mb_cur_max", 0
0000000000000c0f         db  0x66 ; 'f'
0000000000000c10         db  0x65 ; 'e'
0000000000000c11         db  0x6f ; 'o'
0000000000000c12         db  0x66 ; 'f'
0000000000000c13         db  0x00 ; '.'
0000000000000c14         db  0x70 ; 'p'
0000000000000c15         db  0x6f ; 'o'
0000000000000c16         db  0x73 ; 's'
0000000000000c17         db  0x69 ; 'i'
0000000000000c18         db  0x78 ; 'x'
0000000000000c19         db  0x5f ; '_'
0000000000000c1a         db  0x66 ; 'f'
0000000000000c1b         db  0x61 ; 'a'
0000000000000c1c         db  0x64 ; 'd'
0000000000000c1d         db  0x76 ; 'v'
0000000000000c1e         db  0x69 ; 'i'
0000000000000c1f         db  0x73 ; 's'
0000000000000c20         db  0x65 ; 'e'
0000000000000c21         db  0x00 ; '.'
0000000000000c22         db  0x66 ; 'f'
0000000000000c23         db  0x67 ; 'g'
0000000000000c24         db  0x65 ; 'e'
0000000000000c25         db  0x74 ; 't'
0000000000000c26         db  0x63 ; 'c'
0000000000000c27         db  0x00 ; '.'
0000000000000c28         db  0x63 ; 'c'
0000000000000c29         db  0x61 ; 'a'
0000000000000c2a         db  0x6c ; 'l'
0000000000000c2b         db  0x6c ; 'l'
0000000000000c2c         db  0x6f ; 'o'
0000000000000c2d         db  0x63 ; 'c'
0000000000000c2e         db  0x00 ; '.'
0000000000000c2f         db  0x73 ; 's'
0000000000000c30         db  0x74 ; 't'
0000000000000c31         db  0x72 ; 'r'
0000000000000c32         db  0x6c ; 'l'
0000000000000c33         db  0x65 ; 'e'
0000000000000c34         db  0x6e ; 'n'
0000000000000c35         db  0x00 ; '.'
0000000000000c36         db  0x6d ; 'm'
0000000000000c37         db  0x65 ; 'e'
0000000000000c38         db  0x6d ; 'm'
0000000000000c39         db  0x73 ; 's'
0000000000000c3a         db  0x65 ; 'e'
0000000000000c3b         db  0x74 ; 't'
0000000000000c3c         db  0x00 ; '.'
0000000000000c3d         db  0x5f ; '_'
0000000000000c3e         db  0x5f ; '_'
0000000000000c3f         db  0x65 ; 'e'
0000000000000c40         db  0x72 ; 'r'
0000000000000c41         db  0x72 ; 'r'
0000000000000c42         db  0x6e ; 'n'
0000000000000c43         db  0x6f ; 'o'
0000000000000c44         db  0x5f ; '_'
0000000000000c45         db  0x6c ; 'l'
0000000000000c46         db  0x6f ; 'o'
0000000000000c47         db  0x63 ; 'c'
0000000000000c48         db  0x61 ; 'a'
0000000000000c49         db  0x74 ; 't'
0000000000000c4a         db  0x69 ; 'i'
0000000000000c4b         db  0x6f ; 'o'
0000000000000c4c         db  0x6e ; 'n'
0000000000000c4d         db  0x00 ; '.'
0000000000000c4e         db  0x72 ; 'r'
0000000000000c4f         db  0x65 ; 'e'
0000000000000c50         db  0x61 ; 'a'
0000000000000c51         db  0x64 ; 'd'
0000000000000c52         db  0x00 ; '.'
0000000000000c53         db  0x6d ; 'm'
0000000000000c54         db  0x65 ; 'e'
0000000000000c55         db  0x6d ; 'm'
0000000000000c56         db  0x63 ; 'c'
0000000000000c57         db  0x6d ; 'm'
0000000000000c58         db  0x70 ; 'p'
0000000000000c59         db  0x00 ; '.'
0000000000000c5a         db  0x67 ; 'g'
0000000000000c5b         db  0x65 ; 'e'
0000000000000c5c         db  0x74 ; 't'
0000000000000c5d         db  0x70 ; 'p'
0000000000000c5e         db  0x61 ; 'a'
0000000000000c5f         db  0x67 ; 'g'
0000000000000c60         db  0x65 ; 'e'
0000000000000c61         db  0x73 ; 's'
0000000000000c62         db  0x69 ; 'i'
0000000000000c63         db  0x7a ; 'z'
0000000000000c64         db  0x65 ; 'e'
0000000000000c65         db  0x00 ; '.'
0000000000000c66         db  0x67 ; 'g'
0000000000000c67         db  0x65 ; 'e'
0000000000000c68         db  0x74 ; 't'
0000000000000c69         db  0x64 ; 'd'
0000000000000c6a         db  0x65 ; 'e'
0000000000000c6b         db  0x6c ; 'l'
0000000000000c6c         db  0x69 ; 'i'
0000000000000c6d         db  0x6d ; 'm'
0000000000000c6e         db  0x00 ; '.'
0000000000000c6f         db  0x5f ; '_'
0000000000000c70         db  0x5f ; '_'
0000000000000c71         db  0x66 ; 'f'
0000000000000c72         db  0x70 ; 'p'
0000000000000c73         db  0x72 ; 'r'
0000000000000c74         db  0x69 ; 'i'
0000000000000c75         db  0x6e ; 'n'
0000000000000c76         db  0x74 ; 't'
0000000000000c77         db  0x66 ; 'f'
0000000000000c78         db  0x5f ; '_'
0000000000000c79         db  0x63 ; 'c'
0000000000000c7a         db  0x68 ; 'h'
0000000000000c7b         db  0x6b ; 'k'
0000000000000c7c         db  0x00 ; '.'
0000000000000c7d         db  0x73 ; 's'
0000000000000c7e         db  0x74 ; 't'
0000000000000c7f         db  0x64 ; 'd'
0000000000000c80         db  0x6f ; 'o'
0000000000000c81         db  0x75 ; 'u'
0000000000000c82         db  0x74 ; 't'
0000000000000c83         db  0x00 ; '.'
0000000000000c84         db  0x6c ; 'l'
0000000000000c85         db  0x73 ; 's'
0000000000000c86         db  0x65 ; 'e'
0000000000000c87         db  0x65 ; 'e'
0000000000000c88         db  0x6b ; 'k'
0000000000000c89         db  0x00 ; '.'
0000000000000c8a         db  0x6d ; 'm'
0000000000000c8b         db  0x65 ; 'e'
0000000000000c8c         db  0x6d ; 'm'
0000000000000c8d         db  0x63 ; 'c'
0000000000000c8e         db  0x70 ; 'p'
0000000000000c8f         db  0x79 ; 'y'
0000000000000c90         db  0x00 ; '.'
0000000000000c91         db  0x66 ; 'f'
0000000000000c92         db  0x63 ; 'c'
0000000000000c93         db  0x6c ; 'l'
0000000000000c94         db  0x6f ; 'o'
0000000000000c95         db  0x73 ; 's'
0000000000000c96         db  0x65 ; 'e'
0000000000000c97         db  0x00 ; '.'
0000000000000c98         db  0x5f ; '_'
0000000000000c99         db  0x5f ; '_'
0000000000000c9a         db  0x6d ; 'm'
0000000000000c9b         db  0x65 ; 'e'
0000000000000c9c         db  0x6d ; 'm'
0000000000000c9d         db  0x6d ; 'm'
0000000000000c9e         db  0x6f ; 'o'
0000000000000c9f         db  0x76 ; 'v'
0000000000000ca0         db  0x65 ; 'e'
0000000000000ca1         db  0x5f ; '_'
0000000000000ca2         db  0x63 ; 'c'
0000000000000ca3         db  0x68 ; 'h'
0000000000000ca4         db  0x6b ; 'k'
0000000000000ca5         db  0x00 ; '.'
0000000000000ca6         db  0x6d ; 'm'
0000000000000ca7         db  0x61 ; 'a'
0000000000000ca8         db  0x6c ; 'l'
0000000000000ca9         db  0x6c ; 'l'
0000000000000caa         db  0x6f ; 'o'
0000000000000cab         db  0x63 ; 'c'
0000000000000cac         db  0x00 ; '.'
0000000000000cad         db  0x6d ; 'm'
0000000000000cae         db  0x62 ; 'b'
0000000000000caf         db  0x73 ; 's'
0000000000000cb0         db  0x69 ; 'i'
0000000000000cb1         db  0x6e ; 'n'
0000000000000cb2         db  0x69 ; 'i'
0000000000000cb3         db  0x74 ; 't'
0000000000000cb4         db  0x00 ; '.'
0000000000000cb5         db  0x6e ; 'n'
0000000000000cb6         db  0x6c ; 'l'
0000000000000cb7         db  0x5f ; '_'
0000000000000cb8         db  0x6c ; 'l'
0000000000000cb9         db  0x61 ; 'a'
0000000000000cba         db  0x6e ; 'n'
0000000000000cbb         db  0x67 ; 'g'
0000000000000cbc         db  0x69 ; 'i'
0000000000000cbd         db  0x6e ; 'n'
0000000000000cbe         db  0x66 ; 'f'
0000000000000cbf         db  0x6f ; 'o'
0000000000000cc0         db  0x00 ; '.'
0000000000000cc1         db  0x5f ; '_'
0000000000000cc2         db  0x5f ; '_'
0000000000000cc3         db  0x63 ; 'c'
0000000000000cc4         db  0x74 ; 't'
0000000000000cc5         db  0x79 ; 'y'
0000000000000cc6         db  0x70 ; 'p'
0000000000000cc7         db  0x65 ; 'e'
0000000000000cc8         db  0x5f ; '_'
0000000000000cc9         db  0x62 ; 'b'
0000000000000cca         db  0x5f ; '_'
0000000000000ccb         db  0x6c ; 'l'
0000000000000ccc         db  0x6f ; 'o'
0000000000000ccd         db  0x63 ; 'c'
0000000000000cce         db  0x00 ; '.'
0000000000000ccf         db  0x67 ; 'g'
0000000000000cd0         db  0x65 ; 'e'
0000000000000cd1         db  0x74 ; 't'
0000000000000cd2         db  0x65 ; 'e'
0000000000000cd3         db  0x6e ; 'n'
0000000000000cd4         db  0x76 ; 'v'
0000000000000cd5         db  0x00 ; '.'
0000000000000cd6         db  0x5f ; '_'
0000000000000cd7         db  0x6f ; 'o'
0000000000000cd8         db  0x62 ; 'b'
0000000000000cd9         db  0x73 ; 's'
0000000000000cda         db  0x74 ; 't'
0000000000000cdb         db  0x61 ; 'a'
0000000000000cdc         db  0x63 ; 'c'
0000000000000cdd         db  0x6b ; 'k'
0000000000000cde         db  0x5f ; '_'
0000000000000cdf         db  0x61 ; 'a'
0000000000000ce0         db  0x6c ; 'l'
0000000000000ce1         db  0x6c ; 'l'
0000000000000ce2         db  0x6f ; 'o'
0000000000000ce3         db  0x63 ; 'c'
0000000000000ce4         db  0x61 ; 'a'
0000000000000ce5         db  0x74 ; 't'
0000000000000ce6         db  0x65 ; 'e'
0000000000000ce7         db  0x64 ; 'd'
0000000000000ce8         db  0x5f ; '_'
0000000000000ce9         db  0x70 ; 'p'
0000000000000cea         db  0x00 ; '.'
0000000000000ceb         db  0x6f ; 'o'
0000000000000cec         db  0x70 ; 'p'
0000000000000ced         db  0x74 ; 't'
0000000000000cee         db  0x61 ; 'a'
0000000000000cef         db  0x72 ; 'r'
0000000000000cf0         db  0x67 ; 'g'
0000000000000cf1         db  0x00 ; '.'
0000000000000cf2         db  0x5f ; '_'
0000000000000cf3         db  0x5f ; '_'
0000000000000cf4         db  0x66 ; 'f'
0000000000000cf5         db  0x72 ; 'r'
0000000000000cf6         db  0x65 ; 'e'
0000000000000cf7         db  0x61 ; 'a'
0000000000000cf8         db  0x64 ; 'd'
0000000000000cf9         db  0x69 ; 'i'
0000000000000cfa         db  0x6e ; 'n'
0000000000000cfb         db  0x67 ; 'g'
0000000000000cfc         db  0x00 ; '.'
0000000000000cfd         db  0x73 ; 's'
0000000000000cfe         db  0x74 ; 't'
0000000000000cff         db  0x64 ; 'd'
0000000000000d00         db  0x65 ; 'e'
0000000000000d01         db  0x72 ; 'r'
0000000000000d02         db  0x72 ; 'r'
0000000000000d03         db  0x00 ; '.'
0000000000000d04         db  0x77 ; 'w'
0000000000000d05         db  0x63 ; 'c'
0000000000000d06         db  0x77 ; 'w'
0000000000000d07         db  0x69 ; 'i'
0000000000000d08         db  0x64 ; 'd'
0000000000000d09         db  0x74 ; 't'
0000000000000d0a         db  0x68 ; 'h'
0000000000000d0b         db  0x00 ; '.'
0000000000000d0c         db  0x5f ; '_'
0000000000000d0d         db  0x6f ; 'o'
0000000000000d0e         db  0x62 ; 'b'
0000000000000d0f         db  0x73 ; 's'
0000000000000d10         db  0x74 ; 't'
0000000000000d11         db  0x61 ; 'a'
0000000000000d12         db  0x63 ; 'c'
0000000000000d13         db  0x6b ; 'k'
0000000000000d14         db  0x5f ; '_'
0000000000000d15         db  0x62 ; 'b'
0000000000000d16         db  0x65 ; 'e'
0000000000000d17         db  0x67 ; 'g'
0000000000000d18         db  0x69 ; 'i'
0000000000000d19         db  0x6e ; 'n'
0000000000000d1a         db  0x5f ; '_'
0000000000000d1b         db  0x31 ; '1'
0000000000000d1c         db  0x00 ; '.'
0000000000000d1d         db  0x5f ; '_'
0000000000000d1e         db  0x6f ; 'o'
0000000000000d1f         db  0x62 ; 'b'
0000000000000d20         db  0x73 ; 's'
0000000000000d21         db  0x74 ; 't'
0000000000000d22         db  0x61 ; 'a'
0000000000000d23         db  0x63 ; 'c'
0000000000000d24         db  0x6b ; 'k'
0000000000000d25         db  0x5f ; '_'
0000000000000d26         db  0x6e ; 'n'
0000000000000d27         db  0x65 ; 'e'
0000000000000d28         db  0x77 ; 'w'
0000000000000d29         db  0x63 ; 'c'
0000000000000d2a         db  0x68 ; 'h'
0000000000000d2b         db  0x75 ; 'u'
0000000000000d2c         db  0x6e ; 'n'
0000000000000d2d         db  0x6b ; 'k'
0000000000000d2e         db  0x00 ; '.'
0000000000000d2f         db  0x67 ; 'g'
0000000000000d30         db  0x65 ; 'e'
0000000000000d31         db  0x74 ; 't'
0000000000000d32         db  0x6f ; 'o'
0000000000000d33         db  0x70 ; 'p'
0000000000000d34         db  0x74 ; 't'
0000000000000d35         db  0x5f ; '_'
0000000000000d36         db  0x6c ; 'l'
0000000000000d37         db  0x6f ; 'o'
0000000000000d38         db  0x6e ; 'n'
0000000000000d39         db  0x67 ; 'g'
0000000000000d3a         db  0x00 ; '.'
0000000000000d3b         db  0x5f ; '_'
0000000000000d3c         db  0x5f ; '_'
0000000000000d3d         db  0x66 ; 'f'
0000000000000d3e         db  0x78 ; 'x'
0000000000000d3f         db  0x73 ; 's'
0000000000000d40         db  0x74 ; 't'
0000000000000d41         db  0x61 ; 'a'
0000000000000d42         db  0x74 ; 't'
0000000000000d43         db  0x00 ; '.'
0000000000000d44         db  0x66 ; 'f'
0000000000000d45         db  0x69 ; 'i'
0000000000000d46         db  0x6c ; 'l'
0000000000000d47         db  0x65 ; 'e'
0000000000000d48         db  0x6e ; 'n'
0000000000000d49         db  0x6f ; 'o'
0000000000000d4a         db  0x00 ; '.'
0000000000000d4b         db  0x5f ; '_'
0000000000000d4c         db  0x6f ; 'o'
0000000000000d4d         db  0x62 ; 'b'
0000000000000d4e         db  0x73 ; 's'
0000000000000d4f         db  0x74 ; 't'
0000000000000d50         db  0x61 ; 'a'
0000000000000d51         db  0x63 ; 'c'
0000000000000d52         db  0x6b ; 'k'
0000000000000d53         db  0x5f ; '_'
0000000000000d54         db  0x6d ; 'm'
0000000000000d55         db  0x65 ; 'e'
0000000000000d56         db  0x6d ; 'm'
0000000000000d57         db  0x6f ; 'o'
0000000000000d58         db  0x72 ; 'r'
0000000000000d59         db  0x79 ; 'y'
0000000000000d5a         db  0x5f ; '_'
0000000000000d5b         db  0x75 ; 'u'
0000000000000d5c         db  0x73 ; 's'
0000000000000d5d         db  0x65 ; 'e'
0000000000000d5e         db  0x64 ; 'd'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0x66 ; 'f'
0000000000000d61         db  0x77 ; 'w'
0000000000000d62         db  0x72 ; 'r'
0000000000000d63         db  0x69 ; 'i'
0000000000000d64         db  0x74 ; 't'
0000000000000d65         db  0x65 ; 'e'
0000000000000d66         db  0x00 ; '.'
0000000000000d67         db  0x5f ; '_'
0000000000000d68         db  0x5f ; '_'
0000000000000d69         db  0x66 ; 'f'
0000000000000d6a         db  0x70 ; 'p'
0000000000000d6b         db  0x65 ; 'e'
0000000000000d6c         db  0x6e ; 'n'
0000000000000d6d         db  0x64 ; 'd'
0000000000000d6e         db  0x69 ; 'i'
0000000000000d6f         db  0x6e ; 'n'
0000000000000d70         db  0x67 ; 'g'
0000000000000d71         db  0x00 ; '.'
0000000000000d72         db  0x73 ; 's'
0000000000000d73         db  0x74 ; 't'
0000000000000d74         db  0x72 ; 'r'
0000000000000d75         db  0x63 ; 'c'
0000000000000d76         db  0x68 ; 'h'
0000000000000d77         db  0x72 ; 'r'
0000000000000d78         db  0x00 ; '.'
0000000000000d79         db  0x69 ; 'i'
0000000000000d7a         db  0x73 ; 's'
0000000000000d7b         db  0x77 ; 'w'
0000000000000d7c         db  0x63 ; 'c'
0000000000000d7d         db  0x6e ; 'n'
0000000000000d7e         db  0x74 ; 't'
0000000000000d7f         db  0x72 ; 'r'
0000000000000d80         db  0x6c ; 'l'
0000000000000d81         db  0x00 ; '.'
0000000000000d82         db  0x70 ; 'p'
0000000000000d83         db  0x72 ; 'r'
0000000000000d84         db  0x6f ; 'o'
0000000000000d85         db  0x67 ; 'g'
0000000000000d86         db  0x72 ; 'r'
0000000000000d87         db  0x61 ; 'a'
0000000000000d88         db  0x6d ; 'm'
0000000000000d89         db  0x5f ; '_'
0000000000000d8a         db  0x69 ; 'i'
0000000000000d8b         db  0x6e ; 'n'
0000000000000d8c         db  0x76 ; 'v'
0000000000000d8d         db  0x6f ; 'o'
0000000000000d8e         db  0x63 ; 'c'
0000000000000d8f         db  0x61 ; 'a'
0000000000000d90         db  0x74 ; 't'
0000000000000d91         db  0x69 ; 'i'
0000000000000d92         db  0x6f ; 'o'
0000000000000d93         db  0x6e ; 'n'
0000000000000d94         db  0x5f ; '_'
0000000000000d95         db  0x73 ; 's'
0000000000000d96         db  0x68 ; 'h'
0000000000000d97         db  0x6f ; 'o'
0000000000000d98         db  0x72 ; 'r'
0000000000000d99         db  0x74 ; 't'
0000000000000d9a         db  0x5f ; '_'
0000000000000d9b         db  0x6e ; 'n'
0000000000000d9c         db  0x61 ; 'a'
0000000000000d9d         db  0x6d ; 'm'
0000000000000d9e         db  0x65 ; 'e'
0000000000000d9f         db  0x00 ; '.'
0000000000000da0         db  0x6f ; 'o'
0000000000000da1         db  0x62 ; 'b'
0000000000000da2         db  0x73 ; 's'
0000000000000da3         db  0x74 ; 't'
0000000000000da4         db  0x61 ; 'a'
0000000000000da5         db  0x63 ; 'c'
0000000000000da6         db  0x6b ; 'k'
0000000000000da7         db  0x5f ; '_'
0000000000000da8         db  0x61 ; 'a'
0000000000000da9         db  0x6c ; 'l'
0000000000000daa         db  0x6c ; 'l'
0000000000000dab         db  0x6f ; 'o'
0000000000000dac         db  0x63 ; 'c'
0000000000000dad         db  0x5f ; '_'
0000000000000dae         db  0x66 ; 'f'
0000000000000daf         db  0x61 ; 'a'
0000000000000db0         db  0x69 ; 'i'
0000000000000db1         db  0x6c ; 'l'
0000000000000db2         db  0x65 ; 'e'
0000000000000db3         db  0x64 ; 'd'
0000000000000db4         db  0x5f ; '_'
0000000000000db5         db  0x68 ; 'h'
0000000000000db6         db  0x61 ; 'a'
0000000000000db7         db  0x6e ; 'n'
0000000000000db8         db  0x64 ; 'd'
0000000000000db9         db  0x6c ; 'l'
0000000000000dba         db  0x65 ; 'e'
0000000000000dbb         db  0x72 ; 'r'
0000000000000dbc         db  0x00 ; '.'
0000000000000dbd         db  0x5f ; '_'
0000000000000dbe         db  0x5f ; '_'
0000000000000dbf         db  0x63 ; 'c'
0000000000000dc0         db  0x78 ; 'x'
0000000000000dc1         db  0x61 ; 'a'
0000000000000dc2         db  0x5f ; '_'
0000000000000dc3         db  0x66 ; 'f'
0000000000000dc4         db  0x69 ; 'i'
0000000000000dc5         db  0x6e ; 'n'
0000000000000dc6         db  0x61 ; 'a'
0000000000000dc7         db  0x6c ; 'l'
0000000000000dc8         db  0x69 ; 'i'
0000000000000dc9         db  0x7a ; 'z'
0000000000000dca         db  0x65 ; 'e'
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x73 ; 's'
0000000000000dcd         db  0x65 ; 'e'
0000000000000dce         db  0x74 ; 't'
0000000000000dcf         db  0x76 ; 'v'
0000000000000dd0         db  0x62 ; 'b'
0000000000000dd1         db  0x75 ; 'u'
0000000000000dd2         db  0x66 ; 'f'
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x5f ; '_'
0000000000000dd5         db  0x5f ; '_'
0000000000000dd6         db  0x78 ; 'x'
0000000000000dd7         db  0x73 ; 's'
0000000000000dd8         db  0x74 ; 't'
0000000000000dd9         db  0x61 ; 'a'
0000000000000dda         db  0x74 ; 't'
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x5f ; '_'
0000000000000ddd         db  0x6f ; 'o'
0000000000000dde         db  0x62 ; 'b'
0000000000000ddf         db  0x73 ; 's'
0000000000000de0         db  0x74 ; 't'
0000000000000de1         db  0x61 ; 'a'
0000000000000de2         db  0x63 ; 'c'
0000000000000de3         db  0x6b ; 'k'
0000000000000de4         db  0x5f ; '_'
0000000000000de5         db  0x62 ; 'b'
0000000000000de6         db  0x65 ; 'e'
0000000000000de7         db  0x67 ; 'g'
0000000000000de8         db  0x69 ; 'i'
0000000000000de9         db  0x6e ; 'n'
0000000000000dea         db  0x00 ; '.'
0000000000000deb         db  0x62 ; 'b'
0000000000000dec         db  0x69 ; 'i'
0000000000000ded         db  0x6e ; 'n'
0000000000000dee         db  0x64 ; 'd'
0000000000000def         db  0x74 ; 't'
0000000000000df0         db  0x65 ; 'e'
0000000000000df1         db  0x78 ; 'x'
0000000000000df2         db  0x74 ; 't'
0000000000000df3         db  0x64 ; 'd'
0000000000000df4         db  0x6f ; 'o'
0000000000000df5         db  0x6d ; 'm'
0000000000000df6         db  0x61 ; 'a'
0000000000000df7         db  0x69 ; 'i'
0000000000000df8         db  0x6e ; 'n'
0000000000000df9         db  0x00 ; '.'
0000000000000dfa         db  0x73 ; 's'
0000000000000dfb         db  0x79 ; 'y'
0000000000000dfc         db  0x73 ; 's'
0000000000000dfd         db  0x69 ; 'i'
0000000000000dfe         db  0x6e ; 'n'
0000000000000dff         db  0x66 ; 'f'
0000000000000e00         db  0x6f ; 'o'
0000000000000e01         db  0x00 ; '.'
0000000000000e02         db  0x73 ; 's'
0000000000000e03         db  0x74 ; 't'
0000000000000e04         db  0x72 ; 'r'
0000000000000e05         db  0x63 ; 'c'
0000000000000e06         db  0x6d ; 'm'
0000000000000e07         db  0x70 ; 'p'
0000000000000e08         db  0x00 ; '.'
0000000000000e09         db  0x5f ; '_'
0000000000000e0a         db  0x5f ; '_'
0000000000000e0b         db  0x6c ; 'l'
0000000000000e0c         db  0x69 ; 'i'
0000000000000e0d         db  0x62 ; 'b'
0000000000000e0e         db  0x63 ; 'c'
0000000000000e0f         db  0x5f ; '_'
0000000000000e10         db  0x73 ; 's'
0000000000000e11         db  0x74 ; 't'
0000000000000e12         db  0x61 ; 'a'
0000000000000e13         db  0x72 ; 'r'
0000000000000e14         db  0x74 ; 't'
0000000000000e15         db  0x5f ; '_'
0000000000000e16         db  0x6d ; 'm'
0000000000000e17         db  0x61 ; 'a'
0000000000000e18         db  0x69 ; 'i'
0000000000000e19         db  0x6e ; 'n'
0000000000000e1a         db  0x00 ; '.'
0000000000000e1b         db  0x66 ; 'f'
0000000000000e1c         db  0x65 ; 'e'
0000000000000e1d         db  0x72 ; 'r'
0000000000000e1e         db  0x72 ; 'r'
0000000000000e1f         db  0x6f ; 'o'
0000000000000e20         db  0x72 ; 'r'
0000000000000e21         db  0x00 ; '.'
0000000000000e22         db  0x66 ; 'f'
0000000000000e23         db  0x73 ; 's'
0000000000000e24         db  0x65 ; 'e'
0000000000000e25         db  0x65 ; 'e'
0000000000000e26         db  0x6b ; 'k'
0000000000000e27         db  0x6f ; 'o'
0000000000000e28         db  0x00 ; '.'
0000000000000e29         db  0x5f ; '_'
0000000000000e2a         db  0x5f ; '_'
0000000000000e2b         db  0x6f ; 'o'
0000000000000e2c         db  0x76 ; 'v'
0000000000000e2d         db  0x65 ; 'e'
0000000000000e2e         db  0x72 ; 'r'
0000000000000e2f         db  0x66 ; 'f'
0000000000000e30         db  0x6c ; 'l'
0000000000000e31         db  0x6f ; 'o'
0000000000000e32         db  0x77 ; 'w'
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x73 ; 's'
0000000000000e35         db  0x79 ; 'y'
0000000000000e36         db  0x73 ; 's'
0000000000000e37         db  0x63 ; 'c'
0000000000000e38         db  0x6f ; 'o'
0000000000000e39         db  0x6e ; 'n'
0000000000000e3a         db  0x66 ; 'f'
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x5f ; '_'
0000000000000e3d         db  0x6f ; 'o'
0000000000000e3e         db  0x62 ; 'b'
0000000000000e3f         db  0x73 ; 's'
0000000000000e40         db  0x74 ; 't'
0000000000000e41         db  0x61 ; 'a'
0000000000000e42         db  0x63 ; 'c'
0000000000000e43         db  0x6b ; 'k'
0000000000000e44         db  0x5f ; '_'
0000000000000e45         db  0x66 ; 'f'
0000000000000e46         db  0x72 ; 'r'
0000000000000e47         db  0x65 ; 'e'
0000000000000e48         db  0x65 ; 'e'
0000000000000e49         db  0x00 ; '.'
0000000000000e4a         db  0x66 ; 'f'
0000000000000e4b         db  0x70 ; 'p'
0000000000000e4c         db  0x75 ; 'u'
0000000000000e4d         db  0x74 ; 't'
0000000000000e4e         db  0x73 ; 's'
0000000000000e4f         db  0x5f ; '_'
0000000000000e50         db  0x75 ; 'u'
0000000000000e51         db  0x6e ; 'n'
0000000000000e52         db  0x6c ; 'l'
0000000000000e53         db  0x6f ; 'o'
0000000000000e54         db  0x63 ; 'c'
0000000000000e55         db  0x6b ; 'k'
0000000000000e56         db  0x65 ; 'e'
0000000000000e57         db  0x64 ; 'd'
0000000000000e58         db  0x00 ; '.'
0000000000000e59         db  0x5f ; '_'
0000000000000e5a         db  0x5f ; '_'
0000000000000e5b         db  0x70 ; 'p'
0000000000000e5c         db  0x72 ; 'r'
0000000000000e5d         db  0x6f ; 'o'
0000000000000e5e         db  0x67 ; 'g'
0000000000000e5f         db  0x6e ; 'n'
0000000000000e60         db  0x61 ; 'a'
0000000000000e61         db  0x6d ; 'm'
0000000000000e62         db  0x65 ; 'e'
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x5f ; '_'
0000000000000e65         db  0x5f ; '_'
0000000000000e66         db  0x70 ; 'p'
0000000000000e67         db  0x72 ; 'r'
0000000000000e68         db  0x6f ; 'o'
0000000000000e69         db  0x67 ; 'g'
0000000000000e6a         db  0x6e ; 'n'
0000000000000e6b         db  0x61 ; 'a'
0000000000000e6c         db  0x6d ; 'm'
0000000000000e6d         db  0x65 ; 'e'
0000000000000e6e         db  0x5f ; '_'
0000000000000e6f         db  0x66 ; 'f'
0000000000000e70         db  0x75 ; 'u'
0000000000000e71         db  0x6c ; 'l'
0000000000000e72         db  0x6c ; 'l'
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x5f ; '_'
0000000000000e75         db  0x5f ; '_'
0000000000000e76         db  0x63 ; 'c'
0000000000000e77         db  0x78 ; 'x'
0000000000000e78         db  0x61 ; 'a'
0000000000000e79         db  0x5f ; '_'
0000000000000e7a         db  0x61 ; 'a'
0000000000000e7b         db  0x74 ; 't'
0000000000000e7c         db  0x65 ; 'e'
0000000000000e7d         db  0x78 ; 'x'
0000000000000e7e         db  0x69 ; 'i'
0000000000000e7f         db  0x74 ; 't'
0000000000000e80         db  0x00 ; '.'
0000000000000e81         db  0x47 ; 'G'
0000000000000e82         db  0x4c ; 'L'
0000000000000e83         db  0x49 ; 'I'
0000000000000e84         db  0x42 ; 'B'
0000000000000e85         db  0x43 ; 'C'
0000000000000e86         db  0x5f ; '_'
0000000000000e87         db  0x32 ; '2'
0000000000000e88         db  0x2e ; '.'
0000000000000e89         db  0x33 ; '3'
0000000000000e8a         db  0x00 ; '.'
0000000000000e8b         db  0x47 ; 'G'
0000000000000e8c         db  0x4c ; 'L'
0000000000000e8d         db  0x49 ; 'I'
0000000000000e8e         db  0x42 ; 'B'
0000000000000e8f         db  0x43 ; 'C'
0000000000000e90         db  0x5f ; '_'
0000000000000e91         db  0x32 ; '2'
0000000000000e92         db  0x2e ; '.'
0000000000000e93         db  0x31 ; '1'
0000000000000e94         db  0x34 ; '4'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x47 ; 'G'
0000000000000e97         db  0x4c ; 'L'
0000000000000e98         db  0x49 ; 'I'
0000000000000e99         db  0x42 ; 'B'
0000000000000e9a         db  0x43 ; 'C'
0000000000000e9b         db  0x5f ; '_'
0000000000000e9c         db  0x32 ; '2'
0000000000000e9d         db  0x2e ; '.'
0000000000000e9e         db  0x33 ; '3'
0000000000000e9f         db  0x2e ; '.'
0000000000000ea0         db  0x34 ; '4'
0000000000000ea1         db  0x00 ; '.'
0000000000000ea2         db  0x47 ; 'G'
0000000000000ea3         db  0x4c ; 'L'
0000000000000ea4         db  0x49 ; 'I'
0000000000000ea5         db  0x42 ; 'B'
0000000000000ea6         db  0x43 ; 'C'
0000000000000ea7         db  0x5f ; '_'
0000000000000ea8         db  0x32 ; '2'
0000000000000ea9         db  0x2e ; '.'
0000000000000eaa         db  0x34 ; '4'
0000000000000eab         db  0x00 ; '.'
0000000000000eac         db  0x47 ; 'G'
0000000000000ead         db  0x4c ; 'L'
0000000000000eae         db  0x49 ; 'I'
0000000000000eaf         db  0x42 ; 'B'
0000000000000eb0         db  0x43 ; 'C'
0000000000000eb1         db  0x5f ; '_'
0000000000000eb2         db  0x32 ; '2'
0000000000000eb3         db  0x2e ; '.'
0000000000000eb4         db  0x32 ; '2'
0000000000000eb5         db  0x2e ; '.'
0000000000000eb6         db  0x35 ; '5'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0x5f ; '_'
0000000000000eb9         db  0x49 ; 'I'
0000000000000eba         db  0x54 ; 'T'
0000000000000ebb         db  0x4d ; 'M'
0000000000000ebc         db  0x5f ; '_'
0000000000000ebd         db  0x64 ; 'd'
0000000000000ebe         db  0x65 ; 'e'
0000000000000ebf         db  0x72 ; 'r'
0000000000000ec0         db  0x65 ; 'e'
0000000000000ec1         db  0x67 ; 'g'
0000000000000ec2         db  0x69 ; 'i'
0000000000000ec3         db  0x73 ; 's'
0000000000000ec4         db  0x74 ; 't'
0000000000000ec5         db  0x65 ; 'e'
0000000000000ec6         db  0x72 ; 'r'
0000000000000ec7         db  0x54 ; 'T'
0000000000000ec8         db  0x4d ; 'M'
0000000000000ec9         db  0x43 ; 'C'
0000000000000eca         db  0x6c ; 'l'
0000000000000ecb         db  0x6f ; 'o'
0000000000000ecc         db  0x6e ; 'n'
0000000000000ecd         db  0x65 ; 'e'
0000000000000ece         db  0x54 ; 'T'
0000000000000ecf         db  0x61 ; 'a'
0000000000000ed0         db  0x62 ; 'b'
0000000000000ed1         db  0x6c ; 'l'
0000000000000ed2         db  0x65 ; 'e'
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x5f ; '_'
0000000000000ed5         db  0x5f ; '_'
0000000000000ed6         db  0x67 ; 'g'
0000000000000ed7         db  0x6d ; 'm'
0000000000000ed8         db  0x6f ; 'o'
0000000000000ed9         db  0x6e ; 'n'
0000000000000eda         db  0x5f ; '_'
0000000000000edb         db  0x73 ; 's'
0000000000000edc         db  0x74 ; 't'
0000000000000edd         db  0x61 ; 'a'
0000000000000ede         db  0x72 ; 'r'
0000000000000edf         db  0x74 ; 't'
0000000000000ee0         db  0x5f ; '_'
0000000000000ee1         db  0x5f ; '_'
0000000000000ee2         db  0x00 ; '.'
0000000000000ee3         db  0x5f ; '_'
0000000000000ee4         db  0x49 ; 'I'
0000000000000ee5         db  0x54 ; 'T'
0000000000000ee6         db  0x4d ; 'M'
0000000000000ee7         db  0x5f ; '_'
0000000000000ee8         db  0x72 ; 'r'
0000000000000ee9         db  0x65 ; 'e'
0000000000000eea         db  0x67 ; 'g'
0000000000000eeb         db  0x69 ; 'i'
0000000000000eec         db  0x73 ; 's'
0000000000000eed         db  0x74 ; 't'
0000000000000eee         db  0x65 ; 'e'
0000000000000eef         db  0x72 ; 'r'
0000000000000ef0         db  0x54 ; 'T'
0000000000000ef1         db  0x4d ; 'M'
0000000000000ef2         db  0x43 ; 'C'
0000000000000ef3         db  0x6c ; 'l'
0000000000000ef4         db  0x6f ; 'o'
0000000000000ef5         db  0x6e ; 'n'
0000000000000ef6         db  0x65 ; 'e'
0000000000000ef7         db  0x54 ; 'T'
0000000000000ef8         db  0x61 ; 'a'
0000000000000ef9         db  0x62 ; 'b'
0000000000000efa         db  0x6c ; 'l'
0000000000000efb         db  0x65 ; 'e'
0000000000000efc         db  0x00 ; '.'
0000000000000efd         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xefe; 0xfac[ (174 bytes)
        ; File offset : [3838; 4012[ (174 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0x02 ; '.'
0000000000000f01         db  0x00 ; '.'
0000000000000f02         db  0x02 ; '.'
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x02 ; '.'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x02 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0x02 ; '.'
0000000000000f09         db  0x00 ; '.'
0000000000000f0a         db  0x00 ; '.'
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x02 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x02 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0x02 ; '.'
0000000000000f11         db  0x00 ; '.'
0000000000000f12         db  0x02 ; '.'
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x02 ; '.'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x02 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0x02 ; '.'
0000000000000f19         db  0x00 ; '.'
0000000000000f1a         db  0x02 ; '.'
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x02 ; '.'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x02 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0x03 ; '.'
0000000000000f21         db  0x00 ; '.'
0000000000000f22         db  0x02 ; '.'
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x02 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x02 ; '.'
0000000000000f27         db  0x00 ; '.'
0000000000000f28         db  0x02 ; '.'
0000000000000f29         db  0x00 ; '.'
0000000000000f2a         db  0x02 ; '.'
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x02 ; '.'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x02 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0x02 ; '.'
0000000000000f31         db  0x00 ; '.'
0000000000000f32         db  0x02 ; '.'
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x02 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x02 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0x02 ; '.'
0000000000000f39         db  0x00 ; '.'
0000000000000f3a         db  0x02 ; '.'
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x02 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x02 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0x02 ; '.'
0000000000000f41         db  0x00 ; '.'
0000000000000f42         db  0x02 ; '.'
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x02 ; '.'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x04 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0x02 ; '.'
0000000000000f49         db  0x00 ; '.'
0000000000000f4a         db  0x00 ; '.'
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x05 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x02 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0x02 ; '.'
0000000000000f51         db  0x00 ; '.'
0000000000000f52         db  0x02 ; '.'
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x02 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x02 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0x02 ; '.'
0000000000000f59         db  0x00 ; '.'
0000000000000f5a         db  0x02 ; '.'
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x02 ; '.'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x02 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0x02 ; '.'
0000000000000f61         db  0x00 ; '.'
0000000000000f62         db  0x04 ; '.'
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x02 ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x02 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0x02 ; '.'
0000000000000f69         db  0x00 ; '.'
0000000000000f6a         db  0x02 ; '.'
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x02 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x02 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0x02 ; '.'
0000000000000f71         db  0x00 ; '.'
0000000000000f72         db  0x02 ; '.'
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x02 ; '.'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x02 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0x02 ; '.'
0000000000000f79         db  0x00 ; '.'
0000000000000f7a         db  0x02 ; '.'
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x02 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x04 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0x00 ; '.'
0000000000000f81         db  0x00 ; '.'
0000000000000f82         db  0x02 ; '.'
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x02 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x02 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0x02 ; '.'
0000000000000f89         db  0x00 ; '.'
0000000000000f8a         db  0x06 ; '.'
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x01 ; '.'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x01 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0x02 ; '.'
0000000000000f91         db  0x00 ; '.'
0000000000000f92         db  0x01 ; '.'
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x01 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x02 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0x02 ; '.'
0000000000000f99         db  0x00 ; '.'
0000000000000f9a         db  0x01 ; '.'
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x02 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x01 ; '.'
0000000000000f9f         db  0x00 ; '.'
0000000000000fa0         db  0x02 ; '.'
0000000000000fa1         db  0x00 ; '.'
0000000000000fa2         db  0x02 ; '.'
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x02 ; '.'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x02 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0x02 ; '.'
0000000000000fa9         db  0x00 ; '.'
0000000000000faa         db  0x01 ; '.'
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x00 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xfb0; 0x1010[ (96 bytes)
        ; File offset : [4016; 4112[ (96 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000fb0         db  0x01 ; '.'
0000000000000fb1         db  0x00 ; '.'
0000000000000fb2         db  0x05 ; '.'
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x01 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0x10 ; '.'
0000000000000fb9         db  0x00 ; '.'
0000000000000fba         db  0x00 ; '.'
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x00 ; '.'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0x13 ; '.'
0000000000000fc1         db  0x69 ; 'i'
0000000000000fc2         db  0x69 ; 'i'
0000000000000fc3         db  0x0d ; '.'
0000000000000fc4         db  0x00 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x06 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0x51 ; 'Q'
0000000000000fc9         db  0x03 ; '.'
0000000000000fca         db  0x00 ; '.'
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x10 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0x94 ; '.'
0000000000000fd1         db  0x91 ; '.'
0000000000000fd2         db  0x96 ; '.'
0000000000000fd3         db  0x06 ; '.'
0000000000000fd4         db  0x00 ; '.'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x05 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x5b ; '['
0000000000000fd9         db  0x03 ; '.'
0000000000000fda         db  0x00 ; '.'
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x10 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0x74 ; 't'                                         ; DATA XREF=_obstack_begin_worker+22
0000000000000fe1         db  0x19 ; '.'
0000000000000fe2         db  0x69 ; 'i'
0000000000000fe3         db  0x09 ; '.'
0000000000000fe4         db  0x00 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x04 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0x66 ; 'f'
0000000000000fe9         db  0x03 ; '.'
0000000000000fea         db  0x00 ; '.'
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x10 ; '.'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x14 ; '.'
0000000000000ff1         db  0x69 ; 'i'
0000000000000ff2         db  0x69 ; 'i'
0000000000000ff3         db  0x0d ; '.'
0000000000000ff4         db  0x00 ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x03 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0x72 ; 'r'
0000000000000ff9         db  0x03 ; '.'
0000000000000ffa         db  0x00 ; '.'
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x10 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'
0000000000001000         db  0x75 ; 'u'
0000000000001001         db  0x1a ; '.'
0000000000001002         db  0x69 ; 'i'
0000000000001003         db  0x09 ; '.'
0000000000001004         db  0x00 ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x02 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x7c ; '|'
0000000000001009         db  0x03 ; '.'
000000000000100a         db  0x00 ; '.'
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x00 ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0x1010; 0x13b8[ (936 bytes)
        ; File offset : [4112; 5048[ (936 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000001010         db  0x30 ; '0'
0000000000001011         db  0x9a ; '.'
0000000000001012         db  0x20 ; ' '
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0x08 ; '.'
0000000000001019         db  0x00 ; '.'
000000000000101a         db  0x00 ; '.'
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x00 ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x40 ; '@'
0000000000001021         db  0x29 ; ')'
0000000000001022         db  0x00 ; '.'
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x00 ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x38 ; '8'
0000000000001029         db  0x9a ; '.'
000000000000102a         db  0x20 ; ' '
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x00 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0x08 ; '.'
0000000000001031         db  0x00 ; '.'
0000000000001032         db  0x00 ; '.'
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x00 ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x00 ; '.'
0000000000001039         db  0x29 ; ')'
000000000000103a         db  0x00 ; '.'
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x00 ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0x40 ; '@'
0000000000001041         db  0x9a ; '.'
0000000000001042         db  0x20 ; ' '
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x00 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0x08 ; '.'
0000000000001049         db  0x00 ; '.'
000000000000104a         db  0x00 ; '.'
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x00 ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x67 ; 'g'
0000000000001051         db  0x71 ; 'q'
0000000000001052         db  0x00 ; '.'
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x00 ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0x60 ; '`'
0000000000001059         db  0x9a ; '.'
000000000000105a         db  0x20 ; ' '
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0x08 ; '.'
0000000000001061         db  0x00 ; '.'
0000000000001062         db  0x00 ; '.'
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x00 ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x6d ; 'm'
0000000000001069         db  0x71 ; 'q'
000000000000106a         db  0x00 ; '.'
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x00 ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0x80 ; '.'
0000000000001071         db  0x9a ; '.'
0000000000001072         db  0x20 ; ' '
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x00 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0x08 ; '.'
0000000000001079         db  0x00 ; '.'
000000000000107a         db  0x00 ; '.'
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x00 ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x73 ; 's'
0000000000001081         db  0x71 ; 'q'
0000000000001082         db  0x00 ; '.'
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x00 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0xa0 ; '.'
0000000000001089         db  0x9a ; '.'
000000000000108a         db  0x20 ; ' '
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x00 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0x08 ; '.'
0000000000001091         db  0x00 ; '.'
0000000000001092         db  0x00 ; '.'
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x00 ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x79 ; 'y'
0000000000001099         db  0x71 ; 'q'
000000000000109a         db  0x00 ; '.'
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x00 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0xc0 ; '.'
00000000000010a1         db  0x9a ; '.'
00000000000010a2         db  0x20 ; ' '
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x00 ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0x08 ; '.'
00000000000010a9         db  0x00 ; '.'
00000000000010aa         db  0x00 ; '.'
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x00 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x7f ; '.'
00000000000010b1         db  0x71 ; 'q'
00000000000010b2         db  0x00 ; '.'
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x00 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0xe0 ; '.'
00000000000010b9         db  0x9a ; '.'
00000000000010ba         db  0x20 ; ' '
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x00 ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0x08 ; '.'
00000000000010c1         db  0x00 ; '.'
00000000000010c2         db  0x00 ; '.'
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x00 ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x8b ; '.'
00000000000010c9         db  0x71 ; 'q'
00000000000010ca         db  0x00 ; '.'
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x00 ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0x00 ; '.'
00000000000010d1         db  0x9b ; '.'
00000000000010d2         db  0x20 ; ' '
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x00 ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0x08 ; '.'
00000000000010d9         db  0x00 ; '.'
00000000000010da         db  0x00 ; '.'
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x00 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x9b ; '.'
00000000000010e1         db  0x71 ; 'q'
00000000000010e2         db  0x00 ; '.'
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x00 ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0x20 ; ' '
00000000000010e9         db  0x9b ; '.'
00000000000010ea         db  0x20 ; ' '
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x00 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0x08 ; '.'
00000000000010f1         db  0x00 ; '.'
00000000000010f2         db  0x00 ; '.'
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x00 ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0xa0 ; '.'
00000000000010f9         db  0x71 ; 'q'
00000000000010fa         db  0x00 ; '.'
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x00 ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0x60 ; '`'
0000000000001101         db  0x9b ; '.'
0000000000001102         db  0x20 ; ' '
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x00 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0x08 ; '.'
0000000000001109         db  0x00 ; '.'
000000000000110a         db  0x00 ; '.'
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x00 ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0x29 ; ')'
0000000000001111         db  0x79 ; 'y'
0000000000001112         db  0x00 ; '.'
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x00 ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0x68 ; 'h'
0000000000001119         db  0x9b ; '.'
000000000000111a         db  0x20 ; ' '
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x00 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x08 ; '.'
0000000000001121         db  0x00 ; '.'
0000000000001122         db  0x00 ; '.'
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x00 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0x31 ; '1'
0000000000001129         db  0x79 ; 'y'
000000000000112a         db  0x00 ; '.'
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x00 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0x70 ; 'p'
0000000000001131         db  0x9b ; '.'
0000000000001132         db  0x20 ; ' '
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x00 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x08 ; '.'
0000000000001139         db  0x00 ; '.'
000000000000113a         db  0x00 ; '.'
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x00 ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0x37 ; '7'
0000000000001141         db  0x79 ; 'y'
0000000000001142         db  0x00 ; '.'
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x00 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0x78 ; 'x'
0000000000001149         db  0x9b ; '.'
000000000000114a         db  0x20 ; ' '
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x00 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x08 ; '.'
0000000000001151         db  0x00 ; '.'
0000000000001152         db  0x00 ; '.'
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x00 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0x44 ; 'D'
0000000000001159         db  0x79 ; 'y'
000000000000115a         db  0x00 ; '.'
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x00 ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0x80 ; '.'
0000000000001161         db  0x9b ; '.'
0000000000001162         db  0x20 ; ' '
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x00 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x08 ; '.'
0000000000001169         db  0x00 ; '.'
000000000000116a         db  0x00 ; '.'
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x00 ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0x51 ; 'Q'
0000000000001171         db  0x79 ; 'y'
0000000000001172         db  0x00 ; '.'
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x00 ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0x88 ; '.'
0000000000001179         db  0x9b ; '.'
000000000000117a         db  0x20 ; ' '
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x00 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x08 ; '.'
0000000000001181         db  0x00 ; '.'
0000000000001182         db  0x00 ; '.'
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x00 ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x36 ; '6'
0000000000001189         db  0x71 ; 'q'
000000000000118a         db  0x00 ; '.'
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x00 ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0x90 ; '.'
0000000000001191         db  0x9b ; '.'
0000000000001192         db  0x20 ; ' '
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x00 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0x08 ; '.'
0000000000001199         db  0x00 ; '.'
000000000000119a         db  0x00 ; '.'
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x00 ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x65 ; 'e'
00000000000011a1         db  0x79 ; 'y'
00000000000011a2         db  0x00 ; '.'
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x00 ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0x98 ; '.'
00000000000011a9         db  0x9b ; '.'
00000000000011aa         db  0x20 ; ' '
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x00 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0x08 ; '.'
00000000000011b1         db  0x00 ; '.'
00000000000011b2         db  0x00 ; '.'
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x00 ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x4a ; 'J'
00000000000011b9         db  0x79 ; 'y'
00000000000011ba         db  0x00 ; '.'
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x00 ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0xa0 ; '.'
00000000000011c1         db  0x9b ; '.'
00000000000011c2         db  0x20 ; ' '
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x00 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0x08 ; '.'
00000000000011c9         db  0x00 ; '.'
00000000000011ca         db  0x00 ; '.'
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x00 ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0xaa ; '.'
00000000000011d1         db  0x70 ; 'p'
00000000000011d2         db  0x00 ; '.'
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x00 ; '.'
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0xa8 ; '.'
00000000000011d9         db  0x9b ; '.'
00000000000011da         db  0x20 ; ' '
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x00 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0x08 ; '.'
00000000000011e1         db  0x00 ; '.'
00000000000011e2         db  0x00 ; '.'
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x00 ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x6d ; 'm'
00000000000011e9         db  0x79 ; 'y'
00000000000011ea         db  0x00 ; '.'
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x00 ; '.'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0x08 ; '.'
00000000000011f1         db  0xa0 ; '.'
00000000000011f2         db  0x20 ; ' '
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x00 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0x08 ; '.'
00000000000011f9         db  0x00 ; '.'
00000000000011fa         db  0x00 ; '.'
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x00 ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x08 ; '.'
0000000000001201         db  0xa0 ; '.'
0000000000001202         db  0x20 ; ' '
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x00 ; '.'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0x10 ; '.'
0000000000001209         db  0xa0 ; '.'
000000000000120a         db  0x20 ; ' '
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x00 ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0x08 ; '.'
0000000000001211         db  0x00 ; '.'
0000000000001212         db  0x00 ; '.'
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x00 ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x78 ; 'x'
0000000000001219         db  0x78 ; 'x'
000000000000121a         db  0x00 ; '.'
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x00 ; '.'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0x60 ; '`'
0000000000001221         db  0xa0 ; '.'
0000000000001222         db  0x20 ; ' '
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x00 ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0x08 ; '.'
0000000000001229         db  0x00 ; '.'
000000000000122a         db  0x00 ; '.'
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x00 ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x70 ; 'p'
0000000000001231         db  0xa0 ; '.'
0000000000001232         db  0x20 ; ' '
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x00 ; '.'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0x78 ; 'x'
0000000000001239         db  0xa0 ; '.'
000000000000123a         db  0x20 ; ' '
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x00 ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x08 ; '.'
0000000000001241         db  0x00 ; '.'
0000000000001242         db  0x00 ; '.'
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x00 ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x60 ; '`'
0000000000001249         db  0xa1 ; '.'
000000000000124a         db  0x20 ; ' '
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x00 ; '.'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0x80 ; '.'
0000000000001251         db  0xa0 ; '.'
0000000000001252         db  0x20 ; ' '
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x00 ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0x08 ; '.'
0000000000001259         db  0x00 ; '.'
000000000000125a         db  0x00 ; '.'
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x00 ; '.'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0xf0 ; '.'
0000000000001261         db  0x6a ; 'j'
0000000000001262         db  0x00 ; '.'
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x00 ; '.'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0xb8 ; '.'
0000000000001269         db  0x9f ; '.'
000000000000126a         db  0x20 ; ' '
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x00 ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x06 ; '.'
0000000000001271         db  0x00 ; '.'
0000000000001272         db  0x00 ; '.'
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x02 ; '.'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x00 ; '.'
0000000000001279         db  0x00 ; '.'
000000000000127a         db  0x00 ; '.'
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x00 ; '.'
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0xc0 ; '.'
0000000000001281         db  0x9f ; '.'
0000000000001282         db  0x20 ; ' '
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x00 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0x06 ; '.'
0000000000001289         db  0x00 ; '.'
000000000000128a         db  0x00 ; '.'
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x06 ; '.'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x00 ; '.'
0000000000001291         db  0x00 ; '.'
0000000000001292         db  0x00 ; '.'
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x00 ; '.'
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0xc8 ; '.'
0000000000001299         db  0x9f ; '.'
000000000000129a         db  0x20 ; ' '
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x00 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0x06 ; '.'
00000000000012a1         db  0x00 ; '.'
00000000000012a2         db  0x00 ; '.'
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x1f ; '.'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x00 ; '.'
00000000000012a9         db  0x00 ; '.'
00000000000012aa         db  0x00 ; '.'
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x00 ; '.'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0xd0 ; '.'
00000000000012b1         db  0x9f ; '.'
00000000000012b2         db  0x20 ; ' '
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x00 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0x06 ; '.'
00000000000012b9         db  0x00 ; '.'
00000000000012ba         db  0x00 ; '.'
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x26 ; '&'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x00 ; '.'
00000000000012c1         db  0x00 ; '.'
00000000000012c2         db  0x00 ; '.'
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x00 ; '.'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0xd8 ; '.'
00000000000012c9         db  0x9f ; '.'
00000000000012ca         db  0x20 ; ' '
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x00 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0x06 ; '.'
00000000000012d1         db  0x00 ; '.'
00000000000012d2         db  0x00 ; '.'
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x2b ; '+'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x00 ; '.'
00000000000012d9         db  0x00 ; '.'
00000000000012da         db  0x00 ; '.'
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x00 ; '.'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0xe0 ; '.'
00000000000012e1         db  0x9f ; '.'
00000000000012e2         db  0x20 ; ' '
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x00 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0x06 ; '.'
00000000000012e9         db  0x00 ; '.'
00000000000012ea         db  0x00 ; '.'
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x41 ; 'A'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x00 ; '.'
00000000000012f1         db  0x00 ; '.'
00000000000012f2         db  0x00 ; '.'
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x00 ; '.'
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0xe8 ; '.'
00000000000012f9         db  0x9f ; '.'
00000000000012fa         db  0x20 ; ' '
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x00 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0x06 ; '.'
0000000000001301         db  0x00 ; '.'
0000000000001302         db  0x00 ; '.'
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x44 ; 'D'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x00 ; '.'
0000000000001309         db  0x00 ; '.'
000000000000130a         db  0x00 ; '.'
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x00 ; '.'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0xa0 ; '.'
0000000000001311         db  0xa0 ; '.'
0000000000001312         db  0x20 ; ' '
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x00 ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0x05 ; '.'
0000000000001319         db  0x00 ; '.'
000000000000131a         db  0x00 ; '.'
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x4c ; 'L'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x00 ; '.'
0000000000001321         db  0x00 ; '.'
0000000000001322         db  0x00 ; '.'
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x00 ; '.'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0xa8 ; '.'
0000000000001329         db  0xa0 ; '.'
000000000000132a         db  0x20 ; ' '
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x00 ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0x05 ; '.'
0000000000001331         db  0x00 ; '.'
0000000000001332         db  0x00 ; '.'
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x49 ; 'I'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x00 ; '.'
0000000000001339         db  0x00 ; '.'
000000000000133a         db  0x00 ; '.'
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x00 ; '.'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0xb0 ; '.'
0000000000001341         db  0xa0 ; '.'
0000000000001342         db  0x20 ; ' '
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x00 ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0x05 ; '.'
0000000000001349         db  0x00 ; '.'
000000000000134a         db  0x00 ; '.'
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x4d ; 'M'
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x00 ; '.'
0000000000001351         db  0x00 ; '.'
0000000000001352         db  0x00 ; '.'
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x00 ; '.'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0xb8 ; '.'
0000000000001359         db  0xa0 ; '.'
000000000000135a         db  0x20 ; ' '
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x00 ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0x05 ; '.'
0000000000001361         db  0x00 ; '.'
0000000000001362         db  0x00 ; '.'
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x54 ; 'T'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0x00 ; '.'
0000000000001369         db  0x00 ; '.'
000000000000136a         db  0x00 ; '.'
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x00 ; '.'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0xc0 ; '.'
0000000000001371         db  0xa0 ; '.'
0000000000001372         db  0x20 ; ' '
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x00 ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0x05 ; '.'
0000000000001379         db  0x00 ; '.'
000000000000137a         db  0x00 ; '.'
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x55 ; 'U'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0x00 ; '.'
0000000000001381         db  0x00 ; '.'
0000000000001382         db  0x00 ; '.'
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x00 ; '.'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0xc8 ; '.'
0000000000001389         db  0xa0 ; '.'
000000000000138a         db  0x20 ; ' '
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x00 ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'
0000000000001390         db  0x05 ; '.'
0000000000001391         db  0x00 ; '.'
0000000000001392         db  0x00 ; '.'
0000000000001393         db  0x00 ; '.'
0000000000001394         db  0x51 ; 'Q'
0000000000001395         db  0x00 ; '.'
0000000000001396         db  0x00 ; '.'
0000000000001397         db  0x00 ; '.'
0000000000001398         db  0x00 ; '.'
0000000000001399         db  0x00 ; '.'
000000000000139a         db  0x00 ; '.'
000000000000139b         db  0x00 ; '.'
000000000000139c         db  0x00 ; '.'
000000000000139d         db  0x00 ; '.'
000000000000139e         db  0x00 ; '.'
000000000000139f         db  0x00 ; '.'
00000000000013a0         db  0xe0 ; '.'
00000000000013a1         db  0xa0 ; '.'
00000000000013a2         db  0x20 ; ' '
00000000000013a3         db  0x00 ; '.'
00000000000013a4         db  0x00 ; '.'
00000000000013a5         db  0x00 ; '.'
00000000000013a6         db  0x00 ; '.'
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x05 ; '.'
00000000000013a9         db  0x00 ; '.'
00000000000013aa         db  0x00 ; '.'
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x53 ; 'S'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'
00000000000013b0         db  0x00 ; '.'
00000000000013b1         db  0x00 ; '.'
00000000000013b2         db  0x00 ; '.'
00000000000013b3         db  0x00 ; '.'
00000000000013b4         db  0x00 ; '.'
00000000000013b5         db  0x00 ; '.'
00000000000013b6         db  0x00 ; '.'
00000000000013b7         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0x13b8; 0x19a0[ (1512 bytes)
        ; File offset : [5048; 6560[ (1512 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

00000000000013b8         db  0xc0 ; '.'
00000000000013b9         db  0x9d ; '.'
00000000000013ba         db  0x20 ; ' '
00000000000013bb         db  0x00 ; '.'
00000000000013bc         db  0x00 ; '.'
00000000000013bd         db  0x00 ; '.'
00000000000013be         db  0x00 ; '.'
00000000000013bf         db  0x00 ; '.'
00000000000013c0         db  0x07 ; '.'
00000000000013c1         db  0x00 ; '.'
00000000000013c2         db  0x00 ; '.'
00000000000013c3         db  0x00 ; '.'
00000000000013c4         db  0x01 ; '.'
00000000000013c5         db  0x00 ; '.'
00000000000013c6         db  0x00 ; '.'
00000000000013c7         db  0x00 ; '.'
00000000000013c8         db  0x00 ; '.'
00000000000013c9         db  0x00 ; '.'
00000000000013ca         db  0x00 ; '.'
00000000000013cb         db  0x00 ; '.'
00000000000013cc         db  0x00 ; '.'
00000000000013cd         db  0x00 ; '.'
00000000000013ce         db  0x00 ; '.'
00000000000013cf         db  0x00 ; '.'
00000000000013d0         db  0xc8 ; '.'
00000000000013d1         db  0x9d ; '.'
00000000000013d2         db  0x20 ; ' '
00000000000013d3         db  0x00 ; '.'
00000000000013d4         db  0x00 ; '.'
00000000000013d5         db  0x00 ; '.'
00000000000013d6         db  0x00 ; '.'
00000000000013d7         db  0x00 ; '.'
00000000000013d8         db  0x07 ; '.'
00000000000013d9         db  0x00 ; '.'
00000000000013da         db  0x00 ; '.'
00000000000013db         db  0x00 ; '.'
00000000000013dc         db  0x03 ; '.'
00000000000013dd         db  0x00 ; '.'
00000000000013de         db  0x00 ; '.'
00000000000013df         db  0x00 ; '.'
00000000000013e0         db  0x00 ; '.'
00000000000013e1         db  0x00 ; '.'
00000000000013e2         db  0x00 ; '.'
00000000000013e3         db  0x00 ; '.'
00000000000013e4         db  0x00 ; '.'
00000000000013e5         db  0x00 ; '.'
00000000000013e6         db  0x00 ; '.'
00000000000013e7         db  0x00 ; '.'
00000000000013e8         db  0xd0 ; '.'
00000000000013e9         db  0x9d ; '.'
00000000000013ea         db  0x20 ; ' '
00000000000013eb         db  0x00 ; '.'
00000000000013ec         db  0x00 ; '.'
00000000000013ed         db  0x00 ; '.'
00000000000013ee         db  0x00 ; '.'
00000000000013ef         db  0x00 ; '.'
00000000000013f0         db  0x07 ; '.'
00000000000013f1         db  0x00 ; '.'
00000000000013f2         db  0x00 ; '.'
00000000000013f3         db  0x00 ; '.'
00000000000013f4         db  0x04 ; '.'
00000000000013f5         db  0x00 ; '.'
00000000000013f6         db  0x00 ; '.'
00000000000013f7         db  0x00 ; '.'
00000000000013f8         db  0x00 ; '.'
00000000000013f9         db  0x00 ; '.'
00000000000013fa         db  0x00 ; '.'
00000000000013fb         db  0x00 ; '.'
00000000000013fc         db  0x00 ; '.'
00000000000013fd         db  0x00 ; '.'
00000000000013fe         db  0x00 ; '.'
00000000000013ff         db  0x00 ; '.'
0000000000001400         db  0xd8 ; '.'
0000000000001401         db  0x9d ; '.'
0000000000001402         db  0x20 ; ' '
0000000000001403         db  0x00 ; '.'
0000000000001404         db  0x00 ; '.'
0000000000001405         db  0x00 ; '.'
0000000000001406         db  0x00 ; '.'
0000000000001407         db  0x00 ; '.'
0000000000001408         db  0x07 ; '.'
0000000000001409         db  0x00 ; '.'
000000000000140a         db  0x00 ; '.'
000000000000140b         db  0x00 ; '.'
000000000000140c         db  0x05 ; '.'
000000000000140d         db  0x00 ; '.'
000000000000140e         db  0x00 ; '.'
000000000000140f         db  0x00 ; '.'
0000000000001410         db  0x00 ; '.'
0000000000001411         db  0x00 ; '.'
0000000000001412         db  0x00 ; '.'
0000000000001413         db  0x00 ; '.'
0000000000001414         db  0x00 ; '.'
0000000000001415         db  0x00 ; '.'
0000000000001416         db  0x00 ; '.'
0000000000001417         db  0x00 ; '.'
0000000000001418         db  0xe0 ; '.'
0000000000001419         db  0x9d ; '.'
000000000000141a         db  0x20 ; ' '
000000000000141b         db  0x00 ; '.'
000000000000141c         db  0x00 ; '.'
000000000000141d         db  0x00 ; '.'
000000000000141e         db  0x00 ; '.'
000000000000141f         db  0x00 ; '.'
0000000000001420         db  0x07 ; '.'
0000000000001421         db  0x00 ; '.'
0000000000001422         db  0x00 ; '.'
0000000000001423         db  0x00 ; '.'
0000000000001424         db  0x07 ; '.'
0000000000001425         db  0x00 ; '.'
0000000000001426         db  0x00 ; '.'
0000000000001427         db  0x00 ; '.'
0000000000001428         db  0x00 ; '.'
0000000000001429         db  0x00 ; '.'
000000000000142a         db  0x00 ; '.'
000000000000142b         db  0x00 ; '.'
000000000000142c         db  0x00 ; '.'
000000000000142d         db  0x00 ; '.'
000000000000142e         db  0x00 ; '.'
000000000000142f         db  0x00 ; '.'
0000000000001430         db  0xe8 ; '.'
0000000000001431         db  0x9d ; '.'
0000000000001432         db  0x20 ; ' '
0000000000001433         db  0x00 ; '.'
0000000000001434         db  0x00 ; '.'
0000000000001435         db  0x00 ; '.'
0000000000001436         db  0x00 ; '.'
0000000000001437         db  0x00 ; '.'
0000000000001438         db  0x07 ; '.'
0000000000001439         db  0x00 ; '.'
000000000000143a         db  0x00 ; '.'
000000000000143b         db  0x00 ; '.'
000000000000143c         db  0x08 ; '.'
000000000000143d         db  0x00 ; '.'
000000000000143e         db  0x00 ; '.'
000000000000143f         db  0x00 ; '.'
0000000000001440         db  0x00 ; '.'
0000000000001441         db  0x00 ; '.'
0000000000001442         db  0x00 ; '.'
0000000000001443         db  0x00 ; '.'
0000000000001444         db  0x00 ; '.'
0000000000001445         db  0x00 ; '.'
0000000000001446         db  0x00 ; '.'
0000000000001447         db  0x00 ; '.'
0000000000001448         db  0xf0 ; '.'
0000000000001449         db  0x9d ; '.'
000000000000144a         db  0x20 ; ' '
000000000000144b         db  0x00 ; '.'
000000000000144c         db  0x00 ; '.'
000000000000144d         db  0x00 ; '.'
000000000000144e         db  0x00 ; '.'
000000000000144f         db  0x00 ; '.'
0000000000001450         db  0x07 ; '.'
0000000000001451         db  0x00 ; '.'
0000000000001452         db  0x00 ; '.'
0000000000001453         db  0x00 ; '.'
0000000000001454         db  0x09 ; '.'
0000000000001455         db  0x00 ; '.'
0000000000001456         db  0x00 ; '.'
0000000000001457         db  0x00 ; '.'
0000000000001458         db  0x00 ; '.'
0000000000001459         db  0x00 ; '.'
000000000000145a         db  0x00 ; '.'
000000000000145b         db  0x00 ; '.'
000000000000145c         db  0x00 ; '.'
000000000000145d         db  0x00 ; '.'
000000000000145e         db  0x00 ; '.'
000000000000145f         db  0x00 ; '.'
0000000000001460         db  0xf8 ; '.'
0000000000001461         db  0x9d ; '.'
0000000000001462         db  0x20 ; ' '
0000000000001463         db  0x00 ; '.'
0000000000001464         db  0x00 ; '.'
0000000000001465         db  0x00 ; '.'
0000000000001466         db  0x00 ; '.'
0000000000001467         db  0x00 ; '.'
0000000000001468         db  0x07 ; '.'
0000000000001469         db  0x00 ; '.'
000000000000146a         db  0x00 ; '.'
000000000000146b         db  0x00 ; '.'
000000000000146c         db  0x0a ; '.'
000000000000146d         db  0x00 ; '.'
000000000000146e         db  0x00 ; '.'
000000000000146f         db  0x00 ; '.'
0000000000001470         db  0x00 ; '.'
0000000000001471         db  0x00 ; '.'
0000000000001472         db  0x00 ; '.'
0000000000001473         db  0x00 ; '.'
0000000000001474         db  0x00 ; '.'
0000000000001475         db  0x00 ; '.'
0000000000001476         db  0x00 ; '.'
0000000000001477         db  0x00 ; '.'
0000000000001478         db  0x00 ; '.'
0000000000001479         db  0x9e ; '.'
000000000000147a         db  0x20 ; ' '
000000000000147b         db  0x00 ; '.'
000000000000147c         db  0x00 ; '.'
000000000000147d         db  0x00 ; '.'
000000000000147e         db  0x00 ; '.'
000000000000147f         db  0x00 ; '.'
0000000000001480         db  0x07 ; '.'
0000000000001481         db  0x00 ; '.'
0000000000001482         db  0x00 ; '.'
0000000000001483         db  0x00 ; '.'
0000000000001484         db  0x0b ; '.'
0000000000001485         db  0x00 ; '.'
0000000000001486         db  0x00 ; '.'
0000000000001487         db  0x00 ; '.'
0000000000001488         db  0x00 ; '.'
0000000000001489         db  0x00 ; '.'
000000000000148a         db  0x00 ; '.'
000000000000148b         db  0x00 ; '.'
000000000000148c         db  0x00 ; '.'
000000000000148d         db  0x00 ; '.'
000000000000148e         db  0x00 ; '.'
000000000000148f         db  0x00 ; '.'
0000000000001490         db  0x08 ; '.'
0000000000001491         db  0x9e ; '.'
0000000000001492         db  0x20 ; ' '
0000000000001493         db  0x00 ; '.'
0000000000001494         db  0x00 ; '.'
0000000000001495         db  0x00 ; '.'
0000000000001496         db  0x00 ; '.'
0000000000001497         db  0x00 ; '.'
0000000000001498         db  0x07 ; '.'
0000000000001499         db  0x00 ; '.'
000000000000149a         db  0x00 ; '.'
000000000000149b         db  0x00 ; '.'
000000000000149c         db  0x0c ; '.'
000000000000149d         db  0x00 ; '.'
000000000000149e         db  0x00 ; '.'
000000000000149f         db  0x00 ; '.'
00000000000014a0         db  0x00 ; '.'
00000000000014a1         db  0x00 ; '.'
00000000000014a2         db  0x00 ; '.'
00000000000014a3         db  0x00 ; '.'
00000000000014a4         db  0x00 ; '.'
00000000000014a5         db  0x00 ; '.'
00000000000014a6         db  0x00 ; '.'
00000000000014a7         db  0x00 ; '.'
00000000000014a8         db  0x10 ; '.'
00000000000014a9         db  0x9e ; '.'
00000000000014aa         db  0x20 ; ' '
00000000000014ab         db  0x00 ; '.'
00000000000014ac         db  0x00 ; '.'
00000000000014ad         db  0x00 ; '.'
00000000000014ae         db  0x00 ; '.'
00000000000014af         db  0x00 ; '.'
00000000000014b0         db  0x07 ; '.'
00000000000014b1         db  0x00 ; '.'
00000000000014b2         db  0x00 ; '.'
00000000000014b3         db  0x00 ; '.'
00000000000014b4         db  0x0d ; '.'
00000000000014b5         db  0x00 ; '.'
00000000000014b6         db  0x00 ; '.'
00000000000014b7         db  0x00 ; '.'
00000000000014b8         db  0x00 ; '.'
00000000000014b9         db  0x00 ; '.'
00000000000014ba         db  0x00 ; '.'
00000000000014bb         db  0x00 ; '.'
00000000000014bc         db  0x00 ; '.'
00000000000014bd         db  0x00 ; '.'
00000000000014be         db  0x00 ; '.'
00000000000014bf         db  0x00 ; '.'
00000000000014c0         db  0x18 ; '.'
00000000000014c1         db  0x9e ; '.'
00000000000014c2         db  0x20 ; ' '
00000000000014c3         db  0x00 ; '.'
00000000000014c4         db  0x00 ; '.'
00000000000014c5         db  0x00 ; '.'
00000000000014c6         db  0x00 ; '.'
00000000000014c7         db  0x00 ; '.'
00000000000014c8         db  0x07 ; '.'
00000000000014c9         db  0x00 ; '.'
00000000000014ca         db  0x00 ; '.'
00000000000014cb         db  0x00 ; '.'
00000000000014cc         db  0x0e ; '.'
00000000000014cd         db  0x00 ; '.'
00000000000014ce         db  0x00 ; '.'
00000000000014cf         db  0x00 ; '.'
00000000000014d0         db  0x00 ; '.'
00000000000014d1         db  0x00 ; '.'
00000000000014d2         db  0x00 ; '.'
00000000000014d3         db  0x00 ; '.'
00000000000014d4         db  0x00 ; '.'
00000000000014d5         db  0x00 ; '.'
00000000000014d6         db  0x00 ; '.'
00000000000014d7         db  0x00 ; '.'
00000000000014d8         db  0x20 ; ' '
00000000000014d9         db  0x9e ; '.'
00000000000014da         db  0x20 ; ' '
00000000000014db         db  0x00 ; '.'
00000000000014dc         db  0x00 ; '.'
00000000000014dd         db  0x00 ; '.'
00000000000014de         db  0x00 ; '.'
00000000000014df         db  0x00 ; '.'
00000000000014e0         db  0x07 ; '.'
00000000000014e1         db  0x00 ; '.'
00000000000014e2         db  0x00 ; '.'
00000000000014e3         db  0x00 ; '.'
00000000000014e4         db  0x0f ; '.'
00000000000014e5         db  0x00 ; '.'
00000000000014e6         db  0x00 ; '.'
00000000000014e7         db  0x00 ; '.'
00000000000014e8         db  0x00 ; '.'
00000000000014e9         db  0x00 ; '.'
00000000000014ea         db  0x00 ; '.'
00000000000014eb         db  0x00 ; '.'
00000000000014ec         db  0x00 ; '.'
00000000000014ed         db  0x00 ; '.'
00000000000014ee         db  0x00 ; '.'
00000000000014ef         db  0x00 ; '.'
00000000000014f0         db  0x28 ; '('
00000000000014f1         db  0x9e ; '.'
00000000000014f2         db  0x20 ; ' '
00000000000014f3         db  0x00 ; '.'
00000000000014f4         db  0x00 ; '.'
00000000000014f5         db  0x00 ; '.'
00000000000014f6         db  0x00 ; '.'
00000000000014f7         db  0x00 ; '.'
00000000000014f8         db  0x07 ; '.'
00000000000014f9         db  0x00 ; '.'
00000000000014fa         db  0x00 ; '.'
00000000000014fb         db  0x00 ; '.'
00000000000014fc         db  0x10 ; '.'
00000000000014fd         db  0x00 ; '.'
00000000000014fe         db  0x00 ; '.'
00000000000014ff         db  0x00 ; '.'
0000000000001500         db  0x00 ; '.'
0000000000001501         db  0x00 ; '.'
0000000000001502         db  0x00 ; '.'
0000000000001503         db  0x00 ; '.'
0000000000001504         db  0x00 ; '.'
0000000000001505         db  0x00 ; '.'
0000000000001506         db  0x00 ; '.'
0000000000001507         db  0x00 ; '.'
0000000000001508         db  0x30 ; '0'
0000000000001509         db  0x9e ; '.'
000000000000150a         db  0x20 ; ' '
000000000000150b         db  0x00 ; '.'
000000000000150c         db  0x00 ; '.'
000000000000150d         db  0x00 ; '.'
000000000000150e         db  0x00 ; '.'
000000000000150f         db  0x00 ; '.'
0000000000001510         db  0x07 ; '.'
0000000000001511         db  0x00 ; '.'
0000000000001512         db  0x00 ; '.'
0000000000001513         db  0x00 ; '.'
0000000000001514         db  0x11 ; '.'
0000000000001515         db  0x00 ; '.'
0000000000001516         db  0x00 ; '.'
0000000000001517         db  0x00 ; '.'
0000000000001518         db  0x00 ; '.'
0000000000001519         db  0x00 ; '.'
000000000000151a         db  0x00 ; '.'
000000000000151b         db  0x00 ; '.'
000000000000151c         db  0x00 ; '.'
000000000000151d         db  0x00 ; '.'
000000000000151e         db  0x00 ; '.'
000000000000151f         db  0x00 ; '.'
0000000000001520         db  0x38 ; '8'
0000000000001521         db  0x9e ; '.'
0000000000001522         db  0x20 ; ' '
0000000000001523         db  0x00 ; '.'
0000000000001524         db  0x00 ; '.'
0000000000001525         db  0x00 ; '.'
0000000000001526         db  0x00 ; '.'
0000000000001527         db  0x00 ; '.'
0000000000001528         db  0x07 ; '.'
0000000000001529         db  0x00 ; '.'
000000000000152a         db  0x00 ; '.'
000000000000152b         db  0x00 ; '.'
000000000000152c         db  0x12 ; '.'
000000000000152d         db  0x00 ; '.'
000000000000152e         db  0x00 ; '.'
000000000000152f         db  0x00 ; '.'
0000000000001530         db  0x00 ; '.'
0000000000001531         db  0x00 ; '.'
0000000000001532         db  0x00 ; '.'
0000000000001533         db  0x00 ; '.'
0000000000001534         db  0x00 ; '.'
0000000000001535         db  0x00 ; '.'
0000000000001536         db  0x00 ; '.'
0000000000001537         db  0x00 ; '.'
0000000000001538         db  0x40 ; '@'
0000000000001539         db  0x9e ; '.'
000000000000153a         db  0x20 ; ' '
000000000000153b         db  0x00 ; '.'
000000000000153c         db  0x00 ; '.'
000000000000153d         db  0x00 ; '.'
000000000000153e         db  0x00 ; '.'
000000000000153f         db  0x00 ; '.'
0000000000001540         db  0x07 ; '.'
0000000000001541         db  0x00 ; '.'
0000000000001542         db  0x00 ; '.'
0000000000001543         db  0x00 ; '.'
0000000000001544         db  0x13 ; '.'
0000000000001545         db  0x00 ; '.'
0000000000001546         db  0x00 ; '.'
0000000000001547         db  0x00 ; '.'
0000000000001548         db  0x00 ; '.'
0000000000001549         db  0x00 ; '.'
000000000000154a         db  0x00 ; '.'
000000000000154b         db  0x00 ; '.'
000000000000154c         db  0x00 ; '.'
000000000000154d         db  0x00 ; '.'
000000000000154e         db  0x00 ; '.'
000000000000154f         db  0x00 ; '.'
0000000000001550         db  0x48 ; 'H'
0000000000001551         db  0x9e ; '.'
0000000000001552         db  0x20 ; ' '
0000000000001553         db  0x00 ; '.'
0000000000001554         db  0x00 ; '.'
0000000000001555         db  0x00 ; '.'
0000000000001556         db  0x00 ; '.'
0000000000001557         db  0x00 ; '.'
0000000000001558         db  0x07 ; '.'
0000000000001559         db  0x00 ; '.'
000000000000155a         db  0x00 ; '.'
000000000000155b         db  0x00 ; '.'
000000000000155c         db  0x14 ; '.'
000000000000155d         db  0x00 ; '.'
000000000000155e         db  0x00 ; '.'
000000000000155f         db  0x00 ; '.'
0000000000001560         db  0x00 ; '.'
0000000000001561         db  0x00 ; '.'
0000000000001562         db  0x00 ; '.'
0000000000001563         db  0x00 ; '.'
0000000000001564         db  0x00 ; '.'
0000000000001565         db  0x00 ; '.'
0000000000001566         db  0x00 ; '.'
0000000000001567         db  0x00 ; '.'
0000000000001568         db  0x50 ; 'P'
0000000000001569         db  0x9e ; '.'
000000000000156a         db  0x20 ; ' '
000000000000156b         db  0x00 ; '.'
000000000000156c         db  0x00 ; '.'
000000000000156d         db  0x00 ; '.'
000000000000156e         db  0x00 ; '.'
000000000000156f         db  0x00 ; '.'
0000000000001570         db  0x07 ; '.'
0000000000001571         db  0x00 ; '.'
0000000000001572         db  0x00 ; '.'
0000000000001573         db  0x00 ; '.'
0000000000001574         db  0x15 ; '.'
0000000000001575         db  0x00 ; '.'
0000000000001576         db  0x00 ; '.'
0000000000001577         db  0x00 ; '.'
0000000000001578         db  0x00 ; '.'
0000000000001579         db  0x00 ; '.'
000000000000157a         db  0x00 ; '.'
000000000000157b         db  0x00 ; '.'
000000000000157c         db  0x00 ; '.'
000000000000157d         db  0x00 ; '.'
000000000000157e         db  0x00 ; '.'
000000000000157f         db  0x00 ; '.'
0000000000001580         db  0x58 ; 'X'
0000000000001581         db  0x9e ; '.'
0000000000001582         db  0x20 ; ' '
0000000000001583         db  0x00 ; '.'
0000000000001584         db  0x00 ; '.'
0000000000001585         db  0x00 ; '.'
0000000000001586         db  0x00 ; '.'
0000000000001587         db  0x00 ; '.'
0000000000001588         db  0x07 ; '.'
0000000000001589         db  0x00 ; '.'
000000000000158a         db  0x00 ; '.'
000000000000158b         db  0x00 ; '.'
000000000000158c         db  0x16 ; '.'
000000000000158d         db  0x00 ; '.'
000000000000158e         db  0x00 ; '.'
000000000000158f         db  0x00 ; '.'
0000000000001590         db  0x00 ; '.'
0000000000001591         db  0x00 ; '.'
0000000000001592         db  0x00 ; '.'
0000000000001593         db  0x00 ; '.'
0000000000001594         db  0x00 ; '.'
0000000000001595         db  0x00 ; '.'
0000000000001596         db  0x00 ; '.'
0000000000001597         db  0x00 ; '.'
0000000000001598         db  0x60 ; '`'
0000000000001599         db  0x9e ; '.'
000000000000159a         db  0x20 ; ' '
000000000000159b         db  0x00 ; '.'
000000000000159c         db  0x00 ; '.'
000000000000159d         db  0x00 ; '.'
000000000000159e         db  0x00 ; '.'
000000000000159f         db  0x00 ; '.'
00000000000015a0         db  0x07 ; '.'
00000000000015a1         db  0x00 ; '.'
00000000000015a2         db  0x00 ; '.'
00000000000015a3         db  0x00 ; '.'
00000000000015a4         db  0x17 ; '.'
00000000000015a5         db  0x00 ; '.'
00000000000015a6         db  0x00 ; '.'
00000000000015a7         db  0x00 ; '.'
00000000000015a8         db  0x00 ; '.'
00000000000015a9         db  0x00 ; '.'
00000000000015aa         db  0x00 ; '.'
00000000000015ab         db  0x00 ; '.'
00000000000015ac         db  0x00 ; '.'
00000000000015ad         db  0x00 ; '.'
00000000000015ae         db  0x00 ; '.'
00000000000015af         db  0x00 ; '.'
00000000000015b0         db  0x68 ; 'h'
00000000000015b1         db  0x9e ; '.'
00000000000015b2         db  0x20 ; ' '
00000000000015b3         db  0x00 ; '.'
00000000000015b4         db  0x00 ; '.'
00000000000015b5         db  0x00 ; '.'
00000000000015b6         db  0x00 ; '.'
00000000000015b7         db  0x00 ; '.'
00000000000015b8         db  0x07 ; '.'
00000000000015b9         db  0x00 ; '.'
00000000000015ba         db  0x00 ; '.'
00000000000015bb         db  0x00 ; '.'
00000000000015bc         db  0x18 ; '.'
00000000000015bd         db  0x00 ; '.'
00000000000015be         db  0x00 ; '.'
00000000000015bf         db  0x00 ; '.'
00000000000015c0         db  0x00 ; '.'
00000000000015c1         db  0x00 ; '.'
00000000000015c2         db  0x00 ; '.'
00000000000015c3         db  0x00 ; '.'
00000000000015c4         db  0x00 ; '.'
00000000000015c5         db  0x00 ; '.'
00000000000015c6         db  0x00 ; '.'
00000000000015c7         db  0x00 ; '.'
00000000000015c8         db  0x70 ; 'p'
00000000000015c9         db  0x9e ; '.'
00000000000015ca         db  0x20 ; ' '
00000000000015cb         db  0x00 ; '.'
00000000000015cc         db  0x00 ; '.'
00000000000015cd         db  0x00 ; '.'
00000000000015ce         db  0x00 ; '.'
00000000000015cf         db  0x00 ; '.'
00000000000015d0         db  0x07 ; '.'
00000000000015d1         db  0x00 ; '.'
00000000000015d2         db  0x00 ; '.'
00000000000015d3         db  0x00 ; '.'
00000000000015d4         db  0x19 ; '.'
00000000000015d5         db  0x00 ; '.'
00000000000015d6         db  0x00 ; '.'
00000000000015d7         db  0x00 ; '.'
00000000000015d8         db  0x00 ; '.'
00000000000015d9         db  0x00 ; '.'
00000000000015da         db  0x00 ; '.'
00000000000015db         db  0x00 ; '.'
00000000000015dc         db  0x00 ; '.'
00000000000015dd         db  0x00 ; '.'
00000000000015de         db  0x00 ; '.'
00000000000015df         db  0x00 ; '.'
00000000000015e0         db  0x78 ; 'x'
00000000000015e1         db  0x9e ; '.'
00000000000015e2         db  0x20 ; ' '
00000000000015e3         db  0x00 ; '.'
00000000000015e4         db  0x00 ; '.'
00000000000015e5         db  0x00 ; '.'
00000000000015e6         db  0x00 ; '.'
00000000000015e7         db  0x00 ; '.'
00000000000015e8         db  0x07 ; '.'
00000000000015e9         db  0x00 ; '.'
00000000000015ea         db  0x00 ; '.'
00000000000015eb         db  0x00 ; '.'
00000000000015ec         db  0x1a ; '.'
00000000000015ed         db  0x00 ; '.'
00000000000015ee         db  0x00 ; '.'
00000000000015ef         db  0x00 ; '.'
00000000000015f0         db  0x00 ; '.'
00000000000015f1         db  0x00 ; '.'
00000000000015f2         db  0x00 ; '.'
00000000000015f3         db  0x00 ; '.'
00000000000015f4         db  0x00 ; '.'
00000000000015f5         db  0x00 ; '.'
00000000000015f6         db  0x00 ; '.'
00000000000015f7         db  0x00 ; '.'
00000000000015f8         db  0x80 ; '.'
00000000000015f9         db  0x9e ; '.'
00000000000015fa         db  0x20 ; ' '
00000000000015fb         db  0x00 ; '.'
00000000000015fc         db  0x00 ; '.'
00000000000015fd         db  0x00 ; '.'
00000000000015fe         db  0x00 ; '.'
00000000000015ff         db  0x00 ; '.'
0000000000001600         db  0x07 ; '.'
0000000000001601         db  0x00 ; '.'
0000000000001602         db  0x00 ; '.'
0000000000001603         db  0x00 ; '.'
0000000000001604         db  0x1b ; '.'
0000000000001605         db  0x00 ; '.'
0000000000001606         db  0x00 ; '.'
0000000000001607         db  0x00 ; '.'
0000000000001608         db  0x00 ; '.'
0000000000001609         db  0x00 ; '.'
000000000000160a         db  0x00 ; '.'
000000000000160b         db  0x00 ; '.'
000000000000160c         db  0x00 ; '.'
000000000000160d         db  0x00 ; '.'
000000000000160e         db  0x00 ; '.'
000000000000160f         db  0x00 ; '.'
0000000000001610         db  0x88 ; '.'
0000000000001611         db  0x9e ; '.'
0000000000001612         db  0x20 ; ' '
0000000000001613         db  0x00 ; '.'
0000000000001614         db  0x00 ; '.'
0000000000001615         db  0x00 ; '.'
0000000000001616         db  0x00 ; '.'
0000000000001617         db  0x00 ; '.'
0000000000001618         db  0x07 ; '.'
0000000000001619         db  0x00 ; '.'
000000000000161a         db  0x00 ; '.'
000000000000161b         db  0x00 ; '.'
000000000000161c         db  0x1c ; '.'
000000000000161d         db  0x00 ; '.'
000000000000161e         db  0x00 ; '.'
000000000000161f         db  0x00 ; '.'
0000000000001620         db  0x00 ; '.'
0000000000001621         db  0x00 ; '.'
0000000000001622         db  0x00 ; '.'
0000000000001623         db  0x00 ; '.'
0000000000001624         db  0x00 ; '.'
0000000000001625         db  0x00 ; '.'
0000000000001626         db  0x00 ; '.'
0000000000001627         db  0x00 ; '.'
0000000000001628         db  0x90 ; '.'
0000000000001629         db  0x9e ; '.'
000000000000162a         db  0x20 ; ' '
000000000000162b         db  0x00 ; '.'
000000000000162c         db  0x00 ; '.'
000000000000162d         db  0x00 ; '.'
000000000000162e         db  0x00 ; '.'
000000000000162f         db  0x00 ; '.'
0000000000001630         db  0x07 ; '.'
0000000000001631         db  0x00 ; '.'
0000000000001632         db  0x00 ; '.'
0000000000001633         db  0x00 ; '.'
0000000000001634         db  0x1d ; '.'
0000000000001635         db  0x00 ; '.'
0000000000001636         db  0x00 ; '.'
0000000000001637         db  0x00 ; '.'
0000000000001638         db  0x00 ; '.'
0000000000001639         db  0x00 ; '.'
000000000000163a         db  0x00 ; '.'
000000000000163b         db  0x00 ; '.'
000000000000163c         db  0x00 ; '.'
000000000000163d         db  0x00 ; '.'
000000000000163e         db  0x00 ; '.'
000000000000163f         db  0x00 ; '.'
0000000000001640         db  0x98 ; '.'
0000000000001641         db  0x9e ; '.'
0000000000001642         db  0x20 ; ' '
0000000000001643         db  0x00 ; '.'
0000000000001644         db  0x00 ; '.'
0000000000001645         db  0x00 ; '.'
0000000000001646         db  0x00 ; '.'
0000000000001647         db  0x00 ; '.'
0000000000001648         db  0x07 ; '.'
0000000000001649         db  0x00 ; '.'
000000000000164a         db  0x00 ; '.'
000000000000164b         db  0x00 ; '.'
000000000000164c         db  0x1e ; '.'
000000000000164d         db  0x00 ; '.'
000000000000164e         db  0x00 ; '.'
000000000000164f         db  0x00 ; '.'
0000000000001650         db  0x00 ; '.'
0000000000001651         db  0x00 ; '.'
0000000000001652         db  0x00 ; '.'
0000000000001653         db  0x00 ; '.'
0000000000001654         db  0x00 ; '.'
0000000000001655         db  0x00 ; '.'
0000000000001656         db  0x00 ; '.'
0000000000001657         db  0x00 ; '.'
0000000000001658         db  0xa0 ; '.'
0000000000001659         db  0x9e ; '.'
000000000000165a         db  0x20 ; ' '
000000000000165b         db  0x00 ; '.'
000000000000165c         db  0x00 ; '.'
000000000000165d         db  0x00 ; '.'
000000000000165e         db  0x00 ; '.'
000000000000165f         db  0x00 ; '.'
0000000000001660         db  0x07 ; '.'
0000000000001661         db  0x00 ; '.'
0000000000001662         db  0x00 ; '.'
0000000000001663         db  0x00 ; '.'
0000000000001664         db  0x20 ; ' '
0000000000001665         db  0x00 ; '.'
0000000000001666         db  0x00 ; '.'
0000000000001667         db  0x00 ; '.'
0000000000001668         db  0x00 ; '.'
0000000000001669         db  0x00 ; '.'
000000000000166a         db  0x00 ; '.'
000000000000166b         db  0x00 ; '.'
000000000000166c         db  0x00 ; '.'
000000000000166d         db  0x00 ; '.'
000000000000166e         db  0x00 ; '.'
000000000000166f         db  0x00 ; '.'
0000000000001670         db  0xa8 ; '.'
0000000000001671         db  0x9e ; '.'
0000000000001672         db  0x20 ; ' '
0000000000001673         db  0x00 ; '.'
0000000000001674         db  0x00 ; '.'
0000000000001675         db  0x00 ; '.'
0000000000001676         db  0x00 ; '.'
0000000000001677         db  0x00 ; '.'
0000000000001678         db  0x07 ; '.'
0000000000001679         db  0x00 ; '.'
000000000000167a         db  0x00 ; '.'
000000000000167b         db  0x00 ; '.'
000000000000167c         db  0x21 ; '!'
000000000000167d         db  0x00 ; '.'
000000000000167e         db  0x00 ; '.'
000000000000167f         db  0x00 ; '.'
0000000000001680         db  0x00 ; '.'
0000000000001681         db  0x00 ; '.'
0000000000001682         db  0x00 ; '.'
0000000000001683         db  0x00 ; '.'
0000000000001684         db  0x00 ; '.'
0000000000001685         db  0x00 ; '.'
0000000000001686         db  0x00 ; '.'
0000000000001687         db  0x00 ; '.'
0000000000001688         db  0xb0 ; '.'
0000000000001689         db  0x9e ; '.'
000000000000168a         db  0x20 ; ' '
000000000000168b         db  0x00 ; '.'
000000000000168c         db  0x00 ; '.'
000000000000168d         db  0x00 ; '.'
000000000000168e         db  0x00 ; '.'
000000000000168f         db  0x00 ; '.'
0000000000001690         db  0x07 ; '.'
0000000000001691         db  0x00 ; '.'
0000000000001692         db  0x00 ; '.'
0000000000001693         db  0x00 ; '.'
0000000000001694         db  0x22 ; '"'
0000000000001695         db  0x00 ; '.'
0000000000001696         db  0x00 ; '.'
0000000000001697         db  0x00 ; '.'
0000000000001698         db  0x00 ; '.'
0000000000001699         db  0x00 ; '.'
000000000000169a         db  0x00 ; '.'
000000000000169b         db  0x00 ; '.'
000000000000169c         db  0x00 ; '.'
000000000000169d         db  0x00 ; '.'
000000000000169e         db  0x00 ; '.'
000000000000169f         db  0x00 ; '.'
00000000000016a0         db  0xb8 ; '.'
00000000000016a1         db  0x9e ; '.'
00000000000016a2         db  0x20 ; ' '
00000000000016a3         db  0x00 ; '.'
00000000000016a4         db  0x00 ; '.'
00000000000016a5         db  0x00 ; '.'
00000000000016a6         db  0x00 ; '.'
00000000000016a7         db  0x00 ; '.'
00000000000016a8         db  0x07 ; '.'
00000000000016a9         db  0x00 ; '.'
00000000000016aa         db  0x00 ; '.'
00000000000016ab         db  0x00 ; '.'
00000000000016ac         db  0x23 ; '#'
00000000000016ad         db  0x00 ; '.'
00000000000016ae         db  0x00 ; '.'
00000000000016af         db  0x00 ; '.'
00000000000016b0         db  0x00 ; '.'
00000000000016b1         db  0x00 ; '.'
00000000000016b2         db  0x00 ; '.'
00000000000016b3         db  0x00 ; '.'
00000000000016b4         db  0x00 ; '.'
00000000000016b5         db  0x00 ; '.'
00000000000016b6         db  0x00 ; '.'
00000000000016b7         db  0x00 ; '.'
00000000000016b8         db  0xc0 ; '.'
00000000000016b9         db  0x9e ; '.'
00000000000016ba         db  0x20 ; ' '
00000000000016bb         db  0x00 ; '.'
00000000000016bc         db  0x00 ; '.'
00000000000016bd         db  0x00 ; '.'
00000000000016be         db  0x00 ; '.'
00000000000016bf         db  0x00 ; '.'
00000000000016c0         db  0x07 ; '.'
00000000000016c1         db  0x00 ; '.'
00000000000016c2         db  0x00 ; '.'
00000000000016c3         db  0x00 ; '.'
00000000000016c4         db  0x24 ; '$'
00000000000016c5         db  0x00 ; '.'
00000000000016c6         db  0x00 ; '.'
00000000000016c7         db  0x00 ; '.'
00000000000016c8         db  0x00 ; '.'
00000000000016c9         db  0x00 ; '.'
00000000000016ca         db  0x00 ; '.'
00000000000016cb         db  0x00 ; '.'
00000000000016cc         db  0x00 ; '.'
00000000000016cd         db  0x00 ; '.'
00000000000016ce         db  0x00 ; '.'
00000000000016cf         db  0x00 ; '.'
00000000000016d0         db  0xc8 ; '.'
00000000000016d1         db  0x9e ; '.'
00000000000016d2         db  0x20 ; ' '
00000000000016d3         db  0x00 ; '.'
00000000000016d4         db  0x00 ; '.'
00000000000016d5         db  0x00 ; '.'
00000000000016d6         db  0x00 ; '.'
00000000000016d7         db  0x00 ; '.'
00000000000016d8         db  0x07 ; '.'
00000000000016d9         db  0x00 ; '.'
00000000000016da         db  0x00 ; '.'
00000000000016db         db  0x00 ; '.'
00000000000016dc         db  0x25 ; '%'
00000000000016dd         db  0x00 ; '.'
00000000000016de         db  0x00 ; '.'
00000000000016df         db  0x00 ; '.'
00000000000016e0         db  0x00 ; '.'
00000000000016e1         db  0x00 ; '.'
00000000000016e2         db  0x00 ; '.'
00000000000016e3         db  0x00 ; '.'
00000000000016e4         db  0x00 ; '.'
00000000000016e5         db  0x00 ; '.'
00000000000016e6         db  0x00 ; '.'
00000000000016e7         db  0x00 ; '.'
00000000000016e8         db  0xd0 ; '.'
00000000000016e9         db  0x9e ; '.'
00000000000016ea         db  0x20 ; ' '
00000000000016eb         db  0x00 ; '.'
00000000000016ec         db  0x00 ; '.'
00000000000016ed         db  0x00 ; '.'
00000000000016ee         db  0x00 ; '.'
00000000000016ef         db  0x00 ; '.'
00000000000016f0         db  0x07 ; '.'
00000000000016f1         db  0x00 ; '.'
00000000000016f2         db  0x00 ; '.'
00000000000016f3         db  0x00 ; '.'
00000000000016f4         db  0x27 ; '''
00000000000016f5         db  0x00 ; '.'
00000000000016f6         db  0x00 ; '.'
00000000000016f7         db  0x00 ; '.'
00000000000016f8         db  0x00 ; '.'
00000000000016f9         db  0x00 ; '.'
00000000000016fa         db  0x00 ; '.'
00000000000016fb         db  0x00 ; '.'
00000000000016fc         db  0x00 ; '.'
00000000000016fd         db  0x00 ; '.'
00000000000016fe         db  0x00 ; '.'
00000000000016ff         db  0x00 ; '.'
0000000000001700         db  0xd8 ; '.'
0000000000001701         db  0x9e ; '.'
0000000000001702         db  0x20 ; ' '
0000000000001703         db  0x00 ; '.'
0000000000001704         db  0x00 ; '.'
0000000000001705         db  0x00 ; '.'
0000000000001706         db  0x00 ; '.'
0000000000001707         db  0x00 ; '.'
0000000000001708         db  0x07 ; '.'
0000000000001709         db  0x00 ; '.'
000000000000170a         db  0x00 ; '.'
000000000000170b         db  0x00 ; '.'
000000000000170c         db  0x28 ; '('
000000000000170d         db  0x00 ; '.'
000000000000170e         db  0x00 ; '.'
000000000000170f         db  0x00 ; '.'
0000000000001710         db  0x00 ; '.'
0000000000001711         db  0x00 ; '.'
0000000000001712         db  0x00 ; '.'
0000000000001713         db  0x00 ; '.'
0000000000001714         db  0x00 ; '.'
0000000000001715         db  0x00 ; '.'
0000000000001716         db  0x00 ; '.'
0000000000001717         db  0x00 ; '.'
0000000000001718         db  0xe0 ; '.'
0000000000001719         db  0x9e ; '.'
000000000000171a         db  0x20 ; ' '
000000000000171b         db  0x00 ; '.'
000000000000171c         db  0x00 ; '.'
000000000000171d         db  0x00 ; '.'
000000000000171e         db  0x00 ; '.'
000000000000171f         db  0x00 ; '.'
0000000000001720         db  0x07 ; '.'
0000000000001721         db  0x00 ; '.'
0000000000001722         db  0x00 ; '.'
0000000000001723         db  0x00 ; '.'
0000000000001724         db  0x29 ; ')'
0000000000001725         db  0x00 ; '.'
0000000000001726         db  0x00 ; '.'
0000000000001727         db  0x00 ; '.'
0000000000001728         db  0x00 ; '.'
0000000000001729         db  0x00 ; '.'
000000000000172a         db  0x00 ; '.'
000000000000172b         db  0x00 ; '.'
000000000000172c         db  0x00 ; '.'
000000000000172d         db  0x00 ; '.'
000000000000172e         db  0x00 ; '.'
000000000000172f         db  0x00 ; '.'
0000000000001730         db  0xe8 ; '.'
0000000000001731         db  0x9e ; '.'
0000000000001732         db  0x20 ; ' '
0000000000001733         db  0x00 ; '.'
0000000000001734         db  0x00 ; '.'
0000000000001735         db  0x00 ; '.'
0000000000001736         db  0x00 ; '.'
0000000000001737         db  0x00 ; '.'
0000000000001738         db  0x07 ; '.'
0000000000001739         db  0x00 ; '.'
000000000000173a         db  0x00 ; '.'
000000000000173b         db  0x00 ; '.'
000000000000173c         db  0x2a ; '*'
000000000000173d         db  0x00 ; '.'
000000000000173e         db  0x00 ; '.'
000000000000173f         db  0x00 ; '.'
0000000000001740         db  0x00 ; '.'
0000000000001741         db  0x00 ; '.'
0000000000001742         db  0x00 ; '.'
0000000000001743         db  0x00 ; '.'
0000000000001744         db  0x00 ; '.'
0000000000001745         db  0x00 ; '.'
0000000000001746         db  0x00 ; '.'
0000000000001747         db  0x00 ; '.'
0000000000001748         db  0xf0 ; '.'
0000000000001749         db  0x9e ; '.'
000000000000174a         db  0x20 ; ' '
000000000000174b         db  0x00 ; '.'
000000000000174c         db  0x00 ; '.'
000000000000174d         db  0x00 ; '.'
000000000000174e         db  0x00 ; '.'
000000000000174f         db  0x00 ; '.'
0000000000001750         db  0x07 ; '.'
0000000000001751         db  0x00 ; '.'
0000000000001752         db  0x00 ; '.'
0000000000001753         db  0x00 ; '.'
0000000000001754         db  0x2c ; ','
0000000000001755         db  0x00 ; '.'
0000000000001756         db  0x00 ; '.'
0000000000001757         db  0x00 ; '.'
0000000000001758         db  0x00 ; '.'
0000000000001759         db  0x00 ; '.'
000000000000175a         db  0x00 ; '.'
000000000000175b         db  0x00 ; '.'
000000000000175c         db  0x00 ; '.'
000000000000175d         db  0x00 ; '.'
000000000000175e         db  0x00 ; '.'
000000000000175f         db  0x00 ; '.'
0000000000001760         db  0xf8 ; '.'
0000000000001761         db  0x9e ; '.'
0000000000001762         db  0x20 ; ' '
0000000000001763         db  0x00 ; '.'
0000000000001764         db  0x00 ; '.'
0000000000001765         db  0x00 ; '.'
0000000000001766         db  0x00 ; '.'
0000000000001767         db  0x00 ; '.'
0000000000001768         db  0x07 ; '.'
0000000000001769         db  0x00 ; '.'
000000000000176a         db  0x00 ; '.'
000000000000176b         db  0x00 ; '.'
000000000000176c         db  0x2d ; '-'
000000000000176d         db  0x00 ; '.'
000000000000176e         db  0x00 ; '.'
000000000000176f         db  0x00 ; '.'
0000000000001770         db  0x00 ; '.'
0000000000001771         db  0x00 ; '.'
0000000000001772         db  0x00 ; '.'
0000000000001773         db  0x00 ; '.'
0000000000001774         db  0x00 ; '.'
0000000000001775         db  0x00 ; '.'
0000000000001776         db  0x00 ; '.'
0000000000001777         db  0x00 ; '.'
0000000000001778         db  0x00 ; '.'
0000000000001779         db  0x9f ; '.'
000000000000177a         db  0x20 ; ' '
000000000000177b         db  0x00 ; '.'
000000000000177c         db  0x00 ; '.'
000000000000177d         db  0x00 ; '.'
000000000000177e         db  0x00 ; '.'
000000000000177f         db  0x00 ; '.'
0000000000001780         db  0x07 ; '.'
0000000000001781         db  0x00 ; '.'
0000000000001782         db  0x00 ; '.'
0000000000001783         db  0x00 ; '.'
0000000000001784         db  0x2e ; '.'
0000000000001785         db  0x00 ; '.'
0000000000001786         db  0x00 ; '.'
0000000000001787         db  0x00 ; '.'
0000000000001788         db  0x00 ; '.'
0000000000001789         db  0x00 ; '.'
000000000000178a         db  0x00 ; '.'
000000000000178b         db  0x00 ; '.'
000000000000178c         db  0x00 ; '.'
000000000000178d         db  0x00 ; '.'
000000000000178e         db  0x00 ; '.'
000000000000178f         db  0x00 ; '.'
0000000000001790         db  0x08 ; '.'
0000000000001791         db  0x9f ; '.'
0000000000001792         db  0x20 ; ' '
0000000000001793         db  0x00 ; '.'
0000000000001794         db  0x00 ; '.'
0000000000001795         db  0x00 ; '.'
0000000000001796         db  0x00 ; '.'
0000000000001797         db  0x00 ; '.'
0000000000001798         db  0x07 ; '.'
0000000000001799         db  0x00 ; '.'
000000000000179a         db  0x00 ; '.'
000000000000179b         db  0x00 ; '.'
000000000000179c         db  0x2f ; '/'
000000000000179d         db  0x00 ; '.'
000000000000179e         db  0x00 ; '.'
000000000000179f         db  0x00 ; '.'
00000000000017a0         db  0x00 ; '.'
00000000000017a1         db  0x00 ; '.'
00000000000017a2         db  0x00 ; '.'
00000000000017a3         db  0x00 ; '.'
00000000000017a4         db  0x00 ; '.'
00000000000017a5         db  0x00 ; '.'
00000000000017a6         db  0x00 ; '.'
00000000000017a7         db  0x00 ; '.'
00000000000017a8         db  0x10 ; '.'
00000000000017a9         db  0x9f ; '.'
00000000000017aa         db  0x20 ; ' '
00000000000017ab         db  0x00 ; '.'
00000000000017ac         db  0x00 ; '.'
00000000000017ad         db  0x00 ; '.'
00000000000017ae         db  0x00 ; '.'
00000000000017af         db  0x00 ; '.'
00000000000017b0         db  0x07 ; '.'
00000000000017b1         db  0x00 ; '.'
00000000000017b2         db  0x00 ; '.'
00000000000017b3         db  0x00 ; '.'
00000000000017b4         db  0x30 ; '0'
00000000000017b5         db  0x00 ; '.'
00000000000017b6         db  0x00 ; '.'
00000000000017b7         db  0x00 ; '.'
00000000000017b8         db  0x00 ; '.'
00000000000017b9         db  0x00 ; '.'
00000000000017ba         db  0x00 ; '.'
00000000000017bb         db  0x00 ; '.'
00000000000017bc         db  0x00 ; '.'
00000000000017bd         db  0x00 ; '.'
00000000000017be         db  0x00 ; '.'
00000000000017bf         db  0x00 ; '.'
00000000000017c0         db  0x18 ; '.'
00000000000017c1         db  0x9f ; '.'
00000000000017c2         db  0x20 ; ' '
00000000000017c3         db  0x00 ; '.'
00000000000017c4         db  0x00 ; '.'
00000000000017c5         db  0x00 ; '.'
00000000000017c6         db  0x00 ; '.'
00000000000017c7         db  0x00 ; '.'
00000000000017c8         db  0x07 ; '.'
00000000000017c9         db  0x00 ; '.'
00000000000017ca         db  0x00 ; '.'
00000000000017cb         db  0x00 ; '.'
00000000000017cc         db  0x31 ; '1'
00000000000017cd         db  0x00 ; '.'
00000000000017ce         db  0x00 ; '.'
00000000000017cf         db  0x00 ; '.'
00000000000017d0         db  0x00 ; '.'
00000000000017d1         db  0x00 ; '.'
00000000000017d2         db  0x00 ; '.'
00000000000017d3         db  0x00 ; '.'
00000000000017d4         db  0x00 ; '.'
00000000000017d5         db  0x00 ; '.'
00000000000017d6         db  0x00 ; '.'
00000000000017d7         db  0x00 ; '.'
00000000000017d8         db  0x20 ; ' '
00000000000017d9         db  0x9f ; '.'
00000000000017da         db  0x20 ; ' '
00000000000017db         db  0x00 ; '.'
00000000000017dc         db  0x00 ; '.'
00000000000017dd         db  0x00 ; '.'
00000000000017de         db  0x00 ; '.'
00000000000017df         db  0x00 ; '.'
00000000000017e0         db  0x07 ; '.'
00000000000017e1         db  0x00 ; '.'
00000000000017e2         db  0x00 ; '.'
00000000000017e3         db  0x00 ; '.'
00000000000017e4         db  0x32 ; '2'
00000000000017e5         db  0x00 ; '.'
00000000000017e6         db  0x00 ; '.'
00000000000017e7         db  0x00 ; '.'
00000000000017e8         db  0x00 ; '.'
00000000000017e9         db  0x00 ; '.'
00000000000017ea         db  0x00 ; '.'
00000000000017eb         db  0x00 ; '.'
00000000000017ec         db  0x00 ; '.'
00000000000017ed         db  0x00 ; '.'
00000000000017ee         db  0x00 ; '.'
00000000000017ef         db  0x00 ; '.'
00000000000017f0         db  0x28 ; '('
00000000000017f1         db  0x9f ; '.'
00000000000017f2         db  0x20 ; ' '
00000000000017f3         db  0x00 ; '.'
00000000000017f4         db  0x00 ; '.'
00000000000017f5         db  0x00 ; '.'
00000000000017f6         db  0x00 ; '.'
00000000000017f7         db  0x00 ; '.'
00000000000017f8         db  0x07 ; '.'
00000000000017f9         db  0x00 ; '.'
00000000000017fa         db  0x00 ; '.'
00000000000017fb         db  0x00 ; '.'
00000000000017fc         db  0x33 ; '3'
00000000000017fd         db  0x00 ; '.'
00000000000017fe         db  0x00 ; '.'
00000000000017ff         db  0x00 ; '.'
0000000000001800         db  0x00 ; '.'
0000000000001801         db  0x00 ; '.'
0000000000001802         db  0x00 ; '.'
0000000000001803         db  0x00 ; '.'
0000000000001804         db  0x00 ; '.'
0000000000001805         db  0x00 ; '.'
0000000000001806         db  0x00 ; '.'
0000000000001807         db  0x00 ; '.'
0000000000001808         db  0x30 ; '0'
0000000000001809         db  0x9f ; '.'
000000000000180a         db  0x20 ; ' '
000000000000180b         db  0x00 ; '.'
000000000000180c         db  0x00 ; '.'
000000000000180d         db  0x00 ; '.'
000000000000180e         db  0x00 ; '.'
000000000000180f         db  0x00 ; '.'
0000000000001810         db  0x07 ; '.'
0000000000001811         db  0x00 ; '.'
0000000000001812         db  0x00 ; '.'
0000000000001813         db  0x00 ; '.'
0000000000001814         db  0x34 ; '4'
0000000000001815         db  0x00 ; '.'
0000000000001816         db  0x00 ; '.'
0000000000001817         db  0x00 ; '.'
0000000000001818         db  0x00 ; '.'
0000000000001819         db  0x00 ; '.'
000000000000181a         db  0x00 ; '.'
000000000000181b         db  0x00 ; '.'
000000000000181c         db  0x00 ; '.'
000000000000181d         db  0x00 ; '.'
000000000000181e         db  0x00 ; '.'
000000000000181f         db  0x00 ; '.'
0000000000001820         db  0x38 ; '8'
0000000000001821         db  0x9f ; '.'
0000000000001822         db  0x20 ; ' '
0000000000001823         db  0x00 ; '.'
0000000000001824         db  0x00 ; '.'
0000000000001825         db  0x00 ; '.'
0000000000001826         db  0x00 ; '.'
0000000000001827         db  0x00 ; '.'
0000000000001828         db  0x07 ; '.'
0000000000001829         db  0x00 ; '.'
000000000000182a         db  0x00 ; '.'
000000000000182b         db  0x00 ; '.'
000000000000182c         db  0x35 ; '5'
000000000000182d         db  0x00 ; '.'
000000000000182e         db  0x00 ; '.'
000000000000182f         db  0x00 ; '.'
0000000000001830         db  0x00 ; '.'
0000000000001831         db  0x00 ; '.'
0000000000001832         db  0x00 ; '.'
0000000000001833         db  0x00 ; '.'
0000000000001834         db  0x00 ; '.'
0000000000001835         db  0x00 ; '.'
0000000000001836         db  0x00 ; '.'
0000000000001837         db  0x00 ; '.'
0000000000001838         db  0x40 ; '@'
0000000000001839         db  0x9f ; '.'
000000000000183a         db  0x20 ; ' '
000000000000183b         db  0x00 ; '.'
000000000000183c         db  0x00 ; '.'
000000000000183d         db  0x00 ; '.'
000000000000183e         db  0x00 ; '.'
000000000000183f         db  0x00 ; '.'
0000000000001840         db  0x07 ; '.'
0000000000001841         db  0x00 ; '.'
0000000000001842         db  0x00 ; '.'
0000000000001843         db  0x00 ; '.'
0000000000001844         db  0x36 ; '6'
0000000000001845         db  0x00 ; '.'
0000000000001846         db  0x00 ; '.'
0000000000001847         db  0x00 ; '.'
0000000000001848         db  0x00 ; '.'
0000000000001849         db  0x00 ; '.'
000000000000184a         db  0x00 ; '.'
000000000000184b         db  0x00 ; '.'
000000000000184c         db  0x00 ; '.'
000000000000184d         db  0x00 ; '.'
000000000000184e         db  0x00 ; '.'
000000000000184f         db  0x00 ; '.'
0000000000001850         db  0x48 ; 'H'
0000000000001851         db  0x9f ; '.'
0000000000001852         db  0x20 ; ' '
0000000000001853         db  0x00 ; '.'
0000000000001854         db  0x00 ; '.'
0000000000001855         db  0x00 ; '.'
0000000000001856         db  0x00 ; '.'
0000000000001857         db  0x00 ; '.'
0000000000001858         db  0x07 ; '.'
0000000000001859         db  0x00 ; '.'
000000000000185a         db  0x00 ; '.'
000000000000185b         db  0x00 ; '.'
000000000000185c         db  0x37 ; '7'
000000000000185d         db  0x00 ; '.'
000000000000185e         db  0x00 ; '.'
000000000000185f         db  0x00 ; '.'
0000000000001860         db  0x00 ; '.'
0000000000001861         db  0x00 ; '.'
0000000000001862         db  0x00 ; '.'
0000000000001863         db  0x00 ; '.'
0000000000001864         db  0x00 ; '.'
0000000000001865         db  0x00 ; '.'
0000000000001866         db  0x00 ; '.'
0000000000001867         db  0x00 ; '.'
0000000000001868         db  0x50 ; 'P'
0000000000001869         db  0x9f ; '.'
000000000000186a         db  0x20 ; ' '
000000000000186b         db  0x00 ; '.'
000000000000186c         db  0x00 ; '.'
000000000000186d         db  0x00 ; '.'
000000000000186e         db  0x00 ; '.'
000000000000186f         db  0x00 ; '.'
0000000000001870         db  0x07 ; '.'
0000000000001871         db  0x00 ; '.'
0000000000001872         db  0x00 ; '.'
0000000000001873         db  0x00 ; '.'
0000000000001874         db  0x38 ; '8'
0000000000001875         db  0x00 ; '.'
0000000000001876         db  0x00 ; '.'
0000000000001877         db  0x00 ; '.'
0000000000001878         db  0x00 ; '.'
0000000000001879         db  0x00 ; '.'
000000000000187a         db  0x00 ; '.'
000000000000187b         db  0x00 ; '.'
000000000000187c         db  0x00 ; '.'
000000000000187d         db  0x00 ; '.'
000000000000187e         db  0x00 ; '.'
000000000000187f         db  0x00 ; '.'
0000000000001880         db  0x58 ; 'X'
0000000000001881         db  0x9f ; '.'
0000000000001882         db  0x20 ; ' '
0000000000001883         db  0x00 ; '.'
0000000000001884         db  0x00 ; '.'
0000000000001885         db  0x00 ; '.'
0000000000001886         db  0x00 ; '.'
0000000000001887         db  0x00 ; '.'
0000000000001888         db  0x07 ; '.'
0000000000001889         db  0x00 ; '.'
000000000000188a         db  0x00 ; '.'
000000000000188b         db  0x00 ; '.'
000000000000188c         db  0x39 ; '9'
000000000000188d         db  0x00 ; '.'
000000000000188e         db  0x00 ; '.'
000000000000188f         db  0x00 ; '.'
0000000000001890         db  0x00 ; '.'
0000000000001891         db  0x00 ; '.'
0000000000001892         db  0x00 ; '.'
0000000000001893         db  0x00 ; '.'
0000000000001894         db  0x00 ; '.'
0000000000001895         db  0x00 ; '.'
0000000000001896         db  0x00 ; '.'
0000000000001897         db  0x00 ; '.'
0000000000001898         db  0x60 ; '`'
0000000000001899         db  0x9f ; '.'
000000000000189a         db  0x20 ; ' '
000000000000189b         db  0x00 ; '.'
000000000000189c         db  0x00 ; '.'
000000000000189d         db  0x00 ; '.'
000000000000189e         db  0x00 ; '.'
000000000000189f         db  0x00 ; '.'
00000000000018a0         db  0x07 ; '.'
00000000000018a1         db  0x00 ; '.'
00000000000018a2         db  0x00 ; '.'
00000000000018a3         db  0x00 ; '.'
00000000000018a4         db  0x3a ; ':'
00000000000018a5         db  0x00 ; '.'
00000000000018a6         db  0x00 ; '.'
00000000000018a7         db  0x00 ; '.'
00000000000018a8         db  0x00 ; '.'
00000000000018a9         db  0x00 ; '.'
00000000000018aa         db  0x00 ; '.'
00000000000018ab         db  0x00 ; '.'
00000000000018ac         db  0x00 ; '.'
00000000000018ad         db  0x00 ; '.'
00000000000018ae         db  0x00 ; '.'
00000000000018af         db  0x00 ; '.'
00000000000018b0         db  0x68 ; 'h'
00000000000018b1         db  0x9f ; '.'
00000000000018b2         db  0x20 ; ' '
00000000000018b3         db  0x00 ; '.'
00000000000018b4         db  0x00 ; '.'
00000000000018b5         db  0x00 ; '.'
00000000000018b6         db  0x00 ; '.'
00000000000018b7         db  0x00 ; '.'
00000000000018b8         db  0x07 ; '.'
00000000000018b9         db  0x00 ; '.'
00000000000018ba         db  0x00 ; '.'
00000000000018bb         db  0x00 ; '.'
00000000000018bc         db  0x3b ; ';'
00000000000018bd         db  0x00 ; '.'
00000000000018be         db  0x00 ; '.'
00000000000018bf         db  0x00 ; '.'
00000000000018c0         db  0x00 ; '.'
00000000000018c1         db  0x00 ; '.'
00000000000018c2         db  0x00 ; '.'
00000000000018c3         db  0x00 ; '.'
00000000000018c4         db  0x00 ; '.'
00000000000018c5         db  0x00 ; '.'
00000000000018c6         db  0x00 ; '.'
00000000000018c7         db  0x00 ; '.'
00000000000018c8         db  0x70 ; 'p'
00000000000018c9         db  0x9f ; '.'
00000000000018ca         db  0x20 ; ' '
00000000000018cb         db  0x00 ; '.'
00000000000018cc         db  0x00 ; '.'
00000000000018cd         db  0x00 ; '.'
00000000000018ce         db  0x00 ; '.'
00000000000018cf         db  0x00 ; '.'
00000000000018d0         db  0x07 ; '.'
00000000000018d1         db  0x00 ; '.'
00000000000018d2         db  0x00 ; '.'
00000000000018d3         db  0x00 ; '.'
00000000000018d4         db  0x3c ; '<'
00000000000018d5         db  0x00 ; '.'
00000000000018d6         db  0x00 ; '.'
00000000000018d7         db  0x00 ; '.'
00000000000018d8         db  0x00 ; '.'
00000000000018d9         db  0x00 ; '.'
00000000000018da         db  0x00 ; '.'
00000000000018db         db  0x00 ; '.'
00000000000018dc         db  0x00 ; '.'
00000000000018dd         db  0x00 ; '.'
00000000000018de         db  0x00 ; '.'
00000000000018df         db  0x00 ; '.'
00000000000018e0         db  0x78 ; 'x'
00000000000018e1         db  0x9f ; '.'
00000000000018e2         db  0x20 ; ' '
00000000000018e3         db  0x00 ; '.'
00000000000018e4         db  0x00 ; '.'
00000000000018e5         db  0x00 ; '.'
00000000000018e6         db  0x00 ; '.'
00000000000018e7         db  0x00 ; '.'
00000000000018e8         db  0x07 ; '.'
00000000000018e9         db  0x00 ; '.'
00000000000018ea         db  0x00 ; '.'
00000000000018eb         db  0x00 ; '.'
00000000000018ec         db  0x3d ; '='
00000000000018ed         db  0x00 ; '.'
00000000000018ee         db  0x00 ; '.'
00000000000018ef         db  0x00 ; '.'
00000000000018f0         db  0x00 ; '.'
00000000000018f1         db  0x00 ; '.'
00000000000018f2         db  0x00 ; '.'
00000000000018f3         db  0x00 ; '.'
00000000000018f4         db  0x00 ; '.'
00000000000018f5         db  0x00 ; '.'
00000000000018f6         db  0x00 ; '.'
00000000000018f7         db  0x00 ; '.'
00000000000018f8         db  0x80 ; '.'
00000000000018f9         db  0x9f ; '.'
00000000000018fa         db  0x20 ; ' '
00000000000018fb         db  0x00 ; '.'
00000000000018fc         db  0x00 ; '.'
00000000000018fd         db  0x00 ; '.'
00000000000018fe         db  0x00 ; '.'
00000000000018ff         db  0x00 ; '.'
0000000000001900         db  0x07 ; '.'
0000000000001901         db  0x00 ; '.'
0000000000001902         db  0x00 ; '.'
0000000000001903         db  0x00 ; '.'
0000000000001904         db  0x3e ; '>'
0000000000001905         db  0x00 ; '.'
0000000000001906         db  0x00 ; '.'
0000000000001907         db  0x00 ; '.'
0000000000001908         db  0x00 ; '.'
0000000000001909         db  0x00 ; '.'
000000000000190a         db  0x00 ; '.'
000000000000190b         db  0x00 ; '.'
000000000000190c         db  0x00 ; '.'
000000000000190d         db  0x00 ; '.'
000000000000190e         db  0x00 ; '.'
000000000000190f         db  0x00 ; '.'
0000000000001910         db  0x88 ; '.'
0000000000001911         db  0x9f ; '.'
0000000000001912         db  0x20 ; ' '
0000000000001913         db  0x00 ; '.'
0000000000001914         db  0x00 ; '.'
0000000000001915         db  0x00 ; '.'
0000000000001916         db  0x00 ; '.'
0000000000001917         db  0x00 ; '.'
0000000000001918         db  0x07 ; '.'
0000000000001919         db  0x00 ; '.'
000000000000191a         db  0x00 ; '.'
000000000000191b         db  0x00 ; '.'
000000000000191c         db  0x3f ; '?'
000000000000191d         db  0x00 ; '.'
000000000000191e         db  0x00 ; '.'
000000000000191f         db  0x00 ; '.'
0000000000001920         db  0x00 ; '.'
0000000000001921         db  0x00 ; '.'
0000000000001922         db  0x00 ; '.'
0000000000001923         db  0x00 ; '.'
0000000000001924         db  0x00 ; '.'
0000000000001925         db  0x00 ; '.'
0000000000001926         db  0x00 ; '.'
0000000000001927         db  0x00 ; '.'
0000000000001928         db  0x90 ; '.'
0000000000001929         db  0x9f ; '.'
000000000000192a         db  0x20 ; ' '
000000000000192b         db  0x00 ; '.'
000000000000192c         db  0x00 ; '.'
000000000000192d         db  0x00 ; '.'
000000000000192e         db  0x00 ; '.'
000000000000192f         db  0x00 ; '.'
0000000000001930         db  0x07 ; '.'
0000000000001931         db  0x00 ; '.'
0000000000001932         db  0x00 ; '.'
0000000000001933         db  0x00 ; '.'
0000000000001934         db  0x40 ; '@'
0000000000001935         db  0x00 ; '.'
0000000000001936         db  0x00 ; '.'
0000000000001937         db  0x00 ; '.'
0000000000001938         db  0x00 ; '.'
0000000000001939         db  0x00 ; '.'
000000000000193a         db  0x00 ; '.'
000000000000193b         db  0x00 ; '.'
000000000000193c         db  0x00 ; '.'
000000000000193d         db  0x00 ; '.'
000000000000193e         db  0x00 ; '.'
000000000000193f         db  0x00 ; '.'
0000000000001940         db  0x98 ; '.'
0000000000001941         db  0x9f ; '.'
0000000000001942         db  0x20 ; ' '
0000000000001943         db  0x00 ; '.'
0000000000001944         db  0x00 ; '.'
0000000000001945         db  0x00 ; '.'
0000000000001946         db  0x00 ; '.'
0000000000001947         db  0x00 ; '.'
0000000000001948         db  0x07 ; '.'
0000000000001949         db  0x00 ; '.'
000000000000194a         db  0x00 ; '.'
000000000000194b         db  0x00 ; '.'
000000000000194c         db  0x42 ; 'B'
000000000000194d         db  0x00 ; '.'
000000000000194e         db  0x00 ; '.'
000000000000194f         db  0x00 ; '.'
0000000000001950         db  0x00 ; '.'
0000000000001951         db  0x00 ; '.'
0000000000001952         db  0x00 ; '.'
0000000000001953         db  0x00 ; '.'
0000000000001954         db  0x00 ; '.'
0000000000001955         db  0x00 ; '.'
0000000000001956         db  0x00 ; '.'
0000000000001957         db  0x00 ; '.'
0000000000001958         db  0xa0 ; '.'
0000000000001959         db  0x9f ; '.'
000000000000195a         db  0x20 ; ' '
000000000000195b         db  0x00 ; '.'
000000000000195c         db  0x00 ; '.'
000000000000195d         db  0x00 ; '.'
000000000000195e         db  0x00 ; '.'
000000000000195f         db  0x00 ; '.'
0000000000001960         db  0x07 ; '.'
0000000000001961         db  0x00 ; '.'
0000000000001962         db  0x00 ; '.'
0000000000001963         db  0x00 ; '.'
0000000000001964         db  0x43 ; 'C'
0000000000001965         db  0x00 ; '.'
0000000000001966         db  0x00 ; '.'
0000000000001967         db  0x00 ; '.'
0000000000001968         db  0x00 ; '.'
0000000000001969         db  0x00 ; '.'
000000000000196a         db  0x00 ; '.'
000000000000196b         db  0x00 ; '.'
000000000000196c         db  0x00 ; '.'
000000000000196d         db  0x00 ; '.'
000000000000196e         db  0x00 ; '.'
000000000000196f         db  0x00 ; '.'
0000000000001970         db  0xa8 ; '.'
0000000000001971         db  0x9f ; '.'
0000000000001972         db  0x20 ; ' '
0000000000001973         db  0x00 ; '.'
0000000000001974         db  0x00 ; '.'
0000000000001975         db  0x00 ; '.'
0000000000001976         db  0x00 ; '.'
0000000000001977         db  0x00 ; '.'
0000000000001978         db  0x07 ; '.'
0000000000001979         db  0x00 ; '.'
000000000000197a         db  0x00 ; '.'
000000000000197b         db  0x00 ; '.'
000000000000197c         db  0x45 ; 'E'
000000000000197d         db  0x00 ; '.'
000000000000197e         db  0x00 ; '.'
000000000000197f         db  0x00 ; '.'
0000000000001980         db  0x00 ; '.'
0000000000001981         db  0x00 ; '.'
0000000000001982         db  0x00 ; '.'
0000000000001983         db  0x00 ; '.'
0000000000001984         db  0x00 ; '.'
0000000000001985         db  0x00 ; '.'
0000000000001986         db  0x00 ; '.'
0000000000001987         db  0x00 ; '.'
0000000000001988         db  0xb0 ; '.'
0000000000001989         db  0x9f ; '.'
000000000000198a         db  0x20 ; ' '
000000000000198b         db  0x00 ; '.'
000000000000198c         db  0x00 ; '.'
000000000000198d         db  0x00 ; '.'
000000000000198e         db  0x00 ; '.'
000000000000198f         db  0x00 ; '.'
0000000000001990         db  0x07 ; '.'
0000000000001991         db  0x00 ; '.'
0000000000001992         db  0x00 ; '.'
0000000000001993         db  0x00 ; '.'
0000000000001994         db  0x46 ; 'F'
0000000000001995         db  0x00 ; '.'
0000000000001996         db  0x00 ; '.'
0000000000001997         db  0x00 ; '.'
0000000000001998         db  0x00 ; '.'
0000000000001999         db  0x00 ; '.'
000000000000199a         db  0x00 ; '.'
000000000000199b         db  0x00 ; '.'
000000000000199c         db  0x00 ; '.'
000000000000199d         db  0x00 ; '.'
000000000000199e         db  0x00 ; '.'
000000000000199f         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x19a0; 0x19b7[ (23 bytes)
        ; File offset : [6560; 6583[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
00000000000019a0         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
00000000000019a4         mov        rax, qword [qword_209fd0]                   ; qword_209fd0
00000000000019ab         test       rax, rax
00000000000019ae         je         loc_19b2

00000000000019b0         call       rax

                     loc_19b2:
00000000000019b2         add        rsp, 0x8                                    ; CODE XREF=_init+14
00000000000019b6         ret
                        ; endp
00000000000019b7         db  0x00 ; '.'
00000000000019b8         db  0x00 ; '.'
00000000000019b9         db  0x00 ; '.'
00000000000019ba         db  0x00 ; '.'
00000000000019bb         db  0x00 ; '.'
00000000000019bc         db  0x00 ; '.'
00000000000019bd         db  0x00 ; '.'
00000000000019be         db  0x00 ; '.'
00000000000019bf         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x19c0; 0x1dc0[ (1024 bytes)
        ; File offset : [6592; 7616[ (1024 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_19c0:
00000000000019c0         push       qword [qword_209db0]                        ; Begin of unwind block (FDE at 0x84ec), qword_209db0, CODE XREF=sub_19d6+5
00000000000019c6         jmp        qword [qword_209db0+8]                      ; 0x209db8
                        ; endp
00000000000019cc         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getenv:        // getenv
00000000000019d0         jmp        qword [getenv@GOT]                          ; getenv, getenv@GOT, CODE XREF=main+158
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19d6:
00000000000019d6         push       0x0
00000000000019db         jmp        loc_19c0


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
00000000000019e0         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=set_program_name+154, sub_4d00+1567, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48, _obstack_free+101
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19e6:
00000000000019e6         push       0x1
00000000000019eb         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
00000000000019f0         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=main+1264, main+1879, main+2039, main+2145, wc+1202, wc+2463, wc+2583, wc+2644, close_stdout+22, quotearg_n_options+28, clone_quoting_options+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_19f6:
00000000000019f6         push       0x2
00000000000019fb         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
0000000000001a00         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+628, usage+821
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a06:
0000000000001a06         push       0x3
0000000000001a0b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
0000000000001a10         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a16:
0000000000001a16         push       0x4
0000000000001a1b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
0000000000001a20         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a26:
0000000000001a26         push       0x5
0000000000001a2b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_ferror:        // ferror
0000000000001a30         jmp        qword [ferror@GOT]                          ; ferror, ferror@GOT, CODE XREF=readtokens0+410
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a36:
0000000000001a36         push       0x6
0000000000001a3b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswcntrl:        // iswcntrl
0000000000001a40         jmp        qword [iswcntrl@GOT]                        ; iswcntrl, iswcntrl@GOT, CODE XREF=mb_width_aux+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a46:
0000000000001a46         push       0x7
0000000000001a4b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
0000000000001a50         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+99
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a56:
0000000000001a56         push       0x8
0000000000001a5b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
0000000000001a60         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a66:
0000000000001a66         push       0x9
0000000000001a6b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
0000000000001a70         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+87
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a76:
0000000000001a76         push       0xa
0000000000001a7b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
0000000000001a80         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+1324, main+1381, main+1544, main+1708, main+1871, main+2137, main+2519, main+2555, main+2624, wc+2358, usage+56
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a86:
0000000000001a86         push       0xb
0000000000001a8b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
0000000000001a90         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=wc+65, wc+402, quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1a96:
0000000000001a96         push       0xc
0000000000001a9b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
0000000000001aa0         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=quotearg_buffer_restyled+343, sub_4830+411, sub_4d00+510, xstrdup+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1aa6:
0000000000001aa6         push       0xd
0000000000001aab         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
0000000000001ab0         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=main+2468, write_counts+511, wc+2758, physmem_total+219, physmem_available+283, sub_4d00+1507, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137, quotearg_n_custom_mem+140
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ab6:
0000000000001ab6         push       0xe
0000000000001abb         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
0000000000001ac0         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+290
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ac6:
0000000000001ac6         push       0xf
0000000000001acb         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
0000000000001ad0         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ad6:
0000000000001ad6         push       0x10
0000000000001adb         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strchr:        // strchr
0000000000001ae0         jmp        qword [strchr@GOT]                          ; strchr, strchr@GOT, CODE XREF=write_counts+130
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ae6:
0000000000001ae6         push       0x11
0000000000001aeb         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___overflow:        // __overflow
0000000000001af0         jmp        qword [__overflow@GOT]                      ; __overflow, __overflow@GOT, CODE XREF=write_counts+501
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1af6:
0000000000001af6         push       0x12
0000000000001afb         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
0000000000001b00         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b06:
0000000000001b06         push       0x13
0000000000001b0b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
0000000000001b10         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=wc+351, wc+2694, rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b16:
0000000000001b16         push       0x14
0000000000001b1b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___assert_fail:        // __assert_fail
0000000000001b20         jmp        qword [__assert_fail@GOT]                   ; __assert_fail, __assert_fail@GOT, CODE XREF=main+1631
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b26:
0000000000001b26         push       0x15
0000000000001b2b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
0000000000001b30         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b36:
0000000000001b36         push       0x16
0000000000001b3b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fgetc:        // fgetc
0000000000001b40         jmp        qword [fgetc@GOT]                           ; fgetc, fgetc@GOT, CODE XREF=readtokens0+41, readtokens0+111
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b46:
0000000000001b46         push       0x17
0000000000001b4b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_close:        // close
0000000000001b50         jmp        qword [close@GOT]                           ; close, close@GOT, CODE XREF=main+1204, main+2026
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b56:
0000000000001b56         push       0x18
0000000000001b5b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_posix_fadvise:        // posix_fadvise
0000000000001b60         jmp        qword [posix_fadvise@GOT]                   ; posix_fadvise, posix_fadvise@GOT, CODE XREF=fdadvise, fadvise+22
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b66:
0000000000001b66         push       0x19
0000000000001b6b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memchr:        // memchr
0000000000001b70         jmp        qword [memchr@GOT]                          ; memchr, memchr@GOT, CODE XREF=wc+867
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b76:
0000000000001b76         push       0x1a
0000000000001b7b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_read:        // read
0000000000001b80         jmp        qword [read@GOT]                            ; read, read@GOT, CODE XREF=safe_read+33
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b86:
0000000000001b86         push       0x1b
0000000000001b8b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
0000000000001b90         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=quotearg_buffer_restyled+410
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1b96:
0000000000001b96         push       0x1c
0000000000001b9b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
0000000000001ba0         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+160, usage+197, usage+234, usage+271, usage+308, usage+352, usage+936, version_etc_arn+135, emit_bug_reporting_address+123
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ba6:
0000000000001ba6         push       0x1d
0000000000001bab         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
0000000000001bb0         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1bb6:
0000000000001bb6         push       0x1e
0000000000001bbb         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strcmp:        // strcmp
0000000000001bc0         jmp        qword [strcmp@GOT]                          ; strcmp, strcmp@GOT, CODE XREF=main+648, main+912, main+1112, main+1479
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1bc6:
0000000000001bc6         push       0x1f
0000000000001bcb         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___memmove_chk:        // __memmove_chk
0000000000001bd0         jmp        qword [__memmove_chk@GOT]                   ; __memmove_chk, __memmove_chk@GOT, CODE XREF=wc+2326
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1bd6:
0000000000001bd6         push       0x20
0000000000001bdb         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_feof:        // feof
0000000000001be0         jmp        qword [feof@GOT]                            ; feof, feof@GOT, CODE XREF=argv_iter+115
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1be6:
0000000000001be6         push       0x21
0000000000001beb         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
0000000000001bf0         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=mb_copy+71, xmemdup+35, _obstack_newchunk+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1bf6:
0000000000001bf6         push       0x22
0000000000001bfb         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
0000000000001c00         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=main+671, fadvise+8, rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c06:
0000000000001c06         push       0x23
0000000000001c0b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___xstat:        // __xstat
0000000000001c10         jmp        qword [__xstat@GOT]                         ; __xstat, __xstat@GOT, CODE XREF=main+932
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c16:
0000000000001c16         push       0x24
0000000000001c1b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_wcwidth:        // wcwidth
0000000000001c20         jmp        qword [wcwidth@GOT]                         ; wcwidth, wcwidth@GOT, CODE XREF=wc+2376, mb_width_aux+3
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c26:
0000000000001c26         push       0x25
0000000000001c2b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
0000000000001c30         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c36:
0000000000001c36         push       0x26
0000000000001c3b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
0000000000001c40         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c46:
0000000000001c46         push       0x27
0000000000001c4b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fxstat:        // __fxstat
0000000000001c50         jmp        qword [__fxstat@GOT]                        ; __fxstat, __fxstat@GOT, CODE XREF=main+691, main+863, wc+1814
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c56:
0000000000001c56         push       0x28
0000000000001c5b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
0000000000001c60         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c66:
0000000000001c66         push       0x29
0000000000001c6b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
0000000000001c70         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c76:
0000000000001c76         push       0x2a
0000000000001c7b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
0000000000001c80         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+68, usage+603, usage+796, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c86:
0000000000001c86         push       0x2b
0000000000001c8b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
0000000000001c90         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=write_counts+175, write_counts+286, write_counts+341, write_counts+389, write_counts+437, write_counts+479, usage+123, usage+591, usage+684, usage+745, usage+784
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1c96:
0000000000001c96         push       0x2c
0000000000001c9b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setvbuf:        // setvbuf
0000000000001ca0         jmp        qword [setvbuf@GOT]                         ; setvbuf, setvbuf@GOT, CODE XREF=main+146
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ca6:
0000000000001ca6         push       0x2d
0000000000001cab         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswspace:        // iswspace
0000000000001cb0         jmp        qword [iswspace@GOT]                        ; iswspace, iswspace@GOT, CODE XREF=wc+2104
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1cb6:
0000000000001cb6         push       0x2e
0000000000001cbb         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_btowc:        // btowc
0000000000001cc0         jmp        qword [btowc@GOT]                           ; btowc, btowc@GOT, CODE XREF=wc+1716
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1cc6:
0000000000001cc6         push       0x2f
0000000000001ccb         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
0000000000001cd0         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+1285, main+1341, main+1429, main+1565, main+1896, main+2060, main+2165, main+2536, main+2644, wc+1223, wc+2484
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1cd6:
0000000000001cd6         push       0x30
0000000000001cdb         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_open:        // open
0000000000001ce0         jmp        qword [open@GOT]                            ; open, open@GOT, CODE XREF=main+1161
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1ce6:
0000000000001ce6         push       0x31
0000000000001ceb         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
0000000000001cf0         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1cf6:
0000000000001cf6         push       0x32
0000000000001cfb         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fopen:        // fopen
0000000000001d00         jmp        qword [fopen@GOT]                           ; fopen, fopen@GOT, CODE XREF=main+2090
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d06:
0000000000001d06         push       0x33
0000000000001d0b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_sysconf:        // sysconf
0000000000001d10         jmp        qword [sysconf@GOT]                         ; sysconf, sysconf@GOT, CODE XREF=physmem_total+31, physmem_total+56, physmem_available+31, physmem_available+56
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d16:
0000000000001d16         push       0x34
0000000000001d1b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000001d20         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d26:
0000000000001d26         push       0x35
0000000000001d2b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_sysinfo:        // sysinfo
0000000000001d30         jmp        qword [sysinfo@GOT]                         ; sysinfo, sysinfo@GOT, CODE XREF=physmem_total+133, physmem_available+133
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d36:
0000000000001d36         push       0x36
0000000000001d3b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getpagesize:        // getpagesize
0000000000001d40         jmp        qword [getpagesize@GOT]                     ; getpagesize, getpagesize@GOT, CODE XREF=main+116
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d46:
0000000000001d46         push       0x37
0000000000001d4b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000001d50         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+457, usage+88, print_and_abort+58
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d56:
0000000000001d56         push       0x38
0000000000001d5b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
0000000000001d60         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d66:
0000000000001d66         push       0x39
0000000000001d6b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
0000000000001d70         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=main+2584, usage+81, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642, version_etc_arn+718, version_etc_arn+872
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d76:
0000000000001d76         push       0x3a
0000000000001d7b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
0000000000001d80         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=wc+2000, sub_4830+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d86:
0000000000001d86         push       0x3b
0000000000001d8b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
0000000000001d90         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=wc+2051, sub_4830+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1d96:
0000000000001d96         push       0x3c
0000000000001d9b         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getdelim:        // getdelim
0000000000001da0         jmp        qword [getdelim@GOT]                        ; getdelim, getdelim@GOT, CODE XREF=argv_iter+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1da6:
0000000000001da6         push       0x3d
0000000000001dab         jmp        0x19c0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
0000000000001db0         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=wc+1400, wc+1674, sub_45d0+51
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1db6:
0000000000001db6         push       0x3e
0000000000001dbb         jmp        0x19c0
                        ; endp


        ; Section .plt.got
        ; Range: [0x1dc0; 0x1dd8[ (24 bytes)
        ; File offset : [7616; 7640[ (24 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1dc0:
0000000000001dc0         jmp        qword [qword_209fb8]                        ; qword, End of unwind block (FDE at 0x84ec), Begin of unwind block (FDE at 0x8514), qword_209fb8, CODE XREF=main+1769, argv_iter_free+14, argv_iter_free+23, quotearg_n_options+277, quotearg_free+55, quotearg_free+82, quotearg_free+120, xrealloc+40
                        ; endp
0000000000001dc6         align      8


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1dc8:
0000000000001dc8         jmp        qword [qword_209fd8]                        ; qword, qword_209fd8, CODE XREF=argv_iter_init_argv+9, argv_iter_init_stream+9, xmalloc+4
                        ; endp
0000000000001dce         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_209fe8:        // qword_209fe8
0000000000001dd0         jmp        qword [qword_209fe8]                        ; qword, qword_209fe8, CODE XREF=__do_global_dtors_aux+30
                        ; endp
0000000000001dd6         align      8
0000000000001dd8         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x8514)
0000000000001dd9         db  0x00 ; '.'
0000000000001dda         db  0x00 ; '.'
0000000000001ddb         db  0x00 ; '.'
0000000000001ddc         db  0x00 ; '.'
0000000000001ddd         db  0x00 ; '.'
0000000000001dde         db  0x00 ; '.'
0000000000001ddf         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x1de0; 0x6fbe[ (20958 bytes)
        ; File offset : [7648; 28606[ (20958 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_A8: int64_t, -168
        ;    var_C0: int32_t, -192
        ;    var_D8: int8_t, -216
        ;    var_1F0: int64_t, -496
        ;    var_1F8: int64_t, -504
        ;    var_1FC: int32_t, -508
        ;    var_20C: int32_t, -524
        ;    var_20D: int8_t, -525
        ;    var_218: int64_t, -536
        ;    var_220: int64_t, -544
        ;    var_228: int64_t, -552


                     main:
0000000000001de0         push       r15                                         ; Begin of unwind block (FDE at 0x85f4), DATA XREF=_start+29
0000000000001de2         push       r14
0000000000001de4         push       r13
0000000000001de6         push       r12
0000000000001de8         mov        r12, rsi
0000000000001deb         push       rbp
0000000000001dec         push       rbx
0000000000001ded         mov        ebx, edi
0000000000001def         lea        r13, qword [longopts]                       ; longopts
0000000000001df6         sub        rsp, 0x1f8
0000000000001dfd         mov        rdi, qword [rsi]
0000000000001e00         mov        rax, qword [fs:0x28]
0000000000001e09         mov        qword [rsp+0x228+var_40], rax
0000000000001e11         xor        eax, eax
0000000000001e13         call       set_program_name                            ; set_program_name
0000000000001e18         lea        rsi, qword [aWrittenBySSAnd+27]             ; argument "__locale" for method j_setlocale, 0x7e41
0000000000001e1f         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
0000000000001e24         call       j_setlocale                                 ; setlocale
0000000000001e29         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
0000000000001e30         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
0000000000001e37         call       j_bindtextdomain                            ; bindtextdomain
0000000000001e3c         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
0000000000001e43         call       j_textdomain                                ; textdomain
0000000000001e48         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
0000000000001e4f         call       atexit                                      ; atexit
0000000000001e54         call       j_getpagesize                               ; getpagesize
0000000000001e59         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; argument "__stream" for method j_setvbuf, stdout@@GLIBC_2.2.5
0000000000001e60         xor        ecx, ecx                                    ; argument "__n" for method j_setvbuf
0000000000001e62         xor        esi, esi                                    ; argument "__buf" for method j_setvbuf
0000000000001e64         cdqe
0000000000001e66         mov        edx, 0x1                                    ; argument "__modes" for method j_setvbuf
0000000000001e6b         mov        qword [page_size], rax                      ; page_size
0000000000001e72         call       j_setvbuf                                   ; setvbuf
0000000000001e77         lea        rdi, qword [aPosixlycorrect]                ; argument "__name" for method j_getenv, "POSIXLY_CORRECT"
0000000000001e7e         call       j_getenv                                    ; getenv
0000000000001e83         test       rax, rax
0000000000001e86         mov        byte [print_bytes], 0x0                     ; print_bytes
0000000000001e8d         mov        byte [print_chars], 0x0                     ; print_chars
0000000000001e94         setne      byte [posixly_correct]                      ; posixly_correct
0000000000001e9b         mov        byte [print_words], 0x0                     ; print_words
0000000000001ea2         xor        ebp, ebp
0000000000001ea4         mov        byte [print_lines], 0x0                     ; print_lines
0000000000001eab         mov        byte [print_linelength], 0x0                ; print_linelength
0000000000001eb2         mov        qword [max_line_length], 0x0                ; max_line_length
0000000000001ebd         mov        qword [total_bytes], 0x0                    ; total_bytes
0000000000001ec8         mov        qword [total_chars], 0x0                    ; total_chars
0000000000001ed3         mov        qword [total_words], 0x0                    ; total_words
0000000000001ede         mov        qword [total_lines], 0x0                    ; total_lines
0000000000001ee9         nop        dword [rax]

                     loc_1ef0:
0000000000001ef0         lea        rdx, qword [aCllmw]                         ; argument "__shortopts" for method j_getopt_long, "clLmw", CODE XREF=main+351, main+471, main+487, main+503, main+528, main+543
0000000000001ef7         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
0000000000001efa         mov        rcx, r13                                    ; argument "__longopts" for method j_getopt_long
0000000000001efd         mov        rsi, r12                                    ; argument "___argv" for method j_getopt_long
0000000000001f00         mov        edi, ebx                                    ; argument "___argc" for method j_getopt_long
0000000000001f02         call       j_getopt_long                               ; getopt_long
0000000000001f07         cmp        eax, 0xffffffff
0000000000001f0a         je         loc_2004

0000000000001f10         cmp        eax, 0x63
0000000000001f13         je         loc_1fc0

0000000000001f19         jle        loc_1f48

0000000000001f1b         cmp        eax, 0x6d
0000000000001f1e         je         loc_1ff8

0000000000001f24         jle        loc_1fe0

0000000000001f2a         cmp        eax, 0x77
0000000000001f2d         je         loc_1fd0

0000000000001f33         add        eax, 0xffffff80
0000000000001f36         jne        loc_1f5f

0000000000001f38         mov        rbp, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000001f3f         jmp        loc_1ef0
0000000000001f41         align      8

                     loc_1f48:
0000000000001f48         cmp        eax, 0xffffff7e                             ; CODE XREF=main+313
0000000000001f4d         je         loc_277d

0000000000001f53         cmp        eax, 0x4c
0000000000001f56         je         loc_1fb0

0000000000001f58         cmp        eax, 0xffffff7d
0000000000001f5d         je         loc_1f70

                     loc_1f5f:
0000000000001f5f         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=main+342, main+515, main+2589
0000000000001f64         call       usage                                       ; usage
0000000000001f69         nop        dword [rax]

                     loc_1f70:
0000000000001f70         sub        rsp, 0x8                                    ; CODE XREF=main+381
0000000000001f74         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001f7b         mov        rcx, qword [Version]                        ; Version
0000000000001f82         push       0x0
0000000000001f84         lea        r9, qword [aDavidMackenzie]                 ; "David MacKenzie"
0000000000001f8b         lea        r8, qword [aPaulRubin]                      ; "Paul Rubin"
0000000000001f92         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x706c
0000000000001f99         lea        rsi, qword [aStandardInput+15]              ; 0x6ff3
0000000000001fa0         xor        eax, eax
0000000000001fa2         call       version_etc                                 ; version_etc
0000000000001fa7         xor        edi, edi                                    ; argument "__status" for method j_exit
0000000000001fa9         call       j_exit                                      ; exit
                        ; endp
0000000000001fae         align      16

                     loc_1fb0:
0000000000001fb0         mov        byte [print_linelength], 0x1                ; print_linelength, CODE XREF=main+374
0000000000001fb7         jmp        loc_1ef0
0000000000001fbc         align      64

                     loc_1fc0:
0000000000001fc0         mov        byte [print_bytes], 0x1                     ; print_bytes, CODE XREF=main+307
0000000000001fc7         jmp        loc_1ef0
0000000000001fcc         align      16

                     loc_1fd0:
0000000000001fd0         mov        byte [print_words], 0x1                     ; print_words, CODE XREF=main+333
0000000000001fd7         jmp        loc_1ef0
0000000000001fdc         align      32

                     loc_1fe0:
0000000000001fe0         cmp        eax, 0x6c                                   ; CODE XREF=main+324
0000000000001fe3         jne        loc_1f5f

0000000000001fe9         mov        byte [print_lines], 0x1                     ; print_lines
0000000000001ff0         jmp        loc_1ef0
0000000000001ff5         align      8

                     loc_1ff8:
0000000000001ff8         mov        byte [print_chars], 0x1                     ; print_chars, CODE XREF=main+318
0000000000001fff         jmp        loc_1ef0

                     loc_2004:
0000000000002004         cmp        byte [print_lines], 0x0                     ; print_lines, CODE XREF=main+298
000000000000200b         jne        loc_2046

000000000000200d         cmp        byte [print_words], 0x0                     ; print_words
0000000000002014         jne        loc_2046

0000000000002016         cmp        byte [print_chars], 0x0                     ; print_chars
000000000000201d         jne        loc_2046

000000000000201f         cmp        byte [print_bytes], 0x0                     ; print_bytes
0000000000002026         jne        loc_2046

0000000000002028         cmp        byte [print_linelength], 0x0                ; print_linelength
000000000000202f         jne        loc_2046                                    ; DATA XREF=wc+1768, wc+2168

0000000000002031         mov        byte [print_bytes], 0x1                     ; print_bytes
0000000000002038         mov        byte [print_words], 0x1                     ; print_words
000000000000203f         mov        byte [print_lines], 0x1                     ; print_lines

                     loc_2046:
0000000000002046         test       rbp, rbp                                    ; CODE XREF=main+555, main+564, main+573, main+582, main+591
0000000000002049         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5
0000000000002050         je         loc_218b

0000000000002056         cmp        ebx, eax
0000000000002058         jg         loc_2798

000000000000205e         lea        rsi, qword [aLibs+10]                       ; argument "__s2" for method j_strcmp, 0x7912
0000000000002065         mov        rdi, rbp                                    ; argument "__s1" for method j_strcmp
0000000000002068         call       j_strcmp                                    ; strcmp
000000000000206d         test       eax, eax
000000000000206f         jne        loc_2600

0000000000002075         mov        rbx, qword [stdin@@GLIBC_2.2.5]             ; stdin@@GLIBC_2.2.5

                     loc_207c:
000000000000207c         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=main+2101
000000000000207f         call       j_fileno                                    ; fileno
0000000000002084         lea        rdx, qword [rsp+0x228+var_D8]               ; argument "__stat_buf" for method j___fxstat
000000000000208c         mov        esi, eax                                    ; argument "__fildes" for method j___fxstat
000000000000208e         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstat
0000000000002093         call       j___fxstat                                  ; __fxstat
0000000000002098         test       eax, eax
000000000000209a         jne        loc_20b3

000000000000209c         mov        eax, dword [rsp+0x228+var_C0]
00000000000020a3         and        eax, 0xf000
00000000000020a8         cmp        eax, aBySSSnsSSSnand                        ; "by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
00000000000020ad         je         loc_26d9

                     loc_20b3:
00000000000020b3         mov        rdi, rbx                                    ; CODE XREF=main+698, main+2377
00000000000020b6         xor        r12d, r12d
00000000000020b9         xor        ebx, ebx
00000000000020bb         call       argv_iter_init_stream                       ; argv_iter_init_stream
00000000000020c0         mov        byte [rsp+0x228+var_20D], 0x0
00000000000020c5         mov        r13, rax

                     loc_20c8:
00000000000020c8         test       r13, r13                                    ; CODE XREF=main+975, main+2456
00000000000020cb         je         loc_2793

00000000000020d1         test       rbx, rbx
00000000000020d4         je         loc_21b4

00000000000020da         mov        edx, 0x98
00000000000020df         xor        ecx, ecx
00000000000020e1         mov        rax, rdx
00000000000020e4         mul        rbx
00000000000020e7         jo         loc_2789

                     loc_20ed:
00000000000020ed         test       rax, rax                                    ; CODE XREF=main+2478
00000000000020f0         js         loc_2793

00000000000020f6         test       rcx, rcx
00000000000020f9         jne        loc_2793

00000000000020ff         imul       rax, rbx, 0x98
0000000000002106         mov        rdi, rax                                    ; argument #1 for method xmalloc
0000000000002109         mov        qword [rsp+0x228+var_218], rax
000000000000210e         call       xmalloc                                     ; xmalloc
0000000000002113         cmp        rbx, 0x1
0000000000002117         mov        qword [rsp+0x228+var_220], rax
000000000000211c         je         loc_2674

                     loc_2122:
0000000000002122         mov        rax, qword [rsp+0x228+var_220]              ; CODE XREF=main+2242
0000000000002127         lea        r14, qword [rax+8]
000000000000212b         lea        rax, qword [r12+rbx*8]
000000000000212f         mov        qword [rsp+0x228+var_228], rax
0000000000002133         jmp        loc_215d

                     loc_2135:
0000000000002135         mov        rdx, r14                                    ; argument "__stat_buf" for method j___fxstat, CODE XREF=main+900, main+919
0000000000002138         xor        esi, esi                                    ; argument "__fildes" for method j___fxstat
000000000000213a         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstat
000000000000213f         call       j___fxstat                                  ; __fxstat

                     loc_2144:
0000000000002144         mov        dword [r14-8], eax                          ; CODE XREF=main+937
0000000000002148         add        r12, 0x8
000000000000214c         add        r14, 0x98
0000000000002153         cmp        qword [rsp+0x228+var_228], r12
0000000000002157         je         loc_2552

                     loc_215d:
000000000000215d         mov        r15, qword [r12]                            ; CODE XREF=main+851
0000000000002161         test       r15, r15
0000000000002164         je         loc_2135

0000000000002166         lea        rsi, qword [aLibs+10]                       ; argument "__s2" for method j_strcmp, 0x7912
000000000000216d         mov        rdi, r15                                    ; argument "__s1" for method j_strcmp
0000000000002170         call       j_strcmp                                    ; strcmp
0000000000002175         test       eax, eax
0000000000002177         je         loc_2135

0000000000002179         mov        rdx, r14                                    ; argument "__stat_buf" for method j___xstat
000000000000217c         mov        rsi, r15                                    ; argument "__filename" for method j___xstat
000000000000217f         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
0000000000002184         call       j___xstat                                   ; __xstat
0000000000002189         jmp        loc_2144

                     loc_218b:
000000000000218b         cmp        ebx, eax                                    ; CODE XREF=main+624
000000000000218d         jg         loc_265a

0000000000002193         lea        r12, qword [stdin_only.8119]                ; stdin_only.8119
000000000000219a         mov        ebx, 0x1

                     loc_219f:
000000000000219f         mov        rdi, r12                                    ; CODE XREF=main+2182
00000000000021a2         call       argv_iter_init_argv                         ; argv_iter_init_argv
00000000000021a7         mov        byte [rsp+0x228+var_20D], 0x0
00000000000021ac         mov        r13, rax
00000000000021af         jmp        loc_20c8

                     loc_21b4:
00000000000021b4         mov        edi, 0x98                                   ; argument #1 for method xmalloc, CODE XREF=main+756
00000000000021b9         call       xmalloc                                     ; xmalloc
00000000000021be         mov        ecx, 0x1
00000000000021c3         mov        qword [rsp+0x228+var_220], rax
00000000000021c8         mov        dword [rax], 0x1

                     loc_21ce:
00000000000021ce         lea        rax, qword [rsp+0x228+var_1FC]              ; CODE XREF=main+1919, main+2019, main+2259
00000000000021d3         mov        dword [number_width], ecx                   ; number_width
00000000000021d9         xor        r14d, r14d
00000000000021dc         mov        r12d, 0x1
00000000000021e2         mov        qword [rsp+0x228+var_228], rax
00000000000021e6         nop        word [cs:rax+rax]

                     loc_21f0:
00000000000021f0         mov        rsi, qword [rsp+0x228+var_228]              ; CODE XREF=main+1241
00000000000021f4         mov        rdi, r13
00000000000021f7         call       argv_iter                                   ; argv_iter
00000000000021fc         test       rax, rax
00000000000021ff         mov        r15, rax
0000000000002202         je         loc_240a

0000000000002208         test       rbp, rbp
000000000000220b         je         loc_23d5

0000000000002211         lea        rdx, qword [aLibs+10]                       ; 0x7912
0000000000002218         mov        ecx, 0x2
000000000000221d         mov        rsi, rbp
0000000000002220         mov        rdi, rdx
0000000000002223         rep  cmpsb byte [rsi], byte [rdi]
0000000000002225         seta       al
0000000000002228         sbb        al, 0x0
000000000000222a         test       al, al
000000000000222c         jne        loc_237f

0000000000002232         mov        rsi, rdx                                    ; argument "__s2" for method j_strcmp
0000000000002235         mov        rdi, r15                                    ; argument "__s1" for method j_strcmp
0000000000002238         call       j_strcmp                                    ; strcmp
000000000000223d         test       eax, eax
000000000000223f         je         loc_22ee

0000000000002245         cmp        byte [r15], 0x0
0000000000002249         je         loc_232c

000000000000224f         test       rbx, rbx
0000000000002252         jne        loc_238c

0000000000002258         mov        rdx, qword [rsp+0x228+var_220]

                     loc_225d:
000000000000225d         xor        esi, esi                                    ; argument "__oflag" for method j_open, CODE XREF=main+1491
000000000000225f         xor        eax, eax
0000000000002261         mov        rdi, r15                                    ; argument "__file" for method j_open
0000000000002264         mov        qword [rsp+0x228+var_218], rdx
0000000000002269         call       j_open                                      ; open
000000000000226e         cmp        eax, 0xffffffff
0000000000002271         mov        rdx, qword [rsp+0x228+var_218]
0000000000002276         je         loc_22be

0000000000002278         xor        ecx, ecx                                    ; argument #4 for method wc
000000000000227a         mov        rsi, r15                                    ; argument #2 for method wc
000000000000227d         mov        edi, eax                                    ; argument #1 for method wc
000000000000227f         mov        dword [rsp+0x228+var_20C], eax
0000000000002283         call       wc                                          ; wc
0000000000002288         mov        r9d, dword [rsp+0x228+var_20C]
000000000000228d         mov        byte [rsp+0x228+var_218], al
0000000000002291         mov        edi, r9d                                    ; argument "__fd" for method j_close
0000000000002294         call       j_close                                     ; close
0000000000002299         test       eax, eax
000000000000229b         movzx      edx, byte [rsp+0x228+var_218]
00000000000022a0         jne        loc_22be

                     loc_22a2:
00000000000022a2         and        r12d, edx                                   ; CODE XREF=main+1292, main+1520

                     loc_22a5:
00000000000022a5         test       rbx, rbx                                    ; CODE XREF=main+1434, main+1573
00000000000022a8         jne        loc_22b5

00000000000022aa         mov        rax, qword [rsp+0x228+var_220]
00000000000022af         mov        dword [rax], 0x1

                     loc_22b5:
00000000000022b5         add        r14, 0x1                                    ; CODE XREF=main+1224
00000000000022b9         jmp        loc_21f0

                     loc_22be:
00000000000022be         mov        rdx, r15                                    ; argument #3 for method quotearg_n_style_colon, CODE XREF=main+1174, main+1216
00000000000022c1         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
00000000000022c6         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
00000000000022c8         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
00000000000022cd         mov        r15, rax
00000000000022d0         call       j___errno_location                          ; __errno_location
00000000000022d5         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000022d7         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x788d
00000000000022de         mov        rcx, r15
00000000000022e1         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000022e3         xor        eax, eax
00000000000022e5         call       j_error                                     ; error
00000000000022ea         xor        edx, edx
00000000000022ec         jmp        loc_22a2

                     loc_22ee:
00000000000022ee         mov        rsi, r15                                    ; CODE XREF=main+1119
00000000000022f1         mov        edi, 0x4
00000000000022f6         call       quotearg_style                              ; quotearg_style
00000000000022fb         lea        rsi, qword [aWhenReadingFil]                ; argument "msgid" for method j_dcgettext, "when reading file names from stdin, no file name of %s allowed"
0000000000002302         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002304         mov        r12, rax
0000000000002307         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000230c         call       j_dcgettext                                 ; dcgettext
0000000000002311         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000002313         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000002316         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002318         xor        eax, eax
000000000000231a         mov        rcx, r12
000000000000231d         call       j_error                                     ; error
0000000000002322         cmp        byte [r15], 0x0
0000000000002326         jne        loc_2402

                     loc_232c:
000000000000232c         mov        rdi, r13                                    ; CODE XREF=main+1129, main+1443
000000000000232f         call       argv_iter_n_args                            ; argv_iter_n_args
0000000000002334         lea        rsi, qword [aInvalidZerolen]                ; argument "msgid" for method j_dcgettext, "invalid zero-length file name"
000000000000233b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002340         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002342         mov        r15, rax
0000000000002345         call       j_dcgettext                                 ; dcgettext
000000000000234a         mov        rdx, rbp                                    ; argument #3 for method quotearg_n_style_colon
000000000000234d         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
0000000000002352         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
0000000000002354         mov        r12, rax
0000000000002357         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
000000000000235c         lea        rdx, qword [aSluS]                          ; argument "__format" for method j_error, "%s:%lu: %s"
0000000000002363         mov        r9, r12
0000000000002366         mov        rcx, rax
0000000000002369         mov        r8, r15
000000000000236c         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000236e         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002370         xor        eax, eax
0000000000002372         xor        r12d, r12d
0000000000002375         call       j_error                                     ; error
000000000000237a         jmp        loc_22a5

                     loc_237f:
000000000000237f         cmp        byte [r15], 0x0                             ; CODE XREF=main+1100
0000000000002383         je         loc_232c

                     loc_2385:
0000000000002385         xor        edx, edx                                    ; CODE XREF=main+1528
0000000000002387         test       rbx, rbx
000000000000238a         je         loc_2393

                     loc_238c:
000000000000238c         imul       rdx, r14, 0x98                              ; CODE XREF=main+1138

                     loc_2393:
0000000000002393         add        rdx, qword [rsp+0x228+var_220]              ; CODE XREF=main+1450
0000000000002398         lea        rsi, qword [aLibs+10]                       ; argument "__s2" for method j_strcmp, 0x7912
000000000000239f         mov        rdi, r15                                    ; argument "__s1" for method j_strcmp
00000000000023a2         mov        qword [rsp+0x228+var_218], rdx
00000000000023a7         call       j_strcmp                                    ; strcmp
00000000000023ac         test       eax, eax
00000000000023ae         mov        rdx, qword [rsp+0x228+var_218]
00000000000023b3         jne        loc_225d

00000000000023b9         or         rcx, 0xffffffffffffffff                     ; argument #4 for method wc
00000000000023bd         mov        rsi, r15                                    ; argument #2 for method wc
00000000000023c0         xor        edi, edi                                    ; argument #1 for method wc
00000000000023c2         mov        byte [have_read_stdin], 0x1                 ; have_read_stdin
00000000000023c9         call       wc                                          ; wc
00000000000023ce         mov        edx, eax
00000000000023d0         jmp        loc_22a2

                     loc_23d5:
00000000000023d5         cmp        byte [rax], 0x0                             ; CODE XREF=main+1067
00000000000023d8         jne        loc_2385

00000000000023da         lea        rsi, qword [aInvalidZerolen]                ; argument "msgid" for method j_dcgettext, "invalid zero-length file name"
00000000000023e1         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000023e6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000023e8         call       j_dcgettext                                 ; dcgettext
00000000000023ed         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x788d
00000000000023f4         mov        rcx, rax
00000000000023f7         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000023f9         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000023fb         xor        eax, eax
00000000000023fd         call       j_error                                     ; error

                     loc_2402:
0000000000002402         xor        r12d, r12d                                  ; CODE XREF=main+1350
0000000000002405         jmp        loc_22a5

                     loc_240a:
000000000000240a         mov        eax, dword [rsp+0x228+var_1FC]              ; CODE XREF=main+1058
000000000000240e         cmp        eax, 0x3
0000000000002411         je         loc_2793

0000000000002417         cmp        eax, 0x4
000000000000241a         je         loc_250c

0000000000002420         cmp        eax, 0x2
0000000000002423         je         loc_2444

0000000000002425         lea        rcx, qword [__PRETTY_FUNCTION__.8129]       ; argument "__function" for method j___assert_fail, __PRETTY_FUNCTION__.8129
000000000000242c         lea        rsi, qword [aCoreutils831sr]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/src/wc.c"
0000000000002433         lea        rdi, qword [aUnexpectedErro]                ; argument "__assertion" for method j___assert_fail, "!\\\"unexpected error code from argv_iter\\\""
000000000000243a         mov        edx, 0x33f                                  ; argument "__line" for method j___assert_fail
000000000000243f         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_2444:
0000000000002444         test       rbp, rbp                                    ; CODE XREF=main+1603
0000000000002447         sete       al
000000000000244a         and        al, r12b
000000000000244d         mov        ebx, eax
000000000000244f         je         loc_2465

0000000000002451         mov        rdi, r13
0000000000002454         mov        r12d, ebx
0000000000002457         call       argv_iter_n_args                            ; argv_iter_n_args
000000000000245c         test       rax, rax
000000000000245f         je         loc_26b8

                     loc_2465:
0000000000002465         cmp        byte [rsp+0x228+var_20D], 0x0               ; CODE XREF=main+1647, main+1901, main+2292
000000000000246a         jne        loc_25f1

                     loc_2470:
0000000000002470         mov        rdi, r13                                    ; CODE XREF=main+2075
0000000000002473         call       argv_iter_n_args                            ; argv_iter_n_args
0000000000002478         cmp        rax, 0x1
000000000000247c         jbe        loc_24bc

000000000000247e         lea        rsi, qword [aTotal]                         ; argument "msgid" for method j_dcgettext, "total"
0000000000002485         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000248a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000248c         call       j_dcgettext                                 ; dcgettext
0000000000002491         mov        r8, qword [max_line_length]                 ; argument #5 for method write_counts, max_line_length
0000000000002498         mov        rcx, qword [total_bytes]                    ; argument #4 for method write_counts, total_bytes
000000000000249f         mov        r9, rax                                     ; argument #6 for method write_counts
00000000000024a2         mov        rdx, qword [total_chars]                    ; argument #3 for method write_counts, total_chars
00000000000024a9         mov        rsi, qword [total_words]                    ; argument #2 for method write_counts, total_words
00000000000024b0         mov        rdi, qword [total_lines]                    ; argument #1 for method write_counts, total_lines
00000000000024b7         call       write_counts                                ; write_counts

                     loc_24bc:
00000000000024bc         mov        rdi, r13                                    ; CODE XREF=main+1692
00000000000024bf         call       argv_iter_free                              ; argv_iter_free
00000000000024c4         mov        rdi, qword [rsp+0x228+var_220]
00000000000024c9         call       sub_1dc0                                    ; sub_1dc0
00000000000024ce         cmp        byte [have_read_stdin], 0x0                 ; have_read_stdin
00000000000024d5         jne        loc_25c8

                     loc_24db:
00000000000024db         xor        r12d, 0x1                                   ; CODE XREF=main+2033
00000000000024df         mov        rbx, qword [rsp+0x228+var_40]
00000000000024e7         xor        rbx, qword [fs:0x28]
00000000000024f0         movzx      eax, r12b
00000000000024f4         jne        loc_2784

00000000000024fa         add        rsp, 0x1f8
0000000000002501         pop        rbx
0000000000002502         pop        rbp
0000000000002503         pop        r12
0000000000002505         pop        r13
0000000000002507         pop        r14
0000000000002509         pop        r15
000000000000250b         ret
                        ; endp

                     loc_250c:
000000000000250c         mov        rdx, rbp                                    ; argument #3 for method quotearg_n_style_colon, CODE XREF=main+1594
000000000000250f         mov        esi, 0x3                                    ; argument #2 for method quotearg_n_style_colon
0000000000002514         xor        edi, edi                                    ; argument #1 for method quotearg_n_style_colon
0000000000002516         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
000000000000251b         lea        rsi, qword [aSReadError]                    ; argument "msgid" for method j_dcgettext, "%s: read error"
0000000000002522         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002527         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002529         mov        rbp, rax
000000000000252c         xor        r12d, r12d
000000000000252f         call       j_dcgettext                                 ; dcgettext
0000000000002534         mov        rbx, rax
0000000000002537         call       j___errno_location                          ; __errno_location
000000000000253c         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000253e         mov        rcx, rbp
0000000000002541         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000002544         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000002546         xor        eax, eax
0000000000002548         call       j_error                                     ; error
000000000000254d         jmp        loc_2465

                     loc_2552:
0000000000002552         mov        rax, qword [rsp+0x228+var_220]              ; CODE XREF=main+887
0000000000002557         mov        ecx, 0x1
000000000000255c         cmp        dword [rax], 0x0
000000000000255f         jg         loc_21ce

0000000000002565         mov        rsi, qword [rsp+0x228+var_218]
000000000000256a         mov        rdx, rax
000000000000256d         mov        edi, 0x1
0000000000002572         add        rsi, rax
0000000000002575         xor        eax, eax
0000000000002577         jmp        loc_259f

                     loc_2579:
0000000000002579         cmp        dword [rdx], 0x0                            ; CODE XREF=main+1986
000000000000257c         jne        loc_2598

000000000000257e         mov        ecx, dword [rdx+0x20]
0000000000002581         and        ecx, 0xf000
0000000000002587         cmp        ecx, aBySSSnsSSSnand                        ; "by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
000000000000258d         je         loc_266b

0000000000002593         mov        edi, 0x7

                     loc_2598:
0000000000002598         add        rdx, 0x98                                   ; CODE XREF=main+1948, main+2191

                     loc_259f:
000000000000259f         cmp        rsi, rdx                                    ; CODE XREF=main+1943
00000000000025a2         jne        loc_2579

00000000000025a4         mov        ecx, 0x1
00000000000025a9         mov        esi, 0xa
00000000000025ae         jmp        loc_25b8

                     loc_25b0:
00000000000025b0         xor        edx, edx                                    ; CODE XREF=main+2012
00000000000025b2         add        ecx, 0x1
00000000000025b5         div        rsi

                     loc_25b8:
00000000000025b8         cmp        rax, 0x9                                    ; CODE XREF=main+1998
00000000000025bc         ja         loc_25b0

00000000000025be         cmp        ecx, edi
00000000000025c0         cmovl      ecx, edi
00000000000025c3         jmp        loc_21ce

                     loc_25c8:
00000000000025c8         xor        edi, edi                                    ; argument "__fd" for method j_close, CODE XREF=main+1781
00000000000025ca         call       j_close                                     ; close
00000000000025cf         test       eax, eax
00000000000025d1         je         loc_24db

00000000000025d7         call       j___errno_location                          ; __errno_location
00000000000025dc         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000025de         lea        rdx, qword [aLibs+10]                       ; argument "__format" for method j_error, 0x7912
00000000000025e5         mov        edi, 0x1                                    ; argument "__status" for method j_error
00000000000025ea         xor        eax, eax
00000000000025ec         call       j_error                                     ; error

                     loc_25f1:
00000000000025f1         lea        rdi, qword [rsp+0x228+var_1F8]              ; CODE XREF=main+1674
00000000000025f6         call       readtokens0_free                            ; readtokens0_free
00000000000025fb         jmp        loc_2470

                     loc_2600:
0000000000002600         lea        rsi, qword [aSReadError+13]                 ; argument "__modes" for method j_fopen, 0x711b, CODE XREF=main+655
0000000000002607         mov        rdi, rbp                                    ; argument "__filename" for method j_fopen
000000000000260a         call       j_fopen                                     ; fopen
000000000000260f         test       rax, rax
0000000000002612         mov        rbx, rax
0000000000002615         jne        loc_207c

000000000000261b         mov        rsi, rbp
000000000000261e         mov        edi, 0x4
0000000000002623         call       quotearg_style                              ; quotearg_style
0000000000002628         lea        rsi, qword [aCannotOpenSFor]                ; argument "msgid" for method j_dcgettext, "cannot open %s for reading"
000000000000262f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002634         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002636         mov        rbp, rax
0000000000002639         call       j_dcgettext                                 ; dcgettext
000000000000263e         mov        rbx, rax
0000000000002641         call       j___errno_location                          ; __errno_location
0000000000002646         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000002648         mov        rcx, rbp
000000000000264b         mov        rdx, rbx                                    ; argument "__format" for method j_error
000000000000264e         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002653         xor        eax, eax
0000000000002655         call       j_error                                     ; error

                     loc_265a:
000000000000265a         movsxd     rdx, eax                                    ; CODE XREF=main+941
000000000000265d         sub        ebx, eax
000000000000265f         lea        r12, qword [r12+rdx*8]
0000000000002663         movsxd     rbx, ebx
0000000000002666         jmp        loc_219f

                     loc_266b:
000000000000266b         add        rax, qword [rdx+0x38]                       ; CODE XREF=main+1965
000000000000266f         jmp        loc_2598

                     loc_2674:
0000000000002674         movzx      eax, byte [print_words]                     ; print_words, CODE XREF=main+828
000000000000267b         movzx      ecx, byte [print_lines]                     ; print_lines
0000000000002682         add        ecx, eax
0000000000002684         movzx      eax, byte [print_chars]                     ; print_chars
000000000000268b         add        ecx, eax
000000000000268d         movzx      eax, byte [print_bytes]                     ; print_bytes
0000000000002694         add        ecx, eax
0000000000002696         movzx      eax, byte [print_linelength]                ; print_linelength
000000000000269d         add        ecx, eax
000000000000269f         cmp        ecx, 0x1
00000000000026a2         jne        loc_2122

00000000000026a8         mov        rax, qword [rsp+0x228+var_220]
00000000000026ad         mov        dword [rax], 0x1
00000000000026b3         jmp        loc_21ce

                     loc_26b8:
00000000000026b8         mov        rdx, qword [rsp+0x228+var_220]              ; argument #3 for method wc, CODE XREF=main+1663
00000000000026bd         or         rcx, 0xffffffffffffffff                     ; argument #4 for method wc
00000000000026c1         xor        esi, esi                                    ; argument #2 for method wc
00000000000026c3         xor        edi, edi                                    ; argument #1 for method wc
00000000000026c5         mov        byte [have_read_stdin], 0x1                 ; have_read_stdin
00000000000026cc         call       wc                                          ; wc
00000000000026d1         mov        r12d, eax
00000000000026d4         jmp        loc_2465

                     loc_26d9:
00000000000026d9         pxor       xmm3, xmm3                                  ; CODE XREF=main+717
00000000000026dd         cvtsi2sd   xmm3, qword [rsp+0x228+var_A8]
00000000000026e7         movsd      qword [rsp+0x228+var_228], xmm3
00000000000026ec         call       physmem_available                           ; physmem_available
00000000000026f1         movsd      xmm2, qword [double_7870]                   ; double_7870
00000000000026f9         movsd      xmm1, qword [aWhenReadingFil+64]            ; 0x7868
0000000000002701         mulsd      xmm0, xmm2
0000000000002705         ucomisd    xmm0, xmm1
0000000000002709         ja         loc_2724

000000000000270b         movsd      qword [rsp+0x228+var_220], xmm2
0000000000002711         call       physmem_available                           ; physmem_available
0000000000002716         movsd      xmm2, qword [rsp+0x228+var_220]
000000000000271c         movapd     xmm1, xmm0
0000000000002720         mulsd      xmm1, xmm2

                     loc_2724:
0000000000002724         ucomisd    xmm1, qword [rsp+0x228+var_228]             ; CODE XREF=main+2345
0000000000002729         jb         loc_20b3

000000000000272f         lea        r12, qword [rsp+0x228+var_1F8]
0000000000002734         mov        rdi, r12
0000000000002737         call       readtokens0_init                            ; readtokens0_init
000000000000273c         mov        rsi, r12
000000000000273f         mov        rdi, rbx
0000000000002742         call       readtokens0                                 ; readtokens0
0000000000002747         test       al, al
0000000000002749         mov        byte [rsp+0x228+var_20D], al
000000000000274d         je         loc_2802

0000000000002753         mov        rdi, rbx
0000000000002756         call       rpl_fclose                                  ; rpl_fclose
000000000000275b         test       eax, eax
000000000000275d         jne        loc_2802

0000000000002763         mov        r12, qword [rsp+0x228+var_1F0]
0000000000002768         mov        rbx, qword [rsp+0x228+var_1F8]
000000000000276d         mov        rdi, r12
0000000000002770         call       argv_iter_init_argv                         ; argv_iter_init_argv
0000000000002775         mov        r13, rax
0000000000002778         jmp        loc_20c8

                     loc_277d:
000000000000277d         xor        edi, edi                                    ; argument #1 for method usage, CODE XREF=main+365
000000000000277f         call       usage                                       ; usage

                     loc_2784:
0000000000002784         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=main+1812
                        ; endp

                     loc_2789:
0000000000002789         mov        ecx, 0x1                                    ; CODE XREF=main+775
000000000000278e         jmp        loc_20ed

                     loc_2793:
0000000000002793         call       xalloc_die                                  ; xalloc_die, CODE XREF=main+747, main+784, main+793, main+1585
                        ; endp

                     loc_2798:
0000000000002798         mov        rsi, qword [r12+rax*8]                      ; CODE XREF=main+632
000000000000279c         mov        edi, 0x4
00000000000027a1         call       quotearg_style                              ; quotearg_style
00000000000027a6         lea        rsi, qword [aExtraOperandS]                 ; argument "msgid" for method j_dcgettext, "extra operand %s"
00000000000027ad         mov        rbx, rax
00000000000027b0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000027b2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000027b7         call       j_dcgettext                                 ; dcgettext
00000000000027bc         mov        rcx, rbx
00000000000027bf         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000027c2         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000027c4         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000027c6         xor        eax, eax
00000000000027c8         call       j_error                                     ; error
00000000000027cd         lea        rsi, qword [aFileOperandsCa]                ; argument "msgid" for method j_dcgettext, "file operands cannot be combined with --files0-from"
00000000000027d4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000027d6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000027db         call       j_dcgettext                                 ; dcgettext
00000000000027e0         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
00000000000027e7         lea        rdx, qword [aSSSn+8]                        ; 0x7df0
00000000000027ee         mov        rcx, rax
00000000000027f1         mov        esi, 0x1
00000000000027f6         xor        eax, eax
00000000000027f8         call       j___fprintf_chk                             ; __fprintf_chk
00000000000027fd         jmp        loc_1f5f

                     loc_2802:
0000000000002802         mov        rsi, rbp                                    ; CODE XREF=main+2413, main+2429
0000000000002805         mov        edi, 0x4
000000000000280a         call       quotearg_style                              ; quotearg_style
000000000000280f         lea        rsi, qword [aCannotReadFile]                ; argument "msgid" for method j_dcgettext, "cannot read file names from %s"
0000000000002816         mov        rbx, rax
0000000000002819         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000281e         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002820         call       j_dcgettext                                 ; dcgettext
0000000000002825         mov        rcx, rbx
0000000000002828         mov        rdx, rax                                    ; argument "__format" for method j_error
000000000000282b         xor        esi, esi                                    ; argument "__errnum" for method j_error
000000000000282d         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000002832         xor        eax, eax
0000000000002834         call       j_error                                     ; error
0000000000002839         nop        dword [rax]                                 ; End of unwind block (FDE at 0x85f4)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
0000000000002840         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x84bc)
0000000000002842         mov        r9, rdx
0000000000002845         pop        rsi
0000000000002846         mov        rdx, rsp
0000000000002849         and        rsp, 0xfffffffffffffff0
000000000000284d         push       rax
000000000000284e         push       rsp
000000000000284f         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
0000000000002856         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
000000000000285d         lea        rdi, qword [main]                           ; main
0000000000002864         call       qword [qword_209fc0+8]                      ; 0x209fc8
000000000000286a         hlt
                        ; endp
000000000000286b         align      16                                          ; End of unwind block (FDE at 0x84bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000002870         lea        rdi, qword [__TMC_END__]                    ; __TMC_END__, CODE XREF=__do_global_dtors_aux+35
0000000000002877         push       rbp
0000000000002878         lea        rax, qword [__TMC_END__]                    ; __TMC_END__
000000000000287f         cmp        rax, rdi
0000000000002882         mov        rbp, rsp
0000000000002885         je         loc_28a0

0000000000002887         mov        rax, qword [qword_209fc0]                   ; qword_209fc0
000000000000288e         test       rax, rax
0000000000002891         je         loc_28a0

0000000000002893         pop        rbp
0000000000002894         jmp        rax
                        ; endp
0000000000002896         align      32

                     loc_28a0:
00000000000028a0         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
00000000000028a1         ret
                        ; endp
00000000000028a2         align      16

                     register_tm_clones:
00000000000028b0         lea        rdi, qword [__TMC_END__]                    ; __TMC_END__, CODE XREF=frame_dummy+5
00000000000028b7         lea        rsi, qword [__TMC_END__]                    ; __TMC_END__
00000000000028be         push       rbp
00000000000028bf         sub        rsi, rdi
00000000000028c2         mov        rbp, rsp
00000000000028c5         sar        rsi, 0x3
00000000000028c9         mov        rax, rsi
00000000000028cc         shr        rax, 0x3f
00000000000028d0         add        rsi, rax
00000000000028d3         sar        rsi, 0x1
00000000000028d6         je         loc_28f0

00000000000028d8         mov        rax, qword [qword_209fe0]                   ; qword_209fe0
00000000000028df         test       rax, rax
00000000000028e2         je         loc_28f0

00000000000028e4         pop        rbp
00000000000028e5         jmp        rax
                        ; endp
00000000000028e7         align      16

                     loc_28f0:
00000000000028f0         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
00000000000028f1         ret
                        ; endp
00000000000028f2         align      256


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
0000000000002900         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
0000000000002907         jne        loc_2938

0000000000002909         cmp        qword [qword_209fe8], 0x0                   ; qword_209fe8
0000000000002911         push       rbp
0000000000002912         mov        rbp, rsp
0000000000002915         je         loc_2923

0000000000002917         mov        rdi, qword [__dso_handle]                   ; __dso_handle
000000000000291e         call       j_qword_209fe8                              ; qword_209fe8

                     loc_2923:
0000000000002923         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
0000000000002928         mov        byte [completed.7697], 0x1                  ; completed.7697
000000000000292f         pop        rbp
0000000000002930         ret
                        ; endp
0000000000002931         align      8

                     loc_2938:
0000000000002938         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
000000000000293a         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000002940         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000002941         mov        rbp, rsp
0000000000002944         pop        rbp
0000000000002945         jmp        register_tm_clones                          ; register_tm_clones
000000000000294a         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     write_counts:
0000000000002950         push       r15                                         ; Begin of unwind block (FDE at 0x852c), CODE XREF=main+1751, wc+1066
0000000000002952         push       r14
0000000000002954         mov        r15, rsi
0000000000002957         push       r13
0000000000002959         push       r12
000000000000295b         mov        r14, rdx
000000000000295e         push       rbp
000000000000295f         push       rbx
0000000000002960         mov        r13, rcx
0000000000002963         mov        r12, r8
0000000000002966         mov        rbx, r9
0000000000002969         lea        rbp, qword [format_sp_int.7975+1]           ; 0x72c9
0000000000002970         sub        rsp, 0x28
0000000000002974         mov        rax, qword [fs:0x28]
000000000000297d         mov        qword [rsp+0x58+var_40], rax
0000000000002982         xor        eax, eax
0000000000002984         cmp        byte [print_lines], 0x0                     ; print_lines
000000000000298b         jne        loc_2b10

                     loc_2991:
0000000000002991         cmp        byte [print_words], 0x0                     ; print_words, CODE XREF=write_counts+484
0000000000002998         jne        loc_2ae0

                     loc_299e:
000000000000299e         cmp        byte [print_chars], 0x0                     ; print_chars, CODE XREF=write_counts+442
00000000000029a5         jne        loc_2ab0

                     loc_29ab:
00000000000029ab         cmp        byte [print_bytes], 0x0                     ; print_bytes, CODE XREF=write_counts+394
00000000000029b2         jne        loc_2a80

                     loc_29b8:
00000000000029b8         cmp        byte [print_linelength], 0x0                ; print_linelength, CODE XREF=write_counts+346
00000000000029bf         jne        loc_2a50

                     loc_29c5:
00000000000029c5         test       rbx, rbx                                    ; CODE XREF=write_counts+291
00000000000029c8         je         loc_2a04

00000000000029ca         mov        esi, 0xa                                    ; argument "__c" for method j_strchr
00000000000029cf         mov        rdi, rbx                                    ; argument "__s" for method j_strchr
00000000000029d2         call       j_strchr                                    ; strchr
00000000000029d7         test       rax, rax
00000000000029da         je         loc_29ee

00000000000029dc         mov        rdx, rbx
00000000000029df         mov        esi, 0x3
00000000000029e4         xor        edi, edi
00000000000029e6         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
00000000000029eb         mov        rbx, rax

                     loc_29ee:
00000000000029ee         lea        rsi, qword [aSS+3]                          ; 0x788c, CODE XREF=write_counts+138
00000000000029f5         mov        rdx, rbx
00000000000029f8         mov        edi, 0x1
00000000000029fd         xor        eax, eax
00000000000029ff         call       j___printf_chk                              ; __printf_chk

                     loc_2a04:
0000000000002a04         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=write_counts+120
0000000000002a0b         mov        rax, qword [rdi+0x28]
0000000000002a0f         cmp        rax, qword [rdi+0x30]
0000000000002a13         jae        loc_2b40

0000000000002a19         lea        rdx, qword [rax+1]
0000000000002a1d         mov        qword [rdi+0x28], rdx
0000000000002a21         mov        byte [rax], 0xa

                     loc_2a24:
0000000000002a24         mov        rax, qword [rsp+0x58+var_40]                ; CODE XREF=write_counts+506
0000000000002a29         xor        rax, qword [fs:0x28]
0000000000002a32         jne        loc_2b4f

0000000000002a38         add        rsp, 0x28
0000000000002a3c         pop        rbx
0000000000002a3d         pop        rbp
0000000000002a3e         pop        r12
0000000000002a40         pop        r13
0000000000002a42         pop        r14
0000000000002a44         pop        r15
0000000000002a46         ret
                        ; endp
0000000000002a47         align      16

                     loc_2a50:
0000000000002a50         mov        rsi, rsp                                    ; CODE XREF=write_counts+111
0000000000002a53         mov        rdi, r12
0000000000002a56         call       umaxtostr                                   ; umaxtostr
0000000000002a5b         mov        edx, dword [number_width]                   ; number_width
0000000000002a61         mov        rcx, rax
0000000000002a64         mov        rsi, rbp
0000000000002a67         mov        edi, 0x1
0000000000002a6c         xor        eax, eax
0000000000002a6e         call       j___printf_chk                              ; __printf_chk
0000000000002a73         jmp        loc_29c5
0000000000002a78         align      128

                     loc_2a80:
0000000000002a80         mov        rsi, rsp                                    ; CODE XREF=write_counts+98
0000000000002a83         mov        rdi, r13
0000000000002a86         call       umaxtostr                                   ; umaxtostr
0000000000002a8b         mov        edx, dword [number_width]                   ; number_width
0000000000002a91         mov        rcx, rax
0000000000002a94         mov        rsi, rbp
0000000000002a97         mov        edi, 0x1
0000000000002a9c         xor        eax, eax
0000000000002a9e         lea        rbp, qword [format_sp_int.7975]             ; format_sp_int.7975
0000000000002aa5         call       j___printf_chk                              ; __printf_chk
0000000000002aaa         jmp        loc_29b8
0000000000002aaf         align      16

                     loc_2ab0:
0000000000002ab0         mov        rsi, rsp                                    ; CODE XREF=write_counts+85
0000000000002ab3         mov        rdi, r14
0000000000002ab6         call       umaxtostr                                   ; umaxtostr
0000000000002abb         mov        edx, dword [number_width]                   ; number_width
0000000000002ac1         mov        rcx, rax
0000000000002ac4         mov        rsi, rbp
0000000000002ac7         mov        edi, 0x1
0000000000002acc         xor        eax, eax
0000000000002ace         lea        rbp, qword [format_sp_int.7975]             ; format_sp_int.7975
0000000000002ad5         call       j___printf_chk                              ; __printf_chk
0000000000002ada         jmp        loc_29ab
0000000000002adf         align      32

                     loc_2ae0:
0000000000002ae0         mov        rsi, rsp                                    ; CODE XREF=write_counts+72
0000000000002ae3         mov        rdi, r15
0000000000002ae6         call       umaxtostr                                   ; umaxtostr
0000000000002aeb         mov        edx, dword [number_width]                   ; number_width
0000000000002af1         mov        rcx, rax
0000000000002af4         mov        rsi, rbp
0000000000002af7         mov        edi, 0x1
0000000000002afc         xor        eax, eax
0000000000002afe         lea        rbp, qword [format_sp_int.7975]             ; format_sp_int.7975
0000000000002b05         call       j___printf_chk                              ; __printf_chk
0000000000002b0a         jmp        loc_299e
0000000000002b0f         align      16

                     loc_2b10:
0000000000002b10         mov        rsi, rsp                                    ; CODE XREF=write_counts+59
0000000000002b13         call       umaxtostr                                   ; umaxtostr
0000000000002b18         mov        edx, dword [number_width]                   ; number_width
0000000000002b1e         mov        rcx, rax
0000000000002b21         mov        rsi, rbp
0000000000002b24         mov        edi, 0x1
0000000000002b29         xor        eax, eax
0000000000002b2b         sub        rbp, 0x1
0000000000002b2f         call       j___printf_chk                              ; __printf_chk
0000000000002b34         jmp        loc_2991
0000000000002b39         align      64

                     loc_2b40:
0000000000002b40         mov        esi, 0xa                                    ; argument #2 for method j___overflow, CODE XREF=write_counts+195
0000000000002b45         call       j___overflow                                ; __overflow
0000000000002b4a         jmp        loc_2a24

                     loc_2b4f:
0000000000002b4f         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=write_counts+226
                        ; endp
0000000000002b54         align      32                                          ; End of unwind block (FDE at 0x852c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_4048: int8_t, -16456
        ;    var_4050: int64_t, -16464
        ;    var_4054: int32_t, -16468
        ;    var_4059: int8_t, -16473
        ;    var_405A: int8_t, -16474
        ;    var_4060: int32_t, -16480
        ;    var_4068: int64_t, -16488
        ;    var_4070: int64_t, -16496
        ;    var_4078: int64_t, -16504
        ;    var_4080: int64_t, -16512
        ;    var_4088: int64_t, -16520
        ;    var_4090: int64_t, -16528
        ;    var_4098: int64_t, -16536
        ;    var_40A0: int64_t, -16544
        ;    var_40A8: int64_t, -16552


                     wc:
0000000000002b60         push       r15                                         ; Begin of unwind block (FDE at 0x8578), CODE XREF=main+1187, main+1513, main+2284
0000000000002b62         push       r14
0000000000002b64         push       r13
0000000000002b66         push       r12
0000000000002b68         push       rbp
0000000000002b69         push       rbx
0000000000002b6a         mov        rbp, rcx
0000000000002b6d         mov        rbx, rdx
0000000000002b70         sub        rsp, 0x4078
0000000000002b77         mov        rcx, qword [fs:0x28]
0000000000002b80         mov        qword [rsp+0x40a8+var_40], rcx
0000000000002b88         xor        ecx, ecx
0000000000002b8a         test       rsi, rsi
0000000000002b8d         mov        dword [rsp+0x40a8+var_4060], edi
0000000000002b91         mov        qword [rsp+0x40a8+var_4070], rsi
0000000000002b96         mov        qword [rsp+0x40a8+var_4068], rsi
0000000000002b9b         je         loc_3488

                     loc_2ba1:
0000000000002ba1         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max, CODE XREF=wc+2368
0000000000002ba6         cmp        rax, 0x1
0000000000002baa         movzx      edx, byte [print_bytes]                     ; print_bytes
0000000000002bb1         jbe        loc_2f30

0000000000002bb7         movzx      eax, byte [print_chars]                     ; print_chars
0000000000002bbe         mov        r12d, eax
0000000000002bc1         mov        byte [rsp+0x40a8+var_405A], al
0000000000002bc5         xor        r12d, 0x1
0000000000002bc9         and        r12d, edx

                     loc_2bcc:
0000000000002bcc         cmp        byte [print_words], 0x0                     ; print_words, CODE XREF=wc+996
0000000000002bd3         jne        loc_2ce0

0000000000002bd9         movzx      r15d, byte [print_linelength]               ; print_linelength
0000000000002be1         test       r15b, r15b
0000000000002be4         jne        loc_2ce0

0000000000002bea         cmp        dl, 0x1
0000000000002bed         jne        loc_2df9

0000000000002bf3         cmp        byte [rsp+0x40a8+var_405A], 0x0
0000000000002bf8         jne        loc_2df9

0000000000002bfe         cmp        byte [print_lines], 0x0                     ; print_lines
0000000000002c05         jne        loc_2df9

0000000000002c0b         test       r12b, r12b
0000000000002c0e         je         loc_2e28

                     loc_2c14:
0000000000002c14         mov        eax, dword [rbx]                            ; CODE XREF=wc+695
0000000000002c16         test       eax, eax
0000000000002c18         jg         loc_3269

                     loc_2c1e:
0000000000002c1e         test       eax, eax                                    ; CODE XREF=wc+1821
0000000000002c20         jne        loc_3282

0000000000002c26         mov        eax, dword [rbx+0x20]
0000000000002c29         and        eax, 0xd000
0000000000002c2e         cmp        eax, aBySSSnsSSSnand                        ; "by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
0000000000002c33         jne        loc_3282

0000000000002c39         mov        r12, qword [rbx+0x38]
0000000000002c3d         test       r12, r12
0000000000002c40         js         loc_3282

0000000000002c46         cmp        rbp, 0xffffffffffffffff
0000000000002c4a         mov        qword [rsp+0x40a8+var_4090], r12
0000000000002c4f         mov        r13, qword [page_size]                      ; page_size
0000000000002c56         je         loc_35db

0000000000002c5c         xor        edx, edx
0000000000002c5e         mov        rax, r12
0000000000002c61         div        r13
0000000000002c64         test       rdx, rdx
0000000000002c67         jne        loc_32d6

0000000000002c6d         mov        esi, 0x1
0000000000002c72         xor        ebp, ebp

                     loc_2c74:
0000000000002c74         mov        rax, qword [rbx+0x40]                       ; CODE XREF=wc+2783
0000000000002c78         movabs     rdx, 0x1fffffffffffffff
0000000000002c82         lea        rcx, qword [rax-1]
0000000000002c86         add        rax, 0x1
0000000000002c8a         cmp        rcx, rdx
0000000000002c8d         mov        ecx, 0x201
0000000000002c92         cmovbe     rcx, rax
0000000000002c96         mov        rax, r12
0000000000002c99         xor        edx, edx
0000000000002c9b         div        rcx
0000000000002c9e         sub        r12, rdx
0000000000002ca1         cmp        r12, rbp
0000000000002ca4         jle        loc_3282

0000000000002caa         test       sil, sil
0000000000002cad         je         loc_3282

0000000000002cb3         mov        edi, dword [rsp+0x40a8+var_4060]            ; argument "__fd" for method j_lseek
0000000000002cb7         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000002cbc         mov        rsi, r12                                    ; argument "__offset" for method j_lseek
0000000000002cbf         call       j_lseek                                     ; lseek
0000000000002cc4         test       rax, rax
0000000000002cc7         js         loc_3282

0000000000002ccd         sub        r12, rbp
0000000000002cd0         mov        qword [rsp+0x40a8+var_4090], r12
0000000000002cd5         jmp        loc_328b
0000000000002cda         align      32

                     loc_2ce0:
0000000000002ce0         mov        edi, dword [rsp+0x40a8+var_4060]            ; CODE XREF=wc+115, wc+132
0000000000002ce4         mov        ecx, 0x2
0000000000002ce9         xor        edx, edx
0000000000002ceb         xor        esi, esi
0000000000002ced         call       fdadvise                                    ; fdadvise

                     loc_2cf2:
0000000000002cf2         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max, CODE XREF=wc+706
0000000000002cf7         cmp        rax, 0x1
0000000000002cfb         jbe        loc_310f

0000000000002d01         lea        rax, qword [rsp+0x40a8+var_4048]
0000000000002d06         xor        r12d, r12d
0000000000002d09         mov        qword [rsp+0x40a8+var_4050], 0x0
0000000000002d12         xor        ecx, ecx
0000000000002d14         xor        r14d, r14d
0000000000002d17         xor        ebx, ebx
0000000000002d19         mov        qword [rsp+0x40a8+var_4080], 0x0
0000000000002d22         mov        qword [rsp+0x40a8+var_4090], 0x0
0000000000002d2b         xor        ebp, ebp
0000000000002d2d         mov        qword [rsp+0x40a8+var_4088], 0x0
0000000000002d36         mov        qword [rsp+0x40a8+var_40A8], 0x0
0000000000002d3e         mov        r13, r12
0000000000002d41         mov        qword [rsp+0x40a8+var_4078], rax
0000000000002d46         nop        word [cs:rax+rax]

                     loc_2d50:
0000000000002d50         mov        rax, qword [rsp+0x40a8+var_4078]            ; CODE XREF=wc+1301, wc+2336
0000000000002d55         mov        edi, dword [rsp+0x40a8+var_4060]
0000000000002d59         mov        edx, gettext_quote.part.1
0000000000002d5e         sub        rdx, r13
0000000000002d61         mov        byte [rsp+0x40a8+var_40A0], cl
0000000000002d65         lea        rsi, qword [rax+r13]
0000000000002d69         call       safe_read                                   ; safe_read
0000000000002d6e         test       rax, rax
0000000000002d71         movzx      ecx, byte [rsp+0x40a8+var_40A0]
0000000000002d76         je         loc_34c8

0000000000002d7c         cmp        rax, 0xffffffffffffffff
0000000000002d80         je         loc_34e8

0000000000002d86         mov        r15, qword [rsp+0x40a8+var_4078]
0000000000002d8b         add        r13, rax
0000000000002d8e         add        qword [rsp+0x40a8+var_4090], rax
0000000000002d93         lea        rax, qword [rsp+0x40a8+var_4050]
0000000000002d98         mov        r12, r15
0000000000002d9b         mov        qword [rsp+0x40a8+var_40A0], rax
0000000000002da0         mov        r15, r13
0000000000002da3         nop        dword [rax+rax]

                     loc_2da8:
0000000000002da8         test       cl, cl                                      ; CODE XREF=wc+1292
0000000000002daa         jne        loc_32f8

0000000000002db0         movzx      r13d, byte [r12]
0000000000002db5         lea        rsi, qword [is_basic_table]                 ; is_basic_table
0000000000002dbc         mov        eax, r13d
0000000000002dbf         shr        al, 0x5
0000000000002dc2         and        eax, 0x7
0000000000002dc5         mov        eax, dword [rsi+rax*4]
0000000000002dc8         bt         eax, r13d
0000000000002dcc         jae        loc_32f8

0000000000002dd2         movsx      eax, r13b
0000000000002dd6         mov        dword [rsp+0x40a8+var_4054], eax
0000000000002dda         lea        eax, dword [r13-9]
0000000000002dde         cmp        al, 0x17
0000000000002de0         ja         loc_30d0

0000000000002de6         lea        rsi, qword [switch_table_71a8]              ; switch_table_71a8
0000000000002ded         movzx      eax, al
0000000000002df0         movsxd     rax, dword [rsi+rax*4]
0000000000002df4         add        rax, rsi
0000000000002df7         jmp        rax                                         ; switch statement using table at 0x71a8, with 24 cases, 0x3048,0x3080,0x30a0,0x30b0,0x30c0,0x30d0

                     loc_2df9:
0000000000002df9         mov        edi, dword [rsp+0x40a8+var_4060]            ; CODE XREF=wc+141, wc+152, wc+165
0000000000002dfd         xor        edx, edx
0000000000002dff         xor        esi, esi
0000000000002e01         mov        ecx, 0x2
0000000000002e06         call       fdadvise                                    ; fdadvise
0000000000002e0b         test       r12b, r12b
0000000000002e0e         je         loc_2e1d

0000000000002e10         cmp        byte [print_lines], 0x0                     ; print_lines
0000000000002e17         je         loc_2c14

                     loc_2e1d:
0000000000002e1d         cmp        byte [rsp+0x40a8+var_405A], 0x0             ; CODE XREF=wc+686
0000000000002e22         jne        loc_2cf2

                     loc_2e28:
0000000000002e28         lea        rax, qword [rsp+0x40a8+var_4048]            ; CODE XREF=wc+174
0000000000002e2d         xor        r13d, r13d
0000000000002e30         mov        byte [rsp+0x40a8+var_40A0], r15b
0000000000002e35         mov        qword [rsp+0x40a8+var_4090], 0x0
0000000000002e3e         mov        r15d, r13d
0000000000002e41         mov        qword [rsp+0x40a8+var_40A8], 0x0
0000000000002e49         movabs     r14, 0x8888888888888889
0000000000002e53         mov        r13, rax
0000000000002e56         nop        word [cs:rax+rax]

                     loc_2e60:
0000000000002e60         mov        edi, dword [rsp+0x40a8+var_4060]            ; CODE XREF=wc+895, wc+967, wc+1246
0000000000002e64         mov        edx, gettext_quote.part.1
0000000000002e69         mov        rsi, r13
0000000000002e6c         call       safe_read                                   ; safe_read
0000000000002e71         test       rax, rax
0000000000002e74         je         loc_2f50

0000000000002e7a         cmp        rax, 0xffffffffffffffff
0000000000002e7e         je         loc_2ff0

0000000000002e84         add        qword [rsp+0x40a8+var_4090], rax
0000000000002e89         lea        rbp, qword [r13+rax]
0000000000002e8e         mul        r14
0000000000002e91         mov        rbx, rdx
0000000000002e94         shr        rbx, 0x3
0000000000002e98         test       r15b, r15b
0000000000002e9b         je         loc_2ee8

0000000000002e9d         mov        r12, qword [rsp+0x40a8+var_40A8]
0000000000002ea1         mov        rdi, r13
0000000000002ea4         jmp        loc_2eb8
0000000000002ea6         align      16

                     loc_2eb0:
0000000000002eb0         lea        rdi, qword [rax+1]                          ; CODE XREF=wc+875
0000000000002eb4         add        r12, 0x1

                     loc_2eb8:
0000000000002eb8         mov        rdx, rbp                                    ; CODE XREF=wc+836
0000000000002ebb         mov        esi, 0xa                                    ; argument "__c" for method j_memchr
0000000000002ec0         sub        rdx, rdi                                    ; argument "__n" for method j_memchr
0000000000002ec3         call       j_memchr                                    ; memchr
0000000000002ec8         test       rax, rax
0000000000002ecb         jne        loc_2eb0

0000000000002ecd         mov        rax, r12
0000000000002ed0         sub        rax, qword [rsp+0x40a8+var_40A8]
0000000000002ed4         mov        qword [rsp+0x40a8+var_40A8], r12
0000000000002ed8         cmp        rax, rbx
0000000000002edb         setbe      r15b
0000000000002edf         jmp        loc_2e60
0000000000002ee4         align      8

                     loc_2ee8:
0000000000002ee8         cmp        rbp, r13                                    ; CODE XREF=wc+827
0000000000002eeb         je         loc_3038

0000000000002ef1         mov        rdx, qword [rsp+0x40a8+var_40A8]
0000000000002ef5         mov        rax, r13
0000000000002ef8         nop        dword [rax+rax]

                     loc_2f00:
0000000000002f00         add        rax, 0x1                                    ; CODE XREF=wc+947
0000000000002f04         xor        ecx, ecx
0000000000002f06         cmp        byte [rax-1], 0xa
0000000000002f0a         sete       cl
0000000000002f0d         add        rdx, rcx
0000000000002f10         cmp        rbp, rax
0000000000002f13         jne        loc_2f00

0000000000002f15         mov        rax, rdx
0000000000002f18         sub        rax, qword [rsp+0x40a8+var_40A8]
0000000000002f1c         mov        qword [rsp+0x40a8+var_40A8], rdx
0000000000002f20         cmp        rax, rbx
0000000000002f23         setbe      r15b
0000000000002f27         jmp        loc_2e60
0000000000002f2c         align      16

                     loc_2f30:
0000000000002f30         movzx      eax, byte [print_chars]                     ; print_chars, CODE XREF=wc+81
0000000000002f37         test       dl, dl
0000000000002f39         mov        byte [rsp+0x40a8+var_405A], 0x0
0000000000002f3e         cmove      edx, eax
0000000000002f41         mov        r12d, edx
0000000000002f44         jmp        loc_2bcc
0000000000002f49         align      16

                     loc_2f50:
0000000000002f50         xor        r14d, r14d                                  ; CODE XREF=wc+788
0000000000002f53         xor        ebp, ebp
0000000000002f55         xor        r12d, r12d
0000000000002f58         mov        r15d, 0x1

                     loc_2f5e:
0000000000002f5e         movzx      eax, byte [rsp+0x40a8+var_405A]             ; CODE XREF=wc+1228, wc+1932, wc+2435, wc+2542, wc+2678, wc+2753
0000000000002f63         mov        rbx, qword [rsp+0x40a8+var_4090]
0000000000002f68         mov        r8, r14
0000000000002f6b         cmp        byte [print_chars], al                      ; print_chars
0000000000002f71         mov        r13, qword [rsp+0x40a8+var_40A8]
0000000000002f75         mov        rsi, r12
0000000000002f78         mov        r9, qword [rsp+0x40a8+var_4070]
0000000000002f7d         mov        rcx, rbx
0000000000002f80         mov        rdi, r13
0000000000002f83         cmova      rbp, rbx
0000000000002f87         mov        rdx, rbp
0000000000002f8a         call       write_counts                                ; write_counts
0000000000002f8f         add        qword [total_lines], r13                    ; total_lines
0000000000002f96         add        qword [total_words], r12                    ; total_words
0000000000002f9d         add        qword [total_chars], rbp                    ; total_chars
0000000000002fa4         add        qword [total_bytes], rbx                    ; total_bytes
0000000000002fab         cmp        qword [max_line_length], r14                ; max_line_length
0000000000002fb2         jae        loc_2fbb

0000000000002fb4         mov        qword [max_line_length], r14                ; max_line_length

                     loc_2fbb:
0000000000002fbb         mov        rcx, qword [rsp+0x40a8+var_40]              ; CODE XREF=wc+1106
0000000000002fc3         xor        rcx, qword [fs:0x28]
0000000000002fcc         mov        eax, r15d
0000000000002fcf         jne        loc_3626

0000000000002fd5         add        rsp, 0x4078
0000000000002fdc         pop        rbx
0000000000002fdd         pop        rbp
0000000000002fde         pop        r12
0000000000002fe0         pop        r13
0000000000002fe2         pop        r14
0000000000002fe4         pop        r15
0000000000002fe6         ret
                        ; endp
0000000000002fe7         align      16

                     loc_2ff0:
0000000000002ff0         mov        rdx, qword [rsp+0x40a8+var_4068]            ; CODE XREF=wc+798
0000000000002ff5         mov        esi, 0x3
0000000000002ffa         xor        edi, edi
0000000000002ffc         movzx      r15d, byte [rsp+0x40a8+var_40A0]
0000000000003002         xor        r14d, r14d
0000000000003005         xor        ebp, ebp
0000000000003007         xor        r12d, r12d
000000000000300a         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
000000000000300f         mov        rbx, rax
0000000000003012         call       j___errno_location                          ; __errno_location
0000000000003017         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000003019         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x788d
0000000000003020         mov        rcx, rbx
0000000000003023         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003025         xor        eax, eax
0000000000003027         call       j_error                                     ; error
000000000000302c         jmp        loc_2f5e
0000000000003031         align      8

                     loc_3038:
0000000000003038         mov        r15d, 0x1                                   ; CODE XREF=wc+907
000000000000303e         jmp        loc_2e60
0000000000003043         align      8

                     loc_3048:
0000000000003048         mov        edx, 0x1                                    ; case 23, CODE XREF=wc+663

                     loc_304d:
000000000000304d         add        r14, 0x1                                    ; case 23, CODE XREF=wc+2240
0000000000003051         nop        dword [rax]

                     loc_3058:
0000000000003058         add        qword [rsp+0x40a8+var_4088], rbx            ; case 2, CODE XREF=wc+1337, wc+1349, wc+1389, wc+1439, wc+2121, wc+2149, wc+2162, wc+2175, wc+2194, wc+2240
000000000000305d         xor        ebx, ebx

                     loc_305f:
000000000000305f         add        r12, rdx                                    ; CODE XREF=wc+1426, wc+1450, wc+2068, wc+2494
0000000000003062         sub        r15, rdx
0000000000003065         add        rbp, 0x1

                     loc_3069:
0000000000003069         test       r15, r15                                    ; CODE XREF=wc+2261
000000000000306c         jne        loc_2da8

0000000000003072         mov        r13, r15
0000000000003075         jmp        loc_2d50
000000000000307a         align      128

                     loc_3080:
0000000000003080         mov        edx, 0x1                                    ; case 4, CODE XREF=wc+663

                     loc_3085:
0000000000003085         mov        rax, qword [rsp+0x40a8+var_4080]            ; case 4, CODE XREF=wc+1370, wc+2240
000000000000308a         cmp        rax, r14
000000000000308d         cmovae     r14, rax
0000000000003091         mov        qword [rsp+0x40a8+var_4080], r14
0000000000003096         xor        r14d, r14d
0000000000003099         jmp        loc_3058
000000000000309b         align      32

                     loc_30a0:
00000000000030a0         mov        edx, 0x1                                    ; case 2, CODE XREF=wc+663
00000000000030a5         jmp        loc_3058
00000000000030a7         align      16

                     loc_30b0:
00000000000030b0         mov        edx, 0x1                                    ; case 1, CODE XREF=wc+663

                     loc_30b5:
00000000000030b5         add        qword [rsp+0x40a8+var_40A8], 0x1            ; case 1, CODE XREF=wc+2240
00000000000030ba         jmp        loc_3085
00000000000030bc         align      64

                     loc_30c0:
00000000000030c0         mov        edx, 0x1                                    ; case 0, CODE XREF=wc+663

                     loc_30c5:
00000000000030c5         and        r14, 0xfffffffffffffff8                     ; case 0, CODE XREF=wc+2240
00000000000030c9         add        r14, 0x8
00000000000030cd         jmp        loc_3058
00000000000030cf         align      16

                     loc_30d0:
00000000000030d0         mov        byte [rsp+0x40a8+var_4098], cl              ; case 22, CODE XREF=wc+640, wc+663
00000000000030d4         movzx      r13d, r13b
00000000000030d8         call       j___ctype_b_loc                             ; __ctype_b_loc
00000000000030dd         mov        rax, qword [rax]
00000000000030e0         mov        edx, 0x1
00000000000030e5         movzx      ecx, byte [rsp+0x40a8+var_4098]
00000000000030ea         movzx      eax, word [rax+r13*2]
00000000000030ef         test       ah, 0x40
00000000000030f2         je         loc_305f

00000000000030f8         add        r14, 0x1
00000000000030fc         test       ah, 0x20
00000000000030ff         jne        loc_3058

                     loc_3105:
0000000000003105         mov        ebx, 0x1                                    ; CODE XREF=wc+2188
000000000000310a         jmp        loc_305f

                     loc_310f:
000000000000310f         lea        rax, qword [rsp+0x40a8+var_4048]            ; CODE XREF=wc+411
0000000000003114         xor        ebx, ebx
0000000000003116         xor        ebp, ebp
0000000000003118         lea        r15, qword [switch_table_7208]              ; switch_table_7208
000000000000311f         movzx      r13d, bl
0000000000003123         mov        qword [rsp+0x40a8+var_4090], 0x0
000000000000312c         xor        r12d, r12d
000000000000312f         mov        qword [rsp+0x40a8+var_40A8], 0x0
0000000000003137         mov        qword [rsp+0x40a8+var_4078], rax
000000000000313c         mov        rbx, rbp
000000000000313f         nop

                     loc_3140:
0000000000003140         mov        rsi, qword [rsp+0x40a8+var_4078]            ; CODE XREF=wc+1631
0000000000003145         mov        edi, dword [rsp+0x40a8+var_4060]
0000000000003149         mov        edx, gettext_quote.part.1
000000000000314e         call       safe_read                                   ; safe_read
0000000000003153         test       rax, rax
0000000000003156         je         loc_352c

000000000000315c         cmp        rax, 0xffffffffffffffff
0000000000003160         je         loc_3553

0000000000003166         mov        r14, qword [rsp+0x40a8+var_4078]
000000000000316b         add        qword [rsp+0x40a8+var_4090], rax
0000000000003170         mov        rdx, rbp
0000000000003173         mov        rbp, rbx
0000000000003176         lea        r10, qword [r14+rax]
000000000000317a         nop        word [rax+rax]

                     loc_3180:
0000000000003180         add        r14, 0x1                                    ; CODE XREF=wc+1623
0000000000003184         movzx      ebx, byte [r14-1]
0000000000003189         lea        eax, dword [rbx-9]
000000000000318c         cmp        al, 0x17
000000000000318e         ja         loc_31e0

0000000000003190         movzx      eax, al
0000000000003193         movsxd     rax, dword [r15+rax*4]
0000000000003197         add        rax, r15
000000000000319a         jmp        rax                                         ; switch statement using table at 0x7208, with 24 cases, 0x31a0,0x31a5,0x31ae,0x31c8,0x31d8,0x31e0
000000000000319c         align      32

                     loc_31a0:
00000000000031a0         add        qword [rsp+0x40a8+var_40A8], 0x1            ; case 1, CODE XREF=wc+1594

                     loc_31a5:
00000000000031a5         cmp        rdx, rbp                                    ; case 4, CODE XREF=wc+1594
00000000000031a8         cmovb      rdx, rbp
00000000000031ac         xor        ebp, ebp

                     loc_31ae:
00000000000031ae         add        r12, r13                                    ; case 2, CODE XREF=wc+1594, wc+1648, wc+1660, wc+1711, wc+1751, wc+1762, wc+1773, wc+1784
00000000000031b1         xor        r13d, r13d

                     loc_31b4:
00000000000031b4         cmp        r10, r14                                    ; CODE XREF=wc+1702, wc+1796, wc+2503
00000000000031b7         jne        loc_3180

00000000000031b9         mov        rbx, rbp
00000000000031bc         mov        rbp, rdx
00000000000031bf         jmp        loc_3140
00000000000031c4         align      8

                     loc_31c8:
00000000000031c8         and        rbp, 0xfffffffffffffff8                     ; case 0, CODE XREF=wc+1594
00000000000031cc         add        rbp, 0x8
00000000000031d0         jmp        loc_31ae
00000000000031d2         align      8

                     loc_31d8:
00000000000031d8         add        rbp, 0x1                                    ; case 23, CODE XREF=wc+1594
00000000000031dc         jmp        loc_31ae
00000000000031de         align      32

                     loc_31e0:
00000000000031e0         mov        qword [rsp+0x40a8+var_4098], rdx            ; case 22, CODE XREF=wc+1582, wc+1594
00000000000031e5         mov        qword [rsp+0x40a8+var_40A0], r10
00000000000031ea         call       j___ctype_b_loc                             ; __ctype_b_loc
00000000000031ef         mov        rsi, qword [rax]
00000000000031f2         movzx      ecx, bl
00000000000031f5         mov        r10, qword [rsp+0x40a8+var_40A0]
00000000000031fa         mov        rdx, qword [rsp+0x40a8+var_4098]
00000000000031ff         movzx      eax, word [rsi+rcx*2]
0000000000003203         test       ah, 0x40
0000000000003206         je         loc_31b4

0000000000003208         add        rbp, 0x1
000000000000320c         test       ah, 0x20
000000000000320f         jne        loc_31ae

0000000000003211         movzx      edi, bl                                     ; argument "__c" for method j_btowc
0000000000003214         call       j_btowc                                     ; btowc
0000000000003219         movzx      ecx, byte [posixly_correct]                 ; posixly_correct
0000000000003220         mov        r10, qword [rsp+0x40a8+var_40A0]
0000000000003225         mov        rdx, qword [rsp+0x40a8+var_4098]
000000000000322a         test       cl, cl
000000000000322c         jne        loc_3523

0000000000003232         cmp        eax, 0xa0
0000000000003237         je         loc_31ae

000000000000323d         cmp        eax, 0x2007
0000000000003242         je         loc_31ae

0000000000003248         cmp        eax, 0x202f
000000000000324d         je         loc_31ae

0000000000003253         cmp        eax, 0x2060
0000000000003258         je         loc_31ae

000000000000325e         mov        r13d, 0x1
0000000000003264         jmp        loc_31b4

                     loc_3269:
0000000000003269         mov        esi, dword [rsp+0x40a8+var_4060]            ; argument "__fildes" for method j___fxstat, CODE XREF=wc+184
000000000000326d         lea        rdx, qword [rbx+8]                          ; argument "__stat_buf" for method j___fxstat
0000000000003271         mov        edi, 0x1                                    ; argument "__ver" for method j___fxstat
0000000000003276         call       j___fxstat                                  ; __fxstat
000000000000327b         mov        dword [rbx], eax
000000000000327d         jmp        loc_2c1e

                     loc_3282:
0000000000003282         mov        qword [rsp+0x40a8+var_4090], 0x0            ; CODE XREF=wc+192, wc+211, wc+224, wc+324, wc+333, wc+359

                     loc_328b:
000000000000328b         mov        ebp, dword [rsp+0x40a8+var_4060]            ; CODE XREF=wc+373
000000000000328f         mov        ecx, 0x2
0000000000003294         xor        edx, edx
0000000000003296         xor        esi, esi
0000000000003298         lea        r12, qword [rsp+0x40a8+var_4048]
000000000000329d         mov        edi, ebp
000000000000329f         call       fdadvise                                    ; fdadvise
00000000000032a4         mov        rbx, qword [rsp+0x40a8+var_4090]
00000000000032a9         jmp        loc_32bd
00000000000032ab         align      16

                     loc_32b0:
00000000000032b0         cmp        rax, 0xffffffffffffffff                     ; CODE XREF=wc+1903
00000000000032b4         je         loc_3593

00000000000032ba         add        rbx, rax

                     loc_32bd:
00000000000032bd         mov        edx, gettext_quote.part.1                   ; CODE XREF=wc+1865
00000000000032c2         mov        rsi, r12
00000000000032c5         mov        edi, ebp
00000000000032c7         call       safe_read                                   ; safe_read
00000000000032cc         test       rax, rax
00000000000032cf         jne        loc_32b0

00000000000032d1         mov        qword [rsp+0x40a8+var_4090], rbx

                     loc_32d6:
00000000000032d6         xor        r14d, r14d                                  ; CODE XREF=wc+263, wc+2768
00000000000032d9         xor        ebp, ebp
00000000000032db         xor        r12d, r12d
00000000000032de         mov        qword [rsp+0x40a8+var_40A8], 0x0
00000000000032e6         mov        r15d, 0x1
00000000000032ec         jmp        loc_2f5e
00000000000032f1         align      8

                     loc_32f8:
00000000000032f8         mov        rcx, qword [rsp+0x40a8+var_40A0]            ; CODE XREF=wc+586, wc+620
00000000000032fd         lea        rdi, qword [rsp+0x40a8+var_4054]
0000000000003302         mov        rdx, r15
0000000000003305         mov        rsi, r12
0000000000003308         mov        r13, qword [rsp+0x40a8+var_4050]
000000000000330d         call       rpl_mbrtowc                                 ; rpl_mbrtowc
0000000000003312         cmp        rax, 0xfffffffffffffffe
0000000000003316         je         loc_3440

000000000000331c         cmp        rax, 0xffffffffffffffff
0000000000003320         je         loc_3428

0000000000003326         mov        rdi, qword [rsp+0x40a8+var_40A0]            ; argument "__ps" for method j_mbsinit
000000000000332b         mov        qword [rsp+0x40a8+var_4098], rax
0000000000003330         call       j_mbsinit                                   ; mbsinit
0000000000003335         mov        rdx, qword [rsp+0x40a8+var_4098]
000000000000333a         test       eax, eax
000000000000333c         sete       cl
000000000000333f         test       rdx, rdx
0000000000003342         jne        loc_3400

0000000000003348         mov        dword [rsp+0x40a8+var_4054], 0x0
0000000000003350         xor        edi, edi
0000000000003352         xor        r13d, r13d
0000000000003355         mov        edx, 0x1

                     loc_335a:
000000000000335a         mov        byte [rsp+0x40a8+var_4059], cl              ; CODE XREF=wc+2791
000000000000335e         mov        qword [rsp+0x40a8+var_4098], rdx
0000000000003363         call       j_iswprint                                  ; iswprint
0000000000003368         test       eax, eax
000000000000336a         mov        rdx, qword [rsp+0x40a8+var_4098]
000000000000336f         movzx      ecx, byte [rsp+0x40a8+var_4059]
0000000000003374         je         loc_305f

000000000000337a         cmp        byte [print_linelength], 0x0                ; print_linelength
0000000000003381         jne        loc_34a5

                     loc_3387:
0000000000003387         mov        r13d, dword [rsp+0x40a8+var_4054]           ; CODE XREF=wc+2403
000000000000338c         mov        byte [rsp+0x40a8+var_4059], cl
0000000000003390         mov        qword [rsp+0x40a8+var_4098], rdx
0000000000003395         mov        edi, r13d                                   ; argument "__wc" for method j_iswspace
0000000000003398         call       j_iswspace                                  ; iswspace
000000000000339d         test       eax, eax
000000000000339f         mov        rdx, qword [rsp+0x40a8+var_4098]
00000000000033a4         movzx      ecx, byte [rsp+0x40a8+var_4059]
00000000000033a9         jne        loc_3058

00000000000033af         movzx      eax, byte [posixly_correct]                 ; posixly_correct
00000000000033b6         test       al, al
00000000000033b8         jne        loc_351b

00000000000033be         cmp        r13d, 0xa0
00000000000033c5         je         loc_3058

00000000000033cb         cmp        r13d, 0x2007
00000000000033d2         je         loc_3058

00000000000033d8         cmp        r13d, 0x202f
00000000000033df         je         loc_3058

00000000000033e5         cmp        r13d, 0x2060
00000000000033ec         jne        loc_3105

00000000000033f2         jmp        loc_3058
00000000000033f7         align      1024

                     loc_3400:
0000000000003400         mov        r13d, dword [rsp+0x40a8+var_4054]           ; CODE XREF=wc+2018
0000000000003405         lea        eax, dword [r13-9]
0000000000003409         cmp        eax, 0x17
000000000000340c         ja         loc_3644

0000000000003412         lea        rsi, qword [switch_table_7268]              ; switch_table_7268
0000000000003419         movsxd     rax, dword [rsi+rax*4]
000000000000341d         add        rax, rsi
0000000000003420         jmp        rax                                         ; switch statement using table at 0x7268, with 24 cases, 0x304d,0x3058,0x3085,0x30b5,0x30c5,0x3644
0000000000003422         align      8

                     loc_3428:
0000000000003428         add        r12, 0x1                                    ; CODE XREF=wc+1984
000000000000342c         sub        r15, 0x1
0000000000003430         mov        ecx, 0x1
0000000000003435         jmp        loc_3069
000000000000343a         align      64

                     loc_3440:
0000000000003440         mov        rax, r13                                    ; CODE XREF=wc+1974
0000000000003443         mov        r13, r15
0000000000003446         mov        r15, r12
0000000000003449         test       r13, r13
000000000000344c         mov        qword [rsp+0x40a8+var_4050], rax
0000000000003451         je         loc_347b

0000000000003453         cmp        r13, gettext_quote.part.1
000000000000345a         jne        loc_3466

000000000000345c         add        r15, 0x1
0000000000003460         mov        r13d, 0x3fff

                     loc_3466:
0000000000003466         mov        rdi, qword [rsp+0x40a8+var_4078]            ; CODE XREF=wc+2298
000000000000346b         mov        ecx, 0x4001
0000000000003470         mov        rdx, r13
0000000000003473         mov        rsi, r15
0000000000003476         call       j___memmove_chk                             ; __memmove_chk

                     loc_347b:
000000000000347b         mov        ecx, 0x1                                    ; CODE XREF=wc+2289
0000000000003480         jmp        loc_2d50
0000000000003485         align      8

                     loc_3488:
0000000000003488         lea        rsi, qword [aStandardInput]                 ; argument "msgid" for method j_dcgettext, "standard input", CODE XREF=wc+59
000000000000348f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003494         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003496         call       j_dcgettext                                 ; dcgettext
000000000000349b         mov        qword [rsp+0x40a8+var_4068], rax
00000000000034a0         jmp        loc_2ba1

                     loc_34a5:
00000000000034a5         mov        edi, r13d                                   ; argument "__c" for method j_wcwidth, CODE XREF=wc+2081
00000000000034a8         call       j_wcwidth                                   ; wcwidth
00000000000034ad         movsxd     rsi, eax
00000000000034b0         movzx      ecx, byte [rsp+0x40a8+var_4059]
00000000000034b5         mov        rdx, qword [rsp+0x40a8+var_4098]
00000000000034ba         add        rsi, r14
00000000000034bd         test       eax, eax
00000000000034bf         cmovg      r14, rsi
00000000000034c3         jmp        loc_3387

                     loc_34c8:
00000000000034c8         mov        r15d, 0x1                                   ; CODE XREF=wc+534

                     loc_34ce:
00000000000034ce         mov        rax, qword [rsp+0x40a8+var_4080]            ; CODE XREF=wc+2489
00000000000034d3         movzx      r12d, bl
00000000000034d7         cmp        rax, r14
00000000000034da         cmovae     r14, rax
00000000000034de         add        r12, qword [rsp+0x40a8+var_4088]
00000000000034e3         jmp        loc_2f5e

                     loc_34e8:
00000000000034e8         mov        rdx, qword [rsp+0x40a8+var_4068]            ; CODE XREF=wc+544
00000000000034ed         mov        esi, 0x3
00000000000034f2         xor        edi, edi
00000000000034f4         xor        r15d, r15d
00000000000034f7         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
00000000000034fc         mov        r12, rax
00000000000034ff         call       j___errno_location                          ; __errno_location
0000000000003504         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000003506         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x788d
000000000000350d         mov        rcx, r12
0000000000003510         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003512         xor        eax, eax
0000000000003514         call       j_error                                     ; error
0000000000003519         jmp        loc_34ce

                     loc_351b:
000000000000351b         movzx      ebx, al                                     ; CODE XREF=wc+2136
000000000000351e         jmp        loc_305f

                     loc_3523:
0000000000003523         movzx      r13d, cl                                    ; CODE XREF=wc+1740
0000000000003527         jmp        loc_31b4

                     loc_352c:
000000000000352c         mov        rax, rbx                                    ; CODE XREF=wc+1526
000000000000352f         mov        r15d, 0x1
0000000000003535         movzx      ebx, r13b
0000000000003539         mov        r13, rbp
000000000000353c         mov        rbp, rax

                     loc_353f:
000000000000353f         cmp        r13, rbp                                    ; CODE XREF=wc+2609
0000000000003542         mov        r14, rbp
0000000000003545         cmovae     r14, r13
0000000000003549         add        r12, rbx
000000000000354c         xor        ebp, ebp
000000000000354e         jmp        loc_2f5e

                     loc_3553:
0000000000003553         mov        rdx, qword [rsp+0x40a8+var_4068]            ; CODE XREF=wc+1536
0000000000003558         mov        rax, rbx
000000000000355b         mov        esi, 0x3
0000000000003560         xor        edi, edi
0000000000003562         movzx      ebx, r13b
0000000000003566         mov        r13, rbp
0000000000003569         mov        rbp, rax
000000000000356c         xor        r15d, r15d
000000000000356f         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000003574         mov        r14, rax
0000000000003577         call       j___errno_location                          ; __errno_location
000000000000357c         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
000000000000357e         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x788d
0000000000003585         mov        rcx, r14
0000000000003588         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000358a         xor        eax, eax
000000000000358c         call       j_error                                     ; error
0000000000003591         jmp        loc_353f

                     loc_3593:
0000000000003593         mov        rdx, qword [rsp+0x40a8+var_4068]            ; CODE XREF=wc+1876
0000000000003598         mov        esi, 0x3
000000000000359d         xor        edi, edi
000000000000359f         mov        qword [rsp+0x40a8+var_4090], rbx
00000000000035a4         xor        r14d, r14d
00000000000035a7         xor        ebp, ebp
00000000000035a9         xor        r12d, r12d
00000000000035ac         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
00000000000035b1         mov        rbx, rax
00000000000035b4         call       j___errno_location                          ; __errno_location
00000000000035b9         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
00000000000035bb         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x788d
00000000000035c2         mov        rcx, rbx
00000000000035c5         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000035c7         xor        eax, eax
00000000000035c9         call       j_error                                     ; error
00000000000035ce         mov        qword [rsp+0x40a8+var_40A8], 0x0
00000000000035d6         jmp        loc_2f5e

                     loc_35db:
00000000000035db         mov        edi, dword [rsp+0x40a8+var_4060]            ; argument "__fd" for method j_lseek, CODE XREF=wc+246
00000000000035df         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
00000000000035e4         xor        esi, esi                                    ; argument "__offset" for method j_lseek
00000000000035e6         call       j_lseek                                     ; lseek
00000000000035eb         xor        edx, edx
00000000000035ed         mov        rbp, rax
00000000000035f0         mov        rax, r12
00000000000035f3         div        r13
00000000000035f6         test       rdx, rdx
00000000000035f9         je         loc_3635

00000000000035fb         cmp        rbp, qword [rsp+0x40a8+var_4090]
0000000000003600         jbe        loc_362b

0000000000003602         xor        r14d, r14d
0000000000003605         mov        qword [rsp+0x40a8+var_4090], 0x0
000000000000360e         xor        ebp, ebp
0000000000003610         xor        r12d, r12d
0000000000003613         mov        qword [rsp+0x40a8+var_40A8], 0x0
000000000000361b         mov        r15d, 0x1
0000000000003621         jmp        loc_2f5e

                     loc_3626:
0000000000003626         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=wc+1135
                        ; endp

                     loc_362b:
000000000000362b         sub        qword [rsp+0x40a8+var_4090], rbp            ; CODE XREF=wc+2720
0000000000003630         jmp        loc_32d6

                     loc_3635:
0000000000003635         mov        rsi, rbp                                    ; CODE XREF=wc+2713
0000000000003638         not        rsi
000000000000363b         shr        rsi, 0x3f
000000000000363f         jmp        loc_2c74

                     loc_3644:
0000000000003644         mov        edi, r13d                                   ; case 22, CODE XREF=wc+2220, wc+2240
0000000000003647         jmp        loc_335a
000000000000364c         align      16                                          ; End of unwind block (FDE at 0x8578)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
0000000000003650         push       r13                                         ; Begin of unwind block (FDE at 0x85c8), CODE XREF=main+388, main+2463
0000000000003652         push       r12
0000000000003654         mov        edx, 0x5
0000000000003659         push       rbp
000000000000365a         push       rbx
000000000000365b         mov        ebp, edi
000000000000365d         sub        rsp, 0x88
0000000000003664         mov        rbx, qword [program_name]                   ; program_name
000000000000366b         mov        rax, qword [fs:0x28]
0000000000003674         mov        qword [rsp+0xa8+var_30], rax
0000000000003679         xor        eax, eax
000000000000367b         test       edi, edi
000000000000367d         je         loc_36ad

000000000000367f         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
0000000000003686         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003688         call       j_dcgettext                                 ; dcgettext
000000000000368d         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000003694         mov        rdx, rax
0000000000003697         mov        rcx, rbx
000000000000369a         mov        esi, 0x1
000000000000369f         xor        eax, eax
00000000000036a1         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_36a6:
00000000000036a6         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+750
00000000000036a8         call       j_exit                                      ; exit
                        ; endp

                     loc_36ad:
00000000000036ad         lea        rsi, qword [aUsageSOptionFi]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... [FILE]...\\n  or:  %s [OPTION]... --files0-from=F\\n", CODE XREF=usage+45
00000000000036b4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000036b6         call       j_dcgettext                                 ; dcgettext
00000000000036bb         mov        rcx, rbx
00000000000036be         mov        rdx, rbx
00000000000036c1         mov        rsi, rax
00000000000036c4         mov        edi, 0x1
00000000000036c9         xor        eax, eax
00000000000036cb         call       j___printf_chk                              ; __printf_chk
00000000000036d0         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000036d7         lea        rsi, qword [aPrintNewlineWo]                ; argument "msgid" for method j_dcgettext, "Print newline, word, and byte counts for each FILE, and a total line if\\nmore than one FILE is specified.  A word is a non-zero-length sequence of\\ncharacters delimited by white space.\\n"
00000000000036de         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000036e3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000036e5         call       j_dcgettext                                 ; dcgettext
00000000000036ea         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000036ed         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000036f0         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000036f5         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000036fc         lea        rsi, qword [aNwithNoFileOrW]                ; argument "msgid" for method j_dcgettext, "\\nWith no FILE, or when FILE is -, read standard input.\\n"
0000000000003703         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003708         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000370a         call       j_dcgettext                                 ; dcgettext
000000000000370f         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003712         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003715         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000371a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003721         lea        rsi, qword [aNtheOptionsBel]                ; argument "msgid" for method j_dcgettext, "\\nThe options below may be used to select which counts are printed, always in\\nthe following order: newline, word, character, byte, maximum line length.\\n  -c, --bytes            print the byte counts\\n  -m, --chars            print the character counts\\n  -l, …"
0000000000003728         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000372d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000372f         call       j_dcgettext                                 ; dcgettext
0000000000003734         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003737         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000373a         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000373f         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003746         lea        rsi, qword [aFiles0fromfRea]                ; argument "msgid" for method j_dcgettext, "      --files0-from=F    read input from the files specified by\\n                           NUL-terminated names in file F;\\n                           If F is - then read names from standard input\\n  -L, --max-line-length  print the maximum display width\\n  -…"
000000000000374d         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003752         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003754         call       j_dcgettext                                 ; dcgettext
0000000000003759         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
000000000000375c         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
000000000000375f         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003764         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
000000000000376b         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
0000000000003772         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003777         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003779         call       j_dcgettext                                 ; dcgettext
000000000000377e         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000003781         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000003784         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000003789         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003790         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
0000000000003797         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000379c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000379e         call       j_dcgettext                                 ; dcgettext
00000000000037a3         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000037a6         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000037a9         lea        rbx, qword [aStandardInput+15]              ; 0x6ff3
00000000000037b0         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000037b5         lea        rax, qword [aStandardInput+18]              ; 0x6ff6
00000000000037bc         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
00000000000037c3         mov        qword [rsp+0xa8+var_48], 0x0
00000000000037cc         mov        qword [rsp+0xa8+var_40], 0x0
00000000000037d5         mov        rdx, rsp
00000000000037d8         mov        qword [rsp+0xa8+var_A8], rax
00000000000037dc         lea        rax, qword [aTestInvocation]                ; "test invocation"
00000000000037e3         mov        qword [rsp+0xa8+var_78], rcx
00000000000037e8         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
00000000000037ef         mov        qword [rsp+0xa8+var_A0], rax
00000000000037f4         lea        rax, qword [aCoreutils]                     ; "coreutils"
00000000000037fb         mov        qword [rsp+0xa8+var_68], rcx
0000000000003800         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
0000000000003807         mov        qword [rsp+0xa8+var_98], rax
000000000000380c         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
0000000000003813         mov        qword [rsp+0xa8+var_58], rcx
0000000000003818         mov        qword [rsp+0xa8+var_90], rax
000000000000381d         lea        rax, qword [aSha224sum]                     ; "sha224sum"
0000000000003824         mov        qword [rsp+0xa8+var_88], rax
0000000000003829         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
0000000000003830         mov        qword [rsp+0xa8+var_80], rax
0000000000003835         mov        qword [rsp+0xa8+var_70], rax
000000000000383a         mov        qword [rsp+0xa8+var_60], rax
000000000000383f         mov        qword [rsp+0xa8+var_50], rax
0000000000003844         nop        dword [rax]

                     loc_3848:
0000000000003848         add        rdx, 0x10                                   ; CODE XREF=usage+533
000000000000384c         mov        rdi, qword [rdx]
000000000000384f         test       rdi, rdi
0000000000003852         je         loc_3867

0000000000003854         mov        ecx, 0x3
0000000000003859         mov        rsi, rbx
000000000000385c         rep  cmpsb byte [rsi], byte [rdi]
000000000000385e         seta       al
0000000000003861         sbb        al, 0x0
0000000000003863         test       al, al
0000000000003865         jne        loc_3848

                     loc_3867:
0000000000003867         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+514
000000000000386b         xor        edi, edi
000000000000386d         mov        edx, 0x5
0000000000003872         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
0000000000003879         test       r12, r12
000000000000387c         je         loc_3943

0000000000003882         call       j_dcgettext                                 ; dcgettext
0000000000003887         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
000000000000388e         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x706c
0000000000003895         mov        rsi, rax
0000000000003898         mov        edi, 0x1
000000000000389d         xor        eax, eax
000000000000389f         call       j___printf_chk                              ; __printf_chk
00000000000038a4         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
00000000000038a6         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
00000000000038ab         call       j_setlocale                                 ; setlocale
00000000000038b0         test       rax, rax
00000000000038b3         je         loc_38d1

00000000000038b5         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x707a
00000000000038bc         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
00000000000038c1         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
00000000000038c4         call       j_strncmp                                   ; strncmp
00000000000038c9         test       eax, eax
00000000000038cb         jne        loc_39d8

                     loc_38d1:
00000000000038d1         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+611, usage+941
00000000000038d8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000038da         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000038df         call       j_dcgettext                                 ; dcgettext
00000000000038e4         lea        rcx, qword [aStandardInput+15]              ; 0x6ff3
00000000000038eb         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000038f2         mov        rsi, rax
00000000000038f5         mov        edi, 0x1
00000000000038fa         xor        eax, eax
00000000000038fc         call       j___printf_chk                              ; __printf_chk
0000000000003901         cmp        r12, rbx
0000000000003904         lea        rcx, qword [aMulticallInvoc+10]             ; 0x7012
000000000000390b         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0x7e41
0000000000003912         cmove      rbx, rcx

                     loc_3916:
0000000000003916         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+892
000000000000391d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000391f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003924         call       j_dcgettext                                 ; dcgettext
0000000000003929         mov        rcx, rbx
000000000000392c         mov        rsi, rax
000000000000392f         mov        rdx, r12
0000000000003932         mov        edi, 0x1
0000000000003937         xor        eax, eax
0000000000003939         call       j___printf_chk                              ; __printf_chk
000000000000393e         jmp        loc_36a6

                     loc_3943:
0000000000003943         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+556
0000000000003948         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
000000000000394f         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x706c
0000000000003956         mov        rsi, rax
0000000000003959         mov        edi, 0x1
000000000000395e         xor        eax, eax
0000000000003960         call       j___printf_chk                              ; __printf_chk
0000000000003965         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000003967         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
000000000000396c         call       j_setlocale                                 ; setlocale
0000000000003971         test       rax, rax
0000000000003974         je         loc_398e

0000000000003976         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x707a
000000000000397d         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000003982         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
0000000000003985         call       j_strncmp                                   ; strncmp
000000000000398a         test       eax, eax
000000000000398c         jne        loc_39d1

                     loc_398e:
000000000000398e         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+804
0000000000003995         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000399a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000399c         lea        r12, qword [aStandardInput+15]              ; 0x6ff3
00000000000039a3         lea        rbx, qword [aMulticallInvoc+10]             ; 0x7012
00000000000039aa         call       j_dcgettext                                 ; dcgettext
00000000000039af         lea        rcx, qword [aStandardInput+15]              ; 0x6ff3
00000000000039b6         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000039bd         mov        rsi, rax
00000000000039c0         mov        edi, 0x1
00000000000039c5         xor        eax, eax
00000000000039c7         call       j___printf_chk                              ; __printf_chk
00000000000039cc         jmp        loc_3916

                     loc_39d1:
00000000000039d1         lea        r12, qword [aStandardInput+15]              ; 0x6ff3, CODE XREF=usage+828

                     loc_39d8:
00000000000039d8         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+635
00000000000039df         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
00000000000039e6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000039e8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000039ed         call       j_dcgettext                                 ; dcgettext
00000000000039f2         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
00000000000039f5         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000039f8         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000039fd         jmp        loc_38d1
0000000000003a02         align      16                                          ; End of unwind block (FDE at 0x85c8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     argv_iter_init_argv:
0000000000003a10         push       rbx                                         ; Begin of unwind block (FDE at 0x8654), CODE XREF=main+962, main+2448
0000000000003a11         mov        rbx, rdi
0000000000003a14         mov        edi, 0x30
0000000000003a19         call       sub_1dc8                                    ; sub_1dc8
0000000000003a1e         test       rax, rax
0000000000003a21         je         loc_3a32

0000000000003a23         mov        qword [rax], 0x0
0000000000003a2a         mov        qword [rax+0x20], rbx
0000000000003a2e         mov        qword [rax+0x28], rbx

                     loc_3a32:
0000000000003a32         pop        rbx                                         ; CODE XREF=argv_iter_init_argv+17
0000000000003a33         ret
                        ; endp
0000000000003a34         align      64                                          ; End of unwind block (FDE at 0x8654)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     argv_iter_init_stream:
0000000000003a40         push       rbx                                         ; Begin of unwind block (FDE at 0x8670), CODE XREF=main+731
0000000000003a41         mov        rbx, rdi
0000000000003a44         mov        edi, 0x30
0000000000003a49         call       sub_1dc8                                    ; sub_1dc8
0000000000003a4e         test       rax, rax
0000000000003a51         je         loc_3a76

0000000000003a53         mov        qword [rax], rbx
0000000000003a56         mov        qword [rax+0x10], 0x0
0000000000003a5e         mov        qword [rax+0x18], 0x0
0000000000003a66         mov        qword [rax+8], 0x0
0000000000003a6e         mov        qword [rax+0x20], 0x0

                     loc_3a76:
0000000000003a76         pop        rbx                                         ; CODE XREF=argv_iter_init_stream+17
0000000000003a77         ret
                        ; endp
0000000000003a78         align      128                                         ; End of unwind block (FDE at 0x8670)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     argv_iter:
0000000000003a80         mov        rcx, qword [rdi]                            ; Begin of unwind block (FDE at 0x868c), CODE XREF=main+1047
0000000000003a83         test       rcx, rcx
0000000000003a86         je         loc_3ac0

0000000000003a88         push       rbp
0000000000003a89         push       rbx
0000000000003a8a         mov        rbp, rsi
0000000000003a8d         mov        rbx, rdi
0000000000003a90         lea        rsi, qword [rdi+0x18]                       ; argument "__n" for method j_getdelim
0000000000003a94         lea        rdi, qword [rdi+0x10]                       ; argument "__lineptr" for method j_getdelim
0000000000003a98         sub        rsp, 0x8
0000000000003a9c         xor        edx, edx                                    ; argument "__delimiter" for method j_getdelim
0000000000003a9e         call       j_getdelim                                  ; getdelim
0000000000003aa3         test       rax, rax
0000000000003aa6         js         loc_3af0

0000000000003aa8         mov        dword [rbp], 0x1
0000000000003aaf         add        qword [rbx+8], 0x1
0000000000003ab4         mov        rax, qword [rbx+0x10]

                     loc_3ab8:
0000000000003ab8         add        rsp, 0x8                                    ; CODE XREF=argv_iter+136
0000000000003abc         pop        rbx
0000000000003abd         pop        rbp
0000000000003abe         ret
                        ; endp
0000000000003abf         align      64

                     loc_3ac0:
0000000000003ac0         mov        rdx, qword [rdi+0x28]                       ; CODE XREF=argv_iter+6
0000000000003ac4         mov        rax, qword [rdx]
0000000000003ac7         test       rax, rax
0000000000003aca         je         loc_3ae0

0000000000003acc         add        rdx, 0x8
0000000000003ad0         mov        dword [rsi], 0x1
0000000000003ad6         mov        qword [rdi+0x28], rdx
0000000000003ada         ret
                        ; endp
0000000000003adb         align      32

                     loc_3ae0:
0000000000003ae0         mov        dword [rsi], 0x2                            ; CODE XREF=argv_iter+74
0000000000003ae6         ret
                        ; endp
0000000000003ae7         align      16

                     loc_3af0:
0000000000003af0         mov        rdi, qword [rbx]                            ; argument "__stream" for method j_feof, CODE XREF=argv_iter+38
0000000000003af3         call       j_feof                                      ; feof
0000000000003af8         cmp        eax, 0x1
0000000000003afb         sbb        eax, eax
0000000000003afd         and        eax, 0x2
0000000000003b00         add        eax, 0x2
0000000000003b03         mov        dword [rbp], eax
0000000000003b06         xor        eax, eax
0000000000003b08         jmp        loc_3ab8
0000000000003b0a         align      16                                          ; End of unwind block (FDE at 0x868c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     argv_iter_n_args:
0000000000003b10         cmp        qword [rdi], 0x0                            ; Begin of unwind block (FDE at 0x86c0), CODE XREF=main+1359, main+1655, main+1683
0000000000003b14         je         loc_3b20

0000000000003b16         mov        rax, qword [rdi+8]
0000000000003b1a         ret
                        ; endp
0000000000003b1b         align      32

                     loc_3b20:
0000000000003b20         mov        rax, qword [rdi+0x28]                       ; CODE XREF=argv_iter_n_args+4
0000000000003b24         sub        rax, qword [rdi+0x20]
0000000000003b28         sar        rax, 0x3
0000000000003b2c         ret
                        ; endp
0000000000003b2d         align      16                                          ; End of unwind block (FDE at 0x86c0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     argv_iter_free:
0000000000003b30         push       rbx                                         ; Begin of unwind block (FDE at 0x86d4), CODE XREF=main+1759
0000000000003b31         cmp        qword [rdi], 0x0
0000000000003b35         mov        rbx, rdi
0000000000003b38         je         loc_3b43

0000000000003b3a         mov        rdi, qword [rdi+0x10]
0000000000003b3e         call       sub_1dc0                                    ; sub_1dc0

                     loc_3b43:
0000000000003b43         mov        rdi, rbx                                    ; CODE XREF=argv_iter_free+8
0000000000003b46         pop        rbx
0000000000003b47         jmp        sub_1dc0                                    ; sub_1dc0
                        ; endp
0000000000003b4c         align      16                                          ; End of unwind block (FDE at 0x86d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
0000000000003b50         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0x86f4), file_name
0000000000003b57         ret
                        ; endp
0000000000003b58         align      32                                          ; End of unwind block (FDE at 0x86f4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
0000000000003b60         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x8708), ignore_EPIPE
0000000000003b67         ret
                        ; endp
0000000000003b68         align      16                                          ; End of unwind block (FDE at 0x8708)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
0000000000003b70         push       rbp                                         ; Begin of unwind block (FDE at 0x871c), DATA XREF=main+104
0000000000003b71         push       rbx
0000000000003b72         sub        rsp, 0x8
0000000000003b76         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000003b7d         call       close_stream                                ; close_stream
0000000000003b82         test       eax, eax
0000000000003b84         je         loc_3b9c

0000000000003b86         call       j___errno_location                          ; __errno_location
0000000000003b8b         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
0000000000003b92         mov        rbx, rax
0000000000003b95         je         loc_3bb3

0000000000003b97         cmp        dword [rax], 0x20
0000000000003b9a         jne        loc_3bb3

                     loc_3b9c:
0000000000003b9c         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
0000000000003ba3         call       close_stream                                ; close_stream
0000000000003ba8         test       eax, eax
0000000000003baa         jne        loc_3bf2

0000000000003bac         add        rsp, 0x8
0000000000003bb0         pop        rbx
0000000000003bb1         pop        rbp
0000000000003bb2         ret
                        ; endp

                     loc_3bb3:
0000000000003bb3         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
0000000000003bba         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003bbc         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003bc1         call       j_dcgettext                                 ; dcgettext
0000000000003bc6         mov        rdi, qword [file_name]                      ; file_name
0000000000003bcd         mov        rbp, rax
0000000000003bd0         test       rdi, rdi
0000000000003bd3         je         loc_3bfd

0000000000003bd5         call       quotearg_colon                              ; quotearg_colon
0000000000003bda         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
0000000000003bdc         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000003be3         mov        rcx, rax
0000000000003be6         mov        r8, rbp
0000000000003be9         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003beb         xor        eax, eax
0000000000003bed         call       j_error                                     ; error

                     loc_3bf2:
0000000000003bf2         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
0000000000003bf8         call       j__exit                                     ; _exit
                        ; endp

                     loc_3bfd:
0000000000003bfd         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
0000000000003bff         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x788d
0000000000003c06         mov        rcx, rax
0000000000003c09         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000003c0b         xor        eax, eax
0000000000003c0d         call       j_error                                     ; error
0000000000003c12         jmp        loc_3bf2
0000000000003c14         align      32                                          ; End of unwind block (FDE at 0x871c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fdadvise:
0000000000003c20         jmp        j_posix_fadvise                             ; posix_fadvise, Begin of unwind block (FDE at 0x874c), CODE XREF=wc+397, wc+678, wc+1855
                        ; endp
0000000000003c25         align      16                                          ; End of unwind block (FDE at 0x874c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     fadvise:
0000000000003c30         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x8760)
0000000000003c33         je         loc_3c50

0000000000003c35         push       rbx
0000000000003c36         mov        ebx, esi
0000000000003c38         call       j_fileno                                    ; fileno
0000000000003c3d         mov        ecx, ebx                                    ; argument "__advise" for method j_posix_fadvise
0000000000003c3f         xor        edx, edx                                    ; argument "__len" for method j_posix_fadvise
0000000000003c41         xor        esi, esi                                    ; argument "__offset" for method j_posix_fadvise
0000000000003c43         pop        rbx
0000000000003c44         mov        edi, eax                                    ; argument "__fd" for method j_posix_fadvise
0000000000003c46         jmp        j_posix_fadvise                             ; posix_fadvise
                        ; endp
0000000000003c4b         align      16

                     loc_3c50:
0000000000003c50         ret                                                    ; CODE XREF=fadvise+3
                        ; endp
0000000000003c52         align      32                                          ; End of unwind block (FDE at 0x8760)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     umaxtostr:
0000000000003c60         lea        rcx, qword [rsi+0x14]                       ; Begin of unwind block (FDE at 0x877c), CODE XREF=write_counts+262, write_counts+310, write_counts+358, write_counts+406, write_counts+451
0000000000003c64         mov        byte [rsi+0x14], 0x0
0000000000003c68         movabs     rsi, 0xcccccccccccccccd
0000000000003c72         nop        word [rax+rax]

                     loc_3c78:
0000000000003c78         mov        rax, rdi                                    ; CODE XREF=umaxtostr+60
0000000000003c7b         sub        rcx, 0x1
0000000000003c7f         mul        rsi
0000000000003c82         shr        rdx, 0x3
0000000000003c86         lea        rax, qword [rdx+rdx*4]
0000000000003c8a         add        rax, rax
0000000000003c8d         sub        rdi, rax
0000000000003c90         add        edi, 0x30
0000000000003c93         test       rdx, rdx
0000000000003c96         mov        byte [rcx], dil
0000000000003c99         mov        rdi, rdx
0000000000003c9c         jne        loc_3c78

0000000000003c9e         mov        rax, rcx
0000000000003ca1         ret
                        ; endp
0000000000003ca2         align      16                                          ; End of unwind block (FDE at 0x877c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     mb_width_aux:
0000000000003cb0         push       rbx                                         ; Begin of unwind block (FDE at 0x8794)
0000000000003cb1         mov        ebx, edi
0000000000003cb3         call       j_wcwidth                                   ; wcwidth
0000000000003cb8         test       eax, eax
0000000000003cba         js         loc_3cc0

0000000000003cbc         pop        rbx
0000000000003cbd         ret
                        ; endp
0000000000003cbe         align      64

                     loc_3cc0:
0000000000003cc0         mov        edi, ebx                                    ; argument "__wc" for method j_iswcntrl, CODE XREF=mb_width_aux+10
0000000000003cc2         call       j_iswcntrl                                  ; iswcntrl
0000000000003cc7         test       eax, eax
0000000000003cc9         sete       al
0000000000003ccc         movzx      eax, al
0000000000003ccf         pop        rbx
0000000000003cd0         ret
                        ; endp
0000000000003cd1         align      32                                          ; End of unwind block (FDE at 0x8794)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     mb_copy:
0000000000003ce0         push       rbp                                         ; Begin of unwind block (FDE at 0x87b4)
0000000000003ce1         push       rbx
0000000000003ce2         mov        rbx, rsi
0000000000003ce5         lea        rax, qword [rbx+0x18]
0000000000003ce9         mov        rbp, rdi
0000000000003cec         sub        rsp, 0x8
0000000000003cf0         mov        rsi, qword [rsi]
0000000000003cf3         mov        rdx, qword [rbx+8]
0000000000003cf7         cmp        rsi, rax
0000000000003cfa         je         loc_3d20

0000000000003cfc         mov        qword [rdi], rsi

                     loc_3cff:
0000000000003cff         movzx      eax, byte [rbx+0x10]                        ; CODE XREF=mb_copy+84
0000000000003d03         mov        qword [rbp+8], rdx
0000000000003d07         test       al, al
0000000000003d09         mov        byte [rbp+0x10], al
0000000000003d0c         je         loc_3d14

0000000000003d0e         mov        eax, dword [rbx+0x14]
0000000000003d11         mov        dword [rbp+0x14], eax

                     loc_3d14:
0000000000003d14         add        rsp, 0x8                                    ; CODE XREF=mb_copy+44
0000000000003d18         pop        rbx
0000000000003d19         pop        rbp
0000000000003d1a         ret
                        ; endp
0000000000003d1b         align      32

                     loc_3d20:
0000000000003d20         lea        rcx, qword [rdi+0x18]                       ; CODE XREF=mb_copy+26
0000000000003d24         mov        rdi, rcx                                    ; argument "__dest" for method j_memcpy
0000000000003d27         call       j_memcpy                                    ; memcpy
0000000000003d2c         mov        rdx, qword [rbx+8]
0000000000003d30         mov        qword [rbp], rax
0000000000003d34         jmp        loc_3cff
0000000000003d36         align      64                                          ; End of unwind block (FDE at 0x87b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     is_basic:
0000000000003d40         mov        eax, edi                                    ; Begin of unwind block (FDE at 0x87e0)
0000000000003d42         lea        rdx, qword [is_basic_table]                 ; is_basic_table
0000000000003d49         mov        ecx, edi
0000000000003d4b         shr        al, 0x5
0000000000003d4e         and        ecx, 0x1f
0000000000003d51         and        eax, 0x7
0000000000003d54         mov        eax, dword [rdx+rax*4]
0000000000003d57         shr        eax, cl
0000000000003d59         and        eax, 0x1
0000000000003d5c         ret
                        ; endp
0000000000003d5d         align      32                                          ; End of unwind block (FDE at 0x87e0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_20: int32_t, -32
        ;    var_68: int64_t, -104
        ;    var_88: int8_t, -136
        ;    var_90: int64_t, -144


                     physmem_total:
0000000000003d60         sub        rsp, 0x98                                   ; Begin of unwind block (FDE at 0x87f4), CODE XREF=physmem_available+208
0000000000003d67         mov        edi, 0x55                                   ; argument "__name" for method j_sysconf
0000000000003d6c         mov        rax, qword [fs:0x28]
0000000000003d75         mov        qword [rsp+0x98+var_10], rax
0000000000003d7d         xor        eax, eax
0000000000003d7f         call       j_sysconf                                   ; sysconf
0000000000003d84         pxor       xmm0, xmm0
0000000000003d88         mov        edi, 0x1e                                   ; argument "__name" for method j_sysconf
0000000000003d8d         cvtsi2sd   xmm0, rax
0000000000003d92         movsd      qword [rsp+0x98+var_90], xmm0
0000000000003d98         call       j_sysconf                                   ; sysconf
0000000000003d9d         pxor       xmm2, xmm2
0000000000003da1         movsd      xmm0, qword [rsp+0x98+var_90]
0000000000003da7         ucomisd    xmm0, xmm2
0000000000003dab         jb         loc_3de0

0000000000003dad         pxor       xmm1, xmm1
0000000000003db1         cvtsi2sd   xmm1, rax
0000000000003db6         ucomisd    xmm1, xmm2
0000000000003dba         jb         loc_3de0

                     loc_3dbc:
0000000000003dbc         mulsd      xmm0, xmm1                                  ; CODE XREF=physmem_total+182

                     loc_3dc0:
0000000000003dc0         mov        rax, qword [rsp+0x98+var_10]                ; CODE XREF=physmem_total+148
0000000000003dc8         xor        rax, qword [fs:0x28]
0000000000003dd1         jne        loc_3e3b

0000000000003dd3         add        rsp, 0x98
0000000000003dda         ret
                        ; endp
0000000000003ddb         align      32

                     loc_3de0:
0000000000003de0         lea        rdi, qword [rsp+0x98+var_88]                ; argument "__info" for method j_sysinfo, CODE XREF=physmem_total+75, physmem_total+90
0000000000003de5         call       j_sysinfo                                   ; sysinfo
0000000000003dea         test       eax, eax
0000000000003dec         movsd      xmm0, qword [double_78c0]                   ; double_78c0
0000000000003df4         jne        loc_3dc0

0000000000003df6         mov        rax, qword [rsp+0x98+var_68]
0000000000003dfb         test       rax, rax
0000000000003dfe         js         loc_3e20

0000000000003e00         pxor       xmm0, xmm0
0000000000003e04         cvtsi2sd   xmm0, rax

                     loc_3e09:
0000000000003e09         mov        eax, dword [rsp+0x98+var_20]                ; CODE XREF=physmem_total+217
0000000000003e0d         pxor       xmm1, xmm1
0000000000003e11         cvtsi2sd   xmm1, rax
0000000000003e16         jmp        loc_3dbc
0000000000003e18         align      32

                     loc_3e20:
0000000000003e20         mov        rdx, rax                                    ; CODE XREF=physmem_total+158
0000000000003e23         pxor       xmm0, xmm0
0000000000003e27         shr        rdx, 0x1
0000000000003e2a         and        eax, 0x1
0000000000003e2d         or         rdx, rax
0000000000003e30         cvtsi2sd   xmm0, rdx
0000000000003e35         addsd      xmm0, xmm0
0000000000003e39         jmp        loc_3e09

                     loc_3e3b:
0000000000003e3b         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=physmem_total+113
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_20: int32_t, -32
        ;    var_50: int64_t, -80
        ;    var_60: int64_t, -96
        ;    var_88: int8_t, -136
        ;    var_90: int64_t, -144


                     physmem_available:
0000000000003e40         sub        rsp, 0x98                                   ; End of unwind block (FDE at 0x87f4), Begin of unwind block (FDE at 0x8810), CODE XREF=main+2316, main+2353
0000000000003e47         mov        edi, 0x56                                   ; argument "__name" for method j_sysconf
0000000000003e4c         mov        rax, qword [fs:0x28]
0000000000003e55         mov        qword [rsp+0x98+var_10], rax
0000000000003e5d         xor        eax, eax
0000000000003e5f         call       j_sysconf                                   ; sysconf
0000000000003e64         pxor       xmm0, xmm0
0000000000003e68         mov        edi, 0x1e                                   ; argument "__name" for method j_sysconf
0000000000003e6d         cvtsi2sd   xmm0, rax
0000000000003e72         movsd      qword [rsp+0x98+var_90], xmm0
0000000000003e78         call       j_sysconf                                   ; sysconf
0000000000003e7d         pxor       xmm2, xmm2
0000000000003e81         movsd      xmm0, qword [rsp+0x98+var_90]
0000000000003e87         ucomisd    xmm0, xmm2
0000000000003e8b         jb         loc_3ec0

0000000000003e8d         pxor       xmm1, xmm1
0000000000003e91         cvtsi2sd   xmm1, rax
0000000000003e96         ucomisd    xmm1, xmm2
0000000000003e9a         jb         loc_3ec0

                     loc_3e9c:
0000000000003e9c         mulsd      xmm0, xmm1                                  ; CODE XREF=physmem_available+197

                     loc_3ea0:
0000000000003ea0         mov        rax, qword [rsp+0x98+var_10]                ; CODE XREF=physmem_available+221
0000000000003ea8         xor        rax, qword [fs:0x28]
0000000000003eb1         jne        loc_3f5b

0000000000003eb7         add        rsp, 0x98
0000000000003ebe         ret
                        ; endp
0000000000003ebf         align      64

                     loc_3ec0:
0000000000003ec0         lea        rdi, qword [rsp+0x98+var_88]                ; argument "__info" for method j_sysinfo, CODE XREF=physmem_available+75, physmem_available+90
0000000000003ec5         call       j_sysinfo                                   ; sysinfo
0000000000003eca         test       eax, eax
0000000000003ecc         jne        loc_3f10

0000000000003ece         mov        rax, qword [rsp+0x98+var_60]
0000000000003ed3         test       rax, rax
0000000000003ed6         js         loc_3f40

0000000000003ed8         pxor       xmm0, xmm0
0000000000003edc         cvtsi2sd   xmm0, rax

                     loc_3ee1:
0000000000003ee1         mov        rax, qword [rsp+0x98+var_50]                ; CODE XREF=physmem_available+281
0000000000003ee6         test       rax, rax
0000000000003ee9         js         loc_3f20

0000000000003eeb         pxor       xmm1, xmm1
0000000000003eef         cvtsi2sd   xmm1, rax

                     loc_3ef4:
0000000000003ef4         mov        eax, dword [rsp+0x98+var_20]                ; CODE XREF=physmem_available+249
0000000000003ef8         addsd      xmm0, xmm1
0000000000003efc         pxor       xmm1, xmm1
0000000000003f00         cvtsi2sd   xmm1, rax
0000000000003f05         jmp        loc_3e9c
0000000000003f07         align      16

                     loc_3f10:
0000000000003f10         call       physmem_total                               ; physmem_total, CODE XREF=physmem_available+140
0000000000003f15         mulsd      xmm0, qword [double_78c8]                   ; double_78c8
0000000000003f1d         jmp        loc_3ea0
0000000000003f1f         align      32

                     loc_3f20:
0000000000003f20         mov        rdx, rax                                    ; CODE XREF=physmem_available+169
0000000000003f23         pxor       xmm1, xmm1
0000000000003f27         shr        rdx, 0x1
0000000000003f2a         and        eax, 0x1
0000000000003f2d         or         rdx, rax
0000000000003f30         cvtsi2sd   xmm1, rdx
0000000000003f35         addsd      xmm1, xmm1
0000000000003f39         jmp        loc_3ef4
0000000000003f3b         align      64

                     loc_3f40:
0000000000003f40         mov        rdx, rax                                    ; CODE XREF=physmem_available+150
0000000000003f43         pxor       xmm0, xmm0
0000000000003f47         shr        rdx, 0x1
0000000000003f4a         and        eax, 0x1
0000000000003f4d         or         rdx, rax
0000000000003f50         cvtsi2sd   xmm0, rdx
0000000000003f55         addsd      xmm0, xmm0
0000000000003f59         jmp        loc_3ee1

                     loc_3f5b:
0000000000003f5b         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=physmem_available+113
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000003f60         test       rdi, rdi                                    ; End of unwind block (FDE at 0x8810), Begin of unwind block (FDE at 0x882c), CODE XREF=main+51
0000000000003f63         push       rbx
0000000000003f64         je         loc_3fdd

0000000000003f66         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
0000000000003f6b         mov        rbx, rdi
0000000000003f6e         call       j_strrchr                                   ; strrchr
0000000000003f73         test       rax, rax
0000000000003f76         je         loc_3fcd

0000000000003f78         lea        r8, qword [rax+1]
0000000000003f7c         mov        rdx, r8
0000000000003f7f         sub        rdx, rbx
0000000000003f82         cmp        rdx, 0x6
0000000000003f86         jle        loc_3fcd

0000000000003f88         lea        rsi, qword [rax-6]
0000000000003f8c         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000003f93         mov        ecx, 0x7
0000000000003f98         rep  cmpsb byte [rsi], byte [rdi]
0000000000003f9a         seta       dl
0000000000003f9d         sbb        dl, 0x0
0000000000003fa0         test       dl, dl
0000000000003fa2         jne        loc_3fcd

0000000000003fa4         lea        rdi, qword [aLibs+8]                        ; 0x7910
0000000000003fab         mov        ecx, 0x3
0000000000003fb0         mov        rsi, r8
0000000000003fb3         mov        rbx, r8
0000000000003fb6         rep  cmpsb byte [rsi], byte [rdi]
0000000000003fb8         seta       dl
0000000000003fbb         sbb        dl, 0x0
0000000000003fbe         test       dl, dl
0000000000003fc0         jne        loc_3fcd

0000000000003fc2         lea        rbx, qword [rax+4]
0000000000003fc6         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_3fcd:
0000000000003fcd         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
0000000000003fd4         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
0000000000003fdb         pop        rbx
0000000000003fdc         ret
                        ; endp

                     loc_3fdd:
0000000000003fdd         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
0000000000003fe4         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
0000000000003feb         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
0000000000003ff0         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
0000000000003ff5         call       j_fwrite                                    ; fwrite
0000000000003ffa         call       j_abort                                     ; abort
                        ; endp
0000000000003fff         align      16384                                       ; End of unwind block (FDE at 0x882c), DATA XREF=wc+2304


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
0000000000004000         push       rbp                                         ; Begin of unwind block (FDE at 0x884c), CODE XREF=sub_4d00+1365, sub_4d00+1387, DATA XREF=wc+505, wc+772, wc+1513, wc+1885, wc+2291, sub_45d0+88
0000000000004001         push       rbx                                         ; DATA XREF=wc+2315
0000000000004002         mov        rbp, rdi
0000000000004005         mov        ebx, esi
0000000000004007         sub        rsp, 0x8
000000000000400b         call       locale_charset                              ; locale_charset
0000000000004010         movzx      edx, byte [rax]
0000000000004013         and        edx, 0xffffffdf
0000000000004016         cmp        dl, 0x55
0000000000004019         je         loc_4090

000000000000401b         cmp        dl, 0x47
000000000000401e         je         loc_4040

                     loc_4020:
0000000000004020         lea        rax, qword [aLibs+27]                       ; 0x7923, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
0000000000004027         lea        rdx, qword [aLibs+29]                       ; 0x7925
000000000000402e         cmp        ebx, 0x9
0000000000004031         cmovne     rax, rdx
0000000000004035         add        rsp, 0x8
0000000000004039         pop        rbx
000000000000403a         pop        rbp
000000000000403b         ret
                        ; endp
000000000000403c         align      64

                     loc_4040:
0000000000004040         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
0000000000004044         and        edx, 0xffffffdf
0000000000004047         cmp        dl, 0x42
000000000000404a         jne        loc_4020

000000000000404c         cmp        byte [rax+2], 0x31
0000000000004050         jne        loc_4020

0000000000004052         cmp        byte [rax+3], 0x38
0000000000004056         jne        loc_4020

0000000000004058         cmp        byte [rax+4], 0x30
000000000000405c         jne        loc_4020

000000000000405e         cmp        byte [rax+5], 0x33
0000000000004062         jne        loc_4020

0000000000004064         cmp        byte [rax+6], 0x30
0000000000004068         jne        loc_4020

000000000000406a         cmp        byte [rax+7], 0x0
000000000000406e         jne        loc_4020

0000000000004070         cmp        byte [rbp], 0x60
0000000000004074         lea        rax, qword [aLibs+20]                       ; 0x791c
000000000000407b         lea        rdx, qword [aLibs+24]                       ; 0x7920
0000000000004082         cmovne     rax, rdx
0000000000004086         add        rsp, 0x8
000000000000408a         pop        rbx
000000000000408b         pop        rbp
000000000000408c         ret
                        ; endp
000000000000408d         align      16

                     loc_4090:
0000000000004090         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
0000000000004094         and        edx, 0xffffffdf
0000000000004097         cmp        dl, 0x54
000000000000409a         jne        loc_4020

000000000000409c         movzx      edx, byte [rax+2]
00000000000040a0         and        edx, 0xffffffdf
00000000000040a3         cmp        dl, 0x46
00000000000040a6         jne        loc_4020

00000000000040ac         cmp        byte [rax+3], 0x2d
00000000000040b0         jne        loc_4020

00000000000040b6         cmp        byte [rax+4], 0x38
00000000000040ba         jne        loc_4020

00000000000040c0         cmp        byte [rax+5], 0x0
00000000000040c4         jne        loc_4020

00000000000040ca         cmp        byte [rbp], 0x60
00000000000040ce         lea        rax, qword [aLibs+12]                       ; 0x7914
00000000000040d5         lea        rdx, qword [aLibs+16]                       ; 0x7918
00000000000040dc         cmovne     rax, rdx
00000000000040e0         add        rsp, 0x8
00000000000040e4         pop        rbx
00000000000040e5         pop        rbp
00000000000040e6         ret
                        ; endp
00000000000040e7         align      16                                          ; End of unwind block (FDE at 0x884c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
00000000000040f0         push       r15                                         ; Begin of unwind block (FDE at 0x8890), CODE XREF=sub_4830+1165, sub_4d00+1467, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
00000000000040f2         push       r14
00000000000040f4         mov        r15d, r8d
00000000000040f7         push       r13
00000000000040f9         push       r12
00000000000040fb         mov        r14, rdi
00000000000040fe         push       rbp
00000000000040ff         push       rbx
0000000000004100         mov        ebx, r9d
0000000000004103         mov        r13, rsi
0000000000004106         mov        rbp, rcx
0000000000004109         and        ebx, 0x2
000000000000410c         sub        rsp, 0xb8
0000000000004113         mov        rax, qword [rsp+0xe8+arg_0]
000000000000411b         mov        qword [rsp+0xe8+var_D8], rdx
0000000000004120         mov        dword [rsp+0xe8+var_E0], r8d
0000000000004125         mov        dword [rsp+0xe8+var_70], r9d
000000000000412a         mov        qword [rsp+0xe8+var_C8], rax
000000000000412f         mov        rax, qword [rsp+0xe8+arg_8]
0000000000004137         mov        qword [rsp+0xe8+var_80], rax
000000000000413c         mov        rax, qword [rsp+0xe8+arg_10]
0000000000004144         mov        qword [rsp+0xe8+var_88], rax
0000000000004149         mov        rax, qword [fs:0x28]
0000000000004152         mov        qword [rsp+0xe8+var_40], rax
000000000000415a         xor        eax, eax
000000000000415c         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000004161         cmp        r15d, 0xa
0000000000004165         mov        qword [rsp+0xe8+var_90], rax
000000000000416a         ja         loc_531f

0000000000004170         lea        rcx, qword [switch_table_7980]              ; switch_table_7980
0000000000004177         mov        edx, r15d
000000000000417a         movsxd     rax, dword [rcx+rdx*4]
000000000000417e         add        rax, rcx
0000000000004181         jmp        rax                                         ; switch statement using table at 0x7980, with 11 cases, 0x4183,0x4d54,0x4db0,0x4e05,0x4e4a,0x4e84,0x4f2a,0x4f64,0x5158

                     loc_4183:
0000000000004183         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_4d00+86
0000000000004188         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000418d         xor        r12d, r12d
0000000000004190         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004199         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000419e         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_41a3:
00000000000041a3         lea        rax, qword [aLibs+29]                       ; 0x7925, CODE XREF=sub_4d00+644
00000000000041aa         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000041b3         xor        r15d, r15d
00000000000041b6         mov        dword [rsp+0xe8+var_E0], 0x2
00000000000041be         mov        qword [rsp+0xe8+var_A0], rax

                     loc_41c3:
00000000000041c3         xor        r11d, r11d                                  ; CODE XREF=sub_4830+180, sub_4d00+168, sub_4d00+256, sub_4d00+325, sub_4d00+383, sub_4d00+549, sub_4d00+607, sub_4d00+1176, sub_4d00+1253
00000000000041c6         mov        rax, rbp
00000000000041c9         mov        r8d, r12d
00000000000041cc         mov        rbp, r11
00000000000041cf         mov        r11, rax
00000000000041d2         nop        word [rax+rax]

                     loc_41d8:
00000000000041d8         cmp        r11, rbp                                    ; CODE XREF=sub_42e0+194
00000000000041db         setne      r12b
00000000000041df         cmp        r11, 0xffffffffffffffff
00000000000041e3         jne        loc_41f2

00000000000041e5         mov        rax, qword [rsp+0xe8+var_D8]
00000000000041ea         cmp        byte [rax+rbp], 0x0
00000000000041ee         setne      r12b

                     loc_41f2:
00000000000041f2         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
00000000000041f5         je         loc_4850

00000000000041fb         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000004200         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000004205         lea        r9, qword [rdi+rbp]
0000000000004209         setne      al
000000000000420c         and        al, byte [rsp+0xe8+var_DB]
0000000000004210         mov        r10d, eax
0000000000004213         je         loc_42c0

0000000000004219         mov        rax, qword [rsp+0xe8+var_D0]
000000000000421e         test       rax, rax
0000000000004221         je         loc_4650

0000000000004227         cmp        r11, 0xffffffffffffffff
000000000000422b         lea        rbx, qword [rbp+rax]
0000000000004230         jne        loc_4260

0000000000004232         cmp        rax, 0x1
0000000000004236         jbe        loc_4260

0000000000004238         mov        byte [rsp+0xe8+var_B0], r8b
000000000000423d         mov        byte [rsp+0xe8+var_B8], r10b
0000000000004242         mov        qword [rsp+0xe8+var_C0], r9
0000000000004247         call       j_strlen                                    ; strlen
000000000000424c         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000004252         movzx      r10d, byte [rsp+0xe8+var_B8]
0000000000004258         mov        r11, rax
000000000000425b         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_4260:
0000000000004260         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
0000000000004263         mov        byte [rsp+0xe8+var_C0], r10b
0000000000004268         ja         loc_4820

000000000000426e         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
0000000000004273         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
0000000000004278         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
000000000000427b         mov        qword [rsp+0xe8+var_A8], r11
0000000000004280         mov        byte [rsp+0xe8+var_B0], r8b
0000000000004285         mov        qword [rsp+0xe8+var_B8], r9
000000000000428a         call       j_memcmp                                    ; memcmp
000000000000428f         test       eax, eax
0000000000004291         mov        r9, qword [rsp+0xe8+var_B8]
0000000000004296         movzx      r8d, byte [rsp+0xe8+var_B0]
000000000000429c         mov        r11, qword [rsp+0xe8+var_A8]
00000000000042a1         jne        loc_4820

00000000000042a7         cmp        byte [rsp+0xe8+var_D9], 0x0
00000000000042ac         movzx      r10d, byte [rsp+0xe8+var_C0]
00000000000042b2         jne        loc_5235

00000000000042b8         nop        dword [rax+rax]

                     loc_42c0:
00000000000042c0         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_4810+19
00000000000042c4         cmp        bl, 0x7e
00000000000042c7         ja         loc_45e8

00000000000042cd         lea        rcx, qword [switch_table_7980+44]           ; 0x79ac
00000000000042d4         movzx      edx, bl
00000000000042d7         movsxd     rax, dword [rcx+rdx*4]
00000000000042db         add        rax, rcx
00000000000042de         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_42e0:
00000000000042e0         xor        r10d, r10d
00000000000042e3         cmp        r11, 0x1
00000000000042e7         setne      al
00000000000042ea         cmp        r11, 0xffffffffffffffff
00000000000042ee         jne        loc_42fc

00000000000042f0         mov        rax, qword [rsp+arg_8]
00000000000042f5         cmp        byte [rax+1], 0x0
00000000000042f9         setne      al

                     loc_42fc:
00000000000042fc         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_42e0+14
0000000000004301         sete       dl
0000000000004304         test       al, al
0000000000004306         je         loc_4558

                     loc_430c:
000000000000430c         xor        r12d, r12d                                  ; CODE XREF=sub_4550+11
000000000000430f         xor        eax, eax
0000000000004311         nop        dword [rax]
                        ; endp

                     loc_4318:
0000000000004318         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_4500+50, sub_45d0+119
000000000000431d         jne        loc_4432

0000000000004323         test       dl, dl
0000000000004325         jne        loc_4432

                     loc_432b:
000000000000432b         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_43e0+87
0000000000004330         test       rsi, rsi
0000000000004333         je         loc_4349

0000000000004335         mov        edx, ebx
0000000000004337         shr        dl, 0x5
000000000000433a         movzx      edx, dl
000000000000433d         mov        edx, dword [rsi+rdx*4]
0000000000004340         bt         edx, ebx
0000000000004343         jb         loc_4493

                     loc_4349:
0000000000004349         test       r10b, r10b                                  ; CODE XREF=sub_42e0+83, sub_43e0+93
000000000000434c         jne        loc_4493

0000000000004352         xor        eax, 0x1
0000000000004355         add        rbp, 0x1
0000000000004359         and        eax, r8d

                     loc_435c:
000000000000435c         test       al, al                                      ; CODE XREF=sub_4830+936
000000000000435e         je         loc_4380

0000000000004360         cmp        r13, r15
0000000000004363         jbe        loc_436a

0000000000004365         mov        byte [r14+r15], 0x27

                     loc_436a:
000000000000436a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_42e0+131
000000000000436e         cmp        r13, rax
0000000000004371         jbe        loc_4379

0000000000004373         mov        byte [r14+r15+1], 0x27

                     loc_4379:
0000000000004379         add        r15, 0x2                                    ; CODE XREF=sub_42e0+145
000000000000437d         xor        r8d, r8d

                     loc_4380:
0000000000004380         cmp        r15, r13                                    ; CODE XREF=sub_42e0+126, sub_43e0+275, sub_4830+869
0000000000004383         jae        loc_4389

0000000000004385         mov        byte [r14+r15], bl

                     loc_4389:
0000000000004389         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_42e0+163
000000000000438e         add        r15, 0x1
0000000000004392         mov        eax, 0x0
0000000000004397         test       r12b, r12b
000000000000439a         cmove      edi, eax
000000000000439d         mov        byte [rsp+0xe8+var_DA], dil
00000000000043a2         jmp        loc_41d8
00000000000043a7         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_43b0:
00000000000043b0         xor        r10d, r10d
00000000000043b3         mov        eax, dword [rsp+arg_0]
00000000000043b7         cmp        eax, 0x2
00000000000043ba         je         loc_4978

00000000000043c0         cmp        eax, 0x5
00000000000043c3         je         loc_4938

00000000000043c9         cmp        eax, 0x2
00000000000043cc         mov        ebx, 0x3f
00000000000043d1         sete       dl
00000000000043d4         xor        r12d, r12d
00000000000043d7         xor        eax, eax
00000000000043d9         jmp        sub_42e0+56
                        ; endp
00000000000043de         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_43e0:
00000000000043e0         xor        r10d, r10d
00000000000043e3         cmp        dword [rsp+arg_0], 0x2
00000000000043e8         je         loc_48f0

00000000000043ee         mov        byte [rsp+arg_74], r12b
00000000000043f3         xor        edx, edx
00000000000043f5         xor        eax, eax
00000000000043f7         mov        ebx, 0x27
00000000000043fc         jmp        sub_42e0+56
                        ; endp
0000000000004401         nop        dword [rax]
0000000000004408         mov        edx, 0x9
000000000000440d         mov        ebx, 0x74

                     loc_4412:
0000000000004412         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_45a0+10, sub_4690+37, sub_47d0+53
0000000000004417         sete       al
000000000000441a         and        al, byte [rsp+arg_7]
000000000000441e         jne        sub_4550+30

0000000000004424         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_43e0+114
0000000000004429         jne        loc_4490

                     loc_442b:
000000000000442b         mov        ebx, edx                                    ; CODE XREF=sub_4500+18
000000000000442d         xor        r12d, r12d
0000000000004430         xor        eax, eax
                        ; endp

                     loc_4432:
0000000000004432         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_42e0+61, sub_42e0+69
0000000000004437         jne        loc_432b

000000000000443d         jmp        loc_4349
0000000000004442         nop        word [rax+rax]
0000000000004448         mov        edx, 0x8
000000000000444d         mov        ebx, 0x62
0000000000004452         jmp        sub_43e0+68
0000000000004454         nop        dword [rax]
0000000000004458         cmp        dword [rsp+8], 0x2
000000000000445d         je         sub_4830                                    ; sub_4830
0000000000004463         cmp        byte [rsp+0xd], 0x0
0000000000004468         je         sub_4670+16

                     loc_446e:
000000000000446e         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_4670+8
0000000000004473         je         loc_4680

0000000000004479         cmp        qword [rsp+arg_10], 0x0
000000000000447f         jne        loc_483b

0000000000004485         mov        ebx, 0x5c
000000000000448a         nop        word [rax+rax]
                        ; endp

                     loc_4490:
0000000000004490         xor        r12d, r12d                                  ; CODE XREF=sub_43e0+73, sub_47d0+29
                        ; endp

                     loc_4493:
0000000000004493         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_42e0+99, sub_42e0+108
0000000000004498         sete       dl
000000000000449b         cmp        byte [rsp+0xe8+var_D9], 0x0
00000000000044a0         mov        eax, edx
00000000000044a2         jne        loc_4cf8

00000000000044a8         mov        eax, r8d
00000000000044ab         xor        eax, 0x1
00000000000044ae         and        al, dl
00000000000044b0         je         loc_44e1

00000000000044b2         cmp        r13, r15
00000000000044b5         jbe        loc_44bc

00000000000044b7         mov        byte [r14+r15], 0x27

                     loc_44bc:
00000000000044bc         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_43e0+213
00000000000044c0         cmp        r13, rdx
00000000000044c3         jbe        loc_44cb

00000000000044c5         mov        byte [r14+r15+1], 0x24

                     loc_44cb:
00000000000044cb         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_43e0+227
00000000000044cf         cmp        r13, rdx
00000000000044d2         jbe        loc_44da

00000000000044d4         mov        byte [r14+r15+2], 0x27

                     loc_44da:
00000000000044da         add        r15, 0x3                                    ; CODE XREF=sub_43e0+242
00000000000044de         mov        r8d, eax

                     loc_44e1:
00000000000044e1         cmp        r13, r15                                    ; CODE XREF=sub_43e0+208
00000000000044e4         jbe        loc_44eb

00000000000044e6         mov        byte [r14+r15], 0x5c

                     loc_44eb:
00000000000044eb         add        r15, 0x1                                    ; CODE XREF=sub_43e0+260
00000000000044ef         add        rbp, 0x1
00000000000044f3         jmp        loc_4380
00000000000044f8         align      256


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_4500:
0000000000004500         cmp        byte [rsp+arg_5], 0x0
0000000000004505         jne        loc_46d3

000000000000450b         xor        edx, edx
000000000000450d         test       byte [rsp+arg_70], 0x1
0000000000004512         je         loc_442b

0000000000004518         add        rbp, 0x1
000000000000451c         jmp        quotearg_buffer_restyled+232
                        ; endp
0000000000004521         nop        dword [rax]
0000000000004528         cmp        dword [rsp+8], 0x2
000000000000452d         sete       dl
0000000000004530         xor        eax, eax
0000000000004532         jmp        sub_42e0+56
0000000000004537         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4540:
0000000000004540         mov        edx, 0x7
0000000000004545         mov        ebx, 0x61
000000000000454a         jmp        sub_43e0+68
                        ; endp
000000000000454f         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4550:
0000000000004550         cmp        dword [rsp+8], 0x2
0000000000004555         sete       dl
                        ; endp

                     loc_4558:
0000000000004558         test       rbp, rbp                                    ; CODE XREF=sub_42e0+38, sub_4770+35
000000000000455b         jne        loc_430c

0000000000004561         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_47a0+43
0000000000004566         and        al, dl
0000000000004568         je         sub_42e0+56

000000000000456e         mov        rbp, r11
0000000000004571         mov        dword [rsp+arg_0], 0x2
0000000000004579         jmp        sub_4830+1097
                        ; endp
000000000000457e         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_4580:
0000000000004580         cmp        dword [rsp+arg_0], 0x2
0000000000004585         sete       dl
0000000000004588         xor        r12d, r12d
000000000000458b         jmp        sub_4550+17
                        ; endp
000000000000458d         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_4590:
0000000000004590         cmp        dword [rsp+arg_0], 0x2
0000000000004595         mov        ebx, 0x20
000000000000459a         sete       dl
000000000000459d         jmp        sub_4550+17
                        ; endp
000000000000459f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_45a0:
00000000000045a0         mov        edx, 0xd
00000000000045a5         mov        ebx, 0x72
00000000000045aa         jmp        loc_4412
00000000000045af         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_45b0:
00000000000045b0         mov        edx, 0xc
00000000000045b5         mov        ebx, 0x66
00000000000045ba         jmp        sub_43e0+68
                        ; endp
00000000000045bf         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_45c0:
00000000000045c0         mov        edx, 0xb
00000000000045c5         mov        ebx, 0x76
00000000000045ca         jmp        sub_43e0+68
                        ; endp
00000000000045cf         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_45d0:
00000000000045d0         mov        edx, 0xa
00000000000045d5         mov        ebx, 0x6e
00000000000045da         jmp        sub_43e0+50
                        ; endp
00000000000045df         align      32

                     loc_45e0:
00000000000045e0         xor        r10d, r10d                                  ; CODE XREF=sub_45d0+135
00000000000045e3         nop        dword [rax+rax]

                     loc_45e8:
00000000000045e8         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
00000000000045ee         jne        loc_4998

00000000000045f4         mov        qword [rsp+0xe8+var_B0], r11
00000000000045f9         mov        byte [rsp+0xe8+var_B8], r8b
00000000000045fe         mov        byte [rsp+0xe8+var_C0], r10b
0000000000004603         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000004608         mov        rcx, qword [rax]
000000000000460b         movzx      edx, bl
000000000000460e         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000004614         movzx      r8d, byte [rsp+0xe8+var_B8]
000000000000461a         mov        r11, qword [rsp+0xe8+var_B0]
000000000000461f         mov        edi, 0x1
0000000000004624         movzx      eax, word [rcx+rdx*2]
0000000000004628         and        ax, gettext_quote.part.1
000000000000462c         setne      r12b
0000000000004630         sete       al
0000000000004633         and        al, byte [rsp+0xe8+var_DB]

                     loc_4637:
0000000000004637         test       al, al                                      ; CODE XREF=sub_4d00+989
0000000000004639         jne        loc_4fd1

000000000000463f         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000004644         sete       dl
0000000000004647         jmp        loc_4318
000000000000464c         align      16

                     loc_4650:
0000000000004650         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
0000000000004654         cmp        bl, 0x7e
0000000000004657         ja         loc_45e0

0000000000004659         lea        rcx, qword [switch_table_7980+552]          ; 0x7ba8
0000000000004660         movzx      edx, bl
0000000000004663         movsxd     rax, dword [rcx+rdx*4]
0000000000004667         add        rax, rcx
000000000000466a         jmp        rax
                        ; endp
000000000000466c         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_4670:
0000000000004670         xor        r10d, r10d
0000000000004673         cmp        byte [rsp+arg_5], 0x0
0000000000004678         jne        loc_446e

000000000000467e         nop

                     loc_4680:
0000000000004680         mov        edx, 0x5c                                   ; CODE XREF=sub_43e0+136, sub_43e0+147
0000000000004685         mov        ebx, 0x5c
000000000000468a         jmp        sub_43e0+68
                        ; endp
000000000000468f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4690:
0000000000004690         mov        edx, 0xc
0000000000004695         xor        r10d, r10d
0000000000004698         mov        ebx, 0x66
000000000000469d         jmp        sub_43e0+68
                        ; endp
00000000000046a2         nop        word [rax+rax]
00000000000046a8         mov        edx, 0xa
00000000000046ad         xor        r10d, r10d
00000000000046b0         mov        ebx, 0x6e
00000000000046b5         jmp        sub_43e0+50
00000000000046ba         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_46c0:
00000000000046c0         mov        ebx, 0x61
00000000000046c5         jmp        sub_43e0+176
                        ; endp
00000000000046ca         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_46d0:
00000000000046d0         xor        r10d, r10d
                        ; endp

                     loc_46d3:
00000000000046d3         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_4500+5
00000000000046d8         sete       dl
00000000000046db         cmp        byte [rsp+arg_7], 0x0
00000000000046e0         jne        loc_527a

00000000000046e6         mov        eax, r8d
00000000000046e9         mov        rcx, r15
00000000000046ec         xor        eax, 0x1
00000000000046ef         and        al, dl
00000000000046f1         je         loc_4720

00000000000046f3         cmp        r13, r15
00000000000046f6         jbe        loc_46fd

00000000000046f8         mov        byte [r14+r15], 0x27

                     loc_46fd:
00000000000046fd         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_46d0+38
0000000000004701         cmp        r13, rcx
0000000000004704         jbe        loc_470c

0000000000004706         mov        byte [r14+r15+1], 0x24

                     loc_470c:
000000000000470c         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_46d0+52
0000000000004710         cmp        r13, rcx
0000000000004713         ja         loc_4d49

                     loc_4719:
0000000000004719         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_4d00+79
000000000000471d         mov        r8d, eax

                     loc_4720:
0000000000004720         cmp        r13, rcx                                    ; CODE XREF=sub_46d0+33
0000000000004723         jbe        loc_472a

0000000000004725         mov        byte [r14+rcx], 0x5c

                     loc_472a:
000000000000472a         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_46d0+83
000000000000472f         lea        r15, qword [rcx+1]
0000000000004733         je         loc_4d39

0000000000004739         lea        rax, qword [rbp+1]
000000000000473d         cmp        rax, r11
0000000000004740         jae        loc_475b

0000000000004742         mov        rax, qword [rsp+arg_8]
0000000000004747         movzx      eax, byte [rax+rbp+1]
000000000000474c         mov        byte [rsp+arg_20], al
0000000000004750         sub        eax, 0x30
0000000000004753         cmp        al, 0x9
0000000000004755         jbe        loc_4f89

                     loc_475b:
000000000000475b         mov        eax, r12d                                   ; CODE XREF=sub_46d0+112
000000000000475e         mov        ebx, 0x30
0000000000004763         xor        r12d, r12d
0000000000004766         jmp        sub_42e0+56
                        ; endp
000000000000476b         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_4770:
0000000000004770         cmp        dword [rsp+arg_0], 0x2
0000000000004775         mov        r12d, r10d
0000000000004778         sete       dl
000000000000477b         xor        r10d, r10d
000000000000477e         xor        eax, eax
0000000000004780         jmp        sub_42e0+56
                        ; endp
0000000000004785         nop        dword [rax]
0000000000004788         cmp        dword [rsp+8], 0x2
000000000000478d         sete       dl
0000000000004790         xor        r10d, r10d
0000000000004793         jmp        sub_4550+8
0000000000004798         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_47a0:
00000000000047a0         cmp        dword [rsp+8], 0x2
00000000000047a5         sete       dl
00000000000047a8         xor        r10d, r10d
00000000000047ab         xor        r12d, r12d
00000000000047ae         jmp        sub_4550+17
                        ; endp
00000000000047b3         nop        dword [rax+rax]
00000000000047b8         cmp        dword [rsp+8], 0x2
00000000000047bd         mov        r12d, r10d
00000000000047c0         mov        ebx, 0x20
00000000000047c5         sete       dl
00000000000047c8         xor        r10d, r10d
00000000000047cb         jmp        sub_4550+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_47d0:
00000000000047d0         mov        edx, 0xd
00000000000047d5         xor        r10d, r10d
00000000000047d8         mov        ebx, 0x72
00000000000047dd         jmp        sub_43e0+50
                        ; endp
00000000000047e2         nop        word [rax+rax]
00000000000047e8         mov        ebx, 0x76
00000000000047ed         jmp        sub_43e0+176
00000000000047f2         nop        word [rax+rax]
00000000000047f8         mov        edx, 0x9
00000000000047fd         xor        r10d, r10d
0000000000004800         mov        ebx, 0x74
0000000000004805         jmp        sub_43e0+50
000000000000480a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4810:
0000000000004810         mov        ebx, 0x62
0000000000004815         jmp        sub_43e0+176
                        ; endp
000000000000481a         nop        word [rax+rax]

                     loc_4820:
0000000000004820         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
0000000000004823         jmp        loc_42c0
0000000000004828         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_4830:
0000000000004830         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_43e0+125
0000000000004835         jne        sub_4d00+1184
                        ; endp

                     loc_483b:
000000000000483b         add        rbp, 0x1                                    ; CODE XREF=sub_43e0+159
000000000000483f         mov        eax, r8d
0000000000004842         xor        r12d, r12d
0000000000004845         mov        ebx, 0x5c
000000000000484a         jmp        sub_42e0+124
                        ; endp
000000000000484f         align      16

                     loc_4850:
0000000000004850         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
0000000000004855         movzx      ebx, byte [rsp+0xe8+var_D9]
000000000000485a         mov        r12d, r8d
000000000000485d         mov        rbp, r11
0000000000004860         sete       dl
0000000000004863         mov        eax, ebx
0000000000004865         test       r15, r15
0000000000004868         sete       cl
000000000000486b         and        eax, edx
000000000000486d         and        al, cl
000000000000486f         jne        loc_52d6

0000000000004875         mov        eax, ebx
0000000000004877         xor        eax, 0x1
000000000000487a         and        dl, al
000000000000487c         je         loc_51ec

0000000000004882         cmp        byte [rsp+0xe8+var_6C], 0x0
0000000000004887         je         loc_51ea

000000000000488d         cmp        byte [rsp+0xe8+var_DA], 0x0
0000000000004892         jne        loc_528d

0000000000004898         test       r13, r13
000000000000489b         sete       al
000000000000489e         cmp        qword [rsp+0xe8+var_98], 0x0
00000000000048a4         setne      dl
00000000000048a7         and        al, dl
00000000000048a9         je         loc_52cc

00000000000048af         mov        r13, qword [rsp+0xe8+var_98]

                     loc_48b4:
00000000000048b4         lea        rbx, qword [aLibs+29]                       ; 0x7925, CODE XREF=sub_4d00+1549
00000000000048bb         mov        byte [r14], 0x27
00000000000048bf         mov        dword [rsp+0xe8+var_E0], 0x2
00000000000048c7         mov        r15d, 0x1
00000000000048cd         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000048d6         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000048db         mov        qword [rsp+0xe8+var_A0], rbx
00000000000048e0         mov        byte [rsp+0xe8+var_6C], al
00000000000048e4         jmp        loc_41c3
00000000000048e9         align      16

                     loc_48f0:
00000000000048f0         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_43e0+8
00000000000048f5         jne        sub_4d00+1184

00000000000048fb         test       r13, r13
00000000000048fe         je         sub_4d00                                    ; sub_4d00

0000000000004904         xor        edx, edx
0000000000004906         cmp        qword [rsp+arg_48], 0x0
000000000000490c         jne        sub_4d00                                    ; sub_4d00
                        ; endp

                     loc_4912:
0000000000004912         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_4d00+52, sub_4d00+1562
0000000000004917         add        r15, 0x3
000000000000491b         xor        eax, eax
000000000000491d         mov        byte [rsp+arg_74], r12b
0000000000004922         xor        r8d, r8d
0000000000004925         mov        r13, rdx
0000000000004928         mov        ebx, 0x27
000000000000492d         jmp        sub_42e0+105
                        ; endp
0000000000004932         align      8

                     loc_4938:
0000000000004938         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_43b0+19
000000000000493d         je         loc_4960

000000000000493f         lea        rcx, qword [rbp+2]
0000000000004943         cmp        rcx, r11
0000000000004946         jae        loc_4960

0000000000004948         mov        rax, qword [rsp+arg_8]
000000000000494d         cmp        byte [rax+rbp+1], 0x3f
0000000000004952         je         loc_50e2

0000000000004958         nop        dword [rax+rax]

                     loc_4960:
0000000000004960         xor        edx, edx                                    ; CODE XREF=sub_4830+269, sub_4830+278, sub_4d00+1001, sub_4d00+1021
0000000000004962         xor        r12d, r12d
0000000000004965         xor        eax, eax
0000000000004967         mov        ebx, 0x3f
000000000000496c         jmp        sub_42e0+56
                        ; endp
0000000000004971         align      8

                     loc_4978:
0000000000004978         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_43b0+10
000000000000497d         jne        loc_51a0

0000000000004983         xor        r12d, r12d
0000000000004986         xor        eax, eax
0000000000004988         mov        ebx, 0x3f
000000000000498d         jmp        sub_42e0+105
                        ; endp
0000000000004992         align      8

                     loc_4998:
0000000000004998         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_45d0+30
00000000000049a0         cmp        r11, 0xffffffffffffffff
00000000000049a4         mov        qword [rsp+0xe8+var_48], 0x0
00000000000049b0         mov        qword [rsp+0xe8+var_C0], rax
00000000000049b5         jne        loc_49e4

00000000000049b7         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
00000000000049bc         mov        byte [rsp+0xe8+var_A8], r8b
00000000000049c1         mov        byte [rsp+0xe8+var_B0], r10b
00000000000049c6         mov        qword [rsp+0xe8+var_B8], r9
00000000000049cb         call       j_strlen                                    ; strlen
00000000000049d0         movzx      r8d, byte [rsp+0xe8+var_A8]
00000000000049d6         movzx      r10d, byte [rsp+0xe8+var_B0]
00000000000049dc         mov        r11, rax
00000000000049df         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_49e4:
00000000000049e4         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_4830+389
00000000000049ec         xor        ecx, ecx
00000000000049ee         mov        byte [rsp+0xe8+var_6A], bl
00000000000049f2         mov        byte [rsp+0xe8+var_6B], r8b
00000000000049f7         mov        rbx, rcx
00000000000049fa         mov        qword [rsp+0xe8+var_60], r9
0000000000004a02         mov        qword [rsp+0xe8+var_B0], rax
0000000000004a07         mov        byte [rsp+0xe8+var_69], r10b
0000000000004a0c         mov        qword [rsp+0xe8+var_68], r15
0000000000004a14         mov        qword [rsp+0xe8+var_A8], r14
0000000000004a19         mov        qword [rsp+0xe8+var_78], r13
0000000000004a1e         mov        qword [rsp+0xe8+var_B8], r11

                     loc_4a23:
0000000000004a23         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_4830+623
0000000000004a28         lea        r14, qword [rbp+rbx]
0000000000004a2d         mov        rdx, qword [rsp+0xe8+var_B8]
0000000000004a32         mov        rcx, qword [rsp+0xe8+var_C0]
0000000000004a37         mov        rdi, qword [rsp+0xe8+var_B0]
0000000000004a3c         lea        r13, qword [rax+r14]
0000000000004a40         sub        rdx, r14
0000000000004a43         mov        rsi, r13
0000000000004a46         call       rpl_mbrtowc                                 ; rpl_mbrtowc
0000000000004a4b         test       rax, rax
0000000000004a4e         mov        r15, rax
0000000000004a51         je         loc_4aa1

0000000000004a53         cmp        rax, 0xffffffffffffffff
0000000000004a57         je         loc_5075

0000000000004a5d         cmp        rax, 0xfffffffffffffffe
0000000000004a61         je         loc_5001

0000000000004a67         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000004a6c         sete       al
0000000000004a6f         and        al, byte [rsp+0xe8+var_D9]
0000000000004a73         jne        loc_4c10

                     loc_4a79:
0000000000004a79         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_4830+996, sub_4830+1031
0000000000004a80         call       j_iswprint                                  ; iswprint
0000000000004a85         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
0000000000004a8a         test       eax, eax
0000000000004a8c         mov        eax, 0x0
0000000000004a91         cmove      r12d, eax
0000000000004a95         add        rbx, r15
0000000000004a98         call       j_mbsinit                                   ; mbsinit
0000000000004a9d         test       eax, eax
0000000000004a9f         je         loc_4a23

                     loc_4aa1:
0000000000004aa1         mov        edx, r12d                                   ; CODE XREF=sub_4830+545
0000000000004aa4         mov        rdi, rbx
0000000000004aa7         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000004aad         xor        edx, 0x1
0000000000004ab0         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000004ab5         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000004abb         and        dl, byte [rsp+0xe8+var_DB]
0000000000004abf         mov        r15, qword [rsp+0xe8+var_68]
0000000000004ac7         mov        r14, qword [rsp+0xe8+var_A8]
0000000000004acc         mov        r13, qword [rsp+0xe8+var_78]
0000000000004ad1         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_4ad6:
0000000000004ad6         cmp        rdi, 0x1                                    ; CODE XREF=sub_4d00+880, sub_4d00+936
0000000000004ada         jbe        loc_50db

                     loc_4ae0:
0000000000004ae0         mov        rcx, rdi                                    ; CODE XREF=sub_4d00+729
0000000000004ae3         xor        esi, esi
0000000000004ae5         movzx      r9d, byte [rsp+0xe8+var_D9]
0000000000004aeb         add        rcx, rbp
0000000000004aee         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000004af3         jmp        loc_4bae
0000000000004af8         align      256

                     loc_4b00:
0000000000004b00         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_4830+896
0000000000004b05         sete       al
0000000000004b08         test       r9b, r9b
0000000000004b0b         jne        loc_4fc0

0000000000004b11         mov        esi, r8d
0000000000004b14         xor        esi, 0x1
0000000000004b17         and        al, sil
0000000000004b1a         je         loc_4b4b

0000000000004b1c         cmp        r13, r15
0000000000004b1f         jbe        loc_4b26

0000000000004b21         mov        byte [r14+r15], 0x27

                     loc_4b26:
0000000000004b26         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_4830+751
0000000000004b2a         cmp        r13, rsi
0000000000004b2d         jbe        loc_4b35

0000000000004b2f         mov        byte [r14+r15+1], 0x24

                     loc_4b35:
0000000000004b35         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_4830+765
0000000000004b39         cmp        r13, rsi
0000000000004b3c         jbe        loc_4b44

0000000000004b3e         mov        byte [r14+r15+2], 0x27

                     loc_4b44:
0000000000004b44         add        r15, 0x3                                    ; CODE XREF=sub_4830+780
0000000000004b48         mov        r8d, eax

                     loc_4b4b:
0000000000004b4b         cmp        r13, r15                                    ; CODE XREF=sub_4830+746
0000000000004b4e         jbe        loc_4b55

0000000000004b50         mov        byte [r14+r15], 0x5c

                     loc_4b55:
0000000000004b55         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4830+798
0000000000004b59         cmp        r13, rax
0000000000004b5c         jbe        loc_4b6b

0000000000004b5e         mov        eax, ebx
0000000000004b60         shr        al, 0x6
0000000000004b63         add        eax, 0x30
0000000000004b66         mov        byte [r14+r15+1], al

                     loc_4b6b:
0000000000004b6b         lea        rax, qword [r15+2]                          ; CODE XREF=sub_4830+812
0000000000004b6f         cmp        r13, rax
0000000000004b72         jbe        loc_4b84

0000000000004b74         mov        eax, ebx
0000000000004b76         shr        al, 0x3
0000000000004b79         and        eax, 0x7
0000000000004b7c         add        eax, 0x30
0000000000004b7f         mov        byte [r14+r15+2], al

                     loc_4b84:
0000000000004b84         and        ebx, 0x7                                    ; CODE XREF=sub_4830+834
0000000000004b87         add        rbp, 0x1
0000000000004b8b         add        r15, 0x3
0000000000004b8f         add        ebx, 0x30
0000000000004b92         cmp        rbp, rcx
0000000000004b95         jae        loc_4380

0000000000004b9b         mov        esi, edx

                     loc_4b9d:
0000000000004b9d         cmp        r13, r15                                    ; CODE XREF=sub_4830+985, sub_4d00+737
0000000000004ba0         jbe        loc_4ba6

0000000000004ba2         mov        byte [r14+r15], bl

                     loc_4ba6:
0000000000004ba6         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_4830+880
0000000000004baa         add        r15, 0x1

                     loc_4bae:
0000000000004bae         test       dl, dl                                      ; CODE XREF=sub_4830+707
0000000000004bb0         jne        loc_4b00

0000000000004bb6         mov        eax, esi
0000000000004bb8         xor        eax, 0x1
0000000000004bbb         and        eax, r8d
0000000000004bbe         test       r10b, r10b
0000000000004bc1         je         loc_4bd1

0000000000004bc3         cmp        r13, r15
0000000000004bc6         jbe        loc_4bcd

0000000000004bc8         mov        byte [r14+r15], 0x5c

                     loc_4bcd:
0000000000004bcd         add        r15, 0x1                                    ; CODE XREF=sub_4830+918

                     loc_4bd1:
0000000000004bd1         add        rbp, 0x1                                    ; CODE XREF=sub_4830+913
0000000000004bd5         cmp        rbp, rcx
0000000000004bd8         jae        loc_435c

0000000000004bde         test       al, al
0000000000004be0         je         loc_4fde

0000000000004be6         cmp        r13, r15
0000000000004be9         jbe        loc_4bf0

0000000000004beb         mov        byte [r14+r15], 0x27

                     loc_4bf0:
0000000000004bf0         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4830+953
0000000000004bf4         cmp        r13, rax
0000000000004bf7         jbe        loc_4bff

0000000000004bf9         mov        byte [r14+r15+1], 0x27

                     loc_4bff:
0000000000004bff         add        r15, 0x2                                    ; CODE XREF=sub_4830+967
0000000000004c03         xor        r10d, r10d
0000000000004c06         xor        r8d, r8d
0000000000004c09         jmp        loc_4b9d
0000000000004c0b         align      16

                     loc_4c10:
0000000000004c10         cmp        r15, 0x1                                    ; CODE XREF=sub_4830+579
0000000000004c14         je         loc_4a79

0000000000004c1a         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000004c1f         lea        rcx, qword [rdi+r15]
0000000000004c23         lea        rdx, qword [rdi+r14+1]
0000000000004c28         lea        r8, qword [rcx+r14]
0000000000004c2c         jmp        loc_4c3d
0000000000004c2e         align      16

                     loc_4c30:
0000000000004c30         add        rdx, 0x1                                    ; CODE XREF=sub_4830+1046, sub_4830+1072
0000000000004c34         cmp        r8, rdx
0000000000004c37         je         loc_4a79

                     loc_4c3d:
0000000000004c3d         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_4830+1020
0000000000004c40         sub        ecx, 0x5b
0000000000004c43         cmp        cl, 0x21
0000000000004c46         ja         loc_4c30

0000000000004c48         mov        esi, 0x1
0000000000004c4d         shl        rsi, cl
0000000000004c50         mov        rcx, rsi
0000000000004c53         movabs     rsi, 0x20000002b
0000000000004c5d         test       rcx, rsi
0000000000004c60         je         loc_4c30

0000000000004c62         mov        r14, qword [rsp+0xe8+var_A8]
0000000000004c67         mov        r13, qword [rsp+0xe8+var_78]
0000000000004c6c         mov        rbp, qword [rsp+0xe8+var_B8]
0000000000004c71         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_4c79:
0000000000004c79         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_4830+1227, sub_4d00+716, sub_4d00+1353, sub_4d00+1502
0000000000004c7e         je         loc_4c90

0000000000004c80         test       al, al
0000000000004c82         mov        eax, 0x4
0000000000004c87         cmove      eax, dword [rsp+0xe8+var_E0]
0000000000004c8c         mov        dword [rsp+0xe8+var_E0], eax

                     loc_4c90:
0000000000004c90         sub        rsp, 0x8                                    ; CODE XREF=sub_4830+1102
0000000000004c94         mov        rcx, rbp
0000000000004c97         mov        rsi, r13
0000000000004c9a         push       qword [rsp+0xf0+var_88]
0000000000004c9e         push       qword [rsp+0xf8+var_80]
0000000000004ca2         mov        rdi, r14
0000000000004ca5         push       0x0
0000000000004ca7         mov        r9d, dword [rsp+0x108+var_70]
0000000000004caf         mov        r8d, dword [rsp+0x108+var_E0]
0000000000004cb4         mov        rdx, qword [rsp+0x108+var_D8]
0000000000004cb9         and        r9d, 0xfffffffd
0000000000004cbd         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000004cc2         add        rsp, 0x20
0000000000004cc6         mov        r15, rax

                     loc_4cc9:
0000000000004cc9         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_4d00+1317, sub_4d00+1328, sub_4d00+1479
0000000000004cd1         xor        rbx, qword [fs:0x28]
0000000000004cda         mov        rax, r15
0000000000004cdd         jne        loc_52e3

0000000000004ce3         add        rsp, 0xb8
0000000000004cea         pop        rbx
0000000000004ceb         pop        rbp
0000000000004cec         pop        r12
0000000000004cee         pop        r13
0000000000004cf0         pop        r14
0000000000004cf2         pop        r15
0000000000004cf4         ret
                        ; endp
0000000000004cf5         align      8

                     loc_4cf8:
0000000000004cf8         mov        rbp, r11                                    ; CODE XREF=sub_43e0+194
0000000000004cfb         jmp        loc_4c79


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8


                     sub_4d00:
0000000000004d00         cmp        r13, r15
0000000000004d03         jbe        loc_4d0a

0000000000004d05         mov        byte [r14+r15], 0x27

                     loc_4d0a:
0000000000004d0a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4d00+3
0000000000004d0e         cmp        r13, rax
0000000000004d11         jbe        loc_4d19

0000000000004d13         mov        byte [r14+r15+1], 0x5c

                     loc_4d19:
0000000000004d19         lea        rax, qword [r15+2]                          ; CODE XREF=sub_4d00+17
0000000000004d1d         cmp        r13, rax
0000000000004d20         jbe        loc_5312

0000000000004d26         mov        rdx, r13
0000000000004d29         mov        byte [r14+r15+2], 0x27
0000000000004d2f         mov        r13, qword [rsp+arg_48]
0000000000004d34         jmp        loc_4912

                     loc_4d39:
0000000000004d39         mov        eax, r12d                                   ; CODE XREF=sub_46d0+99
0000000000004d3c         mov        ebx, 0x30
0000000000004d41         xor        r12d, r12d
0000000000004d44         jmp        sub_42e0+105
                        ; endp

                     loc_4d49:
0000000000004d49         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_46d0+67
0000000000004d4f         jmp        loc_4719

                     loc_4d54:
0000000000004d54         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
0000000000004d56         jne        loc_4183

0000000000004d5c         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_4d61:
0000000000004d61         test       r13, r13                                    ; CODE XREF=sub_4d00+1517
0000000000004d64         jne        loc_52fa

0000000000004d6a         lea        rax, qword [aLibs+29]                       ; 0x7925
0000000000004d71         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004d7a         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004d7f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004d84         xor        r12d, r12d
0000000000004d87         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000004d8c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004d95         mov        qword [rsp+0xe8+var_A0], rax
0000000000004d9a         mov        r15d, 0x1
0000000000004da0         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000004da8         jmp        loc_41c3
0000000000004dad         align      16

                     loc_4db0:
0000000000004db0         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
0000000000004db2         jne        loc_51ad

0000000000004db8         test       r13, r13
0000000000004dbb         je         loc_4fe6

0000000000004dc1         mov        byte [r14], 0x22
0000000000004dc5         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004dca         xor        r12d, r12d
0000000000004dcd         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004dd2         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_4ddb:
0000000000004ddb         lea        rax, qword [aLibs+27]                       ; 0x7923, CODE XREF=sub_4d00+764
0000000000004de2         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000004de7         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004dec         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004df5         mov        r15d, 0x1
0000000000004dfb         mov        qword [rsp+0xe8+var_A0], rax
0000000000004e00         jmp        loc_41c3

                     loc_4e05:
0000000000004e05         lea        rax, qword [aLibs+27]                       ; case 6, 0x7923, CODE XREF=quotearg_buffer_restyled+145
0000000000004e0c         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004e11         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004e16         xor        r12d, r12d
0000000000004e19         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004e22         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000004e27         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004e2c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000004e35         xor        r15d, r15d
0000000000004e38         mov        qword [rsp+0xe8+var_A0], rax
0000000000004e3d         mov        dword [rsp+0xe8+var_E0], 0x5
0000000000004e45         jmp        loc_41c3

                     loc_4e4a:
0000000000004e4a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
0000000000004e4f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004e54         xor        r12d, r12d
0000000000004e57         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004e60         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000004e65         xor        r15d, r15d
0000000000004e68         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004e6d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000004e76         mov        qword [rsp+0xe8+var_A0], 0x0
0000000000004e7f         jmp        loc_41c3

                     loc_4e84:
0000000000004e84         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
0000000000004e89         je         loc_4ee1

0000000000004e8b         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0x7927
0000000000004e92         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004e94         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004e99         call       j_dcgettext                                 ; dcgettext
0000000000004e9e         mov        rcx, rax
0000000000004ea1         mov        qword [rsp+0xe8+var_80], rax
0000000000004ea6         lea        rax, qword [aLibs+31]                       ; 0x7927
0000000000004ead         cmp        rcx, rax
0000000000004eb0         je         loc_524e

                     loc_4eb6:
0000000000004eb6         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x7925, CODE XREF=sub_4d00+1375
0000000000004ebd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004ebf         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004ec4         call       j_dcgettext                                 ; dcgettext
0000000000004ec9         mov        rcx, rax
0000000000004ecc         mov        qword [rsp+0xe8+var_88], rax
0000000000004ed1         lea        rax, qword [aLibs+29]                       ; 0x7925
0000000000004ed8         cmp        rcx, rax
0000000000004edb         je         loc_5264

                     loc_4ee1:
0000000000004ee1         xor        r15d, r15d                                  ; CODE XREF=sub_4d00+393, sub_4d00+1397
0000000000004ee4         test       ebx, ebx
0000000000004ee6         je         loc_50ad

                     loc_4eec:
0000000000004eec         test       ebx, ebx                                    ; CODE XREF=sub_4d00+951, sub_4d00+982
0000000000004eee         mov        rbx, qword [rsp+0xe8+var_88]
0000000000004ef3         setne      byte [rsp+0xe8+var_D9]
0000000000004ef8         xor        r12d, r12d
0000000000004efb         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
0000000000004efe         call       j_strlen                                    ; strlen
0000000000004f03         mov        qword [rsp+0xe8+var_A0], rbx
0000000000004f08         mov        qword [rsp+0xe8+var_D0], rax
0000000000004f0d         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004f12         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004f17         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004f20         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004f25         jmp        loc_41c3

                     loc_4f2a:
0000000000004f2a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
0000000000004f2f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004f34         xor        r12d, r12d
0000000000004f37         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004f40         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000004f45         xor        r15d, r15d
0000000000004f48         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000004f4d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000004f56         mov        qword [rsp+0xe8+var_A0], 0x0
0000000000004f5f         jmp        loc_41c3

                     loc_4f64:
0000000000004f64         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000004f69         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004f6e         xor        r12d, r12d
0000000000004f71         mov        qword [rsp+0xe8+var_98], 0x0
0000000000004f7a         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000004f7f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000004f84         jmp        loc_41a3

                     loc_4f89:
0000000000004f89         cmp        r13, r15                                    ; CODE XREF=sub_46d0+133
0000000000004f8c         jbe        loc_4f93

0000000000004f8e         mov        byte [r14+r15], 0x30

                     loc_4f93:
0000000000004f93         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_4d00+652
0000000000004f97         cmp        r13, rax
0000000000004f9a         jbe        loc_4fa2

0000000000004f9c         mov        byte [r14+rcx+2], 0x30

                     loc_4fa2:
0000000000004fa2         mov        eax, r12d                                   ; CODE XREF=sub_4d00+666
0000000000004fa5         lea        r15, qword [rcx+3]
0000000000004fa9         xor        r12d, r12d
0000000000004fac         mov        ebx, 0x30
0000000000004fb1         jmp        sub_42e0+56
                        ; endp
0000000000004fb6         align      64

                     loc_4fc0:
0000000000004fc0         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_4830+731
0000000000004fc5         mov        rbp, r11
0000000000004fc8         mov        byte [rsp+0xe8+var_DB], bl
0000000000004fcc         jmp        loc_4c79

                     loc_4fd1:
0000000000004fd1         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_45d0+105
0000000000004fd6         xor        r12d, r12d
0000000000004fd9         jmp        loc_4ae0

                     loc_4fde:
0000000000004fde         xor        r10d, r10d                                  ; CODE XREF=sub_4830+944
0000000000004fe1         jmp        loc_4b9d

                     loc_4fe6:
0000000000004fe6         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_4d00+187
0000000000004fef         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000004ff4         xor        r12d, r12d
0000000000004ff7         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000004ffc         jmp        loc_4ddb

                     loc_5001:
0000000000005001         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_4830+561
0000000000005006         mov        rsi, r14
0000000000005009         mov        rcx, r13
000000000000500c         mov        rax, rbx
000000000000500f         mov        rdi, rbx
0000000000005012         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000005018         movzx      ebx, byte [rsp+0xe8+var_6A]
000000000000501d         mov        r9, qword [rsp+0xe8+var_60]
0000000000005025         cmp        rsi, r11
0000000000005028         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000502e         mov        r15, qword [rsp+0xe8+var_68]
0000000000005036         mov        r14, qword [rsp+0xe8+var_A8]
000000000000503b         mov        r13, qword [rsp+0xe8+var_78]
0000000000005040         jae        loc_5068

0000000000005042         cmp        byte [rcx], 0x0
0000000000005045         jne        loc_5057

0000000000005047         jmp        loc_5068
0000000000005049         align      16

                     loc_5050:
0000000000005050         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_4d00+867
0000000000005055         je         loc_5065

                     loc_5057:
0000000000005057         add        rax, 0x1                                    ; CODE XREF=sub_4d00+837
000000000000505b         lea        rdx, qword [rbp+rax]
0000000000005060         cmp        r11, rdx
0000000000005063         ja         loc_5050

                     loc_5065:
0000000000005065         mov        rdi, rax                                    ; CODE XREF=sub_4d00+853

                     loc_5068:
0000000000005068         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_4d00+832, sub_4d00+839
000000000000506d         xor        r12d, r12d
0000000000005070         jmp        loc_4ad6

                     loc_5075:
0000000000005075         mov        rdi, rbx                                    ; CODE XREF=sub_4830+551
0000000000005078         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000507e         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000005083         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000005089         mov        r15, qword [rsp+0xe8+var_68]
0000000000005091         xor        r12d, r12d
0000000000005094         mov        r14, qword [rsp+0xe8+var_A8]
0000000000005099         mov        r13, qword [rsp+0xe8+var_78]
000000000000509e         mov        r11, qword [rsp+0xe8+var_B8]
00000000000050a3         movzx      edx, byte [rsp+0xe8+var_DB]
00000000000050a8         jmp        loc_4ad6

                     loc_50ad:
00000000000050ad         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_4d00+486
00000000000050b2         movzx      eax, byte [rdx]
00000000000050b5         test       al, al
00000000000050b7         je         loc_4eec

00000000000050bd         nop        dword [rax]

                     loc_50c0:
00000000000050c0         cmp        r13, r15                                    ; CODE XREF=sub_4d00+980
00000000000050c3         jbe        loc_50c9

00000000000050c5         mov        byte [r14+r15], al

                     loc_50c9:
00000000000050c9         add        r15, 0x1                                    ; CODE XREF=sub_4d00+963
00000000000050cd         movzx      eax, byte [rdx+r15]
00000000000050d2         test       al, al
00000000000050d4         jne        loc_50c0

00000000000050d6         jmp        loc_4eec

                     loc_50db:
00000000000050db         mov        eax, edx                                    ; CODE XREF=sub_4830+682
00000000000050dd         jmp        loc_4637

                     loc_50e2:
00000000000050e2         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_4830+290
00000000000050e6         cmp        bl, 0x3e
00000000000050e9         ja         loc_4960

00000000000050ef         movabs     rax, 0x7000a38200000000
00000000000050f9         bt         rax, rbx
00000000000050fd         jae        loc_4960

0000000000005103         cmp        byte [rsp+arg_7], 0x0
0000000000005108         jne        loc_52f2

000000000000510e         cmp        r13, r15
0000000000005111         jbe        loc_5118

0000000000005113         mov        byte [r14+r15], 0x3f

                     loc_5118:
0000000000005118         lea        rax, qword [r15+1]                          ; CODE XREF=sub_4d00+1041
000000000000511c         cmp        r13, rax
000000000000511f         jbe        loc_5127

0000000000005121         mov        byte [r14+r15+1], 0x22

                     loc_5127:
0000000000005127         lea        rax, qword [r15+2]                          ; CODE XREF=sub_4d00+1055
000000000000512b         cmp        r13, rax
000000000000512e         jbe        loc_5136

0000000000005130         mov        byte [r14+r15+2], 0x22

                     loc_5136:
0000000000005136         lea        rax, qword [r15+3]                          ; CODE XREF=sub_4d00+1070
000000000000513a         cmp        r13, rax
000000000000513d         jbe        loc_5145

000000000000513f         mov        byte [r14+r15+3], 0x3f

                     loc_5145:
0000000000005145         add        r15, 0x4                                    ; CODE XREF=sub_4d00+1085
0000000000005149         xor        edx, edx
000000000000514b         xor        r12d, r12d
000000000000514e         xor        eax, eax
0000000000005150         mov        rbp, rcx
0000000000005153         jmp        sub_42e0+56
                        ; endp

                     loc_5158:
0000000000005158         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
000000000000515a         je         loc_52e8

0000000000005160         lea        rax, qword [aLibs+29]                       ; 0x7925
0000000000005167         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000516c         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000005171         xor        r12d, r12d
0000000000005174         mov        qword [rsp+0xe8+var_98], 0x0
000000000000517d         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000005182         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000005187         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000005190         xor        r15d, r15d
0000000000005193         mov        qword [rsp+0xe8+var_A0], rax
0000000000005198         jmp        loc_41c3
000000000000519d         align      32

                     loc_51a0:
00000000000051a0         mov        rbp, r11                                    ; CODE XREF=sub_4830+333
00000000000051a3         movzx      eax, byte [rsp+arg_7]
00000000000051a8         jmp        sub_4830+1097
                        ; endp

                     loc_51ad:
00000000000051ad         lea        rax, qword [aLibs+27]                       ; 0x7923, CODE XREF=sub_4d00+178
00000000000051b4         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000051b9         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000051be         xor        r12d, r12d
00000000000051c1         mov        qword [rsp+0xe8+var_98], 0x0
00000000000051ca         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000051cf         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000051d4         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000051dd         xor        r15d, r15d
00000000000051e0         mov        qword [rsp+0xe8+var_A0], rax
00000000000051e5         jmp        loc_41c3

                     loc_51ea:
00000000000051ea         mov        eax, edx                                    ; CODE XREF=sub_4830+87

                     loc_51ec:
00000000000051ec         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_4830+76, sub_4d00+1489
00000000000051f1         test       rbx, rbx
00000000000051f4         je         loc_5222

00000000000051f6         test       al, al
00000000000051f8         je         loc_5222

00000000000051fa         movzx      ecx, byte [rbx]
00000000000051fd         mov        rax, rbx
0000000000005200         test       cl, cl
0000000000005202         je         loc_5222

0000000000005204         mov        rdx, r15
0000000000005207         sub        rax, r15

                     loc_520a:
000000000000520a         cmp        r13, rdx                                    ; CODE XREF=sub_4d00+1309
000000000000520d         jbe        loc_5213

000000000000520f         mov        byte [r14+rdx], cl

                     loc_5213:
0000000000005213         add        rdx, 0x1                                    ; CODE XREF=sub_4d00+1293
0000000000005217         movzx      ecx, byte [rax+rdx]
000000000000521b         test       cl, cl
000000000000521d         jne        loc_520a

000000000000521f         mov        r15, rdx

                     loc_5222:
0000000000005222         cmp        r13, r15                                    ; CODE XREF=sub_4d00+1268, sub_4d00+1272, sub_4d00+1282
0000000000005225         jbe        loc_4cc9

000000000000522b         mov        byte [r14+r15], 0x0
0000000000005230         jmp        loc_4cc9

                     loc_5235:
0000000000005235         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
000000000000523a         movzx      ebx, byte [rsp+0xe8+var_D9]
000000000000523f         mov        rbp, r11
0000000000005242         sete       al
0000000000005245         mov        byte [rsp+0xe8+var_DB], bl
0000000000005249         jmp        loc_4c79

                     loc_524e:
000000000000524e         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_4d00+432
0000000000005252         mov        rdi, rcx
0000000000005255         call       gettext_quote.part.1                        ; gettext_quote.part.1
000000000000525a         mov        qword [rsp+0xe8+var_80], rax
000000000000525f         jmp        loc_4eb6

                     loc_5264:
0000000000005264         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_4d00+475
0000000000005268         mov        rdi, rcx
000000000000526b         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000005270         mov        qword [rsp+0xe8+var_88], rax
0000000000005275         jmp        loc_4ee1

                     loc_527a:
000000000000527a         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_46d0+16
000000000000527f         mov        rbp, r11
0000000000005282         mov        eax, edx
0000000000005284         mov        byte [rsp+arg_5], bl
0000000000005288         jmp        sub_4830+1097
                        ; endp

                     loc_528d:
000000000000528d         sub        rsp, 0x8                                    ; CODE XREF=sub_4830+98
0000000000005291         mov        r8d, 0x5
0000000000005297         mov        rcx, r11
000000000000529a         push       qword [rsp+0xf0+var_88]
000000000000529e         push       qword [rsp+0xf8+var_80]
00000000000052a2         mov        rdi, r14
00000000000052a5         push       qword [rsp+0x100+var_C8]
00000000000052a9         mov        r9d, dword [rsp+0x108+var_70]
00000000000052b1         mov        rdx, qword [rsp+0x108+var_D8]
00000000000052b6         mov        rsi, qword [rsp+0x108+var_98]
00000000000052bb         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000052c0         add        rsp, 0x20
00000000000052c4         mov        r15, rax
00000000000052c7         jmp        loc_4cc9

                     loc_52cc:
00000000000052cc         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_4830+121
00000000000052d1         jmp        loc_51ec

                     loc_52d6:
00000000000052d6         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_4830+63
00000000000052de         jmp        loc_4c79

                     loc_52e3:
00000000000052e3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_4830+1197
                        ; endp

                     loc_52e8:
00000000000052e8         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_4d00+1114
00000000000052ed         jmp        loc_4d61

                     loc_52f2:
00000000000052f2         mov        rbp, r11                                    ; CODE XREF=sub_4d00+1032
00000000000052f5         jmp        sub_4830+1120
                        ; endp

                     loc_52fa:
00000000000052fa         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_4d00+100
00000000000052ff         xor        eax, eax
0000000000005301         xor        r12d, r12d
0000000000005304         mov        qword [rsp+0xe8+var_98], 0x0
000000000000530d         jmp        loc_48b4

                     loc_5312:
0000000000005312         mov        rdx, r13                                    ; CODE XREF=sub_4d00+32
0000000000005315         mov        r13, qword [rsp+arg_48]
000000000000531a         jmp        loc_4912

                     loc_531f:
000000000000531f         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
0000000000005324         align      16                                          ; End of unwind block (FDE at 0x8890)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
0000000000005330         push       r15                                         ; Begin of unwind block (FDE at 0x8908), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
0000000000005332         push       r14
0000000000005334         movsxd     r15, edi
0000000000005337         push       r13
0000000000005339         push       r12
000000000000533b         mov        r14, rdx
000000000000533e         push       rbp
000000000000533f         push       rbx
0000000000005340         mov        rbp, rcx
0000000000005343         sub        rsp, 0x28
0000000000005347         mov        qword [rsp+0x58+var_50], rsi
000000000000534c         call       j___errno_location                          ; __errno_location
0000000000005351         mov        r13, rax
0000000000005354         mov        eax, dword [rax]
0000000000005356         test       r15d, r15d
0000000000005359         mov        rbx, qword [slotvec]                        ; slotvec
0000000000005360         mov        dword [rsp+0x58+var_40], eax
0000000000005364         js         loc_54d1

000000000000536a         cmp        dword [nslots], r15d                        ; nslots
0000000000005371         jg         loc_53d5

0000000000005373         cmp        r15d, 0x7fffffff
000000000000537a         je         loc_54d6

0000000000005380         lea        r12d, dword [r15+1]
0000000000005384         lea        rax, qword [slotvec0]                       ; slotvec0
000000000000538b         movsxd     rsi, r12d
000000000000538e         shl        rsi, 0x4
0000000000005392         cmp        rbx, rax
0000000000005395         je         loc_54b0

000000000000539b         mov        rdi, rbx                                    ; argument #1 for method xrealloc
000000000000539e         call       xrealloc                                    ; xrealloc
00000000000053a3         mov        rbx, rax
00000000000053a6         mov        qword [slotvec], rax                        ; slotvec

                     loc_53ad:
00000000000053ad         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
00000000000053b4         mov        edx, r12d
00000000000053b7         xor        esi, esi                                    ; argument "__c" for method j_memset
00000000000053b9         sub        edx, edi
00000000000053bb         shl        rdi, 0x4
00000000000053bf         movsxd     rdx, edx
00000000000053c2         add        rdi, rbx                                    ; argument "__s" for method j_memset
00000000000053c5         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
00000000000053c9         call       j_memset                                    ; memset
00000000000053ce         mov        dword [nslots], r12d                        ; nslots

                     loc_53d5:
00000000000053d5         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
00000000000053d8         shl        r15, 0x4
00000000000053dc         sub        rsp, 0x8
00000000000053e0         add        rbx, r15
00000000000053e3         lea        r15, qword [rbp+8]
00000000000053e7         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
00000000000053eb         mov        r11, qword [rbx]
00000000000053ee         mov        r12, qword [rbx+8]
00000000000053f2         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
00000000000053f5         or         eax, 0x1
00000000000053f8         mov        dword [rsp+0x60+var_3C], eax
00000000000053fc         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
00000000000053ff         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
0000000000005402         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000005405         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000005407         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
000000000000540a         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
000000000000540f         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
0000000000005412         mov        qword [rsp+0x78+var_48], r11
0000000000005417         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000541c         add        rsp, 0x20
0000000000005420         mov        r11, qword [rsp+0x58+var_48]
0000000000005425         cmp        r11, rax
0000000000005428         ja         loc_5491

000000000000542a         lea        rsi, qword [rax+1]
000000000000542e         lea        rax, qword [slot0]                          ; slot0
0000000000005435         cmp        r12, rax
0000000000005438         mov        qword [rbx], rsi
000000000000543b         je         loc_544f

000000000000543d         mov        rdi, r12
0000000000005440         mov        qword [rsp+0x58+var_48], rsi
0000000000005445         call       sub_1dc0                                    ; sub_1dc0
000000000000544a         mov        rsi, qword [rsp+0x58+var_48]

                     loc_544f:
000000000000544f         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
0000000000005452         mov        qword [rsp+0x58+var_48], rsi
0000000000005457         call       xmalloc                                     ; xmalloc
000000000000545c         sub        rsp, 0x8
0000000000005460         mov        qword [rbx+8], rax
0000000000005464         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000005468         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
000000000000546b         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
000000000000546e         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000005471         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000005473         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
0000000000005478         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
000000000000547b         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000005480         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
0000000000005485         mov        r12, rax
0000000000005488         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000548d         add        rsp, 0x20

                     loc_5491:
0000000000005491         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
0000000000005495         mov        dword [r13], eax
0000000000005499         add        rsp, 0x28
000000000000549d         mov        rax, r12
00000000000054a0         pop        rbx
00000000000054a1         pop        rbp
00000000000054a2         pop        r12
00000000000054a4         pop        r13
00000000000054a6         pop        r14
00000000000054a8         pop        r15
00000000000054aa         ret
                        ; endp
00000000000054ab         align      16

                     loc_54b0:
00000000000054b0         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
00000000000054b2         call       xrealloc                                    ; xrealloc
00000000000054b7         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
00000000000054bf         mov        rbx, rax
00000000000054c2         mov        qword [slotvec], rax                        ; slotvec
00000000000054c9         movups     xmmword [rax], xmm0
00000000000054cc         jmp        loc_53ad

                     loc_54d1:
00000000000054d1         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_54d6:
00000000000054d6         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_54db:
00000000000054db         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x8908)
                     clone_quoting_options:
00000000000054e0         push       r12                                         ; Begin of unwind block (FDE at 0x8974)
00000000000054e2         push       rbp
00000000000054e3         push       rbx
00000000000054e4         mov        rbx, rdi
00000000000054e7         call       j___errno_location                          ; __errno_location
00000000000054ec         mov        r12d, dword [rax]
00000000000054ef         mov        rbp, rax
00000000000054f2         lea        rax, qword [default_quoting_options]        ; default_quoting_options
00000000000054f9         test       rbx, rbx
00000000000054fc         mov        esi, 0x38
0000000000005501         cmove      rbx, rax
0000000000005505         mov        rdi, rbx
0000000000005508         call       xmemdup                                     ; xmemdup
000000000000550d         mov        dword [rbp], r12d
0000000000005511         pop        rbx
0000000000005512         pop        rbp
0000000000005513         pop        r12
0000000000005515         ret
                        ; endp
0000000000005516         align      32                                          ; End of unwind block (FDE at 0x8974)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
0000000000005520         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x89a0), default_quoting_options
0000000000005527         test       rdi, rdi
000000000000552a         cmove      rdi, rax
000000000000552e         mov        eax, dword [rdi]
0000000000005530         ret
                        ; endp
0000000000005531         align      64                                          ; End of unwind block (FDE at 0x89a0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
0000000000005540         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x89b4), default_quoting_options
0000000000005547         test       rdi, rdi
000000000000554a         cmove      rdi, rax
000000000000554e         mov        dword [rdi], esi
0000000000005550         ret
                        ; endp
0000000000005551         align      32                                          ; End of unwind block (FDE at 0x89b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
0000000000005560         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x89c8), default_quoting_options
0000000000005567         test       rdi, rdi
000000000000556a         mov        ecx, esi
000000000000556c         cmove      rdi, rax
0000000000005570         mov        eax, esi
0000000000005572         and        ecx, 0x1f
0000000000005575         shr        al, 0x5
0000000000005578         movzx      eax, al
000000000000557b         lea        rdi, qword [rdi+rax*4+8]
0000000000005580         mov        esi, dword [rdi]
0000000000005582         mov        eax, esi
0000000000005584         shr        eax, cl
0000000000005586         xor        edx, eax
0000000000005588         and        eax, 0x1
000000000000558b         and        edx, 0x1
000000000000558e         shl        edx, cl
0000000000005590         xor        edx, esi
0000000000005592         mov        dword [rdi], edx
0000000000005594         ret
                        ; endp
0000000000005595         align      32                                          ; End of unwind block (FDE at 0x89c8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
00000000000055a0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x89dc), default_quoting_options
00000000000055a7         test       rdi, rdi
00000000000055aa         cmove      rdi, rax
00000000000055ae         mov        eax, dword [rdi+4]
00000000000055b1         mov        dword [rdi+4], esi
00000000000055b4         ret
                        ; endp
00000000000055b5         align      64                                          ; End of unwind block (FDE at 0x89dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
00000000000055c0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x89f0), default_quoting_options
00000000000055c7         test       rdi, rdi
00000000000055ca         cmove      rdi, rax
00000000000055ce         test       rsi, rsi
00000000000055d1         mov        dword [rdi], 0xa
00000000000055d7         je         loc_55e7

00000000000055d9         test       rdx, rdx
00000000000055dc         je         loc_55e7

00000000000055de         mov        qword [rdi+0x28], rsi
00000000000055e2         mov        qword [rdi+0x30], rdx
00000000000055e6         ret
                        ; endp

                     loc_55e7:
00000000000055e7         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
00000000000055eb         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
00000000000055f0         push       r15                                         ; End of unwind block (FDE at 0x89f0), Begin of unwind block (FDE at 0x8a04)
00000000000055f2         push       r14
00000000000055f4         lea        rax, qword [default_quoting_options]        ; default_quoting_options
00000000000055fb         push       r13
00000000000055fd         push       r12
00000000000055ff         mov        r13, rdi
0000000000005602         push       rbp
0000000000005603         push       rbx
0000000000005604         mov        rbx, r8
0000000000005607         mov        r14, rsi
000000000000560a         mov        r15, rdx
000000000000560d         sub        rsp, 0x18
0000000000005611         test       r8, r8
0000000000005614         cmove      rbx, rax
0000000000005618         mov        qword [rsp+0x48+var_40], rcx
000000000000561d         call       j___errno_location                          ; __errno_location
0000000000005622         mov        r12d, dword [rax]
0000000000005625         mov        rbp, rax
0000000000005628         lea        rax, qword [rbx+8]
000000000000562c         sub        rsp, 0x8
0000000000005630         mov        r9d, dword [rbx+4]
0000000000005634         push       qword [rbx+0x30]
0000000000005637         mov        r8d, dword [rbx]
000000000000563a         push       qword [rbx+0x28]
000000000000563d         mov        rdx, r15
0000000000005640         push       rax
0000000000005641         mov        rcx, qword [rsp+0x68+var_40]
0000000000005646         mov        rsi, r14
0000000000005649         mov        rdi, r13
000000000000564c         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000005651         mov        dword [rbp], r12d
0000000000005655         add        rsp, 0x38
0000000000005659         pop        rbx
000000000000565a         pop        rbp
000000000000565b         pop        r12
000000000000565d         pop        r13
000000000000565f         pop        r14
0000000000005661         pop        r15
0000000000005663         ret
                        ; endp
0000000000005664         align      16                                          ; End of unwind block (FDE at 0x8a04)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
0000000000005670         push       r15                                         ; Begin of unwind block (FDE at 0x8a58), CODE XREF=quotearg_alloc+5
0000000000005672         push       r14
0000000000005674         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000567b         push       r13
000000000000567d         push       r12
000000000000567f         mov        r12, rdx
0000000000005682         push       rbp
0000000000005683         push       rbx
0000000000005684         mov        rbx, rcx
0000000000005687         mov        r14, rdi
000000000000568a         mov        r15, rsi
000000000000568d         sub        rsp, 0x38
0000000000005691         test       rcx, rcx
0000000000005694         cmove      rbx, rax
0000000000005698         xor        ebp, ebp
000000000000569a         call       j___errno_location                          ; __errno_location
000000000000569f         test       r12, r12
00000000000056a2         mov        r13, rax
00000000000056a5         mov        eax, dword [rax]
00000000000056a7         sete       bpl
00000000000056ab         or         ebp, dword [rbx+4]
00000000000056ae         lea        r10, qword [rbx+8]
00000000000056b2         sub        rsp, 0x8
00000000000056b6         mov        r8d, dword [rbx]
00000000000056b9         mov        rcx, r15
00000000000056bc         mov        dword [rsp+0x70+var_5C], eax
00000000000056c0         push       qword [rbx+0x30]
00000000000056c3         mov        rdx, r14
00000000000056c6         push       qword [rbx+0x28]
00000000000056c9         push       r10
00000000000056cb         xor        esi, esi
00000000000056cd         mov        r9d, ebp
00000000000056d0         xor        edi, edi
00000000000056d2         mov        qword [rsp+0x88+var_48], r10
00000000000056d7         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000056dc         lea        rsi, qword [rax+1]
00000000000056e0         mov        qword [rsp+0x88+var_40], rax
00000000000056e5         add        rsp, 0x20
00000000000056e9         mov        rdi, rsi
00000000000056ec         mov        qword [rsp+0x68+var_50], rsi
00000000000056f1         call       xmalloc                                     ; xmalloc
00000000000056f6         mov        qword [rsp+0x68+var_58], rax
00000000000056fb         sub        rsp, 0x8
00000000000056ff         push       qword [rbx+0x30]
0000000000005702         push       qword [rbx+0x28]
0000000000005705         mov        r10, qword [rsp+0x80+var_48]
000000000000570a         mov        r9d, ebp
000000000000570d         mov        r8d, dword [rbx]
0000000000005710         mov        rcx, r15
0000000000005713         mov        rdx, r14
0000000000005716         mov        rdi, rax
0000000000005719         push       r10
000000000000571b         mov        rsi, qword [rsp+0x88+var_50]
0000000000005720         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000005725         mov        eax, dword [rsp+0x88+var_5C]
0000000000005729         add        rsp, 0x20
000000000000572d         test       r12, r12
0000000000005730         mov        dword [r13], eax
0000000000005734         je         loc_573f

0000000000005736         mov        r11, qword [rsp+0x68+var_40]
000000000000573b         mov        qword [r12], r11

                     loc_573f:
000000000000573f         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
0000000000005744         add        rsp, 0x38
0000000000005748         pop        rbx
0000000000005749         pop        rbp
000000000000574a         pop        r12
000000000000574c         pop        r13
000000000000574e         pop        r14
0000000000005750         pop        r15
0000000000005752         ret
                        ; endp
0000000000005753         align      32                                          ; End of unwind block (FDE at 0x8a58)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
0000000000005760         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x8ac4)
0000000000005763         xor        edx, edx
0000000000005765         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
000000000000576a         align      16                                          ; End of unwind block (FDE at 0x8ac4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
0000000000005770         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0x8ad8), nslots
0000000000005776         push       r12
0000000000005778         mov        r12, qword [slotvec]                        ; slotvec
000000000000577f         push       rbp
0000000000005780         push       rbx
0000000000005781         cmp        eax, 0x1
0000000000005784         jle        loc_57b1

0000000000005786         sub        eax, 0x2
0000000000005789         lea        rbx, qword [r12+0x18]
000000000000578e         shl        rax, 0x4
0000000000005792         lea        rbp, qword [r12+rax+0x28]
0000000000005797         nop        word [rax+rax]

                     loc_57a0:
00000000000057a0         mov        rdi, qword [rbx]                            ; CODE XREF=quotearg_free+63
00000000000057a3         add        rbx, 0x10
00000000000057a7         call       sub_1dc0                                    ; sub_1dc0
00000000000057ac         cmp        rbx, rbp
00000000000057af         jne        loc_57a0

                     loc_57b1:
00000000000057b1         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
00000000000057b6         lea        rbx, qword [slot0]                          ; slot0
00000000000057bd         cmp        rdi, rbx
00000000000057c0         je         loc_57d9

00000000000057c2         call       sub_1dc0                                    ; sub_1dc0
00000000000057c7         mov        qword [slotvec0], 0x100                     ; slotvec0
00000000000057d2         mov        qword [slotvec0+8], rbx                     ; 0x20a078

                     loc_57d9:
00000000000057d9         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
00000000000057e0         cmp        r12, rbx
00000000000057e3         je         loc_57f4

00000000000057e5         mov        rdi, r12
00000000000057e8         call       sub_1dc0                                    ; sub_1dc0
00000000000057ed         mov        qword [slotvec], rbx                        ; slotvec

                     loc_57f4:
00000000000057f4         pop        rbx                                         ; CODE XREF=quotearg_free+115
00000000000057f5         mov        dword [nslots], 0x1                         ; nslots
00000000000057ff         pop        rbp
0000000000005800         pop        r12
0000000000005802         ret
                        ; endp
0000000000005803         align      16                                          ; End of unwind block (FDE at 0x8ad8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
0000000000005810         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8b04), default_quoting_options
0000000000005817         mov        rdx, 0xffffffffffffffff
000000000000581e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005823         align      16                                          ; End of unwind block (FDE at 0x8b04)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
0000000000005830         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8b18), default_quoting_options
0000000000005837         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
000000000000583c         align      64                                          ; End of unwind block (FDE at 0x8b18)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
0000000000005840         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8b2c), default_quoting_options
0000000000005847         mov        rsi, rdi
000000000000584a         mov        rdx, 0xffffffffffffffff
0000000000005851         xor        edi, edi
0000000000005853         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005858         align      32                                          ; End of unwind block (FDE at 0x8b2c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
0000000000005860         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x8b40), default_quoting_options
0000000000005867         mov        rdx, rsi
000000000000586a         mov        rsi, rdi
000000000000586d         xor        edi, edi
000000000000586f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005874         align      128                                         ; End of unwind block (FDE at 0x8b40)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
0000000000005880         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x8b54)
0000000000005884         mov        rax, rdx
0000000000005887         mov        rdx, qword [fs:0x28]
0000000000005890         mov        qword [rsp+0x48+var_10], rdx
0000000000005895         xor        edx, edx
0000000000005897         cmp        esi, 0xa
000000000000589a         je         loc_5904

000000000000589c         mov        dword [rsp+0x48+var_48], esi
000000000000589f         mov        rcx, rsp
00000000000058a2         mov        rdx, 0xffffffffffffffff
00000000000058a9         mov        rsi, rax
00000000000058ac         mov        qword [rsp+0x48+var_44], 0x0
00000000000058b5         mov        qword [rsp+0x48+var_3C], 0x0
00000000000058be         mov        qword [rsp+0x48+var_34], 0x0
00000000000058c7         mov        qword [rsp+0x48+var_2C], 0x0
00000000000058d0         mov        qword [rsp+0x48+var_24], 0x0
00000000000058d9         mov        qword [rsp+0x48+var_1C], 0x0
00000000000058e2         mov        dword [rsp+0x48+var_14], 0x0
00000000000058ea         call       quotearg_n_options                          ; quotearg_n_options
00000000000058ef         mov        rcx, qword [rsp+0x48+var_10]
00000000000058f4         xor        rcx, qword [fs:0x28]
00000000000058fd         jne        loc_5909

00000000000058ff         add        rsp, 0x48
0000000000005903         ret
                        ; endp

                     loc_5904:
0000000000005904         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_5909:
0000000000005909         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
000000000000590e         align      16                                          ; End of unwind block (FDE at 0x8b54)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
0000000000005910         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x8b70), CODE XREF=quotearg_style_mem+10
0000000000005914         mov        rax, rdx
0000000000005917         mov        rdx, rcx
000000000000591a         mov        rcx, qword [fs:0x28]
0000000000005923         mov        qword [rsp+0x48+var_10], rcx
0000000000005928         xor        ecx, ecx
000000000000592a         cmp        esi, 0xa
000000000000592d         je         loc_5990

000000000000592f         mov        dword [rsp+0x48+var_48], esi
0000000000005932         mov        rcx, rsp
0000000000005935         mov        rsi, rax
0000000000005938         mov        qword [rsp+0x48+var_44], 0x0
0000000000005941         mov        qword [rsp+0x48+var_3C], 0x0
000000000000594a         mov        qword [rsp+0x48+var_34], 0x0
0000000000005953         mov        qword [rsp+0x48+var_2C], 0x0
000000000000595c         mov        qword [rsp+0x48+var_24], 0x0
0000000000005965         mov        qword [rsp+0x48+var_1C], 0x0
000000000000596e         mov        dword [rsp+0x48+var_14], 0x0
0000000000005976         call       quotearg_n_options                          ; quotearg_n_options
000000000000597b         mov        rdx, qword [rsp+0x48+var_10]
0000000000005980         xor        rdx, qword [fs:0x28]
0000000000005989         jne        loc_5995

000000000000598b         add        rsp, 0x48
000000000000598f         ret
                        ; endp

                     loc_5990:
0000000000005990         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_5995:
0000000000005995         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
000000000000599a         align      32                                          ; End of unwind block (FDE at 0x8b70)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
00000000000059a0         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x8b8c), CODE XREF=main+1302, main+2115, main+2497, main+2602
00000000000059a3         mov        esi, edi
00000000000059a5         xor        edi, edi
00000000000059a7         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
00000000000059ac         align      16                                          ; End of unwind block (FDE at 0x8b8c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
00000000000059b0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x8ba0)
00000000000059b3         mov        rdx, rsi
00000000000059b6         mov        esi, edi
00000000000059b8         xor        edi, edi
00000000000059ba         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
00000000000059bf         align      64                                          ; End of unwind block (FDE at 0x8ba0)

                     quotearg_char_mem:
00000000000059c0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x8bb4), CODE XREF=quotearg_char+11
00000000000059c4         mov        ecx, edx
00000000000059c6         mov        rax, qword [fs:0x28]
00000000000059cf         mov        qword [rsp+0x48+var_10], rax
00000000000059d4         xor        eax, eax
00000000000059d6         mov        rax, qword [qword_20a290]                   ; qword_20a290
00000000000059dd         mov        r8, rsp
00000000000059e0         and        ecx, 0x1f
00000000000059e3         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
00000000000059eb         mov        qword [rsp+0x48+var_18], rax
00000000000059f0         mov        eax, edx
00000000000059f2         movaps     xmmword [rsp+0x48+var_48], xmm0
00000000000059f6         shr        al, 0x5
00000000000059f9         movzx      eax, al
00000000000059fc         lea        r9, qword [r8+rax*4+8]
0000000000005a01         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20a270
0000000000005a09         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000005a0e         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20a280
0000000000005a16         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000005a1b         mov        edx, dword [r9]
0000000000005a1e         mov        eax, edx
0000000000005a20         shr        eax, cl
0000000000005a22         not        eax
0000000000005a24         and        eax, 0x1
0000000000005a27         shl        eax, cl
0000000000005a29         mov        rcx, r8
0000000000005a2c         xor        eax, edx
0000000000005a2e         mov        rdx, rsi
0000000000005a31         mov        rsi, rdi
0000000000005a34         mov        dword [r9], eax
0000000000005a37         xor        edi, edi
0000000000005a39         call       quotearg_n_options                          ; quotearg_n_options
0000000000005a3e         mov        rsi, qword [rsp+0x48+var_10]
0000000000005a43         xor        rsi, qword [fs:0x28]
0000000000005a4c         jne        loc_5a53

0000000000005a4e         add        rsp, 0x48
0000000000005a52         ret
                        ; endp

                     loc_5a53:
0000000000005a53         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
0000000000005a58         align      32                                          ; End of unwind block (FDE at 0x8bb4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
0000000000005a60         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0x8bd0)
0000000000005a64         mov        rsi, 0xffffffffffffffff
0000000000005a6b         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
0000000000005a70         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0x8bd0), Begin of unwind block (FDE at 0x8be4), CODE XREF=close_stdout+101
0000000000005a75         mov        rsi, 0xffffffffffffffff
0000000000005a7c         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000005a81         align      16                                          ; End of unwind block (FDE at 0x8be4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
0000000000005a90         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0x8bf8)
0000000000005a95         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000005a9a         align      32                                          ; End of unwind block (FDE at 0x8bf8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
0000000000005aa0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x8c0c), CODE XREF=main+1256, main+1399, main+1846, write_counts+150, wc+1194, wc+2455, wc+2575, wc+2636
0000000000005aa4         mov        rax, rdx
0000000000005aa7         mov        rdx, qword [fs:0x28]
0000000000005ab0         mov        qword [rsp+0x48+var_10], rdx
0000000000005ab5         xor        edx, edx
0000000000005ab7         cmp        esi, 0xa
0000000000005aba         je         loc_5b24

0000000000005abc         mov        dword [rsp+0x48+var_48], esi
0000000000005abf         mov        rcx, rsp
0000000000005ac2         mov        rdx, 0xffffffffffffffff
0000000000005ac9         mov        rsi, rax
0000000000005acc         mov        qword [rsp+0x48+var_44], 0x0
0000000000005ad5         mov        qword [rsp+0x48+var_3C], 0x4000000
0000000000005ade         mov        qword [rsp+0x48+var_34], 0x0
0000000000005ae7         mov        qword [rsp+0x48+var_2C], 0x0
0000000000005af0         mov        qword [rsp+0x48+var_24], 0x0
0000000000005af9         mov        qword [rsp+0x48+var_1C], 0x0
0000000000005b02         mov        dword [rsp+0x48+var_14], 0x0
0000000000005b0a         call       quotearg_n_options                          ; quotearg_n_options
0000000000005b0f         mov        rcx, qword [rsp+0x48+var_10]
0000000000005b14         xor        rcx, qword [fs:0x28]
0000000000005b1d         jne        loc_5b29

0000000000005b1f         add        rsp, 0x48
0000000000005b23         ret
                        ; endp

                     loc_5b24:
0000000000005b24         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_5b29:
0000000000005b29         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
0000000000005b2e         align      16                                          ; End of unwind block (FDE at 0x8c0c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom_mem:
0000000000005b30         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x8c28), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
0000000000005b34         mov        r9, rcx
0000000000005b37         mov        rcx, qword [qword_20a290]                   ; qword_20a290
0000000000005b3e         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
0000000000005b46         mov        rax, qword [fs:0x28]
0000000000005b4f         mov        qword [rsp+0x48+var_10], rax
0000000000005b54         xor        eax, eax
0000000000005b56         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000005b5a         test       rsi, rsi
0000000000005b5d         mov        qword [rsp+0x48+var_18], rcx
0000000000005b62         mov        dword [rsp+0x48+var_48], 0xa
0000000000005b69         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x20a270
0000000000005b71         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000005b76         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x20a280
0000000000005b7e         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000005b83         je         loc_5bb7

0000000000005b85         test       rdx, rdx
0000000000005b88         je         loc_5bb7

0000000000005b8a         mov        qword [rsp+0x48+var_20], rsi
0000000000005b8f         mov        qword [rsp+0x48+var_18], rdx
0000000000005b94         mov        rcx, rsp
0000000000005b97         mov        rdx, r8
0000000000005b9a         mov        rsi, r9
0000000000005b9d         call       quotearg_n_options                          ; quotearg_n_options
0000000000005ba2         mov        rdi, qword [rsp+0x48+var_10]
0000000000005ba7         xor        rdi, qword [fs:0x28]
0000000000005bb0         jne        loc_5bbc

0000000000005bb2         add        rsp, 0x48
0000000000005bb6         ret
                        ; endp

                     loc_5bb7:
0000000000005bb7         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_5bbc:
0000000000005bbc         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
0000000000005bc1         align      16                                          ; End of unwind block (FDE at 0x8c28)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_custom:
0000000000005bd0         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0x8c44)
0000000000005bd7         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000005bdc         align      32                                          ; End of unwind block (FDE at 0x8c44)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
0000000000005be0         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x8c58)
0000000000005be3         mov        r8, 0xffffffffffffffff
0000000000005bea         mov        rdx, rsi
0000000000005bed         mov        rsi, rdi
0000000000005bf0         xor        edi, edi
0000000000005bf2         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000005bf7         align      1024                                        ; End of unwind block (FDE at 0x8c58)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
0000000000005c00         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0x8c6c)
0000000000005c03         mov        rcx, rdx
0000000000005c06         mov        rdx, rsi
0000000000005c09         mov        rsi, rdi
0000000000005c0c         xor        edi, edi
0000000000005c0e         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000005c13         align      32                                          ; End of unwind block (FDE at 0x8c6c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
0000000000005c20         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x8c80), quote_quoting_options
0000000000005c27         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005c2c         align      16                                          ; End of unwind block (FDE at 0x8c80)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
0000000000005c30         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x8c94), quote_quoting_options
0000000000005c37         mov        rdx, rsi
0000000000005c3a         mov        rsi, rdi
0000000000005c3d         xor        edi, edi
0000000000005c3f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005c44         align      16                                          ; End of unwind block (FDE at 0x8c94)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
0000000000005c50         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x8ca8), quote_quoting_options
0000000000005c57         mov        rdx, 0xffffffffffffffff
0000000000005c5e         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005c63         align      16                                          ; End of unwind block (FDE at 0x8ca8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
0000000000005c70         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x8cbc), quote_quoting_options
0000000000005c77         mov        rsi, rdi
0000000000005c7a         mov        rdx, 0xffffffffffffffff
0000000000005c81         xor        edi, edi
0000000000005c83         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000005c88         align      16                                          ; End of unwind block (FDE at 0x8cbc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     save_token:
0000000000005c90         push       r12                                         ; Begin of unwind block (FDE at 0x8cd4), CODE XREF=readtokens0+103, readtokens0+162
0000000000005c92         push       rbp
0000000000005c93         push       rbx
0000000000005c94         mov        rdx, qword [rdi+0x30]
0000000000005c98         mov        rbx, rdi
0000000000005c9b         mov        r12, qword [rdi+0x28]
0000000000005c9f         mov        rbp, rdx
0000000000005ca2         sub        rbp, r12
0000000000005ca5         sub        rbp, 0x1
0000000000005ca9         cmp        rdx, r12
0000000000005cac         je         loc_5d70

                     loc_5cb2:
0000000000005cb2         mov        rcx, qword [rbx+0x48]                       ; CODE XREF=save_token+228
0000000000005cb6         lea        rax, qword [rdx+rcx]
0000000000005cba         not        rcx
0000000000005cbd         mov        rdx, qword [rbx+0x38]
0000000000005cc1         and        rax, rcx
0000000000005cc4         mov        rcx, qword [rbx+0x20]
0000000000005cc8         mov        rsi, rax
0000000000005ccb         mov        rdi, rdx
0000000000005cce         mov        qword [rbx+0x30], rax
0000000000005cd2         sub        rsi, rcx
0000000000005cd5         sub        rdi, rcx
0000000000005cd8         cmp        rsi, rdi
0000000000005cdb         jbe        loc_5ce4

0000000000005cdd         mov        qword [rbx+0x30], rdx
0000000000005ce1         mov        rax, rdx

                     loc_5ce4:
0000000000005ce4         mov        qword [rbx+0x28], rax                       ; CODE XREF=save_token+75
0000000000005ce8         mov        rdx, qword [rbx+0x88]
0000000000005cef         mov        rax, qword [rbx+0x90]
0000000000005cf6         sub        rax, rdx
0000000000005cf9         cmp        rax, 0x7
0000000000005cfd         jbe        loc_5d50

                     loc_5cff:
0000000000005cff         mov        qword [rdx], r12                            ; CODE XREF=save_token+213
0000000000005d02         mov        rdx, qword [rbx+0xe0]
0000000000005d09         mov        rax, qword [rbx+0xe8]
0000000000005d10         add        qword [rbx+0x88], 0x8
0000000000005d18         sub        rax, rdx
0000000000005d1b         cmp        rax, 0x7
0000000000005d1f         ja         loc_5d39

0000000000005d21         lea        rdi, qword [rbx+0xc8]                       ; argument #1 for method _obstack_newchunk
0000000000005d28         mov        esi, 0x8                                    ; argument #2 for method _obstack_newchunk
0000000000005d2d         call       _obstack_newchunk                           ; _obstack_newchunk
0000000000005d32         mov        rdx, qword [rbx+0xe0]

                     loc_5d39:
0000000000005d39         mov        qword [rdx], rbp                            ; CODE XREF=save_token+143
0000000000005d3c         add        qword [rbx+0xe0], 0x8
0000000000005d44         add        qword [rbx], 0x1
0000000000005d48         pop        rbx
0000000000005d49         pop        rbp
0000000000005d4a         pop        r12
0000000000005d4c         ret
                        ; endp
0000000000005d4d         align      16

                     loc_5d50:
0000000000005d50         lea        rdi, qword [rbx+0x70]                       ; argument #1 for method _obstack_newchunk, CODE XREF=save_token+109
0000000000005d54         mov        esi, 0x8                                    ; argument #2 for method _obstack_newchunk
0000000000005d59         call       _obstack_newchunk                           ; _obstack_newchunk
0000000000005d5e         mov        rdx, qword [rbx+0x88]
0000000000005d65         jmp        loc_5cff
0000000000005d67         align      16

                     loc_5d70:
0000000000005d70         or         byte [rdi+0x68], 0x2                        ; CODE XREF=save_token+28
0000000000005d74         jmp        loc_5cb2
0000000000005d79         align      128                                         ; End of unwind block (FDE at 0x8cd4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     readtokens0_init:
0000000000005d80         push       r12                                         ; Begin of unwind block (FDE at 0x8d04), CODE XREF=main+2391
0000000000005d82         mov        r12, qword [qword_209fb8]                   ; qword_209fb8
0000000000005d89         xor        edx, edx                                    ; argument #3 for method _obstack_begin
0000000000005d8b         push       rbp
0000000000005d8c         mov        rbp, qword [qword_209fd8]                   ; qword_209fd8
0000000000005d93         xor        esi, esi                                    ; argument #2 for method _obstack_begin
0000000000005d95         push       rbx
0000000000005d96         mov        rbx, rdi
0000000000005d99         mov        qword [rdi], 0x0
0000000000005da0         mov        qword [rdi+8], 0x0
0000000000005da8         mov        qword [rdi+0x10], 0x0
0000000000005db0         lea        rdi, qword [rdi+0x18]                       ; argument #1 for method _obstack_begin
0000000000005db4         mov        r8, r12                                     ; argument #5 for method _obstack_begin
0000000000005db7         mov        rcx, rbp                                    ; argument #4 for method _obstack_begin
0000000000005dba         call       _obstack_begin                              ; _obstack_begin
0000000000005dbf         lea        rdi, qword [rbx+0x70]                       ; argument #1 for method _obstack_begin
0000000000005dc3         mov        r8, r12                                     ; argument #5 for method _obstack_begin
0000000000005dc6         mov        rcx, rbp                                    ; argument #4 for method _obstack_begin
0000000000005dc9         xor        edx, edx                                    ; argument #3 for method _obstack_begin
0000000000005dcb         xor        esi, esi                                    ; argument #2 for method _obstack_begin
0000000000005dcd         call       _obstack_begin                              ; _obstack_begin
0000000000005dd2         lea        rdi, qword [rbx+0xc8]
0000000000005dd9         mov        r8, r12
0000000000005ddc         mov        rcx, rbp
0000000000005ddf         pop        rbx
0000000000005de0         pop        rbp
0000000000005de1         pop        r12
0000000000005de3         xor        edx, edx
0000000000005de5         xor        esi, esi
0000000000005de7         jmp        _obstack_begin                              ; _obstack_begin
                        ; endp
0000000000005dec         align      16                                          ; End of unwind block (FDE at 0x8d04)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     readtokens0_free:
0000000000005df0         push       rbx                                         ; Begin of unwind block (FDE at 0x8d30), CODE XREF=main+2070
0000000000005df1         mov        rbx, rdi
0000000000005df4         lea        rdi, qword [rdi+0x18]                       ; argument #1 for method _obstack_free
0000000000005df8         xor        esi, esi                                    ; argument #2 for method _obstack_free
0000000000005dfa         call       _obstack_free                               ; _obstack_free
0000000000005dff         lea        rdi, qword [rbx+0x70]                       ; argument #1 for method _obstack_free
0000000000005e03         xor        esi, esi                                    ; argument #2 for method _obstack_free
0000000000005e05         call       _obstack_free                               ; _obstack_free
0000000000005e0a         lea        rdi, qword [rbx+0xc8]                       ; argument #1 for method _obstack_free
0000000000005e11         xor        esi, esi                                    ; argument #2 for method _obstack_free
0000000000005e13         pop        rbx
0000000000005e14         jmp        _obstack_free                               ; _obstack_free
                        ; endp
0000000000005e19         align      32                                          ; End of unwind block (FDE at 0x8d30)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_1C: int32_t, -28


                     readtokens0:
0000000000005e20         push       r12                                         ; Begin of unwind block (FDE at 0x8d4c), CODE XREF=main+2402
0000000000005e22         push       rbp
0000000000005e23         lea        r12, qword [rsi+0x18]
0000000000005e27         push       rbx
0000000000005e28         mov        rbp, rdi
0000000000005e2b         mov        rbx, rsi
0000000000005e2e         sub        rsp, 0x10
0000000000005e32         jmp        loc_5e46
0000000000005e34         align      8

                     loc_5e38:
0000000000005e38         lea        rcx, qword [rdx+1]                          ; CODE XREF=readtokens0+59
0000000000005e3c         test       eax, eax
0000000000005e3e         mov        qword [rbx+0x30], rcx
0000000000005e42         mov        byte [rdx], al
0000000000005e44         je         loc_5e84

                     loc_5e46:
0000000000005e46         mov        rdi, rbp                                    ; argument "__stream" for method j_fgetc, CODE XREF=readtokens0+18, readtokens0+98
0000000000005e49         call       j_fgetc                                     ; fgetc
0000000000005e4e         cmp        eax, 0xffffffff
0000000000005e51         je         loc_5ea0

                     loc_5e53:
0000000000005e53         mov        rdx, qword [rbx+0x30]                       ; CODE XREF=readtokens0+119
0000000000005e57         cmp        qword [rbx+0x38], rdx
0000000000005e5b         jne        loc_5e38

0000000000005e5d         mov        esi, 0x1                                    ; argument #2 for method _obstack_newchunk
0000000000005e62         mov        rdi, r12                                    ; argument #1 for method _obstack_newchunk
0000000000005e65         mov        dword [rsp+0x28+var_1C], eax
0000000000005e69         call       _obstack_newchunk                           ; _obstack_newchunk
0000000000005e6e         mov        rdx, qword [rbx+0x30]
0000000000005e72         mov        eax, dword [rsp+0x28+var_1C]
0000000000005e76         lea        rcx, qword [rdx+1]
0000000000005e7a         test       eax, eax
0000000000005e7c         mov        qword [rbx+0x30], rcx
0000000000005e80         mov        byte [rdx], al
0000000000005e82         jne        loc_5e46

                     loc_5e84:
0000000000005e84         mov        rdi, rbx                                    ; CODE XREF=readtokens0+36
0000000000005e87         call       save_token                                  ; save_token
0000000000005e8c         mov        rdi, rbp                                    ; argument "__stream" for method j_fgetc
0000000000005e8f         call       j_fgetc                                     ; fgetc
0000000000005e94         cmp        eax, 0xffffffff
0000000000005e97         jne        loc_5e53

0000000000005e99         nop        dword [rax]

                     loc_5ea0:
0000000000005ea0         mov        rax, qword [rbx+0x30]                       ; CODE XREF=readtokens0+49
0000000000005ea4         cmp        qword [rbx+0x28], rax
0000000000005ea8         je         loc_5ec7

0000000000005eaa         cmp        qword [rbx+0x38], rax
0000000000005eae         je         loc_6010

                     loc_5eb4:
0000000000005eb4         lea        rdx, qword [rax+1]                          ; CODE XREF=readtokens0+514
0000000000005eb8         mov        rdi, rbx
0000000000005ebb         mov        qword [rbx+0x30], rdx
0000000000005ebf         mov        byte [rax], 0x0
0000000000005ec2         call       save_token                                  ; save_token

                     loc_5ec7:
0000000000005ec7         mov        rdx, qword [rbx+0x88]                       ; CODE XREF=readtokens0+136
0000000000005ece         mov        rax, qword [rbx+0x90]
0000000000005ed5         sub        rax, rdx
0000000000005ed8         cmp        rax, 0x7
0000000000005edc         jbe        loc_5fd0

                     loc_5ee2:
0000000000005ee2         mov        qword [rdx], 0x0                            ; CODE XREF=readtokens0+453
0000000000005ee9         mov        rax, qword [rbx+0x88]
0000000000005ef0         mov        rsi, qword [rbx+0x80]
0000000000005ef7         lea        rdx, qword [rax+8]
0000000000005efb         cmp        rdx, rsi
0000000000005efe         mov        qword [rbx+0x88], rdx
0000000000005f05         je         loc_6000

                     loc_5f0b:
0000000000005f0b         mov        rcx, qword [rbx+0xa0]                       ; CODE XREF=readtokens0+487
0000000000005f12         lea        rax, qword [rdx+rcx]
0000000000005f16         not        rcx
0000000000005f19         mov        rdx, qword [rbx+0x78]
0000000000005f1d         and        rax, rcx
0000000000005f20         mov        rcx, qword [rbx+0x90]
0000000000005f27         mov        rdi, rax
0000000000005f2a         mov        qword [rbx+0x88], rax
0000000000005f31         sub        rdi, rdx
0000000000005f34         mov        r8, rcx
0000000000005f37         sub        r8, rdx
0000000000005f3a         cmp        rdi, r8
0000000000005f3d         jbe        loc_5f49

0000000000005f3f         mov        qword [rbx+0x88], rcx
0000000000005f46         mov        rax, rcx

                     loc_5f49:
0000000000005f49         mov        qword [rbx+8], rsi                          ; CODE XREF=readtokens0+285
0000000000005f4d         mov        rdx, qword [rbx+0xe0]
0000000000005f54         mov        rsi, qword [rbx+0xd8]
0000000000005f5b         mov        qword [rbx+0x80], rax
0000000000005f62         cmp        rdx, rsi
0000000000005f65         je         loc_5ff0

                     loc_5f6b:
0000000000005f6b         mov        rcx, qword [rbx+0xf8]                       ; CODE XREF=readtokens0+471
0000000000005f72         lea        rax, qword [rdx+rcx]
0000000000005f76         not        rcx
0000000000005f79         mov        rdx, qword [rbx+0xe8]
0000000000005f80         and        rax, rcx
0000000000005f83         mov        rcx, qword [rbx+0xd0]
0000000000005f8a         mov        rdi, rax
0000000000005f8d         mov        r9, rdx
0000000000005f90         mov        qword [rbx+0xe0], rax
0000000000005f97         sub        rdi, rcx
0000000000005f9a         sub        r9, rcx
0000000000005f9d         cmp        rdi, r9
0000000000005fa0         jbe        loc_5fac

0000000000005fa2         mov        qword [rbx+0xe0], rdx
0000000000005fa9         mov        rax, rdx

                     loc_5fac:
0000000000005fac         mov        qword [rbx+0xd8], rax                       ; CODE XREF=readtokens0+384
0000000000005fb3         mov        qword [rbx+0x10], rsi
0000000000005fb7         mov        rdi, rbp                                    ; argument "__stream" for method j_ferror
0000000000005fba         call       j_ferror                                    ; ferror
0000000000005fbf         test       eax, eax
0000000000005fc1         sete       al
0000000000005fc4         add        rsp, 0x10
0000000000005fc8         pop        rbx
0000000000005fc9         pop        rbp
0000000000005fca         pop        r12
0000000000005fcc         ret
                        ; endp
0000000000005fcd         align      16

                     loc_5fd0:
0000000000005fd0         lea        rdi, qword [rbx+0x70]                       ; argument #1 for method _obstack_newchunk, CODE XREF=readtokens0+188
0000000000005fd4         mov        esi, 0x8                                    ; argument #2 for method _obstack_newchunk
0000000000005fd9         call       _obstack_newchunk                           ; _obstack_newchunk
0000000000005fde         mov        rdx, qword [rbx+0x88]
0000000000005fe5         jmp        loc_5ee2
0000000000005fea         align      16

                     loc_5ff0:
0000000000005ff0         or         byte [rbx+0x118], 0x2                       ; CODE XREF=readtokens0+325
0000000000005ff7         jmp        loc_5f6b
0000000000005ffc         align      8192

                     loc_6000:
0000000000006000         or         byte [rbx+0xc0], 0x2                        ; CODE XREF=readtokens0+229
0000000000006007         jmp        loc_5f0b
000000000000600c         align      16

                     loc_6010:
0000000000006010         lea        rdi, qword [rbx+0x18]                       ; argument #1 for method _obstack_newchunk, CODE XREF=readtokens0+142
0000000000006014         mov        esi, 0x1                                    ; argument #2 for method _obstack_newchunk
0000000000006019         call       _obstack_newchunk                           ; _obstack_newchunk
000000000000601e         mov        rax, qword [rbx+0x30]
0000000000006022         jmp        loc_5eb4
0000000000006027         align      16                                          ; End of unwind block (FDE at 0x8d4c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     safe_read:
0000000000006030         push       r13                                         ; Begin of unwind block (FDE at 0x8d84), CODE XREF=wc+521, wc+780, wc+1518, wc+1895
0000000000006032         push       r12
0000000000006034         mov        r13d, edi
0000000000006037         push       rbp
0000000000006038         push       rbx
0000000000006039         mov        r12, rsi
000000000000603c         mov        rbx, rdx
000000000000603f         sub        rsp, 0x8
0000000000006043         nop        dword [rax+rax]

                     loc_6048:
0000000000006048         mov        rdx, rbx                                    ; argument "__nbytes" for method j_read, CODE XREF=safe_read+56, safe_read+77
000000000000604b         mov        rsi, r12                                    ; argument "__buf" for method j_read
000000000000604e         mov        edi, r13d                                   ; argument "__fd" for method j_read
0000000000006051         call       j_read                                      ; read
0000000000006056         test       rax, rax
0000000000006059         mov        rbp, rax
000000000000605c         jns        loc_6080

000000000000605e         call       j___errno_location                          ; __errno_location
0000000000006063         mov        eax, dword [rax]
0000000000006065         cmp        eax, 0x4
0000000000006068         je         loc_6048

000000000000606a         cmp        rbx, 0x7ff00000
0000000000006071         jbe        loc_6080

0000000000006073         cmp        eax, 0x16
0000000000006076         jne        loc_6080

0000000000006078         mov        ebx, 0x7ff00000
000000000000607d         jmp        loc_6048
000000000000607f         align      128

                     loc_6080:
0000000000006080         add        rsp, 0x8                                    ; CODE XREF=safe_read+44, safe_read+65, safe_read+70
0000000000006084         mov        rax, rbp
0000000000006087         pop        rbx
0000000000006088         pop        rbp
0000000000006089         pop        r12
000000000000608b         pop        r13
000000000000608d         ret
                        ; endp
000000000000608e         align      16                                          ; End of unwind block (FDE at 0x8d84)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
0000000000006090         push       r15                                         ; Begin of unwind block (FDE at 0x8dbc), CODE XREF=j_version_etc_arn, version_etc_va+75, version_etc+161
0000000000006092         push       r14
0000000000006094         push       r13
0000000000006096         push       r12
0000000000006098         mov        r12, r9
000000000000609b         push       rbp
000000000000609c         push       rbx
000000000000609d         mov        rbp, rdi
00000000000060a0         mov        rbx, r8
00000000000060a3         sub        rsp, 0x28
00000000000060a7         test       rsi, rsi
00000000000060aa         je         loc_61c8

00000000000060b0         mov        r8, rdx
00000000000060b3         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
00000000000060ba         mov        r9, rcx
00000000000060bd         xor        eax, eax
00000000000060bf         mov        rcx, rsi
00000000000060c2         mov        esi, 0x1
00000000000060c7         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_60cc:
00000000000060cc         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0x7dfb, CODE XREF=version_etc_arn+337
00000000000060d3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000060d5         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000060da         call       j_dcgettext                                 ; dcgettext
00000000000060df         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
00000000000060e6         mov        rcx, rax
00000000000060e9         mov        r8d, 0x7e3
00000000000060ef         mov        esi, 0x1
00000000000060f4         mov        rdi, rbp
00000000000060f7         xor        eax, eax
00000000000060f9         call       j___fprintf_chk                             ; __fprintf_chk
00000000000060fe         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
0000000000006105         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006107         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000610c         call       j_dcgettext                                 ; dcgettext
0000000000006111         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
0000000000006114         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000006117         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000611c         cmp        r12, 0x9
0000000000006120         ja         loc_6460

0000000000006126         lea        rdx, qword [switch_table_80e8]              ; switch_table_80e8
000000000000612d         movsxd     rax, dword [rdx+r12*4]
0000000000006131         add        rax, rdx
0000000000006134         jmp        rax                                         ; switch statement using table at 0x80e8, with 10 cases, 0x6140,0x61b6,0x61f0,0x6248,0x6288,0x62d0,0x6320,0x6378,0x63a8,0x6410
0000000000006136         align      64

                     loc_6140:
0000000000006140         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
0000000000006144         mov        rax, qword [rbx+0x10]
0000000000006148         lea        rsi, qword [aWrittenBySSSns_7fc8+48]        ; argument "msgid" for method j_dcgettext, 0x7ff8
000000000000614f         mov        r8, qword [rbx+8]
0000000000006153         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006158         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000615a         mov        r13, qword [rbx+0x30]
000000000000615e         mov        r12, qword [rbx+0x28]
0000000000006162         mov        qword [rsp+0x58+var_48], r9
0000000000006167         mov        r15, qword [rbx+0x20]
000000000000616b         mov        r14, qword [rbx+0x18]
000000000000616f         mov        qword [rsp+0x58+var_58], rax
0000000000006173         mov        qword [rsp+0x58+var_50], r8
0000000000006178         mov        rbx, qword [rbx]
000000000000617b         call       j_dcgettext                                 ; dcgettext
0000000000006180         sub        rsp, 0x8

                     loc_6184:
0000000000006184         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
0000000000006189         mov        rdx, rax
000000000000618c         mov        rcx, rbx
000000000000618f         mov        esi, 0x1
0000000000006194         mov        rdi, rbp
0000000000006197         xor        eax, eax
0000000000006199         push       r9
000000000000619b         push       r13
000000000000619d         push       r12
000000000000619f         push       r15
00000000000061a1         push       r14
00000000000061a3         mov        r9, qword [rsp+0x88+var_58]
00000000000061a8         mov        r8, qword [rsp+0x88+var_50]
00000000000061ad         call       j___fprintf_chk                             ; __fprintf_chk
00000000000061b2         add        rsp, 0x30

                     loc_61b6:
00000000000061b6         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
00000000000061ba         pop        rbx
00000000000061bb         pop        rbp
00000000000061bc         pop        r12
00000000000061be         pop        r13
00000000000061c0         pop        r14
00000000000061c2         pop        r15
00000000000061c4         ret
                        ; endp
00000000000061c5         align      8

                     loc_61c8:
00000000000061c8         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
00000000000061cb         mov        rcx, rdx
00000000000061ce         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
00000000000061d5         mov        esi, 0x1
00000000000061da         xor        eax, eax
00000000000061dc         call       j___fprintf_chk                             ; __fprintf_chk
00000000000061e1         jmp        loc_60cc
00000000000061e6         align      16

                     loc_61f0:
00000000000061f0         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
00000000000061f4         mov        r9, qword [rbx+0x38]
00000000000061f8         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
00000000000061ff         mov        rax, qword [rbx+0x10]
0000000000006203         mov        r8, qword [rbx+8]
0000000000006207         mov        edx, 0x5
000000000000620c         mov        r13, qword [rbx+0x30]
0000000000006210         mov        r12, qword [rbx+0x28]
0000000000006214         mov        r15, qword [rbx+0x20]
0000000000006218         mov        r14, qword [rbx+0x18]
000000000000621c         mov        rbx, qword [rbx]
000000000000621f         mov        qword [rsp+0x58+var_40], r10
0000000000006224         mov        qword [rsp+0x58+var_48], r9
0000000000006229         mov        qword [rsp+0x58+var_58], rax
000000000000622d         mov        qword [rsp+0x58+var_50], r8

                     loc_6232:
0000000000006232         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
0000000000006234         call       j_dcgettext                                 ; dcgettext
0000000000006239         mov        r10, qword [rsp+0x58+var_40]
000000000000623e         push       r10
0000000000006240         jmp        loc_6184
0000000000006245         align      8

                     loc_6248:
0000000000006248         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
000000000000624b         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
0000000000006252         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006257         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006259         call       j_dcgettext                                 ; dcgettext
000000000000625e         add        rsp, 0x28
0000000000006262         mov        rcx, rbx
0000000000006265         mov        rdi, rbp
0000000000006268         pop        rbx
0000000000006269         pop        rbp
000000000000626a         pop        r12
000000000000626c         pop        r13
000000000000626e         pop        r14
0000000000006270         pop        r15
0000000000006272         mov        rdx, rax
0000000000006275         mov        esi, 0x1
000000000000627a         xor        eax, eax
000000000000627c         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000006281         align      8

                     loc_6288:
0000000000006288         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
000000000000628c         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
0000000000006293         mov        rbx, qword [rbx]
0000000000006296         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000629b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000629d         call       j_dcgettext                                 ; dcgettext
00000000000062a2         add        rsp, 0x28
00000000000062a6         mov        r8, r12
00000000000062a9         mov        rcx, rbx
00000000000062ac         mov        rdi, rbp
00000000000062af         mov        rdx, rax
00000000000062b2         mov        esi, 0x1
00000000000062b7         pop        rbx
00000000000062b8         pop        rbp
00000000000062b9         pop        r12
00000000000062bb         pop        r13
00000000000062bd         pop        r14
00000000000062bf         pop        r15
00000000000062c1         xor        eax, eax
00000000000062c3         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
00000000000062c8         align      16

                     loc_62d0:
00000000000062d0         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
00000000000062d4         mov        r12, qword [rbx+8]
00000000000062d8         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
00000000000062df         mov        rbx, qword [rbx]
00000000000062e2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000062e7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000062e9         call       j_dcgettext                                 ; dcgettext
00000000000062ee         add        rsp, 0x28
00000000000062f2         mov        r9, r13
00000000000062f5         mov        r8, r12
00000000000062f8         mov        rcx, rbx
00000000000062fb         mov        rdi, rbp
00000000000062fe         mov        rdx, rax
0000000000006301         pop        rbx
0000000000006302         pop        rbp
0000000000006303         pop        r12
0000000000006305         pop        r13
0000000000006307         pop        r14
0000000000006309         pop        r15
000000000000630b         mov        esi, 0x1
0000000000006310         xor        eax, eax
0000000000006312         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000006317         align      32

                     loc_6320:
0000000000006320         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
0000000000006327         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000632c         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000632e         mov        r14, qword [rbx+0x18]
0000000000006332         mov        r13, qword [rbx+0x10]
0000000000006336         mov        r12, qword [rbx+8]
000000000000633a         mov        rbx, qword [rbx]
000000000000633d         call       j_dcgettext                                 ; dcgettext
0000000000006342         sub        rsp, 0x8

                     loc_6346:
0000000000006346         push       r14                                         ; CODE XREF=version_etc_arn+784
0000000000006348         mov        rdx, rax
000000000000634b         mov        r9, r13
000000000000634e         mov        r8, r12
0000000000006351         mov        rcx, rbx
0000000000006354         mov        rdi, rbp
0000000000006357         mov        esi, 0x1
000000000000635c         xor        eax, eax
000000000000635e         call       j___fprintf_chk                             ; __fprintf_chk
0000000000006363         pop        rax
0000000000006364         pop        rdx
0000000000006365         add        rsp, 0x28
0000000000006369         pop        rbx
000000000000636a         pop        rbp
000000000000636b         pop        r12
000000000000636d         pop        r13
000000000000636f         pop        r14
0000000000006371         pop        r15
0000000000006373         ret
                        ; endp
0000000000006374         align      8

                     loc_6378:
0000000000006378         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
000000000000637c         lea        rsi, qword [aWrittenBySSSns_7f78]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
0000000000006383         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006388         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000638a         mov        r14, qword [rbx+0x18]
000000000000638e         mov        r13, qword [rbx+0x10]
0000000000006392         mov        r12, qword [rbx+8]
0000000000006396         mov        rbx, qword [rbx]
0000000000006399         call       j_dcgettext                                 ; dcgettext
000000000000639e         push       r15
00000000000063a0         jmp        loc_6346
00000000000063a2         align      8

                     loc_63a8:
00000000000063a8         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
00000000000063ac         mov        r12, qword [rbx+0x28]
00000000000063b0         lea        rsi, qword [aWrittenBySSSns_7fa0]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
00000000000063b7         mov        r15, qword [rbx+0x20]
00000000000063bb         mov        r14, qword [rbx+0x18]
00000000000063bf         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000063c4         mov        r13, qword [rbx+0x10]
00000000000063c8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000063ca         mov        rbx, qword [rbx]
00000000000063cd         mov        qword [rsp+0x58+var_58], r8
00000000000063d1         call       j_dcgettext                                 ; dcgettext
00000000000063d6         sub        rsp, 0x8
00000000000063da         mov        r9, r13
00000000000063dd         push       r12
00000000000063df         push       r15
00000000000063e1         push       r14

                     loc_63e3:
00000000000063e3         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
00000000000063e8         mov        rcx, rbx
00000000000063eb         mov        rdx, rax
00000000000063ee         mov        rdi, rbp
00000000000063f1         mov        esi, 0x1
00000000000063f6         xor        eax, eax
00000000000063f8         call       j___fprintf_chk                             ; __fprintf_chk
00000000000063fd         add        rsp, 0x20
0000000000006401         add        rsp, 0x28
0000000000006405         pop        rbx
0000000000006406         pop        rbp
0000000000006407         pop        r12
0000000000006409         pop        r13
000000000000640b         pop        r14
000000000000640d         pop        r15
000000000000640f         ret
                        ; endp

                     loc_6410:
0000000000006410         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
0000000000006414         mov        r13, qword [rbx+0x30]
0000000000006418         lea        rsi, qword [aWrittenBySSSns_7fc8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
000000000000641f         mov        r12, qword [rbx+0x28]
0000000000006423         mov        r15, qword [rbx+0x20]
0000000000006427         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000642c         mov        r14, qword [rbx+0x18]
0000000000006430         mov        r8, qword [rbx+8]
0000000000006434         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006436         mov        qword [rsp+0x58+var_50], r9
000000000000643b         mov        rbx, qword [rbx]
000000000000643e         mov        qword [rsp+0x58+var_58], r8
0000000000006442         call       j_dcgettext                                 ; dcgettext
0000000000006447         push       r13
0000000000006449         push       r12
000000000000644b         push       r15
000000000000644d         push       r14
000000000000644f         mov        r9, qword [rsp+0x78+var_50]
0000000000006454         jmp        loc_63e3
0000000000006456         align      32

                     loc_6460:
0000000000006460         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
0000000000006464         mov        r9, qword [rbx+0x38]
0000000000006468         mov        edx, 0x5
000000000000646d         mov        rax, qword [rbx+0x10]
0000000000006471         mov        r8, qword [rbx+8]
0000000000006475         lea        rsi, qword [aWrittenBySSSns_8060]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
000000000000647c         mov        r13, qword [rbx+0x30]
0000000000006480         mov        r12, qword [rbx+0x28]
0000000000006484         mov        r15, qword [rbx+0x20]
0000000000006488         mov        r14, qword [rbx+0x18]
000000000000648c         mov        qword [rsp+0x58+var_40], r10
0000000000006491         mov        qword [rsp+0x58+var_48], r9
0000000000006496         mov        qword [rsp+0x58+var_58], rax
000000000000649a         mov        qword [rsp+0x58+var_50], r8
000000000000649f         mov        rbx, qword [rbx]
00000000000064a2         jmp        loc_6232
00000000000064a7         align      16                                          ; End of unwind block (FDE at 0x8dbc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
00000000000064b0         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0x8ed0)
00000000000064b3         cmp        qword [r8], 0x0
00000000000064b7         je         j_version_etc_arn                           ; version_etc_arn

00000000000064b9         nop        dword [rax]

                     loc_64c0:
00000000000064c0         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
00000000000064c4         cmp        qword [r8+r9*8], 0x0
00000000000064c9         jne        loc_64c0

                     j_version_etc_arn:        // version_etc_arn
00000000000064cb         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
00000000000064d0         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0x8ed0), Begin of unwind block (FDE at 0x8ee4)
00000000000064d4         mov        r10, r8
00000000000064d7         xor        r9d, r9d
00000000000064da         mov        rax, qword [fs:0x28]
00000000000064e3         mov        qword [rsp+0x68+var_10], rax
00000000000064e8         xor        eax, eax
00000000000064ea         mov        r8, rsp
00000000000064ed         nop        dword [rax]

                     loc_64f0:
00000000000064f0         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
00000000000064f3         cmp        eax, 0x2f
00000000000064f6         ja         loc_653a

00000000000064f8         mov        r11d, eax
00000000000064fb         add        r11, qword [r10+0x10]
00000000000064ff         add        eax, 0x8
0000000000006502         mov        dword [r10], eax

                     loc_6505:
0000000000006505         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000006508         test       rax, rax
000000000000650b         mov        qword [r8+r9*8], rax
000000000000650f         je         loc_651b

0000000000006511         add        r9, 0x1
0000000000006515         cmp        r9, 0xa
0000000000006519         jne        loc_64f0

                     loc_651b:
000000000000651b         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
0000000000006520         mov        rax, qword [rsp+0x68+var_10]
0000000000006525         xor        rax, qword [fs:0x28]
000000000000652e         jne        loc_6535

0000000000006530         add        rsp, 0x68
0000000000006534         ret
                        ; endp

                     loc_6535:
0000000000006535         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_653a:
000000000000653a         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
000000000000653e         lea        rax, qword [r11+8]
0000000000006542         mov        qword [r10+8], rax
0000000000006546         jmp        loc_6505
0000000000006548         align      16                                          ; End of unwind block (FDE at 0x8ee4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
0000000000006550         push       rbp                                         ; Begin of unwind block (FDE at 0x8f00), CODE XREF=main+450
0000000000006551         push       rbx
0000000000006552         mov        r10d, 0x20
0000000000006558         xor        r11d, r11d
000000000000655b         sub        rsp, 0xb8
0000000000006562         mov        rax, qword [fs:0x28]
000000000000656b         mov        qword [rsp+0xc8+var_50], rax
0000000000006570         xor        eax, eax
0000000000006572         lea        rax, qword [rsp+0xc8+arg_0]
000000000000657a         mov        qword [rsp+0xc8+var_28], r8
0000000000006582         lea        rbx, qword [rsp+0xc8+arg_0]
000000000000658a         lea        r8, qword [rsp+0xc8+var_A8]
000000000000658f         mov        qword [rsp+0xc8+var_20], r9
0000000000006597         mov        dword [rsp+0xc8+var_C0], 0x20
000000000000659f         mov        qword [rsp+0xc8+var_B8], rax
00000000000065a4         lea        rax, qword [rsp+0xc8+var_48]
00000000000065ac         xor        r9d, r9d
00000000000065af         mov        qword [rsp+0xc8+var_B0], rax
00000000000065b4         mov        rbp, rax
00000000000065b7         nop        word [rax+rax]

                     loc_65c0:
00000000000065c0         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
00000000000065c4         ja         loc_661c

00000000000065c6         mov        eax, r10d
00000000000065c9         mov        r11d, 0x1
00000000000065cf         add        r10d, 0x8
00000000000065d3         add        rax, rbp

                     loc_65d6:
00000000000065d6         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
00000000000065d9         test       rax, rax
00000000000065dc         mov        qword [r8+r9*8], rax
00000000000065e0         je         loc_65ec

00000000000065e2         add        r9, 0x1
00000000000065e6         cmp        r9, 0xa
00000000000065ea         jne        loc_65c0

                     loc_65ec:
00000000000065ec         test       r11b, r11b                                  ; CODE XREF=version_etc+144
00000000000065ef         jne        loc_6615

                     loc_65f1:
00000000000065f1         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
00000000000065f6         mov        rax, qword [rsp+0xc8+var_50]
00000000000065fb         xor        rax, qword [fs:0x28]
0000000000006604         jne        loc_6610

0000000000006606         add        rsp, 0xb8
000000000000660d         pop        rbx
000000000000660e         pop        rbp
000000000000660f         ret
                        ; endp

                     loc_6610:
0000000000006610         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_6615:
0000000000006615         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
000000000000661a         jmp        loc_65f1

                     loc_661c:
000000000000661c         mov        rax, rbx                                    ; CODE XREF=version_etc+116
000000000000661f         add        rbx, 0x8
0000000000006623         jmp        loc_65d6
0000000000006625         align      16                                          ; End of unwind block (FDE at 0x8f00)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
0000000000006630         push       rbx                                         ; Begin of unwind block (FDE at 0x8f2c)
0000000000006631         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
0000000000006638         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000663d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000663f         call       j_dcgettext                                 ; dcgettext
0000000000006644         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
000000000000664b         mov        rsi, rax
000000000000664e         mov        edi, 0x1
0000000000006653         xor        eax, eax
0000000000006655         call       j___printf_chk                              ; __printf_chk
000000000000665a         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
0000000000006661         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006666         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006668         call       j_dcgettext                                 ; dcgettext
000000000000666d         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000006674         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x706c
000000000000667b         mov        rsi, rax
000000000000667e         mov        edi, 0x1
0000000000006683         xor        eax, eax
0000000000006685         call       j___printf_chk                              ; __printf_chk
000000000000668a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000006691         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
0000000000006698         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000669a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000669f         call       j_dcgettext                                 ; dcgettext
00000000000066a4         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
00000000000066a7         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000066aa         pop        rbx
00000000000066ab         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
00000000000066b0         push       rbx                                         ; End of unwind block (FDE at 0x8f2c), Begin of unwind block (FDE at 0x8f4c), CODE XREF=main+814, main+985, quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15
00000000000066b1         mov        rbx, rdi
00000000000066b4         call       sub_1dc8                                    ; sub_1dc8
00000000000066b9         test       rax, rax
00000000000066bc         jne        loc_66c3

00000000000066be         test       rbx, rbx
00000000000066c1         jne        loc_66c5

                     loc_66c3:
00000000000066c3         pop        rbx                                         ; CODE XREF=xmalloc+12
00000000000066c4         ret
                        ; endp

                     loc_66c5:
00000000000066c5         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_66ca:
00000000000066ca         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x8f4c)
                     xnmalloc:
00000000000066d0         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x8f68)
00000000000066d3         mul        rsi
00000000000066d6         mov        rdi, rax
00000000000066d9         seto       al
00000000000066dc         test       rdi, rdi
00000000000066df         js         loc_66eb

00000000000066e1         movzx      eax, al
00000000000066e4         test       rax, rax
00000000000066e7         jne        loc_66eb

00000000000066e9         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_66eb:
00000000000066eb         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
00000000000066ef         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_66f4:
00000000000066f4         nop                                                    ; End of unwind block (FDE at 0x8f68)
00000000000066f6         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000006700         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0x8f7c)
                        ; endp
0000000000006702         align      16                                          ; End of unwind block (FDE at 0x8f7c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000006710         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x8f90), CODE XREF=quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
0000000000006713         push       rbx
0000000000006714         mov        rbx, rsi
0000000000006717         jne        loc_671e

0000000000006719         test       rdi, rdi
000000000000671c         jne        loc_6738

                     loc_671e:
000000000000671e         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000006721         call       j_realloc                                   ; realloc
0000000000006726         test       rax, rax
0000000000006729         jne        loc_6730

000000000000672b         test       rbx, rbx
000000000000672e         jne        loc_6741

                     loc_6730:
0000000000006730         pop        rbx                                         ; CODE XREF=xrealloc+25
0000000000006731         ret
                        ; endp
0000000000006732         align      8

                     loc_6738:
0000000000006738         call       sub_1dc0                                    ; sub_1dc0, CODE XREF=xrealloc+12
000000000000673d         xor        eax, eax
000000000000673f         pop        rbx
0000000000006740         ret
                        ; endp

                     loc_6741:
0000000000006741         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6746:
0000000000006746         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x8f90)
                     xnrealloc:
0000000000006750         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x8fb4)
0000000000006753         mul        rdx
0000000000006756         mov        rsi, rax
0000000000006759         seto       al
000000000000675c         test       rsi, rsi
000000000000675f         js         loc_676b

0000000000006761         movzx      eax, al
0000000000006764         test       rax, rax
0000000000006767         jne        loc_676b

0000000000006769         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_676b:
000000000000676b         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
000000000000676f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_6774:
0000000000006774         nop                                                    ; End of unwind block (FDE at 0x8fb4)
0000000000006776         nop        word [cs:rax+rax]
                     x2nrealloc:
0000000000006780         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x8fc8)
0000000000006783         mov        r9, rdx
0000000000006786         mov        rcx, qword [rsi]
0000000000006789         je         loc_67c0

000000000000678b         xor        edx, edx
000000000000678d         movabs     rax, 0x5555555555555554
0000000000006797         div        r9
000000000000679a         cmp        rax, rcx
000000000000679d         jbe        loc_67db

000000000000679f         mov        rax, rcx
00000000000067a2         shr        rax, 0x1
00000000000067a5         lea        rcx, qword [rax+rcx+1]

                     loc_67aa:
00000000000067aa         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
00000000000067ad         imul       rcx, r9                                     ; argument #4 for method xrealloc
00000000000067b1         mov        rsi, rcx                                    ; argument #2 for method xrealloc
00000000000067b4         jmp        xrealloc                                    ; xrealloc
                        ; endp
00000000000067b9         align      64

                     loc_67c0:
00000000000067c0         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
00000000000067c3         je         loc_67e8

                     loc_67c5:
00000000000067c5         mov        rax, rcx                                    ; CODE XREF=sub_67e4+28
00000000000067c8         mul        r9
00000000000067cb         seto       dl
00000000000067ce         test       rax, rax
00000000000067d1         movzx      edx, dl
00000000000067d4         js         loc_67db

00000000000067d6         test       rdx, rdx
00000000000067d9         je         loc_67aa

                     loc_67db:
00000000000067db         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
00000000000067df         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_67e4:
00000000000067e4         nop        dword [rax]
                        ; endp

                     loc_67e8:
00000000000067e8         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
00000000000067ea         mov        eax, 0x80
00000000000067ef         xor        r8d, r8d
00000000000067f2         div        r9
00000000000067f5         test       rax, rax
00000000000067f8         sete       r8b
00000000000067fc         lea        rcx, qword [r8+rax]
0000000000006800         jmp        loc_67c5
0000000000006802         align      16                                          ; End of unwind block (FDE at 0x8fc8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000006810         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x8fe0)
0000000000006813         mov        rax, qword [rsi]
0000000000006816         je         loc_6840

0000000000006818         movabs     rdx, 0x5555555555555553
0000000000006822         cmp        rax, rdx
0000000000006825         ja         loc_6851

0000000000006827         mov        rdx, rax
000000000000682a         shr        rdx, 0x1
000000000000682d         lea        rax, qword [rdx+rax+1]

                     loc_6832:
0000000000006832         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
0000000000006835         mov        rsi, rax                                    ; argument #2 for method xrealloc
0000000000006838         jmp        xrealloc                                    ; xrealloc
                        ; endp
000000000000683d         align      64

                     loc_6840:
0000000000006840         test       rax, rax                                    ; CODE XREF=x2realloc+6
0000000000006843         mov        edx, 0x80
0000000000006848         cmove      rax, rdx
000000000000684c         test       rax, rax
000000000000684f         jns        loc_6832

                     loc_6851:
0000000000006851         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
0000000000006855         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_685a:
000000000000685a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x8fe0)
                     xzalloc:
0000000000006860         push       rbx                                         ; Begin of unwind block (FDE at 0x8ff8)
0000000000006861         mov        rbx, rdi
0000000000006864         call       xmalloc                                     ; xmalloc
0000000000006869         mov        rdx, rbx                                    ; argument "__n" for method j_memset
000000000000686c         xor        esi, esi                                    ; argument "__c" for method j_memset
000000000000686e         mov        rdi, rax                                    ; argument "__s" for method j_memset
0000000000006871         pop        rbx
0000000000006872         jmp        j_memset                                    ; memset
                        ; endp
0000000000006877         align      128                                         ; End of unwind block (FDE at 0x8ff8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
0000000000006880         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x9014)
0000000000006883         sub        rsp, 0x8
0000000000006887         mul        rsi
000000000000688a         seto       dl
000000000000688d         test       rax, rax
0000000000006890         js         loc_68a9

0000000000006892         movzx      edx, dl
0000000000006895         test       rdx, rdx
0000000000006898         jne        loc_68a9

000000000000689a         call       j_calloc                                    ; calloc
000000000000689f         test       rax, rax
00000000000068a2         je         loc_68a9

00000000000068a4         add        rsp, 0x8
00000000000068a8         ret
                        ; endp

                     loc_68a9:
00000000000068a9         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_68ae:
00000000000068ae         nop                                                    ; End of unwind block (FDE at 0x9014)
                        ; endp

                     xmemdup:
00000000000068b0         push       rbp                                         ; Begin of unwind block (FDE at 0x9030), CODE XREF=clone_quoting_options+40, xstrdup+17
00000000000068b1         push       rbx
00000000000068b2         mov        rbp, rdi
00000000000068b5         mov        rdi, rsi
00000000000068b8         mov        rbx, rsi
00000000000068bb         sub        rsp, 0x8
00000000000068bf         call       xmalloc                                     ; xmalloc
00000000000068c4         add        rsp, 0x8
00000000000068c8         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
00000000000068cb         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
00000000000068ce         pop        rbx
00000000000068cf         pop        rbp
00000000000068d0         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
00000000000068d3         jmp        j_memcpy                                    ; memcpy
                        ; endp
00000000000068d8         align      32                                          ; End of unwind block (FDE at 0x9030)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
00000000000068e0         push       rbx                                         ; Begin of unwind block (FDE at 0x9058)
00000000000068e1         mov        rbx, rdi
00000000000068e4         call       j_strlen                                    ; strlen
00000000000068e9         mov        rdi, rbx
00000000000068ec         lea        rsi, qword [rax+1]
00000000000068f0         pop        rbx
00000000000068f1         jmp        xmemdup                                     ; xmemdup
00000000000068f3         align      256                                         ; End of unwind block (FDE at 0x9058)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000006900         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x9074), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=main+2483, quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41
0000000000006907         sub        rsp, 0x8
000000000000690b         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006910         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006912         call       j_dcgettext                                 ; dcgettext
0000000000006917         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
000000000000691d         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x788d
0000000000006924         mov        rcx, rax
0000000000006927         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000006929         xor        eax, eax
000000000000692b         call       j_error                                     ; error
0000000000006930         call       j_abort                                     ; abort
                        ; endp
0000000000006935         align      64                                          ; End of unwind block (FDE at 0x9074)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
0000000000006940         push       r12                                         ; Begin of unwind block (FDE at 0x908c), CODE XREF=main+2422, close_stream+21
0000000000006942         push       rbp
0000000000006943         push       rbx
0000000000006944         mov        rbx, rdi
0000000000006947         call       j_fileno                                    ; fileno
000000000000694c         test       eax, eax
000000000000694e         mov        rdi, rbx
0000000000006951         js         loc_69a7

0000000000006953         call       j___freading                                ; __freading
0000000000006958         test       eax, eax
000000000000695a         jne        loc_6988

                     loc_695c:
000000000000695c         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
000000000000695f         call       rpl_fflush                                  ; rpl_fflush
0000000000006964         test       eax, eax
0000000000006966         je         loc_69a4

0000000000006968         call       j___errno_location                          ; __errno_location
000000000000696d         mov        r12d, dword [rax]
0000000000006970         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
0000000000006973         mov        rbp, rax
0000000000006976         call       j_fclose                                    ; fclose
000000000000697b         test       r12d, r12d
000000000000697e         jne        loc_69b0

                     loc_6980:
0000000000006980         pop        rbx                                         ; CODE XREF=rpl_fclose+121
0000000000006981         pop        rbp
0000000000006982         pop        r12
0000000000006984         ret
                        ; endp
0000000000006985         align      8

                     loc_6988:
0000000000006988         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
000000000000698b         call       j_fileno                                    ; fileno
0000000000006990         xor        esi, esi                                    ; argument "__offset" for method j_lseek
0000000000006992         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000006997         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000006999         call       j_lseek                                     ; lseek
000000000000699e         cmp        rax, 0xffffffffffffffff
00000000000069a2         jne        loc_695c

                     loc_69a4:
00000000000069a4         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_69a7:
00000000000069a7         pop        rbx                                         ; CODE XREF=rpl_fclose+17
00000000000069a8         pop        rbp
00000000000069a9         pop        r12
00000000000069ab         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_69b0:
00000000000069b0         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
00000000000069b4         mov        eax, 0xffffffff
00000000000069b9         jmp        loc_6980
00000000000069bb         align      64                                          ; End of unwind block (FDE at 0x908c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
00000000000069c0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x90c4), CODE XREF=rpl_fclose+31
00000000000069c3         push       rbx
00000000000069c4         mov        rbx, rdi
00000000000069c7         je         loc_69da

00000000000069c9         call       j___freading                                ; __freading
00000000000069ce         test       eax, eax
00000000000069d0         je         loc_69da

00000000000069d2         test       dword [rbx], 0x100
00000000000069d8         jne        loc_69e8

                     loc_69da:
00000000000069da         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
00000000000069dd         pop        rbx
00000000000069de         jmp        j_fflush                                    ; fflush
                        ; endp
00000000000069e3         align      8

                     loc_69e8:
00000000000069e8         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
00000000000069eb         mov        edx, 0x1
00000000000069f0         xor        esi, esi
00000000000069f2         call       rpl_fseeko                                  ; rpl_fseeko
00000000000069f7         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
00000000000069fa         pop        rbx
00000000000069fb         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
0000000000006a00         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0x90c4), Begin of unwind block (FDE at 0x90e4), CODE XREF=rpl_fflush+50
0000000000006a04         cmp        qword [rdi+0x10], rax
0000000000006a08         je         loc_6a10

                     j_j_fseeko:        // fseeko
0000000000006a0a         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
0000000000006a0f         align      16

                     loc_6a10:
0000000000006a10         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
0000000000006a14         cmp        qword [rdi+0x28], rax
0000000000006a18         jne        j_j_fseeko                                  ; fseeko

0000000000006a1a         cmp        qword [rdi+0x48], 0x0
0000000000006a1f         jne        j_j_fseeko                                  ; fseeko

0000000000006a21         push       r12
0000000000006a23         push       rbp
0000000000006a24         mov        r12d, edx
0000000000006a27         push       rbx
0000000000006a28         mov        rbp, rsi
0000000000006a2b         mov        rbx, rdi
0000000000006a2e         call       j_fileno                                    ; fileno
0000000000006a33         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
0000000000006a36         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
0000000000006a39         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000006a3b         call       j_lseek                                     ; lseek
0000000000006a40         cmp        rax, 0xffffffffffffffff
0000000000006a44         je         loc_6a52

0000000000006a46         and        dword [rbx], 0xffffffef
0000000000006a49         mov        qword [rbx+0x90], rax
0000000000006a50         xor        eax, eax

                     loc_6a52:
0000000000006a52         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
0000000000006a53         pop        rbp
0000000000006a54         pop        r12
0000000000006a56         ret
                        ; endp
0000000000006a57         align      32                                          ; End of unwind block (FDE at 0x90e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
0000000000006a60         push       r13                                         ; Begin of unwind block (FDE at 0x9114), CODE XREF=wc+1965, sub_4830+534
0000000000006a62         push       r12
0000000000006a64         mov        r13, rsi
0000000000006a67         push       rbp
0000000000006a68         push       rbx
0000000000006a69         mov        rbx, rdi
0000000000006a6c         mov        r12, rdx
0000000000006a6f         sub        rsp, 0x18
0000000000006a73         mov        rax, qword [fs:0x28]
0000000000006a7c         mov        qword [rsp+0x38+var_30], rax
0000000000006a81         xor        eax, eax
0000000000006a83         lea        rax, qword [rsp+0x38+var_34]
0000000000006a88         test       rdi, rdi
0000000000006a8b         cmove      rbx, rax
0000000000006a8f         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
0000000000006a92         call       j_mbrtowc                                   ; mbrtowc
0000000000006a97         cmp        rax, 0xfffffffffffffffd
0000000000006a9b         mov        rbp, rax
0000000000006a9e         jbe        loc_6ac0

0000000000006aa0         test       r12, r12
0000000000006aa3         je         loc_6ac0

0000000000006aa5         xor        edi, edi
0000000000006aa7         call       hard_locale                                 ; hard_locale
0000000000006aac         test       al, al
0000000000006aae         jne        loc_6ac0

0000000000006ab0         movzx      eax, byte [r13]
0000000000006ab5         mov        ebp, 0x1
0000000000006aba         mov        dword [rbx], eax
0000000000006abc         nop        dword [rax]

                     loc_6ac0:
0000000000006ac0         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
0000000000006ac5         xor        rdx, qword [fs:0x28]
0000000000006ace         mov        rax, rbp
0000000000006ad1         jne        loc_6ade

0000000000006ad3         add        rsp, 0x18
0000000000006ad7         pop        rbx
0000000000006ad8         pop        rbp
0000000000006ad9         pop        r12
0000000000006adb         pop        r13
0000000000006add         ret
                        ; endp

                     loc_6ade:
0000000000006ade         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
0000000000006ae3         align      16                                          ; End of unwind block (FDE at 0x9114)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     print_and_abort:
0000000000006af0         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x9154), argument "msgid" for method j_dcgettext, "memory exhausted"
0000000000006af7         sub        rsp, 0x8
0000000000006afb         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000006b00         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000006b02         call       j_dcgettext                                 ; dcgettext
0000000000006b07         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000006b0e         lea        rdx, qword [aSSSn+8]                        ; 0x7df0
0000000000006b15         mov        rcx, rax
0000000000006b18         mov        esi, 0x1
0000000000006b1d         xor        eax, eax
0000000000006b1f         call       j___fprintf_chk                             ; __fprintf_chk
0000000000006b24         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_exit, exit_failure
0000000000006b2a         call       j_exit                                      ; exit
                        ; endp
0000000000006b2f         align      16                                          ; End of unwind block (FDE at 0x9154)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     call_chunkfun:
0000000000006b30         test       byte [rdi+0x50], 0x1                        ; Begin of unwind block (FDE at 0x9168), CODE XREF=_obstack_begin_worker+41, _obstack_newchunk+88
0000000000006b34         mov        rax, qword [rdi+0x38]
0000000000006b38         jne        loc_6b40

0000000000006b3a         mov        rdi, rsi
0000000000006b3d         jmp        rax
                        ; endp
0000000000006b3f         align      64

                     loc_6b40:
0000000000006b40         mov        rdi, qword [rdi+0x48]                       ; CODE XREF=call_chunkfun+8
0000000000006b44         jmp        rax
                        ; endp
0000000000006b46         align      16                                          ; End of unwind block (FDE at 0x9168)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     call_freefun:
0000000000006b50         test       byte [rdi+0x50], 0x1                        ; Begin of unwind block (FDE at 0x917c), CODE XREF=_obstack_newchunk+222, _obstack_free+44
0000000000006b54         mov        rax, qword [rdi+0x40]
0000000000006b58         jne        loc_6b60

0000000000006b5a         mov        rdi, rsi
0000000000006b5d         jmp        rax
                        ; endp
0000000000006b5f         align      32

                     loc_6b60:
0000000000006b60         mov        rdi, qword [rdi+0x48]                       ; CODE XREF=call_freefun+8
0000000000006b64         jmp        rax
                        ; endp
0000000000006b66         align      16                                          ; End of unwind block (FDE at 0x917c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _obstack_begin_worker:
0000000000006b70         test       rdx, rdx                                    ; Begin of unwind block (FDE at 0x9190), CODE XREF=_obstack_begin+12, _obstack_begin_1+16
0000000000006b73         push       r12
0000000000006b75         push       rbp
0000000000006b76         push       rbx
0000000000006b77         mov        rbx, rdi
0000000000006b7a         je         loc_6be0

0000000000006b7c         lea        r12, qword [rdx-1]
0000000000006b80         mov        rbp, rdx

                     loc_6b83:
0000000000006b83         test       rsi, rsi                                    ; CODE XREF=_obstack_begin_worker+123
0000000000006b86         mov        eax, 0xfe0
0000000000006b8b         mov        qword [rbx+0x30], r12
0000000000006b8f         cmove      rsi, rax
0000000000006b93         mov        rdi, rbx
0000000000006b96         mov        qword [rbx], rsi
0000000000006b99         call       call_chunkfun                               ; call_chunkfun
0000000000006b9e         test       rax, rax
0000000000006ba1         mov        qword [rbx+8], rax
0000000000006ba5         je         loc_6bed

0000000000006ba7         lea        rdx, qword [rax+r12+0x10]
0000000000006bac         neg        rbp
0000000000006baf         and        rbp, rdx
0000000000006bb2         mov        rdx, qword [rbx]
0000000000006bb5         mov        qword [rbx+0x10], rbp
0000000000006bb9         mov        qword [rbx+0x18], rbp
0000000000006bbd         add        rdx, rax
0000000000006bc0         mov        qword [rax], rdx
0000000000006bc3         mov        qword [rbx+0x20], rdx
0000000000006bc7         mov        qword [rax+8], 0x0
0000000000006bcf         mov        eax, 0x1
0000000000006bd4         and        byte [rbx+0x50], 0xf9
0000000000006bd8         pop        rbx
0000000000006bd9         pop        rbp
0000000000006bda         pop        r12
0000000000006bdc         ret
                        ; endp
0000000000006bdd         align      32

                     loc_6be0:
0000000000006be0         mov        r12d, 0xf                                   ; CODE XREF=_obstack_begin_worker+10
0000000000006be6         mov        ebp, 0x10
0000000000006beb         jmp        loc_6b83

                     loc_6bed:
0000000000006bed         call       qword [obstack_alloc_failed_handler]        ; obstack_alloc_failed_handler, obstack_alloc_failed_handler, CODE XREF=_obstack_begin_worker+53
0000000000006bf3         nop        dword [rax]                                 ; End of unwind block (FDE at 0x9190)
0000000000006bf6         nop        word [cs:rax+rax]
                     _obstack_begin:
0000000000006c00         and        byte [rdi+0x50], 0xfe                       ; Begin of unwind block (FDE at 0x91c0), CODE XREF=readtokens0_init+58, readtokens0_init+77
0000000000006c04         mov        qword [rdi+0x38], rcx
0000000000006c08         mov        qword [rdi+0x40], r8
0000000000006c0c         jmp        _obstack_begin_worker                       ; _obstack_begin_worker
0000000000006c11         align      32                                          ; End of unwind block (FDE at 0x91c0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _obstack_begin_1:
0000000000006c20         or         byte [rdi+0x50], 0x1                        ; Begin of unwind block (FDE at 0x91d4)
0000000000006c24         mov        qword [rdi+0x38], rcx
0000000000006c28         mov        qword [rdi+0x40], r8
0000000000006c2c         mov        qword [rdi+0x48], r9
0000000000006c30         jmp        _obstack_begin_worker                       ; _obstack_begin_worker
                        ; endp
0000000000006c35         align      64                                          ; End of unwind block (FDE at 0x91d4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _obstack_newchunk:
0000000000006c40         push       r14                                         ; Begin of unwind block (FDE at 0x91e8), CODE XREF=save_token+157, save_token+201, readtokens0+73, readtokens0+441, readtokens0+505
0000000000006c42         push       r13
0000000000006c44         xor        edx, edx
0000000000006c46         push       r12
0000000000006c48         push       rbp
0000000000006c49         push       rbx
0000000000006c4a         mov        rbx, qword [rdi+0x18]
0000000000006c4e         sub        rbx, qword [rdi+0x10]
0000000000006c52         mov        rbp, qword [rdi+8]
0000000000006c56         add        rsi, rbx
0000000000006c59         mov        rcx, rbx
0000000000006c5c         setb       dl
0000000000006c5f         add        rsi, qword [rdi+0x30]
0000000000006c63         setb       al
0000000000006c66         shr        rcx, 0x3
0000000000006c6a         cmp        qword [rdi], rsi
0000000000006c6d         lea        r12, qword [rsi+rcx+0x64]
0000000000006c72         cmovae     rsi, qword [rdi]
0000000000006c76         cmp        rsi, r12
0000000000006c79         cmovae     r12, rsi
0000000000006c7d         test       rdx, rdx
0000000000006c80         jne        loc_6d25

0000000000006c86         movzx      eax, al
0000000000006c89         test       rax, rax
0000000000006c8c         jne        loc_6d25

0000000000006c92         mov        rsi, r12
0000000000006c95         mov        r13, rdi
0000000000006c98         call       call_chunkfun                               ; call_chunkfun
0000000000006c9d         test       rax, rax
0000000000006ca0         mov        r14, rax
0000000000006ca3         je         loc_6d25

0000000000006ca9         lea        rsi, qword [rax+r12]
0000000000006cad         mov        qword [r13+8], rax
0000000000006cb1         mov        qword [rax+8], rbp
0000000000006cb5         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
0000000000006cb8         mov        qword [r13+0x20], rsi
0000000000006cbc         mov        qword [rax], rsi
0000000000006cbf         mov        rax, qword [r13+0x30]
0000000000006cc3         mov        rsi, qword [r13+0x10]                       ; argument "__src" for method j_memcpy
0000000000006cc7         lea        r12, qword [r14+rax+0x10]
0000000000006ccc         not        rax
0000000000006ccf         and        r12, rax
0000000000006cd2         mov        rdi, r12                                    ; argument "__dest" for method j_memcpy
0000000000006cd5         call       j_memcpy                                    ; memcpy
0000000000006cda         test       byte [r13+0x50], 0x2
0000000000006cdf         jne        loc_6cf6

0000000000006ce1         mov        rax, qword [r13+0x30]
0000000000006ce5         lea        rdx, qword [rbp+rax+0x10]
0000000000006cea         not        rax
0000000000006ced         and        rax, rdx
0000000000006cf0         cmp        qword [r13+0x10], rax
0000000000006cf4         je         loc_6d10

                     loc_6cf6:
0000000000006cf6         and        byte [r13+0x50], 0xfd                       ; CODE XREF=_obstack_newchunk+159, _obstack_newchunk+227
0000000000006cfb         add        rbx, r12
0000000000006cfe         mov        qword [r13+0x10], r12
0000000000006d02         mov        qword [r13+0x18], rbx
0000000000006d06         pop        rbx
0000000000006d07         pop        rbp
0000000000006d08         pop        r12
0000000000006d0a         pop        r13
0000000000006d0c         pop        r14
0000000000006d0e         ret
                        ; endp
0000000000006d0f         align      16

                     loc_6d10:
0000000000006d10         mov        rax, qword [rbp+8]                          ; CODE XREF=_obstack_newchunk+180
0000000000006d14         mov        rsi, rbp
0000000000006d17         mov        rdi, r13
0000000000006d1a         mov        qword [r14+8], rax
0000000000006d1e         call       call_freefun                                ; call_freefun
0000000000006d23         jmp        loc_6cf6

                     loc_6d25:
0000000000006d25         call       qword [obstack_alloc_failed_handler]        ; obstack_alloc_failed_handler, obstack_alloc_failed_handler, CODE XREF=_obstack_newchunk+64, _obstack_newchunk+76, _obstack_newchunk+99
0000000000006d2b         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x91e8)
                     _obstack_allocated_p:
0000000000006d30         mov        rax, qword [rdi+8]                          ; Begin of unwind block (FDE at 0x9228)
0000000000006d34         test       rax, rax
0000000000006d37         je         loc_6d66

0000000000006d39         nop        dword [rax]

                     loc_6d40:
0000000000006d40         cmp        rsi, rax                                    ; CODE XREF=_obstack_allocated_p+33
0000000000006d43         jbe        loc_6d4a

0000000000006d45         cmp        qword [rax], rsi
0000000000006d48         jae        loc_6d60

                     loc_6d4a:
0000000000006d4a         mov        rax, qword [rax+8]                          ; CODE XREF=_obstack_allocated_p+19
0000000000006d4e         test       rax, rax
0000000000006d51         jne        loc_6d40

0000000000006d53         xor        eax, eax
0000000000006d55         ret
                        ; endp
0000000000006d56         align      32

                     loc_6d60:
0000000000006d60         mov        eax, 0x1                                    ; CODE XREF=_obstack_allocated_p+24
0000000000006d65         ret
                        ; endp

                     loc_6d66:
0000000000006d66         ret                                                    ; CODE XREF=_obstack_allocated_p+7
                        ; endp
0000000000006d68         align      16                                          ; End of unwind block (FDE at 0x9228)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _obstack_free:
0000000000006d70         push       r12                                         ; Begin of unwind block (FDE at 0x923c), CODE XREF=readtokens0_free+10, readtokens0_free+21, readtokens0_free+36
0000000000006d72         push       rbp
0000000000006d73         mov        rbp, rsi
0000000000006d76         push       rbx
0000000000006d77         mov        rsi, qword [rdi+8]
0000000000006d7b         mov        rbx, rdi
0000000000006d7e         test       rsi, rsi
0000000000006d81         je         loc_6dad

0000000000006d83         nop        dword [rax+rax]

                     loc_6d88:
0000000000006d88         cmp        rsi, rbp                                    ; CODE XREF=_obstack_free+59
0000000000006d8b         jae        loc_6d95

0000000000006d8d         mov        rax, qword [rsi]
0000000000006d90         cmp        rax, rbp
0000000000006d93         jae        loc_6dc0

                     loc_6d95:
0000000000006d95         mov        r12, qword [rsi+8]                          ; CODE XREF=_obstack_free+27
0000000000006d99         mov        rdi, rbx
0000000000006d9c         call       call_freefun                                ; call_freefun
0000000000006da1         or         byte [rbx+0x50], 0x2
0000000000006da5         test       r12, r12
0000000000006da8         mov        rsi, r12
0000000000006dab         jne        loc_6d88

                     loc_6dad:
0000000000006dad         test       rbp, rbp                                    ; CODE XREF=_obstack_free+17
0000000000006db0         jne        loc_6dd5

0000000000006db2         pop        rbx
0000000000006db3         pop        rbp
0000000000006db4         pop        r12
0000000000006db6         ret
                        ; endp
0000000000006db7         align      64

                     loc_6dc0:
0000000000006dc0         mov        qword [rbx+0x18], rbp                       ; CODE XREF=_obstack_free+35
0000000000006dc4         mov        qword [rbx+0x10], rbp
0000000000006dc8         mov        qword [rbx+0x20], rax
0000000000006dcc         mov        qword [rbx+8], rsi
0000000000006dd0         pop        rbx
0000000000006dd1         pop        rbp
0000000000006dd2         pop        r12
0000000000006dd4         ret
                        ; endp

                     loc_6dd5:
0000000000006dd5         call       j_abort                                     ; abort, CODE XREF=_obstack_free+64
                        ; endp
0000000000006dda         align      32                                          ; End of unwind block (FDE at 0x923c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _obstack_memory_used:
0000000000006de0         mov        rdx, qword [rdi+8]                          ; Begin of unwind block (FDE at 0x9274)
0000000000006de4         xor        eax, eax
0000000000006de6         test       rdx, rdx
0000000000006de9         je         loc_6e08

0000000000006deb         nop        dword [rax+rax]

                     loc_6df0:
0000000000006df0         mov        rcx, qword [rdx]                            ; CODE XREF=_obstack_memory_used+32
0000000000006df3         sub        rcx, rdx
0000000000006df6         mov        rdx, qword [rdx+8]
0000000000006dfa         add        rax, rcx
0000000000006dfd         test       rdx, rdx
0000000000006e00         jne        loc_6df0

0000000000006e02         ret
                        ; endp
0000000000006e04         align      8

                     loc_6e08:
0000000000006e08         ret                                                    ; CODE XREF=_obstack_memory_used+9
                        ; endp
0000000000006e0a         align      16                                          ; End of unwind block (FDE at 0x9274)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
0000000000006e10         push       r12                                         ; Begin of unwind block (FDE at 0x928c), CODE XREF=close_stdout+13, close_stdout+51
0000000000006e12         push       rbp
0000000000006e13         mov        rbp, rdi
0000000000006e16         push       rbx
0000000000006e17         call       j___fpending                                ; __fpending
0000000000006e1c         mov        ebx, dword [rbp]
0000000000006e1f         mov        rdi, rbp
0000000000006e22         mov        r12, rax
0000000000006e25         call       rpl_fclose                                  ; rpl_fclose
0000000000006e2a         and        ebx, 0x20
0000000000006e2d         test       ebx, ebx
0000000000006e2f         jne        loc_6e48

0000000000006e31         test       eax, eax
0000000000006e33         je         loc_6e3f

0000000000006e35         test       r12, r12
0000000000006e38         mov        eax, 0xffffffff
0000000000006e3d         je         loc_6e78

                     loc_6e3f:
0000000000006e3f         pop        rbx                                         ; CODE XREF=close_stream+35
0000000000006e40         pop        rbp
0000000000006e41         pop        r12
0000000000006e43         ret
                        ; endp
0000000000006e44         align      8

                     loc_6e48:
0000000000006e48         test       eax, eax                                    ; CODE XREF=close_stream+31
0000000000006e4a         jne        loc_6e68

0000000000006e4c         call       j___errno_location                          ; __errno_location
0000000000006e51         mov        dword [rax], 0x0
0000000000006e57         mov        eax, 0xffffffff
0000000000006e5c         pop        rbx
0000000000006e5d         pop        rbp
0000000000006e5e         pop        r12
0000000000006e60         ret
                        ; endp
0000000000006e61         align      8

                     loc_6e68:
0000000000006e68         pop        rbx                                         ; CODE XREF=close_stream+58
0000000000006e69         mov        eax, 0xffffffff
0000000000006e6e         pop        rbp
0000000000006e6f         pop        r12
0000000000006e71         ret
                        ; endp
0000000000006e72         align      8

                     loc_6e78:
0000000000006e78         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
0000000000006e7d         cmp        dword [rax], 0x9
0000000000006e80         pop        rbx
0000000000006e81         pop        rbp
0000000000006e82         pop        r12
0000000000006e84         setne      al
0000000000006e87         movzx      eax, al
0000000000006e8a         neg        eax
0000000000006e8c         ret
                        ; endp
0000000000006e8d         align      16                                          ; End of unwind block (FDE at 0x928c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
0000000000006e90         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x92dc), CODE XREF=rpl_mbrtowc+71
0000000000006e94         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000006e96         call       j_setlocale                                 ; setlocale
0000000000006e9b         mov        rdx, rax
0000000000006e9e         mov        eax, 0x1
0000000000006ea3         test       rdx, rdx
0000000000006ea6         je         loc_6ec5

0000000000006ea8         lea        rdi, qword [aMemoryExhauste+17]             ; 0x8160
0000000000006eaf         mov        ecx, 0x2
0000000000006eb4         mov        rsi, rdx
0000000000006eb7         rep  cmpsb byte [rsi], byte [rdi]
0000000000006eb9         seta       cl
0000000000006ebc         sbb        cl, 0x0
0000000000006ebf         xor        eax, eax
0000000000006ec1         test       cl, cl
0000000000006ec3         jne        loc_6ed0

                     loc_6ec5:
0000000000006ec5         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
0000000000006ec9         ret
                        ; endp
0000000000006eca         align      16

                     loc_6ed0:
0000000000006ed0         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
0000000000006ed7         mov        ecx, 0x6
0000000000006edc         mov        rsi, rdx
0000000000006edf         rep  cmpsb byte [rsi], byte [rdi]
0000000000006ee1         seta       al
0000000000006ee4         sbb        al, 0x0
0000000000006ee6         test       al, al
0000000000006ee8         setne      al
0000000000006eeb         add        rsp, 0x8
0000000000006eef         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000006ef0         sub        rsp, 0x8                                    ; End of unwind block (FDE at 0x92dc), Begin of unwind block (FDE at 0x92fc), CODE XREF=gettext_quote.part.1+11
0000000000006ef4         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000006ef9         call       j_nl_langinfo                               ; nl_langinfo
0000000000006efe         test       rax, rax
0000000000006f01         je         loc_6f20

0000000000006f03         cmp        byte [rax], 0x0
0000000000006f06         lea        rdx, qword [aAscii]                         ; "ASCII"
0000000000006f0d         cmove      rax, rdx
0000000000006f11         add        rsp, 0x8
0000000000006f15         ret
                        ; endp
0000000000006f16         align      32

                     loc_6f20:
0000000000006f20         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
0000000000006f27         add        rsp, 0x8
0000000000006f2b         ret
                        ; endp
0000000000006f2c         align      16                                          ; End of unwind block (FDE at 0x92fc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
0000000000006f30         push       r15                                         ; Begin of unwind block (FDE at 0x931c), DATA XREF=_start+22
0000000000006f32         push       r14
0000000000006f34         mov        r15, rdx
0000000000006f37         push       r13
0000000000006f39         push       r12
0000000000006f3b         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
0000000000006f42         push       rbp
0000000000006f43         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
0000000000006f4a         push       rbx
0000000000006f4b         mov        r13d, edi
0000000000006f4e         mov        r14, rsi
0000000000006f51         sub        rbp, r12
0000000000006f54         sub        rsp, 0x8
0000000000006f58         sar        rbp, 0x3
0000000000006f5c         call       _init                                       ; _init
0000000000006f61         test       rbp, rbp
0000000000006f64         je         loc_6f86

0000000000006f66         xor        ebx, ebx
0000000000006f68         nop        dword [rax+rax]

                     loc_6f70:
0000000000006f70         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
0000000000006f73         mov        rsi, r14
0000000000006f76         mov        edi, r13d
0000000000006f79         call       qword [r12+rbx*8]
0000000000006f7d         add        rbx, 0x1
0000000000006f81         cmp        rbp, rbx
0000000000006f84         jne        loc_6f70

                     loc_6f86:
0000000000006f86         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
0000000000006f8a         pop        rbx
0000000000006f8b         pop        rbp
0000000000006f8c         pop        r12
0000000000006f8e         pop        r13
0000000000006f90         pop        r14
0000000000006f92         pop        r15
0000000000006f94         ret
                        ; endp
0000000000006f95         align      32                                          ; End of unwind block (FDE at 0x931c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
0000000000006fa0         ret                                                    ; Begin of unwind block (FDE at 0x9364), DATA XREF=_start+15
                        ; endp
0000000000006fa2         align      16                                          ; End of unwind block (FDE at 0x9364)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
0000000000006fb0         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0x937c), __dso_handle, CODE XREF=main+111
0000000000006fb7         xor        esi, esi
0000000000006fb9         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
0000000000006fbe         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x937c)
0000000000006fbf         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x6fc0; 0x6fc9[ (9 bytes)
        ; File offset : [28608; 28617[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
0000000000006fc0         sub        rsp, 0x8
0000000000006fc4         add        rsp, 0x8
0000000000006fc8         ret
                        ; endp
0000000000006fc9         db  0x00 ; '.'
0000000000006fca         db  0x00 ; '.'
0000000000006fcb         db  0x00 ; '.'
0000000000006fcc         db  0x00 ; '.'
0000000000006fcd         db  0x00 ; '.'
0000000000006fce         db  0x00 ; '.'
0000000000006fcf         db  0x00 ; '.'
0000000000006fd0         db  0x00 ; '.'
0000000000006fd1         db  0x00 ; '.'
0000000000006fd2         db  0x00 ; '.'
0000000000006fd3         db  0x00 ; '.'
0000000000006fd4         db  0x00 ; '.'
0000000000006fd5         db  0x00 ; '.'
0000000000006fd6         db  0x00 ; '.'
0000000000006fd7         db  0x00 ; '.'
0000000000006fd8         db  0x00 ; '.'
0000000000006fd9         db  0x00 ; '.'
0000000000006fda         db  0x00 ; '.'
0000000000006fdb         db  0x00 ; '.'
0000000000006fdc         db  0x00 ; '.'
0000000000006fdd         db  0x00 ; '.'
0000000000006fde         db  0x00 ; '.'
0000000000006fdf         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x6fe0; 0x816e[ (4494 bytes)
        ; File offset : [28640; 33134[ (4494 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
0000000000006fe0         db  0x01 ; '.'
0000000000006fe1         db  0x00 ; '.'
0000000000006fe2         db  0x02 ; '.'
0000000000006fe3         db  0x00 ; '.'
                     aStandardInput:
0000000000006fe4         db         "standard input", 0                         ; DATA XREF=wc+2344
0000000000006ff3         db  0x77 ; 'w'                                         ; DATA XREF=main+441, usage+345, usage+660, usage+844, usage+863, usage+897
0000000000006ff4         db  0x63 ; 'c'
0000000000006ff5         db  0x00 ; '.'
0000000000006ff6         db  0x5b ; '['                                         ; DATA XREF=usage+357
0000000000006ff7         db  0x00 ; '.'
                     aTestInvocation:
0000000000006ff8         db         "test invocation", 0                        ; DATA XREF=usage+396
                     aMulticallInvoc:
0000000000007008         db         "Multi-call invocation", 0                  ; DATA XREF=usage+444
                     aSha224sum:
000000000000701e         db         "sha224sum", 0                              ; DATA XREF=usage+461
                     aSha2Utilities:
0000000000007028         db         "sha2 utilities", 0                         ; DATA XREF=usage+473
                     aSha256sum:
0000000000007037         db         "sha256sum", 0                              ; DATA XREF=usage+364
                     aSha384sum:
0000000000007041         db         "sha384sum", 0                              ; DATA XREF=usage+408
                     aSha512sum:
000000000000704b         db         "sha512sum", 0                              ; DATA XREF=usage+432
                     aNsOnlineHelpSn:
0000000000007055         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+546
000000000000706c         db  0x47 ; 'G'                                         ; DATA XREF=main+434, usage+574, usage+767, emit_bug_reporting_address+68
000000000000706d         db  0x4e ; 'N'
000000000000706e         db  0x55 ; 'U'
000000000000706f         db  0x20 ; ' '
                     aCoreutils:
0000000000007070         db         "coreutils", 0                              ; DATA XREF=main+80, main+92, usage+420
000000000000707a         db  0x65 ; 'e'                                         ; DATA XREF=usage+613, usage+806
000000000000707b         db  0x6e ; 'n'
000000000000707c         db  0x5f ; '_'
000000000000707d         db  0x00 ; '.'
                     aFullDocumentat:
000000000000707e         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+641, usage+830
                     aUsrlocalsharel:
0000000000007099         db         "/usr/local/share/locale", 0                ; DATA XREF=main+73
                     aPosixlycorrect:
00000000000070b1         db         "POSIXLY_CORRECT", 0                        ; DATA XREF=main+151
                     aDavidMackenzie:
00000000000070c1         db         "David MacKenzie", 0                        ; DATA XREF=main+420
                     aPaulRubin:
00000000000070d1         db         "Paul Rubin", 0                             ; DATA XREF=main+427
                     aCllmw:
00000000000070dc         db         "clLmw", 0                                  ; DATA XREF=main+272
                     aExtraOperandS:
00000000000070e2         db         "extra operand %s", 0                       ; DATA XREF=main+2502
                     aCannotOpenSFor:
00000000000070f3         db         "cannot open %s for reading", 0             ; DATA XREF=main+2120
                     aSReadError:
000000000000710e         db         "%s: read error", 0                         ; DATA XREF=main+1851
                     aCoreutils831sr:
000000000000711d         db         "../coreutils-8.31/src/wc.c", 0             ; DATA XREF=main+1612
                     aTotal:
0000000000007138         db         "total", 0                                  ; DATA XREF=main+1694
                     aInvalidZerolen:
000000000000713e         db         "invalid zero-length file name", 0          ; DATA XREF=main+1364, main+1530
                     aSluS:
000000000000715c         db         "%s:%lu: %s", 0                             ; DATA XREF=main+1404
                     aBytes:
0000000000007167         db         "bytes", 0
                     aChars:
000000000000716d         db         "chars", 0
                     aLines:
0000000000007173         db         "lines", 0
                     aWords:
0000000000007179         db         "words", 0
                     aFiles0from:
000000000000717f         db         "files0-from", 0
                     aMaxlinelength:
000000000000718b         db         "max-line-length", 0
                     aHelp:
000000000000719b         db         "help", 0
                     aVersion:
00000000000071a0         db         "version", 0
                     switch_table_71a8:        // switch_table
00000000000071a8         dd         wc.loc_30c0-switch_table_71a8, wc.loc_30b0-switch_table_71a8, wc.loc_30a0-switch_table_71a8, 2 dup (wc.loc_3080-switch_table_71a8) ; switch table used at 0x2df7 containing 24 entries, DATA XREF=wc+646
00000000000071bc         dd         18 dup (wc.loc_30d0-switch_table_71a8), wc.loc_3048-switch_table_71a8
                     switch_table_7208:        // switch_table
0000000000007208         dd         wc.loc_31c8-switch_table_7208, wc.loc_31a0-switch_table_7208, wc.loc_31ae-switch_table_7208, 2 dup (wc.loc_31a5-switch_table_7208) ; switch table used at 0x319a containing 24 entries, DATA XREF=wc+1464
000000000000721c         dd         18 dup (wc.loc_31e0-switch_table_7208), wc.loc_31d8-switch_table_7208
                     switch_table_7268:        // switch_table
0000000000007268         dd         wc.loc_30c5-switch_table_7268, wc.loc_30b5-switch_table_7268, wc.loc_3058-switch_table_7268, 2 dup (wc.loc_3085-switch_table_7268) ; switch table used at 0x3420 containing 24 entries, DATA XREF=wc+2226
000000000000727c         dd         18 dup (wc.loc_3644-switch_table_7268), wc.loc_304d-switch_table_7268
                     format_sp_int.7975:
00000000000072c8         db  0x20 ; ' '                                         ; DATA XREF=write_counts+334, write_counts+382, write_counts+430
00000000000072c9         db  0x25 ; '%'                                         ; DATA XREF=write_counts+25
00000000000072ca         db  0x2a ; '*'
00000000000072cb         db  0x73 ; 's'
00000000000072cc         db  0x00 ; '.'
                     __PRETTY_FUNCTION__.8129:
00000000000072cd         db  0x6d ; 'm'                                         ; DATA XREF=main+1605
00000000000072ce         db  0x61 ; 'a'
00000000000072cf         db  0x69 ; 'i'
00000000000072d0         db  0x6e ; 'n'
00000000000072d1         db  0x00 ; '.'
00000000000072d2         db  0x00 ; '.'
00000000000072d3         db  0x00 ; '.'
00000000000072d4         db  0x00 ; '.'
00000000000072d5         db  0x00 ; '.'
00000000000072d6         db  0x00 ; '.'
00000000000072d7         db  0x00 ; '.'
                     aTrySHelpForMor:
00000000000072d8         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
00000000000072ff         align      256
                     aUsageSOptionFi:
0000000000007300         db         "Usage: %s [OPTION]... [FILE]...\n  or:  %s [OPTION]... --files0-from=F\n", 0 ; DATA XREF=usage+93
0000000000007347         align      8
                     aPrintNewlineWo:
0000000000007348         db         "Print newline, word, and byte counts for each FILE, and a total line if\nmore than one FILE is specified.  A word is a non-zero-length sequence of\ncharacters delimited by white space.\n", 0 ; DATA XREF=usage+135
                     aNwithNoFileOrW:
0000000000007400         db         "\nWith no FILE, or when FILE is -, read standard input.\n", 0 ; DATA XREF=usage+172
                     aNtheOptionsBel:
0000000000007438         db         "\nThe options below may be used to select which counts are printed, always in\nthe following order: newline, word, character, byte, maximum line length.\n  -c, --bytes            print the byte counts\n  -m, --chars            print the character counts\n  -l, " ; DATA XREF=usage+209
0000000000007538         db         "--lines            print the newline counts\n", 0
0000000000007565         align      8
                     aFiles0fromfRea:
0000000000007568         db         "      --files0-from=F    read input from the files specified by\n                           NUL-terminated names in file F;\n                           If F is - then read names from standard input\n  -L, --max-line-length  print the maximum display width\n  -" ; DATA XREF=usage+246
0000000000007668         db         "w, --words            print the word counts\n", 0
0000000000007695         align      8
                     aHelpDisplayThi:
0000000000007698         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+283
00000000000076c5         align      8
                     aVersionOutputV:
00000000000076c8         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+320
00000000000076fe         align      256
                     aHttpswwwgnuorg:
0000000000007700         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+567, usage+667, usage+760, usage+870, emit_bug_reporting_address+61
                     aReportAnyTrans:
0000000000007728         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+911
000000000000776f         align      16
                     aOrAvailableLoc:
0000000000007770         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+710
00000000000077a3         align      8
                     aFileOperandsCa:
00000000000077a8         db         "file operands cannot be combined with --files0-from", 0 ; DATA XREF=main+2541
00000000000077dc         align      32
                     aCannotReadFile:
00000000000077e0         db         "cannot read file names from %s", 0         ; DATA XREF=main+2607
00000000000077ff         align      2048
                     aUnexpectedErro:
0000000000007800         db         "!\"unexpected error code from argv_iter\"", 0 ; DATA XREF=main+1619
                     aWhenReadingFil:
0000000000007828         db         "when reading file names from stdin, no file name of %s allowed", 0 ; DATA XREF=main+1307
0000000000007867         align      2
000000000000786e         db  0x64 ; 'd'
000000000000786f         db  0x41 ; 'A'
                     double_7870:        // double
0000000000007870         dq         0.5                                         ; DATA XREF=main+2321
                     a831:
0000000000007878         db         "8.31", 0                                   ; DATA XREF=Version
                     aWriteError:
000000000000787d         db         "write error", 0                            ; DATA XREF=close_stdout+67
                     aSS:
0000000000007889         db         "%s: %s", 0                                 ; DATA XREF=close_stdout+108
0000000000007890         db  0x00 ; '.'
0000000000007891         db  0x00 ; '.'
0000000000007892         db  0x00 ; '.'
0000000000007893         db  0x00 ; '.'
0000000000007894         db  0x00 ; '.'
0000000000007895         db  0x00 ; '.'
0000000000007896         db  0x00 ; '.'
0000000000007897         db  0x00 ; '.'
0000000000007898         db  0x00 ; '.'
0000000000007899         db  0x00 ; '.'
000000000000789a         db  0x00 ; '.'
000000000000789b         db  0x00 ; '.'
000000000000789c         db  0x00 ; '.'
000000000000789d         db  0x00 ; '.'
000000000000789e         db  0x00 ; '.'
000000000000789f         db  0x00 ; '.'
                     is_basic_table:
00000000000078a0         db  0x00 ; '.'                                         ; DATA XREF=wc+597, is_basic+2
00000000000078a1         db  0x1a ; '.'
00000000000078a2         db  0x00 ; '.'
00000000000078a3         db  0x00 ; '.'
00000000000078a4         db  0xef ; '.'
00000000000078a5         db  0xff ; '.'
00000000000078a6         db  0xff ; '.'
00000000000078a7         db  0xff ; '.'
00000000000078a8         db  0xfe ; '.'
00000000000078a9         db  0xff ; '.'
00000000000078aa         db  0xff ; '.'
00000000000078ab         db  0xff ; '.'
00000000000078ac         db  0xfe ; '.'
00000000000078ad         db  0xff ; '.'
00000000000078ae         db  0xff ; '.'
00000000000078af         db  0x7f ; '.'
00000000000078b0         db  0x00 ; '.'
00000000000078b1         db  0x00 ; '.'
00000000000078b2         db  0x00 ; '.'
00000000000078b3         db  0x00 ; '.'
00000000000078b4         db  0x00 ; '.'
00000000000078b5         db  0x00 ; '.'
00000000000078b6         db  0x00 ; '.'
00000000000078b7         db  0x00 ; '.'
00000000000078b8         db  0x00 ; '.'
00000000000078b9         db  0x00 ; '.'
00000000000078ba         db  0x00 ; '.'
00000000000078bb         db  0x00 ; '.'
00000000000078bc         db  0x00 ; '.'
00000000000078bd         db  0x00 ; '.'
00000000000078be         db  0x00 ; '.'
00000000000078bf         db  0x00 ; '.'
                     double_78c0:        // double
00000000000078c0         dq         6.71089e+07                                 ; DATA XREF=physmem_total+140
                     double_78c8:        // double
00000000000078c8         dq         0.25                                        ; DATA XREF=physmem_available+213
                     aANullArgv0WasP:
00000000000078d0         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
0000000000007908         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
0000000000007910         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
0000000000007911         db  0x74 ; 't'
0000000000007912         db  0x2d ; '-'                                         ; DATA XREF=main+638, main+902, main+1073, main+1464, main+2046
0000000000007913         db  0x00 ; '.'
0000000000007914         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
0000000000007915         db  0x80 ; '.'
0000000000007916         db  0x98 ; '.'
0000000000007917         db  0x00 ; '.'
0000000000007918         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
0000000000007919         db  0x80 ; '.'
000000000000791a         db  0x99 ; '.'
000000000000791b         db  0x00 ; '.'
000000000000791c         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
000000000000791d         db  0x07 ; '.'
000000000000791e         db  0x65 ; 'e'
000000000000791f         db  0x00 ; '.'
0000000000007920         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
0000000000007921         db  0xaf ; '.'
0000000000007922         db  0x00 ; '.'
0000000000007923         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_4d00+219, sub_4d00+261, sub_4d00+1197
0000000000007924         db  0x00 ; '.'
0000000000007925         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_4830+132, sub_4d00+106, sub_4d00+438, sub_4d00+465, sub_4d00+1120
0000000000007926         db  0x00 ; '.'
0000000000007927         db  0x60 ; '`'                                         ; DATA XREF=sub_4d00+395, sub_4d00+422
0000000000007928         db  0x00 ; '.'
                     aLiteral:
0000000000007929         db         "literal", 0
                     aShell:
0000000000007931         db         "shell", 0
                     aShellalways:
0000000000007937         db         "shell-always", 0
0000000000007944         db  0x73 ; 's'
0000000000007945         db  0x68 ; 'h'
0000000000007946         db  0x65 ; 'e'
0000000000007947         db  0x6c ; 'l'
0000000000007948         db  0x6c ; 'l'
0000000000007949         db  0x2d ; '-'
                     aEscape:
000000000000794a         db         "escape", 0
                     aShellescapealw:
0000000000007951         db         "shell-escape-always", 0
                     aCmaybe:
0000000000007965         db         "c-maybe", 0
                     aClocale:
000000000000796d         db         "clocale", 0
0000000000007975         align      128
                     switch_table_7980:        // switch_table
0000000000007980         dd         quotearg_buffer_restyled.loc_4f2a-switch_table_7980, quotearg_buffer_restyled.loc_4183-switch_table_7980, quotearg_buffer_restyled.loc_5158-switch_table_7980, quotearg_buffer_restyled.loc_4f64-switch_table_7980 ; switch table used at 0x4181 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
0000000000007990         dd         quotearg_buffer_restyled.loc_4d54-switch_table_7980, quotearg_buffer_restyled.loc_4db0-switch_table_7980, quotearg_buffer_restyled.loc_4e05-switch_table_7980, quotearg_buffer_restyled.loc_4e4a-switch_table_7980
00000000000079a0         dd         3 dup (quotearg_buffer_restyled.loc_4e84-switch_table_7980)
00000000000079ac         db  0x54 ; 'T'                                         ; DATA XREF=quotearg_buffer_restyled+477
00000000000079ad         db  0xcb ; '.'
00000000000079ae         db  0xff ; '.'
00000000000079af         db  0xff ; '.'
00000000000079b0         db  0x3c ; '<'
00000000000079b1         db  0xcc ; '.'
00000000000079b2         db  0xff ; '.'
00000000000079b3         db  0xff ; '.'
00000000000079b4         db  0x3c ; '<'
00000000000079b5         db  0xcc ; '.'
00000000000079b6         db  0xff ; '.'
00000000000079b7         db  0xff ; '.'
00000000000079b8         db  0x3c ; '<'
00000000000079b9         db  0xcc ; '.'
00000000000079ba         db  0xff ; '.'
00000000000079bb         db  0xff ; '.'
00000000000079bc         db  0x3c ; '<'
00000000000079bd         db  0xcc ; '.'
00000000000079be         db  0xff ; '.'
00000000000079bf         db  0xff ; '.'
00000000000079c0         db  0x3c ; '<'
00000000000079c1         db  0xcc ; '.'
00000000000079c2         db  0xff ; '.'
00000000000079c3         db  0xff ; '.'
00000000000079c4         db  0x3c ; '<'
00000000000079c5         db  0xcc ; '.'
00000000000079c6         db  0xff ; '.'
00000000000079c7         db  0xff ; '.'
00000000000079c8         db  0x94 ; '.'
00000000000079c9         db  0xcb ; '.'
00000000000079ca         db  0xff ; '.'
00000000000079cb         db  0xff ; '.'
00000000000079cc         db  0x9c ; '.'
00000000000079cd         db  0xca ; '.'
00000000000079ce         db  0xff ; '.'
00000000000079cf         db  0xff ; '.'
00000000000079d0         db  0x5c ; '\'
00000000000079d1         db  0xca ; '.'
00000000000079d2         db  0xff ; '.'
00000000000079d3         db  0xff ; '.'
00000000000079d4         db  0x24 ; '$'
00000000000079d5         db  0xcc ; '.'
00000000000079d6         db  0xff ; '.'
00000000000079d7         db  0xff ; '.'
00000000000079d8         db  0x14 ; '.'
00000000000079d9         db  0xcc ; '.'
00000000000079da         db  0xff ; '.'
00000000000079db         db  0xff ; '.'
00000000000079dc         db  0x04 ; '.'
00000000000079dd         db  0xcc ; '.'
00000000000079de         db  0xff ; '.'
00000000000079df         db  0xff ; '.'
00000000000079e0         db  0xf4 ; '.'
00000000000079e1         db  0xcb ; '.'
00000000000079e2         db  0xff ; '.'
00000000000079e3         db  0xff ; '.'
00000000000079e4         db  0x3c ; '<'
00000000000079e5         db  0xcc ; '.'
00000000000079e6         db  0xff ; '.'
00000000000079e7         db  0xff ; '.'
00000000000079e8         db  0x3c ; '<'
00000000000079e9         db  0xcc ; '.'
00000000000079ea         db  0xff ; '.'
00000000000079eb         db  0xff ; '.'
00000000000079ec         db  0x3c ; '<'
00000000000079ed         db  0xcc ; '.'
00000000000079ee         db  0xff ; '.'
00000000000079ef         db  0xff ; '.'
00000000000079f0         db  0x3c ; '<'
00000000000079f1         db  0xcc ; '.'
00000000000079f2         db  0xff ; '.'
00000000000079f3         db  0xff ; '.'
00000000000079f4         db  0x3c ; '<'
00000000000079f5         db  0xcc ; '.'
00000000000079f6         db  0xff ; '.'
00000000000079f7         db  0xff ; '.'
00000000000079f8         db  0x3c ; '<'
00000000000079f9         db  0xcc ; '.'
00000000000079fa         db  0xff ; '.'
00000000000079fb         db  0xff ; '.'
00000000000079fc         db  0x3c ; '<'
00000000000079fd         db  0xcc ; '.'
00000000000079fe         db  0xff ; '.'
00000000000079ff         db  0xff ; '.'
0000000000007a00         db  0x3c ; '<'
0000000000007a01         db  0xcc ; '.'
0000000000007a02         db  0xff ; '.'
0000000000007a03         db  0xff ; '.'
0000000000007a04         db  0x3c ; '<'
0000000000007a05         db  0xcc ; '.'
0000000000007a06         db  0xff ; '.'
0000000000007a07         db  0xff ; '.'
0000000000007a08         db  0x3c ; '<'
0000000000007a09         db  0xcc ; '.'
0000000000007a0a         db  0xff ; '.'
0000000000007a0b         db  0xff ; '.'
0000000000007a0c         db  0x3c ; '<'
0000000000007a0d         db  0xcc ; '.'
0000000000007a0e         db  0xff ; '.'
0000000000007a0f         db  0xff ; '.'
0000000000007a10         db  0x3c ; '<'
0000000000007a11         db  0xcc ; '.'
0000000000007a12         db  0xff ; '.'
0000000000007a13         db  0xff ; '.'
0000000000007a14         db  0x3c ; '<'
0000000000007a15         db  0xcc ; '.'
0000000000007a16         db  0xff ; '.'
0000000000007a17         db  0xff ; '.'
0000000000007a18         db  0x3c ; '<'
0000000000007a19         db  0xcc ; '.'
0000000000007a1a         db  0xff ; '.'
0000000000007a1b         db  0xff ; '.'
0000000000007a1c         db  0x3c ; '<'
0000000000007a1d         db  0xcc ; '.'
0000000000007a1e         db  0xff ; '.'
0000000000007a1f         db  0xff ; '.'
0000000000007a20         db  0x3c ; '<'
0000000000007a21         db  0xcc ; '.'
0000000000007a22         db  0xff ; '.'
0000000000007a23         db  0xff ; '.'
0000000000007a24         db  0x3c ; '<'
0000000000007a25         db  0xcc ; '.'
0000000000007a26         db  0xff ; '.'
0000000000007a27         db  0xff ; '.'
0000000000007a28         db  0x3c ; '<'
0000000000007a29         db  0xcc ; '.'
0000000000007a2a         db  0xff ; '.'
0000000000007a2b         db  0xff ; '.'
0000000000007a2c         db  0xe4 ; '.'
0000000000007a2d         db  0xcb ; '.'
0000000000007a2e         db  0xff ; '.'
0000000000007a2f         db  0xff ; '.'
0000000000007a30         db  0xd4 ; '.'
0000000000007a31         db  0xcb ; '.'
0000000000007a32         db  0xff ; '.'
0000000000007a33         db  0xff ; '.'
0000000000007a34         db  0xd4 ; '.'
0000000000007a35         db  0xcb ; '.'
0000000000007a36         db  0xff ; '.'
0000000000007a37         db  0xff ; '.'
0000000000007a38         db  0xa4 ; '.'
0000000000007a39         db  0xcb ; '.'
0000000000007a3a         db  0xff ; '.'
0000000000007a3b         db  0xff ; '.'
0000000000007a3c         db  0xd4 ; '.'
0000000000007a3d         db  0xcb ; '.'
0000000000007a3e         db  0xff ; '.'
0000000000007a3f         db  0xff ; '.'
0000000000007a40         db  0x7c ; '|'
0000000000007a41         db  0xcb ; '.'
0000000000007a42         db  0xff ; '.'
0000000000007a43         db  0xff ; '.'
0000000000007a44         db  0xd4 ; '.'
0000000000007a45         db  0xcb ; '.'
0000000000007a46         db  0xff ; '.'
0000000000007a47         db  0xff ; '.'
0000000000007a48         db  0x37 ; '7'
0000000000007a49         db  0xca ; '.'
0000000000007a4a         db  0xff ; '.'
0000000000007a4b         db  0xff ; '.'
0000000000007a4c         db  0xd4 ; '.'
0000000000007a4d         db  0xcb ; '.'
0000000000007a4e         db  0xff ; '.'
0000000000007a4f         db  0xff ; '.'
0000000000007a50         db  0xd4 ; '.'
0000000000007a51         db  0xcb ; '.'
0000000000007a52         db  0xff ; '.'
0000000000007a53         db  0xff ; '.'
0000000000007a54         db  0xd4 ; '.'
0000000000007a55         db  0xcb ; '.'
0000000000007a56         db  0xff ; '.'
0000000000007a57         db  0xff ; '.'
0000000000007a58         db  0x7c ; '|'
0000000000007a59         db  0xcb ; '.'
0000000000007a5a         db  0xff ; '.'
0000000000007a5b         db  0xff ; '.'
0000000000007a5c         db  0x7c ; '|'
0000000000007a5d         db  0xcb ; '.'
0000000000007a5e         db  0xff ; '.'
0000000000007a5f         db  0xff ; '.'
0000000000007a60         db  0x7c ; '|'
0000000000007a61         db  0xcb ; '.'
0000000000007a62         db  0xff ; '.'
0000000000007a63         db  0xff ; '.'
0000000000007a64         db  0x7c ; '|'
0000000000007a65         db  0xcb ; '.'
0000000000007a66         db  0xff ; '.'
0000000000007a67         db  0xff ; '.'
0000000000007a68         db  0x7c ; '|'
0000000000007a69         db  0xcb ; '.'
0000000000007a6a         db  0xff ; '.'
0000000000007a6b         db  0xff ; '.'
0000000000007a6c         db  0x7c ; '|'
0000000000007a6d         db  0xcb ; '.'
0000000000007a6e         db  0xff ; '.'
0000000000007a6f         db  0xff ; '.'
0000000000007a70         db  0x7c ; '|'
0000000000007a71         db  0xcb ; '.'
0000000000007a72         db  0xff ; '.'
0000000000007a73         db  0xff ; '.'
0000000000007a74         db  0x7c ; '|'
0000000000007a75         db  0xcb ; '.'
0000000000007a76         db  0xff ; '.'
0000000000007a77         db  0xff ; '.'
0000000000007a78         db  0x7c ; '|'
0000000000007a79         db  0xcb ; '.'
0000000000007a7a         db  0xff ; '.'
0000000000007a7b         db  0xff ; '.'
0000000000007a7c         db  0x7c ; '|'
0000000000007a7d         db  0xcb ; '.'
0000000000007a7e         db  0xff ; '.'
0000000000007a7f         db  0xff ; '.'
0000000000007a80         db  0x7c ; '|'
0000000000007a81         db  0xcb ; '.'
0000000000007a82         db  0xff ; '.'
0000000000007a83         db  0xff ; '.'
0000000000007a84         db  0x7c ; '|'
0000000000007a85         db  0xcb ; '.'
0000000000007a86         db  0xff ; '.'
0000000000007a87         db  0xff ; '.'
0000000000007a88         db  0x7c ; '|'
0000000000007a89         db  0xcb ; '.'
0000000000007a8a         db  0xff ; '.'
0000000000007a8b         db  0xff ; '.'
0000000000007a8c         db  0x7c ; '|'
0000000000007a8d         db  0xcb ; '.'
0000000000007a8e         db  0xff ; '.'
0000000000007a8f         db  0xff ; '.'
0000000000007a90         db  0x7c ; '|'
0000000000007a91         db  0xcb ; '.'
0000000000007a92         db  0xff ; '.'
0000000000007a93         db  0xff ; '.'
0000000000007a94         db  0x7c ; '|'
0000000000007a95         db  0xcb ; '.'
0000000000007a96         db  0xff ; '.'
0000000000007a97         db  0xff ; '.'
0000000000007a98         db  0xd4 ; '.'
0000000000007a99         db  0xcb ; '.'
0000000000007a9a         db  0xff ; '.'
0000000000007a9b         db  0xff ; '.'
0000000000007a9c         db  0xd4 ; '.'
0000000000007a9d         db  0xcb ; '.'
0000000000007a9e         db  0xff ; '.'
0000000000007a9f         db  0xff ; '.'
0000000000007aa0         db  0xd4 ; '.'
0000000000007aa1         db  0xcb ; '.'
0000000000007aa2         db  0xff ; '.'
0000000000007aa3         db  0xff ; '.'
0000000000007aa4         db  0xd4 ; '.'
0000000000007aa5         db  0xcb ; '.'
0000000000007aa6         db  0xff ; '.'
0000000000007aa7         db  0xff ; '.'
0000000000007aa8         db  0x07 ; '.'
0000000000007aa9         db  0xca ; '.'
0000000000007aaa         db  0xff ; '.'
0000000000007aab         db  0xff ; '.'
0000000000007aac         db  0x3c ; '<'
0000000000007aad         db  0xcc ; '.'
0000000000007aae         db  0xff ; '.'
0000000000007aaf         db  0xff ; '.'
0000000000007ab0         db  0x7c ; '|'
0000000000007ab1         db  0xcb ; '.'
0000000000007ab2         db  0xff ; '.'
0000000000007ab3         db  0xff ; '.'
0000000000007ab4         db  0x7c ; '|'
0000000000007ab5         db  0xcb ; '.'
0000000000007ab6         db  0xff ; '.'
0000000000007ab7         db  0xff ; '.'
0000000000007ab8         db  0x7c ; '|'
0000000000007ab9         db  0xcb ; '.'
0000000000007aba         db  0xff ; '.'
0000000000007abb         db  0xff ; '.'
0000000000007abc         db  0x7c ; '|'
0000000000007abd         db  0xcb ; '.'
0000000000007abe         db  0xff ; '.'
0000000000007abf         db  0xff ; '.'
0000000000007ac0         db  0x7c ; '|'
0000000000007ac1         db  0xcb ; '.'
0000000000007ac2         db  0xff ; '.'
0000000000007ac3         db  0xff ; '.'
0000000000007ac4         db  0x7c ; '|'
0000000000007ac5         db  0xcb ; '.'
0000000000007ac6         db  0xff ; '.'
0000000000007ac7         db  0xff ; '.'
0000000000007ac8         db  0x7c ; '|'
0000000000007ac9         db  0xcb ; '.'
0000000000007aca         db  0xff ; '.'
0000000000007acb         db  0xff ; '.'
0000000000007acc         db  0x7c ; '|'
0000000000007acd         db  0xcb ; '.'
0000000000007ace         db  0xff ; '.'
0000000000007acf         db  0xff ; '.'
0000000000007ad0         db  0x7c ; '|'
0000000000007ad1         db  0xcb ; '.'
0000000000007ad2         db  0xff ; '.'
0000000000007ad3         db  0xff ; '.'
0000000000007ad4         db  0x7c ; '|'
0000000000007ad5         db  0xcb ; '.'
0000000000007ad6         db  0xff ; '.'
0000000000007ad7         db  0xff ; '.'
0000000000007ad8         db  0x7c ; '|'
0000000000007ad9         db  0xcb ; '.'
0000000000007ada         db  0xff ; '.'
0000000000007adb         db  0xff ; '.'
0000000000007adc         db  0x7c ; '|'
0000000000007add         db  0xcb ; '.'
0000000000007ade         db  0xff ; '.'
0000000000007adf         db  0xff ; '.'
0000000000007ae0         db  0x7c ; '|'
0000000000007ae1         db  0xcb ; '.'
0000000000007ae2         db  0xff ; '.'
0000000000007ae3         db  0xff ; '.'
0000000000007ae4         db  0x7c ; '|'
0000000000007ae5         db  0xcb ; '.'
0000000000007ae6         db  0xff ; '.'
0000000000007ae7         db  0xff ; '.'
0000000000007ae8         db  0x7c ; '|'
0000000000007ae9         db  0xcb ; '.'
0000000000007aea         db  0xff ; '.'
0000000000007aeb         db  0xff ; '.'
0000000000007aec         db  0x7c ; '|'
0000000000007aed         db  0xcb ; '.'
0000000000007aee         db  0xff ; '.'
0000000000007aef         db  0xff ; '.'
0000000000007af0         db  0x7c ; '|'
0000000000007af1         db  0xcb ; '.'
0000000000007af2         db  0xff ; '.'
0000000000007af3         db  0xff ; '.'
0000000000007af4         db  0x7c ; '|'
0000000000007af5         db  0xcb ; '.'
0000000000007af6         db  0xff ; '.'
0000000000007af7         db  0xff ; '.'
0000000000007af8         db  0x7c ; '|'
0000000000007af9         db  0xcb ; '.'
0000000000007afa         db  0xff ; '.'
0000000000007afb         db  0xff ; '.'
0000000000007afc         db  0x7c ; '|'
0000000000007afd         db  0xcb ; '.'
0000000000007afe         db  0xff ; '.'
0000000000007aff         db  0xff ; '.'
0000000000007b00         db  0x7c ; '|'
0000000000007b01         db  0xcb ; '.'
0000000000007b02         db  0xff ; '.'
0000000000007b03         db  0xff ; '.'
0000000000007b04         db  0x7c ; '|'
0000000000007b05         db  0xcb ; '.'
0000000000007b06         db  0xff ; '.'
0000000000007b07         db  0xff ; '.'
0000000000007b08         db  0x7c ; '|'
0000000000007b09         db  0xcb ; '.'
0000000000007b0a         db  0xff ; '.'
0000000000007b0b         db  0xff ; '.'
0000000000007b0c         db  0x7c ; '|'
0000000000007b0d         db  0xcb ; '.'
0000000000007b0e         db  0xff ; '.'
0000000000007b0f         db  0xff ; '.'
0000000000007b10         db  0x7c ; '|'
0000000000007b11         db  0xcb ; '.'
0000000000007b12         db  0xff ; '.'
0000000000007b13         db  0xff ; '.'
0000000000007b14         db  0x7c ; '|'
0000000000007b15         db  0xcb ; '.'
0000000000007b16         db  0xff ; '.'
0000000000007b17         db  0xff ; '.'
0000000000007b18         db  0xd4 ; '.'
0000000000007b19         db  0xcb ; '.'
0000000000007b1a         db  0xff ; '.'
0000000000007b1b         db  0xff ; '.'
0000000000007b1c         db  0xac ; '.'
0000000000007b1d         db  0xca ; '.'
0000000000007b1e         db  0xff ; '.'
0000000000007b1f         db  0xff ; '.'
0000000000007b20         db  0x7c ; '|'
0000000000007b21         db  0xcb ; '.'
0000000000007b22         db  0xff ; '.'
0000000000007b23         db  0xff ; '.'
0000000000007b24         db  0xd4 ; '.'
0000000000007b25         db  0xcb ; '.'
0000000000007b26         db  0xff ; '.'
0000000000007b27         db  0xff ; '.'
0000000000007b28         db  0x7c ; '|'
0000000000007b29         db  0xcb ; '.'
0000000000007b2a         db  0xff ; '.'
0000000000007b2b         db  0xff ; '.'
0000000000007b2c         db  0xd4 ; '.'
0000000000007b2d         db  0xcb ; '.'
0000000000007b2e         db  0xff ; '.'
0000000000007b2f         db  0xff ; '.'
0000000000007b30         db  0x7c ; '|'
0000000000007b31         db  0xcb ; '.'
0000000000007b32         db  0xff ; '.'
0000000000007b33         db  0xff ; '.'
0000000000007b34         db  0x7c ; '|'
0000000000007b35         db  0xcb ; '.'
0000000000007b36         db  0xff ; '.'
0000000000007b37         db  0xff ; '.'
0000000000007b38         db  0x7c ; '|'
0000000000007b39         db  0xcb ; '.'
0000000000007b3a         db  0xff ; '.'
0000000000007b3b         db  0xff ; '.'
0000000000007b3c         db  0x7c ; '|'
0000000000007b3d         db  0xcb ; '.'
0000000000007b3e         db  0xff ; '.'
0000000000007b3f         db  0xff ; '.'
0000000000007b40         db  0x7c ; '|'
0000000000007b41         db  0xcb ; '.'
0000000000007b42         db  0xff ; '.'
0000000000007b43         db  0xff ; '.'
0000000000007b44         db  0x7c ; '|'
0000000000007b45         db  0xcb ; '.'
0000000000007b46         db  0xff ; '.'
0000000000007b47         db  0xff ; '.'
0000000000007b48         db  0x7c ; '|'
0000000000007b49         db  0xcb ; '.'
0000000000007b4a         db  0xff ; '.'
0000000000007b4b         db  0xff ; '.'
0000000000007b4c         db  0x7c ; '|'
0000000000007b4d         db  0xcb ; '.'
0000000000007b4e         db  0xff ; '.'
0000000000007b4f         db  0xff ; '.'
0000000000007b50         db  0x7c ; '|'
0000000000007b51         db  0xcb ; '.'
0000000000007b52         db  0xff ; '.'
0000000000007b53         db  0xff ; '.'
0000000000007b54         db  0x7c ; '|'
0000000000007b55         db  0xcb ; '.'
0000000000007b56         db  0xff ; '.'
0000000000007b57         db  0xff ; '.'
0000000000007b58         db  0x7c ; '|'
0000000000007b59         db  0xcb ; '.'
0000000000007b5a         db  0xff ; '.'
0000000000007b5b         db  0xff ; '.'
0000000000007b5c         db  0x7c ; '|'
0000000000007b5d         db  0xcb ; '.'
0000000000007b5e         db  0xff ; '.'
0000000000007b5f         db  0xff ; '.'
0000000000007b60         db  0x7c ; '|'
0000000000007b61         db  0xcb ; '.'
0000000000007b62         db  0xff ; '.'
0000000000007b63         db  0xff ; '.'
0000000000007b64         db  0x7c ; '|'
0000000000007b65         db  0xcb ; '.'
0000000000007b66         db  0xff ; '.'
0000000000007b67         db  0xff ; '.'
0000000000007b68         db  0x7c ; '|'
0000000000007b69         db  0xcb ; '.'
0000000000007b6a         db  0xff ; '.'
0000000000007b6b         db  0xff ; '.'
0000000000007b6c         db  0x7c ; '|'
0000000000007b6d         db  0xcb ; '.'
0000000000007b6e         db  0xff ; '.'
0000000000007b6f         db  0xff ; '.'
0000000000007b70         db  0x7c ; '|'
0000000000007b71         db  0xcb ; '.'
0000000000007b72         db  0xff ; '.'
0000000000007b73         db  0xff ; '.'
0000000000007b74         db  0x7c ; '|'
0000000000007b75         db  0xcb ; '.'
0000000000007b76         db  0xff ; '.'
0000000000007b77         db  0xff ; '.'
0000000000007b78         db  0x7c ; '|'
0000000000007b79         db  0xcb ; '.'
0000000000007b7a         db  0xff ; '.'
0000000000007b7b         db  0xff ; '.'
0000000000007b7c         db  0x7c ; '|'
0000000000007b7d         db  0xcb ; '.'
0000000000007b7e         db  0xff ; '.'
0000000000007b7f         db  0xff ; '.'
0000000000007b80         db  0x7c ; '|'
0000000000007b81         db  0xcb ; '.'
0000000000007b82         db  0xff ; '.'
0000000000007b83         db  0xff ; '.'
0000000000007b84         db  0x7c ; '|'
0000000000007b85         db  0xcb ; '.'
0000000000007b86         db  0xff ; '.'
0000000000007b87         db  0xff ; '.'
0000000000007b88         db  0x7c ; '|'
0000000000007b89         db  0xcb ; '.'
0000000000007b8a         db  0xff ; '.'
0000000000007b8b         db  0xff ; '.'
0000000000007b8c         db  0x7c ; '|'
0000000000007b8d         db  0xcb ; '.'
0000000000007b8e         db  0xff ; '.'
0000000000007b8f         db  0xff ; '.'
0000000000007b90         db  0x7c ; '|'
0000000000007b91         db  0xcb ; '.'
0000000000007b92         db  0xff ; '.'
0000000000007b93         db  0xff ; '.'
0000000000007b94         db  0x7c ; '|'
0000000000007b95         db  0xcb ; '.'
0000000000007b96         db  0xff ; '.'
0000000000007b97         db  0xff ; '.'
0000000000007b98         db  0x37 ; '7'
0000000000007b99         db  0xc9 ; '.'
0000000000007b9a         db  0xff ; '.'
0000000000007b9b         db  0xff ; '.'
0000000000007b9c         db  0xd4 ; '.'
0000000000007b9d         db  0xcb ; '.'
0000000000007b9e         db  0xff ; '.'
0000000000007b9f         db  0xff ; '.'
0000000000007ba0         db  0x37 ; '7'
0000000000007ba1         db  0xc9 ; '.'
0000000000007ba2         db  0xff ; '.'
0000000000007ba3         db  0xff ; '.'
0000000000007ba4         db  0xa4 ; '.'
0000000000007ba5         db  0xcb ; '.'
0000000000007ba6         db  0xff ; '.'
0000000000007ba7         db  0xff ; '.'
0000000000007ba8         db  0x28 ; '('                                         ; DATA XREF=sub_45d0+137
0000000000007ba9         db  0xcb ; '.'
0000000000007baa         db  0xff ; '.'
0000000000007bab         db  0xff ; '.'
0000000000007bac         db  0x38 ; '8'
0000000000007bad         db  0xca ; '.'
0000000000007bae         db  0xff ; '.'
0000000000007baf         db  0xff ; '.'
0000000000007bb0         db  0x38 ; '8'
0000000000007bb1         db  0xca ; '.'
0000000000007bb2         db  0xff ; '.'
0000000000007bb3         db  0xff ; '.'
0000000000007bb4         db  0x38 ; '8'
0000000000007bb5         db  0xca ; '.'
0000000000007bb6         db  0xff ; '.'
0000000000007bb7         db  0xff ; '.'
0000000000007bb8         db  0x38 ; '8'
0000000000007bb9         db  0xca ; '.'
0000000000007bba         db  0xff ; '.'
0000000000007bbb         db  0xff ; '.'
0000000000007bbc         db  0x38 ; '8'
0000000000007bbd         db  0xca ; '.'
0000000000007bbe         db  0xff ; '.'
0000000000007bbf         db  0xff ; '.'
0000000000007bc0         db  0x38 ; '8'
0000000000007bc1         db  0xca ; '.'
0000000000007bc2         db  0xff ; '.'
0000000000007bc3         db  0xff ; '.'
0000000000007bc4         db  0x18 ; '.'
0000000000007bc5         db  0xcb ; '.'
0000000000007bc6         db  0xff ; '.'
0000000000007bc7         db  0xff ; '.'
0000000000007bc8         db  0x68 ; 'h'
0000000000007bc9         db  0xcc ; '.'
0000000000007bca         db  0xff ; '.'
0000000000007bcb         db  0xff ; '.'
0000000000007bcc         db  0x50 ; 'P'
0000000000007bcd         db  0xcc ; '.'
0000000000007bce         db  0xff ; '.'
0000000000007bcf         db  0xff ; '.'
0000000000007bd0         db  0x00 ; '.'
0000000000007bd1         db  0xcb ; '.'
0000000000007bd2         db  0xff ; '.'
0000000000007bd3         db  0xff ; '.'
0000000000007bd4         db  0x40 ; '@'
0000000000007bd5         db  0xcc ; '.'
0000000000007bd6         db  0xff ; '.'
0000000000007bd7         db  0xff ; '.'
0000000000007bd8         db  0xe8 ; '.'
0000000000007bd9         db  0xca ; '.'
0000000000007bda         db  0xff ; '.'
0000000000007bdb         db  0xff ; '.'
0000000000007bdc         db  0x28 ; '('
0000000000007bdd         db  0xcc ; '.'
0000000000007bde         db  0xff ; '.'
0000000000007bdf         db  0xff ; '.'
0000000000007be0         db  0x38 ; '8'
0000000000007be1         db  0xca ; '.'
0000000000007be2         db  0xff ; '.'
0000000000007be3         db  0xff ; '.'
0000000000007be4         db  0x38 ; '8'
0000000000007be5         db  0xca ; '.'
0000000000007be6         db  0xff ; '.'
0000000000007be7         db  0xff ; '.'
0000000000007be8         db  0x38 ; '8'
0000000000007be9         db  0xca ; '.'
0000000000007bea         db  0xff ; '.'
0000000000007beb         db  0xff ; '.'
0000000000007bec         db  0x38 ; '8'
0000000000007bed         db  0xca ; '.'
0000000000007bee         db  0xff ; '.'
0000000000007bef         db  0xff ; '.'
0000000000007bf0         db  0x38 ; '8'
0000000000007bf1         db  0xca ; '.'
0000000000007bf2         db  0xff ; '.'
0000000000007bf3         db  0xff ; '.'
0000000000007bf4         db  0x38 ; '8'
0000000000007bf5         db  0xca ; '.'
0000000000007bf6         db  0xff ; '.'
0000000000007bf7         db  0xff ; '.'
0000000000007bf8         db  0x38 ; '8'
0000000000007bf9         db  0xca ; '.'
0000000000007bfa         db  0xff ; '.'
0000000000007bfb         db  0xff ; '.'
0000000000007bfc         db  0x38 ; '8'
0000000000007bfd         db  0xca ; '.'
0000000000007bfe         db  0xff ; '.'
0000000000007bff         db  0xff ; '.'
0000000000007c00         db  0x38 ; '8'
0000000000007c01         db  0xca ; '.'
0000000000007c02         db  0xff ; '.'
0000000000007c03         db  0xff ; '.'
0000000000007c04         db  0x38 ; '8'
0000000000007c05         db  0xca ; '.'
0000000000007c06         db  0xff ; '.'
0000000000007c07         db  0xff ; '.'
0000000000007c08         db  0x38 ; '8'
0000000000007c09         db  0xca ; '.'
0000000000007c0a         db  0xff ; '.'
0000000000007c0b         db  0xff ; '.'
0000000000007c0c         db  0x38 ; '8'
0000000000007c0d         db  0xca ; '.'
0000000000007c0e         db  0xff ; '.'
0000000000007c0f         db  0xff ; '.'
0000000000007c10         db  0x38 ; '8'
0000000000007c11         db  0xca ; '.'
0000000000007c12         db  0xff ; '.'
0000000000007c13         db  0xff ; '.'
0000000000007c14         db  0x38 ; '8'
0000000000007c15         db  0xca ; '.'
0000000000007c16         db  0xff ; '.'
0000000000007c17         db  0xff ; '.'
0000000000007c18         db  0x38 ; '8'
0000000000007c19         db  0xca ; '.'
0000000000007c1a         db  0xff ; '.'
0000000000007c1b         db  0xff ; '.'
0000000000007c1c         db  0x38 ; '8'
0000000000007c1d         db  0xca ; '.'
0000000000007c1e         db  0xff ; '.'
0000000000007c1f         db  0xff ; '.'
0000000000007c20         db  0x38 ; '8'
0000000000007c21         db  0xca ; '.'
0000000000007c22         db  0xff ; '.'
0000000000007c23         db  0xff ; '.'
0000000000007c24         db  0x38 ; '8'
0000000000007c25         db  0xca ; '.'
0000000000007c26         db  0xff ; '.'
0000000000007c27         db  0xff ; '.'
0000000000007c28         db  0x10 ; '.'
0000000000007c29         db  0xcc ; '.'
0000000000007c2a         db  0xff ; '.'
0000000000007c2b         db  0xff ; '.'
0000000000007c2c         db  0xf8 ; '.'
0000000000007c2d         db  0xcb ; '.'
0000000000007c2e         db  0xff ; '.'
0000000000007c2f         db  0xff ; '.'
0000000000007c30         db  0xf8 ; '.'
0000000000007c31         db  0xcb ; '.'
0000000000007c32         db  0xff ; '.'
0000000000007c33         db  0xff ; '.'
0000000000007c34         db  0xe0 ; '.'
0000000000007c35         db  0xcb ; '.'
0000000000007c36         db  0xff ; '.'
0000000000007c37         db  0xff ; '.'
0000000000007c38         db  0xf8 ; '.'
0000000000007c39         db  0xcb ; '.'
0000000000007c3a         db  0xff ; '.'
0000000000007c3b         db  0xff ; '.'
0000000000007c3c         db  0xc8 ; '.'
0000000000007c3d         db  0xcb ; '.'
0000000000007c3e         db  0xff ; '.'
0000000000007c3f         db  0xff ; '.'
0000000000007c40         db  0xf8 ; '.'
0000000000007c41         db  0xcb ; '.'
0000000000007c42         db  0xff ; '.'
0000000000007c43         db  0xff ; '.'
0000000000007c44         db  0x38 ; '8'
0000000000007c45         db  0xc8 ; '.'
0000000000007c46         db  0xff ; '.'
0000000000007c47         db  0xff ; '.'
0000000000007c48         db  0xf8 ; '.'
0000000000007c49         db  0xcb ; '.'
0000000000007c4a         db  0xff ; '.'
0000000000007c4b         db  0xff ; '.'
0000000000007c4c         db  0xf8 ; '.'
0000000000007c4d         db  0xcb ; '.'
0000000000007c4e         db  0xff ; '.'
0000000000007c4f         db  0xff ; '.'
0000000000007c50         db  0xf8 ; '.'
0000000000007c51         db  0xcb ; '.'
0000000000007c52         db  0xff ; '.'
0000000000007c53         db  0xff ; '.'
0000000000007c54         db  0xc8 ; '.'
0000000000007c55         db  0xcb ; '.'
0000000000007c56         db  0xff ; '.'
0000000000007c57         db  0xff ; '.'
0000000000007c58         db  0xc8 ; '.'
0000000000007c59         db  0xcb ; '.'
0000000000007c5a         db  0xff ; '.'
0000000000007c5b         db  0xff ; '.'
0000000000007c5c         db  0xc8 ; '.'
0000000000007c5d         db  0xcb ; '.'
0000000000007c5e         db  0xff ; '.'
0000000000007c5f         db  0xff ; '.'
0000000000007c60         db  0xc8 ; '.'
0000000000007c61         db  0xcb ; '.'
0000000000007c62         db  0xff ; '.'
0000000000007c63         db  0xff ; '.'
0000000000007c64         db  0xc8 ; '.'
0000000000007c65         db  0xcb ; '.'
0000000000007c66         db  0xff ; '.'
0000000000007c67         db  0xff ; '.'
0000000000007c68         db  0xc8 ; '.'
0000000000007c69         db  0xcb ; '.'
0000000000007c6a         db  0xff ; '.'
0000000000007c6b         db  0xff ; '.'
0000000000007c6c         db  0xc8 ; '.'
0000000000007c6d         db  0xcb ; '.'
0000000000007c6e         db  0xff ; '.'
0000000000007c6f         db  0xff ; '.'
0000000000007c70         db  0xc8 ; '.'
0000000000007c71         db  0xcb ; '.'
0000000000007c72         db  0xff ; '.'
0000000000007c73         db  0xff ; '.'
0000000000007c74         db  0xc8 ; '.'
0000000000007c75         db  0xcb ; '.'
0000000000007c76         db  0xff ; '.'
0000000000007c77         db  0xff ; '.'
0000000000007c78         db  0xc8 ; '.'
0000000000007c79         db  0xcb ; '.'
0000000000007c7a         db  0xff ; '.'
0000000000007c7b         db  0xff ; '.'
0000000000007c7c         db  0xc8 ; '.'
0000000000007c7d         db  0xcb ; '.'
0000000000007c7e         db  0xff ; '.'
0000000000007c7f         db  0xff ; '.'
0000000000007c80         db  0xc8 ; '.'
0000000000007c81         db  0xcb ; '.'
0000000000007c82         db  0xff ; '.'
0000000000007c83         db  0xff ; '.'
0000000000007c84         db  0xc8 ; '.'
0000000000007c85         db  0xcb ; '.'
0000000000007c86         db  0xff ; '.'
0000000000007c87         db  0xff ; '.'
0000000000007c88         db  0xc8 ; '.'
0000000000007c89         db  0xcb ; '.'
0000000000007c8a         db  0xff ; '.'
0000000000007c8b         db  0xff ; '.'
0000000000007c8c         db  0xc8 ; '.'
0000000000007c8d         db  0xcb ; '.'
0000000000007c8e         db  0xff ; '.'
0000000000007c8f         db  0xff ; '.'
0000000000007c90         db  0xc8 ; '.'
0000000000007c91         db  0xcb ; '.'
0000000000007c92         db  0xff ; '.'
0000000000007c93         db  0xff ; '.'
0000000000007c94         db  0xf8 ; '.'
0000000000007c95         db  0xcb ; '.'
0000000000007c96         db  0xff ; '.'
0000000000007c97         db  0xff ; '.'
0000000000007c98         db  0xf8 ; '.'
0000000000007c99         db  0xcb ; '.'
0000000000007c9a         db  0xff ; '.'
0000000000007c9b         db  0xff ; '.'
0000000000007c9c         db  0xf8 ; '.'
0000000000007c9d         db  0xcb ; '.'
0000000000007c9e         db  0xff ; '.'
0000000000007c9f         db  0xff ; '.'
0000000000007ca0         db  0xf8 ; '.'
0000000000007ca1         db  0xcb ; '.'
0000000000007ca2         db  0xff ; '.'
0000000000007ca3         db  0xff ; '.'
0000000000007ca4         db  0x08 ; '.'
0000000000007ca5         db  0xc8 ; '.'
0000000000007ca6         db  0xff ; '.'
0000000000007ca7         db  0xff ; '.'
0000000000007ca8         db  0x38 ; '8'
0000000000007ca9         db  0xca ; '.'
0000000000007caa         db  0xff ; '.'
0000000000007cab         db  0xff ; '.'
0000000000007cac         db  0xc8 ; '.'
0000000000007cad         db  0xcb ; '.'
0000000000007cae         db  0xff ; '.'
0000000000007caf         db  0xff ; '.'
0000000000007cb0         db  0xc8 ; '.'
0000000000007cb1         db  0xcb ; '.'
0000000000007cb2         db  0xff ; '.'
0000000000007cb3         db  0xff ; '.'
0000000000007cb4         db  0xc8 ; '.'
0000000000007cb5         db  0xcb ; '.'
0000000000007cb6         db  0xff ; '.'
0000000000007cb7         db  0xff ; '.'
0000000000007cb8         db  0xc8 ; '.'
0000000000007cb9         db  0xcb ; '.'
0000000000007cba         db  0xff ; '.'
0000000000007cbb         db  0xff ; '.'
0000000000007cbc         db  0xc8 ; '.'
0000000000007cbd         db  0xcb ; '.'
0000000000007cbe         db  0xff ; '.'
0000000000007cbf         db  0xff ; '.'
0000000000007cc0         db  0xc8 ; '.'
0000000000007cc1         db  0xcb ; '.'
0000000000007cc2         db  0xff ; '.'
0000000000007cc3         db  0xff ; '.'
0000000000007cc4         db  0xc8 ; '.'
0000000000007cc5         db  0xcb ; '.'
0000000000007cc6         db  0xff ; '.'
0000000000007cc7         db  0xff ; '.'
0000000000007cc8         db  0xc8 ; '.'
0000000000007cc9         db  0xcb ; '.'
0000000000007cca         db  0xff ; '.'
0000000000007ccb         db  0xff ; '.'
0000000000007ccc         db  0xc8 ; '.'
0000000000007ccd         db  0xcb ; '.'
0000000000007cce         db  0xff ; '.'
0000000000007ccf         db  0xff ; '.'
0000000000007cd0         db  0xc8 ; '.'
0000000000007cd1         db  0xcb ; '.'
0000000000007cd2         db  0xff ; '.'
0000000000007cd3         db  0xff ; '.'
0000000000007cd4         db  0xc8 ; '.'
0000000000007cd5         db  0xcb ; '.'
0000000000007cd6         db  0xff ; '.'
0000000000007cd7         db  0xff ; '.'
0000000000007cd8         db  0xc8 ; '.'
0000000000007cd9         db  0xcb ; '.'
0000000000007cda         db  0xff ; '.'
0000000000007cdb         db  0xff ; '.'
0000000000007cdc         db  0xc8 ; '.'
0000000000007cdd         db  0xcb ; '.'
0000000000007cde         db  0xff ; '.'
0000000000007cdf         db  0xff ; '.'
0000000000007ce0         db  0xc8 ; '.'
0000000000007ce1         db  0xcb ; '.'
0000000000007ce2         db  0xff ; '.'
0000000000007ce3         db  0xff ; '.'
0000000000007ce4         db  0xc8 ; '.'
0000000000007ce5         db  0xcb ; '.'
0000000000007ce6         db  0xff ; '.'
0000000000007ce7         db  0xff ; '.'
0000000000007ce8         db  0xc8 ; '.'
0000000000007ce9         db  0xcb ; '.'
0000000000007cea         db  0xff ; '.'
0000000000007ceb         db  0xff ; '.'
0000000000007cec         db  0xc8 ; '.'
0000000000007ced         db  0xcb ; '.'
0000000000007cee         db  0xff ; '.'
0000000000007cef         db  0xff ; '.'
0000000000007cf0         db  0xc8 ; '.'
0000000000007cf1         db  0xcb ; '.'
0000000000007cf2         db  0xff ; '.'
0000000000007cf3         db  0xff ; '.'
0000000000007cf4         db  0xc8 ; '.'
0000000000007cf5         db  0xcb ; '.'
0000000000007cf6         db  0xff ; '.'
0000000000007cf7         db  0xff ; '.'
0000000000007cf8         db  0xc8 ; '.'
0000000000007cf9         db  0xcb ; '.'
0000000000007cfa         db  0xff ; '.'
0000000000007cfb         db  0xff ; '.'
0000000000007cfc         db  0xc8 ; '.'
0000000000007cfd         db  0xcb ; '.'
0000000000007cfe         db  0xff ; '.'
0000000000007cff         db  0xff ; '.'
0000000000007d00         db  0xc8 ; '.'
0000000000007d01         db  0xcb ; '.'
0000000000007d02         db  0xff ; '.'
0000000000007d03         db  0xff ; '.'
0000000000007d04         db  0xc8 ; '.'
0000000000007d05         db  0xcb ; '.'
0000000000007d06         db  0xff ; '.'
0000000000007d07         db  0xff ; '.'
0000000000007d08         db  0xc8 ; '.'
0000000000007d09         db  0xcb ; '.'
0000000000007d0a         db  0xff ; '.'
0000000000007d0b         db  0xff ; '.'
0000000000007d0c         db  0xc8 ; '.'
0000000000007d0d         db  0xcb ; '.'
0000000000007d0e         db  0xff ; '.'
0000000000007d0f         db  0xff ; '.'
0000000000007d10         db  0xc8 ; '.'
0000000000007d11         db  0xcb ; '.'
0000000000007d12         db  0xff ; '.'
0000000000007d13         db  0xff ; '.'
0000000000007d14         db  0xf8 ; '.'
0000000000007d15         db  0xcb ; '.'
0000000000007d16         db  0xff ; '.'
0000000000007d17         db  0xff ; '.'
0000000000007d18         db  0xc8 ; '.'
0000000000007d19         db  0xca ; '.'
0000000000007d1a         db  0xff ; '.'
0000000000007d1b         db  0xff ; '.'
0000000000007d1c         db  0xc8 ; '.'
0000000000007d1d         db  0xcb ; '.'
0000000000007d1e         db  0xff ; '.'
0000000000007d1f         db  0xff ; '.'
0000000000007d20         db  0xf8 ; '.'
0000000000007d21         db  0xcb ; '.'
0000000000007d22         db  0xff ; '.'
0000000000007d23         db  0xff ; '.'
0000000000007d24         db  0xc8 ; '.'
0000000000007d25         db  0xcb ; '.'
0000000000007d26         db  0xff ; '.'
0000000000007d27         db  0xff ; '.'
0000000000007d28         db  0xf8 ; '.'
0000000000007d29         db  0xcb ; '.'
0000000000007d2a         db  0xff ; '.'
0000000000007d2b         db  0xff ; '.'
0000000000007d2c         db  0xc8 ; '.'
0000000000007d2d         db  0xcb ; '.'
0000000000007d2e         db  0xff ; '.'
0000000000007d2f         db  0xff ; '.'
0000000000007d30         db  0xc8 ; '.'
0000000000007d31         db  0xcb ; '.'
0000000000007d32         db  0xff ; '.'
0000000000007d33         db  0xff ; '.'
0000000000007d34         db  0xc8 ; '.'
0000000000007d35         db  0xcb ; '.'
0000000000007d36         db  0xff ; '.'
0000000000007d37         db  0xff ; '.'
0000000000007d38         db  0xc8 ; '.'
0000000000007d39         db  0xcb ; '.'
0000000000007d3a         db  0xff ; '.'
0000000000007d3b         db  0xff ; '.'
0000000000007d3c         db  0xc8 ; '.'
0000000000007d3d         db  0xcb ; '.'
0000000000007d3e         db  0xff ; '.'
0000000000007d3f         db  0xff ; '.'
0000000000007d40         db  0xc8 ; '.'
0000000000007d41         db  0xcb ; '.'
0000000000007d42         db  0xff ; '.'
0000000000007d43         db  0xff ; '.'
0000000000007d44         db  0xc8 ; '.'
0000000000007d45         db  0xcb ; '.'
0000000000007d46         db  0xff ; '.'
0000000000007d47         db  0xff ; '.'
0000000000007d48         db  0xc8 ; '.'
0000000000007d49         db  0xcb ; '.'
0000000000007d4a         db  0xff ; '.'
0000000000007d4b         db  0xff ; '.'
0000000000007d4c         db  0xc8 ; '.'
0000000000007d4d         db  0xcb ; '.'
0000000000007d4e         db  0xff ; '.'
0000000000007d4f         db  0xff ; '.'
0000000000007d50         db  0xc8 ; '.'
0000000000007d51         db  0xcb ; '.'
0000000000007d52         db  0xff ; '.'
0000000000007d53         db  0xff ; '.'
0000000000007d54         db  0xc8 ; '.'
0000000000007d55         db  0xcb ; '.'
0000000000007d56         db  0xff ; '.'
0000000000007d57         db  0xff ; '.'
0000000000007d58         db  0xc8 ; '.'
0000000000007d59         db  0xcb ; '.'
0000000000007d5a         db  0xff ; '.'
0000000000007d5b         db  0xff ; '.'
0000000000007d5c         db  0xc8 ; '.'
0000000000007d5d         db  0xcb ; '.'
0000000000007d5e         db  0xff ; '.'
0000000000007d5f         db  0xff ; '.'
0000000000007d60         db  0xc8 ; '.'
0000000000007d61         db  0xcb ; '.'
0000000000007d62         db  0xff ; '.'
0000000000007d63         db  0xff ; '.'
0000000000007d64         db  0xc8 ; '.'
0000000000007d65         db  0xcb ; '.'
0000000000007d66         db  0xff ; '.'
0000000000007d67         db  0xff ; '.'
0000000000007d68         db  0xc8 ; '.'
0000000000007d69         db  0xcb ; '.'
0000000000007d6a         db  0xff ; '.'
0000000000007d6b         db  0xff ; '.'
0000000000007d6c         db  0xc8 ; '.'
0000000000007d6d         db  0xcb ; '.'
0000000000007d6e         db  0xff ; '.'
0000000000007d6f         db  0xff ; '.'
0000000000007d70         db  0xc8 ; '.'
0000000000007d71         db  0xcb ; '.'
0000000000007d72         db  0xff ; '.'
0000000000007d73         db  0xff ; '.'
0000000000007d74         db  0xc8 ; '.'
0000000000007d75         db  0xcb ; '.'
0000000000007d76         db  0xff ; '.'
0000000000007d77         db  0xff ; '.'
0000000000007d78         db  0xc8 ; '.'
0000000000007d79         db  0xcb ; '.'
0000000000007d7a         db  0xff ; '.'
0000000000007d7b         db  0xff ; '.'
0000000000007d7c         db  0xc8 ; '.'
0000000000007d7d         db  0xcb ; '.'
0000000000007d7e         db  0xff ; '.'
0000000000007d7f         db  0xff ; '.'
0000000000007d80         db  0xc8 ; '.'
0000000000007d81         db  0xcb ; '.'
0000000000007d82         db  0xff ; '.'
0000000000007d83         db  0xff ; '.'
0000000000007d84         db  0xc8 ; '.'
0000000000007d85         db  0xcb ; '.'
0000000000007d86         db  0xff ; '.'
0000000000007d87         db  0xff ; '.'
0000000000007d88         db  0xc8 ; '.'
0000000000007d89         db  0xcb ; '.'
0000000000007d8a         db  0xff ; '.'
0000000000007d8b         db  0xff ; '.'
0000000000007d8c         db  0xc8 ; '.'
0000000000007d8d         db  0xcb ; '.'
0000000000007d8e         db  0xff ; '.'
0000000000007d8f         db  0xff ; '.'
0000000000007d90         db  0xc8 ; '.'
0000000000007d91         db  0xcb ; '.'
0000000000007d92         db  0xff ; '.'
0000000000007d93         db  0xff ; '.'
0000000000007d94         db  0x38 ; '8'
0000000000007d95         db  0xc7 ; '.'
0000000000007d96         db  0xff ; '.'
0000000000007d97         db  0xff ; '.'
0000000000007d98         db  0xf8 ; '.'
0000000000007d99         db  0xcb ; '.'
0000000000007d9a         db  0xff ; '.'
0000000000007d9b         db  0xff ; '.'
0000000000007d9c         db  0x38 ; '8'
0000000000007d9d         db  0xc7 ; '.'
0000000000007d9e         db  0xff ; '.'
0000000000007d9f         db  0xff ; '.'
0000000000007da0         db  0xe0 ; '.'
0000000000007da1         db  0xcb ; '.'
0000000000007da2         db  0xff ; '.'
0000000000007da3         db  0xff ; '.'
0000000000007da4         db  0x00 ; '.'
0000000000007da5         db  0x00 ; '.'
0000000000007da6         db  0x00 ; '.'
0000000000007da7         db  0x00 ; '.'
0000000000007da8         db  0x00 ; '.'
0000000000007da9         db  0x00 ; '.'
0000000000007daa         db  0x00 ; '.'
0000000000007dab         db  0x00 ; '.'
0000000000007dac         db  0x00 ; '.'
0000000000007dad         db  0x00 ; '.'
0000000000007dae         db  0x00 ; '.'
0000000000007daf         db  0x00 ; '.'
0000000000007db0         db  0x00 ; '.'
0000000000007db1         db  0x00 ; '.'
0000000000007db2         db  0x00 ; '.'
0000000000007db3         db  0x00 ; '.'
0000000000007db4         db  0x00 ; '.'
0000000000007db5         db  0x00 ; '.'
0000000000007db6         db  0x00 ; '.'
0000000000007db7         db  0x00 ; '.'
0000000000007db8         db  0x00 ; '.'
0000000000007db9         db  0x00 ; '.'
0000000000007dba         db  0x00 ; '.'
0000000000007dbb         db  0x00 ; '.'
0000000000007dbc         db  0x00 ; '.'
0000000000007dbd         db  0x00 ; '.'
0000000000007dbe         db  0x00 ; '.'
0000000000007dbf         db  0x00 ; '.'
                     quoting_style_vals:
0000000000007dc0         db  0x00 ; '.'
0000000000007dc1         db  0x00 ; '.'
0000000000007dc2         db  0x00 ; '.'
0000000000007dc3         db  0x00 ; '.'
0000000000007dc4         db  0x01 ; '.'
0000000000007dc5         db  0x00 ; '.'
0000000000007dc6         db  0x00 ; '.'
0000000000007dc7         db  0x00 ; '.'
0000000000007dc8         db  0x02 ; '.'
0000000000007dc9         db  0x00 ; '.'
0000000000007dca         db  0x00 ; '.'
0000000000007dcb         db  0x00 ; '.'
0000000000007dcc         db  0x03 ; '.'
0000000000007dcd         db  0x00 ; '.'
0000000000007dce         db  0x00 ; '.'
0000000000007dcf         db  0x00 ; '.'
0000000000007dd0         db  0x04 ; '.'
0000000000007dd1         db  0x00 ; '.'
0000000000007dd2         db  0x00 ; '.'
0000000000007dd3         db  0x00 ; '.'
0000000000007dd4         db  0x05 ; '.'
0000000000007dd5         db  0x00 ; '.'
0000000000007dd6         db  0x00 ; '.'
0000000000007dd7         db  0x00 ; '.'
0000000000007dd8         db  0x06 ; '.'
0000000000007dd9         db  0x00 ; '.'
0000000000007dda         db  0x00 ; '.'
0000000000007ddb         db  0x00 ; '.'
0000000000007ddc         db  0x07 ; '.'
0000000000007ddd         db  0x00 ; '.'
0000000000007dde         db  0x00 ; '.'
0000000000007ddf         db  0x00 ; '.'
0000000000007de0         db  0x08 ; '.'
0000000000007de1         db  0x00 ; '.'
0000000000007de2         db  0x00 ; '.'
0000000000007de3         db  0x00 ; '.'
0000000000007de4         db  0x09 ; '.'
0000000000007de5         db  0x00 ; '.'
0000000000007de6         db  0x00 ; '.'
0000000000007de7         db  0x00 ; '.'
                     aSSSn:
0000000000007de8         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
0000000000007df4         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
0000000000007dfb         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
0000000000007dfc         db  0x43 ; 'C'
0000000000007dfd         db  0x29 ; ')'
0000000000007dfe         db  0x00 ; '.'
                     aWrittenBySn:
0000000000007dff         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
0000000000007e0f         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
0000000000007e26         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
0000000000007e42         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
0000000000007e57         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
0000000000007e6d         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
0000000000007e81         align      8
                     aNlicenseGplv3G:
0000000000007e88         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
0000000000007f54         align      8
                     aWrittenBySSSna:
0000000000007f58         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_7f78:        // aWrittenBySSSns
0000000000007f78         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
0000000000007f9c         align      32
                     aWrittenBySSSns_7fa0:        // aWrittenBySSSns
0000000000007fa0         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_7fc8:        // aWrittenBySSSns
0000000000007fc8         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
0000000000007ff4         db  0x00 ; '.'
0000000000007ff5         db  0x00 ; '.'
0000000000007ff6         db  0x00 ; '.'
0000000000007ff7         db  0x00 ; '.'
0000000000007ff8         db  0x57 ; 'W'                                         ; DATA XREF=version_etc_arn+184
0000000000007ff9         db  0x72 ; 'r'
0000000000007ffa         db  0x69 ; 'i'
0000000000007ffb         db  0x74 ; 't'
0000000000007ffc         db  0x74 ; 't'
0000000000007ffd         db  0x65 ; 'e'
0000000000007ffe         db  0x6e ; 'n'
0000000000007fff         db  0x20 ; ' '
                     aBySSSnsSSSnand:
0000000000008000         db         "by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=main+712, main+1959, wc+206
                     aWrittenBySSSns:
0000000000008028         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
000000000000805c         align      32
                     aWrittenBySSSns_8060:        // aWrittenBySSSns
0000000000008060         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
000000000000809c         align      32
                     aGeneralHelpUsi:
00000000000080a0         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
00000000000080e1         align      8
                     switch_table_80e8:        // switch_table
00000000000080e8         dd         version_etc_arn.loc_61b6-switch_table_80e8, version_etc_arn.loc_6248-switch_table_80e8, version_etc_arn.loc_6288-switch_table_80e8, version_etc_arn.loc_62d0-switch_table_80e8 ; switch table used at 0x6134 containing 10 entries, DATA XREF=version_etc_arn+150
00000000000080f8         dd         version_etc_arn.loc_6320-switch_table_80e8, version_etc_arn.loc_6378-switch_table_80e8, version_etc_arn.loc_63a8-switch_table_80e8, version_etc_arn.loc_6410-switch_table_80e8
0000000000008108         dd         version_etc_arn.loc_6140-switch_table_80e8, version_etc_arn.loc_61f0-switch_table_80e8
0000000000008110         align      32
                     version_etc_copyright:
0000000000008120         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
000000000000814f         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die, print_and_abort
0000000000008160         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
0000000000008161         db  0x00 ; '.'
                     aPosix:
0000000000008162         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aAscii:
0000000000008168         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
000000000000816e         db  0x00 ; '.'
000000000000816f         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0x8170; 0x849c[ (812 bytes)
        ; File offset : [33136; 33948[ (812 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000008170         db  0x01 ; '.'
0000000000008171         db  0x1b ; '.'
0000000000008172         db  0x03 ; '.'
0000000000008173         db  0x3b ; ';'
0000000000008174         db  0x2c ; ','
0000000000008175         db  0x03 ; '.'
0000000000008176         db  0x00 ; '.'
0000000000008177         db  0x00 ; '.'
0000000000008178         db  0x64 ; 'd'
0000000000008179         db  0x00 ; '.'
000000000000817a         db  0x00 ; '.'
000000000000817b         db  0x00 ; '.'
000000000000817c         db  0x50 ; 'P'
000000000000817d         db  0x98 ; '.'
000000000000817e         db  0xff ; '.'
000000000000817f         db  0xff ; '.'
0000000000008180         db  0x78 ; 'x'
0000000000008181         db  0x03 ; '.'
0000000000008182         db  0x00 ; '.'
0000000000008183         db  0x00 ; '.'
0000000000008184         db  0x50 ; 'P'
0000000000008185         db  0x9c ; '.'
0000000000008186         db  0xff ; '.'
0000000000008187         db  0xff ; '.'
0000000000008188         db  0xa0 ; '.'
0000000000008189         db  0x03 ; '.'
000000000000818a         db  0x00 ; '.'
000000000000818b         db  0x00 ; '.'
000000000000818c         db  0x70 ; 'p'
000000000000818d         db  0x9c ; '.'
000000000000818e         db  0xff ; '.'
000000000000818f         db  0xff ; '.'
0000000000008190         db  0x80 ; '.'
0000000000008191         db  0x04 ; '.'
0000000000008192         db  0x00 ; '.'
0000000000008193         db  0x00 ; '.'
0000000000008194         db  0xd0 ; '.'
0000000000008195         db  0xa6 ; '.'
0000000000008196         db  0xff ; '.'
0000000000008197         db  0xff ; '.'
0000000000008198         db  0x48 ; 'H'
0000000000008199         db  0x03 ; '.'
000000000000819a         db  0x00 ; '.'
000000000000819b         db  0x00 ; '.'
000000000000819c         db  0xe0 ; '.'
000000000000819d         db  0xa7 ; '.'
000000000000819e         db  0xff ; '.'
000000000000819f         db  0xff ; '.'
00000000000081a0         db  0xb8 ; '.'
00000000000081a1         db  0x03 ; '.'
00000000000081a2         db  0x00 ; '.'
00000000000081a3         db  0x00 ; '.'
00000000000081a4         db  0xf0 ; '.'
00000000000081a5         db  0xa9 ; '.'
00000000000081a6         db  0xff ; '.'
00000000000081a7         db  0xff ; '.'
00000000000081a8         db  0x04 ; '.'
00000000000081a9         db  0x04 ; '.'
00000000000081aa         db  0x00 ; '.'
00000000000081ab         db  0x00 ; '.'
00000000000081ac         db  0xe0 ; '.'
00000000000081ad         db  0xb4 ; '.'
00000000000081ae         db  0xff ; '.'
00000000000081af         db  0xff ; '.'
00000000000081b0         db  0x54 ; 'T'
00000000000081b1         db  0x04 ; '.'
00000000000081b2         db  0x00 ; '.'
00000000000081b3         db  0x00 ; '.'
00000000000081b4         db  0xa0 ; '.'
00000000000081b5         db  0xb8 ; '.'
00000000000081b6         db  0xff ; '.'
00000000000081b7         db  0xff ; '.'
00000000000081b8         db  0xe0 ; '.'
00000000000081b9         db  0x04 ; '.'
00000000000081ba         db  0x00 ; '.'
00000000000081bb         db  0x00 ; '.'
00000000000081bc         db  0xd0 ; '.'
00000000000081bd         db  0xb8 ; '.'
00000000000081be         db  0xff ; '.'
00000000000081bf         db  0xff ; '.'
00000000000081c0         db  0xfc ; '.'
00000000000081c1         db  0x04 ; '.'
00000000000081c2         db  0x00 ; '.'
00000000000081c3         db  0x00 ; '.'
00000000000081c4         db  0x10 ; '.'
00000000000081c5         db  0xb9 ; '.'
00000000000081c6         db  0xff ; '.'
00000000000081c7         db  0xff ; '.'
00000000000081c8         db  0x18 ; '.'
00000000000081c9         db  0x05 ; '.'
00000000000081ca         db  0x00 ; '.'
00000000000081cb         db  0x00 ; '.'
00000000000081cc         db  0xa0 ; '.'
00000000000081cd         db  0xb9 ; '.'
00000000000081ce         db  0xff ; '.'
00000000000081cf         db  0xff ; '.'
00000000000081d0         db  0x4c ; 'L'
00000000000081d1         db  0x05 ; '.'
00000000000081d2         db  0x00 ; '.'
00000000000081d3         db  0x00 ; '.'
00000000000081d4         db  0xc0 ; '.'
00000000000081d5         db  0xb9 ; '.'
00000000000081d6         db  0xff ; '.'
00000000000081d7         db  0xff ; '.'
00000000000081d8         db  0x60 ; '`'
00000000000081d9         db  0x05 ; '.'
00000000000081da         db  0x00 ; '.'
00000000000081db         db  0x00 ; '.'
00000000000081dc         db  0xe0 ; '.'
00000000000081dd         db  0xb9 ; '.'
00000000000081de         db  0xff ; '.'
00000000000081df         db  0xff ; '.'
00000000000081e0         db  0x80 ; '.'
00000000000081e1         db  0x05 ; '.'
00000000000081e2         db  0x00 ; '.'
00000000000081e3         db  0x00 ; '.'
00000000000081e4         db  0xf0 ; '.'
00000000000081e5         db  0xb9 ; '.'
00000000000081e6         db  0xff ; '.'
00000000000081e7         db  0xff ; '.'
00000000000081e8         db  0x94 ; '.'
00000000000081e9         db  0x05 ; '.'
00000000000081ea         db  0x00 ; '.'
00000000000081eb         db  0x00 ; '.'
00000000000081ec         db  0x00 ; '.'
00000000000081ed         db  0xba ; '.'
00000000000081ee         db  0xff ; '.'
00000000000081ef         db  0xff ; '.'
00000000000081f0         db  0xa8 ; '.'
00000000000081f1         db  0x05 ; '.'
00000000000081f2         db  0x00 ; '.'
00000000000081f3         db  0x00 ; '.'
00000000000081f4         db  0xb0 ; '.'
00000000000081f5         db  0xba ; '.'
00000000000081f6         db  0xff ; '.'
00000000000081f7         db  0xff ; '.'
00000000000081f8         db  0xd8 ; '.'
00000000000081f9         db  0x05 ; '.'
00000000000081fa         db  0x00 ; '.'
00000000000081fb         db  0x00 ; '.'
00000000000081fc         db  0xc0 ; '.'
00000000000081fd         db  0xba ; '.'
00000000000081fe         db  0xff ; '.'
00000000000081ff         db  0xff ; '.'
0000000000008200         db  0xec ; '.'
0000000000008201         db  0x05 ; '.'
0000000000008202         db  0x00 ; '.'
0000000000008203         db  0x00 ; '.'
0000000000008204         db  0xf0 ; '.'
0000000000008205         db  0xba ; '.'
0000000000008206         db  0xff ; '.'
0000000000008207         db  0xff ; '.'
0000000000008208         db  0x08 ; '.'
0000000000008209         db  0x06 ; '.'
000000000000820a         db  0x00 ; '.'
000000000000820b         db  0x00 ; '.'
000000000000820c         db  0x40 ; '@'
000000000000820d         db  0xbb ; '.'
000000000000820e         db  0xff ; '.'
000000000000820f         db  0xff ; '.'
0000000000008210         db  0x20 ; ' '
0000000000008211         db  0x06 ; '.'
0000000000008212         db  0x00 ; '.'
0000000000008213         db  0x00 ; '.'
0000000000008214         db  0x70 ; 'p'
0000000000008215         db  0xbb ; '.'
0000000000008216         db  0xff ; '.'
0000000000008217         db  0xff ; '.'
0000000000008218         db  0x40 ; '@'
0000000000008219         db  0x06 ; '.'
000000000000821a         db  0x00 ; '.'
000000000000821b         db  0x00 ; '.'
000000000000821c         db  0xd0 ; '.'
000000000000821d         db  0xbb ; '.'
000000000000821e         db  0xff ; '.'
000000000000821f         db  0xff ; '.'
0000000000008220         db  0x6c ; 'l'
0000000000008221         db  0x06 ; '.'
0000000000008222         db  0x00 ; '.'
0000000000008223         db  0x00 ; '.'
0000000000008224         db  0xf0 ; '.'
0000000000008225         db  0xbb ; '.'
0000000000008226         db  0xff ; '.'
0000000000008227         db  0xff ; '.'
0000000000008228         db  0x80 ; '.'
0000000000008229         db  0x06 ; '.'
000000000000822a         db  0x00 ; '.'
000000000000822b         db  0x00 ; '.'
000000000000822c         db  0xd0 ; '.'
000000000000822d         db  0xbc ; '.'
000000000000822e         db  0xff ; '.'
000000000000822f         db  0xff ; '.'
0000000000008230         db  0x9c ; '.'
0000000000008231         db  0x06 ; '.'
0000000000008232         db  0x00 ; '.'
0000000000008233         db  0x00 ; '.'
0000000000008234         db  0xf0 ; '.'
0000000000008235         db  0xbd ; '.'
0000000000008236         db  0xff ; '.'
0000000000008237         db  0xff ; '.'
0000000000008238         db  0xb8 ; '.'
0000000000008239         db  0x06 ; '.'
000000000000823a         db  0x00 ; '.'
000000000000823b         db  0x00 ; '.'
000000000000823c         db  0x90 ; '.'
000000000000823d         db  0xbe ; '.'
000000000000823e         db  0xff ; '.'
000000000000823f         db  0xff ; '.'
0000000000008240         db  0xd8 ; '.'
0000000000008241         db  0x06 ; '.'
0000000000008242         db  0x00 ; '.'
0000000000008243         db  0x00 ; '.'
0000000000008244         db  0x80 ; '.'
0000000000008245         db  0xbf ; '.'
0000000000008246         db  0xff ; '.'
0000000000008247         db  0xff ; '.'
0000000000008248         db  0x1c ; '.'
0000000000008249         db  0x07 ; '.'
000000000000824a         db  0x00 ; '.'
000000000000824b         db  0x00 ; '.'
000000000000824c         db  0xc0 ; '.'
000000000000824d         db  0xd1 ; '.'
000000000000824e         db  0xff ; '.'
000000000000824f         db  0xff ; '.'
0000000000008250         db  0x94 ; '.'
0000000000008251         db  0x07 ; '.'
0000000000008252         db  0x00 ; '.'
0000000000008253         db  0x00 ; '.'
0000000000008254         db  0x70 ; 'p'
0000000000008255         db  0xd3 ; '.'
0000000000008256         db  0xff ; '.'
0000000000008257         db  0xff ; '.'
0000000000008258         db  0x00 ; '.'
0000000000008259         db  0x08 ; '.'
000000000000825a         db  0x00 ; '.'
000000000000825b         db  0x00 ; '.'
000000000000825c         db  0xb0 ; '.'
000000000000825d         db  0xd3 ; '.'
000000000000825e         db  0xff ; '.'
000000000000825f         db  0xff ; '.'
0000000000008260         db  0x2c ; ','
0000000000008261         db  0x08 ; '.'
0000000000008262         db  0x00 ; '.'
0000000000008263         db  0x00 ; '.'
0000000000008264         db  0xd0 ; '.'
0000000000008265         db  0xd3 ; '.'
0000000000008266         db  0xff ; '.'
0000000000008267         db  0xff ; '.'
0000000000008268         db  0x40 ; '@'
0000000000008269         db  0x08 ; '.'
000000000000826a         db  0x00 ; '.'
000000000000826b         db  0x00 ; '.'
000000000000826c         db  0xf0 ; '.'
000000000000826d         db  0xd3 ; '.'
000000000000826e         db  0xff ; '.'
000000000000826f         db  0xff ; '.'
0000000000008270         db  0x54 ; 'T'
0000000000008271         db  0x08 ; '.'
0000000000008272         db  0x00 ; '.'
0000000000008273         db  0x00 ; '.'
0000000000008274         db  0x30 ; '0'
0000000000008275         db  0xd4 ; '.'
0000000000008276         db  0xff ; '.'
0000000000008277         db  0xff ; '.'
0000000000008278         db  0x68 ; 'h'
0000000000008279         db  0x08 ; '.'
000000000000827a         db  0x00 ; '.'
000000000000827b         db  0x00 ; '.'
000000000000827c         db  0x50 ; 'P'
000000000000827d         db  0xd4 ; '.'
000000000000827e         db  0xff ; '.'
000000000000827f         db  0xff ; '.'
0000000000008280         db  0x7c ; '|'
0000000000008281         db  0x08 ; '.'
0000000000008282         db  0x00 ; '.'
0000000000008283         db  0x00 ; '.'
0000000000008284         db  0x80 ; '.'
0000000000008285         db  0xd4 ; '.'
0000000000008286         db  0xff ; '.'
0000000000008287         db  0xff ; '.'
0000000000008288         db  0x90 ; '.'
0000000000008289         db  0x08 ; '.'
000000000000828a         db  0x00 ; '.'
000000000000828b         db  0x00 ; '.'
000000000000828c         db  0x00 ; '.'
000000000000828d         db  0xd5 ; '.'
000000000000828e         db  0xff ; '.'
000000000000828f         db  0xff ; '.'
0000000000008290         db  0xe4 ; '.'
0000000000008291         db  0x08 ; '.'
0000000000008292         db  0x00 ; '.'
0000000000008293         db  0x00 ; '.'
0000000000008294         db  0xf0 ; '.'
0000000000008295         db  0xd5 ; '.'
0000000000008296         db  0xff ; '.'
0000000000008297         db  0xff ; '.'
0000000000008298         db  0x50 ; 'P'
0000000000008299         db  0x09 ; '.'
000000000000829a         db  0x00 ; '.'
000000000000829b         db  0x00 ; '.'
000000000000829c         db  0x00 ; '.'
000000000000829d         db  0xd6 ; '.'
000000000000829e         db  0xff ; '.'
000000000000829f         db  0xff ; '.'
00000000000082a0         db  0x64 ; 'd'
00000000000082a1         db  0x09 ; '.'
00000000000082a2         db  0x00 ; '.'
00000000000082a3         db  0x00 ; '.'
00000000000082a4         db  0xa0 ; '.'
00000000000082a5         db  0xd6 ; '.'
00000000000082a6         db  0xff ; '.'
00000000000082a7         db  0xff ; '.'
00000000000082a8         db  0x90 ; '.'
00000000000082a9         db  0x09 ; '.'
00000000000082aa         db  0x00 ; '.'
00000000000082ab         db  0x00 ; '.'
00000000000082ac         db  0xc0 ; '.'
00000000000082ad         db  0xd6 ; '.'
00000000000082ae         db  0xff ; '.'
00000000000082af         db  0xff ; '.'
00000000000082b0         db  0xa4 ; '.'
00000000000082b1         db  0x09 ; '.'
00000000000082b2         db  0x00 ; '.'
00000000000082b3         db  0x00 ; '.'
00000000000082b4         db  0xd0 ; '.'
00000000000082b5         db  0xd6 ; '.'
00000000000082b6         db  0xff ; '.'
00000000000082b7         db  0xff ; '.'
00000000000082b8         db  0xb8 ; '.'
00000000000082b9         db  0x09 ; '.'
00000000000082ba         db  0x00 ; '.'
00000000000082bb         db  0x00 ; '.'
00000000000082bc         db  0xf0 ; '.'
00000000000082bd         db  0xd6 ; '.'
00000000000082be         db  0xff ; '.'
00000000000082bf         db  0xff ; '.'
00000000000082c0         db  0xcc ; '.'
00000000000082c1         db  0x09 ; '.'
00000000000082c2         db  0x00 ; '.'
00000000000082c3         db  0x00 ; '.'
00000000000082c4         db  0x10 ; '.'
00000000000082c5         db  0xd7 ; '.'
00000000000082c6         db  0xff ; '.'
00000000000082c7         db  0xff ; '.'
00000000000082c8         db  0xe0 ; '.'
00000000000082c9         db  0x09 ; '.'
00000000000082ca         db  0x00 ; '.'
00000000000082cb         db  0x00 ; '.'
00000000000082cc         db  0xa0 ; '.'
00000000000082cd         db  0xd7 ; '.'
00000000000082ce         db  0xff ; '.'
00000000000082cf         db  0xff ; '.'
00000000000082d0         db  0xfc ; '.'
00000000000082d1         db  0x09 ; '.'
00000000000082d2         db  0x00 ; '.'
00000000000082d3         db  0x00 ; '.'
00000000000082d4         db  0x30 ; '0'
00000000000082d5         db  0xd8 ; '.'
00000000000082d6         db  0xff ; '.'
00000000000082d7         db  0xff ; '.'
00000000000082d8         db  0x18 ; '.'
00000000000082d9         db  0x0a ; '.'
00000000000082da         db  0x00 ; '.'
00000000000082db         db  0x00 ; '.'
00000000000082dc         db  0x40 ; '@'
00000000000082dd         db  0xd8 ; '.'
00000000000082de         db  0xff ; '.'
00000000000082df         db  0xff ; '.'
00000000000082e0         db  0x2c ; ','
00000000000082e1         db  0x0a ; '.'
00000000000082e2         db  0x00 ; '.'
00000000000082e3         db  0x00 ; '.'
00000000000082e4         db  0x50 ; 'P'
00000000000082e5         db  0xd8 ; '.'
00000000000082e6         db  0xff ; '.'
00000000000082e7         db  0xff ; '.'
00000000000082e8         db  0x40 ; '@'
00000000000082e9         db  0x0a ; '.'
00000000000082ea         db  0x00 ; '.'
00000000000082eb         db  0x00 ; '.'
00000000000082ec         db  0xf0 ; '.'
00000000000082ed         db  0xd8 ; '.'
00000000000082ee         db  0xff ; '.'
00000000000082ef         db  0xff ; '.'
00000000000082f0         db  0x5c ; '\'
00000000000082f1         db  0x0a ; '.'
00000000000082f2         db  0x00 ; '.'
00000000000082f3         db  0x00 ; '.'
00000000000082f4         db  0x00 ; '.'
00000000000082f5         db  0xd9 ; '.'
00000000000082f6         db  0xff ; '.'
00000000000082f7         db  0xff ; '.'
00000000000082f8         db  0x70 ; 'p'
00000000000082f9         db  0x0a ; '.'
00000000000082fa         db  0x00 ; '.'
00000000000082fb         db  0x00 ; '.'
00000000000082fc         db  0x20 ; ' '
00000000000082fd         db  0xd9 ; '.'
00000000000082fe         db  0xff ; '.'
00000000000082ff         db  0xff ; '.'
0000000000008300         db  0x84 ; '.'
0000000000008301         db  0x0a ; '.'
0000000000008302         db  0x00 ; '.'
0000000000008303         db  0x00 ; '.'
0000000000008304         db  0x30 ; '0'
0000000000008305         db  0xd9 ; '.'
0000000000008306         db  0xff ; '.'
0000000000008307         db  0xff ; '.'
0000000000008308         db  0x98 ; '.'
0000000000008309         db  0x0a ; '.'
000000000000830a         db  0x00 ; '.'
000000000000830b         db  0x00 ; '.'
000000000000830c         db  0xc0 ; '.'
000000000000830d         db  0xd9 ; '.'
000000000000830e         db  0xff ; '.'
000000000000830f         db  0xff ; '.'
0000000000008310         db  0xb4 ; '.'
0000000000008311         db  0x0a ; '.'
0000000000008312         db  0x00 ; '.'
0000000000008313         db  0x00 ; '.'
0000000000008314         db  0x60 ; '`'
0000000000008315         db  0xda ; '.'
0000000000008316         db  0xff ; '.'
0000000000008317         db  0xff ; '.'
0000000000008318         db  0xd0 ; '.'
0000000000008319         db  0x0a ; '.'
000000000000831a         db  0x00 ; '.'
000000000000831b         db  0x00 ; '.'
000000000000831c         db  0x70 ; 'p'
000000000000831d         db  0xda ; '.'
000000000000831e         db  0xff ; '.'
000000000000831f         db  0xff ; '.'
0000000000008320         db  0xe4 ; '.'
0000000000008321         db  0x0a ; '.'
0000000000008322         db  0x00 ; '.'
0000000000008323         db  0x00 ; '.'
0000000000008324         db  0x90 ; '.'
0000000000008325         db  0xda ; '.'
0000000000008326         db  0xff ; '.'
0000000000008327         db  0xff ; '.'
0000000000008328         db  0xf8 ; '.'
0000000000008329         db  0x0a ; '.'
000000000000832a         db  0x00 ; '.'
000000000000832b         db  0x00 ; '.'
000000000000832c         db  0xb0 ; '.'
000000000000832d         db  0xda ; '.'
000000000000832e         db  0xff ; '.'
000000000000832f         db  0xff ; '.'
0000000000008330         db  0x0c ; '.'
0000000000008331         db  0x0b ; '.'
0000000000008332         db  0x00 ; '.'
0000000000008333         db  0x00 ; '.'
0000000000008334         db  0xc0 ; '.'
0000000000008335         db  0xda ; '.'
0000000000008336         db  0xff ; '.'
0000000000008337         db  0xff ; '.'
0000000000008338         db  0x20 ; ' '
0000000000008339         db  0x0b ; '.'
000000000000833a         db  0x00 ; '.'
000000000000833b         db  0x00 ; '.'
000000000000833c         db  0xe0 ; '.'
000000000000833d         db  0xda ; '.'
000000000000833e         db  0xff ; '.'
000000000000833f         db  0xff ; '.'
0000000000008340         db  0x34 ; '4'
0000000000008341         db  0x0b ; '.'
0000000000008342         db  0x00 ; '.'
0000000000008343         db  0x00 ; '.'
0000000000008344         db  0x00 ; '.'
0000000000008345         db  0xdb ; '.'
0000000000008346         db  0xff ; '.'
0000000000008347         db  0xff ; '.'
0000000000008348         db  0x48 ; 'H'
0000000000008349         db  0x0b ; '.'
000000000000834a         db  0x00 ; '.'
000000000000834b         db  0x00 ; '.'
000000000000834c         db  0x20 ; ' '
000000000000834d         db  0xdb ; '.'
000000000000834e         db  0xff ; '.'
000000000000834f         db  0xff ; '.'
0000000000008350         db  0x60 ; '`'
0000000000008351         db  0x0b ; '.'
0000000000008352         db  0x00 ; '.'
0000000000008353         db  0x00 ; '.'
0000000000008354         db  0x10 ; '.'
0000000000008355         db  0xdc ; '.'
0000000000008356         db  0xff ; '.'
0000000000008357         db  0xff ; '.'
0000000000008358         db  0x90 ; '.'
0000000000008359         db  0x0b ; '.'
000000000000835a         db  0x00 ; '.'
000000000000835b         db  0x00 ; '.'
000000000000835c         db  0x80 ; '.'
000000000000835d         db  0xdc ; '.'
000000000000835e         db  0xff ; '.'
000000000000835f         db  0xff ; '.'
0000000000008360         db  0xbc ; '.'
0000000000008361         db  0x0b ; '.'
0000000000008362         db  0x00 ; '.'
0000000000008363         db  0x00 ; '.'
0000000000008364         db  0xb0 ; '.'
0000000000008365         db  0xdc ; '.'
0000000000008366         db  0xff ; '.'
0000000000008367         db  0xff ; '.'
0000000000008368         db  0xd8 ; '.'
0000000000008369         db  0x0b ; '.'
000000000000836a         db  0x00 ; '.'
000000000000836b         db  0x00 ; '.'
000000000000836c         db  0xc0 ; '.'
000000000000836d         db  0xde ; '.'
000000000000836e         db  0xff ; '.'
000000000000836f         db  0xff ; '.'
0000000000008370         db  0x10 ; '.'
0000000000008371         db  0x0c ; '.'
0000000000008372         db  0x00 ; '.'
0000000000008373         db  0x00 ; '.'
0000000000008374         db  0x20 ; ' '
0000000000008375         db  0xdf ; '.'
0000000000008376         db  0xff ; '.'
0000000000008377         db  0xff ; '.'
0000000000008378         db  0x48 ; 'H'
0000000000008379         db  0x0c ; '.'
000000000000837a         db  0x00 ; '.'
000000000000837b         db  0x00 ; '.'
000000000000837c         db  0x40 ; '@'
000000000000837d         db  0xe3 ; '.'
000000000000837e         db  0xff ; '.'
000000000000837f         db  0xff ; '.'
0000000000008380         db  0x5c ; '\'
0000000000008381         db  0x0d ; '.'
0000000000008382         db  0x00 ; '.'
0000000000008383         db  0x00 ; '.'
0000000000008384         db  0x60 ; '`'
0000000000008385         db  0xe3 ; '.'
0000000000008386         db  0xff ; '.'
0000000000008387         db  0xff ; '.'
0000000000008388         db  0x70 ; 'p'
0000000000008389         db  0x0d ; '.'
000000000000838a         db  0x00 ; '.'
000000000000838b         db  0x00 ; '.'
000000000000838c         db  0xe0 ; '.'
000000000000838d         db  0xe3 ; '.'
000000000000838e         db  0xff ; '.'
000000000000838f         db  0xff ; '.'
0000000000008390         db  0x8c ; '.'
0000000000008391         db  0x0d ; '.'
0000000000008392         db  0x00 ; '.'
0000000000008393         db  0x00 ; '.'
0000000000008394         db  0xc0 ; '.'
0000000000008395         db  0xe4 ; '.'
0000000000008396         db  0xff ; '.'
0000000000008397         db  0xff ; '.'
0000000000008398         db  0xb8 ; '.'
0000000000008399         db  0x0d ; '.'
000000000000839a         db  0x00 ; '.'
000000000000839b         db  0x00 ; '.'
000000000000839c         db  0x40 ; '@'
000000000000839d         db  0xe5 ; '.'
000000000000839e         db  0xff ; '.'
000000000000839f         db  0xff ; '.'
00000000000083a0         db  0xd8 ; '.'
00000000000083a1         db  0x0d ; '.'
00000000000083a2         db  0x00 ; '.'
00000000000083a3         db  0x00 ; '.'
00000000000083a4         db  0x60 ; '`'
00000000000083a5         db  0xe5 ; '.'
00000000000083a6         db  0xff ; '.'
00000000000083a7         db  0xff ; '.'
00000000000083a8         db  0xf4 ; '.'
00000000000083a9         db  0x0d ; '.'
00000000000083aa         db  0x00 ; '.'
00000000000083ab         db  0x00 ; '.'
00000000000083ac         db  0x90 ; '.'
00000000000083ad         db  0xe5 ; '.'
00000000000083ae         db  0xff ; '.'
00000000000083af         db  0xff ; '.'
00000000000083b0         db  0x08 ; '.'
00000000000083b1         db  0x0e ; '.'
00000000000083b2         db  0x00 ; '.'
00000000000083b3         db  0x00 ; '.'
00000000000083b4         db  0xa0 ; '.'
00000000000083b5         db  0xe5 ; '.'
00000000000083b6         db  0xff ; '.'
00000000000083b7         db  0xff ; '.'
00000000000083b8         db  0x1c ; '.'
00000000000083b9         db  0x0e ; '.'
00000000000083ba         db  0x00 ; '.'
00000000000083bb         db  0x00 ; '.'
00000000000083bc         db  0xe0 ; '.'
00000000000083bd         db  0xe5 ; '.'
00000000000083be         db  0xff ; '.'
00000000000083bf         db  0xff ; '.'
00000000000083c0         db  0x40 ; '@'
00000000000083c1         db  0x0e ; '.'
00000000000083c2         db  0x00 ; '.'
00000000000083c3         db  0x00 ; '.'
00000000000083c4         db  0x10 ; '.'
00000000000083c5         db  0xe6 ; '.'
00000000000083c6         db  0xff ; '.'
00000000000083c7         db  0xff ; '.'
00000000000083c8         db  0x54 ; 'T'
00000000000083c9         db  0x0e ; '.'
00000000000083ca         db  0x00 ; '.'
00000000000083cb         db  0x00 ; '.'
00000000000083cc         db  0xa0 ; '.'
00000000000083cd         db  0xe6 ; '.'
00000000000083ce         db  0xff ; '.'
00000000000083cf         db  0xff ; '.'
00000000000083d0         db  0x6c ; 'l'
00000000000083d1         db  0x0e ; '.'
00000000000083d2         db  0x00 ; '.'
00000000000083d3         db  0x00 ; '.'
00000000000083d4         db  0xf0 ; '.'
00000000000083d5         db  0xe6 ; '.'
00000000000083d6         db  0xff ; '.'
00000000000083d7         db  0xff ; '.'
00000000000083d8         db  0x84 ; '.'
00000000000083d9         db  0x0e ; '.'
00000000000083da         db  0x00 ; '.'
00000000000083db         db  0x00 ; '.'
00000000000083dc         db  0x10 ; '.'
00000000000083dd         db  0xe7 ; '.'
00000000000083de         db  0xff ; '.'
00000000000083df         db  0xff ; '.'
00000000000083e0         db  0xa0 ; '.'
00000000000083e1         db  0x0e ; '.'
00000000000083e2         db  0x00 ; '.'
00000000000083e3         db  0x00 ; '.'
00000000000083e4         db  0x40 ; '@'
00000000000083e5         db  0xe7 ; '.'
00000000000083e6         db  0xff ; '.'
00000000000083e7         db  0xff ; '.'
00000000000083e8         db  0xbc ; '.'
00000000000083e9         db  0x0e ; '.'
00000000000083ea         db  0x00 ; '.'
00000000000083eb         db  0x00 ; '.'
00000000000083ec         db  0x70 ; 'p'
00000000000083ed         db  0xe7 ; '.'
00000000000083ee         db  0xff ; '.'
00000000000083ef         db  0xff ; '.'
00000000000083f0         db  0xe4 ; '.'
00000000000083f1         db  0x0e ; '.'
00000000000083f2         db  0x00 ; '.'
00000000000083f3         db  0x00 ; '.'
00000000000083f4         db  0x90 ; '.'
00000000000083f5         db  0xe7 ; '.'
00000000000083f6         db  0xff ; '.'
00000000000083f7         db  0xff ; '.'
00000000000083f8         db  0x00 ; '.'
00000000000083f9         db  0x0f ; '.'
00000000000083fa         db  0x00 ; '.'
00000000000083fb         db  0x00 ; '.'
00000000000083fc         db  0xd0 ; '.'
00000000000083fd         db  0xe7 ; '.'
00000000000083fe         db  0xff ; '.'
00000000000083ff         db  0xff ; '.'
0000000000008400         db  0x18 ; '.'
0000000000008401         db  0x0f ; '.'
0000000000008402         db  0x00 ; '.'
0000000000008403         db  0x00 ; '.'
0000000000008404         db  0x50 ; 'P'
0000000000008405         db  0xe8 ; '.'
0000000000008406         db  0xff ; '.'
0000000000008407         db  0xff ; '.'
0000000000008408         db  0x50 ; 'P'
0000000000008409         db  0x0f ; '.'
000000000000840a         db  0x00 ; '.'
000000000000840b         db  0x00 ; '.'
000000000000840c         db  0x90 ; '.'
000000000000840d         db  0xe8 ; '.'
000000000000840e         db  0xff ; '.'
000000000000840f         db  0xff ; '.'
0000000000008410         db  0x70 ; 'p'
0000000000008411         db  0x0f ; '.'
0000000000008412         db  0x00 ; '.'
0000000000008413         db  0x00 ; '.'
0000000000008414         db  0xf0 ; '.'
0000000000008415         db  0xe8 ; '.'
0000000000008416         db  0xff ; '.'
0000000000008417         db  0xff ; '.'
0000000000008418         db  0xa0 ; '.'
0000000000008419         db  0x0f ; '.'
000000000000841a         db  0x00 ; '.'
000000000000841b         db  0x00 ; '.'
000000000000841c         db  0x80 ; '.'
000000000000841d         db  0xe9 ; '.'
000000000000841e         db  0xff ; '.'
000000000000841f         db  0xff ; '.'
0000000000008420         db  0xe0 ; '.'
0000000000008421         db  0x0f ; '.'
0000000000008422         db  0x00 ; '.'
0000000000008423         db  0x00 ; '.'
0000000000008424         db  0xc0 ; '.'
0000000000008425         db  0xe9 ; '.'
0000000000008426         db  0xff ; '.'
0000000000008427         db  0xff ; '.'
0000000000008428         db  0xf4 ; '.'
0000000000008429         db  0x0f ; '.'
000000000000842a         db  0x00 ; '.'
000000000000842b         db  0x00 ; '.'
000000000000842c         db  0xe0 ; '.'
000000000000842d         db  0xe9 ; '.'
000000000000842e         db  0xff ; '.'
000000000000842f         db  0xff ; '.'
0000000000008430         db  0x08 ; '.'
0000000000008431         db  0x10 ; '.'
0000000000008432         db  0x00 ; '.'
0000000000008433         db  0x00 ; '.'
0000000000008434         db  0x00 ; '.'
0000000000008435         db  0xea ; '.'
0000000000008436         db  0xff ; '.'
0000000000008437         db  0xff ; '.'
0000000000008438         db  0x1c ; '.'
0000000000008439         db  0x10 ; '.'
000000000000843a         db  0x00 ; '.'
000000000000843b         db  0x00 ; '.'
000000000000843c         db  0x90 ; '.'
000000000000843d         db  0xea ; '.'
000000000000843e         db  0xff ; '.'
000000000000843f         db  0xff ; '.'
0000000000008440         db  0x4c ; 'L'
0000000000008441         db  0x10 ; '.'
0000000000008442         db  0x00 ; '.'
0000000000008443         db  0x00 ; '.'
0000000000008444         db  0xb0 ; '.'
0000000000008445         db  0xea ; '.'
0000000000008446         db  0xff ; '.'
0000000000008447         db  0xff ; '.'
0000000000008448         db  0x60 ; '`'
0000000000008449         db  0x10 ; '.'
000000000000844a         db  0x00 ; '.'
000000000000844b         db  0x00 ; '.'
000000000000844c         db  0xd0 ; '.'
000000000000844d         db  0xea ; '.'
000000000000844e         db  0xff ; '.'
000000000000844f         db  0xff ; '.'
0000000000008450         db  0x74 ; 't'
0000000000008451         db  0x10 ; '.'
0000000000008452         db  0x00 ; '.'
0000000000008453         db  0x00 ; '.'
0000000000008454         db  0xc0 ; '.'
0000000000008455         db  0xeb ; '.'
0000000000008456         db  0xff ; '.'
0000000000008457         db  0xff ; '.'
0000000000008458         db  0xb4 ; '.'
0000000000008459         db  0x10 ; '.'
000000000000845a         db  0x00 ; '.'
000000000000845b         db  0x00 ; '.'
000000000000845c         db  0x00 ; '.'
000000000000845d         db  0xec ; '.'
000000000000845e         db  0xff ; '.'
000000000000845f         db  0xff ; '.'
0000000000008460         db  0xc8 ; '.'
0000000000008461         db  0x10 ; '.'
0000000000008462         db  0x00 ; '.'
0000000000008463         db  0x00 ; '.'
0000000000008464         db  0x70 ; 'p'
0000000000008465         db  0xec ; '.'
0000000000008466         db  0xff ; '.'
0000000000008467         db  0xff ; '.'
0000000000008468         db  0x00 ; '.'
0000000000008469         db  0x11 ; '.'
000000000000846a         db  0x00 ; '.'
000000000000846b         db  0x00 ; '.'
000000000000846c         db  0xa0 ; '.'
000000000000846d         db  0xec ; '.'
000000000000846e         db  0xff ; '.'
000000000000846f         db  0xff ; '.'
0000000000008470         db  0x18 ; '.'
0000000000008471         db  0x11 ; '.'
0000000000008472         db  0x00 ; '.'
0000000000008473         db  0x00 ; '.'
0000000000008474         db  0x20 ; ' '
0000000000008475         db  0xed ; '.'
0000000000008476         db  0xff ; '.'
0000000000008477         db  0xff ; '.'
0000000000008478         db  0x68 ; 'h'
0000000000008479         db  0x11 ; '.'
000000000000847a         db  0x00 ; '.'
000000000000847b         db  0x00 ; '.'
000000000000847c         db  0x80 ; '.'
000000000000847d         db  0xed ; '.'
000000000000847e         db  0xff ; '.'
000000000000847f         db  0xff ; '.'
0000000000008480         db  0x88 ; '.'
0000000000008481         db  0x11 ; '.'
0000000000008482         db  0x00 ; '.'
0000000000008483         db  0x00 ; '.'
0000000000008484         db  0xc0 ; '.'
0000000000008485         db  0xed ; '.'
0000000000008486         db  0xff ; '.'
0000000000008487         db  0xff ; '.'
0000000000008488         db  0xa8 ; '.'
0000000000008489         db  0x11 ; '.'
000000000000848a         db  0x00 ; '.'
000000000000848b         db  0x00 ; '.'
000000000000848c         db  0x30 ; '0'
000000000000848d         db  0xee ; '.'
000000000000848e         db  0xff ; '.'
000000000000848f         db  0xff ; '.'
0000000000008490         db  0xf0 ; '.'
0000000000008491         db  0x11 ; '.'
0000000000008492         db  0x00 ; '.'
0000000000008493         db  0x00 ; '.'
0000000000008494         db  0x40 ; '@'
0000000000008495         db  0xee ; '.'
0000000000008496         db  0xff ; '.'
0000000000008497         db  0xff ; '.'
0000000000008498         db  0x08 ; '.'
0000000000008499         db  0x12 ; '.'
000000000000849a         db  0x00 ; '.'
000000000000849b         db  0x00 ; '.'
000000000000849c         db  0x00 ; '.'
000000000000849d         db  0x00 ; '.'
000000000000849e         db  0x00 ; '.'
000000000000849f         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x84a0; 0x9390[ (3824 bytes)
        ; File offset : [33952; 37776[ (3824 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

00000000000084a0         dd         0x00000014                                  ; Length of the record
00000000000084a4         dd         0x00000000                                  ; CIE ID
00000000000084a8         db         0x01                                        ; Version
00000000000084a9         db         "zR", 0                                     ; Augmentation String
00000000000084ac         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
00000000000084ad         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
00000000000084ae         db         0x10                                        ; Return address register
00000000000084af         db         0x01                                        ; Augmentation data length
00000000000084b0         db         0x1b                                        ; FDE encoding
00000000000084b1         db  0x0c ; '.'
00000000000084b2         db  0x07 ; '.'
00000000000084b3         db  0x08 ; '.'
00000000000084b4         db  0x90 ; '.'
00000000000084b5         db  0x01 ; '.'
00000000000084b6         db  0x07 ; '.'
00000000000084b7         db  0x10 ; '.'
00000000000084b8         dd         0x00000014                                  ; Length of the record
00000000000084bc         dd         0x0000001c                                  ; FDE: parent CIE at 0x84a0 (FDE encoding = 0x1B)
00000000000084c0         db         0x80, 0xa3, 2 dup (0xff)                    ; begin 0x2840
00000000000084c4         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x286b)
00000000000084c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000084c9         align      16
00000000000084d0         dd         0x00000014                                  ; Length of the record
00000000000084d4         dd         0x00000000                                  ; CIE ID
00000000000084d8         db         0x01                                        ; Version
00000000000084d9         db         "zR", 0                                     ; Augmentation String
00000000000084dc         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
00000000000084dd         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
00000000000084de         db         0x10                                        ; Return address register
00000000000084df         db         0x01                                        ; Augmentation data length
00000000000084e0         db         0x1b                                        ; FDE encoding
00000000000084e1         db  0x0c ; '.'
00000000000084e2         db  0x07 ; '.'
00000000000084e3         db  0x08 ; '.'
00000000000084e4         db  0x90 ; '.'
00000000000084e5         db  0x01 ; '.'
00000000000084e6         db  0x00 ; '.'
00000000000084e7         db  0x00 ; '.'
00000000000084e8         dd         0x00000024                                  ; Length of the record
00000000000084ec         dd         0x0000001c                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
00000000000084f0         db         0xd0, 0x94, 2 dup (0xff)                    ; begin 0x19c0
00000000000084f4         db         0x00, 0x04, 2 dup (0x00)                    ; length 0x400 (end at 0x1dc0)
00000000000084f8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000084f9         db  0x0e ; '.'
00000000000084fa         db  0x10 ; '.'
00000000000084fb         db  0x46 ; 'F'
00000000000084fc         db  0x0e ; '.'
00000000000084fd         db  0x18 ; '.'
00000000000084fe         db  0x4a ; 'J'
00000000000084ff         db  0x0f ; '.'
0000000000008500         db  0x0b ; '.'
0000000000008501         db  0x77 ; 'w'
0000000000008502         db  0x08 ; '.'
0000000000008503         db  0x80 ; '.'
0000000000008504         db  0x00 ; '.'
0000000000008505         db  0x3f ; '?'
0000000000008506         db  0x1a ; '.'
0000000000008507         db  0x3b ; ';'
0000000000008508         db  0x2a ; '*'
0000000000008509         db  0x33 ; '3'
000000000000850a         db  0x24 ; '$'
000000000000850b         db  0x22 ; '"'
000000000000850c         db  0x00 ; '.'
000000000000850d         db  0x00 ; '.'
000000000000850e         db  0x00 ; '.'
000000000000850f         db  0x00 ; '.'
0000000000008510         dd         0x00000014                                  ; Length of the record
0000000000008514         dd         0x00000044                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008518         db         0xa8, 0x98, 2 dup (0xff)                    ; begin 0x1dc0
000000000000851c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x1dd8)
0000000000008520         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008521         align      8
0000000000008528         dd         0x00000048                                  ; Length of the record
000000000000852c         dd         0x0000005c                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008530         db         0x20, 0xa4, 2 dup (0xff)                    ; begin 0x2950
0000000000008534         db         0x04, 0x02, 2 dup (0x00)                    ; length 0x204 (end at 0x2b54)
0000000000008538         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008539         db  0x42 ; 'B'
000000000000853a         db  0x0e ; '.'
000000000000853b         db  0x10 ; '.'
000000000000853c         db  0x8f ; '.'
000000000000853d         db  0x02 ; '.'
000000000000853e         db  0x42 ; 'B'
000000000000853f         db  0x0e ; '.'
0000000000008540         db  0x18 ; '.'
0000000000008541         db  0x8e ; '.'
0000000000008542         db  0x03 ; '.'
0000000000008543         db  0x45 ; 'E'
0000000000008544         db  0x0e ; '.'
0000000000008545         db  0x20 ; ' '
0000000000008546         db  0x8d ; '.'
0000000000008547         db  0x04 ; '.'
0000000000008548         db  0x42 ; 'B'
0000000000008549         db  0x0e ; '.'
000000000000854a         db  0x28 ; '('
000000000000854b         db  0x8c ; '.'
000000000000854c         db  0x05 ; '.'
000000000000854d         db  0x44 ; 'D'
000000000000854e         db  0x0e ; '.'
000000000000854f         db  0x30 ; '0'
0000000000008550         db  0x86 ; '.'
0000000000008551         db  0x06 ; '.'
0000000000008552         db  0x41 ; 'A'
0000000000008553         db  0x0e ; '.'
0000000000008554         db  0x38 ; '8'
0000000000008555         db  0x83 ; '.'
0000000000008556         db  0x07 ; '.'
0000000000008557         db  0x54 ; 'T'
0000000000008558         db  0x0e ; '.'
0000000000008559         db  0x60 ; '`'
000000000000855a         db  0x02 ; '.'
000000000000855b         db  0xc8 ; '.'
000000000000855c         db  0x0a ; '.'
000000000000855d         db  0x0e ; '.'
000000000000855e         db  0x38 ; '8'
000000000000855f         db  0x41 ; 'A'
0000000000008560         db  0x0e ; '.'
0000000000008561         db  0x30 ; '0'
0000000000008562         db  0x41 ; 'A'
0000000000008563         db  0x0e ; '.'
0000000000008564         db  0x28 ; '('
0000000000008565         db  0x42 ; 'B'
0000000000008566         db  0x0e ; '.'
0000000000008567         db  0x20 ; ' '
0000000000008568         db  0x42 ; 'B'
0000000000008569         db  0x0e ; '.'
000000000000856a         db  0x18 ; '.'
000000000000856b         db  0x42 ; 'B'
000000000000856c         db  0x0e ; '.'
000000000000856d         db  0x10 ; '.'
000000000000856e         db  0x42 ; 'B'
000000000000856f         db  0x0e ; '.'
0000000000008570         db  0x08 ; '.'
0000000000008571         db  0x4a ; 'J'
0000000000008572         db  0x0b ; '.'
0000000000008573         db  0x00 ; '.'
0000000000008574         dd         0x0000004c                                  ; Length of the record
0000000000008578         dd         0x000000a8                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
000000000000857c         db         0xe4, 0xa5, 2 dup (0xff)                    ; begin 0x2b60
0000000000008580         db         0xec, 0x0a, 2 dup (0x00)                    ; length 0xaec (end at 0x364c)
0000000000008584         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008585         db  0x42 ; 'B'
0000000000008586         db  0x0e ; '.'
0000000000008587         db  0x10 ; '.'
0000000000008588         db  0x8f ; '.'
0000000000008589         db  0x02 ; '.'
000000000000858a         db  0x42 ; 'B'
000000000000858b         db  0x0e ; '.'
000000000000858c         db  0x18 ; '.'
000000000000858d         db  0x8e ; '.'
000000000000858e         db  0x03 ; '.'
000000000000858f         db  0x42 ; 'B'
0000000000008590         db  0x0e ; '.'
0000000000008591         db  0x20 ; ' '
0000000000008592         db  0x8d ; '.'
0000000000008593         db  0x04 ; '.'
0000000000008594         db  0x42 ; 'B'
0000000000008595         db  0x0e ; '.'
0000000000008596         db  0x28 ; '('
0000000000008597         db  0x8c ; '.'
0000000000008598         db  0x05 ; '.'
0000000000008599         db  0x41 ; 'A'
000000000000859a         db  0x0e ; '.'
000000000000859b         db  0x30 ; '0'
000000000000859c         db  0x86 ; '.'
000000000000859d         db  0x06 ; '.'
000000000000859e         db  0x41 ; 'A'
000000000000859f         db  0x0e ; '.'
00000000000085a0         db  0x38 ; '8'
00000000000085a1         db  0x83 ; '.'
00000000000085a2         db  0x07 ; '.'
00000000000085a3         db  0x4d ; 'M'
00000000000085a4         db  0x0e ; '.'
00000000000085a5         db  0xb0 ; '.'
00000000000085a6         db  0x81 ; '.'
00000000000085a7         db  0x01 ; '.'
00000000000085a8         db  0x03 ; '.'
00000000000085a9         db  0x65 ; 'e'
00000000000085aa         db  0x04 ; '.'
00000000000085ab         db  0x0a ; '.'
00000000000085ac         db  0x0e ; '.'
00000000000085ad         db  0x38 ; '8'
00000000000085ae         db  0x41 ; 'A'
00000000000085af         db  0x0e ; '.'
00000000000085b0         db  0x30 ; '0'
00000000000085b1         db  0x41 ; 'A'
00000000000085b2         db  0x0e ; '.'
00000000000085b3         db  0x28 ; '('
00000000000085b4         db  0x42 ; 'B'
00000000000085b5         db  0x0e ; '.'
00000000000085b6         db  0x20 ; ' '
00000000000085b7         db  0x42 ; 'B'
00000000000085b8         db  0x0e ; '.'
00000000000085b9         db  0x18 ; '.'
00000000000085ba         db  0x42 ; 'B'
00000000000085bb         db  0x0e ; '.'
00000000000085bc         db  0x10 ; '.'
00000000000085bd         db  0x42 ; 'B'
00000000000085be         db  0x0e ; '.'
00000000000085bf         db  0x08 ; '.'
00000000000085c0         db  0x4a ; 'J'
00000000000085c1         db  0x0b ; '.'
00000000000085c2         db  0x00 ; '.'
00000000000085c3         db  0x00 ; '.'
00000000000085c4         dd         0x00000028                                  ; Length of the record
00000000000085c8         dd         0x000000f8                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
00000000000085cc         db         0x84, 0xb0, 2 dup (0xff)                    ; begin 0x3650
00000000000085d0         db         0xb2, 0x03, 2 dup (0x00)                    ; length 0x3b2 (end at 0x3a02)
00000000000085d4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000085d5         db  0x42 ; 'B'
00000000000085d6         db  0x0e ; '.'
00000000000085d7         db  0x10 ; '.'
00000000000085d8         db  0x8d ; '.'
00000000000085d9         db  0x02 ; '.'
00000000000085da         db  0x42 ; 'B'
00000000000085db         db  0x0e ; '.'
00000000000085dc         db  0x18 ; '.'
00000000000085dd         db  0x8c ; '.'
00000000000085de         db  0x03 ; '.'
00000000000085df         db  0x46 ; 'F'
00000000000085e0         db  0x0e ; '.'
00000000000085e1         db  0x20 ; ' '
00000000000085e2         db  0x86 ; '.'
00000000000085e3         db  0x04 ; '.'
00000000000085e4         db  0x41 ; 'A'
00000000000085e5         db  0x0e ; '.'
00000000000085e6         db  0x28 ; '('
00000000000085e7         db  0x83 ; '.'
00000000000085e8         db  0x05 ; '.'
00000000000085e9         db  0x49 ; 'I'
00000000000085ea         db  0x0e ; '.'
00000000000085eb         db  0xb0 ; '.'
00000000000085ec         db  0x01 ; '.'
00000000000085ed         db  0x00 ; '.'
00000000000085ee         db  0x00 ; '.'
00000000000085ef         db  0x00 ; '.'
00000000000085f0         dd         0x0000005c                                  ; Length of the record
00000000000085f4         dd         0x00000124                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
00000000000085f8         db         0xe8, 0x97, 2 dup (0xff)                    ; begin 0x1de0
00000000000085fc         db         0x59, 0x0a, 2 dup (0x00)                    ; length 0xa59 (end at 0x2839)
0000000000008600         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008601         db  0x42 ; 'B'
0000000000008602         db  0x0e ; '.'
0000000000008603         db  0x10 ; '.'
0000000000008604         db  0x8f ; '.'
0000000000008605         db  0x02 ; '.'
0000000000008606         db  0x42 ; 'B'
0000000000008607         db  0x0e ; '.'
0000000000008608         db  0x18 ; '.'
0000000000008609         db  0x8e ; '.'
000000000000860a         db  0x03 ; '.'
000000000000860b         db  0x42 ; 'B'
000000000000860c         db  0x0e ; '.'
000000000000860d         db  0x20 ; ' '
000000000000860e         db  0x8d ; '.'
000000000000860f         db  0x04 ; '.'
0000000000008610         db  0x42 ; 'B'
0000000000008611         db  0x0e ; '.'
0000000000008612         db  0x28 ; '('
0000000000008613         db  0x8c ; '.'
0000000000008614         db  0x05 ; '.'
0000000000008615         db  0x44 ; 'D'
0000000000008616         db  0x0e ; '.'
0000000000008617         db  0x30 ; '0'
0000000000008618         db  0x86 ; '.'
0000000000008619         db  0x06 ; '.'
000000000000861a         db  0x41 ; 'A'
000000000000861b         db  0x0e ; '.'
000000000000861c         db  0x38 ; '8'
000000000000861d         db  0x83 ; '.'
000000000000861e         db  0x07 ; '.'
000000000000861f         db  0x50 ; 'P'
0000000000008620         db  0x0e ; '.'
0000000000008621         db  0xb0 ; '.'
0000000000008622         db  0x04 ; '.'
0000000000008623         db  0x03 ; '.'
0000000000008624         db  0x77 ; 'w'
0000000000008625         db  0x01 ; '.'
0000000000008626         db  0x0a ; '.'
0000000000008627         db  0x0e ; '.'
0000000000008628         db  0xb8 ; '.'
0000000000008629         db  0x04 ; '.'
000000000000862a         db  0x50 ; 'P'
000000000000862b         db  0x0e ; '.'
000000000000862c         db  0xc0 ; '.'
000000000000862d         db  0x04 ; '.'
000000000000862e         db  0x6c ; 'l'
000000000000862f         db  0x0b ; '.'
0000000000008630         db  0x03 ; '.'
0000000000008631         db  0x51 ; 'Q'
0000000000008632         db  0x05 ; '.'
0000000000008633         db  0x0a ; '.'
0000000000008634         db  0x0e ; '.'
0000000000008635         db  0x38 ; '8'
0000000000008636         db  0x41 ; 'A'
0000000000008637         db  0x0e ; '.'
0000000000008638         db  0x30 ; '0'
0000000000008639         db  0x41 ; 'A'
000000000000863a         db  0x0e ; '.'
000000000000863b         db  0x28 ; '('
000000000000863c         db  0x42 ; 'B'
000000000000863d         db  0x0e ; '.'
000000000000863e         db  0x20 ; ' '
000000000000863f         db  0x42 ; 'B'
0000000000008640         db  0x0e ; '.'
0000000000008641         db  0x18 ; '.'
0000000000008642         db  0x42 ; 'B'
0000000000008643         db  0x0e ; '.'
0000000000008644         db  0x10 ; '.'
0000000000008645         db  0x42 ; 'B'
0000000000008646         db  0x0e ; '.'
0000000000008647         db  0x08 ; '.'
0000000000008648         db  0x41 ; 'A'
0000000000008649         db  0x0b ; '.'
000000000000864a         db  0x00 ; '.'
000000000000864b         db  0x00 ; '.'
000000000000864c         db  0x00 ; '.'
000000000000864d         db  0x00 ; '.'
000000000000864e         db  0x00 ; '.'
000000000000864f         db  0x00 ; '.'
0000000000008650         dd         0x00000018                                  ; Length of the record
0000000000008654         dd         0x00000184                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008658         db         0xb8, 0xb3, 2 dup (0xff)                    ; begin 0x3a10
000000000000865c         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x3a34)
0000000000008660         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008661         db  0x41 ; 'A'
0000000000008662         db  0x0e ; '.'
0000000000008663         db  0x10 ; '.'
0000000000008664         db  0x83 ; '.'
0000000000008665         db  0x02 ; '.'
0000000000008666         db  0x62 ; 'b'
0000000000008667         db  0x0e ; '.'
0000000000008668         db  0x08 ; '.'
0000000000008669         db  0x00 ; '.'
000000000000866a         db  0x00 ; '.'
000000000000866b         db  0x00 ; '.'
000000000000866c         dd         0x00000018                                  ; Length of the record
0000000000008670         dd         0x000001a0                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008674         db         0xcc, 0xb3, 2 dup (0xff)                    ; begin 0x3a40
0000000000008678         db         0x38, 3 dup (0x00)                          ; length 0x38 (end at 0x3a78)
000000000000867c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000867d         db  0x41 ; 'A'
000000000000867e         db  0x0e ; '.'
000000000000867f         db  0x10 ; '.'
0000000000008680         db  0x83 ; '.'
0000000000008681         db  0x02 ; '.'
0000000000008682         db  0x76 ; 'v'
0000000000008683         db  0x0e ; '.'
0000000000008684         db  0x08 ; '.'
0000000000008685         db  0x00 ; '.'
0000000000008686         db  0x00 ; '.'
0000000000008687         db  0x00 ; '.'
0000000000008688         dd         0x00000030                                  ; Length of the record
000000000000868c         dd         0x000001bc                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008690         db         0xf0, 0xb3, 2 dup (0xff)                    ; begin 0x3a80
0000000000008694         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x3b0a)
0000000000008698         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008699         db  0x49 ; 'I'
000000000000869a         db  0x0e ; '.'
000000000000869b         db  0x10 ; '.'
000000000000869c         db  0x86 ; '.'
000000000000869d         db  0x02 ; '.'
000000000000869e         db  0x41 ; 'A'
000000000000869f         db  0x0e ; '.'
00000000000086a0         db  0x18 ; '.'
00000000000086a1         db  0x83 ; '.'
00000000000086a2         db  0x03 ; '.'
00000000000086a3         db  0x52 ; 'R'
00000000000086a4         db  0x0e ; '.'
00000000000086a5         db  0x20 ; ' '
00000000000086a6         db  0x60 ; '`'
00000000000086a7         db  0x0e ; '.'
00000000000086a8         db  0x18 ; '.'
00000000000086a9         db  0x41 ; 'A'
00000000000086aa         db  0x0e ; '.'
00000000000086ab         db  0x10 ; '.'
00000000000086ac         db  0x41 ; 'A'
00000000000086ad         db  0x0e ; '.'
00000000000086ae         db  0x08 ; '.'
00000000000086af         db  0x42 ; 'B'
00000000000086b0         db  0xc3 ; '.'
00000000000086b1         db  0xc6 ; '.'
00000000000086b2         db  0x70 ; 'p'
00000000000086b3         db  0x0e ; '.'
00000000000086b4         db  0x20 ; ' '
00000000000086b5         db  0x83 ; '.'
00000000000086b6         db  0x03 ; '.'
00000000000086b7         db  0x86 ; '.'
00000000000086b8         db  0x02 ; '.'
00000000000086b9         db  0x00 ; '.'
00000000000086ba         db  0x00 ; '.'
00000000000086bb         db  0x00 ; '.'
00000000000086bc         dd         0x00000010                                  ; Length of the record
00000000000086c0         dd         0x000001f0                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
00000000000086c4         db         0x4c, 0xb4, 2 dup (0xff)                    ; begin 0x3b10
00000000000086c8         db         0x1d, 3 dup (0x00)                          ; length 0x1d (end at 0x3b2d)
00000000000086cc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000086cd         align      16
00000000000086d0         dd         0x0000001c                                  ; Length of the record
00000000000086d4         dd         0x00000204                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
00000000000086d8         db         0x58, 0xb4, 2 dup (0xff)                    ; begin 0x3b30
00000000000086dc         db         0x1c, 3 dup (0x00)                          ; length 0x1c (end at 0x3b4c)
00000000000086e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000086e1         db  0x41 ; 'A'
00000000000086e2         db  0x0e ; '.'
00000000000086e3         db  0x10 ; '.'
00000000000086e4         db  0x83 ; '.'
00000000000086e5         db  0x02 ; '.'
00000000000086e6         db  0x56 ; 'V'
00000000000086e7         db  0x0e ; '.'
00000000000086e8         db  0x08 ; '.'
00000000000086e9         db  0x00 ; '.'
00000000000086ea         db  0x00 ; '.'
00000000000086eb         db  0x00 ; '.'
00000000000086ec         db  0x00 ; '.'
00000000000086ed         db  0x00 ; '.'
00000000000086ee         db  0x00 ; '.'
00000000000086ef         db  0x00 ; '.'
00000000000086f0         dd         0x00000010                                  ; Length of the record
00000000000086f4         dd         0x00000224                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
00000000000086f8         db         0x58, 0xb4, 2 dup (0xff)                    ; begin 0x3b50
00000000000086fc         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x3b58)
0000000000008700         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008701         align      4
0000000000008704         dd         0x00000010                                  ; Length of the record
0000000000008708         dd         0x00000238                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
000000000000870c         db         0x54, 0xb4, 2 dup (0xff)                    ; begin 0x3b60
0000000000008710         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x3b68)
0000000000008714         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008715         align      8
0000000000008718         dd         0x0000002c                                  ; Length of the record
000000000000871c         dd         0x0000024c                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008720         db         0x50, 0xb4, 2 dup (0xff)                    ; begin 0x3b70
0000000000008724         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x3c14)
0000000000008728         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008729         db  0x41 ; 'A'
000000000000872a         db  0x0e ; '.'
000000000000872b         db  0x10 ; '.'
000000000000872c         db  0x86 ; '.'
000000000000872d         db  0x02 ; '.'
000000000000872e         db  0x41 ; 'A'
000000000000872f         db  0x0e ; '.'
0000000000008730         db  0x18 ; '.'
0000000000008731         db  0x83 ; '.'
0000000000008732         db  0x03 ; '.'
0000000000008733         db  0x44 ; 'D'
0000000000008734         db  0x0e ; '.'
0000000000008735         db  0x20 ; ' '
0000000000008736         db  0x7a ; 'z'
0000000000008737         db  0x0a ; '.'
0000000000008738         db  0x0e ; '.'
0000000000008739         db  0x18 ; '.'
000000000000873a         db  0x41 ; 'A'
000000000000873b         db  0x0e ; '.'
000000000000873c         db  0x10 ; '.'
000000000000873d         db  0x41 ; 'A'
000000000000873e         db  0x0e ; '.'
000000000000873f         db  0x08 ; '.'
0000000000008740         db  0x41 ; 'A'
0000000000008741         db  0x0b ; '.'
0000000000008742         db  0x00 ; '.'
0000000000008743         db  0x00 ; '.'
0000000000008744         db  0x00 ; '.'
0000000000008745         db  0x00 ; '.'
0000000000008746         db  0x00 ; '.'
0000000000008747         db  0x00 ; '.'
0000000000008748         dd         0x00000010                                  ; Length of the record
000000000000874c         dd         0x0000027c                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008750         db         0xd0, 0xb4, 2 dup (0xff)                    ; begin 0x3c20
0000000000008754         db         0x05, 3 dup (0x00)                          ; length 0x5 (end at 0x3c25)
0000000000008758         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008759         align      4
000000000000875c         dd         0x00000018                                  ; Length of the record
0000000000008760         dd         0x00000290                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008764         db         0xcc, 0xb4, 2 dup (0xff)                    ; begin 0x3c30
0000000000008768         db         0x22, 3 dup (0x00)                          ; length 0x22 (end at 0x3c52)
000000000000876c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000876d         db  0x46 ; 'F'
000000000000876e         db  0x0e ; '.'
000000000000876f         db  0x10 ; '.'
0000000000008770         db  0x83 ; '.'
0000000000008771         db  0x02 ; '.'
0000000000008772         db  0x4e ; 'N'
0000000000008773         db  0xc3 ; '.'
0000000000008774         db  0x0e ; '.'
0000000000008775         db  0x08 ; '.'
0000000000008776         db  0x00 ; '.'
0000000000008777         db  0x00 ; '.'
0000000000008778         dd         0x00000014                                  ; Length of the record
000000000000877c         dd         0x000002ac                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008780         db         0xe0, 0xb4, 2 dup (0xff)                    ; begin 0x3c60
0000000000008784         db         0x42, 3 dup (0x00)                          ; length 0x42 (end at 0x3ca2)
0000000000008788         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008789         align      16
0000000000008790         dd         0x0000001c                                  ; Length of the record
0000000000008794         dd         0x000002c4                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008798         db         0x18, 0xb5, 2 dup (0xff)                    ; begin 0x3cb0
000000000000879c         db         0x21, 3 dup (0x00)                          ; length 0x21 (end at 0x3cd1)
00000000000087a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000087a1         db  0x41 ; 'A'
00000000000087a2         db  0x0e ; '.'
00000000000087a3         db  0x10 ; '.'
00000000000087a4         db  0x83 ; '.'
00000000000087a5         db  0x02 ; '.'
00000000000087a6         db  0x4c ; 'L'
00000000000087a7         db  0x0a ; '.'
00000000000087a8         db  0x0e ; '.'
00000000000087a9         db  0x08 ; '.'
00000000000087aa         db  0x43 ; 'C'
00000000000087ab         db  0x0b ; '.'
00000000000087ac         db  0x50 ; 'P'
00000000000087ad         db  0x0e ; '.'
00000000000087ae         db  0x08 ; '.'
00000000000087af         db  0x00 ; '.'
00000000000087b0         dd         0x00000028                                  ; Length of the record
00000000000087b4         dd         0x000002e4                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
00000000000087b8         db         0x28, 0xb5, 2 dup (0xff)                    ; begin 0x3ce0
00000000000087bc         db         0x56, 3 dup (0x00)                          ; length 0x56 (end at 0x3d36)
00000000000087c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000087c1         db  0x41 ; 'A'
00000000000087c2         db  0x0e ; '.'
00000000000087c3         db  0x10 ; '.'
00000000000087c4         db  0x86 ; '.'
00000000000087c5         db  0x02 ; '.'
00000000000087c6         db  0x41 ; 'A'
00000000000087c7         db  0x0e ; '.'
00000000000087c8         db  0x18 ; '.'
00000000000087c9         db  0x83 ; '.'
00000000000087ca         db  0x03 ; '.'
00000000000087cb         db  0x4e ; 'N'
00000000000087cc         db  0x0e ; '.'
00000000000087cd         db  0x20 ; ' '
00000000000087ce         db  0x68 ; 'h'
00000000000087cf         db  0x0a ; '.'
00000000000087d0         db  0x0e ; '.'
00000000000087d1         db  0x18 ; '.'
00000000000087d2         db  0x41 ; 'A'
00000000000087d3         db  0x0e ; '.'
00000000000087d4         db  0x10 ; '.'
00000000000087d5         db  0x41 ; 'A'
00000000000087d6         db  0x0e ; '.'
00000000000087d7         db  0x08 ; '.'
00000000000087d8         db  0x46 ; 'F'
00000000000087d9         db  0x0b ; '.'
00000000000087da         db  0x00 ; '.'
00000000000087db         db  0x00 ; '.'
00000000000087dc         dd         0x00000010                                  ; Length of the record
00000000000087e0         dd         0x00000310                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
00000000000087e4         db         0x5c, 0xb5, 2 dup (0xff)                    ; begin 0x3d40
00000000000087e8         db         0x1d, 3 dup (0x00)                          ; length 0x1d (end at 0x3d5d)
00000000000087ec         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000087ed         align      16
00000000000087f0         dd         0x00000018                                  ; Length of the record
00000000000087f4         dd         0x00000324                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
00000000000087f8         db         0x68, 0xb5, 2 dup (0xff)                    ; begin 0x3d60
00000000000087fc         db         0xe0, 3 dup (0x00)                          ; length 0xe0 (end at 0x3e40)
0000000000008800         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008801         db  0x47 ; 'G'
0000000000008802         db  0x0e ; '.'
0000000000008803         db  0xa0 ; '.'
0000000000008804         db  0x01 ; '.'
0000000000008805         db  0x02 ; '.'
0000000000008806         db  0x73 ; 's'
0000000000008807         db  0x0a ; '.'
0000000000008808         db  0x0e ; '.'
0000000000008809         db  0x08 ; '.'
000000000000880a         db  0x46 ; 'F'
000000000000880b         db  0x0b ; '.'
000000000000880c         dd         0x00000018                                  ; Length of the record
0000000000008810         dd         0x00000340                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008814         db         0x2c, 0xb6, 2 dup (0xff)                    ; begin 0x3e40
0000000000008818         db         0x20, 0x01, 2 dup (0x00)                    ; length 0x120 (end at 0x3f60)
000000000000881c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000881d         db  0x47 ; 'G'
000000000000881e         db  0x0e ; '.'
000000000000881f         db  0xa0 ; '.'
0000000000008820         db  0x01 ; '.'
0000000000008821         db  0x02 ; '.'
0000000000008822         db  0x77 ; 'w'
0000000000008823         db  0x0a ; '.'
0000000000008824         db  0x0e ; '.'
0000000000008825         db  0x08 ; '.'
0000000000008826         db  0x42 ; 'B'
0000000000008827         db  0x0b ; '.'
0000000000008828         dd         0x0000001c                                  ; Length of the record
000000000000882c         dd         0x0000035c                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008830         db         0x30, 0xb7, 2 dup (0xff)                    ; begin 0x3f60
0000000000008834         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x3fff)
0000000000008838         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008839         db  0x44 ; 'D'
000000000000883a         db  0x0e ; '.'
000000000000883b         db  0x10 ; '.'
000000000000883c         db  0x83 ; '.'
000000000000883d         db  0x02 ; '.'
000000000000883e         db  0x02 ; '.'
000000000000883f         db  0x78 ; 'x'
0000000000008840         db  0x0a ; '.'
0000000000008841         db  0x0e ; '.'
0000000000008842         db  0x08 ; '.'
0000000000008843         db  0x41 ; 'A'
0000000000008844         db  0x0b ; '.'
0000000000008845         db  0x00 ; '.'
0000000000008846         db  0x00 ; '.'
0000000000008847         db  0x00 ; '.'
0000000000008848         dd         0x00000040                                  ; Length of the record
000000000000884c         dd         0x0000037c                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008850         db         0xb0, 0xb7, 2 dup (0xff)                    ; begin 0x4000
0000000000008854         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x40e7)
0000000000008858         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008859         db  0x41 ; 'A'
000000000000885a         db  0x0e ; '.'
000000000000885b         db  0x10 ; '.'
000000000000885c         db  0x86 ; '.'
000000000000885d         db  0x02 ; '.'
000000000000885e         db  0x41 ; 'A'
000000000000885f         db  0x0e ; '.'
0000000000008860         db  0x18 ; '.'
0000000000008861         db  0x83 ; '.'
0000000000008862         db  0x03 ; '.'
0000000000008863         db  0x49 ; 'I'
0000000000008864         db  0x0e ; '.'
0000000000008865         db  0x20 ; ' '
0000000000008866         db  0x6e ; 'n'
0000000000008867         db  0x0a ; '.'
0000000000008868         db  0x0e ; '.'
0000000000008869         db  0x18 ; '.'
000000000000886a         db  0x41 ; 'A'
000000000000886b         db  0x0e ; '.'
000000000000886c         db  0x10 ; '.'
000000000000886d         db  0x41 ; 'A'
000000000000886e         db  0x0e ; '.'
000000000000886f         db  0x08 ; '.'
0000000000008870         db  0x45 ; 'E'
0000000000008871         db  0x0b ; '.'
0000000000008872         db  0x02 ; '.'
0000000000008873         db  0x4a ; 'J'
0000000000008874         db  0x0a ; '.'
0000000000008875         db  0x0e ; '.'
0000000000008876         db  0x18 ; '.'
0000000000008877         db  0x41 ; 'A'
0000000000008878         db  0x0e ; '.'
0000000000008879         db  0x10 ; '.'
000000000000887a         db  0x41 ; 'A'
000000000000887b         db  0x0e ; '.'
000000000000887c         db  0x08 ; '.'
000000000000887d         db  0x44 ; 'D'
000000000000887e         db  0x0b ; '.'
000000000000887f         db  0x02 ; '.'
0000000000008880         db  0x54 ; 'T'
0000000000008881         db  0x0e ; '.'
0000000000008882         db  0x18 ; '.'
0000000000008883         db  0x41 ; 'A'
0000000000008884         db  0x0e ; '.'
0000000000008885         db  0x10 ; '.'
0000000000008886         db  0x41 ; 'A'
0000000000008887         db  0x0e ; '.'
0000000000008888         db  0x08 ; '.'
0000000000008889         db  0x00 ; '.'
000000000000888a         db  0x00 ; '.'
000000000000888b         db  0x00 ; '.'
000000000000888c         dd         0x00000074                                  ; Length of the record
0000000000008890         dd         0x000003c0                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008894         db         0x5c, 0xb8, 2 dup (0xff)                    ; begin 0x40f0
0000000000008898         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x5324)
000000000000889c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000889d         db  0x42 ; 'B'
000000000000889e         db  0x0e ; '.'
000000000000889f         db  0x10 ; '.'
00000000000088a0         db  0x8f ; '.'
00000000000088a1         db  0x02 ; '.'
00000000000088a2         db  0x42 ; 'B'
00000000000088a3         db  0x0e ; '.'
00000000000088a4         db  0x18 ; '.'
00000000000088a5         db  0x8e ; '.'
00000000000088a6         db  0x03 ; '.'
00000000000088a7         db  0x45 ; 'E'
00000000000088a8         db  0x0e ; '.'
00000000000088a9         db  0x20 ; ' '
00000000000088aa         db  0x8d ; '.'
00000000000088ab         db  0x04 ; '.'
00000000000088ac         db  0x42 ; 'B'
00000000000088ad         db  0x0e ; '.'
00000000000088ae         db  0x28 ; '('
00000000000088af         db  0x8c ; '.'
00000000000088b0         db  0x05 ; '.'
00000000000088b1         db  0x44 ; 'D'
00000000000088b2         db  0x0e ; '.'
00000000000088b3         db  0x30 ; '0'
00000000000088b4         db  0x86 ; '.'
00000000000088b5         db  0x06 ; '.'
00000000000088b6         db  0x41 ; 'A'
00000000000088b7         db  0x0e ; '.'
00000000000088b8         db  0x38 ; '8'
00000000000088b9         db  0x83 ; '.'
00000000000088ba         db  0x07 ; '.'
00000000000088bb         db  0x53 ; 'S'
00000000000088bc         db  0x0e ; '.'
00000000000088bd         db  0xf0 ; '.'
00000000000088be         db  0x01 ; '.'
00000000000088bf         db  0x03 ; '.'
00000000000088c0         db  0x81 ; '.'
00000000000088c1         db  0x0b ; '.'
00000000000088c2         db  0x0e ; '.'
00000000000088c3         db  0xf8 ; '.'
00000000000088c4         db  0x01 ; '.'
00000000000088c5         db  0x4a ; 'J'
00000000000088c6         db  0x0e ; '.'
00000000000088c7         db  0x80 ; '.'
00000000000088c8         db  0x02 ; '.'
00000000000088c9         db  0x44 ; 'D'
00000000000088ca         db  0x0e ; '.'
00000000000088cb         db  0x88 ; '.'
00000000000088cc         db  0x02 ; '.'
00000000000088cd         db  0x45 ; 'E'
00000000000088ce         db  0x0e ; '.'
00000000000088cf         db  0x90 ; '.'
00000000000088d0         db  0x02 ; '.'
00000000000088d1         db  0x5f ; '_'
00000000000088d2         db  0x0e ; '.'
00000000000088d3         db  0xf0 ; '.'
00000000000088d4         db  0x01 ; '.'
00000000000088d5         db  0x64 ; 'd'
00000000000088d6         db  0x0a ; '.'
00000000000088d7         db  0x0e ; '.'
00000000000088d8         db  0x38 ; '8'
00000000000088d9         db  0x41 ; 'A'
00000000000088da         db  0x0e ; '.'
00000000000088db         db  0x30 ; '0'
00000000000088dc         db  0x41 ; 'A'
00000000000088dd         db  0x0e ; '.'
00000000000088de         db  0x28 ; '('
00000000000088df         db  0x42 ; 'B'
00000000000088e0         db  0x0e ; '.'
00000000000088e1         db  0x20 ; ' '
00000000000088e2         db  0x42 ; 'B'
00000000000088e3         db  0x0e ; '.'
00000000000088e4         db  0x18 ; '.'
00000000000088e5         db  0x42 ; 'B'
00000000000088e6         db  0x0e ; '.'
00000000000088e7         db  0x10 ; '.'
00000000000088e8         db  0x42 ; 'B'
00000000000088e9         db  0x0e ; '.'
00000000000088ea         db  0x08 ; '.'
00000000000088eb         db  0x44 ; 'D'
00000000000088ec         db  0x0b ; '.'
00000000000088ed         db  0x03 ; '.'
00000000000088ee         db  0x99 ; '.'
00000000000088ef         db  0x05 ; '.'
00000000000088f0         db  0x0e ; '.'
00000000000088f1         db  0xf8 ; '.'
00000000000088f2         db  0x01 ; '.'
00000000000088f3         db  0x4d ; 'M'
00000000000088f4         db  0x0e ; '.'
00000000000088f5         db  0x80 ; '.'
00000000000088f6         db  0x02 ; '.'
00000000000088f7         db  0x44 ; 'D'
00000000000088f8         db  0x0e ; '.'
00000000000088f9         db  0x88 ; '.'
00000000000088fa         db  0x02 ; '.'
00000000000088fb         db  0x47 ; 'G'
00000000000088fc         db  0x0e ; '.'
00000000000088fd         db  0x90 ; '.'
00000000000088fe         db  0x02 ; '.'
00000000000088ff         db  0x5b ; '['
0000000000008900         db  0x0e ; '.'
0000000000008901         db  0xf0 ; '.'
0000000000008902         db  0x01 ; '.'
0000000000008903         db  0x00 ; '.'
0000000000008904         dd         0x00000068                                  ; Length of the record
0000000000008908         dd         0x00000438                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
000000000000890c         db         0x24, 0xca, 2 dup (0xff)                    ; begin 0x5330
0000000000008910         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x54db)
0000000000008914         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008915         db  0x42 ; 'B'
0000000000008916         db  0x0e ; '.'
0000000000008917         db  0x10 ; '.'
0000000000008918         db  0x8f ; '.'
0000000000008919         db  0x02 ; '.'
000000000000891a         db  0x42 ; 'B'
000000000000891b         db  0x0e ; '.'
000000000000891c         db  0x18 ; '.'
000000000000891d         db  0x8e ; '.'
000000000000891e         db  0x03 ; '.'
000000000000891f         db  0x45 ; 'E'
0000000000008920         db  0x0e ; '.'
0000000000008921         db  0x20 ; ' '
0000000000008922         db  0x8d ; '.'
0000000000008923         db  0x04 ; '.'
0000000000008924         db  0x42 ; 'B'
0000000000008925         db  0x0e ; '.'
0000000000008926         db  0x28 ; '('
0000000000008927         db  0x8c ; '.'
0000000000008928         db  0x05 ; '.'
0000000000008929         db  0x44 ; 'D'
000000000000892a         db  0x0e ; '.'
000000000000892b         db  0x30 ; '0'
000000000000892c         db  0x86 ; '.'
000000000000892d         db  0x06 ; '.'
000000000000892e         db  0x41 ; 'A'
000000000000892f         db  0x0e ; '.'
0000000000008930         db  0x38 ; '8'
0000000000008931         db  0x83 ; '.'
0000000000008932         db  0x07 ; '.'
0000000000008933         db  0x47 ; 'G'
0000000000008934         db  0x0e ; '.'
0000000000008935         db  0x60 ; '`'
0000000000008936         db  0x02 ; '.'
0000000000008937         db  0x99 ; '.'
0000000000008938         db  0x0e ; '.'
0000000000008939         db  0x68 ; 'h'
000000000000893a         db  0x5f ; '_'
000000000000893b         db  0x0e ; '.'
000000000000893c         db  0x70 ; 'p'
000000000000893d         db  0x46 ; 'F'
000000000000893e         db  0x0e ; '.'
000000000000893f         db  0x78 ; 'x'
0000000000008940         db  0x42 ; 'B'
0000000000008941         db  0x0e ; '.'
0000000000008942         db  0x80 ; '.'
0000000000008943         db  0x01 ; '.'
0000000000008944         db  0x59 ; 'Y'
0000000000008945         db  0x0e ; '.'
0000000000008946         db  0x60 ; '`'
0000000000008947         db  0x02 ; '.'
0000000000008948         db  0x40 ; '@'
0000000000008949         db  0x0e ; '.'
000000000000894a         db  0x68 ; 'h'
000000000000894b         db  0x4b ; 'K'
000000000000894c         db  0x0e ; '.'
000000000000894d         db  0x70 ; 'p'
000000000000894e         db  0x43 ; 'C'
000000000000894f         db  0x0e ; '.'
0000000000008950         db  0x78 ; 'x'
0000000000008951         db  0x45 ; 'E'
0000000000008952         db  0x0e ; '.'
0000000000008953         db  0x80 ; '.'
0000000000008954         db  0x01 ; '.'
0000000000008955         db  0x5e ; '^'
0000000000008956         db  0x0e ; '.'
0000000000008957         db  0x60 ; '`'
0000000000008958         db  0x4c ; 'L'
0000000000008959         db  0x0a ; '.'
000000000000895a         db  0x0e ; '.'
000000000000895b         db  0x38 ; '8'
000000000000895c         db  0x44 ; 'D'
000000000000895d         db  0x0e ; '.'
000000000000895e         db  0x30 ; '0'
000000000000895f         db  0x41 ; 'A'
0000000000008960         db  0x0e ; '.'
0000000000008961         db  0x28 ; '('
0000000000008962         db  0x42 ; 'B'
0000000000008963         db  0x0e ; '.'
0000000000008964         db  0x20 ; ' '
0000000000008965         db  0x42 ; 'B'
0000000000008966         db  0x0e ; '.'
0000000000008967         db  0x18 ; '.'
0000000000008968         db  0x42 ; 'B'
0000000000008969         db  0x0e ; '.'
000000000000896a         db  0x10 ; '.'
000000000000896b         db  0x42 ; 'B'
000000000000896c         db  0x0e ; '.'
000000000000896d         db  0x08 ; '.'
000000000000896e         db  0x46 ; 'F'
000000000000896f         db  0x0b ; '.'
0000000000008970         dd         0x00000028                                  ; Length of the record
0000000000008974         dd         0x000004a4                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008978         db         0x68, 0xcb, 2 dup (0xff)                    ; begin 0x54e0
000000000000897c         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x5516)
0000000000008980         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008981         db  0x42 ; 'B'
0000000000008982         db  0x0e ; '.'
0000000000008983         db  0x10 ; '.'
0000000000008984         db  0x8c ; '.'
0000000000008985         db  0x02 ; '.'
0000000000008986         db  0x41 ; 'A'
0000000000008987         db  0x0e ; '.'
0000000000008988         db  0x18 ; '.'
0000000000008989         db  0x86 ; '.'
000000000000898a         db  0x03 ; '.'
000000000000898b         db  0x41 ; 'A'
000000000000898c         db  0x0e ; '.'
000000000000898d         db  0x20 ; ' '
000000000000898e         db  0x83 ; '.'
000000000000898f         db  0x04 ; '.'
0000000000008990         db  0x6e ; 'n'
0000000000008991         db  0x0e ; '.'
0000000000008992         db  0x18 ; '.'
0000000000008993         db  0x41 ; 'A'
0000000000008994         db  0x0e ; '.'
0000000000008995         db  0x10 ; '.'
0000000000008996         db  0x42 ; 'B'
0000000000008997         db  0x0e ; '.'
0000000000008998         db  0x08 ; '.'
0000000000008999         db  0x00 ; '.'
000000000000899a         db  0x00 ; '.'
000000000000899b         db  0x00 ; '.'
000000000000899c         dd         0x00000010                                  ; Length of the record
00000000000089a0         dd         0x000004d0                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
00000000000089a4         db         0x7c, 0xcb, 2 dup (0xff)                    ; begin 0x5520
00000000000089a8         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x5531)
00000000000089ac         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000089ad         align      16
00000000000089b0         dd         0x00000010                                  ; Length of the record
00000000000089b4         dd         0x000004e4                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
00000000000089b8         db         0x88, 0xcb, 2 dup (0xff)                    ; begin 0x5540
00000000000089bc         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x5551)
00000000000089c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000089c1         align      4
00000000000089c4         dd         0x00000010                                  ; Length of the record
00000000000089c8         dd         0x000004f8                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
00000000000089cc         db         0x94, 0xcb, 2 dup (0xff)                    ; begin 0x5560
00000000000089d0         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x5595)
00000000000089d4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000089d5         align      8
00000000000089d8         dd         0x00000010                                  ; Length of the record
00000000000089dc         dd         0x0000050c                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
00000000000089e0         db         0xc0, 0xcb, 2 dup (0xff)                    ; begin 0x55a0
00000000000089e4         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x55b5)
00000000000089e8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000089e9         align      4
00000000000089ec         dd         0x00000010                                  ; Length of the record
00000000000089f0         dd         0x00000520                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
00000000000089f4         db         0xcc, 0xcb, 2 dup (0xff)                    ; begin 0x55c0
00000000000089f8         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x55f0)
00000000000089fc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000089fd         db  0x6b ; 'k'
00000000000089fe         db  0x0e ; '.'
00000000000089ff         db  0x10 ; '.'
0000000000008a00         dd         0x00000050                                  ; Length of the record
0000000000008a04         dd         0x00000534                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008a08         db         0xe8, 0xcb, 2 dup (0xff)                    ; begin 0x55f0
0000000000008a0c         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x5664)
0000000000008a10         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008a11         db  0x42 ; 'B'
0000000000008a12         db  0x0e ; '.'
0000000000008a13         db  0x10 ; '.'
0000000000008a14         db  0x8f ; '.'
0000000000008a15         db  0x02 ; '.'
0000000000008a16         db  0x42 ; 'B'
0000000000008a17         db  0x0e ; '.'
0000000000008a18         db  0x18 ; '.'
0000000000008a19         db  0x8e ; '.'
0000000000008a1a         db  0x03 ; '.'
0000000000008a1b         db  0x49 ; 'I'
0000000000008a1c         db  0x0e ; '.'
0000000000008a1d         db  0x20 ; ' '
0000000000008a1e         db  0x8d ; '.'
0000000000008a1f         db  0x04 ; '.'
0000000000008a20         db  0x42 ; 'B'
0000000000008a21         db  0x0e ; '.'
0000000000008a22         db  0x28 ; '('
0000000000008a23         db  0x8c ; '.'
0000000000008a24         db  0x05 ; '.'
0000000000008a25         db  0x44 ; 'D'
0000000000008a26         db  0x0e ; '.'
0000000000008a27         db  0x30 ; '0'
0000000000008a28         db  0x86 ; '.'
0000000000008a29         db  0x06 ; '.'
0000000000008a2a         db  0x41 ; 'A'
0000000000008a2b         db  0x0e ; '.'
0000000000008a2c         db  0x38 ; '8'
0000000000008a2d         db  0x83 ; '.'
0000000000008a2e         db  0x07 ; '.'
0000000000008a2f         db  0x4d ; 'M'
0000000000008a30         db  0x0e ; '.'
0000000000008a31         db  0x50 ; 'P'
0000000000008a32         db  0x5f ; '_'
0000000000008a33         db  0x0e ; '.'
0000000000008a34         db  0x58 ; 'X'
0000000000008a35         db  0x47 ; 'G'
0000000000008a36         db  0x0e ; '.'
0000000000008a37         db  0x60 ; '`'
0000000000008a38         db  0x46 ; 'F'
0000000000008a39         db  0x0e ; '.'
0000000000008a3a         db  0x68 ; 'h'
0000000000008a3b         db  0x44 ; 'D'
0000000000008a3c         db  0x0e ; '.'
0000000000008a3d         db  0x70 ; 'p'
0000000000008a3e         db  0x58 ; 'X'
0000000000008a3f         db  0x0e ; '.'
0000000000008a40         db  0x38 ; '8'
0000000000008a41         db  0x41 ; 'A'
0000000000008a42         db  0x0e ; '.'
0000000000008a43         db  0x30 ; '0'
0000000000008a44         db  0x41 ; 'A'
0000000000008a45         db  0x0e ; '.'
0000000000008a46         db  0x28 ; '('
0000000000008a47         db  0x42 ; 'B'
0000000000008a48         db  0x0e ; '.'
0000000000008a49         db  0x20 ; ' '
0000000000008a4a         db  0x42 ; 'B'
0000000000008a4b         db  0x0e ; '.'
0000000000008a4c         db  0x18 ; '.'
0000000000008a4d         db  0x42 ; 'B'
0000000000008a4e         db  0x0e ; '.'
0000000000008a4f         db  0x10 ; '.'
0000000000008a50         db  0x42 ; 'B'
0000000000008a51         db  0x0e ; '.'
0000000000008a52         db  0x08 ; '.'
0000000000008a53         db  0x00 ; '.'
0000000000008a54         dd         0x00000068                                  ; Length of the record
0000000000008a58         dd         0x00000588                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008a5c         db         0x14, 0xcc, 2 dup (0xff)                    ; begin 0x5670
0000000000008a60         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x5753)
0000000000008a64         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008a65         db  0x42 ; 'B'
0000000000008a66         db  0x0e ; '.'
0000000000008a67         db  0x10 ; '.'
0000000000008a68         db  0x8f ; '.'
0000000000008a69         db  0x02 ; '.'
0000000000008a6a         db  0x42 ; 'B'
0000000000008a6b         db  0x0e ; '.'
0000000000008a6c         db  0x18 ; '.'
0000000000008a6d         db  0x8e ; '.'
0000000000008a6e         db  0x03 ; '.'
0000000000008a6f         db  0x49 ; 'I'
0000000000008a70         db  0x0e ; '.'
0000000000008a71         db  0x20 ; ' '
0000000000008a72         db  0x8d ; '.'
0000000000008a73         db  0x04 ; '.'
0000000000008a74         db  0x42 ; 'B'
0000000000008a75         db  0x0e ; '.'
0000000000008a76         db  0x28 ; '('
0000000000008a77         db  0x8c ; '.'
0000000000008a78         db  0x05 ; '.'
0000000000008a79         db  0x44 ; 'D'
0000000000008a7a         db  0x0e ; '.'
0000000000008a7b         db  0x30 ; '0'
0000000000008a7c         db  0x86 ; '.'
0000000000008a7d         db  0x06 ; '.'
0000000000008a7e         db  0x41 ; 'A'
0000000000008a7f         db  0x0e ; '.'
0000000000008a80         db  0x38 ; '8'
0000000000008a81         db  0x83 ; '.'
0000000000008a82         db  0x07 ; '.'
0000000000008a83         db  0x4d ; 'M'
0000000000008a84         db  0x0e ; '.'
0000000000008a85         db  0x70 ; 'p'
0000000000008a86         db  0x65 ; 'e'
0000000000008a87         db  0x0e ; '.'
0000000000008a88         db  0x78 ; 'x'
0000000000008a89         db  0x4d ; 'M'
0000000000008a8a         db  0x0e ; '.'
0000000000008a8b         db  0x80 ; '.'
0000000000008a8c         db  0x01 ; '.'
0000000000008a8d         db  0x46 ; 'F'
0000000000008a8e         db  0x0e ; '.'
0000000000008a8f         db  0x88 ; '.'
0000000000008a90         db  0x01 ; '.'
0000000000008a91         db  0x42 ; 'B'
0000000000008a92         db  0x0e ; '.'
0000000000008a93         db  0x90 ; '.'
0000000000008a94         db  0x01 ; '.'
0000000000008a95         db  0x5e ; '^'
0000000000008a96         db  0x0e ; '.'
0000000000008a97         db  0x70 ; 'p'
0000000000008a98         db  0x56 ; 'V'
0000000000008a99         db  0x0e ; '.'
0000000000008a9a         db  0x78 ; 'x'
0000000000008a9b         db  0x43 ; 'C'
0000000000008a9c         db  0x0e ; '.'
0000000000008a9d         db  0x80 ; '.'
0000000000008a9e         db  0x01 ; '.'
0000000000008a9f         db  0x43 ; 'C'
0000000000008aa0         db  0x0e ; '.'
0000000000008aa1         db  0x88 ; '.'
0000000000008aa2         db  0x01 ; '.'
0000000000008aa3         db  0x56 ; 'V'
0000000000008aa4         db  0x0e ; '.'
0000000000008aa5         db  0x90 ; '.'
0000000000008aa6         db  0x01 ; '.'
0000000000008aa7         db  0x52 ; 'R'
0000000000008aa8         db  0x0e ; '.'
0000000000008aa9         db  0x70 ; 'p'
0000000000008aaa         db  0x5b ; '['
0000000000008aab         db  0x0e ; '.'
0000000000008aac         db  0x38 ; '8'
0000000000008aad         db  0x41 ; 'A'
0000000000008aae         db  0x0e ; '.'
0000000000008aaf         db  0x30 ; '0'
0000000000008ab0         db  0x41 ; 'A'
0000000000008ab1         db  0x0e ; '.'
0000000000008ab2         db  0x28 ; '('
0000000000008ab3         db  0x42 ; 'B'
0000000000008ab4         db  0x0e ; '.'
0000000000008ab5         db  0x20 ; ' '
0000000000008ab6         db  0x42 ; 'B'
0000000000008ab7         db  0x0e ; '.'
0000000000008ab8         db  0x18 ; '.'
0000000000008ab9         db  0x42 ; 'B'
0000000000008aba         db  0x0e ; '.'
0000000000008abb         db  0x10 ; '.'
0000000000008abc         db  0x42 ; 'B'
0000000000008abd         db  0x0e ; '.'
0000000000008abe         db  0x08 ; '.'
0000000000008abf         db  0x00 ; '.'
0000000000008ac0         dd         0x00000010                                  ; Length of the record
0000000000008ac4         dd         0x000005f4                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008ac8         db         0x98, 0xcc, 2 dup (0xff)                    ; begin 0x5760
0000000000008acc         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x576a)
0000000000008ad0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ad1         align      4
0000000000008ad4         dd         0x00000028                                  ; Length of the record
0000000000008ad8         dd         0x00000608                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008adc         db         0x94, 0xcc, 2 dup (0xff)                    ; begin 0x5770
0000000000008ae0         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x5803)
0000000000008ae4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ae5         db  0x48 ; 'H'
0000000000008ae6         db  0x0e ; '.'
0000000000008ae7         db  0x10 ; '.'
0000000000008ae8         db  0x8c ; '.'
0000000000008ae9         db  0x02 ; '.'
0000000000008aea         db  0x48 ; 'H'
0000000000008aeb         db  0x0e ; '.'
0000000000008aec         db  0x18 ; '.'
0000000000008aed         db  0x86 ; '.'
0000000000008aee         db  0x03 ; '.'
0000000000008aef         db  0x41 ; 'A'
0000000000008af0         db  0x0e ; '.'
0000000000008af1         db  0x20 ; ' '
0000000000008af2         db  0x83 ; '.'
0000000000008af3         db  0x04 ; '.'
0000000000008af4         db  0x02 ; '.'
0000000000008af5         db  0x74 ; 't'
0000000000008af6         db  0x0e ; '.'
0000000000008af7         db  0x18 ; '.'
0000000000008af8         db  0x4b ; 'K'
0000000000008af9         db  0x0e ; '.'
0000000000008afa         db  0x10 ; '.'
0000000000008afb         db  0x42 ; 'B'
0000000000008afc         db  0x0e ; '.'
0000000000008afd         db  0x08 ; '.'
0000000000008afe         db  0x00 ; '.'
0000000000008aff         db  0x00 ; '.'
0000000000008b00         dd         0x00000010                                  ; Length of the record
0000000000008b04         dd         0x00000634                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008b08         db         0x08, 0xcd, 2 dup (0xff)                    ; begin 0x5810
0000000000008b0c         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5823)
0000000000008b10         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b11         align      4
0000000000008b14         dd         0x00000010                                  ; Length of the record
0000000000008b18         dd         0x00000648                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008b1c         db         0x14, 0xcd, 2 dup (0xff)                    ; begin 0x5830
0000000000008b20         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x583c)
0000000000008b24         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b25         align      8
0000000000008b28         dd         0x00000010                                  ; Length of the record
0000000000008b2c         dd         0x0000065c                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008b30         db         0x10, 0xcd, 2 dup (0xff)                    ; begin 0x5840
0000000000008b34         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x5858)
0000000000008b38         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b39         align      4
0000000000008b3c         dd         0x00000010                                  ; Length of the record
0000000000008b40         dd         0x00000670                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008b44         db         0x1c, 0xcd, 2 dup (0xff)                    ; begin 0x5860
0000000000008b48         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x5874)
0000000000008b4c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b4d         align      16
0000000000008b50         dd         0x00000018                                  ; Length of the record
0000000000008b54         dd         0x00000684                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008b58         db         0x28, 0xcd, 2 dup (0xff)                    ; begin 0x5880
0000000000008b5c         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x590e)
0000000000008b60         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b61         db  0x44 ; 'D'
0000000000008b62         db  0x0e ; '.'
0000000000008b63         db  0x50 ; 'P'
0000000000008b64         db  0x02 ; '.'
0000000000008b65         db  0x7f ; '.'
0000000000008b66         db  0x0a ; '.'
0000000000008b67         db  0x0e ; '.'
0000000000008b68         db  0x08 ; '.'
0000000000008b69         db  0x41 ; 'A'
0000000000008b6a         db  0x0b ; '.'
0000000000008b6b         db  0x00 ; '.'
0000000000008b6c         dd         0x00000018                                  ; Length of the record
0000000000008b70         dd         0x000006a0                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008b74         db         0x9c, 0xcd, 2 dup (0xff)                    ; begin 0x5910
0000000000008b78         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x599a)
0000000000008b7c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b7d         db  0x44 ; 'D'
0000000000008b7e         db  0x0e ; '.'
0000000000008b7f         db  0x50 ; 'P'
0000000000008b80         db  0x02 ; '.'
0000000000008b81         db  0x7b ; '{'
0000000000008b82         db  0x0a ; '.'
0000000000008b83         db  0x0e ; '.'
0000000000008b84         db  0x08 ; '.'
0000000000008b85         db  0x41 ; 'A'
0000000000008b86         db  0x0b ; '.'
0000000000008b87         db  0x00 ; '.'
0000000000008b88         dd         0x00000010                                  ; Length of the record
0000000000008b8c         dd         0x000006bc                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008b90         db         0x10, 0xce, 2 dup (0xff)                    ; begin 0x59a0
0000000000008b94         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x59ac)
0000000000008b98         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008b99         align      4
0000000000008b9c         dd         0x00000010                                  ; Length of the record
0000000000008ba0         dd         0x000006d0                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008ba4         db         0x0c, 0xce, 2 dup (0xff)                    ; begin 0x59b0
0000000000008ba8         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x59bf)
0000000000008bac         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008bad         align      16
0000000000008bb0         dd         0x00000018                                  ; Length of the record
0000000000008bb4         dd         0x000006e4                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008bb8         db         0x08, 0xce, 2 dup (0xff)                    ; begin 0x59c0
0000000000008bbc         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x5a58)
0000000000008bc0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008bc1         db  0x44 ; 'D'
0000000000008bc2         db  0x0e ; '.'
0000000000008bc3         db  0x50 ; 'P'
0000000000008bc4         db  0x02 ; '.'
0000000000008bc5         db  0x8e ; '.'
0000000000008bc6         db  0x0a ; '.'
0000000000008bc7         db  0x0e ; '.'
0000000000008bc8         db  0x08 ; '.'
0000000000008bc9         db  0x41 ; 'A'
0000000000008bca         db  0x0b ; '.'
0000000000008bcb         db  0x00 ; '.'
0000000000008bcc         dd         0x00000010                                  ; Length of the record
0000000000008bd0         dd         0x00000700                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008bd4         db         0x8c, 0xce, 2 dup (0xff)                    ; begin 0x5a60
0000000000008bd8         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x5a70)
0000000000008bdc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008bdd         align      32
0000000000008be0         dd         0x00000010                                  ; Length of the record
0000000000008be4         dd         0x00000714                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008be8         db         0x88, 0xce, 2 dup (0xff)                    ; begin 0x5a70
0000000000008bec         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x5a81)
0000000000008bf0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008bf1         align      4
0000000000008bf4         dd         0x00000010                                  ; Length of the record
0000000000008bf8         dd         0x00000728                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008bfc         db         0x94, 0xce, 2 dup (0xff)                    ; begin 0x5a90
0000000000008c00         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x5a9a)
0000000000008c04         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c05         align      8
0000000000008c08         dd         0x00000018                                  ; Length of the record
0000000000008c0c         dd         0x0000073c                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008c10         db         0x90, 0xce, 2 dup (0xff)                    ; begin 0x5aa0
0000000000008c14         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x5b2e)
0000000000008c18         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c19         db  0x44 ; 'D'
0000000000008c1a         db  0x0e ; '.'
0000000000008c1b         db  0x50 ; 'P'
0000000000008c1c         db  0x02 ; '.'
0000000000008c1d         db  0x7f ; '.'
0000000000008c1e         db  0x0a ; '.'
0000000000008c1f         db  0x0e ; '.'
0000000000008c20         db  0x08 ; '.'
0000000000008c21         db  0x41 ; 'A'
0000000000008c22         db  0x0b ; '.'
0000000000008c23         db  0x00 ; '.'
0000000000008c24         dd         0x00000018                                  ; Length of the record
0000000000008c28         dd         0x00000758                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008c2c         db         0x04, 0xcf, 2 dup (0xff)                    ; begin 0x5b30
0000000000008c30         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x5bc1)
0000000000008c34         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c35         db  0x44 ; 'D'
0000000000008c36         db  0x0e ; '.'
0000000000008c37         db  0x50 ; 'P'
0000000000008c38         db  0x02 ; '.'
0000000000008c39         db  0x82 ; '.'
0000000000008c3a         db  0x0a ; '.'
0000000000008c3b         db  0x0e ; '.'
0000000000008c3c         db  0x08 ; '.'
0000000000008c3d         db  0x41 ; 'A'
0000000000008c3e         db  0x0b ; '.'
0000000000008c3f         db  0x00 ; '.'
0000000000008c40         dd         0x00000010                                  ; Length of the record
0000000000008c44         dd         0x00000774                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008c48         db         0x88, 0xcf, 2 dup (0xff)                    ; begin 0x5bd0
0000000000008c4c         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x5bdc)
0000000000008c50         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c51         align      4
0000000000008c54         dd         0x00000010                                  ; Length of the record
0000000000008c58         dd         0x00000788                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008c5c         db         0x84, 0xcf, 2 dup (0xff)                    ; begin 0x5be0
0000000000008c60         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x5bf7)
0000000000008c64         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c65         align      8
0000000000008c68         dd         0x00000010                                  ; Length of the record
0000000000008c6c         dd         0x0000079c                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008c70         db         0x90, 0xcf, 2 dup (0xff)                    ; begin 0x5c00
0000000000008c74         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5c13)
0000000000008c78         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c79         align      4
0000000000008c7c         dd         0x00000010                                  ; Length of the record
0000000000008c80         dd         0x000007b0                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008c84         db         0x9c, 0xcf, 2 dup (0xff)                    ; begin 0x5c20
0000000000008c88         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x5c2c)
0000000000008c8c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008c8d         align      16
0000000000008c90         dd         0x00000010                                  ; Length of the record
0000000000008c94         dd         0x000007c4                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008c98         db         0x98, 0xcf, 2 dup (0xff)                    ; begin 0x5c30
0000000000008c9c         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x5c44)
0000000000008ca0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ca1         align      4
0000000000008ca4         dd         0x00000010                                  ; Length of the record
0000000000008ca8         dd         0x000007d8                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008cac         db         0xa4, 0xcf, 2 dup (0xff)                    ; begin 0x5c50
0000000000008cb0         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x5c63)
0000000000008cb4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008cb5         align      8
0000000000008cb8         dd         0x00000014                                  ; Length of the record
0000000000008cbc         dd         0x000007ec                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008cc0         db         0xb0, 0xcf, 2 dup (0xff)                    ; begin 0x5c70
0000000000008cc4         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x5c88)
0000000000008cc8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008cc9         align      16
0000000000008cd0         dd         0x0000002c                                  ; Length of the record
0000000000008cd4         dd         0x00000804                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008cd8         db         0xb8, 0xcf, 2 dup (0xff)                    ; begin 0x5c90
0000000000008cdc         db         0xe9, 3 dup (0x00)                          ; length 0xe9 (end at 0x5d79)
0000000000008ce0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ce1         db  0x42 ; 'B'
0000000000008ce2         db  0x0e ; '.'
0000000000008ce3         db  0x10 ; '.'
0000000000008ce4         db  0x8c ; '.'
0000000000008ce5         db  0x02 ; '.'
0000000000008ce6         db  0x41 ; 'A'
0000000000008ce7         db  0x0e ; '.'
0000000000008ce8         db  0x18 ; '.'
0000000000008ce9         db  0x86 ; '.'
0000000000008cea         db  0x03 ; '.'
0000000000008ceb         db  0x41 ; 'A'
0000000000008cec         db  0x0e ; '.'
0000000000008ced         db  0x20 ; ' '
0000000000008cee         db  0x83 ; '.'
0000000000008cef         db  0x04 ; '.'
0000000000008cf0         db  0x02 ; '.'
0000000000008cf1         db  0xb5 ; '.'
0000000000008cf2         db  0x0a ; '.'
0000000000008cf3         db  0x0e ; '.'
0000000000008cf4         db  0x18 ; '.'
0000000000008cf5         db  0x41 ; 'A'
0000000000008cf6         db  0x0e ; '.'
0000000000008cf7         db  0x10 ; '.'
0000000000008cf8         db  0x42 ; 'B'
0000000000008cf9         db  0x0e ; '.'
0000000000008cfa         db  0x08 ; '.'
0000000000008cfb         db  0x44 ; 'D'
0000000000008cfc         db  0x0b ; '.'
0000000000008cfd         db  0x00 ; '.'
0000000000008cfe         db  0x00 ; '.'
0000000000008cff         db  0x00 ; '.'
0000000000008d00         dd         0x00000028                                  ; Length of the record
0000000000008d04         dd         0x00000834                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008d08         db         0x78, 0xd0, 2 dup (0xff)                    ; begin 0x5d80
0000000000008d0c         db         0x6c, 3 dup (0x00)                          ; length 0x6c (end at 0x5dec)
0000000000008d10         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d11         db  0x42 ; 'B'
0000000000008d12         db  0x0e ; '.'
0000000000008d13         db  0x10 ; '.'
0000000000008d14         db  0x8c ; '.'
0000000000008d15         db  0x02 ; '.'
0000000000008d16         db  0x4a ; 'J'
0000000000008d17         db  0x0e ; '.'
0000000000008d18         db  0x18 ; '.'
0000000000008d19         db  0x86 ; '.'
0000000000008d1a         db  0x03 ; '.'
0000000000008d1b         db  0x4a ; 'J'
0000000000008d1c         db  0x0e ; '.'
0000000000008d1d         db  0x20 ; ' '
0000000000008d1e         db  0x83 ; '.'
0000000000008d1f         db  0x04 ; '.'
0000000000008d20         db  0x02 ; '.'
0000000000008d21         db  0x4a ; 'J'
0000000000008d22         db  0x0e ; '.'
0000000000008d23         db  0x18 ; '.'
0000000000008d24         db  0x41 ; 'A'
0000000000008d25         db  0x0e ; '.'
0000000000008d26         db  0x10 ; '.'
0000000000008d27         db  0x42 ; 'B'
0000000000008d28         db  0x0e ; '.'
0000000000008d29         db  0x08 ; '.'
0000000000008d2a         db  0x00 ; '.'
0000000000008d2b         db  0x00 ; '.'
0000000000008d2c         dd         0x00000018                                  ; Length of the record
0000000000008d30         dd         0x00000860                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008d34         db         0xbc, 0xd0, 2 dup (0xff)                    ; begin 0x5df0
0000000000008d38         db         0x29, 3 dup (0x00)                          ; length 0x29 (end at 0x5e19)
0000000000008d3c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d3d         db  0x41 ; 'A'
0000000000008d3e         db  0x0e ; '.'
0000000000008d3f         db  0x10 ; '.'
0000000000008d40         db  0x83 ; '.'
0000000000008d41         db  0x02 ; '.'
0000000000008d42         db  0x63 ; 'c'
0000000000008d43         db  0x0e ; '.'
0000000000008d44         db  0x08 ; '.'
0000000000008d45         db  0x00 ; '.'
0000000000008d46         db  0x00 ; '.'
0000000000008d47         db  0x00 ; '.'
0000000000008d48         dd         0x00000034                                  ; Length of the record
0000000000008d4c         dd         0x0000087c                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008d50         db         2 dup (0xd0), 2 dup (0xff)                  ; begin 0x5e20
0000000000008d54         db         0x07, 0x02, 2 dup (0x00)                    ; length 0x207 (end at 0x6027)
0000000000008d58         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d59         db  0x42 ; 'B'
0000000000008d5a         db  0x0e ; '.'
0000000000008d5b         db  0x10 ; '.'
0000000000008d5c         db  0x8c ; '.'
0000000000008d5d         db  0x02 ; '.'
0000000000008d5e         db  0x41 ; 'A'
0000000000008d5f         db  0x0e ; '.'
0000000000008d60         db  0x18 ; '.'
0000000000008d61         db  0x86 ; '.'
0000000000008d62         db  0x03 ; '.'
0000000000008d63         db  0x45 ; 'E'
0000000000008d64         db  0x0e ; '.'
0000000000008d65         db  0x20 ; ' '
0000000000008d66         db  0x83 ; '.'
0000000000008d67         db  0x04 ; '.'
0000000000008d68         db  0x4a ; 'J'
0000000000008d69         db  0x0e ; '.'
0000000000008d6a         db  0x30 ; '0'
0000000000008d6b         db  0x03 ; '.'
0000000000008d6c         db  0x96 ; '.'
0000000000008d6d         db  0x01 ; '.'
0000000000008d6e         db  0x0a ; '.'
0000000000008d6f         db  0x0e ; '.'
0000000000008d70         db  0x20 ; ' '
0000000000008d71         db  0x41 ; 'A'
0000000000008d72         db  0x0e ; '.'
0000000000008d73         db  0x18 ; '.'
0000000000008d74         db  0x41 ; 'A'
0000000000008d75         db  0x0e ; '.'
0000000000008d76         db  0x10 ; '.'
0000000000008d77         db  0x42 ; 'B'
0000000000008d78         db  0x0e ; '.'
0000000000008d79         db  0x08 ; '.'
0000000000008d7a         db  0x44 ; 'D'
0000000000008d7b         db  0x0b ; '.'
0000000000008d7c         db  0x00 ; '.'
0000000000008d7d         db  0x00 ; '.'
0000000000008d7e         db  0x00 ; '.'
0000000000008d7f         db  0x00 ; '.'
0000000000008d80         dd         0x00000034                                  ; Length of the record
0000000000008d84         dd         0x000008b4                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008d88         db         0xa8, 0xd2, 2 dup (0xff)                    ; begin 0x6030
0000000000008d8c         db         0x5e, 3 dup (0x00)                          ; length 0x5e (end at 0x608e)
0000000000008d90         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008d91         db  0x42 ; 'B'
0000000000008d92         db  0x0e ; '.'
0000000000008d93         db  0x10 ; '.'
0000000000008d94         db  0x8d ; '.'
0000000000008d95         db  0x02 ; '.'
0000000000008d96         db  0x42 ; 'B'
0000000000008d97         db  0x0e ; '.'
0000000000008d98         db  0x18 ; '.'
0000000000008d99         db  0x8c ; '.'
0000000000008d9a         db  0x03 ; '.'
0000000000008d9b         db  0x44 ; 'D'
0000000000008d9c         db  0x0e ; '.'
0000000000008d9d         db  0x20 ; ' '
0000000000008d9e         db  0x86 ; '.'
0000000000008d9f         db  0x04 ; '.'
0000000000008da0         db  0x41 ; 'A'
0000000000008da1         db  0x0e ; '.'
0000000000008da2         db  0x28 ; '('
0000000000008da3         db  0x83 ; '.'
0000000000008da4         db  0x05 ; '.'
0000000000008da5         db  0x4a ; 'J'
0000000000008da6         db  0x0e ; '.'
0000000000008da7         db  0x30 ; '0'
0000000000008da8         db  0x02 ; '.'
0000000000008da9         db  0x41 ; 'A'
0000000000008daa         db  0x0e ; '.'
0000000000008dab         db  0x28 ; '('
0000000000008dac         db  0x44 ; 'D'
0000000000008dad         db  0x0e ; '.'
0000000000008dae         db  0x20 ; ' '
0000000000008daf         db  0x41 ; 'A'
0000000000008db0         db  0x0e ; '.'
0000000000008db1         db  0x18 ; '.'
0000000000008db2         db  0x42 ; 'B'
0000000000008db3         db  0x0e ; '.'
0000000000008db4         db  0x10 ; '.'
0000000000008db5         db  0x42 ; 'B'
0000000000008db6         db  0x0e ; '.'
0000000000008db7         db  0x08 ; '.'
0000000000008db8         dd         0x00000110                                  ; Length of the record
0000000000008dbc         dd         0x000008ec                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008dc0         db         0xd0, 0xd2, 2 dup (0xff)                    ; begin 0x6090
0000000000008dc4         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x64a7)
0000000000008dc8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008dc9         db  0x42 ; 'B'
0000000000008dca         db  0x0e ; '.'
0000000000008dcb         db  0x10 ; '.'
0000000000008dcc         db  0x8f ; '.'
0000000000008dcd         db  0x02 ; '.'
0000000000008dce         db  0x42 ; 'B'
0000000000008dcf         db  0x0e ; '.'
0000000000008dd0         db  0x18 ; '.'
0000000000008dd1         db  0x8e ; '.'
0000000000008dd2         db  0x03 ; '.'
0000000000008dd3         db  0x42 ; 'B'
0000000000008dd4         db  0x0e ; '.'
0000000000008dd5         db  0x20 ; ' '
0000000000008dd6         db  0x8d ; '.'
0000000000008dd7         db  0x04 ; '.'
0000000000008dd8         db  0x42 ; 'B'
0000000000008dd9         db  0x0e ; '.'
0000000000008dda         db  0x28 ; '('
0000000000008ddb         db  0x8c ; '.'
0000000000008ddc         db  0x05 ; '.'
0000000000008ddd         db  0x44 ; 'D'
0000000000008dde         db  0x0e ; '.'
0000000000008ddf         db  0x30 ; '0'
0000000000008de0         db  0x86 ; '.'
0000000000008de1         db  0x06 ; '.'
0000000000008de2         db  0x41 ; 'A'
0000000000008de3         db  0x0e ; '.'
0000000000008de4         db  0x38 ; '8'
0000000000008de5         db  0x83 ; '.'
0000000000008de6         db  0x07 ; '.'
0000000000008de7         db  0x4a ; 'J'
0000000000008de8         db  0x0e ; '.'
0000000000008de9         db  0x60 ; '`'
0000000000008dea         db  0x02 ; '.'
0000000000008deb         db  0xdd ; '.'
0000000000008dec         db  0x0e ; '.'
0000000000008ded         db  0x68 ; 'h'
0000000000008dee         db  0x57 ; 'W'
0000000000008def         db  0x0e ; '.'
0000000000008df0         db  0x70 ; 'p'
0000000000008df1         db  0x42 ; 'B'
0000000000008df2         db  0x0e ; '.'
0000000000008df3         db  0x78 ; 'x'
0000000000008df4         db  0x42 ; 'B'
0000000000008df5         db  0x0e ; '.'
0000000000008df6         db  0x80 ; '.'
0000000000008df7         db  0x01 ; '.'
0000000000008df8         db  0x42 ; 'B'
0000000000008df9         db  0x0e ; '.'
0000000000008dfa         db  0x88 ; '.'
0000000000008dfb         db  0x01 ; '.'
0000000000008dfc         db  0x42 ; 'B'
0000000000008dfd         db  0x0e ; '.'
0000000000008dfe         db  0x90 ; '.'
0000000000008dff         db  0x01 ; '.'
0000000000008e00         db  0x53 ; 'S'
0000000000008e01         db  0x0e ; '.'
0000000000008e02         db  0x60 ; '`'
0000000000008e03         db  0x44 ; 'D'
0000000000008e04         db  0x0a ; '.'
0000000000008e05         db  0x0e ; '.'
0000000000008e06         db  0x38 ; '8'
0000000000008e07         db  0x41 ; 'A'
0000000000008e08         db  0x0e ; '.'
0000000000008e09         db  0x30 ; '0'
0000000000008e0a         db  0x41 ; 'A'
0000000000008e0b         db  0x0e ; '.'
0000000000008e0c         db  0x28 ; '('
0000000000008e0d         db  0x42 ; 'B'
0000000000008e0e         db  0x0e ; '.'
0000000000008e0f         db  0x20 ; ' '
0000000000008e10         db  0x42 ; 'B'
0000000000008e11         db  0x0e ; '.'
0000000000008e12         db  0x18 ; '.'
0000000000008e13         db  0x42 ; 'B'
0000000000008e14         db  0x0e ; '.'
0000000000008e15         db  0x10 ; '.'
0000000000008e16         db  0x42 ; 'B'
0000000000008e17         db  0x0e ; '.'
0000000000008e18         db  0x08 ; '.'
0000000000008e19         db  0x44 ; 'D'
0000000000008e1a         db  0x0b ; '.'
0000000000008e1b         db  0x02 ; '.'
0000000000008e1c         db  0x78 ; 'x'
0000000000008e1d         db  0x0a ; '.'
0000000000008e1e         db  0x0e ; '.'
0000000000008e1f         db  0x68 ; 'h'
0000000000008e20         db  0x48 ; 'H'
0000000000008e21         db  0x0b ; '.'
0000000000008e22         db  0x5a ; 'Z'
0000000000008e23         db  0x0a ; '.'
0000000000008e24         db  0x0e ; '.'
0000000000008e25         db  0x38 ; '8'
0000000000008e26         db  0x47 ; 'G'
0000000000008e27         db  0x0e ; '.'
0000000000008e28         db  0x30 ; '0'
0000000000008e29         db  0x41 ; 'A'
0000000000008e2a         db  0x0e ; '.'
0000000000008e2b         db  0x28 ; '('
0000000000008e2c         db  0x42 ; 'B'
0000000000008e2d         db  0x0e ; '.'
0000000000008e2e         db  0x20 ; ' '
0000000000008e2f         db  0x42 ; 'B'
0000000000008e30         db  0x0e ; '.'
0000000000008e31         db  0x18 ; '.'
0000000000008e32         db  0x42 ; 'B'
0000000000008e33         db  0x0e ; '.'
0000000000008e34         db  0x10 ; '.'
0000000000008e35         db  0x42 ; 'B'
0000000000008e36         db  0x0e ; '.'
0000000000008e37         db  0x08 ; '.'
0000000000008e38         db  0x56 ; 'V'
0000000000008e39         db  0x0b ; '.'
0000000000008e3a         db  0x5e ; '^'
0000000000008e3b         db  0x0a ; '.'
0000000000008e3c         db  0x0e ; '.'
0000000000008e3d         db  0x38 ; '8'
0000000000008e3e         db  0x52 ; 'R'
0000000000008e3f         db  0x0e ; '.'
0000000000008e40         db  0x30 ; '0'
0000000000008e41         db  0x41 ; 'A'
0000000000008e42         db  0x0e ; '.'
0000000000008e43         db  0x28 ; '('
0000000000008e44         db  0x42 ; 'B'
0000000000008e45         db  0x0e ; '.'
0000000000008e46         db  0x20 ; ' '
0000000000008e47         db  0x42 ; 'B'
0000000000008e48         db  0x0e ; '.'
0000000000008e49         db  0x18 ; '.'
0000000000008e4a         db  0x42 ; 'B'
0000000000008e4b         db  0x0e ; '.'
0000000000008e4c         db  0x10 ; '.'
0000000000008e4d         db  0x42 ; 'B'
0000000000008e4e         db  0x0e ; '.'
0000000000008e4f         db  0x08 ; '.'
0000000000008e50         db  0x4f ; 'O'
0000000000008e51         db  0x0b ; '.'
0000000000008e52         db  0x62 ; 'b'
0000000000008e53         db  0x0a ; '.'
0000000000008e54         db  0x0e ; '.'
0000000000008e55         db  0x38 ; '8'
0000000000008e56         db  0x50 ; 'P'
0000000000008e57         db  0x0e ; '.'
0000000000008e58         db  0x30 ; '0'
0000000000008e59         db  0x41 ; 'A'
0000000000008e5a         db  0x0e ; '.'
0000000000008e5b         db  0x28 ; '('
0000000000008e5c         db  0x42 ; 'B'
0000000000008e5d         db  0x0e ; '.'
0000000000008e5e         db  0x20 ; ' '
0000000000008e5f         db  0x42 ; 'B'
0000000000008e60         db  0x0e ; '.'
0000000000008e61         db  0x18 ; '.'
0000000000008e62         db  0x42 ; 'B'
0000000000008e63         db  0x0e ; '.'
0000000000008e64         db  0x10 ; '.'
0000000000008e65         db  0x42 ; 'B'
0000000000008e66         db  0x0e ; '.'
0000000000008e67         db  0x08 ; '.'
0000000000008e68         db  0x55 ; 'U'
0000000000008e69         db  0x0b ; '.'
0000000000008e6a         db  0x66 ; 'f'
0000000000008e6b         db  0x0e ; '.'
0000000000008e6c         db  0x68 ; 'h'
0000000000008e6d         db  0x42 ; 'B'
0000000000008e6e         db  0x0e ; '.'
0000000000008e6f         db  0x70 ; 'p'
0000000000008e70         db  0x5c ; '\'
0000000000008e71         db  0x0e ; '.'
0000000000008e72         db  0x68 ; 'h'
0000000000008e73         db  0x41 ; 'A'
0000000000008e74         db  0x0e ; '.'
0000000000008e75         db  0x60 ; '`'
0000000000008e76         db  0x44 ; 'D'
0000000000008e77         db  0x0a ; '.'
0000000000008e78         db  0x0e ; '.'
0000000000008e79         db  0x38 ; '8'
0000000000008e7a         db  0x41 ; 'A'
0000000000008e7b         db  0x0e ; '.'
0000000000008e7c         db  0x30 ; '0'
0000000000008e7d         db  0x41 ; 'A'
0000000000008e7e         db  0x0e ; '.'
0000000000008e7f         db  0x28 ; '('
0000000000008e80         db  0x42 ; 'B'
0000000000008e81         db  0x0e ; '.'
0000000000008e82         db  0x20 ; ' '
0000000000008e83         db  0x42 ; 'B'
0000000000008e84         db  0x0e ; '.'
0000000000008e85         db  0x18 ; '.'
0000000000008e86         db  0x42 ; 'B'
0000000000008e87         db  0x0e ; '.'
0000000000008e88         db  0x10 ; '.'
0000000000008e89         db  0x42 ; 'B'
0000000000008e8a         db  0x0e ; '.'
0000000000008e8b         db  0x08 ; '.'
0000000000008e8c         db  0x45 ; 'E'
0000000000008e8d         db  0x0b ; '.'
0000000000008e8e         db  0x68 ; 'h'
0000000000008e8f         db  0x0a ; '.'
0000000000008e90         db  0x0e ; '.'
0000000000008e91         db  0x68 ; 'h'
0000000000008e92         db  0x48 ; 'H'
0000000000008e93         db  0x0b ; '.'
0000000000008e94         db  0x72 ; 'r'
0000000000008e95         db  0x0e ; '.'
0000000000008e96         db  0x68 ; 'h'
0000000000008e97         db  0x45 ; 'E'
0000000000008e98         db  0x0e ; '.'
0000000000008e99         db  0x70 ; 'p'
0000000000008e9a         db  0x42 ; 'B'
0000000000008e9b         db  0x0e ; '.'
0000000000008e9c         db  0x78 ; 'x'
0000000000008e9d         db  0x42 ; 'B'
0000000000008e9e         db  0x0e ; '.'
0000000000008e9f         db  0x80 ; '.'
0000000000008ea0         db  0x01 ; '.'
0000000000008ea1         db  0x5e ; '^'
0000000000008ea2         db  0x0e ; '.'
0000000000008ea3         db  0x60 ; '`'
0000000000008ea4         db  0x44 ; 'D'
0000000000008ea5         db  0x0a ; '.'
0000000000008ea6         db  0x0e ; '.'
0000000000008ea7         db  0x38 ; '8'
0000000000008ea8         db  0x41 ; 'A'
0000000000008ea9         db  0x0e ; '.'
0000000000008eaa         db  0x30 ; '0'
0000000000008eab         db  0x41 ; 'A'
0000000000008eac         db  0x0e ; '.'
0000000000008ead         db  0x28 ; '('
0000000000008eae         db  0x42 ; 'B'
0000000000008eaf         db  0x0e ; '.'
0000000000008eb0         db  0x20 ; ' '
0000000000008eb1         db  0x42 ; 'B'
0000000000008eb2         db  0x0e ; '.'
0000000000008eb3         db  0x18 ; '.'
0000000000008eb4         db  0x42 ; 'B'
0000000000008eb5         db  0x0e ; '.'
0000000000008eb6         db  0x10 ; '.'
0000000000008eb7         db  0x42 ; 'B'
0000000000008eb8         db  0x0e ; '.'
0000000000008eb9         db  0x08 ; '.'
0000000000008eba         db  0x41 ; 'A'
0000000000008ebb         db  0x0b ; '.'
0000000000008ebc         db  0x79 ; 'y'
0000000000008ebd         db  0x0a ; '.'
0000000000008ebe         db  0x0e ; '.'
0000000000008ebf         db  0x68 ; 'h'
0000000000008ec0         db  0x42 ; 'B'
0000000000008ec1         db  0x0e ; '.'
0000000000008ec2         db  0x70 ; 'p'
0000000000008ec3         db  0x42 ; 'B'
0000000000008ec4         db  0x0e ; '.'
0000000000008ec5         db  0x78 ; 'x'
0000000000008ec6         db  0x42 ; 'B'
0000000000008ec7         db  0x0e ; '.'
0000000000008ec8         db  0x80 ; '.'
0000000000008ec9         db  0x01 ; '.'
0000000000008eca         db  0x51 ; 'Q'
0000000000008ecb         db  0x0b ; '.'
0000000000008ecc         dd         0x00000010                                  ; Length of the record
0000000000008ed0         dd         0x00000a00                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008ed4         db         0xdc, 0xd5, 2 dup (0xff)                    ; begin 0x64b0
0000000000008ed8         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x64d0)
0000000000008edc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008edd         align      32
0000000000008ee0         dd         0x00000018                                  ; Length of the record
0000000000008ee4         dd         0x00000a14                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008ee8         db         0xe8, 0xd5, 2 dup (0xff)                    ; begin 0x64d0
0000000000008eec         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x6548)
0000000000008ef0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008ef1         db  0x44 ; 'D'
0000000000008ef2         db  0x0e ; '.'
0000000000008ef3         db  0x70 ; 'p'
0000000000008ef4         db  0x02 ; '.'
0000000000008ef5         db  0x60 ; '`'
0000000000008ef6         db  0x0a ; '.'
0000000000008ef7         db  0x0e ; '.'
0000000000008ef8         db  0x08 ; '.'
0000000000008ef9         db  0x41 ; 'A'
0000000000008efa         db  0x0b ; '.'
0000000000008efb         db  0x00 ; '.'
0000000000008efc         dd         0x00000028                                  ; Length of the record
0000000000008f00         dd         0x00000a30                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008f04         db         0x4c, 0xd6, 2 dup (0xff)                    ; begin 0x6550
0000000000008f08         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x6625)
0000000000008f0c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008f0d         db  0x41 ; 'A'
0000000000008f0e         db  0x0e ; '.'
0000000000008f0f         db  0x10 ; '.'
0000000000008f10         db  0x86 ; '.'
0000000000008f11         db  0x02 ; '.'
0000000000008f12         db  0x41 ; 'A'
0000000000008f13         db  0x0e ; '.'
0000000000008f14         db  0x18 ; '.'
0000000000008f15         db  0x83 ; '.'
0000000000008f16         db  0x03 ; '.'
0000000000008f17         db  0x50 ; 'P'
0000000000008f18         db  0x0e ; '.'
0000000000008f19         db  0xd0 ; '.'
0000000000008f1a         db  0x01 ; '.'
0000000000008f1b         db  0x02 ; '.'
0000000000008f1c         db  0xab ; '.'
0000000000008f1d         db  0x0a ; '.'
0000000000008f1e         db  0x0e ; '.'
0000000000008f1f         db  0x18 ; '.'
0000000000008f20         db  0x41 ; 'A'
0000000000008f21         db  0x0e ; '.'
0000000000008f22         db  0x10 ; '.'
0000000000008f23         db  0x41 ; 'A'
0000000000008f24         db  0x0e ; '.'
0000000000008f25         db  0x08 ; '.'
0000000000008f26         db  0x41 ; 'A'
0000000000008f27         db  0x0b ; '.'
0000000000008f28         dd         0x0000001c                                  ; Length of the record
0000000000008f2c         dd         0x00000a5c                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008f30         db         0x00, 0xd7, 2 dup (0xff)                    ; begin 0x6630
0000000000008f34         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x66b0)
0000000000008f38         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008f39         db  0x41 ; 'A'
0000000000008f3a         db  0x0e ; '.'
0000000000008f3b         db  0x10 ; '.'
0000000000008f3c         db  0x83 ; '.'
0000000000008f3d         db  0x02 ; '.'
0000000000008f3e         db  0x02 ; '.'
0000000000008f3f         db  0x7a ; 'z'
0000000000008f40         db  0x0e ; '.'
0000000000008f41         db  0x08 ; '.'
0000000000008f42         db  0x00 ; '.'
0000000000008f43         db  0x00 ; '.'
0000000000008f44         db  0x00 ; '.'
0000000000008f45         db  0x00 ; '.'
0000000000008f46         db  0x00 ; '.'
0000000000008f47         db  0x00 ; '.'
0000000000008f48         dd         0x00000018                                  ; Length of the record
0000000000008f4c         dd         0x00000a7c                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008f50         db         0x60, 0xd7, 2 dup (0xff)                    ; begin 0x66b0
0000000000008f54         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x66ca)
0000000000008f58         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008f59         db  0x41 ; 'A'
0000000000008f5a         db  0x0e ; '.'
0000000000008f5b         db  0x10 ; '.'
0000000000008f5c         db  0x83 ; '.'
0000000000008f5d         db  0x02 ; '.'
0000000000008f5e         db  0x53 ; 'S'
0000000000008f5f         db  0x0a ; '.'
0000000000008f60         db  0x0e ; '.'
0000000000008f61         db  0x08 ; '.'
0000000000008f62         db  0x41 ; 'A'
0000000000008f63         db  0x0b ; '.'
0000000000008f64         dd         0x00000010                                  ; Length of the record
0000000000008f68         dd         0x00000a98                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008f6c         db         0x64, 0xd7, 2 dup (0xff)                    ; begin 0x66d0
0000000000008f70         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x66f4)
0000000000008f74         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008f75         db  0x5f ; '_'
0000000000008f76         db  0x0e ; '.'
0000000000008f77         db  0x10 ; '.'
0000000000008f78         dd         0x00000010                                  ; Length of the record
0000000000008f7c         dd         0x00000aac                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008f80         db         0x80, 0xd7, 2 dup (0xff)                    ; begin 0x6700
0000000000008f84         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x6702)
0000000000008f88         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008f89         align      4
0000000000008f8c         dd         0x00000020                                  ; Length of the record
0000000000008f90         dd         0x00000ac0                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008f94         db         0x7c, 0xd7, 2 dup (0xff)                    ; begin 0x6710
0000000000008f98         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x6746)
0000000000008f9c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008f9d         db  0x44 ; 'D'
0000000000008f9e         db  0x0e ; '.'
0000000000008f9f         db  0x10 ; '.'
0000000000008fa0         db  0x83 ; '.'
0000000000008fa1         db  0x02 ; '.'
0000000000008fa2         db  0x5d ; ']'
0000000000008fa3         db  0x0a ; '.'
0000000000008fa4         db  0x0e ; '.'
0000000000008fa5         db  0x08 ; '.'
0000000000008fa6         db  0x47 ; 'G'
0000000000008fa7         db  0x0b ; '.'
0000000000008fa8         db  0x48 ; 'H'
0000000000008fa9         db  0x0a ; '.'
0000000000008faa         db  0x0e ; '.'
0000000000008fab         db  0x08 ; '.'
0000000000008fac         db  0x41 ; 'A'
0000000000008fad         db  0x0b ; '.'
0000000000008fae         db  0x00 ; '.'
0000000000008faf         db  0x00 ; '.'
0000000000008fb0         dd         0x00000010                                  ; Length of the record
0000000000008fb4         dd         0x00000ae4                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008fb8         db         0x98, 0xd7, 2 dup (0xff)                    ; begin 0x6750
0000000000008fbc         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x6774)
0000000000008fc0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008fc1         db  0x5f ; '_'
0000000000008fc2         db  0x0e ; '.'
0000000000008fc3         db  0x10 ; '.'
0000000000008fc4         dd         0x00000014                                  ; Length of the record
0000000000008fc8         dd         0x00000af8                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008fcc         db         0xb4, 0xd7, 2 dup (0xff)                    ; begin 0x6780
0000000000008fd0         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x6802)
0000000000008fd4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008fd5         db  0x02 ; '.'
0000000000008fd6         db  0x5f ; '_'
0000000000008fd7         db  0x0e ; '.'
0000000000008fd8         db  0x10 ; '.'
0000000000008fd9         db  0x49 ; 'I'
0000000000008fda         db  0x0e ; '.'
0000000000008fdb         db  0x08 ; '.'
0000000000008fdc         dd         0x00000014                                  ; Length of the record
0000000000008fe0         dd         0x00000b10                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008fe4         db         0x2c, 0xd8, 2 dup (0xff)                    ; begin 0x6810
0000000000008fe8         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x685a)
0000000000008fec         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000008fed         db  0x02 ; '.'
0000000000008fee         db  0x45 ; 'E'
0000000000008fef         db  0x0e ; '.'
0000000000008ff0         db  0x10 ; '.'
0000000000008ff1         db  0x00 ; '.'
0000000000008ff2         db  0x00 ; '.'
0000000000008ff3         db  0x00 ; '.'
0000000000008ff4         dd         0x00000018                                  ; Length of the record
0000000000008ff8         dd         0x00000b28                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000008ffc         db         0x64, 0xd8, 2 dup (0xff)                    ; begin 0x6860
0000000000009000         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x6877)
0000000000009004         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009005         db  0x41 ; 'A'
0000000000009006         db  0x0e ; '.'
0000000000009007         db  0x10 ; '.'
0000000000009008         db  0x83 ; '.'
0000000000009009         db  0x02 ; '.'
000000000000900a         db  0x51 ; 'Q'
000000000000900b         db  0x0e ; '.'
000000000000900c         db  0x08 ; '.'
000000000000900d         db  0x00 ; '.'
000000000000900e         db  0x00 ; '.'
000000000000900f         db  0x00 ; '.'
0000000000009010         dd         0x00000018                                  ; Length of the record
0000000000009014         dd         0x00000b44                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000009018         db         0x68, 0xd8, 2 dup (0xff)                    ; begin 0x6880
000000000000901c         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x68ae)
0000000000009020         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009021         db  0x47 ; 'G'
0000000000009022         db  0x0e ; '.'
0000000000009023         db  0x10 ; '.'
0000000000009024         db  0x61 ; 'a'
0000000000009025         db  0x0a ; '.'
0000000000009026         db  0x0e ; '.'
0000000000009027         db  0x08 ; '.'
0000000000009028         db  0x41 ; 'A'
0000000000009029         db  0x0b ; '.'
000000000000902a         db  0x00 ; '.'
000000000000902b         db  0x00 ; '.'
000000000000902c         dd         0x00000024                                  ; Length of the record
0000000000009030         dd         0x00000b60                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000009034         db         0x7c, 0xd8, 2 dup (0xff)                    ; begin 0x68b0
0000000000009038         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x68d8)
000000000000903c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000903d         db  0x41 ; 'A'
000000000000903e         db  0x0e ; '.'
000000000000903f         db  0x10 ; '.'
0000000000009040         db  0x86 ; '.'
0000000000009041         db  0x02 ; '.'
0000000000009042         db  0x41 ; 'A'
0000000000009043         db  0x0e ; '.'
0000000000009044         db  0x18 ; '.'
0000000000009045         db  0x83 ; '.'
0000000000009046         db  0x03 ; '.'
0000000000009047         db  0x4d ; 'M'
0000000000009048         db  0x0e ; '.'
0000000000009049         db  0x20 ; ' '
000000000000904a         db  0x49 ; 'I'
000000000000904b         db  0x0e ; '.'
000000000000904c         db  0x18 ; '.'
000000000000904d         db  0x47 ; 'G'
000000000000904e         db  0x0e ; '.'
000000000000904f         db  0x10 ; '.'
0000000000009050         db  0x41 ; 'A'
0000000000009051         db  0x0e ; '.'
0000000000009052         db  0x08 ; '.'
0000000000009053         db  0x00 ; '.'
0000000000009054         dd         0x00000018                                  ; Length of the record
0000000000009058         dd         0x00000b88                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
000000000000905c         db         0x84, 0xd8, 2 dup (0xff)                    ; begin 0x68e0
0000000000009060         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x68f3)
0000000000009064         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009065         db  0x41 ; 'A'
0000000000009066         db  0x0e ; '.'
0000000000009067         db  0x10 ; '.'
0000000000009068         db  0x83 ; '.'
0000000000009069         db  0x02 ; '.'
000000000000906a         db  0x50 ; 'P'
000000000000906b         db  0x0e ; '.'
000000000000906c         db  0x08 ; '.'
000000000000906d         db  0x00 ; '.'
000000000000906e         db  0x00 ; '.'
000000000000906f         db  0x00 ; '.'
0000000000009070         dd         0x00000014                                  ; Length of the record
0000000000009074         dd         0x00000ba4                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000009078         db         0x88, 0xd8, 2 dup (0xff)                    ; begin 0x6900
000000000000907c         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x6935)
0000000000009080         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009081         db  0x4b ; 'K'
0000000000009082         db  0x0e ; '.'
0000000000009083         db  0x10 ; '.'
0000000000009084         db  0x00 ; '.'
0000000000009085         db  0x00 ; '.'
0000000000009086         db  0x00 ; '.'
0000000000009087         db  0x00 ; '.'
0000000000009088         dd         0x00000034                                  ; Length of the record
000000000000908c         dd         0x00000bbc                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000009090         db         0xb0, 0xd8, 2 dup (0xff)                    ; begin 0x6940
0000000000009094         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x69bb)
0000000000009098         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009099         db  0x42 ; 'B'
000000000000909a         db  0x0e ; '.'
000000000000909b         db  0x10 ; '.'
000000000000909c         db  0x8c ; '.'
000000000000909d         db  0x02 ; '.'
000000000000909e         db  0x41 ; 'A'
000000000000909f         db  0x0e ; '.'
00000000000090a0         db  0x18 ; '.'
00000000000090a1         db  0x86 ; '.'
00000000000090a2         db  0x03 ; '.'
00000000000090a3         db  0x41 ; 'A'
00000000000090a4         db  0x0e ; '.'
00000000000090a5         db  0x20 ; ' '
00000000000090a6         db  0x83 ; '.'
00000000000090a7         db  0x04 ; '.'
00000000000090a8         db  0x7d ; '}'
00000000000090a9         db  0x0a ; '.'
00000000000090aa         db  0x0e ; '.'
00000000000090ab         db  0x18 ; '.'
00000000000090ac         db  0x41 ; 'A'
00000000000090ad         db  0x0e ; '.'
00000000000090ae         db  0x10 ; '.'
00000000000090af         db  0x42 ; 'B'
00000000000090b0         db  0x0e ; '.'
00000000000090b1         db  0x08 ; '.'
00000000000090b2         db  0x44 ; 'D'
00000000000090b3         db  0x0b ; '.'
00000000000090b4         db  0x60 ; '`'
00000000000090b5         db  0x0a ; '.'
00000000000090b6         db  0x0e ; '.'
00000000000090b7         db  0x18 ; '.'
00000000000090b8         db  0x41 ; 'A'
00000000000090b9         db  0x0e ; '.'
00000000000090ba         db  0x10 ; '.'
00000000000090bb         db  0x42 ; 'B'
00000000000090bc         db  0x0e ; '.'
00000000000090bd         db  0x08 ; '.'
00000000000090be         db  0x45 ; 'E'
00000000000090bf         db  0x0b ; '.'
00000000000090c0         dd         0x0000001c                                  ; Length of the record
00000000000090c4         dd         0x00000bf4                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
00000000000090c8         db         0xf8, 0xd8, 2 dup (0xff)                    ; begin 0x69c0
00000000000090cc         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x6a00)
00000000000090d0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000090d1         db  0x44 ; 'D'
00000000000090d2         db  0x0e ; '.'
00000000000090d3         db  0x10 ; '.'
00000000000090d4         db  0x83 ; '.'
00000000000090d5         db  0x02 ; '.'
00000000000090d6         db  0x5a ; 'Z'
00000000000090d7         db  0x0a ; '.'
00000000000090d8         db  0x0e ; '.'
00000000000090d9         db  0x08 ; '.'
00000000000090da         db  0x4a ; 'J'
00000000000090db         db  0x0b ; '.'
00000000000090dc         db  0x53 ; 'S'
00000000000090dd         db  0x0e ; '.'
00000000000090de         db  0x08 ; '.'
00000000000090df         db  0x00 ; '.'
00000000000090e0         dd         0x0000002c                                  ; Length of the record
00000000000090e4         dd         0x00000c14                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
00000000000090e8         db         0x18, 0xd9, 2 dup (0xff)                    ; begin 0x6a00
00000000000090ec         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x6a57)
00000000000090f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000090f1         db  0x63 ; 'c'
00000000000090f2         db  0x0e ; '.'
00000000000090f3         db  0x10 ; '.'
00000000000090f4         db  0x8c ; '.'
00000000000090f5         db  0x02 ; '.'
00000000000090f6         db  0x41 ; 'A'
00000000000090f7         db  0x0e ; '.'
00000000000090f8         db  0x18 ; '.'
00000000000090f9         db  0x86 ; '.'
00000000000090fa         db  0x03 ; '.'
00000000000090fb         db  0x44 ; 'D'
00000000000090fc         db  0x0e ; '.'
00000000000090fd         db  0x20 ; ' '
00000000000090fe         db  0x83 ; '.'
00000000000090ff         db  0x04 ; '.'
0000000000009100         db  0x6b ; 'k'
0000000000009101         db  0x0e ; '.'
0000000000009102         db  0x18 ; '.'
0000000000009103         db  0x41 ; 'A'
0000000000009104         db  0x0e ; '.'
0000000000009105         db  0x10 ; '.'
0000000000009106         db  0x42 ; 'B'
0000000000009107         db  0x0e ; '.'
0000000000009108         db  0x08 ; '.'
0000000000009109         db  0x00 ; '.'
000000000000910a         db  0x00 ; '.'
000000000000910b         db  0x00 ; '.'
000000000000910c         db  0x00 ; '.'
000000000000910d         db  0x00 ; '.'
000000000000910e         db  0x00 ; '.'
000000000000910f         db  0x00 ; '.'
0000000000009110         dd         0x0000003c                                  ; Length of the record
0000000000009114         dd         0x00000c44                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000009118         db         0x48, 0xd9, 2 dup (0xff)                    ; begin 0x6a60
000000000000911c         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x6ae3)
0000000000009120         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009121         db  0x42 ; 'B'
0000000000009122         db  0x0e ; '.'
0000000000009123         db  0x10 ; '.'
0000000000009124         db  0x8d ; '.'
0000000000009125         db  0x02 ; '.'
0000000000009126         db  0x42 ; 'B'
0000000000009127         db  0x0e ; '.'
0000000000009128         db  0x18 ; '.'
0000000000009129         db  0x8c ; '.'
000000000000912a         db  0x03 ; '.'
000000000000912b         db  0x44 ; 'D'
000000000000912c         db  0x0e ; '.'
000000000000912d         db  0x20 ; ' '
000000000000912e         db  0x86 ; '.'
000000000000912f         db  0x04 ; '.'
0000000000009130         db  0x41 ; 'A'
0000000000009131         db  0x0e ; '.'
0000000000009132         db  0x28 ; '('
0000000000009133         db  0x83 ; '.'
0000000000009134         db  0x05 ; '.'
0000000000009135         db  0x4a ; 'J'
0000000000009136         db  0x0e ; '.'
0000000000009137         db  0x40 ; '@'
0000000000009138         db  0x02 ; '.'
0000000000009139         db  0x64 ; 'd'
000000000000913a         db  0x0a ; '.'
000000000000913b         db  0x0e ; '.'
000000000000913c         db  0x28 ; '('
000000000000913d         db  0x41 ; 'A'
000000000000913e         db  0x0e ; '.'
000000000000913f         db  0x20 ; ' '
0000000000009140         db  0x41 ; 'A'
0000000000009141         db  0x0e ; '.'
0000000000009142         db  0x18 ; '.'
0000000000009143         db  0x42 ; 'B'
0000000000009144         db  0x0e ; '.'
0000000000009145         db  0x10 ; '.'
0000000000009146         db  0x42 ; 'B'
0000000000009147         db  0x0e ; '.'
0000000000009148         db  0x08 ; '.'
0000000000009149         db  0x41 ; 'A'
000000000000914a         db  0x0b ; '.'
000000000000914b         db  0x00 ; '.'
000000000000914c         db  0x00 ; '.'
000000000000914d         db  0x00 ; '.'
000000000000914e         db  0x00 ; '.'
000000000000914f         db  0x00 ; '.'
0000000000009150         dd         0x00000010                                  ; Length of the record
0000000000009154         dd         0x00000c84                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000009158         db         0x98, 0xd9, 2 dup (0xff)                    ; begin 0x6af0
000000000000915c         db         0x3f, 3 dup (0x00)                          ; length 0x3f (end at 0x6b2f)
0000000000009160         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009161         db  0x4b ; 'K'
0000000000009162         db  0x0e ; '.'
0000000000009163         db  0x10 ; '.'
0000000000009164         dd         0x00000010                                  ; Length of the record
0000000000009168         dd         0x00000c98                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
000000000000916c         db         0xc4, 0xd9, 2 dup (0xff)                    ; begin 0x6b30
0000000000009170         db         0x16, 3 dup (0x00)                          ; length 0x16 (end at 0x6b46)
0000000000009174         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009175         align      8
0000000000009178         dd         0x00000010                                  ; Length of the record
000000000000917c         dd         0x00000cac                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000009180         db         0xd0, 0xd9, 2 dup (0xff)                    ; begin 0x6b50
0000000000009184         db         0x16, 3 dup (0x00)                          ; length 0x16 (end at 0x6b66)
0000000000009188         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009189         align      4
000000000000918c         dd         0x0000002c                                  ; Length of the record
0000000000009190         dd         0x00000cc0                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000009194         db         0xdc, 0xd9, 2 dup (0xff)                    ; begin 0x6b70
0000000000009198         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x6bf3)
000000000000919c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000919d         db  0x45 ; 'E'
000000000000919e         db  0x0e ; '.'
000000000000919f         db  0x10 ; '.'
00000000000091a0         db  0x8c ; '.'
00000000000091a1         db  0x02 ; '.'
00000000000091a2         db  0x41 ; 'A'
00000000000091a3         db  0x0e ; '.'
00000000000091a4         db  0x18 ; '.'
00000000000091a5         db  0x86 ; '.'
00000000000091a6         db  0x03 ; '.'
00000000000091a7         db  0x41 ; 'A'
00000000000091a8         db  0x0e ; '.'
00000000000091a9         db  0x20 ; ' '
00000000000091aa         db  0x83 ; '.'
00000000000091ab         db  0x04 ; '.'
00000000000091ac         db  0x02 ; '.'
00000000000091ad         db  0x62 ; 'b'
00000000000091ae         db  0x0a ; '.'
00000000000091af         db  0x0e ; '.'
00000000000091b0         db  0x18 ; '.'
00000000000091b1         db  0x41 ; 'A'
00000000000091b2         db  0x0e ; '.'
00000000000091b3         db  0x10 ; '.'
00000000000091b4         db  0x42 ; 'B'
00000000000091b5         db  0x0e ; '.'
00000000000091b6         db  0x08 ; '.'
00000000000091b7         db  0x44 ; 'D'
00000000000091b8         db  0x0b ; '.'
00000000000091b9         db  0x00 ; '.'
00000000000091ba         db  0x00 ; '.'
00000000000091bb         db  0x00 ; '.'
00000000000091bc         dd         0x00000010                                  ; Length of the record
00000000000091c0         dd         0x00000cf0                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
00000000000091c4         db         0x3c, 0xda, 2 dup (0xff)                    ; begin 0x6c00
00000000000091c8         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x6c11)
00000000000091cc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000091cd         align      16
00000000000091d0         dd         0x00000010                                  ; Length of the record
00000000000091d4         dd         0x00000d04                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
00000000000091d8         db         0x48, 0xda, 2 dup (0xff)                    ; begin 0x6c20
00000000000091dc         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x6c35)
00000000000091e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000091e1         align      4
00000000000091e4         dd         0x0000003c                                  ; Length of the record
00000000000091e8         dd         0x00000d18                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
00000000000091ec         db         0x54, 0xda, 2 dup (0xff)                    ; begin 0x6c40
00000000000091f0         db         0xeb, 3 dup (0x00)                          ; length 0xeb (end at 0x6d2b)
00000000000091f4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000091f5         db  0x42 ; 'B'
00000000000091f6         db  0x0e ; '.'
00000000000091f7         db  0x10 ; '.'
00000000000091f8         db  0x8e ; '.'
00000000000091f9         db  0x02 ; '.'
00000000000091fa         db  0x42 ; 'B'
00000000000091fb         db  0x0e ; '.'
00000000000091fc         db  0x18 ; '.'
00000000000091fd         db  0x8d ; '.'
00000000000091fe         db  0x03 ; '.'
00000000000091ff         db  0x44 ; 'D'
0000000000009200         db  0x0e ; '.'
0000000000009201         db  0x20 ; ' '
0000000000009202         db  0x8c ; '.'
0000000000009203         db  0x04 ; '.'
0000000000009204         db  0x41 ; 'A'
0000000000009205         db  0x0e ; '.'
0000000000009206         db  0x28 ; '('
0000000000009207         db  0x86 ; '.'
0000000000009208         db  0x05 ; '.'
0000000000009209         db  0x41 ; 'A'
000000000000920a         db  0x0e ; '.'
000000000000920b         db  0x30 ; '0'
000000000000920c         db  0x83 ; '.'
000000000000920d         db  0x06 ; '.'
000000000000920e         db  0x02 ; '.'
000000000000920f         db  0xbd ; '.'
0000000000009210         db  0x0a ; '.'
0000000000009211         db  0x0e ; '.'
0000000000009212         db  0x28 ; '('
0000000000009213         db  0x41 ; 'A'
0000000000009214         db  0x0e ; '.'
0000000000009215         db  0x20 ; ' '
0000000000009216         db  0x42 ; 'B'
0000000000009217         db  0x0e ; '.'
0000000000009218         db  0x18 ; '.'
0000000000009219         db  0x42 ; 'B'
000000000000921a         db  0x0e ; '.'
000000000000921b         db  0x10 ; '.'
000000000000921c         db  0x42 ; 'B'
000000000000921d         db  0x0e ; '.'
000000000000921e         db  0x08 ; '.'
000000000000921f         db  0x42 ; 'B'
0000000000009220         db  0x0b ; '.'
0000000000009221         db  0x00 ; '.'
0000000000009222         db  0x00 ; '.'
0000000000009223         db  0x00 ; '.'
0000000000009224         dd         0x00000010                                  ; Length of the record
0000000000009228         dd         0x00000d58                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
000000000000922c         db         0x04, 0xdb, 2 dup (0xff)                    ; begin 0x6d30
0000000000009230         db         0x38, 3 dup (0x00)                          ; length 0x38 (end at 0x6d68)
0000000000009234         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009235         align      8
0000000000009238         dd         0x00000034                                  ; Length of the record
000000000000923c         dd         0x00000d6c                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000009240         db         0x30, 0xdb, 2 dup (0xff)                    ; begin 0x6d70
0000000000009244         db         0x6a, 3 dup (0x00)                          ; length 0x6a (end at 0x6dda)
0000000000009248         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009249         db  0x42 ; 'B'
000000000000924a         db  0x0e ; '.'
000000000000924b         db  0x10 ; '.'
000000000000924c         db  0x8c ; '.'
000000000000924d         db  0x02 ; '.'
000000000000924e         db  0x41 ; 'A'
000000000000924f         db  0x0e ; '.'
0000000000009250         db  0x18 ; '.'
0000000000009251         db  0x86 ; '.'
0000000000009252         db  0x03 ; '.'
0000000000009253         db  0x44 ; 'D'
0000000000009254         db  0x0e ; '.'
0000000000009255         db  0x20 ; ' '
0000000000009256         db  0x83 ; '.'
0000000000009257         db  0x04 ; '.'
0000000000009258         db  0x7c ; '|'
0000000000009259         db  0x0a ; '.'
000000000000925a         db  0x0e ; '.'
000000000000925b         db  0x18 ; '.'
000000000000925c         db  0x41 ; 'A'
000000000000925d         db  0x0e ; '.'
000000000000925e         db  0x10 ; '.'
000000000000925f         db  0x42 ; 'B'
0000000000009260         db  0x0e ; '.'
0000000000009261         db  0x08 ; '.'
0000000000009262         db  0x4a ; 'J'
0000000000009263         db  0x0b ; '.'
0000000000009264         db  0x51 ; 'Q'
0000000000009265         db  0x0a ; '.'
0000000000009266         db  0x0e ; '.'
0000000000009267         db  0x18 ; '.'
0000000000009268         db  0x41 ; 'A'
0000000000009269         db  0x0e ; '.'
000000000000926a         db  0x10 ; '.'
000000000000926b         db  0x42 ; 'B'
000000000000926c         db  0x0e ; '.'
000000000000926d         db  0x08 ; '.'
000000000000926e         db  0x41 ; 'A'
000000000000926f         db  0x0b ; '.'
0000000000009270         dd         0x00000014                                  ; Length of the record
0000000000009274         dd         0x00000da4                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000009278         db         0x68, 0xdb, 2 dup (0xff)                    ; begin 0x6de0
000000000000927c         db         0x2a, 3 dup (0x00)                          ; length 0x2a (end at 0x6e0a)
0000000000009280         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009281         align      8
0000000000009288         dd         0x0000004c                                  ; Length of the record
000000000000928c         dd         0x00000dbc                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000009290         db         0x80, 0xdb, 2 dup (0xff)                    ; begin 0x6e10
0000000000009294         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x6e8d)
0000000000009298         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009299         db  0x42 ; 'B'
000000000000929a         db  0x0e ; '.'
000000000000929b         db  0x10 ; '.'
000000000000929c         db  0x8c ; '.'
000000000000929d         db  0x02 ; '.'
000000000000929e         db  0x41 ; 'A'
000000000000929f         db  0x0e ; '.'
00000000000092a0         db  0x18 ; '.'
00000000000092a1         db  0x86 ; '.'
00000000000092a2         db  0x03 ; '.'
00000000000092a3         db  0x44 ; 'D'
00000000000092a4         db  0x0e ; '.'
00000000000092a5         db  0x20 ; ' '
00000000000092a6         db  0x83 ; '.'
00000000000092a7         db  0x04 ; '.'
00000000000092a8         db  0x69 ; 'i'
00000000000092a9         db  0x0a ; '.'
00000000000092aa         db  0x0e ; '.'
00000000000092ab         db  0x18 ; '.'
00000000000092ac         db  0x41 ; 'A'
00000000000092ad         db  0x0e ; '.'
00000000000092ae         db  0x10 ; '.'
00000000000092af         db  0x42 ; 'B'
00000000000092b0         db  0x0e ; '.'
00000000000092b1         db  0x08 ; '.'
00000000000092b2         db  0x45 ; 'E'
00000000000092b3         db  0x0b ; '.'
00000000000092b4         db  0x55 ; 'U'
00000000000092b5         db  0x0a ; '.'
00000000000092b6         db  0x0e ; '.'
00000000000092b7         db  0x18 ; '.'
00000000000092b8         db  0x41 ; 'A'
00000000000092b9         db  0x0e ; '.'
00000000000092ba         db  0x10 ; '.'
00000000000092bb         db  0x42 ; 'B'
00000000000092bc         db  0x0e ; '.'
00000000000092bd         db  0x08 ; '.'
00000000000092be         db  0x48 ; 'H'
00000000000092bf         db  0x0b ; '.'
00000000000092c0         db  0x41 ; 'A'
00000000000092c1         db  0x0a ; '.'
00000000000092c2         db  0x0e ; '.'
00000000000092c3         db  0x18 ; '.'
00000000000092c4         db  0x46 ; 'F'
00000000000092c5         db  0x0e ; '.'
00000000000092c6         db  0x10 ; '.'
00000000000092c7         db  0x42 ; 'B'
00000000000092c8         db  0x0e ; '.'
00000000000092c9         db  0x08 ; '.'
00000000000092ca         db  0x47 ; 'G'
00000000000092cb         db  0x0b ; '.'
00000000000092cc         db  0x49 ; 'I'
00000000000092cd         db  0x0e ; '.'
00000000000092ce         db  0x18 ; '.'
00000000000092cf         db  0x41 ; 'A'
00000000000092d0         db  0x0e ; '.'
00000000000092d1         db  0x10 ; '.'
00000000000092d2         db  0x42 ; 'B'
00000000000092d3         db  0x0e ; '.'
00000000000092d4         db  0x08 ; '.'
00000000000092d5         db  0x00 ; '.'
00000000000092d6         db  0x00 ; '.'
00000000000092d7         db  0x00 ; '.'
00000000000092d8         dd         0x0000001c                                  ; Length of the record
00000000000092dc         dd         0x00000e0c                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
00000000000092e0         db         0xb0, 0xdb, 2 dup (0xff)                    ; begin 0x6e90
00000000000092e4         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x6ef0)
00000000000092e8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000092e9         db  0x44 ; 'D'
00000000000092ea         db  0x0e ; '.'
00000000000092eb         db  0x10 ; '.'
00000000000092ec         db  0x75 ; 'u'
00000000000092ed         db  0x0a ; '.'
00000000000092ee         db  0x0e ; '.'
00000000000092ef         db  0x08 ; '.'
00000000000092f0         db  0x47 ; 'G'
00000000000092f1         db  0x0b ; '.'
00000000000092f2         db  0x5f ; '_'
00000000000092f3         db  0x0e ; '.'
00000000000092f4         db  0x08 ; '.'
00000000000092f5         db  0x00 ; '.'
00000000000092f6         db  0x00 ; '.'
00000000000092f7         db  0x00 ; '.'
00000000000092f8         dd         0x0000001c                                  ; Length of the record
00000000000092fc         dd         0x00000e2c                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000009300         db         0xf0, 0xdb, 2 dup (0xff)                    ; begin 0x6ef0
0000000000009304         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x6f2c)
0000000000009308         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009309         db  0x44 ; 'D'
000000000000930a         db  0x0e ; '.'
000000000000930b         db  0x10 ; '.'
000000000000930c         db  0x61 ; 'a'
000000000000930d         db  0x0a ; '.'
000000000000930e         db  0x0e ; '.'
000000000000930f         db  0x08 ; '.'
0000000000009310         db  0x4b ; 'K'
0000000000009311         db  0x0b ; '.'
0000000000009312         db  0x4b ; 'K'
0000000000009313         db  0x0e ; '.'
0000000000009314         db  0x08 ; '.'
0000000000009315         db  0x00 ; '.'
0000000000009316         db  0x00 ; '.'
0000000000009317         db  0x00 ; '.'
0000000000009318         dd         0x00000044                                  ; Length of the record
000000000000931c         dd         0x00000e4c                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000009320         db         0x10, 0xdc, 2 dup (0xff)                    ; begin 0x6f30
0000000000009324         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x6f95)
0000000000009328         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009329         db  0x42 ; 'B'
000000000000932a         db  0x0e ; '.'
000000000000932b         db  0x10 ; '.'
000000000000932c         db  0x8f ; '.'
000000000000932d         db  0x02 ; '.'
000000000000932e         db  0x42 ; 'B'
000000000000932f         db  0x0e ; '.'
0000000000009330         db  0x18 ; '.'
0000000000009331         db  0x8e ; '.'
0000000000009332         db  0x03 ; '.'
0000000000009333         db  0x45 ; 'E'
0000000000009334         db  0x0e ; '.'
0000000000009335         db  0x20 ; ' '
0000000000009336         db  0x8d ; '.'
0000000000009337         db  0x04 ; '.'
0000000000009338         db  0x42 ; 'B'
0000000000009339         db  0x0e ; '.'
000000000000933a         db  0x28 ; '('
000000000000933b         db  0x8c ; '.'
000000000000933c         db  0x05 ; '.'
000000000000933d         db  0x48 ; 'H'
000000000000933e         db  0x0e ; '.'
000000000000933f         db  0x30 ; '0'
0000000000009340         db  0x86 ; '.'
0000000000009341         db  0x06 ; '.'
0000000000009342         db  0x48 ; 'H'
0000000000009343         db  0x0e ; '.'
0000000000009344         db  0x38 ; '8'
0000000000009345         db  0x83 ; '.'
0000000000009346         db  0x07 ; '.'
0000000000009347         db  0x4d ; 'M'
0000000000009348         db  0x0e ; '.'
0000000000009349         db  0x40 ; '@'
000000000000934a         db  0x72 ; 'r'
000000000000934b         db  0x0e ; '.'
000000000000934c         db  0x38 ; '8'
000000000000934d         db  0x41 ; 'A'
000000000000934e         db  0x0e ; '.'
000000000000934f         db  0x30 ; '0'
0000000000009350         db  0x41 ; 'A'
0000000000009351         db  0x0e ; '.'
0000000000009352         db  0x28 ; '('
0000000000009353         db  0x42 ; 'B'
0000000000009354         db  0x0e ; '.'
0000000000009355         db  0x20 ; ' '
0000000000009356         db  0x42 ; 'B'
0000000000009357         db  0x0e ; '.'
0000000000009358         db  0x18 ; '.'
0000000000009359         db  0x42 ; 'B'
000000000000935a         db  0x0e ; '.'
000000000000935b         db  0x10 ; '.'
000000000000935c         db  0x42 ; 'B'
000000000000935d         db  0x0e ; '.'
000000000000935e         db  0x08 ; '.'
000000000000935f         db  0x00 ; '.'
0000000000009360         dd         0x00000014                                  ; Length of the record
0000000000009364         dd         0x00000e94                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000009368         db         0x38, 0xdc, 2 dup (0xff)                    ; begin 0x6fa0
000000000000936c         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x6fa2)
0000000000009370         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009371         align      8
0000000000009378         dd         0x00000010                                  ; Length of the record
000000000000937c         dd         0x00000eac                                  ; FDE: parent CIE at 0x84d0 (FDE encoding = 0x1B)
0000000000009380         db         0x30, 0xdc, 2 dup (0xff)                    ; begin 0x6fb0
0000000000009384         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x6fbe)
0000000000009388         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000009389         align      16


        ; Segment Segment 3
        ; Range: [0x209a30; 0x20a298[ (2152 bytes)
        ; File offset : [39472; 41096[ (1624 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x209a30; 0x209a38[ (8 bytes)
        ; File offset : [39472; 39480[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
0000000000209a30         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x209a38; 0x209a40[ (8 bytes)
        ; File offset : [39480; 39488[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
0000000000209a38         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x209a40; 0x209bb8[ (376 bytes)
        ; File offset : [39488; 39864[ (376 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     longopts:
0000000000209a40         db  0x67 ; 'g'                                         ; DATA XREF=main+15
0000000000209a41         db  0x71 ; 'q'
0000000000209a42         db  0x00 ; '.'
0000000000209a43         db  0x00 ; '.'
0000000000209a44         db  0x00 ; '.'
0000000000209a45         db  0x00 ; '.'
0000000000209a46         db  0x00 ; '.'
0000000000209a47         db  0x00 ; '.'
0000000000209a48         db  0x00 ; '.'
0000000000209a49         db  0x00 ; '.'
0000000000209a4a         db  0x00 ; '.'
0000000000209a4b         db  0x00 ; '.'
0000000000209a4c         db  0x00 ; '.'
0000000000209a4d         db  0x00 ; '.'
0000000000209a4e         db  0x00 ; '.'
0000000000209a4f         db  0x00 ; '.'
0000000000209a50         db  0x00 ; '.'
0000000000209a51         db  0x00 ; '.'
0000000000209a52         db  0x00 ; '.'
0000000000209a53         db  0x00 ; '.'
0000000000209a54         db  0x00 ; '.'
0000000000209a55         db  0x00 ; '.'
0000000000209a56         db  0x00 ; '.'
0000000000209a57         db  0x00 ; '.'
0000000000209a58         db  0x63 ; 'c'
0000000000209a59         db  0x00 ; '.'
0000000000209a5a         db  0x00 ; '.'
0000000000209a5b         db  0x00 ; '.'
0000000000209a5c         db  0x00 ; '.'
0000000000209a5d         db  0x00 ; '.'
0000000000209a5e         db  0x00 ; '.'
0000000000209a5f         db  0x00 ; '.'
0000000000209a60         db  0x6d ; 'm'
0000000000209a61         db  0x71 ; 'q'
0000000000209a62         db  0x00 ; '.'
0000000000209a63         db  0x00 ; '.'
0000000000209a64         db  0x00 ; '.'
0000000000209a65         db  0x00 ; '.'
0000000000209a66         db  0x00 ; '.'
0000000000209a67         db  0x00 ; '.'
0000000000209a68         db  0x00 ; '.'
0000000000209a69         db  0x00 ; '.'
0000000000209a6a         db  0x00 ; '.'
0000000000209a6b         db  0x00 ; '.'
0000000000209a6c         db  0x00 ; '.'
0000000000209a6d         db  0x00 ; '.'
0000000000209a6e         db  0x00 ; '.'
0000000000209a6f         db  0x00 ; '.'
0000000000209a70         db  0x00 ; '.'
0000000000209a71         db  0x00 ; '.'
0000000000209a72         db  0x00 ; '.'
0000000000209a73         db  0x00 ; '.'
0000000000209a74         db  0x00 ; '.'
0000000000209a75         db  0x00 ; '.'
0000000000209a76         db  0x00 ; '.'
0000000000209a77         db  0x00 ; '.'
0000000000209a78         db  0x6d ; 'm'
0000000000209a79         db  0x00 ; '.'
0000000000209a7a         db  0x00 ; '.'
0000000000209a7b         db  0x00 ; '.'
0000000000209a7c         db  0x00 ; '.'
0000000000209a7d         db  0x00 ; '.'
0000000000209a7e         db  0x00 ; '.'
0000000000209a7f         db  0x00 ; '.'
0000000000209a80         db  0x73 ; 's'
0000000000209a81         db  0x71 ; 'q'
0000000000209a82         db  0x00 ; '.'
0000000000209a83         db  0x00 ; '.'
0000000000209a84         db  0x00 ; '.'
0000000000209a85         db  0x00 ; '.'
0000000000209a86         db  0x00 ; '.'
0000000000209a87         db  0x00 ; '.'
0000000000209a88         db  0x00 ; '.'
0000000000209a89         db  0x00 ; '.'
0000000000209a8a         db  0x00 ; '.'
0000000000209a8b         db  0x00 ; '.'
0000000000209a8c         db  0x00 ; '.'
0000000000209a8d         db  0x00 ; '.'
0000000000209a8e         db  0x00 ; '.'
0000000000209a8f         db  0x00 ; '.'
0000000000209a90         db  0x00 ; '.'
0000000000209a91         db  0x00 ; '.'
0000000000209a92         db  0x00 ; '.'
0000000000209a93         db  0x00 ; '.'
0000000000209a94         db  0x00 ; '.'
0000000000209a95         db  0x00 ; '.'
0000000000209a96         db  0x00 ; '.'
0000000000209a97         db  0x00 ; '.'
0000000000209a98         db  0x6c ; 'l'
0000000000209a99         db  0x00 ; '.'
0000000000209a9a         db  0x00 ; '.'
0000000000209a9b         db  0x00 ; '.'
0000000000209a9c         db  0x00 ; '.'
0000000000209a9d         db  0x00 ; '.'
0000000000209a9e         db  0x00 ; '.'
0000000000209a9f         db  0x00 ; '.'
0000000000209aa0         db  0x79 ; 'y'
0000000000209aa1         db  0x71 ; 'q'
0000000000209aa2         db  0x00 ; '.'
0000000000209aa3         db  0x00 ; '.'
0000000000209aa4         db  0x00 ; '.'
0000000000209aa5         db  0x00 ; '.'
0000000000209aa6         db  0x00 ; '.'
0000000000209aa7         db  0x00 ; '.'
0000000000209aa8         db  0x00 ; '.'
0000000000209aa9         db  0x00 ; '.'
0000000000209aaa         db  0x00 ; '.'
0000000000209aab         db  0x00 ; '.'
0000000000209aac         db  0x00 ; '.'
0000000000209aad         db  0x00 ; '.'
0000000000209aae         db  0x00 ; '.'
0000000000209aaf         db  0x00 ; '.'
0000000000209ab0         db  0x00 ; '.'
0000000000209ab1         db  0x00 ; '.'
0000000000209ab2         db  0x00 ; '.'
0000000000209ab3         db  0x00 ; '.'
0000000000209ab4         db  0x00 ; '.'
0000000000209ab5         db  0x00 ; '.'
0000000000209ab6         db  0x00 ; '.'
0000000000209ab7         db  0x00 ; '.'
0000000000209ab8         db  0x77 ; 'w'
0000000000209ab9         db  0x00 ; '.'
0000000000209aba         db  0x00 ; '.'
0000000000209abb         db  0x00 ; '.'
0000000000209abc         db  0x00 ; '.'
0000000000209abd         db  0x00 ; '.'
0000000000209abe         db  0x00 ; '.'
0000000000209abf         db  0x00 ; '.'
0000000000209ac0         db  0x7f ; '.'
0000000000209ac1         db  0x71 ; 'q'
0000000000209ac2         db  0x00 ; '.'
0000000000209ac3         db  0x00 ; '.'
0000000000209ac4         db  0x00 ; '.'
0000000000209ac5         db  0x00 ; '.'
0000000000209ac6         db  0x00 ; '.'
0000000000209ac7         db  0x00 ; '.'
0000000000209ac8         db  0x01 ; '.'
0000000000209ac9         db  0x00 ; '.'
0000000000209aca         db  0x00 ; '.'
0000000000209acb         db  0x00 ; '.'
0000000000209acc         db  0x00 ; '.'
0000000000209acd         db  0x00 ; '.'
0000000000209ace         db  0x00 ; '.'
0000000000209acf         db  0x00 ; '.'
0000000000209ad0         db  0x00 ; '.'
0000000000209ad1         db  0x00 ; '.'
0000000000209ad2         db  0x00 ; '.'
0000000000209ad3         db  0x00 ; '.'
0000000000209ad4         db  0x00 ; '.'
0000000000209ad5         db  0x00 ; '.'
0000000000209ad6         db  0x00 ; '.'
0000000000209ad7         db  0x00 ; '.'
0000000000209ad8         db  0x80 ; '.'
0000000000209ad9         db  0x00 ; '.'
0000000000209ada         db  0x00 ; '.'
0000000000209adb         db  0x00 ; '.'
0000000000209adc         db  0x00 ; '.'
0000000000209add         db  0x00 ; '.'
0000000000209ade         db  0x00 ; '.'
0000000000209adf         db  0x00 ; '.'
0000000000209ae0         db  0x8b ; '.'
0000000000209ae1         db  0x71 ; 'q'
0000000000209ae2         db  0x00 ; '.'
0000000000209ae3         db  0x00 ; '.'
0000000000209ae4         db  0x00 ; '.'
0000000000209ae5         db  0x00 ; '.'
0000000000209ae6         db  0x00 ; '.'
0000000000209ae7         db  0x00 ; '.'
0000000000209ae8         db  0x00 ; '.'
0000000000209ae9         db  0x00 ; '.'
0000000000209aea         db  0x00 ; '.'
0000000000209aeb         db  0x00 ; '.'
0000000000209aec         db  0x00 ; '.'
0000000000209aed         db  0x00 ; '.'
0000000000209aee         db  0x00 ; '.'
0000000000209aef         db  0x00 ; '.'
0000000000209af0         db  0x00 ; '.'
0000000000209af1         db  0x00 ; '.'
0000000000209af2         db  0x00 ; '.'
0000000000209af3         db  0x00 ; '.'
0000000000209af4         db  0x00 ; '.'
0000000000209af5         db  0x00 ; '.'
0000000000209af6         db  0x00 ; '.'
0000000000209af7         db  0x00 ; '.'
0000000000209af8         db  0x4c ; 'L'
0000000000209af9         db  0x00 ; '.'
0000000000209afa         db  0x00 ; '.'
0000000000209afb         db  0x00 ; '.'
0000000000209afc         db  0x00 ; '.'
0000000000209afd         db  0x00 ; '.'
0000000000209afe         db  0x00 ; '.'
0000000000209aff         db  0x00 ; '.'
0000000000209b00         db  0x9b ; '.'
0000000000209b01         db  0x71 ; 'q'
0000000000209b02         db  0x00 ; '.'
0000000000209b03         db  0x00 ; '.'
0000000000209b04         db  0x00 ; '.'
0000000000209b05         db  0x00 ; '.'
0000000000209b06         db  0x00 ; '.'
0000000000209b07         db  0x00 ; '.'
0000000000209b08         db  0x00 ; '.'
0000000000209b09         db  0x00 ; '.'
0000000000209b0a         db  0x00 ; '.'
0000000000209b0b         db  0x00 ; '.'
0000000000209b0c         db  0x00 ; '.'
0000000000209b0d         db  0x00 ; '.'
0000000000209b0e         db  0x00 ; '.'
0000000000209b0f         db  0x00 ; '.'
0000000000209b10         db  0x00 ; '.'
0000000000209b11         db  0x00 ; '.'
0000000000209b12         db  0x00 ; '.'
0000000000209b13         db  0x00 ; '.'
0000000000209b14         db  0x00 ; '.'
0000000000209b15         db  0x00 ; '.'
0000000000209b16         db  0x00 ; '.'
0000000000209b17         db  0x00 ; '.'
0000000000209b18         db  0x7e ; '~'
0000000000209b19         db  0xff ; '.'
0000000000209b1a         db  0xff ; '.'
0000000000209b1b         db  0xff ; '.'
0000000000209b1c         db  0x00 ; '.'
0000000000209b1d         db  0x00 ; '.'
0000000000209b1e         db  0x00 ; '.'
0000000000209b1f         db  0x00 ; '.'
0000000000209b20         db  0xa0 ; '.'
0000000000209b21         db  0x71 ; 'q'
0000000000209b22         db  0x00 ; '.'
0000000000209b23         db  0x00 ; '.'
0000000000209b24         db  0x00 ; '.'
0000000000209b25         db  0x00 ; '.'
0000000000209b26         db  0x00 ; '.'
0000000000209b27         db  0x00 ; '.'
0000000000209b28         db  0x00 ; '.'
0000000000209b29         db  0x00 ; '.'
0000000000209b2a         db  0x00 ; '.'
0000000000209b2b         db  0x00 ; '.'
0000000000209b2c         db  0x00 ; '.'
0000000000209b2d         db  0x00 ; '.'
0000000000209b2e         db  0x00 ; '.'
0000000000209b2f         db  0x00 ; '.'
0000000000209b30         db  0x00 ; '.'
0000000000209b31         db  0x00 ; '.'
0000000000209b32         db  0x00 ; '.'
0000000000209b33         db  0x00 ; '.'
0000000000209b34         db  0x00 ; '.'
0000000000209b35         db  0x00 ; '.'
0000000000209b36         db  0x00 ; '.'
0000000000209b37         db  0x00 ; '.'
0000000000209b38         db  0x7d ; '}'
0000000000209b39         db  0xff ; '.'
0000000000209b3a         db  0xff ; '.'
0000000000209b3b         db  0xff ; '.'
0000000000209b3c         db  0x00 ; '.'
0000000000209b3d         db  0x00 ; '.'
0000000000209b3e         db  0x00 ; '.'
0000000000209b3f         db  0x00 ; '.'
0000000000209b40         db  0x00 ; '.'
0000000000209b41         db  0x00 ; '.'
0000000000209b42         db  0x00 ; '.'
0000000000209b43         db  0x00 ; '.'
0000000000209b44         db  0x00 ; '.'
0000000000209b45         db  0x00 ; '.'
0000000000209b46         db  0x00 ; '.'
0000000000209b47         db  0x00 ; '.'
0000000000209b48         db  0x00 ; '.'
0000000000209b49         db  0x00 ; '.'
0000000000209b4a         db  0x00 ; '.'
0000000000209b4b         db  0x00 ; '.'
0000000000209b4c         db  0x00 ; '.'
0000000000209b4d         db  0x00 ; '.'
0000000000209b4e         db  0x00 ; '.'
0000000000209b4f         db  0x00 ; '.'
0000000000209b50         db  0x00 ; '.'
0000000000209b51         db  0x00 ; '.'
0000000000209b52         db  0x00 ; '.'
0000000000209b53         db  0x00 ; '.'
0000000000209b54         db  0x00 ; '.'
0000000000209b55         db  0x00 ; '.'
0000000000209b56         db  0x00 ; '.'
0000000000209b57         db  0x00 ; '.'
0000000000209b58         db  0x00 ; '.'
0000000000209b59         db  0x00 ; '.'
0000000000209b5a         db  0x00 ; '.'
0000000000209b5b         db  0x00 ; '.'
0000000000209b5c         db  0x00 ; '.'
0000000000209b5d         db  0x00 ; '.'
0000000000209b5e         db  0x00 ; '.'
0000000000209b5f         db  0x00 ; '.'
                     quoting_style_args:
0000000000209b60         db  0x29 ; ')'
0000000000209b61         db  0x79 ; 'y'
0000000000209b62         db  0x00 ; '.'
0000000000209b63         db  0x00 ; '.'
0000000000209b64         db  0x00 ; '.'
0000000000209b65         db  0x00 ; '.'
0000000000209b66         db  0x00 ; '.'
0000000000209b67         db  0x00 ; '.'
0000000000209b68         db  0x31 ; '1'
0000000000209b69         db  0x79 ; 'y'
0000000000209b6a         db  0x00 ; '.'
0000000000209b6b         db  0x00 ; '.'
0000000000209b6c         db  0x00 ; '.'
0000000000209b6d         db  0x00 ; '.'
0000000000209b6e         db  0x00 ; '.'
0000000000209b6f         db  0x00 ; '.'
0000000000209b70         db  0x37 ; '7'
0000000000209b71         db  0x79 ; 'y'
0000000000209b72         db  0x00 ; '.'
0000000000209b73         db  0x00 ; '.'
0000000000209b74         db  0x00 ; '.'
0000000000209b75         db  0x00 ; '.'
0000000000209b76         db  0x00 ; '.'
0000000000209b77         db  0x00 ; '.'
0000000000209b78         db  0x44 ; 'D'
0000000000209b79         db  0x79 ; 'y'
0000000000209b7a         db  0x00 ; '.'
0000000000209b7b         db  0x00 ; '.'
0000000000209b7c         db  0x00 ; '.'
0000000000209b7d         db  0x00 ; '.'
0000000000209b7e         db  0x00 ; '.'
0000000000209b7f         db  0x00 ; '.'
0000000000209b80         db  0x51 ; 'Q'
0000000000209b81         db  0x79 ; 'y'
0000000000209b82         db  0x00 ; '.'
0000000000209b83         db  0x00 ; '.'
0000000000209b84         db  0x00 ; '.'
0000000000209b85         db  0x00 ; '.'
0000000000209b86         db  0x00 ; '.'
0000000000209b87         db  0x00 ; '.'
0000000000209b88         db  0x36 ; '6'
0000000000209b89         db  0x71 ; 'q'
0000000000209b8a         db  0x00 ; '.'
0000000000209b8b         db  0x00 ; '.'
0000000000209b8c         db  0x00 ; '.'
0000000000209b8d         db  0x00 ; '.'
0000000000209b8e         db  0x00 ; '.'
0000000000209b8f         db  0x00 ; '.'
0000000000209b90         db  0x65 ; 'e'
0000000000209b91         db  0x79 ; 'y'
0000000000209b92         db  0x00 ; '.'
0000000000209b93         db  0x00 ; '.'
0000000000209b94         db  0x00 ; '.'
0000000000209b95         db  0x00 ; '.'
0000000000209b96         db  0x00 ; '.'
0000000000209b97         db  0x00 ; '.'
0000000000209b98         db  0x4a ; 'J'
0000000000209b99         db  0x79 ; 'y'
0000000000209b9a         db  0x00 ; '.'
0000000000209b9b         db  0x00 ; '.'
0000000000209b9c         db  0x00 ; '.'
0000000000209b9d         db  0x00 ; '.'
0000000000209b9e         db  0x00 ; '.'
0000000000209b9f         db  0x00 ; '.'
0000000000209ba0         db  0xaa ; '.'
0000000000209ba1         db  0x70 ; 'p'
0000000000209ba2         db  0x00 ; '.'
0000000000209ba3         db  0x00 ; '.'
0000000000209ba4         db  0x00 ; '.'
0000000000209ba5         db  0x00 ; '.'
0000000000209ba6         db  0x00 ; '.'
0000000000209ba7         db  0x00 ; '.'
0000000000209ba8         db  0x6d ; 'm'
0000000000209ba9         db  0x79 ; 'y'
0000000000209baa         db  0x00 ; '.'
0000000000209bab         db  0x00 ; '.'
0000000000209bac         db  0x00 ; '.'
0000000000209bad         db  0x00 ; '.'
0000000000209bae         db  0x00 ; '.'
0000000000209baf         db  0x00 ; '.'
0000000000209bb0         db  0x00 ; '.'
0000000000209bb1         db  0x00 ; '.'
0000000000209bb2         db  0x00 ; '.'
0000000000209bb3         db  0x00 ; '.'
0000000000209bb4         db  0x00 ; '.'
0000000000209bb5         db  0x00 ; '.'
0000000000209bb6         db  0x00 ; '.'
0000000000209bb7         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x209bb8; 0x209da8[ (496 bytes)
        ; File offset : [39864; 40360[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
0000000000209bb8         db  0x01 ; '.'
0000000000209bb9         db  0x00 ; '.'
0000000000209bba         db  0x00 ; '.'
0000000000209bbb         db  0x00 ; '.'
0000000000209bbc         db  0x00 ; '.'
0000000000209bbd         db  0x00 ; '.'
0000000000209bbe         db  0x00 ; '.'
0000000000209bbf         db  0x00 ; '.'
0000000000209bc0         db  0x01 ; '.'
0000000000209bc1         db  0x00 ; '.'
0000000000209bc2         db  0x00 ; '.'
0000000000209bc3         db  0x00 ; '.'
0000000000209bc4         db  0x00 ; '.'
0000000000209bc5         db  0x00 ; '.'
0000000000209bc6         db  0x00 ; '.'
0000000000209bc7         db  0x00 ; '.'
0000000000209bc8         db  0x0c ; '.'
0000000000209bc9         db  0x00 ; '.'
0000000000209bca         db  0x00 ; '.'
0000000000209bcb         db  0x00 ; '.'
0000000000209bcc         db  0x00 ; '.'
0000000000209bcd         db  0x00 ; '.'
0000000000209bce         db  0x00 ; '.'
0000000000209bcf         db  0x00 ; '.'
0000000000209bd0         db  0xa0 ; '.'
0000000000209bd1         db  0x19 ; '.'
0000000000209bd2         db  0x00 ; '.'
0000000000209bd3         db  0x00 ; '.'
0000000000209bd4         db  0x00 ; '.'
0000000000209bd5         db  0x00 ; '.'
0000000000209bd6         db  0x00 ; '.'
0000000000209bd7         db  0x00 ; '.'
0000000000209bd8         db  0x0d ; '.'
0000000000209bd9         db  0x00 ; '.'
0000000000209bda         db  0x00 ; '.'
0000000000209bdb         db  0x00 ; '.'
0000000000209bdc         db  0x00 ; '.'
0000000000209bdd         db  0x00 ; '.'
0000000000209bde         db  0x00 ; '.'
0000000000209bdf         db  0x00 ; '.'
0000000000209be0         db  0xc0 ; '.'
0000000000209be1         db  0x6f ; 'o'
0000000000209be2         db  0x00 ; '.'
0000000000209be3         db  0x00 ; '.'
0000000000209be4         db  0x00 ; '.'
0000000000209be5         db  0x00 ; '.'
0000000000209be6         db  0x00 ; '.'
0000000000209be7         db  0x00 ; '.'
0000000000209be8         db  0x19 ; '.'
0000000000209be9         db  0x00 ; '.'
0000000000209bea         db  0x00 ; '.'
0000000000209beb         db  0x00 ; '.'
0000000000209bec         db  0x00 ; '.'
0000000000209bed         db  0x00 ; '.'
0000000000209bee         db  0x00 ; '.'
0000000000209bef         db  0x00 ; '.'
0000000000209bf0         db  0x30 ; '0'
0000000000209bf1         db  0x9a ; '.'
0000000000209bf2         db  0x20 ; ' '
0000000000209bf3         db  0x00 ; '.'
0000000000209bf4         db  0x00 ; '.'
0000000000209bf5         db  0x00 ; '.'
0000000000209bf6         db  0x00 ; '.'
0000000000209bf7         db  0x00 ; '.'
0000000000209bf8         db  0x1b ; '.'
0000000000209bf9         db  0x00 ; '.'
0000000000209bfa         db  0x00 ; '.'
0000000000209bfb         db  0x00 ; '.'
0000000000209bfc         db  0x00 ; '.'
0000000000209bfd         db  0x00 ; '.'
0000000000209bfe         db  0x00 ; '.'
0000000000209bff         db  0x00 ; '.'
0000000000209c00         db  0x08 ; '.'
0000000000209c01         db  0x00 ; '.'
0000000000209c02         db  0x00 ; '.'
0000000000209c03         db  0x00 ; '.'
0000000000209c04         db  0x00 ; '.'
0000000000209c05         db  0x00 ; '.'
0000000000209c06         db  0x00 ; '.'
0000000000209c07         db  0x00 ; '.'
0000000000209c08         db  0x1a ; '.'
0000000000209c09         db  0x00 ; '.'
0000000000209c0a         db  0x00 ; '.'
0000000000209c0b         db  0x00 ; '.'
0000000000209c0c         db  0x00 ; '.'
0000000000209c0d         db  0x00 ; '.'
0000000000209c0e         db  0x00 ; '.'
0000000000209c0f         db  0x00 ; '.'
0000000000209c10         db  0x38 ; '8'
0000000000209c11         db  0x9a ; '.'
0000000000209c12         db  0x20 ; ' '
0000000000209c13         db  0x00 ; '.'
0000000000209c14         db  0x00 ; '.'
0000000000209c15         db  0x00 ; '.'
0000000000209c16         db  0x00 ; '.'
0000000000209c17         db  0x00 ; '.'
0000000000209c18         db  0x1c ; '.'
0000000000209c19         db  0x00 ; '.'
0000000000209c1a         db  0x00 ; '.'
0000000000209c1b         db  0x00 ; '.'
0000000000209c1c         db  0x00 ; '.'
0000000000209c1d         db  0x00 ; '.'
0000000000209c1e         db  0x00 ; '.'
0000000000209c1f         db  0x00 ; '.'
0000000000209c20         db  0x08 ; '.'
0000000000209c21         db  0x00 ; '.'
0000000000209c22         db  0x00 ; '.'
0000000000209c23         db  0x00 ; '.'
0000000000209c24         db  0x00 ; '.'
0000000000209c25         db  0x00 ; '.'
0000000000209c26         db  0x00 ; '.'
0000000000209c27         db  0x00 ; '.'
0000000000209c28         db  0xf5 ; '.'
0000000000209c29         db  0xfe ; '.'
0000000000209c2a         db  0xff ; '.'
0000000000209c2b         db  0x6f ; 'o'
0000000000209c2c         db  0x00 ; '.'
0000000000209c2d         db  0x00 ; '.'
0000000000209c2e         db  0x00 ; '.'
0000000000209c2f         db  0x00 ; '.'
0000000000209c30         db  0x98 ; '.'
0000000000209c31         db  0x02 ; '.'
0000000000209c32         db  0x00 ; '.'
0000000000209c33         db  0x00 ; '.'
0000000000209c34         db  0x00 ; '.'
0000000000209c35         db  0x00 ; '.'
0000000000209c36         db  0x00 ; '.'
0000000000209c37         db  0x00 ; '.'
0000000000209c38         db  0x05 ; '.'
0000000000209c39         db  0x00 ; '.'
0000000000209c3a         db  0x00 ; '.'
0000000000209c3b         db  0x00 ; '.'
0000000000209c3c         db  0x00 ; '.'
0000000000209c3d         db  0x00 ; '.'
0000000000209c3e         db  0x00 ; '.'
0000000000209c3f         db  0x00 ; '.'
0000000000209c40         db  0x30 ; '0'
0000000000209c41         db  0x0b ; '.'
0000000000209c42         db  0x00 ; '.'
0000000000209c43         db  0x00 ; '.'
0000000000209c44         db  0x00 ; '.'
0000000000209c45         db  0x00 ; '.'
0000000000209c46         db  0x00 ; '.'
0000000000209c47         db  0x00 ; '.'
0000000000209c48         db  0x06 ; '.'
0000000000209c49         db  0x00 ; '.'
0000000000209c4a         db  0x00 ; '.'
0000000000209c4b         db  0x00 ; '.'
0000000000209c4c         db  0x00 ; '.'
0000000000209c4d         db  0x00 ; '.'
0000000000209c4e         db  0x00 ; '.'
0000000000209c4f         db  0x00 ; '.'
0000000000209c50         db  0x08 ; '.'
0000000000209c51         db  0x03 ; '.'
0000000000209c52         db  0x00 ; '.'
0000000000209c53         db  0x00 ; '.'
0000000000209c54         db  0x00 ; '.'
0000000000209c55         db  0x00 ; '.'
0000000000209c56         db  0x00 ; '.'
0000000000209c57         db  0x00 ; '.'
0000000000209c58         db  0x0a ; '.'
0000000000209c59         db  0x00 ; '.'
0000000000209c5a         db  0x00 ; '.'
0000000000209c5b         db  0x00 ; '.'
0000000000209c5c         db  0x00 ; '.'
0000000000209c5d         db  0x00 ; '.'
0000000000209c5e         db  0x00 ; '.'
0000000000209c5f         db  0x00 ; '.'
0000000000209c60         db  0xcd ; '.'
0000000000209c61         db  0x03 ; '.'
0000000000209c62         db  0x00 ; '.'
0000000000209c63         db  0x00 ; '.'
0000000000209c64         db  0x00 ; '.'
0000000000209c65         db  0x00 ; '.'
0000000000209c66         db  0x00 ; '.'
0000000000209c67         db  0x00 ; '.'
0000000000209c68         db  0x0b ; '.'
0000000000209c69         db  0x00 ; '.'
0000000000209c6a         db  0x00 ; '.'
0000000000209c6b         db  0x00 ; '.'
0000000000209c6c         db  0x00 ; '.'
0000000000209c6d         db  0x00 ; '.'
0000000000209c6e         db  0x00 ; '.'
0000000000209c6f         db  0x00 ; '.'
0000000000209c70         db  0x18 ; '.'
0000000000209c71         db  0x00 ; '.'
0000000000209c72         db  0x00 ; '.'
0000000000209c73         db  0x00 ; '.'
0000000000209c74         db  0x00 ; '.'
0000000000209c75         db  0x00 ; '.'
0000000000209c76         db  0x00 ; '.'
0000000000209c77         db  0x00 ; '.'
0000000000209c78         db  0x15 ; '.'
0000000000209c79         db  0x00 ; '.'
0000000000209c7a         db  0x00 ; '.'
0000000000209c7b         db  0x00 ; '.'
0000000000209c7c         db  0x00 ; '.'
0000000000209c7d         db  0x00 ; '.'
0000000000209c7e         db  0x00 ; '.'
0000000000209c7f         db  0x00 ; '.'
0000000000209c80         db  0x00 ; '.'
0000000000209c81         db  0x00 ; '.'
0000000000209c82         db  0x00 ; '.'
0000000000209c83         db  0x00 ; '.'
0000000000209c84         db  0x00 ; '.'
0000000000209c85         db  0x00 ; '.'
0000000000209c86         db  0x00 ; '.'
0000000000209c87         db  0x00 ; '.'
0000000000209c88         db  0x03 ; '.'
0000000000209c89         db  0x00 ; '.'
0000000000209c8a         db  0x00 ; '.'
0000000000209c8b         db  0x00 ; '.'
0000000000209c8c         db  0x00 ; '.'
0000000000209c8d         db  0x00 ; '.'
0000000000209c8e         db  0x00 ; '.'
0000000000209c8f         db  0x00 ; '.'
0000000000209c90         db  0xa8 ; '.'
0000000000209c91         db  0x9d ; '.'
0000000000209c92         db  0x20 ; ' '
0000000000209c93         db  0x00 ; '.'
0000000000209c94         db  0x00 ; '.'
0000000000209c95         db  0x00 ; '.'
0000000000209c96         db  0x00 ; '.'
0000000000209c97         db  0x00 ; '.'
0000000000209c98         db  0x02 ; '.'
0000000000209c99         db  0x00 ; '.'
0000000000209c9a         db  0x00 ; '.'
0000000000209c9b         db  0x00 ; '.'
0000000000209c9c         db  0x00 ; '.'
0000000000209c9d         db  0x00 ; '.'
0000000000209c9e         db  0x00 ; '.'
0000000000209c9f         db  0x00 ; '.'
0000000000209ca0         db  0xe8 ; '.'
0000000000209ca1         db  0x05 ; '.'
0000000000209ca2         db  0x00 ; '.'
0000000000209ca3         db  0x00 ; '.'
0000000000209ca4         db  0x00 ; '.'
0000000000209ca5         db  0x00 ; '.'
0000000000209ca6         db  0x00 ; '.'
0000000000209ca7         db  0x00 ; '.'
0000000000209ca8         db  0x14 ; '.'
0000000000209ca9         db  0x00 ; '.'
0000000000209caa         db  0x00 ; '.'
0000000000209cab         db  0x00 ; '.'
0000000000209cac         db  0x00 ; '.'
0000000000209cad         db  0x00 ; '.'
0000000000209cae         db  0x00 ; '.'
0000000000209caf         db  0x00 ; '.'
0000000000209cb0         db  0x07 ; '.'
0000000000209cb1         db  0x00 ; '.'
0000000000209cb2         db  0x00 ; '.'
0000000000209cb3         db  0x00 ; '.'
0000000000209cb4         db  0x00 ; '.'
0000000000209cb5         db  0x00 ; '.'
0000000000209cb6         db  0x00 ; '.'
0000000000209cb7         db  0x00 ; '.'
0000000000209cb8         db  0x17 ; '.'
0000000000209cb9         db  0x00 ; '.'
0000000000209cba         db  0x00 ; '.'
0000000000209cbb         db  0x00 ; '.'
0000000000209cbc         db  0x00 ; '.'
0000000000209cbd         db  0x00 ; '.'
0000000000209cbe         db  0x00 ; '.'
0000000000209cbf         db  0x00 ; '.'
0000000000209cc0         db  0xb8 ; '.'
0000000000209cc1         db  0x13 ; '.'
0000000000209cc2         db  0x00 ; '.'
0000000000209cc3         db  0x00 ; '.'
0000000000209cc4         db  0x00 ; '.'
0000000000209cc5         db  0x00 ; '.'
0000000000209cc6         db  0x00 ; '.'
0000000000209cc7         db  0x00 ; '.'
0000000000209cc8         db  0x07 ; '.'
0000000000209cc9         db  0x00 ; '.'
0000000000209cca         db  0x00 ; '.'
0000000000209ccb         db  0x00 ; '.'
0000000000209ccc         db  0x00 ; '.'
0000000000209ccd         db  0x00 ; '.'
0000000000209cce         db  0x00 ; '.'
0000000000209ccf         db  0x00 ; '.'
0000000000209cd0         db  0x10 ; '.'
0000000000209cd1         db  0x10 ; '.'
0000000000209cd2         db  0x00 ; '.'
0000000000209cd3         db  0x00 ; '.'
0000000000209cd4         db  0x00 ; '.'
0000000000209cd5         db  0x00 ; '.'
0000000000209cd6         db  0x00 ; '.'
0000000000209cd7         db  0x00 ; '.'
0000000000209cd8         db  0x08 ; '.'
0000000000209cd9         db  0x00 ; '.'
0000000000209cda         db  0x00 ; '.'
0000000000209cdb         db  0x00 ; '.'
0000000000209cdc         db  0x00 ; '.'
0000000000209cdd         db  0x00 ; '.'
0000000000209cde         db  0x00 ; '.'
0000000000209cdf         db  0x00 ; '.'
0000000000209ce0         db  0xa8 ; '.'
0000000000209ce1         db  0x03 ; '.'
0000000000209ce2         db  0x00 ; '.'
0000000000209ce3         db  0x00 ; '.'
0000000000209ce4         db  0x00 ; '.'
0000000000209ce5         db  0x00 ; '.'
0000000000209ce6         db  0x00 ; '.'
0000000000209ce7         db  0x00 ; '.'
0000000000209ce8         db  0x09 ; '.'
0000000000209ce9         db  0x00 ; '.'
0000000000209cea         db  0x00 ; '.'
0000000000209ceb         db  0x00 ; '.'
0000000000209cec         db  0x00 ; '.'
0000000000209ced         db  0x00 ; '.'
0000000000209cee         db  0x00 ; '.'
0000000000209cef         db  0x00 ; '.'
0000000000209cf0         db  0x18 ; '.'
0000000000209cf1         db  0x00 ; '.'
0000000000209cf2         db  0x00 ; '.'
0000000000209cf3         db  0x00 ; '.'
0000000000209cf4         db  0x00 ; '.'
0000000000209cf5         db  0x00 ; '.'
0000000000209cf6         db  0x00 ; '.'
0000000000209cf7         db  0x00 ; '.'
0000000000209cf8         db  0x1e ; '.'
0000000000209cf9         db  0x00 ; '.'
0000000000209cfa         db  0x00 ; '.'
0000000000209cfb         db  0x00 ; '.'
0000000000209cfc         db  0x00 ; '.'
0000000000209cfd         db  0x00 ; '.'
0000000000209cfe         db  0x00 ; '.'
0000000000209cff         db  0x00 ; '.'
0000000000209d00         db  0x08 ; '.'
0000000000209d01         db  0x00 ; '.'
0000000000209d02         db  0x00 ; '.'
0000000000209d03         db  0x00 ; '.'
0000000000209d04         db  0x00 ; '.'
0000000000209d05         db  0x00 ; '.'
0000000000209d06         db  0x00 ; '.'
0000000000209d07         db  0x00 ; '.'
0000000000209d08         db  0xfb ; '.'
0000000000209d09         db  0xff ; '.'
0000000000209d0a         db  0xff ; '.'
0000000000209d0b         db  0x6f ; 'o'
0000000000209d0c         db  0x00 ; '.'
0000000000209d0d         db  0x00 ; '.'
0000000000209d0e         db  0x00 ; '.'
0000000000209d0f         db  0x00 ; '.'
0000000000209d10         db  0x01 ; '.'
0000000000209d11         db  0x00 ; '.'
0000000000209d12         db  0x00 ; '.'
0000000000209d13         db  0x08 ; '.'
0000000000209d14         db  0x00 ; '.'
0000000000209d15         db  0x00 ; '.'
0000000000209d16         db  0x00 ; '.'
0000000000209d17         db  0x00 ; '.'
0000000000209d18         db  0xfe ; '.'
0000000000209d19         db  0xff ; '.'
0000000000209d1a         db  0xff ; '.'
0000000000209d1b         db  0x6f ; 'o'
0000000000209d1c         db  0x00 ; '.'
0000000000209d1d         db  0x00 ; '.'
0000000000209d1e         db  0x00 ; '.'
0000000000209d1f         db  0x00 ; '.'
0000000000209d20         db  0xb0 ; '.'
0000000000209d21         db  0x0f ; '.'
0000000000209d22         db  0x00 ; '.'
0000000000209d23         db  0x00 ; '.'
0000000000209d24         db  0x00 ; '.'
0000000000209d25         db  0x00 ; '.'
0000000000209d26         db  0x00 ; '.'
0000000000209d27         db  0x00 ; '.'
0000000000209d28         db  0xff ; '.'
0000000000209d29         db  0xff ; '.'
0000000000209d2a         db  0xff ; '.'
0000000000209d2b         db  0x6f ; 'o'
0000000000209d2c         db  0x00 ; '.'
0000000000209d2d         db  0x00 ; '.'
0000000000209d2e         db  0x00 ; '.'
0000000000209d2f         db  0x00 ; '.'
0000000000209d30         db  0x01 ; '.'
0000000000209d31         db  0x00 ; '.'
0000000000209d32         db  0x00 ; '.'
0000000000209d33         db  0x00 ; '.'
0000000000209d34         db  0x00 ; '.'
0000000000209d35         db  0x00 ; '.'
0000000000209d36         db  0x00 ; '.'
0000000000209d37         db  0x00 ; '.'
0000000000209d38         db  0xf0 ; '.'
0000000000209d39         db  0xff ; '.'
0000000000209d3a         db  0xff ; '.'
0000000000209d3b         db  0x6f ; 'o'
0000000000209d3c         db  0x00 ; '.'
0000000000209d3d         db  0x00 ; '.'
0000000000209d3e         db  0x00 ; '.'
0000000000209d3f         db  0x00 ; '.'
0000000000209d40         db  0xfe ; '.'
0000000000209d41         db  0x0e ; '.'
0000000000209d42         db  0x00 ; '.'
0000000000209d43         db  0x00 ; '.'
0000000000209d44         db  0x00 ; '.'
0000000000209d45         db  0x00 ; '.'
0000000000209d46         db  0x00 ; '.'
0000000000209d47         db  0x00 ; '.'
0000000000209d48         db  0xf9 ; '.'
0000000000209d49         db  0xff ; '.'
0000000000209d4a         db  0xff ; '.'
0000000000209d4b         db  0x6f ; 'o'
0000000000209d4c         db  0x00 ; '.'
0000000000209d4d         db  0x00 ; '.'
0000000000209d4e         db  0x00 ; '.'
0000000000209d4f         db  0x00 ; '.'
0000000000209d50         db  0x19 ; '.'
0000000000209d51         db  0x00 ; '.'
0000000000209d52         db  0x00 ; '.'
0000000000209d53         db  0x00 ; '.'
0000000000209d54         db  0x00 ; '.'
0000000000209d55         db  0x00 ; '.'
0000000000209d56         db  0x00 ; '.'
0000000000209d57         db  0x00 ; '.'
0000000000209d58         db  0x00 ; '.'
0000000000209d59         db  0x00 ; '.'
0000000000209d5a         db  0x00 ; '.'
0000000000209d5b         db  0x00 ; '.'
0000000000209d5c         db  0x00 ; '.'
0000000000209d5d         db  0x00 ; '.'
0000000000209d5e         db  0x00 ; '.'
0000000000209d5f         db  0x00 ; '.'
0000000000209d60         db  0x00 ; '.'
0000000000209d61         db  0x00 ; '.'
0000000000209d62         db  0x00 ; '.'
0000000000209d63         db  0x00 ; '.'
0000000000209d64         db  0x00 ; '.'
0000000000209d65         db  0x00 ; '.'
0000000000209d66         db  0x00 ; '.'
0000000000209d67         db  0x00 ; '.'
0000000000209d68         db  0x00 ; '.'
0000000000209d69         db  0x00 ; '.'
0000000000209d6a         db  0x00 ; '.'
0000000000209d6b         db  0x00 ; '.'
0000000000209d6c         db  0x00 ; '.'
0000000000209d6d         db  0x00 ; '.'
0000000000209d6e         db  0x00 ; '.'
0000000000209d6f         db  0x00 ; '.'
0000000000209d70         db  0x00 ; '.'
0000000000209d71         db  0x00 ; '.'
0000000000209d72         db  0x00 ; '.'
0000000000209d73         db  0x00 ; '.'
0000000000209d74         db  0x00 ; '.'
0000000000209d75         db  0x00 ; '.'
0000000000209d76         db  0x00 ; '.'
0000000000209d77         db  0x00 ; '.'
0000000000209d78         db  0x00 ; '.'
0000000000209d79         db  0x00 ; '.'
0000000000209d7a         db  0x00 ; '.'
0000000000209d7b         db  0x00 ; '.'
0000000000209d7c         db  0x00 ; '.'
0000000000209d7d         db  0x00 ; '.'
0000000000209d7e         db  0x00 ; '.'
0000000000209d7f         db  0x00 ; '.'
0000000000209d80         db  0x00 ; '.'
0000000000209d81         db  0x00 ; '.'
0000000000209d82         db  0x00 ; '.'
0000000000209d83         db  0x00 ; '.'
0000000000209d84         db  0x00 ; '.'
0000000000209d85         db  0x00 ; '.'
0000000000209d86         db  0x00 ; '.'
0000000000209d87         db  0x00 ; '.'
0000000000209d88         db  0x00 ; '.'
0000000000209d89         db  0x00 ; '.'
0000000000209d8a         db  0x00 ; '.'
0000000000209d8b         db  0x00 ; '.'
0000000000209d8c         db  0x00 ; '.'
0000000000209d8d         db  0x00 ; '.'
0000000000209d8e         db  0x00 ; '.'
0000000000209d8f         db  0x00 ; '.'
0000000000209d90         db  0x00 ; '.'
0000000000209d91         db  0x00 ; '.'
0000000000209d92         db  0x00 ; '.'
0000000000209d93         db  0x00 ; '.'
0000000000209d94         db  0x00 ; '.'
0000000000209d95         db  0x00 ; '.'
0000000000209d96         db  0x00 ; '.'
0000000000209d97         db  0x00 ; '.'
0000000000209d98         db  0x00 ; '.'
0000000000209d99         db  0x00 ; '.'
0000000000209d9a         db  0x00 ; '.'
0000000000209d9b         db  0x00 ; '.'
0000000000209d9c         db  0x00 ; '.'
0000000000209d9d         db  0x00 ; '.'
0000000000209d9e         db  0x00 ; '.'
0000000000209d9f         db  0x00 ; '.'
0000000000209da0         db  0x00 ; '.'
0000000000209da1         db  0x00 ; '.'
0000000000209da2         db  0x00 ; '.'
0000000000209da3         db  0x00 ; '.'
0000000000209da4         db  0x00 ; '.'
0000000000209da5         db  0x00 ; '.'
0000000000209da6         db  0x00 ; '.'
0000000000209da7         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x209da8; 0x209ff0[ (584 bytes)
        ; File offset : [40360; 40944[ (584 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
0000000000209da8         db  0xb8 ; '.'
0000000000209da9         db  0x9b ; '.'
0000000000209daa         db  0x20 ; ' '
0000000000209dab         db  0x00 ; '.'
0000000000209dac         db  0x00 ; '.'
0000000000209dad         db  0x00 ; '.'
0000000000209dae         db  0x00 ; '.'
0000000000209daf         db  0x00 ; '.'
                     qword_209db0:
0000000000209db0         dq         0x0000000000000000                          ; DATA XREF=0x19c0
0000000000209db8         db  0x00 ; '.'                                         ; DATA XREF=0x19c6
0000000000209db9         db  0x00 ; '.'
0000000000209dba         db  0x00 ; '.'
0000000000209dbb         db  0x00 ; '.'
0000000000209dbc         db  0x00 ; '.'
0000000000209dbd         db  0x00 ; '.'
0000000000209dbe         db  0x00 ; '.'
0000000000209dbf         db  0x00 ; '.'
                     getenv@GOT:        // getenv
0000000000209dc0         dq         0x000000000020a2a0                          ; DATA XREF=j_getenv
                     abort@GOT:        // abort
0000000000209dc8         dq         0x000000000020a2b0                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
0000000000209dd0         dq         0x000000000020a2b8                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
0000000000209dd8         dq         0x000000000020a2c0                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
0000000000209de0         dq         0x000000000020a2d0                          ; DATA XREF=j__exit
                     __fpending@GOT:        // __fpending
0000000000209de8         dq         0x000000000020a2d8                          ; DATA XREF=j___fpending
                     ferror@GOT:        // ferror
0000000000209df0         dq         0x000000000020a2e0                          ; DATA XREF=j_ferror
                     iswcntrl@GOT:        // iswcntrl
0000000000209df8         dq         0x000000000020a2e8                          ; DATA XREF=j_iswcntrl
                     textdomain@GOT:        // textdomain
0000000000209e00         dq         0x000000000020a2f0                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
0000000000209e08         dq         0x000000000020a2f8                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
0000000000209e10         dq         0x000000000020a300                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
0000000000209e18         dq         0x000000000020a308                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
0000000000209e20         dq         0x000000000020a310                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
0000000000209e28         dq         0x000000000020a318                          ; DATA XREF=j_strlen
                     __stack_chk_fail@GOT:        // __stack_chk_fail
0000000000209e30         dq         0x000000000020a320                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
0000000000209e38         dq         0x000000000020a328                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
0000000000209e40         dq         0x000000000020a330                          ; DATA XREF=j_mbrtowc
                     strchr@GOT:        // strchr
0000000000209e48         dq         0x000000000020a338                          ; DATA XREF=j_strchr
                     __overflow@GOT:        // __overflow
0000000000209e50         dq         0x000000000020a340                          ; DATA XREF=j___overflow
                     strrchr@GOT:        // strrchr
0000000000209e58         dq         0x000000000020a348                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
0000000000209e60         dq         0x000000000020a350                          ; DATA XREF=j_lseek
                     __assert_fail@GOT:        // __assert_fail
0000000000209e68         dq         0x000000000020a358                          ; DATA XREF=j___assert_fail
                     memset@GOT:        // memset
0000000000209e70         dq         0x000000000020a360                          ; DATA XREF=j_memset
                     fgetc@GOT:        // fgetc
0000000000209e78         dq         0x000000000020a368                          ; DATA XREF=j_fgetc
                     close@GOT:        // close
0000000000209e80         dq         0x000000000020a370                          ; DATA XREF=j_close
                     posix_fadvise@GOT:        // posix_fadvise
0000000000209e88         dq         0x000000000020a378                          ; DATA XREF=j_posix_fadvise
                     memchr@GOT:        // memchr
0000000000209e90         dq         0x000000000020a380                          ; DATA XREF=j_memchr
                     read@GOT:        // read
0000000000209e98         dq         0x000000000020a388                          ; DATA XREF=j_read
                     memcmp@GOT:        // memcmp
0000000000209ea0         dq         0x000000000020a398                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
0000000000209ea8         dq         0x000000000020a3a0                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
0000000000209eb0         dq         0x000000000020a3a8                          ; DATA XREF=j_calloc
                     strcmp@GOT:        // strcmp
0000000000209eb8         dq         0x000000000020a3b0                          ; DATA XREF=j_strcmp
                     __memmove_chk@GOT:        // __memmove_chk
0000000000209ec0         dq         0x000000000020a3b8                          ; DATA XREF=j___memmove_chk
                     feof@GOT:        // feof
0000000000209ec8         dq         0x000000000020a3c0                          ; DATA XREF=j_feof
                     memcpy@GOT:        // memcpy
0000000000209ed0         dq         0x000000000020a3d0                          ; DATA XREF=j_memcpy
                     fileno@GOT:        // fileno
0000000000209ed8         dq         0x000000000020a3d8                          ; DATA XREF=j_fileno
                     __xstat@GOT:        // __xstat
0000000000209ee0         dq         0x000000000020a3e0                          ; DATA XREF=j___xstat
                     wcwidth@GOT:        // wcwidth
0000000000209ee8         dq         0x000000000020a3e8                          ; DATA XREF=j_wcwidth
                     fflush@GOT:        // fflush
0000000000209ef0         dq         0x000000000020a3f8                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
0000000000209ef8         dq         0x000000000020a400                          ; DATA XREF=j_nl_langinfo
                     __fxstat@GOT:        // __fxstat
0000000000209f00         dq         0x000000000020a408                          ; DATA XREF=j___fxstat
                     __freading@GOT:        // __freading
0000000000209f08         dq         0x000000000020a410                          ; DATA XREF=j___freading
                     realloc@GOT:        // realloc
0000000000209f10         dq         0x000000000020a418                          ; DATA XREF=j_realloc
                     setlocale@GOT:        // setlocale
0000000000209f18         dq         0x000000000020a420                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
0000000000209f20         dq         0x000000000020a428                          ; DATA XREF=j___printf_chk
                     setvbuf@GOT:        // setvbuf
0000000000209f28         dq         0x000000000020a430                          ; DATA XREF=j_setvbuf
                     iswspace@GOT:        // iswspace
0000000000209f30         dq         0x000000000020a438                          ; DATA XREF=j_iswspace
                     btowc@GOT:        // btowc
0000000000209f38         dq         0x000000000020a440                          ; DATA XREF=j_btowc
                     error@GOT:        // error
0000000000209f40         dq         0x000000000020a448                          ; DATA XREF=j_error
                     open@GOT:        // open
0000000000209f48         dq         0x000000000020a450                          ; DATA XREF=j_open
                     fseeko@GOT:        // fseeko
0000000000209f50         dq         0x000000000020a458                          ; DATA XREF=j_fseeko
                     fopen@GOT:        // fopen
0000000000209f58         dq         0x000000000020a460                          ; DATA XREF=j_fopen
                     sysconf@GOT:        // sysconf
0000000000209f60         dq         0x000000000020a468                          ; DATA XREF=j_sysconf
                     __cxa_atexit@GOT:        // __cxa_atexit
0000000000209f68         dq         0x000000000020a470                          ; DATA XREF=j___cxa_atexit
                     sysinfo@GOT:        // sysinfo
0000000000209f70         dq         0x000000000020a478                          ; DATA XREF=j_sysinfo
                     getpagesize@GOT:        // getpagesize
0000000000209f78         dq         0x000000000020a480                          ; DATA XREF=j_getpagesize
                     exit@GOT:        // exit
0000000000209f80         dq         0x000000000020a488                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
0000000000209f88         dq         0x000000000020a490                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
0000000000209f90         dq         0x000000000020a498                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
0000000000209f98         dq         0x000000000020a4a8                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
0000000000209fa0         dq         0x000000000020a4b0                          ; DATA XREF=j_iswprint
                     getdelim@GOT:        // getdelim
0000000000209fa8         dq         0x000000000020a4c0                          ; DATA XREF=j_getdelim
                     __ctype_b_loc@GOT:        // __ctype_b_loc
0000000000209fb0         dq         0x000000000020a4c8                          ; DATA XREF=j___ctype_b_loc
                     qword_209fb8:
0000000000209fb8         dq         0x0000000000000000                          ; DATA XREF=sub_1dc0, readtokens0_init+2
                     qword_209fc0:
0000000000209fc0         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
0000000000209fc8         db  0x00 ; '.'                                         ; DATA XREF=_start+36
0000000000209fc9         db  0x00 ; '.'
0000000000209fca         db  0x00 ; '.'
0000000000209fcb         db  0x00 ; '.'
0000000000209fcc         db  0x00 ; '.'
0000000000209fcd         db  0x00 ; '.'
0000000000209fce         db  0x00 ; '.'
0000000000209fcf         db  0x00 ; '.'
                     qword_209fd0:
0000000000209fd0         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_209fd8:
0000000000209fd8         dq         0x0000000000000000                          ; DATA XREF=sub_1dc8, readtokens0_init+12
                     qword_209fe0:
0000000000209fe0         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_209fe8:
0000000000209fe8         dq         0x0000000000000000                          ; DATA XREF=j_qword_209fe8, __do_global_dtors_aux+9
0000000000209ff0         db  0x00 ; '.'
0000000000209ff1         db  0x00 ; '.'
0000000000209ff2         db  0x00 ; '.'
0000000000209ff3         db  0x00 ; '.'
0000000000209ff4         db  0x00 ; '.'
0000000000209ff5         db  0x00 ; '.'
0000000000209ff6         db  0x00 ; '.'
0000000000209ff7         db  0x00 ; '.'
0000000000209ff8         db  0x00 ; '.'
0000000000209ff9         db  0x00 ; '.'
0000000000209ffa         db  0x00 ; '.'
0000000000209ffb         db  0x00 ; '.'
0000000000209ffc         db  0x00 ; '.'
0000000000209ffd         db  0x00 ; '.'
0000000000209ffe         db  0x00 ; '.'
0000000000209fff         db  0x00 ; '.'


        ; Section .data
        ; Range: [0x20a000; 0x20a088[ (136 bytes)
        ; File offset : [40960; 41096[ (136 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

000000000020a000         db  0x00 ; '.'
000000000020a001         db  0x00 ; '.'
000000000020a002         db  0x00 ; '.'
000000000020a003         db  0x00 ; '.'
000000000020a004         db  0x00 ; '.'
000000000020a005         db  0x00 ; '.'
000000000020a006         db  0x00 ; '.'
000000000020a007         db  0x00 ; '.'
                     __dso_handle:
000000000020a008         dq         0x000000000020a008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     Version:
000000000020a010         dq         0x0000000000007878                          ; "8.31", DATA XREF=main+411
                     exit_failure:
000000000020a018         dd         0x00000001                                  ; DATA XREF=close_stdout+130, xalloc_die+23, print_and_abort+52
000000000020a01c         db  0x00 ; '.'
000000000020a01d         db  0x00 ; '.'
000000000020a01e         db  0x00 ; '.'
000000000020a01f         db  0x00 ; '.'
                     quote_quoting_options:
000000000020a020         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
000000000020a021         db  0x00 ; '.'
000000000020a022         db  0x00 ; '.'
000000000020a023         db  0x00 ; '.'
000000000020a024         db  0x00 ; '.'
000000000020a025         db  0x00 ; '.'
000000000020a026         db  0x00 ; '.'
000000000020a027         db  0x00 ; '.'
000000000020a028         db  0x00 ; '.'
000000000020a029         db  0x00 ; '.'
000000000020a02a         db  0x00 ; '.'
000000000020a02b         db  0x00 ; '.'
000000000020a02c         db  0x00 ; '.'
000000000020a02d         db  0x00 ; '.'
000000000020a02e         db  0x00 ; '.'
000000000020a02f         db  0x00 ; '.'
000000000020a030         db  0x00 ; '.'
000000000020a031         db  0x00 ; '.'
000000000020a032         db  0x00 ; '.'
000000000020a033         db  0x00 ; '.'
000000000020a034         db  0x00 ; '.'
000000000020a035         db  0x00 ; '.'
000000000020a036         db  0x00 ; '.'
000000000020a037         db  0x00 ; '.'
000000000020a038         db  0x00 ; '.'
000000000020a039         db  0x00 ; '.'
000000000020a03a         db  0x00 ; '.'
000000000020a03b         db  0x00 ; '.'
000000000020a03c         db  0x00 ; '.'
000000000020a03d         db  0x00 ; '.'
000000000020a03e         db  0x00 ; '.'
000000000020a03f         db  0x00 ; '.'
000000000020a040         db  0x00 ; '.'
000000000020a041         db  0x00 ; '.'
000000000020a042         db  0x00 ; '.'
000000000020a043         db  0x00 ; '.'
000000000020a044         db  0x00 ; '.'
000000000020a045         db  0x00 ; '.'
000000000020a046         db  0x00 ; '.'
000000000020a047         db  0x00 ; '.'
000000000020a048         db  0x00 ; '.'
000000000020a049         db  0x00 ; '.'
000000000020a04a         db  0x00 ; '.'
000000000020a04b         db  0x00 ; '.'
000000000020a04c         db  0x00 ; '.'
000000000020a04d         db  0x00 ; '.'
000000000020a04e         db  0x00 ; '.'
000000000020a04f         db  0x00 ; '.'
000000000020a050         db  0x00 ; '.'
000000000020a051         db  0x00 ; '.'
000000000020a052         db  0x00 ; '.'
000000000020a053         db  0x00 ; '.'
000000000020a054         db  0x00 ; '.'
000000000020a055         db  0x00 ; '.'
000000000020a056         db  0x00 ; '.'
000000000020a057         db  0x00 ; '.'
                     nslots:
000000000020a058         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020a05c         align      32
                     slotvec:
000000000020a060         dq         0x000000000020a070                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
000000000020a068         db  0x00 ; '.'
000000000020a069         db  0x00 ; '.'
000000000020a06a         db  0x00 ; '.'
000000000020a06b         db  0x00 ; '.'
000000000020a06c         db  0x00 ; '.'
000000000020a06d         db  0x00 ; '.'
000000000020a06e         db  0x00 ; '.'
000000000020a06f         db  0x00 ; '.'
                     slotvec0:
000000000020a070         dq         1.26481e-321, 1.05654e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec
                     obstack_alloc_failed_handler:
000000000020a080         db  0xf0 ; '.'                                         ; DATA XREF=_obstack_begin_worker+125, _obstack_newchunk+229
000000000020a081         db  0x6a ; 'j'
000000000020a082         db  0x00 ; '.'
000000000020a083         db  0x00 ; '.'
000000000020a084         db  0x00 ; '.'
000000000020a085         db  0x00 ; '.'
000000000020a086         db  0x00 ; '.'
000000000020a087         db  0x00 ; '.'
                     __TMC_END__:
000000000020a088         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7
000000000020a089         db  0x00 ; '.'
000000000020a08a         db  0x00 ; '.'
000000000020a08b         db  0x00 ; '.'
000000000020a08c         db  0x00 ; '.'
000000000020a08d         db  0x00 ; '.'
000000000020a08e         db  0x00 ; '.'
000000000020a08f         db  0x00 ; '.'
000000000020a090         db  0x00 ; '.'
000000000020a091         db  0x00 ; '.'
000000000020a092         db  0x00 ; '.'
000000000020a093         db  0x00 ; '.'
000000000020a094         db  0x00 ; '.'
000000000020a095         db  0x00 ; '.'
000000000020a096         db  0x00 ; '.'
000000000020a097         db  0x00 ; '.'
000000000020a098         db  0x00 ; '.'
000000000020a099         db  0x00 ; '.'
000000000020a09a         db  0x00 ; '.'
000000000020a09b         db  0x00 ; '.'
000000000020a09c         db  0x00 ; '.'
000000000020a09d         db  0x00 ; '.'
000000000020a09e         db  0x00 ; '.'
000000000020a09f         db  0x00 ; '.'


        ; Section .bss
        ; Range: [0x20a0a0; 0x20a298[ (504 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
000000000020a0a0         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+102
000000000020a0a1         db  0x00 ; '.'
000000000020a0a2         db  0x00 ; '.'
000000000020a0a3         db  0x00 ; '.'
000000000020a0a4         db  0x00 ; '.'
000000000020a0a5         db  0x00 ; '.'
000000000020a0a6         db  0x00 ; '.'
000000000020a0a7         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
000000000020a0a8         db  0x00 ; '.'                                         ; DATA XREF=main+121, main+404, write_counts+180, usage+128, usage+165, usage+202, usage+239, usage+276, usage+313, usage+904, close_stdout+6
000000000020a0a9         db  0x00 ; '.'
000000000020a0aa         db  0x00 ; '.'
000000000020a0ab         db  0x00 ; '.'
000000000020a0ac         db  0x00 ; '.'
000000000020a0ad         db  0x00 ; '.'
000000000020a0ae         db  0x00 ; '.'
000000000020a0af         db  0x00 ; '.'
                     stdin@@GLIBC_2.2.5:
000000000020a0b0         db  0x00 ; '.'                                         ; DATA XREF=main+661
000000000020a0b1         db  0x00 ; '.'
000000000020a0b2         db  0x00 ; '.'
000000000020a0b3         db  0x00 ; '.'
000000000020a0b4         db  0x00 ; '.'
000000000020a0b5         db  0x00 ; '.'
000000000020a0b6         db  0x00 ; '.'
000000000020a0b7         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
000000000020a0b8         db  0x00 ; '.'                                         ; DATA XREF=main+617
000000000020a0b9         db  0x00 ; '.'
000000000020a0ba         db  0x00 ; '.'
000000000020a0bb         db  0x00 ; '.'
000000000020a0bc         db  0x00 ; '.'
000000000020a0bd         db  0x00 ; '.'
000000000020a0be         db  0x00 ; '.'
000000000020a0bf         db  0x00 ; '.'
                     optarg@@GLIBC_2.2.5:
000000000020a0c0         db  0x00 ; '.'                                         ; DATA XREF=main+344
000000000020a0c1         db  0x00 ; '.'
000000000020a0c2         db  0x00 ; '.'
000000000020a0c3         db  0x00 ; '.'
000000000020a0c4         db  0x00 ; '.'
000000000020a0c5         db  0x00 ; '.'
000000000020a0c6         db  0x00 ; '.'
000000000020a0c7         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
000000000020a0c8         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
000000000020a0c9         db  0x00 ; '.'
000000000020a0ca         db  0x00 ; '.'
000000000020a0cb         db  0x00 ; '.'
000000000020a0cc         db  0x00 ; '.'
000000000020a0cd         db  0x00 ; '.'
000000000020a0ce         db  0x00 ; '.'
000000000020a0cf         db  0x00 ; '.'
000000000020a0d0         db  0x00 ; '.'
000000000020a0d1         db  0x00 ; '.'
000000000020a0d2         db  0x00 ; '.'
000000000020a0d3         db  0x00 ; '.'
000000000020a0d4         db  0x00 ; '.'
000000000020a0d5         db  0x00 ; '.'
000000000020a0d6         db  0x00 ; '.'
000000000020a0d7         db  0x00 ; '.'
000000000020a0d8         db  0x00 ; '.'
000000000020a0d9         db  0x00 ; '.'
000000000020a0da         db  0x00 ; '.'
000000000020a0db         db  0x00 ; '.'
000000000020a0dc         db  0x00 ; '.'
000000000020a0dd         db  0x00 ; '.'
000000000020a0de         db  0x00 ; '.'
000000000020a0df         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
000000000020a0e0         db  0x00 ; '.'                                         ; DATA XREF=main+2560, usage+61, close_stdout+44, set_program_name+125, print_and_abort+23
000000000020a0e1         db  0x00 ; '.'
000000000020a0e2         db  0x00 ; '.'
000000000020a0e3         db  0x00 ; '.'
000000000020a0e4         db  0x00 ; '.'
000000000020a0e5         db  0x00 ; '.'
000000000020a0e6         db  0x00 ; '.'
000000000020a0e7         db  0x00 ; '.'
                     completed.7697:
000000000020a0e8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
000000000020a0e9         db  0x00 ; '.'
000000000020a0ea         db  0x00 ; '.'
000000000020a0eb         db  0x00 ; '.'
000000000020a0ec         db  0x00 ; '.'
000000000020a0ed         db  0x00 ; '.'
000000000020a0ee         db  0x00 ; '.'
000000000020a0ef         db  0x00 ; '.'
                     stdin_only.8119:
000000000020a0f0         db  0x00 ; '.'                                         ; DATA XREF=main+947
000000000020a0f1         db  0x00 ; '.'
000000000020a0f2         db  0x00 ; '.'
000000000020a0f3         db  0x00 ; '.'
000000000020a0f4         db  0x00 ; '.'
000000000020a0f5         db  0x00 ; '.'
000000000020a0f6         db  0x00 ; '.'
000000000020a0f7         db  0x00 ; '.'
                     posixly_correct:
000000000020a0f8         db  0x00 ; '.'                                         ; DATA XREF=main+180, wc+1721, wc+2127
000000000020a0f9         db  0x00 ; '.'
000000000020a0fa         db  0x00 ; '.'
000000000020a0fb         db  0x00 ; '.'
000000000020a0fc         db  0x00 ; '.'
000000000020a0fd         db  0x00 ; '.'
000000000020a0fe         db  0x00 ; '.'
000000000020a0ff         db  0x00 ; '.'
                     page_size:
000000000020a100         db  0x00 ; '.'                                         ; DATA XREF=main+139, wc+239
000000000020a101         db  0x00 ; '.'
000000000020a102         db  0x00 ; '.'
000000000020a103         db  0x00 ; '.'
000000000020a104         db  0x00 ; '.'
000000000020a105         db  0x00 ; '.'
000000000020a106         db  0x00 ; '.'
000000000020a107         db  0x00 ; '.'
                     have_read_stdin:
000000000020a108         db  0x00 ; '.'                                         ; DATA XREF=main+1506, main+1774, main+2277
000000000020a109         db  0x00 ; '.'
000000000020a10a         db  0x00 ; '.'
000000000020a10b         db  0x00 ; '.'
                     number_width:
000000000020a10c         db  0x00 ; '.'                                         ; DATA XREF=main+1011, write_counts+267, write_counts+315, write_counts+363, write_counts+411, write_counts+456
000000000020a10d         db  0x00 ; '.'
000000000020a10e         db  0x00 ; '.'
000000000020a10f         db  0x00 ; '.'
                     print_linelength:
000000000020a110         db  0x00 ; '.'                                         ; DATA XREF=main+203, main+464, main+584, main+2230, write_counts+104, wc+121, wc+2074
                     print_bytes:
000000000020a111         db  0x00 ; '.'                                         ; DATA XREF=main+166, main+480, main+575, main+593, main+2221, write_counts+91, wc+74
                     print_chars:
000000000020a112         db  0x00 ; '.'                                         ; DATA XREF=main+173, main+536, main+566, main+2212, write_counts+78, wc+87, wc+976, wc+1035
                     print_words:
000000000020a113         db  0x00 ; '.'                                         ; DATA XREF=main+187, main+496, main+557, main+600, main+2196, write_counts+65, wc+108
                     print_lines:
000000000020a114         db  0x00 ; '.'                                         ; DATA XREF=main+196, main+521, main+548, main+607, main+2203, write_counts+52, wc+158, wc+688
000000000020a115         db  0x00 ; '.'
000000000020a116         db  0x00 ; '.'
000000000020a117         db  0x00 ; '.'
                     max_line_length:
000000000020a118         db  0x00 ; '.'                                         ; DATA XREF=main+210, main+1713, wc+1099, wc+1108
000000000020a119         db  0x00 ; '.'
000000000020a11a         db  0x00 ; '.'
000000000020a11b         db  0x00 ; '.'
000000000020a11c         db  0x00 ; '.'
000000000020a11d         db  0x00 ; '.'
000000000020a11e         db  0x00 ; '.'
000000000020a11f         db  0x00 ; '.'
                     total_bytes:
000000000020a120         db  0x00 ; '.'                                         ; DATA XREF=main+221, main+1720, wc+1092
000000000020a121         db  0x00 ; '.'
000000000020a122         db  0x00 ; '.'
000000000020a123         db  0x00 ; '.'
000000000020a124         db  0x00 ; '.'
000000000020a125         db  0x00 ; '.'
000000000020a126         db  0x00 ; '.'
000000000020a127         db  0x00 ; '.'
                     total_chars:
000000000020a128         db  0x00 ; '.'                                         ; DATA XREF=main+232, main+1730, wc+1085
000000000020a129         db  0x00 ; '.'
000000000020a12a         db  0x00 ; '.'
000000000020a12b         db  0x00 ; '.'
000000000020a12c         db  0x00 ; '.'
000000000020a12d         db  0x00 ; '.'
000000000020a12e         db  0x00 ; '.'
000000000020a12f         db  0x00 ; '.'
                     total_words:
000000000020a130         db  0x00 ; '.'                                         ; DATA XREF=main+243, main+1737, wc+1078
000000000020a131         db  0x00 ; '.'
000000000020a132         db  0x00 ; '.'
000000000020a133         db  0x00 ; '.'
000000000020a134         db  0x00 ; '.'
000000000020a135         db  0x00 ; '.'
000000000020a136         db  0x00 ; '.'
000000000020a137         db  0x00 ; '.'
                     total_lines:
000000000020a138         db  0x00 ; '.'                                         ; DATA XREF=main+254, main+1744, wc+1071
000000000020a139         db  0x00 ; '.'
000000000020a13a         db  0x00 ; '.'
000000000020a13b         db  0x00 ; '.'
000000000020a13c         db  0x00 ; '.'
000000000020a13d         db  0x00 ; '.'
000000000020a13e         db  0x00 ; '.'
000000000020a13f         db  0x00 ; '.'
                     ignore_EPIPE:
000000000020a140         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
000000000020a141         db  0x00 ; '.'
000000000020a142         db  0x00 ; '.'
000000000020a143         db  0x00 ; '.'
000000000020a144         db  0x00 ; '.'
000000000020a145         db  0x00 ; '.'
000000000020a146         db  0x00 ; '.'
000000000020a147         db  0x00 ; '.'
                     file_name:
000000000020a148         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
000000000020a149         db  0x00 ; '.'
000000000020a14a         db  0x00 ; '.'
000000000020a14b         db  0x00 ; '.'
000000000020a14c         db  0x00 ; '.'
000000000020a14d         db  0x00 ; '.'
000000000020a14e         db  0x00 ; '.'
000000000020a14f         db  0x00 ; '.'
                     program_name:
000000000020a150         db  0x00 ; '.'                                         ; DATA XREF=usage+20, set_program_name+109
000000000020a151         db  0x00 ; '.'
000000000020a152         db  0x00 ; '.'
000000000020a153         db  0x00 ; '.'
000000000020a154         db  0x00 ; '.'
000000000020a155         db  0x00 ; '.'
000000000020a156         db  0x00 ; '.'
000000000020a157         db  0x00 ; '.'
000000000020a158         db  0x00 ; '.'
000000000020a159         db  0x00 ; '.'
000000000020a15a         db  0x00 ; '.'
000000000020a15b         db  0x00 ; '.'
000000000020a15c         db  0x00 ; '.'
000000000020a15d         db  0x00 ; '.'
000000000020a15e         db  0x00 ; '.'
000000000020a15f         db  0x00 ; '.'
                     slot0:
000000000020a160         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
000000000020a161         db  0x00 ; '.'
000000000020a162         db  0x00 ; '.'
000000000020a163         db  0x00 ; '.'
000000000020a164         db  0x00 ; '.'
000000000020a165         db  0x00 ; '.'
000000000020a166         db  0x00 ; '.'
000000000020a167         db  0x00 ; '.'
000000000020a168         db  0x00 ; '.'
000000000020a169         db  0x00 ; '.'
000000000020a16a         db  0x00 ; '.'
000000000020a16b         db  0x00 ; '.'
000000000020a16c         db  0x00 ; '.'
000000000020a16d         db  0x00 ; '.'
000000000020a16e         db  0x00 ; '.'
000000000020a16f         db  0x00 ; '.'
000000000020a170         db  0x00 ; '.'
000000000020a171         db  0x00 ; '.'
000000000020a172         db  0x00 ; '.'
000000000020a173         db  0x00 ; '.'
000000000020a174         db  0x00 ; '.'
000000000020a175         db  0x00 ; '.'
000000000020a176         db  0x00 ; '.'
000000000020a177         db  0x00 ; '.'
000000000020a178         db  0x00 ; '.'
000000000020a179         db  0x00 ; '.'
000000000020a17a         db  0x00 ; '.'
000000000020a17b         db  0x00 ; '.'
000000000020a17c         db  0x00 ; '.'
000000000020a17d         db  0x00 ; '.'
000000000020a17e         db  0x00 ; '.'
000000000020a17f         db  0x00 ; '.'
000000000020a180         db  0x00 ; '.'
000000000020a181         db  0x00 ; '.'
000000000020a182         db  0x00 ; '.'
000000000020a183         db  0x00 ; '.'
000000000020a184         db  0x00 ; '.'
000000000020a185         db  0x00 ; '.'
000000000020a186         db  0x00 ; '.'
000000000020a187         db  0x00 ; '.'
000000000020a188         db  0x00 ; '.'
000000000020a189         db  0x00 ; '.'
000000000020a18a         db  0x00 ; '.'
000000000020a18b         db  0x00 ; '.'
000000000020a18c         db  0x00 ; '.'
000000000020a18d         db  0x00 ; '.'
000000000020a18e         db  0x00 ; '.'
000000000020a18f         db  0x00 ; '.'
000000000020a190         db  0x00 ; '.'
000000000020a191         db  0x00 ; '.'
000000000020a192         db  0x00 ; '.'
000000000020a193         db  0x00 ; '.'
000000000020a194         db  0x00 ; '.'
000000000020a195         db  0x00 ; '.'
000000000020a196         db  0x00 ; '.'
000000000020a197         db  0x00 ; '.'
000000000020a198         db  0x00 ; '.'
000000000020a199         db  0x00 ; '.'
000000000020a19a         db  0x00 ; '.'
000000000020a19b         db  0x00 ; '.'
000000000020a19c         db  0x00 ; '.'
000000000020a19d         db  0x00 ; '.'
000000000020a19e         db  0x00 ; '.'
000000000020a19f         db  0x00 ; '.'
000000000020a1a0         db  0x00 ; '.'
000000000020a1a1         db  0x00 ; '.'
000000000020a1a2         db  0x00 ; '.'
000000000020a1a3         db  0x00 ; '.'
000000000020a1a4         db  0x00 ; '.'
000000000020a1a5         db  0x00 ; '.'
000000000020a1a6         db  0x00 ; '.'
000000000020a1a7         db  0x00 ; '.'
000000000020a1a8         db  0x00 ; '.'
000000000020a1a9         db  0x00 ; '.'
000000000020a1aa         db  0x00 ; '.'
000000000020a1ab         db  0x00 ; '.'
000000000020a1ac         db  0x00 ; '.'
000000000020a1ad         db  0x00 ; '.'
000000000020a1ae         db  0x00 ; '.'
000000000020a1af         db  0x00 ; '.'
000000000020a1b0         db  0x00 ; '.'
000000000020a1b1         db  0x00 ; '.'
000000000020a1b2         db  0x00 ; '.'
000000000020a1b3         db  0x00 ; '.'
000000000020a1b4         db  0x00 ; '.'
000000000020a1b5         db  0x00 ; '.'
000000000020a1b6         db  0x00 ; '.'
000000000020a1b7         db  0x00 ; '.'
000000000020a1b8         db  0x00 ; '.'
000000000020a1b9         db  0x00 ; '.'
000000000020a1ba         db  0x00 ; '.'
000000000020a1bb         db  0x00 ; '.'
000000000020a1bc         db  0x00 ; '.'
000000000020a1bd         db  0x00 ; '.'
000000000020a1be         db  0x00 ; '.'
000000000020a1bf         db  0x00 ; '.'
000000000020a1c0         db  0x00 ; '.'
000000000020a1c1         db  0x00 ; '.'
000000000020a1c2         db  0x00 ; '.'
000000000020a1c3         db  0x00 ; '.'
000000000020a1c4         db  0x00 ; '.'
000000000020a1c5         db  0x00 ; '.'
000000000020a1c6         db  0x00 ; '.'
000000000020a1c7         db  0x00 ; '.'
000000000020a1c8         db  0x00 ; '.'
000000000020a1c9         db  0x00 ; '.'
000000000020a1ca         db  0x00 ; '.'
000000000020a1cb         db  0x00 ; '.'
000000000020a1cc         db  0x00 ; '.'
000000000020a1cd         db  0x00 ; '.'
000000000020a1ce         db  0x00 ; '.'
000000000020a1cf         db  0x00 ; '.'
000000000020a1d0         db  0x00 ; '.'
000000000020a1d1         db  0x00 ; '.'
000000000020a1d2         db  0x00 ; '.'
000000000020a1d3         db  0x00 ; '.'
000000000020a1d4         db  0x00 ; '.'
000000000020a1d5         db  0x00 ; '.'
000000000020a1d6         db  0x00 ; '.'
000000000020a1d7         db  0x00 ; '.'
000000000020a1d8         db  0x00 ; '.'
000000000020a1d9         db  0x00 ; '.'
000000000020a1da         db  0x00 ; '.'
000000000020a1db         db  0x00 ; '.'
000000000020a1dc         db  0x00 ; '.'
000000000020a1dd         db  0x00 ; '.'
000000000020a1de         db  0x00 ; '.'
000000000020a1df         db  0x00 ; '.'
000000000020a1e0         db  0x00 ; '.'
000000000020a1e1         db  0x00 ; '.'
000000000020a1e2         db  0x00 ; '.'
000000000020a1e3         db  0x00 ; '.'
000000000020a1e4         db  0x00 ; '.'
000000000020a1e5         db  0x00 ; '.'
000000000020a1e6         db  0x00 ; '.'
000000000020a1e7         db  0x00 ; '.'
000000000020a1e8         db  0x00 ; '.'
000000000020a1e9         db  0x00 ; '.'
000000000020a1ea         db  0x00 ; '.'
000000000020a1eb         db  0x00 ; '.'
000000000020a1ec         db  0x00 ; '.'
000000000020a1ed         db  0x00 ; '.'
000000000020a1ee         db  0x00 ; '.'
000000000020a1ef         db  0x00 ; '.'
000000000020a1f0         db  0x00 ; '.'
000000000020a1f1         db  0x00 ; '.'
000000000020a1f2         db  0x00 ; '.'
000000000020a1f3         db  0x00 ; '.'
000000000020a1f4         db  0x00 ; '.'
000000000020a1f5         db  0x00 ; '.'
000000000020a1f6         db  0x00 ; '.'
000000000020a1f7         db  0x00 ; '.'
000000000020a1f8         db  0x00 ; '.'
000000000020a1f9         db  0x00 ; '.'
000000000020a1fa         db  0x00 ; '.'
000000000020a1fb         db  0x00 ; '.'
000000000020a1fc         db  0x00 ; '.'
000000000020a1fd         db  0x00 ; '.'
000000000020a1fe         db  0x00 ; '.'
000000000020a1ff         db  0x00 ; '.'
000000000020a200         db  0x00 ; '.'
000000000020a201         db  0x00 ; '.'
000000000020a202         db  0x00 ; '.'
000000000020a203         db  0x00 ; '.'
000000000020a204         db  0x00 ; '.'
000000000020a205         db  0x00 ; '.'
000000000020a206         db  0x00 ; '.'
000000000020a207         db  0x00 ; '.'
000000000020a208         db  0x00 ; '.'
000000000020a209         db  0x00 ; '.'
000000000020a20a         db  0x00 ; '.'
000000000020a20b         db  0x00 ; '.'
000000000020a20c         db  0x00 ; '.'
000000000020a20d         db  0x00 ; '.'
000000000020a20e         db  0x00 ; '.'
000000000020a20f         db  0x00 ; '.'
000000000020a210         db  0x00 ; '.'
000000000020a211         db  0x00 ; '.'
000000000020a212         db  0x00 ; '.'
000000000020a213         db  0x00 ; '.'
000000000020a214         db  0x00 ; '.'
000000000020a215         db  0x00 ; '.'
000000000020a216         db  0x00 ; '.'
000000000020a217         db  0x00 ; '.'
000000000020a218         db  0x00 ; '.'
000000000020a219         db  0x00 ; '.'
000000000020a21a         db  0x00 ; '.'
000000000020a21b         db  0x00 ; '.'
000000000020a21c         db  0x00 ; '.'
000000000020a21d         db  0x00 ; '.'
000000000020a21e         db  0x00 ; '.'
000000000020a21f         db  0x00 ; '.'
000000000020a220         db  0x00 ; '.'
000000000020a221         db  0x00 ; '.'
000000000020a222         db  0x00 ; '.'
000000000020a223         db  0x00 ; '.'
000000000020a224         db  0x00 ; '.'
000000000020a225         db  0x00 ; '.'
000000000020a226         db  0x00 ; '.'
000000000020a227         db  0x00 ; '.'
000000000020a228         db  0x00 ; '.'
000000000020a229         db  0x00 ; '.'
000000000020a22a         db  0x00 ; '.'
000000000020a22b         db  0x00 ; '.'
000000000020a22c         db  0x00 ; '.'
000000000020a22d         db  0x00 ; '.'
000000000020a22e         db  0x00 ; '.'
000000000020a22f         db  0x00 ; '.'
000000000020a230         db  0x00 ; '.'
000000000020a231         db  0x00 ; '.'
000000000020a232         db  0x00 ; '.'
000000000020a233         db  0x00 ; '.'
000000000020a234         db  0x00 ; '.'
000000000020a235         db  0x00 ; '.'
000000000020a236         db  0x00 ; '.'
000000000020a237         db  0x00 ; '.'
000000000020a238         db  0x00 ; '.'
000000000020a239         db  0x00 ; '.'
000000000020a23a         db  0x00 ; '.'
000000000020a23b         db  0x00 ; '.'
000000000020a23c         db  0x00 ; '.'
000000000020a23d         db  0x00 ; '.'
000000000020a23e         db  0x00 ; '.'
000000000020a23f         db  0x00 ; '.'
000000000020a240         db  0x00 ; '.'
000000000020a241         db  0x00 ; '.'
000000000020a242         db  0x00 ; '.'
000000000020a243         db  0x00 ; '.'
000000000020a244         db  0x00 ; '.'
000000000020a245         db  0x00 ; '.'
000000000020a246         db  0x00 ; '.'
000000000020a247         db  0x00 ; '.'
000000000020a248         db  0x00 ; '.'
000000000020a249         db  0x00 ; '.'
000000000020a24a         db  0x00 ; '.'
000000000020a24b         db  0x00 ; '.'
000000000020a24c         db  0x00 ; '.'
000000000020a24d         db  0x00 ; '.'
000000000020a24e         db  0x00 ; '.'
000000000020a24f         db  0x00 ; '.'
000000000020a250         db  0x00 ; '.'
000000000020a251         db  0x00 ; '.'
000000000020a252         db  0x00 ; '.'
000000000020a253         db  0x00 ; '.'
000000000020a254         db  0x00 ; '.'
000000000020a255         db  0x00 ; '.'
000000000020a256         db  0x00 ; '.'
000000000020a257         db  0x00 ; '.'
000000000020a258         db  0x00 ; '.'
000000000020a259         db  0x00 ; '.'
000000000020a25a         db  0x00 ; '.'
000000000020a25b         db  0x00 ; '.'
000000000020a25c         db  0x00 ; '.'
000000000020a25d         db  0x00 ; '.'
000000000020a25e         db  0x00 ; '.'
000000000020a25f         db  0x00 ; '.'
                     default_quoting_options:
000000000020a260         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
000000000020a261         db  0x00 ; '.'
000000000020a262         db  0x00 ; '.'
000000000020a263         db  0x00 ; '.'
000000000020a264         db  0x00 ; '.'
000000000020a265         db  0x00 ; '.'
000000000020a266         db  0x00 ; '.'
000000000020a267         db  0x00 ; '.'
000000000020a268         db  0x00 ; '.'
000000000020a269         db  0x00 ; '.'
000000000020a26a         db  0x00 ; '.'
000000000020a26b         db  0x00 ; '.'
000000000020a26c         db  0x00 ; '.'
000000000020a26d         db  0x00 ; '.'
000000000020a26e         db  0x00 ; '.'
000000000020a26f         db  0x00 ; '.'
000000000020a270         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
000000000020a271         db  0x00 ; '.'
000000000020a272         db  0x00 ; '.'
000000000020a273         db  0x00 ; '.'
000000000020a274         db  0x00 ; '.'
000000000020a275         db  0x00 ; '.'
000000000020a276         db  0x00 ; '.'
000000000020a277         db  0x00 ; '.'
000000000020a278         db  0x00 ; '.'
000000000020a279         db  0x00 ; '.'
000000000020a27a         db  0x00 ; '.'
000000000020a27b         db  0x00 ; '.'
000000000020a27c         db  0x00 ; '.'
000000000020a27d         db  0x00 ; '.'
000000000020a27e         db  0x00 ; '.'
000000000020a27f         db  0x00 ; '.'
000000000020a280         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
000000000020a281         db  0x00 ; '.'
000000000020a282         db  0x00 ; '.'
000000000020a283         db  0x00 ; '.'
000000000020a284         db  0x00 ; '.'
000000000020a285         db  0x00 ; '.'
000000000020a286         db  0x00 ; '.'
000000000020a287         db  0x00 ; '.'
000000000020a288         db  0x00 ; '.'
000000000020a289         db  0x00 ; '.'
000000000020a28a         db  0x00 ; '.'
000000000020a28b         db  0x00 ; '.'
000000000020a28c         db  0x00 ; '.'
000000000020a28d         db  0x00 ; '.'
000000000020a28e         db  0x00 ; '.'
000000000020a28f         db  0x00 ; '.'
                     qword_20a290:
000000000020a290         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
000000000020a291         db  0x00 ; '.'
000000000020a292         db  0x00 ; '.'
000000000020a293         db  0x00 ; '.'
000000000020a294         db  0x00 ; '.'
000000000020a295         db  0x00 ; '.'
000000000020a296         db  0x00 ; '.'
000000000020a297         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x20a2a0; 0x20a700[ (1120 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x20a2a0; 0x4149a0[ (2139904 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     getenv:
000000000020a2a0         extern function code                                   ; DATA XREF=getenv@GOT
                     free:
000000000020a2a8         extern function code
                     abort:
000000000020a2b0         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
000000000020a2b8         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
000000000020a2c0         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
000000000020a2c8         extern function code
                     _exit:
000000000020a2d0         extern function code                                   ; DATA XREF=_exit@GOT
                     __fpending:
000000000020a2d8         extern function code                                   ; DATA XREF=__fpending@GOT
                     ferror:
000000000020a2e0         extern function code                                   ; DATA XREF=ferror@GOT
                     iswcntrl:
000000000020a2e8         extern function code                                   ; DATA XREF=iswcntrl@GOT
                     textdomain:
000000000020a2f0         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
000000000020a2f8         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
000000000020a300         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
000000000020a308         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
000000000020a310         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
000000000020a318         extern function code                                   ; DATA XREF=strlen@GOT
                     __stack_chk_fail:
000000000020a320         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
000000000020a328         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
000000000020a330         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     strchr:
000000000020a338         extern function code                                   ; DATA XREF=strchr@GOT
                     __overflow:
000000000020a340         extern function code                                   ; DATA XREF=__overflow@GOT
                     strrchr:
000000000020a348         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
000000000020a350         extern function code                                   ; DATA XREF=lseek@GOT
                     __assert_fail:
000000000020a358         extern function code                                   ; DATA XREF=__assert_fail@GOT
                     memset:
000000000020a360         extern function code                                   ; DATA XREF=memset@GOT
                     fgetc:
000000000020a368         extern function code                                   ; DATA XREF=fgetc@GOT
                     close:
000000000020a370         extern function code                                   ; DATA XREF=close@GOT
                     posix_fadvise:
000000000020a378         extern function code                                   ; DATA XREF=posix_fadvise@GOT
                     memchr:
000000000020a380         extern function code                                   ; DATA XREF=memchr@GOT
                     read:
000000000020a388         extern function code                                   ; DATA XREF=read@GOT
                     __libc_start_main:
000000000020a390         extern function code
                     memcmp:
000000000020a398         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
000000000020a3a0         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
000000000020a3a8         extern function code                                   ; DATA XREF=calloc@GOT
                     strcmp:
000000000020a3b0         extern function code                                   ; DATA XREF=strcmp@GOT
                     __memmove_chk:
000000000020a3b8         extern function code                                   ; DATA XREF=__memmove_chk@GOT
                     feof:
000000000020a3c0         extern function code                                   ; DATA XREF=feof@GOT
                     __gmon_start__:
000000000020a3c8         extern function code
                     memcpy:
000000000020a3d0         extern function code                                   ; DATA XREF=memcpy@GOT
                     fileno:
000000000020a3d8         extern function code                                   ; DATA XREF=fileno@GOT
                     __xstat:
000000000020a3e0         extern function code                                   ; DATA XREF=__xstat@GOT
                     wcwidth:
000000000020a3e8         extern function code                                   ; DATA XREF=wcwidth@GOT
                     malloc:
000000000020a3f0         extern function code
                     fflush:
000000000020a3f8         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
000000000020a400         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __fxstat:
000000000020a408         extern function code                                   ; DATA XREF=__fxstat@GOT
                     __freading:
000000000020a410         extern function code                                   ; DATA XREF=__freading@GOT
                     realloc:
000000000020a418         extern function code                                   ; DATA XREF=realloc@GOT
                     setlocale:
000000000020a420         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
000000000020a428         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     setvbuf:
000000000020a430         extern function code                                   ; DATA XREF=setvbuf@GOT
                     iswspace:
000000000020a438         extern function code                                   ; DATA XREF=iswspace@GOT
                     btowc:
000000000020a440         extern function code                                   ; DATA XREF=btowc@GOT
                     error:
000000000020a448         extern function code                                   ; DATA XREF=error@GOT
                     open:
000000000020a450         extern function code                                   ; DATA XREF=open@GOT
                     fseeko:
000000000020a458         extern function code                                   ; DATA XREF=fseeko@GOT
                     fopen:
000000000020a460         extern function code                                   ; DATA XREF=fopen@GOT
                     sysconf:
000000000020a468         extern function code                                   ; DATA XREF=sysconf@GOT
                     __cxa_atexit:
000000000020a470         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     sysinfo:
000000000020a478         extern function code                                   ; DATA XREF=sysinfo@GOT
                     getpagesize:
000000000020a480         extern function code                                   ; DATA XREF=getpagesize@GOT
                     exit:
000000000020a488         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
000000000020a490         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
000000000020a498         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
000000000020a4a0         extern function code
                     mbsinit:
000000000020a4a8         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
000000000020a4b0         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
000000000020a4b8         extern function code
                     getdelim:
000000000020a4c0         extern function code                                   ; DATA XREF=getdelim@GOT
                     __ctype_b_loc:
000000000020a4c8         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     getenv@@GLIBC_2.2.5:
000000000020a4d0         extern function code
                     free@@GLIBC_2.2.5:
000000000020a4d8         extern function code
                     abort@@GLIBC_2.2.5:
000000000020a4e0         extern function code
                     __errno_location@@GLIBC_2.2.5:
000000000020a4e8         extern function code
                     strncmp@@GLIBC_2.2.5:
000000000020a4f0         extern function code
                     _ITM_deregisterTMCloneTable_20a4f8:        // _ITM_deregisterTMCloneTable
000000000020a4f8         extern function code
                     _exit@@GLIBC_2.2.5:
000000000020a500         extern function code
                     __fpending@@GLIBC_2.2.5:
000000000020a508         extern function code
                     ferror@@GLIBC_2.2.5:
000000000020a510         extern function code
                     iswcntrl@@GLIBC_2.2.5:
000000000020a518         extern function code
                     textdomain@@GLIBC_2.2.5:
000000000020a520         extern function code
                     fclose@@GLIBC_2.2.5:
000000000020a528         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
000000000020a530         extern function code
                     dcgettext@@GLIBC_2.2.5:
000000000020a538         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
000000000020a540         extern function code
                     strlen@@GLIBC_2.2.5:
000000000020a548         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
000000000020a550         extern function code
                     getopt_long@@GLIBC_2.2.5:
000000000020a558         extern function code
                     mbrtowc@@GLIBC_2.2.5:
000000000020a560         extern function code
                     strchr@@GLIBC_2.2.5:
000000000020a568         extern function code
                     __overflow@@GLIBC_2.2.5:
000000000020a570         extern function code
                     strrchr@@GLIBC_2.2.5:
000000000020a578         extern function code
                     lseek@@GLIBC_2.2.5:
000000000020a580         extern function code
                     __assert_fail@@GLIBC_2.2.5:
000000000020a588         extern function code
                     memset@@GLIBC_2.2.5:
000000000020a590         extern function code
                     fgetc@@GLIBC_2.2.5:
000000000020a598         extern function code
                     close@@GLIBC_2.2.5:
000000000020a5a0         extern function code
                     posix_fadvise@@GLIBC_2.2.5:
000000000020a5a8         extern function code
                     memchr@@GLIBC_2.2.5:
000000000020a5b0         extern function code
                     read@@GLIBC_2.2.5:
000000000020a5b8         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
000000000020a5c0         extern function code
                     memcmp@@GLIBC_2.2.5:
000000000020a5c8         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
000000000020a5d0         extern function code
                     calloc@@GLIBC_2.2.5:
000000000020a5d8         extern function code
                     strcmp@@GLIBC_2.2.5:
000000000020a5e0         extern function code
                     __memmove_chk@@GLIBC_2.3.4:
000000000020a5e8         extern function code
                     feof@@GLIBC_2.2.5:
000000000020a5f0         extern function code
                     __gmon_start___20a5f8:        // __gmon_start__
000000000020a5f8         extern function code
                     memcpy@@GLIBC_2.14:
000000000020a600         extern function code
                     fileno@@GLIBC_2.2.5:
000000000020a608         extern function code
                     __xstat@@GLIBC_2.2.5:
000000000020a610         extern function code
                     wcwidth@@GLIBC_2.2.5:
000000000020a618         extern function code
                     malloc@@GLIBC_2.2.5:
000000000020a620         extern function code
                     fflush@@GLIBC_2.2.5:
000000000020a628         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
000000000020a630         extern function code
                     __fxstat@@GLIBC_2.2.5:
000000000020a638         extern function code
                     __freading@@GLIBC_2.2.5:
000000000020a640         extern function code
                     realloc@@GLIBC_2.2.5:
000000000020a648         extern function code
                     setlocale@@GLIBC_2.2.5:
000000000020a650         extern function code
                     __printf_chk@@GLIBC_2.3.4:
000000000020a658         extern function code
                     setvbuf@@GLIBC_2.2.5:
000000000020a660         extern function code
                     iswspace@@GLIBC_2.2.5:
000000000020a668         extern function code
                     btowc@@GLIBC_2.2.5:
000000000020a670         extern function code
                     error@@GLIBC_2.2.5:
000000000020a678         extern function code
                     open@@GLIBC_2.2.5:
000000000020a680         extern function code
                     fseeko@@GLIBC_2.2.5:
000000000020a688         extern function code
                     fopen@@GLIBC_2.2.5:
000000000020a690         extern function code
                     sysconf@@GLIBC_2.2.5:
000000000020a698         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
000000000020a6a0         extern function code
                     sysinfo@@GLIBC_2.2.5:
000000000020a6a8         extern function code
                     getpagesize@@GLIBC_2.2.5:
000000000020a6b0         extern function code
                     exit@@GLIBC_2.2.5:
000000000020a6b8         extern function code
                     fwrite@@GLIBC_2.2.5:
000000000020a6c0         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
000000000020a6c8         extern function code
                     _ITM_registerTMCloneTable_20a6d0:        // _ITM_registerTMCloneTable
000000000020a6d0         extern function code
                     mbsinit@@GLIBC_2.2.5:
000000000020a6d8         extern function code
                     iswprint@@GLIBC_2.2.5:
000000000020a6e0         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
000000000020a6e8         extern function code
                     getdelim@@GLIBC_2.2.5:
000000000020a6f0         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
000000000020a6f8         extern function code
