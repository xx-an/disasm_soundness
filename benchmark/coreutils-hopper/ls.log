0x5270: xor ebp,ebp
0x5272: mov r9,rdx
0x5275: pop rsi
0x5276: mov rdx,rsp
0x5279: and rsp,0xfffffffffffffff0
0x527d: push rax
0x527e: push rsp
0x527f: lea r8,[rip+0x10caa]
0x5286: lea rcx,[rip+0x10c33]
0x528d: lea rdi,[rip+0xffffffffffffe60c]
0x5294: call qword ptr [rip+0x21ad36]
Execute the function: __libc_start_main

0x5294: jump address is 0x38a0
0x38a0: push r15
0x38a2: push r14
0x38a4: push r13
0x38a6: push r12
0x38a8: push rbp
0x38a9: push rbx
0x38aa: mov ebp,edi
0x38ac: mov rbx,rsi
0x38af: sub rsp,0x58
0x38b3: mov rdi,qword ptr [rsi]
0x38b6: mov rax,qword ptr fs:0x28
0x38bf: mov qword ptr [rsp+0x48],rax
0x38c4: xor eax,eax
0x38c6: call 0x12050
0x38c6: jump address is 0x12050
0x12050: test rdi,rdi
0x12053: push rbx
0x12054: je 0x120cd
0x12054: jump address is 0x120cd
0x12056: mov esi,0x2f
0x1205b: mov rbx,rdi
0x1205e: call 0x34a0
0x1205e: jump address is 0x34a0
0x34a0: jmp qword ptr [rip+0x21c92a]
Execute the function: strrchr

0x34a0: the return address is 0x12063
0x12063: test rax,rax
0x12066: je 0x120bd
0x12066: jump address is 0x120bd
0x12068: lea r8,[rax+0x1]
0x1206c: mov rdx,r8
0x1206f: sub rdx,rbx
0x12072: cmp rdx,0x6
0x12076: jle 0x120bd
0x12076: jump address is 0x120bd
Block exists: mov qword ptr [rip+0x20f33c],rbx at address 0x120bd is visited for 1 times

0x12078: lea rsi,[rax-0x6]
0x1207c: lea rdi,[rip+0x827d]
0x12083: mov ecx,0x7
0x12088: rep cmpsb [rsi],[rdi]
0x1208a: seta dl
0x1208d: sbb dl,0x0
0x12090: test dl,dl
0x12092: jne 0x120bd
0x12092: jump address is 0x120bd
Block exists: mov qword ptr [rip+0x20f33c],rbx at address 0x120bd is visited for 1 times

0x12094: lea rdi,[rip+0x826d]
0x1209b: mov ecx,0x3
0x120a0: mov rsi,r8
0x120a3: mov rbx,r8
0x120a6: rep cmpsb [rsi],[rdi]
0x120a8: seta dl
0x120ab: sbb dl,0x0
0x120ae: test dl,dl
0x120b0: jne 0x120bd
0x120b0: jump address is 0x120bd
Block exists: mov qword ptr [rip+0x20f33c],rbx at address 0x120bd is visited for 1 times

0x120b2: lea rbx,[rax+0x4]
0x120b6: mov qword ptr [rip+0x20e1c3],rbx
0x120bd: mov qword ptr [rip+0x20f33c],rbx
0x120c4: mov qword ptr [rip+0x20e1d5],rbx
0x120cb: pop rbx
0x120cc: ret
0x120cc: the return address is 0x38cb
0x38cb: lea rsi,[rip+0x13fe1]
0x38d2: mov edi,0x6
0x38d7: call 0x3700
0x38d7: jump address is 0x3700
0x3700: jmp qword ptr [rip+0x21c7fa]
Execute the function: setlocale

0x3700: the return address is 0x38dc
0x38dc: lea rsi,[rip+0x1412c]
0x38e3: lea rdi,[rip+0x140f0]
0x38ea: call 0x33d0
0x38ea: jump address is 0x33d0
0x33d0: jmp qword ptr [rip+0x21c992]
Execute the function: bindtextdomain

0x33d0: the return address is 0x38ef
0x38ef: lea rdi,[rip+0x140e4]
0x38f6: call 0x3390
0x38f6: jump address is 0x3390
0x3390: jmp qword ptr [rip+0x21c9b2]
Execute the function: textdomain

0x3390: the return address is 0x38fb
0x38fb: lea rdi,[rip+0x929e]
0x3902: mov dword ptr [rip+0x21c8ec],0x2
0x390c: call 0x15f40
0x390c: jump address is 0x15f40
0x15f40: mov rdx,qword ptr [rip+0x20a0c1]
0x15f47: xor esi,esi
0x15f49: jmp 0x37a0
0x15f49: jump address is 0x37a0
0x37a0: jmp qword ptr [rip+0x21c7aa]
Execute the function: __cxa_atexit

0x37a0: the return address is 0x3911
0x3911: movabs rax,0x8000000000000000
0x391b: mov dword ptr [rip+0x21d8eb],0x0
0x3925: mov byte ptr [rip+0x21d98c],0x1
0x392c: mov qword ptr [rip+0x21da3d],rax
0x3933: mov eax,dword ptr [rip+0x21c8a7]
0x3939: mov qword ptr [rip+0x21da3c],0x0
0x3944: mov qword ptr [rip+0x21da29],0xffffffffffffffff
0x394f: mov byte ptr [rip+0x21d982],0x0
0x3956: cmp eax,0x2
0x3959: je 0x46f7
0x3959: jump address is 0x46f7
0x395f: cmp eax,0x3
0x3962: je 0x3972
0x3962: jump address is 0x3972
0x3964: sub eax,0x1
0x3967: je 0x425a
0x3967: jump address is 0x425a
0x396d: call 0x3290
0x396d: jump address is 0x3290
0x3290: jmp qword ptr [rip+0x21ca32]
Execute the function: abort

0x425a: mov edi,0x1
0x425f: call 0x3300
0x425f: jump address is 0x3300
0x3300: jmp qword ptr [rip+0x21c9fa]
Execute the function: isatty

0x3300: the return address is 0x4264
0x4264: test eax,eax
0x4266: jne 0x4d2f
0x4266: jump address is 0x4d2f
0x426c: mov dword ptr [rip+0x21d0c2],0x1
0x4276: jmp 0x3988
0x4276: jump address is 0x3988
0x3988: lea rdi,[rip+0x14098]
0x398f: mov dword ptr [rip+0x21d99b],0x0
0x3999: mov dword ptr [rip+0x21d98d],0x0
0x39a3: mov byte ptr [rip+0x21d985],0x0
0x39aa: mov byte ptr [rip+0x21d97c],0x0
0x39b1: mov byte ptr [rip+0x21d974],0x0
0x39b8: mov dword ptr [rip+0x21d952],0x0
0x39c2: mov byte ptr [rip+0x21d933],0x0
0x39c9: mov dword ptr [rip+0x21d925],0x1
0x39d3: mov byte ptr [rip+0x21d91c],0x0
0x39da: mov byte ptr [rip+0x21d914],0x0
0x39e1: mov dword ptr [rip+0x21d905],0x0
0x39eb: mov qword ptr [rip+0x21d8f2],0x0
0x39f6: mov qword ptr [rip+0x21d8df],0x0
0x3a01: mov byte ptr [rip+0x21d95d],0x0
0x3a08: call 0x3250
0x3a08: jump address is 0x3250
0x3250: jmp qword ptr [rip+0x21ca52]
Execute the function: getenv

0x3250: the return address is 0x3a0d
0x3a0d: test rax,rax
0x3a10: mov r12,rax
0x3a13: je 0x3a4b
0x3a13: jump address is 0x3a4b
0x3a15: lea rdx,[rip+0x16da4]
0x3a1c: lea rsi,[rip+0x21c01d]
0x3a23: mov ecx,0x4
0x3a28: mov rdi,rax
0x3a2b: call 0xc150
0x3a2b: jump address is 0xc150
0xc150: push r15
0xc152: push r14
0xc154: mov r15,rsi
0xc157: push r13
0xc159: push r12
0xc15b: mov r13,rcx
0xc15e: push rbp
0xc15f: push rbx
0xc160: mov rbp,rdx
0xc163: sub rsp,0x28
0xc167: mov qword ptr [rsp+0x8],rdi
0xc16c: mov qword ptr [rsp+0x18],rdx
0xc171: call 0x3400
0xc171: jump address is 0x3400
0x3400: jmp qword ptr [rip+0x21c97a]
Execute the function: strlen

0x3400: the return address is 0xc176
0xc176: mov r14,qword ptr [r15]
0xc179: mov qword ptr [rsp+0x0],0xffffffffffffffff
0xc181: test r14,r14
0xc184: je 0xc23d
0xc184: jump address is 0xc23d
0xc18a: mov r12,rax
0xc18d: mov byte ptr [rsp+0x17],0x0
0xc192: xor ebx,ebx
0xc194: jmp 0xc1e7
0xc194: jump address is 0xc1e7
0xc1e7: mov rsi,qword ptr [rsp+0x8]
0xc1ec: mov rdx,r12
0xc1ef: mov rdi,r14
0xc1f2: call 0x32b0
0xc1f2: jump address is 0x32b0
0x32b0: jmp qword ptr [rip+0x21ca22]
Execute the function: strncmp

0x32b0: the return address is 0xc1f7
0xc1f7: test eax,eax
0xc1f9: jne 0xc1d7
0xc1f9: jump address is 0xc1d7
0xc1fb: mov rdi,r14
0xc1fe: call 0x3400
0xc1fe: jump address is 0x3400
0x3400: jmp qword ptr [rip+0x21c97a]
Execute the function: strlen

0x3400: the return address is 0xc203
0xc203: cmp rax,r12
0xc206: je 0xc260
0xc206: jump address is 0xc260
0xc208: cmp qword ptr [rsp+0x0],0xffffffffffffffff
0xc20d: jne 0xc1a0
0xc20d: jump address is 0xc1a0
0xc20f: mov qword ptr [rsp+0x0],rbx
0xc213: add rbx,0x1
0xc217: add rbp,r13
0xc21a: mov r14,qword ptr [r15+rbx*8]
0xc21e: test r14,r14
0xc221: jne 0xc1e7
0xc221: jump address is 0xc1e7
0xc223: nop dword ptr [rax+rax]
0xc228: cmp byte ptr [rsp+0x17],0x0
0xc22d: mov rax,0xfffffffffffffffe
0xc234: cmove rax,qword ptr [rsp+0x0]
0xc239: mov qword ptr [rsp+0x0],rax
0xc23d: mov rax,qword ptr [rsp+0x0]
0xc241: add rsp,0x28
0xc245: pop rbx
0xc246: pop rbp
0xc247: pop r12
0xc249: pop r13
0xc24b: pop r14
0xc24d: pop r15
0xc24f: ret
0xc24f: the return address is 0x3a30
0x3a30: test eax,eax
0x3a32: js 0x4712
0x3a32: jump address is 0x4712
0x3a38: lea rdx,[rip+0x16d81]
0x3a3f: cdqe
0x3a41: xor edi,edi
0x3a43: mov esi,dword ptr [rdx+rax*4]
0x3a46: call 0x13630
0x3a46: jump address is 0x13630
0x13630: lea rax,[rip+0x20dee9]
0x13637: test rdi,rdi
0x1363a: cmove rdi,rax
0x1363e: mov dword ptr [rdi],esi
0x13640: ret
0x13640: the return address is 0x3a4b
Block exists: lea rdi,[rip+0x13fe3] at address 0x3a4b is visited for 1 times

0xc1e7: mov rsi,qword ptr [rsp+0x8]
0xc1ec: mov rdx,r12
0xc1ef: mov rdi,r14
0xc1f2: call 0x32b0
0xc1f2: jump address is 0x32b0
0x32b0: jmp qword ptr [rip+0x21ca22]
Execute the function: strncmp

0x32b0: the return address is 0xc1f7
0xc1f7: test eax,eax
0xc1f9: jne 0xc1d7
0xc1f9: jump address is 0xc1d7
0xc1fb: mov rdi,r14
0xc1fe: call 0x3400
0xc1fe: jump address is 0x3400
0x3400: jmp qword ptr [rip+0x21c97a]
Execute the function: strlen

0x3400: the return address is 0xc203
0xc203: cmp rax,r12
0xc206: je 0xc260
0xc206: jump address is 0xc260
0xc208: cmp qword ptr [rsp+0x0],0xffffffffffffffff
0xc20d: jne 0xc1a0
0xc20d: jump address is 0xc1a0
0xc20f: mov qword ptr [rsp+0x0],rbx
0xc213: add rbx,0x1
0xc217: add rbp,r13
0xc21a: mov r14,qword ptr [r15+rbx*8]
0xc21e: test r14,r14
0xc221: jne 0xc1e7
0xc221: jump address is 0xc1e7
0xc223: nop dword ptr [rax+rax]
0xc228: cmp byte ptr [rsp+0x17],0x0
0xc22d: mov rax,0xfffffffffffffffe
0xc234: cmove rax,qword ptr [rsp+0x0]
0xc239: mov qword ptr [rsp+0x0],rax
0xc23d: mov rax,qword ptr [rsp+0x0]
0xc241: add rsp,0x28
0xc245: pop rbx
0xc246: pop rbp
0xc247: pop r12
0xc249: pop r13
0xc24b: pop r14
0xc24d: pop r15
0xc24f: ret
0xc24f: the return address is yg
0xc234: cmove rax,qword ptr [rsp+0x0]
0xc239: mov qword ptr [rsp+0x0],rax
0xc23d: mov rax,qword ptr [rsp+0x0]
0xc241: add rsp,0x28
0xc245: pop rbx
0xc246: pop rbp
0xc247: pop r12
0xc249: pop r13
0xc24b: pop r14
0xc24d: pop r15
0xc24f: ret
0xc24f: the return address is yg
0xc1e7: mov rsi,qword ptr [rsp+0x8]
0xc1ec: mov rdx,r12
0xc1ef: mov rdi,r14
0xc1f2: call 0x32b0
0xc1f2: jump address is 0x32b0
0x32b0: jmp qword ptr [rip+0x21ca22]
Execute the function: strncmp

0x32b0: the return address is 0xc1f7
0xc1f7: test eax,eax
0xc1f9: jne 0xc1d7
0xc1f9: jump address is 0xc1d7
0xc1fb: mov rdi,r14
0xc1fe: call 0x3400
0xc1fe: jump address is 0x3400
0x3400: jmp qword ptr [rip+0x21c97a]
Execute the function: strlen

0x3400: the return address is 0xc203
0xc203: cmp rax,r12
0xc206: je 0xc260
0xc206: jump address is 0xc260
0xc208: cmp qword ptr [rsp+0x0],0xffffffffffffffff
0xc20d: jne 0xc1a0
0xc20d: jump address is 0xc1a0
0xc20f: mov qword ptr [rsp+0x0],rbx
0xc213: add rbx,0x1
0xc217: add rbp,r13
0xc21a: mov r14,qword ptr [r15+rbx*8]
0xc21e: test r14,r14
0xc221: jne 0xc1e7
0xc221: jump address is 0xc1e7
Block exists: mov rsi,qword ptr [rsp+0x8] at address 0xc1e7 is visited for 3 times

Block exists: nop dword ptr [rax+rax] at address 0xc223 is visited for 2 times

0xc1a0: mov rax,qword ptr [rsp+0x18]
0xc1a5: test rax,rax
0xc1a8: je 0xc250
0xc1a8: jump address is 0xc250
0xc1ae: mov rdi,qword ptr [rsp+0x0]
0xc1b2: mov rdx,r13
0xc1b5: mov rsi,rbp
0xc1b8: imul rdi,r13
0xc1bc: add rdi,rax
0xc1bf: call 0x3550
0xc1bf: jump address is 0x3550
0x3550: jmp qword ptr [rip+0x21c8d2]
Execute the function: memcmp

0x3550: the return address is 0xc1c4
0xc1c4: test eax,eax
0xc1c6: movzx eax,byte ptr [rsp+0x17]
0xc1cb: mov ecx,0x1
0xc1d0: cmovne eax,ecx
0xc1d3: mov byte ptr [rsp+0x17],al
0xc1d7: add rbx,0x1
0xc1db: add rbp,r13
0xc1de: mov r14,qword ptr [r15+rbx*8]
0xc1e2: test r14,r14
0xc1e5: je 0xc228
0xc1e5: jump address is 0xc228
Block exists: cmp byte ptr [rsp+0x17],0x0 at address 0xc228 is visited for 1 times

Block exists: mov rsi,qword ptr [rsp+0x8] at address 0xc1e7 is visited for 3 times

0xc1d0: cmovne eax,ecx
0xc1d3: mov byte ptr [rsp+0x17],al
0xc1d7: add rbx,0x1
0xc1db: add rbp,r13
0xc1de: mov r14,qword ptr [r15+rbx*8]
0xc1e2: test r14,r14
0xc1e5: je 0xc228
0xc1e5: jump address is 0xc228
Block exists: cmp byte ptr [rsp+0x17],0x0 at address 0xc228 is visited for 1 times

Block exists: mov rsi,qword ptr [rsp+0x8] at address 0xc1e7 is visited for 3 times

0xc250: mov byte ptr [rsp+0x17],0x1
0xc255: jmp 0xc1d7
0xc255: jump address is 0xc1d7
0xc1d7: add rbx,0x1
0xc1db: add rbp,r13
0xc1de: mov r14,qword ptr [r15+rbx*8]
0xc1e2: test r14,r14
0xc1e5: je 0xc228
0xc1e5: jump address is 0xc228
Block exists: cmp byte ptr [rsp+0x17],0x0 at address 0xc228 is visited for 1 times

Block exists: mov rsi,qword ptr [rsp+0x8] at address 0xc1e7 is visited for 3 times

0xc260: mov qword ptr [rsp+0x0],rbx
0xc264: jmp 0xc23d
0xc264: jump address is 0xc23d
Block exists: mov rax,qword ptr [rsp+0x0] at address 0xc23d is visited for 1 times

0xc1d7: add rbx,0x1
0xc1db: add rbp,r13
0xc1de: mov r14,qword ptr [r15+rbx*8]
0xc1e2: test r14,r14
0xc1e5: je 0xc228
0xc1e5: jump address is 0xc228
Block exists: cmp byte ptr [rsp+0x17],0x0 at address 0xc228 is visited for 1 times

Block exists: mov rsi,qword ptr [rsp+0x8] at address 0xc1e7 is visited for 3 times

0xc1a0: mov rax,qword ptr [rsp+0x18]
0xc1a5: test rax,rax
0xc1a8: je 0xc250
0xc1a8: jump address is 0xc250
Block exists: mov rdi,qword ptr [rsp+0x0] at address 0xc1ae is visited for 1 times

0xc260: mov qword ptr [rsp+0x0],rbx
0xc264: jmp 0xc23d
0xc264: jump address is 0xc23d
Block exists: mov rax,qword ptr [rsp+0x0] at address 0xc23d is visited for 1 times

0xc1d7: add rbx,0x1
0xc1db: add rbp,r13
0xc1de: mov r14,qword ptr [r15+rbx*8]
0xc1e2: test r14,r14
0xc1e5: je 0xc228
0xc1e5: jump address is 0xc228
Block exists: cmp byte ptr [rsp+0x17],0x0 at address 0xc228 is visited for 1 times

Block exists: mov rsi,qword ptr [rsp+0x8] at address 0xc1e7 is visited for 3 times

0xc260: mov qword ptr [rsp+0x0],rbx
0xc264: jmp 0xc23d
0xc264: jump address is 0xc23d
Block exists: mov rax,qword ptr [rsp+0x0] at address 0xc23d is visited for 1 times

0xc1d7: add rbx,0x1
0xc1db: add rbp,r13
0xc1de: mov r14,qword ptr [r15+rbx*8]
0xc1e2: test r14,r14
0xc1e5: je 0xc228
0xc1e5: jump address is 0xc228
Block exists: cmp byte ptr [rsp+0x17],0x0 at address 0xc228 is visited for 1 times

Block exists: mov rsi,qword ptr [rsp+0x8] at address 0xc1e7 is visited for 3 times

0xc23d: mov rax,qword ptr [rsp+0x0]
0xc241: add rsp,0x28
0xc245: pop rbx
0xc246: pop rbp
0xc247: pop r12
0xc249: pop r13
0xc24b: pop r14
0xc24d: pop r15
0xc24f: ret
0xc24f: the return address is 0x3a30
0x3a30: test eax,eax
0x3a32: js 0x4712
0x3a32: jump address is 0x4712
0x4712: mov rdi,r12
0x4715: call 0x13d60
0x4715: jump address is 0x13d60
0x13d60: lea rcx,[rip+0x20c499]
0x13d67: mov rsi,rdi
0x13d6a: mov rdx,0xffffffffffffffff
0x13d71: xor edi,edi
0x13d73: jmp 0x13420
0x13d73: jump address is 0x13420
0x13420: push r15
0x13422: push r14
0x13424: movsxd r15,edi
0x13427: push r13
0x13429: push r12
0x1342b: mov r14,rdx
0x1342e: push rbp
0x1342f: push rbx
0x13430: mov rbp,rcx
0x13433: sub rsp,0x28
0x13437: mov qword ptr [rsp+0x8],rsi
0x1343c: call 0x32a0
0x1343c: jump address is 0x32a0
0x32a0: jmp qword ptr [rip+0x21ca2a]
Execute the function: __errno_location

0x32a0: the return address is 0x13441
0x13441: mov r13,rax
0x13444: mov eax,dword ptr [rax]
0x13446: test r15d,r15d
0x13449: mov rbx,qword ptr [rip+0x20cdf0]
0x13450: mov dword ptr [rsp+0x18],eax
0x13454: js 0x135c1
0x13454: jump address is 0x135c1
0x1345a: cmp dword ptr [rip+0x20cdd7],r15d
0x13461: jg 0x134c5
0x13461: jump address is 0x134c5
0x13463: cmp r15d,0x7fffffff
0x1346a: je 0x135c6
0x1346a: jump address is 0x135c6
0x13470: lea r12d,[r15+0x1]
0x13474: lea rax,[rip+0x20cdd5]
0x1347b: movsxd rsi,r12d
0x1347e: shl rsi,0x4
0x13482: cmp rbx,rax
0x13485: je 0x135a0
0x13485: jump address is 0x135a0
0x1348b: mov rdi,rbx
0x1348e: call 0x145f0
0x1348e: jump address is 0x145f0
0x145f0: test rsi,rsi
0x145f3: push rbx
0x145f4: mov rbx,rsi
0x145f7: jne 0x145fe
0x145f7: jump address is 0x145fe
0x145fe: mov rsi,rbx
0x14601: call 0x36e0
0x14601: jump address is 0x36e0
0x36e0: jmp qword ptr [rip+0x21c80a]
Execute the function: realloc

0x36e0: the return address is 0x14606
0x14606: test rax,rax
0x14609: jne 0x14610
0x14609: jump address is 0x14610
0x14610: pop rbx
0x14611: ret
0x14611: the return address is 0x13493
0x13493: mov rbx,rax
0x13496: mov qword ptr [rip+0x20cda3],rax
0x1349d: movsxd rdi,dword ptr [rip+0x20cd94]
0x134a4: mov edx,r12d
0x134a7: xor esi,esi
0x134a9: sub edx,edi
0x134ab: shl rdi,0x4
0x134af: movsxd rdx,edx
0x134b2: add rdi,rbx
0x134b5: shl rdx,0x4
0x134b9: call 0x3500
0x134b9: jump address is 0x3500
0x3500: jmp qword ptr [rip+0x21c8fa]
Execute the function: memset

0x3500: the return address is 0x134be
0x134be: mov dword ptr [rip+0x20cd73],r12d
0x134c5: mov eax,dword ptr [rbp+0x4]
0x134c8: shl r15,0x4
0x134cc: sub rsp,0x8
0x134d0: add rbx,r15
0x134d3: lea r15,[rbp+0x8]
0x134d7: mov r8d,dword ptr [rbp]
0x134db: mov r11,qword ptr [rbx]
0x134de: mov r12,qword ptr [rbx+0x8]
0x134e2: mov rcx,r14
0x134e5: or eax,0x1
0x134e8: mov dword ptr [rsp+0x24],eax
0x134ec: push qword ptr [rbp+0x30]
0x134ef: mov r9d,eax
0x134f2: push qword ptr [rbp+0x28]
0x134f5: push r15
0x134f7: mov rsi,r11
0x134fa: mov rdx,qword ptr [rsp+0x28]
0x134ff: mov rdi,r12
0x13502: mov qword ptr [rsp+0x30],r11
0x13507: call 0x121e0
0x13507: jump address is 0x121e0
0x121e0: push r15
0x121e2: push r14
0x121e4: mov r15d,r8d
0x121e7: push r13
0x121e9: push r12
0x121eb: mov r14,rdi
0x121ee: push rbp
0x121ef: push rbx
0x121f0: mov ebx,r9d
0x121f3: mov r13,rsi
0x121f6: mov rbp,rcx
0x121f9: and ebx,0x2
0x121fc: sub rsp,0xb8
0x12203: mov rax,qword ptr [rsp+0xf0]
0x1220b: mov qword ptr [rsp+0x10],rdx
0x12210: mov dword ptr [rsp+0x8],r8d
0x12215: mov dword ptr [rsp+0x78],r9d
0x1221a: mov qword ptr [rsp+0x20],rax
0x1221f: mov rax,qword ptr [rsp+0xf8]
0x12227: mov qword ptr [rsp+0x68],rax
0x1222c: mov rax,qword ptr [rsp+0x100]
0x12234: mov qword ptr [rsp+0x60],rax
0x12239: mov rax,qword ptr fs:0x28
0x12242: mov qword ptr [rsp+0xa8],rax
0x1224a: xor eax,eax
0x1224c: call 0x33f0
0x1224c: jump address is 0x33f0
0x33f0: jmp qword ptr [rip+0x21c982]
Execute the function: __ctype_get_mb_cur_max

0x33f0: the return address is 0x12251
0x12251: cmp r15d,0xa
0x12255: mov qword ptr [rsp+0x58],rax
0x1225a: ja 0x1340f
0x1225a: jump address is 0x1340f
0x12260: lea rcx,[rip+0x8119]
0x12267: mov edx,r15d
0x1226a: movsxd rax,dword ptr [rcx+rdx*4]
0x1226e: add rax,rcx
0x12271: jmp rax
trace back
0x12271: jmp rax
0x1226e: add rax,rcx
0x1226a: movsxd rax,dword ptr [rcx+rdx*4]
0x12267: mov edx,r15d
0x12260: lea rcx,[rip+0x8119]
0x1225a: ja 0x1340f
0x12255: mov qword ptr [rsp+0x58],rax
0x12251: cmp r15d,0xa
0x12271: jump addresses resolved using jump table [0x1301a, 0x12273, 0x13248, 0x13054, 0x12e44, 0x12ea0, 0x12ef5, 0x12f3a, 0x12f74]
0x12271: jmp rax
0x12271: jump address is 0x12f74
0x12f74: cmp dword ptr [rsp+0x8],0xa
0x12f79: je 0x12fd1
0x12f79: jump address is 0x12fd1
0x12f7b: lea rsi,[rip+0x739b]
0x12f82: xor edi,edi
0x12f84: mov edx,0x5
0x12f89: call 0x33e0
0x12f89: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0x12f8e
0x12f8e: mov rcx,rax
0x12f91: mov qword ptr [rsp+0x68],rax
0x12f96: lea rax,[rip+0x7380]
0x12f9d: cmp rcx,rax
0x12fa0: je 0x1333e
0x12fa0: jump address is 0x1333e
0x12fa6: lea rsi,[rip+0x7cf5]
0x12fad: xor edi,edi
0x12faf: mov edx,0x5
0x12fb4: call 0x33e0
0x12fb4: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0x12fb9
0x12fb9: mov rcx,rax
0x12fbc: mov qword ptr [rsp+0x60],rax
0x12fc1: lea rax,[rip+0x7cda]
0x12fc8: cmp rcx,rax
0x12fcb: je 0x13354
0x12fcb: jump address is 0x13354
0x12fd1: xor r15d,r15d
0x12fd4: test ebx,ebx
0x12fd6: je 0x1319d
0x12fd6: jump address is 0x1319d
0x12fdc: test ebx,ebx
0x12fde: mov rbx,qword ptr [rsp+0x60]
0x12fe3: setne byte ptr [rsp+0xf]
0x12fe8: xor r12d,r12d
0x12feb: mov rdi,rbx
0x12fee: call 0x3400
0x12fee: jump address is 0x3400
0x3400: jmp qword ptr [rip+0x21c97a]
Execute the function: strlen

0x3400: the return address is 0x12ff3
0x12ff3: mov qword ptr [rsp+0x48],rbx
0x12ff8: mov qword ptr [rsp+0x18],rax
0x12ffd: mov byte ptr [rsp+0xe],0x1
0x13002: mov byte ptr [rsp+0x7c],0x0
0x13007: mov qword ptr [rsp+0x50],0x0
0x13010: mov byte ptr [rsp+0xd],0x1
0x13015: jmp 0x122b3
0x13015: jump address is 0x122b3
0x122b3: xor r11d,r11d
0x122b6: mov rax,rbp
0x122b9: mov r8d,r12d
0x122bc: mov rbp,r11
0x122bf: mov r11,rax
0x122c2: nop word ptr [rax+rax]
0x122c8: cmp r11,rbp
0x122cb: setne r12b
0x122cf: cmp r11,0xffffffffffffffff
0x122d3: jne 0x122e2
0x122d3: jump address is 0x122e2
0x122d5: mov rax,qword ptr [rsp+0x10]
0x122da: cmp byte ptr [rax+rbp],0x0
0x122de: setne r12b
0x122e2: test r12b,r12b
0x122e5: je 0x12940
0x122e5: jump address is 0x12940
0x122eb: cmp dword ptr [rsp+0x8],0x2
0x122f0: mov rdi,qword ptr [rsp+0x10]
0x122f5: lea r9,[rdi+rbp]
0x122f9: setne al
0x122fc: and al,byte ptr [rsp+0xd]
0x12300: mov r10d,eax
0x12303: je 0x123b0
0x12303: jump address is 0x123b0
0x12309: mov rax,qword ptr [rsp+0x18]
0x1230e: test rax,rax
0x12311: je 0x12740
0x12311: jump address is 0x12740
0x12317: cmp r11,0xffffffffffffffff
0x1231b: lea rbx,[rbp+rax]
0x12320: jne 0x12350
0x12320: jump address is 0x12350
0x12322: cmp rax,0x1
0x12326: jbe 0x12350
0x12326: jump address is 0x12350
0x12328: mov byte ptr [rsp+0x38],r8b
0x1232d: mov byte ptr [rsp+0x30],r10b
0x12332: mov qword ptr [rsp+0x28],r9
0x12337: call 0x3400
0x12337: jump address is 0x3400
0x3400: jmp qword ptr [rip+0x21c97a]
Execute the function: strlen

0x3400: the return address is 0x1233c
0x1233c: movzx r8d,byte ptr [rsp+0x38]
0x12342: movzx r10d,byte ptr [rsp+0x30]
0x12348: mov r11,rax
0x1234b: mov r9,qword ptr [rsp+0x28]
0x12350: cmp rbx,r11
0x12353: mov byte ptr [rsp+0x28],r10b
0x12358: ja 0x12910
0x12358: jump address is 0x12910
0x1235e: mov rdx,qword ptr [rsp+0x18]
0x12363: mov rsi,qword ptr [rsp+0x48]
0x12368: mov rdi,r9
0x1236b: mov qword ptr [rsp+0x40],r11
0x12370: mov byte ptr [rsp+0x38],r8b
0x12375: mov qword ptr [rsp+0x30],r9
0x1237a: call 0x3550
0x1237a: jump address is 0x3550
0x3550: jmp qword ptr [rip+0x21c8d2]
Execute the function: memcmp

0x3550: the return address is 0x1237f
0x1237f: test eax,eax
0x12381: mov r9,qword ptr [rsp+0x30]
0x12386: movzx r8d,byte ptr [rsp+0x38]
0x1238c: mov r11,qword ptr [rsp+0x40]
0x12391: jne 0x12910
0x12391: jump address is 0x12910
Block exists: xor r10d,r10d at address 0x12910 is visited for 1 times

0x12397: cmp byte ptr [rsp+0xf],0x0
0x1239c: movzx r10d,byte ptr [rsp+0x28]
0x123a2: jne 0x13325
0x123a2: jump address is 0x13325
0x123a8: nop dword ptr [rax+rax]
0x123b0: movzx ebx,byte ptr [r9]
0x123b4: cmp bl,0x7e
0x123b7: ja 0x126d8
0x123b7: jump address is 0x126d8
0x123bd: lea rcx,[rip+0x7fe8]
0x123c4: movzx edx,bl
0x123c7: movsxd rax,dword ptr [rcx+rdx*4]
0x123cb: add rax,rcx
0x123ce: jmp rax
trace back
0x123ce: jmp rax
0x123cb: add rax,rcx
0x123c7: movsxd rax,dword ptr [rcx+rdx*4]
0x123c4: movzx edx,bl
0x123bd: lea rcx,[rip+0x7fe8]
0x123b7: ja 0x126d8
0x123b4: cmp bl,0x7e
0x123ce: jump addresses resolved using jump table [0x125f0, 0x126d8, 0x12630, 0x12538, 0x124f8, 0x126c0, 0x126b0, 0x126a0, 0x12690, 0x12680, 0x12670, 0x12640, 0x12618, 0x124d3, 0x124a3, 0x12548, 0x123d3]
0x123ce: jmp rax
0x123ce: jump address is 0x123d3
0x123d3: cmp r11,0x1
0x123d7: setne al
0x123da: cmp r11,0xffffffffffffffff
0x123de: jne 0x123ec
0x123de: jump address is 0x123ec
0x123e0: mov rax,qword ptr [rsp+0x10]
0x123e5: cmp byte ptr [rax+0x1],0x0
0x123e9: setne al
0x123ec: cmp dword ptr [rsp+0x8],0x2
0x123f1: sete dl
0x123f4: test al,al
0x123f6: je 0x12648
0x123f6: jump address is 0x12648
0x123fc: xor r12d,r12d
0x123ff: xor eax,eax
0x12401: nop dword ptr [rax]
0x12408: cmp byte ptr [rsp+0xd],0x1
0x1240d: jne 0x12522
0x1240d: jump address is 0x12522
0x12413: test dl,dl
0x12415: jne 0x12522
0x12415: jump address is 0x12522
Block exists: cmp byte ptr [rsp+0xf],0x0 at address 0x12522 is visited for 1 times

0x1241b: mov rsi,qword ptr [rsp+0x20]
0x12420: test rsi,rsi
0x12423: je 0x12439
0x12423: jump address is 0x12439
0x12425: mov edx,ebx
0x12427: shr dl,0x5
0x1242a: movzx edx,dl
0x1242d: mov edx,dword ptr [rsi+rdx*4]
0x12430: bt edx,ebx
0x12433: jb 0x12583
0x12433: jump address is 0x12583
Block exists: test r10b,r10b at address 0x12439 is visited for 1 times

0x12583: cmp dword ptr [rsp+0x8],0x2
0x12588: sete dl
0x1258b: cmp byte ptr [rsp+0xf],0x0
0x12590: mov eax,edx
0x12592: jne 0x12de8
0x12592: jump address is 0x12de8
0x12598: mov eax,r8d
0x1259b: xor eax,0x1
0x1259e: and al,dl
0x125a0: je 0x125d1
0x125a0: jump address is 0x125d1
0x125a2: cmp r13,r15
0x125a5: jbe 0x125ac
0x125a5: jump address is 0x125ac
0x125a7: mov byte ptr [r14+r15],0x27
0x125ac: lea rdx,[r15+0x1]
0x125b0: cmp r13,rdx
0x125b3: jbe 0x125bb
0x125b3: jump address is 0x125bb
0x125b5: mov byte ptr [r14+r15+0x1],0x24
0x125bb: lea rdx,[r15+0x2]
0x125bf: cmp r13,rdx
0x125c2: jbe 0x125ca
0x125c2: jump address is 0x125ca
0x125c4: mov byte ptr [r14+r15+0x2],0x27
0x125ca: add r15,0x3
0x125ce: mov r8d,eax
0x125d1: cmp r13,r15
0x125d4: jbe 0x125db
0x125d4: jump address is 0x125db
0x125d6: mov byte ptr [r14+r15],0x5c
0x125db: add r15,0x1
0x125df: add rbp,0x1
0x125e3: jmp 0x12470
0x125e3: jump address is 0x12470
0x12470: cmp r15,r13
0x12473: jae 0x12479
0x12473: jump address is 0x12479
0x12475: mov byte ptr [r14+r15],bl
0x12479: movzx edi,byte ptr [rsp+0xe]
0x1247e: add r15,0x1
0x12482: mov eax,0x0
0x12487: test r12b,r12b
0x1248a: cmove edi,eax
0x1248d: mov byte ptr [rsp+0xe],dil
0x12492: jmp 0x122c8
0x12492: jump address is 0x122c8
0x122c8: cmp r11,rbp
0x122cb: setne r12b
0x122cf: cmp r11,0xffffffffffffffff
0x122d3: jne 0x122e2
0x122d3: jump address is 0x122e2
0x122d5: mov rax,qword ptr [rsp+0x10]
0x122da: cmp byte ptr [rax+rbp],0x0
0x122de: setne r12b
0x122e2: test r12b,r12b
0x122e5: je 0x12940
0x122e5: jump address is 0x12940
0x122eb: cmp dword ptr [rsp+0x8],0x2
0x122f0: mov rdi,qword ptr [rsp+0x10]
0x122f5: lea r9,[rdi+rbp]
0x122f9: setne al
0x122fc: and al,byte ptr [rsp+0xd]
0x12300: mov r10d,eax
0x12303: je 0x123b0
0x12303: jump address is 0x123b0
0x12309: mov rax,qword ptr [rsp+0x18]
0x1230e: test rax,rax
0x12311: je 0x12740
0x12311: jump address is 0x12740
0x12317: cmp r11,0xffffffffffffffff
0x1231b: lea rbx,[rbp+rax]
0x12320: jne 0x12350
0x12320: jump address is 0x12350
0x12322: cmp rax,0x1
0x12326: jbe 0x12350
0x12326: jump address is 0x12350
Block exists: cmp rbx,r11 at address 0x12350 is visited for 2 times

0x12328: mov byte ptr [rsp+0x38],r8b
0x1232d: mov byte ptr [rsp+0x30],r10b
0x12332: mov qword ptr [rsp+0x28],r9
0x12337: call 0x3400
0x12337: jump address is 0x3400
0x3400: jmp qword ptr [rip+0x21c97a]
Execute the function: strlen

0x3400: the return address is 0x1233c
0x1233c: movzx r8d,byte ptr [rsp+0x38]
0x12342: movzx r10d,byte ptr [rsp+0x30]
0x12348: mov r11,rax
0x1234b: mov r9,qword ptr [rsp+0x28]
0x12350: cmp rbx,r11
0x12353: mov byte ptr [rsp+0x28],r10b
0x12358: ja 0x12910
0x12358: jump address is 0x12910
0x1235e: mov rdx,qword ptr [rsp+0x18]
0x12363: mov rsi,qword ptr [rsp+0x48]
0x12368: mov rdi,r9
0x1236b: mov qword ptr [rsp+0x40],r11
0x12370: mov byte ptr [rsp+0x38],r8b
0x12375: mov qword ptr [rsp+0x30],r9
0x1237a: call 0x3550
0x1237a: jump address is 0x3550
0x3550: jmp qword ptr [rip+0x21c8d2]
Execute the function: memcmp

0x3550: the return address is 0x1237f
0x1237f: test eax,eax
0x12381: mov r9,qword ptr [rsp+0x30]
0x12386: movzx r8d,byte ptr [rsp+0x38]
0x1238c: mov r11,qword ptr [rsp+0x40]
0x12391: jne 0x12910
0x12391: jump address is 0x12910
Block exists: xor r10d,r10d at address 0x12910 is visited for 2 times

0x12397: cmp byte ptr [rsp+0xf],0x0
0x1239c: movzx r10d,byte ptr [rsp+0x28]
0x123a2: jne 0x13325
0x123a2: jump address is 0x13325
0x123a8: nop dword ptr [rax+rax]
0x123b0: movzx ebx,byte ptr [r9]
0x123b4: cmp bl,0x7e
0x123b7: ja 0x126d8
0x123b7: jump address is 0x126d8
0x123bd: lea rcx,[rip+0x7fe8]
0x123c4: movzx edx,bl
0x123c7: movsxd rax,dword ptr [rcx+rdx*4]
0x123cb: add rax,rcx
0x123ce: jmp rax
trace back
0x123ce: jmp rax
0x123ce: jump address is 0x123d3
0x123d3: cmp r11,0x1
0x123d7: setne al
0x123da: cmp r11,0xffffffffffffffff
0x123de: jne 0x123ec
0x123de: jump address is 0x123ec
0x123e0: mov rax,qword ptr [rsp+0x10]
0x123e5: cmp byte ptr [rax+0x1],0x0
0x123e9: setne al
0x123ec: cmp dword ptr [rsp+0x8],0x2
0x123f1: sete dl
0x123f4: test al,al
0x123f6: je 0x12648
0x123f6: jump address is 0x12648
0x123fc: xor r12d,r12d
0x123ff: xor eax,eax
0x12401: nop dword ptr [rax]
0x12408: cmp byte ptr [rsp+0xd],0x1
0x1240d: jne 0x12522
0x1240d: jump address is 0x12522
0x12413: test dl,dl
0x12415: jne 0x12522
0x12415: jump address is 0x12522
Block exists: cmp byte ptr [rsp+0xf],0x0 at address 0x12522 is visited for 2 times

0x1241b: mov rsi,qword ptr [rsp+0x20]
0x12420: test rsi,rsi
0x12423: je 0x12439
0x12423: jump address is 0x12439
0x12425: mov edx,ebx
0x12427: shr dl,0x5
0x1242a: movzx edx,dl
0x1242d: mov edx,dword ptr [rsi+rdx*4]
0x12430: bt edx,ebx
0x12433: jb 0x12583
0x12433: jump address is 0x12583
Block exists: test r10b,r10b at address 0x12439 is visited for 2 times

0x12583: cmp dword ptr [rsp+0x8],0x2
0x12588: sete dl
0x1258b: cmp byte ptr [rsp+0xf],0x0
0x12590: mov eax,edx
0x12592: jne 0x12de8
0x12592: jump address is 0x12de8
0x12598: mov eax,r8d
0x1259b: xor eax,0x1
0x1259e: and al,dl
0x125a0: je 0x125d1
0x125a0: jump address is 0x125d1
0x125a2: cmp r13,r15
0x125a5: jbe 0x125ac
0x125a5: jump address is 0x125ac
0x125a7: mov byte ptr [r14+r15],0x27
0x125ac: lea rdx,[r15+0x1]
0x125b0: cmp r13,rdx
0x125b3: jbe 0x125bb
0x125b3: jump address is 0x125bb
0x125b5: mov byte ptr [r14+r15+0x1],0x24
0x125bb: lea rdx,[r15+0x2]
0x125bf: cmp r13,rdx
0x125c2: jbe 0x125ca
0x125c2: jump address is 0x125ca
0x125c4: mov byte ptr [r14+r15+0x2],0x27
0x125ca: add r15,0x3
0x125ce: mov r8d,eax
0x125d1: cmp r13,r15
0x125d4: jbe 0x125db
0x125d4: jump address is 0x125db
0x125d6: mov byte ptr [r14+r15],0x5c
0x125db: add r15,0x1
0x125df: add rbp,0x1
0x125e3: jmp 0x12470
0x125e3: jump address is 0x12470
0x12470: cmp r15,r13
0x12473: jae 0x12479
0x12473: jump address is 0x12479
0x12475: mov byte ptr [r14+r15],bl
0x12479: movzx edi,byte ptr [rsp+0xe]
0x1247e: add r15,0x1
0x12482: mov eax,0x0
0x12487: test r12b,r12b
0x1248a: cmove edi,eax
0x1248d: mov byte ptr [rsp+0xe],dil
0x12492: jmp 0x122c8
0x12492: jump address is 0x122c8
Block exists: cmp r11,rbp at address 0x122c8 is visited for 2 times

0x12479: movzx edi,byte ptr [rsp+0xe]
0x1247e: add r15,0x1
0x12482: mov eax,0x0
0x12487: test r12b,r12b
0x1248a: cmove edi,eax
0x1248d: mov byte ptr [rsp+0xe],dil
0x12492: jmp 0x122c8
0x12492: jump address is 0x122c8
Block exists: cmp r11,rbp at address 0x122c8 is visited for 2 times

0x125db: add r15,0x1
0x125df: add rbp,0x1
0x125e3: jmp 0x12470
0x125e3: jump address is 0x12470
Block exists: cmp r15,r13 at address 0x12470 is visited for 2 times

0x125ca: add r15,0x3
0x125ce: mov r8d,eax
0x125d1: cmp r13,r15
0x125d4: jbe 0x125db
0x125d4: jump address is 0x125db
Block exists: add r15,0x1 at address 0x125db is visited for 2 times

Block exists: mov byte ptr [r14+r15],0x5c at address 0x125d6 is visited for 2 times

0x125bb: lea rdx,[r15+0x2]
0x125bf: cmp r13,rdx
0x125c2: jbe 0x125ca
0x125c2: jump address is 0x125ca
Block exists: add r15,0x3 at address 0x125ca is visited for 2 times

Block exists: mov byte ptr [r14+r15+0x2],0x27 at address 0x125c4 is visited for 2 times

0x125ac: lea rdx,[r15+0x1]
0x125b0: cmp r13,rdx
0x125b3: jbe 0x125bb
0x125b3: jump address is 0x125bb
Block exists: lea rdx,[r15+0x2] at address 0x125bb is visited for 2 times

Block exists: mov byte ptr [r14+r15+0x1],0x24 at address 0x125b5 is visited for 2 times

0x125d1: cmp r13,r15
0x125d4: jbe 0x125db
0x125d4: jump address is 0x125db
Block exists: add r15,0x1 at address 0x125db is visited for 2 times

Block exists: mov byte ptr [r14+r15],0x5c at address 0x125d6 is visited for 2 times

0x12de8: mov rbp,r11
0x12deb: jmp 0x12d69
0x12deb: jump address is 0x12d69
0x12d69: cmp byte ptr [rsp+0xd],0x0
0x12d6e: je 0x12d80
0x12d6e: jump address is 0x12d80
0x12d70: test al,al
0x12d72: mov eax,0x4
0x12d77: cmove eax,dword ptr [rsp+0x8]
0x12d7c: mov dword ptr [rsp+0x8],eax
0x12d80: sub rsp,0x8
0x12d84: mov rcx,rbp
0x12d87: mov rsi,r13
0x12d8a: push qword ptr [rsp+0x68]
0x12d8e: push qword ptr [rsp+0x78]
0x12d92: mov rdi,r14
0x12d95: push 0x0
0x12d97: mov r9d,dword ptr [rsp+0x98]
0x12d9f: mov r8d,dword ptr [rsp+0x28]
0x12da4: mov rdx,qword ptr [rsp+0x30]
0x12da9: and r9d,0xfffffffd
0x12dad: call 0x121e0
0x12dad: jump address is 0x121e0
0x121e0: push r15
0x121e2: push r14
0x121e4: mov r15d,r8d
0x121e7: push r13
0x121e9: push r12
0x121eb: mov r14,rdi
0x121ee: push rbp
0x121ef: push rbx
0x121f0: mov ebx,r9d
0x121f3: mov r13,rsi
0x121f6: mov rbp,rcx
0x121f9: and ebx,0x2
0x121fc: sub rsp,0xb8
0x12203: mov rax,qword ptr [rsp+0xf0]
0x1220b: mov qword ptr [rsp+0x10],rdx
0x12210: mov dword ptr [rsp+0x8],r8d
0x12215: mov dword ptr [rsp+0x78],r9d
0x1221a: mov qword ptr [rsp+0x20],rax
0x1221f: mov rax,qword ptr [rsp+0xf8]
0x12227: mov qword ptr [rsp+0x68],rax
0x1222c: mov rax,qword ptr [rsp+0x100]
0x12234: mov qword ptr [rsp+0x60],rax
0x12239: mov rax,qword ptr fs:0x28
0x12242: mov qword ptr [rsp+0xa8],rax
0x1224a: xor eax,eax
0x1224c: call 0x33f0
0x1224c: jump address is 0x33f0
0x33f0: jmp qword ptr [rip+0x21c982]
Execute the function: __ctype_get_mb_cur_max

0x33f0: the return address is 0x12251
0x12251: cmp r15d,0xa
0x12255: mov qword ptr [rsp+0x58],rax
0x1225a: ja 0x1340f
0x1225a: jump address is 0x1340f
0x12260: lea rcx,[rip+0x8119]
0x12267: mov edx,r15d
0x1226a: movsxd rax,dword ptr [rcx+rdx*4]
0x1226e: add rax,rcx
0x12271: jmp rax
trace back
0x12271: jmp rax
0x12271: jump address is 0x12f74
Block exists: cmp dword ptr [rsp+0x8],0xa at address 0x12f74 is visited for 1 times

0x12271: jmp rax
0x12271: jump address is 0x12f3a
0x12f3a: mov byte ptr [rsp+0xe],0x1
0x12f3f: mov byte ptr [rsp+0x7c],0x0
0x12f44: xor r12d,r12d
0x12f47: mov qword ptr [rsp+0x50],0x0
0x12f50: mov byte ptr [rsp+0xf],0x0
0x12f55: xor r15d,r15d
0x12f58: mov byte ptr [rsp+0xd],0x1
0x12f5d: mov qword ptr [rsp+0x18],0x0
0x12f66: mov qword ptr [rsp+0x48],0x0
0x12f6f: jmp 0x122b3
0x12f6f: jump address is 0x122b3
0x122b3: xor r11d,r11d
0x122b6: mov rax,rbp
0x122b9: mov r8d,r12d
0x122bc: mov rbp,r11
0x122bf: mov r11,rax
0x122c2: nop word ptr [rax+rax]
0x122c8: cmp r11,rbp
0x122cb: setne r12b
0x122cf: cmp r11,0xffffffffffffffff
0x122d3: jne 0x122e2
0x122d3: jump address is 0x122e2
Block exists: test r12b,r12b at address 0x122e2 is visited for 2 times

Block exists: mov rax,qword ptr [rsp+0x10] at address 0x122d5 is visited for 2 times

0x12271: jmp rax
0x12271: jump address is 0x12ef5
0x12ef5: lea rax,[rip+0x741f]
0x12efc: mov byte ptr [rsp+0xe],0x1
0x12f01: mov byte ptr [rsp+0x7c],0x0
0x12f06: xor r12d,r12d
0x12f09: mov qword ptr [rsp+0x50],0x0
0x12f12: mov byte ptr [rsp+0xf],0x1
0x12f17: mov byte ptr [rsp+0xd],0x1
0x12f1c: mov qword ptr [rsp+0x18],0x1
0x12f25: xor r15d,r15d
0x12f28: mov qword ptr [rsp+0x48],rax
0x12f2d: mov dword ptr [rsp+0x8],0x5
0x12f35: jmp 0x122b3
0x12f35: jump address is 0x122b3
0x122b3: xor r11d,r11d
0x122b6: mov rax,rbp
0x122b9: mov r8d,r12d
0x122bc: mov rbp,r11
0x122bf: mov r11,rax
0x122c2: nop word ptr [rax+rax]
0x122c8: cmp r11,rbp
0x122cb: setne r12b
0x122cf: cmp r11,0xffffffffffffffff
0x122d3: jne 0x122e2
0x122d3: jump address is 0x122e2
Block exists: test r12b,r12b at address 0x122e2 is visited for 2 times

Block exists: mov rax,qword ptr [rsp+0x10] at address 0x122d5 is visited for 2 times

0x12271: jmp rax
0x12271: jump address is 0x12ea0
0x12ea0: test ebx,ebx
0x12ea2: jne 0x1329d
0x12ea2: jump address is 0x1329d
0x12ea8: test r13,r13
0x12eab: je 0x130d6
0x12eab: jump address is 0x130d6
0x12eb1: mov byte ptr [r14],0x22
0x12eb5: mov byte ptr [rsp+0xe],0x1
0x12eba: xor r12d,r12d
0x12ebd: mov byte ptr [rsp+0x7c],0x0
0x12ec2: mov qword ptr [rsp+0x50],0x0
0x12ecb: lea rax,[rip+0x7449]
0x12ed2: mov byte ptr [rsp+0xf],0x0
0x12ed7: mov byte ptr [rsp+0xd],0x1
0x12edc: mov qword ptr [rsp+0x18],0x1
0x12ee5: mov r15d,0x1
0x12eeb: mov qword ptr [rsp+0x48],rax
0x12ef0: jmp 0x122b3
0x12ef0: jump address is 0x122b3
0x122b3: xor r11d,r11d
0x122b6: mov rax,rbp
0x122b9: mov r8d,r12d
0x122bc: mov rbp,r11
0x122bf: mov r11,rax
0x122c2: nop word ptr [rax+rax]
0x122c8: cmp r11,rbp
0x122cb: setne r12b
0x122cf: cmp r11,0xffffffffffffffff
0x122d3: jne 0x122e2
0x122d3: jump address is 0x122e2
Block exists: test r12b,r12b at address 0x122e2 is visited for 2 times

Block exists: mov rax,qword ptr [rsp+0x10] at address 0x122d5 is visited for 2 times

0x130d6: mov qword ptr [rsp+0x50],0x0
0x130df: mov byte ptr [rsp+0xe],0x1
0x130e4: xor r12d,r12d
0x130e7: mov byte ptr [rsp+0x7c],0x0
0x130ec: jmp 0x12ecb
0x130ec: jump address is 0x12ecb
Block exists: lea rax,[rip+0x7449] at address 0x12ecb is visited for 1 times

0x1329d: lea rax,[rip+0x7077]
0x132a4: mov byte ptr [rsp+0xe],0x1
0x132a9: mov byte ptr [rsp+0x7c],0x0
0x132ae: xor r12d,r12d
0x132b1: mov qword ptr [rsp+0x50],0x0
0x132ba: mov byte ptr [rsp+0xf],0x1
0x132bf: mov byte ptr [rsp+0xd],0x1
0x132c4: mov qword ptr [rsp+0x18],0x1
0x132cd: xor r15d,r15d
0x132d0: mov qword ptr [rsp+0x48],rax
0x132d5: jmp 0x122b3
0x132d5: jump address is 0x122b3
Block exists: xor r11d,r11d at address 0x122b3 is visited for 4 times

0x12271: jmp rax
0x12271: jump address is 0x12e44
0x12e44: test ebx,ebx
0x12e46: jne 0x12273
0x12e46: jump address is 0x12273
0x12e4c: mov byte ptr [rsp+0xd],0x1
0x12e51: test r13,r13
0x12e54: jne 0x133ea
0x12e54: jump address is 0x133ea
0x12e5a: lea rax,[rip+0x7e41]
0x12e61: mov qword ptr [rsp+0x50],0x0
0x12e6a: mov byte ptr [rsp+0xe],0x1
0x12e6f: mov byte ptr [rsp+0x7c],0x0
0x12e74: xor r12d,r12d
0x12e77: mov byte ptr [rsp+0xf],0x0
0x12e7c: mov qword ptr [rsp+0x18],0x1
0x12e85: mov qword ptr [rsp+0x48],rax
0x12e8a: mov r15d,0x1
0x12e90: mov dword ptr [rsp+0x8],0x2
0x12e98: jmp 0x122b3
0x12e98: jump address is 0x122b3
0x122b3: xor r11d,r11d
0x122b6: mov rax,rbp
0x122b9: mov r8d,r12d
0x122bc: mov rbp,r11
0x122bf: mov r11,rax
0x122c2: nop word ptr [rax+rax]
0x122c8: cmp r11,rbp
0x122cb: setne r12b
0x122cf: cmp r11,0xffffffffffffffff
0x122d3: jne 0x122e2
0x122d3: jump address is 0x122e2
Block exists: test r12b,r12b at address 0x122e2 is visited for 2 times

Block exists: mov rax,qword ptr [rsp+0x10] at address 0x122d5 is visited for 2 times

0x133ea: mov byte ptr [rsp+0xe],0x1
0x133ef: xor eax,eax
0x133f1: xor r12d,r12d
0x133f4: mov qword ptr [rsp+0x50],0x0
0x133fd: jmp 0x129a4
0x133fd: jump address is 0x129a4
0x129a4: lea rbx,[rip+0x82f7]
0x129ab: mov byte ptr [r14],0x27
0x129af: mov dword ptr [rsp+0x8],0x2
0x129b7: mov r15d,0x1
0x129bd: mov qword ptr [rsp+0x18],0x1
0x129c6: mov byte ptr [rsp+0xf],0x0
0x129cb: mov qword ptr [rsp+0x48],rbx
0x129d0: mov byte ptr [rsp+0x7c],al
0x129d4: jmp 0x122b3
0x129d4: jump address is 0x122b3
0x122b3: xor r11d,r11d
0x122b6: mov rax,rbp
0x122b9: mov r8d,r12d
0x122bc: mov rbp,r11
0x122bf: mov r11,rax
0x122c2: nop word ptr [rax+rax]
0x122c8: cmp r11,rbp
0x122cb: setne r12b
0x122cf: cmp r11,0xffffffffffffffff
0x122d3: jne 0x122e2
0x122d3: jump address is 0x122e2
Block exists: test r12b,r12b at address 0x122e2 is visited for 2 times

Block exists: mov rax,qword ptr [rsp+0x10] at address 0x122d5 is visited for 2 times

0x12273: mov byte ptr [rsp+0xe],0x1
0x12278: mov byte ptr [rsp+0x7c],0x0
0x1227d: xor r12d,r12d
0x12280: mov qword ptr [rsp+0x50],0x0
0x12289: mov byte ptr [rsp+0xf],0x1
0x1228e: mov byte ptr [rsp+0xd],0x0
0x12293: lea rax,[rip+0x8a08]
0x1229a: mov qword ptr [rsp+0x18],0x1
0x122a3: xor r15d,r15d
0x122a6: mov dword ptr [rsp+0x8],0x2
0x122ae: mov qword ptr [rsp+0x48],rax
0x122b3: xor r11d,r11d
0x122b6: mov rax,rbp
0x122b9: mov r8d,r12d
0x122bc: mov rbp,r11
0x122bf: mov r11,rax
0x122c2: nop word ptr [rax+rax]
0x122c8: cmp r11,rbp
0x122cb: setne r12b
0x122cf: cmp r11,0xffffffffffffffff
0x122d3: jne 0x122e2
0x122d3: jump address is 0x122e2
Block exists: test r12b,r12b at address 0x122e2 is visited for 2 times

Block exists: mov rax,qword ptr [rsp+0x10] at address 0x122d5 is visited for 2 times

0x12271: jmp rax
0x12271: jump address is 0x13054
0x13054: mov byte ptr [rsp+0xe],0x1
0x13059: mov byte ptr [rsp+0x7c],0x0
0x1305e: xor r12d,r12d
0x13061: mov qword ptr [rsp+0x50],0x0
0x1306a: mov byte ptr [rsp+0xf],0x1
0x1306f: mov byte ptr [rsp+0xd],0x1
0x13074: jmp 0x12293
0x13074: jump address is 0x12293
0x12293: lea rax,[rip+0x8a08]
0x1229a: mov qword ptr [rsp+0x18],0x1
0x122a3: xor r15d,r15d
0x122a6: mov dword ptr [rsp+0x8],0x2
0x122ae: mov qword ptr [rsp+0x48],rax
0x122b3: xor r11d,r11d
0x122b6: mov rax,rbp
0x122b9: mov r8d,r12d
0x122bc: mov rbp,r11
0x122bf: mov r11,rax
0x122c2: nop word ptr [rax+rax]
0x122c8: cmp r11,rbp
0x122cb: setne r12b
0x122cf: cmp r11,0xffffffffffffffff
0x122d3: jne 0x122e2
0x122d3: jump address is 0x122e2
Block exists: test r12b,r12b at address 0x122e2 is visited for 2 times

Block exists: mov rax,qword ptr [rsp+0x10] at address 0x122d5 is visited for 2 times

0x12271: jmp rax
0x12271: jump address is 0x13248
0x13248: test ebx,ebx
0x1324a: je 0x133d8
0x1324a: jump address is 0x133d8
0x13250: lea rax,[rip+0x7a4b]
0x13257: mov byte ptr [rsp+0xe],0x1
0x1325c: mov byte ptr [rsp+0x7c],0x0
0x13261: xor r12d,r12d
0x13264: mov qword ptr [rsp+0x50],0x0
0x1326d: mov byte ptr [rsp+0xf],0x1
0x13272: mov byte ptr [rsp+0xd],0x0
0x13277: mov qword ptr [rsp+0x18],0x1
0x13280: xor r15d,r15d
0x13283: mov qword ptr [rsp+0x48],rax
0x13288: jmp 0x122b3
0x13288: jump address is 0x122b3
0x122b3: xor r11d,r11d
0x122b6: mov rax,rbp
0x122b9: mov r8d,r12d
0x122bc: mov rbp,r11
0x122bf: mov r11,rax
0x122c2: nop word ptr [rax+rax]
0x122c8: cmp r11,rbp
0x122cb: setne r12b
0x122cf: cmp r11,0xffffffffffffffff
0x122d3: jne 0x122e2
0x122d3: jump address is 0x122e2
Block exists: test r12b,r12b at address 0x122e2 is visited for 2 times

Block exists: mov rax,qword ptr [rsp+0x10] at address 0x122d5 is visited for 2 times

0x133d8: mov byte ptr [rsp+0xd],0x0
0x133dd: jmp 0x12e51
0x133dd: jump address is 0x12e51
0x12e51: test r13,r13
0x12e54: jne 0x133ea
0x12e54: jump address is 0x133ea
0x12e5a: lea rax,[rip+0x7e41]
0x12e61: mov qword ptr [rsp+0x50],0x0
0x12e6a: mov byte ptr [rsp+0xe],0x1
0x12e6f: mov byte ptr [rsp+0x7c],0x0
0x12e74: xor r12d,r12d
0x12e77: mov byte ptr [rsp+0xf],0x0
0x12e7c: mov qword ptr [rsp+0x18],0x1
0x12e85: mov qword ptr [rsp+0x48],rax
0x12e8a: mov r15d,0x1
0x12e90: mov dword ptr [rsp+0x8],0x2
0x12e98: jmp 0x122b3
0x12e98: jump address is 0x122b3
0x122b3: xor r11d,r11d
0x122b6: mov rax,rbp
0x122b9: mov r8d,r12d
0x122bc: mov rbp,r11
0x122bf: mov r11,rax
0x122c2: nop word ptr [rax+rax]
0x122c8: cmp r11,rbp
0x122cb: setne r12b
0x122cf: cmp r11,0xffffffffffffffff
0x122d3: jne 0x122e2
0x122d3: jump address is 0x122e2
Block exists: test r12b,r12b at address 0x122e2 is visited for 2 times

Block exists: mov rax,qword ptr [rsp+0x10] at address 0x122d5 is visited for 2 times

0x133ea: mov byte ptr [rsp+0xe],0x1
0x133ef: xor eax,eax
0x133f1: xor r12d,r12d
0x133f4: mov qword ptr [rsp+0x50],0x0
0x133fd: jmp 0x129a4
0x133fd: jump address is 0x129a4
0x129a4: lea rbx,[rip+0x82f7]
0x129ab: mov byte ptr [r14],0x27
0x129af: mov dword ptr [rsp+0x8],0x2
0x129b7: mov r15d,0x1
0x129bd: mov qword ptr [rsp+0x18],0x1
0x129c6: mov byte ptr [rsp+0xf],0x0
0x129cb: mov qword ptr [rsp+0x48],rbx
0x129d0: mov byte ptr [rsp+0x7c],al
0x129d4: jmp 0x122b3
0x129d4: jump address is 0x122b3
0x122b3: xor r11d,r11d
0x122b6: mov rax,rbp
0x122b9: mov r8d,r12d
0x122bc: mov rbp,r11
0x122bf: mov r11,rax
0x122c2: nop word ptr [rax+rax]
0x122c8: cmp r11,rbp
0x122cb: setne r12b
0x122cf: cmp r11,0xffffffffffffffff
0x122d3: jne 0x122e2
0x122d3: jump address is 0x122e2
Block exists: test r12b,r12b at address 0x122e2 is visited for 2 times

Block exists: mov rax,qword ptr [rsp+0x10] at address 0x122d5 is visited for 2 times

0x12271: jmp rax
0x12271: jump address is 0x12273
0x12273: mov byte ptr [rsp+0xe],0x1
0x12278: mov byte ptr [rsp+0x7c],0x0
0x1227d: xor r12d,r12d
0x12280: mov qword ptr [rsp+0x50],0x0
0x12289: mov byte ptr [rsp+0xf],0x1
0x1228e: mov byte ptr [rsp+0xd],0x0
0x12293: lea rax,[rip+0x8a08]
0x1229a: mov qword ptr [rsp+0x18],0x1
0x122a3: xor r15d,r15d
0x122a6: mov dword ptr [rsp+0x8],0x2
0x122ae: mov qword ptr [rsp+0x48],rax
0x122b3: xor r11d,r11d
0x122b6: mov rax,rbp
0x122b9: mov r8d,r12d
0x122bc: mov rbp,r11
0x122bf: mov r11,rax
0x122c2: nop word ptr [rax+rax]
0x122c8: cmp r11,rbp
0x122cb: setne r12b
0x122cf: cmp r11,0xffffffffffffffff
0x122d3: jne 0x122e2
0x122d3: jump address is 0x122e2
Block exists: test r12b,r12b at address 0x122e2 is visited for 2 times

Block exists: mov rax,qword ptr [rsp+0x10] at address 0x122d5 is visited for 2 times

0x12271: jmp rax
0x12271: jump address is 0x1301a
0x1301a: mov byte ptr [rsp+0xe],0x1
0x1301f: mov byte ptr [rsp+0x7c],0x0
0x13024: xor r12d,r12d
0x13027: mov qword ptr [rsp+0x50],0x0
0x13030: mov byte ptr [rsp+0xf],0x0
0x13035: xor r15d,r15d
0x13038: mov byte ptr [rsp+0xd],0x0
0x1303d: mov qword ptr [rsp+0x18],0x0
0x13046: mov qword ptr [rsp+0x48],0x0
0x1304f: jmp 0x122b3
0x1304f: jump address is 0x122b3
0x122b3: xor r11d,r11d
0x122b6: mov rax,rbp
0x122b9: mov r8d,r12d
0x122bc: mov rbp,r11
0x122bf: mov r11,rax
0x122c2: nop word ptr [rax+rax]
0x122c8: cmp r11,rbp
0x122cb: setne r12b
0x122cf: cmp r11,0xffffffffffffffff
0x122d3: jne 0x122e2
0x122d3: jump address is 0x122e2
Block exists: test r12b,r12b at address 0x122e2 is visited for 2 times

Block exists: mov rax,qword ptr [rsp+0x10] at address 0x122d5 is visited for 2 times

0x1340f: call 0x3290
0x1340f: jump address is 0x3290
0x3290: jmp qword ptr [rip+0x21ca32]
Execute the function: abort

0x12d77: cmove eax,dword ptr [rsp+0x8]
0x12d7c: mov dword ptr [rsp+0x8],eax
0x12d80: sub rsp,0x8
0x12d84: mov rcx,rbp
0x12d87: mov rsi,r13
0x12d8a: push qword ptr [rsp+0x68]
0x12d8e: push qword ptr [rsp+0x78]
0x12d92: mov rdi,r14
0x12d95: push 0x0
0x12d97: mov r9d,dword ptr [rsp+0x98]
0x12d9f: mov r8d,dword ptr [rsp+0x28]
0x12da4: mov rdx,qword ptr [rsp+0x30]
0x12da9: and r9d,0xfffffffd
0x12dad: call 0x121e0
0x12dad: jump address is 0x121e0
0x121e0: push r15
0x121e2: push r14
0x121e4: mov r15d,r8d
0x121e7: push r13
0x121e9: push r12
0x121eb: mov r14,rdi
0x121ee: push rbp
0x121ef: push rbx
0x121f0: mov ebx,r9d
0x121f3: mov r13,rsi
0x121f6: mov rbp,rcx
0x121f9: and ebx,0x2
0x121fc: sub rsp,0xb8
0x12203: mov rax,qword ptr [rsp+0xf0]
0x1220b: mov qword ptr [rsp+0x10],rdx
0x12210: mov dword ptr [rsp+0x8],r8d
0x12215: mov dword ptr [rsp+0x78],r9d
0x1221a: mov qword ptr [rsp+0x20],rax
0x1221f: mov rax,qword ptr [rsp+0xf8]
0x12227: mov qword ptr [rsp+0x68],rax
0x1222c: mov rax,qword ptr [rsp+0x100]
0x12234: mov qword ptr [rsp+0x60],rax
0x12239: mov rax,qword ptr fs:0x28
0x12242: mov qword ptr [rsp+0xa8],rax
0x1224a: xor eax,eax
0x1224c: call 0x33f0
0x1224c: jump address is 0x33f0
0x33f0: jmp qword ptr [rip+0x21c982]
Execute the function: __ctype_get_mb_cur_max

0x33f0: the return address is 0x12251
Block exists: cmp r15d,0xa at address 0x12251 is visited for 2 times

0x12d80: sub rsp,0x8
0x12d84: mov rcx,rbp
0x12d87: mov rsi,r13
0x12d8a: push qword ptr [rsp+0x68]
0x12d8e: push qword ptr [rsp+0x78]
0x12d92: mov rdi,r14
0x12d95: push 0x0
0x12d97: mov r9d,dword ptr [rsp+0x98]
0x12d9f: mov r8d,dword ptr [rsp+0x28]
0x12da4: mov rdx,qword ptr [rsp+0x30]
0x12da9: and r9d,0xfffffffd
0x12dad: call 0x121e0
0x12dad: jump address is 0x121e0
Block exists: push r15 at address 0x121e0 is visited for 3 times

0x12439: test r10b,r10b
0x1243c: jne 0x12583
0x1243c: jump address is 0x12583
Block exists: cmp dword ptr [rsp+0x8],0x2 at address 0x12583 is visited for 2 times

0x12442: xor eax,0x1
0x12445: add rbp,0x1
0x12449: and eax,r8d
0x1244c: test al,al
0x1244e: je 0x12470
0x1244e: jump address is 0x12470
Block exists: cmp r15,r13 at address 0x12470 is visited for 2 times

0x12450: cmp r13,r15
0x12453: jbe 0x1245a
0x12453: jump address is 0x1245a
0x12455: mov byte ptr [r14+r15],0x27
0x1245a: lea rax,[r15+0x1]
0x1245e: cmp r13,rax
0x12461: jbe 0x12469
0x12461: jump address is 0x12469
0x12463: mov byte ptr [r14+r15+0x1],0x27
0x12469: add r15,0x2
0x1246d: xor r8d,r8d
0x12470: cmp r15,r13
0x12473: jae 0x12479
0x12473: jump address is 0x12479
Block exists: movzx edi,byte ptr [rsp+0xe] at address 0x12479 is visited for 2 times

Block exists: mov byte ptr [r14+r15],bl at address 0x12475 is visited for 2 times

0x12469: add r15,0x2
0x1246d: xor r8d,r8d
0x12470: cmp r15,r13
0x12473: jae 0x12479
0x12473: jump address is 0x12479
Block exists: movzx edi,byte ptr [rsp+0xe] at address 0x12479 is visited for 2 times

Block exists: mov byte ptr [r14+r15],bl at address 0x12475 is visited for 2 times

0x1245a: lea rax,[r15+0x1]
0x1245e: cmp r13,rax
0x12461: jbe 0x12469
0x12461: jump address is 0x12469
Block exists: add r15,0x2 at address 0x12469 is visited for 1 times

Block exists: mov byte ptr [r14+r15+0x1],0x27 at address 0x12463 is visited for 1 times

0x12522: cmp byte ptr [rsp+0xf],0x0
0x12527: jne 0x1241b
0x12527: jump address is 0x1241b
Block exists: mov rsi,qword ptr [rsp+0x20] at address 0x1241b is visited for 2 times

0x1252d: jmp 0x12439
0x1252d: jump address is 0x12439
Block exists: test r10b,r10b at address 0x12439 is visited for 2 times

0x12648: test rbp,rbp
0x1264b: jne 0x123fc
0x1264b: jump address is 0x123fc
Block exists: xor r12d,r12d at address 0x123fc is visited for 2 times

0x123ec: cmp dword ptr [rsp+0x8],0x2
0x123f1: sete dl
0x123f4: test al,al
0x123f6: je 0x12648
0x123f6: jump address is 0x12648
Block exists: test rbp,rbp at address 0x12648 is visited for 2 times

Block exists: xor r12d,r12d at address 0x123fc is visited for 2 times

0x123ce: jmp rax
0x123ce: jump address is 0x12548
0x12548: cmp dword ptr [rsp+0x8],0x2
0x1254d: je 0x12920
0x1254d: jump address is 0x12920
0x12553: cmp byte ptr [rsp+0xd],0x0
0x12558: je 0x12770
0x12558: jump address is 0x12770
0x1255e: cmp byte ptr [rsp+0xf],0x0
0x12563: je 0x12770
0x12563: jump address is 0x12770
Block exists: mov edx,0x5c at address 0x12770 is visited for 1 times

0x12569: cmp qword ptr [rsp+0x18],0x0
0x1256f: jne 0x1292b
0x1256f: jump address is 0x1292b
0x12575: mov ebx,0x5c
0x1257a: nop word ptr [rax+rax]
0x12580: xor r12d,r12d
0x12583: cmp dword ptr [rsp+0x8],0x2
0x12588: sete dl
0x1258b: cmp byte ptr [rsp+0xf],0x0
0x12590: mov eax,edx
0x12592: jne 0x12de8
0x12592: jump address is 0x12de8
Block exists: mov rbp,r11 at address 0x12de8 is visited for 2 times

Block exists: mov eax,r8d at address 0x12598 is visited for 2 times

0x1292b: add rbp,0x1
0x1292f: mov eax,r8d
0x12932: xor r12d,r12d
0x12935: mov ebx,0x5c
0x1293a: jmp 0x1244c
0x1293a: jump address is 0x1244c
Block exists: test al,al at address 0x1244c is visited for 1 times

0x12770: mov edx,0x5c
0x12775: mov ebx,0x5c
0x1277a: jmp 0x12514
0x1277a: jump address is 0x12514
0x12514: cmp byte ptr [rsp+0xd],0x0
0x12519: jne 0x12580
0x12519: jump address is 0x12580
Block exists: xor r12d,r12d at address 0x12580 is visited for 1 times

0x1251b: mov ebx,edx
0x1251d: xor r12d,r12d
0x12520: xor eax,eax
0x12522: cmp byte ptr [rsp+0xf],0x0
0x12527: jne 0x1241b
0x12527: jump address is 0x1241b
Block exists: mov rsi,qword ptr [rsp+0x20] at address 0x1241b is visited for 2 times

0x1252d: jmp 0x12439
0x1252d: jump address is 0x12439
Block exists: test r10b,r10b at address 0x12439 is visited for 2 times

0x12920: cmp byte ptr [rsp+0xf],0x0
0x12925: jne 0x13290
0x12925: jump address is 0x13290
Block exists: add rbp,0x1 at address 0x1292b is visited for 1 times

0x13290: mov rbp,r11
0x13293: movzx eax,byte ptr [rsp+0xf]
0x13298: jmp 0x12d69
0x13298: jump address is 0x12d69
0x12d69: cmp byte ptr [rsp+0xd],0x0
0x12d6e: je 0x12d80
0x12d6e: jump address is 0x12d80
0x12d70: test al,al
0x12d72: mov eax,0x4
0x12d77: cmove eax,dword ptr [rsp+0x8]
0x12d7c: mov dword ptr [rsp+0x8],eax
0x12d80: sub rsp,0x8
0x12d84: mov rcx,rbp
0x12d87: mov rsi,r13
0x12d8a: push qword ptr [rsp+0x68]
0x12d8e: push qword ptr [rsp+0x78]
0x12d92: mov rdi,r14
0x12d95: push 0x0
0x12d97: mov r9d,dword ptr [rsp+0x98]
0x12d9f: mov r8d,dword ptr [rsp+0x28]
0x12da4: mov rdx,qword ptr [rsp+0x30]
0x12da9: and r9d,0xfffffffd
0x12dad: call 0x121e0
0x12dad: jump address is 0x121e0
Block exists: push r15 at address 0x121e0 is visited for 3 times

0x12d77: cmove eax,dword ptr [rsp+0x8]
0x12d7c: mov dword ptr [rsp+0x8],eax
0x12d80: sub rsp,0x8
0x12d84: mov rcx,rbp
0x12d87: mov rsi,r13
0x12d8a: push qword ptr [rsp+0x68]
0x12d8e: push qword ptr [rsp+0x78]
0x12d92: mov rdi,r14
0x12d95: push 0x0
0x12d97: mov r9d,dword ptr [rsp+0x98]
0x12d9f: mov r8d,dword ptr [rsp+0x28]
0x12da4: mov rdx,qword ptr [rsp+0x30]
0x12da9: and r9d,0xfffffffd
0x12dad: call 0x121e0
0x12dad: jump address is 0x121e0
Block exists: push r15 at address 0x121e0 is visited for 3 times

0x12d80: sub rsp,0x8
0x12d84: mov rcx,rbp
0x12d87: mov rsi,r13
0x12d8a: push qword ptr [rsp+0x68]
0x12d8e: push qword ptr [rsp+0x78]
0x12d92: mov rdi,r14
0x12d95: push 0x0
0x12d97: mov r9d,dword ptr [rsp+0x98]
0x12d9f: mov r8d,dword ptr [rsp+0x28]
0x12da4: mov rdx,qword ptr [rsp+0x30]
0x12da9: and r9d,0xfffffffd
0x12dad: call 0x121e0
0x12dad: jump address is 0x121e0
Block exists: push r15 at address 0x121e0 is visited for 3 times

0x123ce: jmp rax
0x123ce: jump address is 0x124a3
0x124a3: mov eax,dword ptr [rsp+0x8]
0x124a7: cmp eax,0x2
0x124aa: je 0x12a68
0x124aa: jump address is 0x12a68
0x124b0: cmp eax,0x5
0x124b3: je 0x12a28
0x124b3: jump address is 0x12a28
0x124b9: cmp eax,0x2
0x124bc: mov ebx,0x3f
0x124c1: sete dl
0x124c4: xor r12d,r12d
0x124c7: xor eax,eax
0x124c9: jmp 0x12408
0x124c9: jump address is 0x12408
Block exists: cmp byte ptr [rsp+0xd],0x1 at address 0x12408 is visited for 1 times

0x12a28: test byte ptr [rsp+0x78],0x4
0x12a2d: je 0x12a50
0x12a2d: jump address is 0x12a50
0x12a2f: lea rcx,[rbp+0x2]
0x12a33: cmp rcx,r11
0x12a36: jae 0x12a50
0x12a36: jump address is 0x12a50
0x12a38: mov rax,qword ptr [rsp+0x10]
0x12a3d: cmp byte ptr [rax+rbp+0x1],0x3f
0x12a42: je 0x131d2
0x12a42: jump address is 0x131d2
0x12a48: nop dword ptr [rax+rax]
0x12a50: xor edx,edx
0x12a52: xor r12d,r12d
0x12a55: xor eax,eax
0x12a57: mov ebx,0x3f
0x12a5c: jmp 0x12408
0x12a5c: jump address is 0x12408
0x12408: cmp byte ptr [rsp+0xd],0x1
0x1240d: jne 0x12522
0x1240d: jump address is 0x12522
0x12413: test dl,dl
0x12415: jne 0x12522
0x12415: jump address is 0x12522
Block exists: cmp byte ptr [rsp+0xf],0x0 at address 0x12522 is visited for 3 times

0x1241b: mov rsi,qword ptr [rsp+0x20]
0x12420: test rsi,rsi
0x12423: je 0x12439
0x12423: jump address is 0x12439
0x12425: mov edx,ebx
0x12427: shr dl,0x5
0x1242a: movzx edx,dl
0x1242d: mov edx,dword ptr [rsi+rdx*4]
0x12430: bt edx,ebx
0x12433: jb 0x12583
0x12433: jump address is 0x12583
Block exists: test r10b,r10b at address 0x12439 is visited for 3 times

0x12583: cmp dword ptr [rsp+0x8],0x2
0x12588: sete dl
0x1258b: cmp byte ptr [rsp+0xf],0x0
0x12590: mov eax,edx
0x12592: jne 0x12de8
0x12592: jump address is 0x12de8
0x12598: mov eax,r8d
0x1259b: xor eax,0x1
0x1259e: and al,dl
0x125a0: je 0x125d1
0x125a0: jump address is 0x125d1
0x125a2: cmp r13,r15
0x125a5: jbe 0x125ac
0x125a5: jump address is 0x125ac
0x125a7: mov byte ptr [r14+r15],0x27
0x125ac: lea rdx,[r15+0x1]
0x125b0: cmp r13,rdx
0x125b3: jbe 0x125bb
0x125b3: jump address is 0x125bb
0x125b5: mov byte ptr [r14+r15+0x1],0x24
0x125bb: lea rdx,[r15+0x2]
0x125bf: cmp r13,rdx
0x125c2: jbe 0x125ca
0x125c2: jump address is 0x125ca
0x125c4: mov byte ptr [r14+r15+0x2],0x27
0x125ca: add r15,0x3
0x125ce: mov r8d,eax
0x125d1: cmp r13,r15
0x125d4: jbe 0x125db
0x125d4: jump address is 0x125db
0x125d6: mov byte ptr [r14+r15],0x5c
0x125db: add r15,0x1
0x125df: add rbp,0x1
0x125e3: jmp 0x12470
0x125e3: jump address is 0x12470
0x12470: cmp r15,r13
0x12473: jae 0x12479
0x12473: jump address is 0x12479
0x12475: mov byte ptr [r14+r15],bl
0x12479: movzx edi,byte ptr [rsp+0xe]
0x1247e: add r15,0x1
0x12482: mov eax,0x0
0x12487: test r12b,r12b
0x1248a: cmove edi,eax
0x1248d: mov byte ptr [rsp+0xe],dil
0x12492: jmp 0x122c8
0x12492: jump address is 0x122c8
0x122c8: cmp r11,rbp
0x122cb: setne r12b
0x122cf: cmp r11,0xffffffffffffffff
0x122d3: jne 0x122e2
0x122d3: jump address is 0x122e2
Block exists: test r12b,r12b at address 0x122e2 is visited for 2 times

Block exists: mov rax,qword ptr [rsp+0x10] at address 0x122d5 is visited for 2 times

0x12479: movzx edi,byte ptr [rsp+0xe]
0x1247e: add r15,0x1
0x12482: mov eax,0x0
0x12487: test r12b,r12b
0x1248a: cmove edi,eax
0x1248d: mov byte ptr [rsp+0xe],dil
0x12492: jmp 0x122c8
0x12492: jump address is 0x122c8
Block exists: cmp r11,rbp at address 0x122c8 is visited for 3 times

0x125db: add r15,0x1
0x125df: add rbp,0x1
0x125e3: jmp 0x12470
0x125e3: jump address is 0x12470
Block exists: cmp r15,r13 at address 0x12470 is visited for 3 times

0x125ca: add r15,0x3
0x125ce: mov r8d,eax
0x125d1: cmp r13,r15
0x125d4: jbe 0x125db
0x125d4: jump address is 0x125db
Block exists: add r15,0x1 at address 0x125db is visited for 3 times

Block exists: mov byte ptr [r14+r15],0x5c at address 0x125d6 is visited for 3 times

0x125bb: lea rdx,[r15+0x2]
0x125bf: cmp r13,rdx
0x125c2: jbe 0x125ca
0x125c2: jump address is 0x125ca
Block exists: add r15,0x3 at address 0x125ca is visited for 3 times

Block exists: mov byte ptr [r14+r15+0x2],0x27 at address 0x125c4 is visited for 3 times

0x125ac: lea rdx,[r15+0x1]
0x125b0: cmp r13,rdx
0x125b3: jbe 0x125bb
0x125b3: jump address is 0x125bb
Block exists: lea rdx,[r15+0x2] at address 0x125bb is visited for 3 times

Block exists: mov byte ptr [r14+r15+0x1],0x24 at address 0x125b5 is visited for 3 times

0x125d1: cmp r13,r15
0x125d4: jbe 0x125db
0x125d4: jump address is 0x125db
Block exists: add r15,0x1 at address 0x125db is visited for 3 times

Block exists: mov byte ptr [r14+r15],0x5c at address 0x125d6 is visited for 3 times

0x12de8: mov rbp,r11
0x12deb: jmp 0x12d69
0x12deb: jump address is 0x12d69
0x12d69: cmp byte ptr [rsp+0xd],0x0
0x12d6e: je 0x12d80
0x12d6e: jump address is 0x12d80
0x12d70: test al,al
0x12d72: mov eax,0x4
0x12d77: cmove eax,dword ptr [rsp+0x8]
0x12d7c: mov dword ptr [rsp+0x8],eax
0x12d80: sub rsp,0x8
0x12d84: mov rcx,rbp
0x12d87: mov rsi,r13
0x12d8a: push qword ptr [rsp+0x68]
0x12d8e: push qword ptr [rsp+0x78]
0x12d92: mov rdi,r14
0x12d95: push 0x0
0x12d97: mov r9d,dword ptr [rsp+0x98]
0x12d9f: mov r8d,dword ptr [rsp+0x28]
0x12da4: mov rdx,qword ptr [rsp+0x30]
0x12da9: and r9d,0xfffffffd
0x12dad: call 0x121e0
0x12dad: jump address is 0x121e0
Block exists: push r15 at address 0x121e0 is visited for 3 times

0x12d77: cmove eax,dword ptr [rsp+0x8]
0x12d7c: mov dword ptr [rsp+0x8],eax
0x12d80: sub rsp,0x8
0x12d84: mov rcx,rbp
0x12d87: mov rsi,r13
0x12d8a: push qword ptr [rsp+0x68]
0x12d8e: push qword ptr [rsp+0x78]
0x12d92: mov rdi,r14
0x12d95: push 0x0
0x12d97: mov r9d,dword ptr [rsp+0x98]
0x12d9f: mov r8d,dword ptr [rsp+0x28]
0x12da4: mov rdx,qword ptr [rsp+0x30]
0x12da9: and r9d,0xfffffffd
0x12dad: call 0x121e0
0x12dad: jump address is 0x121e0
Block exists: push r15 at address 0x121e0 is visited for 3 times

0x12d80: sub rsp,0x8
0x12d84: mov rcx,rbp
0x12d87: mov rsi,r13
0x12d8a: push qword ptr [rsp+0x68]
0x12d8e: push qword ptr [rsp+0x78]
0x12d92: mov rdi,r14
0x12d95: push 0x0
0x12d97: mov r9d,dword ptr [rsp+0x98]
0x12d9f: mov r8d,dword ptr [rsp+0x28]
0x12da4: mov rdx,qword ptr [rsp+0x30]
0x12da9: and r9d,0xfffffffd
0x12dad: call 0x121e0
0x12dad: jump address is 0x121e0
Block exists: push r15 at address 0x121e0 is visited for 3 times

0x12439: test r10b,r10b
0x1243c: jne 0x12583
0x1243c: jump address is 0x12583
Block exists: cmp dword ptr [rsp+0x8],0x2 at address 0x12583 is visited for 3 times

0x12442: xor eax,0x1
0x12445: add rbp,0x1
0x12449: and eax,r8d
0x1244c: test al,al
0x1244e: je 0x12470
0x1244e: jump address is 0x12470
Block exists: cmp r15,r13 at address 0x12470 is visited for 3 times

0x12450: cmp r13,r15
0x12453: jbe 0x1245a
0x12453: jump address is 0x1245a
0x12455: mov byte ptr [r14+r15],0x27
0x1245a: lea rax,[r15+0x1]
0x1245e: cmp r13,rax
0x12461: jbe 0x12469
0x12461: jump address is 0x12469
0x12463: mov byte ptr [r14+r15+0x1],0x27
0x12469: add r15,0x2
0x1246d: xor r8d,r8d
0x12470: cmp r15,r13
0x12473: jae 0x12479
0x12473: jump address is 0x12479
Block exists: movzx edi,byte ptr [rsp+0xe] at address 0x12479 is visited for 3 times

Block exists: mov byte ptr [r14+r15],bl at address 0x12475 is visited for 3 times

0x12469: add r15,0x2
0x1246d: xor r8d,r8d
0x12470: cmp r15,r13
0x12473: jae 0x12479
0x12473: jump address is 0x12479
Block exists: movzx edi,byte ptr [rsp+0xe] at address 0x12479 is visited for 3 times

Block exists: mov byte ptr [r14+r15],bl at address 0x12475 is visited for 3 times

0x1245a: lea rax,[r15+0x1]
0x1245e: cmp r13,rax
0x12461: jbe 0x12469
0x12461: jump address is 0x12469
Block exists: add r15,0x2 at address 0x12469 is visited for 2 times

Block exists: mov byte ptr [r14+r15+0x1],0x27 at address 0x12463 is visited for 2 times

0x12522: cmp byte ptr [rsp+0xf],0x0
0x12527: jne 0x1241b
0x12527: jump address is 0x1241b
Block exists: mov rsi,qword ptr [rsp+0x20] at address 0x1241b is visited for 3 times

0x1252d: jmp 0x12439
0x1252d: jump address is 0x12439
Block exists: test r10b,r10b at address 0x12439 is visited for 3 times

0x131d2: movzx ebx,byte ptr [rax+rcx]
0x131d6: cmp bl,0x3e
0x131d9: ja 0x12a50
0x131d9: jump address is 0x12a50
Block exists: xor edx,edx at address 0x12a50 is visited for 2 times

0x131df: movabs rax,0x7000a38200000000
0x131e9: bt rax,rbx
0x131ed: jae 0x12a50
0x131ed: jump address is 0x12a50
Block exists: xor edx,edx at address 0x12a50 is visited for 2 times

0x131f3: cmp byte ptr [rsp+0xf],0x0
0x131f8: jne 0x133e2
0x131f8: jump address is 0x133e2
0x131fe: cmp r13,r15
0x13201: jbe 0x13208
0x13201: jump address is 0x13208
0x13203: mov byte ptr [r14+r15],0x3f
0x13208: lea rax,[r15+0x1]
0x1320c: cmp r13,rax
0x1320f: jbe 0x13217
0x1320f: jump address is 0x13217
0x13211: mov byte ptr [r14+r15+0x1],0x22
0x13217: lea rax,[r15+0x2]
0x1321b: cmp r13,rax
0x1321e: jbe 0x13226
0x1321e: jump address is 0x13226
0x13220: mov byte ptr [r14+r15+0x2],0x22
0x13226: lea rax,[r15+0x3]
0x1322a: cmp r13,rax
0x1322d: jbe 0x13235
0x1322d: jump address is 0x13235
0x1322f: mov byte ptr [r14+r15+0x3],0x3f
0x13235: add r15,0x4
0x13239: xor edx,edx
0x1323b: xor r12d,r12d
0x1323e: xor eax,eax
0x13240: mov rbp,rcx
0x13243: jmp 0x12408
0x13243: jump address is 0x12408
Block exists: cmp byte ptr [rsp+0xd],0x1 at address 0x12408 is visited for 2 times

0x13235: add r15,0x4
0x13239: xor edx,edx
0x1323b: xor r12d,r12d
0x1323e: xor eax,eax
0x13240: mov rbp,rcx
0x13243: jmp 0x12408
0x13243: jump address is 0x12408
Block exists: cmp byte ptr [rsp+0xd],0x1 at address 0x12408 is visited for 2 times

0x13226: lea rax,[r15+0x3]
0x1322a: cmp r13,rax
0x1322d: jbe 0x13235
0x1322d: jump address is 0x13235
Block exists: add r15,0x4 at address 0x13235 is visited for 1 times

Block exists: mov byte ptr [r14+r15+0x3],0x3f at address 0x1322f is visited for 1 times

0x13217: lea rax,[r15+0x2]
0x1321b: cmp r13,rax
0x1321e: jbe 0x13226
0x1321e: jump address is 0x13226
Block exists: lea rax,[r15+0x3] at address 0x13226 is visited for 1 times

Block exists: mov byte ptr [r14+r15+0x2],0x22 at address 0x13220 is visited for 1 times

0x13208: lea rax,[r15+0x1]
0x1320c: cmp r13,rax
0x1320f: jbe 0x13217
0x1320f: jump address is 0x13217
Block exists: lea rax,[r15+0x2] at address 0x13217 is visited for 1 times

Block exists: mov byte ptr [r14+r15+0x1],0x22 at address 0x13211 is visited for 1 times

0x133e2: mov rbp,r11
0x133e5: jmp 0x12d80
0x133e5: jump address is 0x12d80
Block exists: sub rsp,0x8 at address 0x12d80 is visited for 3 times

0x12a50: xor edx,edx
0x12a52: xor r12d,r12d
0x12a55: xor eax,eax
0x12a57: mov ebx,0x3f
0x12a5c: jmp 0x12408
0x12a5c: jump address is 0x12408
Block exists: cmp byte ptr [rsp+0xd],0x1 at address 0x12408 is visited for 2 times

0x12a50: xor edx,edx
0x12a52: xor r12d,r12d
0x12a55: xor eax,eax
0x12a57: mov ebx,0x3f
0x12a5c: jmp 0x12408
0x12a5c: jump address is 0x12408
Block exists: cmp byte ptr [rsp+0xd],0x1 at address 0x12408 is visited for 2 times

0x12a68: cmp byte ptr [rsp+0xf],0x0
0x12a6d: jne 0x13290
0x12a6d: jump address is 0x13290
0x12a73: xor r12d,r12d
0x12a76: xor eax,eax
0x12a78: mov ebx,0x3f
0x12a7d: jmp 0x12439
0x12a7d: jump address is 0x12439
Block exists: test r10b,r10b at address 0x12439 is visited for 3 times

0x13290: mov rbp,r11
0x13293: movzx eax,byte ptr [rsp+0xf]
0x13298: jmp 0x12d69
0x13298: jump address is 0x12d69
Block exists: cmp byte ptr [rsp+0xd],0x0 at address 0x12d69 is visited for 3 times

0x123ce: jmp rax
0x123ce: jump address is 0x124d3
0x124d3: cmp dword ptr [rsp+0x8],0x2
0x124d8: je 0x129e0
0x124d8: jump address is 0x129e0
0x124de: mov byte ptr [rsp+0x7c],r12b
0x124e3: xor edx,edx
0x124e5: xor eax,eax
0x124e7: mov ebx,0x27
0x124ec: jmp 0x12408
0x124ec: jump address is 0x12408
0x12408: cmp byte ptr [rsp+0xd],0x1
0x1240d: jne 0x12522
0x1240d: jump address is 0x12522
0x12413: test dl,dl
0x12415: jne 0x12522
0x12415: jump address is 0x12522
Block exists: cmp byte ptr [rsp+0xf],0x0 at address 0x12522 is visited for 4 times

0x1241b: mov rsi,qword ptr [rsp+0x20]
0x12420: test rsi,rsi
0x12423: je 0x12439
0x12423: jump address is 0x12439
0x12425: mov edx,ebx
0x12427: shr dl,0x5
0x1242a: movzx edx,dl
0x1242d: mov edx,dword ptr [rsi+rdx*4]
0x12430: bt edx,ebx
0x12433: jb 0x12583
0x12433: jump address is 0x12583
Block exists: test r10b,r10b at address 0x12439 is visited for 4 times

0x12583: cmp dword ptr [rsp+0x8],0x2
0x12588: sete dl
0x1258b: cmp byte ptr [rsp+0xf],0x0
0x12590: mov eax,edx
0x12592: jne 0x12de8
0x12592: jump address is 0x12de8
0x12598: mov eax,r8d
0x1259b: xor eax,0x1
0x1259e: and al,dl
0x125a0: je 0x125d1
0x125a0: jump address is 0x125d1
0x125a2: cmp r13,r15
0x125a5: jbe 0x125ac
0x125a5: jump address is 0x125ac
0x125a7: mov byte ptr [r14+r15],0x27
0x125ac: lea rdx,[r15+0x1]
0x125b0: cmp r13,rdx
0x125b3: jbe 0x125bb
0x125b3: jump address is 0x125bb
0x125b5: mov byte ptr [r14+r15+0x1],0x24
0x125bb: lea rdx,[r15+0x2]
0x125bf: cmp r13,rdx
0x125c2: jbe 0x125ca
0x125c2: jump address is 0x125ca
0x125c4: mov byte ptr [r14+r15+0x2],0x27
0x125ca: add r15,0x3
0x125ce: mov r8d,eax
0x125d1: cmp r13,r15
0x125d4: jbe 0x125db
0x125d4: jump address is 0x125db
0x125d6: mov byte ptr [r14+r15],0x5c
0x125db: add r15,0x1
0x125df: add rbp,0x1
0x125e3: jmp 0x12470
0x125e3: jump address is 0x12470
0x12470: cmp r15,r13
0x12473: jae 0x12479
0x12473: jump address is 0x12479
0x12475: mov byte ptr [r14+r15],bl
0x12479: movzx edi,byte ptr [rsp+0xe]
0x1247e: add r15,0x1
0x12482: mov eax,0x0
0x12487: test r12b,r12b
0x1248a: cmove edi,eax
0x1248d: mov byte ptr [rsp+0xe],dil
0x12492: jmp 0x122c8
0x12492: jump address is 0x122c8
0x122c8: cmp r11,rbp
0x122cb: setne r12b
0x122cf: cmp r11,0xffffffffffffffff
0x122d3: jne 0x122e2
0x122d3: jump address is 0x122e2
Block exists: test r12b,r12b at address 0x122e2 is visited for 2 times

Block exists: mov rax,qword ptr [rsp+0x10] at address 0x122d5 is visited for 2 times

0x1248a: cmove edi,eax
0x1248d: mov byte ptr [rsp+0xe],dil
0x12492: jmp 0x122c8
0x12492: jump address is 0x122c8
Block exists: cmp r11,rbp at address 0x122c8 is visited for 4 times

0x12479: movzx edi,byte ptr [rsp+0xe]
0x1247e: add r15,0x1
0x12482: mov eax,0x0
0x12487: test r12b,r12b
0x1248a: cmove edi,eax
0x1248d: mov byte ptr [rsp+0xe],dil
0x12492: jmp 0x122c8
0x12492: jump address is 0x122c8
Block exists: cmp r11,rbp at address 0x122c8 is visited for 4 times

0x1248a: cmove edi,eax
0x1248d: mov byte ptr [rsp+0xe],dil
0x12492: jmp 0x122c8
0x12492: jump address is 0x122c8
Block exists: cmp r11,rbp at address 0x122c8 is visited for 4 times

0x125db: add r15,0x1
0x125df: add rbp,0x1
0x125e3: jmp 0x12470
0x125e3: jump address is 0x12470
Block exists: cmp r15,r13 at address 0x12470 is visited for 4 times

0x125ca: add r15,0x3
0x125ce: mov r8d,eax
0x125d1: cmp r13,r15
0x125d4: jbe 0x125db
0x125d4: jump address is 0x125db
Block exists: add r15,0x1 at address 0x125db is visited for 4 times

Block exists: mov byte ptr [r14+r15],0x5c at address 0x125d6 is visited for 4 times

0x125bb: lea rdx,[r15+0x2]
0x125bf: cmp r13,rdx
0x125c2: jbe 0x125ca
0x125c2: jump address is 0x125ca
Block exists: add r15,0x3 at address 0x125ca is visited for 4 times

Block exists: mov byte ptr [r14+r15+0x2],0x27 at address 0x125c4 is visited for 4 times

0x125ac: lea rdx,[r15+0x1]
0x125b0: cmp r13,rdx
0x125b3: jbe 0x125bb
0x125b3: jump address is 0x125bb
Block exists: lea rdx,[r15+0x2] at address 0x125bb is visited for 4 times

Block exists: mov byte ptr [r14+r15+0x1],0x24 at address 0x125b5 is visited for 4 times

0x125d1: cmp r13,r15
0x125d4: jbe 0x125db
0x125d4: jump address is 0x125db
Block exists: add r15,0x1 at address 0x125db is visited for 4 times

Block exists: mov byte ptr [r14+r15],0x5c at address 0x125d6 is visited for 4 times

0x12de8: mov rbp,r11
0x12deb: jmp 0x12d69
0x12deb: jump address is 0x12d69
Block exists: cmp byte ptr [rsp+0xd],0x0 at address 0x12d69 is visited for 3 times

0x12439: test r10b,r10b
0x1243c: jne 0x12583
0x1243c: jump address is 0x12583
Block exists: cmp dword ptr [rsp+0x8],0x2 at address 0x12583 is visited for 4 times

0x12442: xor eax,0x1
0x12445: add rbp,0x1
0x12449: and eax,r8d
0x1244c: test al,al
0x1244e: je 0x12470
0x1244e: jump address is 0x12470
Block exists: cmp r15,r13 at address 0x12470 is visited for 4 times

0x12450: cmp r13,r15
0x12453: jbe 0x1245a
0x12453: jump address is 0x1245a
0x12455: mov byte ptr [r14+r15],0x27
0x1245a: lea rax,[r15+0x1]
0x1245e: cmp r13,rax
0x12461: jbe 0x12469
0x12461: jump address is 0x12469
0x12463: mov byte ptr [r14+r15+0x1],0x27
0x12469: add r15,0x2
0x1246d: xor r8d,r8d
0x12470: cmp r15,r13
0x12473: jae 0x12479
0x12473: jump address is 0x12479
Block exists: movzx edi,byte ptr [rsp+0xe] at address 0x12479 is visited for 4 times

Block exists: mov byte ptr [r14+r15],bl at address 0x12475 is visited for 4 times

0x12469: add r15,0x2
0x1246d: xor r8d,r8d
0x12470: cmp r15,r13
0x12473: jae 0x12479
0x12473: jump address is 0x12479
Block exists: movzx edi,byte ptr [rsp+0xe] at address 0x12479 is visited for 4 times

Block exists: mov byte ptr [r14+r15],bl at address 0x12475 is visited for 4 times

0x1245a: lea rax,[r15+0x1]
0x1245e: cmp r13,rax
0x12461: jbe 0x12469
0x12461: jump address is 0x12469
Block exists: add r15,0x2 at address 0x12469 is visited for 3 times

Block exists: mov byte ptr [r14+r15+0x1],0x27 at address 0x12463 is visited for 3 times

0x12522: cmp byte ptr [rsp+0xf],0x0
0x12527: jne 0x1241b
0x12527: jump address is 0x1241b
Block exists: mov rsi,qword ptr [rsp+0x20] at address 0x1241b is visited for 4 times

0x1252d: jmp 0x12439
0x1252d: jump address is 0x12439
Block exists: test r10b,r10b at address 0x12439 is visited for 4 times

0x129e0: cmp byte ptr [rsp+0xf],0x0
0x129e5: jne 0x13290
0x129e5: jump address is 0x13290
Block exists: mov rbp,r11 at address 0x13290 is visited for 2 times

0x129eb: test r13,r13
0x129ee: je 0x12df0
0x129ee: jump address is 0x12df0
0x129f4: xor edx,edx
0x129f6: cmp qword ptr [rsp+0x50],0x0
0x129fc: jne 0x12df0
0x129fc: jump address is 0x12df0
Block exists: cmp r13,r15 at address 0x12df0 is visited for 1 times

0x12a02: mov qword ptr [rsp+0x50],r13
0x12a07: add r15,0x3
0x12a0b: xor eax,eax
0x12a0d: mov byte ptr [rsp+0x7c],r12b
0x12a12: xor r8d,r8d
0x12a15: mov r13,rdx
0x12a18: mov ebx,0x27
0x12a1d: jmp 0x12439
0x12a1d: jump address is 0x12439
Block exists: test r10b,r10b at address 0x12439 is visited for 4 times

0x12df0: cmp r13,r15
0x12df3: jbe 0x12dfa
0x12df3: jump address is 0x12dfa
0x12df5: mov byte ptr [r14+r15],0x27
0x12dfa: lea rax,[r15+0x1]
0x12dfe: cmp r13,rax
0x12e01: jbe 0x12e09
0x12e01: jump address is 0x12e09
0x12e03: mov byte ptr [r14+r15+0x1],0x5c
0x12e09: lea rax,[r15+0x2]
0x12e0d: cmp r13,rax
0x12e10: jbe 0x13402
0x12e10: jump address is 0x13402
0x12e16: mov rdx,r13
0x12e19: mov byte ptr [r14+r15+0x2],0x27
0x12e1f: mov r13,qword ptr [rsp+0x50]
0x12e24: jmp 0x12a02
0x12e24: jump address is 0x12a02
0x12a02: mov qword ptr [rsp+0x50],r13
0x12a07: add r15,0x3
0x12a0b: xor eax,eax
0x12a0d: mov byte ptr [rsp+0x7c],r12b
0x12a12: xor r8d,r8d
0x12a15: mov r13,rdx
0x12a18: mov ebx,0x27
0x12a1d: jmp 0x12439
0x12a1d: jump address is 0x12439
Block exists: test r10b,r10b at address 0x12439 is visited for 4 times

0x13402: mov rdx,r13
0x13405: mov r13,qword ptr [rsp+0x50]
0x1340a: jmp 0x12a02
0x1340a: jump address is 0x12a02
Block exists: mov qword ptr [rsp+0x50],r13 at address 0x12a02 is visited for 2 times

0x12e09: lea rax,[r15+0x2]
0x12e0d: cmp r13,rax
0x12e10: jbe 0x13402
0x12e10: jump address is 0x13402
Block exists: mov rdx,r13 at address 0x13402 is visited for 1 times

Block exists: mov rdx,r13 at address 0x12e16 is visited for 1 times

0x12dfa: lea rax,[r15+0x1]
0x12dfe: cmp r13,rax
0x12e01: jbe 0x12e09
0x12e01: jump address is 0x12e09
Block exists: lea rax,[r15+0x2] at address 0x12e09 is visited for 1 times

Block exists: mov byte ptr [r14+r15+0x1],0x5c at address 0x12e03 is visited for 1 times

0x123ce: jmp rax
0x123ce: jump address is 0x12618
0x12618: cmp dword ptr [rsp+0x8],0x2
0x1261d: sete dl
0x12620: xor eax,eax
0x12622: jmp 0x12408
0x12622: jump address is 0x12408
Block exists: cmp byte ptr [rsp+0xd],0x1 at address 0x12408 is visited for 3 times

0x123ce: jmp rax
0x123ce: jump address is 0x12640
0x12640: cmp dword ptr [rsp+0x8],0x2
0x12645: sete dl
0x12648: test rbp,rbp
0x1264b: jne 0x123fc
0x1264b: jump address is 0x123fc
Block exists: xor r12d,r12d at address 0x123fc is visited for 2 times

0x123ce: jmp rax
0x123ce: jump address is 0x12670
0x12670: cmp dword ptr [rsp+0x8],0x2
0x12675: sete dl
0x12678: xor r12d,r12d
0x1267b: jmp 0x12651
0x1267b: jump address is 0x12651
0x12651: movzx eax,byte ptr [rsp+0xf]
0x12656: and al,dl
0x12658: je 0x12408
0x12658: jump address is 0x12408
0x1265e: mov rbp,r11
0x12661: mov dword ptr [rsp+0x8],0x2
0x12669: jmp 0x12d69
0x12669: jump address is 0x12d69
Block exists: cmp byte ptr [rsp+0xd],0x0 at address 0x12d69 is visited for 3 times

0x12408: cmp byte ptr [rsp+0xd],0x1
0x1240d: jne 0x12522
0x1240d: jump address is 0x12522
0x12413: test dl,dl
0x12415: jne 0x12522
0x12415: jump address is 0x12522
Block exists: cmp byte ptr [rsp+0xf],0x0 at address 0x12522 is visited for 5 times

0x1241b: mov rsi,qword ptr [rsp+0x20]
0x12420: test rsi,rsi
0x12423: je 0x12439
0x12423: jump address is 0x12439
0x12425: mov edx,ebx
0x12427: shr dl,0x5
0x1242a: movzx edx,dl
0x1242d: mov edx,dword ptr [rsi+rdx*4]
0x12430: bt edx,ebx
0x12433: jb 0x12583
0x12433: jump address is 0x12583
Block exists: cmp dword ptr [rsp+0x8],0x2 at address 0x12583 is visited for 4 times

Block exists: test r10b,r10b at address 0x12439 is visited for 5 times

0x12439: test r10b,r10b
0x1243c: jne 0x12583
0x1243c: jump address is 0x12583
Block exists: cmp dword ptr [rsp+0x8],0x2 at address 0x12583 is visited for 4 times

0x12442: xor eax,0x1
0x12445: add rbp,0x1
0x12449: and eax,r8d
0x1244c: test al,al
0x1244e: je 0x12470
0x1244e: jump address is 0x12470
Block exists: cmp r13,r15 at address 0x12450 is visited for 3 times

0x12470: cmp r15,r13
0x12473: jae 0x12479
0x12473: jump address is 0x12479
Block exists: movzx edi,byte ptr [rsp+0xe] at address 0x12479 is visited for 4 times

Block exists: mov byte ptr [r14+r15],bl at address 0x12475 is visited for 4 times

0x12522: cmp byte ptr [rsp+0xf],0x0
0x12527: jne 0x1241b
0x12527: jump address is 0x1241b
Block exists: mov rsi,qword ptr [rsp+0x20] at address 0x1241b is visited for 5 times

0x1252d: jmp 0x12439
0x1252d: jump address is 0x12439
Block exists: test r10b,r10b at address 0x12439 is visited for 5 times

0x123ce: jmp rax
0x123ce: jump address is 0x12680
0x12680: cmp dword ptr [rsp+0x8],0x2
0x12685: mov ebx,0x20
0x1268a: sete dl
0x1268d: jmp 0x12651
0x1268d: jump address is 0x12651
0x12651: movzx eax,byte ptr [rsp+0xf]
0x12656: and al,dl
0x12658: je 0x12408
0x12658: jump address is 0x12408
Block exists: cmp byte ptr [rsp+0xd],0x1 at address 0x12408 is visited for 4 times

0x1265e: mov rbp,r11
0x12661: mov dword ptr [rsp+0x8],0x2
0x12669: jmp 0x12d69
0x12669: jump address is 0x12d69
Block exists: cmp byte ptr [rsp+0xd],0x0 at address 0x12d69 is visited for 3 times

0x123ce: jmp rax
0x123ce: jump address is 0x12690
0x12690: mov edx,0xd
0x12695: mov ebx,0x72
0x1269a: jmp 0x12502
0x1269a: jump address is 0x12502
0x12502: cmp dword ptr [rsp+0x8],0x2
0x12507: sete al
0x1250a: and al,byte ptr [rsp+0xf]
0x1250e: jne 0x1265e
0x1250e: jump address is 0x1265e
Block exists: mov rbp,r11 at address 0x1265e is visited for 2 times

0x12514: cmp byte ptr [rsp+0xd],0x0
0x12519: jne 0x12580
0x12519: jump address is 0x12580
0x1251b: mov ebx,edx
0x1251d: xor r12d,r12d
0x12520: xor eax,eax
0x12522: cmp byte ptr [rsp+0xf],0x0
0x12527: jne 0x1241b
0x12527: jump address is 0x1241b
Block exists: mov rsi,qword ptr [rsp+0x20] at address 0x1241b is visited for 5 times

0x1252d: jmp 0x12439
0x1252d: jump address is 0x12439
Block exists: test r10b,r10b at address 0x12439 is visited for 5 times

0x12580: xor r12d,r12d
0x12583: cmp dword ptr [rsp+0x8],0x2
0x12588: sete dl
0x1258b: cmp byte ptr [rsp+0xf],0x0
0x12590: mov eax,edx
0x12592: jne 0x12de8
0x12592: jump address is 0x12de8
Block exists: mov rbp,r11 at address 0x12de8 is visited for 4 times

Block exists: mov eax,r8d at address 0x12598 is visited for 4 times

0x123ce: jmp rax
0x123ce: jump address is 0x126a0
0x126a0: mov edx,0xc
0x126a5: mov ebx,0x66
0x126aa: jmp 0x12514
0x126aa: jump address is 0x12514
Block exists: cmp byte ptr [rsp+0xd],0x0 at address 0x12514 is visited for 2 times

0x123ce: jmp rax
0x123ce: jump address is 0x126b0
0x126b0: mov edx,0xb
0x126b5: mov ebx,0x76
0x126ba: jmp 0x12514
0x126ba: jump address is 0x12514
Block exists: cmp byte ptr [rsp+0xd],0x0 at address 0x12514 is visited for 2 times

0x123ce: jmp rax
0x123ce: jump address is 0x126c0
0x126c0: mov edx,0xa
0x126c5: mov ebx,0x6e
0x126ca: jmp 0x12502
0x126ca: jump address is 0x12502
0x12502: cmp dword ptr [rsp+0x8],0x2
0x12507: sete al
0x1250a: and al,byte ptr [rsp+0xf]
0x1250e: jne 0x1265e
0x1250e: jump address is 0x1265e
Block exists: mov rbp,r11 at address 0x1265e is visited for 2 times

Block exists: cmp byte ptr [rsp+0xd],0x0 at address 0x12514 is visited for 2 times

0x123ce: jmp rax
0x123ce: jump address is 0x124f8
0x124f8: mov edx,0x9
0x124fd: mov ebx,0x74
0x12502: cmp dword ptr [rsp+0x8],0x2
0x12507: sete al
0x1250a: and al,byte ptr [rsp+0xf]
0x1250e: jne 0x1265e
0x1250e: jump address is 0x1265e
Block exists: mov rbp,r11 at address 0x1265e is visited for 2 times

Block exists: cmp byte ptr [rsp+0xd],0x0 at address 0x12514 is visited for 2 times

0x123ce: jmp rax
0x123ce: jump address is 0x12538
0x12538: mov edx,0x8
0x1253d: mov ebx,0x62
0x12542: jmp 0x12514
0x12542: jump address is 0x12514
Block exists: cmp byte ptr [rsp+0xd],0x0 at address 0x12514 is visited for 2 times

0x123ce: jmp rax
0x123ce: jump address is 0x12630
0x12630: mov edx,0x7
0x12635: mov ebx,0x61
0x1263a: jmp 0x12514
0x1263a: jump address is 0x12514
Block exists: cmp byte ptr [rsp+0xd],0x0 at address 0x12514 is visited for 2 times

0x123ce: jmp rax
0x123ce: jump address is 0x126d8
Block exists: cmp qword ptr [rsp+0x58],0x1 at address 0x126d8 is visited for 2 times

0x123ce: jmp rax
0x123ce: jump address is 0x125f0
0x125f0: cmp byte ptr [rsp+0xd],0x0
0x125f5: jne 0x127c3
0x125f5: jump address is 0x127c3
0x125fb: xor edx,edx
0x125fd: test byte ptr [rsp+0x78],0x1
0x12602: je 0x1251b
0x12602: jump address is 0x1251b
0x12608: add rbp,0x1
0x1260c: jmp 0x122c8
0x1260c: jump address is 0x122c8
Block exists: cmp r11,rbp at address 0x122c8 is visited for 4 times

0x127c3: cmp dword ptr [rsp+0x8],0x2
0x127c8: sete dl
0x127cb: cmp byte ptr [rsp+0xf],0x0
0x127d0: jne 0x1336a
0x127d0: jump address is 0x1336a
0x127d6: mov eax,r8d
0x127d9: mov rcx,r15
0x127dc: xor eax,0x1
0x127df: and al,dl
0x127e1: je 0x12810
0x127e1: jump address is 0x12810
0x127e3: cmp r13,r15
0x127e6: jbe 0x127ed
0x127e6: jump address is 0x127ed
0x127e8: mov byte ptr [r14+r15],0x27
0x127ed: lea rcx,[r15+0x1]
0x127f1: cmp r13,rcx
0x127f4: jbe 0x127fc
0x127f4: jump address is 0x127fc
0x127f6: mov byte ptr [r14+r15+0x1],0x24
0x127fc: lea rcx,[r15+0x2]
0x12800: cmp r13,rcx
0x12803: ja 0x12e39
0x12803: jump address is 0x12e39
0x12809: lea rcx,[r15+0x3]
0x1280d: mov r8d,eax
0x12810: cmp r13,rcx
0x12813: jbe 0x1281a
0x12813: jump address is 0x1281a
0x12815: mov byte ptr [r14+rcx],0x5c
0x1281a: cmp dword ptr [rsp+0x8],0x2
0x1281f: lea r15,[rcx+0x1]
0x12823: je 0x12e29
0x12823: jump address is 0x12e29
0x12829: lea rax,[rbp+0x1]
0x1282d: cmp rax,r11
0x12830: jae 0x1284b
0x12830: jump address is 0x1284b
0x12832: mov rax,qword ptr [rsp+0x10]
0x12837: movzx eax,byte ptr [rax+rbp+0x1]
0x1283c: mov byte ptr [rsp+0x28],al
0x12840: sub eax,0x30
0x12843: cmp al,0x9
0x12845: jbe 0x13079
0x12845: jump address is 0x13079
0x1284b: mov eax,r12d
0x1284e: mov ebx,0x30
0x12853: xor r12d,r12d
0x12856: jmp 0x12408
0x12856: jump address is 0x12408
Block exists: cmp byte ptr [rsp+0xd],0x1 at address 0x12408 is visited for 4 times

0x13079: cmp r13,r15
0x1307c: jbe 0x13083
0x1307c: jump address is 0x13083
0x1307e: mov byte ptr [r14+r15],0x30
0x13083: lea rax,[rcx+0x2]
0x13087: cmp r13,rax
0x1308a: jbe 0x13092
0x1308a: jump address is 0x13092
0x1308c: mov byte ptr [r14+rcx+0x2],0x30
0x13092: mov eax,r12d
0x13095: lea r15,[rcx+0x3]
0x13099: xor r12d,r12d
0x1309c: mov ebx,0x30
0x130a1: jmp 0x12408
0x130a1: jump address is 0x12408
Block exists: cmp byte ptr [rsp+0xd],0x1 at address 0x12408 is visited for 4 times

0x13092: mov eax,r12d
0x13095: lea r15,[rcx+0x3]
0x13099: xor r12d,r12d
0x1309c: mov ebx,0x30
0x130a1: jmp 0x12408
0x130a1: jump address is 0x12408
Block exists: cmp byte ptr [rsp+0xd],0x1 at address 0x12408 is visited for 4 times

0x13083: lea rax,[rcx+0x2]
0x13087: cmp r13,rax
0x1308a: jbe 0x13092
0x1308a: jump address is 0x13092
Block exists: mov eax,r12d at address 0x13092 is visited for 1 times

Block exists: mov byte ptr [r14+rcx+0x2],0x30 at address 0x1308c is visited for 1 times

0x1284b: mov eax,r12d
0x1284e: mov ebx,0x30
0x12853: xor r12d,r12d
0x12856: jmp 0x12408
0x12856: jump address is 0x12408
Block exists: cmp byte ptr [rsp+0xd],0x1 at address 0x12408 is visited for 4 times

0x12e29: mov eax,r12d
0x12e2c: mov ebx,0x30
0x12e31: xor r12d,r12d
0x12e34: jmp 0x12439
0x12e34: jump address is 0x12439
Block exists: test r10b,r10b at address 0x12439 is visited for 5 times

0x1281a: cmp dword ptr [rsp+0x8],0x2
0x1281f: lea r15,[rcx+0x1]
0x12823: je 0x12e29
0x12823: jump address is 0x12e29
Block exists: mov eax,r12d at address 0x12e29 is visited for 1 times

Block exists: lea rax,[rbp+0x1] at address 0x12829 is visited for 1 times

0x12e39: mov byte ptr [r14+r15+0x2],0x27
0x12e3f: jmp 0x12809
0x12e3f: jump address is 0x12809
0x12809: lea rcx,[r15+0x3]
0x1280d: mov r8d,eax
0x12810: cmp r13,rcx
0x12813: jbe 0x1281a
0x12813: jump address is 0x1281a
Block exists: cmp dword ptr [rsp+0x8],0x2 at address 0x1281a is visited for 1 times

Block exists: mov byte ptr [r14+rcx],0x5c at address 0x12815 is visited for 1 times

0x127fc: lea rcx,[r15+0x2]
0x12800: cmp r13,rcx
0x12803: ja 0x12e39
0x12803: jump address is 0x12e39
Block exists: mov byte ptr [r14+r15+0x2],0x27 at address 0x12e39 is visited for 1 times

Block exists: lea rcx,[r15+0x3] at address 0x12809 is visited for 2 times

0x127ed: lea rcx,[r15+0x1]
0x127f1: cmp r13,rcx
0x127f4: jbe 0x127fc
0x127f4: jump address is 0x127fc
Block exists: lea rcx,[r15+0x2] at address 0x127fc is visited for 1 times

Block exists: mov byte ptr [r14+r15+0x1],0x24 at address 0x127f6 is visited for 1 times

0x12810: cmp r13,rcx
0x12813: jbe 0x1281a
0x12813: jump address is 0x1281a
Block exists: cmp dword ptr [rsp+0x8],0x2 at address 0x1281a is visited for 1 times

Block exists: mov byte ptr [r14+rcx],0x5c at address 0x12815 is visited for 1 times

0x1336a: movzx ebx,byte ptr [rsp+0xf]
0x1336f: mov rbp,r11
0x13372: mov eax,edx
0x13374: mov byte ptr [rsp+0xd],bl
0x13378: jmp 0x12d69
0x13378: jump address is 0x12d69
Block exists: cmp byte ptr [rsp+0xd],0x0 at address 0x12d69 is visited for 3 times

0x126d8: cmp qword ptr [rsp+0x58],0x1
0x126de: jne 0x12a88
0x126de: jump address is 0x12a88
0x126e4: mov qword ptr [rsp+0x38],r11
0x126e9: mov byte ptr [rsp+0x30],r8b
0x126ee: mov byte ptr [rsp+0x28],r10b
0x126f3: call 0x3860
0x126f3: jump address is 0x3860
0x3860: jmp qword ptr [rip+0x21c74a]
Execute the function: __ctype_b_loc

0x3860: the return address is 0x126f8
0x126f8: mov rcx,qword ptr [rax]
0x126fb: movzx edx,bl
0x126fe: movzx r10d,byte ptr [rsp+0x28]
0x12704: movzx r8d,byte ptr [rsp+0x30]
0x1270a: mov r11,qword ptr [rsp+0x38]
0x1270f: mov edi,0x1
0x12714: movzx eax,word ptr [rcx+rdx*2]
0x12718: and ax,0x4000
0x1271c: setne r12b
0x12720: sete al
0x12723: and al,byte ptr [rsp+0xd]
0x12727: test al,al
0x12729: jne 0x130c1
0x12729: jump address is 0x130c1
0x1272f: cmp dword ptr [rsp+0x8],0x2
0x12734: sete dl
0x12737: jmp 0x12408
0x12737: jump address is 0x12408
Block exists: cmp byte ptr [rsp+0xd],0x1 at address 0x12408 is visited for 4 times

0x130c1: movzx edx,byte ptr [rsp+0xd]
0x130c6: xor r12d,r12d
0x130c9: jmp 0x12bd0
0x130c9: jump address is 0x12bd0
0x12bd0: mov rcx,rdi
0x12bd3: xor esi,esi
0x12bd5: movzx r9d,byte ptr [rsp+0xf]
0x12bdb: add rcx,rbp
0x12bde: mov rdi,qword ptr [rsp+0x10]
0x12be3: jmp 0x12c9e
0x12be3: jump address is 0x12c9e
0x12c9e: test dl,dl
0x12ca0: jne 0x12bf0
0x12ca0: jump address is 0x12bf0
0x12ca6: mov eax,esi
0x12ca8: xor eax,0x1
0x12cab: and eax,r8d
0x12cae: test r10b,r10b
0x12cb1: je 0x12cc1
0x12cb1: jump address is 0x12cc1
0x12cb3: cmp r13,r15
0x12cb6: jbe 0x12cbd
0x12cb6: jump address is 0x12cbd
0x12cb8: mov byte ptr [r14+r15],0x5c
0x12cbd: add r15,0x1
0x12cc1: add rbp,0x1
0x12cc5: cmp rbp,rcx
0x12cc8: jae 0x1244c
0x12cc8: jump address is 0x1244c
Block exists: test al,al at address 0x1244c is visited for 1 times

0x12cbd: add r15,0x1
0x12cc1: add rbp,0x1
0x12cc5: cmp rbp,rcx
0x12cc8: jae 0x1244c
0x12cc8: jump address is 0x1244c
Block exists: test al,al at address 0x1244c is visited for 1 times

0x12cc1: add rbp,0x1
0x12cc5: cmp rbp,rcx
0x12cc8: jae 0x1244c
0x12cc8: jump address is 0x1244c
Block exists: test al,al at address 0x1244c is visited for 1 times

0x12bf0: cmp dword ptr [rsp+0x8],0x2
0x12bf5: sete al
0x12bf8: test r9b,r9b
0x12bfb: jne 0x130b0
0x12bfb: jump address is 0x130b0
0x12c01: mov esi,r8d
0x12c04: xor esi,0x1
0x12c07: and al,sil
0x12c0a: je 0x12c3b
0x12c0a: jump address is 0x12c3b
0x12c0c: cmp r13,r15
0x12c0f: jbe 0x12c16
0x12c0f: jump address is 0x12c16
0x12c11: mov byte ptr [r14+r15],0x27
0x12c16: lea rsi,[r15+0x1]
0x12c1a: cmp r13,rsi
0x12c1d: jbe 0x12c25
0x12c1d: jump address is 0x12c25
0x12c1f: mov byte ptr [r14+r15+0x1],0x24
0x12c25: lea rsi,[r15+0x2]
0x12c29: cmp r13,rsi
0x12c2c: jbe 0x12c34
0x12c2c: jump address is 0x12c34
0x12c2e: mov byte ptr [r14+r15+0x2],0x27
0x12c34: add r15,0x3
0x12c38: mov r8d,eax
0x12c3b: cmp r13,r15
0x12c3e: jbe 0x12c45
0x12c3e: jump address is 0x12c45
0x12c40: mov byte ptr [r14+r15],0x5c
0x12c45: lea rax,[r15+0x1]
0x12c49: cmp r13,rax
0x12c4c: jbe 0x12c5b
0x12c4c: jump address is 0x12c5b
0x12c4e: mov eax,ebx
0x12c50: shr al,0x6
0x12c53: add eax,0x30
0x12c56: mov byte ptr [r14+r15+0x1],al
0x12c5b: lea rax,[r15+0x2]
0x12c5f: cmp r13,rax
0x12c62: jbe 0x12c74
0x12c62: jump address is 0x12c74
0x12c64: mov eax,ebx
0x12c66: shr al,0x3
0x12c69: and eax,0x7
0x12c6c: add eax,0x30
0x12c6f: mov byte ptr [r14+r15+0x2],al
0x12c74: and ebx,0x7
0x12c77: add rbp,0x1
0x12c7b: add r15,0x3
0x12c7f: add ebx,0x30
0x12c82: cmp rbp,rcx
0x12c85: jae 0x12470
0x12c85: jump address is 0x12470
Block exists: cmp r15,r13 at address 0x12470 is visited for 5 times

0x12c74: and ebx,0x7
0x12c77: add rbp,0x1
0x12c7b: add r15,0x3
0x12c7f: add ebx,0x30
0x12c82: cmp rbp,rcx
0x12c85: jae 0x12470
0x12c85: jump address is 0x12470
Block exists: cmp r15,r13 at address 0x12470 is visited for 5 times

0x12c5b: lea rax,[r15+0x2]
0x12c5f: cmp r13,rax
0x12c62: jbe 0x12c74
0x12c62: jump address is 0x12c74
Block exists: and ebx,0x7 at address 0x12c74 is visited for 1 times

Block exists: mov eax,ebx at address 0x12c64 is visited for 1 times

0x12c45: lea rax,[r15+0x1]
0x12c49: cmp r13,rax
0x12c4c: jbe 0x12c5b
0x12c4c: jump address is 0x12c5b
Block exists: lea rax,[r15+0x2] at address 0x12c5b is visited for 1 times

Block exists: mov eax,ebx at address 0x12c4e is visited for 1 times

0x12c34: add r15,0x3
0x12c38: mov r8d,eax
0x12c3b: cmp r13,r15
0x12c3e: jbe 0x12c45
0x12c3e: jump address is 0x12c45
Block exists: lea rax,[r15+0x1] at address 0x12c45 is visited for 1 times

Block exists: mov byte ptr [r14+r15],0x5c at address 0x12c40 is visited for 1 times

0x12c25: lea rsi,[r15+0x2]
0x12c29: cmp r13,rsi
0x12c2c: jbe 0x12c34
0x12c2c: jump address is 0x12c34
Block exists: add r15,0x3 at address 0x12c34 is visited for 1 times

Block exists: mov byte ptr [r14+r15+0x2],0x27 at address 0x12c2e is visited for 1 times

0x12c16: lea rsi,[r15+0x1]
0x12c1a: cmp r13,rsi
0x12c1d: jbe 0x12c25
0x12c1d: jump address is 0x12c25
Block exists: lea rsi,[r15+0x2] at address 0x12c25 is visited for 1 times

Block exists: mov byte ptr [r14+r15+0x1],0x24 at address 0x12c1f is visited for 1 times

0x12c3b: cmp r13,r15
0x12c3e: jbe 0x12c45
0x12c3e: jump address is 0x12c45
Block exists: lea rax,[r15+0x1] at address 0x12c45 is visited for 1 times

Block exists: mov byte ptr [r14+r15],0x5c at address 0x12c40 is visited for 1 times

0x130b0: movzx ebx,byte ptr [rsp+0xf]
0x130b5: mov rbp,r11
0x130b8: mov byte ptr [rsp+0xd],bl
0x130bc: jmp 0x12d69
0x130bc: jump address is 0x12d69
Block exists: cmp byte ptr [rsp+0xd],0x0 at address 0x12d69 is visited for 3 times

0x12a88: lea rax,[rsp+0xa0]
0x12a90: cmp r11,0xffffffffffffffff
0x12a94: mov qword ptr [rsp+0xa0],0x0
0x12aa0: mov qword ptr [rsp+0x28],rax
0x12aa5: jne 0x12ad4
0x12aa5: jump address is 0x12ad4
0x12aa7: mov rdi,qword ptr [rsp+0x10]
0x12aac: mov byte ptr [rsp+0x40],r8b
0x12ab1: mov byte ptr [rsp+0x38],r10b
0x12ab6: mov qword ptr [rsp+0x30],r9
0x12abb: call 0x3400
0x12abb: jump address is 0x3400
0x3400: jmp qword ptr [rip+0x21c97a]
Execute the function: strlen

0x3400: the return address is 0x12ac0
0x12ac0: movzx r8d,byte ptr [rsp+0x40]
0x12ac6: movzx r10d,byte ptr [rsp+0x38]
0x12acc: mov r11,rax
0x12acf: mov r9,qword ptr [rsp+0x30]
0x12ad4: lea rax,[rsp+0x9c]
0x12adc: xor ecx,ecx
0x12ade: mov byte ptr [rsp+0x7e],bl
0x12ae2: mov byte ptr [rsp+0x7d],r8b
0x12ae7: mov rbx,rcx
0x12aea: mov qword ptr [rsp+0x88],r9
0x12af2: mov qword ptr [rsp+0x38],rax
0x12af7: mov byte ptr [rsp+0x7f],r10b
0x12afc: mov qword ptr [rsp+0x80],r15
0x12b04: mov qword ptr [rsp+0x40],r14
0x12b09: mov qword ptr [rsp+0x70],r13
0x12b0e: mov qword ptr [rsp+0x30],r11
0x12b13: mov rax,qword ptr [rsp+0x10]
0x12b18: lea r14,[rbp+rbx]
0x12b1d: mov rdx,qword ptr [rsp+0x30]
0x12b22: mov rcx,qword ptr [rsp+0x28]
0x12b27: mov rdi,qword ptr [rsp+0x38]
0x12b2c: lea r13,[rax+r14]
0x12b30: sub rdx,r14
0x12b33: mov rsi,r13
0x12b36: call 0x15350
0x12b36: jump address is 0x15350
0x15350: push r13
0x15352: push r12
0x15354: mov r13,rsi
0x15357: push rbp
0x15358: push rbx
0x15359: mov rbx,rdi
0x1535c: mov r12,rdx
0x1535f: sub rsp,0x18
0x15363: mov rax,qword ptr fs:0x28
0x1536c: mov qword ptr [rsp+0x8],rax
0x15371: xor eax,eax
0x15373: lea rax,[rsp+0x4]
0x15378: test rdi,rdi
0x1537b: cmove rbx,rax
0x1537f: mov rdi,rbx
0x15382: call 0x3440
0x15382: jump address is 0x3440
0x3440: jmp qword ptr [rip+0x21c95a]
Execute the function: mbrtowc

0x3440: the return address is 0x15387
0x15387: cmp rax,0xfffffffffffffffd
0x1538b: mov rbp,rax
0x1538e: jbe 0x153b0
0x1538e: jump address is 0x153b0
0x15390: test r12,r12
0x15393: je 0x153b0
0x15393: jump address is 0x153b0
Block exists: mov rdx,qword ptr [rsp+0x8] at address 0x153b0 is visited for 1 times

0x15395: xor edi,edi
0x15397: call 0xd6e0
0x15397: jump address is 0xd6e0
0xd6e0: sub rsp,0x8
0xd6e4: xor esi,esi
0xd6e6: call 0x3700
0xd6e6: jump address is 0x3700
0x3700: jmp qword ptr [rip+0x21c7fa]
Execute the function: setlocale

0x3700: the return address is 0xd6eb
0xd6eb: mov rdx,rax
0xd6ee: mov eax,0x1
0xd6f3: test rdx,rdx
0xd6f6: je 0xd715
0xd6f6: jump address is 0xd715
0xd6f8: lea rdi,[rip+0xc89f]
0xd6ff: mov ecx,0x2
0xd704: mov rsi,rdx
0xd707: rep cmpsb [rsi],[rdi]
0xd709: seta cl
0xd70c: sbb cl,0x0
0xd70f: xor eax,eax
0xd711: test cl,cl
0xd713: jne 0xd720
0xd713: jump address is 0xd720
0xd715: add rsp,0x8
0xd719: ret
0xd719: the return address is 0x1539c
0x1539c: test al,al
0x1539e: jne 0x153b0
0x1539e: jump address is 0x153b0
Block exists: mov rdx,qword ptr [rsp+0x8] at address 0x153b0 is visited for 1 times

0x153a0: movzx eax,byte ptr [r13]
0x153a5: mov ebp,0x1
0x153aa: mov dword ptr [rbx],eax
0x153ac: nop dword ptr [rax]
0x153b0: mov rdx,qword ptr [rsp+0x8]
0x153b5: xor rdx,qword ptr fs:0x28
0x153be: mov rax,rbp
0x153c1: jne 0x153ce
0x153c1: jump address is 0x153ce
0x153c3: add rsp,0x18
0x153c7: pop rbx
0x153c8: pop rbp
0x153c9: pop r12
0x153cb: pop r13
0x153cd: ret
0x153cd: the return address is 0x12b3b
0x12b3b: test rax,rax
0x12b3e: mov r15,rax
0x12b41: je 0x12b91
0x12b41: jump address is 0x12b91
0x12b43: cmp rax,0xffffffffffffffff
0x12b47: je 0x13165
0x12b47: jump address is 0x13165
0x12b4d: cmp rax,0xfffffffffffffffe
0x12b51: je 0x130f1
0x12b51: jump address is 0x130f1
0x12b57: cmp dword ptr [rsp+0x8],0x2
0x12b5c: sete al
0x12b5f: and al,byte ptr [rsp+0xf]
0x12b63: jne 0x12d00
0x12b63: jump address is 0x12d00
0x12b69: mov edi,dword ptr [rsp+0x9c]
0x12b70: call 0x3830
0x12b70: jump address is 0x3830
0x3830: jmp qword ptr [rip+0x21c762]
Execute the function: iswprint

0x3830: the return address is 0x12b75
0x12b75: mov rdi,qword ptr [rsp+0x28]
0x12b7a: test eax,eax
0x12b7c: mov eax,0x0
0x12b81: cmove r12d,eax
0x12b85: add rbx,r15
0x12b88: call 0x3820
0x12b88: jump address is 0x3820
0x3820: jmp qword ptr [rip+0x21c76a]
Execute the function: mbsinit

0x3820: the return address is 0x12b8d
0x12b8d: test eax,eax
0x12b8f: je 0x12b13
0x12b8f: jump address is 0x12b13
0x12b91: mov edx,r12d
0x12b94: mov rdi,rbx
0x12b97: movzx r8d,byte ptr [rsp+0x7d]
0x12b9d: xor edx,0x1
0x12ba0: movzx ebx,byte ptr [rsp+0x7e]
0x12ba5: movzx r10d,byte ptr [rsp+0x7f]
0x12bab: and dl,byte ptr [rsp+0xd]
0x12baf: mov r15,qword ptr [rsp+0x80]
0x12bb7: mov r14,qword ptr [rsp+0x40]
0x12bbc: mov r13,qword ptr [rsp+0x70]
0x12bc1: mov r11,qword ptr [rsp+0x30]
0x12bc6: cmp rdi,0x1
0x12bca: jbe 0x131cb
0x12bca: jump address is 0x131cb
0x131cb: mov eax,edx
0x131cd: jmp 0x12727
0x131cd: jump address is 0x12727
Block exists: test al,al at address 0x12727 is visited for 1 times

0x12b13: mov rax,qword ptr [rsp+0x10]
0x12b18: lea r14,[rbp+rbx]
0x12b1d: mov rdx,qword ptr [rsp+0x30]
0x12b22: mov rcx,qword ptr [rsp+0x28]
0x12b27: mov rdi,qword ptr [rsp+0x38]
0x12b2c: lea r13,[rax+r14]
0x12b30: sub rdx,r14
0x12b33: mov rsi,r13
0x12b36: call 0x15350
0x12b36: jump address is 0x15350
0x15350: push r13
0x15352: push r12
0x15354: mov r13,rsi
0x15357: push rbp
0x15358: push rbx
0x15359: mov rbx,rdi
0x1535c: mov r12,rdx
0x1535f: sub rsp,0x18
0x15363: mov rax,qword ptr fs:0x28
0x1536c: mov qword ptr [rsp+0x8],rax
0x15371: xor eax,eax
0x15373: lea rax,[rsp+0x4]
0x15378: test rdi,rdi
0x1537b: cmove rbx,rax
0x1537f: mov rdi,rbx
0x15382: call 0x3440
0x15382: jump address is 0x3440
0x3440: jmp qword ptr [rip+0x21c95a]
Execute the function: mbrtowc

0x3440: the return address is 0x15387
0x15387: cmp rax,0xfffffffffffffffd
0x1538b: mov rbp,rax
0x1538e: jbe 0x153b0
0x1538e: jump address is 0x153b0
0x15390: test r12,r12
0x15393: je 0x153b0
0x15393: jump address is 0x153b0
Block exists: mov rdx,qword ptr [rsp+0x8] at address 0x153b0 is visited for 2 times

0x15395: xor edi,edi
0x15397: call 0xd6e0
0x15397: jump address is 0xd6e0
0xd6e0: sub rsp,0x8
0xd6e4: xor esi,esi
0xd6e6: call 0x3700
0xd6e6: jump address is 0x3700
0x3700: jmp qword ptr [rip+0x21c7fa]
Execute the function: setlocale

0x3700: the return address is 0xd6eb
0xd6eb: mov rdx,rax
0xd6ee: mov eax,0x1
0xd6f3: test rdx,rdx
0xd6f6: je 0xd715
0xd6f6: jump address is 0xd715
0xd6f8: lea rdi,[rip+0xc89f]
0xd6ff: mov ecx,0x2
0xd704: mov rsi,rdx
0xd707: rep cmpsb [rsi],[rdi]
0xd709: seta cl
0xd70c: sbb cl,0x0
0xd70f: xor eax,eax
0xd711: test cl,cl
0xd713: jne 0xd720
0xd713: jump address is 0xd720
Block exists: add rsp,0x8 at address 0xd715 is visited for 3 times

0xd720: lea rdi,[rip+0xc879]
0xd727: mov ecx,0x6
0xd72c: mov rsi,rdx
0xd72f: rep cmpsb [rsi],[rdi]
0xd731: seta al
0xd734: sbb al,0x0
0xd736: test al,al
0xd738: setne al
0xd73b: add rsp,0x8
0xd73f: ret
0xd73f: the return address is 0x1539c
0x1539c: test al,al
0x1539e: jne 0x153b0
0x1539e: jump address is 0x153b0
Block exists: mov rdx,qword ptr [rsp+0x8] at address 0x153b0 is visited for 2 times

0x153a0: movzx eax,byte ptr [r13]
0x153a5: mov ebp,0x1
0x153aa: mov dword ptr [rbx],eax
0x153ac: nop dword ptr [rax]
0x153b0: mov rdx,qword ptr [rsp+0x8]
0x153b5: xor rdx,qword ptr fs:0x28
0x153be: mov rax,rbp
0x153c1: jne 0x153ce
0x153c1: jump address is 0x153ce
0x153c3: add rsp,0x18
0x153c7: pop rbx
0x153c8: pop rbp
0x153c9: pop r12
0x153cb: pop r13
0x153cd: ret
0x153cd: the return address is unb
0xd715: add rsp,0x8
0xd719: ret
0xd719: the return address is 0x1539c
Block exists: test al,al at address 0x1539c is visited for 2 times

0x153b0: mov rdx,qword ptr [rsp+0x8]
0x153b5: xor rdx,qword ptr fs:0x28
0x153be: mov rax,rbp
0x153c1: jne 0x153ce
0x153c1: jump address is 0x153ce
0x153c3: add rsp,0x18
0x153c7: pop rbx
0x153c8: pop rbp
0x153c9: pop r12
0x153cb: pop r13
0x153cd: ret
0x153cd: the return address is 0x12b3b
0x12b3b: test rax,rax
0x12b3e: mov r15,rax
0x12b41: je 0x12b91
0x12b41: jump address is 0x12b91
0x12b43: cmp rax,0xffffffffffffffff
0x12b47: je 0x13165
0x12b47: jump address is 0x13165
0x12b4d: cmp rax,0xfffffffffffffffe
0x12b51: je 0x130f1
0x12b51: jump address is 0x130f1
0x12b57: cmp dword ptr [rsp+0x8],0x2
0x12b5c: sete al
0x12b5f: and al,byte ptr [rsp+0xf]
0x12b63: jne 0x12d00
0x12b63: jump address is 0x12d00
0x12b69: mov edi,dword ptr [rsp+0x9c]
0x12b70: call 0x3830
0x12b70: jump address is 0x3830
0x3830: jmp qword ptr [rip+0x21c762]
Execute the function: iswprint

0x3830: the return address is 0x12b75
0x12b75: mov rdi,qword ptr [rsp+0x28]
0x12b7a: test eax,eax
0x12b7c: mov eax,0x0
0x12b81: cmove r12d,eax
0x12b85: add rbx,r15
0x12b88: call 0x3820
0x12b88: jump address is 0x3820
0x3820: jmp qword ptr [rip+0x21c76a]
Execute the function: mbsinit

0x3820: the return address is 0x12b8d
0x12b8d: test eax,eax
0x12b8f: je 0x12b13
0x12b8f: jump address is 0x12b13
Block exists: mov edx,r12d at address 0x12b91 is visited for 2 times

0x12b13: mov rax,qword ptr [rsp+0x10]
0x12b18: lea r14,[rbp+rbx]
0x12b1d: mov rdx,qword ptr [rsp+0x30]
0x12b22: mov rcx,qword ptr [rsp+0x28]
0x12b27: mov rdi,qword ptr [rsp+0x38]
0x12b2c: lea r13,[rax+r14]
0x12b30: sub rdx,r14
0x12b33: mov rsi,r13
0x12b36: call 0x15350
0x12b36: jump address is 0x15350
0x15350: push r13
0x15352: push r12
0x15354: mov r13,rsi
0x15357: push rbp
0x15358: push rbx
0x15359: mov rbx,rdi
0x1535c: mov r12,rdx
0x1535f: sub rsp,0x18
0x15363: mov rax,qword ptr fs:0x28
0x1536c: mov qword ptr [rsp+0x8],rax
0x15371: xor eax,eax
0x15373: lea rax,[rsp+0x4]
0x15378: test rdi,rdi
0x1537b: cmove rbx,rax
0x1537f: mov rdi,rbx
0x15382: call 0x3440
0x15382: jump address is 0x3440
0x3440: jmp qword ptr [rip+0x21c95a]
Execute the function: mbrtowc

0x3440: the return address is 0x15387
0x15387: cmp rax,0xfffffffffffffffd
0x1538b: mov rbp,rax
0x1538e: jbe 0x153b0
0x1538e: jump address is 0x153b0
0x15390: test r12,r12
0x15393: je 0x153b0
0x15393: jump address is 0x153b0
Block exists: mov rdx,qword ptr [rsp+0x8] at address 0x153b0 is visited for 3 times

0x15395: xor edi,edi
0x15397: call 0xd6e0
0x15397: jump address is 0xd6e0
0xd6e0: sub rsp,0x8
0xd6e4: xor esi,esi
0xd6e6: call 0x3700
0xd6e6: jump address is 0x3700
0x3700: jmp qword ptr [rip+0x21c7fa]
Execute the function: setlocale

0x3700: the return address is 0xd6eb
0xd6eb: mov rdx,rax
0xd6ee: mov eax,0x1
0xd6f3: test rdx,rdx
0xd6f6: je 0xd715
0xd6f6: jump address is 0xd715
0xd6f8: lea rdi,[rip+0xc89f]
0xd6ff: mov ecx,0x2
0xd704: mov rsi,rdx
0xd707: rep cmpsb [rsi],[rdi]
0xd709: seta cl
0xd70c: sbb cl,0x0
0xd70f: xor eax,eax
0xd711: test cl,cl
0xd713: jne 0xd720
0xd713: jump address is 0xd720
Block exists: add rsp,0x8 at address 0xd715 is visited for 4 times

0xd720: lea rdi,[rip+0xc879]
0xd727: mov ecx,0x6
0xd72c: mov rsi,rdx
0xd72f: rep cmpsb [rsi],[rdi]
0xd731: seta al
0xd734: sbb al,0x0
0xd736: test al,al
0xd738: setne al
0xd73b: add rsp,0x8
0xd73f: ret
0xd73f: the return address is 0x1539c
0x1539c: test al,al
0x1539e: jne 0x153b0
0x1539e: jump address is 0x153b0
Block exists: mov rdx,qword ptr [rsp+0x8] at address 0x153b0 is visited for 3 times

0x153a0: movzx eax,byte ptr [r13]
0x153a5: mov ebp,0x1
0x153aa: mov dword ptr [rbx],eax
0x153ac: nop dword ptr [rax]
0x153b0: mov rdx,qword ptr [rsp+0x8]
0x153b5: xor rdx,qword ptr fs:0x28
0x153be: mov rax,rbp
0x153c1: jne 0x153ce
0x153c1: jump address is 0x153ce
0x153c3: add rsp,0x18
0x153c7: pop rbx
0x153c8: pop rbp
0x153c9: pop r12
0x153cb: pop r13
0x153cd: ret
0x153cd: the return address is upb
0xd715: add rsp,0x8
0xd719: ret
0xd719: the return address is 0x1539c
Block exists: test al,al at address 0x1539c is visited for 3 times

0x153b0: mov rdx,qword ptr [rsp+0x8]
0x153b5: xor rdx,qword ptr fs:0x28
0x153be: mov rax,rbp
0x153c1: jne 0x153ce
0x153c1: jump address is 0x153ce
Block exists: add rsp,0x18 at address 0x153c3 is visited for 4 times

0x1537b: cmove rbx,rax
0x1537f: mov rdi,rbx
0x15382: call 0x3440
0x15382: jump address is 0x3440
0x3440: jmp qword ptr [rip+0x21c95a]
Execute the function: mbrtowc

0x3440: the return address is 0x15387
Block exists: cmp rax,0xfffffffffffffffd at address 0x15387 is visited for 3 times

0x12b81: cmove r12d,eax
0x12b85: add rbx,r15
0x12b88: call 0x3820
0x12b88: jump address is 0x3820
0x3820: jmp qword ptr [rip+0x21c76a]
Execute the function: mbsinit

0x3820: the return address is 0x12b8d
Block exists: test eax,eax at address 0x12b8d is visited for 2 times

0x12d00: cmp r15,0x1
0x12d04: je 0x12b69
0x12d04: jump address is 0x12b69
Block exists: mov edi,dword ptr [rsp+0x9c] at address 0x12b69 is visited for 2 times

0x12d0a: mov rdi,qword ptr [rsp+0x10]
0x12d0f: lea rcx,[rdi+r15]
0x12d13: lea rdx,[rdi+r14+0x1]
0x12d18: lea r8,[rcx+r14]
0x12d1c: jmp 0x12d2d
0x12d1c: jump address is 0x12d2d
0x12d2d: movzx ecx,byte ptr [rdx]
0x12d30: sub ecx,0x5b
0x12d33: cmp cl,0x21
0x12d36: ja 0x12d20
0x12d36: jump address is 0x12d20
0x12d38: mov esi,0x1
0x12d3d: shl rsi,cl
0x12d40: mov rcx,rsi
0x12d43: movabs rsi,0x20000002b
0x12d4d: test rcx,rsi
0x12d50: je 0x12d20
0x12d50: jump address is 0x12d20
Block exists: add rdx,0x1 at address 0x12d20 is visited for 1 times

0x12d52: mov r14,qword ptr [rsp+0x40]
0x12d57: mov r13,qword ptr [rsp+0x70]
0x12d5c: mov rbp,qword ptr [rsp+0x30]
0x12d61: mov dword ptr [rsp+0x8],0x2
0x12d69: cmp byte ptr [rsp+0xd],0x0
0x12d6e: je 0x12d80
0x12d6e: jump address is 0x12d80
Block exists: sub rsp,0x8 at address 0x12d80 is visited for 3 times

Block exists: test al,al at address 0x12d70 is visited for 3 times

0x12d20: add rdx,0x1
0x12d24: cmp r8,rdx
0x12d27: je 0x12b69
0x12d27: jump address is 0x12b69
Block exists: movzx ecx,byte ptr [rdx] at address 0x12d2d is visited for 1 times

0x12b69: mov edi,dword ptr [rsp+0x9c]
0x12b70: call 0x3830
0x12b70: jump address is 0x3830
0x3830: jmp qword ptr [rip+0x21c762]
Execute the function: iswprint

0x3830: the return address is 0x12b75
Block exists: mov rdi,qword ptr [rsp+0x28] at address 0x12b75 is visited for 2 times

0x130f1: mov r11,qword ptr [rsp+0x30]
0x130f6: mov rsi,r14
0x130f9: mov rcx,r13
0x130fc: mov rax,rbx
0x130ff: mov rdi,rbx
0x13102: movzx r8d,byte ptr [rsp+0x7d]
0x13108: movzx ebx,byte ptr [rsp+0x7e]
0x1310d: mov r9,qword ptr [rsp+0x88]
0x13115: cmp rsi,r11
0x13118: movzx r10d,byte ptr [rsp+0x7f]
0x1311e: mov r15,qword ptr [rsp+0x80]
0x13126: mov r14,qword ptr [rsp+0x40]
0x1312b: mov r13,qword ptr [rsp+0x70]
0x13130: jae 0x13158
0x13130: jump address is 0x13158
0x13132: cmp byte ptr [rcx],0x0
0x13135: jne 0x13147
0x13135: jump address is 0x13147
0x13137: jmp 0x13158
0x13137: jump address is 0x13158
Block exists: movzx edx,byte ptr [rsp+0xd] at address 0x13158 is visited for 1 times

0x13147: add rax,0x1
0x1314b: lea rdx,[rbp+rax]
0x13150: cmp r11,rdx
0x13153: ja 0x13140
0x13153: jump address is 0x13140
0x13155: mov rdi,rax
0x13158: movzx edx,byte ptr [rsp+0xd]
0x1315d: xor r12d,r12d
0x13160: jmp 0x12bc6
0x13160: jump address is 0x12bc6
0x12bc6: cmp rdi,0x1
0x12bca: jbe 0x131cb
0x12bca: jump address is 0x131cb
0x12bd0: mov rcx,rdi
0x12bd3: xor esi,esi
0x12bd5: movzx r9d,byte ptr [rsp+0xf]
0x12bdb: add rcx,rbp
0x12bde: mov rdi,qword ptr [rsp+0x10]
0x12be3: jmp 0x12c9e
0x12be3: jump address is 0x12c9e
0x12c9e: test dl,dl
0x12ca0: jne 0x12bf0
0x12ca0: jump address is 0x12bf0
0x12ca6: mov eax,esi
0x12ca8: xor eax,0x1
0x12cab: and eax,r8d
0x12cae: test r10b,r10b
0x12cb1: je 0x12cc1
0x12cb1: jump address is 0x12cc1
0x12cb3: cmp r13,r15
0x12cb6: jbe 0x12cbd
0x12cb6: jump address is 0x12cbd
0x12cb8: mov byte ptr [r14+r15],0x5c
0x12cbd: add r15,0x1
0x12cc1: add rbp,0x1
0x12cc5: cmp rbp,rcx
0x12cc8: jae 0x1244c
0x12cc8: jump address is 0x1244c
Block exists: test al,al at address 0x1244c is visited for 1 times

0x12cce: test al,al
0x12cd0: je 0x130ce
0x12cd0: jump address is 0x130ce
0x12cd6: cmp r13,r15
0x12cd9: jbe 0x12ce0
0x12cd9: jump address is 0x12ce0
0x12cdb: mov byte ptr [r14+r15],0x27
0x12ce0: lea rax,[r15+0x1]
0x12ce4: cmp r13,rax
0x12ce7: jbe 0x12cef
0x12ce7: jump address is 0x12cef
0x12ce9: mov byte ptr [r14+r15+0x1],0x27
0x12cef: add r15,0x2
0x12cf3: xor r10d,r10d
0x12cf6: xor r8d,r8d
0x12cf9: jmp 0x12c8d
0x12cf9: jump address is 0x12c8d
0x12c8d: cmp r13,r15
0x12c90: jbe 0x12c96
0x12c90: jump address is 0x12c96
0x12c92: mov byte ptr [r14+r15],bl
0x12c96: movzx ebx,byte ptr [rdi+rbp]
0x12c9a: add r15,0x1
0x12c9e: test dl,dl
0x12ca0: jne 0x12bf0
0x12ca0: jump address is 0x12bf0
Block exists: cmp dword ptr [rsp+0x8],0x2 at address 0x12bf0 is visited for 2 times

Block exists: mov eax,esi at address 0x12ca6 is visited for 2 times

0x12c96: movzx ebx,byte ptr [rdi+rbp]
0x12c9a: add r15,0x1
0x12c9e: test dl,dl
0x12ca0: jne 0x12bf0
0x12ca0: jump address is 0x12bf0
Block exists: cmp dword ptr [rsp+0x8],0x2 at address 0x12bf0 is visited for 2 times

Block exists: mov eax,esi at address 0x12ca6 is visited for 2 times

0x12cef: add r15,0x2
0x12cf3: xor r10d,r10d
0x12cf6: xor r8d,r8d
0x12cf9: jmp 0x12c8d
0x12cf9: jump address is 0x12c8d
Block exists: cmp r13,r15 at address 0x12c8d is visited for 1 times

0x12ce0: lea rax,[r15+0x1]
0x12ce4: cmp r13,rax
0x12ce7: jbe 0x12cef
0x12ce7: jump address is 0x12cef
Block exists: add r15,0x2 at address 0x12cef is visited for 1 times

Block exists: mov byte ptr [r14+r15+0x1],0x27 at address 0x12ce9 is visited for 1 times

0x130ce: xor r10d,r10d
0x130d1: jmp 0x12c8d
0x130d1: jump address is 0x12c8d
0x12c8d: cmp r13,r15
0x12c90: jbe 0x12c96
0x12c90: jump address is 0x12c96
0x12c92: mov byte ptr [r14+r15],bl
0x12c96: movzx ebx,byte ptr [rdi+rbp]
0x12c9a: add r15,0x1
0x12c9e: test dl,dl
0x12ca0: jne 0x12bf0
0x12ca0: jump address is 0x12bf0
Block exists: cmp dword ptr [rsp+0x8],0x2 at address 0x12bf0 is visited for 2 times

Block exists: mov eax,esi at address 0x12ca6 is visited for 2 times

0x12c96: movzx ebx,byte ptr [rdi+rbp]
0x12c9a: add r15,0x1
0x12c9e: test dl,dl
0x12ca0: jne 0x12bf0
0x12ca0: jump address is 0x12bf0
Block exists: cmp dword ptr [rsp+0x8],0x2 at address 0x12bf0 is visited for 2 times

Block exists: mov eax,esi at address 0x12ca6 is visited for 2 times

0x12cbd: add r15,0x1
0x12cc1: add rbp,0x1
0x12cc5: cmp rbp,rcx
0x12cc8: jae 0x1244c
0x12cc8: jump address is 0x1244c
Block exists: test al,al at address 0x1244c is visited for 1 times

Block exists: test al,al at address 0x12cce is visited for 1 times

0x12cc1: add rbp,0x1
0x12cc5: cmp rbp,rcx
0x12cc8: jae 0x1244c
0x12cc8: jump address is 0x1244c
Block exists: test al,al at address 0x1244c is visited for 1 times

Block exists: test al,al at address 0x12cce is visited for 1 times

0x12bf0: cmp dword ptr [rsp+0x8],0x2
0x12bf5: sete al
0x12bf8: test r9b,r9b
0x12bfb: jne 0x130b0
0x12bfb: jump address is 0x130b0
0x12c01: mov esi,r8d
0x12c04: xor esi,0x1
0x12c07: and al,sil
0x12c0a: je 0x12c3b
0x12c0a: jump address is 0x12c3b
0x12c0c: cmp r13,r15
0x12c0f: jbe 0x12c16
0x12c0f: jump address is 0x12c16
0x12c11: mov byte ptr [r14+r15],0x27
0x12c16: lea rsi,[r15+0x1]
0x12c1a: cmp r13,rsi
0x12c1d: jbe 0x12c25
0x12c1d: jump address is 0x12c25
0x12c1f: mov byte ptr [r14+r15+0x1],0x24
0x12c25: lea rsi,[r15+0x2]
0x12c29: cmp r13,rsi
0x12c2c: jbe 0x12c34
0x12c2c: jump address is 0x12c34
0x12c2e: mov byte ptr [r14+r15+0x2],0x27
0x12c34: add r15,0x3
0x12c38: mov r8d,eax
0x12c3b: cmp r13,r15
0x12c3e: jbe 0x12c45
0x12c3e: jump address is 0x12c45
0x12c40: mov byte ptr [r14+r15],0x5c
0x12c45: lea rax,[r15+0x1]
0x12c49: cmp r13,rax
0x12c4c: jbe 0x12c5b
0x12c4c: jump address is 0x12c5b
0x12c4e: mov eax,ebx
0x12c50: shr al,0x6
0x12c53: add eax,0x30
0x12c56: mov byte ptr [r14+r15+0x1],al
0x12c5b: lea rax,[r15+0x2]
0x12c5f: cmp r13,rax
0x12c62: jbe 0x12c74
0x12c62: jump address is 0x12c74
0x12c64: mov eax,ebx
0x12c66: shr al,0x3
0x12c69: and eax,0x7
0x12c6c: add eax,0x30
0x12c6f: mov byte ptr [r14+r15+0x2],al
0x12c74: and ebx,0x7
0x12c77: add rbp,0x1
0x12c7b: add r15,0x3
0x12c7f: add ebx,0x30
0x12c82: cmp rbp,rcx
0x12c85: jae 0x12470
0x12c85: jump address is 0x12470
Block exists: cmp r15,r13 at address 0x12470 is visited for 5 times

0x12c8b: mov esi,edx
0x12c8d: cmp r13,r15
0x12c90: jbe 0x12c96
0x12c90: jump address is 0x12c96
0x12c92: mov byte ptr [r14+r15],bl
0x12c96: movzx ebx,byte ptr [rdi+rbp]
0x12c9a: add r15,0x1
0x12c9e: test dl,dl
0x12ca0: jne 0x12bf0
0x12ca0: jump address is 0x12bf0
0x12ca6: mov eax,esi
0x12ca8: xor eax,0x1
0x12cab: and eax,r8d
0x12cae: test r10b,r10b
0x12cb1: je 0x12cc1
0x12cb1: jump address is 0x12cc1
0x12cb3: cmp r13,r15
0x12cb6: jbe 0x12cbd
0x12cb6: jump address is 0x12cbd
0x12cb8: mov byte ptr [r14+r15],0x5c
0x12cbd: add r15,0x1
0x12cc1: add rbp,0x1
0x12cc5: cmp rbp,rcx
0x12cc8: jae 0x1244c
0x12cc8: jump address is 0x1244c
Block exists: test al,al at address 0x1244c is visited for 1 times

0x12cce: test al,al
0x12cd0: je 0x130ce
0x12cd0: jump address is 0x130ce
0x12cd6: cmp r13,r15
0x12cd9: jbe 0x12ce0
0x12cd9: jump address is 0x12ce0
0x12cdb: mov byte ptr [r14+r15],0x27
0x12ce0: lea rax,[r15+0x1]
0x12ce4: cmp r13,rax
0x12ce7: jbe 0x12cef
0x12ce7: jump address is 0x12cef
0x12ce9: mov byte ptr [r14+r15+0x1],0x27
0x12cef: add r15,0x2
0x12cf3: xor r10d,r10d
0x12cf6: xor r8d,r8d
0x12cf9: jmp 0x12c8d
0x12cf9: jump address is 0x12c8d
Block exists: cmp r13,r15 at address 0x12c8d is visited for 2 times

0x12cef: add r15,0x2
0x12cf3: xor r10d,r10d
0x12cf6: xor r8d,r8d
0x12cf9: jmp 0x12c8d
0x12cf9: jump address is 0x12c8d
Block exists: cmp r13,r15 at address 0x12c8d is visited for 2 times

0x12ce0: lea rax,[r15+0x1]
0x12ce4: cmp r13,rax
0x12ce7: jbe 0x12cef
0x12ce7: jump address is 0x12cef
Block exists: add r15,0x2 at address 0x12cef is visited for 2 times

Block exists: mov byte ptr [r14+r15+0x1],0x27 at address 0x12ce9 is visited for 2 times

0x130ce: xor r10d,r10d
0x130d1: jmp 0x12c8d
0x130d1: jump address is 0x12c8d
Block exists: cmp r13,r15 at address 0x12c8d is visited for 2 times

0x12cbd: add r15,0x1
0x12cc1: add rbp,0x1
0x12cc5: cmp rbp,rcx
0x12cc8: jae 0x1244c
0x12cc8: jump address is 0x1244c
Block exists: test al,al at address 0x1244c is visited for 1 times

Block exists: test al,al at address 0x12cce is visited for 2 times

0x12cc1: add rbp,0x1
0x12cc5: cmp rbp,rcx
0x12cc8: jae 0x1244c
0x12cc8: jump address is 0x1244c
Block exists: test al,al at address 0x1244c is visited for 1 times

Block exists: test al,al at address 0x12cce is visited for 2 times

0x12bf0: cmp dword ptr [rsp+0x8],0x2
0x12bf5: sete al
0x12bf8: test r9b,r9b
0x12bfb: jne 0x130b0
0x12bfb: jump address is 0x130b0
Block exists: mov esi,r8d at address 0x12c01 is visited for 2 times

0x130b0: movzx ebx,byte ptr [rsp+0xf]
0x130b5: mov rbp,r11
0x130b8: mov byte ptr [rsp+0xd],bl
0x130bc: jmp 0x12d69
0x130bc: jump address is 0x12d69
0x12d69: cmp byte ptr [rsp+0xd],0x0
0x12d6e: je 0x12d80
0x12d6e: jump address is 0x12d80
Block exists: sub rsp,0x8 at address 0x12d80 is visited for 3 times

Block exists: test al,al at address 0x12d70 is visited for 3 times

0x12c96: movzx ebx,byte ptr [rdi+rbp]
0x12c9a: add r15,0x1
0x12c9e: test dl,dl
0x12ca0: jne 0x12bf0
0x12ca0: jump address is 0x12bf0
Block exists: cmp dword ptr [rsp+0x8],0x2 at address 0x12bf0 is visited for 3 times

Block exists: mov eax,esi at address 0x12ca6 is visited for 3 times

0x12c74: and ebx,0x7
0x12c77: add rbp,0x1
0x12c7b: add r15,0x3
0x12c7f: add ebx,0x30
0x12c82: cmp rbp,rcx
0x12c85: jae 0x12470
0x12c85: jump address is 0x12470
Block exists: cmp r15,r13 at address 0x12470 is visited for 5 times

Block exists: mov esi,edx at address 0x12c8b is visited for 1 times

0x12c5b: lea rax,[r15+0x2]
0x12c5f: cmp r13,rax
0x12c62: jbe 0x12c74
0x12c62: jump address is 0x12c74
Block exists: and ebx,0x7 at address 0x12c74 is visited for 2 times

Block exists: mov eax,ebx at address 0x12c64 is visited for 2 times

0x12c45: lea rax,[r15+0x1]
0x12c49: cmp r13,rax
0x12c4c: jbe 0x12c5b
0x12c4c: jump address is 0x12c5b
Block exists: lea rax,[r15+0x2] at address 0x12c5b is visited for 2 times

Block exists: mov eax,ebx at address 0x12c4e is visited for 2 times

0x12c34: add r15,0x3
0x12c38: mov r8d,eax
0x12c3b: cmp r13,r15
0x12c3e: jbe 0x12c45
0x12c3e: jump address is 0x12c45
Block exists: lea rax,[r15+0x1] at address 0x12c45 is visited for 2 times

Block exists: mov byte ptr [r14+r15],0x5c at address 0x12c40 is visited for 2 times

0x12c25: lea rsi,[r15+0x2]
0x12c29: cmp r13,rsi
0x12c2c: jbe 0x12c34
0x12c2c: jump address is 0x12c34
Block exists: add r15,0x3 at address 0x12c34 is visited for 2 times

Block exists: mov byte ptr [r14+r15+0x2],0x27 at address 0x12c2e is visited for 2 times

0x12c16: lea rsi,[r15+0x1]
0x12c1a: cmp r13,rsi
0x12c1d: jbe 0x12c25
0x12c1d: jump address is 0x12c25
Block exists: lea rsi,[r15+0x2] at address 0x12c25 is visited for 2 times

Block exists: mov byte ptr [r14+r15+0x1],0x24 at address 0x12c1f is visited for 2 times

0x12c3b: cmp r13,r15
0x12c3e: jbe 0x12c45
0x12c3e: jump address is 0x12c45
Block exists: lea rax,[r15+0x1] at address 0x12c45 is visited for 2 times

Block exists: mov byte ptr [r14+r15],0x5c at address 0x12c40 is visited for 2 times

0x130b0: movzx ebx,byte ptr [rsp+0xf]
0x130b5: mov rbp,r11
0x130b8: mov byte ptr [rsp+0xd],bl
0x130bc: jmp 0x12d69
0x130bc: jump address is 0x12d69
Block exists: cmp byte ptr [rsp+0xd],0x0 at address 0x12d69 is visited for 4 times

0x131cb: mov eax,edx
0x131cd: jmp 0x12727
0x131cd: jump address is 0x12727
0x12727: test al,al
0x12729: jne 0x130c1
0x12729: jump address is 0x130c1
0x1272f: cmp dword ptr [rsp+0x8],0x2
0x12734: sete dl
0x12737: jmp 0x12408
0x12737: jump address is 0x12408
Block exists: cmp byte ptr [rsp+0xd],0x1 at address 0x12408 is visited for 4 times

0x130c1: movzx edx,byte ptr [rsp+0xd]
0x130c6: xor r12d,r12d
0x130c9: jmp 0x12bd0
0x130c9: jump address is 0x12bd0
Block exists: mov rcx,rdi at address 0x12bd0 is visited for 2 times

0x13140: cmp byte ptr [r9+rax],0x0
0x13145: je 0x13155
0x13145: jump address is 0x13155
Block exists: mov rdi,rax at address 0x13155 is visited for 1 times

0x13147: add rax,0x1
0x1314b: lea rdx,[rbp+rax]
0x13150: cmp r11,rdx
0x13153: ja 0x13140
0x13153: jump address is 0x13140
Block exists: cmp byte ptr [r9+rax],0x0 at address 0x13140 is visited for 1 times

Block exists: mov rdi,rax at address 0x13155 is visited for 1 times

0x13158: movzx edx,byte ptr [rsp+0xd]
0x1315d: xor r12d,r12d
0x13160: jmp 0x12bc6
0x13160: jump address is 0x12bc6
Block exists: cmp rdi,0x1 at address 0x12bc6 is visited for 2 times

0x13165: mov rdi,rbx
0x13168: movzx r8d,byte ptr [rsp+0x7d]
0x1316e: movzx ebx,byte ptr [rsp+0x7e]
0x13173: movzx r10d,byte ptr [rsp+0x7f]
0x13179: mov r15,qword ptr [rsp+0x80]
0x13181: xor r12d,r12d
0x13184: mov r14,qword ptr [rsp+0x40]
0x13189: mov r13,qword ptr [rsp+0x70]
0x1318e: mov r11,qword ptr [rsp+0x30]
0x13193: movzx edx,byte ptr [rsp+0xd]
0x13198: jmp 0x12bc6
0x13198: jump address is 0x12bc6
Block exists: cmp rdi,0x1 at address 0x12bc6 is visited for 2 times

0x12b91: mov edx,r12d
0x12b94: mov rdi,rbx
0x12b97: movzx r8d,byte ptr [rsp+0x7d]
0x12b9d: xor edx,0x1
0x12ba0: movzx ebx,byte ptr [rsp+0x7e]
0x12ba5: movzx r10d,byte ptr [rsp+0x7f]
0x12bab: and dl,byte ptr [rsp+0xd]
0x12baf: mov r15,qword ptr [rsp+0x80]
0x12bb7: mov r14,qword ptr [rsp+0x40]
0x12bbc: mov r13,qword ptr [rsp+0x70]
0x12bc1: mov r11,qword ptr [rsp+0x30]
0x12bc6: cmp rdi,0x1
0x12bca: jbe 0x131cb
0x12bca: jump address is 0x131cb
Block exists: mov eax,edx at address 0x131cb is visited for 2 times

Block exists: mov rcx,rdi at address 0x12bd0 is visited for 2 times

0x12b81: cmove r12d,eax
0x12b85: add rbx,r15
0x12b88: call 0x3820
0x12b88: jump address is 0x3820
0x3820: jmp qword ptr [rip+0x21c76a]
Execute the function: mbsinit

0x3820: the return address is 0x12b8d
Block exists: test eax,eax at address 0x12b8d is visited for 2 times

0x12d00: cmp r15,0x1
0x12d04: je 0x12b69
0x12d04: jump address is 0x12b69
Block exists: mov edi,dword ptr [rsp+0x9c] at address 0x12b69 is visited for 3 times

0xd720: lea rdi,[rip+0xc879]
0xd727: mov ecx,0x6
0xd72c: mov rsi,rdx
0xd72f: rep cmpsb [rsi],[rdi]
0xd731: seta al
0xd734: sbb al,0x0
0xd736: test al,al
0xd738: setne al
0xd73b: add rsp,0x8
0xd73f: ret
0xd73f: the return address is 0x1539c
Block exists: test al,al at address 0x1539c is visited for 3 times

0xd715: add rsp,0x8
0xd719: ret
0xd719: the return address is 0x1539c
Block exists: test al,al at address 0x1539c is visited for 3 times

0x153b0: mov rdx,qword ptr [rsp+0x8]
0x153b5: xor rdx,qword ptr fs:0x28
0x153be: mov rax,rbp
0x153c1: jne 0x153ce
0x153c1: jump address is 0x153ce
Block exists: add rsp,0x18 at address 0x153c3 is visited for 4 times

0x12ad4: lea rax,[rsp+0x9c]
0x12adc: xor ecx,ecx
0x12ade: mov byte ptr [rsp+0x7e],bl
0x12ae2: mov byte ptr [rsp+0x7d],r8b
0x12ae7: mov rbx,rcx
0x12aea: mov qword ptr [rsp+0x88],r9
0x12af2: mov qword ptr [rsp+0x38],rax
0x12af7: mov byte ptr [rsp+0x7f],r10b
0x12afc: mov qword ptr [rsp+0x80],r15
0x12b04: mov qword ptr [rsp+0x40],r14
0x12b09: mov qword ptr [rsp+0x70],r13
0x12b0e: mov qword ptr [rsp+0x30],r11
0x12b13: mov rax,qword ptr [rsp+0x10]
0x12b18: lea r14,[rbp+rbx]
0x12b1d: mov rdx,qword ptr [rsp+0x30]
0x12b22: mov rcx,qword ptr [rsp+0x28]
0x12b27: mov rdi,qword ptr [rsp+0x38]
0x12b2c: lea r13,[rax+r14]
0x12b30: sub rdx,r14
0x12b33: mov rsi,r13
0x12b36: call 0x15350
0x12b36: jump address is 0x15350
Execute the function: rpl_mbrtowc

0x12b36: the return address is 0x12b3b
0x12b3b: test rax,rax
0x12b3e: mov r15,rax
0x12b41: je 0x12b91
0x12b41: jump address is 0x12b91
Block exists: mov edx,r12d at address 0x12b91 is visited for 2 times

0x12b43: cmp rax,0xffffffffffffffff
0x12b47: je 0x13165
0x12b47: jump address is 0x13165
0x12b4d: cmp rax,0xfffffffffffffffe
0x12b51: je 0x130f1
0x12b51: jump address is 0x130f1
0x12b57: cmp dword ptr [rsp+0x8],0x2
0x12b5c: sete al
0x12b5f: and al,byte ptr [rsp+0xf]
0x12b63: jne 0x12d00
0x12b63: jump address is 0x12d00
Block exists: mov edi,dword ptr [rsp+0x9c] at address 0x12b69 is visited for 3 times

0x12d00: cmp r15,0x1
0x12d04: je 0x12b69
0x12d04: jump address is 0x12b69
Block exists: mov edi,dword ptr [rsp+0x9c] at address 0x12b69 is visited for 3 times

0x12d0a: mov rdi,qword ptr [rsp+0x10]
0x12d0f: lea rcx,[rdi+r15]
0x12d13: lea rdx,[rdi+r14+0x1]
0x12d18: lea r8,[rcx+r14]
0x12d1c: jmp 0x12d2d
0x12d1c: jump address is 0x12d2d
Block exists: movzx ecx,byte ptr [rdx] at address 0x12d2d is visited for 1 times

0x130f1: mov r11,qword ptr [rsp+0x30]
0x130f6: mov rsi,r14
0x130f9: mov rcx,r13
0x130fc: mov rax,rbx
0x130ff: mov rdi,rbx
0x13102: movzx r8d,byte ptr [rsp+0x7d]
0x13108: movzx ebx,byte ptr [rsp+0x7e]
0x1310d: mov r9,qword ptr [rsp+0x88]
0x13115: cmp rsi,r11
0x13118: movzx r10d,byte ptr [rsp+0x7f]
0x1311e: mov r15,qword ptr [rsp+0x80]
0x13126: mov r14,qword ptr [rsp+0x40]
0x1312b: mov r13,qword ptr [rsp+0x70]
0x13130: jae 0x13158
0x13130: jump address is 0x13158
Block exists: movzx edx,byte ptr [rsp+0xd] at address 0x13158 is visited for 1 times

0x13132: cmp byte ptr [rcx],0x0
0x13135: jne 0x13147
0x13135: jump address is 0x13147
Block exists: add rax,0x1 at address 0x13147 is visited for 2 times

0x13137: jmp 0x13158
0x13137: jump address is 0x13158
Block exists: movzx edx,byte ptr [rsp+0xd] at address 0x13158 is visited for 1 times

0x13165: mov rdi,rbx
0x13168: movzx r8d,byte ptr [rsp+0x7d]
0x1316e: movzx ebx,byte ptr [rsp+0x7e]
0x13173: movzx r10d,byte ptr [rsp+0x7f]
0x13179: mov r15,qword ptr [rsp+0x80]
0x13181: xor r12d,r12d
0x13184: mov r14,qword ptr [rsp+0x40]
0x13189: mov r13,qword ptr [rsp+0x70]
0x1318e: mov r11,qword ptr [rsp+0x30]
0x13193: movzx edx,byte ptr [rsp+0xd]
0x13198: jmp 0x12bc6
0x13198: jump address is 0x12bc6
Block exists: cmp rdi,0x1 at address 0x12bc6 is visited for 2 times

0x13325: cmp dword ptr [rsp+0x8],0x2
0x1332a: movzx ebx,byte ptr [rsp+0xf]
0x1332f: mov rbp,r11
0x13332: sete al
0x13335: mov byte ptr [rsp+0xd],bl
0x13339: jmp 0x12d69
0x13339: jump address is 0x12d69
Block exists: cmp byte ptr [rsp+0xd],0x0 at address 0x12d69 is visited for 4 times

0x12910: xor r10d,r10d
0x12913: jmp 0x123b0
0x12913: jump address is 0x123b0
Block exists: movzx ebx,byte ptr [r9] at address 0x123b0 is visited for 2 times

0x12350: cmp rbx,r11
0x12353: mov byte ptr [rsp+0x28],r10b
0x12358: ja 0x12910
0x12358: jump address is 0x12910
Block exists: xor r10d,r10d at address 0x12910 is visited for 2 times

Block exists: mov rdx,qword ptr [rsp+0x18] at address 0x1235e is visited for 2 times

0x12740: movzx ebx,byte ptr [r9]
0x12744: cmp bl,0x7e
0x12747: ja 0x126d0
0x12747: jump address is 0x126d0
0x12749: lea rcx,[rip+0x7e58]
0x12750: movzx edx,bl
0x12753: movsxd rax,dword ptr [rcx+rdx*4]
0x12757: add rax,rcx
0x1275a: jmp rax
trace back
0x1275a: jmp rax
0x12757: add rax,rcx
0x12753: movsxd rax,dword ptr [rcx+rdx*4]
0x12750: movzx edx,bl
0x12749: lea rcx,[rip+0x7e58]
0x12747: ja 0x126d0
0x12744: cmp bl,0x7e
0x1275a: jump addresses resolved using jump table [0x127c0, 0x126d0, 0x127b0, 0x12900, 0x128e8, 0x12798, 0x128d8, 0x12780, 0x128c0, 0x128a8, 0x12890, 0x12878, 0x12860, 0x124d0, 0x124a0, 0x12760, 0x123d0]
0x1275a: jmp rax
0x1275a: jump address is 0x123d0
0x123d0: xor r10d,r10d
0x123d3: cmp r11,0x1
0x123d7: setne al
0x123da: cmp r11,0xffffffffffffffff
0x123de: jne 0x123ec
0x123de: jump address is 0x123ec
0x123e0: mov rax,qword ptr [rsp+0x10]
0x123e5: cmp byte ptr [rax+0x1],0x0
0x123e9: setne al
0x123ec: cmp dword ptr [rsp+0x8],0x2
0x123f1: sete dl
0x123f4: test al,al
0x123f6: je 0x12648
0x123f6: jump address is 0x12648
0x123fc: xor r12d,r12d
0x123ff: xor eax,eax
0x12401: nop dword ptr [rax]
0x12408: cmp byte ptr [rsp+0xd],0x1
0x1240d: jne 0x12522
0x1240d: jump address is 0x12522
Block exists: test dl,dl at address 0x12413 is visited for 5 times

0x12522: cmp byte ptr [rsp+0xf],0x0
0x12527: jne 0x1241b
0x12527: jump address is 0x1241b
Block exists: mov rsi,qword ptr [rsp+0x20] at address 0x1241b is visited for 5 times

0x1252d: jmp 0x12439
0x1252d: jump address is 0x12439
Block exists: test r10b,r10b at address 0x12439 is visited for 5 times

0x12648: test rbp,rbp
0x1264b: jne 0x123fc
0x1264b: jump address is 0x123fc
Block exists: xor r12d,r12d at address 0x123fc is visited for 3 times

0x123ec: cmp dword ptr [rsp+0x8],0x2
0x123f1: sete dl
0x123f4: test al,al
0x123f6: je 0x12648
0x123f6: jump address is 0x12648
Block exists: test rbp,rbp at address 0x12648 is visited for 3 times

Block exists: xor r12d,r12d at address 0x123fc is visited for 3 times

0x1275a: jmp rax
0x1275a: jump address is 0x12760
0x12760: xor r10d,r10d
0x12763: cmp byte ptr [rsp+0xd],0x0
0x12768: jne 0x1255e
0x12768: jump address is 0x1255e
0x1276e: nop
0x12770: mov edx,0x5c
0x12775: mov ebx,0x5c
0x1277a: jmp 0x12514
0x1277a: jump address is 0x12514
0x12514: cmp byte ptr [rsp+0xd],0x0
0x12519: jne 0x12580
0x12519: jump address is 0x12580
0x1251b: mov ebx,edx
0x1251d: xor r12d,r12d
0x12520: xor eax,eax
0x12522: cmp byte ptr [rsp+0xf],0x0
0x12527: jne 0x1241b
0x12527: jump address is 0x1241b
Block exists: mov rsi,qword ptr [rsp+0x20] at address 0x1241b is visited for 5 times

0x1252d: jmp 0x12439
0x1252d: jump address is 0x12439
Block exists: test r10b,r10b at address 0x12439 is visited for 5 times

0x12580: xor r12d,r12d
0x12583: cmp dword ptr [rsp+0x8],0x2
0x12588: sete dl
0x1258b: cmp byte ptr [rsp+0xf],0x0
0x12590: mov eax,edx
0x12592: jne 0x12de8
0x12592: jump address is 0x12de8
Block exists: mov rbp,r11 at address 0x12de8 is visited for 4 times

Block exists: mov eax,r8d at address 0x12598 is visited for 4 times

0x1255e: cmp byte ptr [rsp+0xf],0x0
0x12563: je 0x12770
0x12563: jump address is 0x12770
0x12569: cmp qword ptr [rsp+0x18],0x0
0x1256f: jne 0x1292b
0x1256f: jump address is 0x1292b
0x12575: mov ebx,0x5c
0x1257a: nop word ptr [rax+rax]
0x12580: xor r12d,r12d
0x12583: cmp dword ptr [rsp+0x8],0x2
0x12588: sete dl
0x1258b: cmp byte ptr [rsp+0xf],0x0
0x12590: mov eax,edx
0x12592: jne 0x12de8
0x12592: jump address is 0x12de8
Block exists: mov rbp,r11 at address 0x12de8 is visited for 4 times

Block exists: mov eax,r8d at address 0x12598 is visited for 4 times

0x1292b: add rbp,0x1
0x1292f: mov eax,r8d
0x12932: xor r12d,r12d
0x12935: mov ebx,0x5c
0x1293a: jmp 0x1244c
0x1293a: jump address is 0x1244c
Block exists: test al,al at address 0x1244c is visited for 1 times

0x12770: mov edx,0x5c
0x12775: mov ebx,0x5c
0x1277a: jmp 0x12514
0x1277a: jump address is 0x12514
Block exists: cmp byte ptr [rsp+0xd],0x0 at address 0x12514 is visited for 3 times

0x1275a: jmp rax
0x1275a: jump address is 0x124a0
0x124a0: xor r10d,r10d
0x124a3: mov eax,dword ptr [rsp+0x8]
0x124a7: cmp eax,0x2
0x124aa: je 0x12a68
0x124aa: jump address is 0x12a68
0x124b0: cmp eax,0x5
0x124b3: je 0x12a28
0x124b3: jump address is 0x12a28
0x124b9: cmp eax,0x2
0x124bc: mov ebx,0x3f
0x124c1: sete dl
0x124c4: xor r12d,r12d
0x124c7: xor eax,eax
0x124c9: jmp 0x12408
0x124c9: jump address is 0x12408
Block exists: cmp byte ptr [rsp+0xd],0x1 at address 0x12408 is visited for 4 times

0x12a28: test byte ptr [rsp+0x78],0x4
0x12a2d: je 0x12a50
0x12a2d: jump address is 0x12a50
Block exists: lea rcx,[rbp+0x2] at address 0x12a2f is visited for 1 times

0x12a50: xor edx,edx
0x12a52: xor r12d,r12d
0x12a55: xor eax,eax
0x12a57: mov ebx,0x3f
0x12a5c: jmp 0x12408
0x12a5c: jump address is 0x12408
Block exists: cmp byte ptr [rsp+0xd],0x1 at address 0x12408 is visited for 4 times

0x12a68: cmp byte ptr [rsp+0xf],0x0
0x12a6d: jne 0x13290
0x12a6d: jump address is 0x13290
0x12a73: xor r12d,r12d
0x12a76: xor eax,eax
0x12a78: mov ebx,0x3f
0x12a7d: jmp 0x12439
0x12a7d: jump address is 0x12439
Block exists: test r10b,r10b at address 0x12439 is visited for 5 times

0x13290: mov rbp,r11
0x13293: movzx eax,byte ptr [rsp+0xf]
0x13298: jmp 0x12d69
0x13298: jump address is 0x12d69
Block exists: cmp byte ptr [rsp+0xd],0x0 at address 0x12d69 is visited for 4 times

0x1275a: jmp rax
0x1275a: jump address is 0x124d0
0x124d0: xor r10d,r10d
0x124d3: cmp dword ptr [rsp+0x8],0x2
0x124d8: je 0x129e0
0x124d8: jump address is 0x129e0
0x124de: mov byte ptr [rsp+0x7c],r12b
0x124e3: xor edx,edx
0x124e5: xor eax,eax
0x124e7: mov ebx,0x27
0x124ec: jmp 0x12408
0x124ec: jump address is 0x12408
0x12408: cmp byte ptr [rsp+0xd],0x1
0x1240d: jne 0x12522
0x1240d: jump address is 0x12522
Block exists: test dl,dl at address 0x12413 is visited for 5 times

0x12522: cmp byte ptr [rsp+0xf],0x0
0x12527: jne 0x1241b
0x12527: jump address is 0x1241b
Block exists: mov rsi,qword ptr [rsp+0x20] at address 0x1241b is visited for 5 times

0x1252d: jmp 0x12439
0x1252d: jump address is 0x12439
Block exists: test r10b,r10b at address 0x12439 is visited for 5 times

0x129e0: cmp byte ptr [rsp+0xf],0x0
0x129e5: jne 0x13290
0x129e5: jump address is 0x13290
Block exists: mov rbp,r11 at address 0x13290 is visited for 3 times

0x129eb: test r13,r13
0x129ee: je 0x12df0
0x129ee: jump address is 0x12df0
0x129f4: xor edx,edx
0x129f6: cmp qword ptr [rsp+0x50],0x0
0x129fc: jne 0x12df0
0x129fc: jump address is 0x12df0
Block exists: cmp r13,r15 at address 0x12df0 is visited for 2 times

0x12a02: mov qword ptr [rsp+0x50],r13
0x12a07: add r15,0x3
0x12a0b: xor eax,eax
0x12a0d: mov byte ptr [rsp+0x7c],r12b
0x12a12: xor r8d,r8d
0x12a15: mov r13,rdx
0x12a18: mov ebx,0x27
0x12a1d: jmp 0x12439
0x12a1d: jump address is 0x12439
Block exists: test r10b,r10b at address 0x12439 is visited for 5 times

0x12df0: cmp r13,r15
0x12df3: jbe 0x12dfa
0x12df3: jump address is 0x12dfa
0x12df5: mov byte ptr [r14+r15],0x27
0x12dfa: lea rax,[r15+0x1]
0x12dfe: cmp r13,rax
0x12e01: jbe 0x12e09
0x12e01: jump address is 0x12e09
0x12e03: mov byte ptr [r14+r15+0x1],0x5c
0x12e09: lea rax,[r15+0x2]
0x12e0d: cmp r13,rax
0x12e10: jbe 0x13402
0x12e10: jump address is 0x13402
0x12e16: mov rdx,r13
0x12e19: mov byte ptr [r14+r15+0x2],0x27
0x12e1f: mov r13,qword ptr [rsp+0x50]
0x12e24: jmp 0x12a02
0x12e24: jump address is 0x12a02
0x12a02: mov qword ptr [rsp+0x50],r13
0x12a07: add r15,0x3
0x12a0b: xor eax,eax
0x12a0d: mov byte ptr [rsp+0x7c],r12b
0x12a12: xor r8d,r8d
0x12a15: mov r13,rdx
0x12a18: mov ebx,0x27
0x12a1d: jmp 0x12439
0x12a1d: jump address is 0x12439
Block exists: test r10b,r10b at address 0x12439 is visited for 5 times

0x13402: mov rdx,r13
0x13405: mov r13,qword ptr [rsp+0x50]
0x1340a: jmp 0x12a02
0x1340a: jump address is 0x12a02
Block exists: mov qword ptr [rsp+0x50],r13 at address 0x12a02 is visited for 4 times

0x12e09: lea rax,[r15+0x2]
0x12e0d: cmp r13,rax
0x12e10: jbe 0x13402
0x12e10: jump address is 0x13402
Block exists: mov rdx,r13 at address 0x13402 is visited for 2 times

Block exists: mov rdx,r13 at address 0x12e16 is visited for 2 times

0x12dfa: lea rax,[r15+0x1]
0x12dfe: cmp r13,rax
0x12e01: jbe 0x12e09
0x12e01: jump address is 0x12e09
Block exists: lea rax,[r15+0x2] at address 0x12e09 is visited for 2 times

Block exists: mov byte ptr [r14+r15+0x1],0x5c at address 0x12e03 is visited for 2 times

0x1275a: jmp rax
0x1275a: jump address is 0x12860
0x12860: cmp dword ptr [rsp+0x8],0x2
0x12865: mov r12d,r10d
0x12868: sete dl
0x1286b: xor r10d,r10d
0x1286e: xor eax,eax
0x12870: jmp 0x12408
0x12870: jump address is 0x12408
Block exists: cmp byte ptr [rsp+0xd],0x1 at address 0x12408 is visited for 5 times

0x1275a: jmp rax
0x1275a: jump address is 0x12878
0x12878: cmp dword ptr [rsp+0x8],0x2
0x1287d: sete dl
0x12880: xor r10d,r10d
0x12883: jmp 0x12648
0x12883: jump address is 0x12648
Block exists: test rbp,rbp at address 0x12648 is visited for 3 times

0x1275a: jmp rax
0x1275a: jump address is 0x12890
0x12890: cmp dword ptr [rsp+0x8],0x2
0x12895: sete dl
0x12898: xor r10d,r10d
0x1289b: xor r12d,r12d
0x1289e: jmp 0x12651
0x1289e: jump address is 0x12651
0x12651: movzx eax,byte ptr [rsp+0xf]
0x12656: and al,dl
0x12658: je 0x12408
0x12658: jump address is 0x12408
0x1265e: mov rbp,r11
0x12661: mov dword ptr [rsp+0x8],0x2
0x12669: jmp 0x12d69
0x12669: jump address is 0x12d69
Block exists: cmp byte ptr [rsp+0xd],0x0 at address 0x12d69 is visited for 4 times

0x12408: cmp byte ptr [rsp+0xd],0x1
0x1240d: jne 0x12522
0x1240d: jump address is 0x12522
Block exists: test dl,dl at address 0x12413 is visited for 5 times

0x12522: cmp byte ptr [rsp+0xf],0x0
0x12527: jne 0x1241b
0x12527: jump address is 0x1241b
Block exists: mov rsi,qword ptr [rsp+0x20] at address 0x1241b is visited for 5 times

0x1252d: jmp 0x12439
0x1252d: jump address is 0x12439
Block exists: test r10b,r10b at address 0x12439 is visited for 5 times

0x1275a: jmp rax
0x1275a: jump address is 0x128a8
0x128a8: cmp dword ptr [rsp+0x8],0x2
0x128ad: mov r12d,r10d
0x128b0: mov ebx,0x20
0x128b5: sete dl
0x128b8: xor r10d,r10d
0x128bb: jmp 0x12651
0x128bb: jump address is 0x12651
Block exists: movzx eax,byte ptr [rsp+0xf] at address 0x12651 is visited for 3 times

0x1275a: jmp rax
0x1275a: jump address is 0x128c0
0x128c0: mov edx,0xd
0x128c5: xor r10d,r10d
0x128c8: mov ebx,0x72
0x128cd: jmp 0x12502
0x128cd: jump address is 0x12502
0x12502: cmp dword ptr [rsp+0x8],0x2
0x12507: sete al
0x1250a: and al,byte ptr [rsp+0xf]
0x1250e: jne 0x1265e
0x1250e: jump address is 0x1265e
Block exists: mov rbp,r11 at address 0x1265e is visited for 3 times

0x12514: cmp byte ptr [rsp+0xd],0x0
0x12519: jne 0x12580
0x12519: jump address is 0x12580
0x1251b: mov ebx,edx
0x1251d: xor r12d,r12d
0x12520: xor eax,eax
0x12522: cmp byte ptr [rsp+0xf],0x0
0x12527: jne 0x1241b
0x12527: jump address is 0x1241b
Block exists: mov rsi,qword ptr [rsp+0x20] at address 0x1241b is visited for 5 times

0x1252d: jmp 0x12439
0x1252d: jump address is 0x12439
Block exists: test r10b,r10b at address 0x12439 is visited for 5 times

0x12580: xor r12d,r12d
0x12583: cmp dword ptr [rsp+0x8],0x2
0x12588: sete dl
0x1258b: cmp byte ptr [rsp+0xf],0x0
0x12590: mov eax,edx
0x12592: jne 0x12de8
0x12592: jump address is 0x12de8
Block exists: mov rbp,r11 at address 0x12de8 is visited for 4 times

Block exists: mov eax,r8d at address 0x12598 is visited for 4 times

0x1275a: jmp rax
0x1275a: jump address is 0x12780
0x12780: mov edx,0xc
0x12785: xor r10d,r10d
0x12788: mov ebx,0x66
0x1278d: jmp 0x12514
0x1278d: jump address is 0x12514
Block exists: cmp byte ptr [rsp+0xd],0x0 at address 0x12514 is visited for 4 times

0x1275a: jmp rax
0x1275a: jump address is 0x128d8
0x128d8: mov ebx,0x76
0x128dd: jmp 0x12580
0x128dd: jump address is 0x12580
Block exists: xor r12d,r12d at address 0x12580 is visited for 4 times

0x1275a: jmp rax
0x1275a: jump address is 0x12798
0x12798: mov edx,0xa
0x1279d: xor r10d,r10d
0x127a0: mov ebx,0x6e
0x127a5: jmp 0x12502
0x127a5: jump address is 0x12502
0x12502: cmp dword ptr [rsp+0x8],0x2
0x12507: sete al
0x1250a: and al,byte ptr [rsp+0xf]
0x1250e: jne 0x1265e
0x1250e: jump address is 0x1265e
Block exists: mov rbp,r11 at address 0x1265e is visited for 3 times

Block exists: cmp byte ptr [rsp+0xd],0x0 at address 0x12514 is visited for 4 times

0x1275a: jmp rax
0x1275a: jump address is 0x128e8
0x128e8: mov edx,0x9
0x128ed: xor r10d,r10d
0x128f0: mov ebx,0x74
0x128f5: jmp 0x12502
0x128f5: jump address is 0x12502
0x12502: cmp dword ptr [rsp+0x8],0x2
0x12507: sete al
0x1250a: and al,byte ptr [rsp+0xf]
0x1250e: jne 0x1265e
0x1250e: jump address is 0x1265e
Block exists: mov rbp,r11 at address 0x1265e is visited for 3 times

Block exists: cmp byte ptr [rsp+0xd],0x0 at address 0x12514 is visited for 4 times

0x1275a: jmp rax
0x1275a: jump address is 0x12900
0x12900: mov ebx,0x62
0x12905: jmp 0x12580
0x12905: jump address is 0x12580
Block exists: xor r12d,r12d at address 0x12580 is visited for 4 times

0x1275a: jmp rax
0x1275a: jump address is 0x127b0
0x127b0: mov ebx,0x61
0x127b5: jmp 0x12580
0x127b5: jump address is 0x12580
Block exists: xor r12d,r12d at address 0x12580 is visited for 4 times

0x1275a: jmp rax
0x1275a: jump address is 0x126d0
Block exists: xor r10d,r10d at address 0x126d0 is visited for 1 times

0x1275a: jmp rax
0x1275a: jump address is 0x127c0
0x127c0: xor r10d,r10d
0x127c3: cmp dword ptr [rsp+0x8],0x2
0x127c8: sete dl
0x127cb: cmp byte ptr [rsp+0xf],0x0
0x127d0: jne 0x1336a
0x127d0: jump address is 0x1336a
0x127d6: mov eax,r8d
0x127d9: mov rcx,r15
0x127dc: xor eax,0x1
0x127df: and al,dl
0x127e1: je 0x12810
0x127e1: jump address is 0x12810
Block exists: cmp r13,rcx at address 0x12810 is visited for 1 times

Block exists: cmp r13,r15 at address 0x127e3 is visited for 1 times

0x1336a: movzx ebx,byte ptr [rsp+0xf]
0x1336f: mov rbp,r11
0x13372: mov eax,edx
0x13374: mov byte ptr [rsp+0xd],bl
0x13378: jmp 0x12d69
0x13378: jump address is 0x12d69
Block exists: cmp byte ptr [rsp+0xd],0x0 at address 0x12d69 is visited for 4 times

0x126d0: xor r10d,r10d
0x126d3: nop dword ptr [rax+rax]
0x126d8: cmp qword ptr [rsp+0x58],0x1
0x126de: jne 0x12a88
0x126de: jump address is 0x12a88
Block exists: lea rax,[rsp+0xa0] at address 0x12a88 is visited for 1 times

Block exists: mov qword ptr [rsp+0x38],r11 at address 0x126e4 is visited for 1 times

0x123b0: movzx ebx,byte ptr [r9]
0x123b4: cmp bl,0x7e
0x123b7: ja 0x126d8
0x123b7: jump address is 0x126d8
Block exists: lea rcx,[rip+0x7fe8] at address 0x123bd is visited for 2 times

0x126d8: cmp qword ptr [rsp+0x58],0x1
0x126de: jne 0x12a88
0x126de: jump address is 0x12a88
Block exists: lea rax,[rsp+0xa0] at address 0x12a88 is visited for 1 times

Block exists: mov qword ptr [rsp+0x38],r11 at address 0x126e4 is visited for 1 times

0x12940: cmp dword ptr [rsp+0x8],0x2
0x12945: movzx ebx,byte ptr [rsp+0xf]
0x1294a: mov r12d,r8d
0x1294d: mov rbp,r11
0x12950: sete dl
0x12953: mov eax,ebx
0x12955: test r15,r15
0x12958: sete cl
0x1295b: and eax,edx
0x1295d: and al,cl
0x1295f: jne 0x133c6
0x1295f: jump address is 0x133c6
0x12965: mov eax,ebx
0x12967: xor eax,0x1
0x1296a: and dl,al
0x1296c: je 0x132dc
0x1296c: jump address is 0x132dc
0x12972: cmp byte ptr [rsp+0x7c],0x0
0x12977: je 0x132da
0x12977: jump address is 0x132da
0x1297d: cmp byte ptr [rsp+0xe],0x0
0x12982: jne 0x1337d
0x12982: jump address is 0x1337d
0x12988: test r13,r13
0x1298b: sete al
0x1298e: cmp qword ptr [rsp+0x50],0x0
0x12994: setne dl
0x12997: and al,dl
0x12999: je 0x133bc
0x12999: jump address is 0x133bc
0x1299f: mov r13,qword ptr [rsp+0x50]
0x129a4: lea rbx,[rip+0x82f7]
0x129ab: mov byte ptr [r14],0x27
0x129af: mov dword ptr [rsp+0x8],0x2
0x129b7: mov r15d,0x1
0x129bd: mov qword ptr [rsp+0x18],0x1
0x129c6: mov byte ptr [rsp+0xf],0x0
0x129cb: mov qword ptr [rsp+0x48],rbx
0x129d0: mov byte ptr [rsp+0x7c],al
0x129d4: jmp 0x122b3
0x129d4: jump address is 0x122b3
0x122b3: xor r11d,r11d
0x122b6: mov rax,rbp
0x122b9: mov r8d,r12d
0x122bc: mov rbp,r11
0x122bf: mov r11,rax
0x122c2: nop word ptr [rax+rax]
0x122c8: cmp r11,rbp
0x122cb: setne r12b
0x122cf: cmp r11,0xffffffffffffffff
0x122d3: jne 0x122e2
0x122d3: jump address is 0x122e2
Block exists: test r12b,r12b at address 0x122e2 is visited for 2 times

Block exists: mov rax,qword ptr [rsp+0x10] at address 0x122d5 is visited for 2 times

0x133bc: movzx eax,byte ptr [rsp+0x7c]
0x133c1: jmp 0x132dc
0x133c1: jump address is 0x132dc
Block exists: mov rbx,qword ptr [rsp+0x48] at address 0x132dc is visited for 1 times

0x1337d: sub rsp,0x8
0x13381: mov r8d,0x5
0x13387: mov rcx,r11
0x1338a: push qword ptr [rsp+0x68]
0x1338e: push qword ptr [rsp+0x78]
0x13392: mov rdi,r14
0x13395: push qword ptr [rsp+0x38]
0x13399: mov r9d,dword ptr [rsp+0x98]
0x133a1: mov rdx,qword ptr [rsp+0x30]
0x133a6: mov rsi,qword ptr [rsp+0x70]
0x133ab: call 0x121e0
0x133ab: jump address is 0x121e0
0x121e0: push r15
0x121e2: push r14
0x121e4: mov r15d,r8d
0x121e7: push r13
0x121e9: push r12
0x121eb: mov r14,rdi
0x121ee: push rbp
0x121ef: push rbx
0x121f0: mov ebx,r9d
0x121f3: mov r13,rsi
0x121f6: mov rbp,rcx
0x121f9: and ebx,0x2
0x121fc: sub rsp,0xb8
0x12203: mov rax,qword ptr [rsp+0xf0]
0x1220b: mov qword ptr [rsp+0x10],rdx
0x12210: mov dword ptr [rsp+0x8],r8d
0x12215: mov dword ptr [rsp+0x78],r9d
0x1221a: mov qword ptr [rsp+0x20],rax
0x1221f: mov rax,qword ptr [rsp+0xf8]
0x12227: mov qword ptr [rsp+0x68],rax
0x1222c: mov rax,qword ptr [rsp+0x100]
0x12234: mov qword ptr [rsp+0x60],rax
0x12239: mov rax,qword ptr fs:0x28
0x12242: mov qword ptr [rsp+0xa8],rax
0x1224a: xor eax,eax
0x1224c: call 0x33f0
0x1224c: jump address is 0x33f0
0x33f0: jmp qword ptr [rip+0x21c982]
Execute the function: __ctype_get_mb_cur_max

0x33f0: the return address is 0x12251
0x12251: cmp r15d,0xa
0x12255: mov qword ptr [rsp+0x58],rax
0x1225a: ja 0x1340f
0x1225a: jump address is 0x1340f
0x12260: lea rcx,[rip+0x8119]
0x12267: mov edx,r15d
0x1226a: movsxd rax,dword ptr [rcx+rdx*4]
0x1226e: add rax,rcx
0x12271: jmp rax
trace back
0x12271: jmp rax
0x12271: jump address is 0x12f74
Block exists: cmp dword ptr [rsp+0x8],0xa at address 0x12f74 is visited for 1 times

0x12271: jmp rax
0x12271: jump address is 0x12f3a
Block exists: mov byte ptr [rsp+0xe],0x1 at address 0x12f3a is visited for 1 times

0x12271: jmp rax
0x12271: jump address is 0x12ef5
Block exists: lea rax,[rip+0x741f] at address 0x12ef5 is visited for 1 times

0x12271: jmp rax
0x12271: jump address is 0x12ea0
Block exists: test ebx,ebx at address 0x12ea0 is visited for 1 times

0x12271: jmp rax
0x12271: jump address is 0x12e44
Block exists: test ebx,ebx at address 0x12e44 is visited for 1 times

0x12271: jmp rax
0x12271: jump address is 0x13054
Block exists: mov byte ptr [rsp+0xe],0x1 at address 0x13054 is visited for 1 times

0x12271: jmp rax
0x12271: jump address is 0x13248
Block exists: test ebx,ebx at address 0x13248 is visited for 1 times

0x12271: jmp rax
0x12271: jump address is 0x12273
Block exists: mov byte ptr [rsp+0xe],0x1 at address 0x12273 is visited for 2 times

0x12271: jmp rax
0x12271: jump address is 0x1301a
Block exists: mov byte ptr [rsp+0xe],0x1 at address 0x1301a is visited for 1 times

0x1340f: call 0x3290
0x1340f: jump address is 0x3290
0x3290: jmp qword ptr [rip+0x21ca32]
Execute the function: abort

0x132da: mov eax,edx
0x132dc: mov rbx,qword ptr [rsp+0x48]
0x132e1: test rbx,rbx
0x132e4: je 0x13312
0x132e4: jump address is 0x13312
0x132e6: test al,al
0x132e8: je 0x13312
0x132e8: jump address is 0x13312
Block exists: cmp r13,r15 at address 0x13312 is visited for 1 times

0x132ea: movzx ecx,byte ptr [rbx]
0x132ed: mov rax,rbx
0x132f0: test cl,cl
0x132f2: je 0x13312
0x132f2: jump address is 0x13312
Block exists: cmp r13,r15 at address 0x13312 is visited for 1 times

0x132f4: mov rdx,r15
0x132f7: sub rax,r15
0x132fa: cmp r13,rdx
0x132fd: jbe 0x13303
0x132fd: jump address is 0x13303
0x132ff: mov byte ptr [r14+rdx],cl
0x13303: add rdx,0x1
0x13307: movzx ecx,byte ptr [rax+rdx]
0x1330b: test cl,cl
0x1330d: jne 0x132fa
0x1330d: jump address is 0x132fa
Block exists: cmp r13,rdx at address 0x132fa is visited for 1 times

0x1330f: mov r15,rdx
0x13312: cmp r13,r15
0x13315: jbe 0x12db9
0x13315: jump address is 0x12db9
0x1331b: mov byte ptr [r14+r15],0x0
0x13320: jmp 0x12db9
0x13320: jump address is 0x12db9
Block exists: mov rbx,qword ptr [rsp+0xa8] at address 0x12db9 is visited for 1 times

0x12db9: mov rbx,qword ptr [rsp+0xa8]
0x12dc1: xor rbx,qword ptr fs:0x28
0x12dca: mov rax,r15
0x12dcd: jne 0x133d3
0x12dcd: jump address is 0x133d3
0x12dd3: add rsp,0xb8
0x12dda: pop rbx
0x12ddb: pop rbp
0x12ddc: pop r12
0x12dde: pop r13
0x12de0: pop r14
0x12de2: pop r15
0x12de4: ret
0x12de4: the return address is tq
0x13303: add rdx,0x1
0x13307: movzx ecx,byte ptr [rax+rdx]
0x1330b: test cl,cl
0x1330d: jne 0x132fa
0x1330d: jump address is 0x132fa
Block exists: cmp r13,rdx at address 0x132fa is visited for 1 times

Block exists: mov r15,rdx at address 0x1330f is visited for 1 times

0x13312: cmp r13,r15
0x13315: jbe 0x12db9
0x13315: jump address is 0x12db9
Block exists: mov rbx,qword ptr [rsp+0xa8] at address 0x12db9 is visited for 1 times

Block exists: mov byte ptr [r14+r15],0x0 at address 0x1331b is visited for 1 times

0x132dc: mov rbx,qword ptr [rsp+0x48]
0x132e1: test rbx,rbx
0x132e4: je 0x13312
0x132e4: jump address is 0x13312
Block exists: cmp r13,r15 at address 0x13312 is visited for 1 times

Block exists: test al,al at address 0x132e6 is visited for 1 times

0x133c6: mov dword ptr [rsp+0x8],0x2
0x133ce: jmp 0x12d69
0x133ce: jump address is 0x12d69
Block exists: cmp byte ptr [rsp+0xd],0x0 at address 0x12d69 is visited for 4 times

0x122e2: test r12b,r12b
0x122e5: je 0x12940
0x122e5: jump address is 0x12940
Block exists: cmp dword ptr [rsp+0x8],0x2 at address 0x12940 is visited for 2 times

Block exists: cmp dword ptr [rsp+0x8],0x2 at address 0x122eb is visited for 2 times

0x12479: movzx edi,byte ptr [rsp+0xe]
0x1247e: add r15,0x1
0x12482: mov eax,0x0
0x12487: test r12b,r12b
0x1248a: cmove edi,eax
0x1248d: mov byte ptr [rsp+0xe],dil
0x12492: jmp 0x122c8
0x12492: jump address is 0x122c8
Block exists: cmp r11,rbp at address 0x122c8 is visited for 4 times

0x125db: add r15,0x1
0x125df: add rbp,0x1
0x125e3: jmp 0x12470
0x125e3: jump address is 0x12470
Block exists: cmp r15,r13 at address 0x12470 is visited for 5 times

0x125ca: add r15,0x3
0x125ce: mov r8d,eax
0x125d1: cmp r13,r15
0x125d4: jbe 0x125db
0x125d4: jump address is 0x125db
Block exists: add r15,0x1 at address 0x125db is visited for 4 times

Block exists: mov byte ptr [r14+r15],0x5c at address 0x125d6 is visited for 4 times

0x125bb: lea rdx,[r15+0x2]
0x125bf: cmp r13,rdx
0x125c2: jbe 0x125ca
0x125c2: jump address is 0x125ca
Block exists: add r15,0x3 at address 0x125ca is visited for 4 times

Block exists: mov byte ptr [r14+r15+0x2],0x27 at address 0x125c4 is visited for 4 times

0x125ac: lea rdx,[r15+0x1]
0x125b0: cmp r13,rdx
0x125b3: jbe 0x125bb
0x125b3: jump address is 0x125bb
Block exists: lea rdx,[r15+0x2] at address 0x125bb is visited for 4 times

Block exists: mov byte ptr [r14+r15+0x1],0x24 at address 0x125b5 is visited for 4 times

0x125d1: cmp r13,r15
0x125d4: jbe 0x125db
0x125d4: jump address is 0x125db
Block exists: add r15,0x1 at address 0x125db is visited for 4 times

Block exists: mov byte ptr [r14+r15],0x5c at address 0x125d6 is visited for 4 times

0x12de8: mov rbp,r11
0x12deb: jmp 0x12d69
0x12deb: jump address is 0x12d69
Block exists: cmp byte ptr [rsp+0xd],0x0 at address 0x12d69 is visited for 4 times

0x12439: test r10b,r10b
0x1243c: jne 0x12583
0x1243c: jump address is 0x12583
Block exists: cmp dword ptr [rsp+0x8],0x2 at address 0x12583 is visited for 4 times

Block exists: xor eax,0x1 at address 0x12442 is visited for 4 times

0x12522: cmp byte ptr [rsp+0xf],0x0
0x12527: jne 0x1241b
0x12527: jump address is 0x1241b
Block exists: mov rsi,qword ptr [rsp+0x20] at address 0x1241b is visited for 5 times

0x1252d: jmp 0x12439
0x1252d: jump address is 0x12439
Block exists: test r10b,r10b at address 0x12439 is visited for 5 times

0x12648: test rbp,rbp
0x1264b: jne 0x123fc
0x1264b: jump address is 0x123fc
Block exists: movzx eax,byte ptr [rsp+0xf] at address 0x12651 is visited for 3 times

0x123ec: cmp dword ptr [rsp+0x8],0x2
0x123f1: sete dl
0x123f4: test al,al
0x123f6: je 0x12648
0x123f6: jump address is 0x12648
Block exists: test rbp,rbp at address 0x12648 is visited for 3 times

Block exists: xor r12d,r12d at address 0x123fc is visited for 3 times

0x123ce: jmp rax
0x123ce: jump address is 0x12548
Block exists: cmp dword ptr [rsp+0x8],0x2 at address 0x12548 is visited for 1 times

0x123ce: jmp rax
0x123ce: jump address is 0x124a3
0x124a3: mov eax,dword ptr [rsp+0x8]
0x124a7: cmp eax,0x2
0x124aa: je 0x12a68
0x124aa: jump address is 0x12a68
Block exists: cmp byte ptr [rsp+0xf],0x0 at address 0x12a68 is visited for 2 times

Block exists: cmp eax,0x5 at address 0x124b0 is visited for 2 times

0x123ce: jmp rax
0x123ce: jump address is 0x124d3
0x124d3: cmp dword ptr [rsp+0x8],0x2
0x124d8: je 0x129e0
0x124d8: jump address is 0x129e0
0x124de: mov byte ptr [rsp+0x7c],r12b
0x124e3: xor edx,edx
0x124e5: xor eax,eax
0x124e7: mov ebx,0x27
0x124ec: jmp 0x12408
0x124ec: jump address is 0x12408
Block exists: cmp byte ptr [rsp+0xd],0x1 at address 0x12408 is visited for 6 times

0x129e0: cmp byte ptr [rsp+0xf],0x0
0x129e5: jne 0x13290
0x129e5: jump address is 0x13290
Block exists: mov rbp,r11 at address 0x13290 is visited for 3 times

0x129eb: test r13,r13
0x129ee: je 0x12df0
0x129ee: jump address is 0x12df0
0x129f4: xor edx,edx
0x129f6: cmp qword ptr [rsp+0x50],0x0
0x129fc: jne 0x12df0
0x129fc: jump address is 0x12df0
Block exists: cmp r13,r15 at address 0x12df0 is visited for 3 times

Block exists: mov qword ptr [rsp+0x50],r13 at address 0x12a02 is visited for 4 times

0x12df0: cmp r13,r15
0x12df3: jbe 0x12dfa
0x12df3: jump address is 0x12dfa
Block exists: lea rax,[r15+0x1] at address 0x12dfa is visited for 2 times

0x12df5: mov byte ptr [r14+r15],0x27
0x12dfa: lea rax,[r15+0x1]
0x12dfe: cmp r13,rax
0x12e01: jbe 0x12e09
0x12e01: jump address is 0x12e09
Block exists: lea rax,[r15+0x2] at address 0x12e09 is visited for 2 times

Block exists: mov byte ptr [r14+r15+0x1],0x5c at address 0x12e03 is visited for 2 times

0x123ce: jmp rax
0x123ce: jump address is 0x12618
Block exists: cmp dword ptr [rsp+0x8],0x2 at address 0x12618 is visited for 1 times

0x123ce: jmp rax
0x123ce: jump address is 0x12640
Block exists: cmp dword ptr [rsp+0x8],0x2 at address 0x12640 is visited for 1 times

0x123ce: jmp rax
0x123ce: jump address is 0x12670
Block exists: cmp dword ptr [rsp+0x8],0x2 at address 0x12670 is visited for 1 times

0x123ce: jmp rax
0x123ce: jump address is 0x12680
Block exists: cmp dword ptr [rsp+0x8],0x2 at address 0x12680 is visited for 1 times

0x123ce: jmp rax
0x123ce: jump address is 0x12690
Block exists: mov edx,0xd at address 0x12690 is visited for 1 times

0x123ce: jmp rax
0x123ce: jump address is 0x126a0
Block exists: mov edx,0xc at address 0x126a0 is visited for 1 times

0x123ce: jmp rax
0x123ce: jump address is 0x126b0
Block exists: mov edx,0xb at address 0x126b0 is visited for 1 times

0x123ce: jmp rax
0x123ce: jump address is 0x126c0
Block exists: mov edx,0xa at address 0x126c0 is visited for 1 times

0x123ce: jmp rax
0x123ce: jump address is 0x124f8
Block exists: mov edx,0x9 at address 0x124f8 is visited for 1 times

0x123ce: jmp rax
0x123ce: jump address is 0x12538
Block exists: mov edx,0x8 at address 0x12538 is visited for 1 times

0x123ce: jmp rax
0x123ce: jump address is 0x12630
Block exists: mov edx,0x7 at address 0x12630 is visited for 1 times

0x123ce: jmp rax
0x123ce: jump address is 0x126d8
Block exists: cmp qword ptr [rsp+0x58],0x1 at address 0x126d8 is visited for 3 times

0x123ce: jmp rax
0x123ce: jump address is 0x125f0
Block exists: cmp byte ptr [rsp+0xd],0x0 at address 0x125f0 is visited for 1 times

0x126d8: cmp qword ptr [rsp+0x58],0x1
0x126de: jne 0x12a88
0x126de: jump address is 0x12a88
Block exists: lea rax,[rsp+0xa0] at address 0x12a88 is visited for 1 times

Block exists: mov qword ptr [rsp+0x38],r11 at address 0x126e4 is visited for 1 times

0x13325: cmp dword ptr [rsp+0x8],0x2
0x1332a: movzx ebx,byte ptr [rsp+0xf]
0x1332f: mov rbp,r11
0x13332: sete al
0x13335: mov byte ptr [rsp+0xd],bl
0x13339: jmp 0x12d69
0x13339: jump address is 0x12d69
Block exists: cmp byte ptr [rsp+0xd],0x0 at address 0x12d69 is visited for 4 times

0x12910: xor r10d,r10d
0x12913: jmp 0x123b0
0x12913: jump address is 0x123b0
Block exists: movzx ebx,byte ptr [r9] at address 0x123b0 is visited for 2 times

0x12350: cmp rbx,r11
0x12353: mov byte ptr [rsp+0x28],r10b
0x12358: ja 0x12910
0x12358: jump address is 0x12910
Block exists: xor r10d,r10d at address 0x12910 is visited for 2 times

Block exists: mov rdx,qword ptr [rsp+0x18] at address 0x1235e is visited for 2 times

0x12740: movzx ebx,byte ptr [r9]
0x12744: cmp bl,0x7e
0x12747: ja 0x126d0
0x12747: jump address is 0x126d0
Block exists: xor r10d,r10d at address 0x126d0 is visited for 1 times

Block exists: lea rcx,[rip+0x7e58] at address 0x12749 is visited for 1 times

0x123b0: movzx ebx,byte ptr [r9]
0x123b4: cmp bl,0x7e
0x123b7: ja 0x126d8
0x123b7: jump address is 0x126d8
Block exists: cmp qword ptr [rsp+0x58],0x1 at address 0x126d8 is visited for 3 times

Block exists: lea rcx,[rip+0x7fe8] at address 0x123bd is visited for 2 times

0x12940: cmp dword ptr [rsp+0x8],0x2
0x12945: movzx ebx,byte ptr [rsp+0xf]
0x1294a: mov r12d,r8d
0x1294d: mov rbp,r11
0x12950: sete dl
0x12953: mov eax,ebx
0x12955: test r15,r15
0x12958: sete cl
0x1295b: and eax,edx
0x1295d: and al,cl
0x1295f: jne 0x133c6
0x1295f: jump address is 0x133c6
Block exists: mov dword ptr [rsp+0x8],0x2 at address 0x133c6 is visited for 1 times

Block exists: mov eax,ebx at address 0x12965 is visited for 1 times

0x1319d: mov rdx,qword ptr [rsp+0x68]
0x131a2: movzx eax,byte ptr [rdx]
0x131a5: test al,al
0x131a7: je 0x12fdc
0x131a7: jump address is 0x12fdc
0x131ad: nop dword ptr [rax]
0x131b0: cmp r13,r15
0x131b3: jbe 0x131b9
0x131b3: jump address is 0x131b9
0x131b5: mov byte ptr [r14+r15],al
0x131b9: add r15,0x1
0x131bd: movzx eax,byte ptr [rdx+r15]
0x131c2: test al,al
0x131c4: jne 0x131b0
0x131c4: jump address is 0x131b0
0x131c6: jmp 0x12fdc
0x131c6: jump address is 0x12fdc
0x12fdc: test ebx,ebx
0x12fde: mov rbx,qword ptr [rsp+0x60]
0x12fe3: setne byte ptr [rsp+0xf]
0x12fe8: xor r12d,r12d
0x12feb: mov rdi,rbx
0x12fee: call 0x3400
0x12fee: jump address is 0x3400
0x3400: jmp qword ptr [rip+0x21c97a]
Execute the function: strlen

0x3400: the return address is 0x12ff3
0x12ff3: mov qword ptr [rsp+0x48],rbx
0x12ff8: mov qword ptr [rsp+0x18],rax
0x12ffd: mov byte ptr [rsp+0xe],0x1
0x13002: mov byte ptr [rsp+0x7c],0x0
0x13007: mov qword ptr [rsp+0x50],0x0
0x13010: mov byte ptr [rsp+0xd],0x1
0x13015: jmp 0x122b3
0x13015: jump address is 0x122b3
Block exists: xor r11d,r11d at address 0x122b3 is visited for 11 times

0x131b0: cmp r13,r15
0x131b3: jbe 0x131b9
0x131b3: jump address is 0x131b9
0x131b5: mov byte ptr [r14+r15],al
0x131b9: add r15,0x1
0x131bd: movzx eax,byte ptr [rdx+r15]
0x131c2: test al,al
0x131c4: jne 0x131b0
0x131c4: jump address is 0x131b0
Block exists: cmp r13,r15 at address 0x131b0 is visited for 2 times

0x131c6: jmp 0x12fdc
0x131c6: jump address is 0x12fdc
Block exists: test ebx,ebx at address 0x12fdc is visited for 3 times

0x131b9: add r15,0x1
0x131bd: movzx eax,byte ptr [rdx+r15]
0x131c2: test al,al
0x131c4: jne 0x131b0
0x131c4: jump address is 0x131b0
Block exists: cmp r13,r15 at address 0x131b0 is visited for 2 times

0x131c6: jmp 0x12fdc
0x131c6: jump address is 0x12fdc
Block exists: test ebx,ebx at address 0x12fdc is visited for 3 times

0x131b9: add r15,0x1
0x131bd: movzx eax,byte ptr [rdx+r15]
0x131c2: test al,al
0x131c4: jne 0x131b0
0x131c4: jump address is 0x131b0
Block exists: cmp r13,r15 at address 0x131b0 is visited for 2 times

0x131c6: jmp 0x12fdc
0x131c6: jump address is 0x12fdc
Block exists: test ebx,ebx at address 0x12fdc is visited for 3 times

0x12fdc: test ebx,ebx
0x12fde: mov rbx,qword ptr [rsp+0x60]
0x12fe3: setne byte ptr [rsp+0xf]
0x12fe8: xor r12d,r12d
0x12feb: mov rdi,rbx
0x12fee: call 0x3400
0x12fee: jump address is 0x3400
0x3400: jmp qword ptr [rip+0x21c97a]
Execute the function: strlen

0x3400: the return address is 0x12ff3
Block exists: mov qword ptr [rsp+0x48],rbx at address 0x12ff3 is visited for 2 times

0x13354: mov esi,dword ptr [rsp+0x8]
0x13358: mov rdi,rcx
0x1335b: call 0x120f0
0x1335b: jump address is 0x120f0
0x120f0: push rbp
0x120f1: push rbx
0x120f2: mov rbp,rdi
0x120f5: mov ebx,esi
0x120f7: sub rsp,0x8
0x120fb: call 0x15d60
0x120fb: jump address is 0x15d60
0x15d60: sub rsp,0x8
0x15d64: mov edi,0xe
0x15d69: call 0x3680
0x15d69: jump address is 0x3680
0x3680: jmp qword ptr [rip+0x21c83a]
Execute the function: nl_langinfo

0x3680: the return address is 0x15d6e
0x15d6e: test rax,rax
0x15d71: je 0x15d90
0x15d71: jump address is 0x15d90
0x15d73: cmp byte ptr [rax],0x0
0x15d76: lea rdx,[rip+0x5056]
0x15d7d: cmove rax,rdx
0x15d81: add rsp,0x8
0x15d85: ret
0x15d85: the return address is bkc
0x15d7d: cmove rax,rdx
0x15d81: add rsp,0x8
0x15d85: ret
0x15d85: the return address is bkc
0x15d90: lea rax,[rip+0x503c]
0x15d97: add rsp,0x8
0x15d9b: ret
0x15d9b: the return address is 0x12100
0x12100: movzx edx,byte ptr [rax]
0x12103: and edx,0xffffffdf
0x12106: cmp dl,0x55
0x12109: je 0x12180
0x12109: jump address is 0x12180
0x1210b: cmp dl,0x47
0x1210e: je 0x12130
0x1210e: jump address is 0x12130
0x12110: lea rax,[rip+0x8204]
0x12117: lea rdx,[rip+0x8b84]
0x1211e: cmp ebx,0x9
0x12121: cmovne rax,rdx
0x12125: add rsp,0x8
0x12129: pop rbx
0x1212a: pop rbp
0x1212b: ret
0x1212b: the return address is 0x13360
0x13360: mov qword ptr [rsp+0x60],rax
0x13365: jmp 0x12fd1
0x13365: jump address is 0x12fd1
0x12fd1: xor r15d,r15d
0x12fd4: test ebx,ebx
0x12fd6: je 0x1319d
0x12fd6: jump address is 0x1319d
Block exists: test ebx,ebx at address 0x12fdc is visited for 3 times

0x1319d: mov rdx,qword ptr [rsp+0x68]
0x131a2: movzx eax,byte ptr [rdx]
0x131a5: test al,al
0x131a7: je 0x12fdc
0x131a7: jump address is 0x12fdc
Block exists: test ebx,ebx at address 0x12fdc is visited for 3 times

Block exists: nop dword ptr [rax] at address 0x131ad is visited for 1 times

0x12121: cmovne rax,rdx
0x12125: add rsp,0x8
0x12129: pop rbx
0x1212a: pop rbp
0x1212b: ret
0x1212b: the return address is 0x13360
0x13360: mov qword ptr [rsp+0x60],rax
0x13365: jmp 0x12fd1
0x13365: jump address is 0x12fd1
Block exists: xor r15d,r15d at address 0x12fd1 is visited for 3 times

0x1333e: mov esi,dword ptr [rsp+0x8]
0x13342: mov rdi,rcx
0x13345: call 0x120f0
0x13345: jump address is 0x120f0
0x120f0: push rbp
0x120f1: push rbx
0x120f2: mov rbp,rdi
0x120f5: mov ebx,esi
0x120f7: sub rsp,0x8
0x120fb: call 0x15d60
0x120fb: jump address is 0x15d60
0x15d60: sub rsp,0x8
0x15d64: mov edi,0xe
0x15d69: call 0x3680
0x15d69: jump address is 0x3680
0x3680: jmp qword ptr [rip+0x21c83a]
Execute the function: nl_langinfo

0x3680: the return address is 0x15d6e
0x15d6e: test rax,rax
0x15d71: je 0x15d90
0x15d71: jump address is 0x15d90
Block exists: cmp byte ptr [rax],0x0 at address 0x15d73 is visited for 1 times

0x15d90: lea rax,[rip+0x503c]
0x15d97: add rsp,0x8
0x15d9b: ret
0x15d9b: the return address is 0x12100
0x12100: movzx edx,byte ptr [rax]
0x12103: and edx,0xffffffdf
0x12106: cmp dl,0x55
0x12109: je 0x12180
0x12109: jump address is 0x12180
0x1210b: cmp dl,0x47
0x1210e: je 0x12130
0x1210e: jump address is 0x12130
0x12110: lea rax,[rip+0x8204]
0x12117: lea rdx,[rip+0x8b84]
0x1211e: cmp ebx,0x9
0x12121: cmovne rax,rdx
0x12125: add rsp,0x8
0x12129: pop rbx
0x1212a: pop rbp
0x1212b: ret
0x1212b: the return address is 0x1334a
0x1334a: mov qword ptr [rsp+0x68],rax
0x1334f: jmp 0x12fa6
0x1334f: jump address is 0x12fa6
0x12fa6: lea rsi,[rip+0x7cf5]
0x12fad: xor edi,edi
0x12faf: mov edx,0x5
0x12fb4: call 0x33e0
0x12fb4: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0x12fb9
Block exists: mov rcx,rax at address 0x12fb9 is visited for 1 times

0x12121: cmovne rax,rdx
0x12125: add rsp,0x8
0x12129: pop rbx
0x1212a: pop rbp
0x1212b: ret
0x1212b: the return address is 0x1334a
0x1334a: mov qword ptr [rsp+0x68],rax
0x1334f: jmp 0x12fa6
0x1334f: jump address is 0x12fa6
Block exists: lea rsi,[rip+0x7cf5] at address 0x12fa6 is visited for 2 times

0x12fd1: xor r15d,r15d
0x12fd4: test ebx,ebx
0x12fd6: je 0x1319d
0x12fd6: jump address is 0x1319d
Block exists: mov rdx,qword ptr [rsp+0x68] at address 0x1319d is visited for 2 times

Block exists: test ebx,ebx at address 0x12fdc is visited for 3 times

0x12271: jmp rax
0x12271: jump address is 0x12f3a
Block exists: mov byte ptr [rsp+0xe],0x1 at address 0x12f3a is visited for 1 times

0x12271: jmp rax
0x12271: jump address is 0x12ef5
Block exists: lea rax,[rip+0x741f] at address 0x12ef5 is visited for 1 times

0x12271: jmp rax
0x12271: jump address is 0x12ea0
Block exists: test ebx,ebx at address 0x12ea0 is visited for 1 times

0x12271: jmp rax
0x12271: jump address is 0x12e44
Block exists: test ebx,ebx at address 0x12e44 is visited for 1 times

0x12271: jmp rax
0x12271: jump address is 0x13054
Block exists: mov byte ptr [rsp+0xe],0x1 at address 0x13054 is visited for 1 times

0x12271: jmp rax
0x12271: jump address is 0x13248
Block exists: test ebx,ebx at address 0x13248 is visited for 1 times

0x12271: jmp rax
0x12271: jump address is 0x12273
Block exists: mov byte ptr [rsp+0xe],0x1 at address 0x12273 is visited for 2 times

0x12271: jmp rax
0x12271: jump address is 0x1301a
Block exists: mov byte ptr [rsp+0xe],0x1 at address 0x1301a is visited for 1 times

0x1340f: call 0x3290
0x1340f: jump address is 0x3290
0x3290: jmp qword ptr [rip+0x21ca32]
Execute the function: abort

0x135a0: xor edi,edi
0x135a2: call 0x145f0
0x135a2: jump address is 0x145f0
Execute the function: xrealloc

0x135a2: the return address is 0x135a7
0x135a7: movdqa xmm0,xmmword ptr [rip+0x20cca1]
0x135af: mov rbx,rax
0x135b2: mov qword ptr [rip+0x20cc87],rax
0x135b9: movups xmmword ptr [rax],xmm0
0x135bc: jmp 0x1349d
0x135bc: jump address is 0x1349d
0x1349d: movsxd rdi,dword ptr [rip+0x20cd94]
0x134a4: mov edx,r12d
0x134a7: xor esi,esi
0x134a9: sub edx,edi
0x134ab: shl rdi,0x4
0x134af: movsxd rdx,edx
0x134b2: add rdi,rbx
0x134b5: shl rdx,0x4
0x134b9: call 0x3500
0x134b9: jump address is 0x3500
0x3500: jmp qword ptr [rip+0x21c8fa]
Execute the function: memset

0x3500: the return address is 0x134be
0x134be: mov dword ptr [rip+0x20cd73],r12d
0x134c5: mov eax,dword ptr [rbp+0x4]
0x134c8: shl r15,0x4
0x134cc: sub rsp,0x8
0x134d0: add rbx,r15
0x134d3: lea r15,[rbp+0x8]
0x134d7: mov r8d,dword ptr [rbp]
0x134db: mov r11,qword ptr [rbx]
0x134de: mov r12,qword ptr [rbx+0x8]
0x134e2: mov rcx,r14
0x134e5: or eax,0x1
0x134e8: mov dword ptr [rsp+0x24],eax
0x134ec: push qword ptr [rbp+0x30]
0x134ef: mov r9d,eax
0x134f2: push qword ptr [rbp+0x28]
0x134f5: push r15
0x134f7: mov rsi,r11
0x134fa: mov rdx,qword ptr [rsp+0x28]
0x134ff: mov rdi,r12
0x13502: mov qword ptr [rsp+0x30],r11
0x13507: call 0x121e0
0x13507: jump address is 0x121e0
Block exists: push r15 at address 0x121e0 is visited for 4 times

0x134c5: mov eax,dword ptr [rbp+0x4]
0x134c8: shl r15,0x4
0x134cc: sub rsp,0x8
0x134d0: add rbx,r15
0x134d3: lea r15,[rbp+0x8]
0x134d7: mov r8d,dword ptr [rbp]
0x134db: mov r11,qword ptr [rbx]
0x134de: mov r12,qword ptr [rbx+0x8]
0x134e2: mov rcx,r14
0x134e5: or eax,0x1
0x134e8: mov dword ptr [rsp+0x24],eax
0x134ec: push qword ptr [rbp+0x30]
0x134ef: mov r9d,eax
0x134f2: push qword ptr [rbp+0x28]
0x134f5: push r15
0x134f7: mov rsi,r11
0x134fa: mov rdx,qword ptr [rsp+0x28]
0x134ff: mov rdi,r12
0x13502: mov qword ptr [rsp+0x30],r11
0x13507: call 0x121e0
0x13507: jump address is 0x121e0
Block exists: push r15 at address 0x121e0 is visited for 4 times

0x3a4b: lea rdi,[rip+0x13fe3]
0x3a52: mov qword ptr [rip+0x21d853],0x50
0x3a5d: call 0x3250
0x3a5d: jump address is 0x3250
0x3250: jmp qword ptr [rip+0x21ca52]
Execute the function: getenv

0x3250: the return address is 0x3a62
0x3a62: test rax,rax
0x3a65: mov r12,rax
0x3a68: je 0x3a73
0x3a68: jump address is 0x3a73
0x3a6a: cmp byte ptr [rax],0x0
0x3a6d: jne 0x474d
0x3a6d: jump address is 0x474d
0x3a73: lea r12,[rsp+0x30]
0x3a78: xor eax,eax
0x3a7a: mov esi,0x5413
0x3a7f: mov edi,0x1
0x3a84: mov rdx,r12
0x3a87: call 0x3510
0x3a87: jump address is 0x3510
0x3510: jmp qword ptr [rip+0x21c8f2]
Execute the function: ioctl

0x3510: the return address is 0x3a8c
0x3a8c: cmp eax,0xffffffff
0x3a8f: je 0x3aa2
0x3a8f: jump address is 0x3aa2
0x3a91: movzx eax,word ptr [rsp+0x32]
0x3a96: test ax,ax
0x3a99: je 0x3aa2
0x3a99: jump address is 0x3aa2
Block exists: lea rdi,[rip+0x13f94] at address 0x3aa2 is visited for 1 times

0x3a9b: mov qword ptr [rip+0x21d80e],rax
0x3aa2: lea rdi,[rip+0x13f94]
0x3aa9: call 0x3250
0x3aa9: jump address is 0x3250
0x3250: jmp qword ptr [rip+0x21ca52]
Execute the function: getenv

0x3250: the return address is 0x3aae
0x3aae: test rax,rax
0x3ab1: mov r13,rax
0x3ab4: mov qword ptr [rip+0x21d801],0x8
0x3abf: je 0x3ae7
0x3abf: jump address is 0x3ae7
0x3ac1: xor r8d,r8d
0x3ac4: xor edx,edx
0x3ac6: xor esi,esi
0x3ac8: mov rcx,r12
0x3acb: mov rdi,rax
0x3ace: call 0x14a60
0x3ace: jump address is 0x14a60
0x14a60: push r15
0x14a62: push r14
0x14a64: push r13
0x14a66: push r12
0x14a68: push rbp
0x14a69: push rbx
0x14a6a: sub rsp,0x28
0x14a6e: mov rax,qword ptr fs:0x28
0x14a77: mov qword ptr [rsp+0x18],rax
0x14a7c: xor eax,eax
0x14a7e: cmp edx,0x24
0x14a81: ja 0x14de5
0x14a81: jump address is 0x14de5
0x14a87: lea rax,[rsp+0x10]
0x14a8c: mov r15,rsi
0x14a8f: test rsi,rsi
0x14a92: mov rbp,rdi
0x14a95: mov dword ptr [rsp+0x8],edx
0x14a99: mov r14,rcx
0x14a9c: mov r13,r8
0x14a9f: cmove r15,rax
0x14aa3: call 0x32a0
0x14aa3: jump address is 0x32a0
0x32a0: jmp qword ptr [rip+0x21ca2a]
Execute the function: __errno_location

0x32a0: the return address is 0x14aa8
0x14aa8: mov dword ptr [rax],0x0
0x14aae: mov r12,rax
0x14ab1: movzx ebx,byte ptr [rbp]
0x14ab5: call 0x3860
0x14ab5: jump address is 0x3860
0x3860: jmp qword ptr [rip+0x21c74a]
Execute the function: __ctype_b_loc

0x3860: the return address is 0x14aba
0x14aba: mov edx,dword ptr [rsp+0x8]
0x14abe: mov rsi,qword ptr [rax]
0x14ac1: mov rax,rbp
0x14ac4: jmp 0x14ad7
0x14ac4: jump address is 0x14ad7
0x14ad7: movzx ecx,bl
0x14ada: test byte ptr [rsi+rcx*2+0x1],0x20
0x14adf: jne 0x14ad0
0x14adf: jump address is 0x14ad0
0x14ae1: cmp bl,0x2d
0x14ae4: je 0x14b38
0x14ae4: jump address is 0x14b38
0x14ae6: mov rsi,r15
0x14ae9: mov rdi,rbp
0x14aec: call 0x3790
0x14aec: jump address is 0x3790
0x3790: jmp qword ptr [rip+0x21c7b2]
Execute the function: strtoul

0x3790: the return address is 0x14af1
0x14af1: mov rcx,qword ptr [r15]
0x14af4: mov rbx,rax
0x14af7: cmp rcx,rbp
0x14afa: je 0x14b28
0x14afa: jump address is 0x14b28
0x14afc: mov eax,dword ptr [r12]
0x14b00: test eax,eax
0x14b02: je 0x14b68
0x14b02: jump address is 0x14b68
0x14b04: cmp eax,0x22
0x14b07: mov ebp,0x1
0x14b0c: jne 0x14b38
0x14b0c: jump address is 0x14b38
Block exists: mov ebp,0x4 at address 0x14b38 is visited for 1 times

0x14b0e: test r13,r13
0x14b11: je 0x14b1c
0x14b11: jump address is 0x14b1c
0x14b1c: mov qword ptr [r14],rbx
0x14b1f: jmp 0x14b3d
0x14b1f: jump address is 0x14b3d
0x14b3d: mov rdi,qword ptr [rsp+0x18]
0x14b42: xor rdi,qword ptr fs:0x28
0x14b4b: mov eax,ebp
0x14b4d: jne 0x14de0
0x14b4d: jump address is 0x14de0
0x14b53: add rsp,0x28
0x14b57: pop rbx
0x14b58: pop rbp
0x14b59: pop r12
0x14b5b: pop r13
0x14b5d: pop r14
0x14b5f: pop r15
0x14b61: ret
0x14b61: the return address is opc
0x14b68: xor ebp,ebp
0x14b6a: jmp 0x14b0e
0x14b6a: jump address is 0x14b0e
Block exists: test r13,r13 at address 0x14b0e is visited for 1 times

0x14b28: test r13,r13
0x14b2b: mov qword ptr [rsp+0x8],rcx
0x14b30: jne 0x14b70
0x14b30: jump address is 0x14b70
0x14b32: nop word ptr [rax+rax]
0x14b38: mov ebp,0x4
0x14b3d: mov rdi,qword ptr [rsp+0x18]
0x14b42: xor rdi,qword ptr fs:0x28
0x14b4b: mov eax,ebp
0x14b4d: jne 0x14de0
0x14b4d: jump address is 0x14de0
0x14b53: add rsp,0x28
0x14b57: pop rbx
0x14b58: pop rbp
0x14b59: pop r12
0x14b5b: pop r13
0x14b5d: pop r14
0x14b5f: pop r15
0x14b61: ret
0x14b61: the return address is opc
0x14b38: mov ebp,0x4
0x14b3d: mov rdi,qword ptr [rsp+0x18]
0x14b42: xor rdi,qword ptr fs:0x28
0x14b4b: mov eax,ebp
0x14b4d: jne 0x14de0
0x14b4d: jump address is 0x14de0
Block exists: add rsp,0x28 at address 0x14b53 is visited for 2 times

0x14ad0: add rax,0x1
0x14ad4: movzx ebx,byte ptr [rax]
0x14ad7: movzx ecx,bl
0x14ada: test byte ptr [rsi+rcx*2+0x1],0x20
0x14adf: jne 0x14ad0
0x14adf: jump address is 0x14ad0
Block exists: add rax,0x1 at address 0x14ad0 is visited for 1 times

Block exists: cmp bl,0x2d at address 0x14ae1 is visited for 1 times

0x3ae7: lea r13,[rip+0x1268a]
0x3aee: mov byte ptr [rsp+0x10],0x0
0x3af3: mov byte ptr [rsp+0x8],0x0
0x3af8: xor r14d,r14d
0x3afb: mov r15d,0x1
0x3b01: nop dword ptr [rax]
0x3b08: lea rcx,[rip+0x21b831]
0x3b0f: lea rdx,[rip+0x162c2]
0x3b16: mov r8,r12
0x3b19: mov rsi,rbx
0x3b1c: mov edi,ebp
0x3b1e: mov dword ptr [rsp+0x30],0xffffffff
0x3b26: call 0x3430
0x3b26: jump address is 0x3430
0x3430: jmp qword ptr [rip+0x21c962]
Execute the function: getopt_long

0x3430: the return address is 0x3b2b
0x3b2b: cmp eax,0xffffffff
0x3b2e: je 0x42bb
0x3b2e: jump address is 0x42bb
0x3b34: add eax,0x83
0x3b39: cmp eax,0x113
0x3b3e: ja 0x50b7
0x3b3e: jump address is 0x50b7
0x3b44: movsxd rax,dword ptr [r13+rax*4]
0x3b49: add rax,r13
0x3b4c: jmp rax
trace back
0x3b4c: jmp rax
0x3b49: add rax,r13
0x3b44: movsxd rax,dword ptr [r13+rax*4]
0x3b3e: ja 0x50b7
0x3b39: cmp eax,0x113
0x3b4c: jump addresses resolved using jump table [0x3dee, 0x501d, 0x50b7, 0x3dd2, 0x3dc3, 0x3d72, 0x3d63, 0x3d57, 0x3d48, 0x3d3c, 0x3d2d, 0x3cf8, 0x3ce9, 0x3cdb, 0x3cca, 0x3cbe, 0x3caa, 0x3c65, 0x3c51, 0x3c3d, 0x3c31, 0x3c22, 0x3c11, 0x3c02, 0x3bf6, 0x3bb6, 0x3ba0, 0x3b71, 0x3b68, 0x3b61, 0x3b55, 0x41bc, 0x3b4e, 0x41a6, 0x4197, 0x418b, 0x417f, 0x4173, 0x415f, 0x423f, 0x422b, 0x41da, 0x41cb, 0x424e, 0x411e, 0x40bf, 0x40b0, 0x40a1, 0x405e, 0x4048, 0x403c, 0x4011, 0x3fa5, 0x3f62, 0x3f1e, 0x3f12, 0x3ee3, 0x3e9b, 0x3e58, 0x3e4c]
0x3b4c: jmp rax
0x3b4c: jump address is 0x3e4c
0x3e4c: mov r14,qword ptr [rip+0x21c445]
0x3e53: jmp 0x3b08
0x3e53: jump address is 0x3b08
0x3b08: lea rcx,[rip+0x21b831]
0x3b0f: lea rdx,[rip+0x162c2]
0x3b16: mov r8,r12
0x3b19: mov rsi,rbx
0x3b1c: mov edi,ebp
0x3b1e: mov dword ptr [rsp+0x30],0xffffffff
0x3b26: call 0x3430
0x3b26: jump address is 0x3430
0x3430: jmp qword ptr [rip+0x21c962]
Execute the function: getopt_long

0x3430: the return address is 0x3b2b
0x3b2b: cmp eax,0xffffffff
0x3b2e: je 0x42bb
0x3b2e: jump address is 0x42bb
0x3b34: add eax,0x83
0x3b39: cmp eax,0x113
0x3b3e: ja 0x50b7
0x3b3e: jump address is 0x50b7
0x3b44: movsxd rax,dword ptr [r13+rax*4]
0x3b49: add rax,r13
0x3b4c: jmp rax
trace back
0x3b4c: jmp rax
0x3b4c: jump address is 0x3e4c
Block exists: mov r14,qword ptr [rip+0x21c445] at address 0x3e4c is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3e58
0x3e58: mov r9,qword ptr [rip+0x21c391]
0x3e5f: mov rsi,qword ptr [rip+0x21c432]
0x3e66: lea rdx,[rip+0x21b413]
0x3e6d: lea rcx,[rip+0x1287c]
0x3e74: lea rdi,[rip+0x13c00]
0x3e7b: mov r8d,0x4
0x3e81: call 0xc410
0x3e81: jump address is 0xc410
0xc410: push r15
0xc412: push r14
0xc414: mov r14,rdi
0xc417: push r13
0xc419: push r12
0xc41b: mov r12,rsi
0xc41e: push rbp
0xc41f: push rbx
0xc420: mov rbp,rcx
0xc423: mov rbx,rdx
0xc426: mov rcx,r8
0xc429: mov rdx,rbp
0xc42c: sub rsp,0x8
0xc430: mov rsi,rbx
0xc433: mov rdi,r12
0xc436: mov r15,r8
0xc439: mov r13,r9
0xc43c: call 0xc150
0xc43c: jump address is 0xc150
0xc150: push r15
0xc152: push r14
0xc154: mov r15,rsi
0xc157: push r13
0xc159: push r12
0xc15b: mov r13,rcx
0xc15e: push rbp
0xc15f: push rbx
0xc160: mov rbp,rdx
0xc163: sub rsp,0x28
0xc167: mov qword ptr [rsp+0x8],rdi
0xc16c: mov qword ptr [rsp+0x18],rdx
0xc171: call 0x3400
0xc171: jump address is 0x3400
0x3400: jmp qword ptr [rip+0x21c97a]
Execute the function: strlen

0x3400: the return address is 0xc176
0xc176: mov r14,qword ptr [r15]
0xc179: mov qword ptr [rsp+0x0],0xffffffffffffffff
0xc181: test r14,r14
0xc184: je 0xc23d
0xc184: jump address is 0xc23d
0xc18a: mov r12,rax
0xc18d: mov byte ptr [rsp+0x17],0x0
0xc192: xor ebx,ebx
0xc194: jmp 0xc1e7
0xc194: jump address is 0xc1e7
0xc1e7: mov rsi,qword ptr [rsp+0x8]
0xc1ec: mov rdx,r12
0xc1ef: mov rdi,r14
0xc1f2: call 0x32b0
0xc1f2: jump address is 0x32b0
0x32b0: jmp qword ptr [rip+0x21ca22]
Execute the function: strncmp

0x32b0: the return address is 0xc1f7
0xc1f7: test eax,eax
0xc1f9: jne 0xc1d7
0xc1f9: jump address is 0xc1d7
0xc1fb: mov rdi,r14
0xc1fe: call 0x3400
0xc1fe: jump address is 0x3400
0x3400: jmp qword ptr [rip+0x21c97a]
Execute the function: strlen

0x3400: the return address is 0xc203
0xc203: cmp rax,r12
0xc206: je 0xc260
0xc206: jump address is 0xc260
0xc208: cmp qword ptr [rsp+0x0],0xffffffffffffffff
0xc20d: jne 0xc1a0
0xc20d: jump address is 0xc1a0
0xc20f: mov qword ptr [rsp+0x0],rbx
0xc213: add rbx,0x1
0xc217: add rbp,r13
0xc21a: mov r14,qword ptr [r15+rbx*8]
0xc21e: test r14,r14
0xc221: jne 0xc1e7
0xc221: jump address is 0xc1e7
0xc223: nop dword ptr [rax+rax]
0xc228: cmp byte ptr [rsp+0x17],0x0
0xc22d: mov rax,0xfffffffffffffffe
0xc234: cmove rax,qword ptr [rsp+0x0]
0xc239: mov qword ptr [rsp+0x0],rax
0xc23d: mov rax,qword ptr [rsp+0x0]
0xc241: add rsp,0x28
0xc245: pop rbx
0xc246: pop rbp
0xc247: pop r12
0xc249: pop r13
0xc24b: pop r14
0xc24d: pop r15
0xc24f: ret
0xc24f: the return address is csc
0xc234: cmove rax,qword ptr [rsp+0x0]
0xc239: mov qword ptr [rsp+0x0],rax
0xc23d: mov rax,qword ptr [rsp+0x0]
0xc241: add rsp,0x28
0xc245: pop rbx
0xc246: pop rbp
0xc247: pop r12
0xc249: pop r13
0xc24b: pop r14
0xc24d: pop r15
0xc24f: ret
0xc24f: the return address is csc
0xc1e7: mov rsi,qword ptr [rsp+0x8]
0xc1ec: mov rdx,r12
0xc1ef: mov rdi,r14
0xc1f2: call 0x32b0
0xc1f2: jump address is 0x32b0
0x32b0: jmp qword ptr [rip+0x21ca22]
Execute the function: strncmp

0x32b0: the return address is 0xc1f7
0xc1f7: test eax,eax
0xc1f9: jne 0xc1d7
0xc1f9: jump address is 0xc1d7
0xc1fb: mov rdi,r14
0xc1fe: call 0x3400
0xc1fe: jump address is 0x3400
0x3400: jmp qword ptr [rip+0x21c97a]
Execute the function: strlen

0x3400: the return address is 0xc203
0xc203: cmp rax,r12
0xc206: je 0xc260
0xc206: jump address is 0xc260
0xc208: cmp qword ptr [rsp+0x0],0xffffffffffffffff
0xc20d: jne 0xc1a0
0xc20d: jump address is 0xc1a0
0xc20f: mov qword ptr [rsp+0x0],rbx
0xc213: add rbx,0x1
0xc217: add rbp,r13
0xc21a: mov r14,qword ptr [r15+rbx*8]
0xc21e: test r14,r14
0xc221: jne 0xc1e7
0xc221: jump address is 0xc1e7
Block exists: mov rsi,qword ptr [rsp+0x8] at address 0xc1e7 is visited for 5 times

Block exists: nop dword ptr [rax+rax] at address 0xc223 is visited for 3 times

0xc1a0: mov rax,qword ptr [rsp+0x18]
0xc1a5: test rax,rax
0xc1a8: je 0xc250
0xc1a8: jump address is 0xc250
0xc1ae: mov rdi,qword ptr [rsp+0x0]
0xc1b2: mov rdx,r13
0xc1b5: mov rsi,rbp
0xc1b8: imul rdi,r13
0xc1bc: add rdi,rax
0xc1bf: call 0x3550
0xc1bf: jump address is 0x3550
0x3550: jmp qword ptr [rip+0x21c8d2]
Execute the function: memcmp

0x3550: the return address is 0xc1c4
0xc1c4: test eax,eax
0xc1c6: movzx eax,byte ptr [rsp+0x17]
0xc1cb: mov ecx,0x1
0xc1d0: cmovne eax,ecx
0xc1d3: mov byte ptr [rsp+0x17],al
0xc1d7: add rbx,0x1
0xc1db: add rbp,r13
0xc1de: mov r14,qword ptr [r15+rbx*8]
0xc1e2: test r14,r14
0xc1e5: je 0xc228
0xc1e5: jump address is 0xc228
Block exists: cmp byte ptr [rsp+0x17],0x0 at address 0xc228 is visited for 1 times

Block exists: mov rsi,qword ptr [rsp+0x8] at address 0xc1e7 is visited for 5 times

0xc1d0: cmovne eax,ecx
0xc1d3: mov byte ptr [rsp+0x17],al
0xc1d7: add rbx,0x1
0xc1db: add rbp,r13
0xc1de: mov r14,qword ptr [r15+rbx*8]
0xc1e2: test r14,r14
0xc1e5: je 0xc228
0xc1e5: jump address is 0xc228
Block exists: cmp byte ptr [rsp+0x17],0x0 at address 0xc228 is visited for 1 times

Block exists: mov rsi,qword ptr [rsp+0x8] at address 0xc1e7 is visited for 5 times

0xc250: mov byte ptr [rsp+0x17],0x1
0xc255: jmp 0xc1d7
0xc255: jump address is 0xc1d7
0xc1d7: add rbx,0x1
0xc1db: add rbp,r13
0xc1de: mov r14,qword ptr [r15+rbx*8]
0xc1e2: test r14,r14
0xc1e5: je 0xc228
0xc1e5: jump address is 0xc228
Block exists: cmp byte ptr [rsp+0x17],0x0 at address 0xc228 is visited for 1 times

Block exists: mov rsi,qword ptr [rsp+0x8] at address 0xc1e7 is visited for 5 times

0xc260: mov qword ptr [rsp+0x0],rbx
0xc264: jmp 0xc23d
0xc264: jump address is 0xc23d
Block exists: mov rax,qword ptr [rsp+0x0] at address 0xc23d is visited for 2 times

0xc1d7: add rbx,0x1
0xc1db: add rbp,r13
0xc1de: mov r14,qword ptr [r15+rbx*8]
0xc1e2: test r14,r14
0xc1e5: je 0xc228
0xc1e5: jump address is 0xc228
Block exists: cmp byte ptr [rsp+0x17],0x0 at address 0xc228 is visited for 1 times

Block exists: mov rsi,qword ptr [rsp+0x8] at address 0xc1e7 is visited for 5 times

0xc260: mov qword ptr [rsp+0x0],rbx
0xc264: jmp 0xc23d
0xc264: jump address is 0xc23d
Block exists: mov rax,qword ptr [rsp+0x0] at address 0xc23d is visited for 2 times

0xc1d7: add rbx,0x1
0xc1db: add rbp,r13
0xc1de: mov r14,qword ptr [r15+rbx*8]
0xc1e2: test r14,r14
0xc1e5: je 0xc228
0xc1e5: jump address is 0xc228
Block exists: cmp byte ptr [rsp+0x17],0x0 at address 0xc228 is visited for 1 times

Block exists: mov rsi,qword ptr [rsp+0x8] at address 0xc1e7 is visited for 5 times

0xc23d: mov rax,qword ptr [rsp+0x0]
0xc241: add rsp,0x28
0xc245: pop rbx
0xc246: pop rbp
0xc247: pop r12
0xc249: pop r13
0xc24b: pop r14
0xc24d: pop r15
0xc24f: ret
0xc24f: the return address is csc
0x3b4c: jmp rax
0x3b4c: jump address is 0x3e9b
0x3e9b: mov r9,qword ptr [rip+0x21c34e]
0x3ea2: mov rsi,qword ptr [rip+0x21c3ef]
0x3ea9: lea rdx,[rip+0x21b410]
0x3eb0: lea rcx,[rip+0x12859]
0x3eb7: lea rdi,[rip+0x13bb6]
0x3ebe: mov r8d,0x4
0x3ec4: call 0xc410
0x3ec4: jump address is 0xc410
0xc410: push r15
0xc412: push r14
0xc414: mov r14,rdi
0xc417: push r13
0xc419: push r12
0xc41b: mov r12,rsi
0xc41e: push rbp
0xc41f: push rbx
0xc420: mov rbp,rcx
0xc423: mov rbx,rdx
0xc426: mov rcx,r8
0xc429: mov rdx,rbp
0xc42c: sub rsp,0x8
0xc430: mov rsi,rbx
0xc433: mov rdi,r12
0xc436: mov r15,r8
0xc439: mov r13,r9
0xc43c: call 0xc150
0xc43c: jump address is 0xc150
0xc150: push r15
0xc152: push r14
0xc154: mov r15,rsi
0xc157: push r13
0xc159: push r12
0xc15b: mov r13,rcx
0xc15e: push rbp
0xc15f: push rbx
0xc160: mov rbp,rdx
0xc163: sub rsp,0x28
0xc167: mov qword ptr [rsp+0x8],rdi
0xc16c: mov qword ptr [rsp+0x18],rdx
0xc171: call 0x3400
0xc171: jump address is 0x3400
0x3400: jmp qword ptr [rip+0x21c97a]
Execute the function: strlen

0x3400: the return address is 0xc176
Block exists: mov r14,qword ptr [r15] at address 0xc176 is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3ee3
0x3ee3: mov dword ptr [rip+0x21d43b],0x90
0x3eed: mov dword ptr [rip+0x21d425],0x90
0x3ef7: mov qword ptr [rip+0x21d41e],0x1
0x3f02: mov qword ptr [rip+0x21c10b],0x1
0x3f0d: jmp 0x3b08
0x3f0d: jump address is 0x3b08
0x3b08: lea rcx,[rip+0x21b831]
0x3b0f: lea rdx,[rip+0x162c2]
0x3b16: mov r8,r12
0x3b19: mov rsi,rbx
0x3b1c: mov edi,ebp
0x3b1e: mov dword ptr [rsp+0x30],0xffffffff
0x3b26: call 0x3430
0x3b26: jump address is 0x3430
0x3430: jmp qword ptr [rip+0x21c962]
Execute the function: getopt_long

0x3430: the return address is 0x3b2b
Block exists: cmp eax,0xffffffff at address 0x3b2b is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3f12
0x3f12: mov byte ptr [rip+0x21d3bf],0x0
0x3f19: jmp 0x3b08
0x3f19: jump address is 0x3b08
0x3b08: lea rcx,[rip+0x21b831]
0x3b0f: lea rdx,[rip+0x162c2]
0x3b16: mov r8,r12
0x3b19: mov rsi,rbx
0x3b1c: mov edi,ebp
0x3b1e: mov dword ptr [rsp+0x30],0xffffffff
0x3b26: call 0x3430
0x3b26: jump address is 0x3430
0x3430: jmp qword ptr [rip+0x21c962]
Execute the function: getopt_long

0x3430: the return address is 0x3b2b
Block exists: cmp eax,0xffffffff at address 0x3b2b is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3f1e
0x3f1e: mov r9,qword ptr [rip+0x21c2cb]
0x3f25: mov rsi,qword ptr [rip+0x21c36c]
0x3f2c: lea rcx,[rip+0x1688d]
0x3f33: lea rdx,[rip+0x21bb06]
0x3f3a: lea rdi,[rip+0x13b70]
0x3f41: mov r8d,0x4
0x3f47: call 0xc410
0x3f47: jump address is 0xc410
0xc410: push r15
0xc412: push r14
0xc414: mov r14,rdi
0xc417: push r13
0xc419: push r12
0xc41b: mov r12,rsi
0xc41e: push rbp
0xc41f: push rbx
0xc420: mov rbp,rcx
0xc423: mov rbx,rdx
0xc426: mov rcx,r8
0xc429: mov rdx,rbp
0xc42c: sub rsp,0x8
0xc430: mov rsi,rbx
0xc433: mov rdi,r12
0xc436: mov r15,r8
0xc439: mov r13,r9
0xc43c: call 0xc150
0xc43c: jump address is 0xc150
0xc150: push r15
0xc152: push r14
0xc154: mov r15,rsi
0xc157: push r13
0xc159: push r12
0xc15b: mov r13,rcx
0xc15e: push rbp
0xc15f: push rbx
0xc160: mov rbp,rdx
0xc163: sub rsp,0x28
0xc167: mov qword ptr [rsp+0x8],rdi
0xc16c: mov qword ptr [rsp+0x18],rdx
0xc171: call 0x3400
0xc171: jump address is 0x3400
0x3400: jmp qword ptr [rip+0x21c97a]
Execute the function: strlen

0x3400: the return address is 0xc176
Block exists: mov r14,qword ptr [r15] at address 0xc176 is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3f62
0x3f62: mov r9,qword ptr [rip+0x21c287]
0x3f69: mov rsi,qword ptr [rip+0x21c328]
0x3f70: lea rdx,[rip+0x21ba29]
0x3f77: lea rcx,[rip+0x127d2]
0x3f7e: lea rdi,[rip+0x13b1a]
0x3f85: mov r8d,0x4
0x3f8b: call 0xc410
0x3f8b: jump address is 0xc410
0xc410: push r15
0xc412: push r14
0xc414: mov r14,rdi
0xc417: push r13
0xc419: push r12
0xc41b: mov r12,rsi
0xc41e: push rbp
0xc41f: push rbx
0xc420: mov rbp,rcx
0xc423: mov rbx,rdx
0xc426: mov rcx,r8
0xc429: mov rdx,rbp
0xc42c: sub rsp,0x8
0xc430: mov rsi,rbx
0xc433: mov rdi,r12
0xc436: mov r15,r8
0xc439: mov r13,r9
0xc43c: call 0xc150
0xc43c: jump address is 0xc150
0xc150: push r15
0xc152: push r14
0xc154: mov r15,rsi
0xc157: push r13
0xc159: push r12
0xc15b: mov r13,rcx
0xc15e: push rbp
0xc15f: push rbx
0xc160: mov rbp,rdx
0xc163: sub rsp,0x28
0xc167: mov qword ptr [rsp+0x8],rdi
0xc16c: mov qword ptr [rsp+0x18],rdx
0xc171: call 0x3400
0xc171: jump address is 0x3400
0x3400: jmp qword ptr [rip+0x21c97a]
Execute the function: strlen

0x3400: the return address is 0xc176
Block exists: mov r14,qword ptr [r15] at address 0xc176 is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3fa5
0x3fa5: mov rsi,qword ptr [rip+0x21c2ec]
0x3fac: test rsi,rsi
0x3faf: je 0x42a4
0x3faf: jump address is 0x42a4
0x3fb5: mov r9,qword ptr [rip+0x21c234]
0x3fbc: lea rdx,[rip+0x21b25d]
0x3fc3: lea rcx,[rip+0x126f6]
0x3fca: lea rdi,[rip+0x13ac2]
0x3fd1: mov r8d,0x4
0x3fd7: call 0xc410
0x3fd7: jump address is 0xc410
0xc410: push r15
0xc412: push r14
0xc414: mov r14,rdi
0xc417: push r13
0xc419: push r12
0xc41b: mov r12,rsi
0xc41e: push rbp
0xc41f: push rbx
0xc420: mov rbp,rcx
0xc423: mov rbx,rdx
0xc426: mov rcx,r8
0xc429: mov rdx,rbp
0xc42c: sub rsp,0x8
0xc430: mov rsi,rbx
0xc433: mov rdi,r12
0xc436: mov r15,r8
0xc439: mov r13,r9
0xc43c: call 0xc150
0xc43c: jump address is 0xc150
0xc150: push r15
0xc152: push r14
0xc154: mov r15,rsi
0xc157: push r13
0xc159: push r12
0xc15b: mov r13,rcx
0xc15e: push rbp
0xc15f: push rbx
0xc160: mov rbp,rdx
0xc163: sub rsp,0x28
0xc167: mov qword ptr [rsp+0x8],rdi
0xc16c: mov qword ptr [rsp+0x18],rdx
0xc171: call 0x3400
0xc171: jump address is 0x3400
0x3400: jmp qword ptr [rip+0x21c97a]
Execute the function: strlen

0x3400: the return address is 0xc176
Block exists: mov r14,qword ptr [r15] at address 0xc176 is visited for 2 times

0x42a4: mov eax,0x1
0x42a9: mov byte ptr [rip+0x21d062],al
0x42af: and byte ptr [rip+0x21d05b],0x1
0x42b6: jmp 0x3b08
0x42b6: jump address is 0x3b08
0x3b08: lea rcx,[rip+0x21b831]
0x3b0f: lea rdx,[rip+0x162c2]
0x3b16: mov r8,r12
0x3b19: mov rsi,rbx
0x3b1c: mov edi,ebp
0x3b1e: mov dword ptr [rsp+0x30],0xffffffff
0x3b26: call 0x3430
0x3b26: jump address is 0x3430
0x3430: jmp qword ptr [rip+0x21c962]
Execute the function: getopt_long

0x3430: the return address is 0x3b2b
Block exists: cmp eax,0xffffffff at address 0x3b2b is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x4011
0x4011: mov edi,0x10
0x4016: call 0x14590
0x4016: jump address is 0x14590
0x14590: push rbx
0x14591: mov rbx,rdi
0x14594: call 0x3888
0x14594: jump address is 0x3888
0x3888: jmp qword ptr [rip+0x21c750]
Execute the function: malloc

0x3888: the return address is 0x14599
0x14599: test rax,rax
0x1459c: jne 0x145a3
0x1459c: jump address is 0x145a3
0x145a3: pop rbx
0x145a4: ret
0x145a4: the return address is 0x401b
0x401b: mov rdx,qword ptr [rip+0x21c276]
0x4022: mov qword ptr [rax],rdx
0x4025: mov rdx,qword ptr [rip+0x21d2b4]
0x402c: mov qword ptr [rip+0x21d2ad],rax
0x4033: mov qword ptr [rax+0x8],rdx
0x4037: jmp 0x3b08
0x4037: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 5 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x403c
0x403c: mov byte ptr [rip+0x21d2b1],r15b
0x4043: jmp 0x3b08
0x4043: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 5 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x4048
0x4048: mov dword ptr [rip+0x21d2e6],0x0
0x4052: lea r14,[rip+0x139aa]
0x4059: jmp 0x3b08
0x4059: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 5 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x405e
0x405e: mov r9,qword ptr [rip+0x21c18b]
0x4065: mov rsi,qword ptr [rip+0x21c22c]
0x406c: lea rdx,[rip+0x21b28d]
0x4073: lea rcx,[rip+0x126b6]
0x407a: lea rdi,[rip+0x13a01]
0x4081: mov r8d,0x4
0x4087: call 0xc410
0x4087: jump address is 0xc410
0xc410: push r15
0xc412: push r14
0xc414: mov r14,rdi
0xc417: push r13
0xc419: push r12
0xc41b: mov r12,rsi
0xc41e: push rbp
0xc41f: push rbx
0xc420: mov rbp,rcx
0xc423: mov rbx,rdx
0xc426: mov rcx,r8
0xc429: mov rdx,rbp
0xc42c: sub rsp,0x8
0xc430: mov rsi,rbx
0xc433: mov rdi,r12
0xc436: mov r15,r8
0xc439: mov r13,r9
0xc43c: call 0xc150
0xc43c: jump address is 0xc150
0xc150: push r15
0xc152: push r14
0xc154: mov r15,rsi
0xc157: push r13
0xc159: push r12
0xc15b: mov r13,rcx
0xc15e: push rbp
0xc15f: push rbx
0xc160: mov rbp,rdx
0xc163: sub rsp,0x28
0xc167: mov qword ptr [rsp+0x8],rdi
0xc16c: mov qword ptr [rsp+0x18],rdx
0xc171: call 0x3400
0xc171: jump address is 0x3400
0x3400: jmp qword ptr [rip+0x21c97a]
Execute the function: strlen

0x3400: the return address is 0xc176
Block exists: mov r14,qword ptr [r15] at address 0xc176 is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x40a1
0x40a1: mov dword ptr [rip+0x21d269],0x2
0x40ab: jmp 0x3b08
0x40ab: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 5 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x40b0
0x40b0: mov dword ptr [rip+0x21d23e],0x4
0x40ba: jmp 0x3b08
0x40ba: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 5 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x40bf
0x40bf: mov rsi,qword ptr [rip+0x21c1d2]
0x40c6: test rsi,rsi
0x40c9: je 0x428d
0x40c9: jump address is 0x428d
0x40cf: mov r9,qword ptr [rip+0x21c11a]
0x40d6: lea rdx,[rip+0x21b143]
0x40dd: lea rcx,[rip+0x125dc]
0x40e4: lea rdi,[rip+0x139a0]
0x40eb: mov r8d,0x4
0x40f1: call 0xc410
0x40f1: jump address is 0xc410
0xc410: push r15
0xc412: push r14
0xc414: mov r14,rdi
0xc417: push r13
0xc419: push r12
0xc41b: mov r12,rsi
0xc41e: push rbp
0xc41f: push rbx
0xc420: mov rbp,rcx
0xc423: mov rbx,rdx
0xc426: mov rcx,r8
0xc429: mov rdx,rbp
0xc42c: sub rsp,0x8
0xc430: mov rsi,rbx
0xc433: mov rdi,r12
0xc436: mov r15,r8
0xc439: mov r13,r9
0xc43c: call 0xc150
0xc43c: jump address is 0xc150
0xc150: push r15
0xc152: push r14
0xc154: mov r15,rsi
0xc157: push r13
0xc159: push r12
0xc15b: mov r13,rcx
0xc15e: push rbp
0xc15f: push rbx
0xc160: mov rbp,rdx
0xc163: sub rsp,0x28
0xc167: mov qword ptr [rsp+0x8],rdi
0xc16c: mov qword ptr [rsp+0x18],rdx
0xc171: call 0x3400
0xc171: jump address is 0x3400
0x3400: jmp qword ptr [rip+0x21c97a]
Execute the function: strlen

0x3400: the return address is 0xc176
Block exists: mov r14,qword ptr [r15] at address 0xc176 is visited for 2 times

0x428d: mov byte ptr [rip+0x21d07e],r15b
0x4294: mov qword ptr [rip+0x21d021],0x0
0x429f: jmp 0x3b08
0x429f: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 5 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x411e
0x411e: mov rdi,qword ptr [rip+0x21c173]
0x4125: lea rdx,[rip+0x21d1f4]
0x412c: lea rsi,[rip+0x21d1f5]
0x4133: call 0xf5d0
0x4133: jump address is 0xf5d0
0xf5d0: push r13
0xf5d2: push r12
0xf5d4: mov r13,rsi
0xf5d7: push rbp
0xf5d8: push rbx
0xf5d9: mov r12,rdx
0xf5dc: mov rbx,rdi
0xf5df: sub rsp,0x18
0xf5e3: mov rax,qword ptr fs:0x28
0xf5ec: mov qword ptr [rsp+0x8],rax
0xf5f1: xor eax,eax
0xf5f3: test rdi,rdi
0xf5f6: je 0xf710
0xf5f6: jump address is 0xf710
0xf5fc: xor ebp,ebp
0xf5fe: cmp byte ptr [rbx],0x27
0xf601: jne 0xf60c
0xf601: jump address is 0xf60c
0xf603: add rbx,0x1
0xf607: mov ebp,0x4
0xf60c: lea rdx,[rip+0xaa85]
0xf613: lea rsi,[rip+0x2103f6]
0xf61a: mov ecx,0x4
0xf61f: mov rdi,rbx
0xf622: call 0xc150
0xf622: jump address is 0xc150
0xc150: push r15
0xc152: push r14
0xc154: mov r15,rsi
0xc157: push r13
0xc159: push r12
0xc15b: mov r13,rcx
0xc15e: push rbp
0xc15f: push rbx
0xc160: mov rbp,rdx
0xc163: sub rsp,0x28
0xc167: mov qword ptr [rsp+0x8],rdi
0xc16c: mov qword ptr [rsp+0x18],rdx
0xc171: call 0x3400
0xc171: jump address is 0x3400
0x3400: jmp qword ptr [rip+0x21c97a]
Execute the function: strlen

0x3400: the return address is 0xc176
Block exists: mov r14,qword ptr [r15] at address 0xc176 is visited for 2 times

0xf60c: lea rdx,[rip+0xaa85]
0xf613: lea rsi,[rip+0x2103f6]
0xf61a: mov ecx,0x4
0xf61f: mov rdi,rbx
0xf622: call 0xc150
0xf622: jump address is 0xc150
Execute the function: argmatch

0xf622: the return address is 0xf627
0xf627: test eax,eax
0xf629: js 0xf668
0xf629: jump address is 0xf668
0xf62b: lea rdx,[rip+0xaa66]
0xf632: cdqe
0xf634: mov qword ptr [r12],0x1
0xf63c: or ebp,dword ptr [rdx+rax*4]
0xf63f: xor eax,eax
0xf641: mov dword ptr [r13],ebp
0xf645: mov rcx,qword ptr [rsp+0x8]
0xf64a: xor rcx,qword ptr fs:0x28
0xf653: jne 0xf7b1
0xf653: jump address is 0xf7b1
0xf659: add rsp,0x18
0xf65d: pop rbx
0xf65e: pop rbp
0xf65f: pop r12
0xf661: pop r13
0xf663: ret
0xf663: the return address is vad
0xf668: lea r8,[rip+0xaa17]
0xf66f: xor edx,edx
0xf671: mov rsi,rsp
0xf674: mov rcx,r12
0xf677: mov rdi,rbx
0xf67a: call 0x14f30
0xf67a: jump address is 0x14f30
0x14f30: push r15
0x14f32: push r14
0x14f34: push r13
0x14f36: push r12
0x14f38: push rbp
0x14f39: push rbx
0x14f3a: sub rsp,0x28
0x14f3e: mov rax,qword ptr fs:0x28
0x14f47: mov qword ptr [rsp+0x18],rax
0x14f4c: xor eax,eax
0x14f4e: cmp edx,0x24
0x14f51: ja 0x152b5
0x14f51: jump address is 0x152b5
0x14f57: lea rax,[rsp+0x10]
0x14f5c: mov r15,rsi
0x14f5f: test rsi,rsi
0x14f62: mov rbp,rdi
0x14f65: mov dword ptr [rsp+0x8],edx
0x14f69: mov r14,rcx
0x14f6c: mov r13,r8
0x14f6f: cmove r15,rax
0x14f73: call 0x32a0
0x14f73: jump address is 0x32a0
0x32a0: jmp qword ptr [rip+0x21ca2a]
Execute the function: __errno_location

0x32a0: the return address is 0x14f78
0x14f78: mov dword ptr [rax],0x0
0x14f7e: mov r12,rax
0x14f81: movzx ebx,byte ptr [rbp]
0x14f85: call 0x3860
0x14f85: jump address is 0x3860
0x3860: jmp qword ptr [rip+0x21c74a]
Execute the function: __ctype_b_loc

0x3860: the return address is 0x14f8a
0x14f8a: mov edx,dword ptr [rsp+0x8]
0x14f8e: mov rsi,qword ptr [rax]
0x14f91: mov rax,rbp
0x14f94: jmp 0x14fa7
0x14f94: jump address is 0x14fa7
0x14fa7: movzx ecx,bl
0x14faa: test byte ptr [rsi+rcx*2+0x1],0x20
0x14faf: jne 0x14fa0
0x14faf: jump address is 0x14fa0
0x14fb1: cmp bl,0x2d
0x14fb4: je 0x15008
0x14fb4: jump address is 0x15008
0x14fb6: xor ecx,ecx
0x14fb8: mov rsi,r15
0x14fbb: mov rdi,rbp
0x14fbe: call 0x34e0
0x14fbe: jump address is 0x34e0
0x34e0: jmp qword ptr [rip+0x21c90a]
Execute the function: __strtoul_internal

0x34e0: the return address is 0x14fc3
0x14fc3: mov rcx,qword ptr [r15]
0x14fc6: mov rbx,rax
0x14fc9: cmp rcx,rbp
0x14fcc: je 0x14ff8
0x14fcc: jump address is 0x14ff8
0x14fce: mov eax,dword ptr [r12]
0x14fd2: test eax,eax
0x14fd4: je 0x15038
0x14fd4: jump address is 0x15038
0x14fd6: cmp eax,0x22
0x14fd9: mov ebp,0x1
0x14fde: jne 0x15008
0x14fde: jump address is 0x15008
Block exists: mov ebp,0x4 at address 0x15008 is visited for 1 times

0x14fe0: test r13,r13
0x14fe3: je 0x14fee
0x14fe3: jump address is 0x14fee
0x14fe5: movzx r12d,byte ptr [rcx]
0x14fe9: test r12b,r12b
0x14fec: jne 0x15067
0x14fec: jump address is 0x15067
0x14fee: mov qword ptr [r14],rbx
0x14ff1: jmp 0x1500d
0x14ff1: jump address is 0x1500d
0x1500d: mov rdi,qword ptr [rsp+0x18]
0x15012: xor rdi,qword ptr fs:0x28
0x1501b: mov eax,ebp
0x1501d: jne 0x152b0
0x1501d: jump address is 0x152b0
0x15023: add rsp,0x28
0x15027: pop rbx
0x15028: pop rbp
0x15029: pop r12
0x1502b: pop r13
0x1502d: pop r14
0x1502f: pop r15
0x15031: ret
0x15031: the return address is icd
0x15067: movsx esi,r12b
0x1506b: mov rdi,r13
0x1506e: mov qword ptr [rsp+0x8],rcx
0x15073: call 0x3450
0x15073: jump address is 0x3450
0x3450: jmp qword ptr [rip+0x21c952]
Execute the function: strchr

0x3450: the return address is 0x15078
0x15078: test rax,rax
0x1507b: mov rcx,qword ptr [rsp+0x8]
0x15080: je 0x1514c
0x15080: jump address is 0x1514c
0x15086: lea eax,[r12-0x45]
0x1508b: cmp al,0x2f
0x1508d: ja 0x150e0
0x1508d: jump address is 0x150e0
0x1508f: movabs rdx,0x814400308945
0x15099: bt rdx,rax
0x1509d: jae 0x150e0
0x1509d: jump address is 0x150e0
Block exists: mov edi,0x1 at address 0x150e0 is visited for 1 times

0x1509f: mov esi,0x30
0x150a4: mov rdi,r13
0x150a7: mov qword ptr [rsp+0x8],rcx
0x150ac: call 0x3450
0x150ac: jump address is 0x3450
0x3450: jmp qword ptr [rip+0x21c952]
Execute the function: strchr

0x3450: the return address is 0x150b1
0x150b1: test rax,rax
0x150b4: mov rcx,qword ptr [rsp+0x8]
0x150b9: je 0x150e0
0x150b9: jump address is 0x150e0
Block exists: mov edi,0x1 at address 0x150e0 is visited for 1 times

0x150bb: movzx eax,byte ptr [rcx+0x1]
0x150bf: cmp al,0x44
0x150c1: je 0x150cf
0x150c1: jump address is 0x150cf
0x150c3: cmp al,0x69
0x150c5: je 0x15298
0x150c5: jump address is 0x15298
0x150cb: cmp al,0x42
0x150cd: jne 0x150e0
0x150cd: jump address is 0x150e0
Block exists: mov edi,0x1 at address 0x150e0 is visited for 1 times

Block exists: mov edi,0x2 at address 0x150cf is visited for 1 times

0x15298: xor edi,edi
0x1529a: cmp byte ptr [rcx+0x2],0x42
0x1529e: mov esi,0x400
0x152a3: sete dil
0x152a7: lea edi,[rdi+rdi+0x1]
0x152ab: jmp 0x150ea
0x152ab: jump address is 0x150ea
0x150ea: sub r12d,0x42
0x150ee: cmp r12b,0x35
0x150f2: ja 0x1514c
0x150f2: jump address is 0x1514c
Block exists: mov qword ptr [r14],rbx at address 0x1514c is visited for 1 times

0x150f4: lea rdx,[rip+0x5bf5]
0x150fb: movzx r12d,r12b
0x150ff: movsxd rax,dword ptr [rdx+r12*4]
0x15103: add rax,rdx
0x15106: jmp rax
trace back
0x15106: jmp rax
0x15103: add rax,rdx
0x150ff: movsxd rax,dword ptr [rdx+r12*4]
0x150fb: movzx r12d,r12b
0x150f4: lea rdx,[rip+0x5bf5]
0x150f2: ja 0x1514c
0x150ee: cmp r12b,0x35
0x15106: jump addresses resolved using jump table [0x15256, 0x1514c, 0x15233, 0x1526c, 0x151ef, 0x15108, 0x15210, 0x151cf, 0x151aa, 0x15184, 0x1516d, 0x15130, 0x15157]
0x15106: jmp rax
0x15106: jump address is 0x15157
0x15157: mov edx,0x2
0x1515c: mov rax,rdx
0x1515f: mul rbx
0x15162: jo 0x151fe
0x15162: jump address is 0x151fe
0x15168: add rbx,rbx
0x1516b: jmp 0x15130
0x1516b: jump address is 0x15130
0x15130: movsxd rdi,edi
0x15133: mov eax,ebp
0x15135: add rcx,rdi
0x15138: or eax,0x2
0x1513b: mov qword ptr [r15],rcx
0x1513e: cmp byte ptr [rcx],0x0
0x15141: mov qword ptr [r14],rbx
0x15144: cmovne ebp,eax
0x15147: jmp 0x1500d
0x15147: jump address is 0x1500d
Block exists: mov rdi,qword ptr [rsp+0x18] at address 0x1500d is visited for 1 times

0x15144: cmovne ebp,eax
0x15147: jmp 0x1500d
0x15147: jump address is 0x1500d
Block exists: mov rdi,qword ptr [rsp+0x18] at address 0x1500d is visited for 1 times

0x151fe: mov ebp,0x1
0x15203: or rbx,0xffffffffffffffff
0x15207: jmp 0x15130
0x15207: jump address is 0x15130
Block exists: movsxd rdi,edi at address 0x15130 is visited for 1 times

0x15106: jmp rax
0x15106: jump address is 0x15130
Block exists: movsxd rdi,edi at address 0x15130 is visited for 1 times

0x15106: jmp rax
0x15106: jump address is 0x1516d
0x1516d: mov edx,0x200
0x15172: mov rax,rdx
0x15175: mul rbx
0x15178: jo 0x151fe
0x15178: jump address is 0x151fe
Block exists: mov ebp,0x1 at address 0x151fe is visited for 1 times

0x1517e: shl rbx,0x9
0x15182: jmp 0x15130
0x15182: jump address is 0x15130
Block exists: movsxd rdi,edi at address 0x15130 is visited for 1 times

0x15106: jmp rax
0x15106: jump address is 0x15184
0x15184: mov r8d,0x7
0x1518a: xor r9d,r9d
0x1518d: nop dword ptr [rax]
0x15190: mov rax,rbx
0x15193: mul rsi
0x15196: mov rbx,rax
0x15199: jo 0x1532e
0x15199: jump address is 0x1532e
0x1519f: sub r8d,0x1
0x151a3: jne 0x15190
0x151a3: jump address is 0x15190
0x15190: mov rax,rbx
0x15193: mul rsi
0x15196: mov rbx,rax
0x15199: jo 0x1532e
0x15199: jump address is 0x1532e
0x1519f: sub r8d,0x1
0x151a3: jne 0x15190
0x151a3: jump address is 0x15190
Block exists: mov rax,rbx at address 0x15190 is visited for 2 times

0x151a5: or ebp,r9d
0x151a8: jmp 0x15130
0x151a8: jump address is 0x15130
Block exists: movsxd rdi,edi at address 0x15130 is visited for 1 times

0x1532e: mov r9d,0x1
0x15334: or rbx,0xffffffffffffffff
0x15338: jmp 0x1519f
0x15338: jump address is 0x1519f
0x1519f: sub r8d,0x1
0x151a3: jne 0x15190
0x151a3: jump address is 0x15190
0x151a5: or ebp,r9d
0x151a8: jmp 0x15130
0x151a8: jump address is 0x15130
Block exists: movsxd rdi,edi at address 0x15130 is visited for 1 times

0x15190: mov rax,rbx
0x15193: mul rsi
0x15196: mov rbx,rax
0x15199: jo 0x1532e
0x15199: jump address is 0x1532e
Block exists: mov r9d,0x1 at address 0x1532e is visited for 2 times

Block exists: sub r8d,0x1 at address 0x1519f is visited for 3 times

0x1532e: mov r9d,0x1
0x15334: or rbx,0xffffffffffffffff
0x15338: jmp 0x1519f
0x15338: jump address is 0x1519f
Block exists: sub r8d,0x1 at address 0x1519f is visited for 3 times

0x15106: jmp rax
0x15106: jump address is 0x151aa
0x151aa: mov r8d,0x8
0x151b0: xor r9d,r9d
0x151b3: nop dword ptr [rax+rax]
0x151b8: mov rax,rbx
0x151bb: mul rsi
0x151be: mov rbx,rax
0x151c1: jo 0x15310
0x151c1: jump address is 0x15310
0x151c7: sub r8d,0x1
0x151cb: jne 0x151b8
0x151cb: jump address is 0x151b8
0x151b8: mov rax,rbx
0x151bb: mul rsi
0x151be: mov rbx,rax
0x151c1: jo 0x15310
0x151c1: jump address is 0x15310
0x151c7: sub r8d,0x1
0x151cb: jne 0x151b8
0x151cb: jump address is 0x151b8
Block exists: mov rax,rbx at address 0x151b8 is visited for 2 times

0x151cd: jmp 0x151a5
0x151cd: jump address is 0x151a5
Block exists: or ebp,r9d at address 0x151a5 is visited for 2 times

0x15310: mov r9d,0x1
0x15316: or rbx,0xffffffffffffffff
0x1531a: jmp 0x151c7
0x1531a: jump address is 0x151c7
0x151c7: sub r8d,0x1
0x151cb: jne 0x151b8
0x151cb: jump address is 0x151b8
0x151cd: jmp 0x151a5
0x151cd: jump address is 0x151a5
Block exists: or ebp,r9d at address 0x151a5 is visited for 2 times

0x151b8: mov rax,rbx
0x151bb: mul rsi
0x151be: mov rbx,rax
0x151c1: jo 0x15310
0x151c1: jump address is 0x15310
Block exists: mov r9d,0x1 at address 0x15310 is visited for 2 times

Block exists: sub r8d,0x1 at address 0x151c7 is visited for 3 times

0x15310: mov r9d,0x1
0x15316: or rbx,0xffffffffffffffff
0x1531a: jmp 0x151c7
0x1531a: jump address is 0x151c7
Block exists: sub r8d,0x1 at address 0x151c7 is visited for 3 times

0x15106: jmp rax
0x15106: jump address is 0x151cf
0x151cf: mov r8d,0x4
0x151d5: xor r9d,r9d
0x151d8: mov rax,rbx
0x151db: mul rsi
0x151de: mov rbx,rax
0x151e1: jo 0x152e3
0x151e1: jump address is 0x152e3
0x151e7: sub r8d,0x1
0x151eb: jne 0x151d8
0x151eb: jump address is 0x151d8
0x151d8: mov rax,rbx
0x151db: mul rsi
0x151de: mov rbx,rax
0x151e1: jo 0x152e3
0x151e1: jump address is 0x152e3
0x151e7: sub r8d,0x1
0x151eb: jne 0x151d8
0x151eb: jump address is 0x151d8
Block exists: mov rax,rbx at address 0x151d8 is visited for 2 times

0x151ed: jmp 0x151a5
0x151ed: jump address is 0x151a5
Block exists: or ebp,r9d at address 0x151a5 is visited for 2 times

0x152e3: mov r9d,0x1
0x152e9: or rbx,0xffffffffffffffff
0x152ed: jmp 0x151e7
0x152ed: jump address is 0x151e7
0x151e7: sub r8d,0x1
0x151eb: jne 0x151d8
0x151eb: jump address is 0x151d8
0x151ed: jmp 0x151a5
0x151ed: jump address is 0x151a5
Block exists: or ebp,r9d at address 0x151a5 is visited for 2 times

0x151d8: mov rax,rbx
0x151db: mul rsi
0x151de: mov rbx,rax
0x151e1: jo 0x152e3
0x151e1: jump address is 0x152e3
Block exists: mov r9d,0x1 at address 0x152e3 is visited for 2 times

Block exists: sub r8d,0x1 at address 0x151e7 is visited for 3 times

0x152e3: mov r9d,0x1
0x152e9: or rbx,0xffffffffffffffff
0x152ed: jmp 0x151e7
0x152ed: jump address is 0x151e7
Block exists: sub r8d,0x1 at address 0x151e7 is visited for 3 times

0x15106: jmp rax
0x15106: jump address is 0x15210
0x15210: mov r8d,0x5
0x15216: xor r9d,r9d
0x15219: mov rax,rbx
0x1521c: mul rsi
0x1521f: mov rbx,rax
0x15222: jo 0x1531f
0x15222: jump address is 0x1531f
0x15228: sub r8d,0x1
0x1522c: jne 0x15219
0x1522c: jump address is 0x15219
0x15219: mov rax,rbx
0x1521c: mul rsi
0x1521f: mov rbx,rax
0x15222: jo 0x1531f
0x15222: jump address is 0x1531f
0x15228: sub r8d,0x1
0x1522c: jne 0x15219
0x1522c: jump address is 0x15219
Block exists: mov rax,rbx at address 0x15219 is visited for 2 times

0x1522e: jmp 0x151a5
0x1522e: jump address is 0x151a5
Block exists: or ebp,r9d at address 0x151a5 is visited for 2 times

0x1531f: mov r9d,0x1
0x15325: or rbx,0xffffffffffffffff
0x15329: jmp 0x15228
0x15329: jump address is 0x15228
0x15228: sub r8d,0x1
0x1522c: jne 0x15219
0x1522c: jump address is 0x15219
0x1522e: jmp 0x151a5
0x1522e: jump address is 0x151a5
Block exists: or ebp,r9d at address 0x151a5 is visited for 2 times

0x15219: mov rax,rbx
0x1521c: mul rsi
0x1521f: mov rbx,rax
0x15222: jo 0x1531f
0x15222: jump address is 0x1531f
Block exists: mov r9d,0x1 at address 0x1531f is visited for 2 times

Block exists: sub r8d,0x1 at address 0x15228 is visited for 3 times

0x1531f: mov r9d,0x1
0x15325: or rbx,0xffffffffffffffff
0x15329: jmp 0x15228
0x15329: jump address is 0x15228
Block exists: sub r8d,0x1 at address 0x15228 is visited for 3 times

0x15106: jmp rax
0x15106: jump address is 0x15108
0x15108: mov rax,rbx
0x1510b: mul rsi
0x1510e: jo 0x15301
0x1510e: jump address is 0x15301
0x15114: xor r8d,r8d
0x15117: mul rsi
0x1511a: jo 0x152f2
0x1511a: jump address is 0x152f2
0x15120: mov rbx,rax
0x15123: or ebp,r8d
0x15126: nop word ptr cs:[rax+rax]
0x15130: movsxd rdi,edi
0x15133: mov eax,ebp
0x15135: add rcx,rdi
0x15138: or eax,0x2
0x1513b: mov qword ptr [r15],rcx
0x1513e: cmp byte ptr [rcx],0x0
0x15141: mov qword ptr [r14],rbx
0x15144: cmovne ebp,eax
0x15147: jmp 0x1500d
0x15147: jump address is 0x1500d
Block exists: mov rdi,qword ptr [rsp+0x18] at address 0x1500d is visited for 1 times

0x15144: cmovne ebp,eax
0x15147: jmp 0x1500d
0x15147: jump address is 0x1500d
Block exists: mov rdi,qword ptr [rsp+0x18] at address 0x1500d is visited for 1 times

0x152f2: mov r8d,0x1
0x152f8: or rbx,0xffffffffffffffff
0x152fc: jmp 0x15123
0x152fc: jump address is 0x15123
0x15123: or ebp,r8d
0x15126: nop word ptr cs:[rax+rax]
0x15130: movsxd rdi,edi
0x15133: mov eax,ebp
0x15135: add rcx,rdi
0x15138: or eax,0x2
0x1513b: mov qword ptr [r15],rcx
0x1513e: cmp byte ptr [rcx],0x0
0x15141: mov qword ptr [r14],rbx
0x15144: cmovne ebp,eax
0x15147: jmp 0x1500d
0x15147: jump address is 0x1500d
Block exists: mov rdi,qword ptr [rsp+0x18] at address 0x1500d is visited for 1 times

0x15144: cmovne ebp,eax
0x15147: jmp 0x1500d
0x15147: jump address is 0x1500d
Block exists: mov rdi,qword ptr [rsp+0x18] at address 0x1500d is visited for 1 times

0x15301: or rax,0xffffffffffffffff
0x15305: mov r8d,0x1
0x1530b: jmp 0x15117
0x1530b: jump address is 0x15117
0x15117: mul rsi
0x1511a: jo 0x152f2
0x1511a: jump address is 0x152f2
Block exists: mov r8d,0x1 at address 0x152f2 is visited for 1 times

0x15120: mov rbx,rax
0x15123: or ebp,r8d
0x15126: nop word ptr cs:[rax+rax]
0x15130: movsxd rdi,edi
0x15133: mov eax,ebp
0x15135: add rcx,rdi
0x15138: or eax,0x2
0x1513b: mov qword ptr [r15],rcx
0x1513e: cmp byte ptr [rcx],0x0
0x15141: mov qword ptr [r14],rbx
0x15144: cmovne ebp,eax
0x15147: jmp 0x1500d
0x15147: jump address is 0x1500d
Block exists: mov rdi,qword ptr [rsp+0x18] at address 0x1500d is visited for 1 times

0x15144: cmovne ebp,eax
0x15147: jmp 0x1500d
0x15147: jump address is 0x1500d
Block exists: mov rdi,qword ptr [rsp+0x18] at address 0x1500d is visited for 1 times

0x15106: jmp rax
0x15106: jump address is 0x151ef
0x151ef: mov rax,rbx
0x151f2: mul rsi
0x151f5: mov rbx,rax
0x151f8: jno 0x15130
0x151f8: jump address is 0x15130
Block exists: movsxd rdi,edi at address 0x15130 is visited for 1 times

Block exists: mov ebp,0x1 at address 0x151fe is visited for 1 times

0x15106: jmp rax
0x15106: jump address is 0x1526c
0x1526c: mov rax,rbx
0x1526f: mul rsi
0x15272: jo 0x1533d
0x15272: jump address is 0x1533d
0x15278: xor r8d,r8d
0x1527b: mul rsi
0x1527e: jno 0x15117
0x1527e: jump address is 0x15117
Block exists: mul rsi at address 0x15117 is visited for 2 times

0x15284: mov r8d,0x1
0x1528a: or rax,0xffffffffffffffff
0x1528e: jmp 0x15117
0x1528e: jump address is 0x15117
Block exists: mul rsi at address 0x15117 is visited for 2 times

0x1533d: mov r8d,0x1
0x15343: or rax,0xffffffffffffffff
0x15347: jmp 0x1527b
0x15347: jump address is 0x1527b
0x1527b: mul rsi
0x1527e: jno 0x15117
0x1527e: jump address is 0x15117
Block exists: mul rsi at address 0x15117 is visited for 2 times

Block exists: mov r8d,0x1 at address 0x15284 is visited for 1 times

0x15106: jmp rax
0x15106: jump address is 0x15233
0x15233: mov r8d,0x6
0x15239: xor r9d,r9d
0x1523c: mov rax,rbx
0x1523f: mul rsi
0x15242: mov rbx,rax
0x15245: jo 0x152d4
0x15245: jump address is 0x152d4
0x1524b: sub r8d,0x1
0x1524f: jne 0x1523c
0x1524f: jump address is 0x1523c
0x1523c: mov rax,rbx
0x1523f: mul rsi
0x15242: mov rbx,rax
0x15245: jo 0x152d4
0x15245: jump address is 0x152d4
0x1524b: sub r8d,0x1
0x1524f: jne 0x1523c
0x1524f: jump address is 0x1523c
Block exists: mov rax,rbx at address 0x1523c is visited for 2 times

0x15251: jmp 0x151a5
0x15251: jump address is 0x151a5
Block exists: or ebp,r9d at address 0x151a5 is visited for 2 times

0x152d4: mov r9d,0x1
0x152da: or rbx,0xffffffffffffffff
0x152de: jmp 0x1524b
0x152de: jump address is 0x1524b
0x1524b: sub r8d,0x1
0x1524f: jne 0x1523c
0x1524f: jump address is 0x1523c
0x15251: jmp 0x151a5
0x15251: jump address is 0x151a5
Block exists: or ebp,r9d at address 0x151a5 is visited for 2 times

0x1523c: mov rax,rbx
0x1523f: mul rsi
0x15242: mov rbx,rax
0x15245: jo 0x152d4
0x15245: jump address is 0x152d4
Block exists: mov r9d,0x1 at address 0x152d4 is visited for 2 times

Block exists: sub r8d,0x1 at address 0x1524b is visited for 3 times

0x152d4: mov r9d,0x1
0x152da: or rbx,0xffffffffffffffff
0x152de: jmp 0x1524b
0x152de: jump address is 0x1524b
Block exists: sub r8d,0x1 at address 0x1524b is visited for 3 times

0x15106: jmp rax
0x15106: jump address is 0x1514c
Block exists: mov qword ptr [r14],rbx at address 0x1514c is visited for 1 times

0x15106: jmp rax
0x15106: jump address is 0x15256
0x15256: mov edx,0x400
0x1525b: mov rax,rdx
0x1525e: mul rbx
0x15261: jo 0x151fe
0x15261: jump address is 0x151fe
Block exists: mov ebp,0x1 at address 0x151fe is visited for 1 times

0x15263: shl rbx,0xa
0x15267: jmp 0x15130
0x15267: jump address is 0x15130
Block exists: movsxd rdi,edi at address 0x15130 is visited for 1 times

0x150cf: mov edi,0x2
0x150d4: mov esi,0x3e8
0x150d9: jmp 0x150ea
0x150d9: jump address is 0x150ea
0x150ea: sub r12d,0x42
0x150ee: cmp r12b,0x35
0x150f2: ja 0x1514c
0x150f2: jump address is 0x1514c
Block exists: mov qword ptr [r14],rbx at address 0x1514c is visited for 1 times

0x150f4: lea rdx,[rip+0x5bf5]
0x150fb: movzx r12d,r12b
0x150ff: movsxd rax,dword ptr [rdx+r12*4]
0x15103: add rax,rdx
0x15106: jmp rax
trace back
0x15106: jmp rax
0x15106: jump address is 0x15157
0x15157: mov edx,0x2
0x1515c: mov rax,rdx
0x1515f: mul rbx
0x15162: jo 0x151fe
0x15162: jump address is 0x151fe
0x15168: add rbx,rbx
0x1516b: jmp 0x15130
0x1516b: jump address is 0x15130
0x15130: movsxd rdi,edi
0x15133: mov eax,ebp
0x15135: add rcx,rdi
0x15138: or eax,0x2
0x1513b: mov qword ptr [r15],rcx
0x1513e: cmp byte ptr [rcx],0x0
0x15141: mov qword ptr [r14],rbx
0x15144: cmovne ebp,eax
0x15147: jmp 0x1500d
0x15147: jump address is 0x1500d
Block exists: mov rdi,qword ptr [rsp+0x18] at address 0x1500d is visited for 1 times

0x15144: cmovne ebp,eax
0x15147: jmp 0x1500d
0x15147: jump address is 0x1500d
Block exists: mov rdi,qword ptr [rsp+0x18] at address 0x1500d is visited for 1 times

0x151fe: mov ebp,0x1
0x15203: or rbx,0xffffffffffffffff
0x15207: jmp 0x15130
0x15207: jump address is 0x15130
Block exists: movsxd rdi,edi at address 0x15130 is visited for 2 times

0x15106: jmp rax
0x15106: jump address is 0x15130
Block exists: movsxd rdi,edi at address 0x15130 is visited for 2 times

0x15106: jmp rax
0x15106: jump address is 0x1516d
0x1516d: mov edx,0x200
0x15172: mov rax,rdx
0x15175: mul rbx
0x15178: jo 0x151fe
0x15178: jump address is 0x151fe
Block exists: mov ebp,0x1 at address 0x151fe is visited for 2 times

0x1517e: shl rbx,0x9
0x15182: jmp 0x15130
0x15182: jump address is 0x15130
Block exists: movsxd rdi,edi at address 0x15130 is visited for 2 times

0x15106: jmp rax
0x15106: jump address is 0x15184
0x15184: mov r8d,0x7
0x1518a: xor r9d,r9d
0x1518d: nop dword ptr [rax]
0x15190: mov rax,rbx
0x15193: mul rsi
0x15196: mov rbx,rax
0x15199: jo 0x1532e
0x15199: jump address is 0x1532e
0x1519f: sub r8d,0x1
0x151a3: jne 0x15190
0x151a3: jump address is 0x15190
0x15190: mov rax,rbx
0x15193: mul rsi
0x15196: mov rbx,rax
0x15199: jo 0x1532e
0x15199: jump address is 0x1532e
Block exists: mov r9d,0x1 at address 0x1532e is visited for 3 times

Block exists: sub r8d,0x1 at address 0x1519f is visited for 4 times

0x1532e: mov r9d,0x1
0x15334: or rbx,0xffffffffffffffff
0x15338: jmp 0x1519f
0x15338: jump address is 0x1519f
Block exists: sub r8d,0x1 at address 0x1519f is visited for 4 times

0x15106: jmp rax
0x15106: jump address is 0x151aa
0x151aa: mov r8d,0x8
0x151b0: xor r9d,r9d
0x151b3: nop dword ptr [rax+rax]
0x151b8: mov rax,rbx
0x151bb: mul rsi
0x151be: mov rbx,rax
0x151c1: jo 0x15310
0x151c1: jump address is 0x15310
0x151c7: sub r8d,0x1
0x151cb: jne 0x151b8
0x151cb: jump address is 0x151b8
0x151b8: mov rax,rbx
0x151bb: mul rsi
0x151be: mov rbx,rax
0x151c1: jo 0x15310
0x151c1: jump address is 0x15310
Block exists: mov r9d,0x1 at address 0x15310 is visited for 3 times

Block exists: sub r8d,0x1 at address 0x151c7 is visited for 4 times

0x15310: mov r9d,0x1
0x15316: or rbx,0xffffffffffffffff
0x1531a: jmp 0x151c7
0x1531a: jump address is 0x151c7
Block exists: sub r8d,0x1 at address 0x151c7 is visited for 4 times

0x15106: jmp rax
0x15106: jump address is 0x151cf
0x151cf: mov r8d,0x4
0x151d5: xor r9d,r9d
0x151d8: mov rax,rbx
0x151db: mul rsi
0x151de: mov rbx,rax
0x151e1: jo 0x152e3
0x151e1: jump address is 0x152e3
0x151e7: sub r8d,0x1
0x151eb: jne 0x151d8
0x151eb: jump address is 0x151d8
0x151d8: mov rax,rbx
0x151db: mul rsi
0x151de: mov rbx,rax
0x151e1: jo 0x152e3
0x151e1: jump address is 0x152e3
Block exists: mov r9d,0x1 at address 0x152e3 is visited for 3 times

Block exists: sub r8d,0x1 at address 0x151e7 is visited for 4 times

0x152e3: mov r9d,0x1
0x152e9: or rbx,0xffffffffffffffff
0x152ed: jmp 0x151e7
0x152ed: jump address is 0x151e7
Block exists: sub r8d,0x1 at address 0x151e7 is visited for 4 times

0x15106: jmp rax
0x15106: jump address is 0x15210
0x15210: mov r8d,0x5
0x15216: xor r9d,r9d
0x15219: mov rax,rbx
0x1521c: mul rsi
0x1521f: mov rbx,rax
0x15222: jo 0x1531f
0x15222: jump address is 0x1531f
0x15228: sub r8d,0x1
0x1522c: jne 0x15219
0x1522c: jump address is 0x15219
0x15219: mov rax,rbx
0x1521c: mul rsi
0x1521f: mov rbx,rax
0x15222: jo 0x1531f
0x15222: jump address is 0x1531f
Block exists: mov r9d,0x1 at address 0x1531f is visited for 3 times

Block exists: sub r8d,0x1 at address 0x15228 is visited for 4 times

0x1531f: mov r9d,0x1
0x15325: or rbx,0xffffffffffffffff
0x15329: jmp 0x15228
0x15329: jump address is 0x15228
Block exists: sub r8d,0x1 at address 0x15228 is visited for 4 times

0x15106: jmp rax
0x15106: jump address is 0x15108
0x15108: mov rax,rbx
0x1510b: mul rsi
0x1510e: jo 0x15301
0x1510e: jump address is 0x15301
0x15114: xor r8d,r8d
0x15117: mul rsi
0x1511a: jo 0x152f2
0x1511a: jump address is 0x152f2
0x15120: mov rbx,rax
0x15123: or ebp,r8d
0x15126: nop word ptr cs:[rax+rax]
0x15130: movsxd rdi,edi
0x15133: mov eax,ebp
0x15135: add rcx,rdi
0x15138: or eax,0x2
0x1513b: mov qword ptr [r15],rcx
0x1513e: cmp byte ptr [rcx],0x0
0x15141: mov qword ptr [r14],rbx
0x15144: cmovne ebp,eax
0x15147: jmp 0x1500d
0x15147: jump address is 0x1500d
Block exists: mov rdi,qword ptr [rsp+0x18] at address 0x1500d is visited for 1 times

0x15144: cmovne ebp,eax
0x15147: jmp 0x1500d
0x15147: jump address is 0x1500d
Block exists: mov rdi,qword ptr [rsp+0x18] at address 0x1500d is visited for 1 times

0x152f2: mov r8d,0x1
0x152f8: or rbx,0xffffffffffffffff
0x152fc: jmp 0x15123
0x152fc: jump address is 0x15123
Block exists: or ebp,r8d at address 0x15123 is visited for 2 times

0x15301: or rax,0xffffffffffffffff
0x15305: mov r8d,0x1
0x1530b: jmp 0x15117
0x1530b: jump address is 0x15117
0x15117: mul rsi
0x1511a: jo 0x152f2
0x1511a: jump address is 0x152f2
Block exists: mov r8d,0x1 at address 0x152f2 is visited for 2 times

Block exists: mov rbx,rax at address 0x15120 is visited for 3 times

0x15106: jmp rax
0x15106: jump address is 0x151ef
0x151ef: mov rax,rbx
0x151f2: mul rsi
0x151f5: mov rbx,rax
0x151f8: jno 0x15130
0x151f8: jump address is 0x15130
Block exists: movsxd rdi,edi at address 0x15130 is visited for 2 times

Block exists: mov ebp,0x1 at address 0x151fe is visited for 2 times

0x15106: jmp rax
0x15106: jump address is 0x1526c
0x1526c: mov rax,rbx
0x1526f: mul rsi
0x15272: jo 0x1533d
0x15272: jump address is 0x1533d
0x15278: xor r8d,r8d
0x1527b: mul rsi
0x1527e: jno 0x15117
0x1527e: jump address is 0x15117
Block exists: mul rsi at address 0x15117 is visited for 3 times

0x15284: mov r8d,0x1
0x1528a: or rax,0xffffffffffffffff
0x1528e: jmp 0x15117
0x1528e: jump address is 0x15117
Block exists: mul rsi at address 0x15117 is visited for 3 times

0x1533d: mov r8d,0x1
0x15343: or rax,0xffffffffffffffff
0x15347: jmp 0x1527b
0x15347: jump address is 0x1527b
0x1527b: mul rsi
0x1527e: jno 0x15117
0x1527e: jump address is 0x15117
Block exists: mul rsi at address 0x15117 is visited for 3 times

Block exists: mov r8d,0x1 at address 0x15284 is visited for 2 times

0x15106: jmp rax
0x15106: jump address is 0x15233
0x15233: mov r8d,0x6
0x15239: xor r9d,r9d
0x1523c: mov rax,rbx
0x1523f: mul rsi
0x15242: mov rbx,rax
0x15245: jo 0x152d4
0x15245: jump address is 0x152d4
0x1524b: sub r8d,0x1
0x1524f: jne 0x1523c
0x1524f: jump address is 0x1523c
0x1523c: mov rax,rbx
0x1523f: mul rsi
0x15242: mov rbx,rax
0x15245: jo 0x152d4
0x15245: jump address is 0x152d4
Block exists: mov r9d,0x1 at address 0x152d4 is visited for 3 times

Block exists: sub r8d,0x1 at address 0x1524b is visited for 4 times

0x152d4: mov r9d,0x1
0x152da: or rbx,0xffffffffffffffff
0x152de: jmp 0x1524b
0x152de: jump address is 0x1524b
Block exists: sub r8d,0x1 at address 0x1524b is visited for 4 times

0x15106: jmp rax
0x15106: jump address is 0x1514c
Block exists: mov qword ptr [r14],rbx at address 0x1514c is visited for 1 times

0x15106: jmp rax
0x15106: jump address is 0x15256
0x15256: mov edx,0x400
0x1525b: mov rax,rdx
0x1525e: mul rbx
0x15261: jo 0x151fe
0x15261: jump address is 0x151fe
Block exists: mov ebp,0x1 at address 0x151fe is visited for 2 times

0x15263: shl rbx,0xa
0x15267: jmp 0x15130
0x15267: jump address is 0x15130
Block exists: movsxd rdi,edi at address 0x15130 is visited for 2 times

0x150e0: mov edi,0x1
0x150e5: mov esi,0x400
0x150ea: sub r12d,0x42
0x150ee: cmp r12b,0x35
0x150f2: ja 0x1514c
0x150f2: jump address is 0x1514c
Block exists: mov qword ptr [r14],rbx at address 0x1514c is visited for 1 times

Block exists: lea rdx,[rip+0x5bf5] at address 0x150f4 is visited for 2 times

0x1514c: mov qword ptr [r14],rbx
0x1514f: or ebp,0x2
0x15152: jmp 0x1500d
0x15152: jump address is 0x1500d
Block exists: mov rdi,qword ptr [rsp+0x18] at address 0x1500d is visited for 1 times

0x15038: xor ebp,ebp
0x1503a: jmp 0x14fe0
0x1503a: jump address is 0x14fe0
Block exists: test r13,r13 at address 0x14fe0 is visited for 1 times

0x14ff8: test r13,r13
0x14ffb: mov qword ptr [rsp+0x8],rcx
0x15000: jne 0x15040
0x15000: jump address is 0x15040
0x15040: movzx r12d,byte ptr [rbp]
0x15045: test r12b,r12b
0x15048: je 0x15008
0x15048: jump address is 0x15008
Block exists: mov ebp,0x4 at address 0x15008 is visited for 1 times

0x1504a: movsx esi,r12b
0x1504e: mov rdi,r13
0x15051: xor ebp,ebp
0x15053: call 0x3450
0x15053: jump address is 0x3450
0x3450: jmp qword ptr [rip+0x21c952]
Execute the function: strchr

0x3450: the return address is 0x15058
0x15058: test rax,rax
0x1505b: mov ebx,0x1
0x15060: mov rcx,qword ptr [rsp+0x8]
0x15065: je 0x15008
0x15065: jump address is 0x15008
Block exists: mov ebp,0x4 at address 0x15008 is visited for 1 times

Block exists: movsx esi,r12b at address 0x15067 is visited for 1 times

0x15008: mov ebp,0x4
0x1500d: mov rdi,qword ptr [rsp+0x18]
0x15012: xor rdi,qword ptr fs:0x28
0x1501b: mov eax,ebp
0x1501d: jne 0x152b0
0x1501d: jump address is 0x152b0
0x15023: add rsp,0x28
0x15027: pop rbx
0x15028: pop rbp
0x15029: pop r12
0x1502b: pop r13
0x1502d: pop r14
0x1502f: pop r15
0x15031: ret
0x15031: the return address is icd
0x14fa0: add rax,0x1
0x14fa4: movzx ebx,byte ptr [rax]
0x14fa7: movzx ecx,bl
0x14faa: test byte ptr [rsi+rcx*2+0x1],0x20
0x14faf: jne 0x14fa0
0x14faf: jump address is 0x14fa0
Block exists: add rax,0x1 at address 0x14fa0 is visited for 1 times

Block exists: cmp bl,0x2d at address 0x14fb1 is visited for 1 times

0xf710: lea rdi,[rip+0x83d1]
0xf717: call 0x3250
0xf717: jump address is 0x3250
0x3250: jmp qword ptr [rip+0x21ca52]
Execute the function: getenv

0x3250: the return address is 0xf71c
0xf71c: test rax,rax
0xf71f: mov rbx,rax
0xf722: jne 0xf5fc
0xf722: jump address is 0xf5fc
0xf728: lea rdi,[rip+0xa93d]
0xf72f: call 0x3250
0xf72f: jump address is 0x3250
0x3250: jmp qword ptr [rip+0x21ca52]
Execute the function: getenv

0x3250: the return address is 0xf734
0xf734: test rax,rax
0xf737: mov rbx,rax
0xf73a: jne 0xf5fc
0xf73a: jump address is 0xf5fc
Block exists: xor ebp,ebp at address 0xf5fc is visited for 2 times

0xf740: lea rdi,[rip+0xa92f]
0xf747: call 0x3250
0xf747: jump address is 0x3250
0x3250: jmp qword ptr [rip+0x21ca52]
Execute the function: getenv

0x3250: the return address is 0xf74c
0xf74c: test rax,rax
0xf74f: je 0xf79a
0xf74f: jump address is 0xf79a
0xf751: mov qword ptr [r12],0x200
0xf759: xor eax,eax
0xf75b: mov dword ptr [r13],0x0
0xf763: jmp 0xf645
0xf763: jump address is 0xf645
0xf645: mov rcx,qword ptr [rsp+0x8]
0xf64a: xor rcx,qword ptr fs:0x28
0xf653: jne 0xf7b1
0xf653: jump address is 0xf7b1
0xf659: add rsp,0x18
0xf65d: pop rbx
0xf65e: pop rbp
0xf65f: pop r12
0xf661: pop r13
0xf663: ret
0xf663: the return address is 0x4138
0x4138: test eax,eax
0x413a: jne 0x5244
0x413a: jump address is 0x5244
0x4140: mov eax,dword ptr [rip+0x21d1e2]
0x4146: mov dword ptr [rip+0x21d1d0],eax
0x414c: mov rax,qword ptr [rip+0x21d1cd]
0x4153: mov qword ptr [rip+0x21bebe],rax
0x415a: jmp 0x3b08
0x415a: jump address is 0x3b08
0x3b08: lea rcx,[rip+0x21b831]
0x3b0f: lea rdx,[rip+0x162c2]
0x3b16: mov r8,r12
0x3b19: mov rsi,rbx
0x3b1c: mov edi,ebp
0x3b1e: mov dword ptr [rsp+0x30],0xffffffff
0x3b26: call 0x3430
0x3b26: jump address is 0x3430
0x3430: jmp qword ptr [rip+0x21c962]
Execute the function: getopt_long

0x3430: the return address is 0x3b2b
0x3b2b: cmp eax,0xffffffff
0x3b2e: je 0x42bb
0x3b2e: jump address is 0x42bb
0x3b34: add eax,0x83
0x3b39: cmp eax,0x113
0x3b3e: ja 0x50b7
0x3b3e: jump address is 0x50b7
0x3b44: movsxd rax,dword ptr [r13+rax*4]
0x3b49: add rax,r13
0x3b4c: jmp rax
trace back
0x3b4c: jmp rax
0x3b4c: jump address is 0x3e4c
0x3e4c: mov r14,qword ptr [rip+0x21c445]
0x3e53: jmp 0x3b08
0x3e53: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3e58
0x3e58: mov r9,qword ptr [rip+0x21c391]
0x3e5f: mov rsi,qword ptr [rip+0x21c432]
0x3e66: lea rdx,[rip+0x21b413]
0x3e6d: lea rcx,[rip+0x1287c]
0x3e74: lea rdi,[rip+0x13c00]
0x3e7b: mov r8d,0x4
0x3e81: call 0xc410
0x3e81: jump address is 0xc410
0xc410: push r15
0xc412: push r14
0xc414: mov r14,rdi
0xc417: push r13
0xc419: push r12
0xc41b: mov r12,rsi
0xc41e: push rbp
0xc41f: push rbx
0xc420: mov rbp,rcx
0xc423: mov rbx,rdx
0xc426: mov rcx,r8
0xc429: mov rdx,rbp
0xc42c: sub rsp,0x8
0xc430: mov rsi,rbx
0xc433: mov rdi,r12
0xc436: mov r15,r8
0xc439: mov r13,r9
0xc43c: call 0xc150
0xc43c: jump address is 0xc150
Execute the function: argmatch

0xc43c: the return address is 0xc441
0xc441: test rax,rax
0xc444: js 0xc455
0xc444: jump address is 0xc455
0xc446: add rsp,0x8
0xc44a: pop rbx
0xc44b: pop rbp
0xc44c: pop r12
0xc44e: pop r13
0xc450: pop r14
0xc452: pop r15
0xc454: ret
0xc454: the return address is 0x3e86
0x3e86: lea rdx,[rip+0x12863]
0x3e8d: mov eax,dword ptr [rdx+rax*4]
0x3e90: mov dword ptr [rip+0x21d49e],eax
0x3e96: jmp 0x3b08
0x3e96: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0xc455: mov rdx,rax
0xc458: mov rsi,r12
0xc45b: mov rdi,r14
0xc45e: call 0xc270
0xc45e: jump address is 0xc270
0xc270: cmp rdx,0xffffffffffffffff
0xc274: push r12
0xc276: mov edx,0x5
0xc27b: push rbp
0xc27c: mov r12,rsi
0xc27f: push rbx
0xc280: mov rbp,rdi
0xc283: je 0xc2d0
0xc283: jump address is 0xc2d0
0xc285: lea rsi,[rip+0xdcc4]
0xc28c: xor edi,edi
0xc28e: call 0x33e0
0xc28e: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xc293
0xc293: mov rbx,rax
0xc296: mov rsi,rbp
0xc299: mov edi,0x1
0xc29e: call 0x13d40
0xc29e: jump address is 0x13d40
0x13d40: lea rcx,[rip+0x20c4b9]
0x13d47: mov rdx,0xffffffffffffffff
0x13d4e: jmp 0x13420
0x13d4e: jump address is 0x13420
0x13420: push r15
0x13422: push r14
0x13424: movsxd r15,edi
0x13427: push r13
0x13429: push r12
0x1342b: mov r14,rdx
0x1342e: push rbp
0x1342f: push rbx
0x13430: mov rbp,rcx
0x13433: sub rsp,0x28
0x13437: mov qword ptr [rsp+0x8],rsi
0x1343c: call 0x32a0
0x1343c: jump address is 0x32a0
0x32a0: jmp qword ptr [rip+0x21ca2a]
Execute the function: __errno_location

0x32a0: the return address is 0x13441
0x13441: mov r13,rax
0x13444: mov eax,dword ptr [rax]
0x13446: test r15d,r15d
0x13449: mov rbx,qword ptr [rip+0x20cdf0]
0x13450: mov dword ptr [rsp+0x18],eax
0x13454: js 0x135c1
0x13454: jump address is 0x135c1
0x1345a: cmp dword ptr [rip+0x20cdd7],r15d
0x13461: jg 0x134c5
0x13461: jump address is 0x134c5
0x13463: cmp r15d,0x7fffffff
0x1346a: je 0x135c6
0x1346a: jump address is 0x135c6
0x13470: lea r12d,[r15+0x1]
0x13474: lea rax,[rip+0x20cdd5]
0x1347b: movsxd rsi,r12d
0x1347e: shl rsi,0x4
0x13482: cmp rbx,rax
0x13485: je 0x135a0
0x13485: jump address is 0x135a0
0x1348b: mov rdi,rbx
0x1348e: call 0x145f0
0x1348e: jump address is 0x145f0
0x145f0: test rsi,rsi
0x145f3: push rbx
0x145f4: mov rbx,rsi
0x145f7: jne 0x145fe
0x145f7: jump address is 0x145fe
0x145f9: test rdi,rdi
0x145fc: jne 0x14618
0x145fc: jump address is 0x14618
Block exists: mov rsi,rbx at address 0x145fe is visited for 2 times

0x14618: call 0x3880
0x14618: jump address is 0x3880
0x3880: jmp qword ptr [rip+0x21c738]
Execute the function: free

0x3880: the return address is 0x1461d
0x1461d: xor eax,eax
0x1461f: pop rbx
0x14620: ret
0x14620: the return address is 0x13493
0x13493: mov rbx,rax
0x13496: mov qword ptr [rip+0x20cda3],rax
0x1349d: movsxd rdi,dword ptr [rip+0x20cd94]
0x134a4: mov edx,r12d
0x134a7: xor esi,esi
0x134a9: sub edx,edi
0x134ab: shl rdi,0x4
0x134af: movsxd rdx,edx
0x134b2: add rdi,rbx
0x134b5: shl rdx,0x4
0x134b9: call 0x3500
0x134b9: jump address is 0x3500
0x3500: jmp qword ptr [rip+0x21c8fa]
Execute the function: memset

0x3500: the return address is 0x134be
0x134be: mov dword ptr [rip+0x20cd73],r12d
0x134c5: mov eax,dword ptr [rbp+0x4]
0x134c8: shl r15,0x4
0x134cc: sub rsp,0x8
0x134d0: add rbx,r15
0x134d3: lea r15,[rbp+0x8]
0x134d7: mov r8d,dword ptr [rbp]
0x134db: mov r11,qword ptr [rbx]
0x134de: mov r12,qword ptr [rbx+0x8]
0x134e2: mov rcx,r14
0x134e5: or eax,0x1
0x134e8: mov dword ptr [rsp+0x24],eax
0x134ec: push qword ptr [rbp+0x30]
0x134ef: mov r9d,eax
0x134f2: push qword ptr [rbp+0x28]
0x134f5: push r15
0x134f7: mov rsi,r11
0x134fa: mov rdx,qword ptr [rsp+0x28]
0x134ff: mov rdi,r12
0x13502: mov qword ptr [rsp+0x30],r11
0x13507: call 0x121e0
0x13507: jump address is 0x121e0
Block exists: push r15 at address 0x121e0 is visited for 4 times

0x145fe: mov rsi,rbx
0x14601: call 0x36e0
0x14601: jump address is 0x36e0
0x36e0: jmp qword ptr [rip+0x21c80a]
Execute the function: realloc

0x36e0: the return address is 0x14606
0x14606: test rax,rax
0x14609: jne 0x14610
0x14609: jump address is 0x14610
0x14610: pop rbx
0x14611: ret
0x14611: the return address is 0x13493
Block exists: mov rbx,rax at address 0x13493 is visited for 2 times

0x135a0: xor edi,edi
0x135a2: call 0x145f0
0x135a2: jump address is 0x145f0
Execute the function: xrealloc

0x135a2: the return address is 0x135a7
0x135a7: movdqa xmm0,xmmword ptr [rip+0x20cca1]
0x135af: mov rbx,rax
0x135b2: mov qword ptr [rip+0x20cc87],rax
0x135b9: movups xmmword ptr [rax],xmm0
0x135bc: jmp 0x1349d
0x135bc: jump address is 0x1349d
Block exists: movsxd rdi,dword ptr [rip+0x20cd94] at address 0x1349d is visited for 2 times

0x135c6: call 0x147e0
0x135c6: jump address is 0x147e0
0x147e0: lea rsi,[rip+0x6368]
0x147e7: sub rsp,0x8
0x147eb: mov edx,0x5
0x147f0: xor edi,edi
0x147f2: call 0x33e0
0x147f2: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0x147f7
0x147f7: mov edi,dword ptr [rip+0x20b9fb]
0x147fd: lea rdx,[rip+0x5788]
0x14804: mov rcx,rax
0x14807: xor esi,esi
0x14809: xor eax,eax
0x1480b: call 0x3760
0x1480b: jump address is 0x3760
0x3760: jmp qword ptr [rip+0x21c7ca]
Execute the function: error

0x134c5: mov eax,dword ptr [rbp+0x4]
0x134c8: shl r15,0x4
0x134cc: sub rsp,0x8
0x134d0: add rbx,r15
0x134d3: lea r15,[rbp+0x8]
0x134d7: mov r8d,dword ptr [rbp]
0x134db: mov r11,qword ptr [rbx]
0x134de: mov r12,qword ptr [rbx+0x8]
0x134e2: mov rcx,r14
0x134e5: or eax,0x1
0x134e8: mov dword ptr [rsp+0x24],eax
0x134ec: push qword ptr [rbp+0x30]
0x134ef: mov r9d,eax
0x134f2: push qword ptr [rbp+0x28]
0x134f5: push r15
0x134f7: mov rsi,r11
0x134fa: mov rdx,qword ptr [rsp+0x28]
0x134ff: mov rdi,r12
0x13502: mov qword ptr [rsp+0x30],r11
0x13507: call 0x121e0
0x13507: jump address is 0x121e0
Block exists: push r15 at address 0x121e0 is visited for 4 times

0x135c1: call 0x3290
0x135c1: jump address is 0x3290
0x3290: jmp qword ptr [rip+0x21ca32]
Execute the function: abort

0xc2d0: lea rsi,[rip+0xdc5e]
0xc2d7: xor edi,edi
0xc2d9: call 0x33e0
0xc2d9: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xc2de
0xc2de: mov rbx,rax
0xc2e1: jmp 0xc296
0xc2e1: jump address is 0xc296
Block exists: mov rsi,rbp at address 0xc296 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3e9b
0x3e9b: mov r9,qword ptr [rip+0x21c34e]
0x3ea2: mov rsi,qword ptr [rip+0x21c3ef]
0x3ea9: lea rdx,[rip+0x21b410]
0x3eb0: lea rcx,[rip+0x12859]
0x3eb7: lea rdi,[rip+0x13bb6]
0x3ebe: mov r8d,0x4
0x3ec4: call 0xc410
0x3ec4: jump address is 0xc410
0xc410: push r15
0xc412: push r14
0xc414: mov r14,rdi
0xc417: push r13
0xc419: push r12
0xc41b: mov r12,rsi
0xc41e: push rbp
0xc41f: push rbx
0xc420: mov rbp,rcx
0xc423: mov rbx,rdx
0xc426: mov rcx,r8
0xc429: mov rdx,rbp
0xc42c: sub rsp,0x8
0xc430: mov rsi,rbx
0xc433: mov rdi,r12
0xc436: mov r15,r8
0xc439: mov r13,r9
0xc43c: call 0xc150
0xc43c: jump address is 0xc150
Execute the function: argmatch

0xc43c: the return address is 0xc441
0xc441: test rax,rax
0xc444: js 0xc455
0xc444: jump address is 0xc455
0xc446: add rsp,0x8
0xc44a: pop rbx
0xc44b: pop rbp
0xc44c: pop r12
0xc44e: pop r13
0xc450: pop r14
0xc452: pop r15
0xc454: ret
0xc454: the return address is 0x3ec9
0x3ec9: lea rdx,[rip+0x12840]
0x3ed0: mov byte ptr [rsp+0x8],0x1
0x3ed5: mov eax,dword ptr [rdx+rax*4]
0x3ed8: mov dword ptr [rip+0x21d452],eax
0x3ede: jmp 0x3b08
0x3ede: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0xc455: mov rdx,rax
0xc458: mov rsi,r12
0xc45b: mov rdi,r14
0xc45e: call 0xc270
0xc45e: jump address is 0xc270
0xc270: cmp rdx,0xffffffffffffffff
0xc274: push r12
0xc276: mov edx,0x5
0xc27b: push rbp
0xc27c: mov r12,rsi
0xc27f: push rbx
0xc280: mov rbp,rdi
0xc283: je 0xc2d0
0xc283: jump address is 0xc2d0
0xc285: lea rsi,[rip+0xdcc4]
0xc28c: xor edi,edi
0xc28e: call 0x33e0
0xc28e: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xc293
0xc293: mov rbx,rax
0xc296: mov rsi,rbp
0xc299: mov edi,0x1
0xc29e: call 0x13d40
0xc29e: jump address is 0x13d40
0x13d40: lea rcx,[rip+0x20c4b9]
0x13d47: mov rdx,0xffffffffffffffff
0x13d4e: jmp 0x13420
0x13d4e: jump address is 0x13420
0x13420: push r15
0x13422: push r14
0x13424: movsxd r15,edi
0x13427: push r13
0x13429: push r12
0x1342b: mov r14,rdx
0x1342e: push rbp
0x1342f: push rbx
0x13430: mov rbp,rcx
0x13433: sub rsp,0x28
0x13437: mov qword ptr [rsp+0x8],rsi
0x1343c: call 0x32a0
0x1343c: jump address is 0x32a0
0x32a0: jmp qword ptr [rip+0x21ca2a]
Execute the function: __errno_location

0x32a0: the return address is 0x13441
0x13441: mov r13,rax
0x13444: mov eax,dword ptr [rax]
0x13446: test r15d,r15d
0x13449: mov rbx,qword ptr [rip+0x20cdf0]
0x13450: mov dword ptr [rsp+0x18],eax
0x13454: js 0x135c1
0x13454: jump address is 0x135c1
Block exists: cmp dword ptr [rip+0x20cdd7],r15d at address 0x1345a is visited for 2 times

0x135c1: call 0x3290
0x135c1: jump address is 0x3290
0x3290: jmp qword ptr [rip+0x21ca32]
Execute the function: abort

0xc2d0: lea rsi,[rip+0xdc5e]
0xc2d7: xor edi,edi
0xc2d9: call 0x33e0
0xc2d9: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xc2de
0xc2de: mov rbx,rax
0xc2e1: jmp 0xc296
0xc2e1: jump address is 0xc296
Block exists: mov rsi,rbp at address 0xc296 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3ee3
0x3ee3: mov dword ptr [rip+0x21d43b],0x90
0x3eed: mov dword ptr [rip+0x21d425],0x90
0x3ef7: mov qword ptr [rip+0x21d41e],0x1
0x3f02: mov qword ptr [rip+0x21c10b],0x1
0x3f0d: jmp 0x3b08
0x3f0d: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3f12
0x3f12: mov byte ptr [rip+0x21d3bf],0x0
0x3f19: jmp 0x3b08
0x3f19: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3f1e
0x3f1e: mov r9,qword ptr [rip+0x21c2cb]
0x3f25: mov rsi,qword ptr [rip+0x21c36c]
0x3f2c: lea rcx,[rip+0x1688d]
0x3f33: lea rdx,[rip+0x21bb06]
0x3f3a: lea rdi,[rip+0x13b70]
0x3f41: mov r8d,0x4
0x3f47: call 0xc410
0x3f47: jump address is 0xc410
0xc410: push r15
0xc412: push r14
0xc414: mov r14,rdi
0xc417: push r13
0xc419: push r12
0xc41b: mov r12,rsi
0xc41e: push rbp
0xc41f: push rbx
0xc420: mov rbp,rcx
0xc423: mov rbx,rdx
0xc426: mov rcx,r8
0xc429: mov rdx,rbp
0xc42c: sub rsp,0x8
0xc430: mov rsi,rbx
0xc433: mov rdi,r12
0xc436: mov r15,r8
0xc439: mov r13,r9
0xc43c: call 0xc150
0xc43c: jump address is 0xc150
Execute the function: argmatch

0xc43c: the return address is 0xc441
0xc441: test rax,rax
0xc444: js 0xc455
0xc444: jump address is 0xc455
0xc446: add rsp,0x8
0xc44a: pop rbx
0xc44b: pop rbp
0xc44c: pop r12
0xc44e: pop r13
0xc450: pop r14
0xc452: pop r15
0xc454: ret
0xc454: the return address is 0x3f4c
0x3f4c: lea rdx,[rip+0x1686d]
0x3f53: xor edi,edi
0x3f55: mov esi,dword ptr [rdx+rax*4]
0x3f58: call 0x13630
0x3f58: jump address is 0x13630
Execute the function: set_quoting_style

0x3f58: the return address is 0x3f5d
0x3f5d: jmp 0x3b08
0x3f5d: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0xc455: mov rdx,rax
0xc458: mov rsi,r12
0xc45b: mov rdi,r14
0xc45e: call 0xc270
0xc45e: jump address is 0xc270
0xc270: cmp rdx,0xffffffffffffffff
0xc274: push r12
0xc276: mov edx,0x5
0xc27b: push rbp
0xc27c: mov r12,rsi
0xc27f: push rbx
0xc280: mov rbp,rdi
0xc283: je 0xc2d0
0xc283: jump address is 0xc2d0
0xc285: lea rsi,[rip+0xdcc4]
0xc28c: xor edi,edi
0xc28e: call 0x33e0
0xc28e: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xc293
0xc293: mov rbx,rax
0xc296: mov rsi,rbp
0xc299: mov edi,0x1
0xc29e: call 0x13d40
0xc29e: jump address is 0x13d40
0x13d40: lea rcx,[rip+0x20c4b9]
0x13d47: mov rdx,0xffffffffffffffff
0x13d4e: jmp 0x13420
0x13d4e: jump address is 0x13420
0x13420: push r15
0x13422: push r14
0x13424: movsxd r15,edi
0x13427: push r13
0x13429: push r12
0x1342b: mov r14,rdx
0x1342e: push rbp
0x1342f: push rbx
0x13430: mov rbp,rcx
0x13433: sub rsp,0x28
0x13437: mov qword ptr [rsp+0x8],rsi
0x1343c: call 0x32a0
0x1343c: jump address is 0x32a0
0x32a0: jmp qword ptr [rip+0x21ca2a]
Execute the function: __errno_location

0x32a0: the return address is 0x13441
0x13441: mov r13,rax
0x13444: mov eax,dword ptr [rax]
0x13446: test r15d,r15d
0x13449: mov rbx,qword ptr [rip+0x20cdf0]
0x13450: mov dword ptr [rsp+0x18],eax
0x13454: js 0x135c1
0x13454: jump address is 0x135c1
Block exists: cmp dword ptr [rip+0x20cdd7],r15d at address 0x1345a is visited for 2 times

0x135c1: call 0x3290
0x135c1: jump address is 0x3290
0x3290: jmp qword ptr [rip+0x21ca32]
Execute the function: abort

0xc2d0: lea rsi,[rip+0xdc5e]
0xc2d7: xor edi,edi
0xc2d9: call 0x33e0
0xc2d9: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xc2de
0xc2de: mov rbx,rax
0xc2e1: jmp 0xc296
0xc2e1: jump address is 0xc296
Block exists: mov rsi,rbp at address 0xc296 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3f62
0x3f62: mov r9,qword ptr [rip+0x21c287]
0x3f69: mov rsi,qword ptr [rip+0x21c328]
0x3f70: lea rdx,[rip+0x21ba29]
0x3f77: lea rcx,[rip+0x127d2]
0x3f7e: lea rdi,[rip+0x13b1a]
0x3f85: mov r8d,0x4
0x3f8b: call 0xc410
0x3f8b: jump address is 0xc410
0xc410: push r15
0xc412: push r14
0xc414: mov r14,rdi
0xc417: push r13
0xc419: push r12
0xc41b: mov r12,rsi
0xc41e: push rbp
0xc41f: push rbx
0xc420: mov rbp,rcx
0xc423: mov rbx,rdx
0xc426: mov rcx,r8
0xc429: mov rdx,rbp
0xc42c: sub rsp,0x8
0xc430: mov rsi,rbx
0xc433: mov rdi,r12
0xc436: mov r15,r8
0xc439: mov r13,r9
0xc43c: call 0xc150
0xc43c: jump address is 0xc150
Execute the function: argmatch

0xc43c: the return address is 0xc441
0xc441: test rax,rax
0xc444: js 0xc455
0xc444: jump address is 0xc455
0xc446: add rsp,0x8
0xc44a: pop rbx
0xc44b: pop rbp
0xc44c: pop r12
0xc44e: pop r13
0xc450: pop r14
0xc452: pop r15
0xc454: ret
0xc454: the return address is 0x3f90
0x3f90: lea rdx,[rip+0x127b9]
0x3f97: mov eax,dword ptr [rdx+rax*4]
0x3f9a: mov dword ptr [rip+0x21d374],eax
0x3fa0: jmp 0x3b08
0x3fa0: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0xc455: mov rdx,rax
0xc458: mov rsi,r12
0xc45b: mov rdi,r14
0xc45e: call 0xc270
0xc45e: jump address is 0xc270
0xc270: cmp rdx,0xffffffffffffffff
0xc274: push r12
0xc276: mov edx,0x5
0xc27b: push rbp
0xc27c: mov r12,rsi
0xc27f: push rbx
0xc280: mov rbp,rdi
0xc283: je 0xc2d0
0xc283: jump address is 0xc2d0
0xc285: lea rsi,[rip+0xdcc4]
0xc28c: xor edi,edi
0xc28e: call 0x33e0
0xc28e: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xc293
0xc293: mov rbx,rax
0xc296: mov rsi,rbp
0xc299: mov edi,0x1
0xc29e: call 0x13d40
0xc29e: jump address is 0x13d40
0x13d40: lea rcx,[rip+0x20c4b9]
0x13d47: mov rdx,0xffffffffffffffff
0x13d4e: jmp 0x13420
0x13d4e: jump address is 0x13420
0x13420: push r15
0x13422: push r14
0x13424: movsxd r15,edi
0x13427: push r13
0x13429: push r12
0x1342b: mov r14,rdx
0x1342e: push rbp
0x1342f: push rbx
0x13430: mov rbp,rcx
0x13433: sub rsp,0x28
0x13437: mov qword ptr [rsp+0x8],rsi
0x1343c: call 0x32a0
0x1343c: jump address is 0x32a0
0x32a0: jmp qword ptr [rip+0x21ca2a]
Execute the function: __errno_location

0x32a0: the return address is 0x13441
0x13441: mov r13,rax
0x13444: mov eax,dword ptr [rax]
0x13446: test r15d,r15d
0x13449: mov rbx,qword ptr [rip+0x20cdf0]
0x13450: mov dword ptr [rsp+0x18],eax
0x13454: js 0x135c1
0x13454: jump address is 0x135c1
Block exists: cmp dword ptr [rip+0x20cdd7],r15d at address 0x1345a is visited for 2 times

0x135c1: call 0x3290
0x135c1: jump address is 0x3290
0x3290: jmp qword ptr [rip+0x21ca32]
Execute the function: abort

0xc2d0: lea rsi,[rip+0xdc5e]
0xc2d7: xor edi,edi
0xc2d9: call 0x33e0
0xc2d9: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xc2de
0xc2de: mov rbx,rax
0xc2e1: jmp 0xc296
0xc2e1: jump address is 0xc296
Block exists: mov rsi,rbp at address 0xc296 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3fa5
0x3fa5: mov rsi,qword ptr [rip+0x21c2ec]
0x3fac: test rsi,rsi
0x3faf: je 0x42a4
0x3faf: jump address is 0x42a4
0x3fb5: mov r9,qword ptr [rip+0x21c234]
0x3fbc: lea rdx,[rip+0x21b25d]
0x3fc3: lea rcx,[rip+0x126f6]
0x3fca: lea rdi,[rip+0x13ac2]
0x3fd1: mov r8d,0x4
0x3fd7: call 0xc410
0x3fd7: jump address is 0xc410
0xc410: push r15
0xc412: push r14
0xc414: mov r14,rdi
0xc417: push r13
0xc419: push r12
0xc41b: mov r12,rsi
0xc41e: push rbp
0xc41f: push rbx
0xc420: mov rbp,rcx
0xc423: mov rbx,rdx
0xc426: mov rcx,r8
0xc429: mov rdx,rbp
0xc42c: sub rsp,0x8
0xc430: mov rsi,rbx
0xc433: mov rdi,r12
0xc436: mov r15,r8
0xc439: mov r13,r9
0xc43c: call 0xc150
0xc43c: jump address is 0xc150
Execute the function: argmatch

0xc43c: the return address is 0xc441
0xc441: test rax,rax
0xc444: js 0xc455
0xc444: jump address is 0xc455
0xc446: add rsp,0x8
0xc44a: pop rbx
0xc44b: pop rbp
0xc44c: pop r12
0xc44e: pop r13
0xc450: pop r14
0xc452: pop r15
0xc454: ret
0xc454: the return address is 0x3fdc
0x3fdc: lea rdx,[rip+0x126dd]
0x3fe3: mov edx,dword ptr [rdx+rax*4]
0x3fe6: cmp edx,0x1
0x3fe9: je 0x42a4
0x3fe9: jump address is 0x42a4
Block exists: mov eax,0x1 at address 0x42a4 is visited for 2 times

0x3fef: xor eax,eax
0x3ff1: cmp edx,0x2
0x3ff4: jne 0x42a9
0x3ff4: jump address is 0x42a9
0x3ffa: mov edi,0x1
0x3fff: call 0x3300
0x3fff: jump address is 0x3300
0x3300: jmp qword ptr [rip+0x21c9fa]
Execute the function: isatty

0x3300: the return address is 0x4004
0x4004: test eax,eax
0x4006: setne al
0x4009: movzx eax,al
0x400c: jmp 0x42a9
0x400c: jump address is 0x42a9
Block exists: mov byte ptr [rip+0x21d062],al at address 0x42a9 is visited for 2 times

0x42a9: mov byte ptr [rip+0x21d062],al
0x42af: and byte ptr [rip+0x21d05b],0x1
0x42b6: jmp 0x3b08
0x42b6: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0xc455: mov rdx,rax
0xc458: mov rsi,r12
0xc45b: mov rdi,r14
0xc45e: call 0xc270
0xc45e: jump address is 0xc270
0xc270: cmp rdx,0xffffffffffffffff
0xc274: push r12
0xc276: mov edx,0x5
0xc27b: push rbp
0xc27c: mov r12,rsi
0xc27f: push rbx
0xc280: mov rbp,rdi
0xc283: je 0xc2d0
0xc283: jump address is 0xc2d0
0xc285: lea rsi,[rip+0xdcc4]
0xc28c: xor edi,edi
0xc28e: call 0x33e0
0xc28e: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xc293
0xc293: mov rbx,rax
0xc296: mov rsi,rbp
0xc299: mov edi,0x1
0xc29e: call 0x13d40
0xc29e: jump address is 0x13d40
0x13d40: lea rcx,[rip+0x20c4b9]
0x13d47: mov rdx,0xffffffffffffffff
0x13d4e: jmp 0x13420
0x13d4e: jump address is 0x13420
0x13420: push r15
0x13422: push r14
0x13424: movsxd r15,edi
0x13427: push r13
0x13429: push r12
0x1342b: mov r14,rdx
0x1342e: push rbp
0x1342f: push rbx
0x13430: mov rbp,rcx
0x13433: sub rsp,0x28
0x13437: mov qword ptr [rsp+0x8],rsi
0x1343c: call 0x32a0
0x1343c: jump address is 0x32a0
0x32a0: jmp qword ptr [rip+0x21ca2a]
Execute the function: __errno_location

0x32a0: the return address is 0x13441
0x13441: mov r13,rax
0x13444: mov eax,dword ptr [rax]
0x13446: test r15d,r15d
0x13449: mov rbx,qword ptr [rip+0x20cdf0]
0x13450: mov dword ptr [rsp+0x18],eax
0x13454: js 0x135c1
0x13454: jump address is 0x135c1
Block exists: cmp dword ptr [rip+0x20cdd7],r15d at address 0x1345a is visited for 2 times

0x135c1: call 0x3290
0x135c1: jump address is 0x3290
0x3290: jmp qword ptr [rip+0x21ca32]
Execute the function: abort

0xc2d0: lea rsi,[rip+0xdc5e]
0xc2d7: xor edi,edi
0xc2d9: call 0x33e0
0xc2d9: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xc2de
0xc2de: mov rbx,rax
0xc2e1: jmp 0xc296
0xc2e1: jump address is 0xc296
Block exists: mov rsi,rbp at address 0xc296 is visited for 1 times

0x42a4: mov eax,0x1
0x42a9: mov byte ptr [rip+0x21d062],al
0x42af: and byte ptr [rip+0x21d05b],0x1
0x42b6: jmp 0x3b08
0x42b6: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x4011
0x4011: mov edi,0x10
0x4016: call 0x14590
0x4016: jump address is 0x14590
0x14590: push rbx
0x14591: mov rbx,rdi
0x14594: call 0x3888
0x14594: jump address is 0x3888
0x3888: jmp qword ptr [rip+0x21c750]
Execute the function: malloc

0x3888: the return address is 0x14599
0x14599: test rax,rax
0x1459c: jne 0x145a3
0x1459c: jump address is 0x145a3
0x145a3: pop rbx
0x145a4: ret
0x145a4: the return address is 0x401b
0x401b: mov rdx,qword ptr [rip+0x21c276]
0x4022: mov qword ptr [rax],rdx
0x4025: mov rdx,qword ptr [rip+0x21d2b4]
0x402c: mov qword ptr [rip+0x21d2ad],rax
0x4033: mov qword ptr [rax+0x8],rdx
0x4037: jmp 0x3b08
0x4037: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x403c
0x403c: mov byte ptr [rip+0x21d2b1],r15b
0x4043: jmp 0x3b08
0x4043: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x4048
0x4048: mov dword ptr [rip+0x21d2e6],0x0
0x4052: lea r14,[rip+0x139aa]
0x4059: jmp 0x3b08
0x4059: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x405e
0x405e: mov r9,qword ptr [rip+0x21c18b]
0x4065: mov rsi,qword ptr [rip+0x21c22c]
0x406c: lea rdx,[rip+0x21b28d]
0x4073: lea rcx,[rip+0x126b6]
0x407a: lea rdi,[rip+0x13a01]
0x4081: mov r8d,0x4
0x4087: call 0xc410
0x4087: jump address is 0xc410
0xc410: push r15
0xc412: push r14
0xc414: mov r14,rdi
0xc417: push r13
0xc419: push r12
0xc41b: mov r12,rsi
0xc41e: push rbp
0xc41f: push rbx
0xc420: mov rbp,rcx
0xc423: mov rbx,rdx
0xc426: mov rcx,r8
0xc429: mov rdx,rbp
0xc42c: sub rsp,0x8
0xc430: mov rsi,rbx
0xc433: mov rdi,r12
0xc436: mov r15,r8
0xc439: mov r13,r9
0xc43c: call 0xc150
0xc43c: jump address is 0xc150
Execute the function: argmatch

0xc43c: the return address is 0xc441
0xc441: test rax,rax
0xc444: js 0xc455
0xc444: jump address is 0xc455
0xc446: add rsp,0x8
0xc44a: pop rbx
0xc44b: pop rbp
0xc44c: pop r12
0xc44e: pop r13
0xc450: pop r14
0xc452: pop r15
0xc454: ret
0xc454: the return address is 0x408c
0x408c: lea rdx,[rip+0x1269d]
0x4093: mov eax,dword ptr [rdx+rax*4]
0x4096: mov dword ptr [rip+0x21d29c],eax
0x409c: jmp 0x3b08
0x409c: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0xc455: mov rdx,rax
0xc458: mov rsi,r12
0xc45b: mov rdi,r14
0xc45e: call 0xc270
0xc45e: jump address is 0xc270
0xc270: cmp rdx,0xffffffffffffffff
0xc274: push r12
0xc276: mov edx,0x5
0xc27b: push rbp
0xc27c: mov r12,rsi
0xc27f: push rbx
0xc280: mov rbp,rdi
0xc283: je 0xc2d0
0xc283: jump address is 0xc2d0
0xc285: lea rsi,[rip+0xdcc4]
0xc28c: xor edi,edi
0xc28e: call 0x33e0
0xc28e: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xc293
0xc293: mov rbx,rax
0xc296: mov rsi,rbp
0xc299: mov edi,0x1
0xc29e: call 0x13d40
0xc29e: jump address is 0x13d40
0x13d40: lea rcx,[rip+0x20c4b9]
0x13d47: mov rdx,0xffffffffffffffff
0x13d4e: jmp 0x13420
0x13d4e: jump address is 0x13420
0x13420: push r15
0x13422: push r14
0x13424: movsxd r15,edi
0x13427: push r13
0x13429: push r12
0x1342b: mov r14,rdx
0x1342e: push rbp
0x1342f: push rbx
0x13430: mov rbp,rcx
0x13433: sub rsp,0x28
0x13437: mov qword ptr [rsp+0x8],rsi
0x1343c: call 0x32a0
0x1343c: jump address is 0x32a0
0x32a0: jmp qword ptr [rip+0x21ca2a]
Execute the function: __errno_location

0x32a0: the return address is 0x13441
0x13441: mov r13,rax
0x13444: mov eax,dword ptr [rax]
0x13446: test r15d,r15d
0x13449: mov rbx,qword ptr [rip+0x20cdf0]
0x13450: mov dword ptr [rsp+0x18],eax
0x13454: js 0x135c1
0x13454: jump address is 0x135c1
Block exists: cmp dword ptr [rip+0x20cdd7],r15d at address 0x1345a is visited for 2 times

0x135c1: call 0x3290
0x135c1: jump address is 0x3290
0x3290: jmp qword ptr [rip+0x21ca32]
Execute the function: abort

0xc2d0: lea rsi,[rip+0xdc5e]
0xc2d7: xor edi,edi
0xc2d9: call 0x33e0
0xc2d9: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xc2de
0xc2de: mov rbx,rax
0xc2e1: jmp 0xc296
0xc2e1: jump address is 0xc296
Block exists: mov rsi,rbp at address 0xc296 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x40a1
0x40a1: mov dword ptr [rip+0x21d269],0x2
0x40ab: jmp 0x3b08
0x40ab: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x40b0
0x40b0: mov dword ptr [rip+0x21d23e],0x4
0x40ba: jmp 0x3b08
0x40ba: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x40bf
0x40bf: mov rsi,qword ptr [rip+0x21c1d2]
0x40c6: test rsi,rsi
0x40c9: je 0x428d
0x40c9: jump address is 0x428d
0x40cf: mov r9,qword ptr [rip+0x21c11a]
0x40d6: lea rdx,[rip+0x21b143]
0x40dd: lea rcx,[rip+0x125dc]
0x40e4: lea rdi,[rip+0x139a0]
0x40eb: mov r8d,0x4
0x40f1: call 0xc410
0x40f1: jump address is 0xc410
0xc410: push r15
0xc412: push r14
0xc414: mov r14,rdi
0xc417: push r13
0xc419: push r12
0xc41b: mov r12,rsi
0xc41e: push rbp
0xc41f: push rbx
0xc420: mov rbp,rcx
0xc423: mov rbx,rdx
0xc426: mov rcx,r8
0xc429: mov rdx,rbp
0xc42c: sub rsp,0x8
0xc430: mov rsi,rbx
0xc433: mov rdi,r12
0xc436: mov r15,r8
0xc439: mov r13,r9
0xc43c: call 0xc150
0xc43c: jump address is 0xc150
Execute the function: argmatch

0xc43c: the return address is 0xc441
0xc441: test rax,rax
0xc444: js 0xc455
0xc444: jump address is 0xc455
0xc446: add rsp,0x8
0xc44a: pop rbx
0xc44b: pop rbp
0xc44c: pop r12
0xc44e: pop r13
0xc450: pop r14
0xc452: pop r15
0xc454: ret
0xc454: the return address is 0x40f6
0x40f6: lea rdx,[rip+0x125c3]
0x40fd: mov eax,dword ptr [rdx+rax*4]
0x4100: cmp eax,0x1
0x4103: je 0x428d
0x4103: jump address is 0x428d
0x4109: cmp eax,0x2
0x410c: je 0x427b
0x410c: jump address is 0x427b
0x4112: mov byte ptr [rip+0x21d1f9],0x0
0x4119: jmp 0x3b08
0x4119: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x427b: mov edi,0x1
0x4280: call 0x3300
0x4280: jump address is 0x3300
0x3300: jmp qword ptr [rip+0x21c9fa]
Execute the function: isatty

0x3300: the return address is 0x4285
0x4285: test eax,eax
0x4287: je 0x4112
0x4287: jump address is 0x4112
Block exists: mov byte ptr [rip+0x21d07e],r15b at address 0x428d is visited for 3 times

0x4112: mov byte ptr [rip+0x21d1f9],0x0
0x4119: jmp 0x3b08
0x4119: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x428d: mov byte ptr [rip+0x21d07e],r15b
0x4294: mov qword ptr [rip+0x21d021],0x0
0x429f: jmp 0x3b08
0x429f: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0xc455: mov rdx,rax
0xc458: mov rsi,r12
0xc45b: mov rdi,r14
0xc45e: call 0xc270
0xc45e: jump address is 0xc270
0xc270: cmp rdx,0xffffffffffffffff
0xc274: push r12
0xc276: mov edx,0x5
0xc27b: push rbp
0xc27c: mov r12,rsi
0xc27f: push rbx
0xc280: mov rbp,rdi
0xc283: je 0xc2d0
0xc283: jump address is 0xc2d0
0xc285: lea rsi,[rip+0xdcc4]
0xc28c: xor edi,edi
0xc28e: call 0x33e0
0xc28e: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xc293
0xc293: mov rbx,rax
0xc296: mov rsi,rbp
0xc299: mov edi,0x1
0xc29e: call 0x13d40
0xc29e: jump address is 0x13d40
0x13d40: lea rcx,[rip+0x20c4b9]
0x13d47: mov rdx,0xffffffffffffffff
0x13d4e: jmp 0x13420
0x13d4e: jump address is 0x13420
0x13420: push r15
0x13422: push r14
0x13424: movsxd r15,edi
0x13427: push r13
0x13429: push r12
0x1342b: mov r14,rdx
0x1342e: push rbp
0x1342f: push rbx
0x13430: mov rbp,rcx
0x13433: sub rsp,0x28
0x13437: mov qword ptr [rsp+0x8],rsi
0x1343c: call 0x32a0
0x1343c: jump address is 0x32a0
0x32a0: jmp qword ptr [rip+0x21ca2a]
Execute the function: __errno_location

0x32a0: the return address is 0x13441
0x13441: mov r13,rax
0x13444: mov eax,dword ptr [rax]
0x13446: test r15d,r15d
0x13449: mov rbx,qword ptr [rip+0x20cdf0]
0x13450: mov dword ptr [rsp+0x18],eax
0x13454: js 0x135c1
0x13454: jump address is 0x135c1
Block exists: cmp dword ptr [rip+0x20cdd7],r15d at address 0x1345a is visited for 2 times

0x135c1: call 0x3290
0x135c1: jump address is 0x3290
0x3290: jmp qword ptr [rip+0x21ca32]
Execute the function: abort

0xc2d0: lea rsi,[rip+0xdc5e]
0xc2d7: xor edi,edi
0xc2d9: call 0x33e0
0xc2d9: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xc2de
0xc2de: mov rbx,rax
0xc2e1: jmp 0xc296
0xc2e1: jump address is 0xc296
Block exists: mov rsi,rbp at address 0xc296 is visited for 1 times

0x428d: mov byte ptr [rip+0x21d07e],r15b
0x4294: mov qword ptr [rip+0x21d021],0x0
0x429f: jmp 0x3b08
0x429f: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x411e
0x411e: mov rdi,qword ptr [rip+0x21c173]
0x4125: lea rdx,[rip+0x21d1f4]
0x412c: lea rsi,[rip+0x21d1f5]
0x4133: call 0xf5d0
0x4133: jump address is 0xf5d0
0xf5d0: push r13
0xf5d2: push r12
0xf5d4: mov r13,rsi
0xf5d7: push rbp
0xf5d8: push rbx
0xf5d9: mov r12,rdx
0xf5dc: mov rbx,rdi
0xf5df: sub rsp,0x18
0xf5e3: mov rax,qword ptr fs:0x28
0xf5ec: mov qword ptr [rsp+0x8],rax
0xf5f1: xor eax,eax
0xf5f3: test rdi,rdi
0xf5f6: je 0xf710
0xf5f6: jump address is 0xf710
0xf5fc: xor ebp,ebp
0xf5fe: cmp byte ptr [rbx],0x27
0xf601: jne 0xf60c
0xf601: jump address is 0xf60c
0xf603: add rbx,0x1
0xf607: mov ebp,0x4
0xf60c: lea rdx,[rip+0xaa85]
0xf613: lea rsi,[rip+0x2103f6]
0xf61a: mov ecx,0x4
0xf61f: mov rdi,rbx
0xf622: call 0xc150
0xf622: jump address is 0xc150
Execute the function: argmatch

0xf622: the return address is 0xf627
Block exists: test eax,eax at address 0xf627 is visited for 1 times

0xf60c: lea rdx,[rip+0xaa85]
0xf613: lea rsi,[rip+0x2103f6]
0xf61a: mov ecx,0x4
0xf61f: mov rdi,rbx
0xf622: call 0xc150
0xf622: jump address is 0xc150
Execute the function: argmatch

0xf622: the return address is 0xf627
Block exists: test eax,eax at address 0xf627 is visited for 1 times

0xf710: lea rdi,[rip+0x83d1]
0xf717: call 0x3250
0xf717: jump address is 0x3250
0x3250: jmp qword ptr [rip+0x21ca52]
Execute the function: getenv

0x3250: the return address is 0xf71c
0xf71c: test rax,rax
0xf71f: mov rbx,rax
0xf722: jne 0xf5fc
0xf722: jump address is 0xf5fc
Block exists: xor ebp,ebp at address 0xf5fc is visited for 3 times

0xf728: lea rdi,[rip+0xa93d]
0xf72f: call 0x3250
0xf72f: jump address is 0x3250
0x3250: jmp qword ptr [rip+0x21ca52]
Execute the function: getenv

0x3250: the return address is 0xf734
0xf734: test rax,rax
0xf737: mov rbx,rax
0xf73a: jne 0xf5fc
0xf73a: jump address is 0xf5fc
Block exists: xor ebp,ebp at address 0xf5fc is visited for 3 times

0xf740: lea rdi,[rip+0xa92f]
0xf747: call 0x3250
0xf747: jump address is 0x3250
0x3250: jmp qword ptr [rip+0x21ca52]
Execute the function: getenv

0x3250: the return address is 0xf74c
0xf74c: test rax,rax
0xf74f: je 0xf79a
0xf74f: jump address is 0xf79a
0xf751: mov qword ptr [r12],0x200
0xf759: xor eax,eax
0xf75b: mov dword ptr [r13],0x0
0xf763: jmp 0xf645
0xf763: jump address is 0xf645
Block exists: mov rcx,qword ptr [rsp+0x8] at address 0xf645 is visited for 2 times

0xf79a: mov qword ptr [r12],0x400
0xf7a2: xor eax,eax
0xf7a4: mov dword ptr [r13],0x0
0xf7ac: jmp 0xf645
0xf7ac: jump address is 0xf645
Block exists: mov rcx,qword ptr [rsp+0x8] at address 0xf645 is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x424e
0x424e: mov byte ptr [rip+0x21d0d9],r15b
0x4255: jmp 0x3b08
0x4255: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x41cb
0x41cb: mov dword ptr [rip+0x21d163],0x3
0x41d5: jmp 0x3b08
0x41d5: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x41da
0x41da: mov rdi,qword ptr [rip+0x21c0b7]
0x41e1: call 0x56d0
0x41e1: jump address is 0x56d0
0x56d0: sub rsp,0x18
0x56d4: lea r8,[rip+0x121d8]
0x56db: xor edx,edx
0x56dd: xor esi,esi
0x56df: mov rcx,rsp
0x56e2: mov rax,qword ptr fs:0x28
0x56eb: mov qword ptr [rsp+0x8],rax
0x56f0: xor eax,eax
0x56f2: call 0x14f30
0x56f2: jump address is 0x14f30
0x14f30: push r15
0x14f32: push r14
0x14f34: push r13
0x14f36: push r12
0x14f38: push rbp
0x14f39: push rbx
0x14f3a: sub rsp,0x28
0x14f3e: mov rax,qword ptr fs:0x28
0x14f47: mov qword ptr [rsp+0x18],rax
0x14f4c: xor eax,eax
0x14f4e: cmp edx,0x24
0x14f51: ja 0x152b5
0x14f51: jump address is 0x152b5
0x14f57: lea rax,[rsp+0x10]
0x14f5c: mov r15,rsi
0x14f5f: test rsi,rsi
0x14f62: mov rbp,rdi
0x14f65: mov dword ptr [rsp+0x8],edx
0x14f69: mov r14,rcx
0x14f6c: mov r13,r8
0x14f6f: cmove r15,rax
0x14f73: call 0x32a0
0x14f73: jump address is 0x32a0
0x32a0: jmp qword ptr [rip+0x21ca2a]
Execute the function: __errno_location

0x32a0: the return address is 0x14f78
0x14f78: mov dword ptr [rax],0x0
0x14f7e: mov r12,rax
0x14f81: movzx ebx,byte ptr [rbp]
0x14f85: call 0x3860
0x14f85: jump address is 0x3860
0x3860: jmp qword ptr [rip+0x21c74a]
Execute the function: __ctype_b_loc

0x3860: the return address is 0x14f8a
0x14f8a: mov edx,dword ptr [rsp+0x8]
0x14f8e: mov rsi,qword ptr [rax]
0x14f91: mov rax,rbp
0x14f94: jmp 0x14fa7
0x14f94: jump address is 0x14fa7
0x14fa7: movzx ecx,bl
0x14faa: test byte ptr [rsi+rcx*2+0x1],0x20
0x14faf: jne 0x14fa0
0x14faf: jump address is 0x14fa0
0x14fb1: cmp bl,0x2d
0x14fb4: je 0x15008
0x14fb4: jump address is 0x15008
0x14fb6: xor ecx,ecx
0x14fb8: mov rsi,r15
0x14fbb: mov rdi,rbp
0x14fbe: call 0x34e0
0x14fbe: jump address is 0x34e0
0x34e0: jmp qword ptr [rip+0x21c90a]
Execute the function: __strtoul_internal

0x34e0: the return address is 0x14fc3
0x14fc3: mov rcx,qword ptr [r15]
0x14fc6: mov rbx,rax
0x14fc9: cmp rcx,rbp
0x14fcc: je 0x14ff8
0x14fcc: jump address is 0x14ff8
0x14fce: mov eax,dword ptr [r12]
0x14fd2: test eax,eax
0x14fd4: je 0x15038
0x14fd4: jump address is 0x15038
0x14fd6: cmp eax,0x22
0x14fd9: mov ebp,0x1
0x14fde: jne 0x15008
0x14fde: jump address is 0x15008
Block exists: mov ebp,0x4 at address 0x15008 is visited for 2 times

0x14fe0: test r13,r13
0x14fe3: je 0x14fee
0x14fe3: jump address is 0x14fee
0x14fe5: movzx r12d,byte ptr [rcx]
0x14fe9: test r12b,r12b
0x14fec: jne 0x15067
0x14fec: jump address is 0x15067
Block exists: mov qword ptr [r14],rbx at address 0x14fee is visited for 2 times

0x15067: movsx esi,r12b
0x1506b: mov rdi,r13
0x1506e: mov qword ptr [rsp+0x8],rcx
0x15073: call 0x3450
0x15073: jump address is 0x3450
0x3450: jmp qword ptr [rip+0x21c952]
Execute the function: strchr

0x3450: the return address is 0x15078
0x15078: test rax,rax
0x1507b: mov rcx,qword ptr [rsp+0x8]
0x15080: je 0x1514c
0x15080: jump address is 0x1514c
0x15086: lea eax,[r12-0x45]
0x1508b: cmp al,0x2f
0x1508d: ja 0x150e0
0x1508d: jump address is 0x150e0
0x1508f: movabs rdx,0x814400308945
0x15099: bt rdx,rax
0x1509d: jae 0x150e0
0x1509d: jump address is 0x150e0
Block exists: mov edi,0x1 at address 0x150e0 is visited for 2 times

0x1509f: mov esi,0x30
0x150a4: mov rdi,r13
0x150a7: mov qword ptr [rsp+0x8],rcx
0x150ac: call 0x3450
0x150ac: jump address is 0x3450
0x3450: jmp qword ptr [rip+0x21c952]
Execute the function: strchr

0x3450: the return address is 0x150b1
0x150b1: test rax,rax
0x150b4: mov rcx,qword ptr [rsp+0x8]
0x150b9: je 0x150e0
0x150b9: jump address is 0x150e0
Block exists: mov edi,0x1 at address 0x150e0 is visited for 2 times

0x150bb: movzx eax,byte ptr [rcx+0x1]
0x150bf: cmp al,0x44
0x150c1: je 0x150cf
0x150c1: jump address is 0x150cf
0x150c3: cmp al,0x69
0x150c5: je 0x15298
0x150c5: jump address is 0x15298
0x150cb: cmp al,0x42
0x150cd: jne 0x150e0
0x150cd: jump address is 0x150e0
Block exists: mov edi,0x1 at address 0x150e0 is visited for 2 times

Block exists: mov edi,0x2 at address 0x150cf is visited for 2 times

0x15298: xor edi,edi
0x1529a: cmp byte ptr [rcx+0x2],0x42
0x1529e: mov esi,0x400
0x152a3: sete dil
0x152a7: lea edi,[rdi+rdi+0x1]
0x152ab: jmp 0x150ea
0x152ab: jump address is 0x150ea
0x150ea: sub r12d,0x42
0x150ee: cmp r12b,0x35
0x150f2: ja 0x1514c
0x150f2: jump address is 0x1514c
Block exists: mov qword ptr [r14],rbx at address 0x1514c is visited for 2 times

0x150f4: lea rdx,[rip+0x5bf5]
0x150fb: movzx r12d,r12b
0x150ff: movsxd rax,dword ptr [rdx+r12*4]
0x15103: add rax,rdx
0x15106: jmp rax
trace back
0x15106: jmp rax
0x15106: jump address is 0x15157
0x15157: mov edx,0x2
0x1515c: mov rax,rdx
0x1515f: mul rbx
0x15162: jo 0x151fe
0x15162: jump address is 0x151fe
0x15168: add rbx,rbx
0x1516b: jmp 0x15130
0x1516b: jump address is 0x15130
0x15130: movsxd rdi,edi
0x15133: mov eax,ebp
0x15135: add rcx,rdi
0x15138: or eax,0x2
0x1513b: mov qword ptr [r15],rcx
0x1513e: cmp byte ptr [rcx],0x0
0x15141: mov qword ptr [r14],rbx
0x15144: cmovne ebp,eax
0x15147: jmp 0x1500d
0x15147: jump address is 0x1500d
0x1500d: mov rdi,qword ptr [rsp+0x18]
0x15012: xor rdi,qword ptr fs:0x28
0x1501b: mov eax,ebp
0x1501d: jne 0x152b0
0x1501d: jump address is 0x152b0
0x15023: add rsp,0x28
0x15027: pop rbx
0x15028: pop rbp
0x15029: pop r12
0x1502b: pop r13
0x1502d: pop r14
0x1502f: pop r15
0x15031: ret
0x15031: the return address is tge
0x15144: cmovne ebp,eax
0x15147: jmp 0x1500d
0x15147: jump address is 0x1500d
Block exists: mov rdi,qword ptr [rsp+0x18] at address 0x1500d is visited for 2 times

0x151fe: mov ebp,0x1
0x15203: or rbx,0xffffffffffffffff
0x15207: jmp 0x15130
0x15207: jump address is 0x15130
Block exists: movsxd rdi,edi at address 0x15130 is visited for 3 times

0x15106: jmp rax
0x15106: jump address is 0x15130
Block exists: movsxd rdi,edi at address 0x15130 is visited for 3 times

0x15106: jmp rax
0x15106: jump address is 0x1516d
0x1516d: mov edx,0x200
0x15172: mov rax,rdx
0x15175: mul rbx
0x15178: jo 0x151fe
0x15178: jump address is 0x151fe
Block exists: mov ebp,0x1 at address 0x151fe is visited for 3 times

0x1517e: shl rbx,0x9
0x15182: jmp 0x15130
0x15182: jump address is 0x15130
Block exists: movsxd rdi,edi at address 0x15130 is visited for 3 times

0x15106: jmp rax
0x15106: jump address is 0x15184
0x15184: mov r8d,0x7
0x1518a: xor r9d,r9d
0x1518d: nop dword ptr [rax]
0x15190: mov rax,rbx
0x15193: mul rsi
0x15196: mov rbx,rax
0x15199: jo 0x1532e
0x15199: jump address is 0x1532e
0x1519f: sub r8d,0x1
0x151a3: jne 0x15190
0x151a3: jump address is 0x15190
0x15190: mov rax,rbx
0x15193: mul rsi
0x15196: mov rbx,rax
0x15199: jo 0x1532e
0x15199: jump address is 0x1532e
Block exists: mov r9d,0x1 at address 0x1532e is visited for 4 times

Block exists: sub r8d,0x1 at address 0x1519f is visited for 5 times

0x1532e: mov r9d,0x1
0x15334: or rbx,0xffffffffffffffff
0x15338: jmp 0x1519f
0x15338: jump address is 0x1519f
Block exists: sub r8d,0x1 at address 0x1519f is visited for 5 times

0x15106: jmp rax
0x15106: jump address is 0x151aa
0x151aa: mov r8d,0x8
0x151b0: xor r9d,r9d
0x151b3: nop dword ptr [rax+rax]
0x151b8: mov rax,rbx
0x151bb: mul rsi
0x151be: mov rbx,rax
0x151c1: jo 0x15310
0x151c1: jump address is 0x15310
0x151c7: sub r8d,0x1
0x151cb: jne 0x151b8
0x151cb: jump address is 0x151b8
0x151b8: mov rax,rbx
0x151bb: mul rsi
0x151be: mov rbx,rax
0x151c1: jo 0x15310
0x151c1: jump address is 0x15310
Block exists: mov r9d,0x1 at address 0x15310 is visited for 4 times

Block exists: sub r8d,0x1 at address 0x151c7 is visited for 5 times

0x15310: mov r9d,0x1
0x15316: or rbx,0xffffffffffffffff
0x1531a: jmp 0x151c7
0x1531a: jump address is 0x151c7
Block exists: sub r8d,0x1 at address 0x151c7 is visited for 5 times

0x15106: jmp rax
0x15106: jump address is 0x151cf
0x151cf: mov r8d,0x4
0x151d5: xor r9d,r9d
0x151d8: mov rax,rbx
0x151db: mul rsi
0x151de: mov rbx,rax
0x151e1: jo 0x152e3
0x151e1: jump address is 0x152e3
0x151e7: sub r8d,0x1
0x151eb: jne 0x151d8
0x151eb: jump address is 0x151d8
0x151d8: mov rax,rbx
0x151db: mul rsi
0x151de: mov rbx,rax
0x151e1: jo 0x152e3
0x151e1: jump address is 0x152e3
Block exists: mov r9d,0x1 at address 0x152e3 is visited for 4 times

Block exists: sub r8d,0x1 at address 0x151e7 is visited for 5 times

0x152e3: mov r9d,0x1
0x152e9: or rbx,0xffffffffffffffff
0x152ed: jmp 0x151e7
0x152ed: jump address is 0x151e7
Block exists: sub r8d,0x1 at address 0x151e7 is visited for 5 times

0x15106: jmp rax
0x15106: jump address is 0x15210
0x15210: mov r8d,0x5
0x15216: xor r9d,r9d
0x15219: mov rax,rbx
0x1521c: mul rsi
0x1521f: mov rbx,rax
0x15222: jo 0x1531f
0x15222: jump address is 0x1531f
0x15228: sub r8d,0x1
0x1522c: jne 0x15219
0x1522c: jump address is 0x15219
0x15219: mov rax,rbx
0x1521c: mul rsi
0x1521f: mov rbx,rax
0x15222: jo 0x1531f
0x15222: jump address is 0x1531f
Block exists: mov r9d,0x1 at address 0x1531f is visited for 4 times

Block exists: sub r8d,0x1 at address 0x15228 is visited for 5 times

0x1531f: mov r9d,0x1
0x15325: or rbx,0xffffffffffffffff
0x15329: jmp 0x15228
0x15329: jump address is 0x15228
Block exists: sub r8d,0x1 at address 0x15228 is visited for 5 times

0x15106: jmp rax
0x15106: jump address is 0x15108
0x15108: mov rax,rbx
0x1510b: mul rsi
0x1510e: jo 0x15301
0x1510e: jump address is 0x15301
0x15114: xor r8d,r8d
0x15117: mul rsi
0x1511a: jo 0x152f2
0x1511a: jump address is 0x152f2
0x15120: mov rbx,rax
0x15123: or ebp,r8d
0x15126: nop word ptr cs:[rax+rax]
0x15130: movsxd rdi,edi
0x15133: mov eax,ebp
0x15135: add rcx,rdi
0x15138: or eax,0x2
0x1513b: mov qword ptr [r15],rcx
0x1513e: cmp byte ptr [rcx],0x0
0x15141: mov qword ptr [r14],rbx
0x15144: cmovne ebp,eax
0x15147: jmp 0x1500d
0x15147: jump address is 0x1500d
Block exists: mov rdi,qword ptr [rsp+0x18] at address 0x1500d is visited for 2 times

0x15144: cmovne ebp,eax
0x15147: jmp 0x1500d
0x15147: jump address is 0x1500d
Block exists: mov rdi,qword ptr [rsp+0x18] at address 0x1500d is visited for 2 times

0x152f2: mov r8d,0x1
0x152f8: or rbx,0xffffffffffffffff
0x152fc: jmp 0x15123
0x152fc: jump address is 0x15123
Block exists: or ebp,r8d at address 0x15123 is visited for 2 times

0x15301: or rax,0xffffffffffffffff
0x15305: mov r8d,0x1
0x1530b: jmp 0x15117
0x1530b: jump address is 0x15117
0x15117: mul rsi
0x1511a: jo 0x152f2
0x1511a: jump address is 0x152f2
Block exists: mov r8d,0x1 at address 0x152f2 is visited for 3 times

Block exists: mov rbx,rax at address 0x15120 is visited for 4 times

0x15106: jmp rax
0x15106: jump address is 0x151ef
0x151ef: mov rax,rbx
0x151f2: mul rsi
0x151f5: mov rbx,rax
0x151f8: jno 0x15130
0x151f8: jump address is 0x15130
Block exists: movsxd rdi,edi at address 0x15130 is visited for 3 times

Block exists: mov ebp,0x1 at address 0x151fe is visited for 3 times

0x15106: jmp rax
0x15106: jump address is 0x1526c
0x1526c: mov rax,rbx
0x1526f: mul rsi
0x15272: jo 0x1533d
0x15272: jump address is 0x1533d
0x15278: xor r8d,r8d
0x1527b: mul rsi
0x1527e: jno 0x15117
0x1527e: jump address is 0x15117
Block exists: mul rsi at address 0x15117 is visited for 4 times

0x15284: mov r8d,0x1
0x1528a: or rax,0xffffffffffffffff
0x1528e: jmp 0x15117
0x1528e: jump address is 0x15117
Block exists: mul rsi at address 0x15117 is visited for 4 times

0x1533d: mov r8d,0x1
0x15343: or rax,0xffffffffffffffff
0x15347: jmp 0x1527b
0x15347: jump address is 0x1527b
0x1527b: mul rsi
0x1527e: jno 0x15117
0x1527e: jump address is 0x15117
Block exists: mul rsi at address 0x15117 is visited for 4 times

Block exists: mov r8d,0x1 at address 0x15284 is visited for 3 times

0x15106: jmp rax
0x15106: jump address is 0x15233
0x15233: mov r8d,0x6
0x15239: xor r9d,r9d
0x1523c: mov rax,rbx
0x1523f: mul rsi
0x15242: mov rbx,rax
0x15245: jo 0x152d4
0x15245: jump address is 0x152d4
0x1524b: sub r8d,0x1
0x1524f: jne 0x1523c
0x1524f: jump address is 0x1523c
0x1523c: mov rax,rbx
0x1523f: mul rsi
0x15242: mov rbx,rax
0x15245: jo 0x152d4
0x15245: jump address is 0x152d4
Block exists: mov r9d,0x1 at address 0x152d4 is visited for 4 times

Block exists: sub r8d,0x1 at address 0x1524b is visited for 5 times

0x152d4: mov r9d,0x1
0x152da: or rbx,0xffffffffffffffff
0x152de: jmp 0x1524b
0x152de: jump address is 0x1524b
Block exists: sub r8d,0x1 at address 0x1524b is visited for 5 times

0x15106: jmp rax
0x15106: jump address is 0x1514c
Block exists: mov qword ptr [r14],rbx at address 0x1514c is visited for 2 times

0x15106: jmp rax
0x15106: jump address is 0x15256
0x15256: mov edx,0x400
0x1525b: mov rax,rdx
0x1525e: mul rbx
0x15261: jo 0x151fe
0x15261: jump address is 0x151fe
Block exists: mov ebp,0x1 at address 0x151fe is visited for 3 times

0x15263: shl rbx,0xa
0x15267: jmp 0x15130
0x15267: jump address is 0x15130
Block exists: movsxd rdi,edi at address 0x15130 is visited for 3 times

0x150cf: mov edi,0x2
0x150d4: mov esi,0x3e8
0x150d9: jmp 0x150ea
0x150d9: jump address is 0x150ea
0x150ea: sub r12d,0x42
0x150ee: cmp r12b,0x35
0x150f2: ja 0x1514c
0x150f2: jump address is 0x1514c
Block exists: mov qword ptr [r14],rbx at address 0x1514c is visited for 2 times

Block exists: lea rdx,[rip+0x5bf5] at address 0x150f4 is visited for 3 times

0x150e0: mov edi,0x1
0x150e5: mov esi,0x400
0x150ea: sub r12d,0x42
0x150ee: cmp r12b,0x35
0x150f2: ja 0x1514c
0x150f2: jump address is 0x1514c
Block exists: mov qword ptr [r14],rbx at address 0x1514c is visited for 2 times

Block exists: lea rdx,[rip+0x5bf5] at address 0x150f4 is visited for 3 times

0x1514c: mov qword ptr [r14],rbx
0x1514f: or ebp,0x2
0x15152: jmp 0x1500d
0x15152: jump address is 0x1500d
Block exists: mov rdi,qword ptr [rsp+0x18] at address 0x1500d is visited for 2 times

0x14fee: mov qword ptr [r14],rbx
0x14ff1: jmp 0x1500d
0x14ff1: jump address is 0x1500d
Block exists: mov rdi,qword ptr [rsp+0x18] at address 0x1500d is visited for 2 times

0x15038: xor ebp,ebp
0x1503a: jmp 0x14fe0
0x1503a: jump address is 0x14fe0
Block exists: test r13,r13 at address 0x14fe0 is visited for 2 times

0x14ff8: test r13,r13
0x14ffb: mov qword ptr [rsp+0x8],rcx
0x15000: jne 0x15040
0x15000: jump address is 0x15040
0x15002: nop word ptr [rax+rax]
0x15008: mov ebp,0x4
0x1500d: mov rdi,qword ptr [rsp+0x18]
0x15012: xor rdi,qword ptr fs:0x28
0x1501b: mov eax,ebp
0x1501d: jne 0x152b0
0x1501d: jump address is 0x152b0
Block exists: add rsp,0x28 at address 0x15023 is visited for 3 times

0x15040: movzx r12d,byte ptr [rbp]
0x15045: test r12b,r12b
0x15048: je 0x15008
0x15048: jump address is 0x15008
Block exists: mov ebp,0x4 at address 0x15008 is visited for 2 times

0x1504a: movsx esi,r12b
0x1504e: mov rdi,r13
0x15051: xor ebp,ebp
0x15053: call 0x3450
0x15053: jump address is 0x3450
0x3450: jmp qword ptr [rip+0x21c952]
Execute the function: strchr

0x3450: the return address is 0x15058
0x15058: test rax,rax
0x1505b: mov ebx,0x1
0x15060: mov rcx,qword ptr [rsp+0x8]
0x15065: je 0x15008
0x15065: jump address is 0x15008
Block exists: mov ebp,0x4 at address 0x15008 is visited for 2 times

Block exists: movsx esi,r12b at address 0x15067 is visited for 2 times

0x15008: mov ebp,0x4
0x1500d: mov rdi,qword ptr [rsp+0x18]
0x15012: xor rdi,qword ptr fs:0x28
0x1501b: mov eax,ebp
0x1501d: jne 0x152b0
0x1501d: jump address is 0x152b0
Block exists: add rsp,0x28 at address 0x15023 is visited for 3 times

0x14fa0: add rax,0x1
0x14fa4: movzx ebx,byte ptr [rax]
0x14fa7: movzx ecx,bl
0x14faa: test byte ptr [rsi+rcx*2+0x1],0x20
0x14faf: jne 0x14fa0
0x14faf: jump address is 0x14fa0
Block exists: add rax,0x1 at address 0x14fa0 is visited for 2 times

Block exists: cmp bl,0x2d at address 0x14fb1 is visited for 2 times

0x14f6f: cmove r15,rax
0x14f73: call 0x32a0
0x14f73: jump address is 0x32a0
0x32a0: jmp qword ptr [rip+0x21ca2a]
Execute the function: __errno_location

0x32a0: the return address is 0x14f78
Block exists: mov dword ptr [rax],0x0 at address 0x14f78 is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x422b
0x422b: mov dword ptr [rip+0x21d0fb],0x3
0x4235: mov byte ptr [rsp+0x8],0x1
0x423a: jmp 0x3b08
0x423a: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x423f
0x423f: mov dword ptr [rip+0x21d0eb],0x2
0x4249: jmp 0x3b08
0x4249: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x415f
0x415f: mov dword ptr [rip+0x21d1c7],0x4
0x4169: mov byte ptr [rsp+0x8],0x1
0x416e: jmp 0x3b08
0x416e: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x4173
0x4173: mov byte ptr [rip+0x21d1b2],r15b
0x417a: jmp 0x3b08
0x417a: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x417f
0x417f: mov byte ptr [rip+0x21d1a9],r15b
0x4186: jmp 0x3b08
0x4186: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x418b
0x418b: mov byte ptr [rip+0x21d146],r15b
0x4192: jmp 0x3b08
0x4192: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x4197
0x4197: mov dword ptr [rip+0x21d173],0x1
0x41a1: jmp 0x3b08
0x41a1: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x41a6
0x41a6: mov dword ptr [rip+0x21d188],0x0
0x41b0: mov byte ptr [rip+0x21be69],0x0
0x41b7: jmp 0x3b08
0x41b7: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3b4e
0x3b4e: mov byte ptr [rip+0x21d7d8],r15b
0x3b55: mov dword ptr [rip+0x21d7d9],0x0
0x3b5f: jmp 0x3b08
0x3b5f: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x41bc
0x41bc: mov dword ptr [rip+0x21d172],0x4
0x41c6: jmp 0x3b08
0x41c6: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3b55
0x3b55: mov dword ptr [rip+0x21d7d9],0x0
0x3b5f: jmp 0x3b08
0x3b5f: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3b61
0x3b61: mov byte ptr [rsp+0x10],0x1
0x3b66: jmp 0x3b08
0x3b66: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3b68
0x3b68: mov byte ptr [rip+0x21d78d],r15b
0x3b6f: jmp 0x3b08
0x3b6f: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3b71
0x3b71: mov dword ptr [rip+0x21d7ad],0xb0
0x3b7b: mov dword ptr [rip+0x21d797],0xb0
0x3b85: mov qword ptr [rip+0x21d790],0x1
0x3b90: mov qword ptr [rip+0x21c47d],0x1
0x3b9b: jmp 0x3b08
0x3b9b: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3ba0
0x3ba0: mov dword ptr [rip+0x21d78e],0x0
0x3baa: mov byte ptr [rip+0x21c470],0x0
0x3bb1: jmp 0x3b08
0x3bb1: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3bb6
0x3bb6: cmp dword ptr [rip+0x21d77b],0x0
0x3bbd: mov dword ptr [rip+0x21d729],0x2
0x3bc7: mov dword ptr [rip+0x21d75f],0xffffffff
0x3bd1: je 0x4cfb
0x3bd1: jump address is 0x4cfb
0x3bd7: mov byte ptr [rip+0x21d74e],0x0
0x3bde: mov byte ptr [rip+0x21d72d],0x0
0x3be5: mov byte ptr [rip+0x21d725],0x0
0x3bec: mov byte ptr [rsp+0x8],0x1
0x3bf1: jmp 0x3b08
0x3bf1: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x4cfb: mov edi,0x1
0x4d00: call 0x3300
0x4d00: jump address is 0x3300
0x3300: jmp qword ptr [rip+0x21c9fa]
Execute the function: isatty

0x3300: the return address is 0x4d05
0x4d05: cmp eax,0x1
0x4d08: sbb eax,eax
0x4d0a: add eax,0x2
0x4d0d: mov dword ptr [rip+0x21c625],eax
0x4d13: jmp 0x3bd7
0x4d13: jump address is 0x3bd7
0x3bd7: mov byte ptr [rip+0x21d74e],0x0
0x3bde: mov byte ptr [rip+0x21d72d],0x0
0x3be5: mov byte ptr [rip+0x21d725],0x0
0x3bec: mov byte ptr [rsp+0x8],0x1
0x3bf1: jmp 0x3b08
0x3bf1: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3bf6
0x3bf6: mov byte ptr [rip+0x21d6f8],r15b
0x3bfd: jmp 0x3b08
0x3bfd: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3c02
0x3c02: mov dword ptr [rip+0x21d728],0x1
0x3c0c: jmp 0x3b08
0x3c0c: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 6 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3c11
0x3c11: mov esi,0x7
0x3c16: xor edi,edi
0x3c18: call 0x13630
0x3c18: jump address is 0x13630
0x13630: lea rax,[rip+0x20dee9]
0x13637: test rdi,rdi
0x1363a: cmove rdi,rax
0x1363e: mov dword ptr [rdi],esi
0x13640: ret
0x13640: the return address is 0x3c1d
0x3c1d: jmp 0x3b08
0x3c1d: jump address is 0x3b08
0x3b08: lea rcx,[rip+0x21b831]
0x3b0f: lea rdx,[rip+0x162c2]
0x3b16: mov r8,r12
0x3b19: mov rsi,rbx
0x3b1c: mov edi,ebp
0x3b1e: mov dword ptr [rsp+0x30],0xffffffff
0x3b26: call 0x3430
0x3b26: jump address is 0x3430
0x3430: jmp qword ptr [rip+0x21c962]
Execute the function: getopt_long

0x3430: the return address is 0x3b2b
0x3b2b: cmp eax,0xffffffff
0x3b2e: je 0x42bb
0x3b2e: jump address is 0x42bb
0x3b34: add eax,0x83
0x3b39: cmp eax,0x113
0x3b3e: ja 0x50b7
0x3b3e: jump address is 0x50b7
0x3b44: movsxd rax,dword ptr [r13+rax*4]
0x3b49: add rax,r13
0x3b4c: jmp rax
trace back
0x3b4c: jmp rax
0x3b4c: jump address is 0x3e4c
0x3e4c: mov r14,qword ptr [rip+0x21c445]
0x3e53: jmp 0x3b08
0x3e53: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3e58
0x3e58: mov r9,qword ptr [rip+0x21c391]
0x3e5f: mov rsi,qword ptr [rip+0x21c432]
0x3e66: lea rdx,[rip+0x21b413]
0x3e6d: lea rcx,[rip+0x1287c]
0x3e74: lea rdi,[rip+0x13c00]
0x3e7b: mov r8d,0x4
0x3e81: call 0xc410
0x3e81: jump address is 0xc410
0xc410: push r15
0xc412: push r14
0xc414: mov r14,rdi
0xc417: push r13
0xc419: push r12
0xc41b: mov r12,rsi
0xc41e: push rbp
0xc41f: push rbx
0xc420: mov rbp,rcx
0xc423: mov rbx,rdx
0xc426: mov rcx,r8
0xc429: mov rdx,rbp
0xc42c: sub rsp,0x8
0xc430: mov rsi,rbx
0xc433: mov rdi,r12
0xc436: mov r15,r8
0xc439: mov r13,r9
0xc43c: call 0xc150
0xc43c: jump address is 0xc150
Execute the function: argmatch

0xc43c: the return address is 0xc441
0xc441: test rax,rax
0xc444: js 0xc455
0xc444: jump address is 0xc455
0xc446: add rsp,0x8
0xc44a: pop rbx
0xc44b: pop rbp
0xc44c: pop r12
0xc44e: pop r13
0xc450: pop r14
0xc452: pop r15
0xc454: ret
0xc454: the return address is 0x3e86
0x3e86: lea rdx,[rip+0x12863]
0x3e8d: mov eax,dword ptr [rdx+rax*4]
0x3e90: mov dword ptr [rip+0x21d49e],eax
0x3e96: jmp 0x3b08
0x3e96: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0xc455: mov rdx,rax
0xc458: mov rsi,r12
0xc45b: mov rdi,r14
0xc45e: call 0xc270
0xc45e: jump address is 0xc270
0xc270: cmp rdx,0xffffffffffffffff
0xc274: push r12
0xc276: mov edx,0x5
0xc27b: push rbp
0xc27c: mov r12,rsi
0xc27f: push rbx
0xc280: mov rbp,rdi
0xc283: je 0xc2d0
0xc283: jump address is 0xc2d0
0xc285: lea rsi,[rip+0xdcc4]
0xc28c: xor edi,edi
0xc28e: call 0x33e0
0xc28e: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xc293
0xc293: mov rbx,rax
0xc296: mov rsi,rbp
0xc299: mov edi,0x1
0xc29e: call 0x13d40
0xc29e: jump address is 0x13d40
0x13d40: lea rcx,[rip+0x20c4b9]
0x13d47: mov rdx,0xffffffffffffffff
0x13d4e: jmp 0x13420
0x13d4e: jump address is 0x13420
0x13420: push r15
0x13422: push r14
0x13424: movsxd r15,edi
0x13427: push r13
0x13429: push r12
0x1342b: mov r14,rdx
0x1342e: push rbp
0x1342f: push rbx
0x13430: mov rbp,rcx
0x13433: sub rsp,0x28
0x13437: mov qword ptr [rsp+0x8],rsi
0x1343c: call 0x32a0
0x1343c: jump address is 0x32a0
0x32a0: jmp qword ptr [rip+0x21ca2a]
Execute the function: __errno_location

0x32a0: the return address is 0x13441
0x13441: mov r13,rax
0x13444: mov eax,dword ptr [rax]
0x13446: test r15d,r15d
0x13449: mov rbx,qword ptr [rip+0x20cdf0]
0x13450: mov dword ptr [rsp+0x18],eax
0x13454: js 0x135c1
0x13454: jump address is 0x135c1
Block exists: cmp dword ptr [rip+0x20cdd7],r15d at address 0x1345a is visited for 2 times

0x135c1: call 0x3290
0x135c1: jump address is 0x3290
0x3290: jmp qword ptr [rip+0x21ca32]
Execute the function: abort

0xc2d0: lea rsi,[rip+0xdc5e]
0xc2d7: xor edi,edi
0xc2d9: call 0x33e0
0xc2d9: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xc2de
0xc2de: mov rbx,rax
0xc2e1: jmp 0xc296
0xc2e1: jump address is 0xc296
Block exists: mov rsi,rbp at address 0xc296 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3e9b
0x3e9b: mov r9,qword ptr [rip+0x21c34e]
0x3ea2: mov rsi,qword ptr [rip+0x21c3ef]
0x3ea9: lea rdx,[rip+0x21b410]
0x3eb0: lea rcx,[rip+0x12859]
0x3eb7: lea rdi,[rip+0x13bb6]
0x3ebe: mov r8d,0x4
0x3ec4: call 0xc410
0x3ec4: jump address is 0xc410
0xc410: push r15
0xc412: push r14
0xc414: mov r14,rdi
0xc417: push r13
0xc419: push r12
0xc41b: mov r12,rsi
0xc41e: push rbp
0xc41f: push rbx
0xc420: mov rbp,rcx
0xc423: mov rbx,rdx
0xc426: mov rcx,r8
0xc429: mov rdx,rbp
0xc42c: sub rsp,0x8
0xc430: mov rsi,rbx
0xc433: mov rdi,r12
0xc436: mov r15,r8
0xc439: mov r13,r9
0xc43c: call 0xc150
0xc43c: jump address is 0xc150
Execute the function: argmatch

0xc43c: the return address is 0xc441
0xc441: test rax,rax
0xc444: js 0xc455
0xc444: jump address is 0xc455
0xc446: add rsp,0x8
0xc44a: pop rbx
0xc44b: pop rbp
0xc44c: pop r12
0xc44e: pop r13
0xc450: pop r14
0xc452: pop r15
0xc454: ret
0xc454: the return address is 0x3ec9
0x3ec9: lea rdx,[rip+0x12840]
0x3ed0: mov byte ptr [rsp+0x8],0x1
0x3ed5: mov eax,dword ptr [rdx+rax*4]
0x3ed8: mov dword ptr [rip+0x21d452],eax
0x3ede: jmp 0x3b08
0x3ede: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0xc455: mov rdx,rax
0xc458: mov rsi,r12
0xc45b: mov rdi,r14
0xc45e: call 0xc270
0xc45e: jump address is 0xc270
0xc270: cmp rdx,0xffffffffffffffff
0xc274: push r12
0xc276: mov edx,0x5
0xc27b: push rbp
0xc27c: mov r12,rsi
0xc27f: push rbx
0xc280: mov rbp,rdi
0xc283: je 0xc2d0
0xc283: jump address is 0xc2d0
0xc285: lea rsi,[rip+0xdcc4]
0xc28c: xor edi,edi
0xc28e: call 0x33e0
0xc28e: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xc293
0xc293: mov rbx,rax
0xc296: mov rsi,rbp
0xc299: mov edi,0x1
0xc29e: call 0x13d40
0xc29e: jump address is 0x13d40
0x13d40: lea rcx,[rip+0x20c4b9]
0x13d47: mov rdx,0xffffffffffffffff
0x13d4e: jmp 0x13420
0x13d4e: jump address is 0x13420
0x13420: push r15
0x13422: push r14
0x13424: movsxd r15,edi
0x13427: push r13
0x13429: push r12
0x1342b: mov r14,rdx
0x1342e: push rbp
0x1342f: push rbx
0x13430: mov rbp,rcx
0x13433: sub rsp,0x28
0x13437: mov qword ptr [rsp+0x8],rsi
0x1343c: call 0x32a0
0x1343c: jump address is 0x32a0
0x32a0: jmp qword ptr [rip+0x21ca2a]
Execute the function: __errno_location

0x32a0: the return address is 0x13441
0x13441: mov r13,rax
0x13444: mov eax,dword ptr [rax]
0x13446: test r15d,r15d
0x13449: mov rbx,qword ptr [rip+0x20cdf0]
0x13450: mov dword ptr [rsp+0x18],eax
0x13454: js 0x135c1
0x13454: jump address is 0x135c1
Block exists: cmp dword ptr [rip+0x20cdd7],r15d at address 0x1345a is visited for 2 times

0x135c1: call 0x3290
0x135c1: jump address is 0x3290
0x3290: jmp qword ptr [rip+0x21ca32]
Execute the function: abort

0xc2d0: lea rsi,[rip+0xdc5e]
0xc2d7: xor edi,edi
0xc2d9: call 0x33e0
0xc2d9: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xc2de
0xc2de: mov rbx,rax
0xc2e1: jmp 0xc296
0xc2e1: jump address is 0xc296
Block exists: mov rsi,rbp at address 0xc296 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3ee3
0x3ee3: mov dword ptr [rip+0x21d43b],0x90
0x3eed: mov dword ptr [rip+0x21d425],0x90
0x3ef7: mov qword ptr [rip+0x21d41e],0x1
0x3f02: mov qword ptr [rip+0x21c10b],0x1
0x3f0d: jmp 0x3b08
0x3f0d: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3f12
0x3f12: mov byte ptr [rip+0x21d3bf],0x0
0x3f19: jmp 0x3b08
0x3f19: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3f1e
0x3f1e: mov r9,qword ptr [rip+0x21c2cb]
0x3f25: mov rsi,qword ptr [rip+0x21c36c]
0x3f2c: lea rcx,[rip+0x1688d]
0x3f33: lea rdx,[rip+0x21bb06]
0x3f3a: lea rdi,[rip+0x13b70]
0x3f41: mov r8d,0x4
0x3f47: call 0xc410
0x3f47: jump address is 0xc410
0xc410: push r15
0xc412: push r14
0xc414: mov r14,rdi
0xc417: push r13
0xc419: push r12
0xc41b: mov r12,rsi
0xc41e: push rbp
0xc41f: push rbx
0xc420: mov rbp,rcx
0xc423: mov rbx,rdx
0xc426: mov rcx,r8
0xc429: mov rdx,rbp
0xc42c: sub rsp,0x8
0xc430: mov rsi,rbx
0xc433: mov rdi,r12
0xc436: mov r15,r8
0xc439: mov r13,r9
0xc43c: call 0xc150
0xc43c: jump address is 0xc150
Execute the function: argmatch

0xc43c: the return address is 0xc441
0xc441: test rax,rax
0xc444: js 0xc455
0xc444: jump address is 0xc455
0xc446: add rsp,0x8
0xc44a: pop rbx
0xc44b: pop rbp
0xc44c: pop r12
0xc44e: pop r13
0xc450: pop r14
0xc452: pop r15
0xc454: ret
0xc454: the return address is 0x3f4c
0x3f4c: lea rdx,[rip+0x1686d]
0x3f53: xor edi,edi
0x3f55: mov esi,dword ptr [rdx+rax*4]
0x3f58: call 0x13630
0x3f58: jump address is 0x13630
Execute the function: set_quoting_style

0x3f58: the return address is 0x3f5d
0x3f5d: jmp 0x3b08
0x3f5d: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0xc455: mov rdx,rax
0xc458: mov rsi,r12
0xc45b: mov rdi,r14
0xc45e: call 0xc270
0xc45e: jump address is 0xc270
0xc270: cmp rdx,0xffffffffffffffff
0xc274: push r12
0xc276: mov edx,0x5
0xc27b: push rbp
0xc27c: mov r12,rsi
0xc27f: push rbx
0xc280: mov rbp,rdi
0xc283: je 0xc2d0
0xc283: jump address is 0xc2d0
0xc285: lea rsi,[rip+0xdcc4]
0xc28c: xor edi,edi
0xc28e: call 0x33e0
0xc28e: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xc293
0xc293: mov rbx,rax
0xc296: mov rsi,rbp
0xc299: mov edi,0x1
0xc29e: call 0x13d40
0xc29e: jump address is 0x13d40
0x13d40: lea rcx,[rip+0x20c4b9]
0x13d47: mov rdx,0xffffffffffffffff
0x13d4e: jmp 0x13420
0x13d4e: jump address is 0x13420
0x13420: push r15
0x13422: push r14
0x13424: movsxd r15,edi
0x13427: push r13
0x13429: push r12
0x1342b: mov r14,rdx
0x1342e: push rbp
0x1342f: push rbx
0x13430: mov rbp,rcx
0x13433: sub rsp,0x28
0x13437: mov qword ptr [rsp+0x8],rsi
0x1343c: call 0x32a0
0x1343c: jump address is 0x32a0
0x32a0: jmp qword ptr [rip+0x21ca2a]
Execute the function: __errno_location

0x32a0: the return address is 0x13441
0x13441: mov r13,rax
0x13444: mov eax,dword ptr [rax]
0x13446: test r15d,r15d
0x13449: mov rbx,qword ptr [rip+0x20cdf0]
0x13450: mov dword ptr [rsp+0x18],eax
0x13454: js 0x135c1
0x13454: jump address is 0x135c1
Block exists: cmp dword ptr [rip+0x20cdd7],r15d at address 0x1345a is visited for 2 times

0x135c1: call 0x3290
0x135c1: jump address is 0x3290
0x3290: jmp qword ptr [rip+0x21ca32]
Execute the function: abort

0xc2d0: lea rsi,[rip+0xdc5e]
0xc2d7: xor edi,edi
0xc2d9: call 0x33e0
0xc2d9: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xc2de
0xc2de: mov rbx,rax
0xc2e1: jmp 0xc296
0xc2e1: jump address is 0xc296
Block exists: mov rsi,rbp at address 0xc296 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3f62
0x3f62: mov r9,qword ptr [rip+0x21c287]
0x3f69: mov rsi,qword ptr [rip+0x21c328]
0x3f70: lea rdx,[rip+0x21ba29]
0x3f77: lea rcx,[rip+0x127d2]
0x3f7e: lea rdi,[rip+0x13b1a]
0x3f85: mov r8d,0x4
0x3f8b: call 0xc410
0x3f8b: jump address is 0xc410
0xc410: push r15
0xc412: push r14
0xc414: mov r14,rdi
0xc417: push r13
0xc419: push r12
0xc41b: mov r12,rsi
0xc41e: push rbp
0xc41f: push rbx
0xc420: mov rbp,rcx
0xc423: mov rbx,rdx
0xc426: mov rcx,r8
0xc429: mov rdx,rbp
0xc42c: sub rsp,0x8
0xc430: mov rsi,rbx
0xc433: mov rdi,r12
0xc436: mov r15,r8
0xc439: mov r13,r9
0xc43c: call 0xc150
0xc43c: jump address is 0xc150
Execute the function: argmatch

0xc43c: the return address is 0xc441
0xc441: test rax,rax
0xc444: js 0xc455
0xc444: jump address is 0xc455
0xc446: add rsp,0x8
0xc44a: pop rbx
0xc44b: pop rbp
0xc44c: pop r12
0xc44e: pop r13
0xc450: pop r14
0xc452: pop r15
0xc454: ret
0xc454: the return address is 0x3f90
0x3f90: lea rdx,[rip+0x127b9]
0x3f97: mov eax,dword ptr [rdx+rax*4]
0x3f9a: mov dword ptr [rip+0x21d374],eax
0x3fa0: jmp 0x3b08
0x3fa0: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0xc455: mov rdx,rax
0xc458: mov rsi,r12
0xc45b: mov rdi,r14
0xc45e: call 0xc270
0xc45e: jump address is 0xc270
0xc270: cmp rdx,0xffffffffffffffff
0xc274: push r12
0xc276: mov edx,0x5
0xc27b: push rbp
0xc27c: mov r12,rsi
0xc27f: push rbx
0xc280: mov rbp,rdi
0xc283: je 0xc2d0
0xc283: jump address is 0xc2d0
0xc285: lea rsi,[rip+0xdcc4]
0xc28c: xor edi,edi
0xc28e: call 0x33e0
0xc28e: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xc293
0xc293: mov rbx,rax
0xc296: mov rsi,rbp
0xc299: mov edi,0x1
0xc29e: call 0x13d40
0xc29e: jump address is 0x13d40
0x13d40: lea rcx,[rip+0x20c4b9]
0x13d47: mov rdx,0xffffffffffffffff
0x13d4e: jmp 0x13420
0x13d4e: jump address is 0x13420
0x13420: push r15
0x13422: push r14
0x13424: movsxd r15,edi
0x13427: push r13
0x13429: push r12
0x1342b: mov r14,rdx
0x1342e: push rbp
0x1342f: push rbx
0x13430: mov rbp,rcx
0x13433: sub rsp,0x28
0x13437: mov qword ptr [rsp+0x8],rsi
0x1343c: call 0x32a0
0x1343c: jump address is 0x32a0
0x32a0: jmp qword ptr [rip+0x21ca2a]
Execute the function: __errno_location

0x32a0: the return address is 0x13441
0x13441: mov r13,rax
0x13444: mov eax,dword ptr [rax]
0x13446: test r15d,r15d
0x13449: mov rbx,qword ptr [rip+0x20cdf0]
0x13450: mov dword ptr [rsp+0x18],eax
0x13454: js 0x135c1
0x13454: jump address is 0x135c1
Block exists: cmp dword ptr [rip+0x20cdd7],r15d at address 0x1345a is visited for 2 times

0x135c1: call 0x3290
0x135c1: jump address is 0x3290
0x3290: jmp qword ptr [rip+0x21ca32]
Execute the function: abort

0xc2d0: lea rsi,[rip+0xdc5e]
0xc2d7: xor edi,edi
0xc2d9: call 0x33e0
0xc2d9: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xc2de
0xc2de: mov rbx,rax
0xc2e1: jmp 0xc296
0xc2e1: jump address is 0xc296
Block exists: mov rsi,rbp at address 0xc296 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3fa5
0x3fa5: mov rsi,qword ptr [rip+0x21c2ec]
0x3fac: test rsi,rsi
0x3faf: je 0x42a4
0x3faf: jump address is 0x42a4
0x3fb5: mov r9,qword ptr [rip+0x21c234]
0x3fbc: lea rdx,[rip+0x21b25d]
0x3fc3: lea rcx,[rip+0x126f6]
0x3fca: lea rdi,[rip+0x13ac2]
0x3fd1: mov r8d,0x4
0x3fd7: call 0xc410
0x3fd7: jump address is 0xc410
0xc410: push r15
0xc412: push r14
0xc414: mov r14,rdi
0xc417: push r13
0xc419: push r12
0xc41b: mov r12,rsi
0xc41e: push rbp
0xc41f: push rbx
0xc420: mov rbp,rcx
0xc423: mov rbx,rdx
0xc426: mov rcx,r8
0xc429: mov rdx,rbp
0xc42c: sub rsp,0x8
0xc430: mov rsi,rbx
0xc433: mov rdi,r12
0xc436: mov r15,r8
0xc439: mov r13,r9
0xc43c: call 0xc150
0xc43c: jump address is 0xc150
Execute the function: argmatch

0xc43c: the return address is 0xc441
0xc441: test rax,rax
0xc444: js 0xc455
0xc444: jump address is 0xc455
0xc446: add rsp,0x8
0xc44a: pop rbx
0xc44b: pop rbp
0xc44c: pop r12
0xc44e: pop r13
0xc450: pop r14
0xc452: pop r15
0xc454: ret
0xc454: the return address is 0x3fdc
0x3fdc: lea rdx,[rip+0x126dd]
0x3fe3: mov edx,dword ptr [rdx+rax*4]
0x3fe6: cmp edx,0x1
0x3fe9: je 0x42a4
0x3fe9: jump address is 0x42a4
Block exists: mov eax,0x1 at address 0x42a4 is visited for 3 times

0x3fef: xor eax,eax
0x3ff1: cmp edx,0x2
0x3ff4: jne 0x42a9
0x3ff4: jump address is 0x42a9
0x3ffa: mov edi,0x1
0x3fff: call 0x3300
0x3fff: jump address is 0x3300
0x3300: jmp qword ptr [rip+0x21c9fa]
Execute the function: isatty

0x3300: the return address is 0x4004
0x4004: test eax,eax
0x4006: setne al
0x4009: movzx eax,al
0x400c: jmp 0x42a9
0x400c: jump address is 0x42a9
Block exists: mov byte ptr [rip+0x21d062],al at address 0x42a9 is visited for 3 times

0x42a9: mov byte ptr [rip+0x21d062],al
0x42af: and byte ptr [rip+0x21d05b],0x1
0x42b6: jmp 0x3b08
0x42b6: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0xc455: mov rdx,rax
0xc458: mov rsi,r12
0xc45b: mov rdi,r14
0xc45e: call 0xc270
0xc45e: jump address is 0xc270
0xc270: cmp rdx,0xffffffffffffffff
0xc274: push r12
0xc276: mov edx,0x5
0xc27b: push rbp
0xc27c: mov r12,rsi
0xc27f: push rbx
0xc280: mov rbp,rdi
0xc283: je 0xc2d0
0xc283: jump address is 0xc2d0
0xc285: lea rsi,[rip+0xdcc4]
0xc28c: xor edi,edi
0xc28e: call 0x33e0
0xc28e: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xc293
0xc293: mov rbx,rax
0xc296: mov rsi,rbp
0xc299: mov edi,0x1
0xc29e: call 0x13d40
0xc29e: jump address is 0x13d40
0x13d40: lea rcx,[rip+0x20c4b9]
0x13d47: mov rdx,0xffffffffffffffff
0x13d4e: jmp 0x13420
0x13d4e: jump address is 0x13420
0x13420: push r15
0x13422: push r14
0x13424: movsxd r15,edi
0x13427: push r13
0x13429: push r12
0x1342b: mov r14,rdx
0x1342e: push rbp
0x1342f: push rbx
0x13430: mov rbp,rcx
0x13433: sub rsp,0x28
0x13437: mov qword ptr [rsp+0x8],rsi
0x1343c: call 0x32a0
0x1343c: jump address is 0x32a0
0x32a0: jmp qword ptr [rip+0x21ca2a]
Execute the function: __errno_location

0x32a0: the return address is 0x13441
0x13441: mov r13,rax
0x13444: mov eax,dword ptr [rax]
0x13446: test r15d,r15d
0x13449: mov rbx,qword ptr [rip+0x20cdf0]
0x13450: mov dword ptr [rsp+0x18],eax
0x13454: js 0x135c1
0x13454: jump address is 0x135c1
Block exists: cmp dword ptr [rip+0x20cdd7],r15d at address 0x1345a is visited for 2 times

0x135c1: call 0x3290
0x135c1: jump address is 0x3290
0x3290: jmp qword ptr [rip+0x21ca32]
Execute the function: abort

0xc2d0: lea rsi,[rip+0xdc5e]
0xc2d7: xor edi,edi
0xc2d9: call 0x33e0
0xc2d9: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xc2de
0xc2de: mov rbx,rax
0xc2e1: jmp 0xc296
0xc2e1: jump address is 0xc296
Block exists: mov rsi,rbp at address 0xc296 is visited for 1 times

0x42a4: mov eax,0x1
0x42a9: mov byte ptr [rip+0x21d062],al
0x42af: and byte ptr [rip+0x21d05b],0x1
0x42b6: jmp 0x3b08
0x42b6: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x4011
0x4011: mov edi,0x10
0x4016: call 0x14590
0x4016: jump address is 0x14590
0x14590: push rbx
0x14591: mov rbx,rdi
0x14594: call 0x3888
0x14594: jump address is 0x3888
0x3888: jmp qword ptr [rip+0x21c750]
Execute the function: malloc

0x3888: the return address is 0x14599
0x14599: test rax,rax
0x1459c: jne 0x145a3
0x1459c: jump address is 0x145a3
0x145a3: pop rbx
0x145a4: ret
0x145a4: the return address is 0x401b
0x401b: mov rdx,qword ptr [rip+0x21c276]
0x4022: mov qword ptr [rax],rdx
0x4025: mov rdx,qword ptr [rip+0x21d2b4]
0x402c: mov qword ptr [rip+0x21d2ad],rax
0x4033: mov qword ptr [rax+0x8],rdx
0x4037: jmp 0x3b08
0x4037: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x403c
0x403c: mov byte ptr [rip+0x21d2b1],r15b
0x4043: jmp 0x3b08
0x4043: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x4048
0x4048: mov dword ptr [rip+0x21d2e6],0x0
0x4052: lea r14,[rip+0x139aa]
0x4059: jmp 0x3b08
0x4059: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x405e
0x405e: mov r9,qword ptr [rip+0x21c18b]
0x4065: mov rsi,qword ptr [rip+0x21c22c]
0x406c: lea rdx,[rip+0x21b28d]
0x4073: lea rcx,[rip+0x126b6]
0x407a: lea rdi,[rip+0x13a01]
0x4081: mov r8d,0x4
0x4087: call 0xc410
0x4087: jump address is 0xc410
0xc410: push r15
0xc412: push r14
0xc414: mov r14,rdi
0xc417: push r13
0xc419: push r12
0xc41b: mov r12,rsi
0xc41e: push rbp
0xc41f: push rbx
0xc420: mov rbp,rcx
0xc423: mov rbx,rdx
0xc426: mov rcx,r8
0xc429: mov rdx,rbp
0xc42c: sub rsp,0x8
0xc430: mov rsi,rbx
0xc433: mov rdi,r12
0xc436: mov r15,r8
0xc439: mov r13,r9
0xc43c: call 0xc150
0xc43c: jump address is 0xc150
Execute the function: argmatch

0xc43c: the return address is 0xc441
0xc441: test rax,rax
0xc444: js 0xc455
0xc444: jump address is 0xc455
0xc446: add rsp,0x8
0xc44a: pop rbx
0xc44b: pop rbp
0xc44c: pop r12
0xc44e: pop r13
0xc450: pop r14
0xc452: pop r15
0xc454: ret
0xc454: the return address is 0x408c
0x408c: lea rdx,[rip+0x1269d]
0x4093: mov eax,dword ptr [rdx+rax*4]
0x4096: mov dword ptr [rip+0x21d29c],eax
0x409c: jmp 0x3b08
0x409c: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0xc455: mov rdx,rax
0xc458: mov rsi,r12
0xc45b: mov rdi,r14
0xc45e: call 0xc270
0xc45e: jump address is 0xc270
0xc270: cmp rdx,0xffffffffffffffff
0xc274: push r12
0xc276: mov edx,0x5
0xc27b: push rbp
0xc27c: mov r12,rsi
0xc27f: push rbx
0xc280: mov rbp,rdi
0xc283: je 0xc2d0
0xc283: jump address is 0xc2d0
0xc285: lea rsi,[rip+0xdcc4]
0xc28c: xor edi,edi
0xc28e: call 0x33e0
0xc28e: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xc293
0xc293: mov rbx,rax
0xc296: mov rsi,rbp
0xc299: mov edi,0x1
0xc29e: call 0x13d40
0xc29e: jump address is 0x13d40
0x13d40: lea rcx,[rip+0x20c4b9]
0x13d47: mov rdx,0xffffffffffffffff
0x13d4e: jmp 0x13420
0x13d4e: jump address is 0x13420
0x13420: push r15
0x13422: push r14
0x13424: movsxd r15,edi
0x13427: push r13
0x13429: push r12
0x1342b: mov r14,rdx
0x1342e: push rbp
0x1342f: push rbx
0x13430: mov rbp,rcx
0x13433: sub rsp,0x28
0x13437: mov qword ptr [rsp+0x8],rsi
0x1343c: call 0x32a0
0x1343c: jump address is 0x32a0
0x32a0: jmp qword ptr [rip+0x21ca2a]
Execute the function: __errno_location

0x32a0: the return address is 0x13441
0x13441: mov r13,rax
0x13444: mov eax,dword ptr [rax]
0x13446: test r15d,r15d
0x13449: mov rbx,qword ptr [rip+0x20cdf0]
0x13450: mov dword ptr [rsp+0x18],eax
0x13454: js 0x135c1
0x13454: jump address is 0x135c1
Block exists: cmp dword ptr [rip+0x20cdd7],r15d at address 0x1345a is visited for 2 times

0x135c1: call 0x3290
0x135c1: jump address is 0x3290
0x3290: jmp qword ptr [rip+0x21ca32]
Execute the function: abort

0xc2d0: lea rsi,[rip+0xdc5e]
0xc2d7: xor edi,edi
0xc2d9: call 0x33e0
0xc2d9: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xc2de
0xc2de: mov rbx,rax
0xc2e1: jmp 0xc296
0xc2e1: jump address is 0xc296
Block exists: mov rsi,rbp at address 0xc296 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x40a1
0x40a1: mov dword ptr [rip+0x21d269],0x2
0x40ab: jmp 0x3b08
0x40ab: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x40b0
0x40b0: mov dword ptr [rip+0x21d23e],0x4
0x40ba: jmp 0x3b08
0x40ba: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x40bf
0x40bf: mov rsi,qword ptr [rip+0x21c1d2]
0x40c6: test rsi,rsi
0x40c9: je 0x428d
0x40c9: jump address is 0x428d
0x40cf: mov r9,qword ptr [rip+0x21c11a]
0x40d6: lea rdx,[rip+0x21b143]
0x40dd: lea rcx,[rip+0x125dc]
0x40e4: lea rdi,[rip+0x139a0]
0x40eb: mov r8d,0x4
0x40f1: call 0xc410
0x40f1: jump address is 0xc410
0xc410: push r15
0xc412: push r14
0xc414: mov r14,rdi
0xc417: push r13
0xc419: push r12
0xc41b: mov r12,rsi
0xc41e: push rbp
0xc41f: push rbx
0xc420: mov rbp,rcx
0xc423: mov rbx,rdx
0xc426: mov rcx,r8
0xc429: mov rdx,rbp
0xc42c: sub rsp,0x8
0xc430: mov rsi,rbx
0xc433: mov rdi,r12
0xc436: mov r15,r8
0xc439: mov r13,r9
0xc43c: call 0xc150
0xc43c: jump address is 0xc150
Execute the function: argmatch

0xc43c: the return address is 0xc441
0xc441: test rax,rax
0xc444: js 0xc455
0xc444: jump address is 0xc455
0xc446: add rsp,0x8
0xc44a: pop rbx
0xc44b: pop rbp
0xc44c: pop r12
0xc44e: pop r13
0xc450: pop r14
0xc452: pop r15
0xc454: ret
0xc454: the return address is 0x40f6
0x40f6: lea rdx,[rip+0x125c3]
0x40fd: mov eax,dword ptr [rdx+rax*4]
0x4100: cmp eax,0x1
0x4103: je 0x428d
0x4103: jump address is 0x428d
0x4109: cmp eax,0x2
0x410c: je 0x427b
0x410c: jump address is 0x427b
0x4112: mov byte ptr [rip+0x21d1f9],0x0
0x4119: jmp 0x3b08
0x4119: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x427b: mov edi,0x1
0x4280: call 0x3300
0x4280: jump address is 0x3300
0x3300: jmp qword ptr [rip+0x21c9fa]
Execute the function: isatty

0x3300: the return address is 0x4285
0x4285: test eax,eax
0x4287: je 0x4112
0x4287: jump address is 0x4112
Block exists: mov byte ptr [rip+0x21d1f9],0x0 at address 0x4112 is visited for 3 times

Block exists: mov byte ptr [rip+0x21d07e],r15b at address 0x428d is visited for 5 times

0x428d: mov byte ptr [rip+0x21d07e],r15b
0x4294: mov qword ptr [rip+0x21d021],0x0
0x429f: jmp 0x3b08
0x429f: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0xc455: mov rdx,rax
0xc458: mov rsi,r12
0xc45b: mov rdi,r14
0xc45e: call 0xc270
0xc45e: jump address is 0xc270
0xc270: cmp rdx,0xffffffffffffffff
0xc274: push r12
0xc276: mov edx,0x5
0xc27b: push rbp
0xc27c: mov r12,rsi
0xc27f: push rbx
0xc280: mov rbp,rdi
0xc283: je 0xc2d0
0xc283: jump address is 0xc2d0
0xc285: lea rsi,[rip+0xdcc4]
0xc28c: xor edi,edi
0xc28e: call 0x33e0
0xc28e: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xc293
0xc293: mov rbx,rax
0xc296: mov rsi,rbp
0xc299: mov edi,0x1
0xc29e: call 0x13d40
0xc29e: jump address is 0x13d40
0x13d40: lea rcx,[rip+0x20c4b9]
0x13d47: mov rdx,0xffffffffffffffff
0x13d4e: jmp 0x13420
0x13d4e: jump address is 0x13420
0x13420: push r15
0x13422: push r14
0x13424: movsxd r15,edi
0x13427: push r13
0x13429: push r12
0x1342b: mov r14,rdx
0x1342e: push rbp
0x1342f: push rbx
0x13430: mov rbp,rcx
0x13433: sub rsp,0x28
0x13437: mov qword ptr [rsp+0x8],rsi
0x1343c: call 0x32a0
0x1343c: jump address is 0x32a0
0x32a0: jmp qword ptr [rip+0x21ca2a]
Execute the function: __errno_location

0x32a0: the return address is 0x13441
0x13441: mov r13,rax
0x13444: mov eax,dword ptr [rax]
0x13446: test r15d,r15d
0x13449: mov rbx,qword ptr [rip+0x20cdf0]
0x13450: mov dword ptr [rsp+0x18],eax
0x13454: js 0x135c1
0x13454: jump address is 0x135c1
Block exists: cmp dword ptr [rip+0x20cdd7],r15d at address 0x1345a is visited for 2 times

0x135c1: call 0x3290
0x135c1: jump address is 0x3290
0x3290: jmp qword ptr [rip+0x21ca32]
Execute the function: abort

0xc2d0: lea rsi,[rip+0xdc5e]
0xc2d7: xor edi,edi
0xc2d9: call 0x33e0
0xc2d9: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xc2de
0xc2de: mov rbx,rax
0xc2e1: jmp 0xc296
0xc2e1: jump address is 0xc296
Block exists: mov rsi,rbp at address 0xc296 is visited for 1 times

0x428d: mov byte ptr [rip+0x21d07e],r15b
0x4294: mov qword ptr [rip+0x21d021],0x0
0x429f: jmp 0x3b08
0x429f: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x411e
0x411e: mov rdi,qword ptr [rip+0x21c173]
0x4125: lea rdx,[rip+0x21d1f4]
0x412c: lea rsi,[rip+0x21d1f5]
0x4133: call 0xf5d0
0x4133: jump address is 0xf5d0
0xf5d0: push r13
0xf5d2: push r12
0xf5d4: mov r13,rsi
0xf5d7: push rbp
0xf5d8: push rbx
0xf5d9: mov r12,rdx
0xf5dc: mov rbx,rdi
0xf5df: sub rsp,0x18
0xf5e3: mov rax,qword ptr fs:0x28
0xf5ec: mov qword ptr [rsp+0x8],rax
0xf5f1: xor eax,eax
0xf5f3: test rdi,rdi
0xf5f6: je 0xf710
0xf5f6: jump address is 0xf710
0xf5fc: xor ebp,ebp
0xf5fe: cmp byte ptr [rbx],0x27
0xf601: jne 0xf60c
0xf601: jump address is 0xf60c
0xf603: add rbx,0x1
0xf607: mov ebp,0x4
0xf60c: lea rdx,[rip+0xaa85]
0xf613: lea rsi,[rip+0x2103f6]
0xf61a: mov ecx,0x4
0xf61f: mov rdi,rbx
0xf622: call 0xc150
0xf622: jump address is 0xc150
Execute the function: argmatch

0xf622: the return address is 0xf627
0xf627: test eax,eax
0xf629: js 0xf668
0xf629: jump address is 0xf668
0xf62b: lea rdx,[rip+0xaa66]
0xf632: cdqe
0xf634: mov qword ptr [r12],0x1
0xf63c: or ebp,dword ptr [rdx+rax*4]
0xf63f: xor eax,eax
0xf641: mov dword ptr [r13],ebp
0xf645: mov rcx,qword ptr [rsp+0x8]
0xf64a: xor rcx,qword ptr fs:0x28
0xf653: jne 0xf7b1
0xf653: jump address is 0xf7b1
0xf659: add rsp,0x18
0xf65d: pop rbx
0xf65e: pop rbp
0xf65f: pop r12
0xf661: pop r13
0xf663: ret
0xf663: the return address is gef
0xf668: lea r8,[rip+0xaa17]
0xf66f: xor edx,edx
0xf671: mov rsi,rsp
0xf674: mov rcx,r12
0xf677: mov rdi,rbx
0xf67a: call 0x14f30
0xf67a: jump address is 0x14f30
0x14f30: push r15
0x14f32: push r14
0x14f34: push r13
0x14f36: push r12
0x14f38: push rbp
0x14f39: push rbx
0x14f3a: sub rsp,0x28
0x14f3e: mov rax,qword ptr fs:0x28
0x14f47: mov qword ptr [rsp+0x18],rax
0x14f4c: xor eax,eax
0x14f4e: cmp edx,0x24
0x14f51: ja 0x152b5
0x14f51: jump address is 0x152b5
0x14f57: lea rax,[rsp+0x10]
0x14f5c: mov r15,rsi
0x14f5f: test rsi,rsi
0x14f62: mov rbp,rdi
0x14f65: mov dword ptr [rsp+0x8],edx
0x14f69: mov r14,rcx
0x14f6c: mov r13,r8
0x14f6f: cmove r15,rax
0x14f73: call 0x32a0
0x14f73: jump address is 0x32a0
0x32a0: jmp qword ptr [rip+0x21ca2a]
Execute the function: __errno_location

0x32a0: the return address is 0x14f78
Block exists: mov dword ptr [rax],0x0 at address 0x14f78 is visited for 2 times

0x14f6f: cmove r15,rax
0x14f73: call 0x32a0
0x14f73: jump address is 0x32a0
0x32a0: jmp qword ptr [rip+0x21ca2a]
Execute the function: __errno_location

0x32a0: the return address is 0x14f78
Block exists: mov dword ptr [rax],0x0 at address 0x14f78 is visited for 2 times

0xf60c: lea rdx,[rip+0xaa85]
0xf613: lea rsi,[rip+0x2103f6]
0xf61a: mov ecx,0x4
0xf61f: mov rdi,rbx
0xf622: call 0xc150
0xf622: jump address is 0xc150
Execute the function: argmatch

0xf622: the return address is 0xf627
Block exists: test eax,eax at address 0xf627 is visited for 2 times

0xf710: lea rdi,[rip+0x83d1]
0xf717: call 0x3250
0xf717: jump address is 0x3250
0x3250: jmp qword ptr [rip+0x21ca52]
Execute the function: getenv

0x3250: the return address is 0xf71c
0xf71c: test rax,rax
0xf71f: mov rbx,rax
0xf722: jne 0xf5fc
0xf722: jump address is 0xf5fc
Block exists: xor ebp,ebp at address 0xf5fc is visited for 4 times

0xf728: lea rdi,[rip+0xa93d]
0xf72f: call 0x3250
0xf72f: jump address is 0x3250
0x3250: jmp qword ptr [rip+0x21ca52]
Execute the function: getenv

0x3250: the return address is 0xf734
0xf734: test rax,rax
0xf737: mov rbx,rax
0xf73a: jne 0xf5fc
0xf73a: jump address is 0xf5fc
Block exists: xor ebp,ebp at address 0xf5fc is visited for 4 times

0xf740: lea rdi,[rip+0xa92f]
0xf747: call 0x3250
0xf747: jump address is 0x3250
0x3250: jmp qword ptr [rip+0x21ca52]
Execute the function: getenv

0x3250: the return address is 0xf74c
0xf74c: test rax,rax
0xf74f: je 0xf79a
0xf74f: jump address is 0xf79a
0xf751: mov qword ptr [r12],0x200
0xf759: xor eax,eax
0xf75b: mov dword ptr [r13],0x0
0xf763: jmp 0xf645
0xf763: jump address is 0xf645
0xf645: mov rcx,qword ptr [rsp+0x8]
0xf64a: xor rcx,qword ptr fs:0x28
0xf653: jne 0xf7b1
0xf653: jump address is 0xf7b1
Block exists: add rsp,0x18 at address 0xf659 is visited for 3 times

0xf79a: mov qword ptr [r12],0x400
0xf7a2: xor eax,eax
0xf7a4: mov dword ptr [r13],0x0
0xf7ac: jmp 0xf645
0xf7ac: jump address is 0xf645
Block exists: mov rcx,qword ptr [rsp+0x8] at address 0xf645 is visited for 3 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x424e
0x424e: mov byte ptr [rip+0x21d0d9],r15b
0x4255: jmp 0x3b08
0x4255: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x41cb
0x41cb: mov dword ptr [rip+0x21d163],0x3
0x41d5: jmp 0x3b08
0x41d5: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x41da
0x41da: mov rdi,qword ptr [rip+0x21c0b7]
0x41e1: call 0x56d0
0x41e1: jump address is 0x56d0
0x56d0: sub rsp,0x18
0x56d4: lea r8,[rip+0x121d8]
0x56db: xor edx,edx
0x56dd: xor esi,esi
0x56df: mov rcx,rsp
0x56e2: mov rax,qword ptr fs:0x28
0x56eb: mov qword ptr [rsp+0x8],rax
0x56f0: xor eax,eax
0x56f2: call 0x14f30
0x56f2: jump address is 0x14f30
Block exists: push r15 at address 0x14f30 is visited for 3 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x422b
0x422b: mov dword ptr [rip+0x21d0fb],0x3
0x4235: mov byte ptr [rsp+0x8],0x1
0x423a: jmp 0x3b08
0x423a: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x423f
0x423f: mov dword ptr [rip+0x21d0eb],0x2
0x4249: jmp 0x3b08
0x4249: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x415f
0x415f: mov dword ptr [rip+0x21d1c7],0x4
0x4169: mov byte ptr [rsp+0x8],0x1
0x416e: jmp 0x3b08
0x416e: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x4173
0x4173: mov byte ptr [rip+0x21d1b2],r15b
0x417a: jmp 0x3b08
0x417a: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x417f
0x417f: mov byte ptr [rip+0x21d1a9],r15b
0x4186: jmp 0x3b08
0x4186: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x418b
0x418b: mov byte ptr [rip+0x21d146],r15b
0x4192: jmp 0x3b08
0x4192: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x4197
0x4197: mov dword ptr [rip+0x21d173],0x1
0x41a1: jmp 0x3b08
0x41a1: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x41a6
0x41a6: mov dword ptr [rip+0x21d188],0x0
0x41b0: mov byte ptr [rip+0x21be69],0x0
0x41b7: jmp 0x3b08
0x41b7: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3b4e
0x3b4e: mov byte ptr [rip+0x21d7d8],r15b
0x3b55: mov dword ptr [rip+0x21d7d9],0x0
0x3b5f: jmp 0x3b08
0x3b5f: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x41bc
0x41bc: mov dword ptr [rip+0x21d172],0x4
0x41c6: jmp 0x3b08
0x41c6: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3b55
0x3b55: mov dword ptr [rip+0x21d7d9],0x0
0x3b5f: jmp 0x3b08
0x3b5f: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3b61
0x3b61: mov byte ptr [rsp+0x10],0x1
0x3b66: jmp 0x3b08
0x3b66: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3b68
0x3b68: mov byte ptr [rip+0x21d78d],r15b
0x3b6f: jmp 0x3b08
0x3b6f: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3b71
0x3b71: mov dword ptr [rip+0x21d7ad],0xb0
0x3b7b: mov dword ptr [rip+0x21d797],0xb0
0x3b85: mov qword ptr [rip+0x21d790],0x1
0x3b90: mov qword ptr [rip+0x21c47d],0x1
0x3b9b: jmp 0x3b08
0x3b9b: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3ba0
0x3ba0: mov dword ptr [rip+0x21d78e],0x0
0x3baa: mov byte ptr [rip+0x21c470],0x0
0x3bb1: jmp 0x3b08
0x3bb1: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3bb6
0x3bb6: cmp dword ptr [rip+0x21d77b],0x0
0x3bbd: mov dword ptr [rip+0x21d729],0x2
0x3bc7: mov dword ptr [rip+0x21d75f],0xffffffff
0x3bd1: je 0x4cfb
0x3bd1: jump address is 0x4cfb
0x3bd7: mov byte ptr [rip+0x21d74e],0x0
0x3bde: mov byte ptr [rip+0x21d72d],0x0
0x3be5: mov byte ptr [rip+0x21d725],0x0
0x3bec: mov byte ptr [rsp+0x8],0x1
0x3bf1: jmp 0x3b08
0x3bf1: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x4cfb: mov edi,0x1
0x4d00: call 0x3300
0x4d00: jump address is 0x3300
0x3300: jmp qword ptr [rip+0x21c9fa]
Execute the function: isatty

0x3300: the return address is 0x4d05
0x4d05: cmp eax,0x1
0x4d08: sbb eax,eax
0x4d0a: add eax,0x2
0x4d0d: mov dword ptr [rip+0x21c625],eax
0x4d13: jmp 0x3bd7
0x4d13: jump address is 0x3bd7
0x3bd7: mov byte ptr [rip+0x21d74e],0x0
0x3bde: mov byte ptr [rip+0x21d72d],0x0
0x3be5: mov byte ptr [rip+0x21d725],0x0
0x3bec: mov byte ptr [rsp+0x8],0x1
0x3bf1: jmp 0x3b08
0x3bf1: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3bf6
0x3bf6: mov byte ptr [rip+0x21d6f8],r15b
0x3bfd: jmp 0x3b08
0x3bfd: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3c02
0x3c02: mov dword ptr [rip+0x21d728],0x1
0x3c0c: jmp 0x3b08
0x3c0c: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3c11
0x3c11: mov esi,0x7
0x3c16: xor edi,edi
0x3c18: call 0x13630
0x3c18: jump address is 0x13630
Execute the function: set_quoting_style

0x3c18: the return address is 0x3c1d
0x3c1d: jmp 0x3b08
0x3c1d: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3c22
0x3c22: mov dword ptr [rip+0x21d6c4],0x2
0x3c2c: jmp 0x3b08
0x3c2c: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3c31
0x3c31: mov byte ptr [rip+0x21d72d],r15b
0x3c38: jmp 0x3b08
0x3c38: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3c3d
0x3c3d: mov dword ptr [rip+0x21d6e9],0x1
0x3c47: mov byte ptr [rsp+0x8],0x1
0x3c4c: jmp 0x3b08
0x3c4c: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3c51
0x3c51: mov dword ptr [rip+0x21d6d5],0xffffffff
0x3c5b: mov byte ptr [rsp+0x8],0x1
0x3c60: jmp 0x3b08
0x3c60: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3c65
0x3c65: lea rsi,[rip+0x13df7]
0x3c6c: mov edx,0x5
0x3c71: xor edi,edi
0x3c73: call 0x33e0
0x3c73: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0x3c78
0x3c78: sub rsp,0x8
0x3c7c: mov rdi,qword ptr [rip+0x21c615]
0x3c83: lea r8,[rip+0x13c29]
0x3c8a: push 0x2
0x3c8c: xor edx,edx
0x3c8e: mov r9,rax
0x3c91: or rcx,0xffffffffffffffff
0x3c95: xor esi,esi
0x3c97: call 0x14820
0x3c97: jump address is 0x14820
0x14820: push r15
0x14822: push r14
0x14824: mov r15,rcx
0x14827: push r13
0x14829: push r12
0x1482b: mov r14,rdx
0x1482e: push rbp
0x1482f: push rbx
0x14830: mov edx,esi
0x14832: xor esi,esi
0x14834: mov r12,rdi
0x14837: mov r13,r9
0x1483a: sub rsp,0x18
0x1483e: mov rcx,rsp
0x14841: mov ebx,dword ptr [rsp+0x50]
0x14845: mov rax,qword ptr fs:0x28
0x1484e: mov qword ptr [rsp+0x8],rax
0x14853: xor eax,eax
0x14855: call 0x14f30
0x14855: jump address is 0x14f30
0x14f30: push r15
0x14f32: push r14
0x14f34: push r13
0x14f36: push r12
0x14f38: push rbp
0x14f39: push rbx
0x14f3a: sub rsp,0x28
0x14f3e: mov rax,qword ptr fs:0x28
0x14f47: mov qword ptr [rsp+0x18],rax
0x14f4c: xor eax,eax
0x14f4e: cmp edx,0x24
0x14f51: ja 0x152b5
0x14f51: jump address is 0x152b5
0x14f57: lea rax,[rsp+0x10]
0x14f5c: mov r15,rsi
0x14f5f: test rsi,rsi
0x14f62: mov rbp,rdi
0x14f65: mov dword ptr [rsp+0x8],edx
0x14f69: mov r14,rcx
0x14f6c: mov r13,r8
0x14f6f: cmove r15,rax
0x14f73: call 0x32a0
0x14f73: jump address is 0x32a0
0x32a0: jmp qword ptr [rip+0x21ca2a]
Execute the function: __errno_location

0x32a0: the return address is 0x14f78
Block exists: mov dword ptr [rax],0x0 at address 0x14f78 is visited for 2 times

0x14f6f: cmove r15,rax
0x14f73: call 0x32a0
0x14f73: jump address is 0x32a0
0x32a0: jmp qword ptr [rip+0x21ca2a]
Execute the function: __errno_location

0x32a0: the return address is 0x14f78
Block exists: mov dword ptr [rax],0x0 at address 0x14f78 is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3caa
0x3caa: mov dword ptr [rip+0x21d67c],0x2
0x3cb4: mov byte ptr [rsp+0x8],0x1
0x3cb9: jmp 0x3b08
0x3cb9: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3cbe
0x3cbe: mov byte ptr [rip+0x21d631],r15b
0x3cc5: jmp 0x3b08
0x3cc5: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3cca
0x3cca: mov esi,0x5
0x3ccf: xor edi,edi
0x3cd1: call 0x13630
0x3cd1: jump address is 0x13630
Execute the function: set_quoting_style

0x3cd1: the return address is 0x3cd6
0x3cd6: jmp 0x3b08
0x3cd6: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3cdb
0x3cdb: xor esi,esi
0x3cdd: xor edi,edi
0x3cdf: call 0x13630
0x3cdf: jump address is 0x13630
Execute the function: set_quoting_style

0x3cdf: the return address is 0x3ce4
0x3ce4: jmp 0x3b08
0x3ce4: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3ce9
0x3ce9: mov dword ptr [rip+0x21d605],0x5
0x3cf3: jmp 0x3b08
0x3cf3: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3cf8
0x3cf8: mov rdx,qword ptr [rip+0x21c599]
0x3cff: mov edi,0x10
0x3d04: mov qword ptr [rsp+0x18],rdx
0x3d09: call 0x14590
0x3d09: jump address is 0x14590
0x14590: push rbx
0x14591: mov rbx,rdi
0x14594: call 0x3888
0x14594: jump address is 0x3888
0x3888: jmp qword ptr [rip+0x21c750]
Execute the function: malloc

0x3888: the return address is 0x14599
0x14599: test rax,rax
0x1459c: jne 0x145a3
0x1459c: jump address is 0x145a3
0x145a3: pop rbx
0x145a4: ret
0x145a4: the return address is 0x3d0e
0x3d0e: mov rdx,qword ptr [rsp+0x18]
0x3d13: mov qword ptr [rax],rdx
0x3d16: mov rdx,qword ptr [rip+0x21d5cb]
0x3d1d: mov qword ptr [rax+0x8],rdx
0x3d21: mov qword ptr [rip+0x21d5c0],rax
0x3d28: jmp 0x3b08
0x3d28: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3d2d
0x3d2d: mov dword ptr [rip+0x21d5c1],0x3
0x3d37: jmp 0x3b08
0x3d37: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3d3c
0x3d3c: mov byte ptr [rip+0x21c2dd],0x0
0x3d43: jmp 0x3b08
0x3d43: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3d48
0x3d48: mov dword ptr [rip+0x21d5c2],0x3
0x3d52: jmp 0x3b08
0x3d52: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3d57
0x3d57: mov byte ptr [rip+0x21d5ba],r15b
0x3d5e: jmp 0x3b08
0x3d5e: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3d63
0x3d63: mov dword ptr [rip+0x21d5cb],0x2
0x3d6d: jmp 0x3b08
0x3d6d: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3d72
0x3d72: mov edi,0x10
0x3d77: call 0x14590
0x3d77: jump address is 0x14590
0x14590: push rbx
0x14591: mov rbx,rdi
0x14594: call 0x3888
0x14594: jump address is 0x3888
0x3888: jmp qword ptr [rip+0x21c750]
Execute the function: malloc

0x3888: the return address is 0x14599
0x14599: test rax,rax
0x1459c: jne 0x145a3
0x1459c: jump address is 0x145a3
0x145a3: pop rbx
0x145a4: ret
0x145a4: the return address is 0x3d7c
0x3d7c: mov rdx,qword ptr [rip+0x21d565]
0x3d83: lea rsi,[rip+0x13cd6]
0x3d8a: mov edi,0x10
0x3d8f: mov qword ptr [rip+0x21d552],rax
0x3d96: mov qword ptr [rax],rsi
0x3d99: mov qword ptr [rax+0x8],rdx
0x3d9d: call 0x14590
0x3d9d: jump address is 0x14590
0x14590: push rbx
0x14591: mov rbx,rdi
0x14594: call 0x3888
0x14594: jump address is 0x3888
0x3888: jmp qword ptr [rip+0x21c750]
Execute the function: malloc

0x3888: the return address is 0x14599
0x14599: test rax,rax
0x1459c: jne 0x145a3
0x1459c: jump address is 0x145a3
0x145a3: pop rbx
0x145a4: ret
0x145a4: the return address is 0x3da2
0x3da2: mov rdx,qword ptr [rip+0x21d53f]
0x3da9: lea rsi,[rip+0x13caf]
0x3db0: mov qword ptr [rax],rsi
0x3db3: mov qword ptr [rax+0x8],rdx
0x3db7: mov qword ptr [rip+0x21d52a],rax
0x3dbe: jmp 0x3b08
0x3dbe: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3dc3
0x3dc3: mov dword ptr [rip+0x21d523],0x1
0x3dcd: jmp 0x3b08
0x3dcd: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3dd2
0x3dd2: cmp dword ptr [rip+0x21d55f],0x0
0x3dd9: je 0x3b08
0x3dd9: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3ddf: mov dword ptr [rip+0x21d54f],0x1
0x3de9: jmp 0x3b08
0x3de9: jump address is 0x3b08
Block exists: lea rcx,[rip+0x21b831] at address 0x3b08 is visited for 7 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x50b7
0x50b7: mov edi,0x2
0x50bc: call 0xb910
0x50bc: jump address is 0xb910
0xb910: push r13
0xb912: push r12
0xb914: mov edx,0x5
0xb919: push rbp
0xb91a: push rbx
0xb91b: mov r12d,edi
0xb91e: sub rsp,0x88
0xb925: mov rbx,qword ptr [rip+0x215ad4]
0xb92c: mov rax,qword ptr fs:0x28
0xb935: mov qword ptr [rsp+0x78],rax
0xb93a: xor eax,eax
0xb93c: test edi,edi
0xb93e: je 0xb96f
0xb93e: jump address is 0xb96f
0xb940: lea rsi,[rip+0xc569]
0xb947: xor edi,edi
0xb949: call 0x33e0
0xb949: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xb94e
0xb94e: mov rdi,qword ptr [rip+0x21496b]
0xb955: mov rdx,rax
0xb958: mov rcx,rbx
0xb95b: mov esi,0x1
0xb960: xor eax,eax
0xb962: call 0x3800
0xb962: jump address is 0x3800
0x3800: jmp qword ptr [rip+0x21c77a]
Execute the function: __fprintf_chk

0x3800: the return address is 0xb967
0xb967: mov edi,r12d
0xb96a: call 0x37e0
0xb96a: jump address is 0x37e0
0x37e0: jmp qword ptr [rip+0x21c78a]
Execute the function: exit

0x3b4c: jmp rax
0x3b4c: jump address is 0x501d
0x501d: xor edi,edi
0x501f: call 0xb910
0x501f: jump address is 0xb910
0xb910: push r13
0xb912: push r12
0xb914: mov edx,0x5
0xb919: push rbp
0xb91a: push rbx
0xb91b: mov r12d,edi
0xb91e: sub rsp,0x88
0xb925: mov rbx,qword ptr [rip+0x215ad4]
0xb92c: mov rax,qword ptr fs:0x28
0xb935: mov qword ptr [rsp+0x78],rax
0xb93a: xor eax,eax
0xb93c: test edi,edi
0xb93e: je 0xb96f
0xb93e: jump address is 0xb96f
0xb940: lea rsi,[rip+0xc569]
0xb947: xor edi,edi
0xb949: call 0x33e0
0xb949: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xb94e
0xb94e: mov rdi,qword ptr [rip+0x21496b]
0xb955: mov rdx,rax
0xb958: mov rcx,rbx
0xb95b: mov esi,0x1
0xb960: xor eax,eax
0xb962: call 0x3800
0xb962: jump address is 0x3800
0x3800: jmp qword ptr [rip+0x21c77a]
Execute the function: __fprintf_chk

0x3800: the return address is 0xb967
0xb967: mov edi,r12d
0xb96a: call 0x37e0
0xb96a: jump address is 0x37e0
0x37e0: jmp qword ptr [rip+0x21c78a]
Execute the function: exit

0xb96f: lea rsi,[rip+0xc562]
0xb976: xor edi,edi
0xb978: lea rbp,[rip+0xc062]
0xb97f: call 0x33e0
0xb97f: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xb984
0xb984: mov rdx,rbx
0xb987: mov rsi,rax
0xb98a: mov edi,0x1
0xb98f: xor eax,eax
0xb991: call 0x3710
0xb991: jump address is 0x3710
0x3710: jmp qword ptr [rip+0x21c7f2]
Execute the function: __printf_chk

0x3710: the return address is 0xb996
0xb996: mov rbx,qword ptr [rip+0x2148eb]
0xb99d: lea rsi,[rip+0xc55c]
0xb9a4: mov edx,0x5
0xb9a9: xor edi,edi
0xb9ab: call 0x33e0
0xb9ab: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xb9b0
0xb9b0: mov rsi,rbx
0xb9b3: mov rdi,rax
0xb9b6: call 0x3570
0xb9b6: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xb9bb
0xb9bb: mov rbx,qword ptr [rip+0x2148c6]
0xb9c2: lea rsi,[rip+0xc5c7]
0xb9c9: mov edx,0x5
0xb9ce: xor edi,edi
0xb9d0: call 0x33e0
0xb9d0: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xb9d5
0xb9d5: mov rsi,rbx
0xb9d8: mov rdi,rax
0xb9db: call 0x3570
0xb9db: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xb9e0
0xb9e0: mov rbx,qword ptr [rip+0x2148a1]
0xb9e7: lea rsi,[rip+0xc5f2]
0xb9ee: mov edx,0x5
0xb9f3: xor edi,edi
0xb9f5: call 0x33e0
0xb9f5: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xb9fa
0xb9fa: mov rsi,rbx
0xb9fd: mov rdi,rax
0xba00: call 0x3570
0xba00: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xba05
0xba05: mov rbx,qword ptr [rip+0x21487c]
0xba0c: lea rsi,[rip+0xc6dd]
0xba13: mov edx,0x5
0xba18: xor edi,edi
0xba1a: call 0x33e0
0xba1a: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xba1f
0xba1f: mov rsi,rbx
0xba22: mov rdi,rax
0xba25: call 0x3570
0xba25: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xba2a
0xba2a: mov rbx,qword ptr [rip+0x214857]
0xba31: lea rsi,[rip+0xc758]
0xba38: mov edx,0x5
0xba3d: xor edi,edi
0xba3f: call 0x33e0
0xba3f: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xba44
0xba44: mov rsi,rbx
0xba47: mov rdi,rax
0xba4a: call 0x3570
0xba4a: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xba4f
0xba4f: mov rbx,qword ptr [rip+0x214832]
0xba56: lea rsi,[rip+0xc8a3]
0xba5d: mov edx,0x5
0xba62: xor edi,edi
0xba64: call 0x33e0
0xba64: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xba69
0xba69: mov rsi,rbx
0xba6c: mov rdi,rax
0xba6f: call 0x3570
0xba6f: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xba74
0xba74: mov rbx,qword ptr [rip+0x21480d]
0xba7b: lea rsi,[rip+0xc9ee]
0xba82: mov edx,0x5
0xba87: xor edi,edi
0xba89: call 0x33e0
0xba89: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xba8e
0xba8e: mov rsi,rbx
0xba91: mov rdi,rax
0xba94: call 0x3570
0xba94: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xba99
0xba99: mov rbx,qword ptr [rip+0x2147e8]
0xbaa0: lea rsi,[rip+0xcb71]
0xbaa7: mov edx,0x5
0xbaac: xor edi,edi
0xbaae: call 0x33e0
0xbaae: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbab3
0xbab3: mov rsi,rbx
0xbab6: mov rdi,rax
0xbab9: call 0x3570
0xbab9: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbabe
0xbabe: mov rbx,qword ptr [rip+0x2147c3]
0xbac5: lea rsi,[rip+0xcb8c]
0xbacc: mov edx,0x5
0xbad1: xor edi,edi
0xbad3: call 0x33e0
0xbad3: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbad8
0xbad8: mov rsi,rbx
0xbadb: mov rdi,rax
0xbade: call 0x3570
0xbade: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbae3
0xbae3: mov rbx,qword ptr [rip+0x21479e]
0xbaea: lea rsi,[rip+0xcc5f]
0xbaf1: mov edx,0x5
0xbaf6: xor edi,edi
0xbaf8: call 0x33e0
0xbaf8: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbafd
0xbafd: mov rsi,rbx
0xbb00: mov rdi,rax
0xbb03: call 0x3570
0xbb03: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbb08
0xbb08: mov rbx,qword ptr [rip+0x214779]
0xbb0f: lea rsi,[rip+0xcc8a]
0xbb16: mov edx,0x5
0xbb1b: xor edi,edi
0xbb1d: call 0x33e0
0xbb1d: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbb22
0xbb22: mov rsi,rbx
0xbb25: mov rdi,rax
0xbb28: call 0x3570
0xbb28: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbb2d
0xbb2d: mov rbx,qword ptr [rip+0x214754]
0xbb34: lea rsi,[rip+0xccfd]
0xbb3b: mov edx,0x5
0xbb40: xor edi,edi
0xbb42: call 0x33e0
0xbb42: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbb47
0xbb47: mov rsi,rbx
0xbb4a: mov rdi,rax
0xbb4d: call 0x3570
0xbb4d: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbb52
0xbb52: mov rbx,qword ptr [rip+0x21472f]
0xbb59: lea rsi,[rip+0xce80]
0xbb60: mov edx,0x5
0xbb65: xor edi,edi
0xbb67: call 0x33e0
0xbb67: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbb6c
0xbb6c: mov rsi,rbx
0xbb6f: mov rdi,rax
0xbb72: call 0x3570
0xbb72: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbb77
0xbb77: mov rbx,qword ptr [rip+0x21470a]
0xbb7e: lea rsi,[rip+0xcef3]
0xbb85: mov edx,0x5
0xbb8a: xor edi,edi
0xbb8c: call 0x33e0
0xbb8c: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbb91
0xbb91: mov rsi,rbx
0xbb94: mov rdi,rax
0xbb97: call 0x3570
0xbb97: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbb9c
0xbb9c: mov rbx,qword ptr [rip+0x2146e5]
0xbba3: lea rsi,[rip+0xd036]
0xbbaa: mov edx,0x5
0xbbaf: xor edi,edi
0xbbb1: call 0x33e0
0xbbb1: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbbb6
0xbbb6: mov rsi,rbx
0xbbb9: mov rdi,rax
0xbbbc: call 0x3570
0xbbbc: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbbc1
0xbbc1: mov rbx,qword ptr [rip+0x2146c0]
0xbbc8: lea rsi,[rip+0xd0a9]
0xbbcf: mov edx,0x5
0xbbd4: xor edi,edi
0xbbd6: call 0x33e0
0xbbd6: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbbdb
0xbbdb: mov rsi,rbx
0xbbde: mov rdi,rax
0xbbe1: call 0x3570
0xbbe1: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbbe6
0xbbe6: mov rbx,qword ptr [rip+0x21469b]
0xbbed: lea rsi,[rip+0xd1ec]
0xbbf4: mov edx,0x5
0xbbf9: xor edi,edi
0xbbfb: call 0x33e0
0xbbfb: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbc00
0xbc00: mov rsi,rbx
0xbc03: mov rdi,rax
0xbc06: call 0x3570
0xbc06: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbc0b
0xbc0b: mov rbx,qword ptr [rip+0x214676]
0xbc12: lea rsi,[rip+0xd2f7]
0xbc19: mov edx,0x5
0xbc1e: xor edi,edi
0xbc20: call 0x33e0
0xbc20: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbc25
0xbc25: mov rsi,rbx
0xbc28: mov rdi,rax
0xbc2b: call 0x3570
0xbc2b: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbc30
0xbc30: mov rbx,qword ptr [rip+0x214651]
0xbc37: lea rsi,[rip+0xd522]
0xbc3e: mov edx,0x5
0xbc43: xor edi,edi
0xbc45: call 0x33e0
0xbc45: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbc4a
0xbc4a: mov rsi,rbx
0xbc4d: mov rdi,rax
0xbc50: call 0x3570
0xbc50: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbc55
0xbc55: mov rbx,qword ptr [rip+0x21462c]
0xbc5c: lea rsi,[rip+0xd5c5]
0xbc63: mov edx,0x5
0xbc68: xor edi,edi
0xbc6a: call 0x33e0
0xbc6a: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbc6f
0xbc6f: mov rsi,rbx
0xbc72: mov rdi,rax
0xbc75: call 0x3570
0xbc75: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbc7a
0xbc7a: mov rbx,qword ptr [rip+0x214607]
0xbc81: lea rsi,[rip+0xd7a8]
0xbc88: xor edi,edi
0xbc8a: mov edx,0x5
0xbc8f: call 0x33e0
0xbc8f: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbc94
0xbc94: mov rsi,rbx
0xbc97: mov rdi,rax
0xbc9a: call 0x3570
0xbc9a: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbc9f
0xbc9f: mov rbx,qword ptr [rip+0x2145e2]
0xbca6: lea rsi,[rip+0xd7d3]
0xbcad: mov edx,0x5
0xbcb2: xor edi,edi
0xbcb4: call 0x33e0
0xbcb4: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbcb9
0xbcb9: mov rsi,rbx
0xbcbc: mov rdi,rax
0xbcbf: call 0x3570
0xbcbf: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbcc4
0xbcc4: mov rbx,qword ptr [rip+0x2145bd]
0xbccb: lea rsi,[rip+0xd83e]
0xbcd2: mov edx,0x5
0xbcd7: xor edi,edi
0xbcd9: call 0x33e0
0xbcd9: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbcde
0xbcde: mov rsi,rbx
0xbce1: mov rdi,rax
0xbce4: call 0x3570
0xbce4: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbce9
0xbce9: mov rbx,qword ptr [rip+0x214598]
0xbcf0: lea rsi,[rip+0xd991]
0xbcf7: mov edx,0x5
0xbcfc: xor edi,edi
0xbcfe: call 0x33e0
0xbcfe: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbd03
0xbd03: mov rsi,rbx
0xbd06: mov rdi,rax
0xbd09: call 0x3570
0xbd09: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbd0e
0xbd0e: mov rbx,qword ptr [rip+0x214573]
0xbd15: lea rsi,[rip+0xdadc]
0xbd1c: mov edx,0x5
0xbd21: xor edi,edi
0xbd23: call 0x33e0
0xbd23: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbd28
0xbd28: mov rsi,rbx
0xbd2b: mov rdi,rax
0xbd2e: call 0x3570
0xbd2e: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbd33
0xbd33: mov rbx,qword ptr [rip+0x21454e]
0xbd3a: lea rsi,[rip+0xdae7]
0xbd41: mov edx,0x5
0xbd46: xor edi,edi
0xbd48: call 0x33e0
0xbd48: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbd4d
0xbd4d: mov rsi,rbx
0xbd50: mov rdi,rax
0xbd53: call 0x3570
0xbd53: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbd58
0xbd58: mov rbx,qword ptr [rip+0x214529]
0xbd5f: lea rsi,[rip+0xdafa]
0xbd66: mov edx,0x5
0xbd6b: xor edi,edi
0xbd6d: call 0x33e0
0xbd6d: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbd72
0xbd72: mov rsi,rbx
0xbd75: mov rdi,rax
0xbd78: call 0x3570
0xbd78: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbd7d
0xbd7d: mov rbx,qword ptr [rip+0x214504]
0xbd84: lea rsi,[rip+0xdbad]
0xbd8b: mov edx,0x5
0xbd90: xor edi,edi
0xbd92: call 0x33e0
0xbd92: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbd97
0xbd97: mov rsi,rbx
0xbd9a: mov rdi,rax
0xbd9d: call 0x3570
0xbd9d: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbda2
0xbda2: mov rbx,qword ptr [rip+0x2144df]
0xbda9: lea rsi,[rip+0xdd00]
0xbdb0: mov edx,0x5
0xbdb5: xor edi,edi
0xbdb7: call 0x33e0
0xbdb7: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbdbc
0xbdbc: mov rsi,rbx
0xbdbf: mov rdi,rax
0xbdc2: call 0x3570
0xbdc2: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbdc7
0xbdc7: mov rbx,qword ptr [rip+0x2144ba]
0xbdce: lea rsi,[rip+0xddfb]
0xbdd5: xor edi,edi
0xbdd7: mov edx,0x5
0xbddc: call 0x33e0
0xbddc: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbde1
0xbde1: mov rsi,rbx
0xbde4: mov rdi,rax
0xbde7: call 0x3570
0xbde7: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbdec
0xbdec: mov eax,dword ptr [rip+0x2143ee]
0xbdf2: cmp eax,0x1
0xbdf5: je 0xbe0c
0xbdf5: jump address is 0xbe0c
0xbdf7: cmp eax,0x2
0xbdfa: lea rbp,[rip+0xbb5c]
0xbe01: lea rax,[rip+0xbb56]
0xbe08: cmove rbp,rax
0xbe0c: lea rax,[rip+0xbb4f]
0xbe13: lea rcx,[rip+0xbb87]
0xbe1a: lea rsi,[rip+0xbfa3]
0xbe21: mov qword ptr [rsp+0x60],0x0
0xbe2a: mov qword ptr [rsp+0x68],0x0
0xbe33: mov rbx,rsp
0xbe36: mov qword ptr [rsp+0x8],rax
0xbe3b: lea rax,[rip+0xbb98]
0xbe42: mov qword ptr [rsp+0x30],rcx
0xbe47: lea rcx,[rip+0xbb5d]
0xbe4e: mov qword ptr [rsp+0x0],rsi
0xbe52: mov qword ptr [rsp+0x10],rax
0xbe57: lea rax,[rip+0xbb14]
0xbe5e: mov qword ptr [rsp+0x40],rcx
0xbe63: lea rcx,[rip+0xbb4b]
0xbe6a: mov qword ptr [rsp+0x18],rax
0xbe6f: lea rax,[rip+0xbb12]
0xbe76: mov qword ptr [rsp+0x50],rcx
0xbe7b: mov qword ptr [rsp+0x20],rax
0xbe80: lea rax,[rip+0xbb0b]
0xbe87: mov qword ptr [rsp+0x28],rax
0xbe8c: mov qword ptr [rsp+0x38],rax
0xbe91: mov qword ptr [rsp+0x48],rax
0xbe96: mov qword ptr [rsp+0x58],rax
0xbe9b: jmp 0xbeac
0xbe9b: jump address is 0xbeac
0xbeac: mov rdi,rbp
0xbeaf: call 0x3590
0xbeaf: jump address is 0x3590
0x3590: jmp qword ptr [rip+0x21c8b2]
Execute the function: strcmp

0x3590: the return address is 0xbeb4
0xbeb4: test eax,eax
0xbeb6: jne 0xbea0
0xbeb6: jump address is 0xbea0
0xbeb8: mov rbx,qword ptr [rbx+0x8]
0xbebc: xor edi,edi
0xbebe: mov edx,0x5
0xbec3: lea rsi,[rip+0xbaf5]
0xbeca: test rbx,rbx
0xbecd: je 0xbf90
0xbecd: jump address is 0xbf90
0xbed3: call 0x33e0
0xbed3: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbed8
0xbed8: lea rcx,[rip+0xdd89]
0xbedf: lea rdx,[rip+0xbaf0]
0xbee6: mov rsi,rax
0xbee9: mov edi,0x1
0xbeee: xor eax,eax
0xbef0: call 0x3710
0xbef0: jump address is 0x3710
0x3710: jmp qword ptr [rip+0x21c7f2]
Execute the function: __printf_chk

0x3710: the return address is 0xbef5
0xbef5: xor esi,esi
0xbef7: mov edi,0x5
0xbefc: call 0x3700
0xbefc: jump address is 0x3700
0x3700: jmp qword ptr [rip+0x21c7fa]
Execute the function: setlocale

0x3700: the return address is 0xbf01
0xbf01: test rax,rax
0xbf04: je 0xbf22
0xbf04: jump address is 0xbf22
0xbf06: lea rsi,[rip+0xbad7]
0xbf0d: mov edx,0x3
0xbf12: mov rdi,rax
0xbf15: call 0x32b0
0xbf15: jump address is 0x32b0
0x32b0: jmp qword ptr [rip+0x21ca22]
Execute the function: strncmp

0x32b0: the return address is 0xbf1a
0xbf1a: test eax,eax
0xbf1c: jne 0xc019
0xbf1c: jump address is 0xc019
Block exists: lea rsi,[rip+0xbabf] at address 0xbf22 is visited for 1 times

0xc019: mov r13,qword ptr [rip+0x214268]
0xc020: lea rsi,[rip+0xdc69]
0xc027: xor edi,edi
0xc029: mov edx,0x5
0xc02e: call 0x33e0
0xc02e: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xc033
0xc033: mov rsi,r13
0xc036: mov rdi,rax
0xc039: call 0x3570
0xc039: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xc03e
0xc03e: jmp 0xbf22
0xc03e: jump address is 0xbf22
Block exists: lea rsi,[rip+0xbabf] at address 0xbf22 is visited for 1 times

0xbf22: lea rsi,[rip+0xbabf]
0xbf29: xor edi,edi
0xbf2b: mov edx,0x5
0xbf30: call 0x33e0
0xbf30: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbf35
0xbf35: lea rdx,[rip+0xdd2c]
0xbf3c: mov rcx,rbp
0xbf3f: mov rsi,rax
0xbf42: mov edi,0x1
0xbf47: xor eax,eax
0xbf49: call 0x3710
0xbf49: jump address is 0x3710
0x3710: jmp qword ptr [rip+0x21c7f2]
Execute the function: __printf_chk

0x3710: the return address is 0xbf4e
0xbf4e: cmp rbp,rbx
0xbf51: lea rcx,[rip+0xba24]
0xbf58: lea rbp,[rip+0xb954]
0xbf5f: cmove rbp,rcx
0xbf63: lea rsi,[rip+0xdd6e]
0xbf6a: xor edi,edi
0xbf6c: mov edx,0x5
0xbf71: call 0x33e0
0xbf71: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbf76
0xbf76: mov rcx,rbp
0xbf79: mov rsi,rax
0xbf7c: mov rdx,rbx
0xbf7f: mov edi,0x1
0xbf84: xor eax,eax
0xbf86: call 0x3710
0xbf86: jump address is 0x3710
0x3710: jmp qword ptr [rip+0x21c7f2]
Execute the function: __printf_chk

0x3710: the return address is 0xbf8b
0xbf8b: jmp 0xb967
0xbf8b: jump address is 0xb967
Block exists: mov edi,r12d at address 0xb967 is visited for 2 times

0xbea0: add rbx,0x10
0xbea4: mov rsi,qword ptr [rbx]
0xbea7: test rsi,rsi
0xbeaa: je 0xbeb8
0xbeaa: jump address is 0xbeb8
0xbeac: mov rdi,rbp
0xbeaf: call 0x3590
0xbeaf: jump address is 0x3590
0x3590: jmp qword ptr [rip+0x21c8b2]
Execute the function: strcmp

0x3590: the return address is 0xbeb4
0xbeb4: test eax,eax
0xbeb6: jne 0xbea0
0xbeb6: jump address is 0xbea0
0xbeb8: mov rbx,qword ptr [rbx+0x8]
0xbebc: xor edi,edi
0xbebe: mov edx,0x5
0xbec3: lea rsi,[rip+0xbaf5]
0xbeca: test rbx,rbx
0xbecd: je 0xbf90
0xbecd: jump address is 0xbf90
0xbed3: call 0x33e0
0xbed3: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbed8
0xbed8: lea rcx,[rip+0xdd89]
0xbedf: lea rdx,[rip+0xbaf0]
0xbee6: mov rsi,rax
0xbee9: mov edi,0x1
0xbeee: xor eax,eax
0xbef0: call 0x3710
0xbef0: jump address is 0x3710
0x3710: jmp qword ptr [rip+0x21c7f2]
Execute the function: __printf_chk

0x3710: the return address is 0xbef5
0xbef5: xor esi,esi
0xbef7: mov edi,0x5
0xbefc: call 0x3700
0xbefc: jump address is 0x3700
0x3700: jmp qword ptr [rip+0x21c7fa]
Execute the function: setlocale

0x3700: the return address is 0xbf01
0xbf01: test rax,rax
0xbf04: je 0xbf22
0xbf04: jump address is 0xbf22
0xbf06: lea rsi,[rip+0xbad7]
0xbf0d: mov edx,0x3
0xbf12: mov rdi,rax
0xbf15: call 0x32b0
0xbf15: jump address is 0x32b0
0x32b0: jmp qword ptr [rip+0x21ca22]
Execute the function: strncmp

0x32b0: the return address is 0xbf1a
0xbf1a: test eax,eax
0xbf1c: jne 0xc019
0xbf1c: jump address is 0xc019
Block exists: lea rsi,[rip+0xbabf] at address 0xbf22 is visited for 2 times

0xc019: mov r13,qword ptr [rip+0x214268]
0xc020: lea rsi,[rip+0xdc69]
0xc027: xor edi,edi
0xc029: mov edx,0x5
0xc02e: call 0x33e0
0xc02e: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xc033
0xc033: mov rsi,r13
0xc036: mov rdi,rax
0xc039: call 0x3570
0xc039: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xc03e
0xc03e: jmp 0xbf22
0xc03e: jump address is 0xbf22
Block exists: lea rsi,[rip+0xbabf] at address 0xbf22 is visited for 2 times

0xbf22: lea rsi,[rip+0xbabf]
0xbf29: xor edi,edi
0xbf2b: mov edx,0x5
0xbf30: call 0x33e0
0xbf30: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbf35
0xbf35: lea rdx,[rip+0xdd2c]
0xbf3c: mov rcx,rbp
0xbf3f: mov rsi,rax
0xbf42: mov edi,0x1
0xbf47: xor eax,eax
0xbf49: call 0x3710
0xbf49: jump address is 0x3710
0x3710: jmp qword ptr [rip+0x21c7f2]
Execute the function: __printf_chk

0x3710: the return address is 0xbf4e
0xbf4e: cmp rbp,rbx
0xbf51: lea rcx,[rip+0xba24]
0xbf58: lea rbp,[rip+0xb954]
0xbf5f: cmove rbp,rcx
0xbf63: lea rsi,[rip+0xdd6e]
0xbf6a: xor edi,edi
0xbf6c: mov edx,0x5
0xbf71: call 0x33e0
0xbf71: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbf76
0xbf76: mov rcx,rbp
0xbf79: mov rsi,rax
0xbf7c: mov rdx,rbx
0xbf7f: mov edi,0x1
0xbf84: xor eax,eax
0xbf86: call 0x3710
0xbf86: jump address is 0x3710
0x3710: jmp qword ptr [rip+0x21c7f2]
Execute the function: __printf_chk

0x3710: the return address is 0xbf8b
0xbf8b: jmp 0xb967
0xbf8b: jump address is 0xb967
0xb967: mov edi,r12d
0xb96a: call 0x37e0
0xb96a: jump address is 0x37e0
0x37e0: jmp qword ptr [rip+0x21c78a]
Execute the function: exit

0xbf5f: cmove rbp,rcx
0xbf63: lea rsi,[rip+0xdd6e]
0xbf6a: xor edi,edi
0xbf6c: mov edx,0x5
0xbf71: call 0x33e0
0xbf71: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbf76
0xbf76: mov rcx,rbp
0xbf79: mov rsi,rax
0xbf7c: mov rdx,rbx
0xbf7f: mov edi,0x1
0xbf84: xor eax,eax
0xbf86: call 0x3710
0xbf86: jump address is 0x3710
0x3710: jmp qword ptr [rip+0x21c7f2]
Execute the function: __printf_chk

0x3710: the return address is 0xbf8b
0xbf8b: jmp 0xb967
0xbf8b: jump address is 0xb967
Block exists: mov edi,r12d at address 0xb967 is visited for 3 times

0xbf90: call 0x33e0
0xbf90: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbf95
0xbf95: lea rcx,[rip+0xdccc]
0xbf9c: lea rdx,[rip+0xba33]
0xbfa3: mov rsi,rax
0xbfa6: mov edi,0x1
0xbfab: xor eax,eax
0xbfad: call 0x3710
0xbfad: jump address is 0x3710
0x3710: jmp qword ptr [rip+0x21c7f2]
Execute the function: __printf_chk

0x3710: the return address is 0xbfb2
0xbfb2: xor esi,esi
0xbfb4: mov edi,0x5
0xbfb9: call 0x3700
0xbfb9: jump address is 0x3700
0x3700: jmp qword ptr [rip+0x21c7fa]
Execute the function: setlocale

0x3700: the return address is 0xbfbe
0xbfbe: test rax,rax
0xbfc1: je 0xbfdb
0xbfc1: jump address is 0xbfdb
0xbfc3: lea rsi,[rip+0xba1a]
0xbfca: mov edx,0x3
0xbfcf: mov rdi,rax
0xbfd2: call 0x32b0
0xbfd2: jump address is 0x32b0
0x32b0: jmp qword ptr [rip+0x21ca22]
Execute the function: strncmp

0x32b0: the return address is 0xbfd7
0xbfd7: test eax,eax
0xbfd9: jne 0xc016
0xbfd9: jump address is 0xc016
Block exists: lea rsi,[rip+0xba06] at address 0xbfdb is visited for 1 times

0xc016: mov rbx,rbp
0xc019: mov r13,qword ptr [rip+0x214268]
0xc020: lea rsi,[rip+0xdc69]
0xc027: xor edi,edi
0xc029: mov edx,0x5
0xc02e: call 0x33e0
0xc02e: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xc033
Block exists: mov rsi,r13 at address 0xc033 is visited for 2 times

0xbfdb: lea rsi,[rip+0xba06]
0xbfe2: mov edx,0x5
0xbfe7: xor edi,edi
0xbfe9: mov rbx,rbp
0xbfec: call 0x33e0
0xbfec: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbff1
0xbff1: lea rdx,[rip+0xdc70]
0xbff8: mov rcx,rbp
0xbffb: mov rsi,rax
0xbffe: mov edi,0x1
0xc003: xor eax,eax
0xc005: lea rbp,[rip+0xb970]
0xc00c: call 0x3710
0xc00c: jump address is 0x3710
0x3710: jmp qword ptr [rip+0x21c7f2]
Execute the function: __printf_chk

0x3710: the return address is 0xc011
0xc011: jmp 0xbf63
0xc011: jump address is 0xbf63
0xbf63: lea rsi,[rip+0xdd6e]
0xbf6a: xor edi,edi
0xbf6c: mov edx,0x5
0xbf71: call 0x33e0
0xbf71: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbf76
Block exists: mov rcx,rbp at address 0xbf76 is visited for 3 times

0xbea0: add rbx,0x10
0xbea4: mov rsi,qword ptr [rbx]
0xbea7: test rsi,rsi
0xbeaa: je 0xbeb8
0xbeaa: jump address is 0xbeb8
Block exists: mov rbx,qword ptr [rbx+0x8] at address 0xbeb8 is visited for 2 times

0xbeac: mov rdi,rbp
0xbeaf: call 0x3590
0xbeaf: jump address is 0x3590
0x3590: jmp qword ptr [rip+0x21c8b2]
Execute the function: strcmp

0x3590: the return address is 0xbeb4
0xbeb4: test eax,eax
0xbeb6: jne 0xbea0
0xbeb6: jump address is 0xbea0
Block exists: mov rbx,qword ptr [rbx+0x8] at address 0xbeb8 is visited for 2 times

0xbea0: add rbx,0x10
0xbea4: mov rsi,qword ptr [rbx]
0xbea7: test rsi,rsi
0xbeaa: je 0xbeb8
0xbeaa: jump address is 0xbeb8
Block exists: mov rbx,qword ptr [rbx+0x8] at address 0xbeb8 is visited for 2 times

Block exists: mov rdi,rbp at address 0xbeac is visited for 3 times

0xbe08: cmove rbp,rax
0xbe0c: lea rax,[rip+0xbb4f]
0xbe13: lea rcx,[rip+0xbb87]
0xbe1a: lea rsi,[rip+0xbfa3]
0xbe21: mov qword ptr [rsp+0x60],0x0
0xbe2a: mov qword ptr [rsp+0x68],0x0
0xbe33: mov rbx,rsp
0xbe36: mov qword ptr [rsp+0x8],rax
0xbe3b: lea rax,[rip+0xbb98]
0xbe42: mov qword ptr [rsp+0x30],rcx
0xbe47: lea rcx,[rip+0xbb5d]
0xbe4e: mov qword ptr [rsp+0x0],rsi
0xbe52: mov qword ptr [rsp+0x10],rax
0xbe57: lea rax,[rip+0xbb14]
0xbe5e: mov qword ptr [rsp+0x40],rcx
0xbe63: lea rcx,[rip+0xbb4b]
0xbe6a: mov qword ptr [rsp+0x18],rax
0xbe6f: lea rax,[rip+0xbb12]
0xbe76: mov qword ptr [rsp+0x50],rcx
0xbe7b: mov qword ptr [rsp+0x20],rax
0xbe80: lea rax,[rip+0xbb0b]
0xbe87: mov qword ptr [rsp+0x28],rax
0xbe8c: mov qword ptr [rsp+0x38],rax
0xbe91: mov qword ptr [rsp+0x48],rax
0xbe96: mov qword ptr [rsp+0x58],rax
0xbe9b: jmp 0xbeac
0xbe9b: jump address is 0xbeac
0xbeac: mov rdi,rbp
0xbeaf: call 0x3590
0xbeaf: jump address is 0x3590
0x3590: jmp qword ptr [rip+0x21c8b2]
Execute the function: strcmp

0x3590: the return address is 0xbeb4
Block exists: test eax,eax at address 0xbeb4 is visited for 3 times

0xbe0c: lea rax,[rip+0xbb4f]
0xbe13: lea rcx,[rip+0xbb87]
0xbe1a: lea rsi,[rip+0xbfa3]
0xbe21: mov qword ptr [rsp+0x60],0x0
0xbe2a: mov qword ptr [rsp+0x68],0x0
0xbe33: mov rbx,rsp
0xbe36: mov qword ptr [rsp+0x8],rax
0xbe3b: lea rax,[rip+0xbb98]
0xbe42: mov qword ptr [rsp+0x30],rcx
0xbe47: lea rcx,[rip+0xbb5d]
0xbe4e: mov qword ptr [rsp+0x0],rsi
0xbe52: mov qword ptr [rsp+0x10],rax
0xbe57: lea rax,[rip+0xbb14]
0xbe5e: mov qword ptr [rsp+0x40],rcx
0xbe63: lea rcx,[rip+0xbb4b]
0xbe6a: mov qword ptr [rsp+0x18],rax
0xbe6f: lea rax,[rip+0xbb12]
0xbe76: mov qword ptr [rsp+0x50],rcx
0xbe7b: mov qword ptr [rsp+0x20],rax
0xbe80: lea rax,[rip+0xbb0b]
0xbe87: mov qword ptr [rsp+0x28],rax
0xbe8c: mov qword ptr [rsp+0x38],rax
0xbe91: mov qword ptr [rsp+0x48],rax
0xbe96: mov qword ptr [rsp+0x58],rax
0xbe9b: jmp 0xbeac
0xbe9b: jump address is 0xbeac
Block exists: mov rdi,rbp at address 0xbeac is visited for 4 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3dee
0x3dee: mov eax,dword ptr [rip+0x21c3ec]
0x3df4: mov rcx,qword ptr [rip+0x21c3ed]
0x3dfb: lea rsi,[rip+0x13bdf]
0x3e02: cmp eax,0x1
0x3e05: je 0x3e1c
0x3e05: jump address is 0x3e1c
0x3e07: cmp eax,0x2
0x3e0a: lea rsi,[rip+0x13b4c]
0x3e11: lea rax,[rip+0x13b46]
0x3e18: cmove rsi,rax
0x3e1c: sub rsp,0x8
0x3e20: mov rdi,qword ptr [rip+0x21c461]
0x3e27: lea r9,[rip+0x13c93]
0x3e2e: push 0x0
0x3e30: lea r8,[rip+0x13c9a]
0x3e37: lea rdx,[rip+0x13b98]
0x3e3e: xor eax,eax
0x3e40: call 0x14430
0x3e40: jump address is 0x14430
0x14430: push rbp
0x14431: push rbx
0x14432: mov r10d,0x20
0x14438: xor r11d,r11d
0x1443b: sub rsp,0xb8
0x14442: mov rax,qword ptr fs:0x28
0x1444b: mov qword ptr [rsp+0x78],rax
0x14450: xor eax,eax
0x14452: lea rax,[rsp+0xd0]
0x1445a: mov qword ptr [rsp+0xa0],r8
0x14462: lea rbx,[rsp+0xd0]
0x1446a: lea r8,[rsp+0x20]
0x1446f: mov qword ptr [rsp+0xa8],r9
0x14477: mov dword ptr [rsp+0x8],0x20
0x1447f: mov qword ptr [rsp+0x10],rax
0x14484: lea rax,[rsp+0x80]
0x1448c: xor r9d,r9d
0x1448f: mov qword ptr [rsp+0x18],rax
0x14494: mov rbp,rax
0x14497: nop word ptr [rax+rax]
0x144a0: cmp r10d,0x2f
0x144a4: ja 0x144fc
0x144a4: jump address is 0x144fc
0x144a6: mov eax,r10d
0x144a9: mov r11d,0x1
0x144af: add r10d,0x8
0x144b3: add rax,rbp
0x144b6: mov rax,qword ptr [rax]
0x144b9: test rax,rax
0x144bc: mov qword ptr [r8+r9*8],rax
0x144c0: je 0x144cc
0x144c0: jump address is 0x144cc
0x144c2: add r9,0x1
0x144c6: cmp r9,0xa
0x144ca: jne 0x144a0
0x144ca: jump address is 0x144a0
0x144a0: cmp r10d,0x2f
0x144a4: ja 0x144fc
0x144a4: jump address is 0x144fc
0x144a6: mov eax,r10d
0x144a9: mov r11d,0x1
0x144af: add r10d,0x8
0x144b3: add rax,rbp
0x144b6: mov rax,qword ptr [rax]
0x144b9: test rax,rax
0x144bc: mov qword ptr [r8+r9*8],rax
0x144c0: je 0x144cc
0x144c0: jump address is 0x144cc
0x144c2: add r9,0x1
0x144c6: cmp r9,0xa
0x144ca: jne 0x144a0
0x144ca: jump address is 0x144a0
Block exists: test r11b,r11b at address 0x144cc is visited for 1 times

0x144a0: cmp r10d,0x2f
0x144a4: ja 0x144fc
0x144a4: jump address is 0x144fc
0x144a6: mov eax,r10d
0x144a9: mov r11d,0x1
0x144af: add r10d,0x8
0x144b3: add rax,rbp
0x144b6: mov rax,qword ptr [rax]
0x144b9: test rax,rax
0x144bc: mov qword ptr [r8+r9*8],rax
0x144c0: je 0x144cc
0x144c0: jump address is 0x144cc
Block exists: test r11b,r11b at address 0x144cc is visited for 1 times

Block exists: add r9,0x1 at address 0x144c2 is visited for 2 times

0x144fc: mov rax,rbx
0x144ff: add rbx,0x8
0x14503: jmp 0x144b6
0x14503: jump address is 0x144b6
0x144b6: mov rax,qword ptr [rax]
0x144b9: test rax,rax
0x144bc: mov qword ptr [r8+r9*8],rax
0x144c0: je 0x144cc
0x144c0: jump address is 0x144cc
0x144c2: add r9,0x1
0x144c6: cmp r9,0xa
0x144ca: jne 0x144a0
0x144ca: jump address is 0x144a0
Block exists: test r11b,r11b at address 0x144cc is visited for 2 times

0x144a0: cmp r10d,0x2f
0x144a4: ja 0x144fc
0x144a4: jump address is 0x144fc
0x144a6: mov eax,r10d
0x144a9: mov r11d,0x1
0x144af: add r10d,0x8
0x144b3: add rax,rbp
0x144b6: mov rax,qword ptr [rax]
0x144b9: test rax,rax
0x144bc: mov qword ptr [r8+r9*8],rax
0x144c0: je 0x144cc
0x144c0: jump address is 0x144cc
Block exists: test r11b,r11b at address 0x144cc is visited for 2 times

Block exists: add r9,0x1 at address 0x144c2 is visited for 3 times

0x144fc: mov rax,rbx
0x144ff: add rbx,0x8
0x14503: jmp 0x144b6
0x14503: jump address is 0x144b6
0x144b6: mov rax,qword ptr [rax]
0x144b9: test rax,rax
0x144bc: mov qword ptr [r8+r9*8],rax
0x144c0: je 0x144cc
0x144c0: jump address is 0x144cc
Block exists: test r11b,r11b at address 0x144cc is visited for 2 times

Block exists: add r9,0x1 at address 0x144c2 is visited for 3 times

0x144cc: test r11b,r11b
0x144cf: jne 0x144f5
0x144cf: jump address is 0x144f5
0x144d1: call 0x13f70
0x144d1: jump address is 0x13f70
0x13f70: push r15
0x13f72: push r14
0x13f74: push r13
0x13f76: push r12
0x13f78: mov r12,r9
0x13f7b: push rbp
0x13f7c: push rbx
0x13f7d: mov rbp,rdi
0x13f80: mov rbx,r8
0x13f83: sub rsp,0x28
0x13f87: test rsi,rsi
0x13f8a: je 0x140a8
0x13f8a: jump address is 0x140a8
0x13f90: mov r8,rdx
0x13f93: lea rdx,[rip+0x684e]
0x13f9a: mov r9,rcx
0x13f9d: xor eax,eax
0x13f9f: mov rcx,rsi
0x13fa2: mov esi,0x1
0x13fa7: call 0x3800
0x13fa7: jump address is 0x3800
0x3800: jmp qword ptr [rip+0x21c77a]
Execute the function: __fprintf_chk

0x3800: the return address is 0x13fac
0x13fac: lea rsi,[rip+0x6848]
0x13fb3: xor edi,edi
0x13fb5: mov edx,0x5
0x13fba: call 0x33e0
0x13fba: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0x13fbf
0x13fbf: lea rdx,[rip+0x6b5a]
0x13fc6: mov rcx,rax
0x13fc9: mov r8d,0x7e3
0x13fcf: mov esi,0x1
0x13fd4: mov rdi,rbp
0x13fd7: xor eax,eax
0x13fd9: call 0x3800
0x13fd9: jump address is 0x3800
0x3800: jmp qword ptr [rip+0x21c77a]
Execute the function: __fprintf_chk

0x3800: the return address is 0x13fde
0x13fde: lea rsi,[rip+0x68a3]
0x13fe5: xor edi,edi
0x13fe7: mov edx,0x5
0x13fec: call 0x33e0
0x13fec: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0x13ff1
0x13ff1: mov rsi,rbp
0x13ff4: mov rdi,rax
0x13ff7: call 0x3570
0x13ff7: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0x13ffc
0x13ffc: cmp r12,0x9
0x14000: ja 0x14340
0x14000: jump address is 0x14340
0x14006: lea rdx,[rip+0x6ad7]
0x1400d: movsxd rax,dword ptr [rdx+r12*4]
0x14011: add rax,rdx
0x14014: jmp rax
trace back
0x14014: jmp rax
0x14011: add rax,rdx
0x1400d: movsxd rax,dword ptr [rdx+r12*4]
0x14006: lea rdx,[rip+0x6ad7]
0x14000: ja 0x14340
0x13ffc: cmp r12,0x9
0x14014: jump addresses resolved using jump table [0x14096, 0x14128, 0x14168, 0x141b0, 0x14200, 0x14258, 0x14288, 0x142f0, 0x14020, 0x140d0]
0x14014: jmp rax
0x14014: jump address is 0x140d0
0x140d0: mov r10,qword ptr [rbx+0x40]
0x140d4: mov r9,qword ptr [rbx+0x38]
0x140d8: lea rsi,[rip+0x6949]
0x140df: mov rax,qword ptr [rbx+0x10]
0x140e3: mov r8,qword ptr [rbx+0x8]
0x140e7: mov edx,0x5
0x140ec: mov r13,qword ptr [rbx+0x30]
0x140f0: mov r12,qword ptr [rbx+0x28]
0x140f4: mov r15,qword ptr [rbx+0x20]
0x140f8: mov r14,qword ptr [rbx+0x18]
0x140fc: mov rbx,qword ptr [rbx]
0x140ff: mov qword ptr [rsp+0x18],r10
0x14104: mov qword ptr [rsp+0x10],r9
0x14109: mov qword ptr [rsp+0x0],rax
0x1410d: mov qword ptr [rsp+0x8],r8
0x14112: xor edi,edi
0x14114: call 0x33e0
0x14114: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0x14119
0x14119: mov r10,qword ptr [rsp+0x18]
0x1411e: push r10
0x14120: jmp 0x14064
0x14120: jump address is 0x14064
0x14064: mov r9,qword ptr [rsp+0x18]
0x14069: mov rdx,rax
0x1406c: mov rcx,rbx
0x1406f: mov esi,0x1
0x14074: mov rdi,rbp
0x14077: xor eax,eax
0x14079: push r9
0x1407b: push r13
0x1407d: push r12
0x1407f: push r15
0x14081: push r14
0x14083: mov r9,qword ptr [rsp+0x30]
0x14088: mov r8,qword ptr [rsp+0x38]
0x1408d: call 0x3800
0x1408d: jump address is 0x3800
0x3800: jmp qword ptr [rip+0x21c77a]
Execute the function: __fprintf_chk

0x3800: the return address is 0x14092
0x14092: add rsp,0x30
0x14096: add rsp,0x28
0x1409a: pop rbx
0x1409b: pop rbp
0x1409c: pop r12
0x1409e: pop r13
0x140a0: pop r14
0x140a2: pop r15
0x140a4: ret
0x140a4: the return address is ich
0x14014: jmp rax
0x14014: jump address is 0x14020
0x14020: mov r9,qword ptr [rbx+0x38]
0x14024: mov rax,qword ptr [rbx+0x10]
0x14028: lea rsi,[rip+0x69c9]
0x1402f: mov r8,qword ptr [rbx+0x8]
0x14033: mov edx,0x5
0x14038: xor edi,edi
0x1403a: mov r13,qword ptr [rbx+0x30]
0x1403e: mov r12,qword ptr [rbx+0x28]
0x14042: mov qword ptr [rsp+0x10],r9
0x14047: mov r15,qword ptr [rbx+0x20]
0x1404b: mov r14,qword ptr [rbx+0x18]
0x1404f: mov qword ptr [rsp+0x0],rax
0x14053: mov qword ptr [rsp+0x8],r8
0x14058: mov rbx,qword ptr [rbx]
0x1405b: call 0x33e0
0x1405b: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0x14060
0x14060: sub rsp,0x8
0x14064: mov r9,qword ptr [rsp+0x18]
0x14069: mov rdx,rax
0x1406c: mov rcx,rbx
0x1406f: mov esi,0x1
0x14074: mov rdi,rbp
0x14077: xor eax,eax
0x14079: push r9
0x1407b: push r13
0x1407d: push r12
0x1407f: push r15
0x14081: push r14
0x14083: mov r9,qword ptr [rsp+0x30]
0x14088: mov r8,qword ptr [rsp+0x38]
0x1408d: call 0x3800
0x1408d: jump address is 0x3800
0x3800: jmp qword ptr [rip+0x21c77a]
Execute the function: __fprintf_chk

0x3800: the return address is 0x14092
Block exists: add rsp,0x30 at address 0x14092 is visited for 1 times

0x14014: jmp rax
0x14014: jump address is 0x142f0
0x142f0: mov r9,qword ptr [rbx+0x10]
0x142f4: mov r13,qword ptr [rbx+0x30]
0x142f8: lea rsi,[rip+0x66c9]
0x142ff: mov r12,qword ptr [rbx+0x28]
0x14303: mov r15,qword ptr [rbx+0x20]
0x14307: mov edx,0x5
0x1430c: mov r14,qword ptr [rbx+0x18]
0x14310: mov r8,qword ptr [rbx+0x8]
0x14314: xor edi,edi
0x14316: mov qword ptr [rsp+0x8],r9
0x1431b: mov rbx,qword ptr [rbx]
0x1431e: mov qword ptr [rsp+0x0],r8
0x14322: call 0x33e0
0x14322: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0x14327
0x14327: push r13
0x14329: push r12
0x1432b: push r15
0x1432d: push r14
0x1432f: mov r9,qword ptr [rsp+0x28]
0x14334: jmp 0x142c3
0x14334: jump address is 0x142c3
0x142c3: mov r8,qword ptr [rsp+0x20]
0x142c8: mov rcx,rbx
0x142cb: mov rdx,rax
0x142ce: mov rdi,rbp
0x142d1: mov esi,0x1
0x142d6: xor eax,eax
0x142d8: call 0x3800
0x142d8: jump address is 0x3800
0x3800: jmp qword ptr [rip+0x21c77a]
Execute the function: __fprintf_chk

0x3800: the return address is 0x142dd
0x142dd: add rsp,0x20
0x142e1: add rsp,0x28
0x142e5: pop rbx
0x142e6: pop rbp
0x142e7: pop r12
0x142e9: pop r13
0x142eb: pop r14
0x142ed: pop r15
0x142ef: ret
0x142ef: the return address is ich
0x14014: jmp rax
0x14014: jump address is 0x14288
0x14288: mov r8,qword ptr [rbx+0x8]
0x1428c: mov r12,qword ptr [rbx+0x28]
0x14290: lea rsi,[rip+0x6709]
0x14297: mov r15,qword ptr [rbx+0x20]
0x1429b: mov r14,qword ptr [rbx+0x18]
0x1429f: mov edx,0x5
0x142a4: mov r13,qword ptr [rbx+0x10]
0x142a8: xor edi,edi
0x142aa: mov rbx,qword ptr [rbx]
0x142ad: mov qword ptr [rsp+0x0],r8
0x142b1: call 0x33e0
0x142b1: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0x142b6
0x142b6: sub rsp,0x8
0x142ba: mov r9,r13
0x142bd: push r12
0x142bf: push r15
0x142c1: push r14
0x142c3: mov r8,qword ptr [rsp+0x20]
0x142c8: mov rcx,rbx
0x142cb: mov rdx,rax
0x142ce: mov rdi,rbp
0x142d1: mov esi,0x1
0x142d6: xor eax,eax
0x142d8: call 0x3800
0x142d8: jump address is 0x3800
0x3800: jmp qword ptr [rip+0x21c77a]
Execute the function: __fprintf_chk

0x3800: the return address is 0x142dd
Block exists: add rsp,0x20 at address 0x142dd is visited for 1 times

0x14014: jmp rax
0x14014: jump address is 0x14258
0x14258: mov r15,qword ptr [rbx+0x20]
0x1425c: lea rsi,[rip+0x6715]
0x14263: mov edx,0x5
0x14268: xor edi,edi
0x1426a: mov r14,qword ptr [rbx+0x18]
0x1426e: mov r13,qword ptr [rbx+0x10]
0x14272: mov r12,qword ptr [rbx+0x8]
0x14276: mov rbx,qword ptr [rbx]
0x14279: call 0x33e0
0x14279: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0x1427e
0x1427e: push r15
0x14280: jmp 0x14226
0x14280: jump address is 0x14226
0x14226: push r14
0x14228: mov rdx,rax
0x1422b: mov r9,r13
0x1422e: mov r8,r12
0x14231: mov rcx,rbx
0x14234: mov rdi,rbp
0x14237: mov esi,0x1
0x1423c: xor eax,eax
0x1423e: call 0x3800
0x1423e: jump address is 0x3800
0x3800: jmp qword ptr [rip+0x21c77a]
Execute the function: __fprintf_chk

0x3800: the return address is 0x14243
0x14243: pop rax
0x14244: pop rdx
0x14245: add rsp,0x28
0x14249: pop rbx
0x1424a: pop rbp
0x1424b: pop r12
0x1424d: pop r13
0x1424f: pop r14
0x14251: pop r15
0x14253: ret
0x14253: the return address is ich
0x14014: jmp rax
0x14014: jump address is 0x14200
0x14200: lea rsi,[rip+0x6751]
0x14207: mov edx,0x5
0x1420c: xor edi,edi
0x1420e: mov r14,qword ptr [rbx+0x18]
0x14212: mov r13,qword ptr [rbx+0x10]
0x14216: mov r12,qword ptr [rbx+0x8]
0x1421a: mov rbx,qword ptr [rbx]
0x1421d: call 0x33e0
0x1421d: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0x14222
0x14222: sub rsp,0x8
0x14226: push r14
0x14228: mov rdx,rax
0x1422b: mov r9,r13
0x1422e: mov r8,r12
0x14231: mov rcx,rbx
0x14234: mov rdi,rbp
0x14237: mov esi,0x1
0x1423c: xor eax,eax
0x1423e: call 0x3800
0x1423e: jump address is 0x3800
0x3800: jmp qword ptr [rip+0x21c77a]
Execute the function: __fprintf_chk

0x3800: the return address is 0x14243
Block exists: pop rax at address 0x14243 is visited for 1 times

0x14014: jmp rax
0x14014: jump address is 0x141b0
0x141b0: mov r13,qword ptr [rbx+0x10]
0x141b4: mov r12,qword ptr [rbx+0x8]
0x141b8: lea rsi,[rip+0x6667]
0x141bf: mov rbx,qword ptr [rbx]
0x141c2: mov edx,0x5
0x141c7: xor edi,edi
0x141c9: call 0x33e0
0x141c9: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0x141ce
0x141ce: add rsp,0x28
0x141d2: mov r9,r13
0x141d5: mov r8,r12
0x141d8: mov rcx,rbx
0x141db: mov rdi,rbp
0x141de: mov rdx,rax
0x141e1: pop rbx
0x141e2: pop rbp
0x141e3: pop r12
0x141e5: pop r13
0x141e7: pop r14
0x141e9: pop r15
0x141eb: mov esi,0x1
0x141f0: xor eax,eax
0x141f2: jmp 0x3800
0x141f2: jump address is 0x3800
0x3800: jmp qword ptr [rip+0x21c77a]
Execute the function: __fprintf_chk

0x3800: the return address is ich
0x14014: jmp rax
0x14014: jump address is 0x14168
0x14168: mov r12,qword ptr [rbx+0x8]
0x1416c: lea rsi,[rip+0x669c]
0x14173: mov rbx,qword ptr [rbx]
0x14176: mov edx,0x5
0x1417b: xor edi,edi
0x1417d: call 0x33e0
0x1417d: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0x14182
0x14182: add rsp,0x28
0x14186: mov r8,r12
0x14189: mov rcx,rbx
0x1418c: mov rdi,rbp
0x1418f: mov rdx,rax
0x14192: mov esi,0x1
0x14197: pop rbx
0x14198: pop rbp
0x14199: pop r12
0x1419b: pop r13
0x1419d: pop r14
0x1419f: pop r15
0x141a1: xor eax,eax
0x141a3: jmp 0x3800
0x141a3: jump address is 0x3800
0x3800: jmp qword ptr [rip+0x21c77a]
Execute the function: __fprintf_chk

0x3800: the return address is ich
0x14014: jmp rax
0x14014: jump address is 0x14128
0x14128: mov rbx,qword ptr [rbx]
0x1412b: lea rsi,[rip+0x66cd]
0x14132: mov edx,0x5
0x14137: xor edi,edi
0x14139: call 0x33e0
0x14139: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0x1413e
0x1413e: add rsp,0x28
0x14142: mov rcx,rbx
0x14145: mov rdi,rbp
0x14148: pop rbx
0x14149: pop rbp
0x1414a: pop r12
0x1414c: pop r13
0x1414e: pop r14
0x14150: pop r15
0x14152: mov rdx,rax
0x14155: mov esi,0x1
0x1415a: xor eax,eax
0x1415c: jmp 0x3800
0x1415c: jump address is 0x3800
0x3800: jmp qword ptr [rip+0x21c77a]
Execute the function: __fprintf_chk

0x3800: the return address is ich
0x14014: jmp rax
0x14014: jump address is 0x14096
Block exists: add rsp,0x28 at address 0x14096 is visited for 1 times

0x14340: mov r10,qword ptr [rbx+0x40]
0x14344: mov r9,qword ptr [rbx+0x38]
0x14348: mov edx,0x5
0x1434d: mov rax,qword ptr [rbx+0x10]
0x14351: mov r8,qword ptr [rbx+0x8]
0x14355: lea rsi,[rip+0x6704]
0x1435c: mov r13,qword ptr [rbx+0x30]
0x14360: mov r12,qword ptr [rbx+0x28]
0x14364: mov r15,qword ptr [rbx+0x20]
0x14368: mov r14,qword ptr [rbx+0x18]
0x1436c: mov qword ptr [rsp+0x18],r10
0x14371: mov qword ptr [rsp+0x10],r9
0x14376: mov qword ptr [rsp+0x0],rax
0x1437a: mov qword ptr [rsp+0x8],r8
0x1437f: mov rbx,qword ptr [rbx]
0x14382: jmp 0x14112
0x14382: jump address is 0x14112
0x14112: xor edi,edi
0x14114: call 0x33e0
0x14114: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0x14119
Block exists: mov r10,qword ptr [rsp+0x18] at address 0x14119 is visited for 1 times

0x144f5: mov dword ptr [rsp+0x8],r10d
0x144fa: jmp 0x144d1
0x144fa: jump address is 0x144d1
0x144d1: call 0x13f70
0x144d1: jump address is 0x13f70
Block exists: push r15 at address 0x13f70 is visited for 1 times

0x144cc: test r11b,r11b
0x144cf: jne 0x144f5
0x144cf: jump address is 0x144f5
Block exists: mov dword ptr [rsp+0x8],r10d at address 0x144f5 is visited for 1 times

0x3e18: cmove rsi,rax
0x3e1c: sub rsp,0x8
0x3e20: mov rdi,qword ptr [rip+0x21c461]
0x3e27: lea r9,[rip+0x13c93]
0x3e2e: push 0x0
0x3e30: lea r8,[rip+0x13c9a]
0x3e37: lea rdx,[rip+0x13b98]
0x3e3e: xor eax,eax
0x3e40: call 0x14430
0x3e40: jump address is 0x14430
0x14430: push rbp
0x14431: push rbx
0x14432: mov r10d,0x20
0x14438: xor r11d,r11d
0x1443b: sub rsp,0xb8
0x14442: mov rax,qword ptr fs:0x28
0x1444b: mov qword ptr [rsp+0x78],rax
0x14450: xor eax,eax
0x14452: lea rax,[rsp+0xd0]
0x1445a: mov qword ptr [rsp+0xa0],r8
0x14462: lea rbx,[rsp+0xd0]
0x1446a: lea r8,[rsp+0x20]
0x1446f: mov qword ptr [rsp+0xa8],r9
0x14477: mov dword ptr [rsp+0x8],0x20
0x1447f: mov qword ptr [rsp+0x10],rax
0x14484: lea rax,[rsp+0x80]
0x1448c: xor r9d,r9d
0x1448f: mov qword ptr [rsp+0x18],rax
0x14494: mov rbp,rax
0x14497: nop word ptr [rax+rax]
0x144a0: cmp r10d,0x2f
0x144a4: ja 0x144fc
0x144a4: jump address is 0x144fc
0x144a6: mov eax,r10d
0x144a9: mov r11d,0x1
0x144af: add r10d,0x8
0x144b3: add rax,rbp
0x144b6: mov rax,qword ptr [rax]
0x144b9: test rax,rax
0x144bc: mov qword ptr [r8+r9*8],rax
0x144c0: je 0x144cc
0x144c0: jump address is 0x144cc
0x144c2: add r9,0x1
0x144c6: cmp r9,0xa
0x144ca: jne 0x144a0
0x144ca: jump address is 0x144a0
Block exists: test r11b,r11b at address 0x144cc is visited for 3 times

0x144a0: cmp r10d,0x2f
0x144a4: ja 0x144fc
0x144a4: jump address is 0x144fc
0x144a6: mov eax,r10d
0x144a9: mov r11d,0x1
0x144af: add r10d,0x8
0x144b3: add rax,rbp
0x144b6: mov rax,qword ptr [rax]
0x144b9: test rax,rax
0x144bc: mov qword ptr [r8+r9*8],rax
0x144c0: je 0x144cc
0x144c0: jump address is 0x144cc
Block exists: test r11b,r11b at address 0x144cc is visited for 3 times

Block exists: add r9,0x1 at address 0x144c2 is visited for 4 times

0x144fc: mov rax,rbx
0x144ff: add rbx,0x8
0x14503: jmp 0x144b6
0x14503: jump address is 0x144b6
0x144b6: mov rax,qword ptr [rax]
0x144b9: test rax,rax
0x144bc: mov qword ptr [r8+r9*8],rax
0x144c0: je 0x144cc
0x144c0: jump address is 0x144cc
Block exists: test r11b,r11b at address 0x144cc is visited for 3 times

Block exists: add r9,0x1 at address 0x144c2 is visited for 4 times

0x144cc: test r11b,r11b
0x144cf: jne 0x144f5
0x144cf: jump address is 0x144f5
0x144f5: mov dword ptr [rsp+0x8],r10d
0x144fa: jmp 0x144d1
0x144fa: jump address is 0x144d1
0x144d1: call 0x13f70
0x144d1: jump address is 0x13f70
0x13f70: push r15
0x13f72: push r14
0x13f74: push r13
0x13f76: push r12
0x13f78: mov r12,r9
0x13f7b: push rbp
0x13f7c: push rbx
0x13f7d: mov rbp,rdi
0x13f80: mov rbx,r8
0x13f83: sub rsp,0x28
0x13f87: test rsi,rsi
0x13f8a: je 0x140a8
0x13f8a: jump address is 0x140a8
0x13f90: mov r8,rdx
0x13f93: lea rdx,[rip+0x684e]
0x13f9a: mov r9,rcx
0x13f9d: xor eax,eax
0x13f9f: mov rcx,rsi
0x13fa2: mov esi,0x1
0x13fa7: call 0x3800
0x13fa7: jump address is 0x3800
0x3800: jmp qword ptr [rip+0x21c77a]
Execute the function: __fprintf_chk

0x3800: the return address is 0x13fac
Block exists: lea rsi,[rip+0x6848] at address 0x13fac is visited for 1 times

0x140a8: mov r8,rcx
0x140ab: mov rcx,rdx
0x140ae: lea rdx,[rip+0x673f]
0x140b5: mov esi,0x1
0x140ba: xor eax,eax
0x140bc: call 0x3800
0x140bc: jump address is 0x3800
0x3800: jmp qword ptr [rip+0x21c77a]
Execute the function: __fprintf_chk

0x3800: the return address is 0x140c1
0x140c1: jmp 0x13fac
0x140c1: jump address is 0x13fac
Block exists: lea rsi,[rip+0x6848] at address 0x13fac is visited for 1 times

0x3e1c: sub rsp,0x8
0x3e20: mov rdi,qword ptr [rip+0x21c461]
0x3e27: lea r9,[rip+0x13c93]
0x3e2e: push 0x0
0x3e30: lea r8,[rip+0x13c9a]
0x3e37: lea rdx,[rip+0x13b98]
0x3e3e: xor eax,eax
0x3e40: call 0x14430
0x3e40: jump address is 0x14430
Block exists: push rbp at address 0x14430 is visited for 2 times

0x50b7: mov edi,0x2
0x50bc: call 0xb910
0x50bc: jump address is 0xb910
0xb910: push r13
0xb912: push r12
0xb914: mov edx,0x5
0xb919: push rbp
0xb91a: push rbx
0xb91b: mov r12d,edi
0xb91e: sub rsp,0x88
0xb925: mov rbx,qword ptr [rip+0x215ad4]
0xb92c: mov rax,qword ptr fs:0x28
0xb935: mov qword ptr [rsp+0x78],rax
0xb93a: xor eax,eax
0xb93c: test edi,edi
0xb93e: je 0xb96f
0xb93e: jump address is 0xb96f
0xb940: lea rsi,[rip+0xc569]
0xb947: xor edi,edi
0xb949: call 0x33e0
0xb949: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xb94e
0xb94e: mov rdi,qword ptr [rip+0x21496b]
0xb955: mov rdx,rax
0xb958: mov rcx,rbx
0xb95b: mov esi,0x1
0xb960: xor eax,eax
0xb962: call 0x3800
0xb962: jump address is 0x3800
0x3800: jmp qword ptr [rip+0x21c77a]
Execute the function: __fprintf_chk

0x3800: the return address is 0xb967
Block exists: mov edi,r12d at address 0xb967 is visited for 3 times

0xb96f: lea rsi,[rip+0xc562]
0xb976: xor edi,edi
0xb978: lea rbp,[rip+0xc062]
0xb97f: call 0x33e0
0xb97f: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xb984
0xb984: mov rdx,rbx
0xb987: mov rsi,rax
0xb98a: mov edi,0x1
0xb98f: xor eax,eax
0xb991: call 0x3710
0xb991: jump address is 0x3710
0x3710: jmp qword ptr [rip+0x21c7f2]
Execute the function: __printf_chk

0x3710: the return address is 0xb996
0xb996: mov rbx,qword ptr [rip+0x2148eb]
0xb99d: lea rsi,[rip+0xc55c]
0xb9a4: mov edx,0x5
0xb9a9: xor edi,edi
0xb9ab: call 0x33e0
0xb9ab: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xb9b0
0xb9b0: mov rsi,rbx
0xb9b3: mov rdi,rax
0xb9b6: call 0x3570
0xb9b6: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xb9bb
0xb9bb: mov rbx,qword ptr [rip+0x2148c6]
0xb9c2: lea rsi,[rip+0xc5c7]
0xb9c9: mov edx,0x5
0xb9ce: xor edi,edi
0xb9d0: call 0x33e0
0xb9d0: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xb9d5
0xb9d5: mov rsi,rbx
0xb9d8: mov rdi,rax
0xb9db: call 0x3570
0xb9db: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xb9e0
0xb9e0: mov rbx,qword ptr [rip+0x2148a1]
0xb9e7: lea rsi,[rip+0xc5f2]
0xb9ee: mov edx,0x5
0xb9f3: xor edi,edi
0xb9f5: call 0x33e0
0xb9f5: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xb9fa
0xb9fa: mov rsi,rbx
0xb9fd: mov rdi,rax
0xba00: call 0x3570
0xba00: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xba05
0xba05: mov rbx,qword ptr [rip+0x21487c]
0xba0c: lea rsi,[rip+0xc6dd]
0xba13: mov edx,0x5
0xba18: xor edi,edi
0xba1a: call 0x33e0
0xba1a: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xba1f
0xba1f: mov rsi,rbx
0xba22: mov rdi,rax
0xba25: call 0x3570
0xba25: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xba2a
0xba2a: mov rbx,qword ptr [rip+0x214857]
0xba31: lea rsi,[rip+0xc758]
0xba38: mov edx,0x5
0xba3d: xor edi,edi
0xba3f: call 0x33e0
0xba3f: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xba44
0xba44: mov rsi,rbx
0xba47: mov rdi,rax
0xba4a: call 0x3570
0xba4a: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xba4f
0xba4f: mov rbx,qword ptr [rip+0x214832]
0xba56: lea rsi,[rip+0xc8a3]
0xba5d: mov edx,0x5
0xba62: xor edi,edi
0xba64: call 0x33e0
0xba64: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xba69
0xba69: mov rsi,rbx
0xba6c: mov rdi,rax
0xba6f: call 0x3570
0xba6f: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xba74
0xba74: mov rbx,qword ptr [rip+0x21480d]
0xba7b: lea rsi,[rip+0xc9ee]
0xba82: mov edx,0x5
0xba87: xor edi,edi
0xba89: call 0x33e0
0xba89: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xba8e
0xba8e: mov rsi,rbx
0xba91: mov rdi,rax
0xba94: call 0x3570
0xba94: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xba99
0xba99: mov rbx,qword ptr [rip+0x2147e8]
0xbaa0: lea rsi,[rip+0xcb71]
0xbaa7: mov edx,0x5
0xbaac: xor edi,edi
0xbaae: call 0x33e0
0xbaae: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbab3
0xbab3: mov rsi,rbx
0xbab6: mov rdi,rax
0xbab9: call 0x3570
0xbab9: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbabe
0xbabe: mov rbx,qword ptr [rip+0x2147c3]
0xbac5: lea rsi,[rip+0xcb8c]
0xbacc: mov edx,0x5
0xbad1: xor edi,edi
0xbad3: call 0x33e0
0xbad3: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbad8
0xbad8: mov rsi,rbx
0xbadb: mov rdi,rax
0xbade: call 0x3570
0xbade: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbae3
0xbae3: mov rbx,qword ptr [rip+0x21479e]
0xbaea: lea rsi,[rip+0xcc5f]
0xbaf1: mov edx,0x5
0xbaf6: xor edi,edi
0xbaf8: call 0x33e0
0xbaf8: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbafd
0xbafd: mov rsi,rbx
0xbb00: mov rdi,rax
0xbb03: call 0x3570
0xbb03: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbb08
0xbb08: mov rbx,qword ptr [rip+0x214779]
0xbb0f: lea rsi,[rip+0xcc8a]
0xbb16: mov edx,0x5
0xbb1b: xor edi,edi
0xbb1d: call 0x33e0
0xbb1d: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbb22
0xbb22: mov rsi,rbx
0xbb25: mov rdi,rax
0xbb28: call 0x3570
0xbb28: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbb2d
0xbb2d: mov rbx,qword ptr [rip+0x214754]
0xbb34: lea rsi,[rip+0xccfd]
0xbb3b: mov edx,0x5
0xbb40: xor edi,edi
0xbb42: call 0x33e0
0xbb42: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbb47
0xbb47: mov rsi,rbx
0xbb4a: mov rdi,rax
0xbb4d: call 0x3570
0xbb4d: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbb52
0xbb52: mov rbx,qword ptr [rip+0x21472f]
0xbb59: lea rsi,[rip+0xce80]
0xbb60: mov edx,0x5
0xbb65: xor edi,edi
0xbb67: call 0x33e0
0xbb67: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbb6c
0xbb6c: mov rsi,rbx
0xbb6f: mov rdi,rax
0xbb72: call 0x3570
0xbb72: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbb77
0xbb77: mov rbx,qword ptr [rip+0x21470a]
0xbb7e: lea rsi,[rip+0xcef3]
0xbb85: mov edx,0x5
0xbb8a: xor edi,edi
0xbb8c: call 0x33e0
0xbb8c: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbb91
0xbb91: mov rsi,rbx
0xbb94: mov rdi,rax
0xbb97: call 0x3570
0xbb97: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbb9c
0xbb9c: mov rbx,qword ptr [rip+0x2146e5]
0xbba3: lea rsi,[rip+0xd036]
0xbbaa: mov edx,0x5
0xbbaf: xor edi,edi
0xbbb1: call 0x33e0
0xbbb1: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbbb6
0xbbb6: mov rsi,rbx
0xbbb9: mov rdi,rax
0xbbbc: call 0x3570
0xbbbc: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbbc1
0xbbc1: mov rbx,qword ptr [rip+0x2146c0]
0xbbc8: lea rsi,[rip+0xd0a9]
0xbbcf: mov edx,0x5
0xbbd4: xor edi,edi
0xbbd6: call 0x33e0
0xbbd6: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbbdb
0xbbdb: mov rsi,rbx
0xbbde: mov rdi,rax
0xbbe1: call 0x3570
0xbbe1: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbbe6
0xbbe6: mov rbx,qword ptr [rip+0x21469b]
0xbbed: lea rsi,[rip+0xd1ec]
0xbbf4: mov edx,0x5
0xbbf9: xor edi,edi
0xbbfb: call 0x33e0
0xbbfb: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbc00
0xbc00: mov rsi,rbx
0xbc03: mov rdi,rax
0xbc06: call 0x3570
0xbc06: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbc0b
0xbc0b: mov rbx,qword ptr [rip+0x214676]
0xbc12: lea rsi,[rip+0xd2f7]
0xbc19: mov edx,0x5
0xbc1e: xor edi,edi
0xbc20: call 0x33e0
0xbc20: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbc25
0xbc25: mov rsi,rbx
0xbc28: mov rdi,rax
0xbc2b: call 0x3570
0xbc2b: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbc30
0xbc30: mov rbx,qword ptr [rip+0x214651]
0xbc37: lea rsi,[rip+0xd522]
0xbc3e: mov edx,0x5
0xbc43: xor edi,edi
0xbc45: call 0x33e0
0xbc45: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbc4a
0xbc4a: mov rsi,rbx
0xbc4d: mov rdi,rax
0xbc50: call 0x3570
0xbc50: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbc55
0xbc55: mov rbx,qword ptr [rip+0x21462c]
0xbc5c: lea rsi,[rip+0xd5c5]
0xbc63: mov edx,0x5
0xbc68: xor edi,edi
0xbc6a: call 0x33e0
0xbc6a: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbc6f
0xbc6f: mov rsi,rbx
0xbc72: mov rdi,rax
0xbc75: call 0x3570
0xbc75: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbc7a
0xbc7a: mov rbx,qword ptr [rip+0x214607]
0xbc81: lea rsi,[rip+0xd7a8]
0xbc88: xor edi,edi
0xbc8a: mov edx,0x5
0xbc8f: call 0x33e0
0xbc8f: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbc94
0xbc94: mov rsi,rbx
0xbc97: mov rdi,rax
0xbc9a: call 0x3570
0xbc9a: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbc9f
0xbc9f: mov rbx,qword ptr [rip+0x2145e2]
0xbca6: lea rsi,[rip+0xd7d3]
0xbcad: mov edx,0x5
0xbcb2: xor edi,edi
0xbcb4: call 0x33e0
0xbcb4: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbcb9
0xbcb9: mov rsi,rbx
0xbcbc: mov rdi,rax
0xbcbf: call 0x3570
0xbcbf: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbcc4
0xbcc4: mov rbx,qword ptr [rip+0x2145bd]
0xbccb: lea rsi,[rip+0xd83e]
0xbcd2: mov edx,0x5
0xbcd7: xor edi,edi
0xbcd9: call 0x33e0
0xbcd9: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbcde
0xbcde: mov rsi,rbx
0xbce1: mov rdi,rax
0xbce4: call 0x3570
0xbce4: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbce9
0xbce9: mov rbx,qword ptr [rip+0x214598]
0xbcf0: lea rsi,[rip+0xd991]
0xbcf7: mov edx,0x5
0xbcfc: xor edi,edi
0xbcfe: call 0x33e0
0xbcfe: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbd03
0xbd03: mov rsi,rbx
0xbd06: mov rdi,rax
0xbd09: call 0x3570
0xbd09: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbd0e
0xbd0e: mov rbx,qword ptr [rip+0x214573]
0xbd15: lea rsi,[rip+0xdadc]
0xbd1c: mov edx,0x5
0xbd21: xor edi,edi
0xbd23: call 0x33e0
0xbd23: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbd28
0xbd28: mov rsi,rbx
0xbd2b: mov rdi,rax
0xbd2e: call 0x3570
0xbd2e: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbd33
0xbd33: mov rbx,qword ptr [rip+0x21454e]
0xbd3a: lea rsi,[rip+0xdae7]
0xbd41: mov edx,0x5
0xbd46: xor edi,edi
0xbd48: call 0x33e0
0xbd48: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbd4d
0xbd4d: mov rsi,rbx
0xbd50: mov rdi,rax
0xbd53: call 0x3570
0xbd53: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbd58
0xbd58: mov rbx,qword ptr [rip+0x214529]
0xbd5f: lea rsi,[rip+0xdafa]
0xbd66: mov edx,0x5
0xbd6b: xor edi,edi
0xbd6d: call 0x33e0
0xbd6d: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbd72
0xbd72: mov rsi,rbx
0xbd75: mov rdi,rax
0xbd78: call 0x3570
0xbd78: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbd7d
0xbd7d: mov rbx,qword ptr [rip+0x214504]
0xbd84: lea rsi,[rip+0xdbad]
0xbd8b: mov edx,0x5
0xbd90: xor edi,edi
0xbd92: call 0x33e0
0xbd92: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbd97
0xbd97: mov rsi,rbx
0xbd9a: mov rdi,rax
0xbd9d: call 0x3570
0xbd9d: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbda2
0xbda2: mov rbx,qword ptr [rip+0x2144df]
0xbda9: lea rsi,[rip+0xdd00]
0xbdb0: mov edx,0x5
0xbdb5: xor edi,edi
0xbdb7: call 0x33e0
0xbdb7: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbdbc
0xbdbc: mov rsi,rbx
0xbdbf: mov rdi,rax
0xbdc2: call 0x3570
0xbdc2: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbdc7
0xbdc7: mov rbx,qword ptr [rip+0x2144ba]
0xbdce: lea rsi,[rip+0xddfb]
0xbdd5: xor edi,edi
0xbdd7: mov edx,0x5
0xbddc: call 0x33e0
0xbddc: jump address is 0x33e0
0x33e0: jmp qword ptr [rip+0x21c98a]
Execute the function: dcgettext

0x33e0: the return address is 0xbde1
0xbde1: mov rsi,rbx
0xbde4: mov rdi,rax
0xbde7: call 0x3570
0xbde7: jump address is 0x3570
0x3570: jmp qword ptr [rip+0x21c8c2]
Execute the function: fputs_unlocked

0x3570: the return address is 0xbdec
0xbdec: mov eax,dword ptr [rip+0x2143ee]
0xbdf2: cmp eax,0x1
0xbdf5: je 0xbe0c
0xbdf5: jump address is 0xbe0c
0xbdf7: cmp eax,0x2
0xbdfa: lea rbp,[rip+0xbb5c]
0xbe01: lea rax,[rip+0xbb56]
0xbe08: cmove rbp,rax
0xbe0c: lea rax,[rip+0xbb4f]
0xbe13: lea rcx,[rip+0xbb87]
0xbe1a: lea rsi,[rip+0xbfa3]
0xbe21: mov qword ptr [rsp+0x60],0x0
0xbe2a: mov qword ptr [rsp+0x68],0x0
0xbe33: mov rbx,rsp
0xbe36: mov qword ptr [rsp+0x8],rax
0xbe3b: lea rax,[rip+0xbb98]
0xbe42: mov qword ptr [rsp+0x30],rcx
0xbe47: lea rcx,[rip+0xbb5d]
0xbe4e: mov qword ptr [rsp+0x0],rsi
0xbe52: mov qword ptr [rsp+0x10],rax
0xbe57: lea rax,[rip+0xbb14]
0xbe5e: mov qword ptr [rsp+0x40],rcx
0xbe63: lea rcx,[rip+0xbb4b]
0xbe6a: mov qword ptr [rsp+0x18],rax
0xbe6f: lea rax,[rip+0xbb12]
0xbe76: mov qword ptr [rsp+0x50],rcx
0xbe7b: mov qword ptr [rsp+0x20],rax
0xbe80: lea rax,[rip+0xbb0b]
0xbe87: mov qword ptr [rsp+0x28],rax
0xbe8c: mov qword ptr [rsp+0x38],rax
0xbe91: mov qword ptr [rsp+0x48],rax
0xbe96: mov qword ptr [rsp+0x58],rax
0xbe9b: jmp 0xbeac
0xbe9b: jump address is 0xbeac
0xbeac: mov rdi,rbp
0xbeaf: call 0x3590
0xbeaf: jump address is 0x3590
0x3590: jmp qword ptr [rip+0x21c8b2]
Execute the function: strcmp

0x3590: the return address is 0xbeb4
Block exists: test eax,eax at address 0xbeb4 is visited for 3 times

0xbe08: cmove rbp,rax
0xbe0c: lea rax,[rip+0xbb4f]
0xbe13: lea rcx,[rip+0xbb87]
0xbe1a: lea rsi,[rip+0xbfa3]
0xbe21: mov qword ptr [rsp+0x60],0x0
0xbe2a: mov qword ptr [rsp+0x68],0x0
0xbe33: mov rbx,rsp
0xbe36: mov qword ptr [rsp+0x8],rax
0xbe3b: lea rax,[rip+0xbb98]
0xbe42: mov qword ptr [rsp+0x30],rcx
0xbe47: lea rcx,[rip+0xbb5d]
0xbe4e: mov qword ptr [rsp+0x0],rsi
0xbe52: mov qword ptr [rsp+0x10],rax
0xbe57: lea rax,[rip+0xbb14]
0xbe5e: mov qword ptr [rsp+0x40],rcx
0xbe63: lea rcx,[rip+0xbb4b]
0xbe6a: mov qword ptr [rsp+0x18],rax
0xbe6f: lea rax,[rip+0xbb12]
0xbe76: mov qword ptr [rsp+0x50],rcx
0xbe7b: mov qword ptr [rsp+0x20],rax
0xbe80: lea rax,[rip+0xbb0b]
0xbe87: mov qword ptr [rsp+0x28],rax
0xbe8c: mov qword ptr [rsp+0x38],rax
0xbe91: mov qword ptr [rsp+0x48],rax
0xbe96: mov qword ptr [rsp+0x58],rax
0xbe9b: jmp 0xbeac
0xbe9b: jump address is 0xbeac
Block exists: mov rdi,rbp at address 0xbeac is visited for 5 times

0xbe0c: lea rax,[rip+0xbb4f]
0xbe13: lea rcx,[rip+0xbb87]
0xbe1a: lea rsi,[rip+0xbfa3]
0xbe21: mov qword ptr [rsp+0x60],0x0
0xbe2a: mov qword ptr [rsp+0x68],0x0
0xbe33: mov rbx,rsp
0xbe36: mov qword ptr [rsp+0x8],rax
0xbe3b: lea rax,[rip+0xbb98]
0xbe42: mov qword ptr [rsp+0x30],rcx
0xbe47: lea rcx,[rip+0xbb5d]
0xbe4e: mov qword ptr [rsp+0x0],rsi
0xbe52: mov qword ptr [rsp+0x10],rax
0xbe57: lea rax,[rip+0xbb14]
0xbe5e: mov qword ptr [rsp+0x40],rcx
0xbe63: lea rcx,[rip+0xbb4b]
0xbe6a: mov qword ptr [rsp+0x18],rax
0xbe6f: lea rax,[rip+0xbb12]
0xbe76: mov qword ptr [rsp+0x50],rcx
0xbe7b: mov qword ptr [rsp+0x20],rax
0xbe80: lea rax,[rip+0xbb0b]
0xbe87: mov qword ptr [rsp+0x28],rax
0xbe8c: mov qword ptr [rsp+0x38],rax
0xbe91: mov qword ptr [rsp+0x48],rax
0xbe96: mov qword ptr [rsp+0x58],rax
0xbe9b: jmp 0xbeac
0xbe9b: jump address is 0xbeac
Block exists: mov rdi,rbp at address 0xbeac is visited for 5 times

0x42bb: cmp qword ptr [rip+0x21d05d],0x0
0x42c3: je 0x48eb
0x42c3: jump address is 0x48eb
0x42c9: mov rax,qword ptr [rip+0x21cfe0]
0x42d0: mov ecx,0x3
0x42d5: xor edx,edx
0x42d7: div rcx
0x42da: test rdx,rdx
0x42dd: setne dl
0x42e0: xor edi,edi
0x42e2: movzx edx,dl
0x42e5: add rax,rdx
0x42e8: mov qword ptr [rip+0x21cf11],rax
0x42ef: call 0x13610
0x42ef: jump address is 0x13610
0x13610: lea rax,[rip+0x20df09]
0x13617: test rdi,rdi
0x1361a: cmove rdi,rax
0x1361e: mov eax,dword ptr [rdi]
0x13620: ret
0x13620: the return address is 0x42f4
0x42f4: mov edx,dword ptr [rip+0x21d03e]
0x42fa: mov r13d,eax
0x42fd: cmp edx,0x4
0x4300: je 0x4746
0x4300: jump address is 0x4746
0x4306: cmp edx,0x1
0x4309: je 0x4746
0x4309: jump address is 0x4746
Block exists: xor eax,eax at address 0x4746 is visited for 1 times

0x430f: cmp qword ptr [rip+0x21cf99],0x0
0x4317: jne 0x431f
0x4317: jump address is 0x431f
0x4319: xor eax,eax
0x431b: test edx,edx
0x431d: jne 0x4337
0x431d: jump address is 0x4337
Block exists: mov eax,r13d at address 0x431f is visited for 1 times

0x4337: xor edi,edi
0x4339: mov byte ptr [rip+0x21d069],al
0x433f: and byte ptr [rip+0x21d062],0x1
0x4346: call 0x135d0
0x4346: jump address is 0x135d0
0x135d0: push r12
0x135d2: push rbp
0x135d3: push rbx
0x135d4: mov rbx,rdi
0x135d7: call 0x32a0
0x135d7: jump address is 0x32a0
0x32a0: jmp qword ptr [rip+0x21ca2a]
Execute the function: __errno_location

0x32a0: the return address is 0x135dc
0x135dc: mov r12d,dword ptr [rax]
0x135df: mov rbp,rax
0x135e2: lea rax,[rip+0x20df37]
0x135e9: test rbx,rbx
0x135ec: mov esi,0x38
0x135f1: cmove rbx,rax
0x135f5: mov rdi,rbx
0x135f8: call 0x14790
0x135f8: jump address is 0x14790
0x14790: push rbp
0x14791: push rbx
0x14792: mov rbp,rdi
0x14795: mov rdi,rsi
0x14798: mov rbx,rsi
0x1479b: sub rsp,0x8
0x1479f: call 0x14590
0x1479f: jump address is 0x14590
0x14590: push rbx
0x14591: mov rbx,rdi
0x14594: call 0x3888
0x14594: jump address is 0x3888
0x3888: jmp qword ptr [rip+0x21c750]
Execute the function: malloc

0x3888: the return address is 0x14599
0x14599: test rax,rax
0x1459c: jne 0x145a3
0x1459c: jump address is 0x145a3
0x145a3: pop rbx
0x145a4: ret
0x145a4: the return address is 0x147a4
0x147a4: add rsp,0x8
0x147a8: mov rdx,rbx
0x147ab: mov rsi,rbp
0x147ae: pop rbx
0x147af: pop rbp
0x147b0: mov rdi,rax
0x147b3: jmp 0x35f0
0x147b3: jump address is 0x35f0
0x35f0: jmp qword ptr [rip+0x21c882]
Execute the function: memcpy

0x35f0: the return address is 0x135fd
0x135fd: mov dword ptr [rbp],r12d
0x13601: pop rbx
0x13602: pop rbp
0x13603: pop r12
0x13605: ret
0x13605: the return address is vji
0x431f: mov eax,r13d
0x4322: and eax,0xfffffffd
0x4325: sub eax,0x1
0x4328: sete al
0x432b: cmp r13d,0x6
0x432f: sete dl
0x4332: or eax,edx
0x4334: movzx eax,al
0x4337: xor edi,edi
0x4339: mov byte ptr [rip+0x21d069],al
0x433f: and byte ptr [rip+0x21d062],0x1
0x4346: call 0x135d0
0x4346: jump address is 0x135d0
0x135d0: push r12
0x135d2: push rbp
0x135d3: push rbx
0x135d4: mov rbx,rdi
0x135d7: call 0x32a0
0x135d7: jump address is 0x32a0
0x32a0: jmp qword ptr [rip+0x21ca2a]
Execute the function: __errno_location

0x32a0: the return address is 0x135dc
Block exists: mov r12d,dword ptr [rax] at address 0x135dc is visited for 1 times

0x4746: xor eax,eax
0x4748: jmp 0x4337
0x4748: jump address is 0x4337
Block exists: xor edi,edi at address 0x4337 is visited for 1 times

0x48eb: lea rdi,[rip+0x131f3]
0x48f2: call 0x3250
0x48f2: jump address is 0x3250
0x3250: jmp qword ptr [rip+0x21ca52]
Execute the function: getenv

0x3250: the return address is 0x48f7
0x48f7: lea rdx,[rip+0x21ca22]
0x48fe: lea rsi,[rip+0x21ca23]
0x4905: mov r13,rax
0x4908: mov rdi,rax
0x490b: call 0xf5d0
0x490b: jump address is 0xf5d0
0xf5d0: push r13
0xf5d2: push r12
0xf5d4: mov r13,rsi
0xf5d7: push rbp
0xf5d8: push rbx
0xf5d9: mov r12,rdx
0xf5dc: mov rbx,rdi
0xf5df: sub rsp,0x18
0xf5e3: mov rax,qword ptr fs:0x28
0xf5ec: mov qword ptr [rsp+0x8],rax
0xf5f1: xor eax,eax
0xf5f3: test rdi,rdi
0xf5f6: je 0xf710
0xf5f6: jump address is 0xf710
0xf5fc: xor ebp,ebp
0xf5fe: cmp byte ptr [rbx],0x27
0xf601: jne 0xf60c
0xf601: jump address is 0xf60c
Block exists: lea rdx,[rip+0xaa85] at address 0xf60c is visited for 3 times

Block exists: add rbx,0x1 at address 0xf603 is visited for 3 times

0xf710: lea rdi,[rip+0x83d1]
0xf717: call 0x3250
0xf717: jump address is 0x3250
0x3250: jmp qword ptr [rip+0x21ca52]
Execute the function: getenv

0x3250: the return address is 0xf71c
0xf71c: test rax,rax
0xf71f: mov rbx,rax
0xf722: jne 0xf5fc
0xf722: jump address is 0xf5fc
Block exists: xor ebp,ebp at address 0xf5fc is visited for 5 times

0xf728: lea rdi,[rip+0xa93d]
0xf72f: call 0x3250
0xf72f: jump address is 0x3250
0x3250: jmp qword ptr [rip+0x21ca52]
Execute the function: getenv

0x3250: the return address is 0xf734
0xf734: test rax,rax
0xf737: mov rbx,rax
0xf73a: jne 0xf5fc
0xf73a: jump address is 0xf5fc
Block exists: xor ebp,ebp at address 0xf5fc is visited for 5 times

0xf740: lea rdi,[rip+0xa92f]
0xf747: call 0x3250
0xf747: jump address is 0x3250
0x3250: jmp qword ptr [rip+0x21ca52]
Execute the function: getenv

0x3250: the return address is 0xf74c
0xf74c: test rax,rax
0xf74f: je 0xf79a
0xf74f: jump address is 0xf79a
0xf751: mov qword ptr [r12],0x200
0xf759: xor eax,eax
0xf75b: mov dword ptr [r13],0x0
0xf763: jmp 0xf645
0xf763: jump address is 0xf645
0xf645: mov rcx,qword ptr [rsp+0x8]
0xf64a: xor rcx,qword ptr fs:0x28
0xf653: jne 0xf7b1
0xf653: jump address is 0xf7b1
Block exists: add rsp,0x18 at address 0xf659 is visited for 3 times

0xf79a: mov qword ptr [r12],0x400
0xf7a2: xor eax,eax
0xf7a4: mov dword ptr [r13],0x0
0xf7ac: jmp 0xf645
0xf7ac: jump address is 0xf645
Block exists: mov rcx,qword ptr [rsp+0x8] at address 0xf645 is visited for 4 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3c22
Block exists: mov dword ptr [rip+0x21d6c4],0x2 at address 0x3c22 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3c31
Block exists: mov byte ptr [rip+0x21d72d],r15b at address 0x3c31 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3c3d
Block exists: mov dword ptr [rip+0x21d6e9],0x1 at address 0x3c3d is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3c51
Block exists: mov dword ptr [rip+0x21d6d5],0xffffffff at address 0x3c51 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3c65
Block exists: lea rsi,[rip+0x13df7] at address 0x3c65 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3caa
Block exists: mov dword ptr [rip+0x21d67c],0x2 at address 0x3caa is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3cbe
Block exists: mov byte ptr [rip+0x21d631],r15b at address 0x3cbe is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3cca
Block exists: mov esi,0x5 at address 0x3cca is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3cdb
Block exists: xor esi,esi at address 0x3cdb is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3ce9
Block exists: mov dword ptr [rip+0x21d605],0x5 at address 0x3ce9 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3cf8
Block exists: mov rdx,qword ptr [rip+0x21c599] at address 0x3cf8 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3d2d
Block exists: mov dword ptr [rip+0x21d5c1],0x3 at address 0x3d2d is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3d3c
Block exists: mov byte ptr [rip+0x21c2dd],0x0 at address 0x3d3c is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3d48
Block exists: mov dword ptr [rip+0x21d5c2],0x3 at address 0x3d48 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3d57
Block exists: mov byte ptr [rip+0x21d5ba],r15b at address 0x3d57 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3d63
Block exists: mov dword ptr [rip+0x21d5cb],0x2 at address 0x3d63 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3d72
Block exists: mov edi,0x10 at address 0x3d72 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3dc3
Block exists: mov dword ptr [rip+0x21d523],0x1 at address 0x3dc3 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3dd2
Block exists: cmp dword ptr [rip+0x21d55f],0x0 at address 0x3dd2 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x50b7
Block exists: mov edi,0x2 at address 0x50b7 is visited for 5 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x501d
Block exists: xor edi,edi at address 0x501d is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3dee
Block exists: mov eax,dword ptr [rip+0x21c3ec] at address 0x3dee is visited for 1 times

0x50b7: mov edi,0x2
0x50bc: call 0xb910
0x50bc: jump address is 0xb910
Block exists: push r13 at address 0xb910 is visited for 3 times

0x42bb: cmp qword ptr [rip+0x21d05d],0x0
0x42c3: je 0x48eb
0x42c3: jump address is 0x48eb
Block exists: lea rdi,[rip+0x131f3] at address 0x48eb is visited for 1 times

Block exists: mov rax,qword ptr [rip+0x21cfe0] at address 0x42c9 is visited for 1 times

0xf79a: mov qword ptr [r12],0x400
0xf7a2: xor eax,eax
0xf7a4: mov dword ptr [r13],0x0
0xf7ac: jmp 0xf645
0xf7ac: jump address is 0xf645
0xf645: mov rcx,qword ptr [rsp+0x8]
0xf64a: xor rcx,qword ptr fs:0x28
0xf653: jne 0xf7b1
0xf653: jump address is 0xf7b1
Block exists: add rsp,0x18 at address 0xf659 is visited for 3 times

0xf5fc: xor ebp,ebp
0xf5fe: cmp byte ptr [rbx],0x27
0xf601: jne 0xf60c
0xf601: jump address is 0xf60c
Block exists: lea rdx,[rip+0xaa85] at address 0xf60c is visited for 3 times

Block exists: add rbx,0x1 at address 0xf603 is visited for 3 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x424e
Block exists: mov byte ptr [rip+0x21d0d9],r15b at address 0x424e is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x41cb
Block exists: mov dword ptr [rip+0x21d163],0x3 at address 0x41cb is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x41da
Block exists: mov rdi,qword ptr [rip+0x21c0b7] at address 0x41da is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x422b
Block exists: mov dword ptr [rip+0x21d0fb],0x3 at address 0x422b is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x423f
Block exists: mov dword ptr [rip+0x21d0eb],0x2 at address 0x423f is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x415f
Block exists: mov dword ptr [rip+0x21d1c7],0x4 at address 0x415f is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x4173
Block exists: mov byte ptr [rip+0x21d1b2],r15b at address 0x4173 is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x417f
Block exists: mov byte ptr [rip+0x21d1a9],r15b at address 0x417f is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x418b
Block exists: mov byte ptr [rip+0x21d146],r15b at address 0x418b is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x4197
Block exists: mov dword ptr [rip+0x21d173],0x1 at address 0x4197 is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x41a6
Block exists: mov dword ptr [rip+0x21d188],0x0 at address 0x41a6 is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3b4e
Block exists: mov byte ptr [rip+0x21d7d8],r15b at address 0x3b4e is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x41bc
Block exists: mov dword ptr [rip+0x21d172],0x4 at address 0x41bc is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3b55
Block exists: mov dword ptr [rip+0x21d7d9],0x0 at address 0x3b55 is visited for 3 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3b61
Block exists: mov byte ptr [rsp+0x10],0x1 at address 0x3b61 is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3b68
Block exists: mov byte ptr [rip+0x21d78d],r15b at address 0x3b68 is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3b71
Block exists: mov dword ptr [rip+0x21d7ad],0xb0 at address 0x3b71 is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3ba0
Block exists: mov dword ptr [rip+0x21d78e],0x0 at address 0x3ba0 is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3bb6
Block exists: cmp dword ptr [rip+0x21d77b],0x0 at address 0x3bb6 is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3bf6
Block exists: mov byte ptr [rip+0x21d6f8],r15b at address 0x3bf6 is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3c02
Block exists: mov dword ptr [rip+0x21d728],0x1 at address 0x3c02 is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3c11
Block exists: mov esi,0x7 at address 0x3c11 is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3c22
Block exists: mov dword ptr [rip+0x21d6c4],0x2 at address 0x3c22 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3c31
Block exists: mov byte ptr [rip+0x21d72d],r15b at address 0x3c31 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3c3d
Block exists: mov dword ptr [rip+0x21d6e9],0x1 at address 0x3c3d is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3c51
Block exists: mov dword ptr [rip+0x21d6d5],0xffffffff at address 0x3c51 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3c65
Block exists: lea rsi,[rip+0x13df7] at address 0x3c65 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3caa
Block exists: mov dword ptr [rip+0x21d67c],0x2 at address 0x3caa is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3cbe
Block exists: mov byte ptr [rip+0x21d631],r15b at address 0x3cbe is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3cca
Block exists: mov esi,0x5 at address 0x3cca is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3cdb
Block exists: xor esi,esi at address 0x3cdb is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3ce9
Block exists: mov dword ptr [rip+0x21d605],0x5 at address 0x3ce9 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3cf8
Block exists: mov rdx,qword ptr [rip+0x21c599] at address 0x3cf8 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3d2d
Block exists: mov dword ptr [rip+0x21d5c1],0x3 at address 0x3d2d is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3d3c
Block exists: mov byte ptr [rip+0x21c2dd],0x0 at address 0x3d3c is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3d48
Block exists: mov dword ptr [rip+0x21d5c2],0x3 at address 0x3d48 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3d57
Block exists: mov byte ptr [rip+0x21d5ba],r15b at address 0x3d57 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3d63
Block exists: mov dword ptr [rip+0x21d5cb],0x2 at address 0x3d63 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3d72
Block exists: mov edi,0x10 at address 0x3d72 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3dc3
Block exists: mov dword ptr [rip+0x21d523],0x1 at address 0x3dc3 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3dd2
Block exists: cmp dword ptr [rip+0x21d55f],0x0 at address 0x3dd2 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x50b7
Block exists: mov edi,0x2 at address 0x50b7 is visited for 5 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x501d
Block exists: xor edi,edi at address 0x501d is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3dee
Block exists: mov eax,dword ptr [rip+0x21c3ec] at address 0x3dee is visited for 1 times

0x50b7: mov edi,0x2
0x50bc: call 0xb910
0x50bc: jump address is 0xb910
Block exists: push r13 at address 0xb910 is visited for 3 times

0x42bb: cmp qword ptr [rip+0x21d05d],0x0
0x42c3: je 0x48eb
0x42c3: jump address is 0x48eb
Block exists: lea rdi,[rip+0x131f3] at address 0x48eb is visited for 1 times

Block exists: mov rax,qword ptr [rip+0x21cfe0] at address 0x42c9 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3e58
Block exists: mov r9,qword ptr [rip+0x21c391] at address 0x3e58 is visited for 3 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3e9b
Block exists: mov r9,qword ptr [rip+0x21c34e] at address 0x3e9b is visited for 3 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3ee3
Block exists: mov dword ptr [rip+0x21d43b],0x90 at address 0x3ee3 is visited for 3 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3f12
Block exists: mov byte ptr [rip+0x21d3bf],0x0 at address 0x3f12 is visited for 3 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3f1e
Block exists: mov r9,qword ptr [rip+0x21c2cb] at address 0x3f1e is visited for 3 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3f62
Block exists: mov r9,qword ptr [rip+0x21c287] at address 0x3f62 is visited for 3 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3fa5
Block exists: mov rsi,qword ptr [rip+0x21c2ec] at address 0x3fa5 is visited for 3 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x4011
Block exists: mov edi,0x10 at address 0x4011 is visited for 3 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x403c
Block exists: mov byte ptr [rip+0x21d2b1],r15b at address 0x403c is visited for 3 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x4048
Block exists: mov dword ptr [rip+0x21d2e6],0x0 at address 0x4048 is visited for 3 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x405e
Block exists: mov r9,qword ptr [rip+0x21c18b] at address 0x405e is visited for 3 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x40a1
Block exists: mov dword ptr [rip+0x21d269],0x2 at address 0x40a1 is visited for 3 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x40b0
Block exists: mov dword ptr [rip+0x21d23e],0x4 at address 0x40b0 is visited for 3 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x40bf
Block exists: mov rsi,qword ptr [rip+0x21c1d2] at address 0x40bf is visited for 3 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x411e
Block exists: mov rdi,qword ptr [rip+0x21c173] at address 0x411e is visited for 3 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x424e
Block exists: mov byte ptr [rip+0x21d0d9],r15b at address 0x424e is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x41cb
Block exists: mov dword ptr [rip+0x21d163],0x3 at address 0x41cb is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x41da
Block exists: mov rdi,qword ptr [rip+0x21c0b7] at address 0x41da is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x422b
Block exists: mov dword ptr [rip+0x21d0fb],0x3 at address 0x422b is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x423f
Block exists: mov dword ptr [rip+0x21d0eb],0x2 at address 0x423f is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x415f
Block exists: mov dword ptr [rip+0x21d1c7],0x4 at address 0x415f is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x4173
Block exists: mov byte ptr [rip+0x21d1b2],r15b at address 0x4173 is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x417f
Block exists: mov byte ptr [rip+0x21d1a9],r15b at address 0x417f is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x418b
Block exists: mov byte ptr [rip+0x21d146],r15b at address 0x418b is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x4197
Block exists: mov dword ptr [rip+0x21d173],0x1 at address 0x4197 is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x41a6
Block exists: mov dword ptr [rip+0x21d188],0x0 at address 0x41a6 is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3b4e
Block exists: mov byte ptr [rip+0x21d7d8],r15b at address 0x3b4e is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x41bc
Block exists: mov dword ptr [rip+0x21d172],0x4 at address 0x41bc is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3b55
Block exists: mov dword ptr [rip+0x21d7d9],0x0 at address 0x3b55 is visited for 3 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3b61
Block exists: mov byte ptr [rsp+0x10],0x1 at address 0x3b61 is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3b68
Block exists: mov byte ptr [rip+0x21d78d],r15b at address 0x3b68 is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3b71
Block exists: mov dword ptr [rip+0x21d7ad],0xb0 at address 0x3b71 is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3ba0
Block exists: mov dword ptr [rip+0x21d78e],0x0 at address 0x3ba0 is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3bb6
Block exists: cmp dword ptr [rip+0x21d77b],0x0 at address 0x3bb6 is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3bf6
Block exists: mov byte ptr [rip+0x21d6f8],r15b at address 0x3bf6 is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3c02
Block exists: mov dword ptr [rip+0x21d728],0x1 at address 0x3c02 is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3c11
Block exists: mov esi,0x7 at address 0x3c11 is visited for 2 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3c22
Block exists: mov dword ptr [rip+0x21d6c4],0x2 at address 0x3c22 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3c31
Block exists: mov byte ptr [rip+0x21d72d],r15b at address 0x3c31 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3c3d
Block exists: mov dword ptr [rip+0x21d6e9],0x1 at address 0x3c3d is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3c51
Block exists: mov dword ptr [rip+0x21d6d5],0xffffffff at address 0x3c51 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3c65
Block exists: lea rsi,[rip+0x13df7] at address 0x3c65 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3caa
Block exists: mov dword ptr [rip+0x21d67c],0x2 at address 0x3caa is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3cbe
Block exists: mov byte ptr [rip+0x21d631],r15b at address 0x3cbe is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3cca
Block exists: mov esi,0x5 at address 0x3cca is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3cdb
Block exists: xor esi,esi at address 0x3cdb is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3ce9
Block exists: mov dword ptr [rip+0x21d605],0x5 at address 0x3ce9 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3cf8
Block exists: mov rdx,qword ptr [rip+0x21c599] at address 0x3cf8 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3d2d
Block exists: mov dword ptr [rip+0x21d5c1],0x3 at address 0x3d2d is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3d3c
Block exists: mov byte ptr [rip+0x21c2dd],0x0 at address 0x3d3c is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3d48
Block exists: mov dword ptr [rip+0x21d5c2],0x3 at address 0x3d48 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3d57
Block exists: mov byte ptr [rip+0x21d5ba],r15b at address 0x3d57 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3d63
Block exists: mov dword ptr [rip+0x21d5cb],0x2 at address 0x3d63 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3d72
Block exists: mov edi,0x10 at address 0x3d72 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3dc3
Block exists: mov dword ptr [rip+0x21d523],0x1 at address 0x3dc3 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3dd2
Block exists: cmp dword ptr [rip+0x21d55f],0x0 at address 0x3dd2 is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x50b7
Block exists: mov edi,0x2 at address 0x50b7 is visited for 5 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x501d
Block exists: xor edi,edi at address 0x501d is visited for 1 times

0x3b4c: jmp rax
0x3b4c: jump address is 0x3dee
Block exists: mov eax,dword ptr [rip+0x21c3ec] at address 0x3dee is visited for 1 times

0x50b7: mov edi,0x2
0x50bc: call 0xb910
0x50bc: jump address is 0xb910
Block exists: push r13 at address 0xb910 is visited for 3 times

0x42bb: cmp qword ptr [rip+0x21d05d],0x0
0x42c3: je 0x48eb
0x42c3: jump address is 0x48eb
Block exists: lea rdi,[rip+0x131f3] at address 0x48eb is visited for 1 times

Block exists: mov rax,qword ptr [rip+0x21cfe0] at address 0x42c9 is visited for 1 times

0x3aa2: lea rdi,[rip+0x13f94]
0x3aa9: call 0x3250
0x3aa9: jump address is 0x3250
0x3250: jmp qword ptr [rip+0x21ca52]
Execute the function: getenv

0x3250: the return address is 0x3aae
Block exists: test rax,rax at address 0x3aae is visited for 1 times

0x474d: mov rdi,rax
0x4750: call 0x56d0
0x4750: jump address is 0x56d0
0x56d0: sub rsp,0x18
0x56d4: lea r8,[rip+0x121d8]
0x56db: xor edx,edx
0x56dd: xor esi,esi
0x56df: mov rcx,rsp
0x56e2: mov rax,qword ptr fs:0x28
0x56eb: mov qword ptr [rsp+0x8],rax
0x56f0: xor eax,eax
0x56f2: call 0x14f30
0x56f2: jump address is 0x14f30
0x14f30: push r15
0x14f32: push r14
0x14f34: push r13
0x14f36: push r12
0x14f38: push rbp
0x14f39: push rbx
0x14f3a: sub rsp,0x28
0x14f3e: mov rax,qword ptr fs:0x28
0x14f47: mov qword ptr [rsp+0x18],rax
0x14f4c: xor eax,eax
0x14f4e: cmp edx,0x24
0x14f51: ja 0x152b5
0x14f51: jump address is 0x152b5
0x14f57: lea rax,[rsp+0x10]
0x14f5c: mov r15,rsi
0x14f5f: test rsi,rsi
0x14f62: mov rbp,rdi
0x14f65: mov dword ptr [rsp+0x8],edx
0x14f69: mov r14,rcx
0x14f6c: mov r13,r8
0x14f6f: cmove r15,rax
0x14f73: call 0x32a0
0x14f73: jump address is 0x32a0
0x32a0: jmp qword ptr [rip+0x21ca2a]
Execute the function: __errno_location

0x32a0: the return address is 0x14f78
Block exists: mov dword ptr [rax],0x0 at address 0x14f78 is visited for 2 times

0x14f6f: cmove r15,rax
0x14f73: call 0x32a0
0x14f73: jump address is 0x32a0
0x32a0: jmp qword ptr [rip+0x21ca2a]
Execute the function: __errno_location

0x32a0: the return address is 0x14f78
Block exists: mov dword ptr [rax],0x0 at address 0x14f78 is visited for 2 times

0x3a73: lea r12,[rsp+0x30]
0x3a78: xor eax,eax
0x3a7a: mov esi,0x5413
0x3a7f: mov edi,0x1
0x3a84: mov rdx,r12
0x3a87: call 0x3510
0x3a87: jump address is 0x3510
0x3510: jmp qword ptr [rip+0x21c8f2]
Execute the function: ioctl

0x3510: the return address is 0x3a8c
Block exists: cmp eax,0xffffffff at address 0x3a8c is visited for 1 times

0x4d2f: mov esi,0x3
0x4d34: xor edi,edi
0x4d36: mov dword ptr [rip+0x21c5f8],0x2
0x4d40: call 0x13630
0x4d40: jump address is 0x13630
Execute the function: set_quoting_style

0x4d40: the return address is 0x4d45
0x4d45: mov byte ptr [rip+0x21c58c],0x1
0x4d4c: jmp 0x3988
0x4d4c: jump address is 0x3988
0x3988: lea rdi,[rip+0x14098]
0x398f: mov dword ptr [rip+0x21d99b],0x0
0x3999: mov dword ptr [rip+0x21d98d],0x0
0x39a3: mov byte ptr [rip+0x21d985],0x0
0x39aa: mov byte ptr [rip+0x21d97c],0x0
0x39b1: mov byte ptr [rip+0x21d974],0x0
0x39b8: mov dword ptr [rip+0x21d952],0x0
0x39c2: mov byte ptr [rip+0x21d933],0x0
0x39c9: mov dword ptr [rip+0x21d925],0x1
0x39d3: mov byte ptr [rip+0x21d91c],0x0
0x39da: mov byte ptr [rip+0x21d914],0x0
0x39e1: mov dword ptr [rip+0x21d905],0x0
0x39eb: mov qword ptr [rip+0x21d8f2],0x0
0x39f6: mov qword ptr [rip+0x21d8df],0x0
0x3a01: mov byte ptr [rip+0x21d95d],0x0
0x3a08: call 0x3250
0x3a08: jump address is 0x3250
0x3250: jmp qword ptr [rip+0x21ca52]
Execute the function: getenv

0x3250: the return address is 0x3a0d
0x3a0d: test rax,rax
0x3a10: mov r12,rax
0x3a13: je 0x3a4b
0x3a13: jump address is 0x3a4b
0x3a15: lea rdx,[rip+0x16da4]
0x3a1c: lea rsi,[rip+0x21c01d]
0x3a23: mov ecx,0x4
0x3a28: mov rdi,rax
0x3a2b: call 0xc150
0x3a2b: jump address is 0xc150
Execute the function: argmatch

0x3a2b: the return address is 0x3a30
0x3a30: test eax,eax
0x3a32: js 0x4712
0x3a32: jump address is 0x4712
0x3a38: lea rdx,[rip+0x16d81]
0x3a3f: cdqe
0x3a41: xor edi,edi
0x3a43: mov esi,dword ptr [rdx+rax*4]
0x3a46: call 0x13630
0x3a46: jump address is 0x13630
Execute the function: set_quoting_style

0x3a46: the return address is 0x3a4b
0x3a4b: lea rdi,[rip+0x13fe3]
0x3a52: mov qword ptr [rip+0x21d853],0x50
0x3a5d: call 0x3250
0x3a5d: jump address is 0x3250
0x3250: jmp qword ptr [rip+0x21ca52]
Execute the function: getenv

0x3250: the return address is 0x3a62
0x3a62: test rax,rax
0x3a65: mov r12,rax
0x3a68: je 0x3a73
0x3a68: jump address is 0x3a73
Block exists: lea r12,[rsp+0x30] at address 0x3a73 is visited for 2 times

Block exists: cmp byte ptr [rax],0x0 at address 0x3a6a is visited for 1 times

0x4712: mov rdi,r12
0x4715: call 0x13d60
0x4715: jump address is 0x13d60
0x13d60: lea rcx,[rip+0x20c499]
0x13d67: mov rsi,rdi
0x13d6a: mov rdx,0xffffffffffffffff
0x13d71: xor edi,edi
0x13d73: jmp 0x13420
0x13d73: jump address is 0x13420
0x13420: push r15
0x13422: push r14
0x13424: movsxd r15,edi
0x13427: push r13
0x13429: push r12
0x1342b: mov r14,rdx
0x1342e: push rbp
0x1342f: push rbx
0x13430: mov rbp,rcx
0x13433: sub rsp,0x28
0x13437: mov qword ptr [rsp+0x8],rsi
0x1343c: call 0x32a0
0x1343c: jump address is 0x32a0
0x32a0: jmp qword ptr [rip+0x21ca2a]
Execute the function: __errno_location

0x32a0: the return address is 0x13441
0x13441: mov r13,rax
0x13444: mov eax,dword ptr [rax]
0x13446: test r15d,r15d
0x13449: mov rbx,qword ptr [rip+0x20cdf0]
0x13450: mov dword ptr [rsp+0x18],eax
0x13454: js 0x135c1
0x13454: jump address is 0x135c1
Block exists: cmp dword ptr [rip+0x20cdd7],r15d at address 0x1345a is visited for 2 times

0x135c1: call 0x3290
0x135c1: jump address is 0x3290
0x3290: jmp qword ptr [rip+0x21ca32]
Execute the function: abort

0x3a4b: lea rdi,[rip+0x13fe3]
0x3a52: mov qword ptr [rip+0x21d853],0x50
0x3a5d: call 0x3250
0x3a5d: jump address is 0x3250
0x3250: jmp qword ptr [rip+0x21ca52]
Execute the function: getenv

0x3250: the return address is 0x3a62
Block exists: test rax,rax at address 0x3a62 is visited for 2 times

0x3972: mov esi,0x7
0x3977: xor edi,edi
0x3979: mov dword ptr [rip+0x21d9b5],0x0
0x3983: call 0x13630
0x3983: jump address is 0x13630
Execute the function: set_quoting_style

0x3983: the return address is 0x3988
Block exists: lea rdi,[rip+0x14098] at address 0x3988 is visited for 2 times

0x46f7: mov esi,0x7
0x46fc: xor edi,edi
0x46fe: mov dword ptr [rip+0x21cc30],0x2
0x4708: call 0x13630
0x4708: jump address is 0x13630
Execute the function: set_quoting_style

0x4708: the return address is 0x470d
0x470d: jmp 0x3988
0x470d: jump address is 0x3988
Block exists: lea rdi,[rip+0x14098] at address 0x3988 is visited for 2 times

0x120bd: mov qword ptr [rip+0x20f33c],rbx
0x120c4: mov qword ptr [rip+0x20e1d5],rbx
0x120cb: pop rbx
0x120cc: ret
0x120cc: the return address is 0x38cb
0x38cb: lea rsi,[rip+0x13fe1]
0x38d2: mov edi,0x6
0x38d7: call 0x3700
0x38d7: jump address is 0x3700
0x3700: jmp qword ptr [rip+0x21c7fa]
Execute the function: setlocale

0x3700: the return address is 0x38dc
Block exists: lea rsi,[rip+0x1412c] at address 0x38dc is visited for 1 times

0x120cd: mov rcx,qword ptr [rip+0x20e1ec]
0x120d4: lea rdi,[rip+0x81ed]
0x120db: mov edx,0x37
0x120e0: mov esi,0x1
0x120e5: call 0x37f0
0x120e5: jump address is 0x37f0
0x37f0: jmp qword ptr [rip+0x21c782]
Execute the function: fwrite

0x37f0: the return address is 0x120ea
0x120ea: call 0x3290
0x120ea: jump address is 0x3290
0x3290: jmp qword ptr [rip+0x21ca32]
Execute the function: abort

Unreachable instructions:
0x3230: push qword ptr [rip+0x21ca5a]
0x3236: jmp qword ptr [rip+0x21ca5c]
0x323c: nop dword ptr [rax]
0x3240: jmp qword ptr [rip+0x21ca5a]
0x3246: push 0x0
0x324b: jmp 0x3230
0x3256: push 0x1
0x325b: jmp 0x3230
0x3260: jmp qword ptr [rip+0x21ca4a]
0x3266: push 0x2
0x326b: jmp 0x3230
0x3270: jmp qword ptr [rip+0x21ca42]
0x3276: push 0x3
0x327b: jmp 0x3230
0x3280: jmp qword ptr [rip+0x21ca3a]
0x3286: push 0x4
0x328b: jmp 0x3230
0x3296: push 0x5
0x329b: jmp 0x3230
0x32a6: push 0x6
0x32ab: jmp 0x3230
0x32b6: push 0x7
0x32bb: jmp 0x3230
0x32c0: jmp qword ptr [rip+0x21ca1a]
0x32c6: push 0x8
0x32cb: jmp 0x3230
0x32d0: jmp qword ptr [rip+0x21ca12]
0x32d6: push 0x9
0x32db: jmp 0x3230
0x32e0: jmp qword ptr [rip+0x21ca0a]
0x32e6: push 0xa
0x32eb: jmp 0x3230
0x32f0: jmp qword ptr [rip+0x21ca02]
0x32f6: push 0xb
0x32fb: jmp 0x3230
0x3306: push 0xc
0x330b: jmp 0x3230
0x3310: jmp qword ptr [rip+0x21c9f2]
0x3316: push 0xd
0x331b: jmp 0x3230
0x3320: jmp qword ptr [rip+0x21c9ea]
0x3326: push 0xe
0x332b: jmp 0x3230
0x3330: jmp qword ptr [rip+0x21c9e2]
0x3336: push 0xf
0x333b: jmp 0x3230
0x3340: jmp qword ptr [rip+0x21c9da]
0x3346: push 0x10
0x334b: jmp 0x3230
0x3350: jmp qword ptr [rip+0x21c9d2]
0x3356: push 0x11
0x335b: jmp 0x3230
0x3360: jmp qword ptr [rip+0x21c9ca]
0x3366: push 0x12
0x336b: jmp 0x3230
0x3370: jmp qword ptr [rip+0x21c9c2]
0x3376: push 0x13
0x337b: jmp 0x3230
0x3380: jmp qword ptr [rip+0x21c9ba]
0x3386: push 0x14
0x338b: jmp 0x3230
0x3396: push 0x15
0x339b: jmp 0x3230
0x33a0: jmp qword ptr [rip+0x21c9aa]
0x33a6: push 0x16
0x33ab: jmp 0x3230
0x33b0: jmp qword ptr [rip+0x21c9a2]
0x33b6: push 0x17
0x33bb: jmp 0x3230
0x33c0: jmp qword ptr [rip+0x21c99a]
0x33c6: push 0x18
0x33cb: jmp 0x3230
0x33d6: push 0x19
0x33db: jmp 0x3230
0x33e6: push 0x1a
0x33eb: jmp 0x3230
0x33f6: push 0x1b
0x33fb: jmp 0x3230
0x3406: push 0x1c
0x340b: jmp 0x3230
0x3410: jmp qword ptr [rip+0x21c972]
0x3416: push 0x1d
0x341b: jmp 0x3230
0x3420: jmp qword ptr [rip+0x21c96a]
0x3426: push 0x1e
0x342b: jmp 0x3230
0x3436: push 0x1f
0x343b: jmp 0x3230
0x3446: push 0x20
0x344b: jmp 0x3230
0x3456: push 0x21
0x345b: jmp 0x3230
0x3460: jmp qword ptr [rip+0x21c94a]
0x3466: push 0x22
0x346b: jmp 0x3230
0x3470: jmp qword ptr [rip+0x21c942]
0x3476: push 0x23
0x347b: jmp 0x3230
0x3480: jmp qword ptr [rip+0x21c93a]
0x3486: push 0x24
0x348b: jmp 0x3230
0x3490: jmp qword ptr [rip+0x21c932]
0x3496: push 0x25
0x349b: jmp 0x3230
0x34a6: push 0x26
0x34ab: jmp 0x3230
0x34b0: jmp qword ptr [rip+0x21c922]
0x34b6: push 0x27
0x34bb: jmp 0x3230
0x34c0: jmp qword ptr [rip+0x21c91a]
0x34c6: push 0x28
0x34cb: jmp 0x3230
0x34d0: jmp qword ptr [rip+0x21c912]
0x34d6: push 0x29
0x34db: jmp 0x3230
0x34e6: push 0x2a
0x34eb: jmp 0x3230
0x34f0: jmp qword ptr [rip+0x21c902]
0x34f6: push 0x2b
0x34fb: jmp 0x3230
0x3506: push 0x2c
0x350b: jmp 0x3230
0x3516: push 0x2d
0x351b: jmp 0x3230
0x3520: jmp qword ptr [rip+0x21c8ea]
0x3526: push 0x2e
0x352b: jmp 0x3230
0x3530: jmp qword ptr [rip+0x21c8e2]
0x3536: push 0x2f
0x353b: jmp 0x3230
0x3540: jmp qword ptr [rip+0x21c8da]
0x3546: push 0x30
0x354b: jmp 0x3230
0x3556: push 0x31
0x355b: jmp 0x3230
0x3560: jmp qword ptr [rip+0x21c8ca]
0x3566: push 0x32
0x356b: jmp 0x3230
0x3576: push 0x33
0x357b: jmp 0x3230
0x3580: jmp qword ptr [rip+0x21c8ba]
0x3586: push 0x34
0x358b: jmp 0x3230
0x3596: push 0x35
0x359b: jmp 0x3230
0x35a0: jmp qword ptr [rip+0x21c8aa]
0x35a6: push 0x36
0x35ab: jmp 0x3230
0x35b0: jmp qword ptr [rip+0x21c8a2]
0x35b6: push 0x37
0x35bb: jmp 0x3230
0x35c0: jmp qword ptr [rip+0x21c89a]
0x35c6: push 0x38
0x35cb: jmp 0x3230
0x35d0: jmp qword ptr [rip+0x21c892]
0x35d6: push 0x39
0x35db: jmp 0x3230
0x35e0: jmp qword ptr [rip+0x21c88a]
0x35e6: push 0x3a
0x35eb: jmp 0x3230
0x35f6: push 0x3b
0x35fb: jmp 0x3230
0x3600: jmp qword ptr [rip+0x21c87a]
0x3606: push 0x3c
0x360b: jmp 0x3230
0x3610: jmp qword ptr [rip+0x21c872]
0x3616: push 0x3d
0x361b: jmp 0x3230
0x3620: jmp qword ptr [rip+0x21c86a]
0x3626: push 0x3e
0x362b: jmp 0x3230
0x3630: jmp qword ptr [rip+0x21c862]
0x3636: push 0x3f
0x363b: jmp 0x3230
0x3640: jmp qword ptr [rip+0x21c85a]
0x3646: push 0x40
0x364b: jmp 0x3230
0x3650: jmp qword ptr [rip+0x21c852]
0x3656: push 0x41
0x365b: jmp 0x3230
0x3660: jmp qword ptr [rip+0x21c84a]
0x3666: push 0x42
0x366b: jmp 0x3230
0x3670: jmp qword ptr [rip+0x21c842]
0x3676: push 0x43
0x367b: jmp 0x3230
0x3686: push 0x44
0x368b: jmp 0x3230
0x3690: jmp qword ptr [rip+0x21c832]
0x3696: push 0x45
0x369b: jmp 0x3230
0x36a0: jmp qword ptr [rip+0x21c82a]
0x36a6: push 0x46
0x36ab: jmp 0x3230
0x36b0: jmp qword ptr [rip+0x21c822]
0x36b6: push 0x47
0x36bb: jmp 0x3230
0x36c0: jmp qword ptr [rip+0x21c81a]
0x36c6: push 0x48
0x36cb: jmp 0x3230
0x36d0: jmp qword ptr [rip+0x21c812]
0x36d6: push 0x49
0x36db: jmp 0x3230
0x36e6: push 0x4a
0x36eb: jmp 0x3230
0x36f0: jmp qword ptr [rip+0x21c802]
0x36f6: push 0x4b
0x36fb: jmp 0x3230
0x3706: push 0x4c
0x370b: jmp 0x3230
0x3716: push 0x4d
0x371b: jmp 0x3230
0x3720: jmp qword ptr [rip+0x21c7ea]
0x3726: push 0x4e
0x372b: jmp 0x3230
0x3730: jmp qword ptr [rip+0x21c7e2]
0x3736: push 0x4f
0x373b: jmp 0x3230
0x3740: jmp qword ptr [rip+0x21c7da]
0x3746: push 0x50
0x374b: jmp 0x3230
0x3750: jmp qword ptr [rip+0x21c7d2]
0x3756: push 0x51
0x375b: jmp 0x3230
0x3766: push 0x52
0x376b: jmp 0x3230
0x3770: jmp qword ptr [rip+0x21c7c2]
0x3776: push 0x53
0x377b: jmp 0x3230
0x3780: jmp qword ptr [rip+0x21c7ba]
0x3786: push 0x54
0x378b: jmp 0x3230
0x3796: push 0x55
0x379b: jmp 0x3230
0x37a6: push 0x56
0x37ab: jmp 0x3230
0x37b0: jmp qword ptr [rip+0x21c7a2]
0x37b6: push 0x57
0x37bb: jmp 0x3230
0x37c0: jmp qword ptr [rip+0x21c79a]
0x37c6: push 0x58
0x37cb: jmp 0x3230
0x37d0: jmp qword ptr [rip+0x21c792]
0x37d6: push 0x59
0x37db: jmp 0x3230
0x37e6: push 0x5a
0x37eb: jmp 0x3230
0x37f6: push 0x5b
0x37fb: jmp 0x3230
0x3806: push 0x5c
0x380b: jmp 0x3230
0x3810: jmp qword ptr [rip+0x21c772]
0x3816: push 0x5d
0x381b: jmp 0x3230
0x3826: push 0x5e
0x382b: jmp 0x3230
0x3836: push 0x5f
0x383b: jmp 0x3230
0x3840: jmp qword ptr [rip+0x21c75a]
0x3846: push 0x60
0x384b: jmp 0x3230
0x3850: jmp qword ptr [rip+0x21c752]
0x3856: push 0x61
0x385b: jmp 0x3230
0x3866: push 0x62
0x386b: jmp 0x3230
0x3870: jmp qword ptr [rip+0x21c742]
0x3876: push 0x63
0x387b: jmp 0x3230
0x3890: jmp qword ptr [rip+0x21c750]
0x3ad3: test eax,eax
0x3ad5: jne 0x4c0d
0x3adb: mov rax,qword ptr [rsp+0x30]
0x3ae0: mov qword ptr [rip+0x21d7d9],rax
0x3c9c: mov qword ptr [rip+0x21d61d],rax
0x3ca3: pop rax
0x3ca4: pop rdx
0x3ca5: jmp 0x3b08
0x3e45: xor edi,edi
0x3e47: call 0x37e0
0x41e6: test al,al
0x41e8: jne 0x3b08
0x41ee: mov rdi,qword ptr [rip+0x21c0a3]
0x41f5: call 0x13d60
0x41fa: lea rsi,[rip+0x13844]
0x4201: mov edx,0x5
0x4206: xor edi,edi
0x4208: mov rbx,rax
0x420b: call 0x33e0
0x4210: lea rdx,[rip+0x13841]
0x4217: mov rcx,rax
0x421a: mov r8,rbx
0x421d: xor esi,esi
0x421f: mov edi,0x2
0x4224: xor eax,eax
0x4226: call 0x3760
0x434b: cmp r13d,0x7
0x434f: mov qword ptr [rip+0x21cf7a],rax
0x4356: je 0x4d18
0x435c: mov eax,dword ptr [rip+0x21cfb2]
0x4362: cmp eax,0x1
0x4365: jbe 0x439f
0x4367: lea rdx,[rip+0x13785]
0x436e: sub eax,0x2
0x4371: movsx esi,byte ptr [rdx+rax]
0x4375: lea r13,[rax+rdx]
0x4379: test sil,sil
0x437c: je 0x439f
0x437e: nop
0x4380: mov rdi,qword ptr [rip+0x21cf49]
0x4387: add r13,0x1
0x438b: mov edx,0x1
0x4390: call 0x13650
0x4395: movsx esi,byte ptr [r13]
0x439a: test sil,sil
0x439d: jne 0x4380
0x439f: xor edi,edi
0x43a1: call 0x135d0
0x43a6: mov edx,0x1
0x43ab: mov esi,0x3a
0x43b0: mov rdi,rax
0x43b3: mov qword ptr [rip+0x21cf0e],rax
0x43ba: call 0x13650
0x43bf: cmp byte ptr [rip+0x21cf52],0x0
0x43c6: je 0x43dc
0x43c8: cmp dword ptr [rip+0x21cf69],0x0
0x43cf: je 0x4890
0x43d5: mov byte ptr [rip+0x21cf3c],0x0
0x43dc: mov eax,dword ptr [rip+0x21cf52]
0x43e2: mov edx,dword ptr [rip+0x21cf50]
0x43e8: sub eax,0x1
0x43eb: cmp eax,0x1
0x43ee: ja 0x43fb
0x43f0: cmp byte ptr [rsp+0x8],0x0
0x43f5: je 0x4d51
0x43fb: test edx,edx
0x43fd: jne 0x4442
0x43ff: test r14,r14
0x4402: je 0x4d85
0x4408: lea r13,[rip+0x122a4]
0x440f: jmp 0x441c
0x4418: add r14,0x6
0x441c: mov edx,0x6
0x4421: mov rsi,r13
0x4424: mov rdi,r14
0x4427: call 0x32b0
0x442c: test eax,eax
0x442e: jne 0x4c61
0x4434: mov edi,0x2
0x4439: call 0xd6e0
0x443e: test al,al
0x4440: jne 0x4418
0x4442: cmp byte ptr [rip+0x21cec9],0x0
0x4449: movsxd r13,dword ptr [rip+0x21be40]
0x4450: jne 0x4ad1
0x4456: cmp byte ptr [rip+0x21ce97],0x0
0x445d: je 0x4466
0x445f: mov byte ptr [rip+0x21ce97],0x1
0x4466: cmp dword ptr [rip+0x21ce8b],0x1
0x446d: je 0x48ba
0x4473: cmp byte ptr [rip+0x21ce7c],0x0
0x447a: je 0x44cb
0x447c: lea r8,[rip+0xf4d]
0x4483: lea rcx,[rip+0xf06]
0x448a: lea rdx,[rip+0xeef]
0x4491: xor esi,esi
0x4493: mov edi,0x1e
0x4498: call 0xdfb0
0x449d: test rax,rax
0x44a0: mov qword ptr [rip+0x21cf21],rax
0x44a7: je 0x5264
0x44ad: mov r8,qword ptr [rip+0x21bb0c]
0x44b4: mov rcx,qword ptr [rip+0x21bb25]
0x44bb: lea rdi,[rip+0x21cc1e]
0x44c2: xor edx,edx
0x44c4: xor esi,esi
0x44c6: call 0x154f0
0x44cb: lea rdi,[rip+0x136ea]
0x44d2: call 0x3250
0x44d7: mov rdi,rax
0x44da: call 0x157c0
0x44df: mov qword ptr [rip+0x21cdc2],rax
0x44e6: mov eax,dword ptr [rip+0x21ce44]
0x44ec: sub eax,0x2
0x44ef: and eax,0xfffffffd
0x44f2: je 0x4501
0x44f4: cmp dword ptr [rip+0x21ce3d],0x0
0x44fb: jne 0x4837
0x4501: mov byte ptr [rip+0x21cd99],0x1
0x4508: xor eax,eax
0x450a: mov byte ptr [rip+0x21cd90],al
0x4510: and byte ptr [rip+0x21cd89],0x1
0x4517: cmp byte ptr [rip+0x21cdfa],0x0
0x451e: jne 0x49d4
0x4524: cmp byte ptr [rip+0x21cde6],0x0
0x452b: jne 0x4958
0x4531: mov r14d,ebp
0x4534: mov edi,0x4e20
0x4539: mov qword ptr [rip+0x21ce74],0x64
0x4544: sub r14d,r13d
0x4547: lea r15,[rip+0x13365]
0x454e: call 0x14590
0x4553: mov qword ptr [rip+0x21ce52],0x0
0x455e: mov qword ptr [rip+0x21ce5b],rax
0x4565: call 0x94f0
0x456a: test r14d,r14d
0x456d: jle 0x4791
0x4573: nop dword ptr [rax+rax]
0x4578: mov rdi,qword ptr [rbx+r13*8]
0x457c: xor esi,esi
0x457e: mov rcx,r15
0x4581: mov edx,0x1
0x4586: add r13,0x1
0x458a: call 0x9690
0x458f: cmp ebp,r13d
0x4592: jg 0x4578
0x4594: cmp qword ptr [rip+0x21ce14],0x0
0x459c: jne 0x4a13
0x45a2: sub r14d,0x1
0x45a6: mov rbx,qword ptr [rip+0x21cdd3]
0x45ad: jg 0x45ec
0x45af: jmp 0x4c41
0x45b8: movzx edx,byte ptr [rbx+0x10]
0x45bc: mov rsi,qword ptr [rbx+0x8]
0x45c0: call 0xa3f0
0x45c5: mov rdi,qword ptr [rbx]
0x45c8: call 0x3880
0x45cd: mov rdi,qword ptr [rbx+0x8]
0x45d1: call 0x3880
0x45d6: mov rdi,rbx
0x45d9: call 0x3880
0x45de: mov byte ptr [rip+0x21ccd3],0x1
0x45e5: mov rbx,qword ptr [rip+0x21cd94]
0x45ec: test rbx,rbx
0x45ef: je 0x4686
0x45f5: mov rax,qword ptr [rbx+0x18]
0x45f9: mov rdi,qword ptr [rbx]
0x45fc: mov qword ptr [rip+0x21cd7d],rax
0x4603: mov rax,qword ptr [rip+0x21cdbe]
0x460a: test rax,rax
0x460d: je 0x45b8
0x460f: test rdi,rdi
0x4612: jne 0x45b8
0x4614: mov rdx,qword ptr [rip+0x21cadd]
0x461b: mov rcx,rdx
0x461e: sub rcx,qword ptr [rip+0x21cacb]
0x4625: cmp rcx,0xf
0x4629: jbe 0x51e7
0x462f: lea rcx,[rdx-0x10]
0x4633: mov rsi,r12
0x4636: mov rdi,rax
0x4639: mov qword ptr [rip+0x21cab8],rcx
0x4640: mov rcx,qword ptr [rdx-0x10]
0x4644: mov rdx,qword ptr [rdx-0x8]
0x4648: mov qword ptr [rsp+0x30],rcx
0x464d: mov qword ptr [rsp+0x38],rdx
0x4652: call 0xe810
0x4657: test rax,rax
0x465a: je 0x5206
0x4660: mov rdi,rax
0x4663: call 0x3880
0x4668: mov rdi,qword ptr [rbx]
0x466b: call 0x3880
0x4670: mov rdi,qword ptr [rbx+0x8]
0x4674: call 0x3880
0x4679: mov rdi,rbx
0x467c: call 0x3880
0x4681: jmp 0x45e5
0x4686: cmp byte ptr [rip+0x21cc85],0x0
0x468d: je 0x469c
0x468f: cmp byte ptr [rip+0x21cc7a],0x0
0x4696: jne 0x47bc
0x469c: cmp byte ptr [rip+0x21cc75],0x0
0x46a3: jne 0x4a7a
0x46a9: mov rbx,qword ptr [rip+0x21cd18]
0x46b0: test rbx,rbx
0x46b3: je 0x46ce
0x46b5: mov rdi,rbx
0x46b8: call 0xdb30
0x46bd: test rax,rax
0x46c0: jne 0x5225
0x46c6: mov rdi,rbx
0x46c9: call 0xe200
0x46ce: mov rsi,qword ptr [rsp+0x48]
0x46d3: xor rsi,qword ptr fs:0x28
0x46dc: mov eax,dword ptr [rip+0x21cb2e]
0x46e2: jne 0x525f
0x46e8: add rsp,0x58
0x46ec: pop rbx
0x46ed: pop rbp
0x46ee: pop r12
0x46f0: pop r13
0x46f2: pop r14
0x46f4: pop r15
0x46f6: ret
0x471a: lea rsi,[rip+0x155ef]
0x4721: mov r12,rax
0x4724: xor edi,edi
0x4726: mov edx,0x5
0x472b: call 0x33e0
0x4730: mov rcx,r12
0x4733: mov rdx,rax
0x4736: xor esi,esi
0x4738: xor edi,edi
0x473a: xor eax,eax
0x473c: call 0x3760
0x4741: jmp 0x3a4b
0x4755: test al,al
0x4757: jne 0x3a73
0x475d: mov rdi,r12
0x4760: call 0x13d60
0x4765: lea rsi,[rip+0x155ec]
0x476c: mov r12,rax
0x476f: xor edi,edi
0x4771: mov edx,0x5
0x4776: call 0x33e0
0x477b: mov rcx,r12
0x477e: mov rdx,rax
0x4781: xor esi,esi
0x4783: xor edi,edi
0x4785: xor eax,eax
0x4787: call 0x3760
0x478c: jmp 0x3a73
0x4791: cmp byte ptr [rip+0x21cb5d],0x0
0x4798: je 0x48a2
0x479e: lea rdi,[rip+0x157f7]
0x47a5: mov rcx,r15
0x47a8: mov edx,0x1
0x47ad: mov esi,0x3
0x47b2: call 0x9690
0x47b7: jmp 0x4594
0x47bc: cmp qword ptr [rip+0x21b89c],0x2
0x47c4: jne 0x47d8
0x47c6: mov rax,qword ptr [rip+0x21b89b]
0x47cd: cmp word ptr [rax],0x5b1b
0x47d2: je 0x4f73
0x47d8: lea rdi,[rip+0x21b881]
0x47df: call 0x6e70
0x47e4: lea rdi,[rip+0x21b885]
0x47eb: call 0x6e70
0x47f0: mov rdi,qword ptr [rip+0x21ba91]
0x47f7: call 0x3810
0x47fc: xor edi,edi
0x47fe: call 0x6c50
0x4803: mov ebx,dword ptr [rip+0x21ca0b]
0x4809: test ebx,ebx
0x480b: je 0x481f
0x480d: nop dword ptr [rax]
0x4810: mov edi,0x13
0x4815: call 0x3280
0x481a: sub ebx,0x1
0x481d: jne 0x4810
0x481f: mov edi,dword ptr [rip+0x21c9f3]
0x4825: test edi,edi
0x4827: je 0x469c
0x482d: call 0x3280
0x4832: jmp 0x469c
0x4837: cmp byte ptr [rip+0x21cb27],0x0
0x483e: jne 0x4501
0x4844: cmp byte ptr [rip+0x21cae1],0x0
0x484b: jne 0x4501
0x4851: cmp byte ptr [rip+0x21ca9e],0x0
0x4858: mov byte ptr [rip+0x21ca42],0x0
0x485f: mov eax,0x1
0x4864: jne 0x450a
0x486a: cmp byte ptr [rip+0x21caa1],0x0
0x4871: jne 0x450a
0x4877: cmp dword ptr [rip+0x21ca96],0x0
0x487e: jne 0x450a
0x4884: movzx eax,byte ptr [rip+0x21ca69]
0x488b: jmp 0x450a
0x4890: cmp byte ptr [rip+0x21ca7a],0x0
0x4897: je 0x43ff
0x489d: jmp 0x43d5
0x48a2: lea rdi,[rip+0x156f3]
0x48a9: mov edx,0x1
0x48ae: xor esi,esi
0x48b0: call 0x59d0
0x48b5: jmp 0x4594
0x48ba: cmp byte ptr [rip+0x21ca34],0x0
0x48c1: mov eax,0x2
0x48c6: jne 0x48e0
0x48c8: cmp dword ptr [rip+0x21ca45],0x3
0x48cf: je 0x48e0
0x48d1: cmp dword ptr [rip+0x21ca60],0x1
0x48d8: sbb eax,eax
0x48da: and eax,0xfffffffe
0x48dd: add eax,0x4
0x48e0: mov dword ptr [rip+0x21ca12],eax
0x48e6: jmp 0x4473
0x4910: test r13,r13
0x4913: je 0x5135
0x4919: mov eax,dword ptr [rip+0x21ca09]
0x491f: mov dword ptr [rip+0x21c9f7],eax
0x4925: mov rax,qword ptr [rip+0x21c9f4]
0x492c: mov qword ptr [rip+0x21b6e5],rax
0x4933: cmp byte ptr [rsp+0x10],0x0
0x4938: je 0x42c9
0x493e: mov dword ptr [rip+0x21c9e0],0x0
0x4948: mov qword ptr [rip+0x21c9cd],0x400
0x4953: jmp 0x42c9
0x4958: lea rdx,[rip+0x21c681]
0x495f: xor eax,eax
0x4961: jmp 0x4998
0x4968: cmp eax,0x41
0x496b: jge 0x49a5
0x496d: lea ecx,[rax-0x30]
0x4970: cmp ecx,0x9
0x4973: jbe 0x49a5
0x4975: lea ecx,[rax-0x2d]
0x4978: cmp ecx,0x1
0x497b: jbe 0x49a5
0x497d: cmp eax,0x7e
0x4980: je 0x49a5
0x4982: cmp eax,0x5f
0x4985: sete cl
0x4988: add eax,0x1
0x498b: or byte ptr [rdx],cl
0x498d: add rdx,0x1
0x4991: cmp eax,0x100
0x4996: je 0x49ba
0x4998: cmp eax,0x5a
0x499b: jle 0x4968
0x499d: lea ecx,[rax-0x61]
0x49a0: cmp ecx,0x19
0x49a3: ja 0x4975
0x49a5: add eax,0x1
0x49a8: mov ecx,0x1
0x49ad: or byte ptr [rdx],cl
0x49af: add rdx,0x1
0x49b3: cmp eax,0x100
0x49b8: jne 0x4998
0x49ba: call 0x14980
0x49bf: test rax,rax
0x49c2: je 0x4d79
0x49c8: mov qword ptr [rip+0x21c9b9],rax
0x49cf: jmp 0x4531
0x49d4: mov r15,qword ptr [rip+0x21b5e5]
0x49db: mov r14,qword ptr [rip+0x21b5fe]
0x49e2: lea rdi,[rip+0x21c7b7]
0x49e9: xor edx,edx
0x49eb: xor esi,esi
0x49ed: mov r8,r15
0x49f0: mov rcx,r14
0x49f3: call 0x154f0
0x49f8: lea rdi,[rip+0x21c741]
0x49ff: mov r8,r15
0x4a02: mov rcx,r14
0x4a05: xor edx,edx
0x4a07: xor esi,esi
0x4a09: call 0x154f0
0x4a0e: jmp 0x4524
0x4a13: call 0x5c40
0x4a18: cmp byte ptr [rip+0x21c8d6],0x0
0x4a1f: je 0x4d68
0x4a25: cmp qword ptr [rip+0x21c983],0x0
0x4a2d: je 0x45a2
0x4a33: call 0x8fa0
0x4a38: cmp qword ptr [rip+0x21c940],0x0
0x4a40: je 0x4686
0x4a46: mov rdi,qword ptr [rip+0x21b83b]
0x4a4d: mov rax,qword ptr [rdi+0x28]
0x4a51: cmp qword ptr [rdi+0x30],rax
0x4a55: jbe 0x518a
0x4a5b: lea rdx,[rax+0x1]
0x4a5f: mov qword ptr [rdi+0x28],rdx
0x4a63: mov byte ptr [rax],0xa
0x4a66: add qword ptr [rip+0x21c78a],0x1
0x4a6e: mov rbx,qword ptr [rip+0x21c90b]
0x4a75: jmp 0x45ec
0x4a7a: lea rsi,[rip+0x21c71f]
0x4a81: lea rdi,[rip+0x1313d]
0x4a88: call 0x6110
0x4a8d: lea rsi,[rip+0x21c6ac]
0x4a94: lea rdi,[rip+0x13134]
0x4a9b: call 0x6110
0x4aa0: mov rdi,qword ptr [rip+0x21c829]
0x4aa7: call 0x13610
0x4aac: lea rdx,[rip+0x21af8d]
0x4ab3: mov eax,eax
0x4ab5: lea rsi,[rip+0x153bc]
0x4abc: mov edi,0x1
0x4ac1: mov rdx,qword ptr [rdx+rax*8]
0x4ac5: xor eax,eax
0x4ac7: call 0x3710
0x4acc: jmp 0x46a9
0x4ad1: lea rdi,[rip+0x130ab]
0x4ad8: call 0x3250
0x4add: test rax,rax
0x4ae0: mov qword ptr [rsp+0x28],rax
0x4ae5: je 0x4af0
0x4ae7: cmp byte ptr [rax],0x0
0x4aea: jne 0x4df8
0x4af0: lea rdi,[rip+0x13096]
0x4af7: call 0x3250
0x4afc: test rax,rax
0x4aff: je 0x4b0a
0x4b01: cmp byte ptr [rax],0x0
0x4b04: jne 0x4ba2
0x4b0a: lea rdi,[rip+0x13081]
0x4b11: call 0x3250
0x4b16: test rax,rax
0x4b19: mov qword ptr [rsp+0x8],rax
0x4b1e: je 0x4b9b
0x4b20: mov rax,qword ptr [rsp+0x8]
0x4b25: cmp byte ptr [rax],0x0
0x4b28: je 0x4b9b
0x4b2a: lea r14,[rip+0x11c4f]
0x4b31: mov rax,r12
0x4b34: mov r12,rbx
0x4b37: mov r15,rax
0x4b3a: mov rbx,r14
0x4b3d: jmp 0x4b53
0x4b3f: xor eax,eax
0x4b41: mov rdi,rbx
0x4b44: or rcx,0xffffffffffffffff
0x4b48: repne scasb al,[rdi]
0x4b4a: mov rax,rcx
0x4b4d: not rax
0x4b50: add rbx,rax
0x4b53: mov rax,rbx
0x4b56: sub rax,r14
0x4b59: cmp rax,0x10c3
0x4b5f: ja 0x4b95
0x4b61: lea rsi,[rip+0x1302f]
0x4b68: mov edx,0x5
0x4b6d: mov rdi,rbx
0x4b70: call 0x32b0
0x4b75: test eax,eax
0x4b77: jne 0x4b3f
0x4b79: mov rsi,qword ptr [rsp+0x8]
0x4b7e: lea rdi,[rbx+0x5]
0x4b82: xor edx,edx
0x4b84: call 0x34f0
0x4b89: test eax,eax
0x4b8b: jne 0x4b3f
0x4b8d: mov rbx,r12
0x4b90: mov r12,r15
0x4b93: jmp 0x4ba2
0x4b95: mov rbx,r12
0x4b98: mov r12,r15
0x4b9b: mov byte ptr [rip+0x21c770],0x0
0x4ba2: cmp byte ptr [rip+0x21c74b],0x0
0x4ba9: jne 0x445f
0x4baf: cmp byte ptr [rip+0x21c75c],0x0
0x4bb6: je 0x4466
0x4bbc: mov edi,0xd
0x4bc1: call 0x5670
0x4bc6: test al,al
0x4bc8: jne 0x445f
0x4bce: mov edi,0xe
0x4bd3: call 0x5670
0x4bd8: test al,al
0x4bda: je 0x4be9
0x4bdc: cmp byte ptr [rip+0x21c7ad],0x0
0x4be3: jne 0x445f
0x4be9: mov edi,0xc
0x4bee: call 0x5670
0x4bf3: test al,al
0x4bf5: je 0x4466
0x4bfb: cmp dword ptr [rip+0x21c736],0x0
0x4c02: je 0x445f
0x4c08: jmp 0x4466
0x4c0d: mov rdi,r13
0x4c10: call 0x13d60
0x4c15: lea rsi,[rip+0x1517c]
0x4c1c: mov r13,rax
0x4c1f: xor edi,edi
0x4c21: mov edx,0x5
0x4c26: call 0x33e0
0x4c2b: mov rcx,r13
0x4c2e: mov rdx,rax
0x4c31: xor esi,esi
0x4c33: xor edi,edi
0x4c35: xor eax,eax
0x4c37: call 0x3760
0x4c3c: jmp 0x3ae7
0x4c41: test rbx,rbx
0x4c44: je 0x4686
0x4c4a: cmp qword ptr [rbx+0x18],0x0
0x4c4f: jne 0x45ec
0x4c55: mov byte ptr [rip+0x21c65c],0x0
0x4c5c: jmp 0x45ec
0x4c61: cmp byte ptr [r14],0x2b
0x4c65: je 0x4da9
0x4c6b: lea rdx,[rip+0x11aee]
0x4c72: lea rsi,[rip+0x21ad67]
0x4c79: mov ecx,0x4
0x4c7e: mov rdi,r14
0x4c81: call 0xc150
0x4c86: test rax,rax
0x4c89: js 0x5024
0x4c8f: cmp rax,0x1
0x4c93: je 0x5170
0x4c99: jle 0x4f96
0x4c9f: cmp rax,0x2
0x4ca3: je 0x514f
0x4ca9: cmp rax,0x3
0x4cad: jne 0x4cf1
0x4caf: mov edi,0x2
0x4cb4: call 0xd6e0
0x4cb9: test al,al
0x4cbb: je 0x4cf1
0x4cbd: mov rsi,qword ptr [rip+0x21b37c]
0x4cc4: mov edx,0x2
0x4cc9: xor edi,edi
0x4ccb: call 0x33e0
0x4cd0: mov rsi,qword ptr [rip+0x21b371]
0x4cd7: mov edx,0x2
0x4cdc: xor edi,edi
0x4cde: mov qword ptr [rip+0x21b35b],rax
0x4ce5: call 0x33e0
0x4cea: mov qword ptr [rip+0x21b357],rax
0x4cf1: call 0x5750
0x4cf6: jmp 0x4442
0x4d18: mov edx,0x1
0x4d1d: mov esi,0x20
0x4d22: mov rdi,rax
0x4d25: call 0x13650
0x4d2a: jmp 0x435c
0x4d51: test edx,edx
0x4d53: je 0x43ff
0x4d59: mov dword ptr [rip+0x21c5cd],0x4
0x4d63: jmp 0x4442
0x4d68: mov esi,0x1
0x4d6d: xor edi,edi
0x4d6f: call 0x5ec0
0x4d74: jmp 0x4a25
0x4d79: lea rax,[rip+0x12b33]
0x4d80: jmp 0x49c8
0x4d85: lea rdi,[rip+0x12d6d]
0x4d8c: call 0x3250
0x4d91: test rax,rax
0x4d94: mov r14,rax
0x4d97: jne 0x4408
0x4d9d: lea r14,[rip+0x12c7c]
0x4da4: jmp 0x4c6b
0x4da9: add r14,0x1
0x4dad: mov esi,0xa
0x4db2: mov rdi,r14
0x4db5: call 0x3450
0x4dba: test rax,rax
0x4dbd: mov r13,rax
0x4dc0: je 0x4fb9
0x4dc6: lea r15,[rax+0x1]
0x4dca: mov esi,0xa
0x4dcf: mov rdi,r15
0x4dd2: call 0x3450
0x4dd7: test rax,rax
0x4dda: jne 0x51b5
0x4de0: mov byte ptr [r13],0x0
0x4de5: mov qword ptr [rip+0x21b254],r14
0x4dec: mov qword ptr [rip+0x21b255],r15
0x4df3: jmp 0x4cf1
0x4df8: mov rdi,rax
0x4dfb: lea r15,[rip+0x21aabe]
0x4e02: mov word ptr [rsp+0x45],0x3f3f
0x4e09: mov byte ptr [rsp+0x47],0x0
0x4e0e: call 0x147c0
0x4e13: mov dword ptr [rsp+0x8],ebp
0x4e17: mov qword ptr [rip+0x21c4e2],rax
0x4e1e: mov qword ptr [rsp+0x30],rax
0x4e23: mov qword ptr [rsp+0x10],rbx
0x4e28: mov rax,qword ptr [rsp+0x28]
0x4e2d: movzx edx,byte ptr [rax]
0x4e30: cmp dl,0x2a
0x4e33: je 0x4fc1
0x4e39: cmp dl,0x3a
0x4e3c: je 0x5199
0x4e42: test dl,dl
0x4e44: je 0x51a7
0x4e4a: lea rdx,[rax+0x1]
0x4e4e: mov qword ptr [rsp+0x28],rdx
0x4e53: movzx edx,byte ptr [rax]
0x4e56: mov byte ptr [rsp+0x45],dl
0x4e5a: cmp byte ptr [rax+0x1],0x0
0x4e5e: je 0x500f
0x4e64: lea rdx,[rax+0x2]
0x4e68: mov qword ptr [rsp+0x28],rdx
0x4e6d: movzx edx,byte ptr [rax+0x1]
0x4e71: mov byte ptr [rsp+0x46],dl
0x4e75: lea rdx,[rax+0x3]
0x4e79: mov qword ptr [rsp+0x28],rdx
0x4e7e: cmp byte ptr [rax+0x2],0x3d
0x4e82: jne 0x500f
0x4e88: lea rsi,[rip+0x12b7d]
0x4e8f: lea rbx,[rsp+0x45]
0x4e94: xor ebp,ebp
0x4e96: mov rdi,rbx
0x4e99: call 0x3590
0x4e9e: test eax,eax
0x4ea0: je 0x50ff
0x4ea6: add rbp,0x1
0x4eaa: mov rsi,qword ptr [r15+rbp*8]
0x4eae: test rsi,rsi
0x4eb1: jne 0x4e96
0x4eb3: mov rdi,rbx
0x4eb6: mov ebp,dword ptr [rsp+0x8]
0x4eba: mov rbx,qword ptr [rsp+0x10]
0x4ebf: call 0x13d60
0x4ec4: lea rsi,[rip+0x12cd2]
0x4ecb: mov r14,rax
0x4ece: mov edx,0x5
0x4ed3: xor edi,edi
0x4ed5: call 0x33e0
0x4eda: mov rcx,r14
0x4edd: mov rdx,rax
0x4ee0: xor esi,esi
0x4ee2: xor edi,edi
0x4ee4: xor eax,eax
0x4ee6: call 0x3760
0x4eeb: lea rsi,[rip+0x14fde]
0x4ef2: mov edx,0x5
0x4ef7: xor edi,edi
0x4ef9: call 0x33e0
0x4efe: xor esi,esi
0x4f00: mov rdx,rax
0x4f03: xor edi,edi
0x4f05: xor eax,eax
0x4f07: call 0x3760
0x4f0c: mov rdi,qword ptr [rip+0x21c3ed]
0x4f13: call 0x3880
0x4f18: mov rdi,qword ptr [rip+0x21c3e9]
0x4f1f: jmp 0x4f2d
0x4f21: mov r14,qword ptr [rdi+0x20]
0x4f25: call 0x3880
0x4f2a: mov rdi,r14
0x4f2d: test rdi,rdi
0x4f30: jne 0x4f21
0x4f32: mov byte ptr [rip+0x21c3d9],0x0
0x4f39: cmp qword ptr [rip+0x21b18f],0x6
0x4f41: jne 0x4ba2
0x4f47: mov rdi,qword ptr [rip+0x21b18a]
0x4f4e: lea rsi,[rip+0x12c60]
0x4f55: mov edx,0x6
0x4f5a: call 0x32b0
0x4f5f: test eax,eax
0x4f61: jne 0x4ba2
0x4f67: mov byte ptr [rip+0x21c422],0x1
0x4f6e: jmp 0x4ba2
0x4f73: cmp qword ptr [rip+0x21b0f5],0x1
0x4f7b: jne 0x47d8
0x4f81: mov rax,qword ptr [rip+0x21b0f0]
0x4f88: cmp byte ptr [rax],0x6d
0x4f8b: jne 0x47d8
0x4f91: jmp 0x47f0
0x4f96: test rax,rax
0x4f99: jne 0x4cf1
0x4f9f: lea rax,[rip+0x12bac]
0x4fa6: mov qword ptr [rip+0x21b09b],rax
0x4fad: mov qword ptr [rip+0x21b08c],rax
0x4fb4: jmp 0x4cf1
0x4fb9: mov r15,r14
0x4fbc: jmp 0x4de5
0x4fc1: mov edi,0x28
0x4fc6: lea rbx,[rsp+0x28]
0x4fcb: call 0x14590
0x4fd0: mov r14,rax
0x4fd3: mov rax,qword ptr [rip+0x21c32e]
0x4fda: mov edx,0x1
0x4fdf: mov rcx,r14
0x4fe2: mov rsi,rbx
0x4fe5: mov rdi,r12
0x4fe8: add qword ptr [rsp+0x28],0x1
0x4fee: mov qword ptr [rip+0x21c313],r14
0x4ff5: mov qword ptr [r14+0x20],rax
0x4ff9: mov rax,qword ptr [rsp+0x30]
0x4ffe: mov qword ptr [r14+0x8],rax
0x5002: call 0x53e0
0x5007: test al,al
0x5009: jne 0x50c1
0x500f: mov ebp,dword ptr [rsp+0x8]
0x5013: mov rbx,qword ptr [rsp+0x10]
0x5018: jmp 0x4eeb
0x5024: lea rdi,[rip+0x12af6]
0x502b: mov rdx,rax
0x502e: mov rsi,r14
0x5031: lea rbp,[rip+0x12b0a]
0x5038: call 0xc270
0x503d: mov rbx,qword ptr [rip+0x21b27c]
0x5044: lea rsi,[rip+0x12ae1]
0x504b: mov edx,0x5
0x5050: xor edi,edi
0x5052: call 0x33e0
0x5057: mov rsi,rbx
0x505a: mov rdi,rax
0x505d: lea rbx,[rip+0x21a97c]
0x5064: call 0x3570
0x5069: lea rcx,[rip+0x12993]
0x5070: mov rdi,qword ptr [rip+0x21b249]
0x5077: add rbx,0x8
0x507b: xor eax,eax
0x507d: mov rdx,rbp
0x5080: mov esi,0x1
0x5085: call 0x3800
0x508a: mov rcx,qword ptr [rbx]
0x508d: test rcx,rcx
0x5090: jne 0x5070
0x5092: mov rbx,qword ptr [rip+0x21b227]
0x5099: lea rsi,[rip+0x14d68]
0x50a0: xor edi,edi
0x50a2: mov edx,0x5
0x50a7: call 0x33e0
0x50ac: mov rsi,rbx
0x50af: mov rdi,rax
0x50b2: call 0x3570
0x50c1: mov rax,qword ptr [rsp+0x28]
0x50c6: lea rdx,[rax+0x1]
0x50ca: mov qword ptr [rsp+0x28],rdx
0x50cf: cmp byte ptr [rax],0x3d
0x50d2: jne 0x500f
0x50d8: mov rax,qword ptr [rsp+0x30]
0x50dd: lea rcx,[r14+0x10]
0x50e1: xor edx,edx
0x50e3: mov rsi,rbx
0x50e6: mov rdi,r12
0x50e9: mov qword ptr [r14+0x18],rax
0x50ed: call 0x53e0
0x50f2: test al,al
0x50f4: jne 0x4e28
0x50fa: jmp 0x500f
0x50ff: lea rax,[rip+0x21af5a]
0x5106: movsxd rcx,ebp
0x5109: lea rsi,[rsp+0x28]
0x510e: shl rcx,0x4
0x5112: xor edx,edx
0x5114: mov rdi,r12
0x5117: add rcx,rax
0x511a: mov rax,qword ptr [rsp+0x30]
0x511f: mov qword ptr [rcx+0x8],rax
0x5123: call 0x53e0
0x5128: test al,al
0x512a: jne 0x4e28
0x5130: jmp 0x4eb3
0x5135: lea rdi,[rip+0x129ac]
0x513c: call 0x3250
0x5141: test rax,rax
0x5144: jne 0x4919
0x514a: jmp 0x4933
0x514f: lea rax,[rip+0x12a23]
0x5156: mov qword ptr [rip+0x21aee3],rax
0x515d: lea rax,[rip+0x12a09]
0x5164: mov qword ptr [rip+0x21aedd],rax
0x516b: jmp 0x4cf1
0x5170: lea rax,[rip+0x129f3]
0x5177: mov qword ptr [rip+0x21aeca],rax
0x517e: mov qword ptr [rip+0x21aebb],rax
0x5185: jmp 0x4cf1
0x518a: mov esi,0xa
0x518f: call 0x3490
0x5194: jmp 0x4a66
0x5199: add rax,0x1
0x519d: mov qword ptr [rsp+0x28],rax
0x51a2: jmp 0x4e28
0x51a7: mov ebp,dword ptr [rsp+0x8]
0x51ab: mov rbx,qword ptr [rsp+0x10]
0x51b0: jmp 0x4f39
0x51b5: mov rdi,r14
0x51b8: call 0x13d60
0x51bd: lea rsi,[rip+0x12940]
0x51c4: mov rbx,rax
0x51c7: mov edx,0x5
0x51cc: xor edi,edi
0x51ce: call 0x33e0
0x51d3: mov rcx,rbx
0x51d6: mov rdx,rax
0x51d9: xor esi,esi
0x51db: mov edi,0x2
0x51e0: xor eax,eax
0x51e2: call 0x3760
0x51e7: lea rcx,[rip+0x1142a]
0x51ee: lea rsi,[rip+0x12662]
0x51f5: lea rdi,[rip+0x14c44]
0x51fc: mov edx,0x403
0x5201: call 0x34d0
0x5206: lea rcx,[rip+0x114ad]
0x520d: lea rsi,[rip+0x12643]
0x5214: lea rdi,[rip+0x129a4]
0x521b: mov edx,0x640
0x5220: call 0x34d0
0x5225: lea rcx,[rip+0x1148e]
0x522c: lea rsi,[rip+0x12624]
0x5233: lea rdi,[rip+0x14c66]
0x523a: mov edx,0x674
0x523f: call 0x34d0
0x5244: mov r8,qword ptr [rip+0x21b04d]
0x524b: mov esi,dword ptr [rsp+0x30]
0x524f: lea rcx,[rip+0x21a0ea]
0x5256: xor edx,edx
0x5258: mov edi,eax
0x525a: call 0x14e80
0x525f: call 0x3420
0x5264: call 0x147e0
0x5269: nop dword ptr [rax]
0x529a: hlt
0x52a0: lea rdi,[rip+0x21afc1]
0x52a7: push rbp
0x52a8: lea rax,[rip+0x21afb9]
0x52af: cmp rax,rdi
0x52b2: mov rbp,rsp
0x52b5: je 0x52d0
0x52b7: mov rax,qword ptr [rip+0x21ad0a]
0x52be: test rax,rax
0x52c1: je 0x52d0
0x52c3: pop rbp
0x52c4: jmp rax
0x52d0: pop rbp
0x52d1: ret
0x52e0: lea rdi,[rip+0x21af81]
0x52e7: lea rsi,[rip+0x21af7a]
0x52ee: push rbp
0x52ef: sub rsi,rdi
0x52f2: mov rbp,rsp
0x52f5: sar rsi,0x3
0x52f9: mov rax,rsi
0x52fc: shr rax,0x3f
0x5300: add rsi,rax
0x5303: sar rsi,0x1
0x5306: je 0x5320
0x5308: mov rax,qword ptr [rip+0x21acd9]
0x530f: test rax,rax
0x5312: je 0x5320
0x5314: pop rbp
0x5315: jmp rax
0x5320: pop rbp
0x5321: ret
0x5330: cmp byte ptr [rip+0x21af91],0x0
0x5337: jne 0x5368
0x5339: cmp qword ptr [rip+0x21acaf],0x0
0x5341: push rbp
0x5342: mov rbp,rsp
0x5345: je 0x5353
0x5347: mov rdi,qword ptr [rip+0x21acba]
0x534e: call 0x3890
0x5353: call 0x52a0
0x5358: mov byte ptr [rip+0x21af69],0x1
0x535f: pop rbp
0x5360: ret
0x5368: ret
0x5370: push rbp
0x5371: mov rbp,rsp
0x5374: pop rbp
0x5375: jmp 0x52e0
0x5380: mov rax,qword ptr [rdi]
0x5383: xor edx,edx
0x5385: div rsi
0x5388: mov rax,rdx
0x538b: ret
0x5390: xor eax,eax
0x5392: mov rdx,qword ptr [rsi]
0x5395: cmp qword ptr [rdi],rdx
0x5398: je 0x53a0
0x539a: ret
0x53a0: mov rax,qword ptr [rsi+0x8]
0x53a4: cmp qword ptr [rdi+0x8],rax
0x53a8: sete al
0x53ab: ret
0x53b0: mov eax,dword ptr [rip+0x21be62]
0x53b6: test eax,eax
0x53b8: jne 0x53c0
0x53ba: mov dword ptr [rip+0x21be58],edi
0x53c0: ret
0x53d0: jmp 0x3880
0x53e0: mov r8,qword ptr [rsi]
0x53e3: mov r9,qword ptr [rdi]
0x53e6: lea r11,[rip+0x10b93]
0x53ed: push r15
0x53ef: xor r10d,r10d
0x53f2: push r14
0x53f4: mov eax,0x1
0x53f9: push r13
0x53fb: push r12
0x53fd: mov r12d,edx
0x5400: push rbp
0x5401: movabs rbp,0x7e000000000000
0x540b: push rbx
0x540c: mov rbx,rcx
0x540f: movzx ecx,byte ptr [r8]
0x5413: cmp cl,0x3d
0x5416: je 0x5462
0x5418: nop dword ptr [rax+rax]
0x5420: jle 0x54f8
0x5426: cmp cl,0x5c
0x5429: je 0x5488
0x542b: cmp cl,0x5e
0x542e: jne 0x5470
0x5430: movzx ecx,byte ptr [r8+0x1]
0x5435: lea r14,[r8+0x1]
0x5439: lea r13d,[rcx-0x40]
0x543d: cmp r13b,0x3e
0x5441: ja 0x54d8
0x5447: add r8,0x2
0x544b: and ecx,0x1f
0x544e: mov byte ptr [r9],cl
0x5451: movzx ecx,byte ptr [r8]
0x5455: add r10,0x1
0x5459: add r9,0x1
0x545d: cmp cl,0x3d
0x5460: jne 0x5420
0x5462: test r12b,r12b
0x5465: je 0x5470
0x5467: mov eax,edx
0x5469: mov r14,r8
0x546c: jmp 0x54df
0x5470: mov byte ptr [r9],cl
0x5473: add r8,0x1
0x5477: add r10,0x1
0x547b: add r9,0x1
0x547f: jmp 0x540f
0x5488: movzx ecx,byte ptr [r8+0x1]
0x548d: add r8,0x2
0x5491: cmp cl,0x78
0x5494: ja 0x544e
0x5496: movzx r13d,cl
0x549a: movsxd r13,dword ptr [r11+r13*4]
0x549e: add r13,r11
0x54a1: jmp r13
0x54a4: nop dword ptr [rax]
0x54a8: movzx r13d,byte ptr [r8]
0x54ac: sub ecx,0x30
0x54af: lea r14d,[r13-0x30]
0x54b3: cmp r14b,0x7
0x54b7: ja 0x544e
0x54b9: add r8,0x1
0x54bd: lea ecx,[r13+rcx*8-0x30]
0x54c2: movzx r13d,byte ptr [r8]
0x54c6: lea r14d,[r13-0x30]
0x54ca: cmp r14b,0x7
0x54ce: jbe 0x54b9
0x54d0: jmp 0x544e
0x54d5: nop dword ptr [rax]
0x54d8: cmp cl,0x3f
0x54db: je 0x5510
0x54dd: xor eax,eax
0x54df: mov qword ptr [rdi],r9
0x54e2: mov qword ptr [rsi],r14
0x54e5: mov qword ptr [rbx],r10
0x54e8: pop rbx
0x54e9: pop rbp
0x54ea: pop r12
0x54ec: pop r13
0x54ee: pop r14
0x54f0: pop r15
0x54f2: ret
0x54f8: test cl,cl
0x54fa: je 0x5505
0x54fc: cmp cl,0x3a
0x54ff: jne 0x5470
0x5505: mov r14,r8
0x5508: mov eax,0x1
0x550d: jmp 0x54df
0x5510: mov byte ptr [r9],0x7f
0x5514: add r10,0x1
0x5518: add r9,0x1
0x551c: mov r8,r14
0x551f: jmp 0x540f
0x5524: nop dword ptr [rax]
0x5528: mov ecx,0x1b
0x552d: jmp 0x544e
0x5532: nop word ptr [rax+rax]
0x5538: mov r14,r8
0x553b: xor eax,eax
0x553d: jmp 0x54df
0x553f: nop
0x5540: xor r14d,r14d
0x5543: nop dword ptr [rax+rax]
0x5548: movzx r13d,byte ptr [r8]
0x554c: lea ecx,[r13-0x30]
0x5550: cmp cl,0x36
0x5553: ja 0x5598
0x5555: mov r15,rax
0x5558: shl r15,cl
0x555b: test r15d,0x7e0000
0x5562: jne 0x5640
0x5568: test r15,rbp
0x556b: jne 0x5658
0x5571: test r15d,0x3ff
0x5578: je 0x5598
0x557a: add r8,0x1
0x557e: shl r14d,0x4
0x5582: lea r14d,[r13+r14-0x30]
0x5587: movzx r13d,byte ptr [r8]
0x558b: lea ecx,[r13-0x30]
0x558f: cmp cl,0x36
0x5592: jbe 0x5555
0x5594: nop dword ptr [rax]
0x5598: mov byte ptr [r9],r14b
0x559b: add r10,0x1
0x559f: add r9,0x1
0x55a3: jmp 0x540f
0x55a8: nop dword ptr [rax+rax]
0x55b0: mov ecx,0x20
0x55b5: jmp 0x544e
0x55ba: nop word ptr [rax+rax]
0x55c0: mov ecx,0x7
0x55c5: jmp 0x544e
0x55ca: nop word ptr [rax+rax]
0x55d0: mov ecx,0xb
0x55d5: jmp 0x544e
0x55da: nop word ptr [rax+rax]
0x55e0: mov ecx,0x7f
0x55e5: jmp 0x544e
0x55ea: nop word ptr [rax+rax]
0x55f0: mov ecx,0x8
0x55f5: jmp 0x544e
0x55fa: nop word ptr [rax+rax]
0x5600: mov ecx,0xc
0x5605: jmp 0x544e
0x560a: nop word ptr [rax+rax]
0x5610: mov ecx,0xa
0x5615: jmp 0x544e
0x561a: nop word ptr [rax+rax]
0x5620: mov ecx,0xd
0x5625: jmp 0x544e
0x562a: nop word ptr [rax+rax]
0x5630: mov ecx,0x9
0x5635: jmp 0x544e
0x563a: nop word ptr [rax+rax]
0x5640: shl r14d,0x4
0x5644: add r8,0x1
0x5648: lea r14d,[r13+r14-0x37]
0x564d: jmp 0x5548
0x5652: nop word ptr [rax+rax]
0x5658: shl r14d,0x4
0x565c: add r8,0x1
0x5660: lea r14d,[r13+r14-0x57]
0x5665: jmp 0x5548
0x566a: nop word ptr [rax+rax]
0x5670: lea rax,[rip+0x21a9e9]
0x5677: mov edi,edi
0x5679: shl rdi,0x4
0x567d: add rdi,rax
0x5680: xor eax,eax
0x5682: mov rdx,qword ptr [rdi]
0x5685: test rdx,rdx
0x5688: je 0x56b7
0x568a: cmp rdx,0x1
0x568e: mov rsi,qword ptr [rdi+0x8]
0x5692: je 0x56c0
0x5694: cmp rdx,0x2
0x5698: mov eax,0x1
0x569d: jne 0x56b7
0x569f: lea rdi,[rip+0x1219e]
0x56a6: mov ecx,0x2
0x56ab: rep cmpsb [rsi],[rdi]
0x56ad: seta al
0x56b0: sbb al,0x0
0x56b2: test al,al
0x56b4: setne al
0x56b7: ret
0x56c0: cmp byte ptr [rsi],0x30
0x56c3: setne al
0x56c6: ret
0x56f7: test eax,eax
0x56f9: je 0x5738
0x56fb: cmp eax,0x1
0x56fe: je 0x5720
0x5700: xor eax,eax
0x5702: mov rdx,qword ptr [rsp+0x8]
0x5707: xor rdx,qword ptr fs:0x28
0x5710: jne 0x574a
0x5712: add rsp,0x18
0x5716: ret
0x5720: mov qword ptr [rip+0x21bb85],0xffffffffffffffff
0x572b: mov eax,0x1
0x5730: jmp 0x5702
0x5738: mov rax,qword ptr [rsp+0x0]
0x573c: mov qword ptr [rip+0x21bb6d],rax
0x5743: mov eax,0x1
0x5748: jmp 0x5702
0x574a: call 0x3420
0x5750: push r15
0x5752: push r14
0x5754: xor esi,esi
0x5756: push r13
0x5758: push r12
0x575a: push rbp
0x575b: push rbx
0x575c: sub rsp,0x658
0x5763: lea rdi,[rsp+0x30]
0x5768: mov rax,qword ptr fs:0x28
0x5771: mov qword ptr [rsp+0x648],rax
0x5779: xor eax,eax
0x577b: mov qword ptr [rsp+0x10],rdi
0x5780: lea rax,[rip+0x21a8b9]
0x5787: mov rax,qword ptr [rax+rsi]
0x578b: movzx edx,byte ptr [rax]
0x578e: test dl,dl
0x5790: je 0x57ab
0x5792: nop word ptr [rax+rax]
0x5798: cmp dl,0x25
0x579b: movzx ecx,byte ptr [rax+0x1]
0x579f: je 0x57b0
0x57a1: mov edx,ecx
0x57a3: add rax,0x1
0x57a7: test dl,dl
0x57a9: jne 0x5798
0x57ab: xor eax,eax
0x57ad: jmp 0x57be
0x57b0: cmp cl,0x25
0x57b3: je 0x5890
0x57b9: cmp cl,0x62
0x57bc: jne 0x57a1
0x57be: mov qword ptr [rdi+rsi],rax
0x57c2: add rsi,0x8
0x57c6: cmp rsi,0x10
0x57ca: jne 0x5780
0x57cc: cmp qword ptr [rsp+0x30],0x0
0x57d2: mov r13d,0xc
0x57d8: je 0x58e1
0x57de: lea rax,[rsp+0x40]
0x57e3: mov qword ptr [rsp+0x8],rax
0x57e8: lea rax,[rsp+0x28]
0x57ed: mov qword ptr [rsp+0x0],rax
0x57f1: mov r15,qword ptr [rsp+0x8]
0x57f6: mov r12d,0x2000e
0x57fc: xor ebp,ebp
0x57fe: lea r14,[r15+0x600]
0x5805: nop dword ptr [rax]
0x5808: mov edi,r12d
0x580b: mov qword ptr [rsp+0x28],r13
0x5810: call 0x3680
0x5815: mov esi,0x25
0x581a: mov rdi,rax
0x581d: mov rbx,rax
0x5820: call 0x3450
0x5825: test rax,rax
0x5828: jne 0x58b8
0x582e: call 0x3860
0x5833: movzx edx,byte ptr [rbx]
0x5836: mov rax,qword ptr [rax]
0x5839: xor r9d,r9d
0x583c: mov rcx,qword ptr [rsp+0x0]
0x5840: mov rsi,r15
0x5843: mov rdi,rbx
0x5846: movzx r8d,word ptr [rax+rdx*2]
0x584b: mov edx,0x80
0x5850: shr r8w,0xb
0x5855: and r8d,0x1
0x5859: call 0xfbf0
0x585e: cmp rax,0x7f
0x5862: ja 0x58b8
0x5864: mov rax,qword ptr [rsp+0x28]
0x5869: cmp rbp,rax
0x586c: cmovb rbp,rax
0x5870: sub r15,0xffffffffffffff80
0x5874: add r12d,0x1
0x5878: cmp r15,r14
0x587b: jne 0x5808
0x587d: cmp r13,rbp
0x5880: jbe 0x58ef
0x5882: mov r13,rbp
0x5885: jmp 0x57f1
0x5890: movzx edx,byte ptr [rax+0x2]
0x5894: add rax,0x1
0x5898: jmp 0x57a3
0x589d: mov r13,qword ptr [rsp+0x0]
0x58a1: add r13,0x8
0x58a5: cmp r13,0x10
0x58a9: jne 0x58f7
0x58ab: mov byte ptr [rip+0x21ab16],0x1
0x58b2: nop word ptr [rax+rax]
0x58b8: mov rax,qword ptr [rsp+0x648]
0x58c0: xor rax,qword ptr fs:0x28
0x58c9: jne 0x59bc
0x58cf: add rsp,0x658
0x58d6: pop rbx
0x58d7: pop rbp
0x58d8: pop r12
0x58da: pop r13
0x58dc: pop r14
0x58de: pop r15
0x58e0: ret
0x58e1: cmp qword ptr [rsp+0x38],0x0
0x58e7: jne 0x57de
0x58ed: jmp 0x58b8
0x58ef: xor r13d,r13d
0x58f2: mov qword ptr [rsp+0x18],r15
0x58f7: lea rax,[rip+0x21a742]
0x58fe: mov qword ptr [rsp+0x0],r13
0x5902: mov rbx,qword ptr [rsp+0x8]
0x5907: imul r10,r13,0xc0
0x590e: mov r12,qword ptr [rax+r13]
0x5912: mov rax,qword ptr [rsp+0x10]
0x5917: mov r14,qword ptr [rax+r13]
0x591b: lea rax,[rip+0x21aabe]
0x5922: lea r15,[rax+r10]
0x5926: mov rbp,r14
0x5929: mov r13,r14
0x592c: mov r14,qword ptr [rsp+0x18]
0x5931: sub rbp,r12
0x5934: jmp 0x599c
0x5940: cmp rbp,0x80
0x5947: jg 0x58b8
0x594d: lea rax,[r13+0x2]
0x5951: sub rsp,0x8
0x5955: lea r8,[rip+0x11eeb]
0x595c: mov r9d,ebp
0x595f: mov rcx,0xffffffffffffffff
0x5966: mov edx,0x1
0x596b: push rax
0x596c: push rbx
0x596d: mov esi,0x80
0x5972: push r12
0x5974: mov rdi,r15
0x5977: xor eax,eax
0x5979: call 0x3270
0x597e: add rsp,0x20
0x5982: cmp eax,0x7f
0x5985: ja 0x58b8
0x598b: sub rbx,0xffffffffffffff80
0x598f: sub r15,0xffffffffffffff80
0x5993: cmp rbx,r14
0x5996: je 0x589d
0x599c: test r13,r13
0x599f: jne 0x5940
0x59a1: lea rdx,[rip+0x145e4]
0x59a8: mov rcx,r12
0x59ab: mov esi,0x80
0x59b0: mov rdi,r15
0x59b3: xor eax,eax
0x59b5: call 0x3480
0x59ba: jmp 0x5982
0x59bc: call 0x3420
0x59d0: push r13
0x59d2: push r12
0x59d4: mov r12,rsi
0x59d7: push rbp
0x59d8: push rbx
0x59d9: mov rbp,rdi
0x59dc: mov edi,0x20
0x59e1: mov r13d,edx
0x59e4: sub rsp,0x8
0x59e8: call 0x14590
0x59ed: mov rbx,rax
0x59f0: xor eax,eax
0x59f2: test r12,r12
0x59f5: je 0x59ff
0x59f7: mov rdi,r12
0x59fa: call 0x147c0
0x59ff: mov qword ptr [rbx+0x8],rax
0x5a03: xor eax,eax
0x5a05: test rbp,rbp
0x5a08: je 0x5a12
0x5a0a: mov rdi,rbp
0x5a0d: call 0x147c0
0x5a12: mov qword ptr [rbx],rax
0x5a15: mov rax,qword ptr [rip+0x21b964]
0x5a1c: mov byte ptr [rbx+0x10],r13b
0x5a20: mov qword ptr [rip+0x21b959],rbx
0x5a27: mov qword ptr [rbx+0x18],rax
0x5a2b: add rsp,0x8
0x5a2f: pop rbx
0x5a30: pop rbp
0x5a31: pop r12
0x5a33: pop r13
0x5a35: ret
0x5a40: mov rax,qword ptr [rsi+0x48]
0x5a44: cmp qword ptr [rdi+0x48],rax
0x5a48: jg 0x5a70
0x5a4a: jl 0x5a60
0x5a4c: mov rsi,qword ptr [rsi]
0x5a4f: mov rdi,qword ptr [rdi]
0x5a52: jmp 0x3590
0x5a60: mov eax,0x1
0x5a65: ret
0x5a70: mov eax,0xffffffff
0x5a75: ret
0x5a80: mov rdx,qword ptr [rdi+0x48]
0x5a84: cmp qword ptr [rsi+0x48],rdx
0x5a88: mov rax,rsi
0x5a8b: jg 0x5ab0
0x5a8d: jl 0x5aa0
0x5a8f: mov rsi,qword ptr [rdi]
0x5a92: mov rdi,qword ptr [rax]
0x5a95: jmp 0x3590
0x5aa0: mov eax,0x1
0x5aa5: ret
0x5ab0: mov eax,0xffffffff
0x5ab5: ret
0x5ac0: mov rsi,qword ptr [rsi]
0x5ac3: mov rdi,qword ptr [rdi]
0x5ac6: jmp 0x3590
0x5ad0: mov rax,rsi
0x5ad3: mov rsi,qword ptr [rdi]
0x5ad6: mov rdi,qword ptr [rax]
0x5ad9: jmp 0x3590
0x5ae0: push rbp
0x5ae1: push rbx
0x5ae2: mov rbx,rdi
0x5ae5: mov rdx,rbx
0x5ae8: mov rcx,0xffffffffffffffff
0x5aef: mov esi,0x2
0x5af4: sub rsp,0x18
0x5af8: mov r8,qword ptr [rip+0x21b7d1]
0x5aff: lea rdi,[rsp+0x6]
0x5b04: mov rax,qword ptr fs:0x28
0x5b0d: mov qword ptr [rsp+0x8],rax
0x5b12: xor eax,eax
0x5b14: call 0x136e0
0x5b19: movzx edx,byte ptr [rsp+0x6]
0x5b1e: cmp byte ptr [rbx],dl
0x5b20: je 0x5b40
0x5b22: mov eax,0x1
0x5b27: mov rcx,qword ptr [rsp+0x8]
0x5b2c: xor rcx,qword ptr fs:0x28
0x5b35: jne 0x5b53
0x5b37: add rsp,0x18
0x5b3b: pop rbx
0x5b3c: pop rbp
0x5b3d: ret
0x5b40: mov rbp,rax
0x5b43: mov rdi,rbx
0x5b46: call 0x3400
0x5b4b: cmp rax,rbp
0x5b4e: setne al
0x5b51: jmp 0x5b27
0x5b53: call 0x3420
0x5b60: push r14
0x5b62: push r13
0x5b64: push r12
0x5b66: push rbp
0x5b67: mov r12d,esi
0x5b6a: push rbx
0x5b6b: mov rbx,rdi
0x5b6e: call 0x3400
0x5b73: lea rcx,[rax+0x1]
0x5b77: mov eax,0x3
0x5b7c: mul rcx
0x5b7f: jo 0x5c22
0x5b85: xor esi,esi
0x5b87: test rax,rax
0x5b8a: js 0x5c2c
0x5b90: test rsi,rsi
0x5b93: jne 0x5c2c
0x5b99: lea rdi,[rcx+rcx*2]
0x5b9d: lea r14,[rip+0x21b43c]
0x5ba4: call 0x14590
0x5ba9: mov r13,rax
0x5bac: mov rbp,rax
0x5baf: movzx eax,byte ptr [rbx]
0x5bb2: test al,al
0x5bb4: je 0x5bde
0x5bb6: add rbx,0x1
0x5bba: cmp al,0x2f
0x5bbc: jne 0x5bc3
0x5bbe: test r12b,r12b
0x5bc1: jne 0x5c18
0x5bc3: movzx edx,al
0x5bc6: cmp byte ptr [r14+rdx],0x0
0x5bcb: mov r8,rdx
0x5bce: je 0x5bf0
0x5bd0: mov byte ptr [rbp],al
0x5bd3: movzx eax,byte ptr [rbx]
0x5bd6: add rbp,0x1
0x5bda: test al,al
0x5bdc: jne 0x5bb6
0x5bde: mov byte ptr [rbp],0x0
0x5be2: mov rax,r13
0x5be5: pop rbx
0x5be6: pop rbp
0x5be7: pop r12
0x5be9: pop r13
0x5beb: pop r14
0x5bed: ret
0x5bf0: lea rcx,[rip+0x11c59]
0x5bf7: mov rdi,rbp
0x5bfa: mov rdx,0xffffffffffffffff
0x5c01: mov esi,0x1
0x5c06: xor eax,eax
0x5c08: add rbp,0x3
0x5c0c: call 0x3870
0x5c11: jmp 0x5baf
0x5c18: mov byte ptr [rbp],0x2f
0x5c1c: add rbp,0x1
0x5c20: jmp 0x5baf
0x5c22: mov esi,0x1
0x5c27: jmp 0x5b87
0x5c2c: call 0x147e0
0x5c31: nop dword ptr [rax+rax]
0x5c36: nop word ptr cs:[rax+rax]
0x5c40: push rbx
0x5c41: mov rbx,qword ptr [rip+0x21b768]
0x5c48: mov rax,rbx
0x5c4b: shr rax,0x1
0x5c4e: add rax,rbx
0x5c51: cmp rax,qword ptr [rip+0x21b740]
0x5c58: ja 0x5d50
0x5c5e: test rbx,rbx
0x5c61: je 0x5c92
0x5c63: lea rcx,[rbx+rbx*4]
0x5c67: mov rax,qword ptr [rip+0x21b752]
0x5c6e: mov rdx,qword ptr [rip+0x21b72b]
0x5c75: lea rcx,[rcx+rcx*4]
0x5c79: lea rcx,[rax+rcx*8]
0x5c7d: nop dword ptr [rax]
0x5c80: mov qword ptr [rdx],rax
0x5c83: add rax,0xc8
0x5c89: add rdx,0x8
0x5c8d: cmp rcx,rax
0x5c90: jne 0x5c80
0x5c92: cmp dword ptr [rip+0x21b697],0xffffffff
0x5c99: je 0x5d4c
0x5c9f: lea rdi,[rip+0x21a65a]
0x5ca6: call 0x3560
0x5cab: test eax,eax
0x5cad: mov ecx,dword ptr [rip+0x21b67d]
0x5cb3: je 0x5d00
0x5cb5: cmp ecx,0x3
0x5cb8: je 0x5da7
0x5cbe: mov rsi,qword ptr [rip+0x21b6eb]
0x5cc5: mov rdi,qword ptr [rip+0x21b6d4]
0x5ccc: test rsi,rsi
0x5ccf: je 0x5cf3
0x5cd1: mov rdx,qword ptr [rip+0x21b6e8]
0x5cd8: lea r8,[rdi+rsi*8]
0x5cdc: mov rax,rdi
0x5cdf: nop
0x5ce0: mov qword ptr [rax],rdx
0x5ce3: add rax,0x8
0x5ce7: add rdx,0xc8
0x5cee: cmp rax,r8
0x5cf1: jne 0x5ce0
0x5cf3: mov eax,0x1
0x5cf8: jmp 0x5d0e
0x5d00: mov rsi,qword ptr [rip+0x21b6a9]
0x5d07: mov rdi,qword ptr [rip+0x21b692]
0x5d0e: cmp ecx,0x4
0x5d11: mov edx,0x0
0x5d16: cmove edx,dword ptr [rip+0x21b617]
0x5d1d: cdqe
0x5d1f: movzx r8d,byte ptr [rip+0x21b5cd]
0x5d27: add edx,ecx
0x5d29: lea rdx,[rax+rdx*2]
0x5d2d: movzx eax,byte ptr [rip+0x21b5fb]
0x5d34: lea rax,[rax+rdx*2]
0x5d38: lea rdx,[r8+rax*2]
0x5d3c: lea rax,[rip+0x21931d]
0x5d43: mov rdx,qword ptr [rax+rdx*8]
0x5d47: call 0x10490
0x5d4c: pop rbx
0x5d4d: ret
0x5d50: mov rdi,qword ptr [rip+0x21b649]
0x5d57: call 0x3880
0x5d5c: mov edx,0x18
0x5d61: xor ecx,ecx
0x5d63: mov rax,rdx
0x5d66: mul rbx
0x5d69: jo 0x5dc6
0x5d6b: test rax,rax
0x5d6e: mov eax,0x1
0x5d73: cmovs rcx,rax
0x5d77: test rcx,rcx
0x5d7a: jne 0x5dcd
0x5d7c: lea rdi,[rbx+rbx*2]
0x5d80: shl rdi,0x3
0x5d84: call 0x14590
0x5d89: mov rbx,qword ptr [rip+0x21b620]
0x5d90: mov qword ptr [rip+0x21b609],rax
0x5d97: lea rax,[rbx+rbx*2]
0x5d9b: mov qword ptr [rip+0x21b5f6],rax
0x5da2: jmp 0x5c5e
0x5da7: lea rcx,[rip+0x108fa]
0x5dae: lea rsi,[rip+0x11aa2]
0x5db5: lea rdi,[rip+0x11ab6]
0x5dbc: mov edx,0xeea
0x5dc1: call 0x34d0
0x5dc6: mov ecx,0x1
0x5dcb: jmp 0x5d6b
0x5dcd: call 0x147e0
0x5dd2: nop dword ptr [rax]
0x5dd6: nop word ptr cs:[rax+rax]
0x5de0: push rbp
0x5de1: push rbx
0x5de2: mov rbp,rsi
0x5de5: mov rbx,rdi
0x5de8: sub rsp,0x8
0x5dec: call 0x32a0
0x5df1: mov dword ptr [rax],0x0
0x5df7: add rsp,0x8
0x5dfb: mov rsi,rbp
0x5dfe: mov rdi,rbx
0x5e01: pop rbx
0x5e02: pop rbp
0x5e03: jmp 0x36a0
0x5e10: mov rax,qword ptr [rsi+0x48]
0x5e14: cmp qword ptr [rdi+0x48],rax
0x5e18: jg 0x5e30
0x5e1a: mov eax,0x1
0x5e1f: jge 0x5e28
0x5e21: ret
0x5e28: mov rsi,qword ptr [rsi]
0x5e2b: mov rdi,qword ptr [rdi]
0x5e2e: jmp 0x5de0
0x5e30: mov eax,0xffffffff
0x5e35: ret
0x5e40: mov rax,qword ptr [rdi+0x48]
0x5e44: cmp qword ptr [rsi+0x48],rax
0x5e48: mov rdx,rsi
0x5e4b: jg 0x5e70
0x5e4d: mov eax,0x1
0x5e52: jge 0x5e60
0x5e54: ret
0x5e60: mov rsi,qword ptr [rdi]
0x5e63: mov rdi,qword ptr [rdx]
0x5e66: jmp 0x5de0
0x5e70: mov eax,0xffffffff
0x5e75: ret
0x5e80: mov rsi,qword ptr [rsi]
0x5e83: mov rdi,qword ptr [rdi]
0x5e86: jmp 0x5de0
0x5e90: mov rax,rsi
0x5e93: mov rsi,qword ptr [rdi]
0x5e96: mov rdi,qword ptr [rax]
0x5e99: jmp 0x5de0
0x5ea0: mov rax,rsi
0x5ea3: mov rsi,qword ptr [rdi]
0x5ea6: mov rdi,qword ptr [rax]
0x5ea9: jmp 0xd250
0x5eb0: mov rsi,qword ptr [rsi]
0x5eb3: mov rdi,qword ptr [rdi]
0x5eb6: jmp 0xd250
0x5ec0: push r15
0x5ec2: push r14
0x5ec4: mov r14,rdi
0x5ec7: push r13
0x5ec9: push r12
0x5ecb: movzx r13d,sil
0x5ecf: push rbp
0x5ed0: push rbx
0x5ed1: sub rsp,0x8
0x5ed5: test rdi,rdi
0x5ed8: je 0x5ef0
0x5eda: cmp qword ptr [rip+0x21b4e6],0x0
0x5ee2: je 0x5ef0
0x5ee4: mov rsi,rdi
0x5ee7: xor edx,edx
0x5ee9: xor edi,edi
0x5eeb: call 0x59d0
0x5ef0: mov rbx,qword ptr [rip+0x21b4b9]
0x5ef7: lea r12,[0xfffffffffffffff8+rbx*8]
0x5eff: sub rbx,0x1
0x5f03: cmp rbx,0xffffffffffffffff
0x5f07: je 0x5f39
0x5f09: nop dword ptr [rax]
0x5f10: mov rax,qword ptr [rip+0x21b489]
0x5f17: mov rbp,qword ptr [rax+r12]
0x5f1b: mov eax,dword ptr [rbp+0xa8]
0x5f21: cmp eax,0x3
0x5f24: je 0x5f90
0x5f26: cmp eax,0x9
0x5f29: je 0x5f90
0x5f2b: sub rbx,0x1
0x5f2f: sub r12,0x8
0x5f33: cmp rbx,0xffffffffffffffff
0x5f37: jne 0x5f10
0x5f39: mov rdx,qword ptr [rip+0x21b470]
0x5f40: test rdx,rdx
0x5f43: je 0x5f78
0x5f45: mov rsi,qword ptr [rip+0x21b454]
0x5f4c: lea rdi,[rsi+rdx*8]
0x5f50: mov rax,rsi
0x5f53: xor edx,edx
0x5f55: nop dword ptr [rax]
0x5f58: mov rcx,qword ptr [rax]
0x5f5b: cmp dword ptr [rcx+0xa8],0x9
0x5f62: mov qword ptr [rsi+rdx*8],rcx
0x5f66: setne cl
0x5f69: add rax,0x8
0x5f6d: movzx ecx,cl
0x5f70: add rdx,rcx
0x5f73: cmp rdi,rax
0x5f76: jne 0x5f58
0x5f78: mov qword ptr [rip+0x21b431],rdx
0x5f7f: add rsp,0x8
0x5f83: pop rbx
0x5f84: pop rbp
0x5f85: pop r12
0x5f87: pop r13
0x5f89: pop r14
0x5f8b: pop r15
0x5f8d: ret
0x5f90: test r14,r14
0x5f93: mov r15,qword ptr [rbp]
0x5f97: je 0x6000
0x5f99: mov rdi,r15
0x5f9c: call 0xcd10
0x5fa1: cmp byte ptr [rax],0x2e
0x5fa4: je 0x6018
0x5fa6: cmp byte ptr [r15],0x2f
0x5faa: je 0x6000
0x5fac: mov rsi,r15
0x5faf: xor edx,edx
0x5fb1: mov rdi,r14
0x5fb4: call 0xd060
0x5fb9: mov rsi,qword ptr [rbp+0x8]
0x5fbd: mov r15,rax
0x5fc0: mov rdi,rax
0x5fc3: mov edx,r13d
0x5fc6: call 0x59d0
0x5fcb: mov rdi,r15
0x5fce: call 0x3880
0x5fd3: cmp dword ptr [rbp+0xa8],0x9
0x5fda: jne 0x5f2b
0x5fe0: mov rdi,qword ptr [rbp]
0x5fe4: call 0x3880
0x5fe9: mov rdi,qword ptr [rbp+0x8]
0x5fed: call 0x3880
0x5ff2: mov rdi,qword ptr [rbp+0x10]
0x5ff6: call 0x3880
0x5ffb: jmp 0x5f2b
0x6000: mov rsi,qword ptr [rbp+0x8]
0x6004: mov edx,r13d
0x6007: mov rdi,r15
0x600a: call 0x59d0
0x600f: jmp 0x5fd3
0x6018: xor edx,edx
0x601a: cmp byte ptr [rax+0x1],0x2e
0x601e: sete dl
0x6021: movzx eax,byte ptr [rax+rdx+0x1]
0x6026: test al,al
0x6028: je 0x5f2b
0x602e: cmp al,0x2f
0x6030: je 0x5f2b
0x6036: jmp 0x5fa6
0x6040: cmp rdi,rsi
0x6043: jae 0x60e8
0x6049: push r12
0x604b: mov r12,rsi
0x604e: push rbp
0x604f: push rbx
0x6050: mov rbx,rdi
0x6053: jmp 0x6096
0x6058: xor edx,edx
0x605a: mov rax,r12
0x605d: div rcx
0x6060: xor edx,edx
0x6062: mov r9,rax
0x6065: mov rax,rbp
0x6068: div rcx
0x606b: cmp r9,rax
0x606e: jbe 0x60b5
0x6070: cmp rsi,r8
0x6073: jae 0x60f0
0x6075: lea rax,[rsi+0x1]
0x6079: mov qword ptr [rdi+0x28],rax
0x607d: mov byte ptr [rsi],0x9
0x6080: mov rax,rbx
0x6083: xor edx,edx
0x6085: div rcx
0x6088: add rcx,rbx
0x608b: mov rbx,rcx
0x608e: sub rbx,rdx
0x6091: cmp rbx,r12
0x6094: jae 0x60cd
0x6096: mov rcx,qword ptr [rip+0x21b223]
0x609d: mov rdi,qword ptr [rip+0x21a1e4]
0x60a4: lea rbp,[rbx+0x1]
0x60a8: test rcx,rcx
0x60ab: mov rsi,qword ptr [rdi+0x28]
0x60af: mov r8,qword ptr [rdi+0x30]
0x60b3: jne 0x6058
0x60b5: cmp rsi,r8
0x60b8: jae 0x60d8
0x60ba: lea rax,[rsi+0x1]
0x60be: mov qword ptr [rdi+0x28],rax
0x60c2: mov byte ptr [rsi],0x20
0x60c5: mov rbx,rbp
0x60c8: cmp rbx,r12
0x60cb: jb 0x6096
0x60cd: pop rbx
0x60ce: pop rbp
0x60cf: pop r12
0x60d1: ret
0x60d8: mov esi,0x20
0x60dd: call 0x3490
0x60e2: jmp 0x60c5
0x60e8: ret
0x60f0: mov esi,0x9
0x60f5: call 0x3490
0x60fa: mov rcx,qword ptr [rip+0x21b1bf]
0x6101: jmp 0x6080
0x6110: push r12
0x6112: push rbp
0x6113: push rbx
0x6114: mov rax,qword ptr [rsi+0x18]
0x6118: mov rbx,qword ptr [rsi+0x10]
0x611c: mov rbp,rax
0x611f: sub rbp,rbx
0x6122: shr rbp,0x3
0x6126: test rbp,rbp
0x6129: je 0x61b7
0x612f: cmp rax,rbx
0x6132: je 0x61c2
0x6138: mov rdx,qword ptr [rsi+0x30]
0x613c: mov rcx,qword ptr [rsi+0x20]
0x6140: add rax,rdx
0x6143: not rdx
0x6146: mov r8,rcx
0x6149: and rax,rdx
0x614c: mov rdx,qword ptr [rsi+0x8]
0x6150: mov qword ptr [rsi+0x18],rax
0x6154: sub r8,rdx
0x6157: sub rax,rdx
0x615a: cmp rax,r8
0x615d: ja 0x61bc
0x615f: mov rax,qword ptr [rsi+0x18]
0x6163: lea r12,[rbx+rbp*8]
0x6167: lea rbp,[rip+0x1171e]
0x616e: mov qword ptr [rsi+0x10],rax
0x6172: mov rsi,qword ptr [rip+0x21a10f]
0x6179: call 0x3570
0x617e: nop
0x6180: mov rdx,qword ptr [rbx]
0x6183: xor eax,eax
0x6185: mov rsi,rbp
0x6188: mov edi,0x1
0x618d: add rbx,0x8
0x6191: call 0x3710
0x6196: cmp rbx,r12
0x6199: jne 0x6180
0x619b: mov rdi,qword ptr [rip+0x21a0e6]
0x61a2: mov rax,qword ptr [rdi+0x28]
0x61a6: cmp rax,qword ptr [rdi+0x30]
0x61aa: jae 0x61cb
0x61ac: lea rdx,[rax+0x1]
0x61b0: mov qword ptr [rdi+0x28],rdx
0x61b4: mov byte ptr [rax],0xa
0x61b7: pop rbx
0x61b8: pop rbp
0x61b9: pop r12
0x61bb: ret
0x61bc: mov qword ptr [rsi+0x18],rcx
0x61c0: jmp 0x615f
0x61c2: or byte ptr [rsi+0x50],0x2
0x61c6: jmp 0x6138
0x61cb: pop rbx
0x61cc: pop rbp
0x61cd: pop r12
0x61cf: mov esi,0xa
0x61d4: jmp 0x3490
0x61e0: push rbp
0x61e1: push rbx
0x61e2: mov ebx,edx
0x61e4: sub rsp,0x8
0x61e8: test rdi,rdi
0x61eb: je 0x6280
0x61f1: xor esi,esi
0x61f3: mov rbp,rdi
0x61f6: call 0x10220
0x61fb: mov rsi,qword ptr [rip+0x21a086]
0x6202: sub ebx,eax
0x6204: mov eax,0x0
0x6209: cmovs ebx,eax
0x620c: mov rdi,rbp
0x620f: call 0x3570
0x6214: mov rdi,rbp
0x6217: movsxd rbp,ebx
0x621a: call 0x3400
0x621f: add rbp,rax
0x6222: nop word ptr [rax+rax]
0x6228: mov rdi,qword ptr [rip+0x21a059]
0x622f: mov rdx,qword ptr [rdi+0x28]
0x6233: cmp rdx,qword ptr [rdi+0x30]
0x6237: jae 0x6270
0x6239: lea rcx,[rdx+0x1]
0x623d: mov qword ptr [rdi+0x28],rcx
0x6241: mov byte ptr [rdx],0x20
0x6244: sub ebx,0x1
0x6247: cmp ebx,0xffffffff
0x624a: jne 0x6228
0x624c: mov rax,qword ptr [rip+0x21afa5]
0x6253: lea rax,[rbp+rax+0x1]
0x6258: mov qword ptr [rip+0x21af99],rax
0x625f: add rsp,0x8
0x6263: pop rbx
0x6264: pop rbp
0x6265: ret
0x6270: mov esi,0x20
0x6275: call 0x3490
0x627a: jmp 0x6244
0x6280: mov rcx,rsi
0x6283: lea rsi,[rip+0x11607]
0x628a: mov edi,0x1
0x628f: xor eax,eax
0x6291: movsxd rbp,ebx
0x6294: call 0x3710
0x6299: jmp 0x624c
0x62a0: push rbx
0x62a1: lea rax,[rip+0x115ef]
0x62a8: mov ebx,edi
0x62aa: sub rsp,0x10
0x62ae: test dl,dl
0x62b0: je 0x62bd
0x62b2: xor eax,eax
0x62b4: cmp byte ptr [rip+0x21b072],0x0
0x62bb: je 0x62d0
0x62bd: add rsp,0x10
0x62c1: mov edx,esi
0x62c3: mov rsi,rbx
0x62c6: pop rbx
0x62c7: mov rdi,rax
0x62ca: jmp 0x61e0
0x62d0: mov dword ptr [rsp+0xc],esi
0x62d4: call 0xf7c0
0x62d9: mov esi,dword ptr [rsp+0xc]
0x62dd: jmp 0x62bd
0x62e0: mov eax,dword ptr [rip+0x21af32]
0x62e6: test eax,eax
0x62e8: jne 0x62f9
0x62ea: mov eax,dword ptr [rip+0x21af24]
0x62f0: add eax,0x1
0x62f3: mov dword ptr [rip+0x21af1b],eax
0x62f9: ret
0x6300: push r12
0x6302: push rbp
0x6303: mov rbp,rsi
0x6306: push rbx
0x6307: mov rsi,rdx
0x630a: mov ebx,edi
0x630c: mov edi,0x4
0x6311: call 0x13a90
0x6316: mov r12,rax
0x6319: call 0x32a0
0x631e: mov esi,dword ptr [rax]
0x6320: xor edi,edi
0x6322: xor eax,eax
0x6324: mov rcx,r12
0x6327: mov rdx,rbp
0x632a: call 0x3760
0x632f: test bl,bl
0x6331: je 0x6348
0x6333: mov dword ptr [rip+0x21aed3],0x2
0x633d: pop rbx
0x633e: pop rbp
0x633f: pop r12
0x6341: ret
0x6348: mov eax,dword ptr [rip+0x21aec2]
0x634e: test eax,eax
0x6350: jne 0x633d
0x6352: pop rbx
0x6353: mov dword ptr [rip+0x21aeb3],0x1
0x635d: pop rbp
0x635e: pop r12
0x6360: ret
0x6370: mov edx,dword ptr [rsi+0xa8]
0x6376: mov ecx,dword ptr [rdi+0xa8]
0x637c: cmp edx,0x3
0x637f: sete al
0x6382: cmp edx,0x9
0x6385: sete dl
0x6388: or eax,edx
0x638a: cmp ecx,0x3
0x638d: je 0x63b8
0x638f: cmp ecx,0x9
0x6392: je 0x63b8
0x6394: mov edx,dword ptr [rdi+0xac]
0x639a: and edx,0xf000
0x63a0: test al,al
0x63a2: je 0x63d8
0x63a4: cmp edx,0x4000
0x63aa: je 0x63f2
0x63ac: mov eax,0x1
0x63b1: ret
0x63b8: test al,al
0x63ba: jne 0x63f2
0x63bc: mov eax,dword ptr [rsi+0xac]
0x63c2: and eax,0xf000
0x63c7: cmp eax,0x4000
0x63cc: je 0x63f2
0x63ce: mov eax,0xffffffff
0x63d3: ret
0x63d8: mov eax,dword ptr [rsi+0xac]
0x63de: and eax,0xf000
0x63e3: cmp eax,0x4000
0x63e8: je 0x63a4
0x63ea: cmp edx,0x4000
0x63f0: je 0x63ce
0x63f2: mov rax,qword ptr [rsi+0x48]
0x63f6: cmp qword ptr [rdi+0x48],rax
0x63fa: jg 0x63ce
0x63fc: mov eax,0x1
0x6401: jl 0x63d3
0x6403: mov rsi,qword ptr [rsi]
0x6406: mov rdi,qword ptr [rdi]
0x6409: jmp 0x5de0
0x6410: mov edx,dword ptr [rsi+0xa8]
0x6416: mov ecx,dword ptr [rdi+0xa8]
0x641c: cmp edx,0x3
0x641f: sete al
0x6422: cmp edx,0x9
0x6425: sete dl
0x6428: or eax,edx
0x642a: cmp ecx,0x3
0x642d: je 0x6458
0x642f: cmp ecx,0x9
0x6432: je 0x6458
0x6434: mov edx,dword ptr [rdi+0xac]
0x643a: and edx,0xf000
0x6440: test al,al
0x6442: je 0x6478
0x6444: cmp edx,0x4000
0x644a: je 0x6492
0x644c: mov eax,0x1
0x6451: ret
0x6458: test al,al
0x645a: jne 0x6492
0x645c: mov eax,dword ptr [rsi+0xac]
0x6462: and eax,0xf000
0x6467: cmp eax,0x4000
0x646c: je 0x6492
0x646e: mov eax,0xffffffff
0x6473: ret
0x6478: mov eax,dword ptr [rsi+0xac]
0x647e: and eax,0xf000
0x6483: cmp eax,0x4000
0x6488: je 0x6444
0x648a: cmp edx,0x4000
0x6490: je 0x646e
0x6492: mov rax,qword ptr [rsi+0x48]
0x6496: cmp qword ptr [rdi+0x48],rax
0x649a: jg 0x646e
0x649c: jl 0x644c
0x649e: mov rsi,qword ptr [rsi]
0x64a1: mov rdi,qword ptr [rdi]
0x64a4: jmp 0x3590
0x64b0: mov rdx,rsi
0x64b3: mov esi,dword ptr [rdi+0xa8]
0x64b9: mov ecx,dword ptr [rdx+0xa8]
0x64bf: cmp ecx,0x3
0x64c2: sete al
0x64c5: cmp ecx,0x9
0x64c8: sete cl
0x64cb: or eax,ecx
0x64cd: cmp esi,0x3
0x64d0: je 0x64f8
0x64d2: cmp esi,0x9
0x64d5: je 0x64f8
0x64d7: mov ecx,dword ptr [rdi+0xac]
0x64dd: and ecx,0xf000
0x64e3: test al,al
0x64e5: je 0x6518
0x64e7: cmp ecx,0x4000
0x64ed: je 0x6532
0x64ef: mov eax,0x1
0x64f4: ret
0x64f8: test al,al
0x64fa: jne 0x6532
0x64fc: mov eax,dword ptr [rdx+0xac]
0x6502: and eax,0xf000
0x6507: cmp eax,0x4000
0x650c: je 0x6532
0x650e: mov eax,0xffffffff
0x6513: ret
0x6518: mov eax,dword ptr [rdx+0xac]
0x651e: and eax,0xf000
0x6523: cmp eax,0x4000
0x6528: je 0x64e7
0x652a: cmp ecx,0x4000
0x6530: je 0x650e
0x6532: mov rax,qword ptr [rdi+0x48]
0x6536: cmp qword ptr [rdx+0x48],rax
0x653a: jg 0x650e
0x653c: mov eax,0x1
0x6541: jl 0x6513
0x6543: mov rsi,qword ptr [rdi]
0x6546: mov rdi,qword ptr [rdx]
0x6549: jmp 0x5de0
0x6550: mov rdx,rsi
0x6553: mov esi,dword ptr [rdi+0xa8]
0x6559: mov ecx,dword ptr [rdx+0xa8]
0x655f: cmp ecx,0x3
0x6562: sete al
0x6565: cmp ecx,0x9
0x6568: sete cl
0x656b: or eax,ecx
0x656d: cmp esi,0x3
0x6570: je 0x6598
0x6572: cmp esi,0x9
0x6575: je 0x6598
0x6577: mov ecx,dword ptr [rdi+0xac]
0x657d: and ecx,0xf000
0x6583: test al,al
0x6585: je 0x65b8
0x6587: cmp ecx,0x4000
0x658d: je 0x65d2
0x658f: mov eax,0x1
0x6594: ret
0x6598: test al,al
0x659a: jne 0x65d2
0x659c: mov eax,dword ptr [rdx+0xac]
0x65a2: and eax,0xf000
0x65a7: cmp eax,0x4000
0x65ac: je 0x65d2
0x65ae: mov eax,0xffffffff
0x65b3: ret
0x65b8: mov eax,dword ptr [rdx+0xac]
0x65be: and eax,0xf000
0x65c3: cmp eax,0x4000
0x65c8: je 0x6587
0x65ca: cmp ecx,0x4000
0x65d0: je 0x65ae
0x65d2: mov rax,qword ptr [rdi+0x48]
0x65d6: cmp qword ptr [rdx+0x48],rax
0x65da: jg 0x65ae
0x65dc: jl 0x658f
0x65de: mov rsi,qword ptr [rdi]
0x65e1: mov rdi,qword ptr [rdx]
0x65e4: jmp 0x3590
0x65f0: mov edx,dword ptr [rsi+0xa8]
0x65f6: mov ecx,dword ptr [rdi+0xa8]
0x65fc: cmp edx,0x3
0x65ff: sete al
0x6602: cmp edx,0x9
0x6605: sete dl
0x6608: or eax,edx
0x660a: cmp ecx,0x3
0x660d: je 0x6638
0x660f: cmp ecx,0x9
0x6612: je 0x6638
0x6614: mov edx,dword ptr [rdi+0xac]
0x661a: and edx,0xf000
0x6620: test al,al
0x6622: je 0x6658
0x6624: cmp edx,0x4000
0x662a: je 0x6672
0x662c: mov eax,0x1
0x6631: ret
0x6638: test al,al
0x663a: jne 0x6672
0x663c: mov eax,dword ptr [rsi+0xac]
0x6642: and eax,0xf000
0x6647: cmp eax,0x4000
0x664c: je 0x6672
0x664e: mov eax,0xffffffff
0x6653: ret
0x6658: mov eax,dword ptr [rsi+0xac]
0x665e: and eax,0xf000
0x6663: cmp eax,0x4000
0x6668: je 0x6624
0x666a: cmp edx,0x4000
0x6670: je 0x664e
0x6672: mov rsi,qword ptr [rsi]
0x6675: mov rdi,qword ptr [rdi]
0x6678: jmp 0x5de0
0x6680: mov edx,dword ptr [rsi+0xa8]
0x6686: mov ecx,dword ptr [rdi+0xa8]
0x668c: cmp edx,0x3
0x668f: sete al
0x6692: cmp edx,0x9
0x6695: sete dl
0x6698: or eax,edx
0x669a: cmp ecx,0x3
0x669d: je 0x66c8
0x669f: cmp ecx,0x9
0x66a2: je 0x66c8
0x66a4: mov edx,dword ptr [rdi+0xac]
0x66aa: and edx,0xf000
0x66b0: test al,al
0x66b2: je 0x66e8
0x66b4: cmp edx,0x4000
0x66ba: je 0x6702
0x66bc: mov eax,0x1
0x66c1: ret
0x66c8: test al,al
0x66ca: jne 0x6702
0x66cc: mov eax,dword ptr [rsi+0xac]
0x66d2: and eax,0xf000
0x66d7: cmp eax,0x4000
0x66dc: je 0x6702
0x66de: mov eax,0xffffffff
0x66e3: ret
0x66e8: mov eax,dword ptr [rsi+0xac]
0x66ee: and eax,0xf000
0x66f3: cmp eax,0x4000
0x66f8: je 0x66b4
0x66fa: cmp edx,0x4000
0x6700: je 0x66de
0x6702: mov rsi,qword ptr [rsi]
0x6705: mov rdi,qword ptr [rdi]
0x6708: jmp 0x3590
0x6710: mov rcx,rsi
0x6713: mov esi,dword ptr [rdi+0xa8]
0x6719: mov edx,dword ptr [rcx+0xa8]
0x671f: cmp edx,0x3
0x6722: sete al
0x6725: cmp edx,0x9
0x6728: sete dl
0x672b: or eax,edx
0x672d: cmp esi,0x3
0x6730: je 0x6758
0x6732: cmp esi,0x9
0x6735: je 0x6758
0x6737: mov edx,dword ptr [rdi+0xac]
0x673d: and edx,0xf000
0x6743: test al,al
0x6745: je 0x6778
0x6747: cmp edx,0x4000
0x674d: je 0x6792
0x674f: mov eax,0x1
0x6754: ret
0x6758: test al,al
0x675a: jne 0x6792
0x675c: mov eax,dword ptr [rcx+0xac]
0x6762: and eax,0xf000
0x6767: cmp eax,0x4000
0x676c: je 0x6792
0x676e: mov eax,0xffffffff
0x6773: ret
0x6778: mov eax,dword ptr [rcx+0xac]
0x677e: and eax,0xf000
0x6783: cmp eax,0x4000
0x6788: je 0x6747
0x678a: cmp edx,0x4000
0x6790: je 0x676e
0x6792: mov rsi,qword ptr [rdi]
0x6795: mov rdi,qword ptr [rcx]
0x6798: jmp 0x5de0
0x67a0: mov rdx,rsi
0x67a3: mov esi,dword ptr [rdi+0xa8]
0x67a9: mov ecx,dword ptr [rdx+0xa8]
0x67af: cmp ecx,0x3
0x67b2: sete al
0x67b5: cmp ecx,0x9
0x67b8: sete cl
0x67bb: or eax,ecx
0x67bd: cmp esi,0x3
0x67c0: je 0x67e8
0x67c2: cmp esi,0x9
0x67c5: je 0x67e8
0x67c7: mov ecx,dword ptr [rdi+0xac]
0x67cd: and ecx,0xf000
0x67d3: test al,al
0x67d5: je 0x6808
0x67d7: cmp ecx,0x4000
0x67dd: je 0x6822
0x67df: mov eax,0x1
0x67e4: ret
0x67e8: test al,al
0x67ea: jne 0x6822
0x67ec: mov eax,dword ptr [rdx+0xac]
0x67f2: and eax,0xf000
0x67f7: cmp eax,0x4000
0x67fc: je 0x6822
0x67fe: mov eax,0xffffffff
0x6803: ret
0x6808: mov eax,dword ptr [rdx+0xac]
0x680e: and eax,0xf000
0x6813: cmp eax,0x4000
0x6818: je 0x67d7
0x681a: cmp ecx,0x4000
0x6820: je 0x67fe
0x6822: mov rsi,qword ptr [rdi]
0x6825: mov rdi,qword ptr [rdx]
0x6828: jmp 0x3590
0x6830: test dil,dil
0x6833: je 0x6858
0x6835: mov eax,esi
0x6837: and eax,0xf000
0x683c: cmp eax,0x8000
0x6841: jne 0x68b0
0x6843: xor eax,eax
0x6845: cmp dword ptr [rip+0x21aac8],0x3
0x684c: je 0x68f8
0x6852: ret
0x6858: xor eax,eax
0x685a: cmp edx,0x5
0x685d: je 0x68c0
0x685f: cmp edx,0x3
0x6862: sete cl
0x6865: cmp edx,0x9
0x6868: sete al
0x686b: or ecx,eax
0x686d: test cl,cl
0x686f: mov eax,0x2f
0x6874: jne 0x6852
0x6876: xor eax,eax
0x6878: cmp dword ptr [rip+0x21aa95],0x1
0x687f: je 0x6852
0x6881: test dil,dil
0x6884: jne 0x68c8
0x6886: cmp edx,0x6
0x6889: mov eax,0x40
0x688e: je 0x6910
0x6894: cmp edx,0x1
0x6897: mov eax,0x7c
0x689c: je 0x6928
0x68a2: cmp edx,0x7
0x68a5: sete al
0x68a8: neg eax
0x68aa: and eax,0x3d
0x68ad: ret
0x68b0: cmp eax,0x4000
0x68b5: sete cl
0x68b8: jmp 0x686d
0x68c0: ret
0x68c8: and esi,0xf000
0x68ce: mov eax,0x40
0x68d3: cmp esi,0xa000
0x68d9: je 0x6918
0x68db: cmp esi,0x1000
0x68e1: mov eax,0x7c
0x68e6: je 0x6920
0x68e8: cmp esi,0xc000
0x68ee: sete al
0x68f1: jmp 0x68a8
0x68f8: and esi,0x49
0x68fb: cmp esi,0x1
0x68fe: sbb eax,eax
0x6900: not eax
0x6902: and eax,0x2a
0x6905: ret
0x6910: ret
0x6918: ret
0x6920: ret
0x6928: ret
0x6930: push rbx
0x6931: movzx edi,dil
0x6935: call 0x6830
0x693a: test al,al
0x693c: mov ebx,eax
0x693e: je 0x6963
0x6940: mov rdi,qword ptr [rip+0x219941]
0x6947: mov rax,qword ptr [rdi+0x28]
0x694b: cmp rax,qword ptr [rdi+0x30]
0x694f: jae 0x6970
0x6951: lea rdx,[rax+0x1]
0x6955: mov qword ptr [rdi+0x28],rdx
0x6959: mov byte ptr [rax],bl
0x695b: add qword ptr [rip+0x21a895],0x1
0x6963: test bl,bl
0x6965: setne al
0x6968: pop rbx
0x6969: ret
0x6970: movzx esi,bl
0x6973: call 0x3490
0x6978: jmp 0x695b
0x6980: mov edx,dword ptr [rsi+0xa8]
0x6986: mov ecx,dword ptr [rdi+0xa8]
0x698c: cmp edx,0x3
0x698f: sete al
0x6992: cmp edx,0x9
0x6995: sete dl
0x6998: or eax,edx
0x699a: cmp ecx,0x3
0x699d: je 0x69c8
0x699f: cmp ecx,0x9
0x69a2: je 0x69c8
0x69a4: mov edx,dword ptr [rdi+0xac]
0x69aa: and edx,0xf000
0x69b0: test al,al
0x69b2: je 0x69e8
0x69b4: cmp edx,0x4000
0x69ba: je 0x6a08
0x69bc: mov eax,0x1
0x69c1: ret
0x69c8: test al,al
0x69ca: jne 0x6a08
0x69cc: mov eax,dword ptr [rsi+0xac]
0x69d2: and eax,0xf000
0x69d7: cmp eax,0x4000
0x69dc: je 0x6a08
0x69de: mov eax,0xffffffff
0x69e3: ret
0x69e8: mov eax,dword ptr [rsi+0xac]
0x69ee: and eax,0xf000
0x69f3: cmp eax,0x4000
0x69f8: je 0x69b4
0x69fa: cmp edx,0x4000
0x6a00: je 0x69de
0x6a02: nop word ptr [rax+rax]
0x6a08: mov rax,qword ptr [rsi+0x70]
0x6a0c: cmp qword ptr [rdi+0x70],rax
0x6a10: jg 0x69de
0x6a12: jl 0x69bc
0x6a14: mov rax,qword ptr [rsi+0x78]
0x6a18: sub eax,dword ptr [rdi+0x78]
0x6a1b: jne 0x69e3
0x6a1d: mov rsi,qword ptr [rsi]
0x6a20: mov rdi,qword ptr [rdi]
0x6a23: jmp 0x3590
0x6a30: mov rdx,rsi
0x6a33: mov esi,dword ptr [rdi+0xa8]
0x6a39: mov ecx,dword ptr [rdx+0xa8]
0x6a3f: cmp ecx,0x3
0x6a42: sete al
0x6a45: cmp ecx,0x9
0x6a48: sete cl
0x6a4b: or eax,ecx
0x6a4d: cmp esi,0x3
0x6a50: je 0x6a78
0x6a52: cmp esi,0x9
0x6a55: je 0x6a78
0x6a57: mov ecx,dword ptr [rdi+0xac]
0x6a5d: and ecx,0xf000
0x6a63: test al,al
0x6a65: je 0x6a98
0x6a67: cmp ecx,0x4000
0x6a6d: je 0x6ab2
0x6a6f: mov eax,0x1
0x6a74: ret
0x6a78: test al,al
0x6a7a: jne 0x6ab2
0x6a7c: mov eax,dword ptr [rdx+0xac]
0x6a82: and eax,0xf000
0x6a87: cmp eax,0x4000
0x6a8c: je 0x6ab2
0x6a8e: mov eax,0xffffffff
0x6a93: ret
0x6a98: mov eax,dword ptr [rdx+0xac]
0x6a9e: and eax,0xf000
0x6aa3: cmp eax,0x4000
0x6aa8: je 0x6a67
0x6aaa: cmp ecx,0x4000
0x6ab0: je 0x6a8e
0x6ab2: mov rsi,qword ptr [rdi]
0x6ab5: mov rdi,qword ptr [rdx]
0x6ab8: jmp 0xd250
0x6ac0: mov edx,dword ptr [rsi+0xa8]
0x6ac6: mov ecx,dword ptr [rdi+0xa8]
0x6acc: cmp edx,0x3
0x6acf: sete al
0x6ad2: cmp edx,0x9
0x6ad5: sete dl
0x6ad8: or eax,edx
0x6ada: cmp ecx,0x3
0x6add: je 0x6b08
0x6adf: cmp ecx,0x9
0x6ae2: je 0x6b08
0x6ae4: mov edx,dword ptr [rdi+0xac]
0x6aea: and edx,0xf000
0x6af0: test al,al
0x6af2: je 0x6b28
0x6af4: cmp edx,0x4000
0x6afa: je 0x6b42
0x6afc: mov eax,0x1
0x6b01: ret
0x6b08: test al,al
0x6b0a: jne 0x6b42
0x6b0c: mov eax,dword ptr [rsi+0xac]
0x6b12: and eax,0xf000
0x6b17: cmp eax,0x4000
0x6b1c: je 0x6b42
0x6b1e: mov eax,0xffffffff
0x6b23: ret
0x6b28: mov eax,dword ptr [rsi+0xac]
0x6b2e: and eax,0xf000
0x6b33: cmp eax,0x4000
0x6b38: je 0x6af4
0x6b3a: cmp edx,0x4000
0x6b40: je 0x6b1e
0x6b42: mov rsi,qword ptr [rsi]
0x6b45: mov rdi,qword ptr [rdi]
0x6b48: jmp 0xd250
0x6b50: mov edx,dword ptr [rsi+0xa8]
0x6b56: mov ecx,dword ptr [rdi+0xa8]
0x6b5c: cmp edx,0x3
0x6b5f: sete al
0x6b62: cmp edx,0x9
0x6b65: sete dl
0x6b68: or eax,edx
0x6b6a: cmp ecx,0x3
0x6b6d: je 0x6b98
0x6b6f: cmp ecx,0x9
0x6b72: je 0x6b98
0x6b74: mov edx,dword ptr [rdi+0xac]
0x6b7a: and edx,0xf000
0x6b80: test al,al
0x6b82: je 0x6bb8
0x6b84: cmp edx,0x4000
0x6b8a: je 0x6bd8
0x6b8c: mov eax,0x1
0x6b91: ret
0x6b98: test al,al
0x6b9a: jne 0x6bd8
0x6b9c: mov eax,dword ptr [rsi+0xac]
0x6ba2: and eax,0xf000
0x6ba7: cmp eax,0x4000
0x6bac: je 0x6bd8
0x6bae: mov eax,0xffffffff
0x6bb3: ret
0x6bb8: mov eax,dword ptr [rsi+0xac]
0x6bbe: and eax,0xf000
0x6bc3: cmp eax,0x4000
0x6bc8: je 0x6b84
0x6bca: cmp edx,0x4000
0x6bd0: je 0x6bae
0x6bd2: nop word ptr [rax+rax]
0x6bd8: push r12
0x6bda: push rbp
0x6bdb: push rbx
0x6bdc: mov r12,qword ptr [rsi]
0x6bdf: mov rbx,rdi
0x6be2: mov esi,0x2e
0x6be7: mov rdi,r12
0x6bea: call 0x34a0
0x6bef: mov rbx,qword ptr [rbx]
0x6bf2: mov esi,0x2e
0x6bf7: mov rbp,rax
0x6bfa: mov rdi,rbx
0x6bfd: call 0x34a0
0x6c02: test rax,rax
0x6c05: je 0x6c40
0x6c07: lea rdx,[rip+0x10ca5]
0x6c0e: test rbp,rbp
0x6c11: cmove rbp,rdx
0x6c15: mov rsi,rax
0x6c18: mov rdi,rbp
0x6c1b: call 0x3590
0x6c20: test eax,eax
0x6c22: jne 0x6c38
0x6c24: mov rsi,rbx
0x6c27: mov rdi,r12
0x6c2a: pop rbx
0x6c2b: pop rbp
0x6c2c: pop r12
0x6c2e: jmp 0x3590
0x6c38: pop rbx
0x6c39: pop rbp
0x6c3a: pop r12
0x6c3c: ret
0x6c40: test rbp,rbp
0x6c43: lea rax,[rip+0x10c69]
0x6c4a: jne 0x6c15
0x6c4c: jmp 0x6c24
0x6c50: push r15
0x6c52: push r14
0x6c54: push r13
0x6c56: push r12
0x6c58: push rbp
0x6c59: push rbx
0x6c5a: sub rsp,0xa8
0x6c61: mov rax,qword ptr fs:0x28
0x6c6a: mov qword ptr [rsp+0x98],rax
0x6c72: xor eax,eax
0x6c74: test dil,dil
0x6c77: jne 0x6cf0
0x6c79: lea rbx,[rip+0xf9c4]
0x6c80: mov ebp,0x14
0x6c85: lea r12,[rip+0x21a594]
0x6c8c: lea r13,[rbx+0x2c]
0x6c90: jmp 0x6ca3
0x6c98: cmp rbx,r13
0x6c9b: je 0x6cbf
0x6c9d: mov ebp,dword ptr [rbx]
0x6c9f: add rbx,0x4
0x6ca3: mov esi,ebp
0x6ca5: mov rdi,r12
0x6ca8: call 0x37d0
0x6cad: test eax,eax
0x6caf: je 0x6c98
0x6cb1: xor esi,esi
0x6cb3: mov edi,ebp
0x6cb5: call 0x35a0
0x6cba: cmp rbx,r13
0x6cbd: jne 0x6c9d
0x6cbf: mov rax,qword ptr [rsp+0x98]
0x6cc7: xor rax,qword ptr fs:0x28
0x6cd0: jne 0x6e19
0x6cd6: add rsp,0xa8
0x6cdd: pop rbx
0x6cde: pop rbp
0x6cdf: pop r12
0x6ce1: pop r13
0x6ce3: pop r14
0x6ce5: pop r15
0x6ce7: ret
0x6cf0: lea rbp,[rip+0xf94d]
0x6cf7: lea rdi,[rip+0x21a522]
0x6cfe: mov r13d,0x14
0x6d04: mov r12,rsp
0x6d07: lea r15,[rip+0x21a512]
0x6d0e: call 0x35e0
0x6d13: lea r14,[rbp+0x2c]
0x6d17: mov rbx,rbp
0x6d1a: jmp 0x6d27
0x6d20: mov r13d,dword ptr [rbx]
0x6d23: add rbx,0x4
0x6d27: xor esi,esi
0x6d29: mov rdx,r12
0x6d2c: mov edi,r13d
0x6d2f: call 0x3310
0x6d34: cmp qword ptr [rsp+0x0],0x1
0x6d39: je 0x6d46
0x6d3b: mov esi,r13d
0x6d3e: mov rdi,r15
0x6d41: call 0x3840
0x6d46: cmp rbx,r14
0x6d49: jne 0x6d20
0x6d4b: movdqa xmm0,xmmword ptr [rip+0x21a4cd]
0x6d53: mov r14d,0x14
0x6d59: mov dword ptr [rsp+0x88],0x10000000
0x6d64: lea r13,[rip+0x21a4b5]
0x6d6b: lea r15,[rip+0xffffffffffffe63e]
0x6d72: movups xmmword ptr [rsp+0x8],xmm0
0x6d77: movdqa xmm0,xmmword ptr [rip+0x21a4b1]
0x6d7f: movups xmmword ptr [rsp+0x18],xmm0
0x6d84: movdqa xmm0,xmmword ptr [rip+0x21a4b4]
0x6d8c: movups xmmword ptr [rsp+0x28],xmm0
0x6d91: movdqa xmm0,xmmword ptr [rip+0x21a4b7]
0x6d99: movups xmmword ptr [rsp+0x38],xmm0
0x6d9e: movdqa xmm0,xmmword ptr [rip+0x21a4ba]
0x6da6: movups xmmword ptr [rsp+0x48],xmm0
0x6dab: movdqa xmm0,xmmword ptr [rip+0x21a4bd]
0x6db3: movups xmmword ptr [rsp+0x58],xmm0
0x6db8: movdqa xmm0,xmmword ptr [rip+0x21a4c0]
0x6dc0: movups xmmword ptr [rsp+0x68],xmm0
0x6dc5: movdqa xmm0,xmmword ptr [rip+0x21a4c3]
0x6dcd: movups xmmword ptr [rsp+0x78],xmm0
0x6dd2: jmp 0x6de0
0x6dd8: mov r14d,dword ptr [rbp]
0x6ddc: add rbp,0x4
0x6de0: mov esi,r14d
0x6de3: mov rdi,r13
0x6de6: call 0x37d0
0x6deb: test eax,eax
0x6ded: je 0x6e0f
0x6def: lea rax,[rip+0xfffffffffffff4ea]
0x6df6: cmp r14d,0x14
0x6dfa: mov rsi,r12
0x6dfd: mov edi,r14d
0x6e00: cmovne rax,r15
0x6e04: xor edx,edx
0x6e06: mov qword ptr [rsp+0x0],rax
0x6e0a: call 0x3310
0x6e0f: cmp rbp,rbx
0x6e12: jne 0x6dd8
0x6e14: jmp 0x6cbf
0x6e19: call 0x3420
0x6e20: cmp qword ptr [rip+0x219260],0x0
0x6e28: je 0x6e38
0x6e2a: lea rdi,[rip+0x21924f]
0x6e31: jmp 0x6e70
0x6e38: lea rdi,[rip+0x219221]
0x6e3f: sub rsp,0x8
0x6e43: call 0x6e70
0x6e48: lea rdi,[rip+0x219241]
0x6e4f: call 0x6e70
0x6e54: lea rdi,[rip+0x219215]
0x6e5b: add rsp,0x8
0x6e5f: jmp 0x6e70
0x6e70: cmp byte ptr [rip+0x21a499],0x0
0x6e77: push rbx
0x6e78: mov rbx,rdi
0x6e7b: je 0x6ea0
0x6e7d: mov rdi,qword ptr [rbx+0x8]
0x6e81: mov rsi,qword ptr [rbx]
0x6e84: mov edx,0x1
0x6e89: pop rbx
0x6e8a: mov rcx,qword ptr [rip+0x2193f7]
0x6e91: jmp 0x36d0
0x6ea0: mov edi,0x1
0x6ea5: mov byte ptr [rip+0x21a464],0x1
0x6eac: call 0x3630
0x6eb1: test eax,eax
0x6eb3: jns 0x6ec0
0x6eb5: call 0x6e20
0x6eba: jmp 0x6e7d
0x6ec0: mov edi,0x1
0x6ec5: call 0x6c50
0x6eca: call 0x6e20
0x6ecf: jmp 0x6e7d
0x6ee0: push rbp
0x6ee1: push rbx
0x6ee2: sub rsp,0x98
0x6ee9: mov rax,qword ptr fs:0x28
0x6ef2: mov qword ptr [rsp+0x88],rax
0x6efa: xor eax,eax
0x6efc: mov rbp,rsp
0x6eff: jmp 0x6f59
0x6f08: mov rdi,qword ptr [rip+0x219379]
0x6f0f: call 0x3810
0x6f14: lea rsi,[rip+0x21a305]
0x6f1b: xor edi,edi
0x6f1d: mov rdx,rbp
0x6f20: call 0x3260
0x6f25: mov ebx,dword ptr [rip+0x21a2ed]
0x6f2b: mov eax,dword ptr [rip+0x21a2e3]
0x6f31: test eax,eax
0x6f33: je 0x6f98
0x6f35: sub eax,0x1
0x6f38: mov ebx,0x13
0x6f3d: mov dword ptr [rip+0x21a2d1],eax
0x6f43: mov edi,ebx
0x6f45: call 0x3280
0x6f4a: xor edx,edx
0x6f4c: mov rsi,rbp
0x6f4f: mov edi,0x2
0x6f54: call 0x3260
0x6f59: mov eax,dword ptr [rip+0x21a2b9]
0x6f5f: test eax,eax
0x6f61: jne 0x6f6d
0x6f63: mov eax,dword ptr [rip+0x21a2ab]
0x6f69: test eax,eax
0x6f6b: je 0x6fa8
0x6f6d: cmp byte ptr [rip+0x21a39c],0x0
0x6f74: je 0x6f08
0x6f76: lea rdi,[rip+0x2190e3]
0x6f7d: call 0x6e70
0x6f82: lea rdi,[rip+0x2190e7]
0x6f89: call 0x6e70
0x6f8e: jmp 0x6f08
0x6f98: xor esi,esi
0x6f9a: mov edi,ebx
0x6f9c: call 0x35a0
0x6fa1: jmp 0x6f43
0x6fa8: mov rax,qword ptr [rsp+0x88]
0x6fb0: xor rax,qword ptr fs:0x28
0x6fb9: jne 0x6fc5
0x6fbb: add rsp,0x98
0x6fc2: pop rbx
0x6fc3: pop rbp
0x6fc4: ret
0x6fc5: call 0x3420
0x6fd0: cmp byte ptr [rip+0x21a33b],0x0
0x6fd7: je 0x6ff0
0x6fd9: sub rsp,0x8
0x6fdd: mov edi,0x4
0x6fe2: call 0x5670
0x6fe7: test al,al
0x6fe9: jne 0x6ff8
0x6feb: add rsp,0x8
0x6fef: ret
0x6ff0: ret
0x6ff8: lea rdi,[rip+0x219061]
0x6fff: call 0x6e70
0x7004: lea rdi,[rip+0x219095]
0x700b: call 0x6e70
0x7010: lea rdi,[rip+0x219059]
0x7017: add rsp,0x8
0x701b: jmp 0x6e70
0x7020: push r15
0x7022: push r14
0x7024: mov r14,rdx
0x7027: push r13
0x7029: push r12
0x702b: mov r12,rsi
0x702e: push rbp
0x702f: push rbx
0x7030: mov ebx,ecx
0x7032: sub rsp,0x68
0x7036: mov r13,qword ptr [rdi]
0x7039: mov qword ptr [rsp+0x30],rdi
0x703e: mov rdi,rdx
0x7041: mov qword ptr [rsp+0x20],r8
0x7046: mov rcx,qword ptr fs:0x28
0x704f: mov qword ptr [rsp+0x58],rcx
0x7054: xor ecx,ecx
0x7056: mov qword ptr [rsp+0x38],r9
0x705b: call 0x13610
0x7060: cmp eax,0x2
0x7063: setbe al
0x7066: and al,byte ptr [rip+0x21a26c]
0x706c: mov byte ptr [rsp+0x2f],al
0x7070: jne 0x71d0
0x7076: xor r9d,r9d
0x7079: test ebx,ebx
0x707b: je 0x70f0
0x707d: mov r8,r14
0x7080: mov rcx,0xffffffffffffffff
0x7087: mov rdx,r12
0x708a: mov esi,0x2000
0x708f: mov rdi,r13
0x7092: mov dword ptr [rsp+0x8],r9d
0x7097: call 0x136e0
0x709c: cmp rax,0x1fff
0x70a2: mov rbx,rax
0x70a5: mov r9d,dword ptr [rsp+0x8]
0x70aa: ja 0x7438
0x70b0: movzx eax,byte ptr [r13]
0x70b5: mov byte ptr [rsp+0x2f],0x1
0x70ba: cmp byte ptr [r12],al
0x70be: jne 0x70da
0x70c0: mov rdi,r12
0x70c3: mov dword ptr [rsp+0x8],r9d
0x70c8: call 0x3400
0x70cd: mov r9d,dword ptr [rsp+0x8]
0x70d2: cmp rbx,rax
0x70d5: setne byte ptr [rsp+0x2f]
0x70da: test r9d,r9d
0x70dd: je 0x70fe
0x70df: mov rbp,rbx
0x70e2: jmp 0x7203
0x70f0: mov rdi,r12
0x70f3: mov r13,r12
0x70f6: call 0x3400
0x70fb: mov rbx,rax
0x70fe: cmp qword ptr [rsp+0x20],0x0
0x7104: je 0x71b8
0x710a: call 0x33f0
0x710f: cmp rax,0x1
0x7113: ja 0x7318
0x7119: lea r12,[r13+rbx]
0x711e: cmp r13,r12
0x7121: jae 0x7472
0x7127: call 0x3860
0x712c: xor ebp,ebp
0x712e: mov rcx,qword ptr [rax]
0x7131: mov rax,r13
0x7134: nop dword ptr [rax]
0x7138: movzx edx,byte ptr [rax]
0x713b: movzx edx,word ptr [rcx+rdx*2]
0x713f: and dx,0x4000
0x7144: cmp dx,0x1
0x7148: sbb rbp,0xffffffffffffffff
0x714c: add rax,0x1
0x7150: cmp r12,rax
0x7153: jne 0x7138
0x7155: movzx eax,byte ptr [rip+0x21a24c]
0x715c: test al,al
0x715e: je 0x7171
0x7160: movzx eax,byte ptr [rip+0x21a242]
0x7167: xor eax,0x1
0x716a: or al,byte ptr [rsp+0x2f]
0x716e: xor eax,0x1
0x7171: mov rcx,qword ptr [rsp+0x38]
0x7176: mov byte ptr [rcx],al
0x7178: mov rax,qword ptr [rsp+0x20]
0x717d: test rax,rax
0x7180: je 0x7185
0x7182: mov qword ptr [rax],rbp
0x7185: mov rax,qword ptr [rsp+0x30]
0x718a: mov qword ptr [rax],r13
0x718d: mov rax,rbx
0x7190: mov rbx,qword ptr [rsp+0x58]
0x7195: xor rbx,qword ptr fs:0x28
0x719e: jne 0x7479
0x71a4: add rsp,0x68
0x71a8: pop rbx
0x71a9: pop rbp
0x71aa: pop r12
0x71ac: pop r13
0x71ae: pop r14
0x71b0: pop r15
0x71b2: ret
0x71b8: cmp byte ptr [rip+0x21a1e9],0x0
0x71bf: jne 0x7160
0x71c1: mov rax,qword ptr [rsp+0x38]
0x71c6: mov byte ptr [rax],0x0
0x71c9: jmp 0x7185
0x71d0: test ebx,ebx
0x71d2: jne 0x747e
0x71d8: mov rdi,r12
0x71db: call 0x3400
0x71e0: cmp rax,0x1fff
0x71e6: mov rbp,rax
0x71e9: lea rdx,[rax+0x1]
0x71ed: ja 0x7418
0x71f3: mov rsi,r12
0x71f6: mov rdi,r13
0x71f9: call 0x35f0
0x71fe: mov byte ptr [rsp+0x2f],0x0
0x7203: lea rbx,[r13+rbp]
0x7208: call 0x33f0
0x720d: cmp rax,0x1
0x7211: mov qword ptr [rsp+0x8],rbx
0x7216: jbe 0x73d0
0x721c: cmp r13,rbx
0x721f: jae 0x7469
0x7225: lea rax,[rsp+0x4c]
0x722a: lea r12,[rsp+0x50]
0x722f: mov rbx,r13
0x7232: mov r15,r13
0x7235: xor ebp,ebp
0x7237: mov qword ptr [rsp+0x18],rax
0x723c: nop dword ptr [rax]
0x7240: movzx eax,byte ptr [r15]
0x7244: cmp al,0x3f
0x7246: jg 0x7370
0x724c: cmp al,0x25
0x724e: jge 0x7388
0x7254: lea edx,[rax-0x20]
0x7257: cmp dl,0x3
0x725a: jbe 0x7388
0x7260: mov qword ptr [rsp+0x50],0x0
0x7269: nop dword ptr [rax]
0x7270: mov rdx,qword ptr [rsp+0x8]
0x7275: mov rdi,qword ptr [rsp+0x18]
0x727a: mov rcx,r12
0x727d: mov rsi,r15
0x7280: lea r14,[rbx+0x1]
0x7284: sub rdx,r15
0x7287: call 0x15350
0x728c: cmp rax,0xffffffffffffffff
0x7290: je 0x73a0
0x7296: cmp rax,0xfffffffffffffffe
0x729a: je 0x73b8
0x72a0: test rax,rax
0x72a3: mov edi,dword ptr [rsp+0x4c]
0x72a7: mov qword ptr [rsp+0x10],rax
0x72ac: je 0x7350
0x72b2: call 0x3660
0x72b7: mov rdx,qword ptr [rsp+0x10]
0x72bc: test eax,eax
0x72be: lea rcx,[r15+rdx]
0x72c2: js 0x7340
0x72c4: mov rdi,rbx
0x72c7: nop word ptr [rax+rax]
0x72d0: mov rsi,r15
0x72d3: movsb byte ptr [rdi],byte ptr [rsi]
0x72d4: cmp rsi,rcx
0x72d7: mov r15,rsi
0x72da: jne 0x72d0
0x72dc: add rbx,rdx
0x72df: cdqe
0x72e1: add rbp,rax
0x72e4: mov rdi,r12
0x72e7: call 0x3820
0x72ec: test eax,eax
0x72ee: je 0x7270
0x72f0: cmp r15,qword ptr [rsp+0x8]
0x72f5: jb 0x7240
0x72fb: movzx eax,byte ptr [rip+0x21a0a6]
0x7302: sub rbx,r13
0x7305: test al,al
0x7307: je 0x7171
0x730d: jmp 0x7160
0x7318: xor edx,edx
0x731a: mov rsi,rbx
0x731d: mov rdi,r13
0x7320: call 0x10060
0x7325: movsxd rbp,eax
0x7328: movzx eax,byte ptr [rip+0x21a079]
0x732f: test al,al
0x7331: je 0x7171
0x7337: jmp 0x7160
0x7340: mov byte ptr [rbx],0x3f
0x7343: add rbp,0x1
0x7347: mov rbx,r14
0x734a: mov r15,rcx
0x734d: jmp 0x72e4
0x7350: call 0x3660
0x7355: test eax,eax
0x7357: lea rcx,[r15+0x1]
0x735b: js 0x7340
0x735d: movzx edx,byte ptr [r15]
0x7361: mov r15,rcx
0x7364: mov byte ptr [rbx],dl
0x7366: mov rbx,r14
0x7369: jmp 0x72df
0x7370: cmp al,0x41
0x7372: jl 0x7260
0x7378: cmp al,0x5f
0x737a: jle 0x7388
0x737c: lea edx,[rax-0x61]
0x737f: cmp dl,0x1d
0x7382: ja 0x7260
0x7388: mov byte ptr [rbx],al
0x738a: add r15,0x1
0x738e: add rbp,0x1
0x7392: add rbx,0x1
0x7396: jmp 0x72f0
0x73a0: add r15,0x1
0x73a4: mov byte ptr [rbx],0x3f
0x73a7: add rbp,0x1
0x73ab: mov rbx,r14
0x73ae: jmp 0x72f0
0x73b8: mov byte ptr [rbx],0x3f
0x73bb: add rbp,0x1
0x73bf: mov r15,qword ptr [rsp+0x8]
0x73c4: jmp 0x73ab
0x73d0: cmp r13,qword ptr [rsp+0x8]
0x73d5: jae 0x73fb
0x73d7: call 0x3860
0x73dc: mov rdx,r13
0x73df: nop
0x73e0: movzx esi,byte ptr [rdx]
0x73e3: mov rcx,qword ptr [rax]
0x73e6: test byte ptr [rcx+rsi*2+0x1],0x40
0x73eb: jne 0x73f0
0x73ed: mov byte ptr [rdx],0x3f
0x73f0: add rdx,0x1
0x73f4: cmp rdx,qword ptr [rsp+0x8]
0x73f9: jne 0x73e0
0x73fb: movzx eax,byte ptr [rip+0x219fa6]
0x7402: mov rbx,rbp
0x7405: test al,al
0x7407: je 0x7171
0x740d: jmp 0x7160
0x7418: mov rdi,rdx
0x741b: mov qword ptr [rsp+0x8],rdx
0x7420: call 0x14590
0x7425: mov rdx,qword ptr [rsp+0x8]
0x742a: mov r13,rax
0x742d: jmp 0x71f3
0x7438: lea r15,[rax+0x1]
0x743c: mov rdi,r15
0x743f: call 0x14590
0x7444: mov r8,r14
0x7447: mov rcx,0xffffffffffffffff
0x744e: mov rdx,r12
0x7451: mov rsi,r15
0x7454: mov rdi,rax
0x7457: mov r13,rax
0x745a: call 0x136e0
0x745f: mov r9d,dword ptr [rsp+0x8]
0x7464: jmp 0x70b0
0x7469: xor ebx,ebx
0x746b: xor ebp,ebp
0x746d: jmp 0x7155
0x7472: xor ebp,ebp
0x7474: jmp 0x7155
0x7479: call 0x3420
0x747e: mov r9d,0x1
0x7484: jmp 0x707d
0x7490: push r15
0x7492: push r14
0x7494: mov rax,rdi
0x7497: push r13
0x7499: push r12
0x749b: mov r14,rcx
0x749e: push rbp
0x749f: push rbx
0x74a0: mov rbx,r9
0x74a3: mov r15d,r8d
0x74a6: xor r8d,r8d
0x74a9: sub rsp,0x2048
0x74b0: mov qword ptr [rsp+0x0],rdi
0x74b4: lea r13,[rsp+0x30]
0x74b9: lea rdi,[rsp+0x28]
0x74be: lea r9,[rsp+0x27]
0x74c3: mov r12,qword ptr [rsp+0x2080]
0x74cb: mov rcx,qword ptr fs:0x28
0x74d4: mov qword ptr [rsp+0x2038],rcx
0x74dc: xor ecx,ecx
0x74de: mov ecx,edx
0x74e0: mov rdx,rsi
0x74e3: mov rsi,rax
0x74e6: mov qword ptr [rsp+0x28],r13
0x74eb: call 0x7020
0x74f0: cmp byte ptr [rsp+0x27],0x0
0x74f5: mov rbp,rax
0x74f8: je 0x7503
0x74fa: test r15b,r15b
0x74fd: jne 0x7758
0x7503: test r14,r14
0x7506: je 0x753a
0x7508: mov edi,0x4
0x750d: call 0x5670
0x7512: test al,al
0x7514: jne 0x77c8
0x751a: lea rdi,[rip+0x218b3f]
0x7521: call 0x6e70
0x7526: mov rdi,r14
0x7529: call 0x6e70
0x752e: lea rdi,[rip+0x218b3b]
0x7535: call 0x6e70
0x753a: test r12,r12
0x753d: je 0x7788
0x7543: movzx r14d,byte ptr [rip+0x219e5d]
0x754b: test r14b,r14b
0x754e: jne 0x7700
0x7554: mov r10,rbp
0x7557: xor r9d,r9d
0x755a: mov rdi,qword ptr [rip+0x219e27]
0x7561: xor esi,esi
0x7563: mov qword ptr [rsp+0x18],r10
0x7568: mov qword ptr [rsp+0x10],r9
0x756d: call 0x5b60
0x7572: mov esi,0x1
0x7577: mov rdi,r12
0x757a: mov r15,rax
0x757d: call 0x5b60
0x7582: cmp byte ptr [rax],0x2f
0x7585: mov r11,rax
0x7588: lea rcx,[rip+0x1063e]
0x758f: lea rax,[rip+0x1031d]
0x7596: lea rsi,[rip+0x102fc]
0x759d: mov r8,r11
0x75a0: mov rdx,r15
0x75a3: mov edi,0x1
0x75a8: mov qword ptr [rsp+0x8],r11
0x75ad: cmove rcx,rax
0x75b1: xor eax,eax
0x75b3: call 0x3710
0x75b8: mov rdi,r15
0x75bb: call 0x3880
0x75c0: mov r11,qword ptr [rsp+0x8]
0x75c5: mov rdi,r11
0x75c8: call 0x3880
0x75cd: test rbx,rbx
0x75d0: mov r9,qword ptr [rsp+0x10]
0x75d5: mov r10,qword ptr [rsp+0x18]
0x75da: je 0x779a
0x75e0: cmp byte ptr [rip+0x219d31],0x0
0x75e7: je 0x760d
0x75e9: mov rdx,qword ptr [rbx+0x18]
0x75ed: mov rax,qword ptr [rbx+0x20]
0x75f1: sub rax,rdx
0x75f4: cmp rax,0x7
0x75f8: jbe 0x77e8
0x75fe: mov rax,qword ptr [rip+0x219bf3]
0x7605: mov qword ptr [rdx],rax
0x7608: add qword ptr [rbx+0x18],0x8
0x760d: mov rdi,qword ptr [rsp+0x28]
0x7612: mov rcx,qword ptr [rip+0x218c6f]
0x7619: mov rdx,r10
0x761c: mov esi,0x1
0x7621: add rdi,r9
0x7624: call 0x36d0
0x7629: mov rax,qword ptr [rip+0x219bc8]
0x7630: add rax,rbp
0x7633: cmp byte ptr [rip+0x219cde],0x0
0x763a: mov qword ptr [rip+0x219bb7],rax
0x7641: je 0x7660
0x7643: mov rcx,qword ptr [rbx+0x18]
0x7647: mov rdx,qword ptr [rbx+0x20]
0x764b: sub rdx,rcx
0x764e: cmp rdx,0x7
0x7652: jbe 0x7818
0x7658: mov qword ptr [rcx],rax
0x765b: add qword ptr [rbx+0x18],0x8
0x7660: test r12,r12
0x7663: je 0x76b0
0x7665: mov rcx,qword ptr [rip+0x218c1c]
0x766c: lea rdi,[rip+0x1023a]
0x7673: mov edx,0x6
0x7678: mov esi,0x1
0x767d: call 0x36d0
0x7682: test r14b,r14b
0x7685: je 0x76b0
0x7687: mov rax,qword ptr [rsp+0x28]
0x768c: mov rdi,qword ptr [rip+0x218bf5]
0x7693: movzx edx,byte ptr [rax+rbp-0x1]
0x7698: mov rax,qword ptr [rdi+0x28]
0x769c: cmp rax,qword ptr [rdi+0x30]
0x76a0: jae 0x7850
0x76a6: lea rcx,[rax+0x1]
0x76aa: mov qword ptr [rdi+0x28],rcx
0x76ae: mov byte ptr [rax],dl
0x76b0: mov rdi,qword ptr [rsp+0x28]
0x76b5: cmp rdi,qword ptr [rsp+0x0]
0x76b9: je 0x76c5
0x76bb: cmp rdi,r13
0x76be: je 0x76c5
0x76c0: call 0x3880
0x76c5: movzx eax,byte ptr [rsp+0x27]
0x76ca: add rax,rbp
0x76cd: mov rbx,qword ptr [rsp+0x2038]
0x76d5: xor rbx,qword ptr fs:0x28
0x76de: jne 0x788c
0x76e4: add rsp,0x2048
0x76eb: pop rbx
0x76ec: pop rbp
0x76ed: pop r12
0x76ef: pop r13
0x76f1: pop r14
0x76f3: pop r15
0x76f5: ret
0x7700: movzx r14d,byte ptr [rip+0x219ca1]
0x7708: test r14b,r14b
0x770b: je 0x7554
0x7711: cmp byte ptr [rsp+0x27],0x0
0x7716: jne 0x7838
0x771c: mov rax,qword ptr [rsp+0x28]
0x7721: mov rdi,qword ptr [rip+0x218b60]
0x7728: lea r10,[rbp-0x2]
0x772c: movzx edx,byte ptr [rax]
0x772f: mov rax,qword ptr [rdi+0x28]
0x7733: cmp rax,qword ptr [rdi+0x30]
0x7737: jae 0x786f
0x773d: lea rcx,[rax+0x1]
0x7741: mov r9d,0x1
0x7747: mov qword ptr [rdi+0x28],rcx
0x774b: mov byte ptr [rax],dl
0x774d: jmp 0x755a
0x7758: mov rdi,qword ptr [rip+0x218b29]
0x775f: mov rax,qword ptr [rdi+0x28]
0x7763: cmp rax,qword ptr [rdi+0x30]
0x7767: jae 0x7860
0x776d: lea rdx,[rax+0x1]
0x7771: mov qword ptr [rdi+0x28],rdx
0x7775: mov byte ptr [rax],0x20
0x7778: add qword ptr [rip+0x219a78],0x1
0x7780: jmp 0x7503
0x7788: xor r9d,r9d
0x778b: xor r14d,r14d
0x778e: test rbx,rbx
0x7791: mov r10,rbp
0x7794: jne 0x75e0
0x779a: mov rdi,qword ptr [rsp+0x28]
0x779f: mov rcx,qword ptr [rip+0x218ae2]
0x77a6: mov rdx,r10
0x77a9: mov esi,0x1
0x77ae: add rdi,r9
0x77b1: call 0x36d0
0x77b6: add qword ptr [rip+0x219a3b],rbp
0x77bd: jmp 0x7660
0x77c8: lea rdi,[rip+0x218891]
0x77cf: call 0x6e70
0x77d4: lea rdi,[rip+0x218895]
0x77db: call 0x6e70
0x77e0: jmp 0x751a
0x77e8: mov esi,0x8
0x77ed: mov rdi,rbx
0x77f0: mov qword ptr [rsp+0x10],r10
0x77f5: mov qword ptr [rsp+0x8],r9
0x77fa: call 0x15530
0x77ff: mov rdx,qword ptr [rbx+0x18]
0x7803: mov r10,qword ptr [rsp+0x10]
0x7808: mov r9,qword ptr [rsp+0x8]
0x780d: jmp 0x75fe
0x7818: mov esi,0x8
0x781d: mov rdi,rbx
0x7820: call 0x15530
0x7825: mov rcx,qword ptr [rbx+0x18]
0x7829: mov rax,qword ptr [rip+0x2199c8]
0x7830: jmp 0x7658
0x7838: mov r10,rbp
0x783b: xor r9d,r9d
0x783e: xor r14d,r14d
0x7841: jmp 0x755a
0x7850: movzx esi,dl
0x7853: call 0x3490
0x7858: jmp 0x76b0
0x7860: mov esi,0x20
0x7865: call 0x3490
0x786a: jmp 0x7778
0x786f: movzx esi,dl
0x7872: mov qword ptr [rsp+0x8],r10
0x7877: call 0x3490
0x787c: mov r9d,0x1
0x7882: mov r10,qword ptr [rsp+0x8]
0x7887: jmp 0x755a
0x788c: call 0x3420
0x78a0: push r15
0x78a2: push r14
0x78a4: mov r15d,esi
0x78a7: push r13
0x78a9: push r12
0x78ab: mov r14,rdi
0x78ae: push rbp
0x78af: push rbx
0x78b0: mov r13,rdx
0x78b3: mov r12,rcx
0x78b6: sub rsp,0x18
0x78ba: test sil,sil
0x78bd: movzx eax,byte ptr [rip+0x219a4e]
0x78c4: je 0x7920
0x78c6: test al,al
0x78c8: mov rbp,qword ptr [rdi+0x8]
0x78cc: jne 0x7a48
0x78d2: mov edx,dword ptr [r14+0xc4]
0x78d9: mov rsi,qword ptr [rip+0x2199f0]
0x78e0: sub rsp,0x8
0x78e4: xor r15d,0x1
0x78e8: push qword ptr [r14+0x10]
0x78ec: mov r9,r13
0x78ef: movzx r8d,r15b
0x78f3: xor ecx,ecx
0x78f5: mov rdi,rbp
0x78f8: call 0x7490
0x78fd: mov rbx,rax
0x7900: call 0x6ee0
0x7905: pop rax
0x7906: pop rdx
0x7907: add rsp,0x18
0x790b: mov rax,rbx
0x790e: pop rbx
0x790f: pop rbp
0x7910: pop r12
0x7912: pop r13
0x7914: pop r14
0x7916: pop r15
0x7918: ret
0x7920: test al,al
0x7922: mov rbp,qword ptr [rdi]
0x7925: je 0x78d2
0x7927: cmp byte ptr [rip+0x219a62],0x0
0x792e: movzx edx,byte ptr [rdi+0xb9]
0x7935: jne 0x7b08
0x793b: mov r8d,dword ptr [r14+0x30]
0x793f: movzx ecx,byte ptr [r14+0xb8]
0x7947: test cl,cl
0x7949: jne 0x7a92
0x794f: mov ecx,dword ptr [r14+0xa8]
0x7956: lea rax,[rip+0xed23]
0x795d: mov eax,dword ptr [rax+rcx*4]
0x7960: cmp eax,0x7
0x7963: sete cl
0x7966: cmp eax,0x5
0x7969: je 0x7b20
0x796f: test edx,edx
0x7971: jne 0x7cec
0x7977: test cl,cl
0x7979: je 0x7cec
0x797f: cmp byte ptr [rip+0x219a0a],0x0
0x7986: mov ecx,0xd0
0x798b: jne 0x79a7
0x798d: mov edi,0xd
0x7992: call 0x5670
0x7997: cmp al,0x1
0x7999: sbb rcx,rcx
0x799c: and rcx,0xffffffffffffffa0
0x79a0: add rcx,0xd0
0x79a7: lea rbx,[rip+0x2186b2]
0x79ae: add rcx,rbx
0x79b1: cmp qword ptr [rcx+0x8],0x0
0x79b6: jne 0x79cc
0x79b8: mov edi,0x4
0x79bd: call 0x5670
0x79c2: test al,al
0x79c4: je 0x78d2
0x79ca: xor ecx,ecx
0x79cc: mov rsi,qword ptr [rip+0x2198fd]
0x79d3: mov edx,dword ptr [r14+0xc4]
0x79da: sub rsp,0x8
0x79de: xor r15d,0x1
0x79e2: push qword ptr [r14+0x10]
0x79e6: mov rdi,rbp
0x79e9: mov r9,r13
0x79ec: movzx r8d,r15b
0x79f0: call 0x7490
0x79f5: mov rbx,rax
0x79f8: call 0x6ee0
0x79fd: call 0x6e20
0x7a02: mov rcx,qword ptr [rip+0x2198a7]
0x7a09: pop rsi
0x7a0a: pop rdi
0x7a0b: test rcx,rcx
0x7a0e: je 0x7907
0x7a14: xor edx,edx
0x7a16: mov rax,r12
0x7a19: div rcx
0x7a1c: xor edx,edx
0x7a1e: mov rsi,rax
0x7a21: lea rax,[rbx+r12-0x1]
0x7a26: div rcx
0x7a29: cmp rsi,rax
0x7a2c: je 0x7907
0x7a32: lea rdi,[rip+0x218797]
0x7a39: call 0x6e70
0x7a3e: jmp 0x7907
0x7a48: cmp byte ptr [rdi+0xb9],0x0
0x7a4f: mov r8d,dword ptr [rdi+0xac]
0x7a56: jne 0x7a80
0x7a58: mov edi,0xc
0x7a5d: call 0x5670
0x7a62: test al,al
0x7a64: mov edx,0xffffffff
0x7a69: je 0x793f
0x7a6f: mov ecx,0xc0
0x7a74: jmp 0x79a7
0x7a80: movzx ecx,byte ptr [r14+0xb8]
0x7a88: xor edx,edx
0x7a8a: test cl,cl
0x7a8c: je 0x794f
0x7a92: mov eax,r8d
0x7a95: and eax,0xf000
0x7a9a: cmp eax,0x8000
0x7a9f: je 0x7b90
0x7aa5: cmp eax,0x4000
0x7aaa: je 0x7c10
0x7ab0: cmp eax,0xa000
0x7ab5: je 0x7c70
0x7abb: cmp eax,0x1000
0x7ac0: mov ecx,0x80
0x7ac5: je 0x79a7
0x7acb: cmp eax,0xc000
0x7ad0: mov ecx,0x90
0x7ad5: je 0x79a7
0x7adb: cmp eax,0x6000
0x7ae0: mov ecx,0xa0
0x7ae5: je 0x79a7
0x7aeb: cmp eax,0x2000
0x7af0: mov ecx,0xd0
0x7af5: mov ebx,0xb0
0x7afa: cmove rcx,rbx
0x7afe: jmp 0x79a7
0x7b08: test dl,dl
0x7b0a: je 0x793b
0x7b10: mov r8d,dword ptr [r14+0xac]
0x7b17: jmp 0x793f
0x7b20: mov rdi,rbp
0x7b23: call 0x3400
0x7b28: mov rbx,qword ptr [rip+0x2197d9]
0x7b2f: mov rcx,rax
0x7b32: test rbx,rbx
0x7b35: je 0x7b71
0x7b37: nop word ptr [rax+rax]
0x7b40: mov rdx,qword ptr [rbx]
0x7b43: cmp rcx,rdx
0x7b46: jb 0x7b68
0x7b48: mov rdi,rcx
0x7b4b: mov rsi,qword ptr [rbx+0x8]
0x7b4f: mov qword ptr [rsp+0x8],rcx
0x7b54: sub rdi,rdx
0x7b57: add rdi,rbp
0x7b5a: call 0xc4d0
0x7b5f: test eax,eax
0x7b61: mov rcx,qword ptr [rsp+0x8]
0x7b66: je 0x7b80
0x7b68: mov rbx,qword ptr [rbx+0x20]
0x7b6c: test rbx,rbx
0x7b6f: jne 0x7b40
0x7b71: mov ecx,0x50
0x7b76: jmp 0x79a7
0x7b80: lea rcx,[rbx+0x10]
0x7b84: jmp 0x79b1
0x7b90: test r8d,0x800
0x7b97: je 0x7bb8
0x7b99: mov edi,0x10
0x7b9e: call 0x5670
0x7ba3: test al,al
0x7ba5: je 0x7bb8
0x7ba7: mov ecx,0x100
0x7bac: jmp 0x79a7
0x7bb8: test r8d,0x400
0x7bbf: jne 0x7bf0
0x7bc1: mov edi,0x15
0x7bc6: call 0x5670
0x7bcb: test al,al
0x7bcd: je 0x7c80
0x7bd3: cmp byte ptr [r14+0xc0],0x0
0x7bdb: je 0x7c80
0x7be1: mov ecx,0x150
0x7be6: jmp 0x79a7
0x7bf0: mov edi,0x11
0x7bf5: call 0x5670
0x7bfa: test al,al
0x7bfc: je 0x7bc1
0x7bfe: mov ecx,0x110
0x7c03: jmp 0x79a7
0x7c10: mov eax,r8d
0x7c13: and eax,0x202
0x7c18: cmp eax,0x202
0x7c1d: je 0x7cd0
0x7c23: test r8b,0x2
0x7c27: je 0x7c40
0x7c29: mov edi,0x13
0x7c2e: call 0x5670
0x7c33: test al,al
0x7c35: mov ecx,0x130
0x7c3a: jne 0x79a7
0x7c40: and r8d,0x200
0x7c47: mov ecx,0x60
0x7c4c: je 0x79a7
0x7c52: mov edi,0x12
0x7c57: call 0x5670
0x7c5c: cmp al,0x1
0x7c5e: sbb rcx,rcx
0x7c61: and cl,0x40
0x7c64: add rcx,0x120
0x7c6b: jmp 0x79a7
0x7c70: mov eax,0x7
0x7c75: jmp 0x796f
0x7c80: and r8d,0x49
0x7c84: je 0x7ca0
0x7c86: mov edi,0xe
0x7c8b: call 0x5670
0x7c90: test al,al
0x7c92: je 0x7ca0
0x7c94: mov ecx,0xe0
0x7c99: jmp 0x79a7
0x7ca0: cmp qword ptr [r14+0x28],0x1
0x7ca5: jbe 0x7b20
0x7cab: mov edi,0x16
0x7cb0: call 0x5670
0x7cb5: test al,al
0x7cb7: je 0x7b20
0x7cbd: mov ecx,0x160
0x7cc2: jmp 0x79a7
0x7cd0: mov edi,0x14
0x7cd5: call 0x5670
0x7cda: test al,al
0x7cdc: mov ecx,0x140
0x7ce1: jne 0x79a7
0x7ce7: jmp 0x7c23
0x7cec: shl rax,0x4
0x7cf0: mov rcx,rax
0x7cf3: jmp 0x79a7
0x7d00: push rbp
0x7d01: push rbx
0x7d02: mov rbp,rsi
0x7d05: mov rbx,rdi
0x7d08: sub rsp,0x2a8
0x7d0f: mov rax,qword ptr fs:0x28
0x7d18: mov qword ptr [rsp+0x298],rax
0x7d20: xor eax,eax
0x7d22: call 0x6fd0
0x7d27: cmp byte ptr [rip+0x2195ce],0x0
0x7d2e: je 0x7d71
0x7d30: cmp byte ptr [rbx+0xb8],0x0
0x7d37: lea rcx,[rip+0xfb59]
0x7d3e: je 0x7d4d
0x7d40: mov rdi,qword ptr [rbx+0x20]
0x7d44: test rdi,rdi
0x7d47: jne 0x7e78
0x7d4d: xor edx,edx
0x7d4f: cmp dword ptr [rip+0x2195e2],0x4
0x7d56: je 0x7d5e
0x7d58: mov edx,dword ptr [rip+0x219602]
0x7d5e: lea rsi,[rip+0xfb5f]
0x7d65: mov edi,0x1
0x7d6a: xor eax,eax
0x7d6c: call 0x3710
0x7d71: cmp byte ptr [rip+0x2195b4],0x0
0x7d78: je 0x7db2
0x7d7a: cmp byte ptr [rbx+0xb8],0x0
0x7d81: lea rcx,[rip+0xfb0f]
0x7d88: jne 0x7e40
0x7d8e: xor edx,edx
0x7d90: cmp dword ptr [rip+0x2195a1],0x4
0x7d97: je 0x7d9f
0x7d99: mov edx,dword ptr [rip+0x2195bd]
0x7d9f: lea rsi,[rip+0xfb1e]
0x7da6: mov edi,0x1
0x7dab: xor eax,eax
0x7dad: call 0x3710
0x7db2: cmp byte ptr [rip+0x2195ac],0x0
0x7db9: je 0x7de6
0x7dbb: xor edx,edx
0x7dbd: cmp dword ptr [rip+0x219574],0x4
0x7dc4: mov rcx,qword ptr [rbx+0xb0]
0x7dcb: je 0x7dd3
0x7dcd: mov edx,dword ptr [rip+0x219581]
0x7dd3: lea rsi,[rip+0xfaea]
0x7dda: mov edi,0x1
0x7ddf: xor eax,eax
0x7de1: call 0x3710
0x7de6: mov rcx,rbp
0x7de9: xor edx,edx
0x7deb: xor esi,esi
0x7ded: mov rdi,rbx
0x7df0: call 0x78a0
0x7df5: mov rbp,rax
0x7df8: mov eax,dword ptr [rip+0x219516]
0x7dfe: test eax,eax
0x7e00: je 0x7e1d
0x7e02: movzx edi,byte ptr [rbx+0xb8]
0x7e09: mov edx,dword ptr [rbx+0xa8]
0x7e0f: mov esi,dword ptr [rbx+0x30]
0x7e12: call 0x6930
0x7e17: movzx eax,al
0x7e1a: add rbp,rax
0x7e1d: mov rbx,qword ptr [rsp+0x298]
0x7e25: xor rbx,qword ptr fs:0x28
0x7e2e: mov rax,rbp
0x7e31: jne 0x7e88
0x7e33: add rsp,0x2a8
0x7e3a: pop rbx
0x7e3b: pop rbp
0x7e3c: ret
0x7e40: mov edx,dword ptr [rip+0x2194e2]
0x7e46: mov rdi,qword ptr [rbx+0x58]
0x7e4a: mov ecx,0x200
0x7e4f: mov r8,qword ptr [rip+0x2194ca]
0x7e56: mov rsi,rsp
0x7e59: call 0xebc0
0x7e5e: xor edx,edx
0x7e60: cmp dword ptr [rip+0x2194d1],0x4
0x7e67: mov rcx,rax
0x7e6a: jne 0x7d99
0x7e70: jmp 0x7d9f
0x7e78: mov rsi,rsp
0x7e7b: call 0xfba0
0x7e80: mov rcx,rax
0x7e83: jmp 0x7d4d
0x7e88: call 0x3420
0x7e90: push r15
0x7e92: push r14
0x7e94: push r13
0x7e96: push r12
0x7e98: push rbp
0x7e99: push rbx
0x7e9a: mov rbp,rdi
0x7e9d: sub rsp,0x1328
0x7ea4: mov rax,qword ptr fs:0x28
0x7ead: mov qword ptr [rsp+0x1318],rax
0x7eb5: xor eax,eax
0x7eb7: cmp byte ptr [rdi+0xb8],0x0
0x7ebe: je 0x8280
0x7ec4: lea r13,[rsp+0xb4]
0x7ecc: lea rdi,[rdi+0x18]
0x7ed0: mov rsi,r13
0x7ed3: call 0xd050
0x7ed8: cmp byte ptr [rip+0x219485],0x0
0x7edf: jne 0x82d2
0x7ee5: mov byte ptr [rsp+0xbe],0x0
0x7eed: mov eax,dword ptr [rip+0x219441]
0x7ef3: cmp eax,0x1
0x7ef6: je 0x8308
0x7efc: jb 0x8348
0x7f02: cmp eax,0x2
0x7f05: jne 0x8868
0x7f0b: mov rax,qword ptr [rbp+0x68]
0x7f0f: mov rdx,qword ptr [rbp+0x60]
0x7f13: mov qword ptr [rsp+0x28],rax
0x7f18: mov qword ptr [rsp+0x20],rdx
0x7f1d: cmp byte ptr [rip+0x2193d8],0x0
0x7f24: movzx edx,byte ptr [rbp+0xb8]
0x7f2b: je 0x8334
0x7f31: test dl,dl
0x7f33: lea r9,[rip+0xf95d]
0x7f3a: je 0x7f49
0x7f3c: mov rdi,qword ptr [rbp+0x20]
0x7f40: test rdi,rdi
0x7f43: jne 0x8608
0x7f49: lea r12,[rsp+0x4d0]
0x7f51: mov r8d,dword ptr [rip+0x219408]
0x7f58: lea rcx,[rip+0xf965]
0x7f5f: mov edx,0xe3b
0x7f64: mov esi,0x1
0x7f69: xor eax,eax
0x7f6b: mov rdi,r12
0x7f6e: mov rbx,r12
0x7f71: call 0x3870
0x7f76: mov eax,dword ptr [rbx]
0x7f78: add rbx,0x4
0x7f7c: lea edx,[rax-0x1010101]
0x7f82: not eax
0x7f84: and edx,eax
0x7f86: and edx,0x80808080
0x7f8c: je 0x7f76
0x7f8e: mov eax,edx
0x7f90: shr eax,0x10
0x7f93: test edx,0x8080
0x7f99: cmove edx,eax
0x7f9c: lea rax,[rbx+0x2]
0x7fa0: cmove rbx,rax
0x7fa4: mov eax,edx
0x7fa6: add al,dl
0x7fa8: movzx edx,byte ptr [rbp+0xb8]
0x7faf: sbb rbx,0x3
0x7fb3: cmp byte ptr [rip+0x219372],0x0
0x7fba: je 0x8037
0x7fbc: test dl,dl
0x7fbe: lea r15,[rip+0xf8d2]
0x7fc5: jne 0x8680
0x7fcb: mov r14d,dword ptr [rip+0x21938a]
0x7fd2: xor esi,esi
0x7fd4: mov rdi,r15
0x7fd7: call 0x10220
0x7fdc: sub r14d,eax
0x7fdf: test r14d,r14d
0x7fe2: mov eax,r14d
0x7fe5: jle 0x8500
0x7feb: sub eax,0x1
0x7fee: mov rdx,rax
0x7ff1: lea rcx,[rbx+rax+0x1]
0x7ff6: mov rax,rbx
0x7ff9: nop dword ptr [rax]
0x8000: add rax,0x1
0x8004: mov byte ptr [rax-0x1],0x20
0x8008: cmp rcx,rax
0x800b: jne 0x8000
0x800d: movsxd rax,edx
0x8010: lea rdx,[rbx+rax+0x1]
0x8015: add r15,0x1
0x8019: movzx eax,byte ptr [r15-0x1]
0x801e: lea rbx,[rdx+0x1]
0x8022: test al,al
0x8024: mov byte ptr [rbx-0x1],al
0x8027: jne 0x8500
0x802d: mov byte ptr [rdx],0x20
0x8030: movzx edx,byte ptr [rbp+0xb8]
0x8037: test dl,dl
0x8039: lea rax,[rip+0xf857]
0x8040: jne 0x84e8
0x8046: sub rsp,0x8
0x804a: mov r9d,dword ptr [rip+0x219307]
0x8051: lea rcx,[rip+0xf85c]
0x8058: push rax
0x8059: mov r8,r13
0x805c: mov rdi,rbx
0x805f: mov rdx,0xffffffffffffffff
0x8066: mov esi,0x1
0x806b: xor eax,eax
0x806d: call 0x3870
0x8072: mov rdi,rbx
0x8075: call 0x3400
0x807a: add rbx,rax
0x807d: cmp byte ptr [rip+0x219294],0x0
0x8084: pop r8
0x8086: pop r9
0x8088: jne 0x84b8
0x808e: cmp byte ptr [rip+0x217f8c],0x0
0x8095: jne 0x80b0
0x8097: cmp byte ptr [rip+0x217f82],0x0
0x809e: jne 0x80b0
0x80a0: cmp byte ptr [rip+0x219287],0x0
0x80a7: je 0x85f0
0x80ad: nop dword ptr [rax]
0x80b0: mov rsi,qword ptr [rip+0x2181d1]
0x80b7: mov rdi,r12
0x80ba: sub rbx,r12
0x80bd: call 0x3570
0x80c2: add qword ptr [rip+0x21912f],rbx
0x80c9: cmp byte ptr [rip+0x217f51],0x0
0x80d0: jne 0x85a0
0x80d6: cmp byte ptr [rip+0x217f43],0x0
0x80dd: jne 0x8550
0x80e3: cmp byte ptr [rip+0x219244],0x0
0x80ea: jne 0x8530
0x80f0: cmp byte ptr [rip+0x21926e],0x0
0x80f7: mov rbx,r12
0x80fa: jne 0x8510
0x8100: cmp byte ptr [rbp+0xb8],0x0
0x8107: je 0x8360
0x810d: mov eax,dword ptr [rbp+0x30]
0x8110: and eax,0xb000
0x8115: cmp eax,0x2000
0x811a: je 0x86b0
0x8120: mov rdi,qword ptr [rbp+0x48]
0x8124: mov r8,qword ptr [rip+0x217eed]
0x812b: lea rsi,[rsp+0xe0]
0x8133: mov edx,dword ptr [rip+0x2191e3]
0x8139: mov ecx,0x1
0x813e: call 0xebc0
0x8143: mov r14,rax
0x8146: mov r13d,dword ptr [rip+0x2191ef]
0x814d: xor esi,esi
0x814f: mov rdi,r14
0x8152: call 0x10220
0x8157: sub r13d,eax
0x815a: test r13d,r13d
0x815d: mov eax,r13d
0x8160: jle 0x8185
0x8162: sub eax,0x1
0x8165: mov rdx,rax
0x8168: lea rcx,[rbx+rax+0x1]
0x816d: mov rax,rbx
0x8170: add rax,0x1
0x8174: mov byte ptr [rax-0x1],0x20
0x8178: cmp rax,rcx
0x817b: jne 0x8170
0x817d: movsxd rax,edx
0x8180: lea rbx,[rbx+rax+0x1]
0x8185: add r14,0x1
0x8189: movzx eax,byte ptr [r14-0x1]
0x818e: lea r13,[rbx+0x1]
0x8192: test al,al
0x8194: mov byte ptr [r13-0x1],al
0x8198: jne 0x8370
0x819e: mov byte ptr [rbx],0x20
0x81a1: mov byte ptr [r13],0x1
0x81a6: cmp byte ptr [rbp+0xb8],0x0
0x81ad: lea rbx,[rip+0xf6e3]
0x81b4: jne 0x83f0
0x81ba: mov r8d,dword ptr [rip+0x217e53]
0x81c1: test r8d,r8d
0x81c4: js 0x8780
0x81ca: lea rcx,[rip+0xf6f3]
0x81d1: mov r9,rbx
0x81d4: mov rdx,0xffffffffffffffff
0x81db: mov esi,0x1
0x81e0: mov rdi,r13
0x81e3: xor eax,eax
0x81e5: call 0x3870
0x81ea: mov rdi,r13
0x81ed: call 0x3400
0x81f2: lea rbx,[r13+rax]
0x81f7: mov rsi,qword ptr [rip+0x21808a]
0x81fe: mov rdi,r12
0x8201: sub rbx,r12
0x8204: call 0x3570
0x8209: lea rdx,[rip+0x218f90]
0x8210: xor esi,esi
0x8212: mov rcx,rbx
0x8215: mov rdi,rbp
0x8218: add qword ptr [rip+0x218fd9],rbx
0x821f: call 0x78a0
0x8224: mov edx,dword ptr [rbp+0xa8]
0x822a: mov r12,rax
0x822d: cmp edx,0x6
0x8230: je 0x8380
0x8236: mov eax,dword ptr [rip+0x2190d8]
0x823c: test eax,eax
0x823e: je 0x824f
0x8240: movzx edi,byte ptr [rbp+0xb8]
0x8247: mov esi,dword ptr [rbp+0x30]
0x824a: call 0x6930
0x824f: mov rax,qword ptr [rsp+0x1318]
0x8257: xor rax,qword ptr fs:0x28
0x8260: jne 0x8863
0x8266: add rsp,0x1328
0x826d: pop rbx
0x826e: pop rbp
0x826f: pop r12
0x8271: pop r13
0x8273: pop r14
0x8275: pop r15
0x8277: ret
0x8280: mov eax,dword ptr [rdi+0xa8]
0x8286: lea rdx,[rip+0xe4e3]
0x828d: cmp byte ptr [rip+0x2190d0],0x0
0x8294: lea r13,[rsp+0xb4]
0x829c: mov r10d,0x3f3f
0x82a2: movzx eax,byte ptr [rdx+rax]
0x82a6: mov byte ptr [rsp+0xb4],al
0x82ad: movabs rax,0x3f3f3f3f3f3f3f3f
0x82b7: mov qword ptr [rsp+0xb5],rax
0x82bf: mov word ptr [r13+0x9],r10w
0x82c4: mov byte ptr [rsp+0xbf],0x0
0x82cc: je 0x7ee5
0x82d2: mov eax,dword ptr [rbp+0xbc]
0x82d8: cmp eax,0x1
0x82db: je 0x85e0
0x82e1: cmp eax,0x2
0x82e4: jne 0x7eed
0x82ea: mov eax,dword ptr [rip+0x219044]
0x82f0: mov byte ptr [rsp+0xbe],0x2b
0x82f8: cmp eax,0x1
0x82fb: jne 0x7efc
0x8301: nop dword ptr [rax]
0x8308: cmp byte ptr [rip+0x218fed],0x0
0x830f: mov rdx,qword ptr [rbp+0x80]
0x8316: mov rax,qword ptr [rbp+0x88]
0x831d: mov qword ptr [rsp+0x20],rdx
0x8322: movzx edx,byte ptr [rbp+0xb8]
0x8329: mov qword ptr [rsp+0x28],rax
0x832e: jne 0x7f31
0x8334: lea r12,[rsp+0x4d0]
0x833c: mov rbx,r12
0x833f: jmp 0x7fb3
0x8348: mov rax,qword ptr [rbp+0x78]
0x834c: mov rdx,qword ptr [rbp+0x70]
0x8350: mov qword ptr [rsp+0x28],rax
0x8355: mov qword ptr [rsp+0x20],rdx
0x835a: jmp 0x7f1d
0x8360: lea r14,[rip+0xf530]
0x8367: jmp 0x8146
0x8370: mov rbx,r13
0x8373: jmp 0x8185
0x8380: cmp qword ptr [rbp+0x8],0x0
0x8385: je 0x824f
0x838b: mov rcx,qword ptr [rip+0x217ef6]
0x8392: lea rdi,[rip+0xf530]
0x8399: mov edx,0x4
0x839e: mov esi,0x1
0x83a3: call 0x36d0
0x83a8: lea rcx,[rbx+r12+0x4]
0x83ad: xor edx,edx
0x83af: mov esi,0x1
0x83b4: mov rdi,rbp
0x83b7: add qword ptr [rip+0x218e39],0x4
0x83bf: call 0x78a0
0x83c4: mov edx,dword ptr [rip+0x218f4a]
0x83ca: test edx,edx
0x83cc: je 0x824f
0x83d2: mov esi,dword ptr [rbp+0xac]
0x83d8: xor edx,edx
0x83da: mov edi,0x1
0x83df: call 0x6930
0x83e4: jmp 0x824f
0x83f0: lea rbx,[rsp+0x30]
0x83f5: mov rdi,qword ptr [rip+0x218eac]
0x83fc: lea rsi,[rsp+0x20]
0x8401: mov rdx,rbx
0x8404: call 0x15a80
0x8409: test rax,rax
0x840c: je 0x85c0
0x8412: mov rcx,qword ptr [rip+0x218f57]
0x8419: mov rdx,qword ptr [rsp+0x20]
0x841e: cmp rcx,rdx
0x8421: jl 0x8620
0x8427: mov rdi,qword ptr [rip+0x218f4a]
0x842e: mov r9,qword ptr [rsp+0x28]
0x8433: jg 0x8800
0x8439: cmp edi,r9d
0x843c: js 0x8620
0x8442: lea rax,[rcx-0xf0c2ac]
0x8449: cmp rax,rdx
0x844c: jl 0x866d
0x8452: mov eax,0x0
0x8457: jle 0x8820
0x845d: nop dword ptr [rax]
0x8460: cmp byte ptr [rip+0x217f61],0x0
0x8467: mov r8,qword ptr [rip+0x218e3a]
0x846e: je 0x8770
0x8474: lea rdx,[rax+rax]
0x8478: add rax,rdx
0x847b: movsxd rdx,dword ptr [rsp+0x40]
0x8480: lea rdx,[rdx+rax*4]
0x8484: lea rax,[rip+0x217f55]
0x848b: shl rdx,0x7
0x848f: add rdx,rax
0x8492: mov rcx,rbx
0x8495: mov esi,0x3e9
0x849a: mov rdi,r13
0x849d: call 0x12000
0x84a2: test rax,rax
0x84a5: je 0x85c0
0x84ab: add r13,rax
0x84ae: jmp 0x85cb
0x84b8: mov rcx,qword ptr [rip+0x217dc9]
0x84bf: lea rdi,[rip+0xf3f6]
0x84c6: mov edx,0x2
0x84cb: mov esi,0x1
0x84d0: call 0x36d0
0x84d5: add qword ptr [rip+0x218d1b],0x2
0x84dd: jmp 0x808e
0x84e8: mov rdi,qword ptr [rbp+0x28]
0x84ec: lea rsi,[rsp+0xe0]
0x84f4: call 0xfba0
0x84f9: jmp 0x8046
0x8500: mov rdx,rbx
0x8503: jmp 0x8015
0x8510: mov rdi,qword ptr [rbp+0xb0]
0x8517: mov edx,dword ptr [rip+0x218e37]
0x851d: xor esi,esi
0x851f: call 0x61e0
0x8524: jmp 0x8100
0x8530: movzx edx,byte ptr [rbp+0xb8]
0x8537: mov edi,dword ptr [rbp+0x34]
0x853a: mov esi,dword ptr [rip+0x218e08]
0x8540: call 0x62a0
0x8545: jmp 0x80f0
0x8550: cmp byte ptr [rbp+0xb8],0x0
0x8557: mov edx,dword ptr [rip+0x218def]
0x855d: lea rdi,[rip+0xf333]
0x8564: mov esi,dword ptr [rbp+0x38]
0x8567: je 0x8590
0x8569: xor edi,edi
0x856b: cmp byte ptr [rip+0x218dbb],0x0
0x8572: jne 0x8590
0x8574: mov edi,esi
0x8576: mov qword ptr [rsp+0x8],rsi
0x857b: mov dword ptr [rsp+0x4],edx
0x857f: call 0xf960
0x8584: mov rsi,qword ptr [rsp+0x8]
0x8589: mov edx,dword ptr [rsp+0x4]
0x858d: mov rdi,rax
0x8590: call 0x61e0
0x8595: jmp 0x80e3
0x85a0: movzx edx,byte ptr [rbp+0xb8]
0x85a7: mov edi,dword ptr [rbp+0x34]
0x85aa: mov esi,dword ptr [rip+0x218da0]
0x85b0: call 0x62a0
0x85b5: jmp 0x80d6
0x85c0: cmp byte ptr [r13],0x0
0x85c5: jne 0x886d
0x85cb: mov ecx,0x20
0x85d0: lea rbx,[r13+0x1]
0x85d4: mov word ptr [r13],cx
0x85d9: jmp 0x81f7
0x85e0: mov byte ptr [rsp+0xbe],0x2e
0x85e8: jmp 0x7eed
0x85f0: cmp byte ptr [rip+0x218d6e],0x0
0x85f7: je 0x8100
0x85fd: jmp 0x80b0
0x8608: lea rsi,[rsp+0xe0]
0x8610: call 0xfba0
0x8615: mov r9,rax
0x8618: jmp 0x7f49
0x8620: lea rdi,[rip+0x218d49]
0x8627: call 0xd680
0x862c: mov rcx,qword ptr [rip+0x218d3d]
0x8633: mov rdx,qword ptr [rsp+0x20]
0x8638: mov rdi,qword ptr [rip+0x218d39]
0x863f: mov r9,qword ptr [rsp+0x28]
0x8644: lea rsi,[rcx-0xf0c2ac]
0x864b: cmp rsi,rdx
0x864e: jge 0x8815
0x8654: cmp rdx,rcx
0x8657: mov eax,0x1
0x865c: jl 0x8460
0x8662: mov eax,0x0
0x8667: jg 0x8460
0x866d: mov eax,r9d
0x8670: sub eax,edi
0x8672: shr eax,0x1f
0x8675: jmp 0x8460
0x8680: mov rdi,qword ptr [rbp+0x58]
0x8684: mov r8,qword ptr [rip+0x218c95]
0x868b: lea rsi,[rsp+0xe0]
0x8693: mov edx,dword ptr [rip+0x218c8f]
0x8699: mov ecx,0x200
0x869e: call 0xebc0
0x86a3: mov r15,rax
0x86a6: jmp 0x7fcb
0x86b0: mov edx,dword ptr [rip+0x218c8e]
0x86b6: mov eax,dword ptr [rip+0x218c84]
0x86bc: lea rsi,[rsp+0xe0]
0x86c4: mov r13d,dword ptr [rip+0x218c71]
0x86cb: lea eax,[rdx+rax+0x2]
0x86cf: sub r13d,eax
0x86d2: mov rax,qword ptr [rbp+0x40]
0x86d6: movzx edx,al
0x86d9: shr rax,0xc
0x86dd: mov rdi,rax
0x86e0: xor dil,dil
0x86e3: or edi,edx
0x86e5: call 0xfba0
0x86ea: mov r15,rax
0x86ed: mov rax,qword ptr [rbp+0x40]
0x86f1: lea rsi,[rsp+0xc0]
0x86f9: mov r14d,dword ptr [rip+0x218c40]
0x8700: mov rdi,rax
0x8703: shr rax,0x20
0x8707: shr rdi,0x8
0x870b: mov edx,edi
0x870d: mov rdi,rax
0x8710: and edx,0xfff
0x8716: and edi,0xfffff000
0x871c: or edi,edx
0x871e: call 0xfba0
0x8723: test r13d,r13d
0x8726: mov r8d,0x0
0x872c: push r15
0x872e: cmovns r8d,r13d
0x8732: add r8d,dword ptr [rip+0x218c0b]
0x8739: push r14
0x873b: lea rcx,[rip+0xf17d]
0x8742: mov r9,rax
0x8745: mov esi,0x1
0x874a: mov rdi,rbx
0x874d: mov rdx,0xffffffffffffffff
0x8754: xor eax,eax
0x8756: call 0x3870
0x875b: movsxd rax,dword ptr [rip+0x218bda]
0x8762: pop rsi
0x8763: pop rdi
0x8764: lea r13,[rbx+rax+0x1]
0x8769: jmp 0x81a1
0x8770: lea rdx,[rip+0x2178c9]
0x8777: mov rdx,qword ptr [rdx+rax*8]
0x877b: jmp 0x8492
0x8780: lea r15,[rsp+0x70]
0x8785: mov rdi,qword ptr [rip+0x218b1c]
0x878c: lea rsi,[rsp+0x18]
0x8791: mov qword ptr [rsp+0x18],0x0
0x879a: mov rdx,r15
0x879d: call 0x15a80
0x87a2: test rax,rax
0x87a5: je 0x87de
0x87a7: cmp byte ptr [rip+0x217c1a],0x0
0x87ae: mov r8,qword ptr [rip+0x218af3]
0x87b5: mov rdx,qword ptr [rip+0x217884]
0x87bc: jne 0x8830
0x87be: lea r14,[rsp+0xe0]
0x87c6: xor r9d,r9d
0x87c9: mov rcx,r15
0x87cc: mov esi,0x3e9
0x87d1: mov rdi,r14
0x87d4: call 0x12000
0x87d9: test rax,rax
0x87dc: jne 0x884b
0x87de: mov r8d,dword ptr [rip+0x21782f]
0x87e5: test r8d,r8d
0x87e8: jns 0x81ca
0x87ee: mov dword ptr [rip+0x21781c],0x0
0x87f8: xor r8d,r8d
0x87fb: jmp 0x81ca
0x8800: lea rsi,[rcx-0xf0c2ac]
0x8807: mov eax,0x1
0x880c: cmp rsi,rdx
0x880f: jl 0x8460
0x8815: xor eax,eax
0x8817: cmp rsi,rdx
0x881a: jg 0x8460
0x8820: xor eax,eax
0x8822: cmp edi,r9d
0x8825: jns 0x8460
0x882b: jmp 0x8654
0x8830: movsxd rdx,dword ptr [rsp+0x80]
0x8838: lea rax,[rip+0x217ba1]
0x883f: shl rdx,0x7
0x8843: add rdx,rax
0x8846: jmp 0x87be
0x884b: xor edx,edx
0x884d: mov rsi,rax
0x8850: mov rdi,r14
0x8853: call 0x10060
0x8858: mov r8d,eax
0x885b: mov dword ptr [rip+0x2177b3],eax
0x8861: jmp 0x87e5
0x8863: call 0x3420
0x8868: call 0x3290
0x886d: cmp byte ptr [rbp+0xb8],0x0
0x8874: lea rbx,[rip+0xf01c]
0x887b: je 0x81ba
0x8881: mov rdi,qword ptr [rsp+0x20]
0x8886: lea rsi,[rsp+0xc0]
0x888e: call 0xfb00
0x8893: mov rbx,rax
0x8896: jmp 0x81ba
0x88a0: push rbp
0x88a1: push rbx
0x88a2: mov rbp,rdi
0x88a5: mov ecx,edx
0x88a7: mov rdx,rsi
0x88aa: mov rsi,rbp
0x88ad: sub rsp,0x2038
0x88b4: lea rbx,[rsp+0x20]
0x88b9: lea rdi,[rsp+0x10]
0x88be: lea r9,[rsp+0xf]
0x88c3: lea r8,[rsp+0x18]
0x88c8: mov rax,qword ptr fs:0x28
0x88d1: mov qword ptr [rsp+0x2028],rax
0x88d9: xor eax,eax
0x88db: mov qword ptr [rsp+0x10],rbx
0x88e0: call 0x7020
0x88e5: mov rdi,qword ptr [rsp+0x10]
0x88ea: cmp rdi,rbx
0x88ed: je 0x88f9
0x88ef: cmp rdi,rbp
0x88f2: je 0x88f9
0x88f4: call 0x3880
0x88f9: movzx eax,byte ptr [rsp+0xf]
0x88fe: add rax,qword ptr [rsp+0x18]
0x8903: mov rcx,qword ptr [rsp+0x2028]
0x890b: xor rcx,qword ptr fs:0x28
0x8914: jne 0x8920
0x8916: add rsp,0x2038
0x891d: pop rbx
0x891e: pop rbp
0x891f: ret
0x8920: call 0x3420
0x8930: push rbp
0x8931: push rbx
0x8932: mov rbp,rdi
0x8935: sub rsp,0x2a8
0x893c: mov rax,qword ptr fs:0x28
0x8945: mov qword ptr [rsp+0x298],rax
0x894d: xor eax,eax
0x894f: cmp byte ptr [rip+0x2189a6],0x0
0x8956: je 0x8a08
0x895c: cmp dword ptr [rip+0x2189d5],0x4
0x8963: je 0x8aa0
0x8969: movsxd rbx,dword ptr [rip+0x2189f0]
0x8970: add rbx,0x1
0x8974: cmp byte ptr [rip+0x2189b1],0x0
0x897b: je 0x8a88
0x8981: movsxd rax,dword ptr [rip+0x2189d4]
0x8988: add rax,0x1
0x898c: add rbx,rax
0x898f: cmp byte ptr [rip+0x2189cf],0x0
0x8996: jne 0x8a68
0x899c: mov edx,dword ptr [rbp+0xc4]
0x89a2: mov rsi,qword ptr [rip+0x218927]
0x89a9: mov rdi,qword ptr [rbp]
0x89ad: call 0x88a0
0x89b2: add rbx,rax
0x89b5: mov eax,dword ptr [rip+0x218959]
0x89bb: test eax,eax
0x89bd: je 0x89df
0x89bf: movzx edi,byte ptr [rbp+0xb8]
0x89c6: mov edx,dword ptr [rbp+0xa8]
0x89cc: mov esi,dword ptr [rbp+0x30]
0x89cf: call 0x6830
0x89d4: test al,al
0x89d6: setne al
0x89d9: movzx eax,al
0x89dc: add rbx,rax
0x89df: mov rcx,qword ptr [rsp+0x298]
0x89e7: xor rcx,qword ptr fs:0x28
0x89f0: mov rax,rbx
0x89f3: jne 0x8ad2
0x89f9: add rsp,0x2a8
0x8a00: pop rbx
0x8a01: pop rbp
0x8a02: ret
0x8a08: xor ebx,ebx
0x8a0a: cmp byte ptr [rip+0x21891b],0x0
0x8a11: je 0x898f
0x8a17: cmp dword ptr [rip+0x21891a],0x4
0x8a1e: jne 0x8981
0x8a24: cmp byte ptr [rbp+0xb8],0x0
0x8a2b: mov eax,0x2
0x8a30: je 0x898c
0x8a36: mov rdi,qword ptr [rbp+0x58]
0x8a3a: mov r8,qword ptr [rip+0x2188df]
0x8a41: mov rsi,rsp
0x8a44: mov edx,dword ptr [rip+0x2188de]
0x8a4a: mov ecx,0x200
0x8a4f: call 0xebc0
0x8a54: mov rdi,rax
0x8a57: call 0x3400
0x8a5c: add rax,0x1
0x8a60: jmp 0x898c
0x8a68: cmp dword ptr [rip+0x2188c9],0x4
0x8a6f: je 0x8ac0
0x8a71: movsxd rax,dword ptr [rip+0x2188dc]
0x8a78: add rax,0x1
0x8a7c: add rbx,rax
0x8a7f: jmp 0x899c
0x8a88: cmp byte ptr [rip+0x2188d6],0x0
0x8a8f: jne 0x8a71
0x8a91: jmp 0x899c
0x8aa0: mov rdi,qword ptr [rdi+0x20]
0x8aa4: mov rsi,rsp
0x8aa7: call 0xfba0
0x8aac: mov rdi,rax
0x8aaf: call 0x3400
0x8ab4: lea rbx,[rax+0x1]
0x8ab8: jmp 0x8a0a
0x8ac0: mov rdi,qword ptr [rbp+0xb0]
0x8ac7: call 0x3400
0x8acc: add rax,0x1
0x8ad0: jmp 0x8a7c
0x8ad2: call 0x3420
0x8ae0: mov r9,qword ptr [rip+0x2188c9]
0x8ae7: mov rcx,qword ptr [rip+0x218712]
0x8aee: push r14
0x8af0: push r13
0x8af2: push r12
0x8af4: push rbp
0x8af5: mov r12d,edi
0x8af8: cmp r9,rcx
0x8afb: push rbx
0x8afc: mov rbx,rcx
0x8aff: cmovbe rbx,r9
0x8b03: cmp rbx,qword ptr [rip+0x2177d6]
0x8b0a: jbe 0x8c29
0x8b10: mov rax,rcx
0x8b13: mov rdi,qword ptr [rip+0x2186ee]
0x8b1a: shr rax,0x1
0x8b1d: cmp rbx,rax
0x8b20: jb 0x8d90
0x8b26: mov edx,0x18
0x8b2b: xor esi,esi
0x8b2d: mov rax,rdx
0x8b30: mul rcx
0x8b33: jo 0x8dc7
0x8b39: test rax,rax
0x8b3c: js 0x8dd1
0x8b42: test rsi,rsi
0x8b45: jne 0x8dd1
0x8b4b: lea rsi,[rcx+rcx*2]
0x8b4f: shl rsi,0x3
0x8b53: call 0x145f0
0x8b58: mov rbp,qword ptr [rip+0x2186a1]
0x8b5f: mov qword ptr [rip+0x2186a2],rax
0x8b66: mov rax,qword ptr [rip+0x217773]
0x8b6d: mov rdi,rbp
0x8b70: sub rdi,rax
0x8b73: add rax,0x1
0x8b77: add rax,rbp
0x8b7a: mov rcx,rdi
0x8b7d: mov rsi,rax
0x8b80: setb al
0x8b83: movzx eax,al
0x8b86: imul rcx,rsi
0x8b8a: test rax,rax
0x8b8d: jne 0x8dd1
0x8b93: xor edx,edx
0x8b95: mov rax,rcx
0x8b98: div rdi
0x8b9b: cmp rsi,rax
0x8b9e: jne 0x8dd1
0x8ba4: mov edx,0x8
0x8ba9: shr rcx,0x1
0x8bac: xor esi,esi
0x8bae: mov rax,rdx
0x8bb1: mul rcx
0x8bb4: jo 0x8dd6
0x8bba: test rax,rax
0x8bbd: js 0x8dd1
0x8bc3: test rsi,rsi
0x8bc6: jne 0x8dd1
0x8bcc: lea rdi,[rcx*8]
0x8bd4: call 0x14590
0x8bd9: mov rdx,qword ptr [rip+0x217700]
0x8be0: cmp rbp,rdx
0x8be3: jbe 0x8c1b
0x8be5: mov rcx,qword ptr [rip+0x21861c]
0x8bec: lea rsi,[rdx+rdx*2]
0x8bf0: lea rdx,[0x8+rdx*8]
0x8bf8: lea rcx,[rcx+rsi*8+0x10]
0x8bfd: lea rsi,[0x8+rbp*8]
0x8c05: nop dword ptr [rax]
0x8c08: mov qword ptr [rcx],rax
0x8c0b: add rax,rdx
0x8c0e: add rdx,0x8
0x8c12: add rcx,0x18
0x8c16: cmp rsi,rdx
0x8c19: jne 0x8c08
0x8c1b: mov r9,qword ptr [rip+0x21878e]
0x8c22: mov qword ptr [rip+0x2176b7],rbp
0x8c29: test rbx,rbx
0x8c2c: je 0x8c79
0x8c2e: mov rdi,qword ptr [rip+0x2185d3]
0x8c35: lea r8,[rbx+rbx*2+0x3]
0x8c3a: xor esi,esi
0x8c3c: mov edx,0x3
0x8c41: nop dword ptr [rax]
0x8c48: mov rax,qword ptr [rdi+rdx*8-0x8]
0x8c4d: add rsi,0x8
0x8c51: mov byte ptr [rdi+rdx*8-0x18],0x1
0x8c56: mov qword ptr [rdi+rdx*8-0x10],rdx
0x8c5b: lea rcx,[rax+rsi]
0x8c5f: nop
0x8c60: mov qword ptr [rax],0x3
0x8c67: add rax,0x8
0x8c6b: cmp rcx,rax
0x8c6e: jne 0x8c60
0x8c70: add rdx,0x3
0x8c74: cmp r8,rdx
0x8c77: jne 0x8c48
0x8c79: test r9,r9
0x8c7c: je 0x8d4d
0x8c82: xor ebp,ebp
0x8c84: nop dword ptr [rax]
0x8c88: mov rax,qword ptr [rip+0x218711]
0x8c8f: mov rdi,qword ptr [rax+rbp*8]
0x8c93: call 0x8930
0x8c98: test rbx,rbx
0x8c9b: mov r10,rax
0x8c9e: mov rdi,qword ptr [rip+0x21870b]
0x8ca5: je 0x8d40
0x8cab: mov r14,qword ptr [rip+0x2185fe]
0x8cb2: mov rcx,qword ptr [rip+0x21854f]
0x8cb9: xor esi,esi
0x8cbb: lea r11,[rax+0x2]
0x8cbf: lea r13,[rdi-0x1]
0x8cc3: jmp 0x8d21
0x8cc8: lea rax,[r13+r8]
0x8ccd: xor edx,edx
0x8ccf: div r8
0x8cd2: xor edx,edx
0x8cd4: mov r9,rax
0x8cd7: mov rax,rbp
0x8cda: div r9
0x8cdd: mov r9,rax
0x8ce0: mov rdx,qword ptr [rcx+0x10]
0x8ce4: cmp r9,rsi
0x8ce7: mov rax,r10
0x8cea: cmovne rax,r11
0x8cee: lea rsi,[rdx+r9*8]
0x8cf2: mov rdx,qword ptr [rsi]
0x8cf5: cmp rdx,rax
0x8cf8: jae 0x8d15
0x8cfa: mov r9,qword ptr [rcx+0x8]
0x8cfe: sub r9,rdx
0x8d01: mov rdx,r9
0x8d04: add rdx,rax
0x8d07: mov qword ptr [rcx+0x8],rdx
0x8d0b: mov qword ptr [rsi],rax
0x8d0e: cmp qword ptr [rcx+0x8],r14
0x8d12: setb byte ptr [rcx]
0x8d15: add rcx,0x18
0x8d19: cmp rbx,r8
0x8d1c: mov rsi,r8
0x8d1f: je 0x8d40
0x8d21: cmp byte ptr [rcx],0x0
0x8d24: lea r8,[rsi+0x1]
0x8d28: je 0x8d15
0x8d2a: test r12b,r12b
0x8d2d: jne 0x8cc8
0x8d2f: mov rax,rbp
0x8d32: xor edx,edx
0x8d34: div r8
0x8d37: mov r9,rdx
0x8d3a: jmp 0x8ce0
0x8d40: add rbp,0x1
0x8d44: cmp rbp,rdi
0x8d47: jb 0x8c88
0x8d4d: cmp rbx,0x1
0x8d51: jbe 0x8d84
0x8d53: mov rdx,qword ptr [rip+0x2184ae]
0x8d5a: lea rax,[rbx+rbx*2]
0x8d5e: shl rax,0x3
0x8d62: cmp byte ptr [rdx+rax-0x18],0x0
0x8d67: jne 0x8d84
0x8d69: lea rax,[rdx+rax-0x30]
0x8d6e: jmp 0x8d7a
0x8d70: sub rax,0x18
0x8d74: cmp byte ptr [rax+0x18],0x0
0x8d78: jne 0x8d84
0x8d7a: sub rbx,0x1
0x8d7e: cmp rbx,0x1
0x8d82: jne 0x8d70
0x8d84: mov rax,rbx
0x8d87: pop rbx
0x8d88: pop rbp
0x8d89: pop r12
0x8d8b: pop r13
0x8d8d: pop r14
0x8d8f: ret
0x8d90: mov edx,0x30
0x8d95: xor ecx,ecx
0x8d97: mov rax,rdx
0x8d9a: mul rbx
0x8d9d: jo 0x8de0
0x8d9f: test rax,rax
0x8da2: js 0x8dd1
0x8da4: test rcx,rcx
0x8da7: jne 0x8dd1
0x8da9: lea rbp,[rbx+rbx]
0x8dad: lea rsi,[rbp+rbx]
0x8db2: shl rsi,0x4
0x8db6: call 0x145f0
0x8dbb: mov qword ptr [rip+0x218446],rax
0x8dc2: jmp 0x8b66
0x8dc7: mov esi,0x1
0x8dcc: jmp 0x8b39
0x8dd1: call 0x147e0
0x8dd6: mov esi,0x1
0x8ddb: jmp 0x8bba
0x8de0: mov ecx,0x1
0x8de5: jmp 0x8d9f
0x8df0: push r15
0x8df2: push r14
0x8df4: push r13
0x8df6: push r12
0x8df8: push rbp
0x8df9: push rbx
0x8dfa: sub rsp,0x18
0x8dfe: cmp qword ptr [rip+0x2185aa],0x0
0x8e06: je 0x8f08
0x8e0c: mov r14d,edi
0x8e0f: xor r13d,r13d
0x8e12: xor ebx,ebx
0x8e14: mov r15,0xfffffffffffffffd
0x8e1b: jmp 0x8e48
0x8e20: test rbx,rbx
0x8e23: mov rbp,r13
0x8e26: jne 0x8ef0
0x8e2c: mov rsi,rbp
0x8e2f: mov rdi,r12
0x8e32: add rbx,0x1
0x8e36: call 0x7d00
0x8e3b: cmp qword ptr [rip+0x21856e],rbx
0x8e42: jbe 0x8f08
0x8e48: cmp qword ptr [rip+0x218460],0x0
0x8e50: mov rax,qword ptr [rip+0x218549]
0x8e57: mov r12,qword ptr [rax+rbx*8]
0x8e5b: je 0x8e20
0x8e5d: mov rdi,r12
0x8e60: call 0x8930
0x8e65: test rbx,rbx
0x8e68: je 0x8f40
0x8e6e: mov rdx,qword ptr [rip+0x21843b]
0x8e75: lea rbp,[r13+0x2]
0x8e79: lea rcx,[rax+rbp]
0x8e7d: test rdx,rdx
0x8e80: je 0x8f38
0x8e86: cmp rdx,rcx
0x8e89: jbe 0x8e9a
0x8e8b: mov rdx,r15
0x8e8e: sub rdx,rax
0x8e91: cmp rdx,r13
0x8e94: jae 0x8f38
0x8e9a: mov r13,rax
0x8e9d: mov ecx,0xa
0x8ea2: mov edx,0xa
0x8ea7: xor ebp,ebp
0x8ea9: mov rdi,qword ptr [rip+0x2173d8]
0x8eb0: mov rax,qword ptr [rdi+0x28]
0x8eb4: cmp rax,qword ptr [rdi+0x30]
0x8eb8: jae 0x8f60
0x8ebe: lea rsi,[rax+0x1]
0x8ec2: mov qword ptr [rdi+0x28],rsi
0x8ec6: mov byte ptr [rax],r14b
0x8ec9: mov rdi,qword ptr [rip+0x2173b8]
0x8ed0: mov rax,qword ptr [rdi+0x28]
0x8ed4: cmp rax,qword ptr [rdi+0x30]
0x8ed8: jae 0x8f50
0x8eda: lea rcx,[rax+0x1]
0x8ede: mov qword ptr [rdi+0x28],rcx
0x8ee2: mov byte ptr [rax],dl
0x8ee4: jmp 0x8e2c
0x8ef0: lea rbp,[r13+0x2]
0x8ef4: mov r13,rbp
0x8ef7: mov ecx,0x20
0x8efc: mov edx,0x20
0x8f01: jmp 0x8ea9
0x8f08: mov rdi,qword ptr [rip+0x217379]
0x8f0f: mov rax,qword ptr [rdi+0x28]
0x8f13: cmp rax,qword ptr [rdi+0x30]
0x8f17: jae 0x8f80
0x8f19: lea rdx,[rax+0x1]
0x8f1d: mov qword ptr [rdi+0x28],rdx
0x8f21: mov byte ptr [rax],0xa
0x8f24: add rsp,0x18
0x8f28: pop rbx
0x8f29: pop rbp
0x8f2a: pop r12
0x8f2c: pop r13
0x8f2e: pop r14
0x8f30: pop r15
0x8f32: ret
0x8f38: mov r13,rcx
0x8f3b: jmp 0x8ef7
0x8f40: mov rbp,r13
0x8f43: add r13,rax
0x8f46: jmp 0x8e2c
0x8f50: mov esi,ecx
0x8f52: call 0x3490
0x8f57: jmp 0x8e2c
0x8f60: movsx esi,r14b
0x8f64: mov dword ptr [rsp+0xc],ecx
0x8f68: mov byte ptr [rsp+0xb],dl
0x8f6c: call 0x3490
0x8f71: movzx edx,byte ptr [rsp+0xb]
0x8f76: mov ecx,dword ptr [rsp+0xc]
0x8f7a: jmp 0x8ec9
0x8f80: add rsp,0x18
0x8f84: mov esi,0xa
0x8f89: pop rbx
0x8f8a: pop rbp
0x8f8b: pop r12
0x8f8d: pop r13
0x8f8f: pop r14
0x8f91: pop r15
0x8f93: jmp 0x3490
0x8fa0: cmp dword ptr [rip+0x218391],0x4
0x8fa7: ja 0x92f8
0x8fad: push r15
0x8faf: push r14
0x8fb1: lea rdx,[rip+0xd1ac]
0x8fb8: push r13
0x8fba: push r12
0x8fbc: push rbp
0x8fbd: push rbx
0x8fbe: sub rsp,0x38
0x8fc2: mov eax,dword ptr [rip+0x218370]
0x8fc8: movsxd rax,dword ptr [rdx+rax*4]
0x8fcc: add rax,rdx
0x8fcf: jmp rax
0x8fd1: nop dword ptr [rax]
0x8fd8: cmp qword ptr [rip+0x2182d0],0x0
0x8fe0: je 0x92e8
0x8fe6: xor edi,edi
0x8fe8: call 0x8ae0
0x8fed: lea rdx,[rax+rax*2]
0x8ff1: mov r14,rax
0x8ff4: mov rax,qword ptr [rip+0x21820d]
0x8ffb: lea r15,[rax+rdx*8-0x18]
0x9000: mov rax,qword ptr [rip+0x218399]
0x9007: mov rbx,qword ptr [rax]
0x900a: mov rdi,rbx
0x900d: call 0x8930
0x9012: mov qword ptr [rsp+0x8],rax
0x9017: mov rax,qword ptr [r15+0x10]
0x901b: xor esi,esi
0x901d: mov rdi,rbx
0x9020: mov r12,qword ptr [rax]
0x9023: call 0x7d00
0x9028: cmp qword ptr [rip+0x218380],0x1
0x9030: jbe 0x9310
0x9036: xor r13d,r13d
0x9039: mov ebx,0x1
0x903e: mov rcx,qword ptr [rsp+0x8]
0x9043: jmp 0x90a5
0x9045: nop dword ptr [rax]
0x9048: mov rdi,qword ptr [rip+0x217239]
0x904f: mov rax,qword ptr [rdi+0x28]
0x9053: cmp rax,qword ptr [rdi+0x30]
0x9057: jae 0x9350
0x905d: lea rdx,[rax+0x1]
0x9061: xor r13d,r13d
0x9064: mov qword ptr [rdi+0x28],rdx
0x9068: mov byte ptr [rax],0xa
0x906b: mov rax,qword ptr [rip+0x21832e]
0x9072: mov rsi,r13
0x9075: mov r12,qword ptr [rax+rbx*8]
0x9079: add rbx,0x1
0x907d: mov rdi,r12
0x9080: call 0x7d00
0x9085: mov rdi,r12
0x9088: call 0x8930
0x908d: cmp rbx,qword ptr [rip+0x21831c]
0x9094: mov rcx,rax
0x9097: mov rax,qword ptr [r15+0x10]
0x909b: mov r12,qword ptr [rax+rbp*8]
0x909f: jae 0x9310
0x90a5: xor edx,edx
0x90a7: mov rax,rbx
0x90aa: div r14
0x90ad: test rdx,rdx
0x90b0: mov rbp,rdx
0x90b3: je 0x9048
0x90b5: add r12,r13
0x90b8: lea rdi,[rcx+r13]
0x90bc: mov rsi,r12
0x90bf: mov r13,r12
0x90c2: call 0x6040
0x90c7: jmp 0x906b
0x90c9: nop dword ptr [rax]
0x90d0: mov edi,0x2c
0x90d5: add rsp,0x38
0x90d9: pop rbx
0x90da: pop rbp
0x90db: pop r12
0x90dd: pop r13
0x90df: pop r14
0x90e1: pop r15
0x90e3: jmp 0x8df0
0x90e8: nop dword ptr [rax+rax]
0x90f0: xor ebx,ebx
0x90f2: cmp qword ptr [rip+0x2182b6],0x0
0x90fa: je 0x9268
0x9100: mov rax,qword ptr [rip+0x218299]
0x9107: xor esi,esi
0x9109: mov rdi,qword ptr [rax+rbx*8]
0x910d: call 0x7d00
0x9112: mov rdi,qword ptr [rip+0x21716f]
0x9119: mov rax,qword ptr [rdi+0x28]
0x911d: cmp rax,qword ptr [rdi+0x30]
0x9121: jae 0x9300
0x9127: lea rdx,[rax+0x1]
0x912b: mov qword ptr [rdi+0x28],rdx
0x912f: mov byte ptr [rax],0xa
0x9132: add rbx,0x1
0x9136: cmp qword ptr [rip+0x218273],rbx
0x913d: ja 0x9100
0x913f: add rsp,0x38
0x9143: pop rbx
0x9144: pop rbp
0x9145: pop r12
0x9147: pop r13
0x9149: pop r14
0x914b: pop r15
0x914d: ret
0x914e: nop
0x9150: cmp qword ptr [rip+0x218158],0x0
0x9158: je 0x92e8
0x915e: mov edi,0x1
0x9163: call 0x8ae0
0x9168: lea rdx,[rax+rax*2]
0x916c: mov rcx,rax
0x916f: mov rax,qword ptr [rip+0x218092]
0x9176: lea r15,[rax+rdx*8-0x18]
0x917b: mov rax,qword ptr [rip+0x21822e]
0x9182: xor edx,edx
0x9184: div rcx
0x9187: test rdx,rdx
0x918a: setne dl
0x918d: movzx edx,dl
0x9190: add rdx,rax
0x9193: mov rax,rdx
0x9196: mov qword ptr [rsp+0x18],rdx
0x919b: je 0x9268
0x91a1: shl rax,0x3
0x91a5: mov qword ptr [rsp+0x28],0x0
0x91ae: mov qword ptr [rsp+0x20],rax
0x91b3: nop dword ptr [rax+rax]
0x91b8: mov r13,qword ptr [rsp+0x28]
0x91bd: xor r12d,r12d
0x91c0: xor ebp,ebp
0x91c2: lea r14,[r13*8]
0x91ca: jmp 0x91eb
0x91cc: nop dword ptr [rax]
0x91d0: mov rbx,qword ptr [rsp+0x10]
0x91d5: mov rdi,qword ptr [rsp+0x8]
0x91da: add rbx,rbp
0x91dd: add rdi,rbp
0x91e0: mov rsi,rbx
0x91e3: mov rbp,rbx
0x91e6: call 0x6040
0x91eb: mov rax,qword ptr [rip+0x2181ae]
0x91f2: mov rbx,qword ptr [rax+r14]
0x91f6: mov rdi,rbx
0x91f9: call 0x8930
0x91fe: mov qword ptr [rsp+0x8],rax
0x9203: mov rax,qword ptr [r15+0x10]
0x9207: mov rsi,rbp
0x920a: mov rdi,rbx
0x920d: mov rcx,qword ptr [rax+r12]
0x9211: add r12,0x8
0x9215: mov qword ptr [rsp+0x10],rcx
0x921a: call 0x7d00
0x921f: add r13,qword ptr [rsp+0x18]
0x9224: add r14,qword ptr [rsp+0x20]
0x9229: cmp r13,qword ptr [rip+0x218180]
0x9230: jb 0x91d0
0x9232: mov rdi,qword ptr [rip+0x21704f]
0x9239: mov rax,qword ptr [rdi+0x28]
0x923d: cmp rax,qword ptr [rdi+0x30]
0x9241: jae 0x9338
0x9247: lea rdx,[rax+0x1]
0x924b: mov qword ptr [rdi+0x28],rdx
0x924f: mov byte ptr [rax],0xa
0x9252: add qword ptr [rsp+0x28],0x1
0x9258: mov rax,qword ptr [rsp+0x28]
0x925d: cmp qword ptr [rsp+0x18],rax
0x9262: jne 0x91b8
0x9268: add rsp,0x38
0x926c: pop rbx
0x926d: pop rbp
0x926e: pop r12
0x9270: pop r13
0x9272: pop r14
0x9274: pop r15
0x9276: ret
0x9277: nop word ptr [rax+rax]
0x9280: xor ebx,ebx
0x9282: cmp qword ptr [rip+0x218126],0x0
0x928a: jne 0x92b0
0x928c: jmp 0x9268
0x928e: nop
0x9290: lea rdx,[rax+0x1]
0x9294: mov qword ptr [rdi+0x28],rdx
0x9298: mov byte ptr [rax],0xa
0x929b: add qword ptr [rip+0x217f55],0x1
0x92a3: add rbx,0x1
0x92a7: cmp qword ptr [rip+0x218102],rbx
0x92ae: jbe 0x9268
0x92b0: call 0x6fd0
0x92b5: mov rax,qword ptr [rip+0x2180e4]
0x92bc: mov rdi,qword ptr [rax+rbx*8]
0x92c0: call 0x7e90
0x92c5: mov rdi,qword ptr [rip+0x216fbc]
0x92cc: mov rax,qword ptr [rdi+0x28]
0x92d0: cmp rax,qword ptr [rdi+0x30]
0x92d4: jb 0x9290
0x92d6: mov esi,0xa
0x92db: call 0x3490
0x92e0: jmp 0x929b
0x92e2: nop word ptr [rax+rax]
0x92e8: mov edi,0x20
0x92ed: jmp 0x90d5
0x92f2: nop word ptr [rax+rax]
0x92f8: ret
0x9300: mov esi,0xa
0x9305: call 0x3490
0x930a: jmp 0x9132
0x9310: mov rdi,qword ptr [rip+0x216f71]
0x9317: mov rax,qword ptr [rdi+0x28]
0x931b: cmp rax,qword ptr [rdi+0x30]
0x931f: jae 0x9362
0x9321: lea rdx,[rax+0x1]
0x9325: mov qword ptr [rdi+0x28],rdx
0x9329: mov byte ptr [rax],0xa
0x932c: jmp 0x9268
0x9331: nop dword ptr [rax]
0x9338: mov esi,0xa
0x933d: call 0x3490
0x9342: jmp 0x9252
0x9347: nop word ptr [rax+rax]
0x9350: mov esi,0xa
0x9355: xor r13d,r13d
0x9358: call 0x3490
0x935d: jmp 0x906b
0x9362: add rsp,0x38
0x9366: mov esi,0xa
0x936b: pop rbx
0x936c: pop rbp
0x936d: pop r12
0x936f: pop r13
0x9371: pop r14
0x9373: pop r15
0x9375: jmp 0x3490
0x9380: mov rdx,rsi
0x9383: mov esi,dword ptr [rdi+0xa8]
0x9389: mov ecx,dword ptr [rdx+0xa8]
0x938f: cmp ecx,0x3
0x9392: sete al
0x9395: cmp ecx,0x9
0x9398: sete cl
0x939b: or eax,ecx
0x939d: cmp esi,0x3
0x93a0: je 0x93c8
0x93a2: cmp esi,0x9
0x93a5: je 0x93c8
0x93a7: mov ecx,dword ptr [rdi+0xac]
0x93ad: and ecx,0xf000
0x93b3: test al,al
0x93b5: je 0x93e8
0x93b7: cmp ecx,0x4000
0x93bd: je 0x9408
0x93bf: mov eax,0x1
0x93c4: ret
0x93c8: test al,al
0x93ca: jne 0x9408
0x93cc: mov eax,dword ptr [rdx+0xac]
0x93d2: and eax,0xf000
0x93d7: cmp eax,0x4000
0x93dc: je 0x9408
0x93de: mov eax,0xffffffff
0x93e3: ret
0x93e8: mov eax,dword ptr [rdx+0xac]
0x93ee: and eax,0xf000
0x93f3: cmp eax,0x4000
0x93f8: je 0x93b7
0x93fa: cmp ecx,0x4000
0x9400: je 0x93de
0x9402: nop word ptr [rax+rax]
0x9408: mov rax,qword ptr [rdi+0x60]
0x940c: cmp qword ptr [rdx+0x60],rax
0x9410: jg 0x93de
0x9412: jl 0x93bf
0x9414: mov rax,qword ptr [rdi+0x68]
0x9418: sub eax,dword ptr [rdx+0x68]
0x941b: jne 0x93e3
0x941d: mov rsi,qword ptr [rdi]
0x9420: mov rdi,qword ptr [rdx]
0x9423: jmp 0x3590
0x9430: mov rdx,rsi
0x9433: mov esi,dword ptr [rdi+0xa8]
0x9439: mov ecx,dword ptr [rdx+0xa8]
0x943f: cmp ecx,0x3
0x9442: sete al
0x9445: cmp ecx,0x9
0x9448: sete cl
0x944b: or eax,ecx
0x944d: cmp esi,0x3
0x9450: je 0x9478
0x9452: cmp esi,0x9
0x9455: je 0x9478
0x9457: mov ecx,dword ptr [rdi+0xac]
0x945d: and ecx,0xf000
0x9463: test al,al
0x9465: je 0x9498
0x9467: cmp ecx,0x4000
0x946d: je 0x94b8
0x946f: mov eax,0x1
0x9474: ret
0x9478: test al,al
0x947a: jne 0x94b8
0x947c: mov eax,dword ptr [rdx+0xac]
0x9482: and eax,0xf000
0x9487: cmp eax,0x4000
0x948c: je 0x94b8
0x948e: mov eax,0xffffffff
0x9493: ret
0x9498: mov eax,dword ptr [rdx+0xac]
0x949e: and eax,0xf000
0x94a3: cmp eax,0x4000
0x94a8: je 0x9467
0x94aa: cmp ecx,0x4000
0x94b0: je 0x948e
0x94b2: nop word ptr [rax+rax]
0x94b8: mov rax,qword ptr [rdi+0x80]
0x94bf: cmp qword ptr [rdx+0x80],rax
0x94c6: jg 0x948e
0x94c8: jl 0x946f
0x94ca: mov rax,qword ptr [rdi+0x88]
0x94d1: sub eax,dword ptr [rdx+0x88]
0x94d7: jne 0x9493
0x94d9: mov rsi,qword ptr [rdi]
0x94dc: mov rdi,qword ptr [rdx]
0x94df: jmp 0x3590
0x94f0: mov rax,qword ptr [rip+0x217eb9]
0x94f7: push r12
0x94f9: push rbp
0x94fa: push rbx
0x94fb: test rax,rax
0x94fe: je 0x9537
0x9500: mov rbx,qword ptr [rip+0x217e99]
0x9507: lea r12,[rbx+rax*8]
0x950b: nop dword ptr [rax+rax]
0x9510: mov rbp,qword ptr [rbx]
0x9513: add rbx,0x8
0x9517: mov rdi,qword ptr [rbp]
0x951b: call 0x3880
0x9520: mov rdi,qword ptr [rbp+0x8]
0x9524: call 0x3880
0x9529: mov rdi,qword ptr [rbp+0x10]
0x952d: call 0x3880
0x9532: cmp rbx,r12
0x9535: jne 0x9510
0x9537: pop rbx
0x9538: mov qword ptr [rip+0x217e6d],0x0
0x9543: mov byte ptr [rip+0x217e5f],0x0
0x954a: pop rbp
0x954b: mov byte ptr [rip+0x217e12],0x0
0x9552: mov dword ptr [rip+0x217e04],0x0
0x955c: mov dword ptr [rip+0x217df6],0x0
0x9566: mov dword ptr [rip+0x217de8],0x0
0x9570: mov dword ptr [rip+0x217dd6],0x0
0x957a: mov dword ptr [rip+0x217dc8],0x0
0x9584: mov dword ptr [rip+0x217dba],0x0
0x958e: mov dword ptr [rip+0x217dbc],0x0
0x9598: mov dword ptr [rip+0x217da2],0x0
0x95a2: mov dword ptr [rip+0x217d94],0x0
0x95ac: mov dword ptr [rip+0x217d86],0x0
0x95b6: pop r12
0x95b8: ret
0x95c0: push rbp
0x95c1: push rbx
0x95c2: mov ebp,edi
0x95c4: sub rsp,0x28
0x95c8: mov rax,qword ptr fs:0x28
0x95d1: mov qword ptr [rsp+0x18],rax
0x95d6: xor eax,eax
0x95d8: cmp byte ptr [rip+0x217d4e],0x0
0x95df: je 0x9658
0x95e1: mov rbx,rsp
0x95e4: lea rcx,[rip+0xe2a2]
0x95eb: mov r8d,ebp
0x95ee: mov edx,0x15
0x95f3: mov esi,0x1
0x95f8: mov rdi,rbx
0x95fb: xor eax,eax
0x95fd: call 0x3870
0x9602: mov rax,rbx
0x9605: mov ecx,dword ptr [rax]
0x9607: add rax,0x4
0x960b: lea edx,[rcx-0x1010101]
0x9611: not ecx
0x9613: and edx,ecx
0x9615: and edx,0x80808080
0x961b: je 0x9605
0x961d: mov ecx,edx
0x961f: shr ecx,0x10
0x9622: test edx,0x8080
0x9628: cmove edx,ecx
0x962b: lea rcx,[rax+0x2]
0x962f: mov esi,edx
0x9631: cmove rax,rcx
0x9635: add sil,dl
0x9638: sbb rax,0x3
0x963c: sub eax,ebx
0x963e: mov rsi,qword ptr [rsp+0x18]
0x9643: xor rsi,qword ptr fs:0x28
0x964c: jne 0x967c
0x964e: add rsp,0x28
0x9652: pop rbx
0x9653: pop rbp
0x9654: ret
0x9658: call 0xf7c0
0x965d: test rax,rax
0x9660: mov rdi,rax
0x9663: je 0x95e1
0x9669: xor esi,esi
0x966b: call 0x10220
0x9670: mov edx,0x0
0x9675: test eax,eax
0x9677: cmovs eax,edx
0x967a: jmp 0x963e
0x967c: call 0x3420
0x9690: push rbp
0x9691: mov rbp,rsp
0x9694: push r15
0x9696: push r14
0x9698: push r13
0x969a: push r12
0x969c: mov r15,rcx
0x969f: push rbx
0x96a0: mov r14d,esi
0x96a3: mov r13d,edx
0x96a6: sub rsp,0x378
0x96ad: mov rcx,qword ptr [rip+0x217cfc]
0x96b4: mov qword ptr [rbp-0x388],rdi
0x96bb: mov rax,qword ptr fs:0x28
0x96c4: mov qword ptr [rbp-0x38],rax
0x96c8: xor eax,eax
0x96ca: cmp rcx,qword ptr [rip+0x217ce7]
0x96d1: mov rdi,qword ptr [rip+0x217ce8]
0x96d8: jne 0x9728
0x96da: mov edx,0x190
0x96df: xor esi,esi
0x96e1: mov rax,rdx
0x96e4: mul rcx
0x96e7: jo 0xa3de
0x96ed: test rax,rax
0x96f0: js 0xa3d9
0x96f6: test rsi,rsi
0x96f9: jne 0xa3d9
0x96ff: lea rax,[rcx+rcx*4]
0x9703: lea rsi,[rax+rax*4]
0x9707: shl rsi,0x4
0x970b: call 0x145f0
0x9710: shl qword ptr [rip+0x217ca1],0x1
0x9717: mov rcx,qword ptr [rip+0x217c92]
0x971e: mov rdi,rax
0x9721: mov qword ptr [rip+0x217c98],rax
0x9728: lea rax,[rcx+rcx*4]
0x972c: lea rax,[rax+rax*4]
0x9730: lea rbx,[rdi+rax*8]
0x9734: xor eax,eax
0x9736: lea rdi,[rbx+0x8]
0x973a: mov rcx,rbx
0x973d: mov qword ptr [rbx],0x0
0x9744: mov qword ptr [rbx+0xbc],0x0
0x974f: and rdi,0xfffffffffffffff8
0x9753: sub rcx,rdi
0x9756: add ecx,0xc4
0x975c: shr ecx,0x3
0x975f: rep stosq qword ptr [rdi],rax
0x9762: mov qword ptr [rbx+0x20],0x0
0x976a: mov dword ptr [rbx+0xa8],r14d
0x9771: mov dword ptr [rbx+0xc4],0xffffffff
0x977b: cmp byte ptr [rip+0x217c27],0x0
0x9782: jne 0x9791
0x9784: cmp byte ptr [rip+0x217c1d],0x0
0x978b: jne 0x9e80
0x9791: test r13b,r13b
0x9794: movzx r8d,byte ptr [rip+0x217b75]
0x979c: je 0x99c0
0x97a2: mov r12,qword ptr [rbp-0x388]
0x97a9: movzx edx,byte ptr [r12]
0x97ae: cmp dl,0x2f
0x97b1: je 0xa218
0x97b7: movzx ecx,byte ptr [r15]
0x97bb: test cl,cl
0x97bd: jne 0x9db3
0x97c3: test r8b,r8b
0x97c6: jne 0x9bfa
0x97cc: mov ecx,dword ptr [rip+0x217b26]
0x97d2: lea r15,[rbx+0x18]
0x97d6: cmp ecx,0x3
0x97d9: jb 0x9b40
0x97df: cmp ecx,0x4
0x97e2: jbe 0x9c40
0x97e8: cmp ecx,0x5
0x97eb: jne 0x9b40
0x97f1: mov rdx,r15
0x97f4: mov rsi,r12
0x97f7: mov edi,0x1
0x97fc: call 0x3640
0x9801: test eax,eax
0x9803: jne 0x9b58
0x9809: cmp r14d,0x5
0x980d: mov byte ptr [rbx+0xb8],0x1
0x9814: je 0x9b90
0x981a: mov eax,dword ptr [rbx+0x30]
0x981d: and eax,0xf000
0x9822: cmp eax,0x8000
0x9827: je 0x9b90
0x982d: mov r10d,dword ptr [rip+0x217b04]
0x9834: test r10d,r10d
0x9837: je 0x9842
0x9839: cmp byte ptr [rip+0x217b25],0x0
0x9840: je 0x988c
0x9842: call 0x32a0
0x9847: mov r14,qword ptr [rbx+0x18]
0x984b: cmp r14,qword ptr [rip+0x216a9e]
0x9852: mov r8,rax
0x9855: mov dword ptr [rax],0x5f
0x985b: je 0x9864
0x985d: mov qword ptr [rip+0x216a8c],r14
0x9864: mov r9d,dword ptr [rip+0x217acd]
0x986b: lea rax,[rip+0x2167b0]
0x9872: mov qword ptr [rbx+0xb0],rax
0x9879: test r9d,r9d
0x987c: je 0x9f40
0x9882: mov dword ptr [rbx+0xbc],0x0
0x988c: mov eax,dword ptr [rbx+0x30]
0x988f: and eax,0xf000
0x9894: cmp eax,0xa000
0x9899: je 0x9fe0
0x989f: cmp eax,0x4000
0x98a4: je 0xa100
0x98aa: mov dword ptr [rbx+0xa8],0x5
0x98b4: mov ecx,dword ptr [rip+0x217a7e]
0x98ba: mov r12,qword ptr [rbx+0x58]
0x98be: test ecx,ecx
0x98c0: je 0x98cb
0x98c2: cmp byte ptr [rip+0x217a63],0x0
0x98c9: je 0x993c
0x98cb: mov r8,qword ptr [rip+0x217a4e]
0x98d2: mov edx,dword ptr [rip+0x217a50]
0x98d8: lea r13,[rbp-0x2d0]
0x98df: mov ecx,0x200
0x98e4: mov rdi,r12
0x98e7: mov rsi,r13
0x98ea: call 0xebc0
0x98ef: xor esi,esi
0x98f1: mov rdi,rax
0x98f4: call 0x10220
0x98f9: cmp eax,dword ptr [rip+0x217a5d]
0x98ff: jle 0x9907
0x9901: mov dword ptr [rip+0x217a55],eax
0x9907: mov edx,dword ptr [rip+0x217a2b]
0x990d: test edx,edx
0x990f: jne 0xa150
0x9915: cmp byte ptr [rip+0x216705],0x0
0x991c: jne 0xa130
0x9922: cmp byte ptr [rip+0x2166f7],0x0
0x9929: jne 0xa190
0x992f: cmp byte ptr [rip+0x2179f8],0x0
0x9936: jne 0xa168
0x993c: cmp byte ptr [rip+0x217a22],0x0
0x9943: je 0x995d
0x9945: mov rdi,qword ptr [rbx+0xb0]
0x994c: call 0x3400
0x9951: cmp eax,dword ptr [rip+0x2179fd]
0x9957: jg 0x9eb0
0x995d: mov eax,dword ptr [rip+0x2179d5]
0x9963: test eax,eax
0x9965: je 0x9cd0
0x996b: movzx eax,byte ptr [rip+0x21798a]
0x9972: test al,al
0x9974: jne 0x9c98
0x997a: mov rdi,qword ptr [rbp-0x388]
0x9981: call 0x147c0
0x9986: add qword ptr [rip+0x217a22],0x1
0x998e: mov qword ptr [rbx],rax
0x9991: mov rsi,qword ptr [rbp-0x38]
0x9995: xor rsi,qword ptr fs:0x28
0x999e: mov rax,r12
0x99a1: jne 0xa3d4
0x99a7: lea rsp,[rbp-0x28]
0x99ab: pop rbx
0x99ac: pop r12
0x99ae: pop r13
0x99b0: pop r14
0x99b2: pop r15
0x99b4: pop rbp
0x99b5: ret
0x99c0: test r8b,r8b
0x99c3: jne 0x9be0
0x99c9: cmp byte ptr [rip+0x2178d1],0x0
0x99d0: jne 0x9b00
0x99d6: cmp r14d,0x3
0x99da: je 0xa2f0
0x99e0: movzx eax,byte ptr [rip+0x217915]
0x99e7: test al,al
0x99e9: jne 0x9a20
0x99eb: cmp byte ptr [rip+0x2178ae],0x0
0x99f2: je 0x9a10
0x99f4: test r14d,r14d
0x99f7: sete cl
0x99fa: cmp r14d,0x6
0x99fe: mov edx,ecx
0x9a00: je 0x9a34
0x9a02: test cl,cl
0x9a04: jne 0x9a34
0x9a06: cmp byte ptr [rip+0x217893],0x0
0x9a0d: jne 0x9a74
0x9a0f: nop
0x9a10: xor r12d,r12d
0x9a13: jmp 0x997a
0x9a20: test r14d,r14d
0x9a23: sete dl
0x9a26: cmp r14d,0x6
0x9a2a: je 0x9a34
0x9a2c: test dl,dl
0x9a2e: je 0x9b00
0x9a34: cmp dword ptr [rip+0x2178bd],0x5
0x9a3b: je 0x9b00
0x9a41: cmp byte ptr [rip+0x217948],0x0
0x9a48: jne 0x9b00
0x9a4e: cmp byte ptr [rip+0x2178a8],0x0
0x9a55: jne 0x9b00
0x9a5b: test al,al
0x9a5d: jne 0x9b00
0x9a63: cmp byte ptr [rip+0x217836],0x0
0x9a6a: je 0x9a10
0x9a6c: test dl,dl
0x9a6e: jne 0x9b00
0x9a74: xor r12d,r12d
0x9a77: cmp r14d,0x5
0x9a7b: jne 0x997a
0x9a81: cmp dword ptr [rip+0x21788c],0x3
0x9a88: je 0x9b00
0x9a8a: cmp byte ptr [rip+0x217881],0x0
0x9a91: mov byte ptr [rbp-0x390],r8b
0x9a98: je 0x997a
0x9a9e: mov edi,0xe
0x9aa3: call 0x5670
0x9aa8: test al,al
0x9aaa: movzx r8d,byte ptr [rbp-0x390]
0x9ab2: jne 0x9b00
0x9ab4: mov edi,0x10
0x9ab9: call 0x5670
0x9abe: test al,al
0x9ac0: movzx r8d,byte ptr [rbp-0x390]
0x9ac8: jne 0x9b00
0x9aca: mov edi,0x11
0x9acf: call 0x5670
0x9ad4: test al,al
0x9ad6: movzx r8d,byte ptr [rbp-0x390]
0x9ade: jne 0x9b00
0x9ae0: mov edi,0x15
0x9ae5: call 0x5670
0x9aea: test al,al
0x9aec: movzx r8d,byte ptr [rbp-0x390]
0x9af4: je 0x997a
0x9afa: nop word ptr [rax+rax]
0x9b00: mov rax,qword ptr [rbp-0x388]
0x9b07: movzx edx,byte ptr [rax]
0x9b0a: cmp dl,0x2f
0x9b0d: jne 0x9f20
0x9b13: mov eax,dword ptr [rip+0x2177df]
0x9b19: lea r15,[rbx+0x18]
0x9b1d: cmp eax,0x3
0x9b20: jb 0x9b37
0x9b22: cmp eax,0x4
0x9b25: jbe 0x9b37
0x9b27: cmp eax,0x5
0x9b2a: mov r12,qword ptr [rbp-0x388]
0x9b31: je 0x97f1
0x9b37: mov r12,qword ptr [rbp-0x388]
0x9b3e: nop
0x9b40: mov rdx,r15
0x9b43: mov rsi,r12
0x9b46: mov edi,0x1
0x9b4b: call 0x3410
0x9b50: test eax,eax
0x9b52: je 0x9809
0x9b58: lea rsi,[rip+0xdd87]
0x9b5f: xor edi,edi
0x9b61: mov edx,0x5
0x9b66: call 0x33e0
0x9b6b: mov rdx,r12
0x9b6e: movzx edi,r13b
0x9b72: mov rsi,rax
0x9b75: call 0x6300
0x9b7a: xor r12d,r12d
0x9b7d: test r13b,r13b
0x9b80: jne 0x9991
0x9b86: jmp 0x997a
0x9b90: cmp byte ptr [rip+0x21777b],0x0
0x9b97: je 0x982d
0x9b9d: mov edi,0x15
0x9ba2: call 0x5670
0x9ba7: test al,al
0x9ba9: je 0x982d
0x9baf: mov r14,qword ptr [rbx+0x18]
0x9bb3: call 0x32a0
0x9bb8: cmp r14,qword ptr [rip+0x216739]
0x9bbf: mov dword ptr [rax],0x5f
0x9bc5: je 0x9bce
0x9bc7: mov qword ptr [rip+0x21672a],r14
0x9bce: mov byte ptr [rbx+0xc0],0x0
0x9bd5: jmp 0x982d
0x9be0: mov rax,qword ptr [rbp-0x388]
0x9be7: movzx edx,byte ptr [rax]
0x9bea: cmp dl,0x2f
0x9bed: jne 0x9da0
0x9bf3: mov r12,qword ptr [rbp-0x388]
0x9bfa: mov esi,0x2
0x9bff: mov rdi,r12
0x9c02: call 0xc540
0x9c07: test rax,rax
0x9c0a: mov qword ptr [rbx+0x10],rax
0x9c0e: jne 0x97cc
0x9c14: lea rsi,[rip+0xdcb3]
0x9c1b: xor edi,edi
0x9c1d: mov edx,0x5
0x9c22: call 0x33e0
0x9c27: movzx edi,r13b
0x9c2b: mov rdx,r12
0x9c2e: mov rsi,rax
0x9c31: call 0x6300
0x9c36: jmp 0x97cc
0x9c40: test r13b,r13b
0x9c43: je 0x9b40
0x9c49: mov rdx,r15
0x9c4c: mov rsi,r12
0x9c4f: mov edi,0x1
0x9c54: mov dword ptr [rbp-0x390],ecx
0x9c5a: call 0x3640
0x9c5f: mov ecx,dword ptr [rbp-0x390]
0x9c65: cmp ecx,0x3
0x9c68: je 0x9c87
0x9c6a: test eax,eax
0x9c6c: js 0xa270
0x9c72: mov edx,dword ptr [rbx+0x30]
0x9c75: and edx,0xf000
0x9c7b: cmp edx,0x4000
0x9c81: jne 0x9b40
0x9c87: test eax,eax
0x9c89: je 0x9809
0x9c8f: jmp 0xa27e
0x9c98: mov rdi,qword ptr [rbx+0x20]
0x9c9c: lea rsi,[rbp-0x2d0]
0x9ca3: call 0xfba0
0x9ca8: mov rdi,rax
0x9cab: call 0x3400
0x9cb0: cmp eax,dword ptr [rip+0x2176aa]
0x9cb6: jle 0x997a
0x9cbc: mov dword ptr [rip+0x21769e],eax
0x9cc2: jmp 0x997a
0x9cd0: mov rdi,qword ptr [rbx+0x28]
0x9cd4: lea rsi,[rbp-0x2f0]
0x9cdb: call 0xfba0
0x9ce0: mov rdi,rax
0x9ce3: call 0x3400
0x9ce8: cmp eax,dword ptr [rip+0x21766a]
0x9cee: jle 0x9cf6
0x9cf0: mov dword ptr [rip+0x217662],eax
0x9cf6: mov eax,dword ptr [rbx+0x30]
0x9cf9: and eax,0xb000
0x9cfe: cmp eax,0x2000
0x9d03: jne 0x9ec0
0x9d09: mov rax,qword ptr [rbx+0x40]
0x9d0d: lea r13,[rbp-0x2d0]
0x9d14: mov rsi,r13
0x9d17: mov rdi,rax
0x9d1a: shr rax,0x20
0x9d1e: shr rdi,0x8
0x9d22: mov edx,edi
0x9d24: mov rdi,rax
0x9d27: and edx,0xfff
0x9d2d: and edi,0xfffff000
0x9d33: or edi,edx
0x9d35: call 0xfba0
0x9d3a: mov rdi,rax
0x9d3d: call 0x3400
0x9d42: cmp eax,dword ptr [rip+0x2175fc]
0x9d48: jle 0x9d50
0x9d4a: mov dword ptr [rip+0x2175f4],eax
0x9d50: mov rax,qword ptr [rbx+0x40]
0x9d54: mov rsi,r13
0x9d57: movzx edx,al
0x9d5a: shr rax,0xc
0x9d5e: mov rdi,rax
0x9d61: xor dil,dil
0x9d64: or edi,edx
0x9d66: call 0xfba0
0x9d6b: mov rdi,rax
0x9d6e: call 0x3400
0x9d73: mov edx,dword ptr [rip+0x2175c7]
0x9d79: cmp eax,edx
0x9d7b: jle 0x9d85
0x9d7d: mov dword ptr [rip+0x2175bd],eax
0x9d83: mov edx,eax
0x9d85: mov eax,dword ptr [rip+0x2175b9]
0x9d8b: lea eax,[rdx+rax+0x2]
0x9d8f: cmp eax,dword ptr [rip+0x2175a7]
0x9d95: jle 0x996b
0x9d9b: jmp 0x9ef8
0x9da0: movzx ecx,byte ptr [r15]
0x9da4: mov r12,qword ptr [rbp-0x388]
0x9dab: test cl,cl
0x9dad: je 0x9bfa
0x9db3: mov rdi,qword ptr [rbp-0x388]
0x9dba: mov byte ptr [rbp-0x392],dl
0x9dc0: mov byte ptr [rbp-0x391],cl
0x9dc6: mov byte ptr [rbp-0x390],r8b
0x9dcd: call 0x3400
0x9dd2: mov rdi,r15
0x9dd5: mov r12,rax
0x9dd8: call 0x3400
0x9ddd: lea rax,[r12+rax+0x20]
0x9de2: movzx ecx,byte ptr [rbp-0x391]
0x9de9: movzx r10d,byte ptr [r15+0x1]
0x9dee: movzx r8d,byte ptr [rbp-0x390]
0x9df6: movzx edx,byte ptr [rbp-0x392]
0x9dfd: and rax,0xfffffffffffffff0
0x9e01: sub rsp,rax
0x9e04: lea rdi,[rsp+0xf]
0x9e09: and rdi,0xfffffffffffffff0
0x9e0d: cmp cl,0x2e
0x9e10: mov r12,rdi
0x9e13: je 0x9f08
0x9e19: mov rsi,r15
0x9e1c: jmp 0x9e2b
0x9e20: mov ecx,r10d
0x9e23: movzx r10d,byte ptr [rsi+0x1]
0x9e28: mov rdi,rax
0x9e2b: lea rax,[rdi+0x1]
0x9e2f: add rsi,0x1
0x9e33: test r10b,r10b
0x9e36: mov byte ptr [rax-0x1],cl
0x9e39: jne 0x9e20
0x9e3b: cmp r15,rsi
0x9e3e: jae 0x9e4d
0x9e40: cmp byte ptr [rsi-0x1],0x2f
0x9e44: je 0x9e4d
0x9e46: mov byte ptr [rax],0x2f
0x9e49: lea rax,[rdi+0x2]
0x9e4d: test dl,dl
0x9e4f: je 0x9e72
0x9e51: mov rcx,qword ptr [rbp-0x388]
0x9e58: nop dword ptr [rax+rax]
0x9e60: add rcx,0x1
0x9e64: add rax,0x1
0x9e68: mov byte ptr [rax-0x1],dl
0x9e6b: movzx edx,byte ptr [rcx]
0x9e6e: test dl,dl
0x9e70: jne 0x9e60
0x9e72: mov byte ptr [rax],0x0
0x9e75: jmp 0x97c3
0x9e80: mov rdi,qword ptr [rbp-0x388]
0x9e87: call 0x5ae0
0x9e8c: movzx edx,al
0x9e8f: test al,al
0x9e91: mov dword ptr [rbx+0xc4],edx
0x9e97: je 0x9791
0x9e9d: mov byte ptr [rip+0x217505],0x1
0x9ea4: jmp 0x9791
0x9eb0: mov dword ptr [rip+0x21749e],eax
0x9eb6: jmp 0x995d
0x9ec0: mov rdi,qword ptr [rbx+0x48]
0x9ec4: mov r8,qword ptr [rip+0x21614d]
0x9ecb: lea rsi,[rbp-0x2d0]
0x9ed2: mov edx,dword ptr [rip+0x217444]
0x9ed8: mov ecx,0x1
0x9edd: call 0xebc0
0x9ee2: xor esi,esi
0x9ee4: mov rdi,rax
0x9ee7: call 0x10220
0x9eec: cmp eax,dword ptr [rip+0x21744a]
0x9ef2: jle 0x996b
0x9ef8: mov dword ptr [rip+0x21743e],eax
0x9efe: jmp 0x996b
0x9f08: test r10b,r10b
0x9f0b: mov rax,rdi
0x9f0e: je 0x9e4d
0x9f14: jmp 0x9e19
0x9f20: movzx ecx,byte ptr [r15]
0x9f24: test cl,cl
0x9f26: jne 0x9db3
0x9f2c: mov r12,qword ptr [rbp-0x388]
0x9f33: jmp 0x97cc
0x9f40: cmp r14,qword ptr [rip+0x2163a1]
0x9f47: je 0xa240
0x9f4d: mov dword ptr [r8],0x0
0x9f54: mov rsi,r15
0x9f57: mov rdi,r12
0x9f5a: mov qword ptr [rbp-0x390],r8
0x9f61: call 0xcdc0
0x9f66: test eax,eax
0x9f68: mov ecx,0x1
0x9f6d: mov edx,0x2
0x9f72: mov r8,qword ptr [rbp-0x390]
0x9f79: jle 0xa3b0
0x9f7f: or byte ptr [rip+0x2173df],cl
0x9f85: test eax,eax
0x9f87: mov qword ptr [rbp-0x390],r8
0x9f8e: mov dword ptr [rbx+0xbc],edx
0x9f94: jns 0x9fc2
0x9f96: mov rdx,r12
0x9f99: mov esi,0x3
0x9f9e: xor edi,edi
0x9fa0: call 0x13b90
0x9fa5: mov r8,qword ptr [rbp-0x390]
0x9fac: lea rdx,[rip+0xffd9]
0x9fb3: mov rcx,rax
0x9fb6: xor edi,edi
0x9fb8: xor eax,eax
0x9fba: mov esi,dword ptr [r8]
0x9fbd: call 0x3760
0x9fc2: mov eax,dword ptr [rbx+0x30]
0x9fc5: and eax,0xf000
0x9fca: cmp eax,0xa000
0x9fcf: jne 0x989f
0x9fd5: mov edi,dword ptr [rip+0x21735d]
0x9fdb: test edi,edi
0x9fdd: je 0x9fed
0x9fdf: nop
0x9fe0: cmp byte ptr [rip+0x217316],0x0
0x9fe7: je 0xa0bb
0x9fed: mov rsi,qword ptr [rbx+0x48]
0x9ff1: mov rdi,r12
0x9ff4: call 0xc050
0x9ff9: test rax,rax
0x9ffc: mov r14,rax
0x9fff: mov qword ptr [rbx+0x8],rax
0xa003: je 0xa2b0
0xa009: cmp byte ptr [r14],0x2f
0xa00d: je 0xa228
0xa013: mov rdi,r12
0xa016: call 0xcc50
0xa01b: test rax,rax
0xa01e: je 0xa228
0xa024: mov rdi,r14
0xa027: mov qword ptr [rbp-0x390],rax
0xa02e: call 0x3400
0xa033: mov rdx,qword ptr [rbp-0x390]
0xa03a: lea rdi,[rdx+rax+0x2]
0xa03f: call 0x14590
0xa044: mov rdx,qword ptr [rbp-0x390]
0xa04b: mov r15,rax
0xa04e: cmp byte ptr [r12+rdx-0x1],0x2f
0xa054: je 0xa05a
0xa056: add rdx,0x1
0xa05a: mov rsi,r12
0xa05d: mov rdi,r15
0xa060: call 0x36f0
0xa065: mov rsi,r14
0xa068: mov rdi,rax
0xa06b: call 0x32e0
0xa070: test r15,r15
0xa073: je 0xa2e0
0xa079: mov esi,dword ptr [rbx+0xc4]
0xa07f: test esi,esi
0xa081: je 0xa390
0xa087: cmp dword ptr [rip+0x217286],0x1
0xa08e: ja 0xa0d0
0xa090: cmp byte ptr [rip+0x217266],0x0
0xa097: jne 0xa0d0
0xa099: nop dword ptr [rax]
0xa0a0: mov rdi,r15
0xa0a3: call 0x3880
0xa0a8: mov eax,dword ptr [rbx+0x30]
0xa0ab: and eax,0xf000
0xa0b0: cmp eax,0xa000
0xa0b5: jne 0x989f
0xa0bb: mov dword ptr [rbx+0xa8],0x6
0xa0c5: jmp 0x98b4
0xa0d0: lea rdx,[rbp-0x380]
0xa0d7: mov rsi,r15
0xa0da: mov edi,0x1
0xa0df: call 0x3640
0xa0e4: test eax,eax
0xa0e6: jne 0xa0a0
0xa0e8: mov eax,dword ptr [rbp-0x368]
0xa0ee: mov byte ptr [rbx+0xb9],0x1
0xa0f5: mov dword ptr [rbx+0xac],eax
0xa0fb: jmp 0xa0a0
0xa100: test r13b,r13b
0xa103: je 0xa120
0xa105: cmp byte ptr [rip+0x2171e9],0x0
0xa10c: jne 0xa120
0xa10e: mov dword ptr [rbx+0xa8],0x9
0xa118: jmp 0x98b4
0xa120: mov dword ptr [rbx+0xa8],0x3
0xa12a: jmp 0x98b4
0xa130: mov edi,dword ptr [rbx+0x34]
0xa133: call 0x95c0
0xa138: cmp eax,dword ptr [rip+0x217212]
0xa13e: jle 0x9922
0xa144: mov dword ptr [rip+0x217206],eax
0xa14a: jmp 0x9922
0xa150: cmp byte ptr [rip+0x21720e],0x0
0xa157: jne 0x9945
0xa15d: jmp 0x996b
0xa168: mov edi,dword ptr [rbx+0x34]
0xa16b: call 0x95c0
0xa170: cmp eax,dword ptr [rip+0x2171d2]
0xa176: jle 0x993c
0xa17c: mov dword ptr [rip+0x2171c6],eax
0xa182: jmp 0x993c
0xa190: cmp byte ptr [rip+0x217196],0x0
0xa197: mov r14d,dword ptr [rbx+0x38]
0xa19b: je 0xa360
0xa1a1: lea rcx,[rip+0xd6e5]
0xa1a8: mov r8d,r14d
0xa1ab: mov edx,0x15
0xa1b0: mov esi,0x1
0xa1b5: mov rdi,r13
0xa1b8: xor eax,eax
0xa1ba: call 0x3870
0xa1bf: mov rax,r13
0xa1c2: mov ecx,dword ptr [rax]
0xa1c4: add rax,0x4
0xa1c8: lea edx,[rcx-0x1010101]
0xa1ce: not ecx
0xa1d0: and edx,ecx
0xa1d2: and edx,0x80808080
0xa1d8: je 0xa1c2
0xa1da: mov ecx,edx
0xa1dc: shr ecx,0x10
0xa1df: test edx,0x8080
0xa1e5: cmove edx,ecx
0xa1e8: lea rcx,[rax+0x2]
0xa1ec: mov esi,edx
0xa1ee: cmove rax,rcx
0xa1f2: add sil,dl
0xa1f5: sbb rax,0x3
0xa1f9: sub eax,r13d
0xa1fc: cmp dword ptr [rip+0x21714a],eax
0xa202: jge 0x992f
0xa208: mov dword ptr [rip+0x21713e],eax
0xa20e: jmp 0x992f
0xa218: mov r12,qword ptr [rbp-0x388]
0xa21f: jmp 0x97c3
0xa228: mov rdi,r14
0xa22b: call 0x147c0
0xa230: mov r15,rax
0xa233: jmp 0xa070
0xa240: mov dword ptr [r8],0x5f
0xa247: mov eax,dword ptr [rbx+0x30]
0xa24a: mov dword ptr [rbx+0xbc],0x0
0xa254: and eax,0xf000
0xa259: cmp eax,0xa000
0xa25e: jne 0x989f
0xa264: jmp 0x9fed
0xa270: call 0x32a0
0xa275: cmp dword ptr [rax],0x2
0xa278: je 0x9b40
0xa27e: lea rsi,[rip+0xd661]
0xa285: mov edx,0x5
0xa28a: xor edi,edi
0xa28c: call 0x33e0
0xa291: mov rdx,r12
0xa294: mov rsi,rax
0xa297: mov edi,0x1
0xa29c: call 0x6300
0xa2a1: xor r12d,r12d
0xa2a4: jmp 0x9991
0xa2b0: lea rsi,[rip+0xd640]
0xa2b7: xor edi,edi
0xa2b9: mov edx,0x5
0xa2be: call 0x33e0
0xa2c3: movzx edi,r13b
0xa2c7: mov rdx,r12
0xa2ca: mov rsi,rax
0xa2cd: call 0x6300
0xa2d2: mov r14,qword ptr [rbx+0x8]
0xa2d6: test r14,r14
0xa2d9: jne 0xa009
0xa2df: nop
0xa2e0: xor r15d,r15d
0xa2e3: jmp 0xa0a0
0xa2f0: cmp byte ptr [rip+0x21701b],0x0
0xa2f7: je 0x99e0
0xa2fd: mov edi,0x13
0xa302: mov byte ptr [rbp-0x390],r8b
0xa309: call 0x5670
0xa30e: test al,al
0xa310: movzx r8d,byte ptr [rbp-0x390]
0xa318: jne 0x9b00
0xa31e: mov edi,0x12
0xa323: call 0x5670
0xa328: test al,al
0xa32a: movzx r8d,byte ptr [rbp-0x390]
0xa332: jne 0x9b00
0xa338: mov edi,0x14
0xa33d: call 0x5670
0xa342: test al,al
0xa344: movzx r8d,byte ptr [rbp-0x390]
0xa34c: jne 0x9b00
0xa352: jmp 0x99e0
0xa360: mov edi,r14d
0xa363: call 0xf960
0xa368: test rax,rax
0xa36b: mov rdi,rax
0xa36e: je 0xa1a1
0xa374: xor esi,esi
0xa376: call 0x10220
0xa37b: mov edx,0x0
0xa380: test eax,eax
0xa382: cmovs eax,edx
0xa385: jmp 0xa1fc
0xa390: mov rdi,qword ptr [rbx+0x8]
0xa394: call 0x5ae0
0xa399: test al,al
0xa39b: je 0xa087
0xa3a1: mov dword ptr [rbx+0xc4],0xffffffff
0xa3ab: jmp 0xa087
0xa3b0: mov edx,dword ptr [r8]
0xa3b3: lea ecx,[rdx-0x16]
0xa3b6: and ecx,0xffffffef
0xa3b9: je 0xa3c0
0xa3bb: cmp edx,0x5f
0xa3be: jne 0xa3cb
0xa3c0: mov rdx,qword ptr [rbx+0x18]
0xa3c4: mov qword ptr [rip+0x215f1d],rdx
0xa3cb: xor ecx,ecx
0xa3cd: xor edx,edx
0xa3cf: jmp 0x9f7f
0xa3d4: call 0x3420
0xa3d9: call 0x147e0
0xa3de: mov esi,0x1
0xa3e3: jmp 0x96ed
0xa3f0: push r15
0xa3f2: push r14
0xa3f4: mov r14,rdi
0xa3f7: push r13
0xa3f9: push r12
0xa3fb: push rbp
0xa3fc: push rbx
0xa3fd: mov rbx,rsi
0xa400: sub rsp,0x348
0xa407: mov dword ptr [rsp+0xc],edx
0xa40b: mov byte ptr [rsp+0xb],dl
0xa40f: mov rax,qword ptr fs:0x28
0xa418: mov qword ptr [rsp+0x338],rax
0xa420: xor eax,eax
0xa422: call 0x32a0
0xa427: mov rdi,r14
0xa42a: mov dword ptr [rax],0x0
0xa430: mov r12,rax
0xa433: call 0x33b0
0xa438: test rax,rax
0xa43b: je 0xa970
0xa441: cmp qword ptr [rip+0x216f7f],0x0
0xa449: mov r13,rax
0xa44c: je 0xa5c7
0xa452: mov rdi,rax
0xa455: call 0x35b0
0xa45a: test eax,eax
0xa45c: lea rdx,[rsp+0x10]
0xa461: js 0xa4d0
0xa463: mov esi,eax
0xa465: mov edi,0x1
0xa46a: call 0x3690
0xa46f: shr eax,0x1f
0xa472: test al,al
0xa474: je 0xa4e4
0xa476: lea rsi,[rip+0xd9db]
0xa47d: mov edx,0x5
0xa482: xor edi,edi
0xa484: call 0x33e0
0xa489: movzx edi,byte ptr [rsp+0xc]
0xa48e: mov rdx,r14
0xa491: mov rsi,rax
0xa494: call 0x6300
0xa499: mov rdi,r13
0xa49c: call 0x3540
0xa4a1: mov rax,qword ptr [rsp+0x338]
0xa4a9: xor rax,qword ptr fs:0x28
0xa4b2: jne 0xaa9a
0xa4b8: add rsp,0x348
0xa4bf: pop rbx
0xa4c0: pop rbp
0xa4c1: pop r12
0xa4c3: pop r13
0xa4c5: pop r14
0xa4c7: pop r15
0xa4c9: ret
0xa4d0: mov rsi,r14
0xa4d3: mov edi,0x1
0xa4d8: call 0x3640
0xa4dd: shr eax,0x1f
0xa4e0: test al,al
0xa4e2: jne 0xa476
0xa4e4: mov rdx,qword ptr [rsp+0x18]
0xa4e9: mov edi,0x10
0xa4ee: mov r15,qword ptr [rsp+0x10]
0xa4f3: mov qword ptr [rsp+0x0],rdx
0xa4f7: call 0x14590
0xa4fc: mov rdx,qword ptr [rsp+0x0]
0xa500: mov rdi,qword ptr [rip+0x216ec1]
0xa507: mov rsi,rax
0xa50a: mov qword ptr [rax+0x8],r15
0xa50e: mov rbp,rax
0xa511: mov qword ptr [rax],rdx
0xa514: call 0xe7b0
0xa519: test rax,rax
0xa51c: je 0xaa9f
0xa522: cmp rbp,rax
0xa525: je 0xa57c
0xa527: mov rdi,rbp
0xa52a: call 0x3880
0xa52f: mov rdx,r14
0xa532: mov esi,0x3
0xa537: xor edi,edi
0xa539: call 0x13b90
0xa53e: lea rsi,[rip+0xd93b]
0xa545: mov rbx,rax
0xa548: mov edx,0x5
0xa54d: xor edi,edi
0xa54f: call 0x33e0
0xa554: mov rcx,rbx
0xa557: mov rdx,rax
0xa55a: xor esi,esi
0xa55c: xor edi,edi
0xa55e: xor eax,eax
0xa560: call 0x3760
0xa565: mov rdi,r13
0xa568: call 0x3540
0xa56d: mov dword ptr [rip+0x216c99],0x2
0xa577: jmp 0xa4a1
0xa57c: mov rax,qword ptr [rip+0x216b75]
0xa583: mov rdx,qword ptr [rip+0x216b76]
0xa58a: mov rbp,qword ptr [rsp+0x18]
0xa58f: mov r15,qword ptr [rsp+0x10]
0xa594: sub rdx,rax
0xa597: cmp rdx,0xf
0xa59b: ja 0xa5b5
0xa59d: lea rdi,[rip+0x216b3c]
0xa5a4: mov esi,0x10
0xa5a9: call 0x15530
0xa5ae: mov rax,qword ptr [rip+0x216b43]
0xa5b5: lea rdx,[rax+0x10]
0xa5b9: mov qword ptr [rip+0x216b38],rdx
0xa5c0: mov qword ptr [rax+0x8],r15
0xa5c4: mov qword ptr [rax],rbp
0xa5c7: call 0x94f0
0xa5cc: cmp byte ptr [rip+0x216d23],0x0
0xa5d3: jne 0xa680
0xa5d9: cmp byte ptr [rip+0x216cd8],0x0
0xa5e0: jne 0xa680
0xa5e6: mov qword ptr [rsp+0x0],0x0
0xa5ee: nop
0xa5f0: mov dword ptr [r12],0x0
0xa5f8: mov rdi,r13
0xa5fb: call 0x3650
0xa600: test rax,rax
0xa603: mov rbp,rax
0xa606: je 0xa740
0xa60c: lea rbx,[rax+0x13]
0xa610: mov eax,dword ptr [rip+0x216cda]
0xa616: cmp eax,0x2
0xa619: je 0xa8c0
0xa61f: cmp byte ptr [rbp+0x13],0x2e
0xa623: je 0xa8a0
0xa629: test eax,eax
0xa62b: jne 0xa8c0
0xa631: mov r15,qword ptr [rip+0x216ca8]
0xa638: test r15,r15
0xa63b: jne 0xa655
0xa63d: jmp 0xa8c0
0xa648: mov r15,qword ptr [r15+0x8]
0xa64c: test r15,r15
0xa64f: je 0xa8c0
0xa655: mov rdi,qword ptr [r15]
0xa658: mov edx,0x4
0xa65d: mov rsi,rbx
0xa660: call 0x34f0
0xa665: test eax,eax
0xa667: jne 0xa648
0xa669: nop dword ptr [rax]
0xa670: call 0x6ee0
0xa675: jmp 0xa5f0
0xa680: cmp byte ptr [rip+0x215989],0x0
0xa687: jne 0xa6b1
0xa689: mov rdi,qword ptr [rip+0x215bf8]
0xa690: mov rax,qword ptr [rdi+0x28]
0xa694: cmp rax,qword ptr [rdi+0x30]
0xa698: jae 0xaa8b
0xa69e: lea rdx,[rax+0x1]
0xa6a2: mov qword ptr [rdi+0x28],rdx
0xa6a6: mov byte ptr [rax],0xa
0xa6a9: add qword ptr [rip+0x216b47],0x1
0xa6b1: cmp byte ptr [rip+0x216c60],0x0
0xa6b8: mov byte ptr [rip+0x215951],0x0
0xa6bf: jne 0xaa43
0xa6c5: xor ebp,ebp
0xa6c7: cmp byte ptr [rip+0x216c43],0x0
0xa6ce: jne 0xaa02
0xa6d4: test rbx,rbx
0xa6d7: mov rsi,qword ptr [rip+0x216bea]
0xa6de: lea r9,[rip+0x216a5b]
0xa6e5: cmove rbx,r14
0xa6e9: sub rsp,0x8
0xa6ed: mov r8d,0x1
0xa6f3: push rbp
0xa6f4: xor ecx,ecx
0xa6f6: mov edx,0xffffffff
0xa6fb: mov rdi,rbx
0xa6fe: call 0x7490
0xa703: mov rdi,rbp
0xa706: call 0x3880
0xa70b: mov rcx,qword ptr [rip+0x215b76]
0xa712: lea rdi,[rip+0xd426]
0xa719: mov esi,0x1
0xa71e: mov edx,0x2
0xa723: call 0x36d0
0xa728: pop rcx
0xa729: add qword ptr [rip+0x216ac7],0x2
0xa731: pop rsi
0xa732: jmp 0xa5e6
0xa740: mov edx,dword ptr [r12]
0xa744: test edx,edx
0xa746: je 0xa776
0xa748: lea rsi,[rip+0xd1de]
0xa74f: xor edi,edi
0xa751: mov edx,0x5
0xa756: call 0x33e0
0xa75b: movzx edi,byte ptr [rsp+0xb]
0xa760: mov rdx,r14
0xa763: mov rsi,rax
0xa766: call 0x6300
0xa76b: cmp dword ptr [r12],0x4b
0xa770: je 0xa670
0xa776: mov rdi,r13
0xa779: call 0x3540
0xa77e: test eax,eax
0xa780: jne 0xa9b0
0xa786: call 0x5c40
0xa78b: cmp byte ptr [rip+0x216b64],0x0
0xa792: jne 0xa998
0xa798: mov eax,dword ptr [rip+0x216b9a]
0xa79e: test eax,eax
0xa7a0: je 0xa7af
0xa7a2: cmp byte ptr [rip+0x216b83],0x0
0xa7a9: je 0xa884
0xa7af: cmp byte ptr [rip+0x216b62],0x0
0xa7b6: jne 0xa9d8
0xa7bc: lea rsi,[rip+0xd194]
0xa7c3: mov edx,0x5
0xa7c8: xor edi,edi
0xa7ca: call 0x33e0
0xa7cf: mov rsi,qword ptr [rip+0x215ab2]
0xa7d6: mov rbx,rax
0xa7d9: mov rdi,rax
0xa7dc: call 0x3570
0xa7e1: mov rdi,rbx
0xa7e4: call 0x3400
0xa7e9: mov rdi,qword ptr [rip+0x215a98]
0xa7f0: add qword ptr [rip+0x216a01],rax
0xa7f7: mov rax,qword ptr [rdi+0x28]
0xa7fb: cmp rax,qword ptr [rdi+0x30]
0xa7ff: jae 0xaa6d
0xa805: lea rdx,[rax+0x1]
0xa809: mov qword ptr [rdi+0x28],rdx
0xa80d: mov byte ptr [rax],0x20
0xa810: mov r8,qword ptr [rip+0x216b09]
0xa817: mov edx,dword ptr [rip+0x216b0b]
0xa81d: lea rsi,[rsp+0xa0]
0xa825: mov rdi,qword ptr [rsp+0x0]
0xa829: mov ecx,0x200
0xa82e: add qword ptr [rip+0x2169c2],0x1
0xa836: call 0xebc0
0xa83b: mov rsi,qword ptr [rip+0x215a46]
0xa842: mov rbx,rax
0xa845: mov rdi,rax
0xa848: call 0x3570
0xa84d: mov rdi,rbx
0xa850: call 0x3400
0xa855: mov rdi,qword ptr [rip+0x215a2c]
0xa85c: add qword ptr [rip+0x216995],rax
0xa863: mov rax,qword ptr [rdi+0x28]
0xa867: cmp rax,qword ptr [rdi+0x30]
0xa86b: jae 0xaa7c
0xa871: lea rdx,[rax+0x1]
0xa875: mov qword ptr [rdi+0x28],rdx
0xa879: mov byte ptr [rax],0xa
0xa87c: add qword ptr [rip+0x216974],0x1
0xa884: cmp qword ptr [rip+0x216b24],0x0
0xa88c: je 0xa4a1
0xa892: call 0x8fa0
0xa897: jmp 0xa4a1
0xa8a0: test eax,eax
0xa8a2: je 0xa670
0xa8a8: xor eax,eax
0xa8aa: cmp byte ptr [rbp+0x14],0x2e
0xa8ae: sete al
0xa8b1: cmp byte ptr [rbp+rax+0x14],0x0
0xa8b6: je 0xa670
0xa8bc: nop dword ptr [rax]
0xa8c0: mov r15,qword ptr [rip+0x216a21]
0xa8c7: test r15,r15
0xa8ca: jne 0xa8d9
0xa8cc: jmp 0xa8f8
0xa8d0: mov r15,qword ptr [r15+0x8]
0xa8d4: test r15,r15
0xa8d7: je 0xa8f8
0xa8d9: mov rdi,qword ptr [r15]
0xa8dc: mov edx,0x4
0xa8e1: mov rsi,rbx
0xa8e4: call 0x34f0
0xa8e9: test eax,eax
0xa8eb: jne 0xa8d0
0xa8ed: jmp 0xa670
0xa8f8: movzx eax,byte ptr [rbp+0x12]
0xa8fc: xor esi,esi
0xa8fe: sub eax,0x1
0xa901: cmp al,0xd
0xa903: ja 0xa912
0xa905: lea rcx,[rip+0xbcd4]
0xa90c: movzx eax,al
0xa90f: mov esi,dword ptr [rcx+rax*4]
0xa912: xor edx,edx
0xa914: mov rcx,r14
0xa917: mov rdi,rbx
0xa91a: call 0x9690
0xa91f: add qword ptr [rsp+0x0],rax
0xa923: cmp dword ptr [rip+0x216a0e],0x1
0xa92a: jne 0xa670
0xa930: cmp dword ptr [rip+0x2169f9],0xffffffff
0xa937: jne 0xa670
0xa93d: cmp byte ptr [rip+0x2169e8],0x0
0xa944: jne 0xa670
0xa94a: cmp byte ptr [rip+0x2169a5],0x0
0xa951: jne 0xa670
0xa957: call 0x5c40
0xa95c: call 0x8fa0
0xa961: call 0x94f0
0xa966: jmp 0xa670
0xa970: lea rsi,[rip+0xcf9d]
0xa977: xor edi,edi
0xa979: mov edx,0x5
0xa97e: call 0x33e0
0xa983: movzx edi,byte ptr [rsp+0xc]
0xa988: mov rdx,r14
0xa98b: mov rsi,rax
0xa98e: call 0x6300
0xa993: jmp 0xa4a1
0xa998: xor esi,esi
0xa99a: mov rdi,r14
0xa99d: call 0x5ec0
0xa9a2: jmp 0xa798
0xa9b0: lea rsi,[rip+0xcf8b]
0xa9b7: xor edi,edi
0xa9b9: mov edx,0x5
0xa9be: call 0x33e0
0xa9c3: movzx edi,byte ptr [rsp+0xc]
0xa9c8: mov rdx,r14
0xa9cb: mov rsi,rax
0xa9ce: call 0x6300
0xa9d3: jmp 0xa786
0xa9d8: mov rcx,qword ptr [rip+0x2158a9]
0xa9df: lea rdi,[rip+0xced6]
0xa9e6: mov edx,0x2
0xa9eb: mov esi,0x1
0xa9f0: call 0x36d0
0xa9f5: add qword ptr [rip+0x2167fb],0x2
0xa9fd: jmp 0xa7bc
0xaa02: mov esi,0x2
0xaa07: mov rdi,r14
0xaa0a: call 0xc540
0xaa0f: test rax,rax
0xaa12: mov rbp,rax
0xaa15: jne 0xa6d4
0xaa1b: lea rsi,[rip+0xceac]
0xaa22: xor edi,edi
0xaa24: mov edx,0x5
0xaa29: call 0x33e0
0xaa2e: movzx edi,byte ptr [rsp+0xc]
0xaa33: mov rdx,r14
0xaa36: mov rsi,rax
0xaa39: call 0x6300
0xaa3e: jmp 0xa6d4
0xaa43: mov rcx,qword ptr [rip+0x21583e]
0xaa4a: lea rdi,[rip+0xce6b]
0xaa51: mov edx,0x2
0xaa56: mov esi,0x1
0xaa5b: call 0x36d0
0xaa60: add qword ptr [rip+0x216790],0x2
0xaa68: jmp 0xa6c5
0xaa6d: mov esi,0x20
0xaa72: call 0x3490
0xaa77: jmp 0xa810
0xaa7c: mov esi,0xa
0xaa81: call 0x3490
0xaa86: jmp 0xa87c
0xaa8b: mov esi,0xa
0xaa90: call 0x3490
0xaa95: jmp 0xa6a9
0xaa9a: call 0x3420
0xaa9f: call 0x147e0
0xaaa4: nop
0xaaa6: nop word ptr cs:[rax+rax]
0xaab0: mov rax,qword ptr [rsi+0x80]
0xaab7: cmp qword ptr [rdi+0x80],rax
0xaabe: jg 0xaaf0
0xaac0: jl 0xaae0
0xaac2: mov rax,qword ptr [rsi+0x88]
0xaac9: sub eax,dword ptr [rdi+0x88]
0xaacf: jne 0xaae5
0xaad1: mov rsi,qword ptr [rsi]
0xaad4: mov rdi,qword ptr [rdi]
0xaad7: jmp 0x5de0
0xaae0: mov eax,0x1
0xaae5: ret
0xaaf0: mov eax,0xffffffff
0xaaf5: ret
0xab00: mov rax,qword ptr [rsi+0x60]
0xab04: cmp qword ptr [rdi+0x60],rax
0xab08: jg 0xab30
0xab0a: jl 0xab20
0xab0c: mov rax,qword ptr [rsi+0x68]
0xab10: sub eax,dword ptr [rdi+0x68]
0xab13: jne 0xab25
0xab15: mov rsi,qword ptr [rsi]
0xab18: mov rdi,qword ptr [rdi]
0xab1b: jmp 0x5de0
0xab20: mov eax,0x1
0xab25: ret
0xab30: mov eax,0xffffffff
0xab35: ret
0xab40: mov rax,qword ptr [rsi+0x70]
0xab44: cmp qword ptr [rdi+0x70],rax
0xab48: jg 0xab70
0xab4a: jl 0xab60
0xab4c: mov rax,qword ptr [rsi+0x78]
0xab50: sub eax,dword ptr [rdi+0x78]
0xab53: jne 0xab65
0xab55: mov rsi,qword ptr [rsi]
0xab58: mov rdi,qword ptr [rdi]
0xab5b: jmp 0x5de0
0xab60: mov eax,0x1
0xab65: ret
0xab70: mov eax,0xffffffff
0xab75: ret
0xab80: mov rax,qword ptr [rdi+0x70]
0xab84: cmp qword ptr [rsi+0x70],rax
0xab88: mov rdx,rsi
0xab8b: jg 0xabb0
0xab8d: jl 0xaba8
0xab8f: mov rax,qword ptr [rdi+0x78]
0xab93: sub eax,dword ptr [rsi+0x78]
0xab96: jne 0xabad
0xab98: mov rsi,qword ptr [rdi]
0xab9b: mov rdi,qword ptr [rdx]
0xab9e: jmp 0x5de0
0xaba8: mov eax,0x1
0xabad: ret
0xabb0: mov eax,0xffffffff
0xabb5: ret
0xabc0: mov rax,qword ptr [rdi+0x60]
0xabc4: cmp qword ptr [rsi+0x60],rax
0xabc8: mov rdx,rsi
0xabcb: jg 0xabf0
0xabcd: jl 0xabe8
0xabcf: mov rax,qword ptr [rdi+0x68]
0xabd3: sub eax,dword ptr [rsi+0x68]
0xabd6: jne 0xabed
0xabd8: mov rsi,qword ptr [rdi]
0xabdb: mov rdi,qword ptr [rdx]
0xabde: jmp 0x5de0
0xabe8: mov eax,0x1
0xabed: ret
0xabf0: mov eax,0xffffffff
0xabf5: ret
0xac00: mov rax,qword ptr [rdi+0x80]
0xac07: cmp qword ptr [rsi+0x80],rax
0xac0e: mov rdx,rsi
0xac11: jg 0xac40
0xac13: jl 0xac30
0xac15: mov rax,qword ptr [rdi+0x88]
0xac1c: sub eax,dword ptr [rsi+0x88]
0xac22: jne 0xac35
0xac24: mov rsi,qword ptr [rdi]
0xac27: mov rdi,qword ptr [rdx]
0xac2a: jmp 0x5de0
0xac30: mov eax,0x1
0xac35: ret
0xac40: mov eax,0xffffffff
0xac45: ret
0xac50: push r12
0xac52: push rbp
0xac53: mov rbp,rdi
0xac56: push rbx
0xac57: mov rdi,qword ptr [rdi]
0xac5a: mov r12,rsi
0xac5d: mov esi,0x2e
0xac62: call 0x34a0
0xac67: mov rdi,qword ptr [r12]
0xac6b: mov esi,0x2e
0xac70: mov rbx,rax
0xac73: call 0x34a0
0xac78: lea rdx,[rip+0xcc34]
0xac7f: test rax,rax
0xac82: cmove rax,rdx
0xac86: test rbx,rbx
0xac89: cmove rbx,rdx
0xac8d: mov rsi,rax
0xac90: mov rdi,rbx
0xac93: call 0x5de0
0xac98: test eax,eax
0xac9a: jne 0xacb0
0xac9c: pop rbx
0xac9d: mov rsi,qword ptr [r12]
0xaca1: mov rdi,qword ptr [rbp]
0xaca5: pop rbp
0xaca6: pop r12
0xaca8: jmp 0x5de0
0xacb0: pop rbx
0xacb1: pop rbp
0xacb2: pop r12
0xacb4: ret
0xacc0: push r12
0xacc2: push rbp
0xacc3: mov rbp,rsi
0xacc6: push rbx
0xacc7: mov r12,rdi
0xacca: mov rdi,qword ptr [rbp]
0xacce: mov esi,0x2e
0xacd3: call 0x34a0
0xacd8: mov rdi,qword ptr [r12]
0xacdc: mov esi,0x2e
0xace1: mov rbx,rax
0xace4: call 0x34a0
0xace9: lea rdx,[rip+0xcbc3]
0xacf0: test rax,rax
0xacf3: cmove rax,rdx
0xacf7: test rbx,rbx
0xacfa: cmove rbx,rdx
0xacfe: mov rsi,rax
0xad01: mov rdi,rbx
0xad04: call 0x5de0
0xad09: test eax,eax
0xad0b: jne 0xad20
0xad0d: pop rbx
0xad0e: mov rsi,qword ptr [r12]
0xad12: mov rdi,qword ptr [rbp]
0xad16: pop rbp
0xad17: pop r12
0xad19: jmp 0x5de0
0xad20: pop rbx
0xad21: pop rbp
0xad22: pop r12
0xad24: ret
0xad30: mov rax,qword ptr [rdi+0x60]
0xad34: cmp qword ptr [rsi+0x60],rax
0xad38: mov rdx,rsi
0xad3b: jg 0xad60
0xad3d: jl 0xad58
0xad3f: mov rax,qword ptr [rdi+0x68]
0xad43: sub eax,dword ptr [rsi+0x68]
0xad46: jne 0xad5d
0xad48: mov rsi,qword ptr [rdi]
0xad4b: mov rdi,qword ptr [rdx]
0xad4e: jmp 0x3590
0xad58: mov eax,0x1
0xad5d: ret
0xad60: mov eax,0xffffffff
0xad65: ret
0xad70: mov rax,qword ptr [rdi+0x70]
0xad74: cmp qword ptr [rsi+0x70],rax
0xad78: mov rdx,rsi
0xad7b: jg 0xada0
0xad7d: jl 0xad98
0xad7f: mov rax,qword ptr [rdi+0x78]
0xad83: sub eax,dword ptr [rsi+0x78]
0xad86: jne 0xad9d
0xad88: mov rsi,qword ptr [rdi]
0xad8b: mov rdi,qword ptr [rdx]
0xad8e: jmp 0x3590
0xad98: mov eax,0x1
0xad9d: ret
0xada0: mov eax,0xffffffff
0xada5: ret
0xadb0: mov rax,qword ptr [rdi+0x80]
0xadb7: cmp qword ptr [rsi+0x80],rax
0xadbe: mov rdx,rsi
0xadc1: jg 0xadf0
0xadc3: jl 0xade0
0xadc5: mov rax,qword ptr [rdi+0x88]
0xadcc: sub eax,dword ptr [rsi+0x88]
0xadd2: jne 0xade5
0xadd4: mov rsi,qword ptr [rdi]
0xadd7: mov rdi,qword ptr [rdx]
0xadda: jmp 0x3590
0xade0: mov eax,0x1
0xade5: ret
0xadf0: mov eax,0xffffffff
0xadf5: ret
0xae00: mov rax,qword ptr [rsi+0x60]
0xae04: cmp qword ptr [rdi+0x60],rax
0xae08: jg 0xae30
0xae0a: jl 0xae20
0xae0c: mov rax,qword ptr [rsi+0x68]
0xae10: sub eax,dword ptr [rdi+0x68]
0xae13: jne 0xae25
0xae15: mov rsi,qword ptr [rsi]
0xae18: mov rdi,qword ptr [rdi]
0xae1b: jmp 0x3590
0xae20: mov eax,0x1
0xae25: ret
0xae30: mov eax,0xffffffff
0xae35: ret
0xae40: mov rax,qword ptr [rsi+0x70]
0xae44: cmp qword ptr [rdi+0x70],rax
0xae48: jg 0xae70
0xae4a: jl 0xae60
0xae4c: mov rax,qword ptr [rsi+0x78]
0xae50: sub eax,dword ptr [rdi+0x78]
0xae53: jne 0xae65
0xae55: mov rsi,qword ptr [rsi]
0xae58: mov rdi,qword ptr [rdi]
0xae5b: jmp 0x3590
0xae60: mov eax,0x1
0xae65: ret
0xae70: mov eax,0xffffffff
0xae75: ret
0xae80: mov rax,qword ptr [rsi+0x80]
0xae87: cmp qword ptr [rdi+0x80],rax
0xae8e: jg 0xaec0
0xae90: jl 0xaeb0
0xae92: mov rax,qword ptr [rsi+0x88]
0xae99: sub eax,dword ptr [rdi+0x88]
0xae9f: jne 0xaeb5
0xaea1: mov rsi,qword ptr [rsi]
0xaea4: mov rdi,qword ptr [rdi]
0xaea7: jmp 0x3590
0xaeb0: mov eax,0x1
0xaeb5: ret
0xaec0: mov eax,0xffffffff
0xaec5: ret
0xaed0: mov edx,dword ptr [rsi+0xa8]
0xaed6: mov ecx,dword ptr [rdi+0xa8]
0xaedc: cmp edx,0x3
0xaedf: sete al
0xaee2: cmp edx,0x9
0xaee5: sete dl
0xaee8: or eax,edx
0xaeea: cmp ecx,0x3
0xaeed: je 0xaf18
0xaeef: cmp ecx,0x9
0xaef2: je 0xaf18
0xaef4: mov edx,dword ptr [rdi+0xac]
0xaefa: and edx,0xf000
0xaf00: test al,al
0xaf02: je 0xaf38
0xaf04: cmp edx,0x4000
0xaf0a: je 0xaf58
0xaf0c: mov eax,0x1
0xaf11: ret
0xaf18: test al,al
0xaf1a: jne 0xaf58
0xaf1c: mov eax,dword ptr [rsi+0xac]
0xaf22: and eax,0xf000
0xaf27: cmp eax,0x4000
0xaf2c: je 0xaf58
0xaf2e: mov eax,0xffffffff
0xaf33: ret
0xaf38: mov eax,dword ptr [rsi+0xac]
0xaf3e: and eax,0xf000
0xaf43: cmp eax,0x4000
0xaf48: je 0xaf04
0xaf4a: cmp edx,0x4000
0xaf50: je 0xaf2e
0xaf52: nop word ptr [rax+rax]
0xaf58: mov rax,qword ptr [rsi+0x60]
0xaf5c: cmp qword ptr [rdi+0x60],rax
0xaf60: jg 0xaf2e
0xaf62: jl 0xaf0c
0xaf64: mov rax,qword ptr [rsi+0x68]
0xaf68: sub eax,dword ptr [rdi+0x68]
0xaf6b: jne 0xaf33
0xaf6d: mov rsi,qword ptr [rsi]
0xaf70: mov rdi,qword ptr [rdi]
0xaf73: jmp 0x5de0
0xaf80: mov edx,dword ptr [rsi+0xa8]
0xaf86: mov ecx,dword ptr [rdi+0xa8]
0xaf8c: cmp edx,0x3
0xaf8f: sete al
0xaf92: cmp edx,0x9
0xaf95: sete dl
0xaf98: or eax,edx
0xaf9a: cmp ecx,0x3
0xaf9d: je 0xafc8
0xaf9f: cmp ecx,0x9
0xafa2: je 0xafc8
0xafa4: mov edx,dword ptr [rdi+0xac]
0xafaa: and edx,0xf000
0xafb0: test al,al
0xafb2: je 0xafe8
0xafb4: cmp edx,0x4000
0xafba: je 0xb008
0xafbc: mov eax,0x1
0xafc1: ret
0xafc8: test al,al
0xafca: jne 0xb008
0xafcc: mov eax,dword ptr [rsi+0xac]
0xafd2: and eax,0xf000
0xafd7: cmp eax,0x4000
0xafdc: je 0xb008
0xafde: mov eax,0xffffffff
0xafe3: ret
0xafe8: mov eax,dword ptr [rsi+0xac]
0xafee: and eax,0xf000
0xaff3: cmp eax,0x4000
0xaff8: je 0xafb4
0xaffa: cmp edx,0x4000
0xb000: je 0xafde
0xb002: nop word ptr [rax+rax]
0xb008: mov rax,qword ptr [rsi+0x70]
0xb00c: cmp qword ptr [rdi+0x70],rax
0xb010: jg 0xafde
0xb012: jl 0xafbc
0xb014: mov rax,qword ptr [rsi+0x78]
0xb018: sub eax,dword ptr [rdi+0x78]
0xb01b: jne 0xafe3
0xb01d: mov rsi,qword ptr [rsi]
0xb020: mov rdi,qword ptr [rdi]
0xb023: jmp 0x5de0
0xb030: mov rdx,rsi
0xb033: mov esi,dword ptr [rdi+0xa8]
0xb039: mov ecx,dword ptr [rdx+0xa8]
0xb03f: cmp ecx,0x3
0xb042: sete al
0xb045: cmp ecx,0x9
0xb048: sete cl
0xb04b: or eax,ecx
0xb04d: cmp esi,0x3
0xb050: je 0xb078
0xb052: cmp esi,0x9
0xb055: je 0xb078
0xb057: mov ecx,dword ptr [rdi+0xac]
0xb05d: and ecx,0xf000
0xb063: test al,al
0xb065: je 0xb098
0xb067: cmp ecx,0x4000
0xb06d: je 0xb0b8
0xb06f: mov eax,0x1
0xb074: ret
0xb078: test al,al
0xb07a: jne 0xb0b8
0xb07c: mov eax,dword ptr [rdx+0xac]
0xb082: and eax,0xf000
0xb087: cmp eax,0x4000
0xb08c: je 0xb0b8
0xb08e: mov eax,0xffffffff
0xb093: ret
0xb098: mov eax,dword ptr [rdx+0xac]
0xb09e: and eax,0xf000
0xb0a3: cmp eax,0x4000
0xb0a8: je 0xb067
0xb0aa: cmp ecx,0x4000
0xb0b0: je 0xb08e
0xb0b2: nop word ptr [rax+rax]
0xb0b8: mov rax,qword ptr [rdi+0x80]
0xb0bf: cmp qword ptr [rdx+0x80],rax
0xb0c6: jg 0xb08e
0xb0c8: jl 0xb06f
0xb0ca: mov rax,qword ptr [rdi+0x88]
0xb0d1: sub eax,dword ptr [rdx+0x88]
0xb0d7: jne 0xb093
0xb0d9: mov rsi,qword ptr [rdi]
0xb0dc: mov rdi,qword ptr [rdx]
0xb0df: jmp 0x5de0
0xb0f0: mov rdx,rsi
0xb0f3: mov esi,dword ptr [rdi+0xa8]
0xb0f9: mov ecx,dword ptr [rdx+0xa8]
0xb0ff: cmp ecx,0x3
0xb102: sete al
0xb105: cmp ecx,0x9
0xb108: sete cl
0xb10b: or eax,ecx
0xb10d: cmp esi,0x3
0xb110: je 0xb138
0xb112: cmp esi,0x9
0xb115: je 0xb138
0xb117: mov ecx,dword ptr [rdi+0xac]
0xb11d: and ecx,0xf000
0xb123: test al,al
0xb125: je 0xb158
0xb127: cmp ecx,0x4000
0xb12d: je 0xb178
0xb12f: mov eax,0x1
0xb134: ret
0xb138: test al,al
0xb13a: jne 0xb178
0xb13c: mov eax,dword ptr [rdx+0xac]
0xb142: and eax,0xf000
0xb147: cmp eax,0x4000
0xb14c: je 0xb178
0xb14e: mov eax,0xffffffff
0xb153: ret
0xb158: mov eax,dword ptr [rdx+0xac]
0xb15e: and eax,0xf000
0xb163: cmp eax,0x4000
0xb168: je 0xb127
0xb16a: cmp ecx,0x4000
0xb170: je 0xb14e
0xb172: nop word ptr [rax+rax]
0xb178: mov rax,qword ptr [rdi+0x70]
0xb17c: cmp qword ptr [rdx+0x70],rax
0xb180: jg 0xb14e
0xb182: jl 0xb12f
0xb184: mov rax,qword ptr [rdi+0x78]
0xb188: sub eax,dword ptr [rdx+0x78]
0xb18b: jne 0xb153
0xb18d: mov rsi,qword ptr [rdi]
0xb190: mov rdi,qword ptr [rdx]
0xb193: jmp 0x5de0
0xb1a0: mov rdx,rsi
0xb1a3: mov esi,dword ptr [rdi+0xa8]
0xb1a9: mov ecx,dword ptr [rdx+0xa8]
0xb1af: cmp ecx,0x3
0xb1b2: sete al
0xb1b5: cmp ecx,0x9
0xb1b8: sete cl
0xb1bb: or eax,ecx
0xb1bd: cmp esi,0x3
0xb1c0: je 0xb1e8
0xb1c2: cmp esi,0x9
0xb1c5: je 0xb1e8
0xb1c7: mov ecx,dword ptr [rdi+0xac]
0xb1cd: and ecx,0xf000
0xb1d3: test al,al
0xb1d5: je 0xb208
0xb1d7: cmp ecx,0x4000
0xb1dd: je 0xb228
0xb1df: mov eax,0x1
0xb1e4: ret
0xb1e8: test al,al
0xb1ea: jne 0xb228
0xb1ec: mov eax,dword ptr [rdx+0xac]
0xb1f2: and eax,0xf000
0xb1f7: cmp eax,0x4000
0xb1fc: je 0xb228
0xb1fe: mov eax,0xffffffff
0xb203: ret
0xb208: mov eax,dword ptr [rdx+0xac]
0xb20e: and eax,0xf000
0xb213: cmp eax,0x4000
0xb218: je 0xb1d7
0xb21a: cmp ecx,0x4000
0xb220: je 0xb1fe
0xb222: nop word ptr [rax+rax]
0xb228: mov rax,qword ptr [rdi+0x60]
0xb22c: cmp qword ptr [rdx+0x60],rax
0xb230: jg 0xb1fe
0xb232: jl 0xb1df
0xb234: mov rax,qword ptr [rdi+0x68]
0xb238: sub eax,dword ptr [rdx+0x68]
0xb23b: jne 0xb203
0xb23d: mov rsi,qword ptr [rdi]
0xb240: mov rdi,qword ptr [rdx]
0xb243: jmp 0x5de0
0xb250: mov edx,dword ptr [rsi+0xa8]
0xb256: mov ecx,dword ptr [rdi+0xa8]
0xb25c: cmp edx,0x3
0xb25f: sete al
0xb262: cmp edx,0x9
0xb265: sete dl
0xb268: or eax,edx
0xb26a: cmp ecx,0x3
0xb26d: je 0xb298
0xb26f: cmp ecx,0x9
0xb272: je 0xb298
0xb274: mov edx,dword ptr [rdi+0xac]
0xb27a: and edx,0xf000
0xb280: test al,al
0xb282: je 0xb2b8
0xb284: cmp edx,0x4000
0xb28a: je 0xb2d8
0xb28c: mov eax,0x1
0xb291: ret
0xb298: test al,al
0xb29a: jne 0xb2d8
0xb29c: mov eax,dword ptr [rsi+0xac]
0xb2a2: and eax,0xf000
0xb2a7: cmp eax,0x4000
0xb2ac: je 0xb2d8
0xb2ae: mov eax,0xffffffff
0xb2b3: ret
0xb2b8: mov eax,dword ptr [rsi+0xac]
0xb2be: and eax,0xf000
0xb2c3: cmp eax,0x4000
0xb2c8: je 0xb284
0xb2ca: cmp edx,0x4000
0xb2d0: je 0xb2ae
0xb2d2: nop word ptr [rax+rax]
0xb2d8: mov rax,qword ptr [rsi+0x80]
0xb2df: cmp qword ptr [rdi+0x80],rax
0xb2e6: jg 0xb2ae
0xb2e8: jl 0xb28c
0xb2ea: mov rax,qword ptr [rsi+0x88]
0xb2f1: sub eax,dword ptr [rdi+0x88]
0xb2f7: jne 0xb2b3
0xb2f9: mov rsi,qword ptr [rsi]
0xb2fc: mov rdi,qword ptr [rdi]
0xb2ff: jmp 0x5de0
0xb310: push r12
0xb312: push rbp
0xb313: mov r12,rsi
0xb316: push rbx
0xb317: mov rbp,qword ptr [rdi]
0xb31a: mov esi,0x2e
0xb31f: mov rdi,rbp
0xb322: call 0x34a0
0xb327: mov r12,qword ptr [r12]
0xb32b: mov esi,0x2e
0xb330: mov rbx,rax
0xb333: mov rdi,r12
0xb336: call 0x34a0
0xb33b: test rax,rax
0xb33e: je 0xb370
0xb340: lea rdx,[rip+0xc56c]
0xb347: test rbx,rbx
0xb34a: mov rsi,rax
0xb34d: cmove rbx,rdx
0xb351: mov rdi,rbx
0xb354: call 0x3590
0xb359: test eax,eax
0xb35b: jne 0xb38b
0xb35d: pop rbx
0xb35e: mov rsi,r12
0xb361: mov rdi,rbp
0xb364: pop rbp
0xb365: pop r12
0xb367: jmp 0x3590
0xb370: test rbx,rbx
0xb373: lea rax,[rip+0xc539]
0xb37a: je 0xb35d
0xb37c: mov rsi,rax
0xb37f: mov rdi,rbx
0xb382: call 0x3590
0xb387: test eax,eax
0xb389: je 0xb35d
0xb38b: pop rbx
0xb38c: pop rbp
0xb38d: pop r12
0xb38f: ret
0xb390: push r12
0xb392: push rbp
0xb393: mov r12,rdi
0xb396: push rbx
0xb397: mov rbp,qword ptr [rsi]
0xb39a: mov esi,0x2e
0xb39f: mov rdi,rbp
0xb3a2: call 0x34a0
0xb3a7: mov r12,qword ptr [r12]
0xb3ab: mov esi,0x2e
0xb3b0: mov rbx,rax
0xb3b3: mov rdi,r12
0xb3b6: call 0x34a0
0xb3bb: test rax,rax
0xb3be: je 0xb3f0
0xb3c0: lea rdx,[rip+0xc4ec]
0xb3c7: test rbx,rbx
0xb3ca: mov rsi,rax
0xb3cd: cmove rbx,rdx
0xb3d1: mov rdi,rbx
0xb3d4: call 0x3590
0xb3d9: test eax,eax
0xb3db: jne 0xb40b
0xb3dd: pop rbx
0xb3de: mov rsi,r12
0xb3e1: mov rdi,rbp
0xb3e4: pop rbp
0xb3e5: pop r12
0xb3e7: jmp 0x3590
0xb3f0: test rbx,rbx
0xb3f3: lea rax,[rip+0xc4b9]
0xb3fa: je 0xb3dd
0xb3fc: mov rsi,rax
0xb3ff: mov rdi,rbx
0xb402: call 0x3590
0xb407: test eax,eax
0xb409: je 0xb3dd
0xb40b: pop rbx
0xb40c: pop rbp
0xb40d: pop r12
0xb40f: ret
0xb410: mov edx,dword ptr [rsi+0xa8]
0xb416: mov ecx,dword ptr [rdi+0xa8]
0xb41c: cmp edx,0x3
0xb41f: sete al
0xb422: cmp edx,0x9
0xb425: sete dl
0xb428: or eax,edx
0xb42a: cmp ecx,0x3
0xb42d: je 0xb458
0xb42f: cmp ecx,0x9
0xb432: je 0xb458
0xb434: mov edx,dword ptr [rdi+0xac]
0xb43a: and edx,0xf000
0xb440: test al,al
0xb442: je 0xb478
0xb444: cmp edx,0x4000
0xb44a: je 0xb498
0xb44c: mov eax,0x1
0xb451: ret
0xb458: test al,al
0xb45a: jne 0xb498
0xb45c: mov eax,dword ptr [rsi+0xac]
0xb462: and eax,0xf000
0xb467: cmp eax,0x4000
0xb46c: je 0xb498
0xb46e: mov eax,0xffffffff
0xb473: ret
0xb478: mov eax,dword ptr [rsi+0xac]
0xb47e: and eax,0xf000
0xb483: cmp eax,0x4000
0xb488: je 0xb444
0xb48a: cmp edx,0x4000
0xb490: je 0xb46e
0xb492: nop word ptr [rax+rax]
0xb498: push r12
0xb49a: push rbp
0xb49b: mov rbp,rdi
0xb49e: push rbx
0xb49f: mov rbx,rsi
0xb4a2: mov esi,0x2e
0xb4a7: mov rdi,qword ptr [rbx]
0xb4aa: call 0x34a0
0xb4af: mov rdi,qword ptr [rbp]
0xb4b3: mov esi,0x2e
0xb4b8: mov r12,rax
0xb4bb: call 0x34a0
0xb4c0: lea rdx,[rip+0xc3ec]
0xb4c7: test rax,rax
0xb4ca: cmove rax,rdx
0xb4ce: test r12,r12
0xb4d1: cmove r12,rdx
0xb4d5: mov rsi,rax
0xb4d8: mov rdi,r12
0xb4db: call 0x5de0
0xb4e0: test eax,eax
0xb4e2: jne 0xb4f8
0xb4e4: mov rsi,qword ptr [rbp]
0xb4e8: mov rdi,qword ptr [rbx]
0xb4eb: pop rbx
0xb4ec: pop rbp
0xb4ed: pop r12
0xb4ef: jmp 0x5de0
0xb4f8: pop rbx
0xb4f9: pop rbp
0xb4fa: pop r12
0xb4fc: ret
0xb500: mov edx,dword ptr [rsi+0xa8]
0xb506: mov ecx,dword ptr [rdi+0xa8]
0xb50c: cmp edx,0x3
0xb50f: sete al
0xb512: cmp edx,0x9
0xb515: sete dl
0xb518: or eax,edx
0xb51a: cmp ecx,0x3
0xb51d: je 0xb548
0xb51f: cmp ecx,0x9
0xb522: je 0xb548
0xb524: mov edx,dword ptr [rdi+0xac]
0xb52a: and edx,0xf000
0xb530: test al,al
0xb532: je 0xb568
0xb534: cmp edx,0x4000
0xb53a: je 0xb588
0xb53c: mov eax,0x1
0xb541: ret
0xb548: test al,al
0xb54a: jne 0xb588
0xb54c: mov eax,dword ptr [rsi+0xac]
0xb552: and eax,0xf000
0xb557: cmp eax,0x4000
0xb55c: je 0xb588
0xb55e: mov eax,0xffffffff
0xb563: ret
0xb568: mov eax,dword ptr [rsi+0xac]
0xb56e: and eax,0xf000
0xb573: cmp eax,0x4000
0xb578: je 0xb534
0xb57a: cmp edx,0x4000
0xb580: je 0xb55e
0xb582: nop word ptr [rax+rax]
0xb588: push r12
0xb58a: push rbp
0xb58b: mov rbp,rdi
0xb58e: push rbx
0xb58f: mov rdi,qword ptr [rdi]
0xb592: mov rbx,rsi
0xb595: mov esi,0x2e
0xb59a: call 0x34a0
0xb59f: mov rdi,qword ptr [rbx]
0xb5a2: mov esi,0x2e
0xb5a7: mov r12,rax
0xb5aa: call 0x34a0
0xb5af: lea rdx,[rip+0xc2fd]
0xb5b6: test rax,rax
0xb5b9: cmove rax,rdx
0xb5bd: test r12,r12
0xb5c0: cmove r12,rdx
0xb5c4: mov rsi,rax
0xb5c7: mov rdi,r12
0xb5ca: call 0x5de0
0xb5cf: test eax,eax
0xb5d1: jne 0xb5e8
0xb5d3: mov rsi,qword ptr [rbx]
0xb5d6: mov rdi,qword ptr [rbp]
0xb5da: pop rbx
0xb5db: pop rbp
0xb5dc: pop r12
0xb5de: jmp 0x5de0
0xb5e8: pop rbx
0xb5e9: pop rbp
0xb5ea: pop r12
0xb5ec: ret
0xb5f0: mov edx,dword ptr [rsi+0xa8]
0xb5f6: mov ecx,dword ptr [rdi+0xa8]
0xb5fc: cmp edx,0x3
0xb5ff: sete al
0xb602: cmp edx,0x9
0xb605: sete dl
0xb608: or eax,edx
0xb60a: cmp ecx,0x3
0xb60d: je 0xb638
0xb60f: cmp ecx,0x9
0xb612: je 0xb638
0xb614: mov edx,dword ptr [rdi+0xac]
0xb61a: and edx,0xf000
0xb620: test al,al
0xb622: je 0xb658
0xb624: cmp edx,0x4000
0xb62a: je 0xb678
0xb62c: mov eax,0x1
0xb631: ret
0xb638: test al,al
0xb63a: jne 0xb678
0xb63c: mov eax,dword ptr [rsi+0xac]
0xb642: and eax,0xf000
0xb647: cmp eax,0x4000
0xb64c: je 0xb678
0xb64e: mov eax,0xffffffff
0xb653: ret
0xb658: mov eax,dword ptr [rsi+0xac]
0xb65e: and eax,0xf000
0xb663: cmp eax,0x4000
0xb668: je 0xb624
0xb66a: cmp edx,0x4000
0xb670: je 0xb64e
0xb672: nop word ptr [rax+rax]
0xb678: mov rax,qword ptr [rsi+0x60]
0xb67c: cmp qword ptr [rdi+0x60],rax
0xb680: jg 0xb64e
0xb682: jl 0xb62c
0xb684: mov rax,qword ptr [rsi+0x68]
0xb688: sub eax,dword ptr [rdi+0x68]
0xb68b: jne 0xb653
0xb68d: mov rsi,qword ptr [rsi]
0xb690: mov rdi,qword ptr [rdi]
0xb693: jmp 0x3590
0xb6a0: mov rdx,rsi
0xb6a3: mov esi,dword ptr [rdi+0xa8]
0xb6a9: mov ecx,dword ptr [rdx+0xa8]
0xb6af: cmp ecx,0x3
0xb6b2: sete al
0xb6b5: cmp ecx,0x9
0xb6b8: sete cl
0xb6bb: or eax,ecx
0xb6bd: cmp esi,0x3
0xb6c0: je 0xb6e8
0xb6c2: cmp esi,0x9
0xb6c5: je 0xb6e8
0xb6c7: mov ecx,dword ptr [rdi+0xac]
0xb6cd: and ecx,0xf000
0xb6d3: test al,al
0xb6d5: je 0xb708
0xb6d7: cmp ecx,0x4000
0xb6dd: je 0xb728
0xb6df: mov eax,0x1
0xb6e4: ret
0xb6e8: test al,al
0xb6ea: jne 0xb728
0xb6ec: mov eax,dword ptr [rdx+0xac]
0xb6f2: and eax,0xf000
0xb6f7: cmp eax,0x4000
0xb6fc: je 0xb728
0xb6fe: mov eax,0xffffffff
0xb703: ret
0xb708: mov eax,dword ptr [rdx+0xac]
0xb70e: and eax,0xf000
0xb713: cmp eax,0x4000
0xb718: je 0xb6d7
0xb71a: cmp ecx,0x4000
0xb720: je 0xb6fe
0xb722: nop word ptr [rax+rax]
0xb728: mov rax,qword ptr [rdi+0x70]
0xb72c: cmp qword ptr [rdx+0x70],rax
0xb730: jg 0xb6fe
0xb732: jl 0xb6df
0xb734: mov rax,qword ptr [rdi+0x78]
0xb738: sub eax,dword ptr [rdx+0x78]
0xb73b: jne 0xb703
0xb73d: mov rsi,qword ptr [rdi]
0xb740: mov rdi,qword ptr [rdx]
0xb743: jmp 0x3590
0xb750: mov edx,dword ptr [rsi+0xa8]
0xb756: mov ecx,dword ptr [rdi+0xa8]
0xb75c: cmp edx,0x3
0xb75f: sete al
0xb762: cmp edx,0x9
0xb765: sete dl
0xb768: or eax,edx
0xb76a: cmp ecx,0x3
0xb76d: je 0xb798
0xb76f: cmp ecx,0x9
0xb772: je 0xb798
0xb774: mov edx,dword ptr [rdi+0xac]
0xb77a: and edx,0xf000
0xb780: test al,al
0xb782: je 0xb7b8
0xb784: cmp edx,0x4000
0xb78a: je 0xb7d8
0xb78c: mov eax,0x1
0xb791: ret
0xb798: test al,al
0xb79a: jne 0xb7d8
0xb79c: mov eax,dword ptr [rsi+0xac]
0xb7a2: and eax,0xf000
0xb7a7: cmp eax,0x4000
0xb7ac: je 0xb7d8
0xb7ae: mov eax,0xffffffff
0xb7b3: ret
0xb7b8: mov eax,dword ptr [rsi+0xac]
0xb7be: and eax,0xf000
0xb7c3: cmp eax,0x4000
0xb7c8: je 0xb784
0xb7ca: cmp edx,0x4000
0xb7d0: je 0xb7ae
0xb7d2: nop word ptr [rax+rax]
0xb7d8: mov rax,qword ptr [rsi+0x80]
0xb7df: cmp qword ptr [rdi+0x80],rax
0xb7e6: jg 0xb7ae
0xb7e8: jl 0xb78c
0xb7ea: mov rax,qword ptr [rsi+0x88]
0xb7f1: sub eax,dword ptr [rdi+0x88]
0xb7f7: jne 0xb7b3
0xb7f9: mov rsi,qword ptr [rsi]
0xb7fc: mov rdi,qword ptr [rdi]
0xb7ff: jmp 0x3590
0xb810: mov edx,dword ptr [rsi+0xa8]
0xb816: mov ecx,dword ptr [rdi+0xa8]
0xb81c: cmp edx,0x3
0xb81f: sete al
0xb822: cmp edx,0x9
0xb825: sete dl
0xb828: or eax,edx
0xb82a: cmp ecx,0x3
0xb82d: je 0xb858
0xb82f: cmp ecx,0x9
0xb832: je 0xb858
0xb834: mov edx,dword ptr [rdi+0xac]
0xb83a: and edx,0xf000
0xb840: test al,al
0xb842: je 0xb878
0xb844: cmp edx,0x4000
0xb84a: je 0xb898
0xb84c: mov eax,0x1
0xb851: ret
0xb858: test al,al
0xb85a: jne 0xb898
0xb85c: mov eax,dword ptr [rsi+0xac]
0xb862: and eax,0xf000
0xb867: cmp eax,0x4000
0xb86c: je 0xb898
0xb86e: mov eax,0xffffffff
0xb873: ret
0xb878: mov eax,dword ptr [rsi+0xac]
0xb87e: and eax,0xf000
0xb883: cmp eax,0x4000
0xb888: je 0xb844
0xb88a: cmp edx,0x4000
0xb890: je 0xb86e
0xb892: nop word ptr [rax+rax]
0xb898: push r12
0xb89a: push rbp
0xb89b: push rbx
0xb89c: mov r12,qword ptr [rdi]
0xb89f: mov rbx,rsi
0xb8a2: mov esi,0x2e
0xb8a7: mov rdi,r12
0xb8aa: call 0x34a0
0xb8af: mov rbx,qword ptr [rbx]
0xb8b2: mov esi,0x2e
0xb8b7: mov rbp,rax
0xb8ba: mov rdi,rbx
0xb8bd: call 0x34a0
0xb8c2: test rax,rax
0xb8c5: je 0xb900
0xb8c7: lea rdx,[rip+0xbfe5]
0xb8ce: test rbp,rbp
0xb8d1: cmove rbp,rdx
0xb8d5: mov rsi,rax
0xb8d8: mov rdi,rbp
0xb8db: call 0x3590
0xb8e0: test eax,eax
0xb8e2: jne 0xb8f8
0xb8e4: mov rsi,rbx
0xb8e7: mov rdi,r12
0xb8ea: pop rbx
0xb8eb: pop rbp
0xb8ec: pop r12
0xb8ee: jmp 0x3590
0xb8f8: pop rbx
0xb8f9: pop rbp
0xb8fa: pop r12
0xb8fc: ret
0xb900: test rbp,rbp
0xb903: lea rax,[rip+0xbfa9]
0xb90a: jne 0xb8d5
0xb90c: jmp 0xb8e4
0xc050: push r15
0xc052: push r14
0xc054: mov eax,0x401
0xc059: push r13
0xc05b: push r12
0xc05d: mov r13,rdi
0xc060: push rbp
0xc061: push rbx
0xc062: lea rbx,[rsi+0x1]
0xc066: movabs r14,0x3fffffffffffffff
0xc070: movabs r15,0x7ffffffffffffffe
0xc07a: sub rsp,0x8
0xc07e: cmp rsi,0x401
0xc085: cmovae rbx,rax
0xc089: nop dword ptr [rax]
0xc090: mov rdi,rbx
0xc093: call 0x3888
0xc098: test rax,rax
0xc09b: mov rbp,rax
0xc09e: je 0xc0db
0xc0a0: mov rdx,rbx
0xc0a3: mov rsi,rax
0xc0a6: mov rdi,r13
0xc0a9: call 0x3360
0xc0ae: test rax,rax
0xc0b1: mov r12,rax
0xc0b4: js 0xc108
0xc0b6: cmp rbx,r12
0xc0b9: ja 0xc120
0xc0bb: mov rdi,rbp
0xc0be: call 0x3880
0xc0c3: cmp rbx,r14
0xc0c6: ja 0xc0f0
0xc0c8: add rbx,rbx
0xc0cb: mov rdi,rbx
0xc0ce: call 0x3888
0xc0d3: test rax,rax
0xc0d6: mov rbp,rax
0xc0d9: jne 0xc0a0
0xc0db: add rsp,0x8
0xc0df: mov rax,rbp
0xc0e2: pop rbx
0xc0e3: pop rbp
0xc0e4: pop r12
0xc0e6: pop r13
0xc0e8: pop r14
0xc0ea: pop r15
0xc0ec: ret
0xc0f0: cmp rbx,r15
0xc0f3: ja 0xc130
0xc0f5: movabs rbx,0x7fffffffffffffff
0xc0ff: jmp 0xc090
0xc108: call 0x32a0
0xc10d: cmp dword ptr [rax],0x22
0xc110: je 0xc0b6
0xc112: mov rdi,rbp
0xc115: xor ebp,ebp
0xc117: call 0x3880
0xc11c: jmp 0xc0db
0xc120: mov byte ptr [rbp+r12],0x0
0xc126: jmp 0xc0db
0xc130: call 0x32a0
0xc135: xor ebp,ebp
0xc137: mov dword ptr [rax],0xc
0xc13d: jmp 0xc0db
0xc140: mov edi,0x1
0xc145: jmp 0xb910
0xc2a3: mov rdx,r12
0xc2a6: mov rbp,rax
0xc2a9: mov esi,0x8
0xc2ae: xor edi,edi
0xc2b0: call 0x13970
0xc2b5: mov r8,rbp
0xc2b8: mov rdx,rbx
0xc2bb: mov rcx,rax
0xc2be: pop rbx
0xc2bf: pop rbp
0xc2c0: pop r12
0xc2c2: xor esi,esi
0xc2c4: xor edi,edi
0xc2c6: xor eax,eax
0xc2c8: jmp 0x3760
0xc2f0: push r15
0xc2f2: push r14
0xc2f4: mov r14,rdi
0xc2f7: push r13
0xc2f9: push r12
0xc2fb: xor edi,edi
0xc2fd: push rbp
0xc2fe: push rbx
0xc2ff: mov rbp,rsi
0xc302: lea rsi,[rip+0xdc64]
0xc309: mov r12,rdx
0xc30c: mov edx,0x5
0xc311: sub rsp,0x8
0xc315: mov rbx,qword ptr [rip+0x213fa4]
0xc31c: call 0x33e0
0xc321: mov rdi,rax
0xc324: mov rsi,rbx
0xc327: call 0x3570
0xc32c: mov r15,qword ptr [r14]
0xc32f: test r15,r15
0xc332: je 0xc3c8
0xc338: xor r13d,r13d
0xc33b: xor ebx,ebx
0xc33d: jmp 0xc378
0xc340: mov rdi,r15
0xc343: add rbx,0x1
0xc347: mov r13,rbp
0xc34a: call 0x13d60
0xc34f: mov rdi,qword ptr [rip+0x213f6a]
0xc356: lea rdx,[rip+0xdc25]
0xc35d: mov rcx,rax
0xc360: mov esi,0x1
0xc365: xor eax,eax
0xc367: add rbp,r12
0xc36a: call 0x3800
0xc36f: mov r15,qword ptr [r14+rbx*8]
0xc373: test r15,r15
0xc376: je 0xc3c8
0xc378: test rbx,rbx
0xc37b: je 0xc340
0xc37d: mov rdx,r12
0xc380: mov rsi,rbp
0xc383: mov rdi,r13
0xc386: call 0x3550
0xc38b: test eax,eax
0xc38d: jne 0xc340
0xc38f: mov rdi,r15
0xc392: add rbx,0x1
0xc396: add rbp,r12
0xc399: call 0x13d60
0xc39e: mov rdi,qword ptr [rip+0x213f1b]
0xc3a5: lea rdx,[rip+0xdbde]
0xc3ac: mov rcx,rax
0xc3af: mov esi,0x1
0xc3b4: xor eax,eax
0xc3b6: call 0x3800
0xc3bb: mov r15,qword ptr [r14+rbx*8]
0xc3bf: test r15,r15
0xc3c2: jne 0xc378
0xc3c4: nop dword ptr [rax]
0xc3c8: mov rdi,qword ptr [rip+0x213ef1]
0xc3cf: mov rax,qword ptr [rdi+0x28]
0xc3d3: cmp rax,qword ptr [rdi+0x30]
0xc3d7: jae 0xc3f8
0xc3d9: lea rdx,[rax+0x1]
0xc3dd: mov qword ptr [rdi+0x28],rdx
0xc3e1: mov byte ptr [rax],0xa
0xc3e4: add rsp,0x8
0xc3e8: pop rbx
0xc3e9: pop rbp
0xc3ea: pop r12
0xc3ec: pop r13
0xc3ee: pop r14
0xc3f0: pop r15
0xc3f2: ret
0xc3f8: add rsp,0x8
0xc3fc: mov esi,0xa
0xc401: pop rbx
0xc402: pop rbp
0xc403: pop r12
0xc405: pop r13
0xc407: pop r14
0xc409: pop r15
0xc40b: jmp 0x3490
0xc463: mov rdx,r15
0xc466: mov rsi,rbp
0xc469: mov rdi,rbx
0xc46c: call 0xc2f0
0xc471: call r13
0xc474: mov rax,0xffffffffffffffff
0xc47b: jmp 0xc446
0xc480: push r14
0xc482: push r13
0xc484: push r12
0xc486: push rbp
0xc487: push rbx
0xc488: mov r14,qword ptr [rsi]
0xc48b: test r14,r14
0xc48e: je 0xc4c1
0xc490: mov r12,rcx
0xc493: mov r13,rdi
0xc496: mov rbp,rdx
0xc499: lea rbx,[rsi+0x8]
0xc49d: jmp 0xc4af
0xc4a0: mov r14,qword ptr [rbx]
0xc4a3: add rbp,r12
0xc4a6: add rbx,0x8
0xc4aa: test r14,r14
0xc4ad: je 0xc4c1
0xc4af: mov rdx,r12
0xc4b2: mov rsi,rbp
0xc4b5: mov rdi,r13
0xc4b8: call 0x3550
0xc4bd: test eax,eax
0xc4bf: jne 0xc4a0
0xc4c1: pop rbx
0xc4c2: mov rax,r14
0xc4c5: pop rbp
0xc4c6: pop r12
0xc4c8: pop r13
0xc4ca: pop r14
0xc4cc: ret
0xc4d0: cmp rdi,rsi
0xc4d3: je 0xc530
0xc4d5: test rdx,rdx
0xc4d8: jne 0xc4f0
0xc4da: jmp 0xc530
0xc4e0: test al,al
0xc4e2: je 0xc51f
0xc4e4: add rdi,0x1
0xc4e8: add rsi,0x1
0xc4ec: cmp al,cl
0xc4ee: jne 0xc51f
0xc4f0: movzx eax,byte ptr [rdi]
0xc4f3: mov ecx,eax
0xc4f5: lea r8d,[rax+0x20]
0xc4f9: sub ecx,0x41
0xc4fc: cmp cl,0x1a
0xc4ff: movzx ecx,byte ptr [rsi]
0xc502: cmovb eax,r8d
0xc506: mov r8d,ecx
0xc509: lea r10d,[rcx+0x20]
0xc50d: sub r8d,0x41
0xc511: cmp r8b,0x1a
0xc515: cmovb ecx,r10d
0xc519: sub rdx,0x1
0xc51d: jne 0xc4e0
0xc51f: movzx ecx,cl
0xc522: movzx eax,al
0xc525: sub eax,ecx
0xc527: ret
0xc530: xor eax,eax
0xc532: ret
0xc540: push r15
0xc542: push r14
0xc544: push r13
0xc546: push r12
0xc548: push rbp
0xc549: push rbx
0xc54a: sub rsp,0xe8
0xc551: mov rax,qword ptr fs:0x28
0xc55a: mov qword ptr [rsp+0xd8],rax
0xc562: xor eax,eax
0xc564: mov eax,esi
0xc566: and eax,0x4
0xc569: setne byte ptr [rsp+0x1b]
0xc56e: and esi,0x3
0xc571: mov dword ptr [rsp+0x1c],eax
0xc575: lea eax,[rsi-0x1]
0xc578: mov dword ptr [rsp+0x4],esi
0xc57c: test esi,eax
0xc57e: jne 0xcad0
0xc584: test rdi,rdi
0xc587: mov r14,rdi
0xc58a: je 0xcad0
0xc590: movzx eax,byte ptr [rdi]
0xc593: test al,al
0xc595: je 0xcb10
0xc59b: cmp al,0x2f
0xc59d: je 0xca60
0xc5a3: call 0x14950
0xc5a8: test rax,rax
0xc5ab: mov rbp,rax
0xc5ae: je 0xc760
0xc5b4: mov rdi,rax
0xc5b7: call 0x3400
0xc5bc: cmp rax,0xfff
0xc5c2: mov r15,rax
0xc5c5: jbe 0xca80
0xc5cb: add r15,rbp
0xc5ce: mov rbx,r15
0xc5d1: lea rax,[rsp+0x40]
0xc5d6: mov qword ptr [rsp+0x20],r14
0xc5db: mov qword ptr [rsp+0x10],0x0
0xc5e4: mov qword ptr [rsp+0x30],0x0
0xc5ed: mov qword ptr [rsp+0x28],0x0
0xc5f6: mov qword ptr [rsp+0x8],rax
0xc5fb: movzx eax,byte ptr [r14]
0xc5ff: test al,al
0xc601: je 0xc70f
0xc607: nop word ptr [rax+rax]
0xc610: cmp al,0x2f
0xc612: jne 0xc62c
0xc614: nop dword ptr [rax]
0xc618: add r14,0x1
0xc61c: movzx eax,byte ptr [r14]
0xc620: cmp al,0x2f
0xc622: je 0xc618
0xc624: test al,al
0xc626: je 0xc8f0
0xc62c: mov r13,r14
0xc62f: jmp 0xc63d
0xc638: cmp dl,0x2f
0xc63b: je 0xc64a
0xc63d: add r13,0x1
0xc641: movzx edx,byte ptr [r13]
0xc646: test dl,dl
0xc648: jne 0xc638
0xc64a: cmp r13,r14
0xc64d: je 0xc70f
0xc653: mov r12,r13
0xc656: sub r12,r14
0xc659: cmp r12,0x1
0xc65d: je 0xc830
0xc663: cmp r12,0x2
0xc667: jne 0xc671
0xc669: cmp al,0x2e
0xc66b: je 0xc900
0xc671: cmp byte ptr [r15-0x1],0x2f
0xc676: je 0xc680
0xc678: mov byte ptr [r15],0x2f
0xc67c: add r15,0x1
0xc680: lea rax,[r15+r12]
0xc684: cmp rbx,rax
0xc687: ja 0xc6ba
0xc689: sub rbx,rbp
0xc68c: sub r15,rbp
0xc68f: mov rdi,rbp
0xc692: lea rax,[r12+rbx+0x1]
0xc697: add rbx,0x1000
0xc69e: cmp r12,0x1000
0xc6a5: cmovge rbx,rax
0xc6a9: mov rsi,rbx
0xc6ac: call 0x145f0
0xc6b1: mov rbp,rax
0xc6b4: add rbx,rax
0xc6b7: add r15,rax
0xc6ba: mov rdi,r15
0xc6bd: mov rdx,r12
0xc6c0: mov rsi,r14
0xc6c3: call 0x35f0
0xc6c8: cmp dword ptr [rsp+0x4],0x2
0xc6cd: lea r15,[r15+r12]
0xc6d1: mov byte ptr [r15],0x0
0xc6d5: jne 0xc790
0xc6db: cmp byte ptr [rsp+0x1b],0x0
0xc6e0: je 0xc790
0xc6e6: mov dword ptr [rsp+0x58],0x0
0xc6ee: cmp byte ptr [r13],0x0
0xc6f3: je 0xc700
0xc6f5: cmp dword ptr [rsp+0x4],0x2
0xc6fa: jne 0xcb57
0xc700: mov r14,r13
0xc703: movzx eax,byte ptr [r14]
0xc707: test al,al
0xc709: jne 0xc610
0xc70f: lea rax,[rbp+0x1]
0xc713: cmp r15,rax
0xc716: jbe 0xc723
0xc718: cmp byte ptr [r15-0x1],0x2f
0xc71d: jne 0xc723
0xc71f: sub r15,0x1
0xc723: lea rax,[r15+0x1]
0xc727: mov byte ptr [r15],0x0
0xc72b: cmp rbx,rax
0xc72e: je 0xc742
0xc730: sub r15,rbp
0xc733: mov rdi,rbp
0xc736: lea rsi,[r15+0x1]
0xc73a: call 0x145f0
0xc73f: mov rbp,rax
0xc742: mov rdi,qword ptr [rsp+0x28]
0xc747: call 0x3880
0xc74c: mov rax,qword ptr [rsp+0x10]
0xc751: test rax,rax
0xc754: je 0xc760
0xc756: mov rdi,rax
0xc759: call 0xe200
0xc75e: nop
0xc760: mov rcx,qword ptr [rsp+0xd8]
0xc768: xor rcx,qword ptr fs:0x28
0xc771: mov rax,rbp
0xc774: jne 0xcb71
0xc77a: add rsp,0xe8
0xc781: pop rbx
0xc782: pop rbp
0xc783: pop r12
0xc785: pop r13
0xc787: pop r14
0xc789: pop r15
0xc78b: ret
0xc790: mov eax,dword ptr [rsp+0x1c]
0xc794: mov rdx,qword ptr [rsp+0x8]
0xc799: mov rsi,rbp
0xc79c: mov edi,0x1
0xc7a1: test eax,eax
0xc7a3: je 0xc860
0xc7a9: call 0x3640
0xc7ae: test eax,eax
0xc7b0: setne al
0xc7b3: test al,al
0xc7b5: je 0xc840
0xc7bb: call 0x32a0
0xc7c0: mov r14,rax
0xc7c3: mov edx,dword ptr [rax]
0xc7c5: mov eax,dword ptr [rsp+0x4]
0xc7c9: test eax,eax
0xc7cb: je 0xc7fe
0xc7cd: cmp eax,0x1
0xc7d0: jne 0xc6e6
0xc7d6: lea rsi,[rip+0xb3f0]
0xc7dd: mov rdi,r13
0xc7e0: mov dword ptr [rsp+0x38],edx
0xc7e4: call 0x3530
0xc7e9: cmp byte ptr [r13+rax],0x0
0xc7ef: mov edx,dword ptr [rsp+0x38]
0xc7f3: jne 0xc7fe
0xc7f5: cmp edx,0x2
0xc7f8: je 0xc700
0xc7fe: mov r12,r14
0xc801: mov rdi,qword ptr [rsp+0x28]
0xc806: mov dword ptr [rsp+0x4],edx
0xc80a: call 0x3880
0xc80f: mov rdi,rbp
0xc812: call 0x3880
0xc817: cmp qword ptr [rsp+0x10],0x0
0xc81d: mov edx,dword ptr [rsp+0x4]
0xc821: je 0xc8dc
0xc827: jmp 0xc8ca
0xc830: cmp al,0x2e
0xc832: jne 0xc671
0xc838: jmp 0xc700
0xc840: mov eax,dword ptr [rsp+0x58]
0xc844: and eax,0xf000
0xc849: cmp eax,0xa000
0xc84e: je 0xc870
0xc850: cmp eax,0x4000
0xc855: je 0xc700
0xc85b: jmp 0xc6ee
0xc860: call 0x3410
0xc865: test eax,eax
0xc867: setne al
0xc86a: jmp 0xc7b3
0xc870: cmp qword ptr [rsp+0x10],0x0
0xc876: je 0xca26
0xc87c: mov rdx,qword ptr [rsp+0x8]
0xc881: mov rsi,qword ptr [rsp+0x20]
0xc886: mov rdi,qword ptr [rsp+0x10]
0xc88b: call 0xce60
0xc890: test al,al
0xc892: je 0xc950
0xc898: cmp dword ptr [rsp+0x4],0x2
0xc89d: je 0xc700
0xc8a3: call 0x32a0
0xc8a8: mov edx,0x28
0xc8ad: mov r12,rax
0xc8b0: mov rdi,qword ptr [rsp+0x28]
0xc8b5: mov dword ptr [rsp+0x4],edx
0xc8b9: call 0x3880
0xc8be: mov rdi,rbp
0xc8c1: call 0x3880
0xc8c6: mov edx,dword ptr [rsp+0x4]
0xc8ca: mov rdi,qword ptr [rsp+0x10]
0xc8cf: mov dword ptr [rsp+0x4],edx
0xc8d3: call 0xe200
0xc8d8: mov edx,dword ptr [rsp+0x4]
0xc8dc: mov dword ptr [r12],edx
0xc8e0: xor ebp,ebp
0xc8e2: jmp 0xc760
0xc8f0: mov r13,r14
0xc8f3: jmp 0xc64a
0xc900: cmp byte ptr [r14+0x1],0x2e
0xc905: jne 0xc671
0xc90b: lea rax,[rbp+0x1]
0xc90f: mov r14,r13
0xc912: cmp r15,rax
0xc915: jbe 0xc5fb
0xc91b: lea rax,[r15-0x1]
0xc91f: cmp rbp,rax
0xc922: jae 0xcb69
0xc928: cmp byte ptr [r15-0x2],0x2f
0xc92d: mov r15,rax
0xc930: je 0xc5fb
0xc936: sub r15,0x1
0xc93a: cmp rbp,r15
0xc93d: je 0xc700
0xc943: cmp byte ptr [r15-0x1],0x2f
0xc948: je 0xc700
0xc94e: jmp 0xc936
0xc950: mov rdx,qword ptr [rsp+0x8]
0xc955: mov rsi,qword ptr [rsp+0x20]
0xc95a: mov rdi,qword ptr [rsp+0x10]
0xc95f: call 0xcdd0
0xc964: mov rsi,qword ptr [rsp+0x70]
0xc969: mov rdi,rbp
0xc96c: call 0xc050
0xc971: test rax,rax
0xc974: mov r14,rax
0xc977: je 0xcae2
0xc97d: mov rdi,rax
0xc980: call 0x3400
0xc985: mov rdi,r13
0xc988: mov r12,rax
0xc98b: mov qword ptr [rsp+0x20],rax
0xc990: call 0x3400
0xc995: cmp qword ptr [rsp+0x30],0x0
0xc99b: mov rdx,rax
0xc99e: lea rcx,[r12+rdx+0x1]
0xc9a3: je 0xca9f
0xc9a9: cmp qword ptr [rsp+0x30],rcx
0xc9ae: jae 0xc9d1
0xc9b0: mov rdi,qword ptr [rsp+0x28]
0xc9b5: mov rsi,rcx
0xc9b8: mov qword ptr [rsp+0x38],rdx
0xc9bd: mov qword ptr [rsp+0x30],rcx
0xc9c2: call 0x145f0
0xc9c7: mov rdx,qword ptr [rsp+0x38]
0xc9cc: mov qword ptr [rsp+0x28],rax
0xc9d1: mov r12,qword ptr [rsp+0x28]
0xc9d6: mov rdi,qword ptr [rsp+0x20]
0xc9db: add rdx,0x1
0xc9df: mov rsi,r13
0xc9e2: add rdi,r12
0xc9e5: mov r13,r12
0xc9e8: call 0x3750
0xc9ed: mov rdx,qword ptr [rsp+0x20]
0xc9f2: mov rsi,r14
0xc9f5: mov rdi,r12
0xc9f8: call 0x35f0
0xc9fd: cmp byte ptr [r14],0x2f
0xca01: mov qword ptr [rsp+0x20],r12
0xca06: lea rax,[rbp+0x1]
0xca0a: je 0xcb04
0xca10: cmp r15,rax
0xca13: ja 0xcb22
0xca19: mov rdi,r14
0xca1c: call 0x3880
0xca21: jmp 0xc700
0xca26: lea r8,[rip+0x20a3]
0xca2d: lea rcx,[rip+0x205c]
0xca34: xor esi,esi
0xca36: lea rdx,[rip+0x1fe3]
0xca3d: mov edi,0x7
0xca42: call 0xdfb0
0xca47: test rax,rax
0xca4a: mov qword ptr [rsp+0x10],rax
0xca4f: jne 0xc87c
0xca55: call 0x147e0
0xca5a: nop word ptr [rax+rax]
0xca60: mov edi,0x1000
0xca65: call 0x14590
0xca6a: mov rbp,rax
0xca6d: lea rbx,[rax+0x1000]
0xca74: lea r15,[rax+0x1]
0xca78: mov byte ptr [rax],0x2f
0xca7b: jmp 0xc5d1
0xca80: mov rdi,rbp
0xca83: mov esi,0x1000
0xca88: call 0x145f0
0xca8d: mov rbp,rax
0xca90: add r15,rax
0xca93: lea rbx,[rax+0x1000]
0xca9a: jmp 0xc5d1
0xca9f: cmp rcx,0x1000
0xcaa6: mov eax,0x1000
0xcaab: mov qword ptr [rsp+0x38],rdx
0xcab0: cmovae rax,rcx
0xcab4: mov rdi,rax
0xcab7: mov qword ptr [rsp+0x30],rax
0xcabc: call 0x14590
0xcac1: mov rdx,qword ptr [rsp+0x38]
0xcac6: mov qword ptr [rsp+0x28],rax
0xcacb: jmp 0xc9d1
0xcad0: call 0x32a0
0xcad5: xor ebp,ebp
0xcad7: mov dword ptr [rax],0x16
0xcadd: jmp 0xc760
0xcae2: call 0x32a0
0xcae7: cmp dword ptr [rsp+0x4],0x2
0xcaec: mov r14,rax
0xcaef: mov edx,dword ptr [rax]
0xcaf1: jne 0xcafc
0xcaf3: cmp edx,0xc
0xcaf6: jne 0xc700
0xcafc: mov r12,r14
0xcaff: jmp 0xc8b0
0xcb04: mov byte ptr [rbp],0x2f
0xcb08: mov r15,rax
0xcb0b: jmp 0xca19
0xcb10: call 0x32a0
0xcb15: xor ebp,ebp
0xcb17: mov dword ptr [rax],0x2
0xcb1d: jmp 0xc760
0xcb22: lea rax,[r15-0x1]
0xcb26: cmp rbp,rax
0xcb29: jae 0xcb32
0xcb2b: cmp byte ptr [r15-0x2],0x2f
0xcb30: jne 0xcb3d
0xcb32: mov r15,rax
0xcb35: jmp 0xca19
0xcb3a: mov rax,r15
0xcb3d: lea r15,[rax-0x1]
0xcb41: cmp rbp,r15
0xcb44: je 0xca19
0xcb4a: cmp byte ptr [r15-0x1],0x2f
0xcb4f: je 0xca19
0xcb55: jmp 0xcb3a
0xcb57: call 0x32a0
0xcb5c: mov edx,0x14
0xcb61: mov r12,rax
0xcb64: jmp 0xc801
0xcb69: mov r15,rax
0xcb6c: jmp 0xc5fb
0xcb71: call 0x3420
0xcb80: mov qword ptr [rip+0x214851],rdi
0xcb87: ret
0xcb90: mov byte ptr [rip+0x214839],dil
0xcb97: ret
0xcba0: push rbp
0xcba1: push rbx
0xcba2: sub rsp,0x8
0xcba6: mov rdi,qword ptr [rip+0x2136db]
0xcbad: call 0x15c80
0xcbb2: test eax,eax
0xcbb4: je 0xcbcc
0xcbb6: call 0x32a0
0xcbbb: cmp byte ptr [rip+0x21480e],0x0
0xcbc2: mov rbx,rax
0xcbc5: je 0xcbe3
0xcbc7: cmp dword ptr [rax],0x20
0xcbca: jne 0xcbe3
0xcbcc: mov rdi,qword ptr [rip+0x2136ed]
0xcbd3: call 0x15c80
0xcbd8: test eax,eax
0xcbda: jne 0xcc22
0xcbdc: add rsp,0x8
0xcbe0: pop rbx
0xcbe1: pop rbp
0xcbe2: ret
0xcbe3: lea rsi,[rip+0xd3a5]
0xcbea: xor edi,edi
0xcbec: mov edx,0x5
0xcbf1: call 0x33e0
0xcbf6: mov rdi,qword ptr [rip+0x2147db]
0xcbfd: mov rbp,rax
0xcc00: test rdi,rdi
0xcc03: je 0xcc2d
0xcc05: call 0x13b60
0xcc0a: mov esi,dword ptr [rbx]
0xcc0c: lea rdx,[rip+0xae45]
0xcc13: mov rcx,rax
0xcc16: mov r8,rbp
0xcc19: xor edi,edi
0xcc1b: xor eax,eax
0xcc1d: call 0x3760
0xcc22: mov edi,dword ptr [rip+0x2135d0]
0xcc28: call 0x32d0
0xcc2d: mov esi,dword ptr [rbx]
0xcc2f: lea rdx,[rip+0xd356]
0xcc36: mov rcx,rax
0xcc39: xor edi,edi
0xcc3b: xor eax,eax
0xcc3d: call 0x3760
0xcc42: jmp 0xcc22
0xcc50: push rbp
0xcc51: push rbx
0xcc52: xor ebp,ebp
0xcc54: mov rbx,rdi
0xcc57: sub rsp,0x8
0xcc5b: cmp byte ptr [rdi],0x2f
0xcc5e: sete bpl
0xcc62: call 0xcd10
0xcc67: mov rcx,rax
0xcc6a: sub rcx,rbx
0xcc6d: cmp rcx,rbp
0xcc70: jbe 0xcca0
0xcc72: cmp byte ptr [rax-0x1],0x2f
0xcc76: lea rdx,[rcx-0x1]
0xcc7a: je 0xcc8e
0xcc7c: jmp 0xcca0
0xcc80: cmp byte ptr [rbx+rdx-0x1],0x2f
0xcc85: lea rax,[rdx-0x1]
0xcc89: jne 0xcc93
0xcc8b: mov rdx,rax
0xcc8e: cmp rbp,rdx
0xcc91: jne 0xcc80
0xcc93: add rsp,0x8
0xcc97: mov rax,rdx
0xcc9a: pop rbx
0xcc9b: pop rbp
0xcc9c: ret
0xcca0: add rsp,0x8
0xcca4: mov rdx,rcx
0xcca7: mov rax,rdx
0xccaa: pop rbx
0xccab: pop rbp
0xccac: ret
0xccb0: push rbp
0xccb1: push rbx
0xccb2: mov rbp,rdi
0xccb5: sub rsp,0x8
0xccb9: call 0xcc50
0xccbe: test rax,rax
0xccc1: mov rbx,rax
0xccc4: sete al
0xccc7: movzx eax,al
0xccca: lea rdi,[rbx+rax+0x1]
0xcccf: call 0x3888
0xccd4: test rax,rax
0xccd7: mov rcx,rax
0xccda: je 0xccf6
0xccdc: mov rdx,rbx
0xccdf: mov rsi,rbp
0xcce2: mov rdi,rax
0xcce5: call 0x35f0
0xccea: test rbx,rbx
0xcced: mov rcx,rax
0xccf0: je 0xcd00
0xccf2: mov byte ptr [rcx+rbx],0x0
0xccf6: add rsp,0x8
0xccfa: mov rax,rcx
0xccfd: pop rbx
0xccfe: pop rbp
0xccff: ret
0xcd00: mov byte ptr [rax],0x2e
0xcd03: mov ebx,0x1
0xcd08: jmp 0xccf2
0xcd10: movzx edx,byte ptr [rdi]
0xcd13: mov rax,rdi
0xcd16: cmp dl,0x2f
0xcd19: jne 0xcd2c
0xcd1b: nop dword ptr [rax+rax]
0xcd20: add rax,0x1
0xcd24: movzx edx,byte ptr [rax]
0xcd27: cmp dl,0x2f
0xcd2a: je 0xcd20
0xcd2c: test dl,dl
0xcd2e: je 0xcd6a
0xcd30: mov rcx,rax
0xcd33: xor esi,esi
0xcd35: jmp 0xcd55
0xcd40: test sil,sil
0xcd43: je 0xcd4a
0xcd45: mov rax,rcx
0xcd48: xor esi,esi
0xcd4a: add rcx,0x1
0xcd4e: movzx edx,byte ptr [rcx]
0xcd51: test dl,dl
0xcd53: je 0xcd6a
0xcd55: cmp dl,0x2f
0xcd58: jne 0xcd40
0xcd5a: add rcx,0x1
0xcd5e: movzx edx,byte ptr [rcx]
0xcd61: mov esi,0x1
0xcd66: test dl,dl
0xcd68: jne 0xcd55
0xcd6a: ret
0xcd70: push rbx
0xcd71: mov rbx,rdi
0xcd74: call 0x3400
0xcd79: cmp rax,0x1
0xcd7d: jbe 0xcd8a
0xcd7f: cmp byte ptr [rbx+rax-0x1],0x2f
0xcd84: lea rdx,[rax-0x1]
0xcd88: je 0xcd98
0xcd8a: pop rbx
0xcd8b: ret
0xcd90: mov rdx,rax
0xcd93: nop dword ptr [rax+rax]
0xcd98: cmp rdx,0x1
0xcd9c: je 0xcdb0
0xcd9e: cmp byte ptr [rbx+rdx-0x1],0x2f
0xcda3: lea rax,[rdx-0x1]
0xcda7: je 0xcd90
0xcda9: mov rax,rdx
0xcdac: pop rbx
0xcdad: ret
0xcdb0: mov eax,0x1
0xcdb5: pop rbx
0xcdb6: ret
0xcdc0: xor eax,eax
0xcdc2: ret
0xcdd0: test rdi,rdi
0xcdd3: je 0xce50
0xcdd5: push r13
0xcdd7: push r12
0xcdd9: mov r13,rdi
0xcddc: push rbp
0xcddd: push rbx
0xcdde: mov r12,rsi
0xcde1: mov edi,0x18
0xcde6: mov rbp,rdx
0xcde9: sub rsp,0x8
0xcded: call 0x14590
0xcdf2: mov rdi,r12
0xcdf5: mov rbx,rax
0xcdf8: call 0x147c0
0xcdfd: mov qword ptr [rbx],rax
0xce00: mov rax,qword ptr [rbp+0x8]
0xce04: mov rsi,rbx
0xce07: mov rdi,r13
0xce0a: mov qword ptr [rbx+0x8],rax
0xce0e: mov rax,qword ptr [rbp]
0xce12: mov qword ptr [rbx+0x10],rax
0xce16: call 0xe7b0
0xce1b: test rax,rax
0xce1e: je 0xce52
0xce20: cmp rbx,rax
0xce23: je 0xce40
0xce25: add rsp,0x8
0xce29: mov rdi,rbx
0xce2c: pop rbx
0xce2d: pop rbp
0xce2e: pop r12
0xce30: pop r13
0xce32: jmp 0xead0
0xce40: add rsp,0x8
0xce44: pop rbx
0xce45: pop rbp
0xce46: pop r12
0xce48: pop r13
0xce4a: ret
0xce50: ret
0xce52: call 0x147e0
0xce57: nop word ptr [rax+rax]
0xce60: sub rsp,0x28
0xce64: mov rax,qword ptr fs:0x28
0xce6d: mov qword ptr [rsp+0x18],rax
0xce72: xor eax,eax
0xce74: test rdi,rdi
0xce77: je 0xce9c
0xce79: mov rax,qword ptr [rdx+0x8]
0xce7d: mov qword ptr [rsp+0x0],rsi
0xce81: mov rsi,rsp
0xce84: mov qword ptr [rsp+0x8],rax
0xce89: mov rax,qword ptr [rdx]
0xce8c: mov qword ptr [rsp+0x10],rax
0xce91: call 0xdd40
0xce96: test rax,rax
0xce99: setne al
0xce9c: mov rcx,qword ptr [rsp+0x18]
0xcea1: xor rcx,qword ptr fs:0x28
0xceaa: jne 0xceb1
0xceac: add rsp,0x28
0xceb0: ret
0xceb1: call 0x3420
0xcec0: mov edx,edi
0xcec2: mov eax,0x2d
0xcec7: and edx,0xf000
0xcecd: cmp edx,0x8000
0xced3: je 0xcf30
0xced5: cmp edx,0x4000
0xcedb: mov eax,0x64
0xcee0: je 0xcf30
0xcee2: cmp edx,0x6000
0xcee8: mov eax,0x62
0xceed: je 0xcf30
0xceef: cmp edx,0x2000
0xcef5: mov eax,0x63
0xcefa: je 0xcf30
0xcefc: cmp edx,0xa000
0xcf02: mov eax,0x6c
0xcf07: je 0xcf30
0xcf09: cmp edx,0x1000
0xcf0f: mov eax,0x70
0xcf14: je 0xcf30
0xcf16: cmp edx,0xc000
0xcf1c: mov eax,0x73
0xcf21: mov edx,0x3f
0xcf26: cmovne eax,edx
0xcf29: nop dword ptr [rax]
0xcf30: mov byte ptr [rsi],al
0xcf32: mov eax,edi
0xcf34: and eax,0x100
0xcf39: cmp eax,0x1
0xcf3c: sbb eax,eax
0xcf3e: and eax,0xffffffbb
0xcf41: add eax,0x72
0xcf44: mov byte ptr [rsi+0x1],al
0xcf47: mov eax,edi
0xcf49: and eax,0x80
0xcf4e: cmp eax,0x1
0xcf51: sbb eax,eax
0xcf53: and eax,0xffffffb6
0xcf56: add eax,0x77
0xcf59: mov byte ptr [rsi+0x2],al
0xcf5c: mov eax,edi
0xcf5e: and eax,0x40
0xcf61: cmp eax,0x1
0xcf64: sbb eax,eax
0xcf66: test edi,0x800
0xcf6c: je 0xd010
0xcf72: and eax,0xffffffe0
0xcf75: add eax,0x73
0xcf78: mov byte ptr [rsi+0x3],al
0xcf7b: mov eax,edi
0xcf7d: and eax,0x20
0xcf80: cmp eax,0x1
0xcf83: sbb eax,eax
0xcf85: and eax,0xffffffbb
0xcf88: add eax,0x72
0xcf8b: mov byte ptr [rsi+0x4],al
0xcf8e: mov eax,edi
0xcf90: and eax,0x10
0xcf93: cmp eax,0x1
0xcf96: sbb eax,eax
0xcf98: and eax,0xffffffb6
0xcf9b: add eax,0x77
0xcf9e: mov byte ptr [rsi+0x5],al
0xcfa1: mov eax,edi
0xcfa3: and eax,0x8
0xcfa6: cmp eax,0x1
0xcfa9: sbb eax,eax
0xcfab: test edi,0x400
0xcfb1: je 0xd038
0xcfb7: and eax,0xffffffe0
0xcfba: add eax,0x73
0xcfbd: mov byte ptr [rsi+0x6],al
0xcfc0: mov eax,edi
0xcfc2: and eax,0x4
0xcfc5: cmp eax,0x1
0xcfc8: sbb eax,eax
0xcfca: and eax,0xffffffbb
0xcfcd: add eax,0x72
0xcfd0: mov byte ptr [rsi+0x7],al
0xcfd3: mov eax,edi
0xcfd5: and eax,0x2
0xcfd8: cmp eax,0x1
0xcfdb: sbb eax,eax
0xcfdd: and eax,0xffffffb6
0xcfe0: add eax,0x77
0xcfe3: mov byte ptr [rsi+0x8],al
0xcfe6: mov eax,edi
0xcfe8: and eax,0x1
0xcfeb: cmp eax,0x1
0xcfee: sbb eax,eax
0xcff0: and edi,0x200
0xcff6: je 0xd020
0xcff8: and eax,0xffffffe0
0xcffb: add eax,0x74
0xcffe: mov byte ptr [rsi+0x9],al
0xd001: mov eax,0x20
0xd006: mov word ptr [rsi+0xa],ax
0xd00a: ret
0xd010: and eax,0xffffffb5
0xd013: add eax,0x78
0xd016: jmp 0xcf78
0xd020: and eax,0xffffffb5
0xd023: add eax,0x78
0xd026: mov byte ptr [rsi+0x9],al
0xd029: mov eax,0x20
0xd02e: mov word ptr [rsi+0xa],ax
0xd032: ret
0xd038: and eax,0xffffffb5
0xd03b: add eax,0x78
0xd03e: jmp 0xcfbd
0xd050: mov edi,dword ptr [rdi+0x18]
0xd053: jmp 0xcec0
0xd060: sub rsp,0x8
0xd064: call 0xd080
0xd069: test rax,rax
0xd06c: je 0xd073
0xd06e: add rsp,0x8
0xd072: ret
0xd073: call 0x147e0
0xd078: nop dword ptr [rax+rax]
0xd080: push r15
0xd082: push r14
0xd084: mov r15,rdx
0xd087: push r13
0xd089: push r12
0xd08b: mov r12,rdi
0xd08e: push rbp
0xd08f: push rbx
0xd090: mov rbp,rsi
0xd093: sub rsp,0x18
0xd097: call 0xcd10
0xd09c: mov rbx,rax
0xd09f: mov rdi,rax
0xd0a2: call 0xcd70
0xd0a7: sub rbx,r12
0xd0aa: mov r13,rax
0xd0ad: mov rdi,rbp
0xd0b0: add rbx,rax
0xd0b3: call 0x3400
0xd0b8: test r13,r13
0xd0bb: mov r14,rax
0xd0be: je 0xd0f0
0xd0c0: cmp byte ptr [r12+rbx-0x1],0x2f
0xd0c6: je 0xd170
0xd0cc: xor eax,eax
0xd0ce: cmp byte ptr [rbp],0x2f
0xd0d2: mov edx,0x0
0xd0d7: setne al
0xd0da: mov qword ptr [rsp+0x0],rax
0xd0de: mov eax,0x2f
0xd0e3: cmove eax,edx
0xd0e6: mov byte ptr [rsp+0xf],al
0xd0ea: jmp 0xd10e
0xd0f0: xor eax,eax
0xd0f2: cmp byte ptr [rbp],0x2f
0xd0f6: mov edx,0x0
0xd0fb: sete al
0xd0fe: mov qword ptr [rsp+0x0],rax
0xd102: mov eax,0x2e
0xd107: cmovne eax,edx
0xd10a: mov byte ptr [rsp+0xf],al
0xd10e: lea rdi,[rbx+r14+0x1]
0xd113: add rdi,qword ptr [rsp+0x0]
0xd117: call 0x3888
0xd11c: test rax,rax
0xd11f: mov r13,rax
0xd122: je 0xd156
0xd124: mov rdi,rax
0xd127: mov rdx,rbx
0xd12a: mov rsi,r12
0xd12d: call 0x3740
0xd132: movzx ecx,byte ptr [rsp+0xf]
0xd137: mov rdi,qword ptr [rsp+0x0]
0xd13b: add rdi,rax
0xd13e: test r15,r15
0xd141: mov byte ptr [rax],cl
0xd143: je 0xd148
0xd145: mov qword ptr [r15],rdi
0xd148: mov rdx,r14
0xd14b: mov rsi,rbp
0xd14e: call 0x3740
0xd153: mov byte ptr [rax],0x0
0xd156: add rsp,0x18
0xd15a: mov rax,r13
0xd15d: pop rbx
0xd15e: pop rbp
0xd15f: pop r12
0xd161: pop r13
0xd163: pop r14
0xd165: pop r15
0xd167: ret
0xd170: mov qword ptr [rsp+0x0],0x0
0xd178: mov byte ptr [rsp+0xf],0x0
0xd17d: jmp 0xd10e
0xd180: mov rsi,qword ptr [rdi]
0xd183: movzx edx,byte ptr [rsi]
0xd186: test dl,dl
0xd188: je 0xd240
0xd18e: xor ecx,ecx
0xd190: xor eax,eax
0xd192: xor r8d,r8d
0xd195: mov r11d,0x1
0xd19b: movabs r10,0x3ffffff03ffffff
0xd1a5: jmp 0xd1df
0xd1b0: movsx ecx,dl
0xd1b3: sub ecx,0x41
0xd1b6: cmp ecx,0x39
0xd1b9: ja 0xd1c8
0xd1bb: mov r9,r11
0xd1be: shl r9,cl
0xd1c1: xor ecx,ecx
0xd1c3: test r9,r10
0xd1c6: jne 0xd1d1
0xd1c8: xor ecx,ecx
0xd1ca: cmp dl,0x7e
0xd1cd: cmovne rax,r8
0xd1d1: add rsi,0x1
0xd1d5: mov qword ptr [rdi],rsi
0xd1d8: movzx edx,byte ptr [rsi]
0xd1db: test dl,dl
0xd1dd: je 0xd211
0xd1df: test cl,cl
0xd1e1: jne 0xd1b0
0xd1e3: cmp dl,0x2e
0xd1e6: je 0xd218
0xd1e8: cmp dl,0x5a
0xd1eb: jg 0xd230
0xd1ed: cmp dl,0x41
0xd1f0: jge 0xd1d1
0xd1f2: lea r9d,[rdx-0x30]
0xd1f6: cmp r9b,0x9
0xd1fa: jbe 0xd1d1
0xd1fc: cmp dl,0x7e
0xd1ff: cmovne rax,r8
0xd203: add rsi,0x1
0xd207: mov qword ptr [rdi],rsi
0xd20a: movzx edx,byte ptr [rsi]
0xd20d: test dl,dl
0xd20f: jne 0xd1df
0xd211: ret
0xd218: test rax,rax
0xd21b: mov ecx,0x1
0xd220: cmove rax,rsi
0xd224: jmp 0xd1d1
0xd230: lea r9d,[rdx-0x61]
0xd234: cmp r9b,0x19
0xd238: ja 0xd1fc
0xd23a: jmp 0xd1d1
0xd240: xor eax,eax
0xd242: ret
0xd250: push r15
0xd252: push r14
0xd254: push r13
0xd256: push r12
0xd258: push rbp
0xd259: push rbx
0xd25a: mov rbp,rsi
0xd25d: mov rbx,rdi
0xd260: sub rsp,0x38
0xd264: mov rax,qword ptr fs:0x28
0xd26d: mov qword ptr [rsp+0x28],rax
0xd272: xor eax,eax
0xd274: call 0x3590
0xd279: test eax,eax
0xd27b: mov r12d,eax
0xd27e: je 0xd4c8
0xd284: movzx eax,byte ptr [rbx]
0xd287: test al,al
0xd289: je 0xd608
0xd28f: movzx r8d,byte ptr [rbp]
0xd294: test r8b,r8b
0xd297: je 0xd4f0
0xd29d: lea r9,[rip+0xccf8]
0xd2a4: mov ecx,0x2
0xd2a9: mov rdi,rbx
0xd2ac: mov rsi,r9
0xd2af: rep cmpsb [rsi],[rdi]
0xd2b1: seta dl
0xd2b4: sbb dl,0x0
0xd2b7: test dl,dl
0xd2b9: je 0xd608
0xd2bf: mov ecx,0x2
0xd2c4: mov rsi,r9
0xd2c7: mov rdi,rbp
0xd2ca: rep cmpsb [rsi],[rdi]
0xd2cc: seta dl
0xd2cf: sbb dl,0x0
0xd2d2: test dl,dl
0xd2d4: je 0xd4f0
0xd2da: lea r9,[rip+0xccba]
0xd2e1: mov ecx,0x3
0xd2e6: mov rdi,rbx
0xd2e9: mov rsi,r9
0xd2ec: rep cmpsb [rsi],[rdi]
0xd2ee: seta dl
0xd2f1: sbb dl,0x0
0xd2f4: test dl,dl
0xd2f6: je 0xd608
0xd2fc: mov ecx,0x3
0xd301: mov rsi,r9
0xd304: mov rdi,rbp
0xd307: rep cmpsb [rsi],[rdi]
0xd309: seta dl
0xd30c: sbb dl,0x0
0xd30f: test dl,dl
0xd311: je 0xd4f0
0xd317: cmp al,0x2e
0xd319: je 0xd5f0
0xd31f: cmp r8b,0x2e
0xd323: je 0xd4f0
0xd329: lea rdi,[rsp+0x18]
0xd32e: mov qword ptr [rsp+0x18],rbx
0xd333: mov qword ptr [rsp+0x20],rbp
0xd338: call 0xd180
0xd33d: lea rdi,[rsp+0x20]
0xd342: mov r13,rax
0xd345: call 0xd180
0xd34a: test r13,r13
0xd34d: je 0xd560
0xd353: sub r13,rbx
0xd356: test rax,rax
0xd359: je 0xd673
0xd35f: sub rax,rbp
0xd362: mov r14,rax
0xd365: cmp r13,r14
0xd368: je 0xd640
0xd36e: xor esi,esi
0xd370: xor edx,edx
0xd372: mov r10d,0x1
0xd378: movabs r15,0x3ffffff03ffffff
0xd382: cmp r13,rdx
0xd385: ja 0xd390
0xd387: cmp r14,rsi
0xd38a: jbe 0xd4c8
0xd390: mov r11,rsi
0xd393: mov qword ptr [rsp+0x0],rbp
0xd397: sub r11,rdx
0xd39a: lea rax,[r13+r11]
0xd39f: lea r9,[rbp+r11]
0xd3a4: mov qword ptr [rsp+0x8],rax
0xd3a9: nop dword ptr [rax]
0xd3b0: cmp r13,rdx
0xd3b3: jbe 0xd3c0
0xd3b5: movzx eax,byte ptr [rbx+rdx]
0xd3b9: sub eax,0x30
0xd3bc: cmp al,0x9
0xd3be: ja 0xd3da
0xd3c0: cmp r14,rsi
0xd3c3: movsx eax,byte ptr [r9+rdx]
0xd3c8: jbe 0xd590
0xd3ce: lea ecx,[rax-0x30]
0xd3d1: cmp cl,0x9
0xd3d4: jbe 0xd590
0xd3da: cmp r13,rdx
0xd3dd: je 0xd613
0xd3e3: movzx eax,byte ptr [rbx+rdx]
0xd3e7: lea ecx,[rax-0x30]
0xd3ea: cmp cl,0x9
0xd3ed: jbe 0xd580
0xd3f3: movzx r8d,al
0xd3f7: lea ecx,[r8-0x41]
0xd3fb: cmp ecx,0x39
0xd3fe: ja 0xd40b
0xd400: mov rdi,r10
0xd403: shl rdi,cl
0xd406: test rdi,r15
0xd409: jne 0xd41a
0xd40b: add r8d,0x100
0xd412: cmp al,0x7e
0xd414: je 0xd500
0xd41a: cmp r14,rsi
0xd41d: je 0xd430
0xd41f: movzx eax,byte ptr [r9+rdx]
0xd424: lea ecx,[rax-0x30]
0xd427: cmp cl,0x9
0xd42a: ja 0xd528
0xd430: xor edi,edi
0xd432: cmp edi,r8d
0xd435: jne 0xd5c8
0xd43b: add rdx,0x1
0xd43f: add rsi,0x1
0xd443: jmp 0xd3b0
0xd450: add rsi,0x1
0xd454: movsx eax,byte ptr [rbp+rsi]
0xd459: cmp al,0x30
0xd45b: je 0xd450
0xd45d: sub rsi,rdx
0xd460: xor r8d,r8d
0xd463: mov r9,rsi
0xd466: lea r11,[rbp+rsi]
0xd46b: jmp 0xd496
0xd470: lea esi,[rax-0x30]
0xd473: cmp sil,0x9
0xd477: ja 0xd5e0
0xd47d: test r8d,r8d
0xd480: jne 0xd489
0xd482: movsx r8d,cl
0xd486: sub r8d,eax
0xd489: add rdx,0x1
0xd48d: movzx ecx,byte ptr [rbx+rdx]
0xd491: movsx eax,byte ptr [r11+rdx]
0xd496: lea edi,[rcx-0x30]
0xd499: lea rsi,[rdx+r9]
0xd49d: cmp dil,0x9
0xd4a1: jbe 0xd470
0xd4a3: sub eax,0x30
0xd4a6: cmp al,0x9
0xd4a8: jbe 0xd663
0xd4ae: test r8d,r8d
0xd4b1: je 0xd382
0xd4b7: nop word ptr [rax+rax]
0xd4c0: mov r12d,r8d
0xd4c3: nop dword ptr [rax+rax]
0xd4c8: mov rbx,qword ptr [rsp+0x28]
0xd4cd: xor rbx,qword ptr fs:0x28
0xd4d6: mov eax,r12d
0xd4d9: jne 0xd66e
0xd4df: add rsp,0x38
0xd4e3: pop rbx
0xd4e4: pop rbp
0xd4e5: pop r12
0xd4e7: pop r13
0xd4e9: pop r14
0xd4eb: pop r15
0xd4ed: ret
0xd4f0: mov r12d,0x1
0xd4f6: jmp 0xd4c8
0xd500: lea rax,[r11+rdx]
0xd504: cmp r14,rax
0xd507: je 0xd5c0
0xd50d: movzx eax,byte ptr [r9+rdx]
0xd512: lea ecx,[rax-0x30]
0xd515: cmp cl,0x9
0xd518: jbe 0xd5c0
0xd51e: mov r8d,0xffffffff
0xd524: nop dword ptr [rax]
0xd528: movzx edi,al
0xd52b: lea ecx,[rdi-0x41]
0xd52e: cmp ecx,0x39
0xd531: ja 0xd542
0xd533: mov rbp,r10
0xd536: shl rbp,cl
0xd539: test rbp,r15
0xd53c: jne 0xd432
0xd542: add edi,0x100
0xd548: cmp al,0x7e
0xd54a: mov eax,0xffffffff
0xd54f: cmove edi,eax
0xd552: jmp 0xd432
0xd560: mov r13,qword ptr [rsp+0x18]
0xd565: sub r13,rbx
0xd568: test rax,rax
0xd56b: jne 0xd35f
0xd571: mov r14,qword ptr [rsp+0x20]
0xd576: sub r14,rbp
0xd579: jmp 0xd36e
0xd580: xor r8d,r8d
0xd583: jmp 0xd41a
0xd590: movzx ecx,byte ptr [rbx+rdx]
0xd594: mov rbp,qword ptr [rsp+0x0]
0xd598: cmp cl,0x30
0xd59b: jne 0xd459
0xd5a1: nop dword ptr [rax]
0xd5a8: add rdx,0x1
0xd5ac: movzx ecx,byte ptr [rbx+rdx]
0xd5b0: cmp cl,0x30
0xd5b3: je 0xd5a8
0xd5b5: jmp 0xd459
0xd5c0: xor edi,edi
0xd5c2: mov r8d,0xffffffff
0xd5c8: sub r8d,edi
0xd5cb: jne 0xd4c0
0xd5d1: jmp 0xd4c8
0xd5e0: mov r8d,0x1
0xd5e6: jmp 0xd4c0
0xd5f0: add rbx,0x1
0xd5f4: add rbp,0x1
0xd5f8: cmp r8b,0x2e
0xd5fc: je 0xd329
0xd602: nop word ptr [rax+rax]
0xd608: mov r12d,0xffffffff
0xd60e: jmp 0xd4c8
0xd613: cmp r14,qword ptr [rsp+0x8]
0xd618: je 0xd43b
0xd61e: movzx eax,byte ptr [r9+r13]
0xd623: lea ecx,[rax-0x30]
0xd626: cmp cl,0x9
0xd629: jbe 0xd43b
0xd62f: xor r8d,r8d
0xd632: jmp 0xd528
0xd640: mov rdx,r13
0xd643: mov rsi,rbp
0xd646: mov rdi,rbx
0xd649: call 0x32b0
0xd64e: test eax,eax
0xd650: jne 0xd36e
0xd656: mov r13,qword ptr [rsp+0x18]
0xd65b: sub r13,rbx
0xd65e: jmp 0xd571
0xd663: mov r8d,0xffffffff
0xd669: jmp 0xd4c0
0xd66e: call 0x3420
0xd673: mov r14,qword ptr [rsp+0x20]
0xd678: sub r14,rbp
0xd67b: jmp 0xd365
0xd680: mov rsi,rdi
0xd683: xor edi,edi
0xd685: jmp 0x3370
0xd690: sub rsp,0x28
0xd694: xor edi,edi
0xd696: mov rsi,rsp
0xd699: mov rax,qword ptr fs:0x28
0xd6a2: mov qword ptr [rsp+0x18],rax
0xd6a7: xor eax,eax
0xd6a9: call 0x3370
0xd6ae: mov rcx,qword ptr [rsp+0x18]
0xd6b3: xor rcx,qword ptr fs:0x28
0xd6bc: mov rax,qword ptr [rsp+0x0]
0xd6c0: mov rdx,qword ptr [rsp+0x8]
0xd6c5: jne 0xd6cc
0xd6c7: add rsp,0x28
0xd6cb: ret
0xd6cc: call 0x3420
0xd740: cmp rdi,0xa
0xd744: mov eax,0xa
0xd749: movabs r9,0xaaaaaaaaaaaaaaab
0xd753: cmovb rdi,rax
0xd757: or rdi,0x1
0xd75b: cmp rdi,0xffffffffffffffff
0xd75f: je 0xd7cf
0xd761: nop dword ptr [rax]
0xd768: mov rax,rdi
0xd76b: mov rcx,rdi
0xd76e: mul r9
0xd771: mov rax,rdx
0xd774: shr rax,0x1
0xd777: lea rax,[rax+rax*2]
0xd77b: sub rcx,rax
0xd77e: cmp rdi,0x9
0xd782: mov rax,rcx
0xd785: jbe 0xd7c0
0xd787: test rcx,rcx
0xd78a: je 0xd7c5
0xd78c: mov r8d,0x10
0xd792: mov esi,0x9
0xd797: mov ecx,0x3
0xd79c: jmp 0xd7a9
0xd7a0: add r8,0x8
0xd7a4: test rdx,rdx
0xd7a7: je 0xd7c5
0xd7a9: add rcx,0x2
0xd7ad: xor edx,edx
0xd7af: mov rax,rdi
0xd7b2: div rcx
0xd7b5: add rsi,r8
0xd7b8: cmp rsi,rdi
0xd7bb: mov rax,rdx
0xd7be: jb 0xd7a0
0xd7c0: test rax,rax
0xd7c3: jne 0xd7cf
0xd7c5: add rdi,0x2
0xd7c9: cmp rdi,0xffffffffffffffff
0xd7cd: jne 0xd768
0xd7cf: mov rax,rdi
0xd7d2: ret
0xd7e0: mov rax,rdi
0xd7e3: xor edx,edx
0xd7e5: ror rax,0x3
0xd7e9: div rsi
0xd7ec: mov rax,rdx
0xd7ef: ret
0xd7f0: cmp rdi,rsi
0xd7f3: sete al
0xd7f6: ret
0xd800: push rbx
0xd801: mov rbx,rdi
0xd804: mov rdi,rsi
0xd807: mov rsi,qword ptr [rbx+0x10]
0xd80b: call qword ptr [rbx+0x30]
0xd80e: cmp qword ptr [rbx+0x10],rax
0xd812: jbe 0xd81d
0xd814: shl rax,0x4
0xd818: add rax,qword ptr [rbx]
0xd81b: pop rbx
0xd81c: ret
0xd81d: call 0x3290
0xd830: push r14
0xd832: push r13
0xd834: mov r14,rdx
0xd837: push r12
0xd839: push rbp
0xd83a: mov r12,rdi
0xd83d: push rbx
0xd83e: mov rbp,rsi
0xd841: mov r13d,ecx
0xd844: call 0xd800
0xd849: mov qword ptr [r14],rax
0xd84c: mov rsi,qword ptr [rax]
0xd84f: test rsi,rsi
0xd852: je 0xd940
0xd858: cmp rsi,rbp
0xd85b: mov rbx,rax
0xd85e: je 0xd8f3
0xd864: mov rdi,rbp
0xd867: call qword ptr [r12+0x38]
0xd86c: test al,al
0xd86e: jne 0xd8f0
0xd874: mov rax,qword ptr [rbx+0x8]
0xd878: test rax,rax
0xd87b: je 0xd940
0xd881: mov rsi,qword ptr [rax]
0xd884: cmp rbp,rsi
0xd887: jne 0xd8a9
0xd889: jmp 0xd8bc
0xd890: mov rbx,qword ptr [rbx+0x8]
0xd894: mov rax,qword ptr [rbx+0x8]
0xd898: test rax,rax
0xd89b: je 0xd940
0xd8a1: mov rsi,qword ptr [rax]
0xd8a4: cmp rsi,rbp
0xd8a7: je 0xd8bc
0xd8a9: mov rdi,rbp
0xd8ac: call qword ptr [r12+0x38]
0xd8b1: test al,al
0xd8b3: je 0xd890
0xd8b5: mov rax,qword ptr [rbx+0x8]
0xd8b9: mov rsi,qword ptr [rax]
0xd8bc: test r13b,r13b
0xd8bf: je 0xd8de
0xd8c1: mov rdx,qword ptr [rax+0x8]
0xd8c5: mov qword ptr [rbx+0x8],rdx
0xd8c9: mov qword ptr [rax],0x0
0xd8d0: mov rdx,qword ptr [r12+0x48]
0xd8d5: mov qword ptr [rax+0x8],rdx
0xd8d9: mov qword ptr [r12+0x48],rax
0xd8de: pop rbx
0xd8df: mov rax,rsi
0xd8e2: pop rbp
0xd8e3: pop r12
0xd8e5: pop r13
0xd8e7: pop r14
0xd8e9: ret
0xd8f0: mov rsi,qword ptr [rbx]
0xd8f3: test r13b,r13b
0xd8f6: je 0xd8de
0xd8f8: mov rax,qword ptr [rbx+0x8]
0xd8fc: test rax,rax
0xd8ff: je 0xd930
0xd901: movdqu xmm0,xmmword ptr [rax]
0xd905: movups xmmword ptr [rbx],xmm0
0xd908: mov qword ptr [rax],0x0
0xd90f: mov rdx,qword ptr [r12+0x48]
0xd914: mov qword ptr [rax+0x8],rdx
0xd918: mov qword ptr [r12+0x48],rax
0xd91d: mov rax,rsi
0xd920: pop rbx
0xd921: pop rbp
0xd922: pop r12
0xd924: pop r13
0xd926: pop r14
0xd928: ret
0xd930: mov qword ptr [rbx],0x0
0xd937: jmp 0xd8de
0xd940: xor esi,esi
0xd942: pop rbx
0xd943: mov rax,rsi
0xd946: pop rbp
0xd947: pop r12
0xd949: pop r13
0xd94b: pop r14
0xd94d: ret
0xd950: mov rdx,qword ptr [rdi]
0xd953: lea rcx,[rip+0xc6c6]
0xd95a: mov eax,0x1
0xd95f: cmp rdx,rcx
0xd962: je 0xd9c5
0xd964: movss xmm0,dword ptr [rdx+0x8]
0xd969: ucomiss xmm0,dword ptr [rip+0xc6c4]
0xd970: jbe 0xd9c0
0xd972: movss xmm1,dword ptr [rip+0xc6be]
0xd97a: ucomiss xmm1,xmm0
0xd97d: jbe 0xd9c0
0xd97f: movss xmm1,dword ptr [rdx+0xc]
0xd984: ucomiss xmm1,dword ptr [rip+0xc6b1]
0xd98b: jbe 0xd9c0
0xd98d: movss xmm1,dword ptr [rdx]
0xd991: ucomiss xmm1,dword ptr [rip+0xc6a8]
0xd998: jb 0xd9c0
0xd99a: addss xmm1,dword ptr [rip+0xc692]
0xd9a2: movss xmm2,dword ptr [rdx+0x4]
0xd9a7: ucomiss xmm2,xmm1
0xd9aa: jbe 0xd9c0
0xd9ac: movss xmm3,dword ptr [rip+0xc690]
0xd9b4: ucomiss xmm3,xmm2
0xd9b7: jb 0xd9c0
0xd9b9: ucomiss xmm0,xmm1
0xd9bc: ja 0xd9c5
0xd9be: nop
0xd9c0: mov qword ptr [rdi],rcx
0xd9c3: xor eax,eax
0xd9c5: ret
0xd9d0: push r15
0xd9d2: push r14
0xd9d4: push r13
0xd9d6: push r12
0xd9d8: push rbp
0xd9d9: push rbx
0xd9da: sub rsp,0x8
0xd9de: mov r12,qword ptr [rsi]
0xd9e1: cmp r12,qword ptr [rsi+0x8]
0xd9e5: jae 0xdac8
0xd9eb: mov rbp,rdi
0xd9ee: mov r13,rsi
0xd9f1: mov r14d,edx
0xd9f4: nop dword ptr [rax]
0xd9f8: mov r15,qword ptr [r12]
0xd9fc: test r15,r15
0xd9ff: je 0xdaba
0xda05: mov rbx,qword ptr [r12+0x8]
0xda0a: test rbx,rbx
0xda0d: jne 0xda2c
0xda0f: jmp 0xda6b
0xda18: mov rcx,qword ptr [rax+0x8]
0xda1c: test rdx,rdx
0xda1f: mov qword ptr [rbx+0x8],rcx
0xda23: mov qword ptr [rax+0x8],rbx
0xda27: mov rbx,rdx
0xda2a: je 0xda67
0xda2c: mov r15,qword ptr [rbx]
0xda2f: mov rdi,rbp
0xda32: mov rsi,r15
0xda35: call 0xd800
0xda3a: cmp qword ptr [rax],0x0
0xda3e: mov rdx,qword ptr [rbx+0x8]
0xda42: jne 0xda18
0xda44: mov qword ptr [rax],r15
0xda47: add qword ptr [rbp+0x18],0x1
0xda4c: test rdx,rdx
0xda4f: mov qword ptr [rbx],0x0
0xda56: mov rax,qword ptr [rbp+0x48]
0xda5a: mov qword ptr [rbx+0x8],rax
0xda5e: mov qword ptr [rbp+0x48],rbx
0xda62: mov rbx,rdx
0xda65: jne 0xda2c
0xda67: mov r15,qword ptr [r12]
0xda6b: test r14b,r14b
0xda6e: mov qword ptr [r12+0x8],0x0
0xda77: jne 0xdaba
0xda79: mov rsi,r15
0xda7c: mov rdi,rbp
0xda7f: call 0xd800
0xda84: cmp qword ptr [rax],0x0
0xda88: mov rbx,rax
0xda8b: je 0xdae0
0xda8d: mov rax,qword ptr [rbp+0x48]
0xda91: test rax,rax
0xda94: je 0xdaf0
0xda96: mov rdx,qword ptr [rax+0x8]
0xda9a: mov qword ptr [rbp+0x48],rdx
0xda9e: mov rdx,qword ptr [rbx+0x8]
0xdaa2: mov qword ptr [rax],r15
0xdaa5: mov qword ptr [rax+0x8],rdx
0xdaa9: mov qword ptr [rbx+0x8],rax
0xdaad: mov qword ptr [r12],0x0
0xdab5: sub qword ptr [r13+0x18],0x1
0xdaba: add r12,0x10
0xdabe: cmp qword ptr [r13+0x8],r12
0xdac2: ja 0xd9f8
0xdac8: add rsp,0x8
0xdacc: mov eax,0x1
0xdad1: pop rbx
0xdad2: pop rbp
0xdad3: pop r12
0xdad5: pop r13
0xdad7: pop r14
0xdad9: pop r15
0xdadb: ret
0xdae0: mov qword ptr [rax],r15
0xdae3: add qword ptr [rbp+0x18],0x1
0xdae8: jmp 0xdaad
0xdaf0: mov edi,0x10
0xdaf5: call 0x3888
0xdafa: test rax,rax
0xdafd: jne 0xda9e
0xdaff: add rsp,0x8
0xdb03: xor eax,eax
0xdb05: pop rbx
0xdb06: pop rbp
0xdb07: pop r12
0xdb09: pop r13
0xdb0b: pop r14
0xdb0d: pop r15
0xdb0f: ret
0xdb10: mov rax,qword ptr [rdi+0x10]
0xdb14: ret
0xdb20: mov rax,qword ptr [rdi+0x18]
0xdb24: ret
0xdb30: mov rax,qword ptr [rdi+0x20]
0xdb34: ret
0xdb40: mov rsi,qword ptr [rdi]
0xdb43: mov rdi,qword ptr [rdi+0x8]
0xdb47: xor eax,eax
0xdb49: cmp rsi,rdi
0xdb4c: jae 0xdb87
0xdb4e: nop
0xdb50: cmp qword ptr [rsi],0x0
0xdb54: je 0xdb7c
0xdb56: mov rdx,qword ptr [rsi+0x8]
0xdb5a: mov ecx,0x1
0xdb5f: test rdx,rdx
0xdb62: je 0xdb75
0xdb64: nop dword ptr [rax]
0xdb68: mov rdx,qword ptr [rdx+0x8]
0xdb6c: add rcx,0x1
0xdb70: test rdx,rdx
0xdb73: jne 0xdb68
0xdb75: cmp rax,rcx
0xdb78: cmovb rax,rcx
0xdb7c: add rsi,0x10
0xdb80: cmp rsi,rdi
0xdb83: jb 0xdb50
0xdb85: ret
0xdb87: ret
0xdb90: mov rcx,qword ptr [rdi]
0xdb93: mov r8,qword ptr [rdi+0x8]
0xdb97: xor edx,edx
0xdb99: xor esi,esi
0xdb9b: cmp rcx,r8
0xdb9e: jae 0xdbd6
0xdba0: cmp qword ptr [rcx],0x0
0xdba4: je 0xdbcd
0xdba6: mov rax,qword ptr [rcx+0x8]
0xdbaa: add rsi,0x1
0xdbae: add rdx,0x1
0xdbb2: test rax,rax
0xdbb5: je 0xdbcd
0xdbb7: nop word ptr [rax+rax]
0xdbc0: mov rax,qword ptr [rax+0x8]
0xdbc4: add rdx,0x1
0xdbc8: test rax,rax
0xdbcb: jne 0xdbc0
0xdbcd: add rcx,0x10
0xdbd1: cmp rcx,r8
0xdbd4: jb 0xdba0
0xdbd6: xor eax,eax
0xdbd8: cmp qword ptr [rdi+0x18],rsi
0xdbdc: je 0xdbe0
0xdbde: ret
0xdbe0: cmp qword ptr [rdi+0x20],rdx
0xdbe4: sete al
0xdbe7: ret
0xdbf0: push r13
0xdbf2: push r12
0xdbf4: mov r12,rsi
0xdbf7: push rbp
0xdbf8: push rbx
0xdbf9: xor ebx,ebx
0xdbfb: sub rsp,0x8
0xdbff: mov rsi,qword ptr [rdi]
0xdc02: mov rcx,qword ptr [rdi+0x20]
0xdc06: mov rbp,qword ptr [rdi+0x10]
0xdc0a: mov r13,qword ptr [rdi+0x18]
0xdc0e: mov rdi,qword ptr [rdi+0x8]
0xdc12: cmp rsi,rdi
0xdc15: jae 0xdc55
0xdc17: nop word ptr [rax+rax]
0xdc20: cmp qword ptr [rsi],0x0
0xdc24: je 0xdc4c
0xdc26: mov rax,qword ptr [rsi+0x8]
0xdc2a: mov edx,0x1
0xdc2f: test rax,rax
0xdc32: je 0xdc45
0xdc34: nop dword ptr [rax]
0xdc38: mov rax,qword ptr [rax+0x8]
0xdc3c: add rdx,0x1
0xdc40: test rax,rax
0xdc43: jne 0xdc38
0xdc45: cmp rbx,rdx
0xdc48: cmovb rbx,rdx
0xdc4c: add rsi,0x10
0xdc50: cmp rsi,rdi
0xdc53: jb 0xdc20
0xdc55: lea rdx,[rip+0xc34a]
0xdc5c: mov esi,0x1
0xdc61: mov rdi,r12
0xdc64: xor eax,eax
0xdc66: call 0x3800
0xdc6b: lea rdx,[rip+0xc34c]
0xdc72: xor eax,eax
0xdc74: mov rcx,rbp
0xdc77: mov esi,0x1
0xdc7c: mov rdi,r12
0xdc7f: call 0x3800
0xdc84: test r13,r13
0xdc87: js 0xdcf0
0xdc89: pxor xmm0,xmm0
0xdc8d: test rbp,rbp
0xdc90: cvtsi2sd xmm0,r13
0xdc95: mulsd xmm0,qword ptr [rip+0xc3bb]
0xdc9d: js 0xdd19
0xdc9f: pxor xmm1,xmm1
0xdca3: cvtsi2sd xmm1,rbp
0xdca8: divsd xmm0,xmm1
0xdcac: lea rdx,[rip+0xc33d]
0xdcb3: mov rcx,r13
0xdcb6: mov rdi,r12
0xdcb9: mov esi,0x1
0xdcbe: mov eax,0x1
0xdcc3: call 0x3800
0xdcc8: add rsp,0x8
0xdccc: mov rcx,rbx
0xdccf: mov rdi,r12
0xdcd2: pop rbx
0xdcd3: pop rbp
0xdcd4: pop r12
0xdcd6: pop r13
0xdcd8: lea rdx,[rip+0xc2f7]
0xdcdf: mov esi,0x1
0xdce4: xor eax,eax
0xdce6: jmp 0x3800
0xdcf0: mov rax,r13
0xdcf3: mov rdx,r13
0xdcf6: pxor xmm0,xmm0
0xdcfa: shr rax,0x1
0xdcfd: and edx,0x1
0xdd00: or rax,rdx
0xdd03: test rbp,rbp
0xdd06: cvtsi2sd xmm0,rax
0xdd0b: addsd xmm0,xmm0
0xdd0f: mulsd xmm0,qword ptr [rip+0xc341]
0xdd17: jns 0xdc9f
0xdd19: mov rax,rbp
0xdd1c: pxor xmm1,xmm1
0xdd20: shr rax,0x1
0xdd23: and ebp,0x1
0xdd26: or rax,rbp
0xdd29: cvtsi2sd xmm1,rax
0xdd2e: addsd xmm1,xmm1
0xdd32: jmp 0xdca8
0xdd40: push r12
0xdd42: push rbp
0xdd43: mov r12,rdi
0xdd46: push rbx
0xdd47: mov rbp,rsi
0xdd4a: call 0xd800
0xdd4f: mov rsi,qword ptr [rax]
0xdd52: test rsi,rsi
0xdd55: je 0xdd7d
0xdd57: mov rbx,rax
0xdd5a: jmp 0xdd63
0xdd60: mov rsi,qword ptr [rbx]
0xdd63: cmp rsi,rbp
0xdd66: je 0xdd7f
0xdd68: mov rdi,rbp
0xdd6b: call qword ptr [r12+0x38]
0xdd70: test al,al
0xdd72: jne 0xdd90
0xdd74: mov rbx,qword ptr [rbx+0x8]
0xdd78: test rbx,rbx
0xdd7b: jne 0xdd60
0xdd7d: xor esi,esi
0xdd7f: pop rbx
0xdd80: mov rax,rsi
0xdd83: pop rbp
0xdd84: pop r12
0xdd86: ret
0xdd90: mov rsi,qword ptr [rbx]
0xdd93: pop rbx
0xdd94: pop rbp
0xdd95: mov rax,rsi
0xdd98: pop r12
0xdd9a: ret
0xdda0: cmp qword ptr [rdi+0x20],0x0
0xdda5: je 0xddd3
0xdda7: mov rdx,qword ptr [rdi]
0xddaa: mov rcx,qword ptr [rdi+0x8]
0xddae: cmp rdx,rcx
0xddb1: jae 0xddd8
0xddb3: mov rax,qword ptr [rdx]
0xddb6: test rax,rax
0xddb9: jne 0xddd6
0xddbb: nop dword ptr [rax+rax]
0xddc0: add rdx,0x10
0xddc4: cmp rdx,rcx
0xddc7: jae 0xddd8
0xddc9: mov rax,qword ptr [rdx]
0xddcc: test rax,rax
0xddcf: je 0xddc0
0xddd1: ret
0xddd3: xor eax,eax
0xddd5: ret
0xddd6: ret
0xddd8: sub rsp,0x8
0xdddc: call 0x3290
0xddf0: push rbp
0xddf1: push rbx
0xddf2: mov rbp,rdi
0xddf5: mov rbx,rsi
0xddf8: sub rsp,0x8
0xddfc: call 0xd800
0xde01: mov rdx,rax
0xde04: mov rcx,rax
0xde07: mov rax,qword ptr [rdx]
0xde0a: mov rdx,qword ptr [rdx+0x8]
0xde0e: cmp rax,rbx
0xde11: je 0xde29
0xde13: nop dword ptr [rax+rax]
0xde18: test rdx,rdx
0xde1b: je 0xde2e
0xde1d: mov rax,qword ptr [rdx]
0xde20: mov rdx,qword ptr [rdx+0x8]
0xde24: cmp rax,rbx
0xde27: jne 0xde18
0xde29: test rdx,rdx
0xde2c: jne 0xde58
0xde2e: mov rdx,qword ptr [rbp+0x8]
0xde32: jmp 0xde40
0xde38: mov rax,qword ptr [rcx]
0xde3b: test rax,rax
0xde3e: jne 0xde4b
0xde40: add rcx,0x10
0xde44: cmp rdx,rcx
0xde47: ja 0xde38
0xde49: xor eax,eax
0xde4b: add rsp,0x8
0xde4f: pop rbx
0xde50: pop rbp
0xde51: ret
0xde58: mov rax,qword ptr [rdx]
0xde5b: add rsp,0x8
0xde5f: pop rbx
0xde60: pop rbp
0xde61: ret
0xde70: mov r9,qword ptr [rdi]
0xde73: cmp qword ptr [rdi+0x8],r9
0xde77: jbe 0xded2
0xde79: xor r8d,r8d
0xde7c: mov rcx,qword ptr [r9]
0xde7f: test rcx,rcx
0xde82: je 0xdebd
0xde84: cmp rdx,r8
0xde87: jbe 0xdec7
0xde89: mov qword ptr [rsi+r8*8],rcx
0xde8d: mov rcx,qword ptr [r9+0x8]
0xde91: lea rax,[r8+0x1]
0xde95: test rcx,rcx
0xde98: je 0xdeba
0xde9a: nop word ptr [rax+rax]
0xdea0: cmp rdx,rax
0xdea3: je 0xded0
0xdea5: mov r8,qword ptr [rcx]
0xdea8: add rax,0x1
0xdeac: mov qword ptr [rsi+rax*8-0x8],r8
0xdeb1: mov rcx,qword ptr [rcx+0x8]
0xdeb5: test rcx,rcx
0xdeb8: jne 0xdea0
0xdeba: mov r8,rax
0xdebd: add r9,0x10
0xdec1: cmp qword ptr [rdi+0x8],r9
0xdec5: ja 0xde7c
0xdec7: mov rax,r8
0xdeca: ret
0xded0: ret
0xded2: xor eax,eax
0xded4: ret
0xdee0: push r15
0xdee2: push r14
0xdee4: push r13
0xdee6: push r12
0xdee8: push rbp
0xdee9: push rbx
0xdeea: sub rsp,0x8
0xdeee: mov r14,qword ptr [rdi]
0xdef1: cmp qword ptr [rdi+0x8],r14
0xdef5: jbe 0xdf46
0xdef7: mov r13,rdx
0xdefa: mov r12,rsi
0xdefd: mov r15,rdi
0xdf00: xor ebp,ebp
0xdf02: mov rdi,qword ptr [r14]
0xdf05: test rdi,rdi
0xdf08: je 0xdf2a
0xdf0a: mov rbx,r14
0xdf0d: jmp 0xdf13
0xdf10: mov rdi,qword ptr [rbx]
0xdf13: mov rsi,r13
0xdf16: call r12
0xdf19: test al,al
0xdf1b: je 0xdf34
0xdf1d: mov rbx,qword ptr [rbx+0x8]
0xdf21: add rbp,0x1
0xdf25: test rbx,rbx
0xdf28: jne 0xdf10
0xdf2a: add r14,0x10
0xdf2e: cmp qword ptr [r15+0x8],r14
0xdf32: ja 0xdf02
0xdf34: add rsp,0x8
0xdf38: mov rax,rbp
0xdf3b: pop rbx
0xdf3c: pop rbp
0xdf3d: pop r12
0xdf3f: pop r13
0xdf41: pop r14
0xdf43: pop r15
0xdf45: ret
0xdf46: xor ebp,ebp
0xdf48: jmp 0xdf34
0xdf50: movzx ecx,byte ptr [rdi]
0xdf53: xor edx,edx
0xdf55: test cl,cl
0xdf57: je 0xdf7d
0xdf59: nop dword ptr [rax]
0xdf60: mov rax,rdx
0xdf63: add rdi,0x1
0xdf67: shl rax,0x5
0xdf6b: sub rax,rdx
0xdf6e: xor edx,edx
0xdf70: add rax,rcx
0xdf73: movzx ecx,byte ptr [rdi]
0xdf76: div rsi
0xdf79: test cl,cl
0xdf7b: jne 0xdf60
0xdf7d: mov rax,rdx
0xdf80: ret
0xdf90: movabs rax,0x3f80000000000000
0xdf9a: mov byte ptr [rdi+0x10],0x0
0xdf9e: mov qword ptr [rdi],rax
0xdfa1: movabs rax,0x3fb4fdf43f4ccccd
0xdfab: mov qword ptr [rdi+0x8],rax
0xdfaf: ret
0xdfb0: push r15
0xdfb2: push r14
0xdfb4: lea rax,[rip+0xfffffffffffff825]
0xdfbb: push r13
0xdfbd: push r12
0xdfbf: mov r12,rdx
0xdfc2: push rbp
0xdfc3: push rbx
0xdfc4: mov r13,rcx
0xdfc7: mov rbp,rdi
0xdfca: mov edi,0x50
0xdfcf: mov r15,rsi
0xdfd2: sub rsp,0x8
0xdfd6: test rdx,rdx
0xdfd9: mov r14,r8
0xdfdc: cmove r12,rax
0xdfe0: lea rax,[rip+0xfffffffffffff809]
0xdfe7: test rcx,rcx
0xdfea: cmove r13,rax
0xdfee: call 0x3888
0xdff3: test rax,rax
0xdff6: mov rbx,rax
0xdff9: je 0xe0aa
0xdfff: test r15,r15
0xe002: lea rdi,[rax+0x28]
0xe006: je 0xe0c0
0xe00c: mov qword ptr [rax+0x28],r15
0xe010: call 0xd950
0xe015: test al,al
0xe017: je 0xe0a0
0xe01d: cmp byte ptr [r15+0x10],0x0
0xe022: je 0xe120
0xe028: mov rdi,rbp
0xe02b: call 0xd740
0xe030: mov edx,0x8
0xe035: mov rbp,rax
0xe038: xor ecx,ecx
0xe03a: mov rax,rdx
0xe03d: mul rbp
0xe040: jo 0xe15a
0xe046: test rax,rax
0xe049: js 0xe0a0
0xe04b: test rcx,rcx
0xe04e: jne 0xe0a0
0xe050: test rbp,rbp
0xe053: mov qword ptr [rbx+0x10],rbp
0xe057: je 0xe0a0
0xe059: mov esi,0x10
0xe05e: mov rdi,rbp
0xe061: call 0x3580
0xe066: test rax,rax
0xe069: mov qword ptr [rbx],rax
0xe06c: je 0xe0a0
0xe06e: shl rbp,0x4
0xe072: mov qword ptr [rbx+0x18],0x0
0xe07a: mov qword ptr [rbx+0x20],0x0
0xe082: add rbp,rax
0xe085: mov qword ptr [rbx+0x30],r12
0xe089: mov qword ptr [rbx+0x38],r13
0xe08d: mov qword ptr [rbx+0x8],rbp
0xe091: mov qword ptr [rbx+0x40],r14
0xe095: mov qword ptr [rbx+0x48],0x0
0xe09d: jmp 0xe0aa
0xe0a0: mov rdi,rbx
0xe0a3: xor ebx,ebx
0xe0a5: call 0x3880
0xe0aa: add rsp,0x8
0xe0ae: mov rax,rbx
0xe0b1: pop rbx
0xe0b2: pop rbp
0xe0b3: pop r12
0xe0b5: pop r13
0xe0b7: pop r14
0xe0b9: pop r15
0xe0bb: ret
0xe0c0: lea rax,[rip+0xbf59]
0xe0c7: mov qword ptr [rbx+0x28],rax
0xe0cb: call 0xd950
0xe0d0: test al,al
0xe0d2: movss xmm1,dword ptr [rip+0xbf6e]
0xe0da: je 0xe0a0
0xe0dc: test rbp,rbp
0xe0df: js 0xe12b
0xe0e1: pxor xmm0,xmm0
0xe0e5: cvtsi2ss xmm0,rbp
0xe0ea: divss xmm0,xmm1
0xe0ee: ucomiss xmm0,dword ptr [rip+0xbf57]
0xe0f5: jae 0xe0a0
0xe0f7: ucomiss xmm0,dword ptr [rip+0xbf52]
0xe0fe: jb 0xe150
0xe100: subss xmm0,dword ptr [rip+0xbf48]
0xe108: movabs rax,0x8000000000000000
0xe112: cvttss2si rbp,xmm0
0xe117: xor rbp,rax
0xe11a: jmp 0xe028
0xe120: test rbp,rbp
0xe123: movss xmm1,dword ptr [r15+0x8]
0xe129: jns 0xe0e1
0xe12b: mov rax,rbp
0xe12e: pxor xmm0,xmm0
0xe132: shr rax,0x1
0xe135: and ebp,0x1
0xe138: or rax,rbp
0xe13b: cvtsi2ss xmm0,rax
0xe140: addss xmm0,xmm0
0xe144: jmp 0xe0ea
0xe150: cvttss2si rbp,xmm0
0xe155: jmp 0xe028
0xe15a: mov ecx,0x1
0xe15f: jmp 0xe046
0xe170: push r12
0xe172: push rbp
0xe173: mov rbp,rdi
0xe176: push rbx
0xe177: mov r12,qword ptr [rdi]
0xe17a: cmp r12,qword ptr [rdi+0x8]
0xe17e: jae 0xe1eb
0xe180: cmp qword ptr [r12],0x0
0xe185: je 0xe1e1
0xe187: mov rbx,qword ptr [r12+0x8]
0xe18c: mov rax,qword ptr [rbp+0x40]
0xe190: test rbx,rbx
0xe193: je 0xe1c5
0xe195: nop dword ptr [rax]
0xe198: test rax,rax
0xe19b: je 0xe1a6
0xe19d: mov rdi,qword ptr [rbx]
0xe1a0: call rax
0xe1a2: mov rax,qword ptr [rbp+0x40]
0xe1a6: mov rdx,qword ptr [rbx+0x8]
0xe1aa: mov rcx,qword ptr [rbp+0x48]
0xe1ae: mov qword ptr [rbx],0x0
0xe1b5: test rdx,rdx
0xe1b8: mov qword ptr [rbx+0x8],rcx
0xe1bc: mov qword ptr [rbp+0x48],rbx
0xe1c0: mov rbx,rdx
0xe1c3: jne 0xe198
0xe1c5: test rax,rax
0xe1c8: je 0xe1d0
0xe1ca: mov rdi,qword ptr [r12]
0xe1ce: call rax
0xe1d0: mov qword ptr [r12],0x0
0xe1d8: mov qword ptr [r12+0x8],0x0
0xe1e1: add r12,0x10
0xe1e5: cmp qword ptr [rbp+0x8],r12
0xe1e9: ja 0xe180
0xe1eb: mov qword ptr [rbp+0x18],0x0
0xe1f3: mov qword ptr [rbp+0x20],0x0
0xe1fb: pop rbx
0xe1fc: pop rbp
0xe1fd: pop r12
0xe1ff: ret
0xe200: push r12
0xe202: push rbp
0xe203: mov r12,rdi
0xe206: push rbx
0xe207: cmp qword ptr [rdi+0x40],0x0
0xe20c: mov rbp,qword ptr [rdi]
0xe20f: mov rax,qword ptr [rdi+0x8]
0xe213: je 0xe263
0xe215: cmp qword ptr [rdi+0x20],0x0
0xe21a: je 0xe263
0xe21c: cmp rbp,rax
0xe21f: jae 0xe29c
0xe221: nop dword ptr [rax]
0xe228: mov rdi,qword ptr [rbp]
0xe22c: test rdi,rdi
0xe22f: je 0xe256
0xe231: mov rbx,rbp
0xe234: jmp 0xe243
0xe240: mov rdi,qword ptr [rbx]
0xe243: call qword ptr [r12+0x40]
0xe248: mov rbx,qword ptr [rbx+0x8]
0xe24c: test rbx,rbx
0xe24f: jne 0xe240
0xe251: mov rax,qword ptr [r12+0x8]
0xe256: add rbp,0x10
0xe25a: cmp rax,rbp
0xe25d: ja 0xe228
0xe25f: mov rbp,qword ptr [r12]
0xe263: cmp rbp,rax
0xe266: jae 0xe29c
0xe268: nop dword ptr [rax+rax]
0xe270: mov rdi,qword ptr [rbp+0x8]
0xe274: test rdi,rdi
0xe277: je 0xe291
0xe279: nop dword ptr [rax]
0xe280: mov rbx,qword ptr [rdi+0x8]
0xe284: call 0x3880
0xe289: test rbx,rbx
0xe28c: mov rdi,rbx
0xe28f: jne 0xe280
0xe291: add rbp,0x10
0xe295: cmp qword ptr [r12+0x8],rbp
0xe29a: ja 0xe270
0xe29c: mov rdi,qword ptr [r12+0x48]
0xe2a1: test rdi,rdi
0xe2a4: je 0xe2c1
0xe2a6: nop word ptr cs:[rax+rax]
0xe2b0: mov rbx,qword ptr [rdi+0x8]
0xe2b4: call 0x3880
0xe2b9: test rbx,rbx
0xe2bc: mov rdi,rbx
0xe2bf: jne 0xe2b0
0xe2c1: mov rdi,qword ptr [r12]
0xe2c5: call 0x3880
0xe2ca: pop rbx
0xe2cb: mov rdi,r12
0xe2ce: pop rbp
0xe2cf: pop r12
0xe2d1: jmp 0x3880
0xe2e0: push r12
0xe2e2: push rbp
0xe2e3: mov rbp,rdi
0xe2e6: push rbx
0xe2e7: sub rsp,0x60
0xe2eb: mov r12,qword ptr [rdi+0x28]
0xe2ef: mov rax,qword ptr fs:0x28
0xe2f8: mov qword ptr [rsp+0x58],rax
0xe2fd: xor eax,eax
0xe2ff: cmp byte ptr [r12+0x10],0x0
0xe305: jne 0xe358
0xe307: test rsi,rsi
0xe30a: js 0xe488
0xe310: pxor xmm0,xmm0
0xe314: cvtsi2ss xmm0,rsi
0xe319: divss xmm0,dword ptr [r12+0x8]
0xe320: ucomiss xmm0,dword ptr [rip+0xbd25]
0xe327: jae 0xe460
0xe32d: ucomiss xmm0,dword ptr [rip+0xbd1c]
0xe334: jb 0xe4b0
0xe33a: subss xmm0,dword ptr [rip+0xbd0e]
0xe342: movabs rax,0x8000000000000000
0xe34c: cvttss2si rsi,xmm0
0xe351: xor rsi,rax
0xe354: nop dword ptr [rax]
0xe358: mov rdi,rsi
0xe35b: call 0xd740
0xe360: mov edx,0x8
0xe365: mov rbx,rax
0xe368: xor ecx,ecx
0xe36a: mov rax,rdx
0xe36d: mul rbx
0xe370: jo 0xe50f
0xe376: test rax,rax
0xe379: mov eax,0x1
0xe37e: cmovs rcx,rax
0xe382: test rbx,rbx
0xe385: je 0xe460
0xe38b: and ecx,0x1
0xe38e: jne 0xe460
0xe394: cmp qword ptr [rbp+0x10],rbx
0xe398: je 0xe4c0
0xe39e: mov esi,0x10
0xe3a3: mov rdi,rbx
0xe3a6: call 0x3580
0xe3ab: test rax,rax
0xe3ae: mov qword ptr [rsp+0x0],rax
0xe3b2: je 0xe460
0xe3b8: mov qword ptr [rsp+0x10],rbx
0xe3bd: shl rbx,0x4
0xe3c1: mov qword ptr [rsp+0x28],r12
0xe3c6: add rbx,rax
0xe3c9: mov rax,qword ptr [rbp+0x30]
0xe3cd: mov r12,rsp
0xe3d0: xor edx,edx
0xe3d2: mov rsi,rbp
0xe3d5: mov rdi,r12
0xe3d8: mov qword ptr [rsp+0x8],rbx
0xe3dd: mov qword ptr [rsp+0x18],0x0
0xe3e6: mov qword ptr [rsp+0x30],rax
0xe3eb: mov rax,qword ptr [rbp+0x38]
0xe3ef: mov qword ptr [rsp+0x20],0x0
0xe3f8: mov qword ptr [rsp+0x38],rax
0xe3fd: mov rax,qword ptr [rbp+0x40]
0xe401: mov qword ptr [rsp+0x40],rax
0xe406: mov rax,qword ptr [rbp+0x48]
0xe40a: mov qword ptr [rsp+0x48],rax
0xe40f: call 0xd9d0
0xe414: test al,al
0xe416: mov ebx,eax
0xe418: jne 0xe4d0
0xe41e: mov rax,qword ptr [rsp+0x48]
0xe423: mov edx,0x1
0xe428: mov rsi,r12
0xe42b: mov rdi,rbp
0xe42e: mov qword ptr [rbp+0x48],rax
0xe432: call 0xd9d0
0xe437: test al,al
0xe439: je 0xe519
0xe43f: xor edx,edx
0xe441: mov rsi,r12
0xe444: mov rdi,rbp
0xe447: call 0xd9d0
0xe44c: test al,al
0xe44e: je 0xe519
0xe454: mov rdi,qword ptr [rsp+0x0]
0xe458: call 0x3880
0xe45d: jmp 0xe462
0xe460: xor ebx,ebx
0xe462: mov rcx,qword ptr [rsp+0x58]
0xe467: xor rcx,qword ptr fs:0x28
0xe470: mov eax,ebx
0xe472: jne 0xe50a
0xe478: add rsp,0x60
0xe47c: pop rbx
0xe47d: pop rbp
0xe47e: pop r12
0xe480: ret
0xe488: mov rax,rsi
0xe48b: pxor xmm0,xmm0
0xe48f: shr rax,0x1
0xe492: and esi,0x1
0xe495: or rax,rsi
0xe498: cvtsi2ss xmm0,rax
0xe49d: addss xmm0,xmm0
0xe4a1: jmp 0xe319
0xe4b0: cvttss2si rsi,xmm0
0xe4b5: jmp 0xe358
0xe4c0: mov ebx,0x1
0xe4c5: jmp 0xe462
0xe4d0: mov rdi,qword ptr [rbp]
0xe4d4: call 0x3880
0xe4d9: mov rax,qword ptr [rsp+0x0]
0xe4dd: mov qword ptr [rbp],rax
0xe4e1: mov rax,qword ptr [rsp+0x8]
0xe4e6: mov qword ptr [rbp+0x8],rax
0xe4ea: mov rax,qword ptr [rsp+0x10]
0xe4ef: mov qword ptr [rbp+0x10],rax
0xe4f3: mov rax,qword ptr [rsp+0x18]
0xe4f8: mov qword ptr [rbp+0x18],rax
0xe4fc: mov rax,qword ptr [rsp+0x48]
0xe501: mov qword ptr [rbp+0x48],rax
0xe505: jmp 0xe462
0xe50a: call 0x3420
0xe50f: mov ecx,0x1
0xe514: jmp 0xe376
0xe519: call 0x3290
0xe520: push r13
0xe522: push r12
0xe524: push rbp
0xe525: push rbx
0xe526: sub rsp,0x18
0xe52a: mov rax,qword ptr fs:0x28
0xe533: mov qword ptr [rsp+0x8],rax
0xe538: xor eax,eax
0xe53a: test rsi,rsi
0xe53d: je 0xe6fd
0xe543: mov r12,rsp
0xe546: xor ecx,ecx
0xe548: mov r13,rdx
0xe54b: mov rdx,r12
0xe54e: mov rbx,rdi
0xe551: mov rbp,rsi
0xe554: call 0xd830
0xe559: test rax,rax
0xe55c: mov rdx,rax
0xe55f: je 0xe590
0xe561: xor eax,eax
0xe563: test r13,r13
0xe566: je 0xe56c
0xe568: mov qword ptr [r13],rdx
0xe56c: mov rcx,qword ptr [rsp+0x8]
0xe571: xor rcx,qword ptr fs:0x28
0xe57a: jne 0xe79f
0xe580: add rsp,0x18
0xe584: pop rbx
0xe585: pop rbp
0xe586: pop r12
0xe588: pop r13
0xe58a: ret
0xe590: mov rax,qword ptr [rbx+0x18]
0xe594: test rax,rax
0xe597: js 0xe610
0xe599: pxor xmm1,xmm1
0xe59d: mov rdx,qword ptr [rbx+0x28]
0xe5a1: cvtsi2ss xmm1,rax
0xe5a6: mov rax,qword ptr [rbx+0x10]
0xe5aa: test rax,rax
0xe5ad: js 0xe63a
0xe5b3: pxor xmm0,xmm0
0xe5b7: cvtsi2ss xmm0,rax
0xe5bc: mulss xmm0,dword ptr [rdx+0x8]
0xe5c1: ucomiss xmm1,xmm0
0xe5c4: ja 0xe660
0xe5ca: mov r12,qword ptr [rsp+0x0]
0xe5ce: cmp qword ptr [r12],0x0
0xe5d3: je 0xe708
0xe5d9: mov rax,qword ptr [rbx+0x48]
0xe5dd: test rax,rax
0xe5e0: je 0xe720
0xe5e6: mov rdx,qword ptr [rax+0x8]
0xe5ea: mov qword ptr [rbx+0x48],rdx
0xe5ee: mov rdx,qword ptr [r12+0x8]
0xe5f3: mov qword ptr [rax],rbp
0xe5f6: mov qword ptr [rax+0x8],rdx
0xe5fa: mov qword ptr [r12+0x8],rax
0xe5ff: mov eax,0x1
0xe604: add qword ptr [rbx+0x20],0x1
0xe609: jmp 0xe56c
0xe610: mov rdx,rax
0xe613: pxor xmm1,xmm1
0xe617: and eax,0x1
0xe61a: shr rdx,0x1
0xe61d: or rdx,rax
0xe620: mov rax,qword ptr [rbx+0x10]
0xe624: cvtsi2ss xmm1,rdx
0xe629: mov rdx,qword ptr [rbx+0x28]
0xe62d: test rax,rax
0xe630: addss xmm1,xmm1
0xe634: jns 0xe5b3
0xe63a: mov rcx,rax
0xe63d: pxor xmm0,xmm0
0xe641: shr rcx,0x1
0xe644: and eax,0x1
0xe647: or rcx,rax
0xe64a: cvtsi2ss xmm0,rcx
0xe64f: addss xmm0,xmm0
0xe653: jmp 0xe5bc
0xe660: lea rdi,[rbx+0x28]
0xe664: call 0xd950
0xe669: mov rax,qword ptr [rbx+0x10]
0xe66d: mov rdx,qword ptr [rbx+0x28]
0xe671: test rax,rax
0xe674: movss xmm2,dword ptr [rdx+0x8]
0xe679: js 0xe740
0xe67f: pxor xmm0,xmm0
0xe683: cvtsi2ss xmm0,rax
0xe688: mov rax,qword ptr [rbx+0x18]
0xe68c: test rax,rax
0xe68f: js 0xe760
0xe695: pxor xmm1,xmm1
0xe699: cvtsi2ss xmm1,rax
0xe69e: movaps xmm3,xmm2
0xe6a1: mulss xmm3,xmm0
0xe6a5: ucomiss xmm1,xmm3
0xe6a8: jbe 0xe5ca
0xe6ae: cmp byte ptr [rdx+0x10],0x0
0xe6b2: mulss xmm0,dword ptr [rdx+0xc]
0xe6b7: jne 0xe6bd
0xe6b9: mulss xmm0,xmm2
0xe6bd: ucomiss xmm0,dword ptr [rip+0xb988]
0xe6c4: jae 0xe733
0xe6c6: ucomiss xmm0,dword ptr [rip+0xb983]
0xe6cd: jae 0xe780
0xe6d3: cvttss2si rsi,xmm0
0xe6d8: mov rdi,rbx
0xe6db: call 0xe2e0
0xe6e0: test al,al
0xe6e2: je 0xe733
0xe6e4: xor ecx,ecx
0xe6e6: mov rdx,r12
0xe6e9: mov rsi,rbp
0xe6ec: mov rdi,rbx
0xe6ef: call 0xd830
0xe6f4: test rax,rax
0xe6f7: je 0xe5ca
0xe6fd: call 0x3290
0xe708: mov qword ptr [r12],rbp
0xe70c: mov eax,0x1
0xe711: add qword ptr [rbx+0x20],0x1
0xe716: add qword ptr [rbx+0x18],0x1
0xe71b: jmp 0xe56c
0xe720: mov edi,0x10
0xe725: call 0x3888
0xe72a: test rax,rax
0xe72d: jne 0xe5ee
0xe733: mov eax,0xffffffff
0xe738: jmp 0xe56c
0xe740: mov rcx,rax
0xe743: pxor xmm0,xmm0
0xe747: shr rcx,0x1
0xe74a: and eax,0x1
0xe74d: or rcx,rax
0xe750: cvtsi2ss xmm0,rcx
0xe755: addss xmm0,xmm0
0xe759: jmp 0xe688
0xe760: mov rcx,rax
0xe763: pxor xmm1,xmm1
0xe767: shr rcx,0x1
0xe76a: and eax,0x1
0xe76d: or rcx,rax
0xe770: cvtsi2ss xmm1,rcx
0xe775: addss xmm1,xmm1
0xe779: jmp 0xe69e
0xe780: subss xmm0,dword ptr [rip+0xb8c8]
0xe788: movabs rax,0x8000000000000000
0xe792: cvttss2si rsi,xmm0
0xe797: xor rsi,rax
0xe79a: jmp 0xe6d8
0xe79f: call 0x3420
0xe7b0: push rbx
0xe7b1: mov rbx,rsi
0xe7b4: sub rsp,0x10
0xe7b8: mov rdx,rsp
0xe7bb: mov rax,qword ptr fs:0x28
0xe7c4: mov qword ptr [rsp+0x8],rax
0xe7c9: xor eax,eax
0xe7cb: call 0xe520
0xe7d0: cmp eax,0xffffffff
0xe7d3: je 0xe800
0xe7d5: test eax,eax
0xe7d7: jne 0xe7dd
0xe7d9: mov rbx,qword ptr [rsp+0x0]
0xe7dd: mov rcx,qword ptr [rsp+0x8]
0xe7e2: xor rcx,qword ptr fs:0x28
0xe7eb: mov rax,rbx
0xe7ee: jne 0xe804
0xe7f0: add rsp,0x10
0xe7f4: pop rbx
0xe7f5: ret
0xe800: xor ebx,ebx
0xe802: jmp 0xe7dd
0xe804: call 0x3420
0xe810: push r12
0xe812: push rbp
0xe813: mov ecx,0x1
0xe818: push rbx
0xe819: mov rbx,rdi
0xe81c: sub rsp,0x10
0xe820: mov rdx,rsp
0xe823: mov rax,qword ptr fs:0x28
0xe82c: mov qword ptr [rsp+0x8],rax
0xe831: xor eax,eax
0xe833: call 0xd830
0xe838: test rax,rax
0xe83b: mov rbp,rax
0xe83e: je 0xe84f
0xe840: mov rax,qword ptr [rsp+0x0]
0xe844: sub qword ptr [rbx+0x20],0x1
0xe849: cmp qword ptr [rax],0x0
0xe84d: je 0xe870
0xe84f: mov rcx,qword ptr [rsp+0x8]
0xe854: xor rcx,qword ptr fs:0x28
0xe85d: mov rax,rbp
0xe860: jne 0xea0e
0xe866: add rsp,0x10
0xe86a: pop rbx
0xe86b: pop rbp
0xe86c: pop r12
0xe86e: ret
0xe870: mov rax,qword ptr [rbx+0x18]
0xe874: sub rax,0x1
0xe878: test rax,rax
0xe87b: mov qword ptr [rbx+0x18],rax
0xe87f: js 0xe980
0xe885: pxor xmm0,xmm0
0xe889: cvtsi2ss xmm0,rax
0xe88e: mov rax,qword ptr [rbx+0x10]
0xe892: mov rdx,qword ptr [rbx+0x28]
0xe896: test rax,rax
0xe899: js 0xe960
0xe89f: pxor xmm1,xmm1
0xe8a3: cvtsi2ss xmm1,rax
0xe8a8: mulss xmm1,dword ptr [rdx]
0xe8ac: ucomiss xmm1,xmm0
0xe8af: jbe 0xe84f
0xe8b1: lea rdi,[rbx+0x28]
0xe8b5: call 0xd950
0xe8ba: mov rax,qword ptr [rbx+0x10]
0xe8be: mov rdx,qword ptr [rbx+0x28]
0xe8c2: test rax,rax
0xe8c5: js 0xe9f0
0xe8cb: pxor xmm0,xmm0
0xe8cf: cvtsi2ss xmm0,rax
0xe8d4: mov rax,qword ptr [rbx+0x18]
0xe8d8: test rax,rax
0xe8db: js 0xe9d0
0xe8e1: pxor xmm1,xmm1
0xe8e5: cvtsi2ss xmm1,rax
0xe8ea: movss xmm2,dword ptr [rdx]
0xe8ee: mulss xmm2,xmm0
0xe8f2: ucomiss xmm2,xmm1
0xe8f5: jbe 0xe84f
0xe8fb: cmp byte ptr [rdx+0x10],0x0
0xe8ff: mulss xmm0,dword ptr [rdx+0x4]
0xe904: je 0xe9c0
0xe90a: ucomiss xmm0,dword ptr [rip+0xb73f]
0xe911: jae 0xe9a0
0xe917: cvttss2si rsi,xmm0
0xe91c: mov rdi,rbx
0xe91f: call 0xe2e0
0xe924: test al,al
0xe926: jne 0xe84f
0xe92c: mov rdi,qword ptr [rbx+0x48]
0xe930: test rdi,rdi
0xe933: je 0xe949
0xe935: nop dword ptr [rax]
0xe938: mov r12,qword ptr [rdi+0x8]
0xe93c: call 0x3880
0xe941: test r12,r12
0xe944: mov rdi,r12
0xe947: jne 0xe938
0xe949: mov qword ptr [rbx+0x48],0x0
0xe951: jmp 0xe84f
0xe960: mov rcx,rax
0xe963: pxor xmm1,xmm1
0xe967: shr rcx,0x1
0xe96a: and eax,0x1
0xe96d: or rcx,rax
0xe970: cvtsi2ss xmm1,rcx
0xe975: addss xmm1,xmm1
0xe979: jmp 0xe8a8
0xe980: mov rdx,rax
0xe983: pxor xmm0,xmm0
0xe987: shr rdx,0x1
0xe98a: and eax,0x1
0xe98d: or rdx,rax
0xe990: cvtsi2ss xmm0,rdx
0xe995: addss xmm0,xmm0
0xe999: jmp 0xe88e
0xe9a0: subss xmm0,dword ptr [rip+0xb6a8]
0xe9a8: movabs rax,0x8000000000000000
0xe9b2: cvttss2si rsi,xmm0
0xe9b7: xor rsi,rax
0xe9ba: jmp 0xe91c
0xe9c0: mulss xmm0,dword ptr [rdx+0x8]
0xe9c5: jmp 0xe90a
0xe9d0: mov rcx,rax
0xe9d3: pxor xmm1,xmm1
0xe9d7: shr rcx,0x1
0xe9da: and eax,0x1
0xe9dd: or rcx,rax
0xe9e0: cvtsi2ss xmm1,rcx
0xe9e5: addss xmm1,xmm1
0xe9e9: jmp 0xe8ea
0xe9f0: mov rcx,rax
0xe9f3: pxor xmm0,xmm0
0xe9f7: shr rcx,0x1
0xe9fa: and eax,0x1
0xe9fd: or rcx,rax
0xea00: cvtsi2ss xmm0,rcx
0xea05: addss xmm0,xmm0
0xea09: jmp 0xe8d4
0xea0e: call 0x3420
0xea20: push rbp
0xea21: push rbx
0xea22: mov rbp,rdi
0xea25: mov rbx,rsi
0xea28: sub rsp,0x8
0xea2c: mov rdi,qword ptr [rdi]
0xea2f: call 0x15d20
0xea34: xor rax,qword ptr [rbp+0x8]
0xea38: xor edx,edx
0xea3a: add rsp,0x8
0xea3e: div rbx
0xea41: pop rbx
0xea42: pop rbp
0xea43: mov rax,rdx
0xea46: ret
0xea50: mov rax,qword ptr [rdi+0x8]
0xea54: xor edx,edx
0xea56: div rsi
0xea59: mov rax,rdx
0xea5c: ret
0xea60: xor eax,eax
0xea62: mov rdx,qword ptr [rsi+0x8]
0xea66: cmp qword ptr [rdi+0x8],rdx
0xea6a: je 0xea70
0xea6c: ret
0xea70: mov rcx,qword ptr [rsi+0x10]
0xea74: cmp qword ptr [rdi+0x10],rcx
0xea78: jne 0xea6c
0xea7a: sub rsp,0x8
0xea7e: mov rsi,qword ptr [rsi]
0xea81: mov rdi,qword ptr [rdi]
0xea84: call 0x13f50
0xea89: add rsp,0x8
0xea8d: ret
0xea90: xor eax,eax
0xea92: mov rdx,qword ptr [rsi+0x8]
0xea96: cmp qword ptr [rdi+0x8],rdx
0xea9a: je 0xeaa0
0xea9c: ret
0xeaa0: mov rcx,qword ptr [rsi+0x10]
0xeaa4: cmp qword ptr [rdi+0x10],rcx
0xeaa8: jne 0xea9c
0xeaaa: sub rsp,0x8
0xeaae: mov rsi,qword ptr [rsi]
0xeab1: mov rdi,qword ptr [rdi]
0xeab4: call 0x3590
0xeab9: test eax,eax
0xeabb: sete al
0xeabe: add rsp,0x8
0xeac2: ret
0xead0: push rbx
0xead1: mov rbx,rdi
0xead4: mov rdi,qword ptr [rdi]
0xead7: call 0x3880
0xeadc: mov rdi,rbx
0xeadf: pop rbx
0xeae0: jmp 0x3880
0xeaf0: fld dword ptr [rip+0xb55a]
0xeaf6: fld tbyte ptr [rsp+0x8]
0xeafa: fucomi st(1)
0xeafc: jae 0xeb70
0xeafe: fstp st(1)
0xeb00: fnstcw word ptr [rsp-0xa]
0xeb04: movzx eax,word ptr [rsp-0xa]
0xeb09: or ah,0xc
0xeb0c: mov word ptr [rsp-0xc],ax
0xeb11: fld st(0)
0xeb13: fldcw word ptr [rsp-0xc]
0xeb17: fistp qword ptr [rsp-0x18]
0xeb1b: fldcw word ptr [rsp-0xa]
0xeb1f: mov rax,qword ptr [rsp-0x18]
0xeb24: mov qword ptr [rsp-0x20],rax
0xeb29: test rax,rax
0xeb2c: fild qword ptr [rsp-0x20]
0xeb30: jns 0xeb38
0xeb32: fadd dword ptr [rip+0xb514]
0xeb38: test edi,edi
0xeb3a: jne 0xeb68
0xeb3c: fxch st(1)
0xeb3e: fucomip st(1)
0xeb40: jp 0xeb48
0xeb42: je 0xeb6a
0xeb44: fstp st(0)
0xeb46: jmp 0xeb50
0xeb48: fstp st(0)
0xeb4a: nop word ptr [rax+rax]
0xeb50: add rax,0x1
0xeb54: mov qword ptr [rsp-0x20],rax
0xeb59: test rax,rax
0xeb5c: fild qword ptr [rsp-0x20]
0xeb60: js 0xebb0
0xeb62: jmp 0xeb6a
0xeb68: fstp st(1)
0xeb6a: ret
0xeb70: fnstcw word ptr [rsp-0xa]
0xeb74: movzx eax,word ptr [rsp-0xa]
0xeb79: fsubr st(1),st(0)
0xeb7b: fxch st(1)
0xeb7d: movabs rdx,0x8000000000000000
0xeb87: or ah,0xc
0xeb8a: mov word ptr [rsp-0xc],ax
0xeb8f: fldcw word ptr [rsp-0xc]
0xeb93: fistp qword ptr [rsp-0x18]
0xeb97: fldcw word ptr [rsp-0xa]
0xeb9b: mov rax,qword ptr [rsp-0x18]
0xeba0: xor rax,rdx
0xeba3: jmp 0xeb24
0xebb0: fadd dword ptr [rip+0xb496]
0xebb6: ret
0xebc0: push r15
0xebc2: push r14
0xebc4: mov eax,edx
0xebc6: push r13
0xebc8: push r12
0xebca: mov r15d,edx
0xebcd: push rbp
0xebce: push rbx
0xebcf: and eax,0x20
0xebd2: and r15d,0x3
0xebd6: mov r12d,edx
0xebd9: mov rbx,rdi
0xebdc: sub rsp,0x98
0xebe3: mov qword ptr [rsp+0x18],rcx
0xebe8: mov dword ptr [rsp+0x30],eax
0xebec: mov rcx,qword ptr fs:0x28
0xebf5: mov qword ptr [rsp+0x88],rcx
0xebfd: xor ecx,ecx
0xebff: cmp eax,0x1
0xec02: mov qword ptr [rsp+0x0],rsi
0xec06: mov qword ptr [rsp+0x10],r8
0xec0b: sbb eax,eax
0xec0d: and eax,0xffffffe8
0xec10: add eax,0x400
0xec15: mov dword ptr [rsp+0x34],eax
0xec19: call 0x3340
0xec1e: mov r14,qword ptr [rax]
0xec21: mov r13,rax
0xec24: mov rdi,r14
0xec27: call 0x3400
0xec2c: mov rcx,qword ptr [r13+0x10]
0xec30: mov r13,qword ptr [r13+0x8]
0xec34: mov rbp,rax
0xec37: sub rax,0x1
0xec3b: mov edx,0x1
0xec40: cmp rax,0x10
0xec44: lea rax,[rip+0xb351]
0xec4b: mov rdi,r13
0xec4e: cmovae rbp,rdx
0xec52: mov qword ptr [rsp+0x38],rcx
0xec57: cmovae r14,rax
0xec5b: call 0x3400
0xec60: cmp rax,0x11
0xec64: lea rax,[rip+0x8c48]
0xec6b: mov rdi,qword ptr [rsp+0x10]
0xec70: mov rcx,qword ptr [rsp+0x18]
0xec75: cmovae r13,rax
0xec79: mov rax,qword ptr [rsp+0x0]
0xec7d: add rax,0x287
0xec83: cmp rdi,rcx
0xec86: mov qword ptr [rsp+0x8],rax
0xec8b: ja 0xedd8
0xec91: xor edx,edx
0xec93: mov rax,rcx
0xec96: div rdi
0xec99: test rdx,rdx
0xec9c: mov rdi,rax
0xec9f: je 0xf000
0xeca5: mov qword ptr [rsp+0x18],rcx
0xecaa: test rcx,rcx
0xecad: fild qword ptr [rsp+0x18]
0xecb1: jns 0xecb9
0xecb3: fadd dword ptr [rip+0xb393]
0xecb9: mov rax,qword ptr [rsp+0x10]
0xecbe: mov qword ptr [rsp+0x18],rax
0xecc3: test rax,rax
0xecc6: fild qword ptr [rsp+0x18]
0xecca: jns 0xecd2
0xeccc: fadd dword ptr [rip+0xb37a]
0xecd2: fdivp st(1)
0xecd4: mov qword ptr [rsp+0x18],rbx
0xecd9: test rbx,rbx
0xecdc: fild qword ptr [rsp+0x18]
0xece0: jns 0xece8
0xece2: fadd dword ptr [rip+0xb364]
0xece8: test r12b,0x10
0xecec: fmulp st(1)
0xecee: je 0xeeb8
0xecf4: fild dword ptr [rsp+0x34]
0xecf8: xor ebx,ebx
0xecfa: fld st(0)
0xecfc: jmp 0xed04
0xed00: fstp st(1)
0xed02: fxch st(2)
0xed04: fld st(0)
0xed06: add ebx,0x1
0xed09: fmul st(2)
0xed0b: fxch st(3)
0xed0d: fucomi st(3)
0xed0f: jb 0xed20
0xed11: cmp ebx,0x8
0xed14: jne 0xed00
0xed16: fstp st(2)
0xed18: fstp st(2)
0xed1a: jmp 0xed24
0xed20: fstp st(2)
0xed22: fstp st(2)
0xed24: mov ecx,dword ptr [rsp+0x30]
0xed28: add rbp,0x1
0xed2c: xor eax,eax
0xed2e: fdivrp st(1)
0xed30: test ecx,ecx
0xed32: sete al
0xed35: cmp r15d,0x1
0xed39: lea rax,[rbp+rax+0x1]
0xed3e: mov qword ptr [rsp+0x18],rax
0xed43: je 0xf2b0
0xed49: fld tbyte ptr [rip+0xb361]
0xed4f: fucomip st(1)
0xed51: ja 0xf128
0xed57: fld st(0)
0xed59: fstp tbyte ptr [rsp+0x20]
0xed5d: sub rsp,0x10
0xed61: lea rcx,[rip+0xb2fe]
0xed68: mov esi,0x1
0xed6d: mov rdx,0xffffffffffffffff
0xed74: xor eax,eax
0xed76: mov r14,qword ptr [rsp+0x10]
0xed7b: mov rdi,r14
0xed7e: fstp tbyte ptr [rsp+0x0]
0xed81: call 0x3870
0xed86: mov rdi,r14
0xed89: call 0x3400
0xed8e: pop rcx
0xed8f: pop rsi
0xed90: cmp rax,qword ptr [rsp+0x18]
0xed95: mov r14,rax
0xed98: fld tbyte ptr [rsp+0x20]
0xed9c: ja 0xf348
0xeda2: test r12b,0x8
0xeda6: je 0xef10
0xedac: mov rax,qword ptr [rsp+0x0]
0xedb0: cmp byte ptr [rax+r14-0x1],0x30
0xedb6: jne 0xef18
0xedbc: fld dword ptr [rip+0xb2ea]
0xedc2: cmp r15d,0x1
0xedc6: fmul st(1),st(0)
0xedc8: jne 0xf350
0xedce: jmp 0xf303
0xedd8: test rcx,rcx
0xeddb: je 0xeca5
0xede1: mov rax,qword ptr [rsp+0x10]
0xede6: xor edx,edx
0xede8: div rcx
0xedeb: test rdx,rdx
0xedee: mov r8,rax
0xedf1: jne 0xeca5
0xedf7: mov rax,rbx
0xedfa: xor edx,edx
0xedfc: div r8
0xedff: mov rbx,rax
0xee02: lea rax,[rdx+rdx*4]
0xee06: xor edx,edx
0xee08: mov rsi,rbx
0xee0b: add rax,rax
0xee0e: div r8
0xee11: add rdx,rdx
0xee14: mov r9d,eax
0xee17: cmp r8,rdx
0xee1a: jbe 0xf3a8
0xee20: xor edi,edi
0xee22: test rdx,rdx
0xee25: setne dil
0xee29: mov ecx,r12d
0xee2c: mov r8,qword ptr [rsp+0x8]
0xee31: mov ebx,0xffffffff
0xee36: and ecx,0x10
0xee39: je 0xf200
0xee3f: mov r8d,dword ptr [rsp+0x34]
0xee44: cmp r8,rsi
0xee47: mov r11,r8
0xee4a: ja 0xf3c0
0xee50: xor ebx,ebx
0xee52: jmp 0xee77
0xee58: test edi,edi
0xee5a: setne dil
0xee5e: movzx edi,dil
0xee62: add ebx,0x1
0xee65: cmp r8,r10
0xee68: ja 0xf17d
0xee6e: cmp ebx,0x8
0xee71: je 0xf418
0xee77: mov rax,rsi
0xee7a: xor edx,edx
0xee7c: mov esi,edi
0xee7e: div r8
0xee81: sar esi,0x1
0xee83: mov r10,rax
0xee86: lea eax,[rdx+rdx*4]
0xee89: xor edx,edx
0xee8b: lea eax,[r9+rax*2]
0xee8f: div r11d
0xee92: lea edx,[rsi+rdx*2]
0xee95: mov r9d,eax
0xee98: mov rsi,r10
0xee9b: add edi,edx
0xee9d: cmp r11d,edx
0xeea0: ja 0xee58
0xeea2: cmp r11d,edi
0xeea5: setb dil
0xeea9: movzx edi,dil
0xeead: add edi,0x2
0xeeb0: jmp 0xee62
0xeeb8: cmp r15d,0x1
0xeebc: je 0xeecc
0xeebe: fld tbyte ptr [rip+0xb1ec]
0xeec4: fucomip st(1)
0xeec6: ja 0xf150
0xeecc: sub rsp,0x10
0xeed0: lea rcx,[rip+0xb189]
0xeed7: mov esi,0x1
0xeedc: mov rbx,qword ptr [rsp+0x10]
0xeee1: mov rdx,0xffffffffffffffff
0xeee8: xor eax,eax
0xeeea: fstp tbyte ptr [rsp+0x0]
0xeeed: xor ebp,ebp
0xeeef: mov rdi,rbx
0xeef2: call 0x3870
0xeef7: mov rdi,rbx
0xeefa: mov ebx,0xffffffff
0xeeff: call 0x3400
0xef04: pop rsi
0xef05: pop rdi
0xef06: mov r14,rax
0xef09: jmp 0xef20
0xef10: fstp st(0)
0xef12: jmp 0xef20
0xef18: fstp st(0)
0xef1a: nop word ptr [rax+rax]
0xef20: mov r15,qword ptr [rsp+0x8]
0xef25: mov rsi,qword ptr [rsp+0x0]
0xef29: mov rdx,r14
0xef2c: sub r15,r14
0xef2f: sub r14,rbp
0xef32: mov rdi,r15
0xef35: call 0x3750
0xef3a: mov r8,r14
0xef3d: add r8,r15
0xef40: test r12b,0x4
0xef44: jne 0xf028
0xef4a: test r12b,0x80
0xef4e: je 0xefc7
0xef50: cmp ebx,0xffffffff
0xef53: je 0xf270
0xef59: mov eax,r12d
0xef5c: and eax,0x100
0xef61: mov ecx,eax
0xef63: or ecx,ebx
0xef65: je 0xefc7
0xef67: and r12d,0x40
0xef6b: jne 0xf108
0xef71: test ebx,ebx
0xef73: je 0xf5a6
0xef79: cmp ebx,0x1
0xef7c: jne 0xef8c
0xef7e: mov r9d,dword ptr [rsp+0x30]
0xef83: test r9d,r9d
0xef86: je 0xf3d0
0xef8c: lea rcx,[rip+0xb10d]
0xef93: movsxd rbx,ebx
0xef96: mov rdi,qword ptr [rsp+0x8]
0xef9b: test eax,eax
0xef9d: movzx ecx,byte ptr [rcx+rbx]
0xefa1: lea rdx,[rdi+0x1]
0xefa5: mov byte ptr [rdi],cl
0xefa7: je 0xf3e4
0xefad: mov r8d,dword ptr [rsp+0x30]
0xefb2: test r8d,r8d
0xefb5: jne 0xf170
0xefbb: lea rax,[rdx+0x1]
0xefbf: mov byte ptr [rdx],0x42
0xefc2: mov qword ptr [rsp+0x8],rax
0xefc7: mov rax,qword ptr [rsp+0x8]
0xefcc: mov rcx,qword ptr [rsp+0x88]
0xefd4: xor rcx,qword ptr fs:0x28
0xefdd: mov byte ptr [rax],0x0
0xefe0: mov rax,r15
0xefe3: jne 0xf57b
0xefe9: add rsp,0x98
0xeff0: pop rbx
0xeff1: pop rbp
0xeff2: pop r12
0xeff4: pop r13
0xeff6: pop r14
0xeff8: pop r15
0xeffa: ret
0xf000: mov rsi,rbx
0xf003: xor edx,edx
0xf005: imul rsi,rax
0xf009: mov rax,rsi
0xf00c: div rdi
0xf00f: cmp rax,rbx
0xf012: jne 0xeca5
0xf018: xor edi,edi
0xf01a: xor r9d,r9d
0xf01d: jmp 0xee29
0xf028: mov r14,r8
0xf02b: mov rdi,r13
0xf02e: mov qword ptr [rsp+0x48],r8
0xf033: sub r14,r15
0xf036: mov rbp,0xffffffffffffffff
0xf03d: call 0x3400
0xf042: lea rdi,[rsp+0x50]
0xf047: mov ecx,0x29
0xf04c: mov rdx,r14
0xf04f: mov rsi,r15
0xf052: mov qword ptr [rsp+0x40],rax
0xf057: mov qword ptr [rsp+0x18],rdi
0xf05c: call 0x35d0
0xf061: mov ecx,r12d
0xf064: mov dword ptr [rsp+0x20],ebx
0xf068: mov r12,r14
0xf06b: mov rbx,r13
0xf06e: mov r8,qword ptr [rsp+0x48]
0xf073: mov r15,qword ptr [rsp+0x38]
0xf078: mov r13,qword ptr [rsp+0x40]
0xf07d: mov r14d,ecx
0xf080: jmp 0xf0c2
0xf088: mov rax,qword ptr [rsp+0x18]
0xf08d: sub r12,rbp
0xf090: sub r8,rbp
0xf093: mov rdi,r8
0xf096: mov rdx,rbp
0xf099: lea rsi,[rax+r12]
0xf09d: call 0x35f0
0xf0a2: test r12,r12
0xf0a5: mov r8,rax
0xf0a8: je 0xf5b8
0xf0ae: sub r8,r13
0xf0b1: mov rdx,r13
0xf0b4: mov rsi,rbx
0xf0b7: mov rdi,r8
0xf0ba: call 0x35f0
0xf0bf: mov r8,rax
0xf0c2: movzx eax,byte ptr [r15]
0xf0c6: test al,al
0xf0c8: je 0xf0d7
0xf0ca: cmp al,0x7f
0xf0cc: movzx ebp,al
0xf0cf: cmovae rbp,r12
0xf0d3: add r15,0x1
0xf0d7: cmp rbp,r12
0xf0da: jbe 0xf088
0xf0dc: mov eax,r14d
0xf0df: mov r15,r8
0xf0e2: mov r14,r12
0xf0e5: mov rsi,qword ptr [rsp+0x18]
0xf0ea: sub r15,r14
0xf0ed: mov rdx,r14
0xf0f0: mov rdi,r15
0xf0f3: mov ebx,dword ptr [rsp+0x20]
0xf0f7: mov r12d,eax
0xf0fa: call 0x35f0
0xf0ff: jmp 0xef4a
0xf108: mov rcx,qword ptr [rsp+0x0]
0xf10c: lea rdi,[rcx+0x288]
0xf113: mov byte ptr [rcx+0x287],0x20
0xf11a: mov qword ptr [rsp+0x8],rdi
0xf11f: jmp 0xef71
0xf128: sub rsp,0x10
0xf12c: mov edi,r15d
0xf12f: fld st(0)
0xf131: fstp tbyte ptr [rsp+0x0]
0xf134: fstp tbyte ptr [rsp+0x30]
0xf138: call 0xeaf0
0xf13d: pop rax
0xf13e: pop rdx
0xf13f: fld tbyte ptr [rsp+0x20]
0xf143: jmp 0xed59
0xf150: sub rsp,0x10
0xf154: mov edi,r15d
0xf157: fstp tbyte ptr [rsp+0x0]
0xf15a: call 0xeaf0
0xf15f: pop r8
0xf161: pop r9
0xf163: jmp 0xeecc
0xf170: lea rdx,[rdi+0x2]
0xf174: mov byte ptr [rdi+0x1],0x69
0xf178: jmp 0xefbb
0xf17d: cmp r10,0x9
0xf181: ja 0xf418
0xf187: cmp r15d,0x1
0xf18b: je 0xf442
0xf191: test r15d,r15d
0xf194: sete dl
0xf197: test edi,edi
0xf199: setg r8b
0xf19d: and edx,r8d
0xf1a0: test dl,dl
0xf1a2: je 0xf429
0xf1a8: lea r9d,[rax+0x1]
0xf1ac: cmp r9d,0xa
0xf1b0: je 0xf4b1
0xf1b6: add r9d,0x30
0xf1ba: mov rax,qword ptr [rsp+0x0]
0xf1be: lea r8,[rax+0x286]
0xf1c5: mov byte ptr [rax+0x286],r9b
0xf1cc: mov eax,ebp
0xf1ce: sub r8,rbp
0xf1d1: cmp ebp,0x8
0xf1d4: jae 0xf461
0xf1da: test bpl,0x4
0xf1de: jne 0xf566
0xf1e4: test eax,eax
0xf1e6: je 0xf1f7
0xf1e8: movzx edx,byte ptr [r14]
0xf1ec: test al,0x2
0xf1ee: mov byte ptr [r8],dl
0xf1f1: jne 0xf580
0xf1f7: xor edi,edi
0xf1f9: xor r9d,r9d
0xf1fc: nop dword ptr [rax]
0xf200: cmp r15d,0x1
0xf204: je 0xf380
0xf20a: test r15d,r15d
0xf20d: jne 0xf230
0xf20f: add edi,r9d
0xf212: test edi,edi
0xf214: jle 0xf230
0xf216: add rsi,0x1
0xf21a: test ecx,ecx
0xf21c: je 0xf230
0xf21e: mov eax,dword ptr [rsp+0x34]
0xf222: cmp rax,rsi
0xf225: je 0xf3f0
0xf22b: nop dword ptr [rax+rax]
0xf230: mov r15,r8
0xf233: movabs rcx,0xcccccccccccccccd
0xf23d: nop dword ptr [rax]
0xf240: mov rax,rsi
0xf243: sub r15,0x1
0xf247: mul rcx
0xf24a: shr rdx,0x3
0xf24e: lea rax,[rdx+rdx*4]
0xf252: add rax,rax
0xf255: sub rsi,rax
0xf258: add esi,0x30
0xf25b: test rdx,rdx
0xf25e: mov byte ptr [r15],sil
0xf261: mov rsi,rdx
0xf264: jne 0xf240
0xf266: jmp 0xef40
0xf270: mov rcx,qword ptr [rsp+0x10]
0xf275: cmp rcx,0x1
0xf279: jbe 0xf422
0xf27f: mov edx,dword ptr [rsp+0x34]
0xf283: mov ebx,0x1
0xf288: mov eax,0x1
0xf28d: imul rax,rdx
0xf291: cmp rcx,rax
0xf294: jbe 0xef59
0xf29a: add ebx,0x1
0xf29d: cmp ebx,0x8
0xf2a0: jne 0xf28d
0xf2a2: jmp 0xef59
0xf2b0: sub rsp,0x10
0xf2b4: lea rcx,[rip+0xadab]
0xf2bb: mov rdx,0xffffffffffffffff
0xf2c2: fld st(0)
0xf2c4: fstp tbyte ptr [rsp+0x0]
0xf2c7: mov r14,qword ptr [rsp+0x10]
0xf2cc: mov esi,0x1
0xf2d1: xor eax,eax
0xf2d3: mov rdi,r14
0xf2d6: fstp tbyte ptr [rsp+0x30]
0xf2da: call 0x3870
0xf2df: mov rdi,r14
0xf2e2: call 0x3400
0xf2e7: mov r14,rax
0xf2ea: pop rax
0xf2eb: pop rdx
0xf2ec: cmp r14,qword ptr [rsp+0x18]
0xf2f1: fld tbyte ptr [rsp+0x20]
0xf2f5: jbe 0xeda2
0xf2fb: fld dword ptr [rip+0xadab]
0xf301: fmul st(1),st(0)
0xf303: fdivp st(1)
0xf305: sub rsp,0x10
0xf309: lea rcx,[rip+0xad50]
0xf310: mov r14,qword ptr [rsp+0x10]
0xf315: mov rdx,0xffffffffffffffff
0xf31c: mov esi,0x1
0xf321: xor eax,eax
0xf323: xor ebp,ebp
0xf325: mov rdi,r14
0xf328: fstp tbyte ptr [rsp+0x0]
0xf32b: call 0x3870
0xf330: mov rdi,r14
0xf333: call 0x3400
0xf338: pop r10
0xf33a: mov r14,rax
0xf33d: pop r11
0xf33f: jmp 0xef20
0xf348: fld dword ptr [rip+0xad5e]
0xf34e: fmul st(1),st(0)
0xf350: fld tbyte ptr [rip+0xad5a]
0xf356: fucomip st(2)
0xf358: jbe 0xf303
0xf35a: fstp dword ptr [rsp+0x18]
0xf35e: sub rsp,0x10
0xf362: mov edi,r15d
0xf365: fstp tbyte ptr [rsp+0x0]
0xf368: call 0xeaf0
0xf36d: pop rbp
0xf36e: pop r14
0xf370: fld dword ptr [rsp+0x18]
0xf374: jmp 0xf303
0xf380: mov rax,rsi
0xf383: movsxd rdi,edi
0xf386: and eax,0x1
0xf389: add rax,rdi
0xf38c: setne al
0xf38f: movzx eax,al
0xf392: add r9d,eax
0xf395: cmp r9d,0x5
0xf399: jg 0xf216
0xf39f: jmp 0xf230
0xf3a8: setb dil
0xf3ac: movzx edi,dil
0xf3b0: add edi,0x2
0xf3b3: jmp 0xee29
0xf3c0: mov r8,qword ptr [rsp+0x8]
0xf3c5: xor ebx,ebx
0xf3c7: jmp 0xf200
0xf3d0: mov rbx,qword ptr [rsp+0x8]
0xf3d5: test eax,eax
0xf3d7: lea rdx,[rbx+0x1]
0xf3db: mov byte ptr [rbx],0x6b
0xf3de: jne 0xefbb
0xf3e4: mov qword ptr [rsp+0x8],rdx
0xf3e9: jmp 0xefc7
0xf3f0: cmp ebx,0x8
0xf3f3: je 0xf230
0xf3f9: add ebx,0x1
0xf3fc: test r12b,0x8
0xf400: je 0xf4c2
0xf406: lea r15,[r8-0x1]
0xf40a: mov byte ptr [r8-0x1],0x31
0xf40f: jmp 0xef40
0xf418: mov r8,qword ptr [rsp+0x8]
0xf41d: jmp 0xf200
0xf422: xor ebx,ebx
0xf424: jmp 0xef59
0xf429: test eax,eax
0xf42b: jne 0xf1b6
0xf431: test r12b,0x8
0xf435: jne 0xf454
0xf437: mov r9d,0x30
0xf43d: jmp 0xf1ba
0xf442: mov edx,eax
0xf444: and edx,0x1
0xf447: add edx,edi
0xf449: cmp edx,0x2
0xf44c: setg dl
0xf44f: jmp 0xf1a0
0xf454: mov r8,qword ptr [rsp+0x8]
0xf459: xor r9d,r9d
0xf45c: jmp 0xf200
0xf461: mov rax,qword ptr [r14]
0xf464: mov r9,r14
0xf467: mov qword ptr [r8],rax
0xf46a: mov eax,ebp
0xf46c: mov rdx,qword ptr [r14+rax-0x8]
0xf471: mov qword ptr [r8+rax-0x8],rdx
0xf476: lea rdx,[r8+0x8]
0xf47a: mov rax,r8
0xf47d: and rdx,0xfffffffffffffff8
0xf481: sub rax,rdx
0xf484: sub r9,rax
0xf487: add eax,ebp
0xf489: and eax,0xfffffff8
0xf48c: cmp eax,0x8
0xf48f: jb 0xf1f7
0xf495: and eax,0xfffffff8
0xf498: xor edi,edi
0xf49a: mov r10d,edi
0xf49d: add edi,0x8
0xf4a0: mov r11,qword ptr [r9+r10]
0xf4a4: cmp edi,eax
0xf4a6: mov qword ptr [rdx+r10],r11
0xf4aa: jb 0xf49a
0xf4ac: jmp 0xf1f7
0xf4b1: lea rsi,[r10+0x1]
0xf4b5: cmp rsi,0xa
0xf4b9: je 0xf510
0xf4bb: xor edi,edi
0xf4bd: jmp 0xf431
0xf4c2: mov rax,rbp
0xf4c5: mov byte ptr [r8-0x1],0x30
0xf4ca: not rax
0xf4cd: add r8,rax
0xf4d0: cmp ebp,0x8
0xf4d3: mov eax,ebp
0xf4d5: jae 0xf51a
0xf4d7: and ebp,0x4
0xf4da: jne 0xf591
0xf4e0: test eax,eax
0xf4e2: je 0xf406
0xf4e8: movzx edx,byte ptr [r14]
0xf4ec: test al,0x2
0xf4ee: mov byte ptr [r8],dl
0xf4f1: je 0xf406
0xf4f7: movzx edx,word ptr [r14+rax-0x2]
0xf4fd: mov word ptr [r8+rax-0x2],dx
0xf503: jmp 0xf406
0xf510: mov r8,qword ptr [rsp+0x8]
0xf515: jmp 0xf1f7
0xf51a: mov rax,qword ptr [r14]
0xf51d: lea rcx,[r8+0x8]
0xf521: and rcx,0xfffffffffffffff8
0xf525: mov qword ptr [r8],rax
0xf528: mov eax,ebp
0xf52a: mov rdx,qword ptr [r14+rax-0x8]
0xf52f: mov qword ptr [r8+rax-0x8],rdx
0xf534: mov rax,r8
0xf537: sub rax,rcx
0xf53a: sub r14,rax
0xf53d: add eax,ebp
0xf53f: and eax,0xfffffff8
0xf542: cmp eax,0x8
0xf545: jb 0xf406
0xf54b: and eax,0xfffffff8
0xf54e: xor edx,edx
0xf550: mov esi,edx
0xf552: add edx,0x8
0xf555: mov rdi,qword ptr [r14+rsi]
0xf559: cmp edx,eax
0xf55b: mov qword ptr [rcx+rsi],rdi
0xf55f: jb 0xf550
0xf561: jmp 0xf406
0xf566: mov edx,dword ptr [r14]
0xf569: mov dword ptr [r8],edx
0xf56c: mov edx,dword ptr [r14+rax-0x4]
0xf571: mov dword ptr [r8+rax-0x4],edx
0xf576: jmp 0xf1f7
0xf57b: call 0x3420
0xf580: movzx edx,word ptr [r14+rax-0x2]
0xf586: mov word ptr [r8+rax-0x2],dx
0xf58c: jmp 0xf1f7
0xf591: mov edx,dword ptr [r14]
0xf594: mov dword ptr [r8],edx
0xf597: mov edx,dword ptr [r14+rax-0x4]
0xf59c: mov dword ptr [r8+rax-0x4],edx
0xf5a1: jmp 0xf406
0xf5a6: test eax,eax
0xf5a8: mov rdx,qword ptr [rsp+0x8]
0xf5ad: jne 0xefbb
0xf5b3: jmp 0xefc7
0xf5b8: mov ebx,dword ptr [rsp+0x20]
0xf5bc: mov r15,rax
0xf5bf: mov r12d,r14d
0xf5c2: jmp 0xef4a
0xf67f: test eax,eax
0xf681: jne 0xf6c8
0xf683: movzx esi,byte ptr [rbx]
0xf686: lea edx,[rsi-0x30]
0xf689: cmp dl,0x9
0xf68c: jbe 0xf6b8
0xf68e: mov rcx,qword ptr [rsp+0x0]
0xf692: cmp rbx,rcx
0xf695: jne 0xf6a9
0xf697: jmp 0xf770
0xf6a0: cmp rbx,rcx
0xf6a3: je 0xf770
0xf6a9: add rbx,0x1
0xf6ad: movzx edi,byte ptr [rbx]
0xf6b0: lea edx,[rdi-0x30]
0xf6b3: cmp dl,0x9
0xf6b6: ja 0xf6a0
0xf6b8: mov rdx,qword ptr [r12]
0xf6bc: mov dword ptr [r13],ebp
0xf6c0: jmp 0xf6d4
0xf6c8: mov rdx,qword ptr [r12]
0xf6cc: mov dword ptr [r13],0x0
0xf6d4: test rdx,rdx
0xf6d7: jne 0xf645
0xf6dd: lea rdi,[rip+0xa992]
0xf6e4: call 0x3250
0xf6e9: cmp rax,0x1
0xf6ed: sbb rax,rax
0xf6f0: and eax,0x200
0xf6f5: add rax,0x200
0xf6fb: mov qword ptr [r12],rax
0xf6ff: mov eax,0x4
0xf704: jmp 0xf645
0xf770: cmp byte ptr [rcx-0x1],0x42
0xf774: je 0xf788
0xf776: or bpl,0x80
0xf77a: or ebp,0x20
0xf77d: jmp 0xf6b8
0xf788: or ebp,0x180
0xf78e: cmp byte ptr [rcx-0x2],0x69
0xf792: jne 0xf6b8
0xf798: jmp 0xf77a
0xf7b1: call 0x3420
0xf7c0: push r12
0xf7c2: push rbp
0xf7c3: push rbx
0xf7c4: mov rbx,qword ptr [rip+0x211c2d]
0xf7cb: test rbx,rbx
0xf7ce: je 0xf7ed
0xf7d0: cmp edi,dword ptr [rbx]
0xf7d2: jne 0xf7e4
0xf7d4: jmp 0xf840
0xf7e0: cmp dword ptr [rbx],edi
0xf7e2: je 0xf840
0xf7e4: mov rbx,qword ptr [rbx+0x8]
0xf7e8: test rbx,rbx
0xf7eb: jne 0xf7e0
0xf7ed: mov ebp,edi
0xf7ef: lea r12,[rip+0x80bd]
0xf7f6: call 0x33c0
0xf7fb: test rax,rax
0xf7fe: mov edi,0x18
0xf803: je 0xf818
0xf805: mov r12,qword ptr [rax]
0xf808: mov rdi,r12
0xf80b: call 0x3400
0xf810: lea rdi,[rax+0x18]
0xf814: and rdi,0xfffffffffffffff8
0xf818: call 0x14590
0xf81d: lea rdi,[rax+0x10]
0xf821: mov dword ptr [rax],ebp
0xf823: mov rsi,r12
0xf826: mov rbx,rax
0xf829: call 0x32e0
0xf82e: mov rax,qword ptr [rip+0x211bc3]
0xf835: mov qword ptr [rip+0x211bbc],rbx
0xf83c: mov qword ptr [rbx+0x8],rax
0xf840: cmp byte ptr [rbx+0x10],0x0
0xf844: je 0xf850
0xf846: lea rax,[rbx+0x10]
0xf84a: pop rbx
0xf84b: pop rbp
0xf84c: pop r12
0xf84e: ret
0xf850: xor eax,eax
0xf852: jmp 0xf84a
0xf860: push r12
0xf862: push rbp
0xf863: mov r12,rdi
0xf866: push rbx
0xf867: mov rbx,qword ptr [rip+0x211b8a]
0xf86e: test rbx,rbx
0xf871: je 0xf8b0
0xf873: movzx ebp,byte ptr [rdi]
0xf876: jmp 0xf889
0xf880: mov rbx,qword ptr [rbx+0x8]
0xf884: test rbx,rbx
0xf887: je 0xf8b0
0xf889: cmp byte ptr [rbx+0x10],bpl
0xf88d: jne 0xf880
0xf88f: lea rdi,[rbx+0x10]
0xf893: mov rsi,r12
0xf896: call 0x3590
0xf89b: test eax,eax
0xf89d: jne 0xf880
0xf89f: mov rax,rbx
0xf8a2: pop rbx
0xf8a3: pop rbp
0xf8a4: pop r12
0xf8a6: ret
0xf8b0: mov rbx,qword ptr [rip+0x211b39]
0xf8b7: test rbx,rbx
0xf8ba: je 0xf8f0
0xf8bc: movzx ebp,byte ptr [r12]
0xf8c1: jmp 0xf8d1
0xf8c8: mov rbx,qword ptr [rbx+0x8]
0xf8cc: test rbx,rbx
0xf8cf: je 0xf8f0
0xf8d1: cmp byte ptr [rbx+0x10],bpl
0xf8d5: jne 0xf8c8
0xf8d7: lea rdi,[rbx+0x10]
0xf8db: mov rsi,r12
0xf8de: call 0x3590
0xf8e3: test eax,eax
0xf8e5: jne 0xf8c8
0xf8e7: pop rbx
0xf8e8: xor eax,eax
0xf8ea: pop rbp
0xf8eb: pop r12
0xf8ed: ret
0xf8f0: mov rdi,r12
0xf8f3: call 0x35c0
0xf8f8: mov rdi,r12
0xf8fb: mov rbp,rax
0xf8fe: call 0x3400
0xf903: lea rdi,[rax+0x18]
0xf907: and rdi,0xfffffffffffffff8
0xf90b: call 0x14590
0xf910: lea rdi,[rax+0x10]
0xf914: mov rsi,r12
0xf917: mov rbx,rax
0xf91a: call 0x32e0
0xf91f: test rbp,rbp
0xf922: je 0xf940
0xf924: mov eax,dword ptr [rbp+0x10]
0xf927: mov dword ptr [rbx],eax
0xf929: mov rax,qword ptr [rip+0x211ac8]
0xf930: mov qword ptr [rip+0x211ac1],rbx
0xf937: mov qword ptr [rbx+0x8],rax
0xf93b: jmp 0xf89f
0xf940: mov rax,qword ptr [rip+0x211aa9]
0xf947: mov qword ptr [rip+0x211aa2],rbx
0xf94e: mov qword ptr [rbx+0x8],rax
0xf952: xor eax,eax
0xf954: jmp 0xf8a2
0xf960: push r12
0xf962: push rbp
0xf963: push rbx
0xf964: mov rbx,qword ptr [rip+0x211a7d]
0xf96b: test rbx,rbx
0xf96e: je 0xf98d
0xf970: cmp edi,dword ptr [rbx]
0xf972: jne 0xf984
0xf974: jmp 0xf9e0
0xf980: cmp dword ptr [rbx],edi
0xf982: je 0xf9e0
0xf984: mov rbx,qword ptr [rbx+0x8]
0xf988: test rbx,rbx
0xf98b: jne 0xf980
0xf98d: mov ebp,edi
0xf98f: lea r12,[rip+0x7f1d]
0xf996: call 0x3460
0xf99b: test rax,rax
0xf99e: mov edi,0x18
0xf9a3: je 0xf9b8
0xf9a5: mov r12,qword ptr [rax]
0xf9a8: mov rdi,r12
0xf9ab: call 0x3400
0xf9b0: lea rdi,[rax+0x18]
0xf9b4: and rdi,0xfffffffffffffff8
0xf9b8: call 0x14590
0xf9bd: lea rdi,[rax+0x10]
0xf9c1: mov dword ptr [rax],ebp
0xf9c3: mov rsi,r12
0xf9c6: mov rbx,rax
0xf9c9: call 0x32e0
0xf9ce: mov rax,qword ptr [rip+0x211a13]
0xf9d5: mov qword ptr [rip+0x211a0c],rbx
0xf9dc: mov qword ptr [rbx+0x8],rax
0xf9e0: cmp byte ptr [rbx+0x10],0x0
0xf9e4: je 0xf9f0
0xf9e6: lea rax,[rbx+0x10]
0xf9ea: pop rbx
0xf9eb: pop rbp
0xf9ec: pop r12
0xf9ee: ret
0xf9f0: xor eax,eax
0xf9f2: jmp 0xf9ea
0xfa00: push r12
0xfa02: push rbp
0xfa03: mov r12,rdi
0xfa06: push rbx
0xfa07: mov rbx,qword ptr [rip+0x2119da]
0xfa0e: test rbx,rbx
0xfa11: je 0xfa50
0xfa13: movzx ebp,byte ptr [rdi]
0xfa16: jmp 0xfa29
0xfa20: mov rbx,qword ptr [rbx+0x8]
0xfa24: test rbx,rbx
0xfa27: je 0xfa50
0xfa29: cmp byte ptr [rbx+0x10],bpl
0xfa2d: jne 0xfa20
0xfa2f: lea rdi,[rbx+0x10]
0xfa33: mov rsi,r12
0xfa36: call 0x3590
0xfa3b: test eax,eax
0xfa3d: jne 0xfa20
0xfa3f: mov rax,rbx
0xfa42: pop rbx
0xfa43: pop rbp
0xfa44: pop r12
0xfa46: ret
0xfa50: mov rbx,qword ptr [rip+0x211989]
0xfa57: test rbx,rbx
0xfa5a: je 0xfa90
0xfa5c: movzx ebp,byte ptr [r12]
0xfa61: jmp 0xfa71
0xfa68: mov rbx,qword ptr [rbx+0x8]
0xfa6c: test rbx,rbx
0xfa6f: je 0xfa90
0xfa71: cmp byte ptr [rbx+0x10],bpl
0xfa75: jne 0xfa68
0xfa77: lea rdi,[rbx+0x10]
0xfa7b: mov rsi,r12
0xfa7e: call 0x3590
0xfa83: test eax,eax
0xfa85: jne 0xfa68
0xfa87: pop rbx
0xfa88: xor eax,eax
0xfa8a: pop rbp
0xfa8b: pop r12
0xfa8d: ret
0xfa90: mov rdi,r12
0xfa93: call 0x3600
0xfa98: mov rdi,r12
0xfa9b: mov rbp,rax
0xfa9e: call 0x3400
0xfaa3: lea rdi,[rax+0x18]
0xfaa7: and rdi,0xfffffffffffffff8
0xfaab: call 0x14590
0xfab0: lea rdi,[rax+0x10]
0xfab4: mov rsi,r12
0xfab7: mov rbx,rax
0xfaba: call 0x32e0
0xfabf: test rbp,rbp
0xfac2: je 0xfae0
0xfac4: mov eax,dword ptr [rbp+0x10]
0xfac7: mov dword ptr [rbx],eax
0xfac9: mov rax,qword ptr [rip+0x211918]
0xfad0: mov qword ptr [rip+0x211911],rbx
0xfad7: mov qword ptr [rbx+0x8],rax
0xfadb: jmp 0xfa3f
0xfae0: mov rax,qword ptr [rip+0x2118f9]
0xfae7: mov qword ptr [rip+0x2118f2],rbx
0xfaee: mov qword ptr [rbx+0x8],rax
0xfaf2: xor eax,eax
0xfaf4: jmp 0xfa42
0xfb00: test rdi,rdi
0xfb03: lea rcx,[rsi+0x14]
0xfb07: mov byte ptr [rsi+0x14],0x0
0xfb0b: movabs r9,0x6666666666666667
0xfb15: movabs rsi,0xcccccccccccccccd
0xfb1f: mov r8d,0x30
0xfb25: js 0xfb63
0xfb27: nop word ptr [rax+rax]
0xfb30: mov rax,rdi
0xfb33: sub rcx,0x1
0xfb37: mul rsi
0xfb3a: shr rdx,0x3
0xfb3e: lea rax,[rdx+rdx*4]
0xfb42: add rax,rax
0xfb45: sub rdi,rax
0xfb48: add edi,0x30
0xfb4b: test rdx,rdx
0xfb4e: mov byte ptr [rcx],dil
0xfb51: mov rdi,rdx
0xfb54: jne 0xfb30
0xfb56: mov rax,rcx
0xfb59: ret
0xfb60: mov rcx,rsi
0xfb63: mov rax,rdi
0xfb66: lea rsi,[rcx-0x1]
0xfb6a: imul r9
0xfb6d: mov rax,rdi
0xfb70: sar rax,0x3f
0xfb74: sar rdx,0x2
0xfb78: sub rdx,rax
0xfb7b: lea rax,[rdx+rdx*4]
0xfb7f: lea eax,[r8+rax*2]
0xfb83: sub eax,edi
0xfb85: test rdx,rdx
0xfb88: mov rdi,rdx
0xfb8b: mov byte ptr [rcx-0x1],al
0xfb8e: jne 0xfb60
0xfb90: sub rcx,0x2
0xfb94: mov byte ptr [rsi-0x1],0x2d
0xfb98: mov rax,rcx
0xfb9b: ret
0xfba0: lea rcx,[rsi+0x14]
0xfba4: mov byte ptr [rsi+0x14],0x0
0xfba8: movabs rsi,0xcccccccccccccccd
0xfbb2: nop word ptr [rax+rax]
0xfbb8: mov rax,rdi
0xfbbb: sub rcx,0x1
0xfbbf: mul rsi
0xfbc2: shr rdx,0x3
0xfbc6: lea rax,[rdx+rdx*4]
0xfbca: add rax,rax
0xfbcd: sub rdi,rax
0xfbd0: add edi,0x30
0xfbd3: test rdx,rdx
0xfbd6: mov byte ptr [rcx],dil
0xfbd9: mov rdi,rdx
0xfbdc: jne 0xfbb8
0xfbde: mov rax,rcx
0xfbe1: ret
0xfbf0: push r15
0xfbf2: push r14
0xfbf4: mov r14,rdi
0xfbf7: push r13
0xfbf9: push r12
0xfbfb: mov r13,rsi
0xfbfe: push rbp
0xfbff: push rbx
0xfc00: mov ebx,r9d
0xfc03: mov r12,rcx
0xfc06: sub rsp,0x38
0xfc0a: mov qword ptr [rsp+0x10],rdx
0xfc0f: mov dword ptr [rsp+0x1c],r8d
0xfc14: call 0x3400
0xfc19: test bl,0x2
0xfc1c: mov r15,rax
0xfc1f: mov qword ptr [rsp+0x8],rax
0xfc24: je 0xfd90
0xfc2a: mov rbp,r15
0xfc2d: mov qword ptr [rsp+0x0],0x0
0xfc35: mov qword ptr [rsp+0x8],0x0
0xfc3e: mov rax,qword ptr [r12]
0xfc42: cmp rax,rbp
0xfc45: jae 0xfd59
0xfc4b: mov r15,rax
0xfc4e: xor edx,edx
0xfc50: mov qword ptr [r12],rax
0xfc54: mov eax,dword ptr [rsp+0x1c]
0xfc58: test eax,eax
0xfc5a: je 0xfd7b
0xfc60: xor ebp,ebp
0xfc62: cmp eax,0x1
0xfc65: je 0xfc73
0xfc67: mov rbp,rdx
0xfc6a: and edx,0x1
0xfc6d: shr rbp,0x1
0xfc70: add rdx,rbp
0xfc73: test bl,0x4
0xfc76: lea r12,[rdx+r15]
0xfc7a: je 0xfc81
0xfc7c: mov r12,r15
0xfc7f: xor edx,edx
0xfc81: and ebx,0x8
0xfc84: jne 0xfd88
0xfc8a: add r12,rbp
0xfc8d: mov rax,qword ptr [rsp+0x10]
0xfc92: test rax,rax
0xfc95: je 0xfd21
0xfc9b: lea rbx,[r13+rax-0x1]
0xfca0: lea rax,[rdx-0x1]
0xfca4: cmp r13,rbx
0xfca7: jae 0xfccf
0xfca9: test rdx,rdx
0xfcac: je 0xfccf
0xfcae: nop
0xfcb0: add r13,0x1
0xfcb4: mov byte ptr [r13-0x1],0x20
0xfcb9: cmp rbx,r13
0xfcbc: seta sil
0xfcc0: test rax,rax
0xfcc3: setne dl
0xfcc6: sub rax,0x1
0xfcca: test sil,dl
0xfccd: jne 0xfcb0
0xfccf: mov rdx,rbx
0xfcd2: mov byte ptr [r13],0x0
0xfcd7: mov rsi,r14
0xfcda: sub rdx,r13
0xfcdd: mov rdi,r13
0xfce0: cmp rdx,r15
0xfce3: cmova rdx,r15
0xfce7: call 0x3740
0xfcec: cmp rbx,rax
0xfcef: lea rdx,[rbp-0x1]
0xfcf3: jbe 0xfd1e
0xfcf5: test rbp,rbp
0xfcf8: je 0xfd1e
0xfcfa: nop word ptr [rax+rax]
0xfd00: add rax,0x1
0xfd04: test rdx,rdx
0xfd07: mov byte ptr [rax-0x1],0x20
0xfd0b: setne sil
0xfd0f: cmp rbx,rax
0xfd12: seta cl
0xfd15: sub rdx,0x1
0xfd19: test sil,cl
0xfd1c: jne 0xfd00
0xfd1e: mov byte ptr [rax],0x0
0xfd21: mov rdi,qword ptr [rsp+0x0]
0xfd25: call 0x3880
0xfd2a: mov rdi,qword ptr [rsp+0x8]
0xfd2f: call 0x3880
0xfd34: add rsp,0x38
0xfd38: mov rax,r12
0xfd3b: pop rbx
0xfd3c: pop rbp
0xfd3d: pop r12
0xfd3f: pop r13
0xfd41: pop r14
0xfd43: pop r15
0xfd45: ret
0xfd50: mov qword ptr [rsp+0x8],0x0
0xfd59: cmp rbp,rax
0xfd5c: jae 0xffaa
0xfd62: sub rax,rbp
0xfd65: mov rdx,rax
0xfd68: mov rax,rbp
0xfd6b: mov qword ptr [r12],rax
0xfd6f: mov eax,dword ptr [rsp+0x1c]
0xfd73: test eax,eax
0xfd75: jne 0xfc60
0xfd7b: mov rbp,rdx
0xfd7e: xor edx,edx
0xfd80: jmp 0xfc73
0xfd88: xor ebp,ebp
0xfd8a: jmp 0xfc8d
0xfd90: call 0x33f0
0xfd95: cmp rax,0x1
0xfd99: jbe 0xfc2a
0xfd9f: xor edx,edx
0xfda1: xor edi,edi
0xfda3: mov rsi,r14
0xfda6: call 0x3350
0xfdab: cmp rax,0xffffffffffffffff
0xfdaf: jne 0xfde0
0xfdb1: test bl,0x1
0xfdb4: jne 0xfc2a
0xfdba: mov qword ptr [rsp+0x0],0x0
0xfdc2: mov qword ptr [rsp+0x8],0x0
0xfdcb: mov r12,0xffffffffffffffff
0xfdd2: jmp 0xfd21
0xfde0: lea rbp,[rax+0x1]
0xfde4: lea rax,[rbp*4]
0xfdec: mov rdi,rax
0xfdef: mov qword ptr [rsp+0x20],rax
0xfdf4: call 0x3888
0xfdf9: test rax,rax
0xfdfc: mov qword ptr [rsp+0x0],rax
0xfe00: je 0xff85
0xfe06: mov rdi,qword ptr [rsp+0x0]
0xfe0a: mov rdx,rbp
0xfe0d: mov rsi,r14
0xfe10: call 0x3350
0xfe15: test rax,rax
0xfe18: je 0xff24
0xfe1e: mov rax,qword ptr [rsp+0x0]
0xfe22: mov rcx,qword ptr [rsp+0x20]
0xfe27: mov dword ptr [rax+rcx-0x4],0x0
0xfe2f: mov edi,dword ptr [rax]
0xfe31: mov rdx,rax
0xfe34: test edi,edi
0xfe36: je 0xff35
0xfe3c: mov byte ptr [rsp+0x20],0x0
0xfe41: nop dword ptr [rax]
0xfe48: mov qword ptr [rsp+0x28],rdx
0xfe4d: call 0x3830
0xfe52: test eax,eax
0xfe54: mov rdx,qword ptr [rsp+0x28]
0xfe59: jne 0xfe66
0xfe5b: mov dword ptr [rdx],0xfffd
0xfe61: mov byte ptr [rsp+0x20],0x1
0xfe66: add rdx,0x4
0xfe6a: mov edi,dword ptr [rdx]
0xfe6c: test edi,edi
0xfe6e: jne 0xfe48
0xfe70: mov rdi,qword ptr [rsp+0x0]
0xfe74: mov rsi,rbp
0xfe77: call 0x3330
0xfe7c: cmp byte ptr [rsp+0x20],0x0
0xfe81: movsxd rbp,eax
0xfe84: je 0xff48
0xfe8a: mov rsi,qword ptr [rsp+0x0]
0xfe8e: xor edx,edx
0xfe90: xor edi,edi
0xfe92: call 0x37b0
0xfe97: add rax,0x1
0xfe9b: mov qword ptr [rsp+0x20],rax
0xfea0: mov rdi,qword ptr [rsp+0x20]
0xfea5: call 0x3888
0xfeaa: test rax,rax
0xfead: mov qword ptr [rsp+0x8],rax
0xfeb2: je 0xff70
0xfeb8: mov r15,qword ptr [rsp+0x0]
0xfebc: mov r14,qword ptr [r12]
0xfec0: mov edi,dword ptr [r15]
0xfec3: test edi,edi
0xfec5: je 0xff9f
0xfecb: xor ebp,ebp
0xfecd: jmp 0xfede
0xfed0: add r15,0x4
0xfed4: mov edi,dword ptr [r15]
0xfed7: mov rbp,rdx
0xfeda: test edi,edi
0xfedc: je 0xfeff
0xfede: call 0x3660
0xfee3: cmp eax,0xffffffff
0xfee6: movsxd rdx,eax
0xfee9: jne 0xfef7
0xfeeb: mov dword ptr [r15],0xfffd
0xfef2: mov edx,0x1
0xfef7: add rdx,rbp
0xfefa: cmp r14,rdx
0xfefd: jae 0xfed0
0xfeff: mov r14,qword ptr [rsp+0x8]
0xff04: mov rdx,qword ptr [rsp+0x20]
0xff09: mov rsi,qword ptr [rsp+0x0]
0xff0d: mov dword ptr [r15],0x0
0xff14: mov rdi,r14
0xff17: call 0x37b0
0xff1c: mov r15,rax
0xff1f: jmp 0xfc3e
0xff24: mov rbp,r15
0xff27: mov qword ptr [rsp+0x8],0x0
0xff30: jmp 0xfc3e
0xff35: mov rdi,qword ptr [rsp+0x0]
0xff39: mov rsi,rbp
0xff3c: call 0x3330
0xff41: movsxd rbp,eax
0xff44: nop dword ptr [rax]
0xff48: mov rax,qword ptr [r12]
0xff4c: cmp rax,rbp
0xff4f: jae 0xfd50
0xff55: mov rax,qword ptr [rsp+0x8]
0xff5a: add rax,0x1
0xff5e: mov qword ptr [rsp+0x20],rax
0xff63: jmp 0xfea0
0xff70: test bl,0x1
0xff73: jne 0xfc3e
0xff79: mov r12,0xffffffffffffffff
0xff80: jmp 0xfd21
0xff85: test bl,0x1
0xff88: mov rbp,r15
0xff8b: mov qword ptr [rsp+0x8],0x0
0xff94: jne 0xfc3e
0xff9a: jmp 0xfdba
0xff9f: mov r15,qword ptr [rsp+0x0]
0xffa3: xor ebp,ebp
0xffa5: jmp 0xfeff
0xffaa: mov rax,rbp
0xffad: xor edx,edx
0xffaf: jmp 0xfc50
0xffc0: push r15
0xffc2: push r14
0xffc4: mov r15,rdi
0xffc7: push r13
0xffc9: push r12
0xffcb: xor r12d,r12d
0xffce: push rbp
0xffcf: push rbx
0xffd0: mov rbp,rsi
0xffd3: sub rsp,0x18
0xffd7: mov r13,qword ptr [rsi]
0xffda: mov dword ptr [rsp+0x8],edx
0xffde: mov dword ptr [rsp+0xc],ecx
0xffe2: mov rax,r13
0xffe5: nop dword ptr [rax]
0xffe8: lea rbx,[rax+0x1]
0xffec: mov rdi,r12
0xffef: mov rsi,rbx
0xfff2: call 0x36e0
0xfff7: test rax,rax
0xfffa: mov r14,rax
0xfffd: je 0x10040
0xffff: mov r9d,dword ptr [rsp+0xc]
0x10004: mov r8d,dword ptr [rsp+0x8]
0x10009: mov rcx,rbp
0x1000c: mov qword ptr [rbp],r13
0x10010: mov rdx,rbx
0x10013: mov rsi,rax
0x10016: mov rdi,r15
0x10019: call 0xfbf0
0x1001e: cmp rax,0xffffffffffffffff
0x10022: je 0x10050
0x10024: cmp rbx,rax
0x10027: mov r12,r14
0x1002a: jbe 0xffe8
0x1002c: add rsp,0x18
0x10030: mov rax,r14
0x10033: pop rbx
0x10034: pop rbp
0x10035: pop r12
0x10037: pop r13
0x10039: pop r14
0x1003b: pop r15
0x1003d: ret
0x10040: mov rdi,r12
0x10043: call 0x3880
0x10048: jmp 0x1002c
0x10050: mov rdi,r14
0x10053: xor r14d,r14d
0x10056: call 0x3880
0x1005b: jmp 0x1002c
0x10060: push r15
0x10062: push r14
0x10064: push r13
0x10066: push r12
0x10068: lea r13,[rdi+rsi]
0x1006c: push rbp
0x1006d: push rbx
0x1006e: mov rbx,rdi
0x10071: sub rsp,0x38
0x10075: mov rax,qword ptr fs:0x28
0x1007e: mov qword ptr [rsp+0x28],rax
0x10083: xor eax,eax
0x10085: mov dword ptr [rsp+0xc],edx
0x10089: call 0x33f0
0x1008e: cmp rax,0x1
0x10092: jbe 0x101c8
0x10098: xor ebp,ebp
0x1009a: cmp rbx,r13
0x1009d: jae 0x1018d
0x100a3: lea r12,[rsp+0x20]
0x100a8: lea r14,[rsp+0x1c]
0x100ad: jmp 0x100cb
0x100b0: cmp al,0x25
0x100b2: jge 0x100bb
0x100b4: sub eax,0x20
0x100b7: cmp al,0x3
0x100b9: ja 0x100e1
0x100bb: add rbx,0x1
0x100bf: add ebp,0x1
0x100c2: cmp rbx,r13
0x100c5: jae 0x1018d
0x100cb: movzx eax,byte ptr [rbx]
0x100ce: cmp al,0x3f
0x100d0: jle 0x100b0
0x100d2: cmp al,0x41
0x100d4: jl 0x100e1
0x100d6: cmp al,0x5f
0x100d8: jle 0x100bb
0x100da: sub eax,0x61
0x100dd: cmp al,0x1d
0x100df: jbe 0x100bb
0x100e1: mov qword ptr [r12],0x0
0x100e9: jmp 0x10110
0x100f0: mov ecx,0x7fffffff
0x100f5: sub ecx,ebp
0x100f7: cmp ecx,eax
0x100f9: jl 0x10210
0x100ff: add ebp,eax
0x10101: mov rdi,r12
0x10104: add rbx,r15
0x10107: call 0x3820
0x1010c: test eax,eax
0x1010e: jne 0x100c2
0x10110: mov rdx,r13
0x10113: mov rcx,r12
0x10116: mov rsi,rbx
0x10119: sub rdx,rbx
0x1011c: mov rdi,r14
0x1011f: call 0x15350
0x10124: cmp rax,0xffffffffffffffff
0x10128: mov r15,rax
0x1012b: je 0x10178
0x1012d: cmp rax,0xfffffffffffffffe
0x10131: je 0x101b0
0x10133: mov edi,dword ptr [rsp+0x1c]
0x10137: test rax,rax
0x1013a: mov eax,0x1
0x1013f: cmove r15,rax
0x10143: call 0x3660
0x10148: test eax,eax
0x1014a: jns 0x100f0
0x1014c: test byte ptr [rsp+0xc],0x2
0x10151: jne 0x10188
0x10153: mov edi,dword ptr [rsp+0x1c]
0x10157: call 0x3320
0x1015c: test eax,eax
0x1015e: jne 0x10101
0x10160: cmp ebp,0x7fffffff
0x10166: je 0x10210
0x1016c: add ebp,0x1
0x1016f: jmp 0x10101
0x10178: test byte ptr [rsp+0xc],0x1
0x1017d: je 0x100bb
0x10183: nop dword ptr [rax+rax]
0x10188: mov ebp,0xffffffff
0x1018d: mov rsi,qword ptr [rsp+0x28]
0x10192: xor rsi,qword ptr fs:0x28
0x1019b: mov eax,ebp
0x1019d: jne 0x1021a
0x1019f: add rsp,0x38
0x101a3: pop rbx
0x101a4: pop rbp
0x101a5: pop r12
0x101a7: pop r13
0x101a9: pop r14
0x101ab: pop r15
0x101ad: ret
0x101b0: test byte ptr [rsp+0xc],0x1
0x101b5: jne 0x10188
0x101b7: add ebp,0x1
0x101ba: mov rbx,r13
0x101bd: jmp 0x100c2
0x101c8: xor ebp,ebp
0x101ca: cmp rbx,r13
0x101cd: jae 0x1018d
0x101cf: call 0x3860
0x101d4: mov edx,dword ptr [rsp+0xc]
0x101d8: mov rcx,qword ptr [rax]
0x101db: xor ebp,ebp
0x101dd: and edx,0x2
0x101e0: add rbx,0x1
0x101e4: movzx eax,byte ptr [rbx-0x1]
0x101e8: movzx eax,word ptr [rcx+rax*2]
0x101ec: test ah,0x40
0x101ef: jne 0x101f9
0x101f1: test edx,edx
0x101f3: jne 0x10188
0x101f5: test al,0x2
0x101f7: jne 0x10204
0x101f9: cmp ebp,0x7fffffff
0x101ff: je 0x1018d
0x10201: add ebp,0x1
0x10204: cmp r13,rbx
0x10207: jne 0x101e0
0x10209: jmp 0x1018d
0x10210: mov ebp,0x7fffffff
0x10215: jmp 0x1018d
0x1021a: call 0x3420
0x10220: push rbp
0x10221: push rbx
0x10222: mov ebp,esi
0x10224: mov rbx,rdi
0x10227: sub rsp,0x8
0x1022b: call 0x3400
0x10230: add rsp,0x8
0x10234: mov edx,ebp
0x10236: mov rdi,rbx
0x10239: pop rbx
0x1023a: pop rbp
0x1023b: mov rsi,rax
0x1023e: jmp 0x10060
0x10250: push r15
0x10252: push r14
0x10254: push r13
0x10256: push r12
0x10258: mov r13,rdi
0x1025b: push rbp
0x1025c: push rbx
0x1025d: mov rbx,rcx
0x10260: sub rsp,0x38
0x10264: cmp rsi,0x2
0x10268: mov qword ptr [rsp+0x0],rsi
0x1026c: mov qword ptr [rsp+0x10],rdx
0x10271: ja 0x102a0
0x10273: jne 0x10290
0x10275: mov r12,qword ptr [rdi+0x8]
0x10279: mov rbp,qword ptr [rdi]
0x1027c: mov rsi,r12
0x1027f: mov rdi,rbp
0x10282: call rcx
0x10284: test eax,eax
0x10286: jle 0x10290
0x10288: mov qword ptr [r13],r12
0x1028c: mov qword ptr [r13+0x8],rbp
0x10290: add rsp,0x38
0x10294: pop rbx
0x10295: pop rbp
0x10296: pop r12
0x10298: pop r13
0x1029a: pop r14
0x1029c: pop r15
0x1029e: ret
0x102a0: mov rax,qword ptr [rsp+0x0]
0x102a4: mov r15,qword ptr [rsp+0x10]
0x102a9: mov rcx,rax
0x102ac: mov rsi,rax
0x102af: mov rdx,r15
0x102b2: shr rcx,0x1
0x102b5: lea rdi,[rdi+rcx*8]
0x102b9: sub rsi,rcx
0x102bc: mov r14,rcx
0x102bf: mov qword ptr [rsp+0x18],rcx
0x102c4: mov rcx,rbx
0x102c7: mov qword ptr [rsp+0x28],rdi
0x102cc: call 0x10250
0x102d1: cmp r14,0x1
0x102d5: jne 0x103a0
0x102db: mov r14,qword ptr [r13]
0x102df: mov qword ptr [r15],r14
0x102e2: mov rax,qword ptr [rsp+0x28]
0x102e7: mov r15,qword ptr [rsp+0x18]
0x102ec: xor r12d,r12d
0x102ef: mov qword ptr [rsp+0x8],0x0
0x102f8: mov rbp,qword ptr [rax]
0x102fb: nop dword ptr [rax+rax]
0x10300: mov rsi,rbp
0x10303: mov rdi,r14
0x10306: add r12,0x1
0x1030a: call rbx
0x1030c: test eax,eax
0x1030e: jle 0x10334
0x10310: add r15,0x1
0x10314: cmp qword ptr [rsp+0x0],r15
0x10318: mov qword ptr [r13+r12*8-0x8],rbp
0x1031d: je 0x10360
0x1031f: mov rbp,qword ptr [r13+r15*8]
0x10324: mov rdi,r14
0x10327: add r12,0x1
0x1032b: mov rsi,rbp
0x1032e: call rbx
0x10330: test eax,eax
0x10332: jg 0x10310
0x10334: add qword ptr [rsp+0x8],0x1
0x1033a: mov qword ptr [r13+r12*8-0x8],r14
0x1033f: mov rax,qword ptr [rsp+0x8]
0x10344: cmp qword ptr [rsp+0x18],rax
0x10349: je 0x10290
0x1034f: mov rdx,qword ptr [rsp+0x10]
0x10354: mov r14,qword ptr [rdx+rax*8]
0x10358: jmp 0x10300
0x10360: mov rax,qword ptr [rsp+0x8]
0x10365: lea rdi,[r13+r12*8]
0x1036a: mov r12,qword ptr [rsp+0x18]
0x1036f: mov rcx,qword ptr [rsp+0x10]
0x10374: add rsp,0x38
0x10378: pop rbx
0x10379: sub r12,rax
0x1037c: pop rbp
0x1037d: lea rdx,[r12*8]
0x10385: lea rsi,[rcx+rax*8]
0x10389: pop r12
0x1038b: pop r13
0x1038d: pop r14
0x1038f: pop r15
0x10391: jmp 0x35f0
0x103a0: mov r14,qword ptr [rsp+0x0]
0x103a4: mov r12,qword ptr [rsp+0x10]
0x103a9: mov rcx,rbx
0x103ac: mov rsi,qword ptr [rsp+0x18]
0x103b1: shr r14,0x2
0x103b5: mov rdx,r12
0x103b8: lea r15,[r13+r14*8]
0x103bd: sub rsi,r14
0x103c0: mov qword ptr [rsp+0x20],r14
0x103c5: mov rbp,r14
0x103c8: mov rdi,r15
0x103cb: call 0x10250
0x103d0: mov rsi,r14
0x103d3: mov rcx,rbx
0x103d6: mov rdx,r12
0x103d9: mov rdi,r13
0x103dc: call 0x10250
0x103e1: mov r14,qword ptr [r13]
0x103e5: mov r15,qword ptr [r15]
0x103e8: mov qword ptr [rsp+0x8],0x0
0x103f1: nop dword ptr [rax]
0x103f8: mov rsi,r15
0x103fb: mov rdi,r14
0x103fe: add r12,0x8
0x10402: call rbx
0x10404: test eax,eax
0x10406: jle 0x1042d
0x10408: add rbp,0x1
0x1040c: cmp qword ptr [rsp+0x18],rbp
0x10411: mov qword ptr [r12-0x8],r15
0x10416: je 0x1045f
0x10418: mov r15,qword ptr [r13+rbp*8]
0x1041d: mov rdi,r14
0x10420: add r12,0x8
0x10424: mov rsi,r15
0x10427: call rbx
0x10429: test eax,eax
0x1042b: jg 0x10408
0x1042d: add qword ptr [rsp+0x8],0x1
0x10433: mov qword ptr [r12-0x8],r14
0x10438: mov rax,qword ptr [rsp+0x8]
0x1043d: cmp qword ptr [rsp+0x20],rax
0x10442: je 0x10450
0x10444: mov r14,qword ptr [r13+rax*8]
0x10449: jmp 0x103f8
0x10450: mov rax,qword ptr [rsp+0x18]
0x10455: mov qword ptr [rsp+0x8],rbp
0x1045a: mov qword ptr [rsp+0x20],rax
0x1045f: mov rax,qword ptr [rsp+0x8]
0x10464: mov rdx,qword ptr [rsp+0x20]
0x10469: mov rdi,r12
0x1046c: sub rdx,rax
0x1046f: lea rsi,[r13+rax*8]
0x10474: shl rdx,0x3
0x10478: call 0x35f0
0x1047d: mov rax,qword ptr [rsp+0x10]
0x10482: mov r14,qword ptr [rax]
0x10485: jmp 0x102e2
0x10490: lea rax,[rdi+rsi*8]
0x10494: mov rcx,rdx
0x10497: mov rdx,rax
0x1049a: jmp 0x10250
0x104a0: test rdx,rdx
0x104a3: push r12
0x104a5: push rbp
0x104a6: mov rbp,rdi
0x104a9: push rbx
0x104aa: je 0x104d9
0x104ac: mov r12,rsi
0x104af: lea rbx,[rdx-0x1]
0x104b3: call 0x3850
0x104b8: nop dword ptr [rax+rax]
0x104c0: movzx ecx,byte ptr [r12+rbx]
0x104c5: mov rdx,qword ptr [rax]
0x104c8: mov edx,dword ptr [rdx+rcx*4]
0x104cb: mov byte ptr [rbp+rbx],dl
0x104cf: sub rbx,0x1
0x104d3: cmp rbx,0xffffffffffffffff
0x104d7: jne 0x104c0
0x104d9: mov rax,rbp
0x104dc: pop rbx
0x104dd: pop rbp
0x104de: pop r12
0x104e0: ret
0x104f0: test rdx,rdx
0x104f3: push r12
0x104f5: push rbp
0x104f6: mov rbp,rdi
0x104f9: push rbx
0x104fa: je 0x10529
0x104fc: mov r12,rsi
0x104ff: lea rbx,[rdx-0x1]
0x10503: call 0x3240
0x10508: nop dword ptr [rax+rax]
0x10510: movzx ecx,byte ptr [r12+rbx]
0x10515: mov rdx,qword ptr [rax]
0x10518: mov edx,dword ptr [rdx+rcx*4]
0x1051b: mov byte ptr [rbp+rbx],dl
0x1051f: sub rbx,0x1
0x10523: cmp rbx,0xffffffffffffffff
0x10527: jne 0x10510
0x10529: mov rax,rbp
0x1052c: pop rbx
0x1052d: pop rbp
0x1052e: pop r12
0x10530: ret
0x10540: push r15
0x10542: push r14
0x10544: mov r11,rdx
0x10547: push r13
0x10549: push r12
0x1054b: mov r13,rcx
0x1054e: push rbp
0x1054f: push rbx
0x10550: mov rbp,rdi
0x10553: sub rsp,0x4c8
0x1055a: mov rdi,qword ptr [rcx+0x30]
0x1055e: mov r15d,dword ptr [rcx+0x8]
0x10562: mov rax,qword ptr [rsp+0x508]
0x1056a: mov qword ptr [rsp+0x8],rsi
0x1056f: mov dword ptr [rsp+0x2c],r9d
0x10574: movsxd r10,dword ptr [rsp+0x500]
0x1057c: mov byte ptr [rsp+0x2b],r8b
0x10581: mov qword ptr [rsp+0x18],rax
0x10586: mov rax,qword ptr [rsp+0x510]
0x1058e: mov qword ptr [rsp+0x10],rax
0x10593: mov rax,qword ptr fs:0x28
0x1059c: mov qword ptr [rsp+0x4b8],rax
0x105a4: xor eax,eax
0x105a6: lea rax,[rip+0x7306]
0x105ad: test rdi,rdi
0x105b0: cmovne rax,rdi
0x105b4: cmp r15d,0xc
0x105b8: mov qword ptr [rsp+0x20],rax
0x105bd: jle 0x106b0
0x105c3: sub r15d,0xc
0x105c7: movzx eax,byte ptr [r11]
0x105cb: xor r14d,r14d
0x105ce: test al,al
0x105d0: je 0x1068c
0x105d6: mov dword ptr [rsp+0x68],r15d
0x105db: mov rbx,r11
0x105de: cmp al,0x25
0x105e0: je 0x106c8
0x105e6: test r10d,r10d
0x105e9: mov r12d,0x0
0x105ef: mov eax,0x1
0x105f4: cmovns r12,r10
0x105f8: test r12,r12
0x105fb: cmove r12,rax
0x105ff: mov rax,qword ptr [rsp+0x8]
0x10604: sub rax,r14
0x10607: cmp rax,r12
0x1060a: ja 0x10640
0x1060c: xor r14d,r14d
0x1060f: mov rbx,qword ptr [rsp+0x4b8]
0x10617: xor rbx,qword ptr fs:0x28
0x10620: mov rax,r14
0x10623: jne 0x11fd5
0x10629: add rsp,0x4c8
0x10630: pop rbx
0x10631: pop rbp
0x10632: pop r12
0x10634: pop r13
0x10636: pop r14
0x10638: pop r15
0x1063a: ret
0x10640: test rbp,rbp
0x10643: je 0x1066c
0x10645: cmp r10d,0x1
0x10649: jle 0x10662
0x1064b: lea r15,[r10-0x1]
0x1064f: mov rdi,rbp
0x10652: mov esi,0x20
0x10657: mov rdx,r15
0x1065a: add rbp,r15
0x1065d: call 0x3500
0x10662: movzx eax,byte ptr [rbx]
0x10665: add rbp,0x1
0x10669: mov byte ptr [rbp-0x1],al
0x1066c: add r14,r12
0x1066f: mov r12,rbx
0x10672: movzx eax,byte ptr [r12+0x1]
0x10678: lea rbx,[r12+0x1]
0x1067d: mov r10,0xffffffffffffffff
0x10684: test al,al
0x10686: jne 0x105de
0x1068c: test rbp,rbp
0x1068f: je 0x1060f
0x10695: cmp qword ptr [rsp+0x8],0x0
0x1069b: je 0x1060f
0x106a1: mov byte ptr [rbp],0x0
0x106a5: jmp 0x1060f
0x106b0: test r15d,r15d
0x106b3: mov eax,0xc
0x106b8: cmove r15d,eax
0x106bc: jmp 0x105c7
0x106c8: movzx eax,byte ptr [rsp+0x2b]
0x106cd: xor r8d,r8d
0x106d0: xor r15d,r15d
0x106d3: mov edx,0x1
0x106d8: mov byte ptr [rsp+0x30],al
0x106dc: add rbx,0x1
0x106e0: movsx eax,byte ptr [rbx]
0x106e3: lea ecx,[rax-0x23]
0x106e6: mov esi,eax
0x106e8: mov r9d,eax
0x106eb: cmp cl,0x3c
0x106ee: ja 0x1071c
0x106f0: mov rdi,rdx
0x106f3: movabs r11,0x1000000000002500
0x106fd: shl rdi,cl
0x10700: test rdi,r11
0x10703: jne 0x10770
0x10705: test cl,cl
0x10707: je 0x10780
0x10709: movabs rcx,0x800000000000000
0x10713: test rdi,rcx
0x10716: jne 0x10870
0x1071c: lea edx,[rax-0x30]
0x1071f: cmp edx,0x9
0x10722: jbe 0x10880
0x10728: cmp sil,0x45
0x1072c: je 0x10758
0x1072e: xor r11d,r11d
0x10731: cmp sil,0x4f
0x10735: je 0x10758
0x10737: cmp sil,0x7a
0x1073b: ja 0x10790
0x1073d: lea rdx,[rip+0x9998]
0x10744: movzx eax,sil
0x10748: movsxd rax,dword ptr [rdx+rax*4]
0x1074c: add rax,rdx
0x1074f: jmp rax
0x10758: movsx r9d,byte ptr [rbx+0x1]
0x1075d: mov r11d,eax
0x10760: add rbx,0x1
0x10764: mov esi,r9d
0x10767: jmp 0x10737
0x10770: mov r15d,eax
0x10773: jmp 0x106dc
0x10780: mov r8d,0x1
0x10786: jmp 0x106dc
0x1078b: mov rbx,r9
0x1078e: nop
0x10790: lea rax,[rbx-0x1]
0x10794: mov r8d,0x1
0x1079a: mov r9,rax
0x1079d: lea rax,[rax-0x1]
0x107a1: add r8d,0x1
0x107a5: cmp byte ptr [rax+0x1],0x25
0x107a9: jne 0x1079a
0x107ab: mov rdx,qword ptr [rsp+0x8]
0x107b0: mov eax,0x0
0x107b5: movsxd r8,r8d
0x107b8: mov rcx,r8
0x107bb: mov r12,rbx
0x107be: sub rdx,r14
0x107c1: test r10d,r10d
0x107c4: cmovns eax,r10d
0x107c8: cdqe
0x107ca: cmp rax,r8
0x107cd: cmovae rcx,rax
0x107d1: cmp rcx,rdx
0x107d4: jae 0x1060c
0x107da: test rbp,rbp
0x107dd: je 0x10865
0x107e3: cmp rax,r8
0x107e6: jbe 0x10835
0x107e8: movsxd rdx,r10d
0x107eb: mov qword ptr [rsp+0x48],r8
0x107f0: mov qword ptr [rsp+0x40],rcx
0x107f5: sub rdx,r8
0x107f8: cmp r15d,0x30
0x107fc: mov qword ptr [rsp+0x38],r9
0x10801: lea rbx,[rbp+rdx]
0x10806: je 0x11a76
0x1080c: cmp r15d,0x2b
0x10810: je 0x11a76
0x10816: mov rdi,rbp
0x10819: mov esi,0x20
0x1081e: mov rbp,rbx
0x10821: call 0x3500
0x10826: mov r8,qword ptr [rsp+0x48]
0x1082b: mov rcx,qword ptr [rsp+0x40]
0x10830: mov r9,qword ptr [rsp+0x38]
0x10835: cmp byte ptr [rsp+0x30],0x0
0x1083a: mov qword ptr [rsp+0x38],rcx
0x1083f: mov rdx,r8
0x10842: mov qword ptr [rsp+0x30],r8
0x10847: mov rsi,r9
0x1084a: mov rdi,rbp
0x1084d: je 0x11a20
0x10853: call 0x104f0
0x10858: mov r8,qword ptr [rsp+0x30]
0x1085d: mov rcx,qword ptr [rsp+0x38]
0x10862: add rbp,r8
0x10865: add r14,rcx
0x10868: jmp 0x10672
0x10870: mov byte ptr [rsp+0x30],0x1
0x10875: jmp 0x106dc
0x10880: xor r10d,r10d
0x10883: movsx eax,byte ptr [rbx+0x1]
0x10887: cmp r10d,0xccccccc
0x1088e: lea rcx,[rbx+0x1]
0x10892: mov esi,eax
0x10894: lea edx,[rax-0x30]
0x10897: jg 0x108c6
0x10899: movsx edi,byte ptr [rbx]
0x1089c: je 0x108c0
0x1089e: lea r9d,[r10+r10*4]
0x108a2: mov rbx,rcx
0x108a5: lea r10d,[rdi+r9*2-0x30]
0x108aa: cmp edx,0x9
0x108ad: jbe 0x10883
0x108af: mov r9d,eax
0x108b2: jmp 0x10728
0x108c0: cmp dil,0x37
0x108c4: jle 0x1089e
0x108c6: cmp edx,0x9
0x108c9: ja 0x108e0
0x108cb: movsx eax,byte ptr [rbx+0x2]
0x108cf: mov r10d,0x7fffffff
0x108d5: add rbx,0x2
0x108d9: mov esi,eax
0x108db: lea edx,[rax-0x30]
0x108de: jmp 0x108aa
0x108e0: mov r9d,eax
0x108e3: mov rbx,rcx
0x108e6: mov r10d,0x7fffffff
0x108ec: jmp 0x10728
0x108f1: nop dword ptr [rax]
0x108f8: cmp r11d,0x4f
0x108fc: je 0x10790
0x10902: xor r8d,r8d
0x10905: mov eax,0x2520
0x1090a: test r11d,r11d
0x1090d: mov word ptr [rsp+0xab],ax
0x10915: jne 0x11feb
0x1091b: lea rdx,[rsp+0xab]
0x10923: mov r12,rbx
0x10926: lea rax,[rdx+0x2]
0x1092a: lea r9,[rsp+0xb0]
0x10932: mov byte ptr [rax],sil
0x10935: mov byte ptr [rax+0x1],0x0
0x10939: mov rcx,r13
0x1093c: mov esi,0x400
0x10941: mov dword ptr [rsp+0x38],r10d
0x10946: mov rdi,r9
0x10949: mov byte ptr [rsp+0x50],r8b
0x1094e: mov dword ptr [rsp+0x48],r11d
0x10953: mov qword ptr [rsp+0x40],r9
0x10958: call 0x3730
0x1095d: test rax,rax
0x10960: je 0x10672
0x10966: movsxd r10,dword ptr [rsp+0x38]
0x1096b: lea rcx,[rax-0x1]
0x1096f: mov rdx,qword ptr [rsp+0x8]
0x10974: mov eax,0x0
0x10979: test r10d,r10d
0x1097c: cmovns rax,r10
0x10980: cmp rcx,rax
0x10983: mov rbx,rax
0x10986: cmovae rbx,rcx
0x1098a: sub rdx,r14
0x1098d: cmp rdx,rbx
0x10990: jbe 0x1060c
0x10996: test rbp,rbp
0x10999: je 0x10a3e
0x1099f: mov r11d,dword ptr [rsp+0x48]
0x109a4: mov r9,qword ptr [rsp+0x40]
0x109a9: movzx r8d,byte ptr [rsp+0x50]
0x109af: test r11d,r11d
0x109b2: jne 0x10a0e
0x109b4: cmp rcx,rax
0x109b7: jae 0x10a0e
0x109b9: movsxd rdx,r10d
0x109bc: mov qword ptr [rsp+0x50],r9
0x109c1: mov qword ptr [rsp+0x48],rcx
0x109c6: sub rdx,rcx
0x109c9: cmp r15d,0x30
0x109cd: mov byte ptr [rsp+0x40],r8b
0x109d2: lea rax,[rbp+rdx]
0x109d7: mov qword ptr [rsp+0x38],rax
0x109dc: je 0x11a4f
0x109e2: cmp r15d,0x2b
0x109e6: je 0x11a4f
0x109ec: mov rdi,rbp
0x109ef: mov esi,0x20
0x109f4: call 0x3500
0x109f9: movzx r8d,byte ptr [rsp+0x40]
0x109ff: mov rbp,qword ptr [rsp+0x38]
0x10a04: mov r9,qword ptr [rsp+0x50]
0x10a09: mov rcx,qword ptr [rsp+0x48]
0x10a0e: test r8b,r8b
0x10a11: lea rsi,[r9+0x1]
0x10a15: mov rdx,rcx
0x10a18: jne 0x11a38
0x10a1e: cmp byte ptr [rsp+0x30],0x0
0x10a23: mov rdi,rbp
0x10a26: mov qword ptr [rsp+0x30],rcx
0x10a2b: je 0x112a1
0x10a31: call 0x104f0
0x10a36: mov rcx,qword ptr [rsp+0x30]
0x10a3b: add rbp,rcx
0x10a3e: add r14,rbx
0x10a41: jmp 0x10672
0x10a46: test r11d,r11d
0x10a49: jne 0x10790
0x10a4f: movzx eax,byte ptr [rsp+0x30]
0x10a54: test r8b,r8b
0x10a57: lea rdx,[rsp+0xab]
0x10a5f: mov r12,rbx
0x10a62: cmovne eax,r8d
0x10a66: xor r8d,r8d
0x10a69: xor r11d,r11d
0x10a6c: mov byte ptr [rsp+0x30],al
0x10a70: mov eax,0x2520
0x10a75: mov word ptr [rsp+0xab],ax
0x10a7d: lea rax,[rdx+0x2]
0x10a81: jmp 0x1092a
0x10a86: cmp r11d,0x45
0x10a8a: je 0x10790
0x10a90: mov ecx,dword ptr [r13]
0x10a94: mov edi,0x2
0x10a99: nop dword ptr [rax]
0x10aa0: mov eax,ecx
0x10aa2: xor esi,esi
0x10aa4: mov byte ptr [rsp+0x40],0x0
0x10aa9: shr eax,0x1f
0x10aac: mov dword ptr [rsp+0x38],eax
0x10ab0: mov eax,ecx
0x10ab2: not eax
0x10ab4: shr eax,0x1f
0x10ab7: cmp r11d,0x4f
0x10abb: jne 0x11940
0x10ac1: test al,al
0x10ac3: je 0x11940
0x10ac9: mov esi,r9d
0x10acc: mov edx,0x2520
0x10ad1: xor r8d,r8d
0x10ad4: mov word ptr [rsp+0xab],dx
0x10adc: lea rdx,[rsp+0xab]
0x10ae4: mov byte ptr [rsp+0xad],r11b
0x10aec: mov r12,rbx
0x10aef: mov r11d,edi
0x10af2: lea rax,[rdx+0x3]
0x10af6: jmp 0x1092a
0x10afb: test r10d,r10d
0x10afe: mov ecx,0x0
0x10b03: mov eax,0x1
0x10b08: cmovns ecx,r10d
0x10b0c: movsxd rcx,ecx
0x10b0f: test rcx,rcx
0x10b12: cmove rcx,rax
0x10b16: mov rax,qword ptr [rsp+0x8]
0x10b1b: sub rax,r14
0x10b1e: cmp rax,rcx
0x10b21: jbe 0x1060c
0x10b27: test rbp,rbp
0x10b2a: je 0x10b78
0x10b2c: cmp r10d,0x1
0x10b30: jle 0x10b6c
0x10b32: movsxd rdx,r10d
0x10b35: mov qword ptr [rsp+0x30],rcx
0x10b3a: sub rdx,0x1
0x10b3e: cmp r15d,0x30
0x10b42: lea r12,[rbp+rdx]
0x10b47: je 0x11e64
0x10b4d: cmp r15d,0x2b
0x10b51: je 0x11e64
0x10b57: mov rdi,rbp
0x10b5a: mov esi,0x20
0x10b5f: mov rbp,r12
0x10b62: call 0x3500
0x10b67: mov rcx,qword ptr [rsp+0x30]
0x10b6c: mov byte ptr [rbp],0x9
0x10b70: add rbp,0x1
0x10b74: nop dword ptr [rax]
0x10b78: add r14,rcx
0x10b7b: mov r12,rbx
0x10b7e: jmp 0x10672
0x10b83: mov eax,0x1
0x10b88: test r8b,r8b
0x10b8b: jne 0x11abb
0x10b91: mov r8d,eax
0x10b94: mov esi,0x70
0x10b99: jmp 0x10905
0x10b9e: lea rax,[rip+0x6fce]
0x10ba5: mov dword ptr [rsp+0x38],0xffffffff
0x10bad: mov qword ptr [rsp+0x40],rax
0x10bb2: movzx r8d,byte ptr [rsp+0x30]
0x10bb8: mov eax,dword ptr [rsp+0x518]
0x10bbf: mov rsi,0xffffffffffffffff
0x10bc6: mov dword ptr [rsp+0x48],r10d
0x10bcb: xor edi,edi
0x10bcd: mov r9d,r15d
0x10bd0: mov rcx,r13
0x10bd3: mov dword ptr [rsp+0x30],r8d
0x10bd8: push rax
0x10bd9: push qword ptr [rsp+0x18]
0x10bdd: push qword ptr [rsp+0x28]
0x10be1: mov eax,dword ptr [rsp+0x50]
0x10be5: push rax
0x10be6: mov rdx,qword ptr [rsp+0x60]
0x10beb: call 0x10540
0x10bf0: add rsp,0x20
0x10bf4: movsxd r10,dword ptr [rsp+0x48]
0x10bf9: mov r11,rax
0x10bfc: mov rsi,qword ptr [rsp+0x8]
0x10c01: mov eax,0x0
0x10c06: test r10d,r10d
0x10c09: cmovns rax,r10
0x10c0d: cmp r11,rax
0x10c10: mov r12,rax
0x10c13: cmovae r12,r11
0x10c17: sub rsi,r14
0x10c1a: cmp rsi,r12
0x10c1d: mov qword ptr [rsp+0x48],rsi
0x10c22: jbe 0x1060c
0x10c28: test rbp,rbp
0x10c2b: je 0x1066c
0x10c31: cmp r11,rax
0x10c34: jae 0x10c76
0x10c36: movsxd rdx,r10d
0x10c39: mov qword ptr [rsp+0x58],r11
0x10c3e: sub rdx,r11
0x10c41: cmp r15d,0x30
0x10c45: lea rax,[rbp+rdx]
0x10c4a: mov qword ptr [rsp+0x50],rax
0x10c4f: je 0x11d4c
0x10c55: cmp r15d,0x2b
0x10c59: je 0x11d4c
0x10c5f: mov rdi,rbp
0x10c62: mov esi,0x20
0x10c67: call 0x3500
0x10c6c: mov rbp,qword ptr [rsp+0x50]
0x10c71: mov r11,qword ptr [rsp+0x58]
0x10c76: mov eax,dword ptr [rsp+0x518]
0x10c7d: mov qword ptr [rsp+0x50],r11
0x10c82: mov rdi,rbp
0x10c85: mov r9d,r15d
0x10c88: mov rcx,r13
0x10c8b: push rax
0x10c8c: push qword ptr [rsp+0x18]
0x10c90: push qword ptr [rsp+0x28]
0x10c94: mov eax,dword ptr [rsp+0x50]
0x10c98: push rax
0x10c99: mov r8d,dword ptr [rsp+0x50]
0x10c9e: mov rdx,qword ptr [rsp+0x60]
0x10ca3: mov rsi,qword ptr [rsp+0x68]
0x10ca8: call 0x10540
0x10cad: mov r11,qword ptr [rsp+0x70]
0x10cb2: add rsp,0x20
0x10cb6: add rbp,r11
0x10cb9: jmp 0x1066c
0x10cbe: mov rdx,qword ptr [rsp+0x8]
0x10cc3: mov eax,0x0
0x10cc8: mov ecx,0x1
0x10ccd: sub rdx,r14
0x10cd0: test r10d,r10d
0x10cd3: cmovns eax,r10d
0x10cd7: cdqe
0x10cd9: test rax,rax
0x10cdc: cmovne rcx,rax
0x10ce0: test r11d,r11d
0x10ce3: jne 0x11d18
0x10ce9: cmp rcx,rdx
0x10cec: jae 0x1060c
0x10cf2: test rbp,rbp
0x10cf5: je 0x10b78
0x10cfb: cmp r10d,0x1
0x10cff: jle 0x10d3e
0x10d01: movsxd rdx,r10d
0x10d04: mov qword ptr [rsp+0x30],rcx
0x10d09: sub rdx,0x1
0x10d0d: cmp r15d,0x30
0x10d11: lea r12,[rbp+rdx]
0x10d16: je 0x11f85
0x10d1c: cmp r15d,0x2b
0x10d20: mov esi,0x20
0x10d25: je 0x11f85
0x10d2b: mov rdi,rbp
0x10d2e: mov rbp,r12
0x10d31: call 0x3500
0x10d36: movzx esi,byte ptr [rbx]
0x10d39: mov rcx,qword ptr [rsp+0x30]
0x10d3e: mov byte ptr [rbp],sil
0x10d42: add rbp,0x1
0x10d46: jmp 0x10b78
0x10d4b: lea rax,[rip+0x936e]
0x10d52: mov dword ptr [rsp+0x38],0xffffffff
0x10d5a: mov qword ptr [rsp+0x40],rax
0x10d5f: jmp 0x10bb2
0x10d64: cmp r11d,0x45
0x10d68: je 0x10790
0x10d6e: mov esi,dword ptr [r13+0x1c]
0x10d72: sub esi,dword ptr [r13+0x18]
0x10d76: mov edx,0x92492493
0x10d7b: add esi,0x7
0x10d7e: mov eax,esi
0x10d80: imul edx
0x10d82: lea ecx,[rdx+rsi]
0x10d85: sar esi,0x1f
0x10d88: mov edi,0x2
0x10d8d: sar ecx,0x2
0x10d90: sub ecx,esi
0x10d92: jmp 0x10aa0
0x10d97: cmp r11d,0x45
0x10d9b: je 0x11aca
0x10da1: cmp r11d,0x4f
0x10da5: je 0x10790
0x10dab: mov eax,dword ptr [r13+0x14]
0x10daf: cmp eax,0xfffff894
0x10db4: lea ecx,[rax+0x76c]
0x10dba: setl byte ptr [rsp+0x38]
0x10dbf: cmp eax,0xfffff894
0x10dc4: setge al
0x10dc7: test r15d,r15d
0x10dca: jne 0x11c49
0x10dd0: mov r15d,dword ptr [rsp+0x2c]
0x10dd5: cmp r15d,0x2b
0x10dd9: je 0x11c53
0x10ddf: mov byte ptr [rsp+0x40],0x0
0x10de4: mov edi,0x4
0x10de9: xor esi,esi
0x10deb: jmp 0x10ab7
0x10df0: movzx esi,byte ptr [rsp+0x30]
0x10df5: mov rdi,qword ptr [rsp+0x20]
0x10dfa: test r8b,r8b
0x10dfd: mov eax,0x0
0x10e02: mov dword ptr [rsp+0x38],r10d
0x10e07: mov byte ptr [rsp+0x40],r8b
0x10e0c: cmovne esi,eax
0x10e0f: mov byte ptr [rsp+0x30],sil
0x10e14: call 0x3400
0x10e19: movsxd r10,dword ptr [rsp+0x38]
0x10e1e: mov r12,rax
0x10e21: mov rdx,qword ptr [rsp+0x8]
0x10e26: mov eax,0x0
0x10e2b: test r10d,r10d
0x10e2e: cmovns rax,r10
0x10e32: cmp r12,rax
0x10e35: mov rcx,rax
0x10e38: cmovae rcx,r12
0x10e3c: sub rdx,r14
0x10e3f: cmp rdx,rcx
0x10e42: jbe 0x1060c
0x10e48: test rbp,rbp
0x10e4b: je 0x10b78
0x10e51: cmp r12,rax
0x10e54: movzx r8d,byte ptr [rsp+0x40]
0x10e5a: jae 0x10ea7
0x10e5c: movsxd rdx,r10d
0x10e5f: mov qword ptr [rsp+0x48],rcx
0x10e64: mov byte ptr [rsp+0x40],r8b
0x10e69: sub rdx,r12
0x10e6c: cmp r15d,0x30
0x10e70: lea rax,[rbp+rdx]
0x10e75: mov qword ptr [rsp+0x38],rax
0x10e7a: je 0x11f3f
0x10e80: cmp r15d,0x2b
0x10e84: je 0x11f3f
0x10e8a: mov rdi,rbp
0x10e8d: mov esi,0x20
0x10e92: call 0x3500
0x10e97: movzx r8d,byte ptr [rsp+0x40]
0x10e9d: mov rbp,qword ptr [rsp+0x38]
0x10ea2: mov rcx,qword ptr [rsp+0x48]
0x10ea7: test r8b,r8b
0x10eaa: jne 0x11ea7
0x10eb0: cmp byte ptr [rsp+0x30],0x0
0x10eb5: mov rdx,r12
0x10eb8: mov qword ptr [rsp+0x30],rcx
0x10ebd: mov rsi,qword ptr [rsp+0x20]
0x10ec2: mov rdi,rbp
0x10ec5: je 0x11e98
0x10ecb: call 0x104f0
0x10ed0: mov rcx,qword ptr [rsp+0x30]
0x10ed5: add rbp,r12
0x10ed8: jmp 0x10b78
0x10edd: cmp r11d,0x45
0x10ee1: je 0x11aca
0x10ee7: mov esi,dword ptr [r13+0x14]
0x10eeb: mov edx,0x51eb851f
0x10ef0: mov eax,esi
0x10ef2: imul edx
0x10ef4: mov eax,esi
0x10ef6: sar eax,0x1f
0x10ef9: mov ecx,edx
0x10efb: sar ecx,0x5
0x10efe: sub ecx,eax
0x10f00: mov eax,esi
0x10f02: imul ecx,ecx,0x64
0x10f05: sub eax,ecx
0x10f07: mov ecx,eax
0x10f09: jns 0x10f19
0x10f0b: neg eax
0x10f0d: add ecx,0x64
0x10f10: cmp esi,0xfffff893
0x10f16: cmovle ecx,eax
0x10f19: test r15d,r15d
0x10f1c: je 0x1154a
0x10f22: mov eax,0x1
0x10f27: mov byte ptr [rsp+0x38],0x0
0x10f2c: cmp r15d,0x2b
0x10f30: je 0x116a3
0x10f36: mov byte ptr [rsp+0x40],0x0
0x10f3b: mov edi,0x2
0x10f40: xor esi,esi
0x10f42: jmp 0x10ab7
0x10f47: movzx eax,byte ptr [rsp+0x30]
0x10f4c: test r8b,r8b
0x10f4f: cmovne eax,r8d
0x10f53: cmp r11d,0x45
0x10f57: je 0x11ec6
0x10f5d: mov esi,r9d
0x10f60: mov byte ptr [rsp+0x30],al
0x10f64: xor r8d,r8d
0x10f67: jmp 0x10905
0x10f6c: xor r8d,r8d
0x10f6f: mov ecx,dword ptr [r13+0x20]
0x10f73: test ecx,ecx
0x10f75: js 0x11c1e
0x10f7b: mov rcx,qword ptr [r13+0x28]
0x10f7f: mov byte ptr [rsp+0x38],0x1
0x10f84: test ecx,ecx
0x10f86: js 0x10f9c
0x10f88: mov byte ptr [rsp+0x38],0x0
0x10f8d: jne 0x10f9c
0x10f8f: mov rax,qword ptr [rsp+0x20]
0x10f94: cmp byte ptr [rax],0x2d
0x10f97: sete byte ptr [rsp+0x38]
0x10f9c: mov eax,ecx
0x10f9e: mov edx,0x91a2b3c5
0x10fa3: mov esi,0x88888889
0x10fa8: imul edx
0x10faa: mov eax,ecx
0x10fac: sar eax,0x1f
0x10faf: mov dword ptr [rsp+0x40],eax
0x10fb3: lea r12d,[rdx+rcx]
0x10fb7: sar r12d,0xb
0x10fbb: sub r12d,eax
0x10fbe: mov eax,ecx
0x10fc0: imul esi
0x10fc2: lea edi,[rdx+rcx]
0x10fc5: sar edi,0x5
0x10fc8: sub edi,dword ptr [rsp+0x40]
0x10fcc: mov eax,edi
0x10fce: imul esi
0x10fd0: mov eax,edi
0x10fd2: sar eax,0x1f
0x10fd5: lea esi,[rdx+rdi]
0x10fd8: sar esi,0x5
0x10fdb: sub esi,eax
0x10fdd: mov eax,edi
0x10fdf: imul esi,esi,0x3c
0x10fe2: imul edi,edi,0x3c
0x10fe5: sub eax,esi
0x10fe7: sub ecx,edi
0x10fe9: cmp r8,0x1
0x10fed: mov esi,eax
0x10fef: je 0x11e42
0x10ff5: jb 0x11f20
0x10ffb: cmp r8,0x2
0x10fff: je 0x11df5
0x11005: cmp r8,0x3
0x11009: jne 0x11ecf
0x1100f: test ecx,ecx
0x11011: jne 0x11df5
0x11017: test eax,eax
0x11019: jne 0x11e42
0x1101f: movzx eax,byte ptr [rsp+0x38]
0x11024: mov ecx,r12d
0x11027: mov byte ptr [rsp+0x40],0x1
0x1102c: mov edi,0x3
0x11031: xor eax,0x1
0x11034: jmp 0x10ab7
0x11039: nop dword ptr [rax]
0x11040: cmp r11d,0x4f
0x11044: mov eax,dword ptr [r13+0x10]
0x11048: mov edi,0x1
0x1104d: je 0x10acc
0x11053: lea edx,[rax+rax*4]
0x11056: mov byte ptr [rsp+0x40],0x0
0x1105b: mov byte ptr [rsp+0x38],0x0
0x11060: xor esi,esi
0x11062: lea ecx,[rax+rdx*2]
0x11065: sar ecx,0x5
0x11068: add ecx,0x1
0x1106b: nop dword ptr [rax+rax]
0x11070: lea r9,[rsp+0xb0]
0x11078: mov r12d,0xcccccccd
0x1107e: lea r11,[r9+0x17]
0x11082: nop word ptr [rax+rax]
0x11088: test sil,0x1
0x1108c: lea r8,[r11-0x1]
0x11090: je 0x110a1
0x11092: lea rax,[r11-0x2]
0x11096: mov byte ptr [r11-0x1],0x3a
0x1109b: mov r11,r8
0x1109e: mov r8,rax
0x110a1: mov eax,ecx
0x110a3: sar esi,0x1
0x110a5: mul r12d
0x110a8: shr edx,0x3
0x110ab: lea eax,[rdx+rdx*4]
0x110ae: add eax,eax
0x110b0: sub ecx,eax
0x110b2: mov eax,esi
0x110b4: add ecx,0x30
0x110b7: or eax,edx
0x110b9: mov byte ptr [r11-0x1],cl
0x110bd: mov ecx,edx
0x110bf: mov r11,r8
0x110c2: jne 0x11088
0x110c4: cmp r10d,edi
0x110c7: cmovge edi,r10d
0x110cb: cmp byte ptr [rsp+0x38],0x0
0x110d0: mov dword ptr [rsp+0x48],edi
0x110d4: jne 0x11958
0x110da: cmp byte ptr [rsp+0x40],0x0
0x110df: je 0x11379
0x110e5: cmp r15d,0x2d
0x110e9: je 0x11c13
0x110ef: mov byte ptr [rsp+0x38],0x2b
0x110f4: mov eax,dword ptr [rsp+0x48]
0x110f8: lea rcx,[r9+0x17]
0x110fc: mov rdx,qword ptr [rsp+0x8]
0x11101: sub rcx,r8
0x11104: lea r12d,[rax-0x1]
0x11108: sub rdx,r14
0x1110b: sub r12d,ecx
0x1110e: test r12d,r12d
0x11111: jle 0x11b5c
0x11117: cmp r15d,0x5f
0x1111b: je 0x11ad6
0x11121: movsxd rax,dword ptr [rsp+0x48]
0x11126: cmp rax,rdx
0x11129: mov rdi,rax
0x1112c: jae 0x1060c
0x11132: test r10d,r10d
0x11135: mov eax,0x0
0x1113a: mov esi,0x1
0x1113f: cmovns eax,r10d
0x11143: cdqe
0x11145: test rax,rax
0x11148: cmovne rsi,rax
0x1114c: cmp rsi,rdx
0x1114f: jae 0x1060c
0x11155: add r14,rsi
0x11158: test rbp,rbp
0x1115b: movsxd r9,r12d
0x1115e: mov r12,rbx
0x11161: je 0x11204
0x11167: test edi,edi
0x11169: jne 0x111bf
0x1116b: cmp rax,0x1
0x1116f: jbe 0x111bf
0x11171: movsxd rdx,r10d
0x11174: mov qword ptr [rsp+0x58],r8
0x11179: mov qword ptr [rsp+0x50],r9
0x1117e: sub rdx,0x1
0x11182: cmp r15d,0x30
0x11186: mov qword ptr [rsp+0x40],rcx
0x1118b: lea r12,[rbp+rdx]
0x11190: je 0x11f61
0x11196: cmp r15d,0x2b
0x1119a: je 0x11f61
0x111a0: mov rdi,rbp
0x111a3: mov esi,0x20
0x111a8: mov rbp,r12
0x111ab: call 0x3500
0x111b0: mov r8,qword ptr [rsp+0x58]
0x111b5: mov r9,qword ptr [rsp+0x50]
0x111ba: mov rcx,qword ptr [rsp+0x40]
0x111bf: movzx eax,byte ptr [rsp+0x38]
0x111c4: add rbp,0x1
0x111c8: mov r12,rbx
0x111cb: mov byte ptr [rbp-0x1],al
0x111ce: test rbp,rbp
0x111d1: je 0x11204
0x111d3: mov rdx,r9
0x111d6: mov rdi,rbp
0x111d9: mov esi,0x30
0x111de: mov qword ptr [rsp+0x50],r8
0x111e3: mov qword ptr [rsp+0x40],rcx
0x111e8: mov qword ptr [rsp+0x38],r9
0x111ed: call 0x3500
0x111f2: mov r9,qword ptr [rsp+0x38]
0x111f7: mov r8,qword ptr [rsp+0x50]
0x111fc: mov rcx,qword ptr [rsp+0x40]
0x11201: add rbp,r9
0x11204: mov rdx,qword ptr [rsp+0x8]
0x11209: add r14,r9
0x1120c: xor r11d,r11d
0x1120f: xor r10d,r10d
0x11212: sub rdx,r14
0x11215: cmp rcx,r11
0x11218: mov rbx,r11
0x1121b: cmovae rbx,rcx
0x1121f: cmp rbx,rdx
0x11222: jae 0x1060c
0x11228: test rbp,rbp
0x1122b: je 0x10a3e
0x11231: mov esi,dword ptr [rsp+0x48]
0x11235: test esi,esi
0x11237: jne 0x11288
0x11239: cmp rcx,r11
0x1123c: jae 0x11288
0x1123e: movsxd rdx,r10d
0x11241: mov qword ptr [rsp+0x48],r8
0x11246: mov qword ptr [rsp+0x40],rcx
0x1124b: sub rdx,rcx
0x1124e: cmp r15d,0x30
0x11252: lea rax,[rbp+rdx]
0x11257: mov qword ptr [rsp+0x38],rax
0x1125c: je 0x11a9a
0x11262: cmp r15d,0x2b
0x11266: je 0x11a9a
0x1126c: mov rdi,rbp
0x1126f: mov esi,0x20
0x11274: call 0x3500
0x11279: mov rbp,qword ptr [rsp+0x38]
0x1127e: mov r8,qword ptr [rsp+0x48]
0x11283: mov rcx,qword ptr [rsp+0x40]
0x11288: cmp byte ptr [rsp+0x30],0x0
0x1128d: mov rdx,rcx
0x11290: mov qword ptr [rsp+0x30],rcx
0x11295: mov rsi,r8
0x11298: mov rdi,rbp
0x1129b: jne 0x10a31
0x112a1: call 0x35f0
0x112a6: mov rcx,qword ptr [rsp+0x30]
0x112ab: jmp 0x10a3b
0x112b0: movdqu xmm0,xmmword ptr [r13]
0x112b6: lea rsi,[rsp+0x70]
0x112bb: mov rax,qword ptr [r13+0x30]
0x112bf: mov rdi,qword ptr [rsp+0x10]
0x112c4: movaps xmmword ptr [rsp+0x70],xmm0
0x112c9: mov dword ptr [rsp+0x38],r10d
0x112ce: movdqu xmm0,xmmword ptr [r13+0x10]
0x112d4: mov qword ptr [rsp+0xa0],rax
0x112dc: movaps xmmword ptr [rsp+0x80],xmm0
0x112e4: movdqu xmm0,xmmword ptr [r13+0x20]
0x112ea: movaps xmmword ptr [rsp+0x90],xmm0
0x112f2: call 0x15b30
0x112f7: lea r9,[rsp+0xb0]
0x112ff: mov rsi,rax
0x11302: mov rcx,rax
0x11305: movabs r11,0x6666666666666667
0x1130f: mov edi,0x30
0x11314: mov r10d,dword ptr [rsp+0x38]
0x11319: lea r8,[r9+0x17]
0x1131d: nop dword ptr [rax]
0x11320: mov rax,rcx
0x11323: imul r11
0x11326: mov rax,rcx
0x11329: sar rax,0x3f
0x1132d: sar rdx,0x2
0x11331: sub rdx,rax
0x11334: mov rax,rdx
0x11337: lea rdx,[rdx+rdx*4]
0x1133b: add rdx,rdx
0x1133e: sub rcx,rdx
0x11341: mov rdx,rcx
0x11344: mov rcx,rax
0x11347: mov eax,edi
0x11349: sub eax,edx
0x1134b: add edx,0x30
0x1134e: test rsi,rsi
0x11351: cmovs edx,eax
0x11354: sub r8,0x1
0x11358: test rcx,rcx
0x1135b: mov byte ptr [r8],dl
0x1135e: jne 0x11320
0x11360: test r10d,r10d
0x11363: mov edi,0x1
0x11368: cmovg edi,r10d
0x1136c: test rsi,rsi
0x1136f: mov dword ptr [rsp+0x48],edi
0x11373: js 0x11958
0x11379: mov rdx,qword ptr [rsp+0x8]
0x1137e: lea rcx,[r9+0x17]
0x11382: sub rcx,r8
0x11385: sub rdx,r14
0x11388: cmp r15d,0x2d
0x1138c: je 0x1139f
0x1138e: mov r12d,dword ptr [rsp+0x48]
0x11393: sub r12d,ecx
0x11396: test r12d,r12d
0x11399: jg 0x11d29
0x1139f: test r10d,r10d
0x113a2: mov r11d,0x0
0x113a8: mov r12,rbx
0x113ab: cmovns r11d,r10d
0x113af: movsxd r11,r11d
0x113b2: jmp 0x11215
0x113b7: movzx eax,byte ptr [rbx+0x1]
0x113bb: lea rdx,[rbx+0x1]
0x113bf: cmp al,0x3a
0x113c1: je 0x11eda
0x113c7: mov r8d,0x1
0x113cd: cmp al,0x7a
0x113cf: jne 0x10790
0x113d5: mov rbx,rdx
0x113d8: jmp 0x10f6f
0x113dd: cmp r11d,0x45
0x113e1: je 0x10790
0x113e7: mov edi,dword ptr [r13+0x14]
0x113eb: mov r8d,dword ptr [r13+0x1c]
0x113ef: mov edx,0x92492493
0x113f4: mov eax,edi
0x113f6: mov ecx,r8d
0x113f9: sar eax,0x1f
0x113fc: and eax,0x190
0x11401: lea r12d,[rdi+rax-0x64]
0x11406: mov eax,dword ptr [r13+0x18]
0x1140a: sub ecx,eax
0x1140c: mov dword ptr [rsp+0x38],eax
0x11410: add ecx,0x17e
0x11416: mov eax,ecx
0x11418: imul edx
0x1141a: lea eax,[rdx+rcx]
0x1141d: mov edx,ecx
0x1141f: sar edx,0x1f
0x11422: sar eax,0x2
0x11425: sub eax,edx
0x11427: lea edx,[rax*8]
0x1142e: sub edx,eax
0x11430: mov eax,edx
0x11432: mov edx,r8d
0x11435: sub edx,ecx
0x11437: lea eax,[rdx+rax+0x3]
0x1143b: test eax,eax
0x1143d: mov dword ptr [rsp+0x40],eax
0x11441: js 0x11d68
0x11447: test r12b,0x3
0x1144b: mov eax,0x16d
0x11450: jne 0x11497
0x11452: mov ecx,0x51eb851f
0x11457: mov eax,r12d
0x1145a: imul ecx
0x1145c: mov eax,r12d
0x1145f: sar eax,0x1f
0x11462: mov dword ptr [rsp+0x48],eax
0x11466: mov ecx,edx
0x11468: sar edx,0x5
0x1146b: sub edx,eax
0x1146d: mov eax,0x16e
0x11472: imul edx,edx,0x64
0x11475: cmp r12d,edx
0x11478: jne 0x11497
0x1147a: sar ecx,0x7
0x1147d: mov eax,ecx
0x1147f: sub eax,dword ptr [rsp+0x48]
0x11483: imul eax,eax,0x190
0x11489: cmp r12d,eax
0x1148c: sete al
0x1148f: movzx eax,al
0x11492: add eax,0x16d
0x11497: sub r8d,eax
0x1149a: mov edx,0x92492493
0x1149f: mov ecx,r8d
0x114a2: sub ecx,dword ptr [rsp+0x38]
0x114a6: add ecx,0x17e
0x114ac: mov eax,ecx
0x114ae: sub r8d,ecx
0x114b1: imul edx
0x114b3: lea eax,[rdx+rcx]
0x114b6: mov edx,ecx
0x114b8: sar edx,0x1f
0x114bb: sar eax,0x2
0x114be: sub eax,edx
0x114c0: lea edx,[rax*8]
0x114c7: sub edx,eax
0x114c9: lea ecx,[r8+rdx+0x3]
0x114ce: mov r8d,0x1
0x114d4: test ecx,ecx
0x114d6: jns 0x114df
0x114d8: mov ecx,dword ptr [rsp+0x40]
0x114dc: xor r8d,r8d
0x114df: cmp sil,0x47
0x114e3: je 0x11c26
0x114e9: cmp sil,0x67
0x114ed: jne 0x11e1f
0x114f3: mov ecx,0x51eb851f
0x114f8: mov eax,edi
0x114fa: mov esi,edi
0x114fc: imul ecx
0x114fe: mov eax,edx
0x11500: mov edx,edi
0x11502: sar edx,0x1f
0x11505: sar eax,0x5
0x11508: sub eax,edx
0x1150a: imul eax,eax,0x64
0x1150d: sub esi,eax
0x1150f: add esi,r8d
0x11512: mov eax,esi
0x11514: imul ecx
0x11516: mov eax,esi
0x11518: sar eax,0x1f
0x1151b: mov ecx,edx
0x1151d: sar ecx,0x5
0x11520: sub ecx,eax
0x11522: imul ecx,ecx,0x64
0x11525: sub esi,ecx
0x11527: mov ecx,esi
0x11529: jns 0x10f19
0x1152f: mov eax,0xfffff894
0x11534: sub eax,r8d
0x11537: cmp edi,eax
0x11539: jge 0x11fda
0x1153f: neg ecx
0x11541: test r15d,r15d
0x11544: jne 0x10f22
0x1154a: mov r15d,dword ptr [rsp+0x2c]
0x1154f: mov eax,0x1
0x11554: cmp r15d,0x2b
0x11558: je 0x11fba
0x1155e: mov byte ptr [rsp+0x40],0x0
0x11563: mov byte ptr [rsp+0x38],0x0
0x11568: mov edi,0x2
0x1156d: xor esi,esi
0x1156f: jmp 0x10ab7
0x11574: cmp r11d,0x45
0x11578: je 0x10790
0x1157e: mov ecx,dword ptr [r13+0xc]
0x11582: mov edi,0x2
0x11587: jmp 0x10aa0
0x1158c: mov eax,dword ptr [r13+0x18]
0x11590: mov edx,0x92492493
0x11595: mov edi,0x1
0x1159a: lea ecx,[rax+0x6]
0x1159d: mov eax,ecx
0x1159f: imul edx
0x115a1: lea eax,[rdx+rcx]
0x115a4: mov edx,ecx
0x115a6: sar edx,0x1f
0x115a9: sar eax,0x2
0x115ac: sub eax,edx
0x115ae: lea edx,[rax*8]
0x115b5: sub edx,eax
0x115b7: sub ecx,edx
0x115b9: add ecx,0x1
0x115bc: jmp 0x10aa0
0x115c1: cmp r11d,0x45
0x115c5: je 0x10790
0x115cb: mov ecx,dword ptr [r13+0x18]
0x115cf: mov edi,0x1
0x115d4: jmp 0x10aa0
0x115d9: cmp r11d,0x45
0x115dd: je 0x10790
0x115e3: mov eax,dword ptr [r13+0x18]
0x115e7: mov ecx,0x92492493
0x115ec: lea esi,[rax+0x6]
0x115ef: mov eax,esi
0x115f1: imul ecx
0x115f3: lea eax,[rdx+rsi]
0x115f6: mov edx,esi
0x115f8: sar edx,0x1f
0x115fb: sar eax,0x2
0x115fe: sub eax,edx
0x11600: lea edx,[rax*8]
0x11607: sub edx,eax
0x11609: mov eax,edx
0x1160b: mov edx,dword ptr [r13+0x1c]
0x1160f: sub eax,esi
0x11611: lea esi,[rax+rdx+0x7]
0x11615: mov eax,esi
0x11617: imul ecx
0x11619: jmp 0x10d82
0x1161e: cmp r11d,0x45
0x11622: je 0x10790
0x11628: test r8b,r8b
0x1162b: je 0x10905
0x11631: mov byte ptr [rsp+0x30],r8b
0x11636: jmp 0x10902
0x1163b: cmp r11d,0x45
0x1163f: je 0x11aca
0x11645: mov esi,dword ptr [r13+0x14]
0x11649: mov edx,0x51eb851f
0x1164e: mov eax,esi
0x11650: imul edx
0x11652: mov eax,edx
0x11654: mov edx,esi
0x11656: sar edx,0x1f
0x11659: sar eax,0x5
0x1165c: sub eax,edx
0x1165e: mov edx,esi
0x11660: lea ecx,[rax+0x13]
0x11663: imul eax,eax,0x64
0x11666: sub edx,eax
0x11668: mov eax,edx
0x1166a: shr eax,0x1f
0x1166d: test ecx,ecx
0x1166f: setg dl
0x11672: and eax,edx
0x11674: cmp esi,0xfffff894
0x1167a: setl byte ptr [rsp+0x38]
0x1167f: sub ecx,eax
0x11681: cmp esi,0xfffff894
0x11687: setge al
0x1168a: test r15d,r15d
0x1168d: jne 0x10f2c
0x11693: cmp dword ptr [rsp+0x2c],0x2b
0x11698: mov r15d,dword ptr [rsp+0x2c]
0x1169d: jne 0x10f36
0x116a3: mov edi,0x2
0x116a8: mov edx,0x63
0x116ad: cmp edx,ecx
0x116af: mov byte ptr [rsp+0x40],0x1
0x116b4: mov r15d,0x2b
0x116ba: jb 0x10de9
0x116c0: cmp r10d,edi
0x116c3: mov r15d,0x2b
0x116c9: setg byte ptr [rsp+0x40]
0x116ce: xor esi,esi
0x116d0: jmp 0x10ab7
0x116d5: test r11d,r11d
0x116d8: jne 0x10790
0x116de: lea rax,[rip+0x89ed]
0x116e5: mov dword ptr [rsp+0x38],0xffffffff
0x116ed: mov qword ptr [rsp+0x40],rax
0x116f2: jmp 0x10bb2
0x116f7: test r11d,r11d
0x116fa: jne 0x10790
0x11700: test r15d,r15d
0x11703: jne 0x11efd
0x11709: test r10d,r10d
0x1170c: jns 0x11efd
0x11712: lea rax,[rip+0x89b0]
0x11719: mov dword ptr [rsp+0x38],0x4
0x11721: mov r15d,0x2b
0x11727: mov qword ptr [rsp+0x40],rax
0x1172c: jmp 0x10bb2
0x11731: movzx ecx,byte ptr [rbx-0x1]
0x11735: lea r9,[rbx-0x1]
0x11739: mov rdx,qword ptr [rsp+0x8]
0x1173e: mov eax,0x0
0x11743: sub rdx,r14
0x11746: test r10d,r10d
0x11749: cmovns eax,r10d
0x1174d: cmp cl,0x25
0x11750: cdqe
0x11752: jne 0x1078b
0x11758: test rax,rax
0x1175b: mov ecx,0x1
0x11760: mov r12,r9
0x11763: cmovne rcx,rax
0x11767: mov r8d,0x1
0x1176d: jmp 0x107d1
0x11772: cmp r11d,0x45
0x11776: je 0x10790
0x1177c: mov ecx,dword ptr [r13+0x8]
0x11780: mov edi,0x2
0x11785: jmp 0x10aa0
0x1178a: cmp r11d,0x45
0x1178e: je 0x10790
0x11794: mov ecx,dword ptr [r13+0x4]
0x11798: mov edi,0x2
0x1179d: jmp 0x10aa0
0x117a2: cmp r11d,0x45
0x117a6: je 0x10790
0x117ac: cmp r10d,0xffffffff
0x117b0: je 0x11d01
0x117b6: cmp r10d,0x8
0x117ba: jg 0x11fc9
0x117c0: mov ecx,dword ptr [rsp+0x518]
0x117c7: mov esi,r10d
0x117ca: mov edi,0x66666667
0x117cf: nop
0x117d0: mov eax,ecx
0x117d2: add esi,0x1
0x117d5: sar ecx,0x1f
0x117d8: imul edi
0x117da: sar edx,0x2
0x117dd: sub edx,ecx
0x117df: cmp esi,0x9
0x117e2: mov ecx,edx
0x117e4: jne 0x117d0
0x117e6: mov edi,r10d
0x117e9: jmp 0x10aa0
0x117ee: cmp r11d,0x45
0x117f2: je 0x10790
0x117f8: mov ecx,dword ptr [rsp+0x68]
0x117fc: mov edi,0x2
0x11801: jmp 0x10aa0
0x11806: cmp r11d,0x45
0x1180a: je 0x10790
0x11810: mov ecx,dword ptr [rsp+0x68]
0x11814: test r15d,r15d
0x11817: mov edi,0x2
0x1181c: jne 0x10aa0
0x11822: mov r15d,0x5f
0x11828: jmp 0x10aa0
0x1182d: cmp r11d,0x45
0x11831: je 0x10790
0x11837: mov eax,dword ptr [r13+0x10]
0x1183b: mov byte ptr [rsp+0x40],0x0
0x11840: mov edi,0x2
0x11845: cmp eax,0xffffffff
0x11848: lea ecx,[rax+0x1]
0x1184b: setl byte ptr [rsp+0x38]
0x11850: cmp eax,0xffffffff
0x11853: setge al
0x11856: xor esi,esi
0x11858: jmp 0x10ab7
0x1185d: test r10d,r10d
0x11860: mov ecx,0x0
0x11865: mov eax,0x1
0x1186a: cmovns ecx,r10d
0x1186e: movsxd rcx,ecx
0x11871: test rcx,rcx
0x11874: cmove rcx,rax
0x11878: mov rax,qword ptr [rsp+0x8]
0x1187d: sub rax,r14
0x11880: cmp rax,rcx
0x11883: jbe 0x1060c
0x11889: test rbp,rbp
0x1188c: je 0x10b78
0x11892: cmp r10d,0x1
0x11896: jle 0x118d2
0x11898: movsxd rdx,r10d
0x1189b: mov qword ptr [rsp+0x30],rcx
0x118a0: sub rdx,0x1
0x118a4: cmp r15d,0x30
0x118a8: lea r12,[rbp+rdx]
0x118ad: je 0x11e7e
0x118b3: cmp r15d,0x2b
0x118b7: je 0x11e7e
0x118bd: mov rdi,rbp
0x118c0: mov esi,0x20
0x118c5: mov rbp,r12
0x118c8: call 0x3500
0x118cd: mov rcx,qword ptr [rsp+0x30]
0x118d2: mov byte ptr [rbp],0xa
0x118d6: add rbp,0x1
0x118da: jmp 0x10b78
0x118df: xor eax,eax
0x118e1: jmp 0x10b88
0x118e6: cmp r11d,0x45
0x118ea: je 0x10790
0x118f0: mov eax,dword ptr [r13+0x1c]
0x118f4: mov byte ptr [rsp+0x40],0x0
0x118f9: mov edi,0x3
0x118fe: cmp eax,0xffffffff
0x11901: lea ecx,[rax+0x1]
0x11904: setl byte ptr [rsp+0x38]
0x11909: cmp eax,0xffffffff
0x1190c: setge al
0x1190f: xor esi,esi
0x11911: jmp 0x10ab7
0x11916: cmp r11d,0x45
0x1191a: je 0x10790
0x11920: mov ecx,dword ptr [r13+0x8]
0x11924: jmp 0x11814
0x11929: cmp r11d,0x45
0x1192d: je 0x10790
0x11933: mov ecx,dword ptr [r13+0xc]
0x11937: jmp 0x11814
0x1193c: nop dword ptr [rax]
0x11940: mov eax,ecx
0x11942: neg eax
0x11944: cmp byte ptr [rsp+0x38],0x0
0x11949: cmovne ecx,eax
0x1194c: jmp 0x11070
0x11958: cmp r15d,0x2d
0x1195c: mov byte ptr [rsp+0x38],0x2d
0x11961: jne 0x110f4
0x11967: test r10d,r10d
0x1196a: mov r11d,0x0
0x11970: mov rax,qword ptr [rsp+0x8]
0x11975: cmovns r11d,r10d
0x11979: mov r12d,0x1
0x1197f: movsxd r11,r11d
0x11982: test r11,r11
0x11985: cmovne r12,r11
0x11989: sub rax,r14
0x1198c: cmp rax,r12
0x1198f: jbe 0x1060c
0x11995: test rbp,rbp
0x11998: je 0x119fc
0x1199a: mov eax,dword ptr [rsp+0x48]
0x1199e: test eax,eax
0x119a0: jne 0x119f4
0x119a2: cmp r11,0x1
0x119a6: jbe 0x119f4
0x119a8: movsxd rax,r10d
0x119ab: mov rdi,rbp
0x119ae: mov esi,0x20
0x119b3: lea rcx,[rax-0x1]
0x119b7: mov qword ptr [rsp+0x60],r9
0x119bc: mov qword ptr [rsp+0x58],r8
0x119c1: mov qword ptr [rsp+0x50],r11
0x119c6: mov dword ptr [rsp+0x40],r10d
0x119cb: mov rdx,rcx
0x119ce: mov qword ptr [rsp+0x38],rcx
0x119d3: call 0x3500
0x119d8: mov rcx,qword ptr [rsp+0x38]
0x119dd: mov r9,qword ptr [rsp+0x60]
0x119e2: mov r8,qword ptr [rsp+0x58]
0x119e7: mov r11,qword ptr [rsp+0x50]
0x119ec: mov r10d,dword ptr [rsp+0x40]
0x119f1: add rbp,rcx
0x119f4: mov byte ptr [rbp],r15b
0x119f8: add rbp,0x1
0x119fc: mov rdx,qword ptr [rsp+0x8]
0x11a01: lea rcx,[r9+0x17]
0x11a05: add r14,r12
0x11a08: mov r15d,0x2d
0x11a0e: mov r12,rbx
0x11a11: sub rcx,r8
0x11a14: sub rdx,r14
0x11a17: jmp 0x11215
0x11a20: call 0x35f0
0x11a25: mov rcx,qword ptr [rsp+0x38]
0x11a2a: mov r8,qword ptr [rsp+0x30]
0x11a2f: jmp 0x10862
0x11a38: mov rdi,rbp
0x11a3b: mov qword ptr [rsp+0x30],rcx
0x11a40: call 0x104a0
0x11a45: mov rcx,qword ptr [rsp+0x30]
0x11a4a: jmp 0x10a3b
0x11a4f: mov rdi,rbp
0x11a52: mov esi,0x30
0x11a57: call 0x3500
0x11a5c: mov rbp,qword ptr [rsp+0x38]
0x11a61: movzx r8d,byte ptr [rsp+0x40]
0x11a67: mov rcx,qword ptr [rsp+0x48]
0x11a6c: mov r9,qword ptr [rsp+0x50]
0x11a71: jmp 0x10a0e
0x11a76: mov rdi,rbp
0x11a79: mov esi,0x30
0x11a7e: mov rbp,rbx
0x11a81: call 0x3500
0x11a86: mov r9,qword ptr [rsp+0x38]
0x11a8b: mov rcx,qword ptr [rsp+0x40]
0x11a90: mov r8,qword ptr [rsp+0x48]
0x11a95: jmp 0x10835
0x11a9a: mov rdi,rbp
0x11a9d: mov esi,0x30
0x11aa2: call 0x3500
0x11aa7: mov rbp,qword ptr [rsp+0x38]
0x11aac: mov rcx,qword ptr [rsp+0x40]
0x11ab1: mov r8,qword ptr [rsp+0x48]
0x11ab6: jmp 0x11288
0x11abb: mov esi,0x70
0x11ac0: mov byte ptr [rsp+0x30],0x0
0x11ac5: jmp 0x10905
0x11aca: xor edi,edi
0x11acc: jmp 0x10acc
0x11ad1: mov byte ptr [rsp+0x38],0x0
0x11ad6: movsxd r15,r12d
0x11ad9: cmp r15,rdx
0x11adc: jae 0x1060c
0x11ae2: test rbp,rbp
0x11ae5: je 0x11b18
0x11ae7: mov rdi,rbp
0x11aea: mov rdx,r15
0x11aed: mov esi,0x20
0x11af2: mov dword ptr [rsp+0x58],r10d
0x11af7: mov qword ptr [rsp+0x50],r9
0x11afc: add rbp,r15
0x11aff: mov qword ptr [rsp+0x40],r8
0x11b04: call 0x3500
0x11b09: mov r10d,dword ptr [rsp+0x58]
0x11b0e: mov r9,qword ptr [rsp+0x50]
0x11b13: mov r8,qword ptr [rsp+0x40]
0x11b18: mov rdx,qword ptr [rsp+0x8]
0x11b1d: mov eax,r10d
0x11b20: add r14,r15
0x11b23: sub eax,r12d
0x11b26: cmp r10d,r12d
0x11b29: mov r10d,0x0
0x11b2f: cmovg r10d,eax
0x11b33: sub rdx,r14
0x11b36: cmp byte ptr [rsp+0x38],0x0
0x11b3b: jne 0x11c62
0x11b41: add r9,0x17
0x11b45: movsxd r11,r10d
0x11b48: mov r12,rbx
0x11b4b: mov rcx,r9
0x11b4e: mov r15d,0x5f
0x11b54: sub rcx,r8
0x11b57: jmp 0x11215
0x11b5c: test r10d,r10d
0x11b5f: mov r11d,0x0
0x11b65: mov r12d,0x1
0x11b6b: cmovns r11d,r10d
0x11b6f: movsxd r11,r11d
0x11b72: test r11,r11
0x11b75: cmovne r12,r11
0x11b79: cmp r12,rdx
0x11b7c: jae 0x1060c
0x11b82: test rbp,rbp
0x11b85: je 0x11c00
0x11b87: mov edi,dword ptr [rsp+0x48]
0x11b8b: test edi,edi
0x11b8d: jne 0x11bf4
0x11b8f: cmp r11,0x1
0x11b93: jbe 0x11bf4
0x11b95: movsxd rdx,r10d
0x11b98: mov dword ptr [rsp+0x6c],r10d
0x11b9d: mov qword ptr [rsp+0x60],r8
0x11ba2: sub rdx,0x1
0x11ba6: cmp r15d,0x30
0x11baa: mov qword ptr [rsp+0x58],rcx
0x11baf: lea rax,[rbp+rdx]
0x11bb4: mov qword ptr [rsp+0x50],r11
0x11bb9: mov qword ptr [rsp+0x40],rax
0x11bbe: je 0x11f8f
0x11bc4: cmp r15d,0x2b
0x11bc8: je 0x11f8f
0x11bce: mov rdi,rbp
0x11bd1: mov esi,0x20
0x11bd6: call 0x3500
0x11bdb: mov rbp,qword ptr [rsp+0x40]
0x11be0: mov r10d,dword ptr [rsp+0x6c]
0x11be5: mov r8,qword ptr [rsp+0x60]
0x11bea: mov rcx,qword ptr [rsp+0x58]
0x11bef: mov r11,qword ptr [rsp+0x50]
0x11bf4: movzx eax,byte ptr [rsp+0x38]
0x11bf9: add rbp,0x1
0x11bfd: mov byte ptr [rbp-0x1],al
0x11c00: mov rdx,qword ptr [rsp+0x8]
0x11c05: add r14,r12
0x11c08: mov r12,rbx
0x11c0b: sub rdx,r14
0x11c0e: jmp 0x11215
0x11c13: mov r15d,0x2b
0x11c19: jmp 0x11967
0x11c1e: mov r12,rbx
0x11c21: jmp 0x10672
0x11c26: mov eax,0xfffff894
0x11c2b: lea ecx,[rdi+r8+0x76c]
0x11c33: sub eax,r8d
0x11c36: cmp edi,eax
0x11c38: setl byte ptr [rsp+0x38]
0x11c3d: setge al
0x11c40: test r15d,r15d
0x11c43: je 0x10dd0
0x11c49: cmp r15d,0x2b
0x11c4d: jne 0x10ddf
0x11c53: mov edi,0x4
0x11c58: mov edx,0x270f
0x11c5d: jmp 0x116ad
0x11c62: movsxd r15,r10d
0x11c65: mov r12d,0x1
0x11c6b: test r15,r15
0x11c6e: cmovne r12,r15
0x11c72: cmp r12,rdx
0x11c75: jae 0x1060c
0x11c7b: test rbp,rbp
0x11c7e: je 0x11cdb
0x11c80: mov r11d,dword ptr [rsp+0x48]
0x11c85: test r11d,r11d
0x11c88: jne 0x11ccf
0x11c8a: cmp r15,0x1
0x11c8e: jbe 0x11ccf
0x11c90: lea rcx,[r15-0x1]
0x11c94: mov rdi,rbp
0x11c97: mov esi,0x20
0x11c9c: mov dword ptr [rsp+0x60],r10d
0x11ca1: mov qword ptr [rsp+0x58],r9
0x11ca6: mov rdx,rcx
0x11ca9: mov qword ptr [rsp+0x50],r8
0x11cae: mov qword ptr [rsp+0x40],rcx
0x11cb3: call 0x3500
0x11cb8: mov rcx,qword ptr [rsp+0x40]
0x11cbd: mov r10d,dword ptr [rsp+0x60]
0x11cc2: mov r9,qword ptr [rsp+0x58]
0x11cc7: mov r8,qword ptr [rsp+0x50]
0x11ccc: add rbp,rcx
0x11ccf: movzx eax,byte ptr [rsp+0x38]
0x11cd4: add rbp,0x1
0x11cd8: mov byte ptr [rbp-0x1],al
0x11cdb: mov rdx,qword ptr [rsp+0x8]
0x11ce0: add r9,0x17
0x11ce4: add r14,r12
0x11ce7: mov rcx,r9
0x11cea: mov r11,r15
0x11ced: mov r12,rbx
0x11cf0: sub rcx,r8
0x11cf3: mov r15d,0x5f
0x11cf9: sub rdx,r14
0x11cfc: jmp 0x11215
0x11d01: mov ecx,dword ptr [rsp+0x518]
0x11d08: mov edi,0x9
0x11d0d: mov r10d,0x9
0x11d13: jmp 0x10aa0
0x11d18: mov r12,rbx
0x11d1b: mov r9,rbx
0x11d1e: mov r8d,0x1
0x11d24: jmp 0x107d1
0x11d29: cmp r15d,0x5f
0x11d2d: je 0x11ad1
0x11d33: movsxd rax,dword ptr [rsp+0x48]
0x11d38: cmp rax,rdx
0x11d3b: jae 0x1060c
0x11d41: movsxd r9,r12d
0x11d44: mov r12,rbx
0x11d47: jmp 0x111ce
0x11d4c: mov rdi,rbp
0x11d4f: mov esi,0x30
0x11d54: call 0x3500
0x11d59: mov rbp,qword ptr [rsp+0x50]
0x11d5e: mov r11,qword ptr [rsp+0x58]
0x11d63: jmp 0x10c76
0x11d69: sub esp,0x1
0x11d6c: mov edx,0x16d
0x11d71: test r12b,0x3
0x11d75: jne 0x11db3
0x11d77: mov eax,r12d
0x11d7a: mov edx,0x51eb851f
0x11d7f: imul edx
0x11d81: mov eax,edx
0x11d83: mov edx,r12d
0x11d86: sar edx,0x1f
0x11d89: sar eax,0x5
0x11d8c: sub eax,edx
0x11d8e: mov edx,0x16e
0x11d93: imul eax,eax,0x64
0x11d96: cmp r12d,eax
0x11d99: jne 0x11db3
0x11d9b: mov eax,r12d
0x11d9e: mov ecx,0x190
0x11da3: cdq
0x11da4: idiv ecx
0x11da6: cmp edx,0x1
0x11da9: sbb edx,edx
0x11dab: not edx
0x11dad: add edx,0x16e
0x11db3: add r8d,edx
0x11db6: mov edx,0x92492493
0x11dbb: mov ecx,r8d
0x11dbe: sub ecx,dword ptr [rsp+0x38]
0x11dc2: add ecx,0x17e
0x11dc8: mov eax,ecx
0x11dca: sub r8d,ecx
0x11dcd: imul edx
0x11dcf: lea eax,[rdx+rcx]
0x11dd2: mov edx,ecx
0x11dd4: sar edx,0x1f
0x11dd7: sar eax,0x2
0x11dda: sub eax,edx
0x11ddc: lea edx,[rax*8]
0x11de3: sub edx,eax
0x11de5: lea ecx,[r8+rdx+0x3]
0x11dea: mov r8d,0xffffffff
0x11df0: jmp 0x114df
0x11df5: imul esi,esi,0x64
0x11df8: mov byte ptr [rsp+0x40],0x1
0x11dfd: mov edi,0x9
0x11e02: imul eax,r12d,0x2710
0x11e09: add eax,esi
0x11e0b: mov esi,0x14
0x11e10: add ecx,eax
0x11e12: movzx eax,byte ptr [rsp+0x38]
0x11e17: xor eax,0x1
0x11e1a: jmp 0x10ab7
0x11e1f: mov eax,ecx
0x11e21: mov edx,0x92492493
0x11e26: mov edi,0x2
0x11e2b: imul edx
0x11e2d: lea eax,[rdx+rcx]
0x11e30: sar ecx,0x1f
0x11e33: sar eax,0x2
0x11e36: sub eax,ecx
0x11e38: mov ecx,eax
0x11e3a: add ecx,0x1
0x11e3d: jmp 0x10aa0
0x11e42: movzx eax,byte ptr [rsp+0x38]
0x11e47: mov byte ptr [rsp+0x40],0x1
0x11e4c: mov edi,0x6
0x11e51: imul ecx,r12d,0x64
0x11e55: xor eax,0x1
0x11e58: add ecx,esi
0x11e5a: mov esi,0x4
0x11e5f: jmp 0x10ab7
0x11e64: mov rdi,rbp
0x11e67: mov esi,0x30
0x11e6c: mov rbp,r12
0x11e6f: call 0x3500
0x11e74: mov rcx,qword ptr [rsp+0x30]
0x11e79: jmp 0x10b6c
0x11e7e: mov rdi,rbp
0x11e81: mov esi,0x30
0x11e86: mov rbp,r12
0x11e89: call 0x3500
0x11e8e: mov rcx,qword ptr [rsp+0x30]
0x11e93: jmp 0x118d2
0x11e98: call 0x35f0
0x11e9d: mov rcx,qword ptr [rsp+0x30]
0x11ea2: jmp 0x10ed5
0x11ea7: mov rsi,qword ptr [rsp+0x20]
0x11eac: mov rdx,r12
0x11eaf: mov rdi,rbp
0x11eb2: mov qword ptr [rsp+0x30],rcx
0x11eb7: call 0x104a0
0x11ebc: mov rcx,qword ptr [rsp+0x30]
0x11ec1: jmp 0x10ed5
0x11ec6: mov byte ptr [rsp+0x30],al
0x11eca: jmp 0x10790
0x11ecf: movzx ecx,byte ptr [rbx]
0x11ed2: mov r9,rbx
0x11ed5: jmp 0x11739
0x11eda: lea rcx,[rbx+0x2]
0x11ede: mov r8d,0x1
0x11ee4: mov rdx,rcx
0x11ee7: add rcx,0x1
0x11eeb: movzx eax,byte ptr [rcx-0x1]
0x11eef: add r8,0x1
0x11ef3: cmp al,0x3a
0x11ef5: jne 0x113cd
0x11efb: jmp 0x11ee4
0x11efd: mov esi,r10d
0x11f00: mov eax,0x0
0x11f05: sub esi,0x6
0x11f08: cmovns eax,esi
0x11f0b: mov dword ptr [rsp+0x38],eax
0x11f0f: lea rax,[rip+0x81b3]
0x11f16: mov qword ptr [rsp+0x40],rax
0x11f1b: jmp 0x10bb2
0x11f20: imul ecx,r12d,0x64
0x11f24: xor esi,esi
0x11f26: mov byte ptr [rsp+0x40],0x1
0x11f2b: mov edi,0x5
0x11f30: add ecx,eax
0x11f32: movzx eax,byte ptr [rsp+0x38]
0x11f37: xor eax,0x1
0x11f3a: jmp 0x10ab7
0x11f3f: mov rdi,rbp
0x11f42: mov esi,0x30
0x11f47: call 0x3500
0x11f4c: mov rbp,qword ptr [rsp+0x38]
0x11f51: movzx r8d,byte ptr [rsp+0x40]
0x11f57: mov rcx,qword ptr [rsp+0x48]
0x11f5c: jmp 0x10ea7
0x11f61: mov rdi,rbp
0x11f64: mov esi,0x30
0x11f69: mov rbp,r12
0x11f6c: call 0x3500
0x11f71: mov rcx,qword ptr [rsp+0x40]
0x11f76: mov r9,qword ptr [rsp+0x50]
0x11f7b: mov r8,qword ptr [rsp+0x58]
0x11f80: jmp 0x111bf
0x11f85: mov esi,0x30
0x11f8a: jmp 0x10d2b
0x11f8f: mov rdi,rbp
0x11f92: mov esi,0x30
0x11f97: call 0x3500
0x11f9c: mov rbp,qword ptr [rsp+0x40]
0x11fa1: mov r11,qword ptr [rsp+0x50]
0x11fa6: mov rcx,qword ptr [rsp+0x58]
0x11fab: mov r8,qword ptr [rsp+0x60]
0x11fb0: mov r10d,dword ptr [rsp+0x6c]
0x11fb5: jmp 0x11bf4
0x11fba: mov byte ptr [rsp+0x38],0x0
0x11fbf: mov edi,0x2
0x11fc4: jmp 0x116c0
0x11fc9: mov ecx,dword ptr [rsp+0x518]
0x11fd0: jmp 0x117e6
0x11fd5: call 0x3420
0x11fda: add ecx,0x64
0x11fdd: test r15d,r15d
0x11fe0: je 0x1154a
0x11fe6: jmp 0x10f22
0x11feb: xor edi,edi
0x11fed: jmp 0x10adc
0x11ff2: nop dword ptr [rax]
0x11ff6: nop word ptr cs:[rax+rax]
0x12000: sub rsp,0x18
0x12004: mov rax,qword ptr fs:0x28
0x1200d: mov qword ptr [rsp+0x8],rax
0x12012: xor eax,eax
0x12014: mov byte ptr [rsp+0x7],0x0
0x12019: push r9
0x1201b: xor r9d,r9d
0x1201e: push r8
0x12020: xor r8d,r8d
0x12023: lea rax,[rsp+0x17]
0x12028: push rax
0x12029: push 0xffffffffffffffff
0x1202b: call 0x10540
0x12030: add rsp,0x20
0x12034: mov rdx,qword ptr [rsp+0x8]
0x12039: xor rdx,qword ptr fs:0x28
0x12042: jne 0x12049
0x12044: add rsp,0x18
0x12048: ret
0x12049: call 0x3420
0x12130: movzx edx,byte ptr [rax+0x1]
0x12134: and edx,0xffffffdf
0x12137: cmp dl,0x42
0x1213a: jne 0x12110
0x1213c: cmp byte ptr [rax+0x2],0x31
0x12140: jne 0x12110
0x12142: cmp byte ptr [rax+0x3],0x38
0x12146: jne 0x12110
0x12148: cmp byte ptr [rax+0x4],0x30
0x1214c: jne 0x12110
0x1214e: cmp byte ptr [rax+0x5],0x33
0x12152: jne 0x12110
0x12154: cmp byte ptr [rax+0x6],0x30
0x12158: jne 0x12110
0x1215a: cmp byte ptr [rax+0x7],0x0
0x1215e: jne 0x12110
0x12160: cmp byte ptr [rbp],0x60
0x12164: lea rax,[rip+0x81a9]
0x1216b: lea rdx,[rip+0x81a6]
0x12172: cmovne rax,rdx
0x12176: add rsp,0x8
0x1217a: pop rbx
0x1217b: pop rbp
0x1217c: ret
0x12180: movzx edx,byte ptr [rax+0x1]
0x12184: and edx,0xffffffdf
0x12187: cmp dl,0x54
0x1218a: jne 0x12110
0x1218c: movzx edx,byte ptr [rax+0x2]
0x12190: and edx,0xffffffdf
0x12193: cmp dl,0x46
0x12196: jne 0x12110
0x1219c: cmp byte ptr [rax+0x3],0x2d
0x121a0: jne 0x12110
0x121a6: cmp byte ptr [rax+0x4],0x38
0x121aa: jne 0x12110
0x121b0: cmp byte ptr [rax+0x5],0x0
0x121b4: jne 0x12110
0x121ba: cmp byte ptr [rbp],0x60
0x121be: lea rax,[rip+0x8147]
0x121c5: lea rdx,[rip+0x8144]
0x121cc: cmovne rax,rdx
0x121d0: add rsp,0x8
0x121d4: pop rbx
0x121d5: pop rbp
0x121d6: ret
0x124f1: nop dword ptr [rax]
0x12532: nop word ptr [rax+rax]
0x12544: nop dword ptr [rax]
0x12611: nop dword ptr [rax]
0x12627: nop word ptr [rax+rax]
0x1263f: nop
0x12792: nop word ptr [rax+rax]
0x127aa: nop word ptr [rax+rax]
0x127ba: nop word ptr [rax+rax]
0x12875: nop dword ptr [rax]
0x12888: nop dword ptr [rax+rax]
0x128a3: nop dword ptr [rax+rax]
0x128d2: nop word ptr [rax+rax]
0x128e2: nop word ptr [rax+rax]
0x128fa: nop word ptr [rax+rax]
0x1290a: nop word ptr [rax+rax]
0x12db2: add rsp,0x20
0x12db6: mov r15,rax
0x133b0: add rsp,0x20
0x133b4: mov r15,rax
0x133b7: jmp 0x12db9
0x133d3: call 0x3420
0x1350c: add rsp,0x20
0x13510: mov r11,qword ptr [rsp+0x10]
0x13515: cmp r11,rax
0x13518: ja 0x13581
0x1351a: lea rsi,[rax+0x1]
0x1351e: lea rax,[rip+0x20defb]
0x13525: cmp r12,rax
0x13528: mov qword ptr [rbx],rsi
0x1352b: je 0x1353f
0x1352d: mov rdi,r12
0x13530: mov qword ptr [rsp+0x10],rsi
0x13535: call 0x3880
0x1353a: mov rsi,qword ptr [rsp+0x10]
0x1353f: mov rdi,rsi
0x13542: mov qword ptr [rsp+0x10],rsi
0x13547: call 0x14590
0x1354c: sub rsp,0x8
0x13550: mov qword ptr [rbx+0x8],rax
0x13554: mov r8d,dword ptr [rbp]
0x13558: push qword ptr [rbp+0x30]
0x1355b: push qword ptr [rbp+0x28]
0x1355e: mov rcx,r14
0x13561: push r15
0x13563: mov r9d,dword ptr [rsp+0x3c]
0x13568: mov rdi,rax
0x1356b: mov rdx,qword ptr [rsp+0x28]
0x13570: mov rsi,qword ptr [rsp+0x30]
0x13575: mov r12,rax
0x13578: call 0x121e0
0x1357d: add rsp,0x20
0x13581: mov eax,dword ptr [rsp+0x18]
0x13585: mov dword ptr [r13],eax
0x13589: add rsp,0x28
0x1358d: mov rax,r12
0x13590: pop rbx
0x13591: pop rbp
0x13592: pop r12
0x13594: pop r13
0x13596: pop r14
0x13598: pop r15
0x1359a: ret
0x135cb: nop dword ptr [rax+rax]
0x13650: lea rax,[rip+0x20dec9]
0x13657: test rdi,rdi
0x1365a: mov ecx,esi
0x1365c: cmove rdi,rax
0x13660: mov eax,esi
0x13662: and ecx,0x1f
0x13665: shr al,0x5
0x13668: movzx eax,al
0x1366b: lea rdi,[rdi+rax*4+0x8]
0x13670: mov esi,dword ptr [rdi]
0x13672: mov eax,esi
0x13674: shr eax,cl
0x13676: xor edx,eax
0x13678: and eax,0x1
0x1367b: and edx,0x1
0x1367e: shl edx,cl
0x13680: xor edx,esi
0x13682: mov dword ptr [rdi],edx
0x13684: ret
0x13690: lea rax,[rip+0x20de89]
0x13697: test rdi,rdi
0x1369a: cmove rdi,rax
0x1369e: mov eax,dword ptr [rdi+0x4]
0x136a1: mov dword ptr [rdi+0x4],esi
0x136a4: ret
0x136b0: lea rax,[rip+0x20de69]
0x136b7: test rdi,rdi
0x136ba: cmove rdi,rax
0x136be: test rsi,rsi
0x136c1: mov dword ptr [rdi],0xa
0x136c7: je 0x136d7
0x136c9: test rdx,rdx
0x136cc: je 0x136d7
0x136ce: mov qword ptr [rdi+0x28],rsi
0x136d2: mov qword ptr [rdi+0x30],rdx
0x136d6: ret
0x136d7: sub rsp,0x8
0x136db: call 0x3290
0x136e0: push r15
0x136e2: push r14
0x136e4: lea rax,[rip+0x20de35]
0x136eb: push r13
0x136ed: push r12
0x136ef: mov r13,rdi
0x136f2: push rbp
0x136f3: push rbx
0x136f4: mov rbx,r8
0x136f7: mov r14,rsi
0x136fa: mov r15,rdx
0x136fd: sub rsp,0x18
0x13701: test r8,r8
0x13704: cmove rbx,rax
0x13708: mov qword ptr [rsp+0x8],rcx
0x1370d: call 0x32a0
0x13712: mov r12d,dword ptr [rax]
0x13715: mov rbp,rax
0x13718: lea rax,[rbx+0x8]
0x1371c: sub rsp,0x8
0x13720: mov r9d,dword ptr [rbx+0x4]
0x13724: push qword ptr [rbx+0x30]
0x13727: mov r8d,dword ptr [rbx]
0x1372a: push qword ptr [rbx+0x28]
0x1372d: mov rdx,r15
0x13730: push rax
0x13731: mov rcx,qword ptr [rsp+0x28]
0x13736: mov rsi,r14
0x13739: mov rdi,r13
0x1373c: call 0x121e0
0x13741: mov dword ptr [rbp],r12d
0x13745: add rsp,0x38
0x13749: pop rbx
0x1374a: pop rbp
0x1374b: pop r12
0x1374d: pop r13
0x1374f: pop r14
0x13751: pop r15
0x13753: ret
0x13760: push r15
0x13762: push r14
0x13764: lea rax,[rip+0x20ddb5]
0x1376b: push r13
0x1376d: push r12
0x1376f: mov r12,rdx
0x13772: push rbp
0x13773: push rbx
0x13774: mov rbx,rcx
0x13777: mov r14,rdi
0x1377a: mov r15,rsi
0x1377d: sub rsp,0x38
0x13781: test rcx,rcx
0x13784: cmove rbx,rax
0x13788: xor ebp,ebp
0x1378a: call 0x32a0
0x1378f: test r12,r12
0x13792: mov r13,rax
0x13795: mov eax,dword ptr [rax]
0x13797: sete bpl
0x1379b: or ebp,dword ptr [rbx+0x4]
0x1379e: lea r10,[rbx+0x8]
0x137a2: sub rsp,0x8
0x137a6: mov r8d,dword ptr [rbx]
0x137a9: mov rcx,r15
0x137ac: mov dword ptr [rsp+0x14],eax
0x137b0: push qword ptr [rbx+0x30]
0x137b3: mov rdx,r14
0x137b6: push qword ptr [rbx+0x28]
0x137b9: push r10
0x137bb: xor esi,esi
0x137bd: mov r9d,ebp
0x137c0: xor edi,edi
0x137c2: mov qword ptr [rsp+0x40],r10
0x137c7: call 0x121e0
0x137cc: lea rsi,[rax+0x1]
0x137d0: mov qword ptr [rsp+0x48],rax
0x137d5: add rsp,0x20
0x137d9: mov rdi,rsi
0x137dc: mov qword ptr [rsp+0x18],rsi
0x137e1: call 0x14590
0x137e6: mov qword ptr [rsp+0x10],rax
0x137eb: sub rsp,0x8
0x137ef: push qword ptr [rbx+0x30]
0x137f2: push qword ptr [rbx+0x28]
0x137f5: mov r10,qword ptr [rsp+0x38]
0x137fa: mov r9d,ebp
0x137fd: mov r8d,dword ptr [rbx]
0x13800: mov rcx,r15
0x13803: mov rdx,r14
0x13806: mov rdi,rax
0x13809: push r10
0x1380b: mov rsi,qword ptr [rsp+0x38]
0x13810: call 0x121e0
0x13815: mov eax,dword ptr [rsp+0x2c]
0x13819: add rsp,0x20
0x1381d: test r12,r12
0x13820: mov dword ptr [r13],eax
0x13824: je 0x1382f
0x13826: mov r11,qword ptr [rsp+0x28]
0x1382b: mov qword ptr [r12],r11
0x1382f: mov rax,qword ptr [rsp+0x10]
0x13834: add rsp,0x38
0x13838: pop rbx
0x13839: pop rbp
0x1383a: pop r12
0x1383c: pop r13
0x1383e: pop r14
0x13840: pop r15
0x13842: ret
0x13850: mov rcx,rdx
0x13853: xor edx,edx
0x13855: jmp 0x13760
0x13860: mov eax,dword ptr [rip+0x20c9d2]
0x13866: push r12
0x13868: mov r12,qword ptr [rip+0x20c9d1]
0x1386f: push rbp
0x13870: push rbx
0x13871: cmp eax,0x1
0x13874: jle 0x138a1
0x13876: sub eax,0x2
0x13879: lea rbx,[r12+0x18]
0x1387e: shl rax,0x4
0x13882: lea rbp,[r12+rax+0x28]
0x13887: nop word ptr [rax+rax]
0x13890: mov rdi,qword ptr [rbx]
0x13893: add rbx,0x10
0x13897: call 0x3880
0x1389c: cmp rbx,rbp
0x1389f: jne 0x13890
0x138a1: mov rdi,qword ptr [r12+0x8]
0x138a6: lea rbx,[rip+0x20db73]
0x138ad: cmp rdi,rbx
0x138b0: je 0x138c9
0x138b2: call 0x3880
0x138b7: mov qword ptr [rip+0x20c98e],0x100
0x138c2: mov qword ptr [rip+0x20c98f],rbx
0x138c9: lea rbx,[rip+0x20c980]
0x138d0: cmp r12,rbx
0x138d3: je 0x138e4
0x138d5: mov rdi,r12
0x138d8: call 0x3880
0x138dd: mov qword ptr [rip+0x20c95c],rbx
0x138e4: pop rbx
0x138e5: mov dword ptr [rip+0x20c949],0x1
0x138ef: pop rbp
0x138f0: pop r12
0x138f2: ret
0x13900: lea rcx,[rip+0x20dc19]
0x13907: mov rdx,0xffffffffffffffff
0x1390e: jmp 0x13420
0x13920: lea rcx,[rip+0x20dbf9]
0x13927: jmp 0x13420
0x13930: lea rcx,[rip+0x20dbe9]
0x13937: mov rsi,rdi
0x1393a: mov rdx,0xffffffffffffffff
0x13941: xor edi,edi
0x13943: jmp 0x13420
0x13950: lea rcx,[rip+0x20dbc9]
0x13957: mov rdx,rsi
0x1395a: mov rsi,rdi
0x1395d: xor edi,edi
0x1395f: jmp 0x13420
0x13970: sub rsp,0x48
0x13974: mov rax,rdx
0x13977: mov rdx,qword ptr fs:0x28
0x13980: mov qword ptr [rsp+0x38],rdx
0x13985: xor edx,edx
0x13987: cmp esi,0xa
0x1398a: je 0x139f4
0x1398c: mov dword ptr [rsp+0x0],esi
0x1398f: mov rcx,rsp
0x13992: mov rdx,0xffffffffffffffff
0x13999: mov rsi,rax
0x1399c: mov qword ptr [rsp+0x4],0x0
0x139a5: mov qword ptr [rsp+0xc],0x0
0x139ae: mov qword ptr [rsp+0x14],0x0
0x139b7: mov qword ptr [rsp+0x1c],0x0
0x139c0: mov qword ptr [rsp+0x24],0x0
0x139c9: mov qword ptr [rsp+0x2c],0x0
0x139d2: mov dword ptr [rsp+0x34],0x0
0x139da: call 0x13420
0x139df: mov rcx,qword ptr [rsp+0x38]
0x139e4: xor rcx,qword ptr fs:0x28
0x139ed: jne 0x139f9
0x139ef: add rsp,0x48
0x139f3: ret
0x139f4: call 0x3290
0x139f9: call 0x3420
0x13a00: sub rsp,0x48
0x13a04: mov rax,rdx
0x13a07: mov rdx,rcx
0x13a0a: mov rcx,qword ptr fs:0x28
0x13a13: mov qword ptr [rsp+0x38],rcx
0x13a18: xor ecx,ecx
0x13a1a: cmp esi,0xa
0x13a1d: je 0x13a80
0x13a1f: mov dword ptr [rsp+0x0],esi
0x13a22: mov rcx,rsp
0x13a25: mov rsi,rax
0x13a28: mov qword ptr [rsp+0x4],0x0
0x13a31: mov qword ptr [rsp+0xc],0x0
0x13a3a: mov qword ptr [rsp+0x14],0x0
0x13a43: mov qword ptr [rsp+0x1c],0x0
0x13a4c: mov qword ptr [rsp+0x24],0x0
0x13a55: mov qword ptr [rsp+0x2c],0x0
0x13a5e: mov dword ptr [rsp+0x34],0x0
0x13a66: call 0x13420
0x13a6b: mov rdx,qword ptr [rsp+0x38]
0x13a70: xor rdx,qword ptr fs:0x28
0x13a79: jne 0x13a85
0x13a7b: add rsp,0x48
0x13a7f: ret
0x13a80: call 0x3290
0x13a85: call 0x3420
0x13a90: mov rdx,rsi
0x13a93: mov esi,edi
0x13a95: xor edi,edi
0x13a97: jmp 0x13970
0x13aa0: mov rcx,rdx
0x13aa3: mov rdx,rsi
0x13aa6: mov esi,edi
0x13aa8: xor edi,edi
0x13aaa: jmp 0x13a00
0x13ab0: sub rsp,0x48
0x13ab4: mov ecx,edx
0x13ab6: mov rax,qword ptr fs:0x28
0x13abf: mov qword ptr [rsp+0x38],rax
0x13ac4: xor eax,eax
0x13ac6: mov rax,qword ptr [rip+0x20da83]
0x13acd: mov r8,rsp
0x13ad0: and ecx,0x1f
0x13ad3: movdqa xmm0,xmmword ptr [rip+0x20da45]
0x13adb: mov qword ptr [rsp+0x30],rax
0x13ae0: mov eax,edx
0x13ae2: movaps xmmword ptr [rsp+0x0],xmm0
0x13ae6: shr al,0x5
0x13ae9: movzx eax,al
0x13aec: lea r9,[r8+rax*4+0x8]
0x13af1: movdqa xmm0,xmmword ptr [rip+0x20da37]
0x13af9: movaps xmmword ptr [rsp+0x10],xmm0
0x13afe: movdqa xmm0,xmmword ptr [rip+0x20da3a]
0x13b06: movaps xmmword ptr [rsp+0x20],xmm0
0x13b0b: mov edx,dword ptr [r9]
0x13b0e: mov eax,edx
0x13b10: shr eax,cl
0x13b12: not eax
0x13b14: and eax,0x1
0x13b17: shl eax,cl
0x13b19: mov rcx,r8
0x13b1c: xor eax,edx
0x13b1e: mov rdx,rsi
0x13b21: mov rsi,rdi
0x13b24: mov dword ptr [r9],eax
0x13b27: xor edi,edi
0x13b29: call 0x13420
0x13b2e: mov rsi,qword ptr [rsp+0x38]
0x13b33: xor rsi,qword ptr fs:0x28
0x13b3c: jne 0x13b43
0x13b3e: add rsp,0x48
0x13b42: ret
0x13b43: call 0x3420
0x13b50: movsx edx,sil
0x13b54: mov rsi,0xffffffffffffffff
0x13b5b: jmp 0x13ab0
0x13b60: mov edx,0x3a
0x13b65: mov rsi,0xffffffffffffffff
0x13b6c: jmp 0x13ab0
0x13b80: mov edx,0x3a
0x13b85: jmp 0x13ab0
0x13b90: sub rsp,0x48
0x13b94: mov rax,rdx
0x13b97: mov rdx,qword ptr fs:0x28
0x13ba0: mov qword ptr [rsp+0x38],rdx
0x13ba5: xor edx,edx
0x13ba7: cmp esi,0xa
0x13baa: je 0x13c14
0x13bac: mov dword ptr [rsp+0x0],esi
0x13baf: mov rcx,rsp
0x13bb2: mov rdx,0xffffffffffffffff
0x13bb9: mov rsi,rax
0x13bbc: mov qword ptr [rsp+0x4],0x0
0x13bc5: mov qword ptr [rsp+0xc],0x4000000
0x13bce: mov qword ptr [rsp+0x14],0x0
0x13bd7: mov qword ptr [rsp+0x1c],0x0
0x13be0: mov qword ptr [rsp+0x24],0x0
0x13be9: mov qword ptr [rsp+0x2c],0x0
0x13bf2: mov dword ptr [rsp+0x34],0x0
0x13bfa: call 0x13420
0x13bff: mov rcx,qword ptr [rsp+0x38]
0x13c04: xor rcx,qword ptr fs:0x28
0x13c0d: jne 0x13c19
0x13c0f: add rsp,0x48
0x13c13: ret
0x13c14: call 0x3290
0x13c19: call 0x3420
0x13c20: sub rsp,0x48
0x13c24: mov r9,rcx
0x13c27: mov rcx,qword ptr [rip+0x20d922]
0x13c2e: movdqa xmm0,xmmword ptr [rip+0x20d8ea]
0x13c36: mov rax,qword ptr fs:0x28
0x13c3f: mov qword ptr [rsp+0x38],rax
0x13c44: xor eax,eax
0x13c46: movaps xmmword ptr [rsp+0x0],xmm0
0x13c4a: test rsi,rsi
0x13c4d: mov qword ptr [rsp+0x30],rcx
0x13c52: mov dword ptr [rsp+0x0],0xa
0x13c59: movdqa xmm0,xmmword ptr [rip+0x20d8cf]
0x13c61: movaps xmmword ptr [rsp+0x10],xmm0
0x13c66: movdqa xmm0,xmmword ptr [rip+0x20d8d2]
0x13c6e: movaps xmmword ptr [rsp+0x20],xmm0
0x13c73: je 0x13ca7
0x13c75: test rdx,rdx
0x13c78: je 0x13ca7
0x13c7a: mov qword ptr [rsp+0x28],rsi
0x13c7f: mov qword ptr [rsp+0x30],rdx
0x13c84: mov rcx,rsp
0x13c87: mov rdx,r8
0x13c8a: mov rsi,r9
0x13c8d: call 0x13420
0x13c92: mov rdi,qword ptr [rsp+0x38]
0x13c97: xor rdi,qword ptr fs:0x28
0x13ca0: jne 0x13cac
0x13ca2: add rsp,0x48
0x13ca6: ret
0x13ca7: call 0x3290
0x13cac: call 0x3420
0x13cc0: mov r8,0xffffffffffffffff
0x13cc7: jmp 0x13c20
0x13cd0: mov rcx,rdx
0x13cd3: mov r8,0xffffffffffffffff
0x13cda: mov rdx,rsi
0x13cdd: mov rsi,rdi
0x13ce0: xor edi,edi
0x13ce2: jmp 0x13c20
0x13cf0: mov r8,rcx
0x13cf3: mov rcx,rdx
0x13cf6: mov rdx,rsi
0x13cf9: mov rsi,rdi
0x13cfc: xor edi,edi
0x13cfe: jmp 0x13c20
0x13d10: lea rcx,[rip+0x20c4e9]
0x13d17: jmp 0x13420
0x13d20: lea rcx,[rip+0x20c4d9]
0x13d27: mov rdx,rsi
0x13d2a: mov rsi,rdi
0x13d2d: xor edi,edi
0x13d2f: jmp 0x13420
0x13d80: push r13
0x13d82: push r12
0x13d84: mov r13d,edi
0x13d87: push rbp
0x13d88: push rbx
0x13d89: mov rdi,rsi
0x13d8c: mov ebp,edx
0x13d8e: mov r12,rcx
0x13d91: sub rsp,0x138
0x13d98: mov rax,qword ptr fs:0x28
0x13da1: mov qword ptr [rsp+0x128],rax
0x13da9: xor eax,eax
0x13dab: call 0x15d00
0x13db0: mov rcx,rsp
0x13db3: mov r8d,0x100
0x13db9: mov rdx,rax
0x13dbc: mov esi,r13d
0x13dbf: mov edi,0x1
0x13dc4: mov rbx,rax
0x13dc7: call 0x3470
0x13dcc: test eax,eax
0x13dce: jne 0x13e80
0x13dd4: mov rdi,rbx
0x13dd7: call 0x3880
0x13ddc: mov rdi,r12
0x13ddf: call 0x15d00
0x13de4: lea rcx,[rsp+0x90]
0x13dec: mov r8d,0x100
0x13df2: mov rdx,rax
0x13df5: mov esi,ebp
0x13df7: mov edi,0x1
0x13dfc: mov rbx,rax
0x13dff: call 0x3470
0x13e04: test eax,eax
0x13e06: jne 0x13e58
0x13e08: xor ebp,ebp
0x13e0a: mov rax,qword ptr [rsp+0x98]
0x13e12: cmp qword ptr [rsp+0x8],rax
0x13e17: jne 0x13e29
0x13e19: mov rax,qword ptr [rsp+0x90]
0x13e21: cmp qword ptr [rsp+0x0],rax
0x13e25: sete bpl
0x13e29: mov rdi,rbx
0x13e2c: call 0x3880
0x13e31: mov rdx,qword ptr [rsp+0x128]
0x13e39: xor rdx,qword ptr fs:0x28
0x13e42: mov eax,ebp
0x13e44: jne 0x13ea2
0x13e46: add rsp,0x138
0x13e4d: pop rbx
0x13e4e: pop rbp
0x13e4f: pop r12
0x13e51: pop r13
0x13e53: ret
0x13e58: call 0x32a0
0x13e5d: mov esi,dword ptr [rax]
0x13e5f: lea rdx,[rip+0x6126]
0x13e66: mov rcx,rbx
0x13e69: mov edi,0x1
0x13e6e: xor eax,eax
0x13e70: call 0x3760
0x13e75: jmp 0x13e08
0x13e80: call 0x32a0
0x13e85: mov esi,dword ptr [rax]
0x13e87: lea rdx,[rip+0x60fe]
0x13e8e: mov rcx,rbx
0x13e91: mov edi,0x1
0x13e96: xor eax,eax
0x13e98: call 0x3760
0x13e9d: jmp 0x13dd4
0x13ea2: call 0x3420
0x13eb0: push r15
0x13eb2: push r14
0x13eb4: mov r15d,edx
0x13eb7: push r13
0x13eb9: push r12
0x13ebb: push rbp
0x13ebc: push rbx
0x13ebd: mov rbp,rcx
0x13ec0: mov rbx,rsi
0x13ec3: sub rsp,0x18
0x13ec7: mov dword ptr [rsp+0xc],edi
0x13ecb: mov rdi,rsi
0x13ece: call 0xcd10
0x13ed3: mov rdi,rbp
0x13ed6: mov r12,rax
0x13ed9: call 0xcd10
0x13ede: mov rdi,r12
0x13ee1: mov r13,rax
0x13ee4: call 0xcd70
0x13ee9: mov rdi,r13
0x13eec: mov r14,rax
0x13eef: call 0xcd70
0x13ef4: cmp r14,rax
0x13ef7: je 0x13f10
0x13ef9: add rsp,0x18
0x13efd: xor eax,eax
0x13eff: pop rbx
0x13f00: pop rbp
0x13f01: pop r12
0x13f03: pop r13
0x13f05: pop r14
0x13f07: pop r15
0x13f09: ret
0x13f10: mov rdx,r14
0x13f13: mov rsi,r13
0x13f16: mov rdi,r12
0x13f19: call 0x3550
0x13f1e: test eax,eax
0x13f20: jne 0x13ef9
0x13f22: mov edi,dword ptr [rsp+0xc]
0x13f26: add rsp,0x18
0x13f2a: mov rcx,rbp
0x13f2d: mov edx,r15d
0x13f30: mov rsi,rbx
0x13f33: pop rbx
0x13f34: pop rbp
0x13f35: pop r12
0x13f37: pop r13
0x13f39: pop r14
0x13f3b: pop r15
0x13f3d: jmp 0x13d80
0x13f50: mov edx,0xffffff9c
0x13f55: mov rcx,rsi
0x13f58: mov rsi,rdi
0x13f5b: mov edi,edx
0x13f5d: jmp 0x13eb0
0x14390: xor r9d,r9d
0x14393: cmp qword ptr [r8],0x0
0x14397: je 0x143ab
0x14399: nop dword ptr [rax]
0x143a0: add r9,0x1
0x143a4: cmp qword ptr [r8+r9*8],0x0
0x143a9: jne 0x143a0
0x143ab: jmp 0x13f70
0x143b0: sub rsp,0x68
0x143b4: mov r10,r8
0x143b7: xor r9d,r9d
0x143ba: mov rax,qword ptr fs:0x28
0x143c3: mov qword ptr [rsp+0x58],rax
0x143c8: xor eax,eax
0x143ca: mov r8,rsp
0x143cd: nop dword ptr [rax]
0x143d0: mov eax,dword ptr [r10]
0x143d3: cmp eax,0x2f
0x143d6: ja 0x1441a
0x143d8: mov r11d,eax
0x143db: add r11,qword ptr [r10+0x10]
0x143df: add eax,0x8
0x143e2: mov dword ptr [r10],eax
0x143e5: mov rax,qword ptr [r11]
0x143e8: test rax,rax
0x143eb: mov qword ptr [r8+r9*8],rax
0x143ef: je 0x143fb
0x143f1: add r9,0x1
0x143f5: cmp r9,0xa
0x143f9: jne 0x143d0
0x143fb: call 0x13f70
0x14400: mov rax,qword ptr [rsp+0x58]
0x14405: xor rax,qword ptr fs:0x28
0x1440e: jne 0x14415
0x14410: add rsp,0x68
0x14414: ret
0x14415: call 0x3420
0x1441a: mov r11,qword ptr [r10+0x8]
0x1441e: lea rax,[r11+0x8]
0x14422: mov qword ptr [r10+0x8],rax
0x14426: jmp 0x143e5
0x144d6: mov rax,qword ptr [rsp+0x78]
0x144db: xor rax,qword ptr fs:0x28
0x144e4: jne 0x144f0
0x144e6: add rsp,0xb8
0x144ed: pop rbx
0x144ee: pop rbp
0x144ef: ret
0x144f0: call 0x3420
0x14510: push rbx
0x14511: lea rsi,[rip+0x632a]
0x14518: mov edx,0x5
0x1451d: xor edi,edi
0x1451f: call 0x33e0
0x14524: lea rdx,[rip+0x632c]
0x1452b: mov rsi,rax
0x1452e: mov edi,0x1
0x14533: xor eax,eax
0x14535: call 0x3710
0x1453a: lea rsi,[rip+0x632c]
0x14541: mov edx,0x5
0x14546: xor edi,edi
0x14548: call 0x33e0
0x1454d: lea rcx,[rip+0x5714]
0x14554: lea rdx,[rip+0x347b]
0x1455b: mov rsi,rax
0x1455e: mov edi,0x1
0x14563: xor eax,eax
0x14565: call 0x3710
0x1456a: mov rbx,qword ptr [rip+0x20bd17]
0x14571: lea rsi,[rip+0x6528]
0x14578: xor edi,edi
0x1457a: mov edx,0x5
0x1457f: call 0x33e0
0x14584: mov rsi,rbx
0x14587: mov rdi,rax
0x1458a: pop rbx
0x1458b: jmp 0x3570
0x1459e: test rbx,rbx
0x145a1: jne 0x145a5
0x145a5: call 0x147e0
0x145aa: nop word ptr [rax+rax]
0x145b0: mov rax,rdi
0x145b3: mul rsi
0x145b6: mov rdi,rax
0x145b9: seto al
0x145bc: test rdi,rdi
0x145bf: js 0x145cb
0x145c1: movzx eax,al
0x145c4: test rax,rax
0x145c7: jne 0x145cb
0x145c9: jmp 0x14590
0x145cb: sub rsp,0x8
0x145cf: call 0x147e0
0x145d4: nop
0x145d6: nop word ptr cs:[rax+rax]
0x145e0: jmp 0x14590
0x1460b: test rbx,rbx
0x1460e: jne 0x14621
0x14621: call 0x147e0
0x14626: nop word ptr cs:[rax+rax]
0x14630: mov rax,rsi
0x14633: mul rdx
0x14636: mov rsi,rax
0x14639: seto al
0x1463c: test rsi,rsi
0x1463f: js 0x1464b
0x14641: movzx eax,al
0x14644: test rax,rax
0x14647: jne 0x1464b
0x14649: jmp 0x145f0
0x1464b: sub rsp,0x8
0x1464f: call 0x147e0
0x14654: nop
0x14656: nop word ptr cs:[rax+rax]
0x14660: test rdi,rdi
0x14663: mov r9,rdx
0x14666: mov rcx,qword ptr [rsi]
0x14669: je 0x146a0
0x1466b: xor edx,edx
0x1466d: movabs rax,0x5555555555555554
0x14677: div r9
0x1467a: cmp rax,rcx
0x1467d: jbe 0x146bb
0x1467f: mov rax,rcx
0x14682: shr rax,0x1
0x14685: lea rcx,[rax+rcx+0x1]
0x1468a: mov qword ptr [rsi],rcx
0x1468d: imul rcx,r9
0x14691: mov rsi,rcx
0x14694: jmp 0x145f0
0x146a0: test rcx,rcx
0x146a3: je 0x146c8
0x146a5: mov rax,rcx
0x146a8: mul r9
0x146ab: seto dl
0x146ae: test rax,rax
0x146b1: movzx edx,dl
0x146b4: js 0x146bb
0x146b6: test rdx,rdx
0x146b9: je 0x1468a
0x146bb: sub rsp,0x8
0x146bf: call 0x147e0
0x146c4: nop dword ptr [rax]
0x146c8: xor edx,edx
0x146ca: mov eax,0x80
0x146cf: xor r8d,r8d
0x146d2: div r9
0x146d5: test rax,rax
0x146d8: sete r8b
0x146dc: lea rcx,[r8+rax]
0x146e0: jmp 0x146a5
0x146f0: test rdi,rdi
0x146f3: mov rax,qword ptr [rsi]
0x146f6: je 0x14720
0x146f8: movabs rdx,0x5555555555555553
0x14702: cmp rax,rdx
0x14705: ja 0x14731
0x14707: mov rdx,rax
0x1470a: shr rdx,0x1
0x1470d: lea rax,[rdx+rax+0x1]
0x14712: mov qword ptr [rsi],rax
0x14715: mov rsi,rax
0x14718: jmp 0x145f0
0x14720: test rax,rax
0x14723: mov edx,0x80
0x14728: cmove rax,rdx
0x1472c: test rax,rax
0x1472f: jns 0x14712
0x14731: sub rsp,0x8
0x14735: call 0x147e0
0x1473a: nop word ptr [rax+rax]
0x14740: push rbx
0x14741: mov rbx,rdi
0x14744: call 0x14590
0x14749: mov rdx,rbx
0x1474c: xor esi,esi
0x1474e: mov rdi,rax
0x14751: pop rbx
0x14752: jmp 0x3500
0x14760: mov rax,rdi
0x14763: sub rsp,0x8
0x14767: mul rsi
0x1476a: seto dl
0x1476d: test rax,rax
0x14770: js 0x14789
0x14772: movzx edx,dl
0x14775: test rdx,rdx
0x14778: jne 0x14789
0x1477a: call 0x3580
0x1477f: test rax,rax
0x14782: je 0x14789
0x14784: add rsp,0x8
0x14788: ret
0x14789: call 0x147e0
0x1478e: nop
0x147c0: push rbx
0x147c1: mov rbx,rdi
0x147c4: call 0x3400
0x147c9: mov rdi,rbx
0x147cc: lea rsi,[rax+0x1]
0x147d0: pop rbx
0x147d1: jmp 0x14790
0x14810: call 0x3290
0x1485a: test eax,eax
0x1485c: jne 0x148f0
0x14862: mov rbp,qword ptr [rsp+0x0]
0x14866: cmp rbp,r14
0x14869: jb 0x14870
0x1486b: cmp rbp,r15
0x1486e: jbe 0x148c4
0x14870: call 0x32a0
0x14875: cmp rbp,0x40000000
0x1487c: mov r14,rax
0x1487f: sbb eax,eax
0x14881: and eax,0xffffffd7
0x14884: add eax,0x4b
0x14887: mov dword ptr [r14],eax
0x1488a: mov rdi,r12
0x1488d: call 0x13d60
0x14892: mov esi,dword ptr [r14]
0x14895: mov r8,rax
0x14898: mov eax,0x0
0x1489d: lea rdx,[rip+0x31b4]
0x148a4: mov rcx,r13
0x148a7: cmp esi,0x16
0x148aa: cmove esi,eax
0x148ad: test ebx,ebx
0x148af: mov eax,0x1
0x148b4: cmove ebx,eax
0x148b7: xor eax,eax
0x148b9: mov edi,ebx
0x148bb: call 0x3760
0x148c0: mov rbp,qword ptr [rsp+0x0]
0x148c4: mov rdx,qword ptr [rsp+0x8]
0x148c9: xor rdx,qword ptr fs:0x28
0x148d2: mov rax,rbp
0x148d5: jne 0x1491b
0x148d7: add rsp,0x18
0x148db: pop rbx
0x148dc: pop rbp
0x148dd: pop r12
0x148df: pop r13
0x148e1: pop r14
0x148e3: pop r15
0x148e5: ret
0x148f0: mov ebp,eax
0x148f2: call 0x32a0
0x148f7: cmp ebp,0x1
0x148fa: mov r14,rax
0x148fd: je 0x14910
0x148ff: cmp ebp,0x3
0x14902: jne 0x1488a
0x14904: mov dword ptr [rax],0x0
0x1490a: jmp 0x1488a
0x14910: mov dword ptr [rax],0x4b
0x14916: jmp 0x1488a
0x1491b: call 0x3420
0x14920: sub rsp,0x10
0x14924: push r9
0x14926: mov r9,r8
0x14929: mov r8,rcx
0x1492c: mov rcx,rdx
0x1492f: mov rdx,rsi
0x14932: mov esi,0xa
0x14937: call 0x14820
0x1493c: add rsp,0x18
0x14940: ret
0x14950: push rbx
0x14951: xor esi,esi
0x14953: xor edi,edi
0x14955: call 0x3520
0x1495a: test rax,rax
0x1495d: mov rbx,rax
0x14960: je 0x14970
0x14962: mov rax,rbx
0x14965: pop rbx
0x14966: ret
0x14970: call 0x32a0
0x14975: cmp dword ptr [rax],0xc
0x14978: jne 0x14962
0x1497a: call 0x147e0
0x1497f: nop
0x14980: push r14
0x14982: push r13
0x14984: movabs r13,0x1000401001
0x1498e: push r12
0x14990: push rbp
0x14991: push rbx
0x14992: xor ebx,ebx
0x14994: sub rsp,0x10
0x14998: mov rax,qword ptr fs:0x28
0x149a1: mov qword ptr [rsp+0x8],rax
0x149a6: xor eax,eax
0x149a8: mov qword ptr [rsp+0x0],0x22
0x149b0: mov r12,rsp
0x149b3: call 0x32a0
0x149b8: mov rbp,rax
0x149bb: nop dword ptr [rax+rax]
0x149c0: mov rdi,rbx
0x149c3: mov rsi,r12
0x149c6: call 0x146f0
0x149cb: mov rsi,qword ptr [rsp+0x0]
0x149cf: mov rdi,rax
0x149d2: mov rbx,rax
0x149d5: lea r14,[rax+rsi-0x2]
0x149da: sub rsi,0x1
0x149de: mov byte ptr [r14],0x0
0x149e2: mov dword ptr [rbp],0x0
0x149e9: call 0x37c0
0x149ee: test eax,eax
0x149f0: jne 0x14a20
0x149f2: cmp byte ptr [r14],0x0
0x149f6: jne 0x149c0
0x149f8: mov rdx,qword ptr [rsp+0x8]
0x149fd: xor rdx,qword ptr fs:0x28
0x14a06: mov rax,rbx
0x14a09: jne 0x14a4c
0x14a0b: add rsp,0x10
0x14a0f: pop rbx
0x14a10: pop rbp
0x14a11: pop r12
0x14a13: pop r13
0x14a15: pop r14
0x14a17: ret
0x14a20: mov r14d,dword ptr [rbp]
0x14a24: cmp r14d,0x24
0x14a28: jbe 0x14a40
0x14a2a: mov rdi,rbx
0x14a2d: xor ebx,ebx
0x14a2f: call 0x3880
0x14a34: mov dword ptr [rbp],r14d
0x14a38: jmp 0x149f8
0x14a40: bt r13,r14
0x14a44: jb 0x149c0
0x14a4a: jmp 0x14a2a
0x14a4c: call 0x3420
0x14b13: movzx r12d,byte ptr [rcx]
0x14b17: test r12b,r12b
0x14b1a: jne 0x14b97
0x14b70: movzx r12d,byte ptr [rbp]
0x14b75: test r12b,r12b
0x14b78: je 0x14b38
0x14b7a: movsx esi,r12b
0x14b7e: mov rdi,r13
0x14b81: xor ebp,ebp
0x14b83: call 0x3450
0x14b88: test rax,rax
0x14b8b: mov ebx,0x1
0x14b90: mov rcx,qword ptr [rsp+0x8]
0x14b95: je 0x14b38
0x14b97: movsx esi,r12b
0x14b9b: mov rdi,r13
0x14b9e: mov qword ptr [rsp+0x8],rcx
0x14ba3: call 0x3450
0x14ba8: test rax,rax
0x14bab: mov rcx,qword ptr [rsp+0x8]
0x14bb0: je 0x14c7c
0x14bb6: lea eax,[r12-0x45]
0x14bbb: cmp al,0x2f
0x14bbd: ja 0x14c10
0x14bbf: movabs rdx,0x814400308945
0x14bc9: bt rdx,rax
0x14bcd: jae 0x14c10
0x14bcf: mov esi,0x30
0x14bd4: mov rdi,r13
0x14bd7: mov qword ptr [rsp+0x8],rcx
0x14bdc: call 0x3450
0x14be1: test rax,rax
0x14be4: mov rcx,qword ptr [rsp+0x8]
0x14be9: je 0x14c10
0x14beb: movzx eax,byte ptr [rcx+0x1]
0x14bef: cmp al,0x44
0x14bf1: je 0x14bff
0x14bf3: cmp al,0x69
0x14bf5: je 0x14dc8
0x14bfb: cmp al,0x42
0x14bfd: jne 0x14c10
0x14bff: mov edi,0x2
0x14c04: mov esi,0x3e8
0x14c09: jmp 0x14c1a
0x14c10: mov edi,0x1
0x14c15: mov esi,0x400
0x14c1a: sub r12d,0x42
0x14c1e: cmp r12b,0x35
0x14c22: ja 0x14c7c
0x14c24: lea rdx,[rip+0x5f7d]
0x14c2b: movzx r12d,r12b
0x14c2f: movsxd rax,dword ptr [rdx+r12*4]
0x14c33: add rax,rdx
0x14c36: jmp rax
0x14c38: mov rax,rbx
0x14c3b: mul rsi
0x14c3e: jo 0x14e31
0x14c44: xor r8d,r8d
0x14c47: mul rsi
0x14c4a: jo 0x14e22
0x14c50: mov rbx,rax
0x14c53: or ebp,r8d
0x14c56: nop word ptr cs:[rax+rax]
0x14c60: movsxd rdi,edi
0x14c63: mov eax,ebp
0x14c65: add rcx,rdi
0x14c68: or eax,0x2
0x14c6b: mov qword ptr [r15],rcx
0x14c6e: cmp byte ptr [rcx],0x0
0x14c71: mov qword ptr [r14],rbx
0x14c74: cmovne ebp,eax
0x14c77: jmp 0x14b3d
0x14c7c: mov qword ptr [r14],rbx
0x14c7f: or ebp,0x2
0x14c82: jmp 0x14b3d
0x14c87: mov edx,0x2
0x14c8c: mov rax,rdx
0x14c8f: mul rbx
0x14c92: jo 0x14d2e
0x14c98: add rbx,rbx
0x14c9b: jmp 0x14c60
0x14c9d: mov edx,0x200
0x14ca2: mov rax,rdx
0x14ca5: mul rbx
0x14ca8: jo 0x14d2e
0x14cae: shl rbx,0x9
0x14cb2: jmp 0x14c60
0x14cb4: mov r8d,0x7
0x14cba: xor r9d,r9d
0x14cbd: nop dword ptr [rax]
0x14cc0: mov rax,rbx
0x14cc3: mul rsi
0x14cc6: mov rbx,rax
0x14cc9: jo 0x14e5e
0x14ccf: sub r8d,0x1
0x14cd3: jne 0x14cc0
0x14cd5: or ebp,r9d
0x14cd8: jmp 0x14c60
0x14cda: mov r8d,0x8
0x14ce0: xor r9d,r9d
0x14ce3: nop dword ptr [rax+rax]
0x14ce8: mov rax,rbx
0x14ceb: mul rsi
0x14cee: mov rbx,rax
0x14cf1: jo 0x14e40
0x14cf7: sub r8d,0x1
0x14cfb: jne 0x14ce8
0x14cfd: jmp 0x14cd5
0x14cff: mov r8d,0x4
0x14d05: xor r9d,r9d
0x14d08: mov rax,rbx
0x14d0b: mul rsi
0x14d0e: mov rbx,rax
0x14d11: jo 0x14e13
0x14d17: sub r8d,0x1
0x14d1b: jne 0x14d08
0x14d1d: jmp 0x14cd5
0x14d1f: mov rax,rbx
0x14d22: mul rsi
0x14d25: mov rbx,rax
0x14d28: jno 0x14c60
0x14d2e: mov ebp,0x1
0x14d33: or rbx,0xffffffffffffffff
0x14d37: jmp 0x14c60
0x14d40: mov r8d,0x5
0x14d46: xor r9d,r9d
0x14d49: mov rax,rbx
0x14d4c: mul rsi
0x14d4f: mov rbx,rax
0x14d52: jo 0x14e4f
0x14d58: sub r8d,0x1
0x14d5c: jne 0x14d49
0x14d5e: jmp 0x14cd5
0x14d63: mov r8d,0x6
0x14d69: xor r9d,r9d
0x14d6c: mov rax,rbx
0x14d6f: mul rsi
0x14d72: mov rbx,rax
0x14d75: jo 0x14e04
0x14d7b: sub r8d,0x1
0x14d7f: jne 0x14d6c
0x14d81: jmp 0x14cd5
0x14d86: mov edx,0x400
0x14d8b: mov rax,rdx
0x14d8e: mul rbx
0x14d91: jo 0x14d2e
0x14d93: shl rbx,0xa
0x14d97: jmp 0x14c60
0x14d9c: mov rax,rbx
0x14d9f: mul rsi
0x14da2: jo 0x14e6d
0x14da8: xor r8d,r8d
0x14dab: mul rsi
0x14dae: jno 0x14c47
0x14db4: mov r8d,0x1
0x14dba: or rax,0xffffffffffffffff
0x14dbe: jmp 0x14c47
0x14dc8: xor edi,edi
0x14dca: cmp byte ptr [rcx+0x2],0x42
0x14dce: mov esi,0x400
0x14dd3: sete dil
0x14dd7: lea edi,[rdi+rdi+0x1]
0x14ddb: jmp 0x14c1a
0x14de0: call 0x3420
0x14de5: lea rcx,[rip+0x5e94]
0x14dec: lea rsi,[rip+0x5d6d]
0x14df3: lea rdi,[rip+0x5d86]
0x14dfa: mov edx,0x54
0x14dff: call 0x34d0
0x14e04: mov r9d,0x1
0x14e0a: or rbx,0xffffffffffffffff
0x14e0e: jmp 0x14d7b
0x14e13: mov r9d,0x1
0x14e19: or rbx,0xffffffffffffffff
0x14e1d: jmp 0x14d17
0x14e22: mov r8d,0x1
0x14e28: or rbx,0xffffffffffffffff
0x14e2c: jmp 0x14c53
0x14e31: or rax,0xffffffffffffffff
0x14e35: mov r8d,0x1
0x14e3b: jmp 0x14c47
0x14e40: mov r9d,0x1
0x14e46: or rbx,0xffffffffffffffff
0x14e4a: jmp 0x14cf7
0x14e4f: mov r9d,0x1
0x14e55: or rbx,0xffffffffffffffff
0x14e59: jmp 0x14d58
0x14e5e: mov r9d,0x1
0x14e64: or rbx,0xffffffffffffffff
0x14e68: jmp 0x14ccf
0x14e6d: mov r8d,0x1
0x14e73: or rax,0xffffffffffffffff
0x14e77: jmp 0x14dab
0x14e80: push r13
0x14e82: push r12
0x14e84: mov r10d,esi
0x14e87: push rbp
0x14e88: push rbx
0x14e89: mov r12,r8
0x14e8c: sub rsp,0x18
0x14e90: mov rax,qword ptr fs:0x28
0x14e99: mov qword ptr [rsp+0x8],rax
0x14e9e: xor eax,eax
0x14ea0: cmp edi,0x3
0x14ea3: mov ebp,dword ptr [rip+0x20b34f]
0x14ea9: ja 0x14f04
0x14eab: cmp edi,0x2
0x14eae: jae 0x14efb
0x14eb0: sub edi,0x1
0x14eb3: lea rsi,[rip+0x5dea]
0x14eba: jne 0x14ef6
0x14ebc: test r10d,r10d
0x14ebf: movsxd rax,r10d
0x14ec2: js 0x14f12
0x14ec4: shl rax,0x5
0x14ec8: lea rbx,[rip+0x5df2]
0x14ecf: mov r13,qword ptr [rcx+rax]
0x14ed3: mov edx,0x5
0x14ed8: xor edi,edi
0x14eda: call 0x33e0
0x14edf: mov r9,r12
0x14ee2: mov rdx,rax
0x14ee5: mov r8,r13
0x14ee8: mov rcx,rbx
0x14eeb: xor esi,esi
0x14eed: mov edi,ebp
0x14eef: xor eax,eax
0x14ef1: call 0x3760
0x14ef6: call 0x3290
0x14efb: lea rsi,[rip+0x5dc6]
0x14f02: jmp 0x14ebc
0x14f04: cmp edi,0x4
0x14f07: lea rsi,[rip+0x5d7b]
0x14f0e: je 0x14ebc
0x14f10: jmp 0x14ef6
0x14f12: lea rbx,[rip+0x5da8]
0x14f19: mov byte ptr [rsp+0x6],dl
0x14f1d: mov byte ptr [rsp+0x7],0x0
0x14f22: lea r13,[rsp+0x6]
0x14f27: sub rbx,rax
0x14f2a: jmp 0x14ed3
0x152b0: call 0x3420
0x152b5: lea rcx,[rip+0x5b0c]
0x152bc: lea rsi,[rip+0x589d]
0x152c3: lea rdi,[rip+0x58b6]
0x152ca: mov edx,0x54
0x152cf: call 0x34d0
0x153ce: call 0x3420
0x153e0: lea rsi,[rip+0x5768]
0x153e7: sub rsp,0x8
0x153eb: mov edx,0x5
0x153f0: xor edi,edi
0x153f2: call 0x33e0
0x153f7: mov rdi,qword ptr [rip+0x20aec2]
0x153fe: lea rdx,[rip+0x53eb]
0x15405: mov rcx,rax
0x15408: mov esi,0x1
0x1540d: xor eax,eax
0x1540f: call 0x3800
0x15414: mov edi,dword ptr [rip+0x20adde]
0x1541a: call 0x37e0
0x15420: test byte ptr [rdi+0x50],0x1
0x15424: mov rax,qword ptr [rdi+0x38]
0x15428: jne 0x15430
0x1542a: mov rdi,rsi
0x1542d: jmp rax
0x15430: mov rdi,qword ptr [rdi+0x48]
0x15434: jmp rax
0x15440: test byte ptr [rdi+0x50],0x1
0x15444: mov rax,qword ptr [rdi+0x40]
0x15448: jne 0x15450
0x1544a: mov rdi,rsi
0x1544d: jmp rax
0x15450: mov rdi,qword ptr [rdi+0x48]
0x15454: jmp rax
0x15460: test rdx,rdx
0x15463: push r12
0x15465: push rbp
0x15466: push rbx
0x15467: mov rbx,rdi
0x1546a: je 0x154d0
0x1546c: lea r12,[rdx-0x1]
0x15470: mov rbp,rdx
0x15473: test rsi,rsi
0x15476: mov eax,0xfe0
0x1547b: mov qword ptr [rbx+0x30],r12
0x1547f: cmove rsi,rax
0x15483: mov rdi,rbx
0x15486: mov qword ptr [rbx],rsi
0x15489: call 0x15420
0x1548e: test rax,rax
0x15491: mov qword ptr [rbx+0x8],rax
0x15495: je 0x154dd
0x15497: lea rdx,[rax+r12+0x10]
0x1549c: neg rbp
0x1549f: and rbp,rdx
0x154a2: mov rdx,qword ptr [rbx]
0x154a5: mov qword ptr [rbx+0x10],rbp
0x154a9: mov qword ptr [rbx+0x18],rbp
0x154ad: add rdx,rax
0x154b0: mov qword ptr [rax],rdx
0x154b3: mov qword ptr [rbx+0x20],rdx
0x154b7: mov qword ptr [rax+0x8],0x0
0x154bf: mov eax,0x1
0x154c4: and byte ptr [rbx+0x50],0xf9
0x154c8: pop rbx
0x154c9: pop rbp
0x154ca: pop r12
0x154cc: ret
0x154d0: mov r12d,0xf
0x154d6: mov ebp,0x10
0x154db: jmp 0x15473
0x154dd: call qword ptr [rip+0x20ad7d]
0x154e3: nop dword ptr [rax]
0x154e6: nop word ptr cs:[rax+rax]
0x154f0: and byte ptr [rdi+0x50],0xfe
0x154f4: mov qword ptr [rdi+0x38],rcx
0x154f8: mov qword ptr [rdi+0x40],r8
0x154fc: jmp 0x15460
0x15510: or byte ptr [rdi+0x50],0x1
0x15514: mov qword ptr [rdi+0x38],rcx
0x15518: mov qword ptr [rdi+0x40],r8
0x1551c: mov qword ptr [rdi+0x48],r9
0x15520: jmp 0x15460
0x15530: push r14
0x15532: push r13
0x15534: xor edx,edx
0x15536: push r12
0x15538: push rbp
0x15539: push rbx
0x1553a: mov rbx,qword ptr [rdi+0x18]
0x1553e: sub rbx,qword ptr [rdi+0x10]
0x15542: mov rbp,qword ptr [rdi+0x8]
0x15546: add rsi,rbx
0x15549: mov rcx,rbx
0x1554c: setb dl
0x1554f: add rsi,qword ptr [rdi+0x30]
0x15553: setb al
0x15556: shr rcx,0x3
0x1555a: cmp qword ptr [rdi],rsi
0x1555d: lea r12,[rsi+rcx+0x64]
0x15562: cmovae rsi,qword ptr [rdi]
0x15566: cmp rsi,r12
0x15569: cmovae r12,rsi
0x1556d: test rdx,rdx
0x15570: jne 0x15615
0x15576: movzx eax,al
0x15579: test rax,rax
0x1557c: jne 0x15615
0x15582: mov rsi,r12
0x15585: mov r13,rdi
0x15588: call 0x15420
0x1558d: test rax,rax
0x15590: mov r14,rax
0x15593: je 0x15615
0x15599: lea rsi,[rax+r12]
0x1559d: mov qword ptr [r13+0x8],rax
0x155a1: mov qword ptr [rax+0x8],rbp
0x155a5: mov rdx,rbx
0x155a8: mov qword ptr [r13+0x20],rsi
0x155ac: mov qword ptr [rax],rsi
0x155af: mov rax,qword ptr [r13+0x30]
0x155b3: mov rsi,qword ptr [r13+0x10]
0x155b7: lea r12,[r14+rax+0x10]
0x155bc: not rax
0x155bf: and r12,rax
0x155c2: mov rdi,r12
0x155c5: call 0x35f0
0x155ca: test byte ptr [r13+0x50],0x2
0x155cf: jne 0x155e6
0x155d1: mov rax,qword ptr [r13+0x30]
0x155d5: lea rdx,[rbp+rax+0x10]
0x155da: not rax
0x155dd: and rax,rdx
0x155e0: cmp qword ptr [r13+0x10],rax
0x155e4: je 0x15600
0x155e6: and byte ptr [r13+0x50],0xfd
0x155eb: add rbx,r12
0x155ee: mov qword ptr [r13+0x10],r12
0x155f2: mov qword ptr [r13+0x18],rbx
0x155f6: pop rbx
0x155f7: pop rbp
0x155f8: pop r12
0x155fa: pop r13
0x155fc: pop r14
0x155fe: ret
0x15600: mov rax,qword ptr [rbp+0x8]
0x15604: mov rsi,rbp
0x15607: mov rdi,r13
0x1560a: mov qword ptr [r14+0x8],rax
0x1560e: call 0x15440
0x15613: jmp 0x155e6
0x15615: call qword ptr [rip+0x20ac45]
0x1561b: nop dword ptr [rax+rax]
0x15620: mov rax,qword ptr [rdi+0x8]
0x15624: test rax,rax
0x15627: je 0x15656
0x15629: nop dword ptr [rax]
0x15630: cmp rsi,rax
0x15633: jbe 0x1563a
0x15635: cmp qword ptr [rax],rsi
0x15638: jae 0x15650
0x1563a: mov rax,qword ptr [rax+0x8]
0x1563e: test rax,rax
0x15641: jne 0x15630
0x15643: xor eax,eax
0x15645: ret
0x15650: mov eax,0x1
0x15655: ret
0x15656: ret
0x15660: push r12
0x15662: push rbp
0x15663: mov rbp,rsi
0x15666: push rbx
0x15667: mov rsi,qword ptr [rdi+0x8]
0x1566b: mov rbx,rdi
0x1566e: test rsi,rsi
0x15671: je 0x1569d
0x15673: nop dword ptr [rax+rax]
0x15678: cmp rsi,rbp
0x1567b: jae 0x15685
0x1567d: mov rax,qword ptr [rsi]
0x15680: cmp rax,rbp
0x15683: jae 0x156b0
0x15685: mov r12,qword ptr [rsi+0x8]
0x15689: mov rdi,rbx
0x1568c: call 0x15440
0x15691: or byte ptr [rbx+0x50],0x2
0x15695: test r12,r12
0x15698: mov rsi,r12
0x1569b: jne 0x15678
0x1569d: test rbp,rbp
0x156a0: jne 0x156c5
0x156a2: pop rbx
0x156a3: pop rbp
0x156a4: pop r12
0x156a6: ret
0x156b0: mov qword ptr [rbx+0x18],rbp
0x156b4: mov qword ptr [rbx+0x10],rbp
0x156b8: mov qword ptr [rbx+0x20],rax
0x156bc: mov qword ptr [rbx+0x8],rsi
0x156c0: pop rbx
0x156c1: pop rbp
0x156c2: pop r12
0x156c4: ret
0x156c5: call 0x3290
0x156d0: mov rdx,qword ptr [rdi+0x8]
0x156d4: xor eax,eax
0x156d6: test rdx,rdx
0x156d9: je 0x156f8
0x156db: nop dword ptr [rax+rax]
0x156e0: mov rcx,qword ptr [rdx]
0x156e3: sub rcx,rdx
0x156e6: mov rdx,qword ptr [rdx+0x8]
0x156ea: add rax,rcx
0x156ed: test rdx,rdx
0x156f0: jne 0x156e0
0x156f2: ret
0x156f8: ret
0x15700: test rdi,rdi
0x15703: je 0x15720
0x15705: mov rsi,rdi
0x15708: lea rdi,[rip+0x24ad]
0x1570f: mov edx,0x1
0x15714: jmp 0x3380
0x15720: lea rdi,[rip+0x2495]
0x15727: jmp 0x3780
0x15730: test rdi,rdi
0x15733: je 0x15758
0x15735: push rbx
0x15736: nop word ptr cs:[rax+rax]
0x15740: mov rbx,qword ptr [rdi]
0x15743: call 0x3880
0x15748: test rbx,rbx
0x1574b: mov rdi,rbx
0x1574e: jne 0x15740
0x15750: pop rbx
0x15751: ret
0x15758: ret
0x15760: push r13
0x15762: push r12
0x15764: push rbp
0x15765: push rbx
0x15766: mov rbp,rdi
0x15769: sub rsp,0x8
0x1576d: call 0x32a0
0x15772: cmp byte ptr [rbp+0x8],0x0
0x15776: mov rbx,rax
0x15779: mov r12d,dword ptr [rax]
0x1577c: lea rdi,[rbp+0x9]
0x15780: jne 0x15784
0x15782: xor edi,edi
0x15784: call 0x15700
0x15789: test eax,eax
0x1578b: je 0x157b0
0x1578d: mov r12d,dword ptr [rbx]
0x15790: xor r13d,r13d
0x15793: mov rdi,rbp
0x15796: call 0x15730
0x1579b: mov dword ptr [rbx],r12d
0x1579e: add rsp,0x8
0x157a2: mov eax,r13d
0x157a5: pop rbx
0x157a6: pop rbp
0x157a7: pop r12
0x157a9: pop r13
0x157ab: ret
0x157b0: call 0x3610
0x157b5: mov r13d,0x1
0x157bb: jmp 0x15793
0x157c0: test rdi,rdi
0x157c3: push r12
0x157c5: push rbp
0x157c6: push rbx
0x157c7: je 0x15828
0x157c9: mov r12,rdi
0x157cc: call 0x3400
0x157d1: lea rbp,[rax+0x1]
0x157d5: mov edi,0x76
0x157da: cmp rbp,0x76
0x157de: cmovae rdi,rbp
0x157e2: add rdi,0x11
0x157e6: and rdi,0xfffffffffffffff8
0x157ea: call 0x3888
0x157ef: test rax,rax
0x157f2: mov rbx,rax
0x157f5: je 0x1581b
0x157f7: mov qword ptr [rax],0x0
0x157fe: lea rdi,[rbx+0x9]
0x15802: mov eax,0x1
0x15807: mov word ptr [rbx+0x8],ax
0x1580b: mov rdx,rbp
0x1580e: mov rsi,r12
0x15811: call 0x35f0
0x15816: mov byte ptr [rbx+rbp+0x9],0x0
0x1581b: mov rax,rbx
0x1581e: pop rbx
0x1581f: pop rbp
0x15820: pop r12
0x15822: ret
0x15828: mov edi,0x80
0x1582d: call 0x3888
0x15832: test rax,rax
0x15835: mov rbx,rax
0x15838: je 0x1581b
0x1583a: xor edx,edx
0x1583c: mov qword ptr [rbx],0x0
0x15843: mov rax,rbx
0x15846: mov word ptr [rbx+0x8],dx
0x1584a: pop rbx
0x1584b: pop rbp
0x1584c: pop r12
0x1584e: ret
0x15850: push r15
0x15852: push r14
0x15854: mov eax,0x1
0x15859: push r13
0x1585b: push r12
0x1585d: push rbp
0x1585e: push rbx
0x1585f: sub rsp,0x8
0x15863: mov rbp,qword ptr [rsi+0x30]
0x15867: test rbp,rbp
0x1586a: je 0x15900
0x15870: cmp rsi,rbp
0x15873: mov r12,rdi
0x15876: mov r13,rsi
0x15879: ja 0x15884
0x1587b: lea rdx,[rsi+0x38]
0x1587f: cmp rbp,rdx
0x15882: jb 0x15900
0x15884: cmp byte ptr [rbp],0x0
0x15888: lea rbx,[r12+0x9]
0x1588d: je 0x158f0
0x1588f: nop
0x15890: mov rsi,rbp
0x15893: mov rdi,rbx
0x15896: call 0x3590
0x1589b: test eax,eax
0x1589d: je 0x158f7
0x1589f: cmp byte ptr [rbx],0x0
0x158a2: jne 0x158b6
0x158a4: lea r14,[r12+0x9]
0x158a9: cmp r14,rbx
0x158ac: jne 0x15910
0x158ae: cmp byte ptr [r12+0x8],0x0
0x158b4: je 0x15910
0x158b6: mov rdi,rbx
0x158b9: call 0x3400
0x158be: lea rbx,[rbx+rax+0x1]
0x158c3: cmp byte ptr [rbx],0x0
0x158c6: jne 0x15890
0x158c8: mov rax,qword ptr [r12]
0x158cc: test rax,rax
0x158cf: je 0x15890
0x158d1: lea rbx,[rax+0x9]
0x158d5: mov rsi,rbp
0x158d8: mov r12,rax
0x158db: mov rdi,rbx
0x158de: call 0x3590
0x158e3: test eax,eax
0x158e5: jne 0x1589f
0x158e7: jmp 0x158f7
0x158f0: lea rbx,[rip+0x1fbc]
0x158f7: mov qword ptr [r13+0x30],rbx
0x158fb: mov eax,0x1
0x15900: add rsp,0x8
0x15904: pop rbx
0x15905: pop rbp
0x15906: pop r12
0x15908: pop r13
0x1590a: pop r14
0x1590c: pop r15
0x1590e: ret
0x15910: mov rdi,rbp
0x15913: call 0x3400
0x15918: lea rdx,[rax+0x1]
0x1591c: mov r15,rax
0x1591f: mov rax,rbx
0x15922: sub rax,r14
0x15925: mov rcx,rax
0x15928: not rcx
0x1592b: cmp rcx,rdx
0x1592e: jb 0x15960
0x15930: add rax,rdx
0x15933: cmp rax,0x76
0x15937: jbe 0x15970
0x15939: mov rdi,rbp
0x1593c: call 0x157c0
0x15941: mov rbx,rax
0x15944: mov qword ptr [r12],rax
0x15948: xor eax,eax
0x1594a: test rbx,rbx
0x1594d: je 0x15900
0x1594f: mov byte ptr [rbx+0x8],0x0
0x15953: add rbx,0x9
0x15957: jmp 0x158f7
0x15960: call 0x32a0
0x15965: mov dword ptr [rax],0xc
0x1596b: xor eax,eax
0x1596d: jmp 0x15900
0x15970: mov rsi,rbp
0x15973: mov rdi,rbx
0x15976: call 0x35f0
0x1597b: mov byte ptr [rbx+r15+0x1],0x0
0x15981: jmp 0x158f7
0x15990: push r12
0x15992: push rbp
0x15993: mov rbp,rdi
0x15996: push rbx
0x15997: lea rdi,[rip+0x221e]
0x1599e: sub rsp,0x10
0x159a2: call 0x3250
0x159a7: test rax,rax
0x159aa: mov rbx,rax
0x159ad: je 0x15a48
0x159b3: cmp byte ptr [rbp+0x8],0x0
0x159b7: jne 0x15a20
0x159b9: mov rdi,rbx
0x159bc: call 0x157c0
0x159c1: test rax,rax
0x159c4: mov r12,rax
0x159c7: je 0x15a0d
0x159c9: xor edi,edi
0x159cb: cmp byte ptr [rbp+0x8],0x0
0x159cf: je 0x159d5
0x159d1: lea rdi,[rbp+0x9]
0x159d5: call 0x15700
0x159da: test eax,eax
0x159dc: je 0x15a68
0x159e2: call 0x32a0
0x159e7: cmp r12,0x1
0x159eb: mov ebx,dword ptr [rax]
0x159ed: je 0x15a08
0x159ef: mov rdi,r12
0x159f2: mov qword ptr [rsp+0x8],rax
0x159f7: call 0x15730
0x159fc: mov rax,qword ptr [rsp+0x8]
0x15a01: nop dword ptr [rax]
0x15a08: mov dword ptr [rax],ebx
0x15a0a: xor r12d,r12d
0x15a0d: add rsp,0x10
0x15a11: mov rax,r12
0x15a14: pop rbx
0x15a15: pop rbp
0x15a16: pop r12
0x15a18: ret
0x15a20: lea rdi,[rbp+0x9]
0x15a24: mov rsi,rax
0x15a27: mov r12d,0x1
0x15a2d: call 0x3590
0x15a32: test eax,eax
0x15a34: jne 0x159b9
0x15a36: add rsp,0x10
0x15a3a: mov rax,r12
0x15a3d: pop rbx
0x15a3e: pop rbp
0x15a3f: pop r12
0x15a41: ret
0x15a48: cmp byte ptr [rbp+0x8],0x0
0x15a4c: mov r12d,0x1
0x15a52: jne 0x159b9
0x15a58: add rsp,0x10
0x15a5c: mov rax,r12
0x15a5f: pop rbx
0x15a60: pop rbp
0x15a61: pop r12
0x15a63: ret
0x15a68: call 0x3610
0x15a6d: jmp 0x15a0d
0x15a70: cmp rdi,0x1
0x15a74: je 0x15a7b
0x15a76: jmp 0x15730
0x15a7b: ret
0x15a80: push r13
0x15a82: push r12
0x15a84: push rbp
0x15a85: push rbx
0x15a86: mov rbp,rsi
0x15a89: sub rsp,0x8
0x15a8d: test rdi,rdi
0x15a90: je 0x15b00
0x15a92: mov r13,rdx
0x15a95: mov rbx,rdi
0x15a98: call 0x15990
0x15a9d: test rax,rax
0x15aa0: mov r12,rax
0x15aa3: je 0x15aee
0x15aa5: mov rsi,r13
0x15aa8: mov rdi,rbp
0x15aab: call 0x32c0
0x15ab0: test rax,rax
0x15ab3: je 0x15ae0
0x15ab5: mov rsi,r13
0x15ab8: mov rdi,rbx
0x15abb: call 0x15850
0x15ac0: test al,al
0x15ac2: je 0x15ae0
0x15ac4: cmp r12,0x1
0x15ac8: jne 0x15b15
0x15aca: add rsp,0x8
0x15ace: mov rax,r13
0x15ad1: pop rbx
0x15ad2: pop rbp
0x15ad3: pop r12
0x15ad5: pop r13
0x15ad7: ret
0x15ae0: cmp r12,0x1
0x15ae4: je 0x15aee
0x15ae6: mov rdi,r12
0x15ae9: call 0x15760
0x15aee: add rsp,0x8
0x15af2: xor eax,eax
0x15af4: pop rbx
0x15af5: pop rbp
0x15af6: pop r12
0x15af8: pop r13
0x15afa: ret
0x15b00: add rsp,0x8
0x15b04: mov rdi,rbp
0x15b07: mov rsi,rdx
0x15b0a: pop rbx
0x15b0b: pop rbp
0x15b0c: pop r12
0x15b0e: pop r13
0x15b10: jmp 0x34b0
0x15b15: mov rdi,r12
0x15b18: call 0x15760
0x15b1d: test al,al
0x15b1f: jne 0x15aca
0x15b21: jmp 0x15aee
0x15b30: push r12
0x15b32: push rbp
0x15b33: push rbx
0x15b34: mov rbx,rsi
0x15b37: sub rsp,0x50
0x15b3b: mov rax,qword ptr fs:0x28
0x15b44: mov qword ptr [rsp+0x48],rax
0x15b49: xor eax,eax
0x15b4b: test rdi,rdi
0x15b4e: je 0x15c50
0x15b54: mov rbp,rdi
0x15b57: call 0x15990
0x15b5c: test rax,rax
0x15b5f: mov r12,rax
0x15b62: je 0x15c60
0x15b68: mov rdi,rbx
0x15b6b: call 0x36b0
0x15b70: cmp rax,0xffffffffffffffff
0x15b74: mov qword ptr [rsp+0x8],rax
0x15b79: je 0x15bd0
0x15b7b: mov rsi,rbx
0x15b7e: mov rdi,rbp
0x15b81: call 0x15850
0x15b86: test al,al
0x15b88: jne 0x15b93
0x15b8a: mov qword ptr [rsp+0x8],0xffffffffffffffff
0x15b93: cmp r12,0x1
0x15b97: je 0x15ba9
0x15b99: mov rdi,r12
0x15b9c: call 0x15760
0x15ba1: test al,al
0x15ba3: je 0x15c60
0x15ba9: mov rax,qword ptr [rsp+0x8]
0x15bae: mov rcx,qword ptr [rsp+0x48]
0x15bb3: xor rcx,qword ptr fs:0x28
0x15bbc: jne 0x15c6c
0x15bc2: add rsp,0x50
0x15bc6: pop rbx
0x15bc7: pop rbp
0x15bc8: pop r12
0x15bca: ret
0x15bd0: lea rsi,[rsp+0x10]
0x15bd5: lea rdi,[rsp+0x8]
0x15bda: call 0x32c0
0x15bdf: test rax,rax
0x15be2: je 0x15b93
0x15be4: mov eax,dword ptr [rbx]
0x15be6: mov edx,dword ptr [rbx+0x4]
0x15be9: xor eax,dword ptr [rsp+0x10]
0x15bed: xor edx,dword ptr [rsp+0x14]
0x15bf1: mov ecx,dword ptr [rsp+0x30]
0x15bf5: or eax,edx
0x15bf7: mov edx,dword ptr [rbx+0x8]
0x15bfa: xor edx,dword ptr [rsp+0x18]
0x15bfe: or eax,edx
0x15c00: mov edx,dword ptr [rbx+0xc]
0x15c03: xor edx,dword ptr [rsp+0x1c]
0x15c07: or eax,edx
0x15c09: mov edx,dword ptr [rbx+0x10]
0x15c0c: xor edx,dword ptr [rsp+0x20]
0x15c10: or eax,edx
0x15c12: mov edx,dword ptr [rbx+0x14]
0x15c15: xor edx,dword ptr [rsp+0x24]
0x15c19: or eax,edx
0x15c1b: mov edx,dword ptr [rbx+0x20]
0x15c1e: test edx,edx
0x15c20: sete dil
0x15c24: test ecx,ecx
0x15c26: sete sil
0x15c2a: cmp dil,sil
0x15c2d: je 0x15c3b
0x15c2f: test edx,edx
0x15c31: js 0x15c3b
0x15c33: test ecx,ecx
0x15c35: jns 0x15b93
0x15c3b: test eax,eax
0x15c3d: je 0x15b7b
0x15c43: jmp 0x15b93
0x15c50: mov rdi,rsi
0x15c53: call 0x3720
0x15c58: jmp 0x15bae
0x15c60: mov rax,0xffffffffffffffff
0x15c67: jmp 0x15bae
0x15c6c: call 0x3420
0x15c80: push r12
0x15c82: push rbp
0x15c83: mov rbp,rdi
0x15c86: push rbx
0x15c87: call 0x32f0
0x15c8c: mov ebx,dword ptr [rbp]
0x15c8f: mov rdi,rbp
0x15c92: mov r12,rax
0x15c95: call 0x15da0
0x15c9a: and ebx,0x20
0x15c9d: test ebx,ebx
0x15c9f: jne 0x15cb8
0x15ca1: test eax,eax
0x15ca3: je 0x15caf
0x15ca5: test r12,r12
0x15ca8: mov eax,0xffffffff
0x15cad: je 0x15ce8
0x15caf: pop rbx
0x15cb0: pop rbp
0x15cb1: pop r12
0x15cb3: ret
0x15cb8: test eax,eax
0x15cba: jne 0x15cd8
0x15cbc: call 0x32a0
0x15cc1: mov dword ptr [rax],0x0
0x15cc7: mov eax,0xffffffff
0x15ccc: pop rbx
0x15ccd: pop rbp
0x15cce: pop r12
0x15cd0: ret
0x15cd8: pop rbx
0x15cd9: mov eax,0xffffffff
0x15cde: pop rbp
0x15cdf: pop r12
0x15ce1: ret
0x15ce8: call 0x32a0
0x15ced: cmp dword ptr [rax],0x9
0x15cf0: pop rbx
0x15cf1: pop rbp
0x15cf2: pop r12
0x15cf4: setne al
0x15cf7: movzx eax,al
0x15cfa: neg eax
0x15cfc: ret
0x15d00: sub rsp,0x8
0x15d04: call 0xccb0
0x15d09: test rax,rax
0x15d0c: je 0x15d13
0x15d0e: add rsp,0x8
0x15d12: ret
0x15d13: call 0x147e0
0x15d18: nop dword ptr [rax+rax]
0x15d20: movsx rcx,byte ptr [rdi]
0x15d24: test cl,cl
0x15d26: je 0x15d50
0x15d28: xor eax,eax
0x15d2a: nop word ptr [rax+rax]
0x15d30: rol rax,0x9
0x15d34: add rdi,0x1
0x15d38: add rax,rcx
0x15d3b: movsx rcx,byte ptr [rdi]
0x15d3f: test cl,cl
0x15d41: jne 0x15d30
0x15d43: xor edx,edx
0x15d45: div rsi
0x15d48: mov rax,rdx
0x15d4b: ret
0x15d50: xor edx,edx
0x15d52: mov rax,rdx
0x15d55: ret
0x15da0: push r12
0x15da2: push rbp
0x15da3: push rbx
0x15da4: mov rbx,rdi
0x15da7: call 0x3620
0x15dac: test eax,eax
0x15dae: mov rdi,rbx
0x15db1: js 0x15e07
0x15db3: call 0x36c0
0x15db8: test eax,eax
0x15dba: jne 0x15de8
0x15dbc: mov rdi,rbx
0x15dbf: call 0x15e20
0x15dc4: test eax,eax
0x15dc6: je 0x15e04
0x15dc8: call 0x32a0
0x15dcd: mov r12d,dword ptr [rax]
0x15dd0: mov rdi,rbx
0x15dd3: mov rbp,rax
0x15dd6: call 0x33a0
0x15ddb: test r12d,r12d
0x15dde: jne 0x15e10
0x15de0: pop rbx
0x15de1: pop rbp
0x15de2: pop r12
0x15de4: ret
0x15de8: mov rdi,rbx
0x15deb: call 0x3620
0x15df0: xor esi,esi
0x15df2: mov edx,0x1
0x15df7: mov edi,eax
0x15df9: call 0x34c0
0x15dfe: cmp rax,0xffffffffffffffff
0x15e02: jne 0x15dbc
0x15e04: mov rdi,rbx
0x15e07: pop rbx
0x15e08: pop rbp
0x15e09: pop r12
0x15e0b: jmp 0x33a0
0x15e10: mov dword ptr [rbp],r12d
0x15e14: mov eax,0xffffffff
0x15e19: jmp 0x15de0
0x15e20: test rdi,rdi
0x15e23: push rbx
0x15e24: mov rbx,rdi
0x15e27: je 0x15e3a
0x15e29: call 0x36c0
0x15e2e: test eax,eax
0x15e30: je 0x15e3a
0x15e32: test dword ptr [rbx],0x100
0x15e38: jne 0x15e48
0x15e3a: mov rdi,rbx
0x15e3d: pop rbx
0x15e3e: jmp 0x3670
0x15e48: mov rdi,rbx
0x15e4b: mov edx,0x1
0x15e50: xor esi,esi
0x15e52: call 0x15e60
0x15e57: mov rdi,rbx
0x15e5a: pop rbx
0x15e5b: jmp 0x3670
0x15e60: mov rax,qword ptr [rdi+0x8]
0x15e64: cmp qword ptr [rdi+0x10],rax
0x15e68: je 0x15e70
0x15e6a: jmp 0x3770
0x15e70: mov rax,qword ptr [rdi+0x20]
0x15e74: cmp qword ptr [rdi+0x28],rax
0x15e78: jne 0x15e6a
0x15e7a: cmp qword ptr [rdi+0x48],0x0
0x15e7f: jne 0x15e6a
0x15e81: push r12
0x15e83: push rbp
0x15e84: mov r12d,edx
0x15e87: push rbx
0x15e88: mov rbp,rsi
0x15e8b: mov rbx,rdi
0x15e8e: call 0x3620
0x15e93: mov edx,r12d
0x15e96: mov rsi,rbp
0x15e99: mov edi,eax
0x15e9b: call 0x34c0
0x15ea0: cmp rax,0xffffffffffffffff
0x15ea4: je 0x15eb2
0x15ea6: and dword ptr [rbx],0xffffffef
0x15ea9: mov qword ptr [rbx+0x90],rax
0x15eb0: xor eax,eax
0x15eb2: pop rbx
0x15eb3: pop rbp
0x15eb4: pop r12
0x15eb6: ret
0x15ec0: push r15
0x15ec2: push r14
0x15ec4: mov r15,rdx
0x15ec7: push r13
0x15ec9: push r12
0x15ecb: lea r12,[rip+0x20917e]
0x15ed2: push rbp
0x15ed3: lea rbp,[rip+0x20917e]
0x15eda: push rbx
0x15edb: mov r13d,edi
0x15ede: mov r14,rsi
0x15ee1: sub rbp,r12
0x15ee4: sub rsp,0x8
0x15ee8: sar rbp,0x3
0x15eec: call _init
0x15ef1: test rbp,rbp
0x15ef4: je 0x15f16
0x15ef6: xor ebx,ebx
0x15ef8: nop dword ptr [rax+rax]
0x15f00: mov rdx,r15
0x15f03: mov rsi,r14
0x15f06: mov edi,r13d
0x15f09: call qword ptr [r12+rbx*8]
0x15f0d: add rbx,0x1
0x15f11: cmp rbp,rbx
0x15f14: jne 0x15f00
0x15f16: add rsp,0x8
0x15f1a: pop rbx
0x15f1b: pop rbp
0x15f1c: pop r12
0x15f1e: pop r13
0x15f20: pop r14
0x15f22: pop r15
0x15f24: ret
0x15f30: ret
18292
3156
65
