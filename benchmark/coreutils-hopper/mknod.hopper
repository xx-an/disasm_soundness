
/*
--------------------------------------------------------------------------------

        File: /home/cindy/Documents/Projects/DSV/benchmark/coreutils-build/mknod
        UUID: DF0AC0BC-2FD3-F32B-B528-B58911FF169A
        Analysis version 58
        ELF file
        CPU: intel/x86_64
        64 bits addresses (Little Endian)

--------------------------------------------------------------------------------
*/



        ; Segment Segment 2
        ; Range: [0x0; 0x76e8[ (30440 bytes)
        ; File offset : [0; 30440[ (30440 bytes)
        ; Permissions: readable / executable
        ; Flags: 0x5

0000000000000000         db  0x7f ; '.'
0000000000000001         db  0x45 ; 'E'
0000000000000002         db  0x4c ; 'L'
0000000000000003         db  0x46 ; 'F'
0000000000000004         db  0x02 ; '.'
0000000000000005         db  0x01 ; '.'
0000000000000006         db  0x01 ; '.'
0000000000000007         db  0x00 ; '.'
0000000000000008         db  0x00 ; '.'
0000000000000009         db  0x00 ; '.'
000000000000000a         db  0x00 ; '.'
000000000000000b         db  0x00 ; '.'
000000000000000c         db  0x00 ; '.'
000000000000000d         db  0x00 ; '.'
000000000000000e         db  0x00 ; '.'
000000000000000f         db  0x00 ; '.'
0000000000000010         db  0x03 ; '.'
0000000000000011         db  0x00 ; '.'
0000000000000012         db  0x3e ; '>'
0000000000000013         db  0x00 ; '.'
0000000000000014         db  0x01 ; '.'
0000000000000015         db  0x00 ; '.'
0000000000000016         db  0x00 ; '.'
0000000000000017         db  0x00 ; '.'
0000000000000018         db  0x40 ; '@'
0000000000000019         db  0x1d ; '.'
000000000000001a         db  0x00 ; '.'
000000000000001b         db  0x00 ; '.'
000000000000001c         db  0x00 ; '.'
000000000000001d         db  0x00 ; '.'
000000000000001e         db  0x00 ; '.'
000000000000001f         db  0x00 ; '.'
0000000000000020         db  0x40 ; '@'
0000000000000021         db  0x00 ; '.'
0000000000000022         db  0x00 ; '.'
0000000000000023         db  0x00 ; '.'
0000000000000024         db  0x00 ; '.'
0000000000000025         db  0x00 ; '.'
0000000000000026         db  0x00 ; '.'
0000000000000027         db  0x00 ; '.'
0000000000000028         db  0x00 ; '.'
0000000000000029         db  0x8c ; '.'
000000000000002a         db  0x02 ; '.'
000000000000002b         db  0x00 ; '.'
000000000000002c         db  0x00 ; '.'
000000000000002d         db  0x00 ; '.'
000000000000002e         db  0x00 ; '.'
000000000000002f         db  0x00 ; '.'
0000000000000030         db  0x00 ; '.'
0000000000000031         db  0x00 ; '.'
0000000000000032         db  0x00 ; '.'
0000000000000033         db  0x00 ; '.'
0000000000000034         db  0x40 ; '@'
0000000000000035         db  0x00 ; '.'
0000000000000036         db  0x38 ; '8'
0000000000000037         db  0x00 ; '.'
0000000000000038         db  0x09 ; '.'
0000000000000039         db  0x00 ; '.'
000000000000003a         db  0x40 ; '@'
000000000000003b         db  0x00 ; '.'
000000000000003c         db  0x25 ; '%'
000000000000003d         db  0x00 ; '.'
000000000000003e         db  0x24 ; '$'
000000000000003f         db  0x00 ; '.'
0000000000000040         db  0x06 ; '.'
0000000000000041         db  0x00 ; '.'
0000000000000042         db  0x00 ; '.'
0000000000000043         db  0x00 ; '.'
0000000000000044         db  0x04 ; '.'
0000000000000045         db  0x00 ; '.'
0000000000000046         db  0x00 ; '.'
0000000000000047         db  0x00 ; '.'
0000000000000048         db  0x40 ; '@'
0000000000000049         db  0x00 ; '.'
000000000000004a         db  0x00 ; '.'
000000000000004b         db  0x00 ; '.'
000000000000004c         db  0x00 ; '.'
000000000000004d         db  0x00 ; '.'
000000000000004e         db  0x00 ; '.'
000000000000004f         db  0x00 ; '.'
0000000000000050         db  0x40 ; '@'
0000000000000051         db  0x00 ; '.'
0000000000000052         db  0x00 ; '.'
0000000000000053         db  0x00 ; '.'
0000000000000054         db  0x00 ; '.'
0000000000000055         db  0x00 ; '.'
0000000000000056         db  0x00 ; '.'
0000000000000057         db  0x00 ; '.'
0000000000000058         db  0x40 ; '@'
0000000000000059         db  0x00 ; '.'
000000000000005a         db  0x00 ; '.'
000000000000005b         db  0x00 ; '.'
000000000000005c         db  0x00 ; '.'
000000000000005d         db  0x00 ; '.'
000000000000005e         db  0x00 ; '.'
000000000000005f         db  0x00 ; '.'
0000000000000060         db  0xf8 ; '.'
0000000000000061         db  0x01 ; '.'
0000000000000062         db  0x00 ; '.'
0000000000000063         db  0x00 ; '.'
0000000000000064         db  0x00 ; '.'
0000000000000065         db  0x00 ; '.'
0000000000000066         db  0x00 ; '.'
0000000000000067         db  0x00 ; '.'
0000000000000068         db  0xf8 ; '.'
0000000000000069         db  0x01 ; '.'
000000000000006a         db  0x00 ; '.'
000000000000006b         db  0x00 ; '.'
000000000000006c         db  0x00 ; '.'
000000000000006d         db  0x00 ; '.'
000000000000006e         db  0x00 ; '.'
000000000000006f         db  0x00 ; '.'
0000000000000070         db  0x08 ; '.'
0000000000000071         db  0x00 ; '.'
0000000000000072         db  0x00 ; '.'
0000000000000073         db  0x00 ; '.'
0000000000000074         db  0x00 ; '.'
0000000000000075         db  0x00 ; '.'
0000000000000076         db  0x00 ; '.'
0000000000000077         db  0x00 ; '.'
0000000000000078         db  0x03 ; '.'
0000000000000079         db  0x00 ; '.'
000000000000007a         db  0x00 ; '.'
000000000000007b         db  0x00 ; '.'
000000000000007c         db  0x04 ; '.'
000000000000007d         db  0x00 ; '.'
000000000000007e         db  0x00 ; '.'
000000000000007f         db  0x00 ; '.'
0000000000000080         db  0x38 ; '8'
0000000000000081         db  0x02 ; '.'
0000000000000082         db  0x00 ; '.'
0000000000000083         db  0x00 ; '.'
0000000000000084         db  0x00 ; '.'
0000000000000085         db  0x00 ; '.'
0000000000000086         db  0x00 ; '.'
0000000000000087         db  0x00 ; '.'
0000000000000088         db  0x38 ; '8'
0000000000000089         db  0x02 ; '.'
000000000000008a         db  0x00 ; '.'
000000000000008b         db  0x00 ; '.'
000000000000008c         db  0x00 ; '.'
000000000000008d         db  0x00 ; '.'
000000000000008e         db  0x00 ; '.'
000000000000008f         db  0x00 ; '.'
0000000000000090         db  0x38 ; '8'
0000000000000091         db  0x02 ; '.'
0000000000000092         db  0x00 ; '.'
0000000000000093         db  0x00 ; '.'
0000000000000094         db  0x00 ; '.'
0000000000000095         db  0x00 ; '.'
0000000000000096         db  0x00 ; '.'
0000000000000097         db  0x00 ; '.'
0000000000000098         db  0x1c ; '.'
0000000000000099         db  0x00 ; '.'
000000000000009a         db  0x00 ; '.'
000000000000009b         db  0x00 ; '.'
000000000000009c         db  0x00 ; '.'
000000000000009d         db  0x00 ; '.'
000000000000009e         db  0x00 ; '.'
000000000000009f         db  0x00 ; '.'
00000000000000a0         db  0x1c ; '.'
00000000000000a1         db  0x00 ; '.'
00000000000000a2         db  0x00 ; '.'
00000000000000a3         db  0x00 ; '.'
00000000000000a4         db  0x00 ; '.'
00000000000000a5         db  0x00 ; '.'
00000000000000a6         db  0x00 ; '.'
00000000000000a7         db  0x00 ; '.'
00000000000000a8         db  0x01 ; '.'
00000000000000a9         db  0x00 ; '.'
00000000000000aa         db  0x00 ; '.'
00000000000000ab         db  0x00 ; '.'
00000000000000ac         db  0x00 ; '.'
00000000000000ad         db  0x00 ; '.'
00000000000000ae         db  0x00 ; '.'
00000000000000af         db  0x00 ; '.'
00000000000000b0         db  0x01 ; '.'
00000000000000b1         db  0x00 ; '.'
00000000000000b2         db  0x00 ; '.'
00000000000000b3         db  0x00 ; '.'
00000000000000b4         db  0x05 ; '.'
00000000000000b5         db  0x00 ; '.'
00000000000000b6         db  0x00 ; '.'
00000000000000b7         db  0x00 ; '.'
00000000000000b8         db  0x00 ; '.'
00000000000000b9         db  0x00 ; '.'
00000000000000ba         db  0x00 ; '.'
00000000000000bb         db  0x00 ; '.'
00000000000000bc         db  0x00 ; '.'
00000000000000bd         db  0x00 ; '.'
00000000000000be         db  0x00 ; '.'
00000000000000bf         db  0x00 ; '.'
00000000000000c0         db  0x00 ; '.'
00000000000000c1         db  0x00 ; '.'
00000000000000c2         db  0x00 ; '.'
00000000000000c3         db  0x00 ; '.'
00000000000000c4         db  0x00 ; '.'
00000000000000c5         db  0x00 ; '.'
00000000000000c6         db  0x00 ; '.'
00000000000000c7         db  0x00 ; '.'
00000000000000c8         db  0x00 ; '.'
00000000000000c9         db  0x00 ; '.'
00000000000000ca         db  0x00 ; '.'
00000000000000cb         db  0x00 ; '.'
00000000000000cc         db  0x00 ; '.'
00000000000000cd         db  0x00 ; '.'
00000000000000ce         db  0x00 ; '.'
00000000000000cf         db  0x00 ; '.'
00000000000000d0         db  0xe8 ; '.'
00000000000000d1         db  0x76 ; 'v'
00000000000000d2         db  0x00 ; '.'
00000000000000d3         db  0x00 ; '.'
00000000000000d4         db  0x00 ; '.'
00000000000000d5         db  0x00 ; '.'
00000000000000d6         db  0x00 ; '.'
00000000000000d7         db  0x00 ; '.'
00000000000000d8         db  0xe8 ; '.'
00000000000000d9         db  0x76 ; 'v'
00000000000000da         db  0x00 ; '.'
00000000000000db         db  0x00 ; '.'
00000000000000dc         db  0x00 ; '.'
00000000000000dd         db  0x00 ; '.'
00000000000000de         db  0x00 ; '.'
00000000000000df         db  0x00 ; '.'
00000000000000e0         db  0x00 ; '.'
00000000000000e1         db  0x00 ; '.'
00000000000000e2         db  0x20 ; ' '
00000000000000e3         db  0x00 ; '.'
00000000000000e4         db  0x00 ; '.'
00000000000000e5         db  0x00 ; '.'
00000000000000e6         db  0x00 ; '.'
00000000000000e7         db  0x00 ; '.'
00000000000000e8         db  0x01 ; '.'
00000000000000e9         db  0x00 ; '.'
00000000000000ea         db  0x00 ; '.'
00000000000000eb         db  0x00 ; '.'
00000000000000ec         db  0x06 ; '.'
00000000000000ed         db  0x00 ; '.'
00000000000000ee         db  0x00 ; '.'
00000000000000ef         db  0x00 ; '.'
00000000000000f0         db  0x50 ; 'P'
00000000000000f1         db  0x7b ; '{'
00000000000000f2         db  0x00 ; '.'
00000000000000f3         db  0x00 ; '.'
00000000000000f4         db  0x00 ; '.'
00000000000000f5         db  0x00 ; '.'
00000000000000f6         db  0x00 ; '.'
00000000000000f7         db  0x00 ; '.'
00000000000000f8         db  0x50 ; 'P'
00000000000000f9         db  0x7b ; '{'
00000000000000fa         db  0x20 ; ' '
00000000000000fb         db  0x00 ; '.'
00000000000000fc         db  0x00 ; '.'
00000000000000fd         db  0x00 ; '.'
00000000000000fe         db  0x00 ; '.'
00000000000000ff         db  0x00 ; '.'
0000000000000100         db  0x50 ; 'P'                                         ; DATA XREF=quotearg_free+87, rpl_fflush+18, slotvec0
0000000000000101         db  0x7b ; '{'
0000000000000102         db  0x20 ; ' '
0000000000000103         db  0x00 ; '.'
0000000000000104         db  0x00 ; '.'
0000000000000105         db  0x00 ; '.'
0000000000000106         db  0x00 ; '.'
0000000000000107         db  0x00 ; '.'
0000000000000108         db  0x30 ; '0'
0000000000000109         db  0x05 ; '.'
000000000000010a         db  0x00 ; '.'
000000000000010b         db  0x00 ; '.'
000000000000010c         db  0x00 ; '.'
000000000000010d         db  0x00 ; '.'
000000000000010e         db  0x00 ; '.'
000000000000010f         db  0x00 ; '.'
0000000000000110         db  0xe8 ; '.'
0000000000000111         db  0x06 ; '.'
0000000000000112         db  0x00 ; '.'
0000000000000113         db  0x00 ; '.'
0000000000000114         db  0x00 ; '.'
0000000000000115         db  0x00 ; '.'
0000000000000116         db  0x00 ; '.'
0000000000000117         db  0x00 ; '.'
0000000000000118         db  0x00 ; '.'
0000000000000119         db  0x00 ; '.'
000000000000011a         db  0x20 ; ' '
000000000000011b         db  0x00 ; '.'
000000000000011c         db  0x00 ; '.'
000000000000011d         db  0x00 ; '.'
000000000000011e         db  0x00 ; '.'
000000000000011f         db  0x00 ; '.'
0000000000000120         db  0x02 ; '.'
0000000000000121         db  0x00 ; '.'
0000000000000122         db  0x00 ; '.'
0000000000000123         db  0x00 ; '.'
0000000000000124         db  0x06 ; '.'                                         ; DATA XREF=mode_compile+688, mode_adjust+143, mode_adjust+160
0000000000000125         db  0x00 ; '.'
0000000000000126         db  0x00 ; '.'
0000000000000127         db  0x00 ; '.'
0000000000000128         db  0x58 ; 'X'
0000000000000129         db  0x7c ; '|'
000000000000012a         db  0x00 ; '.'
000000000000012b         db  0x00 ; '.'
000000000000012c         db  0x00 ; '.'
000000000000012d         db  0x00 ; '.'
000000000000012e         db  0x00 ; '.'
000000000000012f         db  0x00 ; '.'
0000000000000130         db  0x58 ; 'X'
0000000000000131         db  0x7c ; '|'
0000000000000132         db  0x20 ; ' '
0000000000000133         db  0x00 ; '.'
0000000000000134         db  0x00 ; '.'
0000000000000135         db  0x00 ; '.'
0000000000000136         db  0x00 ; '.'
0000000000000137         db  0x00 ; '.'
0000000000000138         db  0x58 ; 'X'
0000000000000139         db  0x7c ; '|'
000000000000013a         db  0x20 ; ' '
000000000000013b         db  0x00 ; '.'
000000000000013c         db  0x00 ; '.'
000000000000013d         db  0x00 ; '.'                                         ; DATA XREF=mode_compile+847, mode_create_from_ref+61
000000000000013e         db  0x00 ; '.'
000000000000013f         db  0x00 ; '.'
0000000000000140         db  0xf0 ; '.'
0000000000000141         db  0x01 ; '.'
0000000000000142         db  0x00 ; '.'
0000000000000143         db  0x00 ; '.'
0000000000000144         db  0x00 ; '.'
0000000000000145         db  0x00 ; '.'
0000000000000146         db  0x00 ; '.'
0000000000000147         db  0x00 ; '.'
0000000000000148         db  0xf0 ; '.'
0000000000000149         db  0x01 ; '.'
000000000000014a         db  0x00 ; '.'
000000000000014b         db  0x00 ; '.'
000000000000014c         db  0x00 ; '.'
000000000000014d         db  0x00 ; '.'
000000000000014e         db  0x00 ; '.'
000000000000014f         db  0x00 ; '.'
0000000000000150         db  0x08 ; '.'
0000000000000151         db  0x00 ; '.'
0000000000000152         db  0x00 ; '.'
0000000000000153         db  0x00 ; '.'
0000000000000154         db  0x00 ; '.'
0000000000000155         db  0x00 ; '.'
0000000000000156         db  0x00 ; '.'
0000000000000157         db  0x00 ; '.'
0000000000000158         db  0x04 ; '.'
0000000000000159         db  0x00 ; '.'
000000000000015a         db  0x00 ; '.'
000000000000015b         db  0x00 ; '.'
000000000000015c         db  0x04 ; '.'
000000000000015d         db  0x00 ; '.'
000000000000015e         db  0x00 ; '.'
000000000000015f         db  0x00 ; '.'
0000000000000160         db  0x54 ; 'T'
0000000000000161         db  0x02 ; '.'
0000000000000162         db  0x00 ; '.'
0000000000000163         db  0x00 ; '.'
0000000000000164         db  0x00 ; '.'
0000000000000165         db  0x00 ; '.'
0000000000000166         db  0x00 ; '.'
0000000000000167         db  0x00 ; '.'
0000000000000168         db  0x54 ; 'T'
0000000000000169         db  0x02 ; '.'
000000000000016a         db  0x00 ; '.'
000000000000016b         db  0x00 ; '.'
000000000000016c         db  0x00 ; '.'
000000000000016d         db  0x00 ; '.'
000000000000016e         db  0x00 ; '.'
000000000000016f         db  0x00 ; '.'
0000000000000170         db  0x54 ; 'T'
0000000000000171         db  0x02 ; '.'
0000000000000172         db  0x00 ; '.'
0000000000000173         db  0x00 ; '.'
0000000000000174         db  0x00 ; '.'
0000000000000175         db  0x00 ; '.'
0000000000000176         db  0x00 ; '.'
0000000000000177         db  0x00 ; '.'
0000000000000178         db  0x44 ; 'D'
0000000000000179         db  0x00 ; '.'
000000000000017a         db  0x00 ; '.'
000000000000017b         db  0x00 ; '.'
000000000000017c         db  0x00 ; '.'
000000000000017d         db  0x00 ; '.'
000000000000017e         db  0x00 ; '.'
000000000000017f         db  0x00 ; '.'
0000000000000180         db  0x44 ; 'D'
0000000000000181         db  0x00 ; '.'
0000000000000182         db  0x00 ; '.'
0000000000000183         db  0x00 ; '.'
0000000000000184         db  0x00 ; '.'
0000000000000185         db  0x00 ; '.'
0000000000000186         db  0x00 ; '.'
0000000000000187         db  0x00 ; '.'
0000000000000188         db  0x04 ; '.'
0000000000000189         db  0x00 ; '.'
000000000000018a         db  0x00 ; '.'
000000000000018b         db  0x00 ; '.'
000000000000018c         db  0x00 ; '.'
000000000000018d         db  0x00 ; '.'
000000000000018e         db  0x00 ; '.'
000000000000018f         db  0x00 ; '.'
0000000000000190         db  0x50 ; 'P'
0000000000000191         db  0xe5 ; '.'
0000000000000192         db  0x74 ; 't'
0000000000000193         db  0x64 ; 'd'
0000000000000194         db  0x04 ; '.'
0000000000000195         db  0x00 ; '.'
0000000000000196         db  0x00 ; '.'
0000000000000197         db  0x00 ; '.'
0000000000000198         db  0xfc ; '.'
0000000000000199         db  0x68 ; 'h'
000000000000019a         db  0x00 ; '.'
000000000000019b         db  0x00 ; '.'
000000000000019c         db  0x00 ; '.'
000000000000019d         db  0x00 ; '.'
000000000000019e         db  0x00 ; '.'
000000000000019f         db  0x00 ; '.'
00000000000001a0         db  0xfc ; '.'
00000000000001a1         db  0x68 ; 'h'
00000000000001a2         db  0x00 ; '.'
00000000000001a3         db  0x00 ; '.'
00000000000001a4         db  0x00 ; '.'
00000000000001a5         db  0x00 ; '.'
00000000000001a6         db  0x00 ; '.'
00000000000001a7         db  0x00 ; '.'
00000000000001a8         db  0xfc ; '.'
00000000000001a9         db  0x68 ; 'h'
00000000000001aa         db  0x00 ; '.'
00000000000001ab         db  0x00 ; '.'
00000000000001ac         db  0x00 ; '.'
00000000000001ad         db  0x00 ; '.'
00000000000001ae         db  0x00 ; '.'
00000000000001af         db  0x00 ; '.'
00000000000001b0         db  0x5c ; '\'
00000000000001b1         db  0x02 ; '.'
00000000000001b2         db  0x00 ; '.'
00000000000001b3         db  0x00 ; '.'
00000000000001b4         db  0x00 ; '.'
00000000000001b5         db  0x00 ; '.'
00000000000001b6         db  0x00 ; '.'                                         ; DATA XREF=main+365, main+1099
00000000000001b7         db  0x00 ; '.'
00000000000001b8         db  0x5c ; '\'
00000000000001b9         db  0x02 ; '.'
00000000000001ba         db  0x00 ; '.'
00000000000001bb         db  0x00 ; '.'
00000000000001bc         db  0x00 ; '.'
00000000000001bd         db  0x00 ; '.'
00000000000001be         db  0x00 ; '.'
00000000000001bf         db  0x00 ; '.'
00000000000001c0         db  0x04 ; '.'                                         ; DATA XREF=mode_compile+304
00000000000001c1         db  0x00 ; '.'
00000000000001c2         db  0x00 ; '.'
00000000000001c3         db  0x00 ; '.'
00000000000001c4         db  0x00 ; '.'
00000000000001c5         db  0x00 ; '.'
00000000000001c6         db  0x00 ; '.'
00000000000001c7         db  0x00 ; '.'
00000000000001c8         db  0x51 ; 'Q'
00000000000001c9         db  0xe5 ; '.'
00000000000001ca         db  0x74 ; 't'
00000000000001cb         db  0x64 ; 'd'
00000000000001cc         db  0x06 ; '.'
00000000000001cd         db  0x00 ; '.'
00000000000001ce         db  0x00 ; '.'
00000000000001cf         db  0x00 ; '.'
00000000000001d0         db  0x00 ; '.'
00000000000001d1         db  0x00 ; '.'
00000000000001d2         db  0x00 ; '.'
00000000000001d3         db  0x00 ; '.'
00000000000001d4         db  0x00 ; '.'
00000000000001d5         db  0x00 ; '.'
00000000000001d6         db  0x00 ; '.'
00000000000001d7         db  0x00 ; '.'
00000000000001d8         db  0x00 ; '.'
00000000000001d9         db  0x00 ; '.'
00000000000001da         db  0x00 ; '.'
00000000000001db         db  0x00 ; '.'
00000000000001dc         db  0x00 ; '.'
00000000000001dd         db  0x00 ; '.'
00000000000001de         db  0x00 ; '.'
00000000000001df         db  0x00 ; '.'
00000000000001e0         db  0x00 ; '.'
00000000000001e1         db  0x00 ; '.'
00000000000001e2         db  0x00 ; '.'
00000000000001e3         db  0x00 ; '.'
00000000000001e4         db  0x00 ; '.'
00000000000001e5         db  0x00 ; '.'
00000000000001e6         db  0x00 ; '.'
00000000000001e7         db  0x00 ; '.'
00000000000001e8         db  0x00 ; '.'
00000000000001e9         db  0x00 ; '.'
00000000000001ea         db  0x00 ; '.'
00000000000001eb         db  0x00 ; '.'
00000000000001ec         db  0x00 ; '.'
00000000000001ed         db  0x00 ; '.'
00000000000001ee         db  0x00 ; '.'
00000000000001ef         db  0x00 ; '.'
00000000000001f0         db  0x00 ; '.'
00000000000001f1         db  0x00 ; '.'
00000000000001f2         db  0x00 ; '.'
00000000000001f3         db  0x00 ; '.'
00000000000001f4         db  0x00 ; '.'
00000000000001f5         db  0x00 ; '.'
00000000000001f6         db  0x00 ; '.'
00000000000001f7         db  0x00 ; '.'
00000000000001f8         db  0x10 ; '.'
00000000000001f9         db  0x00 ; '.'
00000000000001fa         db  0x00 ; '.'
00000000000001fb         db  0x00 ; '.'
00000000000001fc         db  0x00 ; '.'
00000000000001fd         db  0x00 ; '.'
00000000000001fe         db  0x00 ; '.'
00000000000001ff         db  0x00 ; '.'
0000000000000200         db  0x52 ; 'R'                                         ; DATA XREF=mode_compile+656, xstrtoumax+573
0000000000000201         db  0xe5 ; '.'
0000000000000202         db  0x74 ; 't'
0000000000000203         db  0x64 ; 'd'
0000000000000204         db  0x04 ; '.'
0000000000000205         db  0x00 ; '.'
0000000000000206         db  0x00 ; '.'
0000000000000207         db  0x00 ; '.'                                         ; DATA XREF=mode_compile+784
0000000000000208         db  0x50 ; 'P'
0000000000000209         db  0x7b ; '{'
000000000000020a         db  0x00 ; '.'
000000000000020b         db  0x00 ; '.'
000000000000020c         db  0x00 ; '.'
000000000000020d         db  0x00 ; '.'
000000000000020e         db  0x00 ; '.'
000000000000020f         db  0x00 ; '.'
0000000000000210         db  0x50 ; 'P'
0000000000000211         db  0x7b ; '{'
0000000000000212         db  0x20 ; ' '
0000000000000213         db  0x00 ; '.'
0000000000000214         db  0x00 ; '.'
0000000000000215         db  0x00 ; '.'
0000000000000216         db  0x00 ; '.'
0000000000000217         db  0x00 ; '.'
0000000000000218         db  0x50 ; 'P'
0000000000000219         db  0x7b ; '{'
000000000000021a         db  0x20 ; ' '
000000000000021b         db  0x00 ; '.'
000000000000021c         db  0x00 ; '.'
000000000000021d         db  0x00 ; '.'
000000000000021e         db  0x00 ; '.'
000000000000021f         db  0x00 ; '.'
0000000000000220         db  0xb0 ; '.'
0000000000000221         db  0x04 ; '.'
0000000000000222         db  0x00 ; '.'
0000000000000223         db  0x00 ; '.'
0000000000000224         db  0x00 ; '.'
0000000000000225         db  0x00 ; '.'
0000000000000226         db  0x00 ; '.'
0000000000000227         db  0x00 ; '.'
0000000000000228         db  0xb0 ; '.'
0000000000000229         db  0x04 ; '.'
000000000000022a         db  0x00 ; '.'
000000000000022b         db  0x00 ; '.'
000000000000022c         db  0x00 ; '.'
000000000000022d         db  0x00 ; '.'
000000000000022e         db  0x00 ; '.'
000000000000022f         db  0x00 ; '.'
0000000000000230         db  0x01 ; '.'
0000000000000231         db  0x00 ; '.'
0000000000000232         db  0x00 ; '.'
0000000000000233         db  0x00 ; '.'
0000000000000234         db  0x00 ; '.'
0000000000000235         db  0x00 ; '.'
0000000000000236         db  0x00 ; '.'
0000000000000237         db  0x00 ; '.'


        ; Section .interp
        ; Range: [0x238; 0x254[ (28 bytes)
        ; File offset : [568; 596[ (28 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     aLib64ldlinuxx8:
0000000000000238         db         "/lib64/ld-linux-x86-64.so.2", 0


        ; Section .note.ABI-tag
        ; Range: [0x254; 0x274[ (32 bytes)
        ; File offset : [596; 628[ (32 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000254         db  0x04 ; '.'
0000000000000255         db  0x00 ; '.'
0000000000000256         db  0x00 ; '.'
0000000000000257         db  0x00 ; '.'
0000000000000258         db  0x10 ; '.'
0000000000000259         db  0x00 ; '.'
000000000000025a         db  0x00 ; '.'
000000000000025b         db  0x00 ; '.'
000000000000025c         db  0x01 ; '.'
000000000000025d         db  0x00 ; '.'
000000000000025e         db  0x00 ; '.'
000000000000025f         db  0x00 ; '.'
0000000000000260         db  0x47 ; 'G'
0000000000000261         db  0x4e ; 'N'
0000000000000262         db  0x55 ; 'U'
0000000000000263         db  0x00 ; '.'
0000000000000264         db  0x00 ; '.'
0000000000000265         db  0x00 ; '.'
0000000000000266         db  0x00 ; '.'
0000000000000267         db  0x00 ; '.'
0000000000000268         db  0x03 ; '.'
0000000000000269         db  0x00 ; '.'
000000000000026a         db  0x00 ; '.'
000000000000026b         db  0x00 ; '.'
000000000000026c         db  0x02 ; '.'
000000000000026d         db  0x00 ; '.'
000000000000026e         db  0x00 ; '.'
000000000000026f         db  0x00 ; '.'
0000000000000270         db  0x00 ; '.'
0000000000000271         db  0x00 ; '.'
0000000000000272         db  0x00 ; '.'
0000000000000273         db  0x00 ; '.'


        ; Section .note.gnu.build-id
        ; Range: [0x274; 0x298[ (36 bytes)
        ; File offset : [628; 664[ (36 bytes)
        ; Flags: 0x2
        ;   SHT_NOTE
        ;   SHF_ALLOC

0000000000000274         db  0x04 ; '.'
0000000000000275         db  0x00 ; '.'
0000000000000276         db  0x00 ; '.'
0000000000000277         db  0x00 ; '.'
0000000000000278         db  0x14 ; '.'
0000000000000279         db  0x00 ; '.'
000000000000027a         db  0x00 ; '.'
000000000000027b         db  0x00 ; '.'
000000000000027c         db  0x03 ; '.'
000000000000027d         db  0x00 ; '.'
000000000000027e         db  0x00 ; '.'
000000000000027f         db  0x00 ; '.'
0000000000000280         db  0x47 ; 'G'
0000000000000281         db  0x4e ; 'N'
0000000000000282         db  0x55 ; 'U'
0000000000000283         db  0x00 ; '.'
0000000000000284         db  0xdf ; '.'
0000000000000285         db  0x0a ; '.'
0000000000000286         db  0xc0 ; '.'
0000000000000287         db  0xbc ; '.'
0000000000000288         db  0x2f ; '/'
0000000000000289         db  0xd3 ; '.'
000000000000028a         db  0xf3 ; '.'
000000000000028b         db  0x2b ; '+'
000000000000028c         db  0xb5 ; '.'
000000000000028d         db  0x28 ; '('
000000000000028e         db  0xb5 ; '.'
000000000000028f         db  0x89 ; '.'
0000000000000290         db  0x11 ; '.'
0000000000000291         db  0xff ; '.'
0000000000000292         db  0x16 ; '.'
0000000000000293         db  0x9a ; '.'
0000000000000294         db  0x05 ; '.'
0000000000000295         db  0xe8 ; '.'
0000000000000296         db  0x65 ; 'e'
0000000000000297         db  0xd0 ; '.'


        ; Section .gnu.hash
        ; Range: [0x298; 0x2dc[ (68 bytes)
        ; File offset : [664; 732[ (68 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000298         db  0x03 ; '.'
0000000000000299         db  0x00 ; '.'
000000000000029a         db  0x00 ; '.'
000000000000029b         db  0x00 ; '.'
000000000000029c         db  0x35 ; '5'
000000000000029d         db  0x00 ; '.'
000000000000029e         db  0x00 ; '.'
000000000000029f         db  0x00 ; '.'
00000000000002a0         db  0x01 ; '.'
00000000000002a1         db  0x00 ; '.'
00000000000002a2         db  0x00 ; '.'
00000000000002a3         db  0x00 ; '.'
00000000000002a4         db  0x06 ; '.'
00000000000002a5         db  0x00 ; '.'
00000000000002a6         db  0x00 ; '.'
00000000000002a7         db  0x00 ; '.'
00000000000002a8         db  0x04 ; '.'
00000000000002a9         db  0x4d ; 'M'
00000000000002aa         db  0x41 ; 'A'
00000000000002ab         db  0x00 ; '.'
00000000000002ac         db  0x20 ; ' '
00000000000002ad         db  0x01 ; '.'
00000000000002ae         db  0x1c ; '.'
00000000000002af         db  0x12 ; '.'
00000000000002b0         db  0x35 ; '5'
00000000000002b1         db  0x00 ; '.'
00000000000002b2         db  0x00 ; '.'
00000000000002b3         db  0x00 ; '.'
00000000000002b4         db  0x36 ; '6'
00000000000002b5         db  0x00 ; '.'
00000000000002b6         db  0x00 ; '.'
00000000000002b7         db  0x00 ; '.'
00000000000002b8         db  0x3b ; ';'
00000000000002b9         db  0x00 ; '.'
00000000000002ba         db  0x00 ; '.'
00000000000002bb         db  0x00 ; '.'
00000000000002bc         db  0x29 ; ')'
00000000000002bd         db  0x1d ; '.'
00000000000002be         db  0x8c ; '.'
00000000000002bf         db  0x1c ; '.'
00000000000002c0         db  0xbc ; '.'
00000000000002c1         db  0x50 ; 'P'
00000000000002c2         db  0x76 ; 'v'
00000000000002c3         db  0x9e ; '.'
00000000000002c4         db  0x96 ; '.'
00000000000002c5         db  0xa0 ; '.'
00000000000002c6         db  0x89 ; '.'
00000000000002c7         db  0x97 ; '.'
00000000000002c8         db  0xce ; '.'
00000000000002c9         db  0x2c ; ','
00000000000002ca         db  0x63 ; 'c'
00000000000002cb         db  0x72 ; 'r'
00000000000002cc         db  0xe4 ; '.'
00000000000002cd         db  0x62 ; 'b'
00000000000002ce         db  0x41 ; 'A'
00000000000002cf         db  0xf5 ; '.'
00000000000002d0         db  0x39 ; '9'
00000000000002d1         db  0xf2 ; '.'
00000000000002d2         db  0x8b ; '.'
00000000000002d3         db  0x1c ; '.'
00000000000002d4         db  0x32 ; '2'
00000000000002d5         db  0xc4 ; '.'
00000000000002d6         db  0xf7 ; '.'
00000000000002d7         db  0x12 ; '.'
00000000000002d8         db  0xb3 ; '.'
00000000000002d9         db  0xa2 ; '.'
00000000000002da         db  0xf7 ; '.'
00000000000002db         db  0x12 ; '.'
00000000000002dc         db  0x00 ; '.'
00000000000002dd         db  0x00 ; '.'
00000000000002de         db  0x00 ; '.'
00000000000002df         db  0x00 ; '.'


        ; Section .dynsym
        ; Range: [0x2e0; 0x898[ (1464 bytes)
        ; File offset : [736; 2200[ (1464 bytes)
        ; Flags: 0x2
        ;   SHT_DYNSYM
        ;   SHF_ALLOC

00000000000002e0         db  0x00 ; '.'
00000000000002e1         db  0x00 ; '.'
00000000000002e2         db  0x00 ; '.'
00000000000002e3         db  0x00 ; '.'
00000000000002e4         db  0x00 ; '.'
00000000000002e5         db  0x00 ; '.'
00000000000002e6         db  0x00 ; '.'
00000000000002e7         db  0x00 ; '.'
00000000000002e8         db  0x00 ; '.'
00000000000002e9         db  0x00 ; '.'
00000000000002ea         db  0x00 ; '.'
00000000000002eb         db  0x00 ; '.'
00000000000002ec         db  0x00 ; '.'
00000000000002ed         db  0x00 ; '.'
00000000000002ee         db  0x00 ; '.'
00000000000002ef         db  0x00 ; '.'
00000000000002f0         db  0x00 ; '.'
00000000000002f1         db  0x00 ; '.'
00000000000002f2         db  0x00 ; '.'
00000000000002f3         db  0x00 ; '.'
00000000000002f4         db  0x00 ; '.'
00000000000002f5         db  0x00 ; '.'
00000000000002f6         db  0x00 ; '.'
00000000000002f7         db  0x00 ; '.'
00000000000002f8         db  0x22 ; '"'
00000000000002f9         db  0x02 ; '.'
00000000000002fa         db  0x00 ; '.'
00000000000002fb         db  0x00 ; '.'
00000000000002fc         db  0x12 ; '.'
00000000000002fd         db  0x00 ; '.'
00000000000002fe         db  0x00 ; '.'
00000000000002ff         db  0x00 ; '.'
0000000000000300         db  0x00 ; '.'
0000000000000301         db  0x00 ; '.'
0000000000000302         db  0x00 ; '.'
0000000000000303         db  0x00 ; '.'
0000000000000304         db  0x00 ; '.'
0000000000000305         db  0x00 ; '.'
0000000000000306         db  0x00 ; '.'
0000000000000307         db  0x00 ; '.'
0000000000000308         db  0x00 ; '.'
0000000000000309         db  0x00 ; '.'
000000000000030a         db  0x00 ; '.'
000000000000030b         db  0x00 ; '.'
000000000000030c         db  0x00 ; '.'
000000000000030d         db  0x00 ; '.'
000000000000030e         db  0x00 ; '.'
000000000000030f         db  0x00 ; '.'
0000000000000310         db  0x7a ; 'z'
0000000000000311         db  0x00 ; '.'
0000000000000312         db  0x00 ; '.'
0000000000000313         db  0x00 ; '.'
0000000000000314         db  0x12 ; '.'
0000000000000315         db  0x00 ; '.'
0000000000000316         db  0x00 ; '.'
0000000000000317         db  0x00 ; '.'
0000000000000318         db  0x00 ; '.'
0000000000000319         db  0x00 ; '.'
000000000000031a         db  0x00 ; '.'
000000000000031b         db  0x00 ; '.'
000000000000031c         db  0x00 ; '.'
000000000000031d         db  0x00 ; '.'
000000000000031e         db  0x00 ; '.'
000000000000031f         db  0x00 ; '.'
0000000000000320         db  0x00 ; '.'
0000000000000321         db  0x00 ; '.'
0000000000000322         db  0x00 ; '.'
0000000000000323         db  0x00 ; '.'
0000000000000324         db  0x00 ; '.'
0000000000000325         db  0x00 ; '.'
0000000000000326         db  0x00 ; '.'
0000000000000327         db  0x00 ; '.'
0000000000000328         db  0xde ; '.'
0000000000000329         db  0x00 ; '.'
000000000000032a         db  0x00 ; '.'
000000000000032b         db  0x00 ; '.'
000000000000032c         db  0x12 ; '.'
000000000000032d         db  0x00 ; '.'
000000000000032e         db  0x00 ; '.'
000000000000032f         db  0x00 ; '.'
0000000000000330         db  0x00 ; '.'
0000000000000331         db  0x00 ; '.'
0000000000000332         db  0x00 ; '.'
0000000000000333         db  0x00 ; '.'
0000000000000334         db  0x00 ; '.'
0000000000000335         db  0x00 ; '.'
0000000000000336         db  0x00 ; '.'
0000000000000337         db  0x00 ; '.'
0000000000000338         db  0x00 ; '.'
0000000000000339         db  0x00 ; '.'
000000000000033a         db  0x00 ; '.'
000000000000033b         db  0x00 ; '.'
000000000000033c         db  0x00 ; '.'
000000000000033d         db  0x00 ; '.'
000000000000033e         db  0x00 ; '.'
000000000000033f         db  0x00 ; '.'
0000000000000340         db  0x31 ; '1'
0000000000000341         db  0x00 ; '.'
0000000000000342         db  0x00 ; '.'
0000000000000343         db  0x00 ; '.'
0000000000000344         db  0x12 ; '.'
0000000000000345         db  0x00 ; '.'
0000000000000346         db  0x00 ; '.'
0000000000000347         db  0x00 ; '.'
0000000000000348         db  0x00 ; '.'
0000000000000349         db  0x00 ; '.'
000000000000034a         db  0x00 ; '.'
000000000000034b         db  0x00 ; '.'
000000000000034c         db  0x00 ; '.'
000000000000034d         db  0x00 ; '.'
000000000000034e         db  0x00 ; '.'
000000000000034f         db  0x00 ; '.'
0000000000000350         db  0x00 ; '.'
0000000000000351         db  0x00 ; '.'
0000000000000352         db  0x00 ; '.'
0000000000000353         db  0x00 ; '.'
0000000000000354         db  0x00 ; '.'
0000000000000355         db  0x00 ; '.'
0000000000000356         db  0x00 ; '.'
0000000000000357         db  0x00 ; '.'
0000000000000358         db  0x86 ; '.'
0000000000000359         db  0x02 ; '.'
000000000000035a         db  0x00 ; '.'
000000000000035b         db  0x00 ; '.'
000000000000035c         db  0x20 ; ' '
000000000000035d         db  0x00 ; '.'
000000000000035e         db  0x00 ; '.'
000000000000035f         db  0x00 ; '.'
0000000000000360         db  0x00 ; '.'
0000000000000361         db  0x00 ; '.'
0000000000000362         db  0x00 ; '.'
0000000000000363         db  0x00 ; '.'
0000000000000364         db  0x00 ; '.'
0000000000000365         db  0x00 ; '.'
0000000000000366         db  0x00 ; '.'
0000000000000367         db  0x00 ; '.'
0000000000000368         db  0x00 ; '.'
0000000000000369         db  0x00 ; '.'
000000000000036a         db  0x00 ; '.'
000000000000036b         db  0x00 ; '.'
000000000000036c         db  0x00 ; '.'
000000000000036d         db  0x00 ; '.'
000000000000036e         db  0x00 ; '.'
000000000000036f         db  0x00 ; '.'
0000000000000370         db  0x80 ; '.'
0000000000000371         db  0x00 ; '.'
0000000000000372         db  0x00 ; '.'
0000000000000373         db  0x00 ; '.'
0000000000000374         db  0x12 ; '.'
0000000000000375         db  0x00 ; '.'
0000000000000376         db  0x00 ; '.'
0000000000000377         db  0x00 ; '.'
0000000000000378         db  0x00 ; '.'
0000000000000379         db  0x00 ; '.'
000000000000037a         db  0x00 ; '.'
000000000000037b         db  0x00 ; '.'
000000000000037c         db  0x00 ; '.'
000000000000037d         db  0x00 ; '.'
000000000000037e         db  0x00 ; '.'
000000000000037f         db  0x00 ; '.'
0000000000000380         db  0x00 ; '.'
0000000000000381         db  0x00 ; '.'
0000000000000382         db  0x00 ; '.'
0000000000000383         db  0x00 ; '.'
0000000000000384         db  0x00 ; '.'
0000000000000385         db  0x00 ; '.'
0000000000000386         db  0x00 ; '.'
0000000000000387         db  0x00 ; '.'
0000000000000388         db  0x8a ; '.'
0000000000000389         db  0x01 ; '.'
000000000000038a         db  0x00 ; '.'
000000000000038b         db  0x00 ; '.'
000000000000038c         db  0x12 ; '.'
000000000000038d         db  0x00 ; '.'
000000000000038e         db  0x00 ; '.'
000000000000038f         db  0x00 ; '.'
0000000000000390         db  0x00 ; '.'
0000000000000391         db  0x00 ; '.'
0000000000000392         db  0x00 ; '.'
0000000000000393         db  0x00 ; '.'
0000000000000394         db  0x00 ; '.'
0000000000000395         db  0x00 ; '.'
0000000000000396         db  0x00 ; '.'
0000000000000397         db  0x00 ; '.'
0000000000000398         db  0x00 ; '.'
0000000000000399         db  0x00 ; '.'
000000000000039a         db  0x00 ; '.'
000000000000039b         db  0x00 ; '.'
000000000000039c         db  0x00 ; '.'
000000000000039d         db  0x00 ; '.'
000000000000039e         db  0x00 ; '.'
000000000000039f         db  0x00 ; '.'
00000000000003a0         db  0xd5 ; '.'
00000000000003a1         db  0x01 ; '.'
00000000000003a2         db  0x00 ; '.'
00000000000003a3         db  0x00 ; '.'
00000000000003a4         db  0x12 ; '.'
00000000000003a5         db  0x00 ; '.'
00000000000003a6         db  0x00 ; '.'
00000000000003a7         db  0x00 ; '.'
00000000000003a8         db  0x00 ; '.'
00000000000003a9         db  0x00 ; '.'
00000000000003aa         db  0x00 ; '.'
00000000000003ab         db  0x00 ; '.'
00000000000003ac         db  0x00 ; '.'
00000000000003ad         db  0x00 ; '.'
00000000000003ae         db  0x00 ; '.'
00000000000003af         db  0x00 ; '.'
00000000000003b0         db  0x00 ; '.'
00000000000003b1         db  0x00 ; '.'
00000000000003b2         db  0x00 ; '.'
00000000000003b3         db  0x00 ; '.'
00000000000003b4         db  0x00 ; '.'
00000000000003b5         db  0x00 ; '.'
00000000000003b6         db  0x00 ; '.'
00000000000003b7         db  0x00 ; '.'
00000000000003b8         db  0x18 ; '.'
00000000000003b9         db  0x01 ; '.'
00000000000003ba         db  0x00 ; '.'
00000000000003bb         db  0x00 ; '.'
00000000000003bc         db  0x12 ; '.'
00000000000003bd         db  0x00 ; '.'
00000000000003be         db  0x00 ; '.'
00000000000003bf         db  0x00 ; '.'
00000000000003c0         db  0x00 ; '.'
00000000000003c1         db  0x00 ; '.'
00000000000003c2         db  0x00 ; '.'
00000000000003c3         db  0x00 ; '.'
00000000000003c4         db  0x00 ; '.'
00000000000003c5         db  0x00 ; '.'
00000000000003c6         db  0x00 ; '.'
00000000000003c7         db  0x00 ; '.'
00000000000003c8         db  0x00 ; '.'
00000000000003c9         db  0x00 ; '.'
00000000000003ca         db  0x00 ; '.'
00000000000003cb         db  0x00 ; '.'
00000000000003cc         db  0x00 ; '.'
00000000000003cd         db  0x00 ; '.'
00000000000003ce         db  0x00 ; '.'
00000000000003cf         db  0x00 ; '.'
00000000000003d0         db  0xd1 ; '.'
00000000000003d1         db  0x01 ; '.'
00000000000003d2         db  0x00 ; '.'
00000000000003d3         db  0x00 ; '.'
00000000000003d4         db  0x12 ; '.'
00000000000003d5         db  0x00 ; '.'
00000000000003d6         db  0x00 ; '.'
00000000000003d7         db  0x00 ; '.'
00000000000003d8         db  0x00 ; '.'
00000000000003d9         db  0x00 ; '.'
00000000000003da         db  0x00 ; '.'
00000000000003db         db  0x00 ; '.'
00000000000003dc         db  0x00 ; '.'
00000000000003dd         db  0x00 ; '.'
00000000000003de         db  0x00 ; '.'
00000000000003df         db  0x00 ; '.'
00000000000003e0         db  0x00 ; '.'
00000000000003e1         db  0x00 ; '.'
00000000000003e2         db  0x00 ; '.'
00000000000003e3         db  0x00 ; '.'
00000000000003e4         db  0x00 ; '.'
00000000000003e5         db  0x00 ; '.'
00000000000003e6         db  0x00 ; '.'
00000000000003e7         db  0x00 ; '.'
00000000000003e8         db  0x48 ; 'H'                                         ; DATA XREF=xstrtoumax+420
00000000000003e9         db  0x00 ; '.'
00000000000003ea         db  0x00 ; '.'
00000000000003eb         db  0x00 ; '.'
00000000000003ec         db  0x12 ; '.'
00000000000003ed         db  0x00 ; '.'
00000000000003ee         db  0x00 ; '.'
00000000000003ef         db  0x00 ; '.'
00000000000003f0         db  0x00 ; '.'
00000000000003f1         db  0x00 ; '.'
00000000000003f2         db  0x00 ; '.'
00000000000003f3         db  0x00 ; '.'
00000000000003f4         db  0x00 ; '.'
00000000000003f5         db  0x00 ; '.'
00000000000003f6         db  0x00 ; '.'
00000000000003f7         db  0x00 ; '.'
00000000000003f8         db  0x00 ; '.'
00000000000003f9         db  0x00 ; '.'
00000000000003fa         db  0x00 ; '.'
00000000000003fb         db  0x00 ; '.'
00000000000003fc         db  0x00 ; '.'
00000000000003fd         db  0x00 ; '.'
00000000000003fe         db  0x00 ; '.'
00000000000003ff         db  0x00 ; '.'                                         ; DATA XREF=mode_compile+829
0000000000000400         db  0xb2 ; '.'                                         ; DATA XREF=xstrtoumax+437, xstrtoumax+806, xstrtoumax+878
0000000000000401         db  0x00 ; '.'
0000000000000402         db  0x00 ; '.'
0000000000000403         db  0x00 ; '.'
0000000000000404         db  0x12 ; '.'
0000000000000405         db  0x00 ; '.'
0000000000000406         db  0x00 ; '.'
0000000000000407         db  0x00 ; '.'
0000000000000408         db  0x00 ; '.'
0000000000000409         db  0x00 ; '.'
000000000000040a         db  0x00 ; '.'
000000000000040b         db  0x00 ; '.'
000000000000040c         db  0x00 ; '.'
000000000000040d         db  0x00 ; '.'
000000000000040e         db  0x00 ; '.'
000000000000040f         db  0x00 ; '.'
0000000000000410         db  0x00 ; '.'
0000000000000411         db  0x00 ; '.'
0000000000000412         db  0x00 ; '.'
0000000000000413         db  0x00 ; '.'
0000000000000414         db  0x00 ; '.'
0000000000000415         db  0x00 ; '.'
0000000000000416         db  0x00 ; '.'
0000000000000417         db  0x00 ; '.'
0000000000000418         db  0xd0 ; '.'
0000000000000419         db  0x00 ; '.'
000000000000041a         db  0x00 ; '.'
000000000000041b         db  0x00 ; '.'
000000000000041c         db  0x12 ; '.'
000000000000041d         db  0x00 ; '.'
000000000000041e         db  0x00 ; '.'
000000000000041f         db  0x00 ; '.'
0000000000000420         db  0x00 ; '.'
0000000000000421         db  0x00 ; '.'
0000000000000422         db  0x00 ; '.'
0000000000000423         db  0x00 ; '.'
0000000000000424         db  0x00 ; '.'
0000000000000425         db  0x00 ; '.'
0000000000000426         db  0x00 ; '.'
0000000000000427         db  0x00 ; '.'
0000000000000428         db  0x00 ; '.'
0000000000000429         db  0x00 ; '.'
000000000000042a         db  0x00 ; '.'
000000000000042b         db  0x00 ; '.'
000000000000042c         db  0x00 ; '.'
000000000000042d         db  0x00 ; '.'
000000000000042e         db  0x00 ; '.'
000000000000042f         db  0x00 ; '.'
0000000000000430         db  0x58 ; 'X'
0000000000000431         db  0x00 ; '.'
0000000000000432         db  0x00 ; '.'
0000000000000433         db  0x00 ; '.'
0000000000000434         db  0x12 ; '.'
0000000000000435         db  0x00 ; '.'
0000000000000436         db  0x00 ; '.'
0000000000000437         db  0x00 ; '.'
0000000000000438         db  0x00 ; '.'                                         ; DATA XREF=mode_compile+752
0000000000000439         db  0x00 ; '.'
000000000000043a         db  0x00 ; '.'
000000000000043b         db  0x00 ; '.'
000000000000043c         db  0x00 ; '.'
000000000000043d         db  0x00 ; '.'
000000000000043e         db  0x00 ; '.'
000000000000043f         db  0x00 ; '.'
0000000000000440         db  0x00 ; '.'
0000000000000441         db  0x00 ; '.'
0000000000000442         db  0x00 ; '.'
0000000000000443         db  0x00 ; '.'
0000000000000444         db  0x00 ; '.'
0000000000000445         db  0x00 ; '.'
0000000000000446         db  0x00 ; '.'
0000000000000447         db  0x00 ; '.'
0000000000000448         db  0x67 ; 'g'
0000000000000449         db  0x01 ; '.'
000000000000044a         db  0x00 ; '.'
000000000000044b         db  0x00 ; '.'
000000000000044c         db  0x12 ; '.'
000000000000044d         db  0x00 ; '.'
000000000000044e         db  0x00 ; '.'
000000000000044f         db  0x00 ; '.'
0000000000000450         db  0x00 ; '.'
0000000000000451         db  0x00 ; '.'
0000000000000452         db  0x00 ; '.'
0000000000000453         db  0x00 ; '.'
0000000000000454         db  0x00 ; '.'
0000000000000455         db  0x00 ; '.'
0000000000000456         db  0x00 ; '.'
0000000000000457         db  0x00 ; '.'
0000000000000458         db  0x00 ; '.'
0000000000000459         db  0x00 ; '.'
000000000000045a         db  0x00 ; '.'
000000000000045b         db  0x00 ; '.'
000000000000045c         db  0x00 ; '.'
000000000000045d         db  0x00 ; '.'
000000000000045e         db  0x00 ; '.'
000000000000045f         db  0x00 ; '.'
0000000000000460         db  0x29 ; ')'
0000000000000461         db  0x00 ; '.'
0000000000000462         db  0x00 ; '.'
0000000000000463         db  0x00 ; '.'
0000000000000464         db  0x12 ; '.'
0000000000000465         db  0x00 ; '.'
0000000000000466         db  0x00 ; '.'
0000000000000467         db  0x00 ; '.'
0000000000000468         db  0x00 ; '.'
0000000000000469         db  0x00 ; '.'
000000000000046a         db  0x00 ; '.'
000000000000046b         db  0x00 ; '.'
000000000000046c         db  0x00 ; '.'
000000000000046d         db  0x00 ; '.'
000000000000046e         db  0x00 ; '.'
000000000000046f         db  0x00 ; '.'
0000000000000470         db  0x00 ; '.'
0000000000000471         db  0x00 ; '.'
0000000000000472         db  0x00 ; '.'
0000000000000473         db  0x00 ; '.'
0000000000000474         db  0x00 ; '.'
0000000000000475         db  0x00 ; '.'
0000000000000476         db  0x00 ; '.'
0000000000000477         db  0x00 ; '.'
0000000000000478         db  0x95 ; '.'
0000000000000479         db  0x01 ; '.'
000000000000047a         db  0x00 ; '.'
000000000000047b         db  0x00 ; '.'
000000000000047c         db  0x12 ; '.'
000000000000047d         db  0x00 ; '.'
000000000000047e         db  0x00 ; '.'
000000000000047f         db  0x00 ; '.'
0000000000000480         db  0x00 ; '.'
0000000000000481         db  0x00 ; '.'
0000000000000482         db  0x00 ; '.'
0000000000000483         db  0x00 ; '.'
0000000000000484         db  0x00 ; '.'
0000000000000485         db  0x00 ; '.'
0000000000000486         db  0x00 ; '.'
0000000000000487         db  0x00 ; '.'
0000000000000488         db  0x00 ; '.'
0000000000000489         db  0x00 ; '.'
000000000000048a         db  0x00 ; '.'
000000000000048b         db  0x00 ; '.'
000000000000048c         db  0x00 ; '.'
000000000000048d         db  0x00 ; '.'
000000000000048e         db  0x00 ; '.'
000000000000048f         db  0x00 ; '.'
0000000000000490         db  0x40 ; '@'
0000000000000491         db  0x00 ; '.'
0000000000000492         db  0x00 ; '.'
0000000000000493         db  0x00 ; '.'
0000000000000494         db  0x12 ; '.'
0000000000000495         db  0x00 ; '.'
0000000000000496         db  0x00 ; '.'
0000000000000497         db  0x00 ; '.'
0000000000000498         db  0x00 ; '.'
0000000000000499         db  0x00 ; '.'
000000000000049a         db  0x00 ; '.'
000000000000049b         db  0x00 ; '.'
000000000000049c         db  0x00 ; '.'
000000000000049d         db  0x00 ; '.'
000000000000049e         db  0x00 ; '.'
000000000000049f         db  0x00 ; '.'
00000000000004a0         db  0x00 ; '.'
00000000000004a1         db  0x00 ; '.'
00000000000004a2         db  0x00 ; '.'
00000000000004a3         db  0x00 ; '.'
00000000000004a4         db  0x00 ; '.'
00000000000004a5         db  0x00 ; '.'
00000000000004a6         db  0x00 ; '.'
00000000000004a7         db  0x00 ; '.'
00000000000004a8         db  0x0b ; '.'
00000000000004a9         db  0x01 ; '.'
00000000000004aa         db  0x00 ; '.'
00000000000004ab         db  0x00 ; '.'
00000000000004ac         db  0x12 ; '.'
00000000000004ad         db  0x00 ; '.'
00000000000004ae         db  0x00 ; '.'
00000000000004af         db  0x00 ; '.'
00000000000004b0         db  0x00 ; '.'
00000000000004b1         db  0x00 ; '.'
00000000000004b2         db  0x00 ; '.'
00000000000004b3         db  0x00 ; '.'
00000000000004b4         db  0x00 ; '.'
00000000000004b5         db  0x00 ; '.'
00000000000004b6         db  0x00 ; '.'
00000000000004b7         db  0x00 ; '.'
00000000000004b8         db  0x00 ; '.'
00000000000004b9         db  0x00 ; '.'
00000000000004ba         db  0x00 ; '.'
00000000000004bb         db  0x00 ; '.'
00000000000004bc         db  0x00 ; '.'
00000000000004bd         db  0x00 ; '.'
00000000000004be         db  0x00 ; '.'
00000000000004bf         db  0x00 ; '.'
00000000000004c0         db  0xa4 ; '.'
00000000000004c1         db  0x00 ; '.'
00000000000004c2         db  0x00 ; '.'
00000000000004c3         db  0x00 ; '.'
00000000000004c4         db  0x12 ; '.'
00000000000004c5         db  0x00 ; '.'
00000000000004c6         db  0x00 ; '.'
00000000000004c7         db  0x00 ; '.'
00000000000004c8         db  0x00 ; '.'
00000000000004c9         db  0x00 ; '.'
00000000000004ca         db  0x00 ; '.'
00000000000004cb         db  0x00 ; '.'
00000000000004cc         db  0x00 ; '.'
00000000000004cd         db  0x00 ; '.'
00000000000004ce         db  0x00 ; '.'
00000000000004cf         db  0x00 ; '.'
00000000000004d0         db  0x00 ; '.'
00000000000004d1         db  0x00 ; '.'
00000000000004d2         db  0x00 ; '.'
00000000000004d3         db  0x00 ; '.'
00000000000004d4         db  0x00 ; '.'
00000000000004d5         db  0x00 ; '.'
00000000000004d6         db  0x00 ; '.'
00000000000004d7         db  0x00 ; '.'
00000000000004d8         db  0x00 ; '.'
00000000000004d9         db  0x02 ; '.'
00000000000004da         db  0x00 ; '.'
00000000000004db         db  0x00 ; '.'
00000000000004dc         db  0x12 ; '.'
00000000000004dd         db  0x00 ; '.'
00000000000004de         db  0x00 ; '.'
00000000000004df         db  0x00 ; '.'
00000000000004e0         db  0x00 ; '.'
00000000000004e1         db  0x00 ; '.'
00000000000004e2         db  0x00 ; '.'
00000000000004e3         db  0x00 ; '.'
00000000000004e4         db  0x00 ; '.'
00000000000004e5         db  0x00 ; '.'
00000000000004e6         db  0x00 ; '.'
00000000000004e7         db  0x00 ; '.'
00000000000004e8         db  0x00 ; '.'
00000000000004e9         db  0x00 ; '.'
00000000000004ea         db  0x00 ; '.'
00000000000004eb         db  0x00 ; '.'
00000000000004ec         db  0x00 ; '.'
00000000000004ed         db  0x00 ; '.'
00000000000004ee         db  0x00 ; '.'
00000000000004ef         db  0x00 ; '.'
00000000000004f0         db  0xd7 ; '.'
00000000000004f1         db  0x00 ; '.'
00000000000004f2         db  0x00 ; '.'
00000000000004f3         db  0x00 ; '.'
00000000000004f4         db  0x12 ; '.'
00000000000004f5         db  0x00 ; '.'
00000000000004f6         db  0x00 ; '.'
00000000000004f7         db  0x00 ; '.'
00000000000004f8         db  0x00 ; '.'
00000000000004f9         db  0x00 ; '.'
00000000000004fa         db  0x00 ; '.'
00000000000004fb         db  0x00 ; '.'
00000000000004fc         db  0x00 ; '.'
00000000000004fd         db  0x00 ; '.'
00000000000004fe         db  0x00 ; '.'
00000000000004ff         db  0x00 ; '.'
0000000000000500         db  0x00 ; '.'
0000000000000501         db  0x00 ; '.'
0000000000000502         db  0x00 ; '.'
0000000000000503         db  0x00 ; '.'
0000000000000504         db  0x00 ; '.'
0000000000000505         db  0x00 ; '.'
0000000000000506         db  0x00 ; '.'
0000000000000507         db  0x00 ; '.'
0000000000000508         db  0xe7 ; '.'
0000000000000509         db  0x01 ; '.'
000000000000050a         db  0x00 ; '.'
000000000000050b         db  0x00 ; '.'
000000000000050c         db  0x12 ; '.'
000000000000050d         db  0x00 ; '.'
000000000000050e         db  0x00 ; '.'
000000000000050f         db  0x00 ; '.'
0000000000000510         db  0x00 ; '.'
0000000000000511         db  0x00 ; '.'
0000000000000512         db  0x00 ; '.'
0000000000000513         db  0x00 ; '.'
0000000000000514         db  0x00 ; '.'
0000000000000515         db  0x00 ; '.'
0000000000000516         db  0x00 ; '.'
0000000000000517         db  0x00 ; '.'
0000000000000518         db  0x00 ; '.'
0000000000000519         db  0x00 ; '.'
000000000000051a         db  0x00 ; '.'
000000000000051b         db  0x00 ; '.'
000000000000051c         db  0x00 ; '.'
000000000000051d         db  0x00 ; '.'
000000000000051e         db  0x00 ; '.'
000000000000051f         db  0x00 ; '.'
0000000000000520         db  0xef ; '.'
0000000000000521         db  0x00 ; '.'
0000000000000522         db  0x00 ; '.'
0000000000000523         db  0x00 ; '.'
0000000000000524         db  0x12 ; '.'
0000000000000525         db  0x00 ; '.'
0000000000000526         db  0x00 ; '.'
0000000000000527         db  0x00 ; '.'
0000000000000528         db  0x00 ; '.'
0000000000000529         db  0x00 ; '.'
000000000000052a         db  0x00 ; '.'
000000000000052b         db  0x00 ; '.'
000000000000052c         db  0x00 ; '.'
000000000000052d         db  0x00 ; '.'
000000000000052e         db  0x00 ; '.'
000000000000052f         db  0x00 ; '.'
0000000000000530         db  0x00 ; '.'
0000000000000531         db  0x00 ; '.'
0000000000000532         db  0x00 ; '.'
0000000000000533         db  0x00 ; '.'
0000000000000534         db  0x00 ; '.'
0000000000000535         db  0x00 ; '.'
0000000000000536         db  0x00 ; '.'
0000000000000537         db  0x00 ; '.'
0000000000000538         db  0x13 ; '.'
0000000000000539         db  0x02 ; '.'
000000000000053a         db  0x00 ; '.'
000000000000053b         db  0x00 ; '.'
000000000000053c         db  0x12 ; '.'
000000000000053d         db  0x00 ; '.'
000000000000053e         db  0x00 ; '.'
000000000000053f         db  0x00 ; '.'
0000000000000540         db  0x00 ; '.'
0000000000000541         db  0x00 ; '.'
0000000000000542         db  0x00 ; '.'
0000000000000543         db  0x00 ; '.'
0000000000000544         db  0x00 ; '.'
0000000000000545         db  0x00 ; '.'
0000000000000546         db  0x00 ; '.'
0000000000000547         db  0x00 ; '.'
0000000000000548         db  0x00 ; '.'
0000000000000549         db  0x00 ; '.'
000000000000054a         db  0x00 ; '.'
000000000000054b         db  0x00 ; '.'
000000000000054c         db  0x00 ; '.'
000000000000054d         db  0x00 ; '.'
000000000000054e         db  0x00 ; '.'
000000000000054f         db  0x00 ; '.'
0000000000000550         db  0xc9 ; '.'
0000000000000551         db  0x00 ; '.'
0000000000000552         db  0x00 ; '.'
0000000000000553         db  0x00 ; '.'
0000000000000554         db  0x12 ; '.'
0000000000000555         db  0x00 ; '.'
0000000000000556         db  0x00 ; '.'
0000000000000557         db  0x00 ; '.'
0000000000000558         db  0x00 ; '.'
0000000000000559         db  0x00 ; '.'
000000000000055a         db  0x00 ; '.'
000000000000055b         db  0x00 ; '.'
000000000000055c         db  0x00 ; '.'
000000000000055d         db  0x00 ; '.'
000000000000055e         db  0x00 ; '.'
000000000000055f         db  0x00 ; '.'
0000000000000560         db  0x00 ; '.'
0000000000000561         db  0x00 ; '.'
0000000000000562         db  0x00 ; '.'
0000000000000563         db  0x00 ; '.'
0000000000000564         db  0x00 ; '.'
0000000000000565         db  0x00 ; '.'
0000000000000566         db  0x00 ; '.'
0000000000000567         db  0x00 ; '.'
0000000000000568         db  0xe0 ; '.'
0000000000000569         db  0x01 ; '.'
000000000000056a         db  0x00 ; '.'
000000000000056b         db  0x00 ; '.'
000000000000056c         db  0x12 ; '.'
000000000000056d         db  0x00 ; '.'
000000000000056e         db  0x00 ; '.'
000000000000056f         db  0x00 ; '.'
0000000000000570         db  0x00 ; '.'
0000000000000571         db  0x00 ; '.'
0000000000000572         db  0x00 ; '.'
0000000000000573         db  0x00 ; '.'
0000000000000574         db  0x00 ; '.'
0000000000000575         db  0x00 ; '.'
0000000000000576         db  0x00 ; '.'
0000000000000577         db  0x00 ; '.'
0000000000000578         db  0x00 ; '.'
0000000000000579         db  0x00 ; '.'
000000000000057a         db  0x00 ; '.'
000000000000057b         db  0x00 ; '.'
000000000000057c         db  0x00 ; '.'
000000000000057d         db  0x00 ; '.'
000000000000057e         db  0x00 ; '.'
000000000000057f         db  0x00 ; '.'
0000000000000580         db  0xa2 ; '.'
0000000000000581         db  0x02 ; '.'
0000000000000582         db  0x00 ; '.'
0000000000000583         db  0x00 ; '.'
0000000000000584         db  0x20 ; ' '
0000000000000585         db  0x00 ; '.'
0000000000000586         db  0x00 ; '.'
0000000000000587         db  0x00 ; '.'
0000000000000588         db  0x00 ; '.'
0000000000000589         db  0x00 ; '.'
000000000000058a         db  0x00 ; '.'
000000000000058b         db  0x00 ; '.'
000000000000058c         db  0x00 ; '.'
000000000000058d         db  0x00 ; '.'
000000000000058e         db  0x00 ; '.'
000000000000058f         db  0x00 ; '.'
0000000000000590         db  0x00 ; '.'
0000000000000591         db  0x00 ; '.'
0000000000000592         db  0x00 ; '.'
0000000000000593         db  0x00 ; '.'
0000000000000594         db  0x00 ; '.'
0000000000000595         db  0x00 ; '.'
0000000000000596         db  0x00 ; '.'
0000000000000597         db  0x00 ; '.'
0000000000000598         db  0x26 ; '&'
0000000000000599         db  0x01 ; '.'
000000000000059a         db  0x00 ; '.'
000000000000059b         db  0x00 ; '.'
000000000000059c         db  0x12 ; '.'
000000000000059d         db  0x00 ; '.'
000000000000059e         db  0x00 ; '.'
000000000000059f         db  0x00 ; '.'
00000000000005a0         db  0x00 ; '.'
00000000000005a1         db  0x00 ; '.'
00000000000005a2         db  0x00 ; '.'
00000000000005a3         db  0x00 ; '.'
00000000000005a4         db  0x00 ; '.'
00000000000005a5         db  0x00 ; '.'
00000000000005a6         db  0x00 ; '.'
00000000000005a7         db  0x00 ; '.'
00000000000005a8         db  0x00 ; '.'
00000000000005a9         db  0x00 ; '.'
00000000000005aa         db  0x00 ; '.'
00000000000005ab         db  0x00 ; '.'
00000000000005ac         db  0x00 ; '.'
00000000000005ad         db  0x00 ; '.'
00000000000005ae         db  0x00 ; '.'
00000000000005af         db  0x00 ; '.'
00000000000005b0         db  0x11 ; '.'
00000000000005b1         db  0x01 ; '.'
00000000000005b2         db  0x00 ; '.'
00000000000005b3         db  0x00 ; '.'
00000000000005b4         db  0x12 ; '.'
00000000000005b5         db  0x00 ; '.'
00000000000005b6         db  0x00 ; '.'
00000000000005b7         db  0x00 ; '.'
00000000000005b8         db  0x00 ; '.'
00000000000005b9         db  0x00 ; '.'
00000000000005ba         db  0x00 ; '.'
00000000000005bb         db  0x00 ; '.'
00000000000005bc         db  0x00 ; '.'
00000000000005bd         db  0x00 ; '.'
00000000000005be         db  0x00 ; '.'
00000000000005bf         db  0x00 ; '.'
00000000000005c0         db  0x00 ; '.'
00000000000005c1         db  0x00 ; '.'
00000000000005c2         db  0x00 ; '.'
00000000000005c3         db  0x00 ; '.'
00000000000005c4         db  0x00 ; '.'
00000000000005c5         db  0x00 ; '.'
00000000000005c6         db  0x00 ; '.'
00000000000005c7         db  0x00 ; '.'
00000000000005c8         db  0x73 ; 's'
00000000000005c9         db  0x01 ; '.'
00000000000005ca         db  0x00 ; '.'
00000000000005cb         db  0x00 ; '.'
00000000000005cc         db  0x12 ; '.'
00000000000005cd         db  0x00 ; '.'
00000000000005ce         db  0x00 ; '.'
00000000000005cf         db  0x00 ; '.'
00000000000005d0         db  0x00 ; '.'
00000000000005d1         db  0x00 ; '.'
00000000000005d2         db  0x00 ; '.'
00000000000005d3         db  0x00 ; '.'
00000000000005d4         db  0x00 ; '.'
00000000000005d5         db  0x00 ; '.'
00000000000005d6         db  0x00 ; '.'
00000000000005d7         db  0x00 ; '.'
00000000000005d8         db  0x00 ; '.'
00000000000005d9         db  0x00 ; '.'
00000000000005da         db  0x00 ; '.'
00000000000005db         db  0x00 ; '.'
00000000000005dc         db  0x00 ; '.'
00000000000005dd         db  0x00 ; '.'
00000000000005de         db  0x00 ; '.'
00000000000005df         db  0x00 ; '.'
00000000000005e0         db  0x7c ; '|'
00000000000005e1         db  0x01 ; '.'
00000000000005e2         db  0x00 ; '.'
00000000000005e3         db  0x00 ; '.'
00000000000005e4         db  0x12 ; '.'
00000000000005e5         db  0x00 ; '.'
00000000000005e6         db  0x00 ; '.'
00000000000005e7         db  0x00 ; '.'
00000000000005e8         db  0x00 ; '.'
00000000000005e9         db  0x00 ; '.'
00000000000005ea         db  0x00 ; '.'
00000000000005eb         db  0x00 ; '.'
00000000000005ec         db  0x00 ; '.'
00000000000005ed         db  0x00 ; '.'
00000000000005ee         db  0x00 ; '.'
00000000000005ef         db  0x00 ; '.'
00000000000005f0         db  0x00 ; '.'
00000000000005f1         db  0x00 ; '.'
00000000000005f2         db  0x00 ; '.'
00000000000005f3         db  0x00 ; '.'
00000000000005f4         db  0x00 ; '.'
00000000000005f5         db  0x00 ; '.'
00000000000005f6         db  0x00 ; '.'
00000000000005f7         db  0x00 ; '.'
00000000000005f8         db  0xc9 ; '.'
00000000000005f9         db  0x01 ; '.'
00000000000005fa         db  0x00 ; '.'
00000000000005fb         db  0x00 ; '.'
00000000000005fc         db  0x12 ; '.'
00000000000005fd         db  0x00 ; '.'
00000000000005fe         db  0x00 ; '.'
00000000000005ff         db  0x00 ; '.'
0000000000000600         db  0x00 ; '.'
0000000000000601         db  0x00 ; '.'
0000000000000602         db  0x00 ; '.'
0000000000000603         db  0x00 ; '.'
0000000000000604         db  0x00 ; '.'
0000000000000605         db  0x00 ; '.'
0000000000000606         db  0x00 ; '.'
0000000000000607         db  0x00 ; '.'
0000000000000608         db  0x00 ; '.'
0000000000000609         db  0x00 ; '.'
000000000000060a         db  0x00 ; '.'
000000000000060b         db  0x00 ; '.'
000000000000060c         db  0x00 ; '.'
000000000000060d         db  0x00 ; '.'
000000000000060e         db  0x00 ; '.'
000000000000060f         db  0x00 ; '.'
0000000000000610         db  0x1f ; '.'
0000000000000611         db  0x01 ; '.'
0000000000000612         db  0x00 ; '.'
0000000000000613         db  0x00 ; '.'
0000000000000614         db  0x12 ; '.'
0000000000000615         db  0x00 ; '.'
0000000000000616         db  0x00 ; '.'
0000000000000617         db  0x00 ; '.'
0000000000000618         db  0x00 ; '.'
0000000000000619         db  0x00 ; '.'
000000000000061a         db  0x00 ; '.'
000000000000061b         db  0x00 ; '.'
000000000000061c         db  0x00 ; '.'
000000000000061d         db  0x00 ; '.'
000000000000061e         db  0x00 ; '.'
000000000000061f         db  0x00 ; '.'
0000000000000620         db  0x00 ; '.'
0000000000000621         db  0x00 ; '.'
0000000000000622         db  0x00 ; '.'
0000000000000623         db  0x00 ; '.'
0000000000000624         db  0x00 ; '.'
0000000000000625         db  0x00 ; '.'
0000000000000626         db  0x00 ; '.'
0000000000000627         db  0x00 ; '.'
0000000000000628         db  0x0b ; '.'
0000000000000629         db  0x00 ; '.'
000000000000062a         db  0x00 ; '.'
000000000000062b         db  0x00 ; '.'
000000000000062c         db  0x12 ; '.'
000000000000062d         db  0x00 ; '.'
000000000000062e         db  0x00 ; '.'
000000000000062f         db  0x00 ; '.'
0000000000000630         db  0x00 ; '.'
0000000000000631         db  0x00 ; '.'
0000000000000632         db  0x00 ; '.'
0000000000000633         db  0x00 ; '.'
0000000000000634         db  0x00 ; '.'
0000000000000635         db  0x00 ; '.'
0000000000000636         db  0x00 ; '.'
0000000000000637         db  0x00 ; '.'
0000000000000638         db  0x00 ; '.'
0000000000000639         db  0x00 ; '.'
000000000000063a         db  0x00 ; '.'
000000000000063b         db  0x00 ; '.'
000000000000063c         db  0x00 ; '.'
000000000000063d         db  0x00 ; '.'
000000000000063e         db  0x00 ; '.'
000000000000063f         db  0x00 ; '.'
0000000000000640         db  0x34 ; '4'
0000000000000641         db  0x01 ; '.'
0000000000000642         db  0x00 ; '.'
0000000000000643         db  0x00 ; '.'
0000000000000644         db  0x12 ; '.'
0000000000000645         db  0x00 ; '.'
0000000000000646         db  0x00 ; '.'
0000000000000647         db  0x00 ; '.'
0000000000000648         db  0x00 ; '.'
0000000000000649         db  0x00 ; '.'
000000000000064a         db  0x00 ; '.'
000000000000064b         db  0x00 ; '.'
000000000000064c         db  0x00 ; '.'
000000000000064d         db  0x00 ; '.'
000000000000064e         db  0x00 ; '.'
000000000000064f         db  0x00 ; '.'
0000000000000650         db  0x00 ; '.'
0000000000000651         db  0x00 ; '.'
0000000000000652         db  0x00 ; '.'
0000000000000653         db  0x00 ; '.'
0000000000000654         db  0x00 ; '.'
0000000000000655         db  0x00 ; '.'
0000000000000656         db  0x00 ; '.'
0000000000000657         db  0x00 ; '.'
0000000000000658         db  0x55 ; 'U'
0000000000000659         db  0x01 ; '.'
000000000000065a         db  0x00 ; '.'
000000000000065b         db  0x00 ; '.'
000000000000065c         db  0x12 ; '.'
000000000000065d         db  0x00 ; '.'
000000000000065e         db  0x00 ; '.'
000000000000065f         db  0x00 ; '.'
0000000000000660         db  0x00 ; '.'
0000000000000661         db  0x00 ; '.'
0000000000000662         db  0x00 ; '.'
0000000000000663         db  0x00 ; '.'
0000000000000664         db  0x00 ; '.'
0000000000000665         db  0x00 ; '.'
0000000000000666         db  0x00 ; '.'
0000000000000667         db  0x00 ; '.'
0000000000000668         db  0x00 ; '.'
0000000000000669         db  0x00 ; '.'
000000000000066a         db  0x00 ; '.'
000000000000066b         db  0x00 ; '.'
000000000000066c         db  0x00 ; '.'
000000000000066d         db  0x00 ; '.'
000000000000066e         db  0x00 ; '.'
000000000000066f         db  0x00 ; '.'
0000000000000670         db  0x72 ; 'r'
0000000000000671         db  0x00 ; '.'
0000000000000672         db  0x00 ; '.'
0000000000000673         db  0x00 ; '.'
0000000000000674         db  0x12 ; '.'
0000000000000675         db  0x00 ; '.'
0000000000000676         db  0x00 ; '.'
0000000000000677         db  0x00 ; '.'
0000000000000678         db  0x00 ; '.'
0000000000000679         db  0x00 ; '.'
000000000000067a         db  0x00 ; '.'
000000000000067b         db  0x00 ; '.'
000000000000067c         db  0x00 ; '.'
000000000000067d         db  0x00 ; '.'
000000000000067e         db  0x00 ; '.'
000000000000067f         db  0x00 ; '.'
0000000000000680         db  0x00 ; '.'
0000000000000681         db  0x00 ; '.'
0000000000000682         db  0x00 ; '.'
0000000000000683         db  0x00 ; '.'
0000000000000684         db  0x00 ; '.'
0000000000000685         db  0x00 ; '.'
0000000000000686         db  0x00 ; '.'
0000000000000687         db  0x00 ; '.'
0000000000000688         db  0x1f ; '.'
0000000000000689         db  0x00 ; '.'
000000000000068a         db  0x00 ; '.'
000000000000068b         db  0x00 ; '.'
000000000000068c         db  0x12 ; '.'
000000000000068d         db  0x00 ; '.'
000000000000068e         db  0x00 ; '.'
000000000000068f         db  0x00 ; '.'
0000000000000690         db  0x00 ; '.'
0000000000000691         db  0x00 ; '.'
0000000000000692         db  0x00 ; '.'
0000000000000693         db  0x00 ; '.'
0000000000000694         db  0x00 ; '.'
0000000000000695         db  0x00 ; '.'
0000000000000696         db  0x00 ; '.'
0000000000000697         db  0x00 ; '.'
0000000000000698         db  0x00 ; '.'
0000000000000699         db  0x00 ; '.'
000000000000069a         db  0x00 ; '.'
000000000000069b         db  0x00 ; '.'
000000000000069c         db  0x00 ; '.'
000000000000069d         db  0x00 ; '.'
000000000000069e         db  0x00 ; '.'
000000000000069f         db  0x00 ; '.'
00000000000006a0         db  0x12 ; '.'
00000000000006a1         db  0x00 ; '.'
00000000000006a2         db  0x00 ; '.'
00000000000006a3         db  0x00 ; '.'
00000000000006a4         db  0x12 ; '.'
00000000000006a5         db  0x00 ; '.'
00000000000006a6         db  0x00 ; '.'
00000000000006a7         db  0x00 ; '.'
00000000000006a8         db  0x00 ; '.'
00000000000006a9         db  0x00 ; '.'
00000000000006aa         db  0x00 ; '.'
00000000000006ab         db  0x00 ; '.'
00000000000006ac         db  0x00 ; '.'
00000000000006ad         db  0x00 ; '.'
00000000000006ae         db  0x00 ; '.'
00000000000006af         db  0x00 ; '.'
00000000000006b0         db  0x00 ; '.'
00000000000006b1         db  0x00 ; '.'
00000000000006b2         db  0x00 ; '.'
00000000000006b3         db  0x00 ; '.'
00000000000006b4         db  0x00 ; '.'
00000000000006b5         db  0x00 ; '.'
00000000000006b6         db  0x00 ; '.'
00000000000006b7         db  0x00 ; '.'
00000000000006b8         db  0x9e ; '.'
00000000000006b9         db  0x00 ; '.'
00000000000006ba         db  0x00 ; '.'
00000000000006bb         db  0x00 ; '.'
00000000000006bc         db  0x12 ; '.'
00000000000006bd         db  0x00 ; '.'
00000000000006be         db  0x00 ; '.'
00000000000006bf         db  0x00 ; '.'
00000000000006c0         db  0x00 ; '.'
00000000000006c1         db  0x00 ; '.'
00000000000006c2         db  0x00 ; '.'
00000000000006c3         db  0x00 ; '.'
00000000000006c4         db  0x00 ; '.'
00000000000006c5         db  0x00 ; '.'
00000000000006c6         db  0x00 ; '.'
00000000000006c7         db  0x00 ; '.'
00000000000006c8         db  0x00 ; '.'
00000000000006c9         db  0x00 ; '.'
00000000000006ca         db  0x00 ; '.'
00000000000006cb         db  0x00 ; '.'
00000000000006cc         db  0x00 ; '.'
00000000000006cd         db  0x00 ; '.'
00000000000006ce         db  0x00 ; '.'
00000000000006cf         db  0x00 ; '.'
00000000000006d0         db  0x52 ; 'R'
00000000000006d1         db  0x00 ; '.'
00000000000006d2         db  0x00 ; '.'
00000000000006d3         db  0x00 ; '.'
00000000000006d4         db  0x12 ; '.'
00000000000006d5         db  0x00 ; '.'
00000000000006d6         db  0x00 ; '.'
00000000000006d7         db  0x00 ; '.'
00000000000006d8         db  0x00 ; '.'
00000000000006d9         db  0x00 ; '.'
00000000000006da         db  0x00 ; '.'
00000000000006db         db  0x00 ; '.'
00000000000006dc         db  0x00 ; '.'
00000000000006dd         db  0x00 ; '.'
00000000000006de         db  0x00 ; '.'
00000000000006df         db  0x00 ; '.'
00000000000006e0         db  0x00 ; '.'
00000000000006e1         db  0x00 ; '.'
00000000000006e2         db  0x00 ; '.'
00000000000006e3         db  0x00 ; '.'
00000000000006e4         db  0x00 ; '.'
00000000000006e5         db  0x00 ; '.'
00000000000006e6         db  0x00 ; '.'
00000000000006e7         db  0x00 ; '.'
00000000000006e8         db  0xf9 ; '.'
00000000000006e9         db  0x01 ; '.'
00000000000006ea         db  0x00 ; '.'
00000000000006eb         db  0x00 ; '.'
00000000000006ec         db  0x12 ; '.'
00000000000006ed         db  0x00 ; '.'
00000000000006ee         db  0x00 ; '.'
00000000000006ef         db  0x00 ; '.'
00000000000006f0         db  0x00 ; '.'
00000000000006f1         db  0x00 ; '.'
00000000000006f2         db  0x00 ; '.'
00000000000006f3         db  0x00 ; '.'
00000000000006f4         db  0x00 ; '.'
00000000000006f5         db  0x00 ; '.'
00000000000006f6         db  0x00 ; '.'
00000000000006f7         db  0x00 ; '.'
00000000000006f8         db  0x00 ; '.'
00000000000006f9         db  0x00 ; '.'
00000000000006fa         db  0x00 ; '.'
00000000000006fb         db  0x00 ; '.'
00000000000006fc         db  0x00 ; '.'
00000000000006fd         db  0x00 ; '.'
00000000000006fe         db  0x00 ; '.'
00000000000006ff         db  0x00 ; '.'
0000000000000700         db  0x42 ; 'B'
0000000000000701         db  0x02 ; '.'
0000000000000702         db  0x00 ; '.'
0000000000000703         db  0x00 ; '.'
0000000000000704         db  0x12 ; '.'
0000000000000705         db  0x00 ; '.'
0000000000000706         db  0x00 ; '.'
0000000000000707         db  0x00 ; '.'
0000000000000708         db  0x00 ; '.'
0000000000000709         db  0x00 ; '.'
000000000000070a         db  0x00 ; '.'
000000000000070b         db  0x00 ; '.'
000000000000070c         db  0x00 ; '.'
000000000000070d         db  0x00 ; '.'
000000000000070e         db  0x00 ; '.'
000000000000070f         db  0x00 ; '.'
0000000000000710         db  0x00 ; '.'
0000000000000711         db  0x00 ; '.'
0000000000000712         db  0x00 ; '.'
0000000000000713         db  0x00 ; '.'
0000000000000714         db  0x00 ; '.'
0000000000000715         db  0x00 ; '.'
0000000000000716         db  0x00 ; '.'
0000000000000717         db  0x00 ; '.'
0000000000000718         db  0x81 ; '.'
0000000000000719         db  0x00 ; '.'
000000000000071a         db  0x00 ; '.'
000000000000071b         db  0x00 ; '.'
000000000000071c         db  0x12 ; '.'
000000000000071d         db  0x00 ; '.'
000000000000071e         db  0x00 ; '.'
000000000000071f         db  0x00 ; '.'
0000000000000720         db  0x00 ; '.'
0000000000000721         db  0x00 ; '.'
0000000000000722         db  0x00 ; '.'
0000000000000723         db  0x00 ; '.'
0000000000000724         db  0x00 ; '.'
0000000000000725         db  0x00 ; '.'
0000000000000726         db  0x00 ; '.'
0000000000000727         db  0x00 ; '.'
0000000000000728         db  0x00 ; '.'
0000000000000729         db  0x00 ; '.'
000000000000072a         db  0x00 ; '.'
000000000000072b         db  0x00 ; '.'
000000000000072c         db  0x00 ; '.'
000000000000072d         db  0x00 ; '.'
000000000000072e         db  0x00 ; '.'
000000000000072f         db  0x00 ; '.'
0000000000000730         db  0x83 ; '.'
0000000000000731         db  0x01 ; '.'
0000000000000732         db  0x00 ; '.'
0000000000000733         db  0x00 ; '.'
0000000000000734         db  0x12 ; '.'
0000000000000735         db  0x00 ; '.'
0000000000000736         db  0x00 ; '.'
0000000000000737         db  0x00 ; '.'
0000000000000738         db  0x00 ; '.'
0000000000000739         db  0x00 ; '.'
000000000000073a         db  0x00 ; '.'
000000000000073b         db  0x00 ; '.'
000000000000073c         db  0x00 ; '.'
000000000000073d         db  0x00 ; '.'
000000000000073e         db  0x00 ; '.'
000000000000073f         db  0x00 ; '.'
0000000000000740         db  0x00 ; '.'
0000000000000741         db  0x00 ; '.'
0000000000000742         db  0x00 ; '.'
0000000000000743         db  0x00 ; '.'
0000000000000744         db  0x00 ; '.'
0000000000000745         db  0x00 ; '.'
0000000000000746         db  0x00 ; '.'
0000000000000747         db  0x00 ; '.'
0000000000000748         db  0xf6 ; '.'
0000000000000749         db  0x00 ; '.'
000000000000074a         db  0x00 ; '.'
000000000000074b         db  0x00 ; '.'
000000000000074c         db  0x12 ; '.'
000000000000074d         db  0x00 ; '.'
000000000000074e         db  0x00 ; '.'
000000000000074f         db  0x00 ; '.'
0000000000000750         db  0x00 ; '.'
0000000000000751         db  0x00 ; '.'
0000000000000752         db  0x00 ; '.'
0000000000000753         db  0x00 ; '.'
0000000000000754         db  0x00 ; '.'
0000000000000755         db  0x00 ; '.'
0000000000000756         db  0x00 ; '.'
0000000000000757         db  0x00 ; '.'
0000000000000758         db  0x00 ; '.'
0000000000000759         db  0x00 ; '.'
000000000000075a         db  0x00 ; '.'
000000000000075b         db  0x00 ; '.'
000000000000075c         db  0x00 ; '.'
000000000000075d         db  0x00 ; '.'
000000000000075e         db  0x00 ; '.'
000000000000075f         db  0x00 ; '.'
0000000000000760         db  0xb1 ; '.'
0000000000000761         db  0x02 ; '.'
0000000000000762         db  0x00 ; '.'
0000000000000763         db  0x00 ; '.'
0000000000000764         db  0x20 ; ' '
0000000000000765         db  0x00 ; '.'
0000000000000766         db  0x00 ; '.'
0000000000000767         db  0x00 ; '.'
0000000000000768         db  0x00 ; '.'
0000000000000769         db  0x00 ; '.'
000000000000076a         db  0x00 ; '.'
000000000000076b         db  0x00 ; '.'
000000000000076c         db  0x00 ; '.'
000000000000076d         db  0x00 ; '.'
000000000000076e         db  0x00 ; '.'
000000000000076f         db  0x00 ; '.'
0000000000000770         db  0x00 ; '.'
0000000000000771         db  0x00 ; '.'
0000000000000772         db  0x00 ; '.'
0000000000000773         db  0x00 ; '.'
0000000000000774         db  0x00 ; '.'
0000000000000775         db  0x00 ; '.'
0000000000000776         db  0x00 ; '.'
0000000000000777         db  0x00 ; '.'
0000000000000778         db  0x2c ; ','
0000000000000779         db  0x01 ; '.'
000000000000077a         db  0x00 ; '.'
000000000000077b         db  0x00 ; '.'
000000000000077c         db  0x12 ; '.'
000000000000077d         db  0x00 ; '.'
000000000000077e         db  0x00 ; '.'
000000000000077f         db  0x00 ; '.'
0000000000000780         db  0x00 ; '.'
0000000000000781         db  0x00 ; '.'
0000000000000782         db  0x00 ; '.'
0000000000000783         db  0x00 ; '.'
0000000000000784         db  0x00 ; '.'
0000000000000785         db  0x00 ; '.'
0000000000000786         db  0x00 ; '.'
0000000000000787         db  0x00 ; '.'
0000000000000788         db  0x00 ; '.'
0000000000000789         db  0x00 ; '.'
000000000000078a         db  0x00 ; '.'
000000000000078b         db  0x00 ; '.'
000000000000078c         db  0x00 ; '.'
000000000000078d         db  0x00 ; '.'
000000000000078e         db  0x00 ; '.'
000000000000078f         db  0x00 ; '.'
0000000000000790         db  0x69 ; 'i'
0000000000000791         db  0x00 ; '.'
0000000000000792         db  0x00 ; '.'
0000000000000793         db  0x00 ; '.'
0000000000000794         db  0x12 ; '.'
0000000000000795         db  0x00 ; '.'
0000000000000796         db  0x00 ; '.'
0000000000000797         db  0x00 ; '.'
0000000000000798         db  0x00 ; '.'
0000000000000799         db  0x00 ; '.'
000000000000079a         db  0x00 ; '.'
000000000000079b         db  0x00 ; '.'
000000000000079c         db  0x00 ; '.'
000000000000079d         db  0x00 ; '.'
000000000000079e         db  0x00 ; '.'
000000000000079f         db  0x00 ; '.'
00000000000007a0         db  0x00 ; '.'
00000000000007a1         db  0x00 ; '.'
00000000000007a2         db  0x00 ; '.'
00000000000007a3         db  0x00 ; '.'
00000000000007a4         db  0x00 ; '.'
00000000000007a5         db  0x00 ; '.'
00000000000007a6         db  0x00 ; '.'
00000000000007a7         db  0x00 ; '.'
00000000000007a8         db  0xba ; '.'
00000000000007a9         db  0x01 ; '.'
00000000000007aa         db  0x00 ; '.'
00000000000007ab         db  0x00 ; '.'
00000000000007ac         db  0x22 ; '"'
00000000000007ad         db  0x00 ; '.'
00000000000007ae         db  0x00 ; '.'
00000000000007af         db  0x00 ; '.'
00000000000007b0         db  0x00 ; '.'
00000000000007b1         db  0x00 ; '.'
00000000000007b2         db  0x00 ; '.'
00000000000007b3         db  0x00 ; '.'
00000000000007b4         db  0x00 ; '.'
00000000000007b5         db  0x00 ; '.'
00000000000007b6         db  0x00 ; '.'
00000000000007b7         db  0x00 ; '.'
00000000000007b8         db  0x00 ; '.'
00000000000007b9         db  0x00 ; '.'
00000000000007ba         db  0x00 ; '.'
00000000000007bb         db  0x00 ; '.'
00000000000007bc         db  0x00 ; '.'
00000000000007bd         db  0x00 ; '.'
00000000000007be         db  0x00 ; '.'
00000000000007bf         db  0x00 ; '.'
00000000000007c0         db  0x40 ; '@'
00000000000007c1         db  0x01 ; '.'
00000000000007c2         db  0x00 ; '.'
00000000000007c3         db  0x00 ; '.'
00000000000007c4         db  0x12 ; '.'
00000000000007c5         db  0x00 ; '.'
00000000000007c6         db  0x00 ; '.'
00000000000007c7         db  0x00 ; '.'
00000000000007c8         db  0x00 ; '.'
00000000000007c9         db  0x00 ; '.'
00000000000007ca         db  0x00 ; '.'
00000000000007cb         db  0x00 ; '.'
00000000000007cc         db  0x00 ; '.'
00000000000007cd         db  0x00 ; '.'
00000000000007ce         db  0x00 ; '.'
00000000000007cf         db  0x00 ; '.'
00000000000007d0         db  0x00 ; '.'
00000000000007d1         db  0x00 ; '.'
00000000000007d2         db  0x00 ; '.'
00000000000007d3         db  0x00 ; '.'
00000000000007d4         db  0x00 ; '.'
00000000000007d5         db  0x00 ; '.'
00000000000007d6         db  0x00 ; '.'
00000000000007d7         db  0x00 ; '.'
00000000000007d8         db  0x04 ; '.'
00000000000007d9         db  0x01 ; '.'
00000000000007da         db  0x00 ; '.'
00000000000007db         db  0x00 ; '.'
00000000000007dc         db  0x11 ; '.'
00000000000007dd         db  0x00 ; '.'
00000000000007de         db  0x19 ; '.'
00000000000007df         db  0x00 ; '.'
00000000000007e0         db  0x88 ; '.'
00000000000007e1         db  0x80 ; '.'
00000000000007e2         db  0x20 ; ' '
00000000000007e3         db  0x00 ; '.'                                         ; DATA XREF=version_etc_arn+89
00000000000007e4         db  0x00 ; '.'
00000000000007e5         db  0x00 ; '.'
00000000000007e6         db  0x00 ; '.'
00000000000007e7         db  0x00 ; '.'
00000000000007e8         db  0x08 ; '.'
00000000000007e9         db  0x00 ; '.'
00000000000007ea         db  0x00 ; '.'
00000000000007eb         db  0x00 ; '.'
00000000000007ec         db  0x00 ; '.'
00000000000007ed         db  0x00 ; '.'
00000000000007ee         db  0x00 ; '.'
00000000000007ef         db  0x00 ; '.'
00000000000007f0         db  0x27 ; '''
00000000000007f1         db  0x02 ; '.'
00000000000007f2         db  0x00 ; '.'
00000000000007f3         db  0x00 ; '.'
00000000000007f4         db  0x11 ; '.'
00000000000007f5         db  0x00 ; '.'
00000000000007f6         db  0x19 ; '.'
00000000000007f7         db  0x00 ; '.'
00000000000007f8         db  0x80 ; '.'
00000000000007f9         db  0x80 ; '.'
00000000000007fa         db  0x20 ; ' '
00000000000007fb         db  0x00 ; '.'
00000000000007fc         db  0x00 ; '.'
00000000000007fd         db  0x00 ; '.'
00000000000007fe         db  0x00 ; '.'
00000000000007ff         db  0x00 ; '.'
0000000000000800         db  0x08 ; '.'
0000000000000801         db  0x00 ; '.'
0000000000000802         db  0x00 ; '.'
0000000000000803         db  0x00 ; '.'
0000000000000804         db  0x00 ; '.'
0000000000000805         db  0x00 ; '.'
0000000000000806         db  0x00 ; '.'
0000000000000807         db  0x00 ; '.'
0000000000000808         db  0x86 ; '.'
0000000000000809         db  0x00 ; '.'
000000000000080a         db  0x00 ; '.'
000000000000080b         db  0x00 ; '.'
000000000000080c         db  0x21 ; '!'
000000000000080d         db  0x00 ; '.'
000000000000080e         db  0x19 ; '.'
000000000000080f         db  0x00 ; '.'
0000000000000810         db  0xa0 ; '.'
0000000000000811         db  0x80 ; '.'
0000000000000812         db  0x20 ; ' '
0000000000000813         db  0x00 ; '.'
0000000000000814         db  0x00 ; '.'
0000000000000815         db  0x00 ; '.'
0000000000000816         db  0x00 ; '.'
0000000000000817         db  0x00 ; '.'
0000000000000818         db  0x08 ; '.'
0000000000000819         db  0x00 ; '.'
000000000000081a         db  0x00 ; '.'
000000000000081b         db  0x00 ; '.'
000000000000081c         db  0x00 ; '.'
000000000000081d         db  0x00 ; '.'
000000000000081e         db  0x00 ; '.'
000000000000081f         db  0x00 ; '.'
0000000000000820         db  0x32 ; '2'
0000000000000821         db  0x02 ; '.'
0000000000000822         db  0x00 ; '.'
0000000000000823         db  0x00 ; '.'
0000000000000824         db  0x11 ; '.'
0000000000000825         db  0x00 ; '.'
0000000000000826         db  0x19 ; '.'
0000000000000827         db  0x00 ; '.'
0000000000000828         db  0xa0 ; '.'
0000000000000829         db  0x80 ; '.'
000000000000082a         db  0x20 ; ' '
000000000000082b         db  0x00 ; '.'
000000000000082c         db  0x00 ; '.'
000000000000082d         db  0x00 ; '.'
000000000000082e         db  0x00 ; '.'
000000000000082f         db  0x00 ; '.'
0000000000000830         db  0x08 ; '.'
0000000000000831         db  0x00 ; '.'
0000000000000832         db  0x00 ; '.'
0000000000000833         db  0x00 ; '.'
0000000000000834         db  0x00 ; '.'
0000000000000835         db  0x00 ; '.'
0000000000000836         db  0x00 ; '.'
0000000000000837         db  0x00 ; '.'
0000000000000838         db  0x9c ; '.'
0000000000000839         db  0x01 ; '.'
000000000000083a         db  0x00 ; '.'
000000000000083b         db  0x00 ; '.'
000000000000083c         db  0x21 ; '!'
000000000000083d         db  0x00 ; '.'
000000000000083e         db  0x19 ; '.'
000000000000083f         db  0x00 ; '.'
0000000000000840         db  0x80 ; '.'
0000000000000841         db  0x80 ; '.'
0000000000000842         db  0x20 ; ' '
0000000000000843         db  0x00 ; '.'
0000000000000844         db  0x00 ; '.'
0000000000000845         db  0x00 ; '.'
0000000000000846         db  0x00 ; '.'
0000000000000847         db  0x00 ; '.'
0000000000000848         db  0x08 ; '.'
0000000000000849         db  0x00 ; '.'
000000000000084a         db  0x00 ; '.'
000000000000084b         db  0x00 ; '.'
000000000000084c         db  0x00 ; '.'
000000000000084d         db  0x00 ; '.'
000000000000084e         db  0x00 ; '.'
000000000000084f         db  0x00 ; '.'
0000000000000850         db  0x60 ; '`'
0000000000000851         db  0x01 ; '.'
0000000000000852         db  0x00 ; '.'
0000000000000853         db  0x00 ; '.'
0000000000000854         db  0x11 ; '.'
0000000000000855         db  0x00 ; '.'
0000000000000856         db  0x19 ; '.'
0000000000000857         db  0x00 ; '.'
0000000000000858         db  0xc0 ; '.'
0000000000000859         db  0x80 ; '.'
000000000000085a         db  0x20 ; ' '
000000000000085b         db  0x00 ; '.'
000000000000085c         db  0x00 ; '.'
000000000000085d         db  0x00 ; '.'
000000000000085e         db  0x00 ; '.'
000000000000085f         db  0x00 ; '.'
0000000000000860         db  0x08 ; '.'
0000000000000861         db  0x00 ; '.'
0000000000000862         db  0x00 ; '.'
0000000000000863         db  0x00 ; '.'
0000000000000864         db  0x00 ; '.'
0000000000000865         db  0x00 ; '.'
0000000000000866         db  0x00 ; '.'
0000000000000867         db  0x00 ; '.'
0000000000000868         db  0x39 ; '9'
0000000000000869         db  0x00 ; '.'
000000000000086a         db  0x00 ; '.'
000000000000086b         db  0x00 ; '.'
000000000000086c         db  0x11 ; '.'
000000000000086d         db  0x00 ; '.'
000000000000086e         db  0x19 ; '.'
000000000000086f         db  0x00 ; '.'
0000000000000870         db  0x90 ; '.'
0000000000000871         db  0x80 ; '.'
0000000000000872         db  0x20 ; ' '
0000000000000873         db  0x00 ; '.'
0000000000000874         db  0x00 ; '.'
0000000000000875         db  0x00 ; '.'
0000000000000876         db  0x00 ; '.'
0000000000000877         db  0x00 ; '.'
0000000000000878         db  0x04 ; '.'
0000000000000879         db  0x00 ; '.'
000000000000087a         db  0x00 ; '.'
000000000000087b         db  0x00 ; '.'
000000000000087c         db  0x00 ; '.'
000000000000087d         db  0x00 ; '.'
000000000000087e         db  0x00 ; '.'
000000000000087f         db  0x00 ; '.'
0000000000000880         db  0x4e ; 'N'
0000000000000881         db  0x01 ; '.'
0000000000000882         db  0x00 ; '.'
0000000000000883         db  0x00 ; '.'
0000000000000884         db  0x11 ; '.'
0000000000000885         db  0x00 ; '.'
0000000000000886         db  0x19 ; '.'
0000000000000887         db  0x00 ; '.'
0000000000000888         db  0x98 ; '.'
0000000000000889         db  0x80 ; '.'
000000000000088a         db  0x20 ; ' '
000000000000088b         db  0x00 ; '.'
000000000000088c         db  0x00 ; '.'
000000000000088d         db  0x00 ; '.'
000000000000088e         db  0x00 ; '.'
000000000000088f         db  0x00 ; '.'
0000000000000890         db  0x08 ; '.'
0000000000000891         db  0x00 ; '.'
0000000000000892         db  0x00 ; '.'
0000000000000893         db  0x00 ; '.'
0000000000000894         db  0x00 ; '.'
0000000000000895         db  0x00 ; '.'
0000000000000896         db  0x00 ; '.'
0000000000000897         db  0x00 ; '.'


        ; Section .dynstr
        ; Range: [0x898; 0xb63[ (715 bytes)
        ; File offset : [2200; 2915[ (715 bytes)
        ; Flags: 0x2
        ;   SHT_STRTAB
        ;   SHF_ALLOC

0000000000000898         db  0x00 ; '.'
0000000000000899         db  0x6c ; 'l'
000000000000089a         db  0x69 ; 'i'
000000000000089b         db  0x62 ; 'b'
000000000000089c         db  0x63 ; 'c'
000000000000089d         db  0x2e ; '.'
000000000000089e         db  0x73 ; 's'
000000000000089f         db  0x6f ; 'o'
00000000000008a0         db  0x2e ; '.'
00000000000008a1         db  0x36 ; '6'
00000000000008a2         db  0x00 ; '.'
00000000000008a3         db  0x66 ; 'f'
00000000000008a4         db  0x66 ; 'f'
00000000000008a5         db  0x6c ; 'l'
00000000000008a6         db  0x75 ; 'u'
00000000000008a7         db  0x73 ; 's'
00000000000008a8         db  0x68 ; 'h'
00000000000008a9         db  0x00 ; '.'
00000000000008aa         db  0x5f ; '_'
00000000000008ab         db  0x5f ; '_'
00000000000008ac         db  0x70 ; 'p'
00000000000008ad         db  0x72 ; 'r'
00000000000008ae         db  0x69 ; 'i'
00000000000008af         db  0x6e ; 'n'
00000000000008b0         db  0x74 ; 't'
00000000000008b1         db  0x66 ; 'f'
00000000000008b2         db  0x5f ; '_'
00000000000008b3         db  0x63 ; 'c'
00000000000008b4         db  0x68 ; 'h'
00000000000008b5         db  0x6b ; 'k'
00000000000008b6         db  0x00 ; '.'
00000000000008b7         db  0x73 ; 's'
00000000000008b8         db  0x65 ; 'e'
00000000000008b9         db  0x74 ; 't'
00000000000008ba         db  0x6c ; 'l'
00000000000008bb         db  0x6f ; 'o'
00000000000008bc         db  0x63 ; 'c'
00000000000008bd         db  0x61 ; 'a'
00000000000008be         db  0x6c ; 'l'
00000000000008bf         db  0x65 ; 'e'
00000000000008c0         db  0x00 ; '.'
00000000000008c1         db  0x6d ; 'm'
00000000000008c2         db  0x62 ; 'b'
00000000000008c3         db  0x72 ; 'r'
00000000000008c4         db  0x74 ; 't'
00000000000008c5         db  0x6f ; 'o'
00000000000008c6         db  0x77 ; 'w'
00000000000008c7         db  0x63 ; 'c'
00000000000008c8         db  0x00 ; '.'
00000000000008c9         db  0x73 ; 's'
00000000000008ca         db  0x74 ; 't'
00000000000008cb         db  0x72 ; 'r'
00000000000008cc         db  0x6e ; 'n'
00000000000008cd         db  0x63 ; 'c'
00000000000008ce         db  0x6d ; 'm'
00000000000008cf         db  0x70 ; 'p'
00000000000008d0         db  0x00 ; '.'
00000000000008d1         db  0x6f ; 'o'
00000000000008d2         db  0x70 ; 'p'
00000000000008d3         db  0x74 ; 't'
00000000000008d4         db  0x69 ; 'i'
00000000000008d5         db  0x6e ; 'n'
00000000000008d6         db  0x64 ; 'd'
00000000000008d7         db  0x00 ; '.'
00000000000008d8         db  0x73 ; 's'
00000000000008d9         db  0x74 ; 't'
00000000000008da         db  0x72 ; 'r'
00000000000008db         db  0x72 ; 'r'
00000000000008dc         db  0x63 ; 'c'
00000000000008dd         db  0x68 ; 'h'
00000000000008de         db  0x72 ; 'r'
00000000000008df         db  0x00 ; '.'
00000000000008e0         db  0x64 ; 'd'
00000000000008e1         db  0x63 ; 'c'
00000000000008e2         db  0x67 ; 'g'
00000000000008e3         db  0x65 ; 'e'
00000000000008e4         db  0x74 ; 't'
00000000000008e5         db  0x74 ; 't'
00000000000008e6         db  0x65 ; 'e'
00000000000008e7         db  0x78 ; 'x'
00000000000008e8         db  0x74 ; 't'
00000000000008e9         db  0x00 ; '.'
00000000000008ea         db  0x65 ; 'e'
00000000000008eb         db  0x72 ; 'r'
00000000000008ec         db  0x72 ; 'r'
00000000000008ed         db  0x6f ; 'o'
00000000000008ee         db  0x72 ; 'r'
00000000000008ef         db  0x00 ; '.'
00000000000008f0         db  0x5f ; '_'
00000000000008f1         db  0x5f ; '_'
00000000000008f2         db  0x73 ; 's'
00000000000008f3         db  0x74 ; 't'
00000000000008f4         db  0x61 ; 'a'
00000000000008f5         db  0x63 ; 'c'
00000000000008f6         db  0x6b ; 'k'
00000000000008f7         db  0x5f ; '_'
00000000000008f8         db  0x63 ; 'c'
00000000000008f9         db  0x68 ; 'h'
00000000000008fa         db  0x6b ; 'k'
00000000000008fb         db  0x5f ; '_'
00000000000008fc         db  0x66 ; 'f'
00000000000008fd         db  0x61 ; 'a'
00000000000008fe         db  0x69 ; 'i'
00000000000008ff         db  0x6c ; 'l'
0000000000000900         db  0x00 ; '.'
0000000000000901         db  0x69 ; 'i'
0000000000000902         db  0x73 ; 's'
0000000000000903         db  0x77 ; 'w'
0000000000000904         db  0x70 ; 'p'
0000000000000905         db  0x72 ; 'r'
0000000000000906         db  0x69 ; 'i'
0000000000000907         db  0x6e ; 'n'
0000000000000908         db  0x74 ; 't'
0000000000000909         db  0x00 ; '.'
000000000000090a         db  0x72 ; 'r'
000000000000090b         db  0x65 ; 'e'
000000000000090c         db  0x61 ; 'a'
000000000000090d         db  0x6c ; 'l'
000000000000090e         db  0x6c ; 'l'
000000000000090f         db  0x6f ; 'o'
0000000000000910         db  0x63 ; 'c'
0000000000000911         db  0x00 ; '.'
0000000000000912         db  0x61 ; 'a'
0000000000000913         db  0x62 ; 'b'
0000000000000914         db  0x6f ; 'o'
0000000000000915         db  0x72 ; 'r'
0000000000000916         db  0x74 ; 't'
0000000000000917         db  0x00 ; '.'
0000000000000918         db  0x5f ; '_'
0000000000000919         db  0x65 ; 'e'
000000000000091a         db  0x78 ; 'x'
000000000000091b         db  0x69 ; 'i'
000000000000091c         db  0x74 ; 't'
000000000000091d         db  0x00 ; '.'
000000000000091e         db  0x70 ; 'p'
000000000000091f         db  0x72 ; 'r'
0000000000000920         db  0x6f ; 'o'
0000000000000921         db  0x67 ; 'g'
0000000000000922         db  0x72 ; 'r'
0000000000000923         db  0x61 ; 'a'
0000000000000924         db  0x6d ; 'm'
0000000000000925         db  0x5f ; '_'
0000000000000926         db  0x69 ; 'i'
0000000000000927         db  0x6e ; 'n'
0000000000000928         db  0x76 ; 'v'
0000000000000929         db  0x6f ; 'o'
000000000000092a         db  0x63 ; 'c'
000000000000092b         db  0x61 ; 'a'
000000000000092c         db  0x74 ; 't'
000000000000092d         db  0x69 ; 'i'
000000000000092e         db  0x6f ; 'o'
000000000000092f         db  0x6e ; 'n'
0000000000000930         db  0x5f ; '_'
0000000000000931         db  0x6e ; 'n'
0000000000000932         db  0x61 ; 'a'
0000000000000933         db  0x6d ; 'm'
0000000000000934         db  0x65 ; 'e'
0000000000000935         db  0x00 ; '.'
0000000000000936         db  0x63 ; 'c'
0000000000000937         db  0x68 ; 'h'
0000000000000938         db  0x6d ; 'm'
0000000000000939         db  0x6f ; 'o'
000000000000093a         db  0x64 ; 'd'
000000000000093b         db  0x00 ; '.'
000000000000093c         db  0x5f ; '_'
000000000000093d         db  0x5f ; '_'
000000000000093e         db  0x61 ; 'a'
000000000000093f         db  0x73 ; 's'
0000000000000940         db  0x73 ; 's'
0000000000000941         db  0x65 ; 'e'
0000000000000942         db  0x72 ; 'r'
0000000000000943         db  0x74 ; 't'
0000000000000944         db  0x5f ; '_'
0000000000000945         db  0x66 ; 'f'
0000000000000946         db  0x61 ; 'a'
0000000000000947         db  0x69 ; 'i'
0000000000000948         db  0x6c ; 'l'
0000000000000949         db  0x00 ; '.'
000000000000094a         db  0x5f ; '_'
000000000000094b         db  0x5f ; '_'
000000000000094c         db  0x63 ; 'c'
000000000000094d         db  0x74 ; 't'
000000000000094e         db  0x79 ; 'y'
000000000000094f         db  0x70 ; 'p'
0000000000000950         db  0x65 ; 'e'
0000000000000951         db  0x5f ; '_'
0000000000000952         db  0x67 ; 'g'
0000000000000953         db  0x65 ; 'e'
0000000000000954         db  0x74 ; 't'
0000000000000955         db  0x5f ; '_'
0000000000000956         db  0x6d ; 'm'
0000000000000957         db  0x62 ; 'b'
0000000000000958         db  0x5f ; '_'
0000000000000959         db  0x63 ; 'c'
000000000000095a         db  0x75 ; 'u'
000000000000095b         db  0x72 ; 'r'
000000000000095c         db  0x5f ; '_'
000000000000095d         db  0x6d ; 'm'
000000000000095e         db  0x61 ; 'a'
000000000000095f         db  0x78 ; 'x'
0000000000000960         db  0x00 ; '.'
0000000000000961         db  0x63 ; 'c'
0000000000000962         db  0x61 ; 'a'
0000000000000963         db  0x6c ; 'l'
0000000000000964         db  0x6c ; 'l'
0000000000000965         db  0x6f ; 'o'
0000000000000966         db  0x63 ; 'c'
0000000000000967         db  0x00 ; '.'
0000000000000968         db  0x73 ; 's'
0000000000000969         db  0x74 ; 't'
000000000000096a         db  0x72 ; 'r'
000000000000096b         db  0x6c ; 'l'
000000000000096c         db  0x65 ; 'e'
000000000000096d         db  0x6e ; 'n'
000000000000096e         db  0x00 ; '.'
000000000000096f         db  0x6d ; 'm'
0000000000000970         db  0x65 ; 'e'
0000000000000971         db  0x6d ; 'm'
0000000000000972         db  0x73 ; 's'
0000000000000973         db  0x65 ; 'e'
0000000000000974         db  0x74 ; 't'
0000000000000975         db  0x00 ; '.'
0000000000000976         db  0x5f ; '_'
0000000000000977         db  0x5f ; '_'
0000000000000978         db  0x65 ; 'e'
0000000000000979         db  0x72 ; 'r'
000000000000097a         db  0x72 ; 'r'
000000000000097b         db  0x6e ; 'n'
000000000000097c         db  0x6f ; 'o'
000000000000097d         db  0x5f ; '_'
000000000000097e         db  0x6c ; 'l'
000000000000097f         db  0x6f ; 'o'
0000000000000980         db  0x63 ; 'c'
0000000000000981         db  0x61 ; 'a'
0000000000000982         db  0x74 ; 't'
0000000000000983         db  0x69 ; 'i'
0000000000000984         db  0x6f ; 'o'
0000000000000985         db  0x6e ; 'n'
0000000000000986         db  0x00 ; '.'
0000000000000987         db  0x6d ; 'm'
0000000000000988         db  0x65 ; 'e'
0000000000000989         db  0x6d ; 'm'
000000000000098a         db  0x63 ; 'c'
000000000000098b         db  0x6d ; 'm'
000000000000098c         db  0x70 ; 'p'
000000000000098d         db  0x00 ; '.'
000000000000098e         db  0x5f ; '_'
000000000000098f         db  0x5f ; '_'
0000000000000990         db  0x66 ; 'f'
0000000000000991         db  0x70 ; 'p'
0000000000000992         db  0x72 ; 'r'
0000000000000993         db  0x69 ; 'i'
0000000000000994         db  0x6e ; 'n'
0000000000000995         db  0x74 ; 't'
0000000000000996         db  0x66 ; 'f'
0000000000000997         db  0x5f ; '_'
0000000000000998         db  0x63 ; 'c'
0000000000000999         db  0x68 ; 'h'
000000000000099a         db  0x6b ; 'k'
000000000000099b         db  0x00 ; '.'
000000000000099c         db  0x73 ; 's'
000000000000099d         db  0x74 ; 't'
000000000000099e         db  0x64 ; 'd'
000000000000099f         db  0x6f ; 'o'
00000000000009a0         db  0x75 ; 'u'
00000000000009a1         db  0x74 ; 't'
00000000000009a2         db  0x00 ; '.'
00000000000009a3         db  0x6c ; 'l'
00000000000009a4         db  0x73 ; 's'
00000000000009a5         db  0x65 ; 'e'
00000000000009a6         db  0x65 ; 'e'
00000000000009a7         db  0x6b ; 'k'
00000000000009a8         db  0x00 ; '.'
00000000000009a9         db  0x6d ; 'm'
00000000000009aa         db  0x65 ; 'e'
00000000000009ab         db  0x6d ; 'm'
00000000000009ac         db  0x63 ; 'c'
00000000000009ad         db  0x70 ; 'p'
00000000000009ae         db  0x79 ; 'y'
00000000000009af         db  0x00 ; '.'
00000000000009b0         db  0x66 ; 'f'
00000000000009b1         db  0x63 ; 'c'
00000000000009b2         db  0x6c ; 'l'
00000000000009b3         db  0x6f ; 'o'
00000000000009b4         db  0x73 ; 's'
00000000000009b5         db  0x65 ; 'e'
00000000000009b6         db  0x00 ; '.'
00000000000009b7         db  0x6d ; 'm'
00000000000009b8         db  0x61 ; 'a'
00000000000009b9         db  0x6c ; 'l'
00000000000009ba         db  0x6c ; 'l'
00000000000009bb         db  0x6f ; 'o'
00000000000009bc         db  0x63 ; 'c'
00000000000009bd         db  0x00 ; '.'
00000000000009be         db  0x75 ; 'u'
00000000000009bf         db  0x6d ; 'm'
00000000000009c0         db  0x61 ; 'a'                                         ; DATA XREF=mode_compile+768
00000000000009c1         db  0x73 ; 's'
00000000000009c2         db  0x6b ; 'k'
00000000000009c3         db  0x00 ; '.'
00000000000009c4         db  0x6d ; 'm'
00000000000009c5         db  0x62 ; 'b'
00000000000009c6         db  0x73 ; 's'
00000000000009c7         db  0x69 ; 'i'
00000000000009c8         db  0x6e ; 'n'
00000000000009c9         db  0x69 ; 'i'
00000000000009ca         db  0x74 ; 't'
00000000000009cb         db  0x00 ; '.'
00000000000009cc         db  0x6e ; 'n'
00000000000009cd         db  0x6c ; 'l'
00000000000009ce         db  0x5f ; '_'
00000000000009cf         db  0x6c ; 'l'
00000000000009d0         db  0x61 ; 'a'
00000000000009d1         db  0x6e ; 'n'
00000000000009d2         db  0x67 ; 'g'
00000000000009d3         db  0x69 ; 'i'
00000000000009d4         db  0x6e ; 'n'
00000000000009d5         db  0x66 ; 'f'
00000000000009d6         db  0x6f ; 'o'
00000000000009d7         db  0x00 ; '.'
00000000000009d8         db  0x5f ; '_'
00000000000009d9         db  0x5f ; '_'
00000000000009da         db  0x63 ; 'c'
00000000000009db         db  0x74 ; 't'
00000000000009dc         db  0x79 ; 'y'
00000000000009dd         db  0x70 ; 'p'
00000000000009de         db  0x65 ; 'e'
00000000000009df         db  0x5f ; '_'
00000000000009e0         db  0x62 ; 'b'
00000000000009e1         db  0x5f ; '_'
00000000000009e2         db  0x6c ; 'l'
00000000000009e3         db  0x6f ; 'o'
00000000000009e4         db  0x63 ; 'c'
00000000000009e5         db  0x00 ; '.'
00000000000009e6         db  0x6f ; 'o'
00000000000009e7         db  0x70 ; 'p'
00000000000009e8         db  0x74 ; 't'
00000000000009e9         db  0x61 ; 'a'
00000000000009ea         db  0x72 ; 'r'
00000000000009eb         db  0x67 ; 'g'
00000000000009ec         db  0x00 ; '.'
00000000000009ed         db  0x5f ; '_'
00000000000009ee         db  0x5f ; '_'
00000000000009ef         db  0x66 ; 'f'
00000000000009f0         db  0x72 ; 'r'
00000000000009f1         db  0x65 ; 'e'
00000000000009f2         db  0x61 ; 'a'
00000000000009f3         db  0x64 ; 'd'
00000000000009f4         db  0x69 ; 'i'
00000000000009f5         db  0x6e ; 'n'
00000000000009f6         db  0x67 ; 'g'
00000000000009f7         db  0x00 ; '.'
00000000000009f8         db  0x73 ; 's'
00000000000009f9         db  0x74 ; 't'
00000000000009fa         db  0x64 ; 'd'
00000000000009fb         db  0x65 ; 'e'
00000000000009fc         db  0x72 ; 'r'
00000000000009fd         db  0x72 ; 'r'
00000000000009fe         db  0x00 ; '.'
00000000000009ff         db  0x67 ; 'g'
                     aEtoptlong:
0000000000000a00         db         "etopt_long", 0
0000000000000a0b         db  0x5f ; '_'
0000000000000a0c         db  0x5f ; '_'
0000000000000a0d         db  0x78 ; 'x'
0000000000000a0e         db  0x6d ; 'm'
0000000000000a0f         db  0x6b ; 'k'
0000000000000a10         db  0x6e ; 'n'
0000000000000a11         db  0x6f ; 'o'
0000000000000a12         db  0x64 ; 'd'
0000000000000a13         db  0x00 ; '.'
0000000000000a14         db  0x66 ; 'f'
0000000000000a15         db  0x69 ; 'i'
0000000000000a16         db  0x6c ; 'l'
0000000000000a17         db  0x65 ; 'e'
0000000000000a18         db  0x6e ; 'n'
0000000000000a19         db  0x6f ; 'o'
0000000000000a1a         db  0x00 ; '.'
0000000000000a1b         db  0x66 ; 'f'
0000000000000a1c         db  0x77 ; 'w'
0000000000000a1d         db  0x72 ; 'r'
0000000000000a1e         db  0x69 ; 'i'
0000000000000a1f         db  0x74 ; 't'
0000000000000a20         db  0x65 ; 'e'
0000000000000a21         db  0x00 ; '.'
0000000000000a22         db  0x5f ; '_'
0000000000000a23         db  0x5f ; '_'
0000000000000a24         db  0x66 ; 'f'
0000000000000a25         db  0x70 ; 'p'
0000000000000a26         db  0x65 ; 'e'
0000000000000a27         db  0x6e ; 'n'
0000000000000a28         db  0x64 ; 'd'
0000000000000a29         db  0x69 ; 'i'
0000000000000a2a         db  0x6e ; 'n'
0000000000000a2b         db  0x67 ; 'g'
0000000000000a2c         db  0x00 ; '.'
0000000000000a2d         db  0x73 ; 's'
0000000000000a2e         db  0x74 ; 't'
0000000000000a2f         db  0x72 ; 'r'
0000000000000a30         db  0x63 ; 'c'
0000000000000a31         db  0x68 ; 'h'
0000000000000a32         db  0x72 ; 'r'
0000000000000a33         db  0x00 ; '.'
0000000000000a34         db  0x70 ; 'p'
0000000000000a35         db  0x72 ; 'r'
0000000000000a36         db  0x6f ; 'o'
0000000000000a37         db  0x67 ; 'g'
0000000000000a38         db  0x72 ; 'r'
0000000000000a39         db  0x61 ; 'a'
0000000000000a3a         db  0x6d ; 'm'
0000000000000a3b         db  0x5f ; '_'
0000000000000a3c         db  0x69 ; 'i'
0000000000000a3d         db  0x6e ; 'n'
0000000000000a3e         db  0x76 ; 'v'
0000000000000a3f         db  0x6f ; 'o'
0000000000000a40         db  0x63 ; 'c'
0000000000000a41         db  0x61 ; 'a'
0000000000000a42         db  0x74 ; 't'
0000000000000a43         db  0x69 ; 'i'
0000000000000a44         db  0x6f ; 'o'
0000000000000a45         db  0x6e ; 'n'
0000000000000a46         db  0x5f ; '_'
0000000000000a47         db  0x73 ; 's'
0000000000000a48         db  0x68 ; 'h'
0000000000000a49         db  0x6f ; 'o'
0000000000000a4a         db  0x72 ; 'r'
0000000000000a4b         db  0x74 ; 't'
0000000000000a4c         db  0x5f ; '_'
0000000000000a4d         db  0x6e ; 'n'
0000000000000a4e         db  0x61 ; 'a'
0000000000000a4f         db  0x6d ; 'm'
0000000000000a50         db  0x65 ; 'e'
0000000000000a51         db  0x00 ; '.'
0000000000000a52         db  0x5f ; '_'
0000000000000a53         db  0x5f ; '_'
0000000000000a54         db  0x63 ; 'c'
0000000000000a55         db  0x78 ; 'x'
0000000000000a56         db  0x61 ; 'a'
0000000000000a57         db  0x5f ; '_'
0000000000000a58         db  0x66 ; 'f'
0000000000000a59         db  0x69 ; 'i'
0000000000000a5a         db  0x6e ; 'n'
0000000000000a5b         db  0x61 ; 'a'
0000000000000a5c         db  0x6c ; 'l'
0000000000000a5d         db  0x69 ; 'i'
0000000000000a5e         db  0x7a ; 'z'
0000000000000a5f         db  0x65 ; 'e'
0000000000000a60         db  0x00 ; '.'
0000000000000a61         db  0x5f ; '_'
0000000000000a62         db  0x5f ; '_'
0000000000000a63         db  0x78 ; 'x'
0000000000000a64         db  0x73 ; 's'
0000000000000a65         db  0x74 ; 't'
0000000000000a66         db  0x61 ; 'a'
0000000000000a67         db  0x74 ; 't'
0000000000000a68         db  0x00 ; '.'
0000000000000a69         db  0x62 ; 'b'
0000000000000a6a         db  0x69 ; 'i'
0000000000000a6b         db  0x6e ; 'n'
0000000000000a6c         db  0x64 ; 'd'
0000000000000a6d         db  0x74 ; 't'
0000000000000a6e         db  0x65 ; 'e'
0000000000000a6f         db  0x78 ; 'x'
0000000000000a70         db  0x74 ; 't'
0000000000000a71         db  0x64 ; 'd'
0000000000000a72         db  0x6f ; 'o'
0000000000000a73         db  0x6d ; 'm'
0000000000000a74         db  0x61 ; 'a'
0000000000000a75         db  0x69 ; 'i'
0000000000000a76         db  0x6e ; 'n'
0000000000000a77         db  0x00 ; '.'
0000000000000a78         db  0x6d ; 'm'
0000000000000a79         db  0x6b ; 'k'
0000000000000a7a         db  0x66 ; 'f'
0000000000000a7b         db  0x69 ; 'i'
0000000000000a7c         db  0x66 ; 'f'
0000000000000a7d         db  0x6f ; 'o'
0000000000000a7e         db  0x00 ; '.'
0000000000000a7f         db  0x5f ; '_'
0000000000000a80         db  0x5f ; '_'
0000000000000a81         db  0x6c ; 'l'
0000000000000a82         db  0x69 ; 'i'
0000000000000a83         db  0x62 ; 'b'
0000000000000a84         db  0x63 ; 'c'
0000000000000a85         db  0x5f ; '_'
0000000000000a86         db  0x73 ; 's'
0000000000000a87         db  0x74 ; 't'
0000000000000a88         db  0x61 ; 'a'
0000000000000a89         db  0x72 ; 'r'
0000000000000a8a         db  0x74 ; 't'
0000000000000a8b         db  0x5f ; '_'
0000000000000a8c         db  0x6d ; 'm'
0000000000000a8d         db  0x61 ; 'a'
0000000000000a8e         db  0x69 ; 'i'
0000000000000a8f         db  0x6e ; 'n'
0000000000000a90         db  0x00 ; '.'
0000000000000a91         db  0x66 ; 'f'
0000000000000a92         db  0x73 ; 's'
0000000000000a93         db  0x65 ; 'e'
0000000000000a94         db  0x65 ; 'e'
0000000000000a95         db  0x6b ; 'k'
0000000000000a96         db  0x6f ; 'o'
0000000000000a97         db  0x00 ; '.'
0000000000000a98         db  0x5f ; '_'
0000000000000a99         db  0x5f ; '_'
0000000000000a9a         db  0x73 ; 's'
0000000000000a9b         db  0x74 ; 't'
0000000000000a9c         db  0x72 ; 'r'
0000000000000a9d         db  0x74 ; 't'
0000000000000a9e         db  0x6f ; 'o'
0000000000000a9f         db  0x75 ; 'u'
0000000000000aa0         db  0x6c ; 'l'
0000000000000aa1         db  0x5f ; '_'
0000000000000aa2         db  0x69 ; 'i'
0000000000000aa3         db  0x6e ; 'n'
0000000000000aa4         db  0x74 ; 't'
0000000000000aa5         db  0x65 ; 'e'
0000000000000aa6         db  0x72 ; 'r'
0000000000000aa7         db  0x6e ; 'n'
0000000000000aa8         db  0x61 ; 'a'
0000000000000aa9         db  0x6c ; 'l'
0000000000000aaa         db  0x00 ; '.'
0000000000000aab         db  0x66 ; 'f'
0000000000000aac         db  0x70 ; 'p'
0000000000000aad         db  0x75 ; 'u'
0000000000000aae         db  0x74 ; 't'
0000000000000aaf         db  0x73 ; 's'
0000000000000ab0         db  0x5f ; '_'
0000000000000ab1         db  0x75 ; 'u'
0000000000000ab2         db  0x6e ; 'n'
0000000000000ab3         db  0x6c ; 'l'
0000000000000ab4         db  0x6f ; 'o'
0000000000000ab5         db  0x63 ; 'c'
0000000000000ab6         db  0x6b ; 'k'
0000000000000ab7         db  0x65 ; 'e'
0000000000000ab8         db  0x64 ; 'd'
0000000000000ab9         db  0x00 ; '.'
0000000000000aba         db  0x66 ; 'f'
0000000000000abb         db  0x72 ; 'r'
0000000000000abc         db  0x65 ; 'e'
0000000000000abd         db  0x65 ; 'e'
0000000000000abe         db  0x00 ; '.'
0000000000000abf         db  0x5f ; '_'
0000000000000ac0         db  0x5f ; '_'
0000000000000ac1         db  0x70 ; 'p'
0000000000000ac2         db  0x72 ; 'r'
0000000000000ac3         db  0x6f ; 'o'
0000000000000ac4         db  0x67 ; 'g'
0000000000000ac5         db  0x6e ; 'n'
0000000000000ac6         db  0x61 ; 'a'
0000000000000ac7         db  0x6d ; 'm'
0000000000000ac8         db  0x65 ; 'e'
0000000000000ac9         db  0x00 ; '.'
0000000000000aca         db  0x5f ; '_'
0000000000000acb         db  0x5f ; '_'
0000000000000acc         db  0x70 ; 'p'
0000000000000acd         db  0x72 ; 'r'
0000000000000ace         db  0x6f ; 'o'
0000000000000acf         db  0x67 ; 'g'
0000000000000ad0         db  0x6e ; 'n'
0000000000000ad1         db  0x61 ; 'a'
0000000000000ad2         db  0x6d ; 'm'
0000000000000ad3         db  0x65 ; 'e'
0000000000000ad4         db  0x5f ; '_'
0000000000000ad5         db  0x66 ; 'f'
0000000000000ad6         db  0x75 ; 'u'
0000000000000ad7         db  0x6c ; 'l'
0000000000000ad8         db  0x6c ; 'l'
0000000000000ad9         db  0x00 ; '.'
0000000000000ada         db  0x5f ; '_'
0000000000000adb         db  0x5f ; '_'
0000000000000adc         db  0x63 ; 'c'
0000000000000add         db  0x78 ; 'x'
0000000000000ade         db  0x61 ; 'a'
0000000000000adf         db  0x5f ; '_'
0000000000000ae0         db  0x61 ; 'a'
0000000000000ae1         db  0x74 ; 't'
0000000000000ae2         db  0x65 ; 'e'
0000000000000ae3         db  0x78 ; 'x'
0000000000000ae4         db  0x69 ; 'i'
0000000000000ae5         db  0x74 ; 't'
0000000000000ae6         db  0x00 ; '.'
0000000000000ae7         db  0x47 ; 'G'
0000000000000ae8         db  0x4c ; 'L'
0000000000000ae9         db  0x49 ; 'I'
0000000000000aea         db  0x42 ; 'B'
0000000000000aeb         db  0x43 ; 'C'
0000000000000aec         db  0x5f ; '_'
0000000000000aed         db  0x32 ; '2'
0000000000000aee         db  0x2e ; '.'
0000000000000aef         db  0x33 ; '3'
0000000000000af0         db  0x00 ; '.'
0000000000000af1         db  0x47 ; 'G'
0000000000000af2         db  0x4c ; 'L'
0000000000000af3         db  0x49 ; 'I'
0000000000000af4         db  0x42 ; 'B'
0000000000000af5         db  0x43 ; 'C'
0000000000000af6         db  0x5f ; '_'
0000000000000af7         db  0x32 ; '2'
0000000000000af8         db  0x2e ; '.'
0000000000000af9         db  0x33 ; '3'
0000000000000afa         db  0x2e ; '.'
0000000000000afb         db  0x34 ; '4'
0000000000000afc         db  0x00 ; '.'
0000000000000afd         db  0x47 ; 'G'
0000000000000afe         db  0x4c ; 'L'
0000000000000aff         db  0x49 ; 'I'
                     aBc214:
0000000000000b00         db         "BC_2.14", 0
0000000000000b08         db  0x47 ; 'G'
0000000000000b09         db  0x4c ; 'L'
0000000000000b0a         db  0x49 ; 'I'
0000000000000b0b         db  0x42 ; 'B'
0000000000000b0c         db  0x43 ; 'C'
0000000000000b0d         db  0x5f ; '_'
0000000000000b0e         db  0x32 ; '2'
0000000000000b0f         db  0x2e ; '.'
0000000000000b10         db  0x34 ; '4'
0000000000000b11         db  0x00 ; '.'
0000000000000b12         db  0x47 ; 'G'
0000000000000b13         db  0x4c ; 'L'
0000000000000b14         db  0x49 ; 'I'
0000000000000b15         db  0x42 ; 'B'
0000000000000b16         db  0x43 ; 'C'
0000000000000b17         db  0x5f ; '_'
0000000000000b18         db  0x32 ; '2'
0000000000000b19         db  0x2e ; '.'
0000000000000b1a         db  0x32 ; '2'
0000000000000b1b         db  0x2e ; '.'
0000000000000b1c         db  0x35 ; '5'
0000000000000b1d         db  0x00 ; '.'
0000000000000b1e         db  0x5f ; '_'
0000000000000b1f         db  0x49 ; 'I'
0000000000000b20         db  0x54 ; 'T'
0000000000000b21         db  0x4d ; 'M'
0000000000000b22         db  0x5f ; '_'
0000000000000b23         db  0x64 ; 'd'
0000000000000b24         db  0x65 ; 'e'
0000000000000b25         db  0x72 ; 'r'
0000000000000b26         db  0x65 ; 'e'
0000000000000b27         db  0x67 ; 'g'
0000000000000b28         db  0x69 ; 'i'
0000000000000b29         db  0x73 ; 's'
0000000000000b2a         db  0x74 ; 't'
0000000000000b2b         db  0x65 ; 'e'
0000000000000b2c         db  0x72 ; 'r'
0000000000000b2d         db  0x54 ; 'T'
0000000000000b2e         db  0x4d ; 'M'
0000000000000b2f         db  0x43 ; 'C'
0000000000000b30         db  0x6c ; 'l'
0000000000000b31         db  0x6f ; 'o'
0000000000000b32         db  0x6e ; 'n'
0000000000000b33         db  0x65 ; 'e'
0000000000000b34         db  0x54 ; 'T'
0000000000000b35         db  0x61 ; 'a'
0000000000000b36         db  0x62 ; 'b'
0000000000000b37         db  0x6c ; 'l'
0000000000000b38         db  0x65 ; 'e'
0000000000000b39         db  0x00 ; '.'
0000000000000b3a         db  0x5f ; '_'
0000000000000b3b         db  0x5f ; '_'
0000000000000b3c         db  0x67 ; 'g'
0000000000000b3d         db  0x6d ; 'm'
0000000000000b3e         db  0x6f ; 'o'
0000000000000b3f         db  0x6e ; 'n'
0000000000000b40         db  0x5f ; '_'
                     aStart:
0000000000000b41         db         "start__", 0
0000000000000b49         db  0x5f ; '_'
0000000000000b4a         db  0x49 ; 'I'
0000000000000b4b         db  0x54 ; 'T'
0000000000000b4c         db  0x4d ; 'M'
0000000000000b4d         db  0x5f ; '_'
0000000000000b4e         db  0x72 ; 'r'
0000000000000b4f         db  0x65 ; 'e'
0000000000000b50         db  0x67 ; 'g'
0000000000000b51         db  0x69 ; 'i'
0000000000000b52         db  0x73 ; 's'
0000000000000b53         db  0x74 ; 't'
0000000000000b54         db  0x65 ; 'e'
0000000000000b55         db  0x72 ; 'r'
0000000000000b56         db  0x54 ; 'T'
0000000000000b57         db  0x4d ; 'M'
0000000000000b58         db  0x43 ; 'C'
0000000000000b59         db  0x6c ; 'l'
0000000000000b5a         db  0x6f ; 'o'
0000000000000b5b         db  0x6e ; 'n'
0000000000000b5c         db  0x65 ; 'e'
0000000000000b5d         db  0x54 ; 'T'
0000000000000b5e         db  0x61 ; 'a'
0000000000000b5f         db  0x62 ; 'b'
0000000000000b60         db  0x6c ; 'l'
0000000000000b61         db  0x65 ; 'e'
0000000000000b62         db  0x00 ; '.'
0000000000000b63         db  0x00 ; '.'


        ; Section .gnu.version
        ; Range: [0xb64; 0xbde[ (122 bytes)
        ; File offset : [2916; 3038[ (122 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000b64         db  0x00 ; '.'
0000000000000b65         db  0x00 ; '.'
0000000000000b66         db  0x02 ; '.'
0000000000000b67         db  0x00 ; '.'
0000000000000b68         db  0x02 ; '.'
0000000000000b69         db  0x00 ; '.'
0000000000000b6a         db  0x02 ; '.'
0000000000000b6b         db  0x00 ; '.'
0000000000000b6c         db  0x02 ; '.'
0000000000000b6d         db  0x00 ; '.'
0000000000000b6e         db  0x00 ; '.'
0000000000000b6f         db  0x00 ; '.'
0000000000000b70         db  0x02 ; '.'
0000000000000b71         db  0x00 ; '.'
0000000000000b72         db  0x02 ; '.'
0000000000000b73         db  0x00 ; '.'
0000000000000b74         db  0x02 ; '.'
0000000000000b75         db  0x00 ; '.'
0000000000000b76         db  0x02 ; '.'
0000000000000b77         db  0x00 ; '.'
0000000000000b78         db  0x02 ; '.'
0000000000000b79         db  0x00 ; '.'
0000000000000b7a         db  0x02 ; '.'
0000000000000b7b         db  0x00 ; '.'
0000000000000b7c         db  0x02 ; '.'
0000000000000b7d         db  0x00 ; '.'
0000000000000b7e         db  0x02 ; '.'
0000000000000b7f         db  0x00 ; '.'
0000000000000b80         db  0x03 ; '.'
0000000000000b81         db  0x00 ; '.'
0000000000000b82         db  0x02 ; '.'
0000000000000b83         db  0x00 ; '.'
0000000000000b84         db  0x02 ; '.'
0000000000000b85         db  0x00 ; '.'
0000000000000b86         db  0x02 ; '.'
0000000000000b87         db  0x00 ; '.'
0000000000000b88         db  0x02 ; '.'
0000000000000b89         db  0x00 ; '.'
0000000000000b8a         db  0x02 ; '.'
0000000000000b8b         db  0x00 ; '.'
0000000000000b8c         db  0x02 ; '.'
0000000000000b8d         db  0x00 ; '.'
0000000000000b8e         db  0x02 ; '.'
0000000000000b8f         db  0x00 ; '.'
0000000000000b90         db  0x02 ; '.'
0000000000000b91         db  0x00 ; '.'
0000000000000b92         db  0x02 ; '.'
0000000000000b93         db  0x00 ; '.'
0000000000000b94         db  0x02 ; '.'
0000000000000b95         db  0x00 ; '.'
0000000000000b96         db  0x02 ; '.'
0000000000000b97         db  0x00 ; '.'
0000000000000b98         db  0x02 ; '.'
0000000000000b99         db  0x00 ; '.'
0000000000000b9a         db  0x02 ; '.'
0000000000000b9b         db  0x00 ; '.'
0000000000000b9c         db  0x00 ; '.'
0000000000000b9d         db  0x00 ; '.'
0000000000000b9e         db  0x02 ; '.'
0000000000000b9f         db  0x00 ; '.'
0000000000000ba0         db  0x04 ; '.'
0000000000000ba1         db  0x00 ; '.'
0000000000000ba2         db  0x02 ; '.'
0000000000000ba3         db  0x00 ; '.'
0000000000000ba4         db  0x02 ; '.'
0000000000000ba5         db  0x00 ; '.'
0000000000000ba6         db  0x02 ; '.'
0000000000000ba7         db  0x00 ; '.'
0000000000000ba8         db  0x02 ; '.'
0000000000000ba9         db  0x00 ; '.'
0000000000000baa         db  0x02 ; '.'
0000000000000bab         db  0x00 ; '.'
0000000000000bac         db  0x02 ; '.'
0000000000000bad         db  0x00 ; '.'
0000000000000bae         db  0x02 ; '.'
0000000000000baf         db  0x00 ; '.'
0000000000000bb0         db  0x02 ; '.'
0000000000000bb1         db  0x00 ; '.'
0000000000000bb2         db  0x02 ; '.'
0000000000000bb3         db  0x00 ; '.'
0000000000000bb4         db  0x05 ; '.'
0000000000000bb5         db  0x00 ; '.'
0000000000000bb6         db  0x02 ; '.'
0000000000000bb7         db  0x00 ; '.'
0000000000000bb8         db  0x02 ; '.'
0000000000000bb9         db  0x00 ; '.'
0000000000000bba         db  0x02 ; '.'
0000000000000bbb         db  0x00 ; '.'
0000000000000bbc         db  0x02 ; '.'
0000000000000bbd         db  0x00 ; '.'
0000000000000bbe         db  0x02 ; '.'
0000000000000bbf         db  0x00 ; '.'
0000000000000bc0         db  0x02 ; '.'
0000000000000bc1         db  0x00 ; '.'
0000000000000bc2         db  0x05 ; '.'
0000000000000bc3         db  0x00 ; '.'
0000000000000bc4         db  0x00 ; '.'
0000000000000bc5         db  0x00 ; '.'
0000000000000bc6         db  0x02 ; '.'
0000000000000bc7         db  0x00 ; '.'
0000000000000bc8         db  0x02 ; '.'
0000000000000bc9         db  0x00 ; '.'
0000000000000bca         db  0x02 ; '.'
0000000000000bcb         db  0x00 ; '.'
0000000000000bcc         db  0x06 ; '.'
0000000000000bcd         db  0x00 ; '.'
0000000000000bce         db  0x02 ; '.'
0000000000000bcf         db  0x00 ; '.'
0000000000000bd0         db  0x02 ; '.'
0000000000000bd1         db  0x00 ; '.'
0000000000000bd2         db  0x02 ; '.'
0000000000000bd3         db  0x00 ; '.'
0000000000000bd4         db  0x02 ; '.'
0000000000000bd5         db  0x00 ; '.'
0000000000000bd6         db  0x02 ; '.'
0000000000000bd7         db  0x00 ; '.'
0000000000000bd8         db  0x02 ; '.'
0000000000000bd9         db  0x00 ; '.'
0000000000000bda         db  0x02 ; '.'
0000000000000bdb         db  0x00 ; '.'
0000000000000bdc         db  0x02 ; '.'
0000000000000bdd         db  0x00 ; '.'
0000000000000bde         db  0x00 ; '.'
0000000000000bdf         db  0x00 ; '.'


        ; Section .gnu.version_r
        ; Range: [0xbe0; 0xc40[ (96 bytes)
        ; File offset : [3040; 3136[ (96 bytes)
        ; Flags: 0x2
        ;   SHF_ALLOC

0000000000000be0         db  0x01 ; '.'
0000000000000be1         db  0x00 ; '.'
0000000000000be2         db  0x05 ; '.'
0000000000000be3         db  0x00 ; '.'
0000000000000be4         db  0x01 ; '.'
0000000000000be5         db  0x00 ; '.'
0000000000000be6         db  0x00 ; '.'
0000000000000be7         db  0x00 ; '.'
0000000000000be8         db  0x10 ; '.'
0000000000000be9         db  0x00 ; '.'
0000000000000bea         db  0x00 ; '.'
0000000000000beb         db  0x00 ; '.'
0000000000000bec         db  0x00 ; '.'
0000000000000bed         db  0x00 ; '.'
0000000000000bee         db  0x00 ; '.'
0000000000000bef         db  0x00 ; '.'
0000000000000bf0         db  0x13 ; '.'
0000000000000bf1         db  0x69 ; 'i'
0000000000000bf2         db  0x69 ; 'i'
0000000000000bf3         db  0x0d ; '.'
0000000000000bf4         db  0x00 ; '.'
0000000000000bf5         db  0x00 ; '.'
0000000000000bf6         db  0x06 ; '.'
0000000000000bf7         db  0x00 ; '.'
0000000000000bf8         db  0x4f ; 'O'
0000000000000bf9         db  0x02 ; '.'
0000000000000bfa         db  0x00 ; '.'
0000000000000bfb         db  0x00 ; '.'
0000000000000bfc         db  0x10 ; '.'
0000000000000bfd         db  0x00 ; '.'
0000000000000bfe         db  0x00 ; '.'
0000000000000bff         db  0x00 ; '.'
0000000000000c00         db  0x74 ; 't'                                         ; DATA XREF=mode_compile+672, mode_compile+818, mode_adjust+40
0000000000000c01         db  0x19 ; '.'
0000000000000c02         db  0x69 ; 'i'
0000000000000c03         db  0x09 ; '.'
0000000000000c04         db  0x00 ; '.'
0000000000000c05         db  0x00 ; '.'
0000000000000c06         db  0x05 ; '.'
0000000000000c07         db  0x00 ; '.'
0000000000000c08         db  0x59 ; 'Y'
0000000000000c09         db  0x02 ; '.'
0000000000000c0a         db  0x00 ; '.'
0000000000000c0b         db  0x00 ; '.'
0000000000000c0c         db  0x10 ; '.'
0000000000000c0d         db  0x00 ; '.'
0000000000000c0e         db  0x00 ; '.'
0000000000000c0f         db  0x00 ; '.'
0000000000000c10         db  0x94 ; '.'
0000000000000c11         db  0x91 ; '.'
0000000000000c12         db  0x96 ; '.'
0000000000000c13         db  0x06 ; '.'
0000000000000c14         db  0x00 ; '.'
0000000000000c15         db  0x00 ; '.'
0000000000000c16         db  0x04 ; '.'
0000000000000c17         db  0x00 ; '.'
0000000000000c18         db  0x65 ; 'e'
0000000000000c19         db  0x02 ; '.'
0000000000000c1a         db  0x00 ; '.'
0000000000000c1b         db  0x00 ; '.'
0000000000000c1c         db  0x10 ; '.'
0000000000000c1d         db  0x00 ; '.'
0000000000000c1e         db  0x00 ; '.'
0000000000000c1f         db  0x00 ; '.'
0000000000000c20         db  0x14 ; '.'
0000000000000c21         db  0x69 ; 'i'
0000000000000c22         db  0x69 ; 'i'
0000000000000c23         db  0x0d ; '.'
0000000000000c24         db  0x00 ; '.'
0000000000000c25         db  0x00 ; '.'
0000000000000c26         db  0x03 ; '.'
0000000000000c27         db  0x00 ; '.'
0000000000000c28         db  0x70 ; 'p'
0000000000000c29         db  0x02 ; '.'
0000000000000c2a         db  0x00 ; '.'
0000000000000c2b         db  0x00 ; '.'
0000000000000c2c         db  0x10 ; '.'
0000000000000c2d         db  0x00 ; '.'
0000000000000c2e         db  0x00 ; '.'
0000000000000c2f         db  0x00 ; '.'
0000000000000c30         db  0x75 ; 'u'
0000000000000c31         db  0x1a ; '.'
0000000000000c32         db  0x69 ; 'i'
0000000000000c33         db  0x09 ; '.'
0000000000000c34         db  0x00 ; '.'
0000000000000c35         db  0x00 ; '.'
0000000000000c36         db  0x02 ; '.'
0000000000000c37         db  0x00 ; '.'
0000000000000c38         db  0x7a ; 'z'
0000000000000c39         db  0x02 ; '.'
0000000000000c3a         db  0x00 ; '.'
0000000000000c3b         db  0x00 ; '.'
0000000000000c3c         db  0x00 ; '.'
0000000000000c3d         db  0x00 ; '.'
0000000000000c3e         db  0x00 ; '.'
0000000000000c3f         db  0x00 ; '.'


        ; Section .rela.dyn
        ; Range: [0xc40; 0xf28[ (744 bytes)
        ; File offset : [3136; 3880[ (744 bytes)
        ; Flags: 0x2
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000c40         db  0x50 ; 'P'
0000000000000c41         db  0x7b ; '{'
0000000000000c42         db  0x20 ; ' '
0000000000000c43         db  0x00 ; '.'
0000000000000c44         db  0x00 ; '.'
0000000000000c45         db  0x00 ; '.'
0000000000000c46         db  0x00 ; '.'
0000000000000c47         db  0x00 ; '.'
0000000000000c48         db  0x08 ; '.'
0000000000000c49         db  0x00 ; '.'
0000000000000c4a         db  0x00 ; '.'
0000000000000c4b         db  0x00 ; '.'
0000000000000c4c         db  0x00 ; '.'
0000000000000c4d         db  0x00 ; '.'
0000000000000c4e         db  0x00 ; '.'
0000000000000c4f         db  0x00 ; '.'
0000000000000c50         db  0x40 ; '@'
0000000000000c51         db  0x1e ; '.'
0000000000000c52         db  0x00 ; '.'
0000000000000c53         db  0x00 ; '.'
0000000000000c54         db  0x00 ; '.'
0000000000000c55         db  0x00 ; '.'
0000000000000c56         db  0x00 ; '.'
0000000000000c57         db  0x00 ; '.'
0000000000000c58         db  0x58 ; 'X'
0000000000000c59         db  0x7b ; '{'
0000000000000c5a         db  0x20 ; ' '
0000000000000c5b         db  0x00 ; '.'
0000000000000c5c         db  0x00 ; '.'
0000000000000c5d         db  0x00 ; '.'
0000000000000c5e         db  0x00 ; '.'
0000000000000c5f         db  0x00 ; '.'
0000000000000c60         db  0x08 ; '.'
0000000000000c61         db  0x00 ; '.'
0000000000000c62         db  0x00 ; '.'
0000000000000c63         db  0x00 ; '.'
0000000000000c64         db  0x00 ; '.'
0000000000000c65         db  0x00 ; '.'
0000000000000c66         db  0x00 ; '.'
0000000000000c67         db  0x00 ; '.'
0000000000000c68         db  0x00 ; '.'
0000000000000c69         db  0x1e ; '.'
0000000000000c6a         db  0x00 ; '.'
0000000000000c6b         db  0x00 ; '.'
0000000000000c6c         db  0x00 ; '.'
0000000000000c6d         db  0x00 ; '.'
0000000000000c6e         db  0x00 ; '.'
0000000000000c6f         db  0x00 ; '.'
0000000000000c70         db  0x60 ; '`'
0000000000000c71         db  0x7b ; '{'
0000000000000c72         db  0x20 ; ' '
0000000000000c73         db  0x00 ; '.'
0000000000000c74         db  0x00 ; '.'
0000000000000c75         db  0x00 ; '.'
0000000000000c76         db  0x00 ; '.'
0000000000000c77         db  0x00 ; '.'
0000000000000c78         db  0x08 ; '.'
0000000000000c79         db  0x00 ; '.'
0000000000000c7a         db  0x00 ; '.'
0000000000000c7b         db  0x00 ; '.'
0000000000000c7c         db  0x00 ; '.'
0000000000000c7d         db  0x00 ; '.'
0000000000000c7e         db  0x00 ; '.'
0000000000000c7f         db  0x00 ; '.'
0000000000000c80         db  0xe9 ; '.'
0000000000000c81         db  0x57 ; 'W'
0000000000000c82         db  0x00 ; '.'
0000000000000c83         db  0x00 ; '.'
0000000000000c84         db  0x00 ; '.'
0000000000000c85         db  0x00 ; '.'
0000000000000c86         db  0x00 ; '.'
0000000000000c87         db  0x00 ; '.'
0000000000000c88         db  0x80 ; '.'
0000000000000c89         db  0x7b ; '{'
0000000000000c8a         db  0x20 ; ' '
0000000000000c8b         db  0x00 ; '.'
0000000000000c8c         db  0x00 ; '.'
0000000000000c8d         db  0x00 ; '.'
0000000000000c8e         db  0x00 ; '.'
0000000000000c8f         db  0x00 ; '.'
0000000000000c90         db  0x08 ; '.'
0000000000000c91         db  0x00 ; '.'
0000000000000c92         db  0x00 ; '.'
0000000000000c93         db  0x00 ; '.'
0000000000000c94         db  0x00 ; '.'
0000000000000c95         db  0x00 ; '.'
0000000000000c96         db  0x00 ; '.'
0000000000000c97         db  0x00 ; '.'
0000000000000c98         db  0x61 ; 'a'
0000000000000c99         db  0x57 ; 'W'
0000000000000c9a         db  0x00 ; '.'
0000000000000c9b         db  0x00 ; '.'
0000000000000c9c         db  0x00 ; '.'
0000000000000c9d         db  0x00 ; '.'
0000000000000c9e         db  0x00 ; '.'
0000000000000c9f         db  0x00 ; '.'
0000000000000ca0         db  0xa0 ; '.'
0000000000000ca1         db  0x7b ; '{'
0000000000000ca2         db  0x20 ; ' '
0000000000000ca3         db  0x00 ; '.'
0000000000000ca4         db  0x00 ; '.'
0000000000000ca5         db  0x00 ; '.'
0000000000000ca6         db  0x00 ; '.'
0000000000000ca7         db  0x00 ; '.'
0000000000000ca8         db  0x08 ; '.'
0000000000000ca9         db  0x00 ; '.'
0000000000000caa         db  0x00 ; '.'
0000000000000cab         db  0x00 ; '.'
0000000000000cac         db  0x00 ; '.'
0000000000000cad         db  0x00 ; '.'
0000000000000cae         db  0x00 ; '.'
0000000000000caf         db  0x00 ; '.'
0000000000000cb0         db  0xf1 ; '.'
0000000000000cb1         db  0x57 ; 'W'
0000000000000cb2         db  0x00 ; '.'
0000000000000cb3         db  0x00 ; '.'
0000000000000cb4         db  0x00 ; '.'
0000000000000cb5         db  0x00 ; '.'
0000000000000cb6         db  0x00 ; '.'
0000000000000cb7         db  0x00 ; '.'
0000000000000cb8         db  0xc0 ; '.'
0000000000000cb9         db  0x7b ; '{'
0000000000000cba         db  0x20 ; ' '
0000000000000cbb         db  0x00 ; '.'
0000000000000cbc         db  0x00 ; '.'
0000000000000cbd         db  0x00 ; '.'
0000000000000cbe         db  0x00 ; '.'
0000000000000cbf         db  0x00 ; '.'
0000000000000cc0         db  0x08 ; '.'
0000000000000cc1         db  0x00 ; '.'
0000000000000cc2         db  0x00 ; '.'
0000000000000cc3         db  0x00 ; '.'
0000000000000cc4         db  0x00 ; '.'
0000000000000cc5         db  0x00 ; '.'
0000000000000cc6         db  0x00 ; '.'
0000000000000cc7         db  0x00 ; '.'
0000000000000cc8         db  0xf6 ; '.'
0000000000000cc9         db  0x57 ; 'W'
0000000000000cca         db  0x00 ; '.'
0000000000000ccb         db  0x00 ; '.'
0000000000000ccc         db  0x00 ; '.'
0000000000000ccd         db  0x00 ; '.'
0000000000000cce         db  0x00 ; '.'
0000000000000ccf         db  0x00 ; '.'
0000000000000cd0         db  0x00 ; '.'
0000000000000cd1         db  0x7c ; '|'
0000000000000cd2         db  0x20 ; ' '
0000000000000cd3         db  0x00 ; '.'
0000000000000cd4         db  0x00 ; '.'
0000000000000cd5         db  0x00 ; '.'
0000000000000cd6         db  0x00 ; '.'
0000000000000cd7         db  0x00 ; '.'
0000000000000cd8         db  0x08 ; '.'
0000000000000cd9         db  0x00 ; '.'
0000000000000cda         db  0x00 ; '.'
0000000000000cdb         db  0x00 ; '.'
0000000000000cdc         db  0x00 ; '.'
0000000000000cdd         db  0x00 ; '.'
0000000000000cde         db  0x00 ; '.'
0000000000000cdf         db  0x00 ; '.'
0000000000000ce0         db  0x81 ; '.'
0000000000000ce1         db  0x5f ; '_'
0000000000000ce2         db  0x00 ; '.'
0000000000000ce3         db  0x00 ; '.'
0000000000000ce4         db  0x00 ; '.'
0000000000000ce5         db  0x00 ; '.'
0000000000000ce6         db  0x00 ; '.'
0000000000000ce7         db  0x00 ; '.'
0000000000000ce8         db  0x08 ; '.'
0000000000000ce9         db  0x7c ; '|'
0000000000000cea         db  0x20 ; ' '
0000000000000ceb         db  0x00 ; '.'
0000000000000cec         db  0x00 ; '.'
0000000000000ced         db  0x00 ; '.'
0000000000000cee         db  0x00 ; '.'
0000000000000cef         db  0x00 ; '.'
0000000000000cf0         db  0x08 ; '.'
0000000000000cf1         db  0x00 ; '.'
0000000000000cf2         db  0x00 ; '.'
0000000000000cf3         db  0x00 ; '.'
0000000000000cf4         db  0x00 ; '.'
0000000000000cf5         db  0x00 ; '.'
0000000000000cf6         db  0x00 ; '.'
0000000000000cf7         db  0x00 ; '.'
0000000000000cf8         db  0x89 ; '.'
0000000000000cf9         db  0x5f ; '_'
0000000000000cfa         db  0x00 ; '.'
0000000000000cfb         db  0x00 ; '.'
0000000000000cfc         db  0x00 ; '.'
0000000000000cfd         db  0x00 ; '.'
0000000000000cfe         db  0x00 ; '.'
0000000000000cff         db  0x00 ; '.'
0000000000000d00         db  0x10 ; '.'
0000000000000d01         db  0x7c ; '|'
0000000000000d02         db  0x20 ; ' '
0000000000000d03         db  0x00 ; '.'
0000000000000d04         db  0x00 ; '.'
0000000000000d05         db  0x00 ; '.'
0000000000000d06         db  0x00 ; '.'
0000000000000d07         db  0x00 ; '.'
0000000000000d08         db  0x08 ; '.'
0000000000000d09         db  0x00 ; '.'
0000000000000d0a         db  0x00 ; '.'
0000000000000d0b         db  0x00 ; '.'
0000000000000d0c         db  0x00 ; '.'
0000000000000d0d         db  0x00 ; '.'
0000000000000d0e         db  0x00 ; '.'
0000000000000d0f         db  0x00 ; '.'
0000000000000d10         db  0x8f ; '.'
0000000000000d11         db  0x5f ; '_'
0000000000000d12         db  0x00 ; '.'
0000000000000d13         db  0x00 ; '.'
0000000000000d14         db  0x00 ; '.'
0000000000000d15         db  0x00 ; '.'
0000000000000d16         db  0x00 ; '.'
0000000000000d17         db  0x00 ; '.'
0000000000000d18         db  0x18 ; '.'
0000000000000d19         db  0x7c ; '|'
0000000000000d1a         db  0x20 ; ' '
0000000000000d1b         db  0x00 ; '.'
0000000000000d1c         db  0x00 ; '.'
0000000000000d1d         db  0x00 ; '.'
0000000000000d1e         db  0x00 ; '.'
0000000000000d1f         db  0x00 ; '.'
0000000000000d20         db  0x08 ; '.'
0000000000000d21         db  0x00 ; '.'
0000000000000d22         db  0x00 ; '.'
0000000000000d23         db  0x00 ; '.'
0000000000000d24         db  0x00 ; '.'
0000000000000d25         db  0x00 ; '.'
0000000000000d26         db  0x00 ; '.'
0000000000000d27         db  0x00 ; '.'
0000000000000d28         db  0x9c ; '.'
0000000000000d29         db  0x5f ; '_'
0000000000000d2a         db  0x00 ; '.'
0000000000000d2b         db  0x00 ; '.'
0000000000000d2c         db  0x00 ; '.'
0000000000000d2d         db  0x00 ; '.'
0000000000000d2e         db  0x00 ; '.'
0000000000000d2f         db  0x00 ; '.'
0000000000000d30         db  0x20 ; ' '
0000000000000d31         db  0x7c ; '|'
0000000000000d32         db  0x20 ; ' '
0000000000000d33         db  0x00 ; '.'
0000000000000d34         db  0x00 ; '.'
0000000000000d35         db  0x00 ; '.'
0000000000000d36         db  0x00 ; '.'
0000000000000d37         db  0x00 ; '.'
0000000000000d38         db  0x08 ; '.'
0000000000000d39         db  0x00 ; '.'
0000000000000d3a         db  0x00 ; '.'
0000000000000d3b         db  0x00 ; '.'
0000000000000d3c         db  0x00 ; '.'
0000000000000d3d         db  0x00 ; '.'
0000000000000d3e         db  0x00 ; '.'
0000000000000d3f         db  0x00 ; '.'
0000000000000d40         db  0xa9 ; '.'
0000000000000d41         db  0x5f ; '_'
0000000000000d42         db  0x00 ; '.'
0000000000000d43         db  0x00 ; '.'
0000000000000d44         db  0x00 ; '.'
0000000000000d45         db  0x00 ; '.'
0000000000000d46         db  0x00 ; '.'
0000000000000d47         db  0x00 ; '.'
0000000000000d48         db  0x28 ; '('
0000000000000d49         db  0x7c ; '|'
0000000000000d4a         db  0x20 ; ' '
0000000000000d4b         db  0x00 ; '.'
0000000000000d4c         db  0x00 ; '.'
0000000000000d4d         db  0x00 ; '.'
0000000000000d4e         db  0x00 ; '.'
0000000000000d4f         db  0x00 ; '.'
0000000000000d50         db  0x08 ; '.'
0000000000000d51         db  0x00 ; '.'
0000000000000d52         db  0x00 ; '.'
0000000000000d53         db  0x00 ; '.'
0000000000000d54         db  0x00 ; '.'
0000000000000d55         db  0x00 ; '.'
0000000000000d56         db  0x00 ; '.'
0000000000000d57         db  0x00 ; '.'
0000000000000d58         db  0xbd ; '.'
0000000000000d59         db  0x5f ; '_'
0000000000000d5a         db  0x00 ; '.'
0000000000000d5b         db  0x00 ; '.'
0000000000000d5c         db  0x00 ; '.'
0000000000000d5d         db  0x00 ; '.'
0000000000000d5e         db  0x00 ; '.'
0000000000000d5f         db  0x00 ; '.'
0000000000000d60         db  0x30 ; '0'
0000000000000d61         db  0x7c ; '|'
0000000000000d62         db  0x20 ; ' '
0000000000000d63         db  0x00 ; '.'
0000000000000d64         db  0x00 ; '.'
0000000000000d65         db  0x00 ; '.'
0000000000000d66         db  0x00 ; '.'
0000000000000d67         db  0x00 ; '.'
0000000000000d68         db  0x08 ; '.'
0000000000000d69         db  0x00 ; '.'
0000000000000d6a         db  0x00 ; '.'
0000000000000d6b         db  0x00 ; '.'
0000000000000d6c         db  0x00 ; '.'
0000000000000d6d         db  0x00 ; '.'
0000000000000d6e         db  0x00 ; '.'
0000000000000d6f         db  0x00 ; '.'
0000000000000d70         db  0xbf ; '.'
0000000000000d71         db  0x5f ; '_'
0000000000000d72         db  0x00 ; '.'
0000000000000d73         db  0x00 ; '.'
0000000000000d74         db  0x00 ; '.'
0000000000000d75         db  0x00 ; '.'
0000000000000d76         db  0x00 ; '.'
0000000000000d77         db  0x00 ; '.'
0000000000000d78         db  0x38 ; '8'
0000000000000d79         db  0x7c ; '|'
0000000000000d7a         db  0x20 ; ' '
0000000000000d7b         db  0x00 ; '.'
0000000000000d7c         db  0x00 ; '.'
0000000000000d7d         db  0x00 ; '.'
0000000000000d7e         db  0x00 ; '.'
0000000000000d7f         db  0x00 ; '.'
0000000000000d80         db  0x08 ; '.'
0000000000000d81         db  0x00 ; '.'
0000000000000d82         db  0x00 ; '.'
0000000000000d83         db  0x00 ; '.'
0000000000000d84         db  0x00 ; '.'
0000000000000d85         db  0x00 ; '.'
0000000000000d86         db  0x00 ; '.'
0000000000000d87         db  0x00 ; '.'
0000000000000d88         db  0xa2 ; '.'
0000000000000d89         db  0x5f ; '_'
0000000000000d8a         db  0x00 ; '.'
0000000000000d8b         db  0x00 ; '.'
0000000000000d8c         db  0x00 ; '.'
0000000000000d8d         db  0x00 ; '.'
0000000000000d8e         db  0x00 ; '.'
0000000000000d8f         db  0x00 ; '.'
0000000000000d90         db  0x40 ; '@'
0000000000000d91         db  0x7c ; '|'
0000000000000d92         db  0x20 ; ' '
0000000000000d93         db  0x00 ; '.'
0000000000000d94         db  0x00 ; '.'
0000000000000d95         db  0x00 ; '.'
0000000000000d96         db  0x00 ; '.'
0000000000000d97         db  0x00 ; '.'
0000000000000d98         db  0x08 ; '.'
0000000000000d99         db  0x00 ; '.'
0000000000000d9a         db  0x00 ; '.'
0000000000000d9b         db  0x00 ; '.'
0000000000000d9c         db  0x00 ; '.'
0000000000000d9d         db  0x00 ; '.'
0000000000000d9e         db  0x00 ; '.'
0000000000000d9f         db  0x00 ; '.'
0000000000000da0         db  0x3e ; '>'
0000000000000da1         db  0x57 ; 'W'
0000000000000da2         db  0x00 ; '.'
0000000000000da3         db  0x00 ; '.'
0000000000000da4         db  0x00 ; '.'
0000000000000da5         db  0x00 ; '.'
0000000000000da6         db  0x00 ; '.'
0000000000000da7         db  0x00 ; '.'
0000000000000da8         db  0x48 ; 'H'
0000000000000da9         db  0x7c ; '|'
0000000000000daa         db  0x20 ; ' '
0000000000000dab         db  0x00 ; '.'
0000000000000dac         db  0x00 ; '.'
0000000000000dad         db  0x00 ; '.'
0000000000000dae         db  0x00 ; '.'
0000000000000daf         db  0x00 ; '.'
0000000000000db0         db  0x08 ; '.'
0000000000000db1         db  0x00 ; '.'
0000000000000db2         db  0x00 ; '.'
0000000000000db3         db  0x00 ; '.'
0000000000000db4         db  0x00 ; '.'
0000000000000db5         db  0x00 ; '.'
0000000000000db6         db  0x00 ; '.'
0000000000000db7         db  0x00 ; '.'
0000000000000db8         db  0xc7 ; '.'
0000000000000db9         db  0x5f ; '_'
0000000000000dba         db  0x00 ; '.'
0000000000000dbb         db  0x00 ; '.'
0000000000000dbc         db  0x00 ; '.'
0000000000000dbd         db  0x00 ; '.'
0000000000000dbe         db  0x00 ; '.'
0000000000000dbf         db  0x00 ; '.'
0000000000000dc0         db  0x08 ; '.'
0000000000000dc1         db  0x80 ; '.'
0000000000000dc2         db  0x20 ; ' '
0000000000000dc3         db  0x00 ; '.'
0000000000000dc4         db  0x00 ; '.'
0000000000000dc5         db  0x00 ; '.'
0000000000000dc6         db  0x00 ; '.'
0000000000000dc7         db  0x00 ; '.'
0000000000000dc8         db  0x08 ; '.'
0000000000000dc9         db  0x00 ; '.'
0000000000000dca         db  0x00 ; '.'
0000000000000dcb         db  0x00 ; '.'
0000000000000dcc         db  0x00 ; '.'
0000000000000dcd         db  0x00 ; '.'
0000000000000dce         db  0x00 ; '.'
0000000000000dcf         db  0x00 ; '.'
0000000000000dd0         db  0x08 ; '.'
0000000000000dd1         db  0x80 ; '.'
0000000000000dd2         db  0x20 ; ' '
0000000000000dd3         db  0x00 ; '.'
0000000000000dd4         db  0x00 ; '.'
0000000000000dd5         db  0x00 ; '.'
0000000000000dd6         db  0x00 ; '.'
0000000000000dd7         db  0x00 ; '.'
0000000000000dd8         db  0x10 ; '.'
0000000000000dd9         db  0x80 ; '.'
0000000000000dda         db  0x20 ; ' '
0000000000000ddb         db  0x00 ; '.'
0000000000000ddc         db  0x00 ; '.'
0000000000000ddd         db  0x00 ; '.'
0000000000000dde         db  0x00 ; '.'
0000000000000ddf         db  0x00 ; '.'
0000000000000de0         db  0x08 ; '.'
0000000000000de1         db  0x00 ; '.'
0000000000000de2         db  0x00 ; '.'
0000000000000de3         db  0x00 ; '.'
0000000000000de4         db  0x00 ; '.'
0000000000000de5         db  0x00 ; '.'
0000000000000de6         db  0x00 ; '.'
0000000000000de7         db  0x00 ; '.'
0000000000000de8         db  0x87 ; '.'
0000000000000de9         db  0x5e ; '^'
0000000000000dea         db  0x00 ; '.'
0000000000000deb         db  0x00 ; '.'
0000000000000dec         db  0x00 ; '.'
0000000000000ded         db  0x00 ; '.'
0000000000000dee         db  0x00 ; '.'
0000000000000def         db  0x00 ; '.'
0000000000000df0         db  0x60 ; '`'
0000000000000df1         db  0x80 ; '.'
0000000000000df2         db  0x20 ; ' '
0000000000000df3         db  0x00 ; '.'
0000000000000df4         db  0x00 ; '.'
0000000000000df5         db  0x00 ; '.'
0000000000000df6         db  0x00 ; '.'
0000000000000df7         db  0x00 ; '.'
0000000000000df8         db  0x08 ; '.'
0000000000000df9         db  0x00 ; '.'
0000000000000dfa         db  0x00 ; '.'
0000000000000dfb         db  0x00 ; '.'
0000000000000dfc         db  0x00 ; '.'
0000000000000dfd         db  0x00 ; '.'
0000000000000dfe         db  0x00 ; '.'
0000000000000dff         db  0x00 ; '.'
0000000000000e00         db  0x70 ; 'p'
0000000000000e01         db  0x80 ; '.'
0000000000000e02         db  0x20 ; ' '
0000000000000e03         db  0x00 ; '.'
0000000000000e04         db  0x00 ; '.'
0000000000000e05         db  0x00 ; '.'
0000000000000e06         db  0x00 ; '.'
0000000000000e07         db  0x00 ; '.'
0000000000000e08         db  0x78 ; 'x'
0000000000000e09         db  0x80 ; '.'
0000000000000e0a         db  0x20 ; ' '
0000000000000e0b         db  0x00 ; '.'
0000000000000e0c         db  0x00 ; '.'
0000000000000e0d         db  0x00 ; '.'
0000000000000e0e         db  0x00 ; '.'
0000000000000e0f         db  0x00 ; '.'
0000000000000e10         db  0x08 ; '.'
0000000000000e11         db  0x00 ; '.'
0000000000000e12         db  0x00 ; '.'
0000000000000e13         db  0x00 ; '.'
0000000000000e14         db  0x00 ; '.'
0000000000000e15         db  0x00 ; '.'
0000000000000e16         db  0x00 ; '.'
0000000000000e17         db  0x00 ; '.'
0000000000000e18         db  0x00 ; '.'
0000000000000e19         db  0x81 ; '.'
0000000000000e1a         db  0x20 ; ' '
0000000000000e1b         db  0x00 ; '.'
0000000000000e1c         db  0x00 ; '.'
0000000000000e1d         db  0x00 ; '.'
0000000000000e1e         db  0x00 ; '.'
0000000000000e1f         db  0x00 ; '.'
0000000000000e20         db  0xd8 ; '.'
0000000000000e21         db  0x7f ; '.'
0000000000000e22         db  0x20 ; ' '
0000000000000e23         db  0x00 ; '.'
0000000000000e24         db  0x00 ; '.'
0000000000000e25         db  0x00 ; '.'
0000000000000e26         db  0x00 ; '.'
0000000000000e27         db  0x00 ; '.'
0000000000000e28         db  0x06 ; '.'
0000000000000e29         db  0x00 ; '.'
0000000000000e2a         db  0x00 ; '.'
0000000000000e2b         db  0x00 ; '.'
0000000000000e2c         db  0x05 ; '.'
0000000000000e2d         db  0x00 ; '.'
0000000000000e2e         db  0x00 ; '.'
0000000000000e2f         db  0x00 ; '.'
0000000000000e30         db  0x00 ; '.'
0000000000000e31         db  0x00 ; '.'
0000000000000e32         db  0x00 ; '.'
0000000000000e33         db  0x00 ; '.'
0000000000000e34         db  0x00 ; '.'
0000000000000e35         db  0x00 ; '.'
0000000000000e36         db  0x00 ; '.'
0000000000000e37         db  0x00 ; '.'
0000000000000e38         db  0xe0 ; '.'
0000000000000e39         db  0x7f ; '.'
0000000000000e3a         db  0x20 ; ' '
0000000000000e3b         db  0x00 ; '.'
0000000000000e3c         db  0x00 ; '.'
0000000000000e3d         db  0x00 ; '.'
0000000000000e3e         db  0x00 ; '.'
0000000000000e3f         db  0x00 ; '.'
0000000000000e40         db  0x06 ; '.'
0000000000000e41         db  0x00 ; '.'
0000000000000e42         db  0x00 ; '.'
0000000000000e43         db  0x00 ; '.'
0000000000000e44         db  0x17 ; '.'
0000000000000e45         db  0x00 ; '.'
0000000000000e46         db  0x00 ; '.'
0000000000000e47         db  0x00 ; '.'
0000000000000e48         db  0x00 ; '.'
0000000000000e49         db  0x00 ; '.'
0000000000000e4a         db  0x00 ; '.'
0000000000000e4b         db  0x00 ; '.'
0000000000000e4c         db  0x00 ; '.'
0000000000000e4d         db  0x00 ; '.'
0000000000000e4e         db  0x00 ; '.'
0000000000000e4f         db  0x00 ; '.'
0000000000000e50         db  0xe8 ; '.'
0000000000000e51         db  0x7f ; '.'
0000000000000e52         db  0x20 ; ' '
0000000000000e53         db  0x00 ; '.'
0000000000000e54         db  0x00 ; '.'
0000000000000e55         db  0x00 ; '.'
0000000000000e56         db  0x00 ; '.'
0000000000000e57         db  0x00 ; '.'
0000000000000e58         db  0x06 ; '.'
0000000000000e59         db  0x00 ; '.'
0000000000000e5a         db  0x00 ; '.'
0000000000000e5b         db  0x00 ; '.'
0000000000000e5c         db  0x1c ; '.'
0000000000000e5d         db  0x00 ; '.'
0000000000000e5e         db  0x00 ; '.'
0000000000000e5f         db  0x00 ; '.'
0000000000000e60         db  0x00 ; '.'
0000000000000e61         db  0x00 ; '.'
0000000000000e62         db  0x00 ; '.'
0000000000000e63         db  0x00 ; '.'
0000000000000e64         db  0x00 ; '.'
0000000000000e65         db  0x00 ; '.'
0000000000000e66         db  0x00 ; '.'
0000000000000e67         db  0x00 ; '.'
0000000000000e68         db  0xf0 ; '.'
0000000000000e69         db  0x7f ; '.'
0000000000000e6a         db  0x20 ; ' '
0000000000000e6b         db  0x00 ; '.'
0000000000000e6c         db  0x00 ; '.'
0000000000000e6d         db  0x00 ; '.'
0000000000000e6e         db  0x00 ; '.'
0000000000000e6f         db  0x00 ; '.'
0000000000000e70         db  0x06 ; '.'
0000000000000e71         db  0x00 ; '.'
0000000000000e72         db  0x00 ; '.'
0000000000000e73         db  0x00 ; '.'
0000000000000e74         db  0x30 ; '0'
0000000000000e75         db  0x00 ; '.'
0000000000000e76         db  0x00 ; '.'
0000000000000e77         db  0x00 ; '.'
0000000000000e78         db  0x00 ; '.'
0000000000000e79         db  0x00 ; '.'
0000000000000e7a         db  0x00 ; '.'
0000000000000e7b         db  0x00 ; '.'
0000000000000e7c         db  0x00 ; '.'
0000000000000e7d         db  0x00 ; '.'
0000000000000e7e         db  0x00 ; '.'
0000000000000e7f         db  0x00 ; '.'
0000000000000e80         db  0xf8 ; '.'
0000000000000e81         db  0x7f ; '.'
0000000000000e82         db  0x20 ; ' '
0000000000000e83         db  0x00 ; '.'
0000000000000e84         db  0x00 ; '.'
0000000000000e85         db  0x00 ; '.'
0000000000000e86         db  0x00 ; '.'
0000000000000e87         db  0x00 ; '.'
0000000000000e88         db  0x06 ; '.'
0000000000000e89         db  0x00 ; '.'
0000000000000e8a         db  0x00 ; '.'
0000000000000e8b         db  0x00 ; '.'
0000000000000e8c         db  0x33 ; '3'
0000000000000e8d         db  0x00 ; '.'
0000000000000e8e         db  0x00 ; '.'
0000000000000e8f         db  0x00 ; '.'
0000000000000e90         db  0x00 ; '.'
0000000000000e91         db  0x00 ; '.'
0000000000000e92         db  0x00 ; '.'
0000000000000e93         db  0x00 ; '.'
0000000000000e94         db  0x00 ; '.'
0000000000000e95         db  0x00 ; '.'
0000000000000e96         db  0x00 ; '.'
0000000000000e97         db  0x00 ; '.'
0000000000000e98         db  0x80 ; '.'
0000000000000e99         db  0x80 ; '.'
0000000000000e9a         db  0x20 ; ' '
0000000000000e9b         db  0x00 ; '.'
0000000000000e9c         db  0x00 ; '.'
0000000000000e9d         db  0x00 ; '.'
0000000000000e9e         db  0x00 ; '.'
0000000000000e9f         db  0x00 ; '.'
0000000000000ea0         db  0x05 ; '.'
0000000000000ea1         db  0x00 ; '.'
0000000000000ea2         db  0x00 ; '.'
0000000000000ea3         db  0x00 ; '.'
0000000000000ea4         db  0x36 ; '6'
0000000000000ea5         db  0x00 ; '.'
0000000000000ea6         db  0x00 ; '.'
0000000000000ea7         db  0x00 ; '.'
0000000000000ea8         db  0x00 ; '.'
0000000000000ea9         db  0x00 ; '.'
0000000000000eaa         db  0x00 ; '.'
0000000000000eab         db  0x00 ; '.'
0000000000000eac         db  0x00 ; '.'
0000000000000ead         db  0x00 ; '.'
0000000000000eae         db  0x00 ; '.'
0000000000000eaf         db  0x00 ; '.'
0000000000000eb0         db  0x88 ; '.'
0000000000000eb1         db  0x80 ; '.'
0000000000000eb2         db  0x20 ; ' '
0000000000000eb3         db  0x00 ; '.'
0000000000000eb4         db  0x00 ; '.'
0000000000000eb5         db  0x00 ; '.'
0000000000000eb6         db  0x00 ; '.'
0000000000000eb7         db  0x00 ; '.'
0000000000000eb8         db  0x05 ; '.'
0000000000000eb9         db  0x00 ; '.'
0000000000000eba         db  0x00 ; '.'
0000000000000ebb         db  0x00 ; '.'
0000000000000ebc         db  0x35 ; '5'
0000000000000ebd         db  0x00 ; '.'
0000000000000ebe         db  0x00 ; '.'
0000000000000ebf         db  0x00 ; '.'
0000000000000ec0         db  0x00 ; '.'
0000000000000ec1         db  0x00 ; '.'
0000000000000ec2         db  0x00 ; '.'
0000000000000ec3         db  0x00 ; '.'
0000000000000ec4         db  0x00 ; '.'
0000000000000ec5         db  0x00 ; '.'
0000000000000ec6         db  0x00 ; '.'
0000000000000ec7         db  0x00 ; '.'
0000000000000ec8         db  0x90 ; '.'
0000000000000ec9         db  0x80 ; '.'
0000000000000eca         db  0x20 ; ' '
0000000000000ecb         db  0x00 ; '.'
0000000000000ecc         db  0x00 ; '.'
0000000000000ecd         db  0x00 ; '.'
0000000000000ece         db  0x00 ; '.'
0000000000000ecf         db  0x00 ; '.'
0000000000000ed0         db  0x05 ; '.'
0000000000000ed1         db  0x00 ; '.'
0000000000000ed2         db  0x00 ; '.'
0000000000000ed3         db  0x00 ; '.'
0000000000000ed4         db  0x3b ; ';'
0000000000000ed5         db  0x00 ; '.'
0000000000000ed6         db  0x00 ; '.'
0000000000000ed7         db  0x00 ; '.'
0000000000000ed8         db  0x00 ; '.'
0000000000000ed9         db  0x00 ; '.'
0000000000000eda         db  0x00 ; '.'
0000000000000edb         db  0x00 ; '.'
0000000000000edc         db  0x00 ; '.'
0000000000000edd         db  0x00 ; '.'
0000000000000ede         db  0x00 ; '.'
0000000000000edf         db  0x00 ; '.'
0000000000000ee0         db  0x98 ; '.'
0000000000000ee1         db  0x80 ; '.'
0000000000000ee2         db  0x20 ; ' '
0000000000000ee3         db  0x00 ; '.'
0000000000000ee4         db  0x00 ; '.'
0000000000000ee5         db  0x00 ; '.'
0000000000000ee6         db  0x00 ; '.'
0000000000000ee7         db  0x00 ; '.'
0000000000000ee8         db  0x05 ; '.'
0000000000000ee9         db  0x00 ; '.'
0000000000000eea         db  0x00 ; '.'
0000000000000eeb         db  0x00 ; '.'
0000000000000eec         db  0x3c ; '<'
0000000000000eed         db  0x00 ; '.'
0000000000000eee         db  0x00 ; '.'
0000000000000eef         db  0x00 ; '.'
0000000000000ef0         db  0x00 ; '.'
0000000000000ef1         db  0x00 ; '.'
0000000000000ef2         db  0x00 ; '.'
0000000000000ef3         db  0x00 ; '.'
0000000000000ef4         db  0x00 ; '.'
0000000000000ef5         db  0x00 ; '.'
0000000000000ef6         db  0x00 ; '.'
0000000000000ef7         db  0x00 ; '.'
0000000000000ef8         db  0xa0 ; '.'
0000000000000ef9         db  0x80 ; '.'
0000000000000efa         db  0x20 ; ' '
0000000000000efb         db  0x00 ; '.'
0000000000000efc         db  0x00 ; '.'
0000000000000efd         db  0x00 ; '.'
0000000000000efe         db  0x00 ; '.'
0000000000000eff         db  0x00 ; '.'
0000000000000f00         db  0x05 ; '.'
0000000000000f01         db  0x00 ; '.'
0000000000000f02         db  0x00 ; '.'
0000000000000f03         db  0x00 ; '.'
0000000000000f04         db  0x38 ; '8'
0000000000000f05         db  0x00 ; '.'
0000000000000f06         db  0x00 ; '.'
0000000000000f07         db  0x00 ; '.'
0000000000000f08         db  0x00 ; '.'
0000000000000f09         db  0x00 ; '.'
0000000000000f0a         db  0x00 ; '.'
0000000000000f0b         db  0x00 ; '.'
0000000000000f0c         db  0x00 ; '.'
0000000000000f0d         db  0x00 ; '.'
0000000000000f0e         db  0x00 ; '.'
0000000000000f0f         db  0x00 ; '.'
0000000000000f10         db  0xc0 ; '.'
0000000000000f11         db  0x80 ; '.'
0000000000000f12         db  0x20 ; ' '
0000000000000f13         db  0x00 ; '.'
0000000000000f14         db  0x00 ; '.'
0000000000000f15         db  0x00 ; '.'
0000000000000f16         db  0x00 ; '.'
0000000000000f17         db  0x00 ; '.'
0000000000000f18         db  0x05 ; '.'
0000000000000f19         db  0x00 ; '.'
0000000000000f1a         db  0x00 ; '.'
0000000000000f1b         db  0x00 ; '.'
0000000000000f1c         db  0x3a ; ':'
0000000000000f1d         db  0x00 ; '.'
0000000000000f1e         db  0x00 ; '.'
0000000000000f1f         db  0x00 ; '.'
0000000000000f20         db  0x00 ; '.'
0000000000000f21         db  0x00 ; '.'
0000000000000f22         db  0x00 ; '.'
0000000000000f23         db  0x00 ; '.'
0000000000000f24         db  0x00 ; '.'
0000000000000f25         db  0x00 ; '.'
0000000000000f26         db  0x00 ; '.'
0000000000000f27         db  0x00 ; '.'


        ; Section .rela.plt
        ; Range: [0xf28; 0x1390[ (1128 bytes)
        ; File offset : [3880; 5008[ (1128 bytes)
        ; Flags: 0x42
        ;   SHT_RELA
        ;   SHF_ALLOC

0000000000000f28         db  0x60 ; '`'
0000000000000f29         db  0x7e ; '~'
0000000000000f2a         db  0x20 ; ' '
0000000000000f2b         db  0x00 ; '.'
0000000000000f2c         db  0x00 ; '.'
0000000000000f2d         db  0x00 ; '.'
0000000000000f2e         db  0x00 ; '.'
0000000000000f2f         db  0x00 ; '.'
0000000000000f30         db  0x07 ; '.'
0000000000000f31         db  0x00 ; '.'
0000000000000f32         db  0x00 ; '.'
0000000000000f33         db  0x00 ; '.'
0000000000000f34         db  0x01 ; '.'
0000000000000f35         db  0x00 ; '.'
0000000000000f36         db  0x00 ; '.'
0000000000000f37         db  0x00 ; '.'
0000000000000f38         db  0x00 ; '.'
0000000000000f39         db  0x00 ; '.'
0000000000000f3a         db  0x00 ; '.'
0000000000000f3b         db  0x00 ; '.'
0000000000000f3c         db  0x00 ; '.'
0000000000000f3d         db  0x00 ; '.'
0000000000000f3e         db  0x00 ; '.'
0000000000000f3f         db  0x00 ; '.'
0000000000000f40         db  0x68 ; 'h'
0000000000000f41         db  0x7e ; '~'
0000000000000f42         db  0x20 ; ' '
0000000000000f43         db  0x00 ; '.'
0000000000000f44         db  0x00 ; '.'
0000000000000f45         db  0x00 ; '.'
0000000000000f46         db  0x00 ; '.'
0000000000000f47         db  0x00 ; '.'
0000000000000f48         db  0x07 ; '.'
0000000000000f49         db  0x00 ; '.'
0000000000000f4a         db  0x00 ; '.'
0000000000000f4b         db  0x00 ; '.'
0000000000000f4c         db  0x02 ; '.'
0000000000000f4d         db  0x00 ; '.'
0000000000000f4e         db  0x00 ; '.'
0000000000000f4f         db  0x00 ; '.'
0000000000000f50         db  0x00 ; '.'
0000000000000f51         db  0x00 ; '.'
0000000000000f52         db  0x00 ; '.'
0000000000000f53         db  0x00 ; '.'
0000000000000f54         db  0x00 ; '.'
0000000000000f55         db  0x00 ; '.'
0000000000000f56         db  0x00 ; '.'
0000000000000f57         db  0x00 ; '.'
0000000000000f58         db  0x70 ; 'p'
0000000000000f59         db  0x7e ; '~'
0000000000000f5a         db  0x20 ; ' '
0000000000000f5b         db  0x00 ; '.'
0000000000000f5c         db  0x00 ; '.'
0000000000000f5d         db  0x00 ; '.'
0000000000000f5e         db  0x00 ; '.'
0000000000000f5f         db  0x00 ; '.'
0000000000000f60         db  0x07 ; '.'
0000000000000f61         db  0x00 ; '.'
0000000000000f62         db  0x00 ; '.'
0000000000000f63         db  0x00 ; '.'
0000000000000f64         db  0x03 ; '.'
0000000000000f65         db  0x00 ; '.'
0000000000000f66         db  0x00 ; '.'
0000000000000f67         db  0x00 ; '.'
0000000000000f68         db  0x00 ; '.'
0000000000000f69         db  0x00 ; '.'
0000000000000f6a         db  0x00 ; '.'
0000000000000f6b         db  0x00 ; '.'
0000000000000f6c         db  0x00 ; '.'
0000000000000f6d         db  0x00 ; '.'
0000000000000f6e         db  0x00 ; '.'
0000000000000f6f         db  0x00 ; '.'
0000000000000f70         db  0x78 ; 'x'
0000000000000f71         db  0x7e ; '~'
0000000000000f72         db  0x20 ; ' '
0000000000000f73         db  0x00 ; '.'
0000000000000f74         db  0x00 ; '.'
0000000000000f75         db  0x00 ; '.'
0000000000000f76         db  0x00 ; '.'
0000000000000f77         db  0x00 ; '.'
0000000000000f78         db  0x07 ; '.'
0000000000000f79         db  0x00 ; '.'
0000000000000f7a         db  0x00 ; '.'
0000000000000f7b         db  0x00 ; '.'
0000000000000f7c         db  0x04 ; '.'
0000000000000f7d         db  0x00 ; '.'
0000000000000f7e         db  0x00 ; '.'
0000000000000f7f         db  0x00 ; '.'
0000000000000f80         db  0x00 ; '.'
0000000000000f81         db  0x00 ; '.'
0000000000000f82         db  0x00 ; '.'
0000000000000f83         db  0x00 ; '.'
0000000000000f84         db  0x00 ; '.'
0000000000000f85         db  0x00 ; '.'
0000000000000f86         db  0x00 ; '.'
0000000000000f87         db  0x00 ; '.'
0000000000000f88         db  0x80 ; '.'
0000000000000f89         db  0x7e ; '~'
0000000000000f8a         db  0x20 ; ' '
0000000000000f8b         db  0x00 ; '.'
0000000000000f8c         db  0x00 ; '.'
0000000000000f8d         db  0x00 ; '.'
0000000000000f8e         db  0x00 ; '.'
0000000000000f8f         db  0x00 ; '.'
0000000000000f90         db  0x07 ; '.'
0000000000000f91         db  0x00 ; '.'
0000000000000f92         db  0x00 ; '.'
0000000000000f93         db  0x00 ; '.'
0000000000000f94         db  0x06 ; '.'
0000000000000f95         db  0x00 ; '.'
0000000000000f96         db  0x00 ; '.'
0000000000000f97         db  0x00 ; '.'
0000000000000f98         db  0x00 ; '.'
0000000000000f99         db  0x00 ; '.'
0000000000000f9a         db  0x00 ; '.'
0000000000000f9b         db  0x00 ; '.'
0000000000000f9c         db  0x00 ; '.'
0000000000000f9d         db  0x00 ; '.'
0000000000000f9e         db  0x00 ; '.'
0000000000000f9f         db  0x00 ; '.'
0000000000000fa0         db  0x88 ; '.'
0000000000000fa1         db  0x7e ; '~'
0000000000000fa2         db  0x20 ; ' '
0000000000000fa3         db  0x00 ; '.'
0000000000000fa4         db  0x00 ; '.'
0000000000000fa5         db  0x00 ; '.'
0000000000000fa6         db  0x00 ; '.'
0000000000000fa7         db  0x00 ; '.'
0000000000000fa8         db  0x07 ; '.'
0000000000000fa9         db  0x00 ; '.'
0000000000000faa         db  0x00 ; '.'
0000000000000fab         db  0x00 ; '.'
0000000000000fac         db  0x07 ; '.'
0000000000000fad         db  0x00 ; '.'
0000000000000fae         db  0x00 ; '.'
0000000000000faf         db  0x00 ; '.'
0000000000000fb0         db  0x00 ; '.'
0000000000000fb1         db  0x00 ; '.'
0000000000000fb2         db  0x00 ; '.'
0000000000000fb3         db  0x00 ; '.'
0000000000000fb4         db  0x00 ; '.'
0000000000000fb5         db  0x00 ; '.'
0000000000000fb6         db  0x00 ; '.'
0000000000000fb7         db  0x00 ; '.'
0000000000000fb8         db  0x90 ; '.'
0000000000000fb9         db  0x7e ; '~'
0000000000000fba         db  0x20 ; ' '
0000000000000fbb         db  0x00 ; '.'
0000000000000fbc         db  0x00 ; '.'
0000000000000fbd         db  0x00 ; '.'
0000000000000fbe         db  0x00 ; '.'
0000000000000fbf         db  0x00 ; '.'
0000000000000fc0         db  0x07 ; '.'
0000000000000fc1         db  0x00 ; '.'
0000000000000fc2         db  0x00 ; '.'
0000000000000fc3         db  0x00 ; '.'
0000000000000fc4         db  0x08 ; '.'
0000000000000fc5         db  0x00 ; '.'
0000000000000fc6         db  0x00 ; '.'
0000000000000fc7         db  0x00 ; '.'
0000000000000fc8         db  0x00 ; '.'
0000000000000fc9         db  0x00 ; '.'
0000000000000fca         db  0x00 ; '.'
0000000000000fcb         db  0x00 ; '.'
0000000000000fcc         db  0x00 ; '.'
0000000000000fcd         db  0x00 ; '.'
0000000000000fce         db  0x00 ; '.'
0000000000000fcf         db  0x00 ; '.'
0000000000000fd0         db  0x98 ; '.'
0000000000000fd1         db  0x7e ; '~'
0000000000000fd2         db  0x20 ; ' '
0000000000000fd3         db  0x00 ; '.'
0000000000000fd4         db  0x00 ; '.'
0000000000000fd5         db  0x00 ; '.'
0000000000000fd6         db  0x00 ; '.'
0000000000000fd7         db  0x00 ; '.'
0000000000000fd8         db  0x07 ; '.'
0000000000000fd9         db  0x00 ; '.'
0000000000000fda         db  0x00 ; '.'
0000000000000fdb         db  0x00 ; '.'
0000000000000fdc         db  0x09 ; '.'
0000000000000fdd         db  0x00 ; '.'
0000000000000fde         db  0x00 ; '.'
0000000000000fdf         db  0x00 ; '.'
0000000000000fe0         db  0x00 ; '.'
0000000000000fe1         db  0x00 ; '.'
0000000000000fe2         db  0x00 ; '.'
0000000000000fe3         db  0x00 ; '.'
0000000000000fe4         db  0x00 ; '.'
0000000000000fe5         db  0x00 ; '.'
0000000000000fe6         db  0x00 ; '.'
0000000000000fe7         db  0x00 ; '.'
0000000000000fe8         db  0xa0 ; '.'
0000000000000fe9         db  0x7e ; '~'
0000000000000fea         db  0x20 ; ' '
0000000000000feb         db  0x00 ; '.'
0000000000000fec         db  0x00 ; '.'
0000000000000fed         db  0x00 ; '.'
0000000000000fee         db  0x00 ; '.'
0000000000000fef         db  0x00 ; '.'
0000000000000ff0         db  0x07 ; '.'
0000000000000ff1         db  0x00 ; '.'
0000000000000ff2         db  0x00 ; '.'
0000000000000ff3         db  0x00 ; '.'
0000000000000ff4         db  0x0a ; '.'
0000000000000ff5         db  0x00 ; '.'
0000000000000ff6         db  0x00 ; '.'
0000000000000ff7         db  0x00 ; '.'
0000000000000ff8         db  0x00 ; '.'
0000000000000ff9         db  0x00 ; '.'
0000000000000ffa         db  0x00 ; '.'
0000000000000ffb         db  0x00 ; '.'
0000000000000ffc         db  0x00 ; '.'
0000000000000ffd         db  0x00 ; '.'
0000000000000ffe         db  0x00 ; '.'
0000000000000fff         db  0x00 ; '.'                                         ; DATA XREF=mode_compile+231, mode_compile+433, mode_compile+491, mode_compile+505, mode_compile+511, mode_compile+736, mode_compile+813, mode_compile+852, mode_create_from_ref+66, mode_create_from_ref+73, mode_adjust+7
0000000000001000         db  0xa8 ; '.'
0000000000001001         db  0x7e ; '~'
0000000000001002         db  0x20 ; ' '
0000000000001003         db  0x00 ; '.'
0000000000001004         db  0x00 ; '.'
0000000000001005         db  0x00 ; '.'
0000000000001006         db  0x00 ; '.'
0000000000001007         db  0x00 ; '.'
0000000000001008         db  0x07 ; '.'
0000000000001009         db  0x00 ; '.'
000000000000100a         db  0x00 ; '.'
000000000000100b         db  0x00 ; '.'
000000000000100c         db  0x0b ; '.'
000000000000100d         db  0x00 ; '.'
000000000000100e         db  0x00 ; '.'
000000000000100f         db  0x00 ; '.'
0000000000001010         db  0x00 ; '.'
0000000000001011         db  0x00 ; '.'
0000000000001012         db  0x00 ; '.'
0000000000001013         db  0x00 ; '.'
0000000000001014         db  0x00 ; '.'
0000000000001015         db  0x00 ; '.'
0000000000001016         db  0x00 ; '.'
0000000000001017         db  0x00 ; '.'
0000000000001018         db  0xb0 ; '.'
0000000000001019         db  0x7e ; '~'
000000000000101a         db  0x20 ; ' '
000000000000101b         db  0x00 ; '.'
000000000000101c         db  0x00 ; '.'
000000000000101d         db  0x00 ; '.'
000000000000101e         db  0x00 ; '.'
000000000000101f         db  0x00 ; '.'
0000000000001020         db  0x07 ; '.'
0000000000001021         db  0x00 ; '.'
0000000000001022         db  0x00 ; '.'
0000000000001023         db  0x00 ; '.'
0000000000001024         db  0x0c ; '.'
0000000000001025         db  0x00 ; '.'
0000000000001026         db  0x00 ; '.'
0000000000001027         db  0x00 ; '.'
0000000000001028         db  0x00 ; '.'
0000000000001029         db  0x00 ; '.'
000000000000102a         db  0x00 ; '.'
000000000000102b         db  0x00 ; '.'
000000000000102c         db  0x00 ; '.'
000000000000102d         db  0x00 ; '.'
000000000000102e         db  0x00 ; '.'
000000000000102f         db  0x00 ; '.'
0000000000001030         db  0xb8 ; '.'
0000000000001031         db  0x7e ; '~'
0000000000001032         db  0x20 ; ' '
0000000000001033         db  0x00 ; '.'
0000000000001034         db  0x00 ; '.'
0000000000001035         db  0x00 ; '.'
0000000000001036         db  0x00 ; '.'
0000000000001037         db  0x00 ; '.'
0000000000001038         db  0x07 ; '.'
0000000000001039         db  0x00 ; '.'
000000000000103a         db  0x00 ; '.'
000000000000103b         db  0x00 ; '.'
000000000000103c         db  0x0d ; '.'
000000000000103d         db  0x00 ; '.'
000000000000103e         db  0x00 ; '.'
000000000000103f         db  0x00 ; '.'
0000000000001040         db  0x00 ; '.'
0000000000001041         db  0x00 ; '.'
0000000000001042         db  0x00 ; '.'
0000000000001043         db  0x00 ; '.'
0000000000001044         db  0x00 ; '.'
0000000000001045         db  0x00 ; '.'
0000000000001046         db  0x00 ; '.'
0000000000001047         db  0x00 ; '.'
0000000000001048         db  0xc0 ; '.'
0000000000001049         db  0x7e ; '~'
000000000000104a         db  0x20 ; ' '
000000000000104b         db  0x00 ; '.'
000000000000104c         db  0x00 ; '.'
000000000000104d         db  0x00 ; '.'
000000000000104e         db  0x00 ; '.'
000000000000104f         db  0x00 ; '.'
0000000000001050         db  0x07 ; '.'
0000000000001051         db  0x00 ; '.'
0000000000001052         db  0x00 ; '.'
0000000000001053         db  0x00 ; '.'
0000000000001054         db  0x0e ; '.'
0000000000001055         db  0x00 ; '.'
0000000000001056         db  0x00 ; '.'
0000000000001057         db  0x00 ; '.'
0000000000001058         db  0x00 ; '.'
0000000000001059         db  0x00 ; '.'
000000000000105a         db  0x00 ; '.'
000000000000105b         db  0x00 ; '.'
000000000000105c         db  0x00 ; '.'
000000000000105d         db  0x00 ; '.'
000000000000105e         db  0x00 ; '.'
000000000000105f         db  0x00 ; '.'
0000000000001060         db  0xc8 ; '.'
0000000000001061         db  0x7e ; '~'
0000000000001062         db  0x20 ; ' '
0000000000001063         db  0x00 ; '.'
0000000000001064         db  0x00 ; '.'
0000000000001065         db  0x00 ; '.'
0000000000001066         db  0x00 ; '.'
0000000000001067         db  0x00 ; '.'
0000000000001068         db  0x07 ; '.'
0000000000001069         db  0x00 ; '.'
000000000000106a         db  0x00 ; '.'
000000000000106b         db  0x00 ; '.'
000000000000106c         db  0x0f ; '.'
000000000000106d         db  0x00 ; '.'
000000000000106e         db  0x00 ; '.'
000000000000106f         db  0x00 ; '.'
0000000000001070         db  0x00 ; '.'
0000000000001071         db  0x00 ; '.'
0000000000001072         db  0x00 ; '.'
0000000000001073         db  0x00 ; '.'
0000000000001074         db  0x00 ; '.'
0000000000001075         db  0x00 ; '.'
0000000000001076         db  0x00 ; '.'
0000000000001077         db  0x00 ; '.'
0000000000001078         db  0xd0 ; '.'
0000000000001079         db  0x7e ; '~'
000000000000107a         db  0x20 ; ' '
000000000000107b         db  0x00 ; '.'
000000000000107c         db  0x00 ; '.'
000000000000107d         db  0x00 ; '.'
000000000000107e         db  0x00 ; '.'
000000000000107f         db  0x00 ; '.'
0000000000001080         db  0x07 ; '.'
0000000000001081         db  0x00 ; '.'
0000000000001082         db  0x00 ; '.'
0000000000001083         db  0x00 ; '.'
0000000000001084         db  0x10 ; '.'
0000000000001085         db  0x00 ; '.'
0000000000001086         db  0x00 ; '.'
0000000000001087         db  0x00 ; '.'
0000000000001088         db  0x00 ; '.'
0000000000001089         db  0x00 ; '.'
000000000000108a         db  0x00 ; '.'
000000000000108b         db  0x00 ; '.'
000000000000108c         db  0x00 ; '.'
000000000000108d         db  0x00 ; '.'
000000000000108e         db  0x00 ; '.'
000000000000108f         db  0x00 ; '.'
0000000000001090         db  0xd8 ; '.'
0000000000001091         db  0x7e ; '~'
0000000000001092         db  0x20 ; ' '
0000000000001093         db  0x00 ; '.'
0000000000001094         db  0x00 ; '.'
0000000000001095         db  0x00 ; '.'
0000000000001096         db  0x00 ; '.'
0000000000001097         db  0x00 ; '.'
0000000000001098         db  0x07 ; '.'
0000000000001099         db  0x00 ; '.'
000000000000109a         db  0x00 ; '.'
000000000000109b         db  0x00 ; '.'
000000000000109c         db  0x11 ; '.'
000000000000109d         db  0x00 ; '.'
000000000000109e         db  0x00 ; '.'
000000000000109f         db  0x00 ; '.'
00000000000010a0         db  0x00 ; '.'
00000000000010a1         db  0x00 ; '.'
00000000000010a2         db  0x00 ; '.'
00000000000010a3         db  0x00 ; '.'
00000000000010a4         db  0x00 ; '.'
00000000000010a5         db  0x00 ; '.'
00000000000010a6         db  0x00 ; '.'
00000000000010a7         db  0x00 ; '.'
00000000000010a8         db  0xe0 ; '.'
00000000000010a9         db  0x7e ; '~'
00000000000010aa         db  0x20 ; ' '
00000000000010ab         db  0x00 ; '.'
00000000000010ac         db  0x00 ; '.'
00000000000010ad         db  0x00 ; '.'
00000000000010ae         db  0x00 ; '.'
00000000000010af         db  0x00 ; '.'
00000000000010b0         db  0x07 ; '.'
00000000000010b1         db  0x00 ; '.'
00000000000010b2         db  0x00 ; '.'
00000000000010b3         db  0x00 ; '.'
00000000000010b4         db  0x12 ; '.'
00000000000010b5         db  0x00 ; '.'
00000000000010b6         db  0x00 ; '.'
00000000000010b7         db  0x00 ; '.'
00000000000010b8         db  0x00 ; '.'
00000000000010b9         db  0x00 ; '.'
00000000000010ba         db  0x00 ; '.'
00000000000010bb         db  0x00 ; '.'
00000000000010bc         db  0x00 ; '.'
00000000000010bd         db  0x00 ; '.'
00000000000010be         db  0x00 ; '.'
00000000000010bf         db  0x00 ; '.'
00000000000010c0         db  0xe8 ; '.'
00000000000010c1         db  0x7e ; '~'
00000000000010c2         db  0x20 ; ' '
00000000000010c3         db  0x00 ; '.'
00000000000010c4         db  0x00 ; '.'
00000000000010c5         db  0x00 ; '.'
00000000000010c6         db  0x00 ; '.'
00000000000010c7         db  0x00 ; '.'
00000000000010c8         db  0x07 ; '.'
00000000000010c9         db  0x00 ; '.'
00000000000010ca         db  0x00 ; '.'
00000000000010cb         db  0x00 ; '.'
00000000000010cc         db  0x13 ; '.'
00000000000010cd         db  0x00 ; '.'
00000000000010ce         db  0x00 ; '.'
00000000000010cf         db  0x00 ; '.'
00000000000010d0         db  0x00 ; '.'
00000000000010d1         db  0x00 ; '.'
00000000000010d2         db  0x00 ; '.'
00000000000010d3         db  0x00 ; '.'
00000000000010d4         db  0x00 ; '.'
00000000000010d5         db  0x00 ; '.'
00000000000010d6         db  0x00 ; '.'
00000000000010d7         db  0x00 ; '.'
00000000000010d8         db  0xf0 ; '.'
00000000000010d9         db  0x7e ; '~'
00000000000010da         db  0x20 ; ' '
00000000000010db         db  0x00 ; '.'
00000000000010dc         db  0x00 ; '.'
00000000000010dd         db  0x00 ; '.'
00000000000010de         db  0x00 ; '.'
00000000000010df         db  0x00 ; '.'
00000000000010e0         db  0x07 ; '.'
00000000000010e1         db  0x00 ; '.'
00000000000010e2         db  0x00 ; '.'
00000000000010e3         db  0x00 ; '.'
00000000000010e4         db  0x14 ; '.'
00000000000010e5         db  0x00 ; '.'
00000000000010e6         db  0x00 ; '.'
00000000000010e7         db  0x00 ; '.'
00000000000010e8         db  0x00 ; '.'
00000000000010e9         db  0x00 ; '.'
00000000000010ea         db  0x00 ; '.'
00000000000010eb         db  0x00 ; '.'
00000000000010ec         db  0x00 ; '.'
00000000000010ed         db  0x00 ; '.'
00000000000010ee         db  0x00 ; '.'
00000000000010ef         db  0x00 ; '.'
00000000000010f0         db  0xf8 ; '.'
00000000000010f1         db  0x7e ; '~'
00000000000010f2         db  0x20 ; ' '
00000000000010f3         db  0x00 ; '.'
00000000000010f4         db  0x00 ; '.'
00000000000010f5         db  0x00 ; '.'
00000000000010f6         db  0x00 ; '.'
00000000000010f7         db  0x00 ; '.'
00000000000010f8         db  0x07 ; '.'
00000000000010f9         db  0x00 ; '.'
00000000000010fa         db  0x00 ; '.'
00000000000010fb         db  0x00 ; '.'
00000000000010fc         db  0x15 ; '.'
00000000000010fd         db  0x00 ; '.'
00000000000010fe         db  0x00 ; '.'
00000000000010ff         db  0x00 ; '.'
0000000000001100         db  0x00 ; '.'
0000000000001101         db  0x00 ; '.'
0000000000001102         db  0x00 ; '.'
0000000000001103         db  0x00 ; '.'
0000000000001104         db  0x00 ; '.'
0000000000001105         db  0x00 ; '.'
0000000000001106         db  0x00 ; '.'
0000000000001107         db  0x00 ; '.'
0000000000001108         db  0x00 ; '.'
0000000000001109         db  0x7f ; '.'
000000000000110a         db  0x20 ; ' '
000000000000110b         db  0x00 ; '.'
000000000000110c         db  0x00 ; '.'
000000000000110d         db  0x00 ; '.'
000000000000110e         db  0x00 ; '.'
000000000000110f         db  0x00 ; '.'
0000000000001110         db  0x07 ; '.'
0000000000001111         db  0x00 ; '.'
0000000000001112         db  0x00 ; '.'
0000000000001113         db  0x00 ; '.'
0000000000001114         db  0x16 ; '.'
0000000000001115         db  0x00 ; '.'
0000000000001116         db  0x00 ; '.'
0000000000001117         db  0x00 ; '.'
0000000000001118         db  0x00 ; '.'
0000000000001119         db  0x00 ; '.'
000000000000111a         db  0x00 ; '.'
000000000000111b         db  0x00 ; '.'
000000000000111c         db  0x00 ; '.'
000000000000111d         db  0x00 ; '.'
000000000000111e         db  0x00 ; '.'
000000000000111f         db  0x00 ; '.'
0000000000001120         db  0x08 ; '.'
0000000000001121         db  0x7f ; '.'
0000000000001122         db  0x20 ; ' '
0000000000001123         db  0x00 ; '.'
0000000000001124         db  0x00 ; '.'
0000000000001125         db  0x00 ; '.'
0000000000001126         db  0x00 ; '.'
0000000000001127         db  0x00 ; '.'
0000000000001128         db  0x07 ; '.'
0000000000001129         db  0x00 ; '.'
000000000000112a         db  0x00 ; '.'
000000000000112b         db  0x00 ; '.'
000000000000112c         db  0x18 ; '.'
000000000000112d         db  0x00 ; '.'
000000000000112e         db  0x00 ; '.'
000000000000112f         db  0x00 ; '.'
0000000000001130         db  0x00 ; '.'
0000000000001131         db  0x00 ; '.'
0000000000001132         db  0x00 ; '.'
0000000000001133         db  0x00 ; '.'
0000000000001134         db  0x00 ; '.'
0000000000001135         db  0x00 ; '.'
0000000000001136         db  0x00 ; '.'
0000000000001137         db  0x00 ; '.'
0000000000001138         db  0x10 ; '.'
0000000000001139         db  0x7f ; '.'
000000000000113a         db  0x20 ; ' '
000000000000113b         db  0x00 ; '.'
000000000000113c         db  0x00 ; '.'
000000000000113d         db  0x00 ; '.'
000000000000113e         db  0x00 ; '.'
000000000000113f         db  0x00 ; '.'
0000000000001140         db  0x07 ; '.'
0000000000001141         db  0x00 ; '.'
0000000000001142         db  0x00 ; '.'
0000000000001143         db  0x00 ; '.'
0000000000001144         db  0x19 ; '.'
0000000000001145         db  0x00 ; '.'
0000000000001146         db  0x00 ; '.'
0000000000001147         db  0x00 ; '.'
0000000000001148         db  0x00 ; '.'
0000000000001149         db  0x00 ; '.'
000000000000114a         db  0x00 ; '.'
000000000000114b         db  0x00 ; '.'
000000000000114c         db  0x00 ; '.'
000000000000114d         db  0x00 ; '.'
000000000000114e         db  0x00 ; '.'
000000000000114f         db  0x00 ; '.'
0000000000001150         db  0x18 ; '.'
0000000000001151         db  0x7f ; '.'
0000000000001152         db  0x20 ; ' '
0000000000001153         db  0x00 ; '.'
0000000000001154         db  0x00 ; '.'
0000000000001155         db  0x00 ; '.'
0000000000001156         db  0x00 ; '.'
0000000000001157         db  0x00 ; '.'
0000000000001158         db  0x07 ; '.'
0000000000001159         db  0x00 ; '.'
000000000000115a         db  0x00 ; '.'
000000000000115b         db  0x00 ; '.'
000000000000115c         db  0x1a ; '.'
000000000000115d         db  0x00 ; '.'
000000000000115e         db  0x00 ; '.'
000000000000115f         db  0x00 ; '.'
0000000000001160         db  0x00 ; '.'
0000000000001161         db  0x00 ; '.'
0000000000001162         db  0x00 ; '.'
0000000000001163         db  0x00 ; '.'
0000000000001164         db  0x00 ; '.'
0000000000001165         db  0x00 ; '.'
0000000000001166         db  0x00 ; '.'
0000000000001167         db  0x00 ; '.'
0000000000001168         db  0x20 ; ' '
0000000000001169         db  0x7f ; '.'
000000000000116a         db  0x20 ; ' '
000000000000116b         db  0x00 ; '.'
000000000000116c         db  0x00 ; '.'
000000000000116d         db  0x00 ; '.'
000000000000116e         db  0x00 ; '.'
000000000000116f         db  0x00 ; '.'
0000000000001170         db  0x07 ; '.'
0000000000001171         db  0x00 ; '.'
0000000000001172         db  0x00 ; '.'
0000000000001173         db  0x00 ; '.'
0000000000001174         db  0x1b ; '.'
0000000000001175         db  0x00 ; '.'
0000000000001176         db  0x00 ; '.'
0000000000001177         db  0x00 ; '.'
0000000000001178         db  0x00 ; '.'
0000000000001179         db  0x00 ; '.'
000000000000117a         db  0x00 ; '.'
000000000000117b         db  0x00 ; '.'
000000000000117c         db  0x00 ; '.'
000000000000117d         db  0x00 ; '.'
000000000000117e         db  0x00 ; '.'
000000000000117f         db  0x00 ; '.'
0000000000001180         db  0x28 ; '('
0000000000001181         db  0x7f ; '.'
0000000000001182         db  0x20 ; ' '
0000000000001183         db  0x00 ; '.'
0000000000001184         db  0x00 ; '.'
0000000000001185         db  0x00 ; '.'
0000000000001186         db  0x00 ; '.'
0000000000001187         db  0x00 ; '.'
0000000000001188         db  0x07 ; '.'
0000000000001189         db  0x00 ; '.'
000000000000118a         db  0x00 ; '.'
000000000000118b         db  0x00 ; '.'
000000000000118c         db  0x1d ; '.'
000000000000118d         db  0x00 ; '.'
000000000000118e         db  0x00 ; '.'
000000000000118f         db  0x00 ; '.'
0000000000001190         db  0x00 ; '.'
0000000000001191         db  0x00 ; '.'
0000000000001192         db  0x00 ; '.'
0000000000001193         db  0x00 ; '.'
0000000000001194         db  0x00 ; '.'
0000000000001195         db  0x00 ; '.'
0000000000001196         db  0x00 ; '.'
0000000000001197         db  0x00 ; '.'
0000000000001198         db  0x30 ; '0'
0000000000001199         db  0x7f ; '.'
000000000000119a         db  0x20 ; ' '
000000000000119b         db  0x00 ; '.'
000000000000119c         db  0x00 ; '.'
000000000000119d         db  0x00 ; '.'
000000000000119e         db  0x00 ; '.'
000000000000119f         db  0x00 ; '.'
00000000000011a0         db  0x07 ; '.'
00000000000011a1         db  0x00 ; '.'
00000000000011a2         db  0x00 ; '.'
00000000000011a3         db  0x00 ; '.'
00000000000011a4         db  0x1e ; '.'
00000000000011a5         db  0x00 ; '.'
00000000000011a6         db  0x00 ; '.'
00000000000011a7         db  0x00 ; '.'
00000000000011a8         db  0x00 ; '.'
00000000000011a9         db  0x00 ; '.'
00000000000011aa         db  0x00 ; '.'
00000000000011ab         db  0x00 ; '.'
00000000000011ac         db  0x00 ; '.'
00000000000011ad         db  0x00 ; '.'
00000000000011ae         db  0x00 ; '.'
00000000000011af         db  0x00 ; '.'
00000000000011b0         db  0x38 ; '8'
00000000000011b1         db  0x7f ; '.'
00000000000011b2         db  0x20 ; ' '
00000000000011b3         db  0x00 ; '.'
00000000000011b4         db  0x00 ; '.'
00000000000011b5         db  0x00 ; '.'
00000000000011b6         db  0x00 ; '.'
00000000000011b7         db  0x00 ; '.'
00000000000011b8         db  0x07 ; '.'
00000000000011b9         db  0x00 ; '.'
00000000000011ba         db  0x00 ; '.'
00000000000011bb         db  0x00 ; '.'
00000000000011bc         db  0x1f ; '.'
00000000000011bd         db  0x00 ; '.'
00000000000011be         db  0x00 ; '.'
00000000000011bf         db  0x00 ; '.'
00000000000011c0         db  0x00 ; '.'
00000000000011c1         db  0x00 ; '.'
00000000000011c2         db  0x00 ; '.'
00000000000011c3         db  0x00 ; '.'
00000000000011c4         db  0x00 ; '.'
00000000000011c5         db  0x00 ; '.'
00000000000011c6         db  0x00 ; '.'
00000000000011c7         db  0x00 ; '.'
00000000000011c8         db  0x40 ; '@'
00000000000011c9         db  0x7f ; '.'
00000000000011ca         db  0x20 ; ' '
00000000000011cb         db  0x00 ; '.'
00000000000011cc         db  0x00 ; '.'
00000000000011cd         db  0x00 ; '.'
00000000000011ce         db  0x00 ; '.'
00000000000011cf         db  0x00 ; '.'
00000000000011d0         db  0x07 ; '.'
00000000000011d1         db  0x00 ; '.'
00000000000011d2         db  0x00 ; '.'
00000000000011d3         db  0x00 ; '.'
00000000000011d4         db  0x20 ; ' '
00000000000011d5         db  0x00 ; '.'
00000000000011d6         db  0x00 ; '.'
00000000000011d7         db  0x00 ; '.'
00000000000011d8         db  0x00 ; '.'
00000000000011d9         db  0x00 ; '.'
00000000000011da         db  0x00 ; '.'
00000000000011db         db  0x00 ; '.'
00000000000011dc         db  0x00 ; '.'
00000000000011dd         db  0x00 ; '.'
00000000000011de         db  0x00 ; '.'
00000000000011df         db  0x00 ; '.'
00000000000011e0         db  0x48 ; 'H'
00000000000011e1         db  0x7f ; '.'
00000000000011e2         db  0x20 ; ' '
00000000000011e3         db  0x00 ; '.'
00000000000011e4         db  0x00 ; '.'
00000000000011e5         db  0x00 ; '.'
00000000000011e6         db  0x00 ; '.'
00000000000011e7         db  0x00 ; '.'
00000000000011e8         db  0x07 ; '.'
00000000000011e9         db  0x00 ; '.'
00000000000011ea         db  0x00 ; '.'
00000000000011eb         db  0x00 ; '.'
00000000000011ec         db  0x21 ; '!'
00000000000011ed         db  0x00 ; '.'
00000000000011ee         db  0x00 ; '.'
00000000000011ef         db  0x00 ; '.'
00000000000011f0         db  0x00 ; '.'
00000000000011f1         db  0x00 ; '.'
00000000000011f2         db  0x00 ; '.'
00000000000011f3         db  0x00 ; '.'
00000000000011f4         db  0x00 ; '.'
00000000000011f5         db  0x00 ; '.'
00000000000011f6         db  0x00 ; '.'
00000000000011f7         db  0x00 ; '.'
00000000000011f8         db  0x50 ; 'P'
00000000000011f9         db  0x7f ; '.'
00000000000011fa         db  0x20 ; ' '
00000000000011fb         db  0x00 ; '.'
00000000000011fc         db  0x00 ; '.'
00000000000011fd         db  0x00 ; '.'
00000000000011fe         db  0x00 ; '.'
00000000000011ff         db  0x00 ; '.'
0000000000001200         db  0x07 ; '.'
0000000000001201         db  0x00 ; '.'
0000000000001202         db  0x00 ; '.'
0000000000001203         db  0x00 ; '.'
0000000000001204         db  0x22 ; '"'
0000000000001205         db  0x00 ; '.'
0000000000001206         db  0x00 ; '.'
0000000000001207         db  0x00 ; '.'
0000000000001208         db  0x00 ; '.'
0000000000001209         db  0x00 ; '.'
000000000000120a         db  0x00 ; '.'
000000000000120b         db  0x00 ; '.'
000000000000120c         db  0x00 ; '.'
000000000000120d         db  0x00 ; '.'
000000000000120e         db  0x00 ; '.'
000000000000120f         db  0x00 ; '.'
0000000000001210         db  0x58 ; 'X'
0000000000001211         db  0x7f ; '.'
0000000000001212         db  0x20 ; ' '
0000000000001213         db  0x00 ; '.'
0000000000001214         db  0x00 ; '.'
0000000000001215         db  0x00 ; '.'
0000000000001216         db  0x00 ; '.'
0000000000001217         db  0x00 ; '.'
0000000000001218         db  0x07 ; '.'
0000000000001219         db  0x00 ; '.'
000000000000121a         db  0x00 ; '.'
000000000000121b         db  0x00 ; '.'
000000000000121c         db  0x23 ; '#'
000000000000121d         db  0x00 ; '.'
000000000000121e         db  0x00 ; '.'
000000000000121f         db  0x00 ; '.'
0000000000001220         db  0x00 ; '.'
0000000000001221         db  0x00 ; '.'
0000000000001222         db  0x00 ; '.'
0000000000001223         db  0x00 ; '.'
0000000000001224         db  0x00 ; '.'
0000000000001225         db  0x00 ; '.'
0000000000001226         db  0x00 ; '.'
0000000000001227         db  0x00 ; '.'
0000000000001228         db  0x60 ; '`'
0000000000001229         db  0x7f ; '.'
000000000000122a         db  0x20 ; ' '
000000000000122b         db  0x00 ; '.'
000000000000122c         db  0x00 ; '.'
000000000000122d         db  0x00 ; '.'
000000000000122e         db  0x00 ; '.'
000000000000122f         db  0x00 ; '.'
0000000000001230         db  0x07 ; '.'
0000000000001231         db  0x00 ; '.'
0000000000001232         db  0x00 ; '.'
0000000000001233         db  0x00 ; '.'
0000000000001234         db  0x24 ; '$'
0000000000001235         db  0x00 ; '.'
0000000000001236         db  0x00 ; '.'
0000000000001237         db  0x00 ; '.'
0000000000001238         db  0x00 ; '.'
0000000000001239         db  0x00 ; '.'
000000000000123a         db  0x00 ; '.'
000000000000123b         db  0x00 ; '.'
000000000000123c         db  0x00 ; '.'
000000000000123d         db  0x00 ; '.'
000000000000123e         db  0x00 ; '.'
000000000000123f         db  0x00 ; '.'
0000000000001240         db  0x68 ; 'h'
0000000000001241         db  0x7f ; '.'
0000000000001242         db  0x20 ; ' '
0000000000001243         db  0x00 ; '.'
0000000000001244         db  0x00 ; '.'
0000000000001245         db  0x00 ; '.'
0000000000001246         db  0x00 ; '.'
0000000000001247         db  0x00 ; '.'
0000000000001248         db  0x07 ; '.'
0000000000001249         db  0x00 ; '.'
000000000000124a         db  0x00 ; '.'
000000000000124b         db  0x00 ; '.'
000000000000124c         db  0x25 ; '%'
000000000000124d         db  0x00 ; '.'
000000000000124e         db  0x00 ; '.'
000000000000124f         db  0x00 ; '.'
0000000000001250         db  0x00 ; '.'
0000000000001251         db  0x00 ; '.'
0000000000001252         db  0x00 ; '.'
0000000000001253         db  0x00 ; '.'
0000000000001254         db  0x00 ; '.'
0000000000001255         db  0x00 ; '.'
0000000000001256         db  0x00 ; '.'
0000000000001257         db  0x00 ; '.'
0000000000001258         db  0x70 ; 'p'
0000000000001259         db  0x7f ; '.'
000000000000125a         db  0x20 ; ' '
000000000000125b         db  0x00 ; '.'
000000000000125c         db  0x00 ; '.'
000000000000125d         db  0x00 ; '.'
000000000000125e         db  0x00 ; '.'
000000000000125f         db  0x00 ; '.'
0000000000001260         db  0x07 ; '.'
0000000000001261         db  0x00 ; '.'
0000000000001262         db  0x00 ; '.'
0000000000001263         db  0x00 ; '.'
0000000000001264         db  0x26 ; '&'
0000000000001265         db  0x00 ; '.'
0000000000001266         db  0x00 ; '.'
0000000000001267         db  0x00 ; '.'
0000000000001268         db  0x00 ; '.'
0000000000001269         db  0x00 ; '.'
000000000000126a         db  0x00 ; '.'
000000000000126b         db  0x00 ; '.'
000000000000126c         db  0x00 ; '.'
000000000000126d         db  0x00 ; '.'
000000000000126e         db  0x00 ; '.'
000000000000126f         db  0x00 ; '.'
0000000000001270         db  0x78 ; 'x'
0000000000001271         db  0x7f ; '.'
0000000000001272         db  0x20 ; ' '
0000000000001273         db  0x00 ; '.'
0000000000001274         db  0x00 ; '.'
0000000000001275         db  0x00 ; '.'
0000000000001276         db  0x00 ; '.'
0000000000001277         db  0x00 ; '.'
0000000000001278         db  0x07 ; '.'
0000000000001279         db  0x00 ; '.'
000000000000127a         db  0x00 ; '.'
000000000000127b         db  0x00 ; '.'
000000000000127c         db  0x27 ; '''
000000000000127d         db  0x00 ; '.'
000000000000127e         db  0x00 ; '.'
000000000000127f         db  0x00 ; '.'
0000000000001280         db  0x00 ; '.'
0000000000001281         db  0x00 ; '.'
0000000000001282         db  0x00 ; '.'
0000000000001283         db  0x00 ; '.'
0000000000001284         db  0x00 ; '.'
0000000000001285         db  0x00 ; '.'
0000000000001286         db  0x00 ; '.'
0000000000001287         db  0x00 ; '.'
0000000000001288         db  0x80 ; '.'
0000000000001289         db  0x7f ; '.'
000000000000128a         db  0x20 ; ' '
000000000000128b         db  0x00 ; '.'
000000000000128c         db  0x00 ; '.'
000000000000128d         db  0x00 ; '.'
000000000000128e         db  0x00 ; '.'
000000000000128f         db  0x00 ; '.'
0000000000001290         db  0x07 ; '.'
0000000000001291         db  0x00 ; '.'
0000000000001292         db  0x00 ; '.'
0000000000001293         db  0x00 ; '.'
0000000000001294         db  0x28 ; '('
0000000000001295         db  0x00 ; '.'
0000000000001296         db  0x00 ; '.'
0000000000001297         db  0x00 ; '.'
0000000000001298         db  0x00 ; '.'
0000000000001299         db  0x00 ; '.'
000000000000129a         db  0x00 ; '.'
000000000000129b         db  0x00 ; '.'
000000000000129c         db  0x00 ; '.'
000000000000129d         db  0x00 ; '.'
000000000000129e         db  0x00 ; '.'
000000000000129f         db  0x00 ; '.'
00000000000012a0         db  0x88 ; '.'
00000000000012a1         db  0x7f ; '.'
00000000000012a2         db  0x20 ; ' '
00000000000012a3         db  0x00 ; '.'
00000000000012a4         db  0x00 ; '.'
00000000000012a5         db  0x00 ; '.'
00000000000012a6         db  0x00 ; '.'
00000000000012a7         db  0x00 ; '.'
00000000000012a8         db  0x07 ; '.'
00000000000012a9         db  0x00 ; '.'
00000000000012aa         db  0x00 ; '.'
00000000000012ab         db  0x00 ; '.'
00000000000012ac         db  0x29 ; ')'
00000000000012ad         db  0x00 ; '.'
00000000000012ae         db  0x00 ; '.'
00000000000012af         db  0x00 ; '.'
00000000000012b0         db  0x00 ; '.'
00000000000012b1         db  0x00 ; '.'
00000000000012b2         db  0x00 ; '.'
00000000000012b3         db  0x00 ; '.'
00000000000012b4         db  0x00 ; '.'
00000000000012b5         db  0x00 ; '.'
00000000000012b6         db  0x00 ; '.'
00000000000012b7         db  0x00 ; '.'
00000000000012b8         db  0x90 ; '.'
00000000000012b9         db  0x7f ; '.'
00000000000012ba         db  0x20 ; ' '
00000000000012bb         db  0x00 ; '.'
00000000000012bc         db  0x00 ; '.'
00000000000012bd         db  0x00 ; '.'
00000000000012be         db  0x00 ; '.'
00000000000012bf         db  0x00 ; '.'
00000000000012c0         db  0x07 ; '.'
00000000000012c1         db  0x00 ; '.'
00000000000012c2         db  0x00 ; '.'
00000000000012c3         db  0x00 ; '.'
00000000000012c4         db  0x2a ; '*'
00000000000012c5         db  0x00 ; '.'
00000000000012c6         db  0x00 ; '.'
00000000000012c7         db  0x00 ; '.'
00000000000012c8         db  0x00 ; '.'
00000000000012c9         db  0x00 ; '.'
00000000000012ca         db  0x00 ; '.'
00000000000012cb         db  0x00 ; '.'
00000000000012cc         db  0x00 ; '.'
00000000000012cd         db  0x00 ; '.'
00000000000012ce         db  0x00 ; '.'
00000000000012cf         db  0x00 ; '.'
00000000000012d0         db  0x98 ; '.'
00000000000012d1         db  0x7f ; '.'
00000000000012d2         db  0x20 ; ' '
00000000000012d3         db  0x00 ; '.'
00000000000012d4         db  0x00 ; '.'
00000000000012d5         db  0x00 ; '.'
00000000000012d6         db  0x00 ; '.'
00000000000012d7         db  0x00 ; '.'
00000000000012d8         db  0x07 ; '.'
00000000000012d9         db  0x00 ; '.'
00000000000012da         db  0x00 ; '.'
00000000000012db         db  0x00 ; '.'
00000000000012dc         db  0x2b ; '+'
00000000000012dd         db  0x00 ; '.'
00000000000012de         db  0x00 ; '.'
00000000000012df         db  0x00 ; '.'
00000000000012e0         db  0x00 ; '.'
00000000000012e1         db  0x00 ; '.'
00000000000012e2         db  0x00 ; '.'
00000000000012e3         db  0x00 ; '.'
00000000000012e4         db  0x00 ; '.'
00000000000012e5         db  0x00 ; '.'
00000000000012e6         db  0x00 ; '.'
00000000000012e7         db  0x00 ; '.'
00000000000012e8         db  0xa0 ; '.'
00000000000012e9         db  0x7f ; '.'
00000000000012ea         db  0x20 ; ' '
00000000000012eb         db  0x00 ; '.'
00000000000012ec         db  0x00 ; '.'
00000000000012ed         db  0x00 ; '.'
00000000000012ee         db  0x00 ; '.'
00000000000012ef         db  0x00 ; '.'
00000000000012f0         db  0x07 ; '.'
00000000000012f1         db  0x00 ; '.'
00000000000012f2         db  0x00 ; '.'
00000000000012f3         db  0x00 ; '.'
00000000000012f4         db  0x2c ; ','
00000000000012f5         db  0x00 ; '.'
00000000000012f6         db  0x00 ; '.'
00000000000012f7         db  0x00 ; '.'
00000000000012f8         db  0x00 ; '.'
00000000000012f9         db  0x00 ; '.'
00000000000012fa         db  0x00 ; '.'
00000000000012fb         db  0x00 ; '.'
00000000000012fc         db  0x00 ; '.'
00000000000012fd         db  0x00 ; '.'
00000000000012fe         db  0x00 ; '.'
00000000000012ff         db  0x00 ; '.'
0000000000001300         db  0xa8 ; '.'
0000000000001301         db  0x7f ; '.'
0000000000001302         db  0x20 ; ' '
0000000000001303         db  0x00 ; '.'
0000000000001304         db  0x00 ; '.'
0000000000001305         db  0x00 ; '.'
0000000000001306         db  0x00 ; '.'
0000000000001307         db  0x00 ; '.'
0000000000001308         db  0x07 ; '.'
0000000000001309         db  0x00 ; '.'
000000000000130a         db  0x00 ; '.'
000000000000130b         db  0x00 ; '.'
000000000000130c         db  0x2d ; '-'
000000000000130d         db  0x00 ; '.'
000000000000130e         db  0x00 ; '.'
000000000000130f         db  0x00 ; '.'
0000000000001310         db  0x00 ; '.'
0000000000001311         db  0x00 ; '.'
0000000000001312         db  0x00 ; '.'
0000000000001313         db  0x00 ; '.'
0000000000001314         db  0x00 ; '.'
0000000000001315         db  0x00 ; '.'
0000000000001316         db  0x00 ; '.'
0000000000001317         db  0x00 ; '.'
0000000000001318         db  0xb0 ; '.'
0000000000001319         db  0x7f ; '.'
000000000000131a         db  0x20 ; ' '
000000000000131b         db  0x00 ; '.'
000000000000131c         db  0x00 ; '.'
000000000000131d         db  0x00 ; '.'
000000000000131e         db  0x00 ; '.'
000000000000131f         db  0x00 ; '.'
0000000000001320         db  0x07 ; '.'
0000000000001321         db  0x00 ; '.'
0000000000001322         db  0x00 ; '.'
0000000000001323         db  0x00 ; '.'
0000000000001324         db  0x2e ; '.'
0000000000001325         db  0x00 ; '.'
0000000000001326         db  0x00 ; '.'
0000000000001327         db  0x00 ; '.'
0000000000001328         db  0x00 ; '.'
0000000000001329         db  0x00 ; '.'
000000000000132a         db  0x00 ; '.'
000000000000132b         db  0x00 ; '.'
000000000000132c         db  0x00 ; '.'
000000000000132d         db  0x00 ; '.'
000000000000132e         db  0x00 ; '.'
000000000000132f         db  0x00 ; '.'
0000000000001330         db  0xb8 ; '.'
0000000000001331         db  0x7f ; '.'
0000000000001332         db  0x20 ; ' '
0000000000001333         db  0x00 ; '.'
0000000000001334         db  0x00 ; '.'
0000000000001335         db  0x00 ; '.'
0000000000001336         db  0x00 ; '.'
0000000000001337         db  0x00 ; '.'
0000000000001338         db  0x07 ; '.'
0000000000001339         db  0x00 ; '.'
000000000000133a         db  0x00 ; '.'
000000000000133b         db  0x00 ; '.'
000000000000133c         db  0x2f ; '/'
000000000000133d         db  0x00 ; '.'
000000000000133e         db  0x00 ; '.'
000000000000133f         db  0x00 ; '.'
0000000000001340         db  0x00 ; '.'
0000000000001341         db  0x00 ; '.'
0000000000001342         db  0x00 ; '.'
0000000000001343         db  0x00 ; '.'
0000000000001344         db  0x00 ; '.'
0000000000001345         db  0x00 ; '.'
0000000000001346         db  0x00 ; '.'
0000000000001347         db  0x00 ; '.'
0000000000001348         db  0xc0 ; '.'
0000000000001349         db  0x7f ; '.'
000000000000134a         db  0x20 ; ' '
000000000000134b         db  0x00 ; '.'
000000000000134c         db  0x00 ; '.'
000000000000134d         db  0x00 ; '.'
000000000000134e         db  0x00 ; '.'
000000000000134f         db  0x00 ; '.'
0000000000001350         db  0x07 ; '.'
0000000000001351         db  0x00 ; '.'
0000000000001352         db  0x00 ; '.'
0000000000001353         db  0x00 ; '.'
0000000000001354         db  0x31 ; '1'
0000000000001355         db  0x00 ; '.'
0000000000001356         db  0x00 ; '.'
0000000000001357         db  0x00 ; '.'
0000000000001358         db  0x00 ; '.'
0000000000001359         db  0x00 ; '.'
000000000000135a         db  0x00 ; '.'
000000000000135b         db  0x00 ; '.'
000000000000135c         db  0x00 ; '.'
000000000000135d         db  0x00 ; '.'
000000000000135e         db  0x00 ; '.'
000000000000135f         db  0x00 ; '.'
0000000000001360         db  0xc8 ; '.'
0000000000001361         db  0x7f ; '.'
0000000000001362         db  0x20 ; ' '
0000000000001363         db  0x00 ; '.'
0000000000001364         db  0x00 ; '.'
0000000000001365         db  0x00 ; '.'
0000000000001366         db  0x00 ; '.'
0000000000001367         db  0x00 ; '.'
0000000000001368         db  0x07 ; '.'
0000000000001369         db  0x00 ; '.'
000000000000136a         db  0x00 ; '.'
000000000000136b         db  0x00 ; '.'
000000000000136c         db  0x32 ; '2'
000000000000136d         db  0x00 ; '.'
000000000000136e         db  0x00 ; '.'
000000000000136f         db  0x00 ; '.'
0000000000001370         db  0x00 ; '.'
0000000000001371         db  0x00 ; '.'
0000000000001372         db  0x00 ; '.'
0000000000001373         db  0x00 ; '.'
0000000000001374         db  0x00 ; '.'
0000000000001375         db  0x00 ; '.'
0000000000001376         db  0x00 ; '.'
0000000000001377         db  0x00 ; '.'
0000000000001378         db  0xd0 ; '.'
0000000000001379         db  0x7f ; '.'
000000000000137a         db  0x20 ; ' '
000000000000137b         db  0x00 ; '.'
000000000000137c         db  0x00 ; '.'
000000000000137d         db  0x00 ; '.'
000000000000137e         db  0x00 ; '.'
000000000000137f         db  0x00 ; '.'
0000000000001380         db  0x07 ; '.'
0000000000001381         db  0x00 ; '.'
0000000000001382         db  0x00 ; '.'
0000000000001383         db  0x00 ; '.'
0000000000001384         db  0x34 ; '4'
0000000000001385         db  0x00 ; '.'
0000000000001386         db  0x00 ; '.'
0000000000001387         db  0x00 ; '.'
0000000000001388         db  0x00 ; '.'
0000000000001389         db  0x00 ; '.'
000000000000138a         db  0x00 ; '.'
000000000000138b         db  0x00 ; '.'
000000000000138c         db  0x00 ; '.'
000000000000138d         db  0x00 ; '.'
000000000000138e         db  0x00 ; '.'
000000000000138f         db  0x00 ; '.'


        ; Section .init
        ; Range: [0x1390; 0x13a7[ (23 bytes)
        ; File offset : [5008; 5031[ (23 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _init:
0000000000001390         sub        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+44
0000000000001394         mov        rax, qword [qword_207fe8]                   ; qword_207fe8
000000000000139b         test       rax, rax
000000000000139e         je         loc_13a2

00000000000013a0         call       rax

                     loc_13a2:
00000000000013a2         add        rsp, 0x8                                    ; CODE XREF=_init+14
00000000000013a6         ret
                        ; endp
00000000000013a7         db  0x00 ; '.'
00000000000013a8         db  0x00 ; '.'
00000000000013a9         db  0x00 ; '.'
00000000000013aa         db  0x00 ; '.'
00000000000013ab         db  0x00 ; '.'
00000000000013ac         db  0x00 ; '.'
00000000000013ad         db  0x00 ; '.'
00000000000013ae         db  0x00 ; '.'
00000000000013af         db  0x00 ; '.'


        ; Section .plt
        ; Range: [0x13b0; 0x16b0[ (768 bytes)
        ; File offset : [5040; 5808[ (768 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR


                     loc_13b0:
00000000000013b0         push       qword [qword_207e50]                        ; Begin of unwind block (FDE at 0x6ba4), qword_207e50, CODE XREF=sub_13c6+5
00000000000013b6         jmp        qword [qword_207e50+8]                      ; 0x207e58
                        ; endp
00000000000013bc         nop        dword [rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_free:        // free
00000000000013c0         jmp        qword [free@GOT]                            ; free, free@GOT, CODE XREF=main+381, mode_compile+182, quotearg_n_options+277, quotearg_free+55, quotearg_free+82, quotearg_free+120, xrealloc+40
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_13c6:
00000000000013c6         push       0x0
00000000000013cb         jmp        loc_13b0


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_abort:        // abort
00000000000013d0         jmp        qword [abort@GOT]                           ; abort, abort@GOT, CODE XREF=set_program_name+154, sub_31d0+2799, quotearg_n_options+417, set_custom_quoting+43, quotearg_n_style+132, quotearg_n_style_mem+128, quotearg_n_style_colon+132, quotearg_n_custom_mem+135, xalloc_die+48
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_13d6:
00000000000013d6         push       0x1
00000000000013db         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___errno_location:        // __errno_location
00000000000013e0         jmp        qword [__errno_location@GOT]                ; __errno_location, __errno_location@GOT, CODE XREF=main+1070, main+1401, main+1476, close_stdout+22, quotearg_n_options+28, clone_quoting_options+7, quotearg_buffer+45, quotearg_alloc_mem+42, xstrtoumax+67, close_stream+60, close_stream+104
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_13e6:
00000000000013e6         push       0x2
00000000000013eb         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strncmp:        // strncmp
00000000000013f0         jmp        qword [strncmp@GOT]                         ; strncmp, strncmp@GOT, CODE XREF=usage+740, usage+933
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_13f6:
00000000000013f6         push       0x3
00000000000013fb         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j__exit:        // _exit
0000000000001400         jmp        qword [_exit@GOT]                           ; _exit, _exit@GOT, CODE XREF=close_stdout+136
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1406:
0000000000001406         push       0x4
000000000000140b         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fpending:        // __fpending
0000000000001410         jmp        qword [__fpending@GOT]                      ; __fpending, __fpending@GOT, CODE XREF=close_stream+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1416:
0000000000001416         push       0x5
000000000000141b         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_textdomain:        // textdomain
0000000000001420         jmp        qword [textdomain@GOT]                      ; textdomain, textdomain@GOT, CODE XREF=main+97
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1426:
0000000000001426         push       0x6
000000000000142b         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fclose:        // fclose
0000000000001430         jmp        qword [fclose@GOT]                          ; fclose, fclose@GOT, CODE XREF=rpl_fclose+54, rpl_fclose+107
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1436:
0000000000001436         push       0x7
000000000000143b         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_bindtextdomain:        // bindtextdomain
0000000000001440         jmp        qword [bindtextdomain@GOT]                  ; bindtextdomain, bindtextdomain@GOT, CODE XREF=main+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1446:
0000000000001446         push       0x8
000000000000144b         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_dcgettext:        // dcgettext
0000000000001450         jmp        qword [dcgettext@GOT]                       ; dcgettext, dcgettext@GOT, CODE XREF=main+284, main+496, main+547, main+787, main+1179, main+1228, main+1278, main+1317, main+1468, main+1531, main+1604
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1456:
0000000000001456         push       0x9
000000000000145b         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_get_mb_cur_max:        // __ctype_get_mb_cur_max
0000000000001460         jmp        qword [__ctype_get_mb_cur_max@GOT]          ; __ctype_get_mb_cur_max, __ctype_get_mb_cur_max@GOT, CODE XREF=quotearg_buffer_restyled+108
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1466:
0000000000001466         push       0xa
000000000000146b         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strlen:        // strlen
0000000000001470         jmp        qword [strlen@GOT]                          ; strlen, strlen@GOT, CODE XREF=quotearg_buffer_restyled+343, sub_31d0+411, sub_31d0+1742, xstrdup+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1476:
0000000000001476         push       0xb
000000000000147b         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___stack_chk_fail:        // __stack_chk_fail
0000000000001480         jmp        qword [__stack_chk_fail@GOT]                ; __stack_chk_fail, __stack_chk_fail@GOT, CODE XREF=main+1585, mode_create_from_ref+132, sub_31d0+2739, quotearg_n_style+137, quotearg_n_style_mem+133, quotearg_char_mem+147, quotearg_n_style_colon+137, quotearg_n_custom_mem+140, version_etc_va+101, version_etc+192, xstrtoumax+896
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1486:
0000000000001486         push       0xc
000000000000148b         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_getopt_long:        // getopt_long
0000000000001490         jmp        qword [getopt_long@GOT]                     ; getopt_long, getopt_long@GOT, CODE XREF=main+132
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1496:
0000000000001496         push       0xd
000000000000149b         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbrtowc:        // mbrtowc
00000000000014a0         jmp        qword [mbrtowc@GOT]                         ; mbrtowc, mbrtowc@GOT, CODE XREF=rpl_mbrtowc+50
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14a6:
00000000000014a6         push       0xe
00000000000014ab         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strchr:        // strchr
00000000000014b0         jmp        qword [strchr@GOT]                          ; strchr, strchr@GOT, CODE XREF=xstrtoumax+291, xstrtoumax+323, xstrtoumax+380
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14b6:
00000000000014b6         push       0xf
00000000000014bb         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_strrchr:        // strrchr
00000000000014c0         jmp        qword [strrchr@GOT]                         ; strrchr, strrchr@GOT, CODE XREF=set_program_name+14
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14c6:
00000000000014c6         push       0x10
00000000000014cb         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_lseek:        // lseek
00000000000014d0         jmp        qword [lseek@GOT]                           ; lseek, lseek@GOT, CODE XREF=rpl_fclose+89, j_j_fseeko+49
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14d6:
00000000000014d6         push       0x11
00000000000014db         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___assert_fail:        // __assert_fail
00000000000014e0         jmp        qword [__assert_fail@GOT]                   ; __assert_fail, __assert_fail@GOT, CODE XREF=xstrtoumax+927
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14e6:
00000000000014e6         push       0x12
00000000000014eb         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___strtoul_internal:        // __strtoul_internal
00000000000014f0         jmp        qword [__strtoul_internal@GOT]              ; __strtoul_internal, __strtoul_internal@GOT, CODE XREF=xstrtoumax+142
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_14f6:
00000000000014f6         push       0x13
00000000000014fb         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memset:        // memset
0000000000001500         jmp        qword [memset@GOT]                          ; memset, memset@GOT, CODE XREF=quotearg_n_options+153, xzalloc+18
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1506:
0000000000001506         push       0x14
000000000000150b         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcmp:        // memcmp
0000000000001510         jmp        qword [memcmp@GOT]                          ; memcmp, memcmp@GOT, CODE XREF=quotearg_buffer_restyled+410
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1516:
0000000000001516         push       0x15
000000000000151b         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fputs_unlocked:        // fputs_unlocked
0000000000001520         jmp        qword [fputs_unlocked@GOT]                  ; fputs_unlocked, fputs_unlocked@GOT, CODE XREF=usage+157, usage+194, usage+231, usage+268, usage+305, usage+342, usage+379, usage+423, usage+1048, version_etc_arn+135, emit_bug_reporting_address+123
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1526:
0000000000001526         push       0x16
000000000000152b         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_calloc:        // calloc
0000000000001530         jmp        qword [calloc@GOT]                          ; calloc, calloc@GOT, CODE XREF=xcalloc+26
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1536:
0000000000001536         push       0x17
000000000000153b         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mkfifo:        // mkfifo
0000000000001540         jmp        qword [mkfifo@GOT]                          ; mkfifo, mkfifo@GOT, CODE XREF=main+658
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1546:
0000000000001546         push       0x18
000000000000154b         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_umask:        // umask
0000000000001550         jmp        qword [umask@GOT]                           ; umask, umask@GOT, CODE XREF=main+339, main+349
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1556:
0000000000001556         push       0x19
000000000000155b         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_memcpy:        // memcpy
0000000000001560         jmp        qword [memcpy@GOT]                          ; memcpy, memcpy@GOT, CODE XREF=xmemdup+35
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1566:
0000000000001566         push       0x1a
000000000000156b         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___xmknod:        // __xmknod
0000000000001570         jmp        qword [__xmknod@GOT]                        ; __xmknod, __xmknod@GOT, CODE XREF=main+1031
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1576:
0000000000001576         push       0x1b
000000000000157b         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fileno:        // fileno
0000000000001580         jmp        qword [fileno@GOT]                          ; fileno, fileno@GOT, CODE XREF=rpl_fclose+7, rpl_fclose+75, j_j_fseeko+36
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1586:
0000000000001586         push       0x1c
000000000000158b         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___xstat:        // __xstat
0000000000001590         jmp        qword [__xstat@GOT]                         ; __xstat, __xstat@GOT, CODE XREF=mode_create_from_ref+38
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1596:
0000000000001596         push       0x1d
000000000000159b         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_malloc:        // malloc
00000000000015a0         jmp        qword [malloc@GOT]                          ; malloc, malloc@GOT, CODE XREF=xmalloc+4
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15a6:
00000000000015a6         push       0x1e
00000000000015ab         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fflush:        // fflush
00000000000015b0         jmp        qword [fflush@GOT]                          ; fflush, fflush@GOT, CODE XREF=rpl_fflush+30, rpl_fflush+59
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15b6:
00000000000015b6         push       0x1f
00000000000015bb         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_nl_langinfo:        // nl_langinfo
00000000000015c0         jmp        qword [nl_langinfo@GOT]                     ; nl_langinfo, nl_langinfo@GOT, CODE XREF=locale_charset+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15c6:
00000000000015c6         push       0x20
00000000000015cb         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___freading:        // __freading
00000000000015d0         jmp        qword [__freading@GOT]                      ; __freading, __freading@GOT, CODE XREF=rpl_fclose+19, rpl_fflush+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15d6:
00000000000015d6         push       0x21
00000000000015db         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_realloc:        // realloc
00000000000015e0         jmp        qword [realloc@GOT]                         ; realloc, realloc@GOT, CODE XREF=xrealloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15e6:
00000000000015e6         push       0x22
00000000000015eb         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_setlocale:        // setlocale
00000000000015f0         jmp        qword [setlocale@GOT]                       ; setlocale, setlocale@GOT, CODE XREF=main+66, usage+715, usage+908, hard_locale+6
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_15f6:
00000000000015f6         push       0x23
00000000000015fb         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___printf_chk:        // __printf_chk
0000000000001600         jmp        qword [__printf_chk@GOT]                    ; __printf_chk, __printf_chk@GOT, CODE XREF=usage+120, usage+464, usage+703, usage+796, usage+857, usage+896, usage+999, emit_bug_reporting_address+37, emit_bug_reporting_address+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1606:
0000000000001606         push       0x24
000000000000160b         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_chmod:        // chmod
0000000000001610         jmp        qword [chmod@GOT]                           ; chmod, chmod@GOT, CODE XREF=main+690
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1616:
0000000000001616         push       0x25
000000000000161b         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_error:        // error
0000000000001620         jmp        qword [error@GOT]                           ; error, error@GOT, CODE XREF=main+298, main+513, main+804, main+1094, main+1193, main+1248, main+1298, main+1340, main+1425, main+1496, main+1548
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1626:
0000000000001626         push       0x26
000000000000162b         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fseeko:        // fseeko
0000000000001630         jmp        qword [fseeko@GOT]                          ; fseeko, fseeko@GOT, CODE XREF=j_j_fseeko
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1636:
0000000000001636         push       0x27
000000000000163b         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___cxa_atexit:        // __cxa_atexit
0000000000001640         jmp        qword [__cxa_atexit@GOT]                    ; __cxa_atexit, __cxa_atexit@GOT, CODE XREF=atexit+9
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1646:
0000000000001646         push       0x28
000000000000164b         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_exit:        // exit
0000000000001650         jmp        qword [exit@GOT]                            ; exit, exit@GOT, CODE XREF=main+250, usage+88
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1656:
0000000000001656         push       0x29
000000000000165b         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_fwrite:        // fwrite
0000000000001660         jmp        qword [fwrite@GOT]                          ; fwrite, fwrite@GOT, CODE XREF=set_program_name+149
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1666:
0000000000001666         push       0x2a
000000000000166b         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___fprintf_chk:        // __fprintf_chk
0000000000001670         jmp        qword [__fprintf_chk@GOT]                   ; __fprintf_chk, __fprintf_chk@GOT, CODE XREF=main+576, usage+81, version_etc_arn+55, version_etc_arn+105, version_etc_arn+285, version_etc_arn+332, version_etc_arn+492, version_etc_arn+563, version_etc_arn+642, version_etc_arn+718, version_etc_arn+872
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1676:
0000000000001676         push       0x2b
000000000000167b         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_mbsinit:        // mbsinit
0000000000001680         jmp        qword [mbsinit@GOT]                         ; mbsinit, mbsinit@GOT, CODE XREF=sub_31d0+616
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1686:
0000000000001686         push       0x2c
000000000000168b         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_iswprint:        // iswprint
0000000000001690         jmp        qword [iswprint@GOT]                        ; iswprint, iswprint@GOT, CODE XREF=sub_31d0+592
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_1696:
0000000000001696         push       0x2d
000000000000169b         jmp        0x13b0
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j___ctype_b_loc:        // __ctype_b_loc
00000000000016a0         jmp        qword [__ctype_b_loc@GOT]                   ; __ctype_b_loc, __ctype_b_loc@GOT, CODE XREF=sub_2f70+51, xstrtoumax+85
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_16a6:
00000000000016a6         push       0x2e
00000000000016ab         jmp        0x13b0
                        ; endp


        ; Section .plt.got
        ; Range: [0x16b0; 0x16b8[ (8 bytes)
        ; File offset : [5808; 5816[ (8 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     j_qword_207ff8:        // qword_207ff8
00000000000016b0         jmp        qword [qword_207ff8]                        ; qword, End of unwind block (FDE at 0x6ba4), Begin of unwind block (FDE at 0x6bcc), qword_207ff8, CODE XREF=__do_global_dtors_aux+30
                        ; endp
00000000000016b6         align      8
00000000000016b8         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x6bcc)
00000000000016b9         db  0x00 ; '.'
00000000000016ba         db  0x00 ; '.'
00000000000016bb         db  0x00 ; '.'
00000000000016bc         db  0x00 ; '.'
00000000000016bd         db  0x00 ; '.'
00000000000016be         db  0x00 ; '.'
00000000000016bf         db  0x00 ; '.'


        ; Section .text
        ; Range: [0x16c0; 0x565e[ (16286 bytes)
        ; File offset : [5824; 22110[ (16286 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     main:
00000000000016c0         push       r15                                         ; Begin of unwind block (FDE at 0x6c10), DATA XREF=_start+29
00000000000016c2         push       r14
00000000000016c4         push       r13
00000000000016c6         push       r12
00000000000016c8         lea        r12, qword [longopts]                       ; longopts
00000000000016cf         push       rbp
00000000000016d0         push       rbx
00000000000016d1         movsxd     rbp, edi
00000000000016d4         mov        rbx, rsi
00000000000016d7         xor        r13d, r13d
00000000000016da         sub        rsp, 0x28
00000000000016de         mov        rdi, qword [rsi]
00000000000016e1         mov        rax, qword [fs:0x28]
00000000000016ea         mov        qword [rsp+0x58+var_40], rax
00000000000016ef         xor        eax, eax
00000000000016f1         call       set_program_name                            ; set_program_name
00000000000016f6         lea        rsi, qword [aWrittenBySSAnd+27]             ; argument "__locale" for method j_setlocale, 0x64a1
00000000000016fd         mov        edi, 0x6                                    ; argument "__category" for method j_setlocale
0000000000001702         call       j_setlocale                                 ; setlocale
0000000000001707         lea        rsi, qword [aUsrlocalsharel]                ; argument "__dirname" for method j_bindtextdomain, "/usr/local/share/locale"
000000000000170e         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_bindtextdomain, "coreutils"
0000000000001715         call       j_bindtextdomain                            ; bindtextdomain
000000000000171a         lea        rdi, qword [aCoreutils]                     ; argument "__domainname" for method j_textdomain, "coreutils"
0000000000001721         call       j_textdomain                                ; textdomain
0000000000001726         lea        rdi, qword [close_stdout]                   ; argument "__func" for method atexit, close_stdout
000000000000172d         call       atexit                                      ; atexit

                     loc_1732:
0000000000001732         lea        rdx, qword [aDavidMackenzie+16]             ; argument "__shortopts" for method j_getopt_long, 0x5755, CODE XREF=main+180, main+264, main+303
0000000000001739         xor        r8d, r8d                                    ; argument "__longind" for method j_getopt_long
000000000000173c         mov        rcx, r12                                    ; argument "__longopts" for method j_getopt_long
000000000000173f         mov        rsi, rbx                                    ; argument "___argv" for method j_getopt_long
0000000000001742         mov        edi, ebp                                    ; argument "___argc" for method j_getopt_long
0000000000001744         call       j_getopt_long                               ; getopt_long
0000000000001749         cmp        eax, 0xffffffff
000000000000174c         je         loc_17f4

0000000000001752         cmp        eax, 0xffffff7e
0000000000001757         je         loc_1b3c

000000000000175d         jle        loc_1780

000000000000175f         cmp        eax, 0x5a
0000000000001762         je         loc_17c0

0000000000001764         cmp        eax, 0x6d
0000000000001767         jne        loc_19e9

000000000000176d         mov        r13, qword [optarg@@GLIBC_2.2.5]            ; optarg@@GLIBC_2.2.5
0000000000001774         jmp        loc_1732
0000000000001776         align      128

                     loc_1780:
0000000000001780         cmp        eax, 0xffffff7d                             ; CODE XREF=main+157
0000000000001785         jne        loc_19e9

000000000000178b         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001792         mov        rcx, qword [Version]                        ; Version
0000000000001799         lea        r8, qword [aDavidMackenzie]                 ; "David MacKenzie"
00000000000017a0         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x5700
00000000000017a7         lea        rsi, qword [aMknod]                         ; "mknod"
00000000000017ae         xor        r9d, r9d
00000000000017b1         xor        eax, eax
00000000000017b3         call       version_etc                                 ; version_etc
00000000000017b8         xor        edi, edi                                    ; argument "__status" for method j_exit
00000000000017ba         call       j_exit                                      ; exit
                        ; endp
00000000000017bf         align      64

                     loc_17c0:
00000000000017c0         cmp        qword [optarg@@GLIBC_2.2.5], 0x0            ; optarg@@GLIBC_2.2.5, CODE XREF=main+162
00000000000017c8         je         loc_1732

00000000000017ce         lea        rsi, qword [aWarningIgnorin]                ; argument "msgid" for method j_dcgettext, "warning: ignoring --context; it requires an SELinux/SMACK-enabled kernel"
00000000000017d5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000017d7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000017dc         call       j_dcgettext                                 ; dcgettext
00000000000017e1         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000017e3         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000017e6         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000017e8         xor        eax, eax
00000000000017ea         call       j_error                                     ; error
00000000000017ef         jmp        loc_1732

                     loc_17f4:
00000000000017f4         test       r13, r13                                    ; CODE XREF=main+140
00000000000017f7         je         loc_1b0b

00000000000017fd         mov        rdi, r13
0000000000001800         call       mode_compile                                ; mode_compile
0000000000001805         test       rax, rax
0000000000001808         mov        r14, rax
000000000000180b         je         loc_1d1a

0000000000001811         xor        edi, edi                                    ; argument "__mask" for method j_umask
0000000000001813         call       j_umask                                     ; umask
0000000000001818         mov        r12d, eax
000000000000181b         mov        edi, eax                                    ; argument "__mask" for method j_umask
000000000000181d         call       j_umask                                     ; umask
0000000000001822         xor        r8d, r8d
0000000000001825         mov        edx, r12d
0000000000001828         xor        esi, esi
000000000000182a         mov        rcx, r14
000000000000182d         mov        edi, 0x1b6
0000000000001832         call       mode_adjust                                 ; mode_adjust
0000000000001837         mov        rdi, r14                                    ; argument "__ptr" for method j_free
000000000000183a         mov        r12d, eax
000000000000183d         call       j_free                                      ; free
0000000000001842         test       r12d, 0xfffffe00
0000000000001849         jne        loc_1cf6

                     loc_184f:
000000000000184f         movsxd     rcx, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+1105
0000000000001856         mov        edx, ebp
0000000000001858         sub        edx, ecx
000000000000185a         cmp        ecx, ebp
000000000000185c         movsxd     rdx, edx
000000000000185f         jge        loc_190a

0000000000001865         lea        eax, dword [rcx+1]
0000000000001868         cmp        eax, ebp
000000000000186a         jge        loc_19a4

0000000000001870         movsxd     rax, ecx
0000000000001873         mov        rsi, qword [rbx+rax*8+8]
0000000000001878         cmp        byte [rsi], 0x70
000000000000187b         jne        loc_19a4

0000000000001881         cmp        rdx, 0x1
0000000000001885         jbe        loc_1c01

000000000000188b         cmp        rdx, 0x2
000000000000188f         jbe        loc_1921

0000000000001895         mov        rdi, qword [rbx+rax*8+0x10]

                     loc_189a:
000000000000189a         call       quote                                       ; quote, CODE XREF=main+1160
000000000000189f         lea        rsi, qword [aExtraOperandS]                 ; argument "msgid" for method j_dcgettext, "extra operand %s"
00000000000018a6         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000018a8         mov        rbx, rax
00000000000018ab         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000018b0         call       j_dcgettext                                 ; dcgettext
00000000000018b5         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000018b7         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000018ba         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000018bc         xor        eax, eax
00000000000018be         mov        rcx, rbx
00000000000018c1         call       j_error                                     ; error
00000000000018c6         sub        ebp, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5
00000000000018cc         mov        edx, 0x5
00000000000018d1         lea        rsi, qword [aFifosDoNotHave]                ; "Fifos do not have major and minor device numbers."
00000000000018d8         cmp        ebp, 0x4
00000000000018db         jne        loc_19e9

                     loc_18e1:
00000000000018e1         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=main+1580
00000000000018e3         call       j_dcgettext                                 ; dcgettext
00000000000018e8         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
00000000000018ef         lea        rdx, qword [aSSSn+8]                        ; 0x6450
00000000000018f6         mov        rcx, rax
00000000000018f9         mov        esi, 0x1
00000000000018fe         xor        eax, eax
0000000000001900         call       j___fprintf_chk                             ; __fprintf_chk
0000000000001905         jmp        loc_19e9

                     loc_190a:
000000000000190a         cmp        rdx, 0x1                                    ; CODE XREF=main+415
000000000000190e         jbe        loc_1b4d

0000000000001914         cmp        rdx, 0x2
0000000000001918         jne        loc_1b43

                     loc_191e:
000000000000191e         movsxd     rax, ecx                                    ; CODE XREF=main+754

                     loc_1921:
0000000000001921         add        rax, 0x1                                    ; CODE XREF=main+463
0000000000001925         mov        rdi, qword [rbx+rax*8]
0000000000001929         lea        rdx, qword [rax*8]
0000000000001931         movzx      eax, byte [rdi]
0000000000001934         cmp        al, 0x63
0000000000001936         je         loc_19fb

000000000000193c         jle        loc_1b16

0000000000001942         cmp        al, 0x70
0000000000001944         jne        loc_19f3

000000000000194a         mov        rdi, qword [rbx+rdx-8]                      ; argument "__path" for method j_mkfifo
000000000000194f         mov        esi, r12d                                   ; argument "__mode" for method j_mkfifo
0000000000001952         call       j_mkfifo                                    ; mkfifo
0000000000001957         test       eax, eax
0000000000001959         jne        loc_1c1f

                     loc_195f:
000000000000195f         test       r13, r13                                    ; CODE XREF=main+1038
0000000000001962         je         loc_197f

0000000000001964         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5
000000000000196b         mov        esi, r12d                                   ; argument "__mode" for method j_chmod
000000000000196e         mov        rdi, qword [rbx+rax*8]                      ; argument "__file" for method j_chmod
0000000000001972         call       j_chmod                                     ; chmod
0000000000001977         test       eax, eax
0000000000001979         jne        loc_1c56

                     loc_197f:
000000000000197f         xor        eax, eax                                    ; CODE XREF=main+674
0000000000001981         mov        rbx, qword [rsp+0x58+var_40]
0000000000001986         xor        rbx, qword [fs:0x28]
000000000000198f         jne        loc_1cf1

0000000000001995         add        rsp, 0x28
0000000000001999         pop        rbx
000000000000199a         pop        rbp
000000000000199b         pop        r12
000000000000199d         pop        r13
000000000000199f         pop        r14
00000000000019a1         pop        r15
00000000000019a3         ret
                        ; endp

                     loc_19a4:
00000000000019a4         cmp        rdx, 0x3                                    ; CODE XREF=main+426, main+443
00000000000019a8         jbe        loc_1c9d

00000000000019ae         cmp        rdx, 0x4
00000000000019b2         jbe        loc_191e

00000000000019b8         mov        rdi, qword [rbx+rcx*8+0x20]
00000000000019bd         call       quote                                       ; quote
00000000000019c2         lea        rsi, qword [aExtraOperandS]                 ; "extra operand %s"
00000000000019c9         mov        rbx, rax
00000000000019cc         mov        edx, 0x5

                     loc_19d1:
00000000000019d1         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=main+1143, main+1370
00000000000019d3         call       j_dcgettext                                 ; dcgettext
00000000000019d8         mov        rcx, rbx
00000000000019db         mov        rdx, rax                                    ; argument "__format" for method j_error
00000000000019de         xor        esi, esi                                    ; argument "__errnum" for method j_error
00000000000019e0         xor        edi, edi                                    ; argument "__status" for method j_error
00000000000019e2         xor        eax, eax
00000000000019e4         call       j_error                                     ; error

                     loc_19e9:
00000000000019e9         mov        edi, 0x1                                    ; argument #1 for method usage, CODE XREF=main+167, main+197, main+539, main+581, main+1198, main+1562
00000000000019ee         call       usage                                       ; usage

                     loc_19f3:
00000000000019f3         cmp        al, 0x75                                    ; CODE XREF=main+644
00000000000019f5         jne        loc_1b23

                     loc_19fb:
00000000000019fb         mov        ebp, 0x2000                                 ; CODE XREF=main+630

                     loc_1a00:
0000000000001a00         mov        r14, qword [rbx+rdx+8]                      ; CODE XREF=main+1117
0000000000001a05         mov        r15, qword [rbx+rdx+0x10]
0000000000001a0a         xor        r8d, r8d
0000000000001a0d         xor        edx, edx
0000000000001a0f         xor        esi, esi
0000000000001a11         mov        rcx, rsp
0000000000001a14         mov        rdi, r14
0000000000001a17         call       xstrtoumax                                  ; xstrtoumax
0000000000001a1c         test       eax, eax
0000000000001a1e         jne        loc_1ba5

0000000000001a24         mov        rax, qword [rsp+0x58+var_58]
0000000000001a28         mov        edx, eax
0000000000001a2a         cmp        rax, rdx
0000000000001a2d         jne        loc_1ba5

0000000000001a33         lea        rcx, qword [rsp+0x58+var_50]
0000000000001a38         xor        r8d, r8d
0000000000001a3b         xor        edx, edx
0000000000001a3d         xor        esi, esi
0000000000001a3f         mov        rdi, r15
0000000000001a42         call       xstrtoumax                                  ; xstrtoumax
0000000000001a47         test       eax, eax
0000000000001a49         jne        loc_1b73

0000000000001a4f         mov        rax, qword [rsp+0x58+var_50]
0000000000001a54         mov        edx, eax
0000000000001a56         cmp        rax, rdx
0000000000001a59         jne        loc_1b73

0000000000001a5f         mov        rcx, qword [rsp+0x58+var_58]
0000000000001a63         movabs     rsi, 0xfffff00000000000
0000000000001a6d         mov        rdx, rcx
0000000000001a70         shl        rcx, 0x20
0000000000001a74         shl        rdx, 0x8
0000000000001a78         and        rcx, rsi
0000000000001a7b         movabs     rsi, 0xffffff00000
0000000000001a85         and        edx, 0xfff00
0000000000001a8b         or         rdx, rcx
0000000000001a8e         mov        rcx, rax
0000000000001a91         movzx      eax, al
0000000000001a94         shl        rcx, 0xc
0000000000001a98         and        rcx, rsi
0000000000001a9b         or         rdx, rcx
0000000000001a9e         or         rax, rdx
0000000000001aa1         cmp        rax, 0xffffffffffffffff
0000000000001aa5         je         loc_1bd7

0000000000001aab         movsxd     rdx, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5
0000000000001ab2         lea        rcx, qword [rsp+0x58+var_48]                ; argument "__dev" for method j___xmknod
0000000000001ab7         xor        edi, edi                                    ; argument "__ver" for method j___xmknod
0000000000001ab9         mov        qword [rsp+0x58+var_48], rax
0000000000001abe         mov        rsi, qword [rbx+rdx*8]                      ; argument "__path" for method j___xmknod
0000000000001ac2         mov        edx, ebp
0000000000001ac4         or         edx, r12d                                   ; argument "__mode" for method j___xmknod
0000000000001ac7         call       j___xmknod                                  ; __xmknod
0000000000001acc         test       eax, eax
0000000000001ace         je         loc_195f

0000000000001ad4         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5
0000000000001adb         mov        esi, 0x3
0000000000001ae0         xor        edi, edi
0000000000001ae2         mov        rdx, qword [rbx+rax*8]
0000000000001ae6         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000001aeb         mov        rbx, rax
0000000000001aee         call       j___errno_location                          ; __errno_location
0000000000001af3         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001af5         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5e9c
0000000000001afc         mov        rcx, rbx
0000000000001aff         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001b04         xor        eax, eax
0000000000001b06         call       j_error                                     ; error

                     loc_1b0b:
0000000000001b0b         mov        r12d, 0x1b6                                 ; CODE XREF=main+311
0000000000001b11         jmp        loc_184f

                     loc_1b16:
0000000000001b16         cmp        al, 0x62                                    ; CODE XREF=main+636
0000000000001b18         mov        ebp, 0x6000
0000000000001b1d         je         loc_1a00

                     loc_1b23:
0000000000001b23         call       quote                                       ; quote, CODE XREF=main+821
0000000000001b28         mov        edx, 0x5
0000000000001b2d         mov        rbx, rax
0000000000001b30         lea        rsi, qword [aInvalidDeviceT]                ; "invalid device type %s"
0000000000001b37         jmp        loc_19d1

                     loc_1b3c:
0000000000001b3c         xor        edi, edi                                    ; argument #1 for method usage, CODE XREF=main+151
0000000000001b3e         call       usage                                       ; usage

                     loc_1b43:
0000000000001b43         mov        rdi, qword [rbx+rcx*8+0x10]                 ; CODE XREF=main+600
0000000000001b48         jmp        loc_189a

                     loc_1b4d:
0000000000001b4d         lea        rsi, qword [aMissingOperand_5766]           ; argument "msgid" for method j_dcgettext, "missing operand", CODE XREF=main+590
0000000000001b54         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001b56         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001b5b         call       j_dcgettext                                 ; dcgettext
0000000000001b60         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001b62         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001b65         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001b67         xor        eax, eax
0000000000001b69         call       j_error                                     ; error
0000000000001b6e         jmp        loc_19e9

                     loc_1b73:
0000000000001b73         mov        rdi, r15                                    ; CODE XREF=main+905, main+921
0000000000001b76         call       quote                                       ; quote
0000000000001b7b         lea        rsi, qword [aInvalidMinorDe]                ; argument "msgid" for method j_dcgettext, "invalid minor device number %s"
0000000000001b82         mov        rbx, rax
0000000000001b85         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001b8a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001b8c         call       j_dcgettext                                 ; dcgettext
0000000000001b91         mov        rcx, rbx
0000000000001b94         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001b97         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001b99         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001b9e         xor        eax, eax
0000000000001ba0         call       j_error                                     ; error

                     loc_1ba5:
0000000000001ba5         mov        rdi, r14                                    ; CODE XREF=main+862, main+877
0000000000001ba8         call       quote                                       ; quote
0000000000001bad         lea        rsi, qword [aInvalidMajorDe]                ; argument "msgid" for method j_dcgettext, "invalid major device number %s"
0000000000001bb4         mov        rbx, rax
0000000000001bb7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001bbc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001bbe         call       j_dcgettext                                 ; dcgettext
0000000000001bc3         mov        rcx, rbx
0000000000001bc6         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001bc9         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001bcb         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001bd0         xor        eax, eax
0000000000001bd2         call       j_error                                     ; error

                     loc_1bd7:
0000000000001bd7         lea        rsi, qword [aInvalidDeviceS]                ; argument "msgid" for method j_dcgettext, "invalid device %s %s", CODE XREF=main+997
0000000000001bde         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001be3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001be5         call       j_dcgettext                                 ; dcgettext
0000000000001bea         mov        r8, r15
0000000000001bed         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001bf0         mov        rcx, r14
0000000000001bf3         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001bf5         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001bfa         xor        eax, eax
0000000000001bfc         call       j_error                                     ; error

                     loc_1c01:
0000000000001c01         mov        rdi, qword [rbx+rbp*8-8]                    ; CODE XREF=main+453
0000000000001c06         call       quote                                       ; quote
0000000000001c0b         mov        edx, 0x5
0000000000001c10         mov        rbx, rax
0000000000001c13         lea        rsi, qword [aMissingOperand]                ; "missing operand after %s"
0000000000001c1a         jmp        loc_19d1

                     loc_1c1f:
0000000000001c1f         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+665
0000000000001c26         mov        esi, 0x3
0000000000001c2b         xor        edi, edi
0000000000001c2d         mov        rdx, qword [rbx+rax*8]
0000000000001c31         call       quotearg_n_style_colon                      ; quotearg_n_style_colon
0000000000001c36         mov        rbx, rax
0000000000001c39         call       j___errno_location                          ; __errno_location
0000000000001c3e         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001c40         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5e9c
0000000000001c47         mov        rcx, rbx
0000000000001c4a         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001c4f         xor        eax, eax
0000000000001c51         call       j_error                                     ; error

                     loc_1c56:
0000000000001c56         movsxd     rax, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5, CODE XREF=main+697
0000000000001c5d         mov        edi, 0x4
0000000000001c62         mov        rsi, qword [rbx+rax*8]
0000000000001c66         call       quotearg_style                              ; quotearg_style
0000000000001c6b         lea        rsi, qword [aCannotSetPermi]                ; argument "msgid" for method j_dcgettext, "cannot set permissions of %s"
0000000000001c72         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001c77         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001c79         mov        rbp, rax
0000000000001c7c         call       j_dcgettext                                 ; dcgettext
0000000000001c81         mov        rbx, rax
0000000000001c84         call       j___errno_location                          ; __errno_location
0000000000001c89         mov        esi, dword [rax]                            ; argument "__errnum" for method j_error
0000000000001c8b         mov        rcx, rbp
0000000000001c8e         mov        rdx, rbx                                    ; argument "__format" for method j_error
0000000000001c91         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001c96         xor        eax, eax
0000000000001c98         call       j_error                                     ; error

                     loc_1c9d:
0000000000001c9d         movsxd     rax, ebp                                    ; CODE XREF=main+744
0000000000001ca0         mov        rdi, qword [rbx+rax*8-8]
0000000000001ca5         call       quote                                       ; quote
0000000000001caa         lea        rsi, qword [aMissingOperand]                ; argument "msgid" for method j_dcgettext, "missing operand after %s"
0000000000001cb1         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001cb3         mov        rbx, rax
0000000000001cb6         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001cbb         call       j_dcgettext                                 ; dcgettext
0000000000001cc0         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001cc2         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001cc5         xor        edi, edi                                    ; argument "__status" for method j_error
0000000000001cc7         xor        eax, eax
0000000000001cc9         mov        rcx, rbx
0000000000001ccc         call       j_error                                     ; error
0000000000001cd1         sub        ebp, dword [optind@@GLIBC_2.2.5]            ; optind@@GLIBC_2.2.5
0000000000001cd7         cmp        ebp, 0x2
0000000000001cda         jne        loc_19e9

0000000000001ce0         mov        edx, 0x5
0000000000001ce5         lea        rsi, qword [aSpecialFilesRe]                ; "Special files require major and minor device numbers."
0000000000001cec         jmp        loc_18e1

                     loc_1cf1:
0000000000001cf1         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=main+719
                        ; endp

                     loc_1cf6:
0000000000001cf6         lea        rsi, qword [aModeMustSpecif]                ; argument "msgid" for method j_dcgettext, "mode must specify only file permission bits", CODE XREF=main+393
0000000000001cfd         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001d02         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001d04         call       j_dcgettext                                 ; dcgettext
0000000000001d09         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001d0b         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001d0e         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001d13         xor        eax, eax
0000000000001d15         call       j_error                                     ; error

                     loc_1d1a:
0000000000001d1a         lea        rsi, qword [aInvalidMode]                   ; argument "msgid" for method j_dcgettext, "invalid mode", CODE XREF=main+331
0000000000001d21         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001d26         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001d28         call       j_dcgettext                                 ; dcgettext
0000000000001d2d         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000001d2f         mov        rdx, rax                                    ; argument "__format" for method j_error
0000000000001d32         mov        edi, 0x1                                    ; argument "__status" for method j_error
0000000000001d37         xor        eax, eax
0000000000001d39         call       j_error                                     ; error
0000000000001d3e         nop                                                    ; End of unwind block (FDE at 0x6c10)
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _start:
0000000000001d40         xor        ebp, ebp                                    ; Begin of unwind block (FDE at 0x6b74)
0000000000001d42         mov        r9, rdx
0000000000001d45         pop        rsi
0000000000001d46         mov        rdx, rsp
0000000000001d49         and        rsp, 0xfffffffffffffff0
0000000000001d4d         push       rax
0000000000001d4e         push       rsp
0000000000001d4f         lea        r8, qword [__libc_csu_fini]                 ; __libc_csu_fini
0000000000001d56         lea        rcx, qword [__libc_csu_init]                ; __libc_csu_init
0000000000001d5d         lea        rdi, qword [main]                           ; main
0000000000001d64         call       qword [qword_207fd8+8]                      ; 0x207fe0
0000000000001d6a         hlt
                        ; endp
0000000000001d6b         align      16                                          ; End of unwind block (FDE at 0x6b74)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     deregister_tm_clones:
0000000000001d70         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=__do_global_dtors_aux+35
0000000000001d77         push       rbp
0000000000001d78         lea        rax, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000001d7f         cmp        rax, rdi
0000000000001d82         mov        rbp, rsp
0000000000001d85         je         loc_1da0

0000000000001d87         mov        rax, qword [qword_207fd8]                   ; qword_207fd8
0000000000001d8e         test       rax, rax
0000000000001d91         je         loc_1da0

0000000000001d93         pop        rbp
0000000000001d94         jmp        rax
                        ; endp
0000000000001d96         align      32

                     loc_1da0:
0000000000001da0         pop        rbp                                         ; CODE XREF=deregister_tm_clones+21, deregister_tm_clones+33
0000000000001da1         ret
                        ; endp
0000000000001da2         align      16

                     register_tm_clones:
0000000000001db0         lea        rdi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5, CODE XREF=frame_dummy+5
0000000000001db7         lea        rsi, qword [program_invocation_short_name@@GLIBC_2.2.5] ; program_invocation_short_name@@GLIBC_2.2.5
0000000000001dbe         push       rbp
0000000000001dbf         sub        rsi, rdi
0000000000001dc2         mov        rbp, rsp
0000000000001dc5         sar        rsi, 0x3
0000000000001dc9         mov        rax, rsi
0000000000001dcc         shr        rax, 0x3f
0000000000001dd0         add        rsi, rax
0000000000001dd3         sar        rsi, 0x1
0000000000001dd6         je         loc_1df0

0000000000001dd8         mov        rax, qword [qword_207ff0]                   ; qword_207ff0
0000000000001ddf         test       rax, rax
0000000000001de2         je         loc_1df0

0000000000001de4         pop        rbp
0000000000001de5         jmp        rax
                        ; endp
0000000000001de7         align      16

                     loc_1df0:
0000000000001df0         pop        rbp                                         ; CODE XREF=register_tm_clones+38, register_tm_clones+50
0000000000001df1         ret
                        ; endp
0000000000001df2         align      512


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __do_global_dtors_aux:
0000000000001e00         cmp        byte [completed.7697], 0x0                  ; completed.7697, DATA XREF=__do_global_dtors_aux_fini_array_entry
0000000000001e07         jne        loc_1e38

0000000000001e09         cmp        qword [qword_207ff8], 0x0                   ; qword_207ff8
0000000000001e11         push       rbp
0000000000001e12         mov        rbp, rsp
0000000000001e15         je         loc_1e23

0000000000001e17         mov        rdi, qword [__dso_handle]                   ; __dso_handle
0000000000001e1e         call       j_qword_207ff8                              ; qword_207ff8

                     loc_1e23:
0000000000001e23         call       deregister_tm_clones                        ; deregister_tm_clones, CODE XREF=__do_global_dtors_aux+21
0000000000001e28         mov        byte [completed.7697], 0x1                  ; completed.7697
0000000000001e2f         pop        rbp
0000000000001e30         ret
                        ; endp
0000000000001e31         align      8

                     loc_1e38:
0000000000001e38         ret                                                    ; CODE XREF=__do_global_dtors_aux+7
                        ; endp
0000000000001e3a         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     frame_dummy:
0000000000001e40         push       rbp                                         ; DATA XREF=__frame_dummy_init_array_entry
0000000000001e41         mov        rbp, rsp
0000000000001e44         pop        rbp
0000000000001e45         jmp        register_tm_clones                          ; register_tm_clones
0000000000001e4a         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_70: int64_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168


                     usage:
0000000000001e50         push       r13                                         ; Begin of unwind block (FDE at 0x6be4), CODE XREF=main+814, main+1150
0000000000001e52         push       r12
0000000000001e54         mov        edx, 0x5
0000000000001e59         push       rbp
0000000000001e5a         push       rbx
0000000000001e5b         mov        ebp, edi
0000000000001e5d         sub        rsp, 0x88
0000000000001e64         mov        rbx, qword [program_name]                   ; program_name
0000000000001e6b         mov        rax, qword [fs:0x28]
0000000000001e74         mov        qword [rsp+0xa8+var_30], rax
0000000000001e79         xor        eax, eax
0000000000001e7b         test       edi, edi
0000000000001e7d         je         loc_1ead

0000000000001e7f         lea        rsi, qword [aTrySHelpForMor]                ; argument "msgid" for method j_dcgettext, "Try '%s --help' for more information.\\n"
0000000000001e86         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001e88         call       j_dcgettext                                 ; dcgettext
0000000000001e8d         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5
0000000000001e94         mov        rdx, rax
0000000000001e97         mov        rcx, rbx
0000000000001e9a         mov        esi, 0x1
0000000000001e9f         xor        eax, eax
0000000000001ea1         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_1ea6:
0000000000001ea6         mov        edi, ebp                                    ; argument "__status" for method j_exit, CODE XREF=usage+862
0000000000001ea8         call       j_exit                                      ; exit
                        ; endp

                     loc_1ead:
0000000000001ead         lea        rsi, qword [aUsageSOptionNa]                ; argument "msgid" for method j_dcgettext, "Usage: %s [OPTION]... NAME TYPE [MAJOR MINOR]\\n", CODE XREF=usage+45
0000000000001eb4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001eb6         call       j_dcgettext                                 ; dcgettext
0000000000001ebb         mov        rdx, rbx
0000000000001ebe         mov        rsi, rax
0000000000001ec1         mov        edi, 0x1
0000000000001ec6         xor        eax, eax
0000000000001ec8         call       j___printf_chk                              ; __printf_chk
0000000000001ecd         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001ed4         lea        rsi, qword [aCreateTheSpeci]                ; argument "msgid" for method j_dcgettext, "Create the special file NAME of the given TYPE.\\n"
0000000000001edb         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001ee0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001ee2         call       j_dcgettext                                 ; dcgettext
0000000000001ee7         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001eea         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001eed         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001ef2         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001ef9         lea        rsi, qword [aNmandatoryArgu]                ; argument "msgid" for method j_dcgettext, "\\nMandatory arguments to long options are mandatory for short options too.\\n"
0000000000001f00         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001f05         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001f07         call       j_dcgettext                                 ; dcgettext
0000000000001f0c         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001f0f         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001f12         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001f17         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001f1e         lea        rsi, qword [aMModemodeSetFi]                ; argument "msgid" for method j_dcgettext, "  -m, --mode=MODE    set file permission bits to MODE, not a=rw - umask\\n"
0000000000001f25         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001f2a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001f2c         call       j_dcgettext                                 ; dcgettext
0000000000001f31         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001f34         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001f37         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001f3c         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001f43         lea        rsi, qword [aZSetTheSelinux]                ; argument "msgid" for method j_dcgettext, "  -Z                   set the SELinux security context to default type\\n      --context[=CTX]  like -Z, or if CTX is specified then set the SELinux\\n                         or SMACK security context to CTX\\n"
0000000000001f4a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001f4f         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001f51         call       j_dcgettext                                 ; dcgettext
0000000000001f56         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001f59         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001f5c         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001f61         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001f68         lea        rsi, qword [aHelpDisplayThi]                ; argument "msgid" for method j_dcgettext, "      --help     display this help and exit\\n"
0000000000001f6f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001f74         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001f76         call       j_dcgettext                                 ; dcgettext
0000000000001f7b         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001f7e         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001f81         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001f86         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001f8d         lea        rsi, qword [aVersionOutputV]                ; argument "msgid" for method j_dcgettext, "      --version  output version information and exit\\n"
0000000000001f94         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001f99         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001f9b         call       j_dcgettext                                 ; dcgettext
0000000000001fa0         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001fa3         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001fa6         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001fab         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001fb2         lea        rsi, qword [aNbothMajorAndM]                ; argument "msgid" for method j_dcgettext, "\\nBoth MAJOR and MINOR must be specified when TYPE is b, c, or u, and they\\nmust be omitted when TYPE is p.  If MAJOR or MINOR begins with 0x or 0X,\\nit is interpreted as hexadecimal; otherwise, if it begins with 0, as octal;\\notherwise, as decimal.  TYPE may …"
0000000000001fb9         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001fbe         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001fc0         call       j_dcgettext                                 ; dcgettext
0000000000001fc5         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001fc8         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001fcb         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001fd0         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000001fd7         lea        rsi, qword [aNBCreateABlock]                ; argument "msgid" for method j_dcgettext, "\\n  b      create a block (buffered) special file\\n  c, u   create a character (unbuffered) special file\\n  p      create a FIFO\\n"
0000000000001fde         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000001fe3         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000001fe5         call       j_dcgettext                                 ; dcgettext
0000000000001fea         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000001fed         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000001ff0         lea        rbx, qword [aMknod]                         ; "mknod"
0000000000001ff7         call       j_fputs_unlocked                            ; fputs_unlocked
0000000000001ffc         lea        rsi, qword [aNnoteYourShell]                ; argument "msgid" for method j_dcgettext, "\\nNOTE: your shell may have its own version of %s, which usually supersedes\\nthe version described here.  Please refer to your shell's documentation\\nfor details about the options it supports.\\n"
0000000000002003         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002008         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000200a         call       j_dcgettext                                 ; dcgettext
000000000000200f         lea        rdx, qword [aMknod]                         ; "mknod"
0000000000002016         mov        rsi, rax
0000000000002019         mov        edi, 0x1
000000000000201e         xor        eax, eax
0000000000002020         call       j___printf_chk                              ; __printf_chk
0000000000002025         lea        rax, qword [aMknod+6]                       ; 0x568a
000000000000202c         lea        rcx, qword [aSha256sum]                     ; "sha256sum"
0000000000002033         mov        qword [rsp+0xa8+var_48], 0x0
000000000000203c         mov        qword [rsp+0xa8+var_40], 0x0
0000000000002045         mov        rdx, rsp
0000000000002048         mov        qword [rsp+0xa8+var_A8], rax
000000000000204c         lea        rax, qword [aTestInvocation]                ; "test invocation"
0000000000002053         mov        qword [rsp+0xa8+var_78], rcx
0000000000002058         lea        rcx, qword [aSha384sum]                     ; "sha384sum"
000000000000205f         mov        qword [rsp+0xa8+var_A0], rax
0000000000002064         lea        rax, qword [aCoreutils]                     ; "coreutils"
000000000000206b         mov        qword [rsp+0xa8+var_68], rcx
0000000000002070         lea        rcx, qword [aSha512sum]                     ; "sha512sum"
0000000000002077         mov        qword [rsp+0xa8+var_98], rax
000000000000207c         lea        rax, qword [aMulticallInvoc]                ; "Multi-call invocation"
0000000000002083         mov        qword [rsp+0xa8+var_58], rcx
0000000000002088         mov        qword [rsp+0xa8+var_90], rax
000000000000208d         lea        rax, qword [aSha224sum]                     ; "sha224sum"
0000000000002094         mov        qword [rsp+0xa8+var_88], rax
0000000000002099         lea        rax, qword [aSha2Utilities]                 ; "sha2 utilities"
00000000000020a0         mov        qword [rsp+0xa8+var_80], rax
00000000000020a5         mov        qword [rsp+0xa8+var_70], rax
00000000000020aa         mov        qword [rsp+0xa8+var_60], rax
00000000000020af         mov        qword [rsp+0xa8+var_50], rax
00000000000020b4         nop        dword [rax]

                     loc_20b8:
00000000000020b8         add        rdx, 0x10                                   ; CODE XREF=usage+645
00000000000020bc         mov        rdi, qword [rdx]
00000000000020bf         test       rdi, rdi
00000000000020c2         je         loc_20d7

00000000000020c4         mov        ecx, 0x6
00000000000020c9         mov        rsi, rbx
00000000000020cc         rep  cmpsb byte [rsi], byte [rdi]
00000000000020ce         seta       al
00000000000020d1         sbb        al, 0x0
00000000000020d3         test       al, al
00000000000020d5         jne        loc_20b8

                     loc_20d7:
00000000000020d7         mov        r12, qword [rdx+8]                          ; CODE XREF=usage+626
00000000000020db         xor        edi, edi
00000000000020dd         mov        edx, 0x5
00000000000020e2         lea        rsi, qword [aNsOnlineHelpSn]                ; "\\n%s online help: <%s>\\n"
00000000000020e9         test       r12, r12
00000000000020ec         je         loc_21b3

00000000000020f2         call       j_dcgettext                                 ; dcgettext
00000000000020f7         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000020fe         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x5700
0000000000002105         mov        rsi, rax
0000000000002108         mov        edi, 0x1
000000000000210d         xor        eax, eax
000000000000210f         call       j___printf_chk                              ; __printf_chk
0000000000002114         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000002116         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
000000000000211b         call       j_setlocale                                 ; setlocale
0000000000002120         test       rax, rax
0000000000002123         je         loc_2141

0000000000002125         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x570e
000000000000212c         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
0000000000002131         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
0000000000002134         call       j_strncmp                                   ; strncmp
0000000000002139         test       eax, eax
000000000000213b         jne        loc_2248

                     loc_2141:
0000000000002141         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+723, usage+1053
0000000000002148         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000214a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000214f         call       j_dcgettext                                 ; dcgettext
0000000000002154         lea        rcx, qword [aMknod]                         ; "mknod"
000000000000215b         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000002162         mov        rsi, rax
0000000000002165         mov        edi, 0x1
000000000000216a         xor        eax, eax
000000000000216c         call       j___printf_chk                              ; __printf_chk
0000000000002171         cmp        r12, rbx
0000000000002174         lea        rcx, qword [aMulticallInvoc+10]             ; 0x56a6
000000000000217b         lea        rbx, qword [aWrittenBySSAnd+27]             ; 0x64a1
0000000000002182         cmove      rbx, rcx

                     loc_2186:
0000000000002186         lea        rsi, qword [aOrAvailableLoc]                ; argument "msgid" for method j_dcgettext, "or available locally via: info '(coreutils) %s%s'\\n", CODE XREF=usage+1004
000000000000218d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000218f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000002194         call       j_dcgettext                                 ; dcgettext
0000000000002199         mov        rcx, rbx
000000000000219c         mov        rsi, rax
000000000000219f         mov        rdx, r12
00000000000021a2         mov        edi, 0x1
00000000000021a7         xor        eax, eax
00000000000021a9         call       j___printf_chk                              ; __printf_chk
00000000000021ae         jmp        loc_1ea6

                     loc_21b3:
00000000000021b3         call       j_dcgettext                                 ; dcgettext, CODE XREF=usage+668
00000000000021b8         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
00000000000021bf         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x5700
00000000000021c6         mov        rsi, rax
00000000000021c9         mov        edi, 0x1
00000000000021ce         xor        eax, eax
00000000000021d0         call       j___printf_chk                              ; __printf_chk
00000000000021d5         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
00000000000021d7         mov        edi, 0x5                                    ; argument "__category" for method j_setlocale
00000000000021dc         call       j_setlocale                                 ; setlocale
00000000000021e1         test       rax, rax
00000000000021e4         je         loc_21fe

00000000000021e6         lea        rsi, qword [aCoreutils+10]                  ; argument "__s2" for method j_strncmp, 0x570e
00000000000021ed         mov        edx, 0x3                                    ; argument "__n" for method j_strncmp
00000000000021f2         mov        rdi, rax                                    ; argument "__s1" for method j_strncmp
00000000000021f5         call       j_strncmp                                   ; strncmp
00000000000021fa         test       eax, eax
00000000000021fc         jne        loc_2241

                     loc_21fe:
00000000000021fe         lea        rsi, qword [aFullDocumentat]                ; argument "msgid" for method j_dcgettext, "Full documentation <%s%s>\\n", CODE XREF=usage+916
0000000000002205         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000220a         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000220c         lea        r12, qword [aMknod]                         ; "mknod"
0000000000002213         lea        rbx, qword [aMulticallInvoc+10]             ; 0x56a6
000000000000221a         call       j_dcgettext                                 ; dcgettext
000000000000221f         lea        rcx, qword [aMknod]                         ; "mknod"
0000000000002226         lea        rdx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
000000000000222d         mov        rsi, rax
0000000000002230         mov        edi, 0x1
0000000000002235         xor        eax, eax
0000000000002237         call       j___printf_chk                              ; __printf_chk
000000000000223c         jmp        loc_2186

                     loc_2241:
0000000000002241         lea        r12, qword [aMknod]                         ; "mknod", CODE XREF=usage+940

                     loc_2248:
0000000000002248         mov        r13, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5, CODE XREF=usage+747
000000000000224f         lea        rsi, qword [aReportAnyTrans]                ; argument "msgid" for method j_dcgettext, "Report any translation bugs to <https://translationproject.org/team/>\\n"
0000000000002256         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000002258         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000225d         call       j_dcgettext                                 ; dcgettext
0000000000002262         mov        rsi, r13                                    ; argument "__stream" for method j_fputs_unlocked
0000000000002265         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000002268         call       j_fputs_unlocked                            ; fputs_unlocked
000000000000226d         jmp        loc_2141
0000000000002272         align      128                                         ; End of unwind block (FDE at 0x6be4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_file_name:
0000000000002280         mov        qword [file_name], rdi                      ; Begin of unwind block (FDE at 0x6c5c), file_name
0000000000002287         ret
                        ; endp
0000000000002288         align      16                                          ; End of unwind block (FDE at 0x6c5c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout_set_ignore_EPIPE:
0000000000002290         mov        byte [ignore_EPIPE], dil                    ; Begin of unwind block (FDE at 0x6c70), ignore_EPIPE
0000000000002297         ret
                        ; endp
0000000000002298         align      32                                          ; End of unwind block (FDE at 0x6c70)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stdout:
00000000000022a0         push       rbp                                         ; Begin of unwind block (FDE at 0x6c84), DATA XREF=main+102
00000000000022a1         push       rbx
00000000000022a2         sub        rsp, 0x8
00000000000022a6         mov        rdi, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
00000000000022ad         call       close_stream                                ; close_stream
00000000000022b2         test       eax, eax
00000000000022b4         je         loc_22cc

00000000000022b6         call       j___errno_location                          ; __errno_location
00000000000022bb         cmp        byte [ignore_EPIPE], 0x0                    ; ignore_EPIPE
00000000000022c2         mov        rbx, rax
00000000000022c5         je         loc_22e3

00000000000022c7         cmp        dword [rax], 0x20
00000000000022ca         jne        loc_22e3

                     loc_22cc:
00000000000022cc         mov        rdi, qword [stderr@@GLIBC_2.2.5]            ; stderr@@GLIBC_2.2.5, CODE XREF=close_stdout+20
00000000000022d3         call       close_stream                                ; close_stream
00000000000022d8         test       eax, eax
00000000000022da         jne        loc_2322

00000000000022dc         add        rsp, 0x8
00000000000022e0         pop        rbx
00000000000022e1         pop        rbp
00000000000022e2         ret
                        ; endp

                     loc_22e3:
00000000000022e3         lea        rsi, qword [aWriteError]                    ; argument "msgid" for method j_dcgettext, "write error", CODE XREF=close_stdout+37, close_stdout+42
00000000000022ea         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000022ec         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000022f1         call       j_dcgettext                                 ; dcgettext
00000000000022f6         mov        rdi, qword [file_name]                      ; file_name
00000000000022fd         mov        rbp, rax
0000000000002300         test       rdi, rdi
0000000000002303         je         loc_232d

0000000000002305         call       quotearg_colon                              ; quotearg_colon
000000000000230a         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error
000000000000230c         lea        rdx, qword [aSS]                            ; argument "__format" for method j_error, "%s: %s"
0000000000002313         mov        rcx, rax
0000000000002316         mov        r8, rbp
0000000000002319         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000231b         xor        eax, eax
000000000000231d         call       j_error                                     ; error

                     loc_2322:
0000000000002322         mov        edi, dword [exit_failure]                   ; argument "__status" for method j__exit, exit_failure, CODE XREF=close_stdout+58, close_stdout+162
0000000000002328         call       j__exit                                     ; _exit
                        ; endp

                     loc_232d:
000000000000232d         mov        esi, dword [rbx]                            ; argument "__errnum" for method j_error, CODE XREF=close_stdout+99
000000000000232f         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5e9c
0000000000002336         mov        rcx, rax
0000000000002339         xor        edi, edi                                    ; argument "__status" for method j_error
000000000000233b         xor        eax, eax
000000000000233d         call       j_error                                     ; error
0000000000002342         jmp        loc_2322
0000000000002344         align      16                                          ; End of unwind block (FDE at 0x6c84)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     mode_compile:
0000000000002350         push       rbp                                         ; Begin of unwind block (FDE at 0x6cb4), CODE XREF=main+320
0000000000002351         push       rbx
0000000000002352         mov        rbx, rdi
0000000000002355         sub        rsp, 0x8
0000000000002359         movsx      eax, byte [rdi]
000000000000235c         lea        edx, dword [rax-0x30]
000000000000235f         cmp        dl, 0x7
0000000000002362         jbe        loc_2418

0000000000002368         test       al, al
000000000000236a         mov        rcx, rdi
000000000000236d         mov        edi, 0x1
0000000000002372         je         loc_239b

0000000000002374         nop        dword [rax]

                     loc_2378:
0000000000002378         mov        edx, eax                                    ; CODE XREF=mode_compile+73
000000000000237a         and        edx, 0xffffffef
000000000000237d         cmp        dl, 0x2d
0000000000002380         sete       dl
0000000000002383         cmp        al, 0x2b
0000000000002385         sete       al
0000000000002388         add        rcx, 0x1
000000000000238c         or         eax, edx
000000000000238e         movzx      eax, al
0000000000002391         add        rdi, rax
0000000000002394         movzx      eax, byte [rcx]
0000000000002397         test       al, al
0000000000002399         jne        loc_2378

                     loc_239b:
000000000000239b         mov        edx, 0x10                                   ; CODE XREF=mode_compile+34
00000000000023a0         xor        ecx, ecx
00000000000023a2         mov        rax, rdx
00000000000023a5         mul        rdi
00000000000023a8         jo         loc_26bf

                     loc_23ae:
00000000000023ae         test       rax, rax                                    ; CODE XREF=mode_compile+884
00000000000023b1         js         loc_26c9

00000000000023b7         test       rcx, rcx
00000000000023ba         jne        loc_26c9

00000000000023c0         shl        rdi, 0x4                                    ; argument #1 for method xmalloc
00000000000023c4         lea        rbp, qword [switch_table_5ea0]              ; switch_table_5ea0
00000000000023cb         call       xmalloc                                     ; xmalloc
00000000000023d0         xor        esi, esi

                     loc_23d2:
00000000000023d2         xor        r11d, r11d                                  ; CODE XREF=sub_26ce+15

                     loc_23d5:
00000000000023d5         movzx      r9d, byte [rbx]                             ; CODE XREF=mode_compile+746
00000000000023d9         cmp        r9b, 0x61
00000000000023dd         je         loc_2630

00000000000023e3         jle        loc_2450

00000000000023e5         cmp        r9b, 0x6f
00000000000023e9         je         loc_2660

00000000000023ef         cmp        r9b, 0x75
00000000000023f3         je         loc_2650

00000000000023f9         cmp        r9b, 0x67
00000000000023fd         je         loc_2640

                     loc_2403:
0000000000002403         mov        rdi, rax                                    ; argument "__ptr" for method j_free, CODE XREF=mode_compile+272, mode_compile+440, mode_compile+462, mode_compile+475, sub_26ce+23
0000000000002406         call       j_free                                      ; free
000000000000240b         xor        eax, eax

                     loc_240d:
000000000000240d         add        rsp, 0x8                                    ; CODE XREF=sub_26ce+38
0000000000002411         pop        rbx
0000000000002412         pop        rbp
0000000000002413         ret
                        ; endp
0000000000002414         align      8

                     loc_2418:
0000000000002418         mov        rdx, rdi                                    ; CODE XREF=mode_compile+18
000000000000241b         xor        ebp, ebp
000000000000241d         jmp        loc_242f
000000000000241f         align      32

                     loc_2420:
0000000000002420         movsx      eax, byte [rdx]                             ; CODE XREF=mode_compile+237
0000000000002423         lea        ecx, dword [rax-0x30]
0000000000002426         cmp        cl, 0x7
0000000000002429         ja         loc_2670

                     loc_242f:
000000000000242f         lea        ebp, dword [rax+rbp*8-0x30]                 ; CODE XREF=mode_compile+205
0000000000002433         add        rdx, 0x1
0000000000002437         cmp        ebp, 0xfff
000000000000243d         jbe        loc_2420

                     loc_243f:
000000000000243f         add        rsp, 0x8                                    ; CODE XREF=mode_compile+802
0000000000002443         xor        eax, eax
0000000000002445         pop        rbx
0000000000002446         pop        rbp
0000000000002447         ret
                        ; endp
0000000000002448         align      16

                     loc_2450:
0000000000002450         cmp        r9b, 0x2d                                   ; CODE XREF=mode_compile+147
0000000000002454         je         loc_2462

0000000000002456         cmp        r9b, 0x3d
000000000000245a         je         loc_2462

000000000000245c         cmp        r9b, 0x2b
0000000000002460         jne        loc_2403

                     loc_2462:
0000000000002462         lea        rdi, qword [rsi+1]                          ; CODE XREF=mode_compile+260, mode_compile+266
0000000000002466         shl        rsi, 0x4
000000000000246a         add        rsi, rax
000000000000246d         jmp        loc_24d4
000000000000246f         align      16

                     loc_2470:
0000000000002470         cmp        dl, 0x6f                                    ; CODE XREF=mode_compile+405
0000000000002473         lea        r8, qword [rbx+2]
0000000000002477         je         loc_2610

000000000000247d         cmp        dl, 0x75
0000000000002480         mov        r10d, 0x1c0
0000000000002486         jne        loc_2560

                     loc_248c:
000000000000248c         mov        byte [rsi], r9b                             ; CODE XREF=mode_compile+710, mode_compile+730
000000000000248f         mov        byte [rsi+1], 0x3
0000000000002493         movzx      r9d, byte [rbx+2]
0000000000002498         mov        dword [rsi+4], r11d
000000000000249c         mov        rbx, r8
000000000000249f         mov        dword [rsi+8], r10d

                     loc_24a3:
00000000000024a3         mov        edx, r10d                                   ; CODE XREF=mode_compile+621
00000000000024a6         and        edx, r11d
00000000000024a9         test       r11d, r11d
00000000000024ac         cmovne     r10d, edx

                     loc_24b0:
00000000000024b0         mov        edx, r9d                                    ; CODE XREF=mode_compile+517
00000000000024b3         mov        dword [rsi+0xc], r10d
00000000000024b7         add        rsi, 0x10
00000000000024bb         and        edx, 0xffffffef
00000000000024be         lea        rcx, qword [rdi+1]
00000000000024c2         cmp        dl, 0x2d
00000000000024c5         je         loc_24d1

00000000000024c7         cmp        r9b, 0x2b
00000000000024cb         jne        loc_26d0

                     loc_24d1:
00000000000024d1         mov        rdi, rcx                                    ; CODE XREF=mode_compile+373

                     loc_24d4:
00000000000024d4         movsx      edx, byte [rbx+1]                           ; CODE XREF=mode_compile+285
00000000000024d8         lea        rcx, qword [rbx+1]
00000000000024dc         cmp        dl, 0x67
00000000000024df         je         loc_2620

00000000000024e5         jg         loc_2470

00000000000024e7         lea        r8d, dword [rdx-0x30]
00000000000024eb         cmp        r8b, 0x7
00000000000024ef         ja         loc_2560

00000000000024f1         xor        r8d, r8d
00000000000024f4         nop        dword [rax]

                     loc_24f8:
00000000000024f8         lea        r8d, dword [rdx+r8*8-0x30]                  ; CODE XREF=mode_compile+457
00000000000024fd         add        rcx, 0x1
0000000000002501         cmp        r8d, 0xfff
0000000000002508         ja         loc_2403

000000000000250e         movsx      edx, byte [rcx]
0000000000002511         lea        r10d, dword [rdx-0x30]
0000000000002515         cmp        r10b, 0x7
0000000000002519         jbe        loc_24f8

000000000000251b         test       r11d, r11d
000000000000251e         jne        loc_2403

0000000000002524         test       dl, dl
0000000000002526         je         loc_2531

0000000000002528         cmp        dl, 0x2c
000000000000252b         jne        loc_2403

                     loc_2531:
0000000000002531         mov        byte [rsi], r9b                             ; CODE XREF=mode_compile+470
0000000000002534         mov        byte [rsi+1], 0x1
0000000000002538         mov        r9d, edx
000000000000253b         mov        dword [rsi+4], 0xfff
0000000000002542         mov        dword [rsi+8], r8d
0000000000002546         mov        rbx, rcx
0000000000002549         mov        r11d, 0xfff
000000000000254f         mov        r10d, 0xfff
0000000000002555         jmp        loc_24b0
000000000000255a         align      32

                     loc_2560:
0000000000002560         lea        r8d, dword [rdx-0x58]                       ; CODE XREF=mode_compile+310, mode_compile+415
0000000000002564         xor        r10d, r10d
0000000000002567         mov        ebx, 0x1
000000000000256c         cmp        r8b, 0x20
0000000000002570         ja         loc_25a9

0000000000002572         nop        word [rax+rax]

                     loc_2578:
0000000000002578         movzx      r8d, r8b                                    ; CODE XREF=mode_compile+599
000000000000257c         movsxd     r8, dword [rbp+r8*4]
0000000000002581         add        r8, rbp
0000000000002584         jmp        r8                                          ; switch statement using table at 0x5ea0, with 33 cases, 0x2590,0x25a9,0x25c8,0x25d0,0x25e0,0x25f0,0x2600
0000000000002587         align      16

                     loc_2590:
0000000000002590         mov        ebx, 0x2                                    ; case 0, CODE XREF=mode_compile+564
0000000000002595         nop        dword [rax]

                     loc_2598:
0000000000002598         add        rcx, 0x1                                    ; CODE XREF=mode_compile+636, mode_compile+644, mode_compile+663, mode_compile+679, mode_compile+695
000000000000259c         movzx      edx, byte [rcx]
000000000000259f         lea        r8d, dword [rdx-0x58]
00000000000025a3         cmp        r8b, 0x20
00000000000025a7         jbe        loc_2578

                     loc_25a9:
00000000000025a9         mov        byte [rsi], r9b                             ; case 30, CODE XREF=mode_compile+544, mode_compile+564
00000000000025ac         mov        byte [rsi+1], bl
00000000000025af         mov        r9d, edx
00000000000025b2         mov        dword [rsi+4], r11d
00000000000025b6         mov        dword [rsi+8], r10d
00000000000025ba         mov        rbx, rcx
00000000000025bd         jmp        loc_24a3
00000000000025c2         align      8

                     loc_25c8:
00000000000025c8         or         r10d, 0x49                                  ; case 32, CODE XREF=mode_compile+564
00000000000025cc         jmp        loc_2598
00000000000025ce         align      16

                     loc_25d0:
00000000000025d0         or         r10b, 0x92                                  ; case 31, CODE XREF=mode_compile+564
00000000000025d4         jmp        loc_2598
00000000000025d6         align      32

                     loc_25e0:
00000000000025e0         or         r10d, 0x200                                 ; case 28, CODE XREF=mode_compile+564
00000000000025e7         jmp        loc_2598
00000000000025e9         align      16

                     loc_25f0:
00000000000025f0         or         r10d, 0xc00                                 ; case 27, CODE XREF=mode_compile+564
00000000000025f7         jmp        loc_2598
00000000000025f9         align      512

                     loc_2600:
0000000000002600         or         r10d, 0x124                                 ; case 26, CODE XREF=mode_compile+564
0000000000002607         jmp        loc_2598
0000000000002609         align      16

                     loc_2610:
0000000000002610         mov        r10d, 0x7                                   ; CODE XREF=mode_compile+295
0000000000002616         jmp        loc_248c
000000000000261b         align      32

                     loc_2620:
0000000000002620         lea        r8, qword [rbx+2]                           ; CODE XREF=mode_compile+399
0000000000002624         mov        r10d, 0x38
000000000000262a         jmp        loc_248c
000000000000262f         align      16

                     loc_2630:
0000000000002630         mov        r11d, 0xfff                                 ; CODE XREF=mode_compile+141

                     loc_2636:
0000000000002636         add        rbx, 0x1                                    ; CODE XREF=mode_compile+759, mode_compile+775, mode_compile+791
000000000000263a         jmp        loc_23d5
000000000000263f         align      64

                     loc_2640:
0000000000002640         or         r11d, 0x438                                 ; CODE XREF=mode_compile+173
0000000000002647         jmp        loc_2636
0000000000002649         align      16

                     loc_2650:
0000000000002650         or         r11d, 0x9c0                                 ; CODE XREF=mode_compile+163
0000000000002657         jmp        loc_2636
0000000000002659         align      32

                     loc_2660:
0000000000002660         or         r11d, 0x207                                 ; CODE XREF=mode_compile+153
0000000000002667         jmp        loc_2636
0000000000002669         align      16

                     loc_2670:
0000000000002670         test       al, al                                      ; CODE XREF=mode_compile+217
0000000000002672         jne        loc_243f

0000000000002678         sub        rdx, rbx
000000000000267b         mov        ebx, ebp
000000000000267d         mov        eax, 0xfff
0000000000002682         and        ebx, 0xc00
0000000000002688         mov        edi, 0x20                                   ; argument #1 for method xmalloc
000000000000268d         or         ebx, 0x3ff
0000000000002693         cmp        rdx, 0x5
0000000000002697         cmovge     ebx, eax
000000000000269a         call       xmalloc                                     ; xmalloc
000000000000269f         mov        edx, 0x13d
00000000000026a4         mov        dword [rax+4], 0xfff
00000000000026ab         mov        dword [rax+8], ebp
00000000000026ae         mov        word [rax], dx
00000000000026b1         mov        dword [rax+0xc], ebx
00000000000026b4         mov        byte [rax+0x11], 0x0
00000000000026b8         add        rsp, 0x8
00000000000026bc         pop        rbx
00000000000026bd         pop        rbp
00000000000026be         ret
                        ; endp

                     loc_26bf:
00000000000026bf         mov        ecx, 0x1                                    ; CODE XREF=mode_compile+88
00000000000026c4         jmp        loc_23ae

                     loc_26c9:
00000000000026c9         call       xalloc_die                                  ; xalloc_die, CODE XREF=mode_compile+97, mode_compile+106
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_26ce:
00000000000026ce         nop
                        ; endp

                     loc_26d0:
00000000000026d0         cmp        r9b, 0x2c                                   ; CODE XREF=mode_compile+379
00000000000026d4         jne        loc_26e2

00000000000026d6         add        rbx, 0x1
00000000000026da         mov        rsi, rdi
00000000000026dd         jmp        loc_23d2

                     loc_26e2:
00000000000026e2         test       r9b, r9b                                    ; CODE XREF=sub_26ce+6
00000000000026e5         jne        loc_2403

00000000000026eb         shl        rdi, 0x4
00000000000026ef         mov        byte [rax+rdi+1], 0x0
00000000000026f4         jmp        loc_240d
00000000000026f9         align      256                                         ; End of unwind block (FDE at 0x6cb4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_90: int32_t, -144


                     mode_create_from_ref:
0000000000002700         push       rbx                                         ; Begin of unwind block (FDE at 0x6cfc)
0000000000002701         mov        rsi, rdi                                    ; argument "__filename" for method j___xstat
0000000000002704         mov        edi, 0x1                                    ; argument "__ver" for method j___xstat
0000000000002709         sub        rsp, 0xa0
0000000000002710         mov        rdx, rsp                                    ; argument "__stat_buf" for method j___xstat
0000000000002713         mov        rax, qword [fs:0x28]
000000000000271c         mov        qword [rsp+0xa8+var_10], rax
0000000000002724         xor        eax, eax
0000000000002726         call       j___xstat                                   ; __xstat
000000000000272b         test       eax, eax
000000000000272d         jne        loc_2780

000000000000272f         mov        ebx, dword [rsp+0xa8+var_90]
0000000000002733         mov        edi, 0x20
0000000000002738         call       xmalloc                                     ; xmalloc
000000000000273d         mov        edx, 0x13d
0000000000002742         mov        dword [rax+4], 0xfff
0000000000002749         mov        dword [rax+0xc], 0xfff
0000000000002750         mov        word [rax], dx
0000000000002753         mov        dword [rax+8], ebx
0000000000002756         mov        byte [rax+0x11], 0x0

                     loc_275a:
000000000000275a         mov        rcx, qword [rsp+0xa8+var_10]                ; CODE XREF=mode_create_from_ref+130
0000000000002762         xor        rcx, qword [fs:0x28]
000000000000276b         jne        loc_2784

000000000000276d         add        rsp, 0xa0
0000000000002774         pop        rbx
0000000000002775         ret
                        ; endp
0000000000002776         align      128

                     loc_2780:
0000000000002780         xor        eax, eax                                    ; CODE XREF=mode_create_from_ref+45
0000000000002782         jmp        loc_275a

                     loc_2784:
0000000000002784         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=mode_create_from_ref+107
                        ; endp
0000000000002789         align      16                                          ; End of unwind block (FDE at 0x6cfc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     mode_adjust:
0000000000002790         movzx      r10d, byte [rcx+1]                          ; Begin of unwind block (FDE at 0x6d20), CODE XREF=main+370
0000000000002795         mov        eax, edi
0000000000002797         and        eax, 0xfff
000000000000279c         test       r10b, r10b
000000000000279f         je         loc_28f0

00000000000027a5         cmp        sil, 0x1
00000000000027a9         push       r12
00000000000027ab         push       rbp
00000000000027ac         push       rbx
00000000000027ad         sbb        ebx, ebx
00000000000027af         movzx      ebp, sil
00000000000027b3         not        ebx
00000000000027b5         xor        r11d, r11d
00000000000027b8         and        ebx, 0xc00
00000000000027be         jmp        loc_27fa

                     loc_27c0:
00000000000027c0         mov        edi, r9d                                    ; CODE XREF=mode_adjust+212
00000000000027c3         or         edi, edx
00000000000027c5         not        edi
00000000000027c7         and        esi, edi
00000000000027c9         cmp        r12b, 0x2d
00000000000027cd         je         loc_28e0

00000000000027d3         cmp        r12b, 0x3d
00000000000027d7         je         loc_288b

                     loc_27dd:
00000000000027dd         cmp        r12b, 0x2b                                  ; CODE XREF=mode_adjust+234
00000000000027e1         jne        loc_27e8

00000000000027e3         or         r11d, esi
00000000000027e6         or         eax, esi

                     loc_27e8:
00000000000027e8         add        rcx, 0x10                                   ; CODE XREF=mode_adjust+81, mode_adjust+343
00000000000027ec         movzx      r10d, byte [rcx+1]
00000000000027f1         test       r10b, r10b
00000000000027f4         je         loc_28ac

                     loc_27fa:
00000000000027fa         mov        r9d, dword [rcx+0xc]                        ; CODE XREF=mode_adjust+46, mode_adjust+278
00000000000027fe         mov        edi, dword [rcx+4]
0000000000002801         mov        esi, dword [rcx+8]
0000000000002804         not        r9d
0000000000002807         and        r9d, ebx
000000000000280a         cmp        r10b, 0x2
000000000000280e         je         loc_28c0

0000000000002814         cmp        r10b, 0x3
0000000000002818         jne        loc_2858

000000000000281a         and        esi, eax
000000000000281c         mov        r10d, esi
000000000000281f         and        r10d, 0x124
0000000000002826         cmp        r10d, 0x1
000000000000282a         sbb        r10d, r10d
000000000000282d         not        r10d
0000000000002830         and        r10d, 0x124
0000000000002837         mov        r12d, r10d
000000000000283a         or         r12b, 0x92
000000000000283e         test       sil, 0x92
0000000000002842         cmovne     r10d, r12d
0000000000002846         mov        r12d, r10d
0000000000002849         or         r12d, 0x49
000000000000284d         test       sil, 0x49
0000000000002851         cmovne     r10d, r12d
0000000000002855         or         esi, r10d

                     loc_2858:
0000000000002858         mov        r10d, r9d                                   ; CODE XREF=mode_adjust+136, mode_adjust+325
000000000000285b         test       edi, edi
000000000000285d         movzx      r12d, byte [rcx]
0000000000002861         not        r10d
0000000000002864         je         loc_27c0

000000000000286a         and        r10d, edi
000000000000286d         and        esi, r10d
0000000000002870         cmp        r12b, 0x2d
0000000000002874         je         loc_28e0

0000000000002876         cmp        r12b, 0x3d
000000000000287a         jne        loc_27dd

0000000000002880         not        edi
0000000000002882         or         r9d, edi
0000000000002885         mov        r10d, r9d
0000000000002888         not        r10d

                     loc_288b:
000000000000288b         and        r10d, 0xfff                                 ; CODE XREF=mode_adjust+71
0000000000002892         add        rcx, 0x10
0000000000002896         and        eax, r9d
0000000000002899         or         r11d, r10d
000000000000289c         movzx      r10d, byte [rcx+1]
00000000000028a1         or         eax, esi
00000000000028a3         test       r10b, r10b
00000000000028a6         jne        loc_27fa

                     loc_28ac:
00000000000028ac         test       r8, r8                                      ; CODE XREF=mode_adjust+100
00000000000028af         je         loc_28b4

00000000000028b1         mov        dword [r8], r11d

                     loc_28b4:
00000000000028b4         pop        rbx                                         ; CODE XREF=mode_adjust+287
00000000000028b5         pop        rbp
00000000000028b6         pop        r12
00000000000028b8         ret
                        ; endp
00000000000028b9         align      64

                     loc_28c0:
00000000000028c0         mov        r12d, eax                                   ; CODE XREF=mode_adjust+126
00000000000028c3         mov        r10d, esi
00000000000028c6         and        r12d, 0x49
00000000000028ca         or         r10d, 0x49
00000000000028ce         or         r12d, ebp
00000000000028d1         cmovne     esi, r10d
00000000000028d5         jmp        loc_2858
00000000000028d7         align      32

                     loc_28e0:
00000000000028e0         or         r11d, esi                                   ; CODE XREF=mode_adjust+61, mode_adjust+228
00000000000028e3         not        esi
00000000000028e5         and        eax, esi
00000000000028e7         jmp        loc_27e8
00000000000028ec         align      16

                     loc_28f0:
00000000000028f0         xor        r11d, r11d                                  ; CODE XREF=mode_adjust+15
00000000000028f3         test       r8, r8
00000000000028f6         je         loc_28fb

00000000000028f8         mov        dword [r8], r11d

                     loc_28fb:
00000000000028fb         ret                                                    ; CODE XREF=mode_adjust+358
                        ; endp
00000000000028fd         align      256                                         ; End of unwind block (FDE at 0x6d20)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_program_name:
0000000000002900         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x6d54), CODE XREF=main+49
0000000000002903         push       rbx
0000000000002904         je         loc_297d

0000000000002906         mov        esi, 0x2f                                   ; argument "__c" for method j_strrchr
000000000000290b         mov        rbx, rdi
000000000000290e         call       j_strrchr                                   ; strrchr
0000000000002913         test       rax, rax
0000000000002916         je         loc_296d

0000000000002918         lea        r8, qword [rax+1]
000000000000291c         mov        rdx, r8
000000000000291f         sub        rdx, rbx
0000000000002922         cmp        rdx, 0x6
0000000000002926         jle        loc_296d

0000000000002928         lea        rsi, qword [rax-6]
000000000000292c         lea        rdi, qword [aLibs]                          ; "/.libs/"
0000000000002933         mov        ecx, 0x7
0000000000002938         rep  cmpsb byte [rsi], byte [rdi]
000000000000293a         seta       dl
000000000000293d         sbb        dl, 0x0
0000000000002940         test       dl, dl
0000000000002942         jne        loc_296d

0000000000002944         lea        rdi, qword [aLibs+8]                        ; 0x5f68
000000000000294b         mov        ecx, 0x3
0000000000002950         mov        rsi, r8
0000000000002953         mov        rbx, r8
0000000000002956         rep  cmpsb byte [rsi], byte [rdi]
0000000000002958         seta       dl
000000000000295b         sbb        dl, 0x0
000000000000295e         test       dl, dl
0000000000002960         jne        loc_296d

0000000000002962         lea        rbx, qword [rax+4]
0000000000002966         mov        qword [program_invocation_short_name@@GLIBC_2.2.5], rbx ; program_invocation_short_name@@GLIBC_2.2.5

                     loc_296d:
000000000000296d         mov        qword [program_name], rbx                   ; program_name, CODE XREF=set_program_name+22, set_program_name+38, set_program_name+66, set_program_name+96
0000000000002974         mov        qword [__progname_full@@GLIBC_2.2.5], rbx   ; __progname_full@@GLIBC_2.2.5
000000000000297b         pop        rbx
000000000000297c         ret
                        ; endp

                     loc_297d:
000000000000297d         mov        rcx, qword [stderr@@GLIBC_2.2.5]            ; argument "__s" for method j_fwrite, stderr@@GLIBC_2.2.5, CODE XREF=set_program_name+4
0000000000002984         lea        rdi, qword [aANullArgv0WasP]                ; argument "__ptr" for method j_fwrite, "A NULL argv[0] was passed through an exec system call.\\n"
000000000000298b         mov        edx, 0x37                                   ; argument "__n" for method j_fwrite
0000000000002990         mov        esi, 0x1                                    ; argument "__size" for method j_fwrite
0000000000002995         call       j_fwrite                                    ; fwrite
000000000000299a         call       j_abort                                     ; abort
                        ; endp
000000000000299f         align      32                                          ; End of unwind block (FDE at 0x6d54)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     gettext_quote.part.1:
00000000000029a0         push       rbp                                         ; Begin of unwind block (FDE at 0x6d74), CODE XREF=sub_31d0+2597, sub_31d0+2619
00000000000029a1         push       rbx
00000000000029a2         mov        rbp, rdi
00000000000029a5         mov        ebx, esi
00000000000029a7         sub        rsp, 0x8
00000000000029ab         call       locale_charset                              ; locale_charset
00000000000029b0         movzx      edx, byte [rax]
00000000000029b3         and        edx, 0xffffffdf
00000000000029b6         cmp        dl, 0x55
00000000000029b9         je         loc_2a30

00000000000029bb         cmp        dl, 0x47
00000000000029be         je         loc_29e0

                     loc_29c0:
00000000000029c0         lea        rax, qword [aLibs+27]                       ; 0x5f7b, CODE XREF=gettext_quote.part.1+74, gettext_quote.part.1+80, gettext_quote.part.1+86, gettext_quote.part.1+92, gettext_quote.part.1+98, gettext_quote.part.1+104, gettext_quote.part.1+110, gettext_quote.part.1+154, gettext_quote.part.1+166, gettext_quote.part.1+176, gettext_quote.part.1+186
00000000000029c7         lea        rdx, qword [aLibs+29]                       ; 0x5f7d
00000000000029ce         cmp        ebx, 0x9
00000000000029d1         cmovne     rax, rdx
00000000000029d5         add        rsp, 0x8
00000000000029d9         pop        rbx
00000000000029da         pop        rbp
00000000000029db         ret
                        ; endp
00000000000029dc         align      32

                     loc_29e0:
00000000000029e0         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+30
00000000000029e4         and        edx, 0xffffffdf
00000000000029e7         cmp        dl, 0x42
00000000000029ea         jne        loc_29c0

00000000000029ec         cmp        byte [rax+2], 0x31
00000000000029f0         jne        loc_29c0

00000000000029f2         cmp        byte [rax+3], 0x38
00000000000029f6         jne        loc_29c0

00000000000029f8         cmp        byte [rax+4], 0x30
00000000000029fc         jne        loc_29c0

00000000000029fe         cmp        byte [rax+5], 0x33
0000000000002a02         jne        loc_29c0

0000000000002a04         cmp        byte [rax+6], 0x30
0000000000002a08         jne        loc_29c0

0000000000002a0a         cmp        byte [rax+7], 0x0
0000000000002a0e         jne        loc_29c0

0000000000002a10         cmp        byte [rbp], 0x60
0000000000002a14         lea        rax, qword [aLibs+20]                       ; 0x5f74
0000000000002a1b         lea        rdx, qword [aLibs+24]                       ; 0x5f78
0000000000002a22         cmovne     rax, rdx
0000000000002a26         add        rsp, 0x8
0000000000002a2a         pop        rbx
0000000000002a2b         pop        rbp
0000000000002a2c         ret
                        ; endp
0000000000002a2d         align      16

                     loc_2a30:
0000000000002a30         movzx      edx, byte [rax+1]                           ; CODE XREF=gettext_quote.part.1+25
0000000000002a34         and        edx, 0xffffffdf
0000000000002a37         cmp        dl, 0x54
0000000000002a3a         jne        loc_29c0

0000000000002a3c         movzx      edx, byte [rax+2]
0000000000002a40         and        edx, 0xffffffdf
0000000000002a43         cmp        dl, 0x46
0000000000002a46         jne        loc_29c0

0000000000002a4c         cmp        byte [rax+3], 0x2d
0000000000002a50         jne        loc_29c0

0000000000002a56         cmp        byte [rax+4], 0x38
0000000000002a5a         jne        loc_29c0

0000000000002a60         cmp        byte [rax+5], 0x0
0000000000002a64         jne        loc_29c0

0000000000002a6a         cmp        byte [rbp], 0x60
0000000000002a6e         lea        rax, qword [aLibs+12]                       ; 0x5f6c
0000000000002a75         lea        rdx, qword [aLibs+16]                       ; 0x5f70
0000000000002a7c         cmovne     rax, rdx
0000000000002a80         add        rsp, 0x8
0000000000002a84         pop        rbx
0000000000002a85         pop        rbp
0000000000002a86         ret
                        ; endp
0000000000002a87         align      16                                          ; End of unwind block (FDE at 0x6d74)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_0: int, 8
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_4C: int32_t, -76
        ;    var_60: int64_t, -96
        ;    var_68: int64_t, -104
        ;    var_69: int8_t, -105
        ;    var_6A: int8_t, -106
        ;    var_6B: int8_t, -107
        ;    var_6C: int8_t, -108
        ;    var_70: int32_t, -112
        ;    var_78: int64_t, -120
        ;    var_80: int64_t, -128
        ;    var_88: int64_t, -136
        ;    var_90: int64_t, -144
        ;    var_98: int64_t, -152
        ;    var_A0: int64_t, -160
        ;    var_A8: int64_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int64_t, -192
        ;    var_C8: int64_t, -200
        ;    var_D0: int64_t, -208
        ;    var_D8: int64_t, -216
        ;    var_D9: int8_t, -217
        ;    var_DA: int8_t, -218
        ;    var_DB: int8_t, -219
        ;    var_E0: int32_t, -224


                     quotearg_buffer_restyled:
0000000000002a90         push       r15                                         ; Begin of unwind block (FDE at 0x6db8), CODE XREF=sub_31d0+1165, sub_31d0+2699, quotearg_n_options+231, quotearg_n_options+344, quotearg_buffer+92, quotearg_alloc_mem+103, quotearg_alloc_mem+176
0000000000002a92         push       r14
0000000000002a94         mov        r15d, r8d
0000000000002a97         push       r13
0000000000002a99         push       r12
0000000000002a9b         mov        r14, rdi
0000000000002a9e         push       rbp
0000000000002a9f         push       rbx
0000000000002aa0         mov        ebx, r9d
0000000000002aa3         mov        r13, rsi
0000000000002aa6         mov        rbp, rcx
0000000000002aa9         and        ebx, 0x2
0000000000002aac         sub        rsp, 0xb8
0000000000002ab3         mov        rax, qword [rsp+0xe8+arg_0]
0000000000002abb         mov        qword [rsp+0xe8+var_D8], rdx
0000000000002ac0         mov        dword [rsp+0xe8+var_E0], r8d
0000000000002ac5         mov        dword [rsp+0xe8+var_70], r9d
0000000000002aca         mov        qword [rsp+0xe8+var_C8], rax
0000000000002acf         mov        rax, qword [rsp+0xe8+arg_8]
0000000000002ad7         mov        qword [rsp+0xe8+var_80], rax
0000000000002adc         mov        rax, qword [rsp+0xe8+arg_10]
0000000000002ae4         mov        qword [rsp+0xe8+var_88], rax
0000000000002ae9         mov        rax, qword [fs:0x28]
0000000000002af2         mov        qword [rsp+0xe8+var_40], rax
0000000000002afa         xor        eax, eax
0000000000002afc         call       j___ctype_get_mb_cur_max                    ; __ctype_get_mb_cur_max
0000000000002b01         cmp        r15d, 0xa
0000000000002b05         mov        qword [rsp+0xe8+var_90], rax
0000000000002b0a         ja         loc_3cbf

0000000000002b10         lea        rcx, qword [switch_table_5fe0]              ; switch_table_5fe0
0000000000002b17         mov        edx, r15d
0000000000002b1a         movsxd     rax, dword [rcx+rdx*4]
0000000000002b1e         add        rax, rcx
0000000000002b21         jmp        rax                                         ; switch statement using table at 0x5fe0, with 11 cases, 0x2b23,0x36f4,0x3750,0x37a5,0x37ea,0x3824,0x38ca,0x3904,0x3af8

                     loc_2b23:
0000000000002b23         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 1, CODE XREF=quotearg_buffer_restyled+145, sub_31d0+1318
0000000000002b28         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000002b2d         xor        r12d, r12d
0000000000002b30         mov        qword [rsp+0xe8+var_98], 0x0
0000000000002b39         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000002b3e         mov        byte [rsp+0xe8+var_DB], 0x0

                     loc_2b43:
0000000000002b43         lea        rax, qword [aLibs+29]                       ; 0x5f7d, CODE XREF=sub_31d0+1876
0000000000002b4a         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000002b53         xor        r15d, r15d
0000000000002b56         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000002b5e         mov        qword [rsp+0xe8+var_A0], rax

                     loc_2b63:
0000000000002b63         xor        r11d, r11d                                  ; CODE XREF=sub_31d0+180, sub_31d0+1400, sub_31d0+1488, sub_31d0+1557, sub_31d0+1615, sub_31d0+1781, sub_31d0+1839, sub_31d0+2408, sub_31d0+2485
0000000000002b66         mov        rax, rbp
0000000000002b69         mov        r8d, r12d
0000000000002b6c         mov        rbp, r11
0000000000002b6f         mov        r11, rax
0000000000002b72         nop        word [rax+rax]

                     loc_2b78:
0000000000002b78         cmp        r11, rbp                                    ; CODE XREF=sub_2c80+194
0000000000002b7b         setne      r12b
0000000000002b7f         cmp        r11, 0xffffffffffffffff
0000000000002b83         jne        loc_2b92

0000000000002b85         mov        rax, qword [rsp+0xe8+var_D8]
0000000000002b8a         cmp        byte [rax+rbp], 0x0
0000000000002b8e         setne      r12b

                     loc_2b92:
0000000000002b92         test       r12b, r12b                                  ; CODE XREF=quotearg_buffer_restyled+243
0000000000002b95         je         loc_31f0

0000000000002b9b         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000002ba0         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000002ba5         lea        r9, qword [rdi+rbp]
0000000000002ba9         setne      al
0000000000002bac         and        al, byte [rsp+0xe8+var_DB]
0000000000002bb0         mov        r10d, eax
0000000000002bb3         je         loc_2c60

0000000000002bb9         mov        rax, qword [rsp+0xe8+var_D0]
0000000000002bbe         test       rax, rax
0000000000002bc1         je         loc_2ff0

0000000000002bc7         cmp        r11, 0xffffffffffffffff
0000000000002bcb         lea        rbx, qword [rbp+rax]
0000000000002bd0         jne        loc_2c00

0000000000002bd2         cmp        rax, 0x1
0000000000002bd6         jbe        loc_2c00

0000000000002bd8         mov        byte [rsp+0xe8+var_B0], r8b
0000000000002bdd         mov        byte [rsp+0xe8+var_B8], r10b
0000000000002be2         mov        qword [rsp+0xe8+var_C0], r9
0000000000002be7         call       j_strlen                                    ; strlen
0000000000002bec         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000002bf2         movzx      r10d, byte [rsp+0xe8+var_B8]
0000000000002bf8         mov        r11, rax
0000000000002bfb         mov        r9, qword [rsp+0xe8+var_C0]

                     loc_2c00:
0000000000002c00         cmp        rbx, r11                                    ; CODE XREF=quotearg_buffer_restyled+320, quotearg_buffer_restyled+326
0000000000002c03         mov        byte [rsp+0xe8+var_C0], r10b
0000000000002c08         ja         loc_31c0

0000000000002c0e         mov        rdx, qword [rsp+0xe8+var_D0]                ; argument "__n" for method j_memcmp
0000000000002c13         mov        rsi, qword [rsp+0xe8+var_A0]                ; argument "__s2" for method j_memcmp
0000000000002c18         mov        rdi, r9                                     ; argument "__s1" for method j_memcmp
0000000000002c1b         mov        qword [rsp+0xe8+var_A8], r11
0000000000002c20         mov        byte [rsp+0xe8+var_B0], r8b
0000000000002c25         mov        qword [rsp+0xe8+var_B8], r9
0000000000002c2a         call       j_memcmp                                    ; memcmp
0000000000002c2f         test       eax, eax
0000000000002c31         mov        r9, qword [rsp+0xe8+var_B8]
0000000000002c36         movzx      r8d, byte [rsp+0xe8+var_B0]
0000000000002c3c         mov        r11, qword [rsp+0xe8+var_A8]
0000000000002c41         jne        loc_31c0

0000000000002c47         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000002c4c         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000002c52         jne        loc_3bd5

0000000000002c58         nop        dword [rax+rax]

                     loc_2c60:
0000000000002c60         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+291, sub_31b0+19
0000000000002c64         cmp        bl, 0x7e
0000000000002c67         ja         loc_2f88

0000000000002c6d         lea        rcx, qword [switch_table_5fe0+44]           ; 0x600c
0000000000002c74         movzx      edx, bl
0000000000002c77         movsxd     rax, dword [rcx+rdx*4]
0000000000002c7b         add        rax, rcx
0000000000002c7e         jmp        rax
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_2c80:
0000000000002c80         xor        r10d, r10d
0000000000002c83         cmp        r11, 0x1
0000000000002c87         setne      al
0000000000002c8a         cmp        r11, 0xffffffffffffffff
0000000000002c8e         jne        loc_2c9c

0000000000002c90         mov        rax, qword [rsp+arg_8]
0000000000002c95         cmp        byte [rax+1], 0x0
0000000000002c99         setne      al

                     loc_2c9c:
0000000000002c9c         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_2c80+14
0000000000002ca1         sete       dl
0000000000002ca4         test       al, al
0000000000002ca6         je         loc_2ef8

                     loc_2cac:
0000000000002cac         xor        r12d, r12d                                  ; CODE XREF=sub_2ef0+11
0000000000002caf         xor        eax, eax
0000000000002cb1         nop        dword [rax]
                        ; endp

                     loc_2cb8:
0000000000002cb8         cmp        byte [rsp+0xe8+var_DB], 0x1                 ; CODE XREF=sub_2ea0+50, sub_2f70+119
0000000000002cbd         jne        loc_2dd2

0000000000002cc3         test       dl, dl
0000000000002cc5         jne        loc_2dd2

                     loc_2ccb:
0000000000002ccb         mov        rsi, qword [rsp+0xe8+var_C8]                ; CODE XREF=sub_2d80+87
0000000000002cd0         test       rsi, rsi
0000000000002cd3         je         loc_2ce9

0000000000002cd5         mov        edx, ebx
0000000000002cd7         shr        dl, 0x5
0000000000002cda         movzx      edx, dl
0000000000002cdd         mov        edx, dword [rsi+rdx*4]
0000000000002ce0         bt         edx, ebx
0000000000002ce3         jb         loc_2e33

                     loc_2ce9:
0000000000002ce9         test       r10b, r10b                                  ; CODE XREF=sub_2c80+83, sub_2d80+93
0000000000002cec         jne        loc_2e33

0000000000002cf2         xor        eax, 0x1
0000000000002cf5         add        rbp, 0x1
0000000000002cf9         and        eax, r8d

                     loc_2cfc:
0000000000002cfc         test       al, al                                      ; CODE XREF=sub_31d0+936
0000000000002cfe         je         loc_2d20

0000000000002d00         cmp        r13, r15
0000000000002d03         jbe        loc_2d0a

0000000000002d05         mov        byte [r14+r15], 0x27

                     loc_2d0a:
0000000000002d0a         lea        rax, qword [r15+1]                          ; CODE XREF=sub_2c80+131
0000000000002d0e         cmp        r13, rax
0000000000002d11         jbe        loc_2d19

0000000000002d13         mov        byte [r14+r15+1], 0x27

                     loc_2d19:
0000000000002d19         add        r15, 0x2                                    ; CODE XREF=sub_2c80+145
0000000000002d1d         xor        r8d, r8d

                     loc_2d20:
0000000000002d20         cmp        r15, r13                                    ; CODE XREF=sub_2c80+126, sub_2d80+275, sub_31d0+869
0000000000002d23         jae        loc_2d29

0000000000002d25         mov        byte [r14+r15], bl

                     loc_2d29:
0000000000002d29         movzx      edi, byte [rsp+0xe8+var_DA]                 ; CODE XREF=sub_2c80+163
0000000000002d2e         add        r15, 0x1
0000000000002d32         mov        eax, 0x0
0000000000002d37         test       r12b, r12b
0000000000002d3a         cmove      edi, eax
0000000000002d3d         mov        byte [rsp+0xe8+var_DA], dil
0000000000002d42         jmp        loc_2b78
0000000000002d47         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_2d50:
0000000000002d50         xor        r10d, r10d
0000000000002d53         mov        eax, dword [rsp+arg_0]
0000000000002d57         cmp        eax, 0x2
0000000000002d5a         je         loc_3318

0000000000002d60         cmp        eax, 0x5
0000000000002d63         je         loc_32d8

0000000000002d69         cmp        eax, 0x2
0000000000002d6c         mov        ebx, 0x3f
0000000000002d71         sete       dl
0000000000002d74         xor        r12d, r12d
0000000000002d77         xor        eax, eax
0000000000002d79         jmp        sub_2c80+56
                        ; endp
0000000000002d7e         align      128


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_74: int8_t, 124
        ;    arg_48: int, 80
        ;    arg_40: int, 72
        ;    arg_38: int, 64
        ;    arg_30: int, 56
        ;    arg_28: int, 48
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_0: int, 8


                     sub_2d80:
0000000000002d80         xor        r10d, r10d
0000000000002d83         cmp        dword [rsp+arg_0], 0x2
0000000000002d88         je         loc_3290

0000000000002d8e         mov        byte [rsp+arg_74], r12b
0000000000002d93         xor        edx, edx
0000000000002d95         xor        eax, eax
0000000000002d97         mov        ebx, 0x27
0000000000002d9c         jmp        sub_2c80+56
                        ; endp
0000000000002da1         nop        dword [rax]
0000000000002da8         mov        edx, 0x9
0000000000002dad         mov        ebx, 0x74

                     loc_2db2:
0000000000002db2         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_2f40+10, sub_3030+37, sub_3170+53
0000000000002db7         sete       al
0000000000002dba         and        al, byte [rsp+arg_7]
0000000000002dbe         jne        sub_2ef0+30

0000000000002dc4         cmp        byte [rsp+arg_5], 0x0                       ; CODE XREF=sub_2d80+114
0000000000002dc9         jne        loc_2e30

                     loc_2dcb:
0000000000002dcb         mov        ebx, edx                                    ; CODE XREF=sub_2ea0+18
0000000000002dcd         xor        r12d, r12d
0000000000002dd0         xor        eax, eax
                        ; endp

                     loc_2dd2:
0000000000002dd2         cmp        byte [rsp+0xe8+var_D9], 0x0                 ; CODE XREF=sub_2c80+61, sub_2c80+69
0000000000002dd7         jne        loc_2ccb

0000000000002ddd         jmp        loc_2ce9
0000000000002de2         nop        word [rax+rax]
0000000000002de8         mov        edx, 0x8
0000000000002ded         mov        ebx, 0x62
0000000000002df2         jmp        sub_2d80+68
0000000000002df4         nop        dword [rax]
0000000000002df8         cmp        dword [rsp+8], 0x2
0000000000002dfd         je         sub_31d0                                    ; sub_31d0
0000000000002e03         cmp        byte [rsp+0xd], 0x0
0000000000002e08         je         sub_3010+16

                     loc_2e0e:
0000000000002e0e         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_3010+8
0000000000002e13         je         loc_3020

0000000000002e19         cmp        qword [rsp+arg_10], 0x0
0000000000002e1f         jne        loc_31db

0000000000002e25         mov        ebx, 0x5c
0000000000002e2a         nop        word [rax+rax]
                        ; endp

                     loc_2e30:
0000000000002e30         xor        r12d, r12d                                  ; CODE XREF=sub_2d80+73, sub_3170+29
                        ; endp

                     loc_2e33:
0000000000002e33         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_2c80+99, sub_2c80+108
0000000000002e38         sete       dl
0000000000002e3b         cmp        byte [rsp+0xe8+var_D9], 0x0
0000000000002e40         mov        eax, edx
0000000000002e42         jne        loc_3698

0000000000002e48         mov        eax, r8d
0000000000002e4b         xor        eax, 0x1
0000000000002e4e         and        al, dl
0000000000002e50         je         loc_2e81

0000000000002e52         cmp        r13, r15
0000000000002e55         jbe        loc_2e5c

0000000000002e57         mov        byte [r14+r15], 0x27

                     loc_2e5c:
0000000000002e5c         lea        rdx, qword [r15+1]                          ; CODE XREF=sub_2d80+213
0000000000002e60         cmp        r13, rdx
0000000000002e63         jbe        loc_2e6b

0000000000002e65         mov        byte [r14+r15+1], 0x24

                     loc_2e6b:
0000000000002e6b         lea        rdx, qword [r15+2]                          ; CODE XREF=sub_2d80+227
0000000000002e6f         cmp        r13, rdx
0000000000002e72         jbe        loc_2e7a

0000000000002e74         mov        byte [r14+r15+2], 0x27

                     loc_2e7a:
0000000000002e7a         add        r15, 0x3                                    ; CODE XREF=sub_2d80+242
0000000000002e7e         mov        r8d, eax

                     loc_2e81:
0000000000002e81         cmp        r13, r15                                    ; CODE XREF=sub_2d80+208
0000000000002e84         jbe        loc_2e8b

0000000000002e86         mov        byte [r14+r15], 0x5c

                     loc_2e8b:
0000000000002e8b         add        r15, 0x1                                    ; CODE XREF=sub_2d80+260
0000000000002e8f         add        rbp, 0x1
0000000000002e93         jmp        loc_2d20
0000000000002e98         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_70: int8_t, 120
        ;    arg_20: int, 40
        ;    arg_18: int, 32
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_2ea0:
0000000000002ea0         cmp        byte [rsp+arg_5], 0x0
0000000000002ea5         jne        loc_3073

0000000000002eab         xor        edx, edx
0000000000002ead         test       byte [rsp+arg_70], 0x1
0000000000002eb2         je         loc_2dcb

0000000000002eb8         add        rbp, 0x1
0000000000002ebc         jmp        quotearg_buffer_restyled+232
                        ; endp
0000000000002ec1         nop        dword [rax]
0000000000002ec8         cmp        dword [rsp+8], 0x2
0000000000002ecd         sete       dl
0000000000002ed0         xor        eax, eax
0000000000002ed2         jmp        sub_2c80+56
0000000000002ed7         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2ee0:
0000000000002ee0         mov        edx, 0x7
0000000000002ee5         mov        ebx, 0x61
0000000000002eea         jmp        sub_2d80+68
                        ; endp
0000000000002eef         nop


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2ef0:
0000000000002ef0         cmp        dword [rsp+8], 0x2
0000000000002ef5         sete       dl
                        ; endp

                     loc_2ef8:
0000000000002ef8         test       rbp, rbp                                    ; CODE XREF=sub_2c80+38, sub_3110+35
0000000000002efb         jne        loc_2cac

0000000000002f01         movzx      eax, byte [rsp+arg_7]                       ; CODE XREF=sub_3140+43
0000000000002f06         and        al, dl
0000000000002f08         je         sub_2c80+56

0000000000002f0e         mov        rbp, r11
0000000000002f11         mov        dword [rsp+arg_0], 0x2
0000000000002f19         jmp        sub_31d0+1097
                        ; endp
0000000000002f1e         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_2f20:
0000000000002f20         cmp        dword [rsp+arg_0], 0x2
0000000000002f25         sete       dl
0000000000002f28         xor        r12d, r12d
0000000000002f2b         jmp        sub_2ef0+17
                        ; endp
0000000000002f2d         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_2f30:
0000000000002f30         cmp        dword [rsp+arg_0], 0x2
0000000000002f35         mov        ebx, 0x20
0000000000002f3a         sete       dl
0000000000002f3d         jmp        sub_2ef0+17
                        ; endp
0000000000002f3f         align      64


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_2f40:
0000000000002f40         mov        edx, 0xd
0000000000002f45         mov        ebx, 0x72
0000000000002f4a         jmp        loc_2db2
0000000000002f4f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2f50:
0000000000002f50         mov        edx, 0xc
0000000000002f55         mov        ebx, 0x66
0000000000002f5a         jmp        sub_2d80+68
                        ; endp
0000000000002f5f         align      32


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2f60:
0000000000002f60         mov        edx, 0xb
0000000000002f65         mov        ebx, 0x76
0000000000002f6a         jmp        sub_2d80+68
                        ; endp
0000000000002f6f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_2f70:
0000000000002f70         mov        edx, 0xa
0000000000002f75         mov        ebx, 0x6e
0000000000002f7a         jmp        sub_2d80+50
                        ; endp
0000000000002f7f         align      128

                     loc_2f80:
0000000000002f80         xor        r10d, r10d                                  ; CODE XREF=sub_2f70+135
0000000000002f83         nop        dword [rax+rax]

                     loc_2f88:
0000000000002f88         cmp        qword [rsp+0xe8+var_90], 0x1                ; CODE XREF=quotearg_buffer_restyled+471
0000000000002f8e         jne        loc_3338

0000000000002f94         mov        qword [rsp+0xe8+var_B0], r11
0000000000002f99         mov        byte [rsp+0xe8+var_B8], r8b
0000000000002f9e         mov        byte [rsp+0xe8+var_C0], r10b
0000000000002fa3         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000002fa8         mov        rcx, qword [rax]
0000000000002fab         movzx      edx, bl
0000000000002fae         movzx      r10d, byte [rsp+0xe8+var_C0]
0000000000002fb4         movzx      r8d, byte [rsp+0xe8+var_B8]
0000000000002fba         mov        r11, qword [rsp+0xe8+var_B0]
0000000000002fbf         mov        edi, 0x1
0000000000002fc4         movzx      eax, word [rcx+rdx*2]
0000000000002fc8         and        ax, 0x4000
0000000000002fcc         setne      r12b
0000000000002fd0         sete       al
0000000000002fd3         and        al, byte [rsp+0xe8+var_DB]

                     loc_2fd7:
0000000000002fd7         test       al, al                                      ; CODE XREF=sub_31d0+2221
0000000000002fd9         jne        loc_3971

0000000000002fdf         cmp        dword [rsp+0xe8+var_E0], 0x2
0000000000002fe4         sete       dl
0000000000002fe7         jmp        loc_2cb8
0000000000002fec         align      16

                     loc_2ff0:
0000000000002ff0         movzx      ebx, byte [r9]                              ; CODE XREF=quotearg_buffer_restyled+305
0000000000002ff4         cmp        bl, 0x7e
0000000000002ff7         ja         loc_2f80

0000000000002ff9         lea        rcx, qword [switch_table_5fe0+552]          ; 0x6208
0000000000003000         movzx      edx, bl
0000000000003003         movsxd     rax, dword [rcx+rdx*4]
0000000000003007         add        rax, rcx
000000000000300a         jmp        rax
                        ; endp
000000000000300c         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_10: int, 24
        ;    arg_8: int, 16
        ;    arg_7: int8_t, 15
        ;    arg_5: int8_t, 13
        ;    arg_0: int, 8


                     sub_3010:
0000000000003010         xor        r10d, r10d
0000000000003013         cmp        byte [rsp+arg_5], 0x0
0000000000003018         jne        loc_2e0e

000000000000301e         nop

                     loc_3020:
0000000000003020         mov        edx, 0x5c                                   ; CODE XREF=sub_2d80+136, sub_2d80+147
0000000000003025         mov        ebx, 0x5c
000000000000302a         jmp        sub_2d80+68
                        ; endp
000000000000302f         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3030:
0000000000003030         mov        edx, 0xc
0000000000003035         xor        r10d, r10d
0000000000003038         mov        ebx, 0x66
000000000000303d         jmp        sub_2d80+68
                        ; endp
0000000000003042         nop        word [rax+rax]
0000000000003048         mov        edx, 0xa
000000000000304d         xor        r10d, r10d
0000000000003050         mov        ebx, 0x6e
0000000000003055         jmp        sub_2d80+50
000000000000305a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3060:
0000000000003060         mov        ebx, 0x61
0000000000003065         jmp        sub_2d80+176
                        ; endp
000000000000306a         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3070:
0000000000003070         xor        r10d, r10d
                        ; endp

                     loc_3073:
0000000000003073         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_2ea0+5
0000000000003078         sete       dl
000000000000307b         cmp        byte [rsp+arg_7], 0x0
0000000000003080         jne        loc_3c1a

0000000000003086         mov        eax, r8d
0000000000003089         mov        rcx, r15
000000000000308c         xor        eax, 0x1
000000000000308f         and        al, dl
0000000000003091         je         loc_30c0

0000000000003093         cmp        r13, r15
0000000000003096         jbe        loc_309d

0000000000003098         mov        byte [r14+r15], 0x27

                     loc_309d:
000000000000309d         lea        rcx, qword [r15+1]                          ; CODE XREF=sub_3070+38
00000000000030a1         cmp        r13, rcx
00000000000030a4         jbe        loc_30ac

00000000000030a6         mov        byte [r14+r15+1], 0x24

                     loc_30ac:
00000000000030ac         lea        rcx, qword [r15+2]                          ; CODE XREF=sub_3070+52
00000000000030b0         cmp        r13, rcx
00000000000030b3         ja         loc_36e9

                     loc_30b9:
00000000000030b9         lea        rcx, qword [r15+3]                          ; CODE XREF=sub_31d0+1311
00000000000030bd         mov        r8d, eax

                     loc_30c0:
00000000000030c0         cmp        r13, rcx                                    ; CODE XREF=sub_3070+33
00000000000030c3         jbe        loc_30ca

00000000000030c5         mov        byte [r14+rcx], 0x5c

                     loc_30ca:
00000000000030ca         cmp        dword [rsp+arg_0], 0x2                      ; CODE XREF=sub_3070+83
00000000000030cf         lea        r15, qword [rcx+1]
00000000000030d3         je         loc_36d9

00000000000030d9         lea        rax, qword [rbp+1]
00000000000030dd         cmp        rax, r11
00000000000030e0         jae        loc_30fb

00000000000030e2         mov        rax, qword [rsp+arg_8]
00000000000030e7         movzx      eax, byte [rax+rbp+1]
00000000000030ec         mov        byte [rsp+arg_20], al
00000000000030f0         sub        eax, 0x30
00000000000030f3         cmp        al, 0x9
00000000000030f5         jbe        loc_3929

                     loc_30fb:
00000000000030fb         mov        eax, r12d                                   ; CODE XREF=sub_3070+112
00000000000030fe         mov        ebx, 0x30
0000000000003103         xor        r12d, r12d
0000000000003106         jmp        sub_2c80+56
                        ; endp
000000000000310b         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8


                     sub_3110:
0000000000003110         cmp        dword [rsp+arg_0], 0x2
0000000000003115         mov        r12d, r10d
0000000000003118         sete       dl
000000000000311b         xor        r10d, r10d
000000000000311e         xor        eax, eax
0000000000003120         jmp        sub_2c80+56
                        ; endp
0000000000003125         nop        dword [rax]
0000000000003128         cmp        dword [rsp+8], 0x2
000000000000312d         sete       dl
0000000000003130         xor        r10d, r10d
0000000000003133         jmp        sub_2ef0+8
0000000000003138         nop        dword [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3140:
0000000000003140         cmp        dword [rsp+8], 0x2
0000000000003145         sete       dl
0000000000003148         xor        r10d, r10d
000000000000314b         xor        r12d, r12d
000000000000314e         jmp        sub_2ef0+17
                        ; endp
0000000000003153         nop        dword [rax+rax]
0000000000003158         cmp        dword [rsp+8], 0x2
000000000000315d         mov        r12d, r10d
0000000000003160         mov        ebx, 0x20
0000000000003165         sete       dl
0000000000003168         xor        r10d, r10d
000000000000316b         jmp        sub_2ef0+17


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3170:
0000000000003170         mov        edx, 0xd
0000000000003175         xor        r10d, r10d
0000000000003178         mov        ebx, 0x72
000000000000317d         jmp        sub_2d80+50
                        ; endp
0000000000003182         nop        word [rax+rax]
0000000000003188         mov        ebx, 0x76
000000000000318d         jmp        sub_2d80+176
0000000000003192         nop        word [rax+rax]
0000000000003198         mov        edx, 0x9
000000000000319d         xor        r10d, r10d
00000000000031a0         mov        ebx, 0x74
00000000000031a5         jmp        sub_2d80+50
00000000000031aa         nop        word [rax+rax]


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_31b0:
00000000000031b0         mov        ebx, 0x62
00000000000031b5         jmp        sub_2d80+176
                        ; endp
00000000000031ba         nop        word [rax+rax]

                     loc_31c0:
00000000000031c0         xor        r10d, r10d                                  ; CODE XREF=quotearg_buffer_restyled+376, quotearg_buffer_restyled+433
00000000000031c3         jmp        loc_2c60
00000000000031c8         align      16


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_7: int8_t, 15


                     sub_31d0:
00000000000031d0         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2d80+125
00000000000031d5         jne        sub_31d0+2416
                        ; endp

                     loc_31db:
00000000000031db         add        rbp, 0x1                                    ; CODE XREF=sub_2d80+159
00000000000031df         mov        eax, r8d
00000000000031e2         xor        r12d, r12d
00000000000031e5         mov        ebx, 0x5c
00000000000031ea         jmp        sub_2c80+124
                        ; endp
00000000000031ef         align      16

                     loc_31f0:
00000000000031f0         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+261
00000000000031f5         movzx      ebx, byte [rsp+0xe8+var_D9]
00000000000031fa         mov        r12d, r8d
00000000000031fd         mov        rbp, r11
0000000000003200         sete       dl
0000000000003203         mov        eax, ebx
0000000000003205         test       r15, r15
0000000000003208         sete       cl
000000000000320b         and        eax, edx
000000000000320d         and        al, cl
000000000000320f         jne        loc_3c76

0000000000003215         mov        eax, ebx
0000000000003217         xor        eax, 0x1
000000000000321a         and        dl, al
000000000000321c         je         loc_3b8c

0000000000003222         cmp        byte [rsp+0xe8+var_6C], 0x0
0000000000003227         je         loc_3b8a

000000000000322d         cmp        byte [rsp+0xe8+var_DA], 0x0
0000000000003232         jne        loc_3c2d

0000000000003238         test       r13, r13
000000000000323b         sete       al
000000000000323e         cmp        qword [rsp+0xe8+var_98], 0x0
0000000000003244         setne      dl
0000000000003247         and        al, dl
0000000000003249         je         loc_3c6c

000000000000324f         mov        r13, qword [rsp+0xe8+var_98]

                     loc_3254:
0000000000003254         lea        rbx, qword [aLibs+29]                       ; 0x5f7d, CODE XREF=sub_31d0+2781
000000000000325b         mov        byte [r14], 0x27
000000000000325f         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000003267         mov        r15d, 0x1
000000000000326d         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003276         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000327b         mov        qword [rsp+0xe8+var_A0], rbx
0000000000003280         mov        byte [rsp+0xe8+var_6C], al
0000000000003284         jmp        loc_2b63
0000000000003289         align      16

                     loc_3290:
0000000000003290         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2d80+8
0000000000003295         jne        sub_31d0+2416

000000000000329b         test       r13, r13
000000000000329e         je         loc_36a0

00000000000032a4         xor        edx, edx
00000000000032a6         cmp        qword [rsp+arg_48], 0x0
00000000000032ac         jne        loc_36a0

                     loc_32b2:
00000000000032b2         mov        qword [rsp+arg_48], r13                     ; CODE XREF=sub_31d0+1284, sub_31d0+2794
00000000000032b7         add        r15, 0x3
00000000000032bb         xor        eax, eax
00000000000032bd         mov        byte [rsp+arg_74], r12b
00000000000032c2         xor        r8d, r8d
00000000000032c5         mov        r13, rdx
00000000000032c8         mov        ebx, 0x27
00000000000032cd         jmp        sub_2c80+105
                        ; endp
00000000000032d2         align      8

                     loc_32d8:
00000000000032d8         test       byte [rsp+arg_70], 0x4                      ; CODE XREF=sub_2d50+19
00000000000032dd         je         loc_3300

00000000000032df         lea        rcx, qword [rbp+2]
00000000000032e3         cmp        rcx, r11
00000000000032e6         jae        loc_3300

00000000000032e8         mov        rax, qword [rsp+arg_8]
00000000000032ed         cmp        byte [rax+rbp+1], 0x3f
00000000000032f2         je         loc_3a82

00000000000032f8         nop        dword [rax+rax]

                     loc_3300:
0000000000003300         xor        edx, edx                                    ; CODE XREF=sub_31d0+269, sub_31d0+278, sub_31d0+2233, sub_31d0+2253
0000000000003302         xor        r12d, r12d
0000000000003305         xor        eax, eax
0000000000003307         mov        ebx, 0x3f
000000000000330c         jmp        sub_2c80+56
                        ; endp
0000000000003311         align      8

                     loc_3318:
0000000000003318         cmp        byte [rsp+arg_7], 0x0                       ; CODE XREF=sub_2d50+10
000000000000331d         jne        loc_3b40

0000000000003323         xor        r12d, r12d
0000000000003326         xor        eax, eax
0000000000003328         mov        ebx, 0x3f
000000000000332d         jmp        sub_2c80+105
                        ; endp
0000000000003332         align      8

                     loc_3338:
0000000000003338         lea        rax, qword [rsp+0xe8+var_48]                ; CODE XREF=sub_2f70+30
0000000000003340         cmp        r11, 0xffffffffffffffff
0000000000003344         mov        qword [rsp+0xe8+var_48], 0x0
0000000000003350         mov        qword [rsp+0xe8+var_C0], rax
0000000000003355         jne        loc_3384

0000000000003357         mov        rdi, qword [rsp+0xe8+var_D8]                ; argument "__s" for method j_strlen
000000000000335c         mov        byte [rsp+0xe8+var_A8], r8b
0000000000003361         mov        byte [rsp+0xe8+var_B0], r10b
0000000000003366         mov        qword [rsp+0xe8+var_B8], r9
000000000000336b         call       j_strlen                                    ; strlen
0000000000003370         movzx      r8d, byte [rsp+0xe8+var_A8]
0000000000003376         movzx      r10d, byte [rsp+0xe8+var_B0]
000000000000337c         mov        r11, rax
000000000000337f         mov        r9, qword [rsp+0xe8+var_B8]

                     loc_3384:
0000000000003384         lea        rax, qword [rsp+0xe8+var_4C]                ; CODE XREF=sub_31d0+389
000000000000338c         xor        ecx, ecx
000000000000338e         mov        byte [rsp+0xe8+var_6A], bl
0000000000003392         mov        byte [rsp+0xe8+var_6B], r8b
0000000000003397         mov        rbx, rcx
000000000000339a         mov        qword [rsp+0xe8+var_60], r9
00000000000033a2         mov        qword [rsp+0xe8+var_B0], rax
00000000000033a7         mov        byte [rsp+0xe8+var_69], r10b
00000000000033ac         mov        qword [rsp+0xe8+var_68], r15
00000000000033b4         mov        qword [rsp+0xe8+var_A8], r14
00000000000033b9         mov        qword [rsp+0xe8+var_78], r13
00000000000033be         mov        qword [rsp+0xe8+var_B8], r11

                     loc_33c3:
00000000000033c3         mov        rax, qword [rsp+0xe8+var_D8]                ; CODE XREF=sub_31d0+623
00000000000033c8         lea        r14, qword [rbp+rbx]
00000000000033cd         mov        rdx, qword [rsp+0xe8+var_B8]
00000000000033d2         mov        rcx, qword [rsp+0xe8+var_C0]
00000000000033d7         mov        rdi, qword [rsp+0xe8+var_B0]
00000000000033dc         lea        r13, qword [rax+r14]
00000000000033e0         sub        rdx, r14
00000000000033e3         mov        rsi, r13
00000000000033e6         call       rpl_mbrtowc                                 ; rpl_mbrtowc
00000000000033eb         test       rax, rax
00000000000033ee         mov        r15, rax
00000000000033f1         je         loc_3441

00000000000033f3         cmp        rax, 0xffffffffffffffff
00000000000033f7         je         loc_3a15

00000000000033fd         cmp        rax, 0xfffffffffffffffe
0000000000003401         je         loc_39a1

0000000000003407         cmp        dword [rsp+0xe8+var_E0], 0x2
000000000000340c         sete       al
000000000000340f         and        al, byte [rsp+0xe8+var_D9]
0000000000003413         jne        loc_35b0

                     loc_3419:
0000000000003419         mov        edi, dword [rsp+0xe8+var_4C]                ; argument "__wc" for method j_iswprint, CODE XREF=sub_31d0+996, sub_31d0+1031
0000000000003420         call       j_iswprint                                  ; iswprint
0000000000003425         mov        rdi, qword [rsp+0xe8+var_C0]                ; argument "__ps" for method j_mbsinit
000000000000342a         test       eax, eax
000000000000342c         mov        eax, 0x0
0000000000003431         cmove      r12d, eax
0000000000003435         add        rbx, r15
0000000000003438         call       j_mbsinit                                   ; mbsinit
000000000000343d         test       eax, eax
000000000000343f         je         loc_33c3

                     loc_3441:
0000000000003441         mov        edx, r12d                                   ; CODE XREF=sub_31d0+545
0000000000003444         mov        rdi, rbx
0000000000003447         movzx      r8d, byte [rsp+0xe8+var_6B]
000000000000344d         xor        edx, 0x1
0000000000003450         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003455         movzx      r10d, byte [rsp+0xe8+var_69]
000000000000345b         and        dl, byte [rsp+0xe8+var_DB]
000000000000345f         mov        r15, qword [rsp+0xe8+var_68]
0000000000003467         mov        r14, qword [rsp+0xe8+var_A8]
000000000000346c         mov        r13, qword [rsp+0xe8+var_78]
0000000000003471         mov        r11, qword [rsp+0xe8+var_B8]

                     loc_3476:
0000000000003476         cmp        rdi, 0x1                                    ; CODE XREF=sub_31d0+2112, sub_31d0+2168
000000000000347a         jbe        loc_3a7b

                     loc_3480:
0000000000003480         mov        rcx, rdi                                    ; CODE XREF=sub_31d0+1961
0000000000003483         xor        esi, esi
0000000000003485         movzx      r9d, byte [rsp+0xe8+var_D9]
000000000000348b         add        rcx, rbp
000000000000348e         mov        rdi, qword [rsp+0xe8+var_D8]
0000000000003493         jmp        loc_354e
0000000000003498         align      32

                     loc_34a0:
00000000000034a0         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_31d0+896
00000000000034a5         sete       al
00000000000034a8         test       r9b, r9b
00000000000034ab         jne        loc_3960

00000000000034b1         mov        esi, r8d
00000000000034b4         xor        esi, 0x1
00000000000034b7         and        al, sil
00000000000034ba         je         loc_34eb

00000000000034bc         cmp        r13, r15
00000000000034bf         jbe        loc_34c6

00000000000034c1         mov        byte [r14+r15], 0x27

                     loc_34c6:
00000000000034c6         lea        rsi, qword [r15+1]                          ; CODE XREF=sub_31d0+751
00000000000034ca         cmp        r13, rsi
00000000000034cd         jbe        loc_34d5

00000000000034cf         mov        byte [r14+r15+1], 0x24

                     loc_34d5:
00000000000034d5         lea        rsi, qword [r15+2]                          ; CODE XREF=sub_31d0+765
00000000000034d9         cmp        r13, rsi
00000000000034dc         jbe        loc_34e4

00000000000034de         mov        byte [r14+r15+2], 0x27

                     loc_34e4:
00000000000034e4         add        r15, 0x3                                    ; CODE XREF=sub_31d0+780
00000000000034e8         mov        r8d, eax

                     loc_34eb:
00000000000034eb         cmp        r13, r15                                    ; CODE XREF=sub_31d0+746
00000000000034ee         jbe        loc_34f5

00000000000034f0         mov        byte [r14+r15], 0x5c

                     loc_34f5:
00000000000034f5         lea        rax, qword [r15+1]                          ; CODE XREF=sub_31d0+798
00000000000034f9         cmp        r13, rax
00000000000034fc         jbe        loc_350b

00000000000034fe         mov        eax, ebx
0000000000003500         shr        al, 0x6
0000000000003503         add        eax, 0x30
0000000000003506         mov        byte [r14+r15+1], al

                     loc_350b:
000000000000350b         lea        rax, qword [r15+2]                          ; CODE XREF=sub_31d0+812
000000000000350f         cmp        r13, rax
0000000000003512         jbe        loc_3524

0000000000003514         mov        eax, ebx
0000000000003516         shr        al, 0x3
0000000000003519         and        eax, 0x7
000000000000351c         add        eax, 0x30
000000000000351f         mov        byte [r14+r15+2], al

                     loc_3524:
0000000000003524         and        ebx, 0x7                                    ; CODE XREF=sub_31d0+834
0000000000003527         add        rbp, 0x1
000000000000352b         add        r15, 0x3
000000000000352f         add        ebx, 0x30
0000000000003532         cmp        rbp, rcx
0000000000003535         jae        loc_2d20

000000000000353b         mov        esi, edx

                     loc_353d:
000000000000353d         cmp        r13, r15                                    ; CODE XREF=sub_31d0+985, sub_31d0+1969
0000000000003540         jbe        loc_3546

0000000000003542         mov        byte [r14+r15], bl

                     loc_3546:
0000000000003546         movzx      ebx, byte [rdi+rbp]                         ; CODE XREF=sub_31d0+880
000000000000354a         add        r15, 0x1

                     loc_354e:
000000000000354e         test       dl, dl                                      ; CODE XREF=sub_31d0+707
0000000000003550         jne        loc_34a0

0000000000003556         mov        eax, esi
0000000000003558         xor        eax, 0x1
000000000000355b         and        eax, r8d
000000000000355e         test       r10b, r10b
0000000000003561         je         loc_3571

0000000000003563         cmp        r13, r15
0000000000003566         jbe        loc_356d

0000000000003568         mov        byte [r14+r15], 0x5c

                     loc_356d:
000000000000356d         add        r15, 0x1                                    ; CODE XREF=sub_31d0+918

                     loc_3571:
0000000000003571         add        rbp, 0x1                                    ; CODE XREF=sub_31d0+913
0000000000003575         cmp        rbp, rcx
0000000000003578         jae        loc_2cfc

000000000000357e         test       al, al
0000000000003580         je         loc_397e

0000000000003586         cmp        r13, r15
0000000000003589         jbe        loc_3590

000000000000358b         mov        byte [r14+r15], 0x27

                     loc_3590:
0000000000003590         lea        rax, qword [r15+1]                          ; CODE XREF=sub_31d0+953
0000000000003594         cmp        r13, rax
0000000000003597         jbe        loc_359f

0000000000003599         mov        byte [r14+r15+1], 0x27

                     loc_359f:
000000000000359f         add        r15, 0x2                                    ; CODE XREF=sub_31d0+967
00000000000035a3         xor        r10d, r10d
00000000000035a6         xor        r8d, r8d
00000000000035a9         jmp        loc_353d
00000000000035ab         align      16

                     loc_35b0:
00000000000035b0         cmp        r15, 0x1                                    ; CODE XREF=sub_31d0+579
00000000000035b4         je         loc_3419

00000000000035ba         mov        rdi, qword [rsp+0xe8+var_D8]
00000000000035bf         lea        rcx, qword [rdi+r15]
00000000000035c3         lea        rdx, qword [rdi+r14+1]
00000000000035c8         lea        r8, qword [rcx+r14]
00000000000035cc         jmp        loc_35dd
00000000000035ce         align      16

                     loc_35d0:
00000000000035d0         add        rdx, 0x1                                    ; CODE XREF=sub_31d0+1046, sub_31d0+1072
00000000000035d4         cmp        r8, rdx
00000000000035d7         je         loc_3419

                     loc_35dd:
00000000000035dd         movzx      ecx, byte [rdx]                             ; CODE XREF=sub_31d0+1020
00000000000035e0         sub        ecx, 0x5b
00000000000035e3         cmp        cl, 0x21
00000000000035e6         ja         loc_35d0

00000000000035e8         mov        esi, 0x1
00000000000035ed         shl        rsi, cl
00000000000035f0         mov        rcx, rsi
00000000000035f3         movabs     rsi, 0x20000002b
00000000000035fd         test       rcx, rsi
0000000000003600         je         loc_35d0

0000000000003602         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003607         mov        r13, qword [rsp+0xe8+var_78]
000000000000360c         mov        rbp, qword [rsp+0xe8+var_B8]
0000000000003611         mov        dword [rsp+0xe8+var_E0], 0x2

                     loc_3619:
0000000000003619         cmp        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_31d0+1227, sub_31d0+1948, sub_31d0+2585, sub_31d0+2734
000000000000361e         je         loc_3630

0000000000003620         test       al, al
0000000000003622         mov        eax, 0x4
0000000000003627         cmove      eax, dword [rsp+0xe8+var_E0]
000000000000362c         mov        dword [rsp+0xe8+var_E0], eax

                     loc_3630:
0000000000003630         sub        rsp, 0x8                                    ; CODE XREF=sub_31d0+1102
0000000000003634         mov        rcx, rbp
0000000000003637         mov        rsi, r13
000000000000363a         push       qword [rsp+0xf0+var_88]
000000000000363e         push       qword [rsp+0xf8+var_80]
0000000000003642         mov        rdi, r14
0000000000003645         push       0x0
0000000000003647         mov        r9d, dword [rsp+0x108+var_70]
000000000000364f         mov        r8d, dword [rsp+0x108+var_E0]
0000000000003654         mov        rdx, qword [rsp+0x108+var_D8]
0000000000003659         and        r9d, 0xfffffffd
000000000000365d         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003662         add        rsp, 0x20
0000000000003666         mov        r15, rax

                     loc_3669:
0000000000003669         mov        rbx, qword [rsp+0xe8+var_40]                ; CODE XREF=sub_31d0+2549, sub_31d0+2560, sub_31d0+2711
0000000000003671         xor        rbx, qword [fs:0x28]
000000000000367a         mov        rax, r15
000000000000367d         jne        loc_3c83

0000000000003683         add        rsp, 0xb8
000000000000368a         pop        rbx
000000000000368b         pop        rbp
000000000000368c         pop        r12
000000000000368e         pop        r13
0000000000003690         pop        r14
0000000000003692         pop        r15
0000000000003694         ret
                        ; endp
0000000000003695         align      8

                     loc_3698:
0000000000003698         mov        rbp, r11                                    ; CODE XREF=sub_2d80+194
000000000000369b         jmp        loc_3619

                     loc_36a0:
00000000000036a0         cmp        r13, r15                                    ; CODE XREF=sub_31d0+206, sub_31d0+220
00000000000036a3         jbe        loc_36aa

00000000000036a5         mov        byte [r14+r15], 0x27

                     loc_36aa:
00000000000036aa         lea        rax, qword [r15+1]                          ; CODE XREF=sub_31d0+1235
00000000000036ae         cmp        r13, rax
00000000000036b1         jbe        loc_36b9

00000000000036b3         mov        byte [r14+r15+1], 0x5c

                     loc_36b9:
00000000000036b9         lea        rax, qword [r15+2]                          ; CODE XREF=sub_31d0+1249
00000000000036bd         cmp        r13, rax
00000000000036c0         jbe        loc_3cb2

00000000000036c6         mov        rdx, r13
00000000000036c9         mov        byte [r14+r15+2], 0x27
00000000000036cf         mov        r13, qword [rsp+arg_48]
00000000000036d4         jmp        loc_32b2

                     loc_36d9:
00000000000036d9         mov        eax, r12d                                   ; CODE XREF=sub_3070+99
00000000000036dc         mov        ebx, 0x30
00000000000036e1         xor        r12d, r12d
00000000000036e4         jmp        sub_2c80+105
                        ; endp

                     loc_36e9:
00000000000036e9         mov        byte [r14+r15+2], 0x27                      ; CODE XREF=sub_3070+67
00000000000036ef         jmp        loc_30b9

                     loc_36f4:
00000000000036f4         test       ebx, ebx                                    ; case 4, CODE XREF=quotearg_buffer_restyled+145
00000000000036f6         jne        loc_2b23

00000000000036fc         mov        byte [rsp+0xe8+var_DB], 0x1

                     loc_3701:
0000000000003701         test       r13, r13                                    ; CODE XREF=sub_31d0+2749
0000000000003704         jne        loc_3c9a

000000000000370a         lea        rax, qword [aLibs+29]                       ; 0x5f7d
0000000000003711         mov        qword [rsp+0xe8+var_98], 0x0
000000000000371a         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000371f         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003724         xor        r12d, r12d
0000000000003727         mov        byte [rsp+0xe8+var_D9], 0x0
000000000000372c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003735         mov        qword [rsp+0xe8+var_A0], rax
000000000000373a         mov        r15d, 0x1
0000000000003740         mov        dword [rsp+0xe8+var_E0], 0x2
0000000000003748         jmp        loc_2b63
000000000000374d         align      16

                     loc_3750:
0000000000003750         test       ebx, ebx                                    ; case 5, CODE XREF=quotearg_buffer_restyled+145
0000000000003752         jne        loc_3b4d

0000000000003758         test       r13, r13
000000000000375b         je         loc_3986

0000000000003761         mov        byte [r14], 0x22
0000000000003765         mov        byte [rsp+0xe8+var_DA], 0x1
000000000000376a         xor        r12d, r12d
000000000000376d         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003772         mov        qword [rsp+0xe8+var_98], 0x0

                     loc_377b:
000000000000377b         lea        rax, qword [aLibs+27]                       ; 0x5f7b, CODE XREF=sub_31d0+1996
0000000000003782         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003787         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000378c         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003795         mov        r15d, 0x1
000000000000379b         mov        qword [rsp+0xe8+var_A0], rax
00000000000037a0         jmp        loc_2b63

                     loc_37a5:
00000000000037a5         lea        rax, qword [aLibs+27]                       ; case 6, 0x5f7b, CODE XREF=quotearg_buffer_restyled+145
00000000000037ac         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000037b1         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000037b6         xor        r12d, r12d
00000000000037b9         mov        qword [rsp+0xe8+var_98], 0x0
00000000000037c2         mov        byte [rsp+0xe8+var_D9], 0x1
00000000000037c7         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000037cc         mov        qword [rsp+0xe8+var_D0], 0x1
00000000000037d5         xor        r15d, r15d
00000000000037d8         mov        qword [rsp+0xe8+var_A0], rax
00000000000037dd         mov        dword [rsp+0xe8+var_E0], 0x5
00000000000037e5         jmp        loc_2b63

                     loc_37ea:
00000000000037ea         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 7, CODE XREF=quotearg_buffer_restyled+145
00000000000037ef         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000037f4         xor        r12d, r12d
00000000000037f7         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003800         mov        byte [rsp+0xe8+var_D9], 0x0
0000000000003805         xor        r15d, r15d
0000000000003808         mov        byte [rsp+0xe8+var_DB], 0x1
000000000000380d         mov        qword [rsp+0xe8+var_D0], 0x0
0000000000003816         mov        qword [rsp+0xe8+var_A0], 0x0
000000000000381f         jmp        loc_2b63

                     loc_3824:
0000000000003824         cmp        dword [rsp+0xe8+var_E0], 0xa                ; case 10, CODE XREF=quotearg_buffer_restyled+145
0000000000003829         je         loc_3881

000000000000382b         lea        rsi, qword [aLibs+31]                       ; argument "msgid" for method j_dcgettext, 0x5f7f
0000000000003832         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000003834         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003839         call       j_dcgettext                                 ; dcgettext
000000000000383e         mov        rcx, rax
0000000000003841         mov        qword [rsp+0xe8+var_80], rax
0000000000003846         lea        rax, qword [aLibs+31]                       ; 0x5f7f
000000000000384d         cmp        rcx, rax
0000000000003850         je         loc_3bee

                     loc_3856:
0000000000003856         lea        rsi, qword [aLibs+29]                       ; argument "msgid" for method j_dcgettext, 0x5f7d, CODE XREF=sub_31d0+2607
000000000000385d         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000385f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000003864         call       j_dcgettext                                 ; dcgettext
0000000000003869         mov        rcx, rax
000000000000386c         mov        qword [rsp+0xe8+var_88], rax
0000000000003871         lea        rax, qword [aLibs+29]                       ; 0x5f7d
0000000000003878         cmp        rcx, rax
000000000000387b         je         loc_3c04

                     loc_3881:
0000000000003881         xor        r15d, r15d                                  ; CODE XREF=sub_31d0+1625, sub_31d0+2629
0000000000003884         test       ebx, ebx
0000000000003886         je         loc_3a4d

                     loc_388c:
000000000000388c         test       ebx, ebx                                    ; CODE XREF=sub_31d0+2183, sub_31d0+2214
000000000000388e         mov        rbx, qword [rsp+0xe8+var_88]
0000000000003893         setne      byte [rsp+0xe8+var_D9]
0000000000003898         xor        r12d, r12d
000000000000389b         mov        rdi, rbx                                    ; argument "__s" for method j_strlen
000000000000389e         call       j_strlen                                    ; strlen
00000000000038a3         mov        qword [rsp+0xe8+var_A0], rbx
00000000000038a8         mov        qword [rsp+0xe8+var_D0], rax
00000000000038ad         mov        byte [rsp+0xe8+var_DA], 0x1
00000000000038b2         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000038b7         mov        qword [rsp+0xe8+var_98], 0x0
00000000000038c0         mov        byte [rsp+0xe8+var_DB], 0x1
00000000000038c5         jmp        loc_2b63

                     loc_38ca:
00000000000038ca         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 0, CODE XREF=quotearg_buffer_restyled+145
00000000000038cf         mov        byte [rsp+0xe8+var_6C], 0x0
00000000000038d4         xor        r12d, r12d
00000000000038d7         mov        qword [rsp+0xe8+var_98], 0x0
00000000000038e0         mov        byte [rsp+0xe8+var_D9], 0x0
00000000000038e5         xor        r15d, r15d
00000000000038e8         mov        byte [rsp+0xe8+var_DB], 0x0
00000000000038ed         mov        qword [rsp+0xe8+var_D0], 0x0
00000000000038f6         mov        qword [rsp+0xe8+var_A0], 0x0
00000000000038ff         jmp        loc_2b63

                     loc_3904:
0000000000003904         mov        byte [rsp+0xe8+var_DA], 0x1                 ; case 3, CODE XREF=quotearg_buffer_restyled+145
0000000000003909         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000390e         xor        r12d, r12d
0000000000003911         mov        qword [rsp+0xe8+var_98], 0x0
000000000000391a         mov        byte [rsp+0xe8+var_D9], 0x1
000000000000391f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003924         jmp        loc_2b43

                     loc_3929:
0000000000003929         cmp        r13, r15                                    ; CODE XREF=sub_3070+133
000000000000392c         jbe        loc_3933

000000000000392e         mov        byte [r14+r15], 0x30

                     loc_3933:
0000000000003933         lea        rax, qword [rcx+2]                          ; CODE XREF=sub_31d0+1884
0000000000003937         cmp        r13, rax
000000000000393a         jbe        loc_3942

000000000000393c         mov        byte [r14+rcx+2], 0x30

                     loc_3942:
0000000000003942         mov        eax, r12d                                   ; CODE XREF=sub_31d0+1898
0000000000003945         lea        r15, qword [rcx+3]
0000000000003949         xor        r12d, r12d
000000000000394c         mov        ebx, 0x30
0000000000003951         jmp        sub_2c80+56
                        ; endp
0000000000003956         align      32

                     loc_3960:
0000000000003960         movzx      ebx, byte [rsp+0xe8+var_D9]                 ; CODE XREF=sub_31d0+731
0000000000003965         mov        rbp, r11
0000000000003968         mov        byte [rsp+0xe8+var_DB], bl
000000000000396c         jmp        loc_3619

                     loc_3971:
0000000000003971         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_2f70+105
0000000000003976         xor        r12d, r12d
0000000000003979         jmp        loc_3480

                     loc_397e:
000000000000397e         xor        r10d, r10d                                  ; CODE XREF=sub_31d0+944
0000000000003981         jmp        loc_353d

                     loc_3986:
0000000000003986         mov        qword [rsp+0xe8+var_98], 0x0                ; CODE XREF=sub_31d0+1419
000000000000398f         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003994         xor        r12d, r12d
0000000000003997         mov        byte [rsp+0xe8+var_6C], 0x0
000000000000399c         jmp        loc_377b

                     loc_39a1:
00000000000039a1         mov        r11, qword [rsp+0xe8+var_B8]                ; CODE XREF=sub_31d0+561
00000000000039a6         mov        rsi, r14
00000000000039a9         mov        rcx, r13
00000000000039ac         mov        rax, rbx
00000000000039af         mov        rdi, rbx
00000000000039b2         movzx      r8d, byte [rsp+0xe8+var_6B]
00000000000039b8         movzx      ebx, byte [rsp+0xe8+var_6A]
00000000000039bd         mov        r9, qword [rsp+0xe8+var_60]
00000000000039c5         cmp        rsi, r11
00000000000039c8         movzx      r10d, byte [rsp+0xe8+var_69]
00000000000039ce         mov        r15, qword [rsp+0xe8+var_68]
00000000000039d6         mov        r14, qword [rsp+0xe8+var_A8]
00000000000039db         mov        r13, qword [rsp+0xe8+var_78]
00000000000039e0         jae        loc_3a08

00000000000039e2         cmp        byte [rcx], 0x0
00000000000039e5         jne        loc_39f7

00000000000039e7         jmp        loc_3a08
00000000000039e9         align      16

                     loc_39f0:
00000000000039f0         cmp        byte [r9+rax], 0x0                          ; CODE XREF=sub_31d0+2099
00000000000039f5         je         loc_3a05

                     loc_39f7:
00000000000039f7         add        rax, 0x1                                    ; CODE XREF=sub_31d0+2069
00000000000039fb         lea        rdx, qword [rbp+rax]
0000000000003a00         cmp        r11, rdx
0000000000003a03         ja         loc_39f0

                     loc_3a05:
0000000000003a05         mov        rdi, rax                                    ; CODE XREF=sub_31d0+2085

                     loc_3a08:
0000000000003a08         movzx      edx, byte [rsp+0xe8+var_DB]                 ; CODE XREF=sub_31d0+2064, sub_31d0+2071
0000000000003a0d         xor        r12d, r12d
0000000000003a10         jmp        loc_3476

                     loc_3a15:
0000000000003a15         mov        rdi, rbx                                    ; CODE XREF=sub_31d0+551
0000000000003a18         movzx      r8d, byte [rsp+0xe8+var_6B]
0000000000003a1e         movzx      ebx, byte [rsp+0xe8+var_6A]
0000000000003a23         movzx      r10d, byte [rsp+0xe8+var_69]
0000000000003a29         mov        r15, qword [rsp+0xe8+var_68]
0000000000003a31         xor        r12d, r12d
0000000000003a34         mov        r14, qword [rsp+0xe8+var_A8]
0000000000003a39         mov        r13, qword [rsp+0xe8+var_78]
0000000000003a3e         mov        r11, qword [rsp+0xe8+var_B8]
0000000000003a43         movzx      edx, byte [rsp+0xe8+var_DB]
0000000000003a48         jmp        loc_3476

                     loc_3a4d:
0000000000003a4d         mov        rdx, qword [rsp+0xe8+var_80]                ; CODE XREF=sub_31d0+1718
0000000000003a52         movzx      eax, byte [rdx]
0000000000003a55         test       al, al
0000000000003a57         je         loc_388c

0000000000003a5d         nop        dword [rax]

                     loc_3a60:
0000000000003a60         cmp        r13, r15                                    ; CODE XREF=sub_31d0+2212
0000000000003a63         jbe        loc_3a69

0000000000003a65         mov        byte [r14+r15], al

                     loc_3a69:
0000000000003a69         add        r15, 0x1                                    ; CODE XREF=sub_31d0+2195
0000000000003a6d         movzx      eax, byte [rdx+r15]
0000000000003a72         test       al, al
0000000000003a74         jne        loc_3a60

0000000000003a76         jmp        loc_388c

                     loc_3a7b:
0000000000003a7b         mov        eax, edx                                    ; CODE XREF=sub_31d0+682
0000000000003a7d         jmp        loc_2fd7

                     loc_3a82:
0000000000003a82         movzx      ebx, byte [rax+rcx]                         ; CODE XREF=sub_31d0+290
0000000000003a86         cmp        bl, 0x3e
0000000000003a89         ja         loc_3300

0000000000003a8f         movabs     rax, 0x7000a38200000000
0000000000003a99         bt         rax, rbx
0000000000003a9d         jae        loc_3300

0000000000003aa3         cmp        byte [rsp+arg_7], 0x0
0000000000003aa8         jne        loc_3c92

0000000000003aae         cmp        r13, r15
0000000000003ab1         jbe        loc_3ab8

0000000000003ab3         mov        byte [r14+r15], 0x3f

                     loc_3ab8:
0000000000003ab8         lea        rax, qword [r15+1]                          ; CODE XREF=sub_31d0+2273
0000000000003abc         cmp        r13, rax
0000000000003abf         jbe        loc_3ac7

0000000000003ac1         mov        byte [r14+r15+1], 0x22

                     loc_3ac7:
0000000000003ac7         lea        rax, qword [r15+2]                          ; CODE XREF=sub_31d0+2287
0000000000003acb         cmp        r13, rax
0000000000003ace         jbe        loc_3ad6

0000000000003ad0         mov        byte [r14+r15+2], 0x22

                     loc_3ad6:
0000000000003ad6         lea        rax, qword [r15+3]                          ; CODE XREF=sub_31d0+2302
0000000000003ada         cmp        r13, rax
0000000000003add         jbe        loc_3ae5

0000000000003adf         mov        byte [r14+r15+3], 0x3f

                     loc_3ae5:
0000000000003ae5         add        r15, 0x4                                    ; CODE XREF=sub_31d0+2317
0000000000003ae9         xor        edx, edx
0000000000003aeb         xor        r12d, r12d
0000000000003aee         xor        eax, eax
0000000000003af0         mov        rbp, rcx
0000000000003af3         jmp        sub_2c80+56
                        ; endp

                     loc_3af8:
0000000000003af8         test       ebx, ebx                                    ; case 2, CODE XREF=quotearg_buffer_restyled+145
0000000000003afa         je         loc_3c88

0000000000003b00         lea        rax, qword [aLibs+29]                       ; 0x5f7d
0000000000003b07         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003b0c         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003b11         xor        r12d, r12d
0000000000003b14         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003b1d         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003b22         mov        byte [rsp+0xe8+var_DB], 0x0
0000000000003b27         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003b30         xor        r15d, r15d
0000000000003b33         mov        qword [rsp+0xe8+var_A0], rax
0000000000003b38         jmp        loc_2b63
0000000000003b3d         align      64

                     loc_3b40:
0000000000003b40         mov        rbp, r11                                    ; CODE XREF=sub_31d0+333
0000000000003b43         movzx      eax, byte [rsp+arg_7]
0000000000003b48         jmp        sub_31d0+1097
                        ; endp

                     loc_3b4d:
0000000000003b4d         lea        rax, qword [aLibs+27]                       ; 0x5f7b, CODE XREF=sub_31d0+1410
0000000000003b54         mov        byte [rsp+0xe8+var_DA], 0x1
0000000000003b59         mov        byte [rsp+0xe8+var_6C], 0x0
0000000000003b5e         xor        r12d, r12d
0000000000003b61         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003b6a         mov        byte [rsp+0xe8+var_D9], 0x1
0000000000003b6f         mov        byte [rsp+0xe8+var_DB], 0x1
0000000000003b74         mov        qword [rsp+0xe8+var_D0], 0x1
0000000000003b7d         xor        r15d, r15d
0000000000003b80         mov        qword [rsp+0xe8+var_A0], rax
0000000000003b85         jmp        loc_2b63

                     loc_3b8a:
0000000000003b8a         mov        eax, edx                                    ; CODE XREF=sub_31d0+87

                     loc_3b8c:
0000000000003b8c         mov        rbx, qword [rsp+0xe8+var_A0]                ; CODE XREF=sub_31d0+76, sub_31d0+2721
0000000000003b91         test       rbx, rbx
0000000000003b94         je         loc_3bc2

0000000000003b96         test       al, al
0000000000003b98         je         loc_3bc2

0000000000003b9a         movzx      ecx, byte [rbx]
0000000000003b9d         mov        rax, rbx
0000000000003ba0         test       cl, cl
0000000000003ba2         je         loc_3bc2

0000000000003ba4         mov        rdx, r15
0000000000003ba7         sub        rax, r15

                     loc_3baa:
0000000000003baa         cmp        r13, rdx                                    ; CODE XREF=sub_31d0+2541
0000000000003bad         jbe        loc_3bb3

0000000000003baf         mov        byte [r14+rdx], cl

                     loc_3bb3:
0000000000003bb3         add        rdx, 0x1                                    ; CODE XREF=sub_31d0+2525
0000000000003bb7         movzx      ecx, byte [rax+rdx]
0000000000003bbb         test       cl, cl
0000000000003bbd         jne        loc_3baa

0000000000003bbf         mov        r15, rdx

                     loc_3bc2:
0000000000003bc2         cmp        r13, r15                                    ; CODE XREF=sub_31d0+2500, sub_31d0+2504, sub_31d0+2514
0000000000003bc5         jbe        loc_3669

0000000000003bcb         mov        byte [r14+r15], 0x0
0000000000003bd0         jmp        loc_3669

                     loc_3bd5:
0000000000003bd5         cmp        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=quotearg_buffer_restyled+450
0000000000003bda         movzx      ebx, byte [rsp+0xe8+var_D9]
0000000000003bdf         mov        rbp, r11
0000000000003be2         sete       al
0000000000003be5         mov        byte [rsp+0xe8+var_DB], bl
0000000000003be9         jmp        loc_3619

                     loc_3bee:
0000000000003bee         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_31d0+1664
0000000000003bf2         mov        rdi, rcx
0000000000003bf5         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000003bfa         mov        qword [rsp+0xe8+var_80], rax
0000000000003bff         jmp        loc_3856

                     loc_3c04:
0000000000003c04         mov        esi, dword [rsp+0xe8+var_E0]                ; CODE XREF=sub_31d0+1707
0000000000003c08         mov        rdi, rcx
0000000000003c0b         call       gettext_quote.part.1                        ; gettext_quote.part.1
0000000000003c10         mov        qword [rsp+0xe8+var_88], rax
0000000000003c15         jmp        loc_3881

                     loc_3c1a:
0000000000003c1a         movzx      ebx, byte [rsp+arg_7]                       ; CODE XREF=sub_3070+16
0000000000003c1f         mov        rbp, r11
0000000000003c22         mov        eax, edx
0000000000003c24         mov        byte [rsp+arg_5], bl
0000000000003c28         jmp        sub_31d0+1097
                        ; endp

                     loc_3c2d:
0000000000003c2d         sub        rsp, 0x8                                    ; CODE XREF=sub_31d0+98
0000000000003c31         mov        r8d, 0x5
0000000000003c37         mov        rcx, r11
0000000000003c3a         push       qword [rsp+0xf0+var_88]
0000000000003c3e         push       qword [rsp+0xf8+var_80]
0000000000003c42         mov        rdi, r14
0000000000003c45         push       qword [rsp+0x100+var_C8]
0000000000003c49         mov        r9d, dword [rsp+0x108+var_70]
0000000000003c51         mov        rdx, qword [rsp+0x108+var_D8]
0000000000003c56         mov        rsi, qword [rsp+0x108+var_98]
0000000000003c5b         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003c60         add        rsp, 0x20
0000000000003c64         mov        r15, rax
0000000000003c67         jmp        loc_3669

                     loc_3c6c:
0000000000003c6c         movzx      eax, byte [rsp+0xe8+var_6C]                 ; CODE XREF=sub_31d0+121
0000000000003c71         jmp        loc_3b8c

                     loc_3c76:
0000000000003c76         mov        dword [rsp+0xe8+var_E0], 0x2                ; CODE XREF=sub_31d0+63
0000000000003c7e         jmp        loc_3619

                     loc_3c83:
0000000000003c83         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=sub_31d0+1197
                        ; endp

                     loc_3c88:
0000000000003c88         mov        byte [rsp+0xe8+var_DB], 0x0                 ; CODE XREF=sub_31d0+2346
0000000000003c8d         jmp        loc_3701

                     loc_3c92:
0000000000003c92         mov        rbp, r11                                    ; CODE XREF=sub_31d0+2264
0000000000003c95         jmp        sub_31d0+1120
                        ; endp

                     loc_3c9a:
0000000000003c9a         mov        byte [rsp+0xe8+var_DA], 0x1                 ; CODE XREF=sub_31d0+1332
0000000000003c9f         xor        eax, eax
0000000000003ca1         xor        r12d, r12d
0000000000003ca4         mov        qword [rsp+0xe8+var_98], 0x0
0000000000003cad         jmp        loc_3254

                     loc_3cb2:
0000000000003cb2         mov        rdx, r13                                    ; CODE XREF=sub_31d0+1264
0000000000003cb5         mov        r13, qword [rsp+arg_48]
0000000000003cba         jmp        loc_32b2

                     loc_3cbf:
0000000000003cbf         call       j_abort                                     ; abort, CODE XREF=quotearg_buffer_restyled+122
                        ; endp
0000000000003cc4         align      16                                          ; End of unwind block (FDE at 0x6db8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_3C: int32_t, -60
        ;    var_40: int32_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80


                     quotearg_n_options:
0000000000003cd0         push       r15                                         ; Begin of unwind block (FDE at 0x6e30), CODE XREF=quotearg_n+14, quotearg_n_mem+7, quotearg+19, quotearg_mem+15, quotearg_n_style+106, quotearg_n_style_mem+102, quotearg_char_mem+121, quotearg_n_style_colon+106, quotearg_n_custom_mem+109, quote_n_mem+7, quote_mem+15
0000000000003cd2         push       r14
0000000000003cd4         movsxd     r15, edi
0000000000003cd7         push       r13
0000000000003cd9         push       r12
0000000000003cdb         mov        r14, rdx
0000000000003cde         push       rbp
0000000000003cdf         push       rbx
0000000000003ce0         mov        rbp, rcx
0000000000003ce3         sub        rsp, 0x28
0000000000003ce7         mov        qword [rsp+0x58+var_50], rsi
0000000000003cec         call       j___errno_location                          ; __errno_location
0000000000003cf1         mov        r13, rax
0000000000003cf4         mov        eax, dword [rax]
0000000000003cf6         test       r15d, r15d
0000000000003cf9         mov        rbx, qword [slotvec]                        ; slotvec
0000000000003d00         mov        dword [rsp+0x58+var_40], eax
0000000000003d04         js         loc_3e71

0000000000003d0a         cmp        dword [nslots], r15d                        ; nslots
0000000000003d11         jg         loc_3d75

0000000000003d13         cmp        r15d, 0x7fffffff
0000000000003d1a         je         loc_3e76

0000000000003d20         lea        r12d, dword [r15+1]
0000000000003d24         lea        rax, qword [slotvec0]                       ; slotvec0
0000000000003d2b         movsxd     rsi, r12d
0000000000003d2e         shl        rsi, 0x4
0000000000003d32         cmp        rbx, rax
0000000000003d35         je         loc_3e50

0000000000003d3b         mov        rdi, rbx                                    ; argument #1 for method xrealloc
0000000000003d3e         call       xrealloc                                    ; xrealloc
0000000000003d43         mov        rbx, rax
0000000000003d46         mov        qword [slotvec], rax                        ; slotvec

                     loc_3d4d:
0000000000003d4d         movsxd     rdi, dword [nslots]                         ; nslots, CODE XREF=quotearg_n_options+412
0000000000003d54         mov        edx, r12d
0000000000003d57         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000003d59         sub        edx, edi
0000000000003d5b         shl        rdi, 0x4
0000000000003d5f         movsxd     rdx, edx
0000000000003d62         add        rdi, rbx                                    ; argument "__s" for method j_memset
0000000000003d65         shl        rdx, 0x4                                    ; argument "__n" for method j_memset
0000000000003d69         call       j_memset                                    ; memset
0000000000003d6e         mov        dword [nslots], r12d                        ; nslots

                     loc_3d75:
0000000000003d75         mov        eax, dword [rbp+4]                          ; CODE XREF=quotearg_n_options+65
0000000000003d78         shl        r15, 0x4
0000000000003d7c         sub        rsp, 0x8
0000000000003d80         add        rbx, r15
0000000000003d83         lea        r15, qword [rbp+8]
0000000000003d87         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000003d8b         mov        r11, qword [rbx]
0000000000003d8e         mov        r12, qword [rbx+8]
0000000000003d92         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000003d95         or         eax, 0x1
0000000000003d98         mov        dword [rsp+0x60+var_3C], eax
0000000000003d9c         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000003d9f         mov        r9d, eax                                    ; argument #6 for method quotearg_buffer_restyled
0000000000003da2         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000003da5         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000003da7         mov        rsi, r11                                    ; argument #2 for method quotearg_buffer_restyled
0000000000003daa         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000003daf         mov        rdi, r12                                    ; argument #1 for method quotearg_buffer_restyled
0000000000003db2         mov        qword [rsp+0x78+var_48], r11
0000000000003db7         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003dbc         add        rsp, 0x20
0000000000003dc0         mov        r11, qword [rsp+0x58+var_48]
0000000000003dc5         cmp        r11, rax
0000000000003dc8         ja         loc_3e31

0000000000003dca         lea        rsi, qword [rax+1]
0000000000003dce         lea        rax, qword [slot0]                          ; slot0
0000000000003dd5         cmp        r12, rax
0000000000003dd8         mov        qword [rbx], rsi
0000000000003ddb         je         loc_3def

0000000000003ddd         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000003de0         mov        qword [rsp+0x58+var_48], rsi
0000000000003de5         call       j_free                                      ; free
0000000000003dea         mov        rsi, qword [rsp+0x58+var_48]

                     loc_3def:
0000000000003def         mov        rdi, rsi                                    ; argument #1 for method xmalloc, CODE XREF=quotearg_n_options+267
0000000000003df2         mov        qword [rsp+0x58+var_48], rsi
0000000000003df7         call       xmalloc                                     ; xmalloc
0000000000003dfc         sub        rsp, 0x8
0000000000003e00         mov        qword [rbx+8], rax
0000000000003e04         mov        r8d, dword [rbp]                            ; argument #5 for method quotearg_buffer_restyled
0000000000003e08         push       qword [rbp+0x30]                            ; argument #9 for method quotearg_buffer_restyled
0000000000003e0b         push       qword [rbp+0x28]                            ; argument #8 for method quotearg_buffer_restyled
0000000000003e0e         mov        rcx, r14                                    ; argument #4 for method quotearg_buffer_restyled
0000000000003e11         push       r15                                         ; argument #7 for method quotearg_buffer_restyled
0000000000003e13         mov        r9d, dword [rsp+0x78+var_3C]                ; argument #6 for method quotearg_buffer_restyled
0000000000003e18         mov        rdi, rax                                    ; argument #1 for method quotearg_buffer_restyled
0000000000003e1b         mov        rdx, qword [rsp+0x78+var_50]                ; argument #3 for method quotearg_buffer_restyled
0000000000003e20         mov        rsi, qword [rsp+0x78+var_48]                ; argument #2 for method quotearg_buffer_restyled
0000000000003e25         mov        r12, rax
0000000000003e28         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003e2d         add        rsp, 0x20

                     loc_3e31:
0000000000003e31         mov        eax, dword [rsp+0x58+var_40]                ; CODE XREF=quotearg_n_options+248
0000000000003e35         mov        dword [r13], eax
0000000000003e39         add        rsp, 0x28
0000000000003e3d         mov        rax, r12
0000000000003e40         pop        rbx
0000000000003e41         pop        rbp
0000000000003e42         pop        r12
0000000000003e44         pop        r13
0000000000003e46         pop        r14
0000000000003e48         pop        r15
0000000000003e4a         ret
                        ; endp
0000000000003e4b         align      16

                     loc_3e50:
0000000000003e50         xor        edi, edi                                    ; argument #1 for method xrealloc, CODE XREF=quotearg_n_options+101
0000000000003e52         call       xrealloc                                    ; xrealloc
0000000000003e57         movdqa     xmm0, xmmword [slotvec0]                    ; slotvec0
0000000000003e5f         mov        rbx, rax
0000000000003e62         mov        qword [slotvec], rax                        ; slotvec
0000000000003e69         movups     xmmword [rax], xmm0
0000000000003e6c         jmp        loc_3d4d

                     loc_3e71:
0000000000003e71         call       j_abort                                     ; abort, CODE XREF=quotearg_n_options+52
                        ; endp

                     loc_3e76:
0000000000003e76         call       xalloc_die                                  ; xalloc_die, CODE XREF=quotearg_n_options+74
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_3e7b:
0000000000003e7b         nop        dword [rax+rax]                             ; End of unwind block (FDE at 0x6e30)
                     clone_quoting_options:
0000000000003e80         push       r12                                         ; Begin of unwind block (FDE at 0x6e9c)
0000000000003e82         push       rbp
0000000000003e83         push       rbx
0000000000003e84         mov        rbx, rdi
0000000000003e87         call       j___errno_location                          ; __errno_location
0000000000003e8c         mov        r12d, dword [rax]
0000000000003e8f         mov        rbp, rax
0000000000003e92         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000003e99         test       rbx, rbx
0000000000003e9c         mov        esi, 0x38
0000000000003ea1         cmove      rbx, rax
0000000000003ea5         mov        rdi, rbx
0000000000003ea8         call       xmemdup                                     ; xmemdup
0000000000003ead         mov        dword [rbp], r12d
0000000000003eb1         pop        rbx
0000000000003eb2         pop        rbp
0000000000003eb3         pop        r12
0000000000003eb5         ret
                        ; endp
0000000000003eb6         align      64                                          ; End of unwind block (FDE at 0x6e9c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     get_quoting_style:
0000000000003ec0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6ec8), default_quoting_options
0000000000003ec7         test       rdi, rdi
0000000000003eca         cmove      rdi, rax
0000000000003ece         mov        eax, dword [rdi]
0000000000003ed0         ret
                        ; endp
0000000000003ed1         align      32                                          ; End of unwind block (FDE at 0x6ec8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_style:
0000000000003ee0         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6edc), default_quoting_options
0000000000003ee7         test       rdi, rdi
0000000000003eea         cmove      rdi, rax
0000000000003eee         mov        dword [rdi], esi
0000000000003ef0         ret
                        ; endp
0000000000003ef1         align      256                                         ; End of unwind block (FDE at 0x6edc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_char_quoting:
0000000000003f00         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6ef0), default_quoting_options
0000000000003f07         test       rdi, rdi
0000000000003f0a         mov        ecx, esi
0000000000003f0c         cmove      rdi, rax
0000000000003f10         mov        eax, esi
0000000000003f12         and        ecx, 0x1f
0000000000003f15         shr        al, 0x5
0000000000003f18         movzx      eax, al
0000000000003f1b         lea        rdi, qword [rdi+rax*4+8]
0000000000003f20         mov        esi, dword [rdi]
0000000000003f22         mov        eax, esi
0000000000003f24         shr        eax, cl
0000000000003f26         xor        edx, eax
0000000000003f28         and        eax, 0x1
0000000000003f2b         and        edx, 0x1
0000000000003f2e         shl        edx, cl
0000000000003f30         xor        edx, esi
0000000000003f32         mov        dword [rdi], edx
0000000000003f34         ret
                        ; endp
0000000000003f35         align      64                                          ; End of unwind block (FDE at 0x6ef0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_quoting_flags:
0000000000003f40         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6f04), default_quoting_options
0000000000003f47         test       rdi, rdi
0000000000003f4a         cmove      rdi, rax
0000000000003f4e         mov        eax, dword [rdi+4]
0000000000003f51         mov        dword [rdi+4], esi
0000000000003f54         ret
                        ; endp
0000000000003f55         align      32                                          ; End of unwind block (FDE at 0x6f04)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     set_custom_quoting:
0000000000003f60         lea        rax, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x6f18), default_quoting_options
0000000000003f67         test       rdi, rdi
0000000000003f6a         cmove      rdi, rax
0000000000003f6e         test       rsi, rsi
0000000000003f71         mov        dword [rdi], 0xa
0000000000003f77         je         loc_3f87

0000000000003f79         test       rdx, rdx
0000000000003f7c         je         loc_3f87

0000000000003f7e         mov        qword [rdi+0x28], rsi
0000000000003f82         mov        qword [rdi+0x30], rdx
0000000000003f86         ret
                        ; endp

                     loc_3f87:
0000000000003f87         sub        rsp, 0x8                                    ; CODE XREF=set_custom_quoting+23, set_custom_quoting+28
0000000000003f8b         call       j_abort                                     ; abort
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64


                     quotearg_buffer:
0000000000003f90         push       r15                                         ; End of unwind block (FDE at 0x6f18), Begin of unwind block (FDE at 0x6f2c)
0000000000003f92         push       r14
0000000000003f94         lea        rax, qword [default_quoting_options]        ; default_quoting_options
0000000000003f9b         push       r13
0000000000003f9d         push       r12
0000000000003f9f         mov        r13, rdi
0000000000003fa2         push       rbp
0000000000003fa3         push       rbx
0000000000003fa4         mov        rbx, r8
0000000000003fa7         mov        r14, rsi
0000000000003faa         mov        r15, rdx
0000000000003fad         sub        rsp, 0x18
0000000000003fb1         test       r8, r8
0000000000003fb4         cmove      rbx, rax
0000000000003fb8         mov        qword [rsp+0x48+var_40], rcx
0000000000003fbd         call       j___errno_location                          ; __errno_location
0000000000003fc2         mov        r12d, dword [rax]
0000000000003fc5         mov        rbp, rax
0000000000003fc8         lea        rax, qword [rbx+8]
0000000000003fcc         sub        rsp, 0x8
0000000000003fd0         mov        r9d, dword [rbx+4]
0000000000003fd4         push       qword [rbx+0x30]
0000000000003fd7         mov        r8d, dword [rbx]
0000000000003fda         push       qword [rbx+0x28]
0000000000003fdd         mov        rdx, r15
0000000000003fe0         push       rax
0000000000003fe1         mov        rcx, qword [rsp+0x68+var_40]
0000000000003fe6         mov        rsi, r14
0000000000003fe9         mov        rdi, r13
0000000000003fec         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
0000000000003ff1         mov        dword [rbp], r12d
0000000000003ff5         add        rsp, 0x38
0000000000003ff9         pop        rbx
0000000000003ffa         pop        rbp
0000000000003ffb         pop        r12
0000000000003ffd         pop        r13
0000000000003fff         pop        r14
0000000000004001         pop        r15
0000000000004003         ret
                        ; endp
0000000000004004         align      16                                          ; End of unwind block (FDE at 0x6f2c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88
        ;    var_5C: int32_t, -92


                     quotearg_alloc_mem:
0000000000004010         push       r15                                         ; Begin of unwind block (FDE at 0x6f80), CODE XREF=quotearg_alloc+5
0000000000004012         push       r14
0000000000004014         lea        rax, qword [default_quoting_options]        ; default_quoting_options
000000000000401b         push       r13
000000000000401d         push       r12
000000000000401f         mov        r12, rdx
0000000000004022         push       rbp
0000000000004023         push       rbx
0000000000004024         mov        rbx, rcx
0000000000004027         mov        r14, rdi
000000000000402a         mov        r15, rsi
000000000000402d         sub        rsp, 0x38
0000000000004031         test       rcx, rcx
0000000000004034         cmove      rbx, rax
0000000000004038         xor        ebp, ebp
000000000000403a         call       j___errno_location                          ; __errno_location
000000000000403f         test       r12, r12
0000000000004042         mov        r13, rax
0000000000004045         mov        eax, dword [rax]
0000000000004047         sete       bpl
000000000000404b         or         ebp, dword [rbx+4]
000000000000404e         lea        r10, qword [rbx+8]
0000000000004052         sub        rsp, 0x8
0000000000004056         mov        r8d, dword [rbx]
0000000000004059         mov        rcx, r15
000000000000405c         mov        dword [rsp+0x70+var_5C], eax
0000000000004060         push       qword [rbx+0x30]
0000000000004063         mov        rdx, r14
0000000000004066         push       qword [rbx+0x28]
0000000000004069         push       r10
000000000000406b         xor        esi, esi
000000000000406d         mov        r9d, ebp
0000000000004070         xor        edi, edi
0000000000004072         mov        qword [rsp+0x88+var_48], r10
0000000000004077         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
000000000000407c         lea        rsi, qword [rax+1]
0000000000004080         mov        qword [rsp+0x88+var_40], rax
0000000000004085         add        rsp, 0x20
0000000000004089         mov        rdi, rsi
000000000000408c         mov        qword [rsp+0x68+var_50], rsi
0000000000004091         call       xmalloc                                     ; xmalloc
0000000000004096         mov        qword [rsp+0x68+var_58], rax
000000000000409b         sub        rsp, 0x8
000000000000409f         push       qword [rbx+0x30]
00000000000040a2         push       qword [rbx+0x28]
00000000000040a5         mov        r10, qword [rsp+0x80+var_48]
00000000000040aa         mov        r9d, ebp
00000000000040ad         mov        r8d, dword [rbx]
00000000000040b0         mov        rcx, r15
00000000000040b3         mov        rdx, r14
00000000000040b6         mov        rdi, rax
00000000000040b9         push       r10
00000000000040bb         mov        rsi, qword [rsp+0x88+var_50]
00000000000040c0         call       quotearg_buffer_restyled                    ; quotearg_buffer_restyled
00000000000040c5         mov        eax, dword [rsp+0x88+var_5C]
00000000000040c9         add        rsp, 0x20
00000000000040cd         test       r12, r12
00000000000040d0         mov        dword [r13], eax
00000000000040d4         je         loc_40df

00000000000040d6         mov        r11, qword [rsp+0x68+var_40]
00000000000040db         mov        qword [r12], r11

                     loc_40df:
00000000000040df         mov        rax, qword [rsp+0x68+var_58]                ; CODE XREF=quotearg_alloc_mem+196
00000000000040e4         add        rsp, 0x38
00000000000040e8         pop        rbx
00000000000040e9         pop        rbp
00000000000040ea         pop        r12
00000000000040ec         pop        r13
00000000000040ee         pop        r14
00000000000040f0         pop        r15
00000000000040f2         ret
                        ; endp
00000000000040f3         align      256                                         ; End of unwind block (FDE at 0x6f80)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_alloc:
0000000000004100         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x6fec)
0000000000004103         xor        edx, edx
0000000000004105         jmp        quotearg_alloc_mem                          ; quotearg_alloc_mem
                        ; endp
000000000000410a         align      16                                          ; End of unwind block (FDE at 0x6fec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_free:
0000000000004110         mov        eax, dword [nslots]                         ; Begin of unwind block (FDE at 0x7000), nslots
0000000000004116         push       r12
0000000000004118         mov        r12, qword [slotvec]                        ; slotvec
000000000000411f         push       rbp
0000000000004120         push       rbx
0000000000004121         cmp        eax, 0x1
0000000000004124         jle        loc_4151

0000000000004126         sub        eax, 0x2
0000000000004129         lea        rbx, qword [r12+0x18]
000000000000412e         shl        rax, 0x4
0000000000004132         lea        rbp, qword [r12+rax+0x28]
0000000000004137         nop        word [rax+rax]

                     loc_4140:
0000000000004140         mov        rdi, qword [rbx]                            ; argument "__ptr" for method j_free, CODE XREF=quotearg_free+63
0000000000004143         add        rbx, 0x10
0000000000004147         call       j_free                                      ; free
000000000000414c         cmp        rbx, rbp
000000000000414f         jne        loc_4140

                     loc_4151:
0000000000004151         mov        rdi, qword [r12+8]                          ; CODE XREF=quotearg_free+20
0000000000004156         lea        rbx, qword [slot0]                          ; slot0
000000000000415d         cmp        rdi, rbx
0000000000004160         je         loc_4179

0000000000004162         call       j_free                                      ; free
0000000000004167         mov        qword [slotvec0], 0x100                     ; slotvec0
0000000000004172         mov        qword [slotvec0+8], rbx                     ; 0x208078

                     loc_4179:
0000000000004179         lea        rbx, qword [slotvec0]                       ; slotvec0, CODE XREF=quotearg_free+80
0000000000004180         cmp        r12, rbx
0000000000004183         je         loc_4194

0000000000004185         mov        rdi, r12                                    ; argument "__ptr" for method j_free
0000000000004188         call       j_free                                      ; free
000000000000418d         mov        qword [slotvec], rbx                        ; slotvec

                     loc_4194:
0000000000004194         pop        rbx                                         ; CODE XREF=quotearg_free+115
0000000000004195         mov        dword [nslots], 0x1                         ; nslots
000000000000419f         pop        rbp
00000000000041a0         pop        r12
00000000000041a2         ret
                        ; endp
00000000000041a3         align      16                                          ; End of unwind block (FDE at 0x7000)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n:
00000000000041b0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x702c), default_quoting_options
00000000000041b7         mov        rdx, 0xffffffffffffffff
00000000000041be         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000041c3         align      16                                          ; End of unwind block (FDE at 0x702c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_n_mem:
00000000000041d0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7040), default_quoting_options
00000000000041d7         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000041dc         align      32                                          ; End of unwind block (FDE at 0x7040)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg:
00000000000041e0         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7054), default_quoting_options
00000000000041e7         mov        rsi, rdi
00000000000041ea         mov        rdx, 0xffffffffffffffff
00000000000041f1         xor        edi, edi
00000000000041f3         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000041f8         align      512                                         ; End of unwind block (FDE at 0x7054)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_mem:
0000000000004200         lea        rcx, qword [default_quoting_options]        ; Begin of unwind block (FDE at 0x7068), default_quoting_options
0000000000004207         mov        rdx, rsi
000000000000420a         mov        rsi, rdi
000000000000420d         xor        edi, edi
000000000000420f         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004214         align      32                                          ; End of unwind block (FDE at 0x7068)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style:
0000000000004220         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x707c)
0000000000004224         mov        rax, rdx
0000000000004227         mov        rdx, qword [fs:0x28]
0000000000004230         mov        qword [rsp+0x48+var_10], rdx
0000000000004235         xor        edx, edx
0000000000004237         cmp        esi, 0xa
000000000000423a         je         loc_42a4

000000000000423c         mov        dword [rsp+0x48+var_48], esi
000000000000423f         mov        rcx, rsp
0000000000004242         mov        rdx, 0xffffffffffffffff
0000000000004249         mov        rsi, rax
000000000000424c         mov        qword [rsp+0x48+var_44], 0x0
0000000000004255         mov        qword [rsp+0x48+var_3C], 0x0
000000000000425e         mov        qword [rsp+0x48+var_34], 0x0
0000000000004267         mov        qword [rsp+0x48+var_2C], 0x0
0000000000004270         mov        qword [rsp+0x48+var_24], 0x0
0000000000004279         mov        qword [rsp+0x48+var_1C], 0x0
0000000000004282         mov        dword [rsp+0x48+var_14], 0x0
000000000000428a         call       quotearg_n_options                          ; quotearg_n_options
000000000000428f         mov        rcx, qword [rsp+0x48+var_10]
0000000000004294         xor        rcx, qword [fs:0x28]
000000000000429d         jne        loc_42a9

000000000000429f         add        rsp, 0x48
00000000000042a3         ret
                        ; endp

                     loc_42a4:
00000000000042a4         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style+26
                        ; endp

                     loc_42a9:
00000000000042a9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style+125
                        ; endp
00000000000042ae         align      16                                          ; End of unwind block (FDE at 0x707c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_mem:
00000000000042b0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x7098), CODE XREF=quotearg_style_mem+10
00000000000042b4         mov        rax, rdx
00000000000042b7         mov        rdx, rcx
00000000000042ba         mov        rcx, qword [fs:0x28]
00000000000042c3         mov        qword [rsp+0x48+var_10], rcx
00000000000042c8         xor        ecx, ecx
00000000000042ca         cmp        esi, 0xa
00000000000042cd         je         loc_4330

00000000000042cf         mov        dword [rsp+0x48+var_48], esi
00000000000042d2         mov        rcx, rsp
00000000000042d5         mov        rsi, rax
00000000000042d8         mov        qword [rsp+0x48+var_44], 0x0
00000000000042e1         mov        qword [rsp+0x48+var_3C], 0x0
00000000000042ea         mov        qword [rsp+0x48+var_34], 0x0
00000000000042f3         mov        qword [rsp+0x48+var_2C], 0x0
00000000000042fc         mov        qword [rsp+0x48+var_24], 0x0
0000000000004305         mov        qword [rsp+0x48+var_1C], 0x0
000000000000430e         mov        dword [rsp+0x48+var_14], 0x0
0000000000004316         call       quotearg_n_options                          ; quotearg_n_options
000000000000431b         mov        rdx, qword [rsp+0x48+var_10]
0000000000004320         xor        rdx, qword [fs:0x28]
0000000000004329         jne        loc_4335

000000000000432b         add        rsp, 0x48
000000000000432f         ret
                        ; endp

                     loc_4330:
0000000000004330         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_mem+29
                        ; endp

                     loc_4335:
0000000000004335         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_mem+121
                        ; endp
000000000000433a         align      64                                          ; End of unwind block (FDE at 0x7098)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style:
0000000000004340         mov        rdx, rsi                                    ; Begin of unwind block (FDE at 0x70b4), CODE XREF=main+1446
0000000000004343         mov        esi, edi
0000000000004345         xor        edi, edi
0000000000004347         jmp        quotearg_n_style                            ; quotearg_n_style
                        ; endp
000000000000434c         align      16                                          ; End of unwind block (FDE at 0x70b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_style_mem:
0000000000004350         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x70c8)
0000000000004353         mov        rdx, rsi
0000000000004356         mov        esi, edi
0000000000004358         xor        edi, edi
000000000000435a         jmp        quotearg_n_style_mem                        ; quotearg_n_style_mem
                        ; endp
000000000000435f         align      32                                          ; End of unwind block (FDE at 0x70c8)

                     quotearg_char_mem:
0000000000004360         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x70dc), CODE XREF=quotearg_char+11
0000000000004364         mov        ecx, edx
0000000000004366         mov        rax, qword [fs:0x28]
000000000000436f         mov        qword [rsp+0x48+var_10], rax
0000000000004374         xor        eax, eax
0000000000004376         mov        rax, qword [qword_208230]                   ; qword_208230
000000000000437d         mov        r8, rsp
0000000000004380         and        ecx, 0x1f
0000000000004383         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
000000000000438b         mov        qword [rsp+0x48+var_18], rax
0000000000004390         mov        eax, edx
0000000000004392         movaps     xmmword [rsp+0x48+var_48], xmm0
0000000000004396         shr        al, 0x5
0000000000004399         movzx      eax, al
000000000000439c         lea        r9, qword [r8+rax*4+8]
00000000000043a1         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x208210
00000000000043a9         movaps     xmmword [rsp+0x48+var_38], xmm0
00000000000043ae         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x208220
00000000000043b6         movaps     xmmword [rsp+0x48+var_28], xmm0
00000000000043bb         mov        edx, dword [r9]
00000000000043be         mov        eax, edx
00000000000043c0         shr        eax, cl
00000000000043c2         not        eax
00000000000043c4         and        eax, 0x1
00000000000043c7         shl        eax, cl
00000000000043c9         mov        rcx, r8
00000000000043cc         xor        eax, edx
00000000000043ce         mov        rdx, rsi
00000000000043d1         mov        rsi, rdi
00000000000043d4         mov        dword [r9], eax
00000000000043d7         xor        edi, edi
00000000000043d9         call       quotearg_n_options                          ; quotearg_n_options
00000000000043de         mov        rsi, qword [rsp+0x48+var_10]
00000000000043e3         xor        rsi, qword [fs:0x28]
00000000000043ec         jne        loc_43f3

00000000000043ee         add        rsp, 0x48
00000000000043f2         ret
                        ; endp

                     loc_43f3:
00000000000043f3         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_char_mem+140
                        ; endp
00000000000043f8         align      1024                                        ; End of unwind block (FDE at 0x70dc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: -72


                     quotearg_char:
0000000000004400         movsx      edx, sil                                    ; Begin of unwind block (FDE at 0x70f8)
0000000000004404         mov        rsi, 0xffffffffffffffff
000000000000440b         jmp        quotearg_char_mem                           ; quotearg_char_mem


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon:
0000000000004410         mov        edx, 0x3a                                   ; End of unwind block (FDE at 0x70f8), Begin of unwind block (FDE at 0x710c), CODE XREF=close_stdout+101
0000000000004415         mov        rsi, 0xffffffffffffffff
000000000000441c         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
0000000000004421         align      16                                          ; End of unwind block (FDE at 0x710c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_colon_mem:
0000000000004430         mov        edx, 0x3a                                   ; Begin of unwind block (FDE at 0x7120)
0000000000004435         jmp        quotearg_char_mem                           ; quotearg_char_mem
                        ; endp
000000000000443a         align      64                                          ; End of unwind block (FDE at 0x7120)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_14: int32_t, -20
        ;    var_1C: int64_t, -28
        ;    var_24: int64_t, -36
        ;    var_2C: int64_t, -44
        ;    var_34: int64_t, -52
        ;    var_3C: int64_t, -60
        ;    var_44: int64_t, -68
        ;    var_48: int32_t, -72


                     quotearg_n_style_colon:
0000000000004440         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x7134), CODE XREF=main+1062, main+1393
0000000000004444         mov        rax, rdx
0000000000004447         mov        rdx, qword [fs:0x28]
0000000000004450         mov        qword [rsp+0x48+var_10], rdx
0000000000004455         xor        edx, edx
0000000000004457         cmp        esi, 0xa
000000000000445a         je         loc_44c4

000000000000445c         mov        dword [rsp+0x48+var_48], esi
000000000000445f         mov        rcx, rsp
0000000000004462         mov        rdx, 0xffffffffffffffff
0000000000004469         mov        rsi, rax
000000000000446c         mov        qword [rsp+0x48+var_44], 0x0
0000000000004475         mov        qword [rsp+0x48+var_3C], 0x4000000
000000000000447e         mov        qword [rsp+0x48+var_34], 0x0
0000000000004487         mov        qword [rsp+0x48+var_2C], 0x0
0000000000004490         mov        qword [rsp+0x48+var_24], 0x0
0000000000004499         mov        qword [rsp+0x48+var_1C], 0x0
00000000000044a2         mov        dword [rsp+0x48+var_14], 0x0
00000000000044aa         call       quotearg_n_options                          ; quotearg_n_options
00000000000044af         mov        rcx, qword [rsp+0x48+var_10]
00000000000044b4         xor        rcx, qword [fs:0x28]
00000000000044bd         jne        loc_44c9

00000000000044bf         add        rsp, 0x48
00000000000044c3         ret
                        ; endp

                     loc_44c4:
00000000000044c4         call       j_abort                                     ; abort, CODE XREF=quotearg_n_style_colon+26
                        ; endp

                     loc_44c9:
00000000000044c9         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_style_colon+125
                        ; endp
00000000000044ce         align      16                                          ; End of unwind block (FDE at 0x7134)

                     quotearg_n_custom_mem:
00000000000044d0         sub        rsp, 0x48                                   ; Begin of unwind block (FDE at 0x7150), CODE XREF=quotearg_n_custom+7, quotearg_custom+18, quotearg_custom_mem+14
00000000000044d4         mov        r9, rcx
00000000000044d7         mov        rcx, qword [qword_208230]                   ; qword_208230
00000000000044de         movdqa     xmm0, xmmword [default_quoting_options]     ; default_quoting_options
00000000000044e6         mov        rax, qword [fs:0x28]
00000000000044ef         mov        qword [rsp+0x48+var_10], rax
00000000000044f4         xor        eax, eax
00000000000044f6         movaps     xmmword [rsp+0x48+var_48], xmm0
00000000000044fa         test       rsi, rsi
00000000000044fd         mov        qword [rsp+0x48+var_18], rcx
0000000000004502         mov        dword [rsp+0x48+var_48], 0xa
0000000000004509         movdqa     xmm0, xmmword [default_quoting_options+16]  ; 0x208210
0000000000004511         movaps     xmmword [rsp+0x48+var_38], xmm0
0000000000004516         movdqa     xmm0, xmmword [default_quoting_options+32]  ; 0x208220
000000000000451e         movaps     xmmword [rsp+0x48+var_28], xmm0
0000000000004523         je         loc_4557

0000000000004525         test       rdx, rdx
0000000000004528         je         loc_4557

000000000000452a         mov        qword [rsp+0x48+var_20], rsi
000000000000452f         mov        qword [rsp+0x48+var_18], rdx
0000000000004534         mov        rcx, rsp
0000000000004537         mov        rdx, r8
000000000000453a         mov        rsi, r9
000000000000453d         call       quotearg_n_options                          ; quotearg_n_options
0000000000004542         mov        rdi, qword [rsp+0x48+var_10]
0000000000004547         xor        rdi, qword [fs:0x28]
0000000000004550         jne        loc_455c

0000000000004552         add        rsp, 0x48
0000000000004556         ret
                        ; endp

                     loc_4557:
0000000000004557         call       j_abort                                     ; abort, CODE XREF=quotearg_n_custom_mem+83, quotearg_n_custom_mem+88
                        ; endp

                     loc_455c:
000000000000455c         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=quotearg_n_custom_mem+128
                        ; endp
0000000000004561         align      16                                          ; End of unwind block (FDE at 0x7150)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16
        ;    var_18: int64_t, -24
        ;    var_20: int64_t, -32
        ;    var_28: -40
        ;    var_38: -56
        ;    var_48: int32_t, -72


                     quotearg_n_custom:
0000000000004570         mov        r8, 0xffffffffffffffff                      ; Begin of unwind block (FDE at 0x716c)
0000000000004577         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
000000000000457c         align      128                                         ; End of unwind block (FDE at 0x716c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom:
0000000000004580         mov        rcx, rdx                                    ; Begin of unwind block (FDE at 0x7180)
0000000000004583         mov        r8, 0xffffffffffffffff
000000000000458a         mov        rdx, rsi
000000000000458d         mov        rsi, rdi
0000000000004590         xor        edi, edi
0000000000004592         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
0000000000004597         align      32                                          ; End of unwind block (FDE at 0x7180)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quotearg_custom_mem:
00000000000045a0         mov        r8, rcx                                     ; Begin of unwind block (FDE at 0x7194)
00000000000045a3         mov        rcx, rdx
00000000000045a6         mov        rdx, rsi
00000000000045a9         mov        rsi, rdi
00000000000045ac         xor        edi, edi
00000000000045ae         jmp        quotearg_n_custom_mem                       ; quotearg_n_custom_mem
                        ; endp
00000000000045b3         align      64                                          ; End of unwind block (FDE at 0x7194)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n_mem:
00000000000045c0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x71a8), quote_quoting_options
00000000000045c7         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000045cc         align      16                                          ; End of unwind block (FDE at 0x71a8)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_mem:
00000000000045d0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x71bc), quote_quoting_options
00000000000045d7         mov        rdx, rsi
00000000000045da         mov        rsi, rdi
00000000000045dd         xor        edi, edi
00000000000045df         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
00000000000045e4         align      16                                          ; End of unwind block (FDE at 0x71bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote_n:
00000000000045f0         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x71d0), quote_quoting_options
00000000000045f7         mov        rdx, 0xffffffffffffffff
00000000000045fe         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004603         align      16                                          ; End of unwind block (FDE at 0x71d0)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     quote:
0000000000004610         lea        rcx, qword [quote_quoting_options]          ; Begin of unwind block (FDE at 0x71e4), quote_quoting_options, CODE XREF=main+474, main+765, main+1123, main+1206, main+1256, main+1350, main+1509
0000000000004617         mov        rsi, rdi
000000000000461a         mov        rdx, 0xffffffffffffffff
0000000000004621         xor        edi, edi
0000000000004623         jmp        quotearg_n_options                          ; quotearg_n_options
                        ; endp
0000000000004628         align      16                                          ; End of unwind block (FDE at 0x71e4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int64_t, -72
        ;    var_50: int64_t, -80
        ;    var_58: int64_t, -88


                     version_etc_arn:
0000000000004630         push       r15                                         ; Begin of unwind block (FDE at 0x71fc), CODE XREF=version_etc_va+75, version_etc+161
0000000000004632         push       r14
0000000000004634         push       r13
0000000000004636         push       r12
0000000000004638         mov        r12, r9
000000000000463b         push       rbp
000000000000463c         push       rbx
000000000000463d         mov        rbp, rdi
0000000000004640         mov        rbx, r8
0000000000004643         sub        rsp, 0x28
0000000000004647         test       rsi, rsi
000000000000464a         je         loc_4768

0000000000004650         mov        r8, rdx
0000000000004653         lea        rdx, qword [aSSSn]                          ; "%s (%s) %s\\n"
000000000000465a         mov        r9, rcx
000000000000465d         xor        eax, eax
000000000000465f         mov        rcx, rsi
0000000000004662         mov        esi, 0x1
0000000000004667         call       j___fprintf_chk                             ; __fprintf_chk

                     loc_466c:
000000000000466c         lea        rsi, qword [aSSn+7]                         ; argument "msgid" for method j_dcgettext, 0x645b, CODE XREF=version_etc_arn+337
0000000000004673         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004675         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000467a         call       j_dcgettext                                 ; dcgettext
000000000000467f         lea        rdx, qword [version_etc_copyright]          ; "Copyright %s %d Free Software Foundation, Inc."
0000000000004686         mov        rcx, rax
0000000000004689         mov        r8d, 0x7e3
000000000000468f         mov        esi, 0x1
0000000000004694         mov        rdi, rbp
0000000000004697         xor        eax, eax
0000000000004699         call       j___fprintf_chk                             ; __fprintf_chk
000000000000469e         lea        rsi, qword [aNlicenseGplv3G]                ; argument "msgid" for method j_dcgettext, "\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n"
00000000000046a5         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000046a7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000046ac         call       j_dcgettext                                 ; dcgettext
00000000000046b1         mov        rsi, rbp                                    ; argument "__stream" for method j_fputs_unlocked
00000000000046b4         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
00000000000046b7         call       j_fputs_unlocked                            ; fputs_unlocked
00000000000046bc         cmp        r12, 0x9
00000000000046c0         ja         loc_4a00

00000000000046c6         lea        rdx, qword [switch_table_6744]              ; switch_table_6744
00000000000046cd         movsxd     rax, dword [rdx+r12*4]
00000000000046d1         add        rax, rdx
00000000000046d4         jmp        rax                                         ; switch statement using table at 0x6744, with 10 cases, 0x46e0,0x4756,0x4790,0x47e8,0x4828,0x4870,0x48c0,0x4918,0x4948,0x49b0
00000000000046d6         align      32

                     loc_46e0:
00000000000046e0         mov        r9, qword [rbx+0x38]                        ; case 8, CODE XREF=version_etc_arn+164
00000000000046e4         mov        rax, qword [rbx+0x10]
00000000000046e8         lea        rsi, qword [aWrittenBySSSns_6658]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n"
00000000000046ef         mov        r8, qword [rbx+8]
00000000000046f3         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000046f8         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000046fa         mov        r13, qword [rbx+0x30]
00000000000046fe         mov        r12, qword [rbx+0x28]
0000000000004702         mov        qword [rsp+0x58+var_48], r9
0000000000004707         mov        r15, qword [rbx+0x20]
000000000000470b         mov        r14, qword [rbx+0x18]
000000000000470f         mov        qword [rsp+0x58+var_58], rax
0000000000004713         mov        qword [rsp+0x58+var_50], r8
0000000000004718         mov        rbx, qword [rbx]
000000000000471b         call       j_dcgettext                                 ; dcgettext
0000000000004720         sub        rsp, 0x8

                     loc_4724:
0000000000004724         mov        r9, qword [rsp+0x60+var_48]                 ; CODE XREF=version_etc_arn+432
0000000000004729         mov        rdx, rax
000000000000472c         mov        rcx, rbx
000000000000472f         mov        esi, 0x1
0000000000004734         mov        rdi, rbp
0000000000004737         xor        eax, eax
0000000000004739         push       r9
000000000000473b         push       r13
000000000000473d         push       r12
000000000000473f         push       r15
0000000000004741         push       r14
0000000000004743         mov        r9, qword [rsp+0x88+var_58]
0000000000004748         mov        r8, qword [rsp+0x88+var_50]
000000000000474d         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004752         add        rsp, 0x30

                     loc_4756:
0000000000004756         add        rsp, 0x28                                   ; case 0, CODE XREF=version_etc_arn+164
000000000000475a         pop        rbx
000000000000475b         pop        rbp
000000000000475c         pop        r12
000000000000475e         pop        r13
0000000000004760         pop        r14
0000000000004762         pop        r15
0000000000004764         ret
                        ; endp
0000000000004765         align      8

                     loc_4768:
0000000000004768         mov        r8, rcx                                     ; CODE XREF=version_etc_arn+26
000000000000476b         mov        rcx, rdx
000000000000476e         lea        rdx, qword [aSSn]                           ; "%s %s\\n"
0000000000004775         mov        esi, 0x1
000000000000477a         xor        eax, eax
000000000000477c         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004781         jmp        loc_466c
0000000000004786         align      16

                     loc_4790:
0000000000004790         mov        r10, qword [rbx+0x40]                       ; case 9, CODE XREF=version_etc_arn+164
0000000000004794         mov        r9, qword [rbx+0x38]
0000000000004798         lea        rsi, qword [aWrittenBySSSns]                ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n"
000000000000479f         mov        rax, qword [rbx+0x10]
00000000000047a3         mov        r8, qword [rbx+8]
00000000000047a7         mov        edx, 0x5
00000000000047ac         mov        r13, qword [rbx+0x30]
00000000000047b0         mov        r12, qword [rbx+0x28]
00000000000047b4         mov        r15, qword [rbx+0x20]
00000000000047b8         mov        r14, qword [rbx+0x18]
00000000000047bc         mov        rbx, qword [rbx]
00000000000047bf         mov        qword [rsp+0x58+var_40], r10
00000000000047c4         mov        qword [rsp+0x58+var_48], r9
00000000000047c9         mov        qword [rsp+0x58+var_58], rax
00000000000047cd         mov        qword [rsp+0x58+var_50], r8

                     loc_47d2:
00000000000047d2         xor        edi, edi                                    ; argument "domain" for method j_dcgettext, CODE XREF=version_etc_arn+1042
00000000000047d4         call       j_dcgettext                                 ; dcgettext
00000000000047d9         mov        r10, qword [rsp+0x58+var_40]
00000000000047de         push       r10
00000000000047e0         jmp        loc_4724
00000000000047e5         align      8

                     loc_47e8:
00000000000047e8         mov        rbx, qword [rbx]                            ; case 1, CODE XREF=version_etc_arn+164
00000000000047eb         lea        rsi, qword [aWrittenBySn]                   ; argument "msgid" for method j_dcgettext, "Written by %s.\\n"
00000000000047f2         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000047f7         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000047f9         call       j_dcgettext                                 ; dcgettext
00000000000047fe         add        rsp, 0x28
0000000000004802         mov        rcx, rbx
0000000000004805         mov        rdi, rbp
0000000000004808         pop        rbx
0000000000004809         pop        rbp
000000000000480a         pop        r12
000000000000480c         pop        r13
000000000000480e         pop        r14
0000000000004810         pop        r15
0000000000004812         mov        rdx, rax
0000000000004815         mov        esi, 0x1
000000000000481a         xor        eax, eax
000000000000481c         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004821         align      8

                     loc_4828:
0000000000004828         mov        r12, qword [rbx+8]                          ; case 2, CODE XREF=version_etc_arn+164
000000000000482c         lea        rsi, qword [aWrittenBySAndS]                ; argument "msgid" for method j_dcgettext, "Written by %s and %s.\\n"
0000000000004833         mov        rbx, qword [rbx]
0000000000004836         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
000000000000483b         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000483d         call       j_dcgettext                                 ; dcgettext
0000000000004842         add        rsp, 0x28
0000000000004846         mov        r8, r12
0000000000004849         mov        rcx, rbx
000000000000484c         mov        rdi, rbp
000000000000484f         mov        rdx, rax
0000000000004852         mov        esi, 0x1
0000000000004857         pop        rbx
0000000000004858         pop        rbp
0000000000004859         pop        r12
000000000000485b         pop        r13
000000000000485d         pop        r14
000000000000485f         pop        r15
0000000000004861         xor        eax, eax
0000000000004863         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
0000000000004868         align      16

                     loc_4870:
0000000000004870         mov        r13, qword [rbx+0x10]                       ; case 3, CODE XREF=version_etc_arn+164
0000000000004874         mov        r12, qword [rbx+8]
0000000000004878         lea        rsi, qword [aWrittenBySSAnd]                ; argument "msgid" for method j_dcgettext, "Written by %s, %s, and %s.\\n"
000000000000487f         mov        rbx, qword [rbx]
0000000000004882         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004887         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004889         call       j_dcgettext                                 ; dcgettext
000000000000488e         add        rsp, 0x28
0000000000004892         mov        r9, r13
0000000000004895         mov        r8, r12
0000000000004898         mov        rcx, rbx
000000000000489b         mov        rdi, rbp
000000000000489e         mov        rdx, rax
00000000000048a1         pop        rbx
00000000000048a2         pop        rbp
00000000000048a3         pop        r12
00000000000048a5         pop        r13
00000000000048a7         pop        r14
00000000000048a9         pop        r15
00000000000048ab         mov        esi, 0x1
00000000000048b0         xor        eax, eax
00000000000048b2         jmp        j___fprintf_chk                             ; __fprintf_chk
                        ; endp
00000000000048b7         align      64

                     loc_48c0:
00000000000048c0         lea        rsi, qword [aWrittenBySSSna]                ; case 4, argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\nand %s.\\n", CODE XREF=version_etc_arn+164
00000000000048c7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000048cc         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000048ce         mov        r14, qword [rbx+0x18]
00000000000048d2         mov        r13, qword [rbx+0x10]
00000000000048d6         mov        r12, qword [rbx+8]
00000000000048da         mov        rbx, qword [rbx]
00000000000048dd         call       j_dcgettext                                 ; dcgettext
00000000000048e2         sub        rsp, 0x8

                     loc_48e6:
00000000000048e6         push       r14                                         ; CODE XREF=version_etc_arn+784
00000000000048e8         mov        rdx, rax
00000000000048eb         mov        r9, r13
00000000000048ee         mov        r8, r12
00000000000048f1         mov        rcx, rbx
00000000000048f4         mov        rdi, rbp
00000000000048f7         mov        esi, 0x1
00000000000048fc         xor        eax, eax
00000000000048fe         call       j___fprintf_chk                             ; __fprintf_chk
0000000000004903         pop        rax
0000000000004904         pop        rdx
0000000000004905         add        rsp, 0x28
0000000000004909         pop        rbx
000000000000490a         pop        rbp
000000000000490b         pop        r12
000000000000490d         pop        r13
000000000000490f         pop        r14
0000000000004911         pop        r15
0000000000004913         ret
                        ; endp
0000000000004914         align      8

                     loc_4918:
0000000000004918         mov        r15, qword [rbx+0x20]                       ; case 5, CODE XREF=version_etc_arn+164
000000000000491c         lea        rsi, qword [aWrittenBySSSns_65d8]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, and %s.\\n"
0000000000004923         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004928         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000492a         mov        r14, qword [rbx+0x18]
000000000000492e         mov        r13, qword [rbx+0x10]
0000000000004932         mov        r12, qword [rbx+8]
0000000000004936         mov        rbx, qword [rbx]
0000000000004939         call       j_dcgettext                                 ; dcgettext
000000000000493e         push       r15
0000000000004940         jmp        loc_48e6
0000000000004942         align      8

                     loc_4948:
0000000000004948         mov        r8, qword [rbx+8]                           ; case 6, CODE XREF=version_etc_arn+164
000000000000494c         mov        r12, qword [rbx+0x28]
0000000000004950         lea        rsi, qword [aWrittenBySSSns_6600]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, and %s.\\n"
0000000000004957         mov        r15, qword [rbx+0x20]
000000000000495b         mov        r14, qword [rbx+0x18]
000000000000495f         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004964         mov        r13, qword [rbx+0x10]
0000000000004968         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
000000000000496a         mov        rbx, qword [rbx]
000000000000496d         mov        qword [rsp+0x58+var_58], r8
0000000000004971         call       j_dcgettext                                 ; dcgettext
0000000000004976         sub        rsp, 0x8
000000000000497a         mov        r9, r13
000000000000497d         push       r12
000000000000497f         push       r15
0000000000004981         push       r14

                     loc_4983:
0000000000004983         mov        r8, qword [rsp+0x78+var_58]                 ; CODE XREF=version_etc_arn+964
0000000000004988         mov        rcx, rbx
000000000000498b         mov        rdx, rax
000000000000498e         mov        rdi, rbp
0000000000004991         mov        esi, 0x1
0000000000004996         xor        eax, eax
0000000000004998         call       j___fprintf_chk                             ; __fprintf_chk
000000000000499d         add        rsp, 0x20
00000000000049a1         add        rsp, 0x28
00000000000049a5         pop        rbx
00000000000049a6         pop        rbp
00000000000049a7         pop        r12
00000000000049a9         pop        r13
00000000000049ab         pop        r14
00000000000049ad         pop        r15
00000000000049af         ret
                        ; endp

                     loc_49b0:
00000000000049b0         mov        r9, qword [rbx+0x10]                        ; case 7, CODE XREF=version_etc_arn+164
00000000000049b4         mov        r13, qword [rbx+0x30]
00000000000049b8         lea        rsi, qword [aWrittenBySSSns_6628]           ; argument "msgid" for method j_dcgettext, "Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n"
00000000000049bf         mov        r12, qword [rbx+0x28]
00000000000049c3         mov        r15, qword [rbx+0x20]
00000000000049c7         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
00000000000049cc         mov        r14, qword [rbx+0x18]
00000000000049d0         mov        r8, qword [rbx+8]
00000000000049d4         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
00000000000049d6         mov        qword [rsp+0x58+var_50], r9
00000000000049db         mov        rbx, qword [rbx]
00000000000049de         mov        qword [rsp+0x58+var_58], r8
00000000000049e2         call       j_dcgettext                                 ; dcgettext
00000000000049e7         push       r13
00000000000049e9         push       r12
00000000000049eb         push       r15
00000000000049ed         push       r14
00000000000049ef         mov        r9, qword [rsp+0x78+var_50]
00000000000049f4         jmp        loc_4983
00000000000049f6         align      512

                     loc_4a00:
0000000000004a00         mov        r10, qword [rbx+0x40]                       ; CODE XREF=version_etc_arn+144
0000000000004a04         mov        r9, qword [rbx+0x38]
0000000000004a08         mov        edx, 0x5
0000000000004a0d         mov        rax, qword [rbx+0x10]
0000000000004a11         mov        r8, qword [rbx+8]
0000000000004a15         lea        rsi, qword [aWrittenBySSSns_66c0]           ; "Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n"
0000000000004a1c         mov        r13, qword [rbx+0x30]
0000000000004a20         mov        r12, qword [rbx+0x28]
0000000000004a24         mov        r15, qword [rbx+0x20]
0000000000004a28         mov        r14, qword [rbx+0x18]
0000000000004a2c         mov        qword [rsp+0x58+var_40], r10
0000000000004a31         mov        qword [rsp+0x58+var_48], r9
0000000000004a36         mov        qword [rsp+0x58+var_58], rax
0000000000004a3a         mov        qword [rsp+0x58+var_50], r8
0000000000004a3f         mov        rbx, qword [rbx]
0000000000004a42         jmp        loc_47d2
0000000000004a47         align      16                                          ; End of unwind block (FDE at 0x71fc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     version_etc_ar:
0000000000004a50         xor        r9d, r9d                                    ; Begin of unwind block (FDE at 0x7310)
0000000000004a53         cmp        qword [r8], 0x0
0000000000004a57         je         j_version_etc_arn                           ; version_etc_arn

0000000000004a59         nop        dword [rax]

                     loc_4a60:
0000000000004a60         add        r9, 0x1                                     ; CODE XREF=version_etc_ar+25
0000000000004a64         cmp        qword [r8+r9*8], 0x0
0000000000004a69         jne        loc_4a60

                     j_version_etc_arn:        // version_etc_arn
0000000000004a6b         jmp        version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_ar+7
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_10: int64_t, -16


                     version_etc_va:
0000000000004a70         sub        rsp, 0x68                                   ; End of unwind block (FDE at 0x7310), Begin of unwind block (FDE at 0x7324)
0000000000004a74         mov        r10, r8
0000000000004a77         xor        r9d, r9d
0000000000004a7a         mov        rax, qword [fs:0x28]
0000000000004a83         mov        qword [rsp+0x68+var_10], rax
0000000000004a88         xor        eax, eax
0000000000004a8a         mov        r8, rsp
0000000000004a8d         nop        dword [rax]

                     loc_4a90:
0000000000004a90         mov        eax, dword [r10]                            ; CODE XREF=version_etc_va+73
0000000000004a93         cmp        eax, 0x2f
0000000000004a96         ja         loc_4ada

0000000000004a98         mov        r11d, eax
0000000000004a9b         add        r11, qword [r10+0x10]
0000000000004a9f         add        eax, 0x8
0000000000004aa2         mov        dword [r10], eax

                     loc_4aa5:
0000000000004aa5         mov        rax, qword [r11]                            ; CODE XREF=version_etc_va+118
0000000000004aa8         test       rax, rax
0000000000004aab         mov        qword [r8+r9*8], rax
0000000000004aaf         je         loc_4abb

0000000000004ab1         add        r9, 0x1
0000000000004ab5         cmp        r9, 0xa
0000000000004ab9         jne        loc_4a90

                     loc_4abb:
0000000000004abb         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc_va+63
0000000000004ac0         mov        rax, qword [rsp+0x68+var_10]
0000000000004ac5         xor        rax, qword [fs:0x28]
0000000000004ace         jne        loc_4ad5

0000000000004ad0         add        rsp, 0x68
0000000000004ad4         ret
                        ; endp

                     loc_4ad5:
0000000000004ad5         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc_va+94
                        ; endp

                     loc_4ada:
0000000000004ada         mov        r11, qword [r10+8]                          ; CODE XREF=version_etc_va+38
0000000000004ade         lea        rax, qword [r11+8]
0000000000004ae2         mov        qword [r10+8], rax
0000000000004ae6         jmp        loc_4aa5
0000000000004ae8         align      16                                          ; End of unwind block (FDE at 0x7324)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    arg_0: int, 8
        ;    var_20: int64_t, -32
        ;    var_28: int64_t, -40
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80
        ;    var_A8: int8_t, -168
        ;    var_B0: int64_t, -176
        ;    var_B8: int64_t, -184
        ;    var_C0: int32_t, -192


                     version_etc:
0000000000004af0         push       rbp                                         ; Begin of unwind block (FDE at 0x7340), CODE XREF=main+243
0000000000004af1         push       rbx
0000000000004af2         mov        r10d, 0x20
0000000000004af8         xor        r11d, r11d
0000000000004afb         sub        rsp, 0xb8
0000000000004b02         mov        rax, qword [fs:0x28]
0000000000004b0b         mov        qword [rsp+0xc8+var_50], rax
0000000000004b10         xor        eax, eax
0000000000004b12         lea        rax, qword [rsp+0xc8+arg_0]
0000000000004b1a         mov        qword [rsp+0xc8+var_28], r8
0000000000004b22         lea        rbx, qword [rsp+0xc8+arg_0]
0000000000004b2a         lea        r8, qword [rsp+0xc8+var_A8]
0000000000004b2f         mov        qword [rsp+0xc8+var_20], r9
0000000000004b37         mov        dword [rsp+0xc8+var_C0], 0x20
0000000000004b3f         mov        qword [rsp+0xc8+var_B8], rax
0000000000004b44         lea        rax, qword [rsp+0xc8+var_48]
0000000000004b4c         xor        r9d, r9d
0000000000004b4f         mov        qword [rsp+0xc8+var_B0], rax
0000000000004b54         mov        rbp, rax
0000000000004b57         nop        word [rax+rax]

                     loc_4b60:
0000000000004b60         cmp        r10d, 0x2f                                  ; CODE XREF=version_etc+154
0000000000004b64         ja         loc_4bbc

0000000000004b66         mov        eax, r10d
0000000000004b69         mov        r11d, 0x1
0000000000004b6f         add        r10d, 0x8
0000000000004b73         add        rax, rbp

                     loc_4b76:
0000000000004b76         mov        rax, qword [rax]                            ; CODE XREF=version_etc+211
0000000000004b79         test       rax, rax
0000000000004b7c         mov        qword [r8+r9*8], rax
0000000000004b80         je         loc_4b8c

0000000000004b82         add        r9, 0x1
0000000000004b86         cmp        r9, 0xa
0000000000004b8a         jne        loc_4b60

                     loc_4b8c:
0000000000004b8c         test       r11b, r11b                                  ; CODE XREF=version_etc+144
0000000000004b8f         jne        loc_4bb5

                     loc_4b91:
0000000000004b91         call       version_etc_arn                             ; version_etc_arn, CODE XREF=version_etc+202
0000000000004b96         mov        rax, qword [rsp+0xc8+var_50]
0000000000004b9b         xor        rax, qword [fs:0x28]
0000000000004ba4         jne        loc_4bb0

0000000000004ba6         add        rsp, 0xb8
0000000000004bad         pop        rbx
0000000000004bae         pop        rbp
0000000000004baf         ret
                        ; endp

                     loc_4bb0:
0000000000004bb0         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=version_etc+180
                        ; endp

                     loc_4bb5:
0000000000004bb5         mov        dword [rsp+0xc8+var_C0], r10d               ; CODE XREF=version_etc+159
0000000000004bba         jmp        loc_4b91

                     loc_4bbc:
0000000000004bbc         mov        rax, rbx                                    ; CODE XREF=version_etc+116
0000000000004bbf         add        rbx, 0x8
0000000000004bc3         jmp        loc_4b76
0000000000004bc5         align      16                                          ; End of unwind block (FDE at 0x7340)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     emit_bug_reporting_address:
0000000000004bd0         push       rbx                                         ; Begin of unwind block (FDE at 0x736c)
0000000000004bd1         lea        rsi, qword [aNreportBugsToS]                ; argument "msgid" for method j_dcgettext, "\\nReport bugs to: %s\\n"
0000000000004bd8         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004bdd         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004bdf         call       j_dcgettext                                 ; dcgettext
0000000000004be4         lea        rdx, qword [aBugcoreutilsgn]                ; "bug-coreutils@gnu.org"
0000000000004beb         mov        rsi, rax
0000000000004bee         mov        edi, 0x1
0000000000004bf3         xor        eax, eax
0000000000004bf5         call       j___printf_chk                              ; __printf_chk
0000000000004bfa         lea        rsi, qword [aSHomePageSn]                   ; argument "msgid" for method j_dcgettext, "%s home page: <%s>\\n"
0000000000004c01         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004c06         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004c08         call       j_dcgettext                                 ; dcgettext
0000000000004c0d         lea        rcx, qword [aHttpswwwgnuorg]                ; "https://www.gnu.org/software/coreutils/"
0000000000004c14         lea        rdx, qword [aNsOnlineHelpSn+23]             ; 0x5700
0000000000004c1b         mov        rsi, rax
0000000000004c1e         mov        edi, 0x1
0000000000004c23         xor        eax, eax
0000000000004c25         call       j___printf_chk                              ; __printf_chk
0000000000004c2a         mov        rbx, qword [stdout@@GLIBC_2.2.5]            ; stdout@@GLIBC_2.2.5
0000000000004c31         lea        rsi, qword [aGeneralHelpUsi]                ; argument "msgid" for method j_dcgettext, "General help using GNU software: <https://www.gnu.org/gethelp/>\\n"
0000000000004c38         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004c3a         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004c3f         call       j_dcgettext                                 ; dcgettext
0000000000004c44         mov        rsi, rbx                                    ; argument "__stream" for method j_fputs_unlocked
0000000000004c47         mov        rdi, rax                                    ; argument "__s" for method j_fputs_unlocked
0000000000004c4a         pop        rbx
0000000000004c4b         jmp        j_fputs_unlocked                            ; fputs_unlocked
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xmalloc:
0000000000004c50         push       rbx                                         ; End of unwind block (FDE at 0x736c), Begin of unwind block (FDE at 0x738c), CODE XREF=mode_compile+123, mode_compile+842, mode_create_from_ref+56, quotearg_n_options+295, quotearg_alloc_mem+129, xnmalloc+25, xcharalloc, xzalloc+4, xmemdup+15
0000000000004c51         mov        rbx, rdi
0000000000004c54         call       j_malloc                                    ; malloc
0000000000004c59         test       rax, rax
0000000000004c5c         jne        loc_4c63

0000000000004c5e         test       rbx, rbx
0000000000004c61         jne        loc_4c65

                     loc_4c63:
0000000000004c63         pop        rbx                                         ; CODE XREF=xmalloc+12
0000000000004c64         ret
                        ; endp

                     loc_4c65:
0000000000004c65         call       xalloc_die                                  ; xalloc_die, CODE XREF=xmalloc+17
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4c6a:
0000000000004c6a         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x738c)
                     xnmalloc:
0000000000004c70         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x73a8)
0000000000004c73         mul        rsi
0000000000004c76         mov        rdi, rax
0000000000004c79         seto       al
0000000000004c7c         test       rdi, rdi
0000000000004c7f         js         loc_4c8b

0000000000004c81         movzx      eax, al
0000000000004c84         test       rax, rax
0000000000004c87         jne        loc_4c8b

0000000000004c89         jmp        xmalloc                                     ; xmalloc
                        ; endp

                     loc_4c8b:
0000000000004c8b         sub        rsp, 0x8                                    ; CODE XREF=xnmalloc+15, xnmalloc+23
0000000000004c8f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4c94:
0000000000004c94         nop                                                    ; End of unwind block (FDE at 0x73a8)
0000000000004c96         nop        word [cs:rax+rax]
                     xcharalloc:
0000000000004ca0         jmp        xmalloc                                     ; xmalloc, Begin of unwind block (FDE at 0x73bc)
                        ; endp
0000000000004ca2         align      16                                          ; End of unwind block (FDE at 0x73bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xrealloc:
0000000000004cb0         test       rsi, rsi                                    ; Begin of unwind block (FDE at 0x73d0), CODE XREF=quotearg_n_options+110, quotearg_n_options+386, xnrealloc+25, x2nrealloc+52, x2realloc+40
0000000000004cb3         push       rbx
0000000000004cb4         mov        rbx, rsi
0000000000004cb7         jne        loc_4cbe

0000000000004cb9         test       rdi, rdi
0000000000004cbc         jne        loc_4cd8

                     loc_4cbe:
0000000000004cbe         mov        rsi, rbx                                    ; argument "__size" for method j_realloc, CODE XREF=xrealloc+7
0000000000004cc1         call       j_realloc                                   ; realloc
0000000000004cc6         test       rax, rax
0000000000004cc9         jne        loc_4cd0

0000000000004ccb         test       rbx, rbx
0000000000004cce         jne        loc_4ce1

                     loc_4cd0:
0000000000004cd0         pop        rbx                                         ; CODE XREF=xrealloc+25
0000000000004cd1         ret
                        ; endp
0000000000004cd2         align      8

                     loc_4cd8:
0000000000004cd8         call       j_free                                      ; free, CODE XREF=xrealloc+12
0000000000004cdd         xor        eax, eax
0000000000004cdf         pop        rbx
0000000000004ce0         ret
                        ; endp

                     loc_4ce1:
0000000000004ce1         call       xalloc_die                                  ; xalloc_die, CODE XREF=xrealloc+30
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4ce6:
0000000000004ce6         nop        word [cs:rax+rax]                           ; End of unwind block (FDE at 0x73d0)
                     xnrealloc:
0000000000004cf0         mov        rax, rsi                                    ; Begin of unwind block (FDE at 0x73f4)
0000000000004cf3         mul        rdx
0000000000004cf6         mov        rsi, rax
0000000000004cf9         seto       al
0000000000004cfc         test       rsi, rsi
0000000000004cff         js         loc_4d0b

0000000000004d01         movzx      eax, al
0000000000004d04         test       rax, rax
0000000000004d07         jne        loc_4d0b

0000000000004d09         jmp        xrealloc                                    ; xrealloc
                        ; endp

                     loc_4d0b:
0000000000004d0b         sub        rsp, 0x8                                    ; CODE XREF=xnrealloc+15, xnrealloc+23
0000000000004d0f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4d14:
0000000000004d14         nop                                                    ; End of unwind block (FDE at 0x73f4)
0000000000004d16         nop        word [cs:rax+rax]
                     x2nrealloc:
0000000000004d20         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7408)
0000000000004d23         mov        r9, rdx
0000000000004d26         mov        rcx, qword [rsi]
0000000000004d29         je         loc_4d60

0000000000004d2b         xor        edx, edx
0000000000004d2d         movabs     rax, 0x5555555555555554
0000000000004d37         div        r9
0000000000004d3a         cmp        rax, rcx
0000000000004d3d         jbe        loc_4d7b

0000000000004d3f         mov        rax, rcx
0000000000004d42         shr        rax, 0x1
0000000000004d45         lea        rcx, qword [rax+rcx+1]

                     loc_4d4a:
0000000000004d4a         mov        qword [rsi], rcx                            ; CODE XREF=x2nrealloc+89
0000000000004d4d         imul       rcx, r9                                     ; argument #4 for method xrealloc
0000000000004d51         mov        rsi, rcx                                    ; argument #2 for method xrealloc
0000000000004d54         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000004d59         align      32

                     loc_4d60:
0000000000004d60         test       rcx, rcx                                    ; CODE XREF=x2nrealloc+9
0000000000004d63         je         loc_4d88

                     loc_4d65:
0000000000004d65         mov        rax, rcx                                    ; CODE XREF=sub_4d84+28
0000000000004d68         mul        r9
0000000000004d6b         seto       dl
0000000000004d6e         test       rax, rax
0000000000004d71         movzx      edx, dl
0000000000004d74         js         loc_4d7b

0000000000004d76         test       rdx, rdx
0000000000004d79         je         loc_4d4a

                     loc_4d7b:
0000000000004d7b         sub        rsp, 0x8                                    ; CODE XREF=x2nrealloc+29, x2nrealloc+84
0000000000004d7f         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4d84:
0000000000004d84         nop        dword [rax]
                        ; endp

                     loc_4d88:
0000000000004d88         xor        edx, edx                                    ; CODE XREF=x2nrealloc+67
0000000000004d8a         mov        eax, 0x80
0000000000004d8f         xor        r8d, r8d
0000000000004d92         div        r9
0000000000004d95         test       rax, rax
0000000000004d98         sete       r8b
0000000000004d9c         lea        rcx, qword [r8+rax]
0000000000004da0         jmp        loc_4d65
0000000000004da2         align      16                                          ; End of unwind block (FDE at 0x7408)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     x2realloc:
0000000000004db0         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7420)
0000000000004db3         mov        rax, qword [rsi]
0000000000004db6         je         loc_4de0

0000000000004db8         movabs     rdx, 0x5555555555555553
0000000000004dc2         cmp        rax, rdx
0000000000004dc5         ja         loc_4df1

0000000000004dc7         mov        rdx, rax
0000000000004dca         shr        rdx, 0x1
0000000000004dcd         lea        rax, qword [rdx+rax+1]

                     loc_4dd2:
0000000000004dd2         mov        qword [rsi], rax                            ; CODE XREF=x2realloc+63
0000000000004dd5         mov        rsi, rax                                    ; argument #2 for method xrealloc
0000000000004dd8         jmp        xrealloc                                    ; xrealloc
                        ; endp
0000000000004ddd         align      32

                     loc_4de0:
0000000000004de0         test       rax, rax                                    ; CODE XREF=x2realloc+6
0000000000004de3         mov        edx, 0x80
0000000000004de8         cmove      rax, rdx
0000000000004dec         test       rax, rax
0000000000004def         jns        loc_4dd2

                     loc_4df1:
0000000000004df1         sub        rsp, 0x8                                    ; CODE XREF=x2realloc+21
0000000000004df5         call       xalloc_die                                  ; xalloc_die
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4dfa:
0000000000004dfa         nop        word [rax+rax]                              ; End of unwind block (FDE at 0x7420)
                     xzalloc:
0000000000004e00         push       rbx                                         ; Begin of unwind block (FDE at 0x7438)
0000000000004e01         mov        rbx, rdi
0000000000004e04         call       xmalloc                                     ; xmalloc
0000000000004e09         mov        rdx, rbx                                    ; argument "__n" for method j_memset
0000000000004e0c         xor        esi, esi                                    ; argument "__c" for method j_memset
0000000000004e0e         mov        rdi, rax                                    ; argument "__s" for method j_memset
0000000000004e11         pop        rbx
0000000000004e12         jmp        j_memset                                    ; memset
                        ; endp
0000000000004e17         align      32                                          ; End of unwind block (FDE at 0x7438)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xcalloc:
0000000000004e20         mov        rax, rdi                                    ; Begin of unwind block (FDE at 0x7454)
0000000000004e23         sub        rsp, 0x8
0000000000004e27         mul        rsi
0000000000004e2a         seto       dl
0000000000004e2d         test       rax, rax
0000000000004e30         js         loc_4e49

0000000000004e32         movzx      edx, dl
0000000000004e35         test       rdx, rdx
0000000000004e38         jne        loc_4e49

0000000000004e3a         call       j_calloc                                    ; calloc
0000000000004e3f         test       rax, rax
0000000000004e42         je         loc_4e49

0000000000004e44         add        rsp, 0x8
0000000000004e48         ret
                        ; endp

                     loc_4e49:
0000000000004e49         call       xalloc_die                                  ; xalloc_die, CODE XREF=xcalloc+16, xcalloc+24, xcalloc+34
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     sub_4e4e:
0000000000004e4e         nop                                                    ; End of unwind block (FDE at 0x7454)
                        ; endp

                     xmemdup:
0000000000004e50         push       rbp                                         ; Begin of unwind block (FDE at 0x7470), CODE XREF=clone_quoting_options+40, xstrdup+17
0000000000004e51         push       rbx
0000000000004e52         mov        rbp, rdi
0000000000004e55         mov        rdi, rsi
0000000000004e58         mov        rbx, rsi
0000000000004e5b         sub        rsp, 0x8
0000000000004e5f         call       xmalloc                                     ; xmalloc
0000000000004e64         add        rsp, 0x8
0000000000004e68         mov        rdx, rbx                                    ; argument "__n" for method j_memcpy
0000000000004e6b         mov        rsi, rbp                                    ; argument "__src" for method j_memcpy
0000000000004e6e         pop        rbx
0000000000004e6f         pop        rbp
0000000000004e70         mov        rdi, rax                                    ; argument "__dest" for method j_memcpy
0000000000004e73         jmp        j_memcpy                                    ; memcpy
                        ; endp
0000000000004e78         align      128                                         ; End of unwind block (FDE at 0x7470)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xstrdup:
0000000000004e80         push       rbx                                         ; Begin of unwind block (FDE at 0x7498)
0000000000004e81         mov        rbx, rdi
0000000000004e84         call       j_strlen                                    ; strlen
0000000000004e89         mov        rdi, rbx
0000000000004e8c         lea        rsi, qword [rax+1]
0000000000004e90         pop        rbx
0000000000004e91         jmp        xmemdup                                     ; xmemdup
0000000000004e93         align      32                                          ; End of unwind block (FDE at 0x7498)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     xalloc_die:
0000000000004ea0         lea        rsi, qword [aMemoryExhauste]                ; Begin of unwind block (FDE at 0x74b4), argument "msgid" for method j_dcgettext, "memory exhausted", CODE XREF=mode_compile+889, quotearg_n_options+422, xmalloc+21, xnmalloc+31, xrealloc+49, xnrealloc+31, x2nrealloc+95, x2realloc+69, xcalloc+41
0000000000004ea7         sub        rsp, 0x8
0000000000004eab         mov        edx, 0x5                                    ; argument "category" for method j_dcgettext
0000000000004eb0         xor        edi, edi                                    ; argument "domain" for method j_dcgettext
0000000000004eb2         call       j_dcgettext                                 ; dcgettext
0000000000004eb7         mov        edi, dword [exit_failure]                   ; argument "__status" for method j_error, exit_failure
0000000000004ebd         lea        rdx, qword [aSS+4]                          ; argument "__format" for method j_error, 0x5e9c
0000000000004ec4         mov        rcx, rax
0000000000004ec7         xor        esi, esi                                    ; argument "__errnum" for method j_error
0000000000004ec9         xor        eax, eax
0000000000004ecb         call       j_error                                     ; error
0000000000004ed0         call       j_abort                                     ; abort
                        ; endp
0000000000004ed5         align      32                                          ; End of unwind block (FDE at 0x74b4)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_40: int64_t, -64
        ;    var_48: int8_t, -72
        ;    var_50: int64_t, -80


                     xstrtoumax:
0000000000004ee0         push       r15                                         ; Begin of unwind block (FDE at 0x74cc), CODE XREF=main+855, main+898
0000000000004ee2         push       r14
0000000000004ee4         push       r13
0000000000004ee6         push       r12
0000000000004ee8         push       rbp
0000000000004ee9         push       rbx
0000000000004eea         sub        rsp, 0x28
0000000000004eee         mov        rax, qword [fs:0x28]
0000000000004ef7         mov        qword [rsp+0x58+var_40], rax
0000000000004efc         xor        eax, eax
0000000000004efe         cmp        edx, 0x24
0000000000004f01         ja         loc_5265

0000000000004f07         lea        rax, qword [rsp+0x58+var_48]
0000000000004f0c         mov        r15, rsi
0000000000004f0f         test       rsi, rsi
0000000000004f12         mov        rbp, rdi
0000000000004f15         mov        dword [rsp+0x58+var_50], edx
0000000000004f19         mov        r14, rcx
0000000000004f1c         mov        r13, r8
0000000000004f1f         cmove      r15, rax
0000000000004f23         call       j___errno_location                          ; __errno_location
0000000000004f28         mov        dword [rax], 0x0
0000000000004f2e         mov        r12, rax
0000000000004f31         movzx      ebx, byte [rbp]
0000000000004f35         call       j___ctype_b_loc                             ; __ctype_b_loc
0000000000004f3a         mov        edx, dword [rsp+0x58+var_50]
0000000000004f3e         mov        rsi, qword [rax]
0000000000004f41         mov        rax, rbp
0000000000004f44         jmp        loc_4f57
0000000000004f46         align      16

                     loc_4f50:
0000000000004f50         add        rax, 0x1                                    ; CODE XREF=xstrtoumax+127
0000000000004f54         movzx      ebx, byte [rax]

                     loc_4f57:
0000000000004f57         movzx      ecx, bl                                     ; CODE XREF=xstrtoumax+100
0000000000004f5a         test       byte [rsi+rcx*2+1], 0x20
0000000000004f5f         jne        loc_4f50

0000000000004f61         cmp        bl, 0x2d
0000000000004f64         je         loc_4fb8

0000000000004f66         xor        ecx, ecx
0000000000004f68         mov        rsi, r15
0000000000004f6b         mov        rdi, rbp
0000000000004f6e         call       j___strtoul_internal                        ; __strtoul_internal
0000000000004f73         mov        rcx, qword [r15]
0000000000004f76         mov        rbx, rax
0000000000004f79         cmp        rcx, rbp
0000000000004f7c         je         loc_4fa8

0000000000004f7e         mov        eax, dword [r12]
0000000000004f82         test       eax, eax
0000000000004f84         je         loc_4fe8

0000000000004f86         cmp        eax, 0x22
0000000000004f89         mov        ebp, 0x1
0000000000004f8e         jne        loc_4fb8

                     loc_4f90:
0000000000004f90         test       r13, r13                                    ; CODE XREF=xstrtoumax+266
0000000000004f93         je         loc_4f9e

0000000000004f95         movzx      r12d, byte [rcx]
0000000000004f99         test       r12b, r12b
0000000000004f9c         jne        loc_5017

                     loc_4f9e:
0000000000004f9e         mov        qword [r14], rbx                            ; CODE XREF=xstrtoumax+179
0000000000004fa1         jmp        loc_4fbd
0000000000004fa3         align      8

                     loc_4fa8:
0000000000004fa8         test       r13, r13                                    ; CODE XREF=xstrtoumax+156
0000000000004fab         mov        qword [rsp+0x58+var_50], rcx
0000000000004fb0         jne        loc_4ff0

0000000000004fb2         nop        word [rax+rax]

                     loc_4fb8:
0000000000004fb8         mov        ebp, 0x4                                    ; CODE XREF=xstrtoumax+132, xstrtoumax+174, xstrtoumax+280, xstrtoumax+309

                     loc_4fbd:
0000000000004fbd         mov        rdi, qword [rsp+0x58+var_40]                ; CODE XREF=xstrtoumax+193, xstrtoumax+535, xstrtoumax+546
0000000000004fc2         xor        rdi, qword [fs:0x28]
0000000000004fcb         mov        eax, ebp
0000000000004fcd         jne        loc_5260

0000000000004fd3         add        rsp, 0x28
0000000000004fd7         pop        rbx
0000000000004fd8         pop        rbp
0000000000004fd9         pop        r12
0000000000004fdb         pop        r13
0000000000004fdd         pop        r14
0000000000004fdf         pop        r15
0000000000004fe1         ret
                        ; endp
0000000000004fe2         align      8

                     loc_4fe8:
0000000000004fe8         xor        ebp, ebp                                    ; CODE XREF=xstrtoumax+164
0000000000004fea         jmp        loc_4f90
0000000000004fec         align      16

                     loc_4ff0:
0000000000004ff0         movzx      r12d, byte [rbp]                            ; CODE XREF=xstrtoumax+208
0000000000004ff5         test       r12b, r12b
0000000000004ff8         je         loc_4fb8

0000000000004ffa         movsx      esi, r12b                                   ; argument "__c" for method j_strchr
0000000000004ffe         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000005001         xor        ebp, ebp
0000000000005003         call       j_strchr                                    ; strchr
0000000000005008         test       rax, rax
000000000000500b         mov        ebx, 0x1
0000000000005010         mov        rcx, qword [rsp+0x58+var_50]
0000000000005015         je         loc_4fb8

                     loc_5017:
0000000000005017         movsx      esi, r12b                                   ; argument "__c" for method j_strchr, CODE XREF=xstrtoumax+188
000000000000501b         mov        rdi, r13                                    ; argument "__s" for method j_strchr
000000000000501e         mov        qword [rsp+0x58+var_50], rcx
0000000000005023         call       j_strchr                                    ; strchr
0000000000005028         test       rax, rax
000000000000502b         mov        rcx, qword [rsp+0x58+var_50]
0000000000005030         je         loc_50fc

0000000000005036         lea        eax, dword [r12-0x45]
000000000000503b         cmp        al, 0x2f
000000000000503d         ja         loc_5090

000000000000503f         movabs     rdx, 0x814400308945
0000000000005049         bt         rdx, rax
000000000000504d         jae        loc_5090

000000000000504f         mov        esi, 0x30                                   ; argument "__c" for method j_strchr
0000000000005054         mov        rdi, r13                                    ; argument "__s" for method j_strchr
0000000000005057         mov        qword [rsp+0x58+var_50], rcx
000000000000505c         call       j_strchr                                    ; strchr
0000000000005061         test       rax, rax
0000000000005064         mov        rcx, qword [rsp+0x58+var_50]
0000000000005069         je         loc_5090

000000000000506b         movzx      eax, byte [rcx+1]
000000000000506f         cmp        al, 0x44
0000000000005071         je         loc_507f

0000000000005073         cmp        al, 0x69
0000000000005075         je         loc_5248

000000000000507b         cmp        al, 0x42
000000000000507d         jne        loc_5090

                     loc_507f:
000000000000507f         mov        edi, 0x2                                    ; CODE XREF=xstrtoumax+401
0000000000005084         mov        esi, 0x3e8
0000000000005089         jmp        loc_509a
000000000000508b         align      16

                     loc_5090:
0000000000005090         mov        edi, 0x1                                    ; CODE XREF=xstrtoumax+349, xstrtoumax+365, xstrtoumax+393, xstrtoumax+413
0000000000005095         mov        esi, 0x400

                     loc_509a:
000000000000509a         sub        r12d, 0x42                                  ; CODE XREF=xstrtoumax+425, xstrtoumax+891
000000000000509e         cmp        r12b, 0x35
00000000000050a2         ja         loc_50fc

00000000000050a4         lea        rdx, qword [switch_table_6808]              ; switch_table_6808
00000000000050ab         movzx      r12d, r12b
00000000000050af         movsxd     rax, dword [rdx+r12*4]
00000000000050b3         add        rax, rdx
00000000000050b6         jmp        rax                                         ; switch statement using table at 0x6808, with 54 cases, 0x50b8,0x50e0,0x50fc,0x5107,0x511d,0x5134,0x515a,0x517f,0x519f,0x51c0,0x51e3,0x5206,0x521c

                     loc_50b8:
00000000000050b8         mov        rax, rbx                                    ; case 43, CODE XREF=xstrtoumax+470
00000000000050bb         mul        rsi
00000000000050be         jo         loc_52b1

00000000000050c4         xor        r8d, r8d

                     loc_50c7:
00000000000050c7         mul        rsi                                         ; CODE XREF=xstrtoumax+846, xstrtoumax+862, xstrtoumax+987
00000000000050ca         jo         loc_52a2

00000000000050d0         mov        rbx, rax

                     loc_50d3:
00000000000050d3         or         ebp, r8d                                    ; CODE XREF=xstrtoumax+972
00000000000050d6         nop        word [cs:rax+rax]

                     loc_50e0:
00000000000050e0         movsxd     rdi, edi                                    ; case 33, CODE XREF=xstrtoumax+470, xstrtoumax+571, xstrtoumax+594, xstrtoumax+632, xstrtoumax+712, xstrtoumax+727, xstrtoumax+823
00000000000050e3         mov        eax, ebp
00000000000050e5         add        rcx, rdi
00000000000050e8         or         eax, 0x2
00000000000050eb         mov        qword [r15], rcx
00000000000050ee         cmp        byte [rcx], 0x0
00000000000050f1         mov        qword [r14], rbx
00000000000050f4         cmovne     ebp, eax
00000000000050f7         jmp        loc_4fbd

                     loc_50fc:
00000000000050fc         mov        qword [r14], rbx                            ; case 52, CODE XREF=xstrtoumax+336, xstrtoumax+450, xstrtoumax+470
00000000000050ff         or         ebp, 0x2
0000000000005102         jmp        loc_4fbd

                     loc_5107:
0000000000005107         mov        edx, 0x2                                    ; case 53, CODE XREF=xstrtoumax+470
000000000000510c         mov        rax, rdx
000000000000510f         mul        rbx
0000000000005112         jo         loc_51ae

0000000000005118         add        rbx, rbx
000000000000511b         jmp        loc_50e0

                     loc_511d:
000000000000511d         mov        edx, 0x200                                  ; case 32, CODE XREF=xstrtoumax+470
0000000000005122         mov        rax, rdx
0000000000005125         mul        rbx
0000000000005128         jo         loc_51ae

000000000000512e         shl        rbx, 0x9
0000000000005132         jmp        loc_50e0

                     loc_5134:
0000000000005134         mov        r8d, 0x7                                    ; case 24, CODE XREF=xstrtoumax+470
000000000000513a         xor        r9d, r9d
000000000000513d         nop        dword [rax]

                     loc_5140:
0000000000005140         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+627
0000000000005143         mul        rsi
0000000000005146         mov        rbx, rax
0000000000005149         jo         loc_52de

                     loc_514f:
000000000000514f         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1032
0000000000005153         jne        loc_5140

                     loc_5155:
0000000000005155         or         ebp, r9d                                    ; CODE XREF=xstrtoumax+669, xstrtoumax+701, xstrtoumax+766, xstrtoumax+801
0000000000005158         jmp        loc_50e0

                     loc_515a:
000000000000515a         mov        r8d, 0x8                                    ; case 23, CODE XREF=xstrtoumax+470
0000000000005160         xor        r9d, r9d
0000000000005163         nop        dword [rax+rax]

                     loc_5168:
0000000000005168         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+667
000000000000516b         mul        rsi
000000000000516e         mov        rbx, rax
0000000000005171         jo         loc_52c0

                     loc_5177:
0000000000005177         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1002
000000000000517b         jne        loc_5168

000000000000517d         jmp        loc_5155

                     loc_517f:
000000000000517f         mov        r8d, 0x4                                    ; case 50, CODE XREF=xstrtoumax+470
0000000000005185         xor        r9d, r9d

                     loc_5188:
0000000000005188         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+699
000000000000518b         mul        rsi
000000000000518e         mov        rbx, rax
0000000000005191         jo         loc_5293

                     loc_5197:
0000000000005197         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+957
000000000000519b         jne        loc_5188

000000000000519d         jmp        loc_5155

                     loc_519f:
000000000000519f         mov        rax, rbx                                    ; case 41, CODE XREF=xstrtoumax+470
00000000000051a2         mul        rsi
00000000000051a5         mov        rbx, rax
00000000000051a8         jno        loc_50e0

                     loc_51ae:
00000000000051ae         mov        ebp, 0x1                                    ; CODE XREF=xstrtoumax+562, xstrtoumax+584, xstrtoumax+817
00000000000051b3         or         rbx, 0xffffffffffffffff
00000000000051b7         jmp        loc_50e0
00000000000051bc         align      64

                     loc_51c0:
00000000000051c0         mov        r8d, 0x5                                    ; case 14, CODE XREF=xstrtoumax+470
00000000000051c6         xor        r9d, r9d

                     loc_51c9:
00000000000051c9         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+764
00000000000051cc         mul        rsi
00000000000051cf         mov        rbx, rax
00000000000051d2         jo         loc_52cf

                     loc_51d8:
00000000000051d8         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+1017
00000000000051dc         jne        loc_51c9

00000000000051de         jmp        loc_5155

                     loc_51e3:
00000000000051e3         mov        r8d, 0x6                                    ; case 3, CODE XREF=xstrtoumax+470
00000000000051e9         xor        r9d, r9d

                     loc_51ec:
00000000000051ec         mov        rax, rbx                                    ; CODE XREF=xstrtoumax+799
00000000000051ef         mul        rsi
00000000000051f2         mov        rbx, rax
00000000000051f5         jo         loc_5284

                     loc_51fb:
00000000000051fb         sub        r8d, 0x1                                    ; CODE XREF=xstrtoumax+942
00000000000051ff         jne        loc_51ec

0000000000005201         jmp        loc_5155

                     loc_5206:
0000000000005206         mov        edx, 0x400                                  ; case 0, CODE XREF=xstrtoumax+470
000000000000520b         mov        rax, rdx
000000000000520e         mul        rbx
0000000000005211         jo         loc_51ae

0000000000005213         shl        rbx, 0xa
0000000000005217         jmp        loc_50e0

                     loc_521c:
000000000000521c         mov        rax, rbx                                    ; case 37, CODE XREF=xstrtoumax+470
000000000000521f         mul        rsi
0000000000005222         jo         loc_52ed

0000000000005228         xor        r8d, r8d

                     loc_522b:
000000000000522b         mul        rsi                                         ; CODE XREF=xstrtoumax+1047
000000000000522e         jno        loc_50c7

0000000000005234         mov        r8d, 0x1
000000000000523a         or         rax, 0xffffffffffffffff
000000000000523e         jmp        loc_50c7
0000000000005243         align      8

                     loc_5248:
0000000000005248         xor        edi, edi                                    ; CODE XREF=xstrtoumax+405
000000000000524a         cmp        byte [rcx+2], 0x42
000000000000524e         mov        esi, 0x400
0000000000005253         sete       dil
0000000000005257         lea        edi, dword [rdi+rdi+1]
000000000000525b         jmp        loc_509a

                     loc_5260:
0000000000005260         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=xstrtoumax+237
                        ; endp

                     loc_5265:
0000000000005265         lea        rcx, qword [__PRETTY_FUNCTION__.4162]       ; argument "__function" for method j___assert_fail, "xstrtoumax", CODE XREF=xstrtoumax+33
000000000000526c         lea        rsi, qword [aCoreutils831li]                ; argument "__file" for method j___assert_fail, "../coreutils-8.31/lib/xstrtol.c"
0000000000005273         lea        rdi, qword [a0StrtolbaseStr]                ; argument "__assertion" for method j___assert_fail, "0 <= strtol_base && strtol_base <= 36"
000000000000527a         mov        edx, 0x54                                   ; argument "__line" for method j___assert_fail
000000000000527f         call       j___assert_fail                             ; __assert_fail
                        ; endp

                     loc_5284:
0000000000005284         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+789
000000000000528a         or         rbx, 0xffffffffffffffff
000000000000528e         jmp        loc_51fb

                     loc_5293:
0000000000005293         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+689
0000000000005299         or         rbx, 0xffffffffffffffff
000000000000529d         jmp        loc_5197

                     loc_52a2:
00000000000052a2         mov        r8d, 0x1                                    ; CODE XREF=xstrtoumax+490
00000000000052a8         or         rbx, 0xffffffffffffffff
00000000000052ac         jmp        loc_50d3

                     loc_52b1:
00000000000052b1         or         rax, 0xffffffffffffffff                     ; CODE XREF=xstrtoumax+478
00000000000052b5         mov        r8d, 0x1
00000000000052bb         jmp        loc_50c7

                     loc_52c0:
00000000000052c0         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+657
00000000000052c6         or         rbx, 0xffffffffffffffff
00000000000052ca         jmp        loc_5177

                     loc_52cf:
00000000000052cf         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+754
00000000000052d5         or         rbx, 0xffffffffffffffff
00000000000052d9         jmp        loc_51d8

                     loc_52de:
00000000000052de         mov        r9d, 0x1                                    ; CODE XREF=xstrtoumax+617
00000000000052e4         or         rbx, 0xffffffffffffffff
00000000000052e8         jmp        loc_514f

                     loc_52ed:
00000000000052ed         mov        r8d, 0x1                                    ; CODE XREF=xstrtoumax+834
00000000000052f3         or         rax, 0xffffffffffffffff
00000000000052f7         jmp        loc_522b
00000000000052fc         align      256                                         ; End of unwind block (FDE at 0x74cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================

        ; Variables:
        ;    var_30: int64_t, -48
        ;    var_34: int8_t, -52


                     rpl_mbrtowc:
0000000000005300         push       r13                                         ; Begin of unwind block (FDE at 0x751c), CODE XREF=sub_31d0+534
0000000000005302         push       r12
0000000000005304         mov        r13, rsi
0000000000005307         push       rbp
0000000000005308         push       rbx
0000000000005309         mov        rbx, rdi
000000000000530c         mov        r12, rdx
000000000000530f         sub        rsp, 0x18
0000000000005313         mov        rax, qword [fs:0x28]
000000000000531c         mov        qword [rsp+0x38+var_30], rax
0000000000005321         xor        eax, eax
0000000000005323         lea        rax, qword [rsp+0x38+var_34]
0000000000005328         test       rdi, rdi
000000000000532b         cmove      rbx, rax
000000000000532f         mov        rdi, rbx                                    ; argument "__pwc" for method j_mbrtowc
0000000000005332         call       j_mbrtowc                                   ; mbrtowc
0000000000005337         cmp        rax, 0xfffffffffffffffd
000000000000533b         mov        rbp, rax
000000000000533e         jbe        loc_5360

0000000000005340         test       r12, r12
0000000000005343         je         loc_5360

0000000000005345         xor        edi, edi
0000000000005347         call       hard_locale                                 ; hard_locale
000000000000534c         test       al, al
000000000000534e         jne        loc_5360

0000000000005350         movzx      eax, byte [r13]
0000000000005355         mov        ebp, 0x1
000000000000535a         mov        dword [rbx], eax
000000000000535c         nop        dword [rax]

                     loc_5360:
0000000000005360         mov        rdx, qword [rsp+0x38+var_30]                ; CODE XREF=rpl_mbrtowc+62, rpl_mbrtowc+67, rpl_mbrtowc+78
0000000000005365         xor        rdx, qword [fs:0x28]
000000000000536e         mov        rax, rbp
0000000000005371         jne        loc_537e

0000000000005373         add        rsp, 0x18
0000000000005377         pop        rbx
0000000000005378         pop        rbp
0000000000005379         pop        r12
000000000000537b         pop        r13
000000000000537d         ret
                        ; endp

                     loc_537e:
000000000000537e         call       j___stack_chk_fail                          ; __stack_chk_fail, CODE XREF=rpl_mbrtowc+113
                        ; endp
0000000000005383         align      16                                          ; End of unwind block (FDE at 0x751c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     close_stream:
0000000000005390         push       r12                                         ; Begin of unwind block (FDE at 0x755c), CODE XREF=close_stdout+13, close_stdout+51
0000000000005392         push       rbp
0000000000005393         mov        rbp, rdi
0000000000005396         push       rbx
0000000000005397         call       j___fpending                                ; __fpending
000000000000539c         mov        ebx, dword [rbp]
000000000000539f         mov        rdi, rbp
00000000000053a2         mov        r12, rax
00000000000053a5         call       rpl_fclose                                  ; rpl_fclose
00000000000053aa         and        ebx, 0x20
00000000000053ad         test       ebx, ebx
00000000000053af         jne        loc_53c8

00000000000053b1         test       eax, eax
00000000000053b3         je         loc_53bf

00000000000053b5         test       r12, r12
00000000000053b8         mov        eax, 0xffffffff
00000000000053bd         je         loc_53f8

                     loc_53bf:
00000000000053bf         pop        rbx                                         ; CODE XREF=close_stream+35
00000000000053c0         pop        rbp
00000000000053c1         pop        r12
00000000000053c3         ret
                        ; endp
00000000000053c4         align      8

                     loc_53c8:
00000000000053c8         test       eax, eax                                    ; CODE XREF=close_stream+31
00000000000053ca         jne        loc_53e8

00000000000053cc         call       j___errno_location                          ; __errno_location
00000000000053d1         mov        dword [rax], 0x0
00000000000053d7         mov        eax, 0xffffffff
00000000000053dc         pop        rbx
00000000000053dd         pop        rbp
00000000000053de         pop        r12
00000000000053e0         ret
                        ; endp
00000000000053e1         align      8

                     loc_53e8:
00000000000053e8         pop        rbx                                         ; CODE XREF=close_stream+58
00000000000053e9         mov        eax, 0xffffffff
00000000000053ee         pop        rbp
00000000000053ef         pop        r12
00000000000053f1         ret
                        ; endp
00000000000053f2         align      8

                     loc_53f8:
00000000000053f8         call       j___errno_location                          ; __errno_location, CODE XREF=close_stream+45
00000000000053fd         cmp        dword [rax], 0x9
0000000000005400         pop        rbx
0000000000005401         pop        rbp
0000000000005402         pop        r12
0000000000005404         setne      al
0000000000005407         movzx      eax, al
000000000000540a         neg        eax
000000000000540c         ret
                        ; endp
000000000000540d         align      16                                          ; End of unwind block (FDE at 0x755c)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     hard_locale:
0000000000005410         sub        rsp, 0x8                                    ; Begin of unwind block (FDE at 0x75ac), CODE XREF=rpl_mbrtowc+71
0000000000005414         xor        esi, esi                                    ; argument "__locale" for method j_setlocale
0000000000005416         call       j_setlocale                                 ; setlocale
000000000000541b         mov        rdx, rax
000000000000541e         mov        eax, 0x1
0000000000005423         test       rdx, rdx
0000000000005426         je         loc_5445

0000000000005428         lea        rdi, qword [__PRETTY_FUNCTION__.4162+11]    ; 0x68eb
000000000000542f         mov        ecx, 0x2
0000000000005434         mov        rsi, rdx
0000000000005437         rep  cmpsb byte [rsi], byte [rdi]
0000000000005439         seta       cl
000000000000543c         sbb        cl, 0x0
000000000000543f         xor        eax, eax
0000000000005441         test       cl, cl
0000000000005443         jne        loc_5450

                     loc_5445:
0000000000005445         add        rsp, 0x8                                    ; CODE XREF=hard_locale+22
0000000000005449         ret
                        ; endp
000000000000544a         align      16

                     loc_5450:
0000000000005450         lea        rdi, qword [aPosix]                         ; "POSIX", CODE XREF=hard_locale+51
0000000000005457         mov        ecx, 0x6
000000000000545c         mov        rsi, rdx
000000000000545f         rep  cmpsb byte [rsi], byte [rdi]
0000000000005461         seta       al
0000000000005464         sbb        al, 0x0
0000000000005466         test       al, al
0000000000005468         setne      al
000000000000546b         add        rsp, 0x8
000000000000546f         ret
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     locale_charset:
0000000000005470         sub        rsp, 0x8                                    ; End of unwind block (FDE at 0x75ac), Begin of unwind block (FDE at 0x75cc), CODE XREF=gettext_quote.part.1+11
0000000000005474         mov        edi, 0xe                                    ; argument "__item" for method j_nl_langinfo
0000000000005479         call       j_nl_langinfo                               ; nl_langinfo
000000000000547e         test       rax, rax
0000000000005481         je         loc_54a0

0000000000005483         cmp        byte [rax], 0x0
0000000000005486         lea        rdx, qword [aAscii]                         ; "ASCII"
000000000000548d         cmove      rax, rdx
0000000000005491         add        rsp, 0x8
0000000000005495         ret
                        ; endp
0000000000005496         align      32

                     loc_54a0:
00000000000054a0         lea        rax, qword [aAscii]                         ; "ASCII", CODE XREF=locale_charset+17
00000000000054a7         add        rsp, 0x8
00000000000054ab         ret
                        ; endp
00000000000054ac         align      16                                          ; End of unwind block (FDE at 0x75cc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fclose:
00000000000054b0         push       r12                                         ; Begin of unwind block (FDE at 0x75ec), CODE XREF=close_stream+21
00000000000054b2         push       rbp
00000000000054b3         push       rbx
00000000000054b4         mov        rbx, rdi
00000000000054b7         call       j_fileno                                    ; fileno
00000000000054bc         test       eax, eax
00000000000054be         mov        rdi, rbx
00000000000054c1         js         loc_5517

00000000000054c3         call       j___freading                                ; __freading
00000000000054c8         test       eax, eax
00000000000054ca         jne        loc_54f8

                     loc_54cc:
00000000000054cc         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+98
00000000000054cf         call       rpl_fflush                                  ; rpl_fflush
00000000000054d4         test       eax, eax
00000000000054d6         je         loc_5514

00000000000054d8         call       j___errno_location                          ; __errno_location
00000000000054dd         mov        r12d, dword [rax]
00000000000054e0         mov        rdi, rbx                                    ; argument "__stream" for method j_fclose
00000000000054e3         mov        rbp, rax
00000000000054e6         call       j_fclose                                    ; fclose
00000000000054eb         test       r12d, r12d
00000000000054ee         jne        loc_5520

                     loc_54f0:
00000000000054f0         pop        rbx                                         ; CODE XREF=rpl_fclose+121
00000000000054f1         pop        rbp
00000000000054f2         pop        r12
00000000000054f4         ret
                        ; endp
00000000000054f5         align      8

                     loc_54f8:
00000000000054f8         mov        rdi, rbx                                    ; argument "__stream" for method j_fileno, CODE XREF=rpl_fclose+26
00000000000054fb         call       j_fileno                                    ; fileno
0000000000005500         xor        esi, esi                                    ; argument "__offset" for method j_lseek
0000000000005502         mov        edx, 0x1                                    ; argument "__whence" for method j_lseek
0000000000005507         mov        edi, eax                                    ; argument "__fd" for method j_lseek
0000000000005509         call       j_lseek                                     ; lseek
000000000000550e         cmp        rax, 0xffffffffffffffff
0000000000005512         jne        loc_54cc

                     loc_5514:
0000000000005514         mov        rdi, rbx                                    ; CODE XREF=rpl_fclose+38

                     loc_5517:
0000000000005517         pop        rbx                                         ; CODE XREF=rpl_fclose+17
0000000000005518         pop        rbp
0000000000005519         pop        r12
000000000000551b         jmp        j_fclose                                    ; fclose
                        ; endp

                     loc_5520:
0000000000005520         mov        dword [rbp], r12d                           ; CODE XREF=rpl_fclose+62
0000000000005524         mov        eax, 0xffffffff
0000000000005529         jmp        loc_54f0
000000000000552b         align      16                                          ; End of unwind block (FDE at 0x75ec)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fflush:
0000000000005530         test       rdi, rdi                                    ; Begin of unwind block (FDE at 0x7624), CODE XREF=rpl_fclose+31
0000000000005533         push       rbx
0000000000005534         mov        rbx, rdi
0000000000005537         je         loc_554a

0000000000005539         call       j___freading                                ; __freading
000000000000553e         test       eax, eax
0000000000005540         je         loc_554a

0000000000005542         test       dword [rbx], 0x100
0000000000005548         jne        loc_5558

                     loc_554a:
000000000000554a         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush, CODE XREF=rpl_fflush+7, rpl_fflush+16
000000000000554d         pop        rbx
000000000000554e         jmp        j_fflush                                    ; fflush
                        ; endp
0000000000005553         align      8

                     loc_5558:
0000000000005558         mov        rdi, rbx                                    ; CODE XREF=rpl_fflush+24
000000000000555b         mov        edx, 0x1
0000000000005560         xor        esi, esi
0000000000005562         call       rpl_fseeko                                  ; rpl_fseeko
0000000000005567         mov        rdi, rbx                                    ; argument "__stream" for method j_fflush
000000000000556a         pop        rbx
000000000000556b         jmp        j_fflush                                    ; fflush
                        ; endp


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     rpl_fseeko:
0000000000005570         mov        rax, qword [rdi+8]                          ; End of unwind block (FDE at 0x7624), Begin of unwind block (FDE at 0x7644), CODE XREF=rpl_fflush+50
0000000000005574         cmp        qword [rdi+0x10], rax
0000000000005578         je         loc_5580

                     j_j_fseeko:        // fseeko
000000000000557a         jmp        j_fseeko                                    ; fseeko, CODE XREF=j_j_fseeko+14, j_j_fseeko+21
                        ; endp
000000000000557f         align      128

                     loc_5580:
0000000000005580         mov        rax, qword [rdi+0x20]                       ; CODE XREF=rpl_fseeko+8
0000000000005584         cmp        qword [rdi+0x28], rax
0000000000005588         jne        j_j_fseeko                                  ; fseeko

000000000000558a         cmp        qword [rdi+0x48], 0x0
000000000000558f         jne        j_j_fseeko                                  ; fseeko

0000000000005591         push       r12
0000000000005593         push       rbp
0000000000005594         mov        r12d, edx
0000000000005597         push       rbx
0000000000005598         mov        rbp, rsi
000000000000559b         mov        rbx, rdi
000000000000559e         call       j_fileno                                    ; fileno
00000000000055a3         mov        edx, r12d                                   ; argument "__whence" for method j_lseek
00000000000055a6         mov        rsi, rbp                                    ; argument "__offset" for method j_lseek
00000000000055a9         mov        edi, eax                                    ; argument "__fd" for method j_lseek
00000000000055ab         call       j_lseek                                     ; lseek
00000000000055b0         cmp        rax, 0xffffffffffffffff
00000000000055b4         je         loc_55c2

00000000000055b6         and        dword [rbx], 0xffffffef
00000000000055b9         mov        qword [rbx+0x90], rax
00000000000055c0         xor        eax, eax

                     loc_55c2:
00000000000055c2         pop        rbx                                         ; CODE XREF=j_j_fseeko+58
00000000000055c3         pop        rbp
00000000000055c4         pop        r12
00000000000055c6         ret
                        ; endp
00000000000055c7         align      16                                          ; End of unwind block (FDE at 0x7644)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_init:
00000000000055d0         push       r15                                         ; Begin of unwind block (FDE at 0x7674), DATA XREF=_start+22
00000000000055d2         push       r14
00000000000055d4         mov        r15, rdx
00000000000055d7         push       r13
00000000000055d9         push       r12
00000000000055db         lea        r12, qword [__frame_dummy_init_array_entry] ; __frame_dummy_init_array_entry
00000000000055e2         push       rbp
00000000000055e3         lea        rbp, qword [__do_global_dtors_aux_fini_array_entry] ; __do_global_dtors_aux_fini_array_entry
00000000000055ea         push       rbx
00000000000055eb         mov        r13d, edi
00000000000055ee         mov        r14, rsi
00000000000055f1         sub        rbp, r12
00000000000055f4         sub        rsp, 0x8
00000000000055f8         sar        rbp, 0x3
00000000000055fc         call       _init                                       ; _init
0000000000005601         test       rbp, rbp
0000000000005604         je         loc_5626

0000000000005606         xor        ebx, ebx
0000000000005608         nop        dword [rax+rax]

                     loc_5610:
0000000000005610         mov        rdx, r15                                    ; CODE XREF=__libc_csu_init+84
0000000000005613         mov        rsi, r14
0000000000005616         mov        edi, r13d
0000000000005619         call       qword [r12+rbx*8]
000000000000561d         add        rbx, 0x1
0000000000005621         cmp        rbp, rbx
0000000000005624         jne        loc_5610

                     loc_5626:
0000000000005626         add        rsp, 0x8                                    ; CODE XREF=__libc_csu_init+52
000000000000562a         pop        rbx
000000000000562b         pop        rbp
000000000000562c         pop        r12
000000000000562e         pop        r13
0000000000005630         pop        r14
0000000000005632         pop        r15
0000000000005634         ret
                        ; endp
0000000000005635         align      64                                          ; End of unwind block (FDE at 0x7674)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     __libc_csu_fini:
0000000000005640         ret                                                    ; Begin of unwind block (FDE at 0x76bc), DATA XREF=_start+15
                        ; endp
0000000000005642         align      16                                          ; End of unwind block (FDE at 0x76bc)


        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     atexit:
0000000000005650         mov        rdx, qword [__dso_handle]                   ; Begin of unwind block (FDE at 0x76d4), __dso_handle, CODE XREF=main+109
0000000000005657         xor        esi, esi
0000000000005659         jmp        j___cxa_atexit                              ; __cxa_atexit
                        ; endp
000000000000565e         db  0x00 ; '.'                                         ; End of unwind block (FDE at 0x76d4)
000000000000565f         db  0x00 ; '.'


        ; Section .fini
        ; Range: [0x5660; 0x5669[ (9 bytes)
        ; File offset : [22112; 22121[ (9 bytes)
        ; Flags: 0x6
        ;   SHT_PROGBITS
        ;   SHF_ALLOC
        ;   SHF_EXECINSTR



        ; ================ B E G I N N I N G   O F   P R O C E D U R E ================


                     _fini:
0000000000005660         sub        rsp, 0x8
0000000000005664         add        rsp, 0x8
0000000000005668         ret
                        ; endp
0000000000005669         db  0x00 ; '.'
000000000000566a         db  0x00 ; '.'
000000000000566b         db  0x00 ; '.'
000000000000566c         db  0x00 ; '.'
000000000000566d         db  0x00 ; '.'
000000000000566e         db  0x00 ; '.'
000000000000566f         db  0x00 ; '.'
0000000000005670         db  0x00 ; '.'
0000000000005671         db  0x00 ; '.'
0000000000005672         db  0x00 ; '.'
0000000000005673         db  0x00 ; '.'
0000000000005674         db  0x00 ; '.'
0000000000005675         db  0x00 ; '.'
0000000000005676         db  0x00 ; '.'
0000000000005677         db  0x00 ; '.'
0000000000005678         db  0x00 ; '.'
0000000000005679         db  0x00 ; '.'
000000000000567a         db  0x00 ; '.'
000000000000567b         db  0x00 ; '.'
000000000000567c         db  0x00 ; '.'
000000000000567d         db  0x00 ; '.'
000000000000567e         db  0x00 ; '.'
000000000000567f         db  0x00 ; '.'


        ; Section .rodata
        ; Range: [0x5680; 0x68f9[ (4729 bytes)
        ; File offset : [22144; 26873[ (4729 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

                     _IO_stdin_used:
0000000000005680         db  0x01 ; '.'
0000000000005681         db  0x00 ; '.'
0000000000005682         db  0x02 ; '.'
0000000000005683         db  0x00 ; '.'
                     aMknod:
0000000000005684         db         "mknod", 0                                  ; DATA XREF=main+231, usage+416, usage+447, usage+772, usage+956, usage+975, usage+1009
000000000000568a         db  0x5b ; '['                                         ; DATA XREF=usage+469
000000000000568b         db  0x00 ; '.'
                     aTestInvocation:
000000000000568c         db         "test invocation", 0                        ; DATA XREF=usage+508
                     aMulticallInvoc:
000000000000569c         db         "Multi-call invocation", 0                  ; DATA XREF=usage+556
                     aSha224sum:
00000000000056b2         db         "sha224sum", 0                              ; DATA XREF=usage+573
                     aSha2Utilities:
00000000000056bc         db         "sha2 utilities", 0                         ; DATA XREF=usage+585
                     aSha256sum:
00000000000056cb         db         "sha256sum", 0                              ; DATA XREF=usage+476
                     aSha384sum:
00000000000056d5         db         "sha384sum", 0                              ; DATA XREF=usage+520
                     aSha512sum:
00000000000056df         db         "sha512sum", 0                              ; DATA XREF=usage+544
                     aNsOnlineHelpSn:
00000000000056e9         db         "\n%s online help: <%s>\n", 0               ; DATA XREF=usage+658
0000000000005700         db  0x47 ; 'G'                                         ; DATA XREF=main+224, usage+686, usage+879, emit_bug_reporting_address+68
0000000000005701         db  0x4e ; 'N'
0000000000005702         db  0x55 ; 'U'
0000000000005703         db  0x20 ; ' '
                     aCoreutils:
0000000000005704         db         "coreutils", 0                              ; DATA XREF=main+78, main+90, usage+532
000000000000570e         db  0x65 ; 'e'                                         ; DATA XREF=usage+725, usage+918
000000000000570f         db  0x6e ; 'n'
0000000000005710         db  0x5f ; '_'
0000000000005711         db  0x00 ; '.'
                     aFullDocumentat:
0000000000005712         db         "Full documentation <%s%s>\n", 0            ; DATA XREF=usage+753, usage+942
                     aUsrlocalsharel:
000000000000572d         db         "/usr/local/share/locale", 0                ; DATA XREF=main+71
                     aDavidMackenzie:
0000000000005745         db         "David MacKenzie", 0                        ; DATA XREF=main+217
0000000000005755         db  0x6d ; 'm'                                         ; DATA XREF=main+114
0000000000005756         db  0x3a ; ':'
0000000000005757         db  0x5a ; 'Z'
0000000000005758         db  0x00 ; '.'
                     aInvalidMode:
0000000000005759         db         "invalid mode", 0                           ; DATA XREF=main+1626
                     aMissingOperand_5766:        // aMissingOperand
0000000000005766         db         "missing operand", 0                        ; DATA XREF=main+1165
                     aInvalidDeviceS:
0000000000005776         db         "invalid device %s %s", 0                   ; DATA XREF=main+1303
                     aInvalidDeviceT:
000000000000578b         db         "invalid device type %s", 0                 ; DATA XREF=main+1136
                     aCannotSetPermi:
00000000000057a2         db         "cannot set permissions of %s", 0           ; DATA XREF=main+1451
                     aExtraOperandS:
00000000000057bf         db         "extra operand %s", 0                       ; DATA XREF=main+479, main+770
                     aMissingOperand:
00000000000057d0         db         "missing operand after %s", 0               ; DATA XREF=main+1363, main+1514
                     aContext:
00000000000057e9         db         "context", 0
                     aHelp:
00000000000057f1         db         "help", 0
                     aVersion:
00000000000057f6         db         "version", 0
00000000000057fe         align      2048
                     aTrySHelpForMor:
0000000000005800         db         "Try '%s --help' for more information.\n", 0 ; DATA XREF=usage+47
0000000000005827         align      8
                     aUsageSOptionNa:
0000000000005828         db         "Usage: %s [OPTION]... NAME TYPE [MAJOR MINOR]\n", 0 ; DATA XREF=usage+93
0000000000005857         align      8
                     aCreateTheSpeci:
0000000000005858         db         "Create the special file NAME of the given TYPE.\n", 0 ; DATA XREF=usage+132
0000000000005889         align      16
                     aNmandatoryArgu:
0000000000005890         db         "\nMandatory arguments to long options are mandatory for short options too.\n", 0 ; DATA XREF=usage+169
00000000000058db         align      32
                     aMModemodeSetFi:
00000000000058e0         db         "  -m, --mode=MODE    set file permission bits to MODE, not a=rw - umask\n", 0 ; DATA XREF=usage+206
0000000000005929         align      16
                     aZSetTheSelinux:
0000000000005930         db         "  -Z                   set the SELinux security context to default type\n      --context[=CTX]  like -Z, or if CTX is specified then set the SELinux\n                         or SMACK security context to CTX\n", 0 ; DATA XREF=usage+243
00000000000059ff         align      512
                     aHelpDisplayThi:
0000000000005a00         db         "      --help     display this help and exit\n", 0 ; DATA XREF=usage+280
0000000000005a2d         align      16
                     aVersionOutputV:
0000000000005a30         db         "      --version  output version information and exit\n", 0 ; DATA XREF=usage+317
0000000000005a66         align      8
                     aNbothMajorAndM:
0000000000005a68         db         "\nBoth MAJOR and MINOR must be specified when TYPE is b, c, or u, and they\nmust be omitted when TYPE is p.  If MAJOR or MINOR begins with 0x or 0X,\nit is interpreted as hexadecimal; otherwise, if it begins with 0, as octal;\notherwise, as decimal.  TYPE may " ; DATA XREF=usage+354
0000000000005b68         db         "be:\n", 0
0000000000005b6d         align      16
                     aNBCreateABlock:
0000000000005b70         db         "\n  b      create a block (buffered) special file\n  c, u   create a character (unbuffered) special file\n  p      create a FIFO\n", 0 ; DATA XREF=usage+391
0000000000005bef         align      16
                     aNnoteYourShell:
0000000000005bf0         db         "\nNOTE: your shell may have its own version of %s, which usually supersedes\nthe version described here.  Please refer to your shell's documentation\nfor details about the options it supports.\n", 0 ; DATA XREF=usage+428
0000000000005caf         align      16
                     aHttpswwwgnuorg:
0000000000005cb0         db         "https://www.gnu.org/software/coreutils/", 0 ; DATA XREF=usage+679, usage+779, usage+872, usage+982, emit_bug_reporting_address+61
                     aReportAnyTrans:
0000000000005cd8         db         "Report any translation bugs to <https://translationproject.org/team/>\n", 0 ; DATA XREF=usage+1023
0000000000005d1f         align      32
                     aOrAvailableLoc:
0000000000005d20         db         "or available locally via: info '(coreutils) %s%s'\n", 0 ; DATA XREF=usage+822
0000000000005d53         align      8
                     aWarningIgnorin:
0000000000005d58         db         "warning: ignoring --context; it requires an SELinux/SMACK-enabled kernel", 0 ; DATA XREF=main+270
0000000000005da1         align      8
                     aModeMustSpecif:
0000000000005da8         db         "mode must specify only file permission bits", 0 ; DATA XREF=main+1590
0000000000005dd4         align      8
                     aSpecialFilesRe:
0000000000005dd8         db         "Special files require major and minor device numbers.", 0 ; DATA XREF=main+1573
0000000000005e0e         align      16
                     aFifosDoNotHave:
0000000000005e10         db         "Fifos do not have major and minor device numbers.", 0 ; DATA XREF=main+529
0000000000005e42         align      8
                     aInvalidMajorDe:
0000000000005e48         db         "invalid major device number %s", 0         ; DATA XREF=main+1261
0000000000005e67         align      8
                     aInvalidMinorDe:
0000000000005e68         db         "invalid minor device number %s", 0         ; DATA XREF=main+1211
                     a831:
0000000000005e87         db         "8.31", 0                                   ; DATA XREF=Version
                     aWriteError:
0000000000005e8c         db         "write error", 0                            ; DATA XREF=close_stdout+67
                     aSS:
0000000000005e98         db         "%s: %s", 0                                 ; DATA XREF=close_stdout+108
0000000000005e9f         align      32
                     switch_table_5ea0:        // switch_table
0000000000005ea0         dd         mode_compile.loc_2590-switch_table_5ea0, 25 dup (mode_compile.loc_25a9-switch_table_5ea0), mode_compile.loc_2600-switch_table_5ea0, mode_compile.loc_25f0-switch_table_5ea0 ; switch table used at 0x2584 containing 33 entries, DATA XREF=mode_compile+116
0000000000005f10         dd         mode_compile.loc_25e0-switch_table_5ea0, 2 dup (mode_compile.loc_25a9-switch_table_5ea0), mode_compile.loc_25d0-switch_table_5ea0, mode_compile.loc_25c8-switch_table_5ea0
0000000000005f24         align      8
                     aANullArgv0WasP:
0000000000005f28         db         "A NULL argv[0] was passed through an exec system call.\n", 0 ; DATA XREF=set_program_name+132
                     aLibs:
0000000000005f60         db         "/.libs/", 0                                ; DATA XREF=set_program_name+44
0000000000005f68         db  0x6c ; 'l'                                         ; DATA XREF=set_program_name+68
0000000000005f69         db  0x74 ; 't'
0000000000005f6a         db  0x2d ; '-'
0000000000005f6b         db  0x00 ; '.'
0000000000005f6c         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+206
0000000000005f6d         db  0x80 ; '.'
0000000000005f6e         db  0x98 ; '.'
0000000000005f6f         db  0x00 ; '.'
0000000000005f70         db  0xe2 ; '.'                                         ; DATA XREF=gettext_quote.part.1+213
0000000000005f71         db  0x80 ; '.'
0000000000005f72         db  0x99 ; '.'
0000000000005f73         db  0x00 ; '.'
0000000000005f74         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+116
0000000000005f75         db  0x07 ; '.'
0000000000005f76         db  0x65 ; 'e'
0000000000005f77         db  0x00 ; '.'
0000000000005f78         db  0xa1 ; '.'                                         ; DATA XREF=gettext_quote.part.1+123
0000000000005f79         db  0xaf ; '.'
0000000000005f7a         db  0x00 ; '.'
0000000000005f7b         db  0x22 ; '"'                                         ; DATA XREF=gettext_quote.part.1+32, sub_31d0+1451, sub_31d0+1493, sub_31d0+2429
0000000000005f7c         db  0x00 ; '.'
0000000000005f7d         db  0x27 ; '''                                         ; DATA XREF=gettext_quote.part.1+39, quotearg_buffer_restyled+179, sub_31d0+132, sub_31d0+1338, sub_31d0+1670, sub_31d0+1697, sub_31d0+2352
0000000000005f7e         db  0x00 ; '.'
0000000000005f7f         db  0x60 ; '`'                                         ; DATA XREF=sub_31d0+1627, sub_31d0+1654
0000000000005f80         db  0x00 ; '.'
                     aLiteral:
0000000000005f81         db         "literal", 0
                     aShell:
0000000000005f89         db         "shell", 0
                     aShellalways:
0000000000005f8f         db         "shell-always", 0
0000000000005f9c         db  0x73 ; 's'
0000000000005f9d         db  0x68 ; 'h'
0000000000005f9e         db  0x65 ; 'e'
0000000000005f9f         db  0x6c ; 'l'
0000000000005fa0         db  0x6c ; 'l'
0000000000005fa1         db  0x2d ; '-'
                     aEscape:
0000000000005fa2         db         "escape", 0
                     aShellescapealw:
0000000000005fa9         db         "shell-escape-always", 0
0000000000005fbd         db  0x63 ; 'c'
0000000000005fbe         db  0x00 ; '.'
                     aCmaybe:
0000000000005fbf         db         "c-maybe", 0
                     aClocale:
0000000000005fc7         db         "clocale", 0
0000000000005fcf         align      32
                     switch_table_5fe0:        // switch_table
0000000000005fe0         dd         quotearg_buffer_restyled.loc_38ca-switch_table_5fe0, quotearg_buffer_restyled.loc_2b23-switch_table_5fe0, quotearg_buffer_restyled.loc_3af8-switch_table_5fe0, quotearg_buffer_restyled.loc_3904-switch_table_5fe0 ; switch table used at 0x2b21 containing 11 entries, DATA XREF=quotearg_buffer_restyled+128
0000000000005ff0         dd         quotearg_buffer_restyled.loc_36f4-switch_table_5fe0, quotearg_buffer_restyled.loc_3750-switch_table_5fe0, quotearg_buffer_restyled.loc_37a5-switch_table_5fe0, quotearg_buffer_restyled.loc_37ea-switch_table_5fe0
0000000000006000         dd         3 dup (quotearg_buffer_restyled.loc_3824-switch_table_5fe0) ; DATA XREF=main+1112
000000000000600c         db  0x94 ; '.'                                         ; DATA XREF=quotearg_buffer_restyled+477
000000000000600d         db  0xce ; '.'
000000000000600e         db  0xff ; '.'
000000000000600f         db  0xff ; '.'
0000000000006010         db  0x7c ; '|'
0000000000006011         db  0xcf ; '.'
0000000000006012         db  0xff ; '.'
0000000000006013         db  0xff ; '.'
0000000000006014         db  0x7c ; '|'
0000000000006015         db  0xcf ; '.'
0000000000006016         db  0xff ; '.'
0000000000006017         db  0xff ; '.'
0000000000006018         db  0x7c ; '|'
0000000000006019         db  0xcf ; '.'
000000000000601a         db  0xff ; '.'
000000000000601b         db  0xff ; '.'
000000000000601c         db  0x7c ; '|'
000000000000601d         db  0xcf ; '.'
000000000000601e         db  0xff ; '.'
000000000000601f         db  0xff ; '.'
0000000000006020         db  0x7c ; '|'
0000000000006021         db  0xcf ; '.'
0000000000006022         db  0xff ; '.'
0000000000006023         db  0xff ; '.'
0000000000006024         db  0x7c ; '|'
0000000000006025         db  0xcf ; '.'
0000000000006026         db  0xff ; '.'
0000000000006027         db  0xff ; '.'
0000000000006028         db  0xd4 ; '.'
0000000000006029         db  0xce ; '.'
000000000000602a         db  0xff ; '.'
000000000000602b         db  0xff ; '.'
000000000000602c         db  0xdc ; '.'
000000000000602d         db  0xcd ; '.'
000000000000602e         db  0xff ; '.'
000000000000602f         db  0xff ; '.'
0000000000006030         db  0x9c ; '.'
0000000000006031         db  0xcd ; '.'
0000000000006032         db  0xff ; '.'
0000000000006033         db  0xff ; '.'
0000000000006034         db  0x64 ; 'd'
0000000000006035         db  0xcf ; '.'
0000000000006036         db  0xff ; '.'
0000000000006037         db  0xff ; '.'
0000000000006038         db  0x54 ; 'T'
0000000000006039         db  0xcf ; '.'
000000000000603a         db  0xff ; '.'
000000000000603b         db  0xff ; '.'
000000000000603c         db  0x44 ; 'D'
000000000000603d         db  0xcf ; '.'
000000000000603e         db  0xff ; '.'
000000000000603f         db  0xff ; '.'
0000000000006040         db  0x34 ; '4'
0000000000006041         db  0xcf ; '.'
0000000000006042         db  0xff ; '.'
0000000000006043         db  0xff ; '.'
0000000000006044         db  0x7c ; '|'
0000000000006045         db  0xcf ; '.'
0000000000006046         db  0xff ; '.'
0000000000006047         db  0xff ; '.'
0000000000006048         db  0x7c ; '|'
0000000000006049         db  0xcf ; '.'
000000000000604a         db  0xff ; '.'
000000000000604b         db  0xff ; '.'
000000000000604c         db  0x7c ; '|'
000000000000604d         db  0xcf ; '.'
000000000000604e         db  0xff ; '.'
000000000000604f         db  0xff ; '.'
0000000000006050         db  0x7c ; '|'
0000000000006051         db  0xcf ; '.'
0000000000006052         db  0xff ; '.'
0000000000006053         db  0xff ; '.'
0000000000006054         db  0x7c ; '|'
0000000000006055         db  0xcf ; '.'
0000000000006056         db  0xff ; '.'
0000000000006057         db  0xff ; '.'
0000000000006058         db  0x7c ; '|'
0000000000006059         db  0xcf ; '.'
000000000000605a         db  0xff ; '.'
000000000000605b         db  0xff ; '.'
000000000000605c         db  0x7c ; '|'
000000000000605d         db  0xcf ; '.'
000000000000605e         db  0xff ; '.'
000000000000605f         db  0xff ; '.'
0000000000006060         db  0x7c ; '|'
0000000000006061         db  0xcf ; '.'
0000000000006062         db  0xff ; '.'
0000000000006063         db  0xff ; '.'
0000000000006064         db  0x7c ; '|'
0000000000006065         db  0xcf ; '.'
0000000000006066         db  0xff ; '.'
0000000000006067         db  0xff ; '.'
0000000000006068         db  0x7c ; '|'
0000000000006069         db  0xcf ; '.'
000000000000606a         db  0xff ; '.'
000000000000606b         db  0xff ; '.'
000000000000606c         db  0x7c ; '|'
000000000000606d         db  0xcf ; '.'
000000000000606e         db  0xff ; '.'
000000000000606f         db  0xff ; '.'
0000000000006070         db  0x7c ; '|'
0000000000006071         db  0xcf ; '.'
0000000000006072         db  0xff ; '.'
0000000000006073         db  0xff ; '.'
0000000000006074         db  0x7c ; '|'
0000000000006075         db  0xcf ; '.'
0000000000006076         db  0xff ; '.'
0000000000006077         db  0xff ; '.'
0000000000006078         db  0x7c ; '|'
0000000000006079         db  0xcf ; '.'
000000000000607a         db  0xff ; '.'
000000000000607b         db  0xff ; '.'
000000000000607c         db  0x7c ; '|'
000000000000607d         db  0xcf ; '.'
000000000000607e         db  0xff ; '.'
000000000000607f         db  0xff ; '.'
0000000000006080         db  0x7c ; '|'
0000000000006081         db  0xcf ; '.'
0000000000006082         db  0xff ; '.'
0000000000006083         db  0xff ; '.'
0000000000006084         db  0x7c ; '|'
0000000000006085         db  0xcf ; '.'
0000000000006086         db  0xff ; '.'
0000000000006087         db  0xff ; '.'
0000000000006088         db  0x7c ; '|'
0000000000006089         db  0xcf ; '.'
000000000000608a         db  0xff ; '.'
000000000000608b         db  0xff ; '.'
000000000000608c         db  0x24 ; '$'
000000000000608d         db  0xcf ; '.'
000000000000608e         db  0xff ; '.'
000000000000608f         db  0xff ; '.'
0000000000006090         db  0x14 ; '.'
0000000000006091         db  0xcf ; '.'
0000000000006092         db  0xff ; '.'
0000000000006093         db  0xff ; '.'
0000000000006094         db  0x14 ; '.'
0000000000006095         db  0xcf ; '.'
0000000000006096         db  0xff ; '.'
0000000000006097         db  0xff ; '.'
0000000000006098         db  0xe4 ; '.'
0000000000006099         db  0xce ; '.'
000000000000609a         db  0xff ; '.'
000000000000609b         db  0xff ; '.'
000000000000609c         db  0x14 ; '.'
000000000000609d         db  0xcf ; '.'
000000000000609e         db  0xff ; '.'
000000000000609f         db  0xff ; '.'
00000000000060a0         db  0xbc ; '.'
00000000000060a1         db  0xce ; '.'
00000000000060a2         db  0xff ; '.'
00000000000060a3         db  0xff ; '.'
00000000000060a4         db  0x14 ; '.'
00000000000060a5         db  0xcf ; '.'
00000000000060a6         db  0xff ; '.'
00000000000060a7         db  0xff ; '.'
00000000000060a8         db  0x77 ; 'w'
00000000000060a9         db  0xcd ; '.'
00000000000060aa         db  0xff ; '.'
00000000000060ab         db  0xff ; '.'
00000000000060ac         db  0x14 ; '.'
00000000000060ad         db  0xcf ; '.'
00000000000060ae         db  0xff ; '.'
00000000000060af         db  0xff ; '.'
00000000000060b0         db  0x14 ; '.'
00000000000060b1         db  0xcf ; '.'
00000000000060b2         db  0xff ; '.'
00000000000060b3         db  0xff ; '.'
00000000000060b4         db  0x14 ; '.'
00000000000060b5         db  0xcf ; '.'
00000000000060b6         db  0xff ; '.'
00000000000060b7         db  0xff ; '.'
00000000000060b8         db  0xbc ; '.'
00000000000060b9         db  0xce ; '.'
00000000000060ba         db  0xff ; '.'
00000000000060bb         db  0xff ; '.'
00000000000060bc         db  0xbc ; '.'
00000000000060bd         db  0xce ; '.'
00000000000060be         db  0xff ; '.'
00000000000060bf         db  0xff ; '.'
00000000000060c0         db  0xbc ; '.'
00000000000060c1         db  0xce ; '.'
00000000000060c2         db  0xff ; '.'
00000000000060c3         db  0xff ; '.'
00000000000060c4         db  0xbc ; '.'
00000000000060c5         db  0xce ; '.'
00000000000060c6         db  0xff ; '.'
00000000000060c7         db  0xff ; '.'
00000000000060c8         db  0xbc ; '.'
00000000000060c9         db  0xce ; '.'
00000000000060ca         db  0xff ; '.'
00000000000060cb         db  0xff ; '.'
00000000000060cc         db  0xbc ; '.'
00000000000060cd         db  0xce ; '.'
00000000000060ce         db  0xff ; '.'
00000000000060cf         db  0xff ; '.'
00000000000060d0         db  0xbc ; '.'
00000000000060d1         db  0xce ; '.'
00000000000060d2         db  0xff ; '.'
00000000000060d3         db  0xff ; '.'
00000000000060d4         db  0xbc ; '.'
00000000000060d5         db  0xce ; '.'
00000000000060d6         db  0xff ; '.'
00000000000060d7         db  0xff ; '.'
00000000000060d8         db  0xbc ; '.'
00000000000060d9         db  0xce ; '.'
00000000000060da         db  0xff ; '.'
00000000000060db         db  0xff ; '.'
00000000000060dc         db  0xbc ; '.'
00000000000060dd         db  0xce ; '.'
00000000000060de         db  0xff ; '.'
00000000000060df         db  0xff ; '.'
00000000000060e0         db  0xbc ; '.'
00000000000060e1         db  0xce ; '.'
00000000000060e2         db  0xff ; '.'
00000000000060e3         db  0xff ; '.'
00000000000060e4         db  0xbc ; '.'
00000000000060e5         db  0xce ; '.'
00000000000060e6         db  0xff ; '.'
00000000000060e7         db  0xff ; '.'
00000000000060e8         db  0xbc ; '.'
00000000000060e9         db  0xce ; '.'
00000000000060ea         db  0xff ; '.'
00000000000060eb         db  0xff ; '.'
00000000000060ec         db  0xbc ; '.'
00000000000060ed         db  0xce ; '.'
00000000000060ee         db  0xff ; '.'
00000000000060ef         db  0xff ; '.'
00000000000060f0         db  0xbc ; '.'
00000000000060f1         db  0xce ; '.'
00000000000060f2         db  0xff ; '.'
00000000000060f3         db  0xff ; '.'
00000000000060f4         db  0xbc ; '.'
00000000000060f5         db  0xce ; '.'
00000000000060f6         db  0xff ; '.'
00000000000060f7         db  0xff ; '.'
00000000000060f8         db  0x14 ; '.'
00000000000060f9         db  0xcf ; '.'
00000000000060fa         db  0xff ; '.'
00000000000060fb         db  0xff ; '.'
00000000000060fc         db  0x14 ; '.'
00000000000060fd         db  0xcf ; '.'
00000000000060fe         db  0xff ; '.'
00000000000060ff         db  0xff ; '.'
0000000000006100         db  0x14 ; '.'
0000000000006101         db  0xcf ; '.'
0000000000006102         db  0xff ; '.'
0000000000006103         db  0xff ; '.'
0000000000006104         db  0x14 ; '.'
0000000000006105         db  0xcf ; '.'
0000000000006106         db  0xff ; '.'
0000000000006107         db  0xff ; '.'
0000000000006108         db  0x47 ; 'G'
0000000000006109         db  0xcd ; '.'
000000000000610a         db  0xff ; '.'
000000000000610b         db  0xff ; '.'
000000000000610c         db  0x7c ; '|'
000000000000610d         db  0xcf ; '.'
000000000000610e         db  0xff ; '.'
000000000000610f         db  0xff ; '.'
0000000000006110         db  0xbc ; '.'
0000000000006111         db  0xce ; '.'
0000000000006112         db  0xff ; '.'
0000000000006113         db  0xff ; '.'
0000000000006114         db  0xbc ; '.'
0000000000006115         db  0xce ; '.'
0000000000006116         db  0xff ; '.'
0000000000006117         db  0xff ; '.'
0000000000006118         db  0xbc ; '.'
0000000000006119         db  0xce ; '.'
000000000000611a         db  0xff ; '.'
000000000000611b         db  0xff ; '.'
000000000000611c         db  0xbc ; '.'
000000000000611d         db  0xce ; '.'
000000000000611e         db  0xff ; '.'
000000000000611f         db  0xff ; '.'
0000000000006120         db  0xbc ; '.'
0000000000006121         db  0xce ; '.'
0000000000006122         db  0xff ; '.'
0000000000006123         db  0xff ; '.'
0000000000006124         db  0xbc ; '.'
0000000000006125         db  0xce ; '.'
0000000000006126         db  0xff ; '.'
0000000000006127         db  0xff ; '.'
0000000000006128         db  0xbc ; '.'
0000000000006129         db  0xce ; '.'
000000000000612a         db  0xff ; '.'
000000000000612b         db  0xff ; '.'
000000000000612c         db  0xbc ; '.'
000000000000612d         db  0xce ; '.'
000000000000612e         db  0xff ; '.'
000000000000612f         db  0xff ; '.'
0000000000006130         db  0xbc ; '.'
0000000000006131         db  0xce ; '.'
0000000000006132         db  0xff ; '.'
0000000000006133         db  0xff ; '.'
0000000000006134         db  0xbc ; '.'
0000000000006135         db  0xce ; '.'
0000000000006136         db  0xff ; '.'
0000000000006137         db  0xff ; '.'
0000000000006138         db  0xbc ; '.'
0000000000006139         db  0xce ; '.'
000000000000613a         db  0xff ; '.'
000000000000613b         db  0xff ; '.'
000000000000613c         db  0xbc ; '.'
000000000000613d         db  0xce ; '.'
000000000000613e         db  0xff ; '.'
000000000000613f         db  0xff ; '.'
0000000000006140         db  0xbc ; '.'
0000000000006141         db  0xce ; '.'
0000000000006142         db  0xff ; '.'
0000000000006143         db  0xff ; '.'
0000000000006144         db  0xbc ; '.'
0000000000006145         db  0xce ; '.'
0000000000006146         db  0xff ; '.'
0000000000006147         db  0xff ; '.'
0000000000006148         db  0xbc ; '.'
0000000000006149         db  0xce ; '.'
000000000000614a         db  0xff ; '.'
000000000000614b         db  0xff ; '.'
000000000000614c         db  0xbc ; '.'
000000000000614d         db  0xce ; '.'
000000000000614e         db  0xff ; '.'
000000000000614f         db  0xff ; '.'
0000000000006150         db  0xbc ; '.'
0000000000006151         db  0xce ; '.'
0000000000006152         db  0xff ; '.'
0000000000006153         db  0xff ; '.'
0000000000006154         db  0xbc ; '.'
0000000000006155         db  0xce ; '.'
0000000000006156         db  0xff ; '.'
0000000000006157         db  0xff ; '.'
0000000000006158         db  0xbc ; '.'
0000000000006159         db  0xce ; '.'
000000000000615a         db  0xff ; '.'
000000000000615b         db  0xff ; '.'
000000000000615c         db  0xbc ; '.'
000000000000615d         db  0xce ; '.'
000000000000615e         db  0xff ; '.'
000000000000615f         db  0xff ; '.'
0000000000006160         db  0xbc ; '.'
0000000000006161         db  0xce ; '.'
0000000000006162         db  0xff ; '.'
0000000000006163         db  0xff ; '.'
0000000000006164         db  0xbc ; '.'
0000000000006165         db  0xce ; '.'
0000000000006166         db  0xff ; '.'
0000000000006167         db  0xff ; '.'
0000000000006168         db  0xbc ; '.'
0000000000006169         db  0xce ; '.'
000000000000616a         db  0xff ; '.'
000000000000616b         db  0xff ; '.'
000000000000616c         db  0xbc ; '.'
000000000000616d         db  0xce ; '.'
000000000000616e         db  0xff ; '.'
000000000000616f         db  0xff ; '.'
0000000000006170         db  0xbc ; '.'
0000000000006171         db  0xce ; '.'
0000000000006172         db  0xff ; '.'
0000000000006173         db  0xff ; '.'
0000000000006174         db  0xbc ; '.'
0000000000006175         db  0xce ; '.'
0000000000006176         db  0xff ; '.'
0000000000006177         db  0xff ; '.'
0000000000006178         db  0x14 ; '.'
0000000000006179         db  0xcf ; '.'
000000000000617a         db  0xff ; '.'
000000000000617b         db  0xff ; '.'
000000000000617c         db  0xec ; '.'
000000000000617d         db  0xcd ; '.'
000000000000617e         db  0xff ; '.'
000000000000617f         db  0xff ; '.'
0000000000006180         db  0xbc ; '.'
0000000000006181         db  0xce ; '.'
0000000000006182         db  0xff ; '.'
0000000000006183         db  0xff ; '.'
0000000000006184         db  0x14 ; '.'
0000000000006185         db  0xcf ; '.'
0000000000006186         db  0xff ; '.'
0000000000006187         db  0xff ; '.'
0000000000006188         db  0xbc ; '.'
0000000000006189         db  0xce ; '.'
000000000000618a         db  0xff ; '.'
000000000000618b         db  0xff ; '.'
000000000000618c         db  0x14 ; '.'
000000000000618d         db  0xcf ; '.'
000000000000618e         db  0xff ; '.'
000000000000618f         db  0xff ; '.'
0000000000006190         db  0xbc ; '.'
0000000000006191         db  0xce ; '.'
0000000000006192         db  0xff ; '.'
0000000000006193         db  0xff ; '.'
0000000000006194         db  0xbc ; '.'
0000000000006195         db  0xce ; '.'
0000000000006196         db  0xff ; '.'
0000000000006197         db  0xff ; '.'
0000000000006198         db  0xbc ; '.'
0000000000006199         db  0xce ; '.'
000000000000619a         db  0xff ; '.'
000000000000619b         db  0xff ; '.'
000000000000619c         db  0xbc ; '.'
000000000000619d         db  0xce ; '.'
000000000000619e         db  0xff ; '.'
000000000000619f         db  0xff ; '.'
00000000000061a0         db  0xbc ; '.'
00000000000061a1         db  0xce ; '.'
00000000000061a2         db  0xff ; '.'
00000000000061a3         db  0xff ; '.'
00000000000061a4         db  0xbc ; '.'
00000000000061a5         db  0xce ; '.'
00000000000061a6         db  0xff ; '.'
00000000000061a7         db  0xff ; '.'
00000000000061a8         db  0xbc ; '.'
00000000000061a9         db  0xce ; '.'
00000000000061aa         db  0xff ; '.'
00000000000061ab         db  0xff ; '.'
00000000000061ac         db  0xbc ; '.'
00000000000061ad         db  0xce ; '.'
00000000000061ae         db  0xff ; '.'
00000000000061af         db  0xff ; '.'
00000000000061b0         db  0xbc ; '.'
00000000000061b1         db  0xce ; '.'
00000000000061b2         db  0xff ; '.'
00000000000061b3         db  0xff ; '.'
00000000000061b4         db  0xbc ; '.'
00000000000061b5         db  0xce ; '.'
00000000000061b6         db  0xff ; '.'
00000000000061b7         db  0xff ; '.'
00000000000061b8         db  0xbc ; '.'
00000000000061b9         db  0xce ; '.'
00000000000061ba         db  0xff ; '.'
00000000000061bb         db  0xff ; '.'
00000000000061bc         db  0xbc ; '.'
00000000000061bd         db  0xce ; '.'
00000000000061be         db  0xff ; '.'
00000000000061bf         db  0xff ; '.'
00000000000061c0         db  0xbc ; '.'
00000000000061c1         db  0xce ; '.'
00000000000061c2         db  0xff ; '.'
00000000000061c3         db  0xff ; '.'
00000000000061c4         db  0xbc ; '.'
00000000000061c5         db  0xce ; '.'
00000000000061c6         db  0xff ; '.'
00000000000061c7         db  0xff ; '.'
00000000000061c8         db  0xbc ; '.'
00000000000061c9         db  0xce ; '.'
00000000000061ca         db  0xff ; '.'
00000000000061cb         db  0xff ; '.'
00000000000061cc         db  0xbc ; '.'
00000000000061cd         db  0xce ; '.'
00000000000061ce         db  0xff ; '.'
00000000000061cf         db  0xff ; '.'
00000000000061d0         db  0xbc ; '.'
00000000000061d1         db  0xce ; '.'
00000000000061d2         db  0xff ; '.'
00000000000061d3         db  0xff ; '.'
00000000000061d4         db  0xbc ; '.'
00000000000061d5         db  0xce ; '.'
00000000000061d6         db  0xff ; '.'
00000000000061d7         db  0xff ; '.'
00000000000061d8         db  0xbc ; '.'
00000000000061d9         db  0xce ; '.'
00000000000061da         db  0xff ; '.'
00000000000061db         db  0xff ; '.'
00000000000061dc         db  0xbc ; '.'
00000000000061dd         db  0xce ; '.'
00000000000061de         db  0xff ; '.'
00000000000061df         db  0xff ; '.'
00000000000061e0         db  0xbc ; '.'
00000000000061e1         db  0xce ; '.'
00000000000061e2         db  0xff ; '.'
00000000000061e3         db  0xff ; '.'
00000000000061e4         db  0xbc ; '.'
00000000000061e5         db  0xce ; '.'
00000000000061e6         db  0xff ; '.'
00000000000061e7         db  0xff ; '.'
00000000000061e8         db  0xbc ; '.'
00000000000061e9         db  0xce ; '.'
00000000000061ea         db  0xff ; '.'
00000000000061eb         db  0xff ; '.'
00000000000061ec         db  0xbc ; '.'
00000000000061ed         db  0xce ; '.'
00000000000061ee         db  0xff ; '.'
00000000000061ef         db  0xff ; '.'
00000000000061f0         db  0xbc ; '.'
00000000000061f1         db  0xce ; '.'
00000000000061f2         db  0xff ; '.'
00000000000061f3         db  0xff ; '.'
00000000000061f4         db  0xbc ; '.'
00000000000061f5         db  0xce ; '.'
00000000000061f6         db  0xff ; '.'
00000000000061f7         db  0xff ; '.'
00000000000061f8         db  0x77 ; 'w'
00000000000061f9         db  0xcc ; '.'
00000000000061fa         db  0xff ; '.'
00000000000061fb         db  0xff ; '.'
00000000000061fc         db  0x14 ; '.'
00000000000061fd         db  0xcf ; '.'
00000000000061fe         db  0xff ; '.'
00000000000061ff         db  0xff ; '.'
0000000000006200         db  0x77 ; 'w'
0000000000006201         db  0xcc ; '.'
0000000000006202         db  0xff ; '.'
0000000000006203         db  0xff ; '.'
0000000000006204         db  0xe4 ; '.'
0000000000006205         db  0xce ; '.'
0000000000006206         db  0xff ; '.'
0000000000006207         db  0xff ; '.'
0000000000006208         db  0x68 ; 'h'                                         ; DATA XREF=sub_2f70+137
0000000000006209         db  0xce ; '.'
000000000000620a         db  0xff ; '.'
000000000000620b         db  0xff ; '.'
000000000000620c         db  0x78 ; 'x'
000000000000620d         db  0xcd ; '.'
000000000000620e         db  0xff ; '.'
000000000000620f         db  0xff ; '.'
0000000000006210         db  0x78 ; 'x'
0000000000006211         db  0xcd ; '.'
0000000000006212         db  0xff ; '.'
0000000000006213         db  0xff ; '.'
0000000000006214         db  0x78 ; 'x'
0000000000006215         db  0xcd ; '.'
0000000000006216         db  0xff ; '.'
0000000000006217         db  0xff ; '.'
0000000000006218         db  0x78 ; 'x'
0000000000006219         db  0xcd ; '.'
000000000000621a         db  0xff ; '.'
000000000000621b         db  0xff ; '.'
000000000000621c         db  0x78 ; 'x'
000000000000621d         db  0xcd ; '.'
000000000000621e         db  0xff ; '.'
000000000000621f         db  0xff ; '.'
0000000000006220         db  0x78 ; 'x'
0000000000006221         db  0xcd ; '.'
0000000000006222         db  0xff ; '.'
0000000000006223         db  0xff ; '.'
0000000000006224         db  0x58 ; 'X'
0000000000006225         db  0xce ; '.'
0000000000006226         db  0xff ; '.'
0000000000006227         db  0xff ; '.'
0000000000006228         db  0xa8 ; '.'
0000000000006229         db  0xcf ; '.'
000000000000622a         db  0xff ; '.'
000000000000622b         db  0xff ; '.'
000000000000622c         db  0x90 ; '.'
000000000000622d         db  0xcf ; '.'
000000000000622e         db  0xff ; '.'
000000000000622f         db  0xff ; '.'
0000000000006230         db  0x40 ; '@'
0000000000006231         db  0xce ; '.'
0000000000006232         db  0xff ; '.'
0000000000006233         db  0xff ; '.'
0000000000006234         db  0x80 ; '.'
0000000000006235         db  0xcf ; '.'
0000000000006236         db  0xff ; '.'
0000000000006237         db  0xff ; '.'
0000000000006238         db  0x28 ; '('
0000000000006239         db  0xce ; '.'
000000000000623a         db  0xff ; '.'
000000000000623b         db  0xff ; '.'
000000000000623c         db  0x68 ; 'h'
000000000000623d         db  0xcf ; '.'
000000000000623e         db  0xff ; '.'
000000000000623f         db  0xff ; '.'
0000000000006240         db  0x78 ; 'x'
0000000000006241         db  0xcd ; '.'
0000000000006242         db  0xff ; '.'
0000000000006243         db  0xff ; '.'
0000000000006244         db  0x78 ; 'x'
0000000000006245         db  0xcd ; '.'
0000000000006246         db  0xff ; '.'
0000000000006247         db  0xff ; '.'
0000000000006248         db  0x78 ; 'x'
0000000000006249         db  0xcd ; '.'
000000000000624a         db  0xff ; '.'
000000000000624b         db  0xff ; '.'
000000000000624c         db  0x78 ; 'x'
000000000000624d         db  0xcd ; '.'
000000000000624e         db  0xff ; '.'
000000000000624f         db  0xff ; '.'
0000000000006250         db  0x78 ; 'x'
0000000000006251         db  0xcd ; '.'
0000000000006252         db  0xff ; '.'
0000000000006253         db  0xff ; '.'
0000000000006254         db  0x78 ; 'x'
0000000000006255         db  0xcd ; '.'
0000000000006256         db  0xff ; '.'
0000000000006257         db  0xff ; '.'
0000000000006258         db  0x78 ; 'x'
0000000000006259         db  0xcd ; '.'
000000000000625a         db  0xff ; '.'
000000000000625b         db  0xff ; '.'
000000000000625c         db  0x78 ; 'x'
000000000000625d         db  0xcd ; '.'
000000000000625e         db  0xff ; '.'
000000000000625f         db  0xff ; '.'
0000000000006260         db  0x78 ; 'x'
0000000000006261         db  0xcd ; '.'
0000000000006262         db  0xff ; '.'
0000000000006263         db  0xff ; '.'
0000000000006264         db  0x78 ; 'x'
0000000000006265         db  0xcd ; '.'
0000000000006266         db  0xff ; '.'
0000000000006267         db  0xff ; '.'
0000000000006268         db  0x78 ; 'x'
0000000000006269         db  0xcd ; '.'
000000000000626a         db  0xff ; '.'
000000000000626b         db  0xff ; '.'
000000000000626c         db  0x78 ; 'x'
000000000000626d         db  0xcd ; '.'
000000000000626e         db  0xff ; '.'
000000000000626f         db  0xff ; '.'
0000000000006270         db  0x78 ; 'x'
0000000000006271         db  0xcd ; '.'
0000000000006272         db  0xff ; '.'
0000000000006273         db  0xff ; '.'
0000000000006274         db  0x78 ; 'x'
0000000000006275         db  0xcd ; '.'
0000000000006276         db  0xff ; '.'
0000000000006277         db  0xff ; '.'
0000000000006278         db  0x78 ; 'x'
0000000000006279         db  0xcd ; '.'
000000000000627a         db  0xff ; '.'
000000000000627b         db  0xff ; '.'
000000000000627c         db  0x78 ; 'x'
000000000000627d         db  0xcd ; '.'
000000000000627e         db  0xff ; '.'
000000000000627f         db  0xff ; '.'
0000000000006280         db  0x78 ; 'x'
0000000000006281         db  0xcd ; '.'
0000000000006282         db  0xff ; '.'
0000000000006283         db  0xff ; '.'
0000000000006284         db  0x78 ; 'x'
0000000000006285         db  0xcd ; '.'
0000000000006286         db  0xff ; '.'
0000000000006287         db  0xff ; '.'
0000000000006288         db  0x50 ; 'P'
0000000000006289         db  0xcf ; '.'
000000000000628a         db  0xff ; '.'
000000000000628b         db  0xff ; '.'
000000000000628c         db  0x38 ; '8'
000000000000628d         db  0xcf ; '.'
000000000000628e         db  0xff ; '.'
000000000000628f         db  0xff ; '.'
0000000000006290         db  0x38 ; '8'
0000000000006291         db  0xcf ; '.'
0000000000006292         db  0xff ; '.'
0000000000006293         db  0xff ; '.'
0000000000006294         db  0x20 ; ' '
0000000000006295         db  0xcf ; '.'
0000000000006296         db  0xff ; '.'
0000000000006297         db  0xff ; '.'
0000000000006298         db  0x38 ; '8'
0000000000006299         db  0xcf ; '.'
000000000000629a         db  0xff ; '.'
000000000000629b         db  0xff ; '.'
000000000000629c         db  0x08 ; '.'
000000000000629d         db  0xcf ; '.'
000000000000629e         db  0xff ; '.'
000000000000629f         db  0xff ; '.'
00000000000062a0         db  0x38 ; '8'
00000000000062a1         db  0xcf ; '.'
00000000000062a2         db  0xff ; '.'
00000000000062a3         db  0xff ; '.'
00000000000062a4         db  0x78 ; 'x'
00000000000062a5         db  0xcb ; '.'
00000000000062a6         db  0xff ; '.'
00000000000062a7         db  0xff ; '.'
00000000000062a8         db  0x38 ; '8'
00000000000062a9         db  0xcf ; '.'
00000000000062aa         db  0xff ; '.'
00000000000062ab         db  0xff ; '.'
00000000000062ac         db  0x38 ; '8'
00000000000062ad         db  0xcf ; '.'
00000000000062ae         db  0xff ; '.'
00000000000062af         db  0xff ; '.'
00000000000062b0         db  0x38 ; '8'
00000000000062b1         db  0xcf ; '.'
00000000000062b2         db  0xff ; '.'
00000000000062b3         db  0xff ; '.'
00000000000062b4         db  0x08 ; '.'
00000000000062b5         db  0xcf ; '.'
00000000000062b6         db  0xff ; '.'
00000000000062b7         db  0xff ; '.'
00000000000062b8         db  0x08 ; '.'
00000000000062b9         db  0xcf ; '.'
00000000000062ba         db  0xff ; '.'
00000000000062bb         db  0xff ; '.'
00000000000062bc         db  0x08 ; '.'
00000000000062bd         db  0xcf ; '.'
00000000000062be         db  0xff ; '.'
00000000000062bf         db  0xff ; '.'
00000000000062c0         db  0x08 ; '.'
00000000000062c1         db  0xcf ; '.'
00000000000062c2         db  0xff ; '.'
00000000000062c3         db  0xff ; '.'
00000000000062c4         db  0x08 ; '.'
00000000000062c5         db  0xcf ; '.'
00000000000062c6         db  0xff ; '.'
00000000000062c7         db  0xff ; '.'
00000000000062c8         db  0x08 ; '.'
00000000000062c9         db  0xcf ; '.'
00000000000062ca         db  0xff ; '.'
00000000000062cb         db  0xff ; '.'
00000000000062cc         db  0x08 ; '.'
00000000000062cd         db  0xcf ; '.'
00000000000062ce         db  0xff ; '.'
00000000000062cf         db  0xff ; '.'
00000000000062d0         db  0x08 ; '.'
00000000000062d1         db  0xcf ; '.'
00000000000062d2         db  0xff ; '.'
00000000000062d3         db  0xff ; '.'
00000000000062d4         db  0x08 ; '.'
00000000000062d5         db  0xcf ; '.'
00000000000062d6         db  0xff ; '.'
00000000000062d7         db  0xff ; '.'
00000000000062d8         db  0x08 ; '.'
00000000000062d9         db  0xcf ; '.'
00000000000062da         db  0xff ; '.'
00000000000062db         db  0xff ; '.'
00000000000062dc         db  0x08 ; '.'
00000000000062dd         db  0xcf ; '.'
00000000000062de         db  0xff ; '.'
00000000000062df         db  0xff ; '.'
00000000000062e0         db  0x08 ; '.'
00000000000062e1         db  0xcf ; '.'
00000000000062e2         db  0xff ; '.'
00000000000062e3         db  0xff ; '.'
00000000000062e4         db  0x08 ; '.'
00000000000062e5         db  0xcf ; '.'
00000000000062e6         db  0xff ; '.'
00000000000062e7         db  0xff ; '.'
00000000000062e8         db  0x08 ; '.'
00000000000062e9         db  0xcf ; '.'
00000000000062ea         db  0xff ; '.'
00000000000062eb         db  0xff ; '.'
00000000000062ec         db  0x08 ; '.'
00000000000062ed         db  0xcf ; '.'
00000000000062ee         db  0xff ; '.'
00000000000062ef         db  0xff ; '.'
00000000000062f0         db  0x08 ; '.'
00000000000062f1         db  0xcf ; '.'
00000000000062f2         db  0xff ; '.'
00000000000062f3         db  0xff ; '.'
00000000000062f4         db  0x38 ; '8'
00000000000062f5         db  0xcf ; '.'
00000000000062f6         db  0xff ; '.'
00000000000062f7         db  0xff ; '.'
00000000000062f8         db  0x38 ; '8'
00000000000062f9         db  0xcf ; '.'
00000000000062fa         db  0xff ; '.'
00000000000062fb         db  0xff ; '.'
00000000000062fc         db  0x38 ; '8'
00000000000062fd         db  0xcf ; '.'
00000000000062fe         db  0xff ; '.'
00000000000062ff         db  0xff ; '.'
0000000000006300         db  0x38 ; '8'
0000000000006301         db  0xcf ; '.'
0000000000006302         db  0xff ; '.'
0000000000006303         db  0xff ; '.'
0000000000006304         db  0x48 ; 'H'
0000000000006305         db  0xcb ; '.'
0000000000006306         db  0xff ; '.'
0000000000006307         db  0xff ; '.'
0000000000006308         db  0x78 ; 'x'
0000000000006309         db  0xcd ; '.'
000000000000630a         db  0xff ; '.'
000000000000630b         db  0xff ; '.'
000000000000630c         db  0x08 ; '.'
000000000000630d         db  0xcf ; '.'
000000000000630e         db  0xff ; '.'
000000000000630f         db  0xff ; '.'
0000000000006310         db  0x08 ; '.'
0000000000006311         db  0xcf ; '.'
0000000000006312         db  0xff ; '.'
0000000000006313         db  0xff ; '.'
0000000000006314         db  0x08 ; '.'
0000000000006315         db  0xcf ; '.'
0000000000006316         db  0xff ; '.'
0000000000006317         db  0xff ; '.'
0000000000006318         db  0x08 ; '.'
0000000000006319         db  0xcf ; '.'
000000000000631a         db  0xff ; '.'
000000000000631b         db  0xff ; '.'
000000000000631c         db  0x08 ; '.'
000000000000631d         db  0xcf ; '.'
000000000000631e         db  0xff ; '.'
000000000000631f         db  0xff ; '.'
0000000000006320         db  0x08 ; '.'
0000000000006321         db  0xcf ; '.'
0000000000006322         db  0xff ; '.'
0000000000006323         db  0xff ; '.'
0000000000006324         db  0x08 ; '.'
0000000000006325         db  0xcf ; '.'
0000000000006326         db  0xff ; '.'
0000000000006327         db  0xff ; '.'
0000000000006328         db  0x08 ; '.'
0000000000006329         db  0xcf ; '.'
000000000000632a         db  0xff ; '.'
000000000000632b         db  0xff ; '.'
000000000000632c         db  0x08 ; '.'
000000000000632d         db  0xcf ; '.'
000000000000632e         db  0xff ; '.'
000000000000632f         db  0xff ; '.'
0000000000006330         db  0x08 ; '.'
0000000000006331         db  0xcf ; '.'
0000000000006332         db  0xff ; '.'
0000000000006333         db  0xff ; '.'
0000000000006334         db  0x08 ; '.'
0000000000006335         db  0xcf ; '.'
0000000000006336         db  0xff ; '.'
0000000000006337         db  0xff ; '.'
0000000000006338         db  0x08 ; '.'
0000000000006339         db  0xcf ; '.'
000000000000633a         db  0xff ; '.'
000000000000633b         db  0xff ; '.'
000000000000633c         db  0x08 ; '.'
000000000000633d         db  0xcf ; '.'
000000000000633e         db  0xff ; '.'
000000000000633f         db  0xff ; '.'
0000000000006340         db  0x08 ; '.'
0000000000006341         db  0xcf ; '.'
0000000000006342         db  0xff ; '.'
0000000000006343         db  0xff ; '.'
0000000000006344         db  0x08 ; '.'
0000000000006345         db  0xcf ; '.'
0000000000006346         db  0xff ; '.'
0000000000006347         db  0xff ; '.'
0000000000006348         db  0x08 ; '.'
0000000000006349         db  0xcf ; '.'
000000000000634a         db  0xff ; '.'
000000000000634b         db  0xff ; '.'
000000000000634c         db  0x08 ; '.'
000000000000634d         db  0xcf ; '.'
000000000000634e         db  0xff ; '.'
000000000000634f         db  0xff ; '.'
0000000000006350         db  0x08 ; '.'
0000000000006351         db  0xcf ; '.'
0000000000006352         db  0xff ; '.'
0000000000006353         db  0xff ; '.'
0000000000006354         db  0x08 ; '.'
0000000000006355         db  0xcf ; '.'
0000000000006356         db  0xff ; '.'
0000000000006357         db  0xff ; '.'
0000000000006358         db  0x08 ; '.'
0000000000006359         db  0xcf ; '.'
000000000000635a         db  0xff ; '.'
000000000000635b         db  0xff ; '.'
000000000000635c         db  0x08 ; '.'
000000000000635d         db  0xcf ; '.'
000000000000635e         db  0xff ; '.'
000000000000635f         db  0xff ; '.'
0000000000006360         db  0x08 ; '.'
0000000000006361         db  0xcf ; '.'
0000000000006362         db  0xff ; '.'
0000000000006363         db  0xff ; '.'
0000000000006364         db  0x08 ; '.'
0000000000006365         db  0xcf ; '.'
0000000000006366         db  0xff ; '.'
0000000000006367         db  0xff ; '.'
0000000000006368         db  0x08 ; '.'
0000000000006369         db  0xcf ; '.'
000000000000636a         db  0xff ; '.'
000000000000636b         db  0xff ; '.'
000000000000636c         db  0x08 ; '.'
000000000000636d         db  0xcf ; '.'
000000000000636e         db  0xff ; '.'
000000000000636f         db  0xff ; '.'
0000000000006370         db  0x08 ; '.'
0000000000006371         db  0xcf ; '.'
0000000000006372         db  0xff ; '.'
0000000000006373         db  0xff ; '.'
0000000000006374         db  0x38 ; '8'
0000000000006375         db  0xcf ; '.'
0000000000006376         db  0xff ; '.'
0000000000006377         db  0xff ; '.'
0000000000006378         db  0x08 ; '.'
0000000000006379         db  0xce ; '.'
000000000000637a         db  0xff ; '.'
000000000000637b         db  0xff ; '.'
000000000000637c         db  0x08 ; '.'
000000000000637d         db  0xcf ; '.'
000000000000637e         db  0xff ; '.'
000000000000637f         db  0xff ; '.'
0000000000006380         db  0x38 ; '8'
0000000000006381         db  0xcf ; '.'
0000000000006382         db  0xff ; '.'
0000000000006383         db  0xff ; '.'
0000000000006384         db  0x08 ; '.'
0000000000006385         db  0xcf ; '.'
0000000000006386         db  0xff ; '.'
0000000000006387         db  0xff ; '.'
0000000000006388         db  0x38 ; '8'
0000000000006389         db  0xcf ; '.'
000000000000638a         db  0xff ; '.'
000000000000638b         db  0xff ; '.'
000000000000638c         db  0x08 ; '.'
000000000000638d         db  0xcf ; '.'
000000000000638e         db  0xff ; '.'
000000000000638f         db  0xff ; '.'
0000000000006390         db  0x08 ; '.'
0000000000006391         db  0xcf ; '.'
0000000000006392         db  0xff ; '.'
0000000000006393         db  0xff ; '.'
0000000000006394         db  0x08 ; '.'
0000000000006395         db  0xcf ; '.'
0000000000006396         db  0xff ; '.'
0000000000006397         db  0xff ; '.'
0000000000006398         db  0x08 ; '.'
0000000000006399         db  0xcf ; '.'
000000000000639a         db  0xff ; '.'
000000000000639b         db  0xff ; '.'
000000000000639c         db  0x08 ; '.'
000000000000639d         db  0xcf ; '.'
000000000000639e         db  0xff ; '.'
000000000000639f         db  0xff ; '.'
00000000000063a0         db  0x08 ; '.'
00000000000063a1         db  0xcf ; '.'
00000000000063a2         db  0xff ; '.'
00000000000063a3         db  0xff ; '.'
00000000000063a4         db  0x08 ; '.'
00000000000063a5         db  0xcf ; '.'
00000000000063a6         db  0xff ; '.'
00000000000063a7         db  0xff ; '.'
00000000000063a8         db  0x08 ; '.'
00000000000063a9         db  0xcf ; '.'
00000000000063aa         db  0xff ; '.'
00000000000063ab         db  0xff ; '.'
00000000000063ac         db  0x08 ; '.'
00000000000063ad         db  0xcf ; '.'
00000000000063ae         db  0xff ; '.'
00000000000063af         db  0xff ; '.'
00000000000063b0         db  0x08 ; '.'
00000000000063b1         db  0xcf ; '.'
00000000000063b2         db  0xff ; '.'
00000000000063b3         db  0xff ; '.'
00000000000063b4         db  0x08 ; '.'
00000000000063b5         db  0xcf ; '.'
00000000000063b6         db  0xff ; '.'
00000000000063b7         db  0xff ; '.'
00000000000063b8         db  0x08 ; '.'
00000000000063b9         db  0xcf ; '.'
00000000000063ba         db  0xff ; '.'
00000000000063bb         db  0xff ; '.'
00000000000063bc         db  0x08 ; '.'
00000000000063bd         db  0xcf ; '.'
00000000000063be         db  0xff ; '.'
00000000000063bf         db  0xff ; '.'
00000000000063c0         db  0x08 ; '.'
00000000000063c1         db  0xcf ; '.'
00000000000063c2         db  0xff ; '.'
00000000000063c3         db  0xff ; '.'
00000000000063c4         db  0x08 ; '.'
00000000000063c5         db  0xcf ; '.'
00000000000063c6         db  0xff ; '.'
00000000000063c7         db  0xff ; '.'
00000000000063c8         db  0x08 ; '.'
00000000000063c9         db  0xcf ; '.'
00000000000063ca         db  0xff ; '.'
00000000000063cb         db  0xff ; '.'
00000000000063cc         db  0x08 ; '.'
00000000000063cd         db  0xcf ; '.'
00000000000063ce         db  0xff ; '.'
00000000000063cf         db  0xff ; '.'
00000000000063d0         db  0x08 ; '.'
00000000000063d1         db  0xcf ; '.'
00000000000063d2         db  0xff ; '.'
00000000000063d3         db  0xff ; '.'
00000000000063d4         db  0x08 ; '.'
00000000000063d5         db  0xcf ; '.'
00000000000063d6         db  0xff ; '.'
00000000000063d7         db  0xff ; '.'
00000000000063d8         db  0x08 ; '.'
00000000000063d9         db  0xcf ; '.'
00000000000063da         db  0xff ; '.'
00000000000063db         db  0xff ; '.'
00000000000063dc         db  0x08 ; '.'
00000000000063dd         db  0xcf ; '.'
00000000000063de         db  0xff ; '.'
00000000000063df         db  0xff ; '.'
00000000000063e0         db  0x08 ; '.'
00000000000063e1         db  0xcf ; '.'
00000000000063e2         db  0xff ; '.'
00000000000063e3         db  0xff ; '.'
00000000000063e4         db  0x08 ; '.'
00000000000063e5         db  0xcf ; '.'
00000000000063e6         db  0xff ; '.'
00000000000063e7         db  0xff ; '.'
00000000000063e8         db  0x08 ; '.'
00000000000063e9         db  0xcf ; '.'
00000000000063ea         db  0xff ; '.'
00000000000063eb         db  0xff ; '.'
00000000000063ec         db  0x08 ; '.'
00000000000063ed         db  0xcf ; '.'
00000000000063ee         db  0xff ; '.'
00000000000063ef         db  0xff ; '.'
00000000000063f0         db  0x08 ; '.'
00000000000063f1         db  0xcf ; '.'
00000000000063f2         db  0xff ; '.'
00000000000063f3         db  0xff ; '.'
00000000000063f4         db  0x78 ; 'x'
00000000000063f5         db  0xca ; '.'
00000000000063f6         db  0xff ; '.'
00000000000063f7         db  0xff ; '.'
00000000000063f8         db  0x38 ; '8'
00000000000063f9         db  0xcf ; '.'
00000000000063fa         db  0xff ; '.'
00000000000063fb         db  0xff ; '.'
00000000000063fc         db  0x78 ; 'x'
00000000000063fd         db  0xca ; '.'
00000000000063fe         db  0xff ; '.'
00000000000063ff         db  0xff ; '.'
0000000000006400         db  0x20 ; ' '
0000000000006401         db  0xcf ; '.'
0000000000006402         db  0xff ; '.'
0000000000006403         db  0xff ; '.'
0000000000006404         db  0x00 ; '.'
0000000000006405         db  0x00 ; '.'
0000000000006406         db  0x00 ; '.'
0000000000006407         db  0x00 ; '.'
0000000000006408         db  0x00 ; '.'
0000000000006409         db  0x00 ; '.'
000000000000640a         db  0x00 ; '.'
000000000000640b         db  0x00 ; '.'
000000000000640c         db  0x00 ; '.'
000000000000640d         db  0x00 ; '.'
000000000000640e         db  0x00 ; '.'
000000000000640f         db  0x00 ; '.'
0000000000006410         db  0x00 ; '.'
0000000000006411         db  0x00 ; '.'
0000000000006412         db  0x00 ; '.'
0000000000006413         db  0x00 ; '.'
0000000000006414         db  0x00 ; '.'
0000000000006415         db  0x00 ; '.'
0000000000006416         db  0x00 ; '.'
0000000000006417         db  0x00 ; '.'
0000000000006418         db  0x00 ; '.'
0000000000006419         db  0x00 ; '.'
000000000000641a         db  0x00 ; '.'
000000000000641b         db  0x00 ; '.'
000000000000641c         db  0x00 ; '.'
000000000000641d         db  0x00 ; '.'
000000000000641e         db  0x00 ; '.'
000000000000641f         db  0x00 ; '.'
                     quoting_style_vals:
0000000000006420         db  0x00 ; '.'
0000000000006421         db  0x00 ; '.'
0000000000006422         db  0x00 ; '.'
0000000000006423         db  0x00 ; '.'
0000000000006424         db  0x01 ; '.'
0000000000006425         db  0x00 ; '.'
0000000000006426         db  0x00 ; '.'
0000000000006427         db  0x00 ; '.'
0000000000006428         db  0x02 ; '.'
0000000000006429         db  0x00 ; '.'
000000000000642a         db  0x00 ; '.'
000000000000642b         db  0x00 ; '.'
000000000000642c         db  0x03 ; '.'
000000000000642d         db  0x00 ; '.'
000000000000642e         db  0x00 ; '.'
000000000000642f         db  0x00 ; '.'
0000000000006430         db  0x04 ; '.'
0000000000006431         db  0x00 ; '.'
0000000000006432         db  0x00 ; '.'
0000000000006433         db  0x00 ; '.'
0000000000006434         db  0x05 ; '.'
0000000000006435         db  0x00 ; '.'
0000000000006436         db  0x00 ; '.'
0000000000006437         db  0x00 ; '.'
0000000000006438         db  0x06 ; '.'
0000000000006439         db  0x00 ; '.'
000000000000643a         db  0x00 ; '.'
000000000000643b         db  0x00 ; '.'
000000000000643c         db  0x07 ; '.'
000000000000643d         db  0x00 ; '.'
000000000000643e         db  0x00 ; '.'
000000000000643f         db  0x00 ; '.'
0000000000006440         db  0x08 ; '.'
0000000000006441         db  0x00 ; '.'
0000000000006442         db  0x00 ; '.'
0000000000006443         db  0x00 ; '.'
0000000000006444         db  0x09 ; '.'
0000000000006445         db  0x00 ; '.'
0000000000006446         db  0x00 ; '.'
0000000000006447         db  0x00 ; '.'
                     aSSSn:
0000000000006448         db         "%s (%s) %s\n", 0                           ; DATA XREF=version_etc_arn+35
                     aSSn:
0000000000006454         db         "%s %s\n", 0                                ; DATA XREF=version_etc_arn+318
000000000000645b         db  0x28 ; '('                                         ; DATA XREF=version_etc_arn+60
000000000000645c         db  0x43 ; 'C'
000000000000645d         db  0x29 ; ')'
000000000000645e         db  0x00 ; '.'
                     aWrittenBySn:
000000000000645f         db         "Written by %s.\n", 0                       ; DATA XREF=version_etc_arn+443
                     aWrittenBySAndS:
000000000000646f         db         "Written by %s and %s.\n", 0                ; DATA XREF=version_etc_arn+508
                     aWrittenBySSAnd:
0000000000006486         db         "Written by %s, %s, and %s.\n", 0           ; DATA XREF=version_etc_arn+584
                     aNreportBugsToS:
00000000000064a2         db         "\nReport bugs to: %s\n", 0                 ; DATA XREF=emit_bug_reporting_address+1
                     aBugcoreutilsgn:
00000000000064b7         db         "bug-coreutils@gnu.org", 0                  ; DATA XREF=emit_bug_reporting_address+20
                     aSHomePageSn:
00000000000064cd         db         "%s home page: <%s>\n", 0                   ; DATA XREF=emit_bug_reporting_address+42
00000000000064e1         align      8
                     aNlicenseGplv3G:
00000000000064e8         db         "\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\n", 0 ; DATA XREF=version_etc_arn+110
00000000000065b4         align      8
                     aWrittenBySSSna:
00000000000065b8         db         "Written by %s, %s, %s,\nand %s.\n", 0      ; DATA XREF=version_etc_arn+656
                     aWrittenBySSSns_65d8:        // aWrittenBySSSns
00000000000065d8         db         "Written by %s, %s, %s,\n%s, and %s.\n", 0  ; DATA XREF=version_etc_arn+748
00000000000065fc         align      512
                     aWrittenBySSSns_6600:        // aWrittenBySSSns
0000000000006600         db         "Written by %s, %s, %s,\n%s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+800
                     aWrittenBySSSns_6628:        // aWrittenBySSSns
0000000000006628         db         "Written by %s, %s, %s,\n%s, %s, %s, and %s.\n", 0 ; DATA XREF=version_etc_arn+904
0000000000006654         align      8
                     aWrittenBySSSns_6658:        // aWrittenBySSSns
0000000000006658         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\nand %s.\n", 0 ; DATA XREF=version_etc_arn+184
                     aWrittenBySSSns:
0000000000006688         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, and %s.\n", 0 ; DATA XREF=version_etc_arn+360
00000000000066bc         align      64
                     aWrittenBySSSns_66c0:        // aWrittenBySSSns
00000000000066c0         db         "Written by %s, %s, %s,\n%s, %s, %s, %s,\n%s, %s, and others.\n", 0 ; DATA XREF=version_etc_arn+997
00000000000066fc         align      256
                     aGeneralHelpUsi:
0000000000006700         db         "General help using GNU software: <https://www.gnu.org/gethelp/>\n", 0 ; DATA XREF=emit_bug_reporting_address+97
0000000000006741         align      4
                     switch_table_6744:        // switch_table
0000000000006744         dd         version_etc_arn.loc_4756-switch_table_6744, version_etc_arn.loc_47e8-switch_table_6744, version_etc_arn.loc_4828-switch_table_6744, version_etc_arn.loc_4870-switch_table_6744 ; switch table used at 0x46d4 containing 10 entries, DATA XREF=version_etc_arn+150
0000000000006754         dd         version_etc_arn.loc_48c0-switch_table_6744, version_etc_arn.loc_4918-switch_table_6744, version_etc_arn.loc_4948-switch_table_6744, version_etc_arn.loc_49b0-switch_table_6744
0000000000006764         dd         version_etc_arn.loc_46e0-switch_table_6744, version_etc_arn.loc_4790-switch_table_6744
000000000000676c         align      128
                     version_etc_copyright:
0000000000006780         db         "Copyright %s %d Free Software Foundation, Inc.", 0 ; DATA XREF=version_etc_arn+79
                     aMemoryExhauste:
00000000000067af         db         "memory exhausted", 0                       ; DATA XREF=xalloc_die
                     aCoreutils831li:
00000000000067c0         db         "../coreutils-8.31/lib/xstrtol.c", 0        ; DATA XREF=xstrtoumax+908
                     a0StrtolbaseStr:
00000000000067e0         db         "0 <= strtol_base && strtol_base <= 36", 0  ; DATA XREF=xstrtoumax+915
0000000000006806         align      8
                     switch_table_6808:        // switch_table
0000000000006808         dd         xstrtoumax.loc_5206-switch_table_6808, 2 dup (xstrtoumax.loc_50fc-switch_table_6808), xstrtoumax.loc_51e3-switch_table_6808, xstrtoumax.loc_50fc-switch_table_6808 ; switch table used at 0x50b6 containing 54 entries, DATA XREF=xstrtoumax+452
000000000000681c         dd         xstrtoumax.loc_521c-switch_table_6808, 3 dup (xstrtoumax.loc_50fc-switch_table_6808), xstrtoumax.loc_519f-switch_table_6808, xstrtoumax.loc_50fc-switch_table_6808
0000000000006834         dd         xstrtoumax.loc_50b8-switch_table_6808, 2 dup (xstrtoumax.loc_50fc-switch_table_6808), xstrtoumax.loc_51c0-switch_table_6808, 3 dup (xstrtoumax.loc_50fc-switch_table_6808)
0000000000006850         dd         xstrtoumax.loc_517f-switch_table_6808, 4 dup (xstrtoumax.loc_50fc-switch_table_6808), xstrtoumax.loc_515a-switch_table_6808, xstrtoumax.loc_5134-switch_table_6808
000000000000686c         dd         7 dup (xstrtoumax.loc_50fc-switch_table_6808), xstrtoumax.loc_511d-switch_table_6808, xstrtoumax.loc_50e0-switch_table_6808, 3 dup (xstrtoumax.loc_50fc-switch_table_6808)
000000000000689c         dd         xstrtoumax.loc_521c-switch_table_6808, 3 dup (xstrtoumax.loc_50fc-switch_table_6808), xstrtoumax.loc_519f-switch_table_6808, xstrtoumax.loc_50fc-switch_table_6808
00000000000068b4         dd         xstrtoumax.loc_50b8-switch_table_6808, 6 dup (xstrtoumax.loc_50fc-switch_table_6808), xstrtoumax.loc_517f-switch_table_6808, 2 dup (xstrtoumax.loc_50fc-switch_table_6808)
00000000000068dc         dd         xstrtoumax.loc_5107-switch_table_6808
                     __PRETTY_FUNCTION__.4162:
00000000000068e0         db         "xstrtoumax", 0                             ; DATA XREF=xstrtoumax+901
00000000000068eb         db  0x43 ; 'C'                                         ; DATA XREF=hard_locale+24
00000000000068ec         db  0x00 ; '.'
                     aPosix:
00000000000068ed         db         "POSIX", 0                                  ; DATA XREF=hard_locale+64
                     aAscii:
00000000000068f3         db         "ASCII", 0                                  ; DATA XREF=locale_charset+22, locale_charset+48
00000000000068f9         db  0x00 ; '.'
00000000000068fa         db  0x00 ; '.'
00000000000068fb         db  0x00 ; '.'


        ; Section .eh_frame_hdr
        ; Range: [0x68fc; 0x6b58[ (604 bytes)
        ; File offset : [26876; 27480[ (604 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

00000000000068fc         db  0x01 ; '.'
00000000000068fd         db  0x1b ; '.'
00000000000068fe         db  0x03 ; '.'
00000000000068ff         db  0x3b ; ';'
0000000000006900         db  0x58 ; 'X'
0000000000006901         db  0x02 ; '.'
0000000000006902         db  0x00 ; '.'
0000000000006903         db  0x00 ; '.'
0000000000006904         db  0x4a ; 'J'
0000000000006905         db  0x00 ; '.'
0000000000006906         db  0x00 ; '.'
0000000000006907         db  0x00 ; '.'
0000000000006908         db  0xb4 ; '.'
0000000000006909         db  0xaa ; '.'
000000000000690a         db  0xff ; '.'
000000000000690b         db  0xff ; '.'
000000000000690c         db  0xa4 ; '.'
000000000000690d         db  0x02 ; '.'
000000000000690e         db  0x00 ; '.'
000000000000690f         db  0x00 ; '.'
0000000000006910         db  0xb4 ; '.'
0000000000006911         db  0xad ; '.'
0000000000006912         db  0xff ; '.'
0000000000006913         db  0xff ; '.'
0000000000006914         db  0xcc ; '.'
0000000000006915         db  0x02 ; '.'
0000000000006916         db  0x00 ; '.'
0000000000006917         db  0x00 ; '.'
0000000000006918         db  0xc4 ; '.'
0000000000006919         db  0xad ; '.'
000000000000691a         db  0xff ; '.'
000000000000691b         db  0xff ; '.'
000000000000691c         db  0x10 ; '.'
000000000000691d         db  0x03 ; '.'
000000000000691e         db  0x00 ; '.'
000000000000691f         db  0x00 ; '.'
0000000000006920         db  0x44 ; 'D'
0000000000006921         db  0xb4 ; '.'
0000000000006922         db  0xff ; '.'
0000000000006923         db  0xff ; '.'
0000000000006924         db  0x74 ; 't'
0000000000006925         db  0x02 ; '.'
0000000000006926         db  0x00 ; '.'
0000000000006927         db  0x00 ; '.'
0000000000006928         db  0x54 ; 'T'
0000000000006929         db  0xb5 ; '.'
000000000000692a         db  0xff ; '.'
000000000000692b         db  0xff ; '.'
000000000000692c         db  0xe4 ; '.'
000000000000692d         db  0x02 ; '.'
000000000000692e         db  0x00 ; '.'
000000000000692f         db  0x00 ; '.'
0000000000006930         db  0x84 ; '.'
0000000000006931         db  0xb9 ; '.'
0000000000006932         db  0xff ; '.'
0000000000006933         db  0xff ; '.'
0000000000006934         db  0x5c ; '\'
0000000000006935         db  0x03 ; '.'
0000000000006936         db  0x00 ; '.'
0000000000006937         db  0x00 ; '.'
0000000000006938         db  0x94 ; '.'
0000000000006939         db  0xb9 ; '.'
000000000000693a         db  0xff ; '.'
000000000000693b         db  0xff ; '.'
000000000000693c         db  0x70 ; 'p'
000000000000693d         db  0x03 ; '.'
000000000000693e         db  0x00 ; '.'
000000000000693f         db  0x00 ; '.'
0000000000006940         db  0xa4 ; '.'
0000000000006941         db  0xb9 ; '.'
0000000000006942         db  0xff ; '.'
0000000000006943         db  0xff ; '.'
0000000000006944         db  0x84 ; '.'
0000000000006945         db  0x03 ; '.'
0000000000006946         db  0x00 ; '.'
0000000000006947         db  0x00 ; '.'
0000000000006948         db  0x54 ; 'T'
0000000000006949         db  0xba ; '.'
000000000000694a         db  0xff ; '.'
000000000000694b         db  0xff ; '.'
000000000000694c         db  0xb4 ; '.'
000000000000694d         db  0x03 ; '.'
000000000000694e         db  0x00 ; '.'
000000000000694f         db  0x00 ; '.'
0000000000006950         db  0x04 ; '.'
0000000000006951         db  0xbe ; '.'
0000000000006952         db  0xff ; '.'
0000000000006953         db  0xff ; '.'
0000000000006954         db  0xfc ; '.'
0000000000006955         db  0x03 ; '.'
0000000000006956         db  0x00 ; '.'
0000000000006957         db  0x00 ; '.'
0000000000006958         db  0x94 ; '.'
0000000000006959         db  0xbe ; '.'
000000000000695a         db  0xff ; '.'
000000000000695b         db  0xff ; '.'
000000000000695c         db  0x20 ; ' '
000000000000695d         db  0x04 ; '.'
000000000000695e         db  0x00 ; '.'
000000000000695f         db  0x00 ; '.'
0000000000006960         db  0x04 ; '.'
0000000000006961         db  0xc0 ; '.'
0000000000006962         db  0xff ; '.'
0000000000006963         db  0xff ; '.'
0000000000006964         db  0x54 ; 'T'
0000000000006965         db  0x04 ; '.'
0000000000006966         db  0x00 ; '.'
0000000000006967         db  0x00 ; '.'
0000000000006968         db  0xa4 ; '.'
0000000000006969         db  0xc0 ; '.'
000000000000696a         db  0xff ; '.'
000000000000696b         db  0xff ; '.'
000000000000696c         db  0x74 ; 't'
000000000000696d         db  0x04 ; '.'
000000000000696e         db  0x00 ; '.'
000000000000696f         db  0x00 ; '.'
0000000000006970         db  0x94 ; '.'
0000000000006971         db  0xc1 ; '.'
0000000000006972         db  0xff ; '.'
0000000000006973         db  0xff ; '.'
0000000000006974         db  0xb8 ; '.'
0000000000006975         db  0x04 ; '.'
0000000000006976         db  0x00 ; '.'
0000000000006977         db  0x00 ; '.'
0000000000006978         db  0xd4 ; '.'
0000000000006979         db  0xd3 ; '.'
000000000000697a         db  0xff ; '.'
000000000000697b         db  0xff ; '.'
000000000000697c         db  0x30 ; '0'
000000000000697d         db  0x05 ; '.'
000000000000697e         db  0x00 ; '.'
000000000000697f         db  0x00 ; '.'
0000000000006980         db  0x84 ; '.'
0000000000006981         db  0xd5 ; '.'
0000000000006982         db  0xff ; '.'
0000000000006983         db  0xff ; '.'
0000000000006984         db  0x9c ; '.'
0000000000006985         db  0x05 ; '.'
0000000000006986         db  0x00 ; '.'
0000000000006987         db  0x00 ; '.'
0000000000006988         db  0xc4 ; '.'
0000000000006989         db  0xd5 ; '.'
000000000000698a         db  0xff ; '.'
000000000000698b         db  0xff ; '.'
000000000000698c         db  0xc8 ; '.'
000000000000698d         db  0x05 ; '.'
000000000000698e         db  0x00 ; '.'
000000000000698f         db  0x00 ; '.'
0000000000006990         db  0xe4 ; '.'
0000000000006991         db  0xd5 ; '.'
0000000000006992         db  0xff ; '.'
0000000000006993         db  0xff ; '.'
0000000000006994         db  0xdc ; '.'
0000000000006995         db  0x05 ; '.'
0000000000006996         db  0x00 ; '.'
0000000000006997         db  0x00 ; '.'
0000000000006998         db  0x04 ; '.'
0000000000006999         db  0xd6 ; '.'
000000000000699a         db  0xff ; '.'
000000000000699b         db  0xff ; '.'
000000000000699c         db  0xf0 ; '.'
000000000000699d         db  0x05 ; '.'
000000000000699e         db  0x00 ; '.'
000000000000699f         db  0x00 ; '.'
00000000000069a0         db  0x44 ; 'D'
00000000000069a1         db  0xd6 ; '.'
00000000000069a2         db  0xff ; '.'
00000000000069a3         db  0xff ; '.'
00000000000069a4         db  0x04 ; '.'
00000000000069a5         db  0x06 ; '.'
00000000000069a6         db  0x00 ; '.'
00000000000069a7         db  0x00 ; '.'
00000000000069a8         db  0x64 ; 'd'
00000000000069a9         db  0xd6 ; '.'
00000000000069aa         db  0xff ; '.'
00000000000069ab         db  0xff ; '.'
00000000000069ac         db  0x18 ; '.'
00000000000069ad         db  0x06 ; '.'
00000000000069ae         db  0x00 ; '.'
00000000000069af         db  0x00 ; '.'
00000000000069b0         db  0x94 ; '.'
00000000000069b1         db  0xd6 ; '.'
00000000000069b2         db  0xff ; '.'
00000000000069b3         db  0xff ; '.'
00000000000069b4         db  0x2c ; ','
00000000000069b5         db  0x06 ; '.'
00000000000069b6         db  0x00 ; '.'
00000000000069b7         db  0x00 ; '.'
00000000000069b8         db  0x14 ; '.'
00000000000069b9         db  0xd7 ; '.'
00000000000069ba         db  0xff ; '.'
00000000000069bb         db  0xff ; '.'
00000000000069bc         db  0x80 ; '.'
00000000000069bd         db  0x06 ; '.'
00000000000069be         db  0x00 ; '.'
00000000000069bf         db  0x00 ; '.'
00000000000069c0         db  0x04 ; '.'
00000000000069c1         db  0xd8 ; '.'
00000000000069c2         db  0xff ; '.'
00000000000069c3         db  0xff ; '.'
00000000000069c4         db  0xec ; '.'
00000000000069c5         db  0x06 ; '.'
00000000000069c6         db  0x00 ; '.'
00000000000069c7         db  0x00 ; '.'
00000000000069c8         db  0x14 ; '.'
00000000000069c9         db  0xd8 ; '.'
00000000000069ca         db  0xff ; '.'
00000000000069cb         db  0xff ; '.'
00000000000069cc         db  0x00 ; '.'
00000000000069cd         db  0x07 ; '.'
00000000000069ce         db  0x00 ; '.'
00000000000069cf         db  0x00 ; '.'
00000000000069d0         db  0xb4 ; '.'
00000000000069d1         db  0xd8 ; '.'
00000000000069d2         db  0xff ; '.'
00000000000069d3         db  0xff ; '.'
00000000000069d4         db  0x2c ; ','
00000000000069d5         db  0x07 ; '.'
00000000000069d6         db  0x00 ; '.'
00000000000069d7         db  0x00 ; '.'
00000000000069d8         db  0xd4 ; '.'
00000000000069d9         db  0xd8 ; '.'
00000000000069da         db  0xff ; '.'
00000000000069db         db  0xff ; '.'
00000000000069dc         db  0x40 ; '@'
00000000000069dd         db  0x07 ; '.'
00000000000069de         db  0x00 ; '.'
00000000000069df         db  0x00 ; '.'
00000000000069e0         db  0xe4 ; '.'
00000000000069e1         db  0xd8 ; '.'
00000000000069e2         db  0xff ; '.'
00000000000069e3         db  0xff ; '.'
00000000000069e4         db  0x54 ; 'T'
00000000000069e5         db  0x07 ; '.'
00000000000069e6         db  0x00 ; '.'
00000000000069e7         db  0x00 ; '.'
00000000000069e8         db  0x04 ; '.'
00000000000069e9         db  0xd9 ; '.'
00000000000069ea         db  0xff ; '.'
00000000000069eb         db  0xff ; '.'
00000000000069ec         db  0x68 ; 'h'
00000000000069ed         db  0x07 ; '.'
00000000000069ee         db  0x00 ; '.'
00000000000069ef         db  0x00 ; '.'
00000000000069f0         db  0x24 ; '$'
00000000000069f1         db  0xd9 ; '.'
00000000000069f2         db  0xff ; '.'
00000000000069f3         db  0xff ; '.'
00000000000069f4         db  0x7c ; '|'
00000000000069f5         db  0x07 ; '.'
00000000000069f6         db  0x00 ; '.'
00000000000069f7         db  0x00 ; '.'
00000000000069f8         db  0xb4 ; '.'
00000000000069f9         db  0xd9 ; '.'
00000000000069fa         db  0xff ; '.'
00000000000069fb         db  0xff ; '.'
00000000000069fc         db  0x98 ; '.'
00000000000069fd         db  0x07 ; '.'
00000000000069fe         db  0x00 ; '.'
00000000000069ff         db  0x00 ; '.'
0000000000006a00         db  0x44 ; 'D'
0000000000006a01         db  0xda ; '.'
0000000000006a02         db  0xff ; '.'
0000000000006a03         db  0xff ; '.'
0000000000006a04         db  0xb4 ; '.'
0000000000006a05         db  0x07 ; '.'
0000000000006a06         db  0x00 ; '.'
0000000000006a07         db  0x00 ; '.'
0000000000006a08         db  0x54 ; 'T'
0000000000006a09         db  0xda ; '.'
0000000000006a0a         db  0xff ; '.'
0000000000006a0b         db  0xff ; '.'
0000000000006a0c         db  0xc8 ; '.'
0000000000006a0d         db  0x07 ; '.'
0000000000006a0e         db  0x00 ; '.'
0000000000006a0f         db  0x00 ; '.'
0000000000006a10         db  0x64 ; 'd'
0000000000006a11         db  0xda ; '.'
0000000000006a12         db  0xff ; '.'
0000000000006a13         db  0xff ; '.'
0000000000006a14         db  0xdc ; '.'
0000000000006a15         db  0x07 ; '.'
0000000000006a16         db  0x00 ; '.'
0000000000006a17         db  0x00 ; '.'
0000000000006a18         db  0x04 ; '.'
0000000000006a19         db  0xdb ; '.'
0000000000006a1a         db  0xff ; '.'
0000000000006a1b         db  0xff ; '.'
0000000000006a1c         db  0xf8 ; '.'
0000000000006a1d         db  0x07 ; '.'
0000000000006a1e         db  0x00 ; '.'
0000000000006a1f         db  0x00 ; '.'
0000000000006a20         db  0x14 ; '.'
0000000000006a21         db  0xdb ; '.'
0000000000006a22         db  0xff ; '.'
0000000000006a23         db  0xff ; '.'
0000000000006a24         db  0x0c ; '.'
0000000000006a25         db  0x08 ; '.'
0000000000006a26         db  0x00 ; '.'
0000000000006a27         db  0x00 ; '.'
0000000000006a28         db  0x34 ; '4'
0000000000006a29         db  0xdb ; '.'
0000000000006a2a         db  0xff ; '.'
0000000000006a2b         db  0xff ; '.'
0000000000006a2c         db  0x20 ; ' '
0000000000006a2d         db  0x08 ; '.'
0000000000006a2e         db  0x00 ; '.'
0000000000006a2f         db  0x00 ; '.'
0000000000006a30         db  0x44 ; 'D'
0000000000006a31         db  0xdb ; '.'
0000000000006a32         db  0xff ; '.'
0000000000006a33         db  0xff ; '.'
0000000000006a34         db  0x34 ; '4'
0000000000006a35         db  0x08 ; '.'
0000000000006a36         db  0x00 ; '.'
0000000000006a37         db  0x00 ; '.'
0000000000006a38         db  0xd4 ; '.'
0000000000006a39         db  0xdb ; '.'
0000000000006a3a         db  0xff ; '.'
0000000000006a3b         db  0xff ; '.'
0000000000006a3c         db  0x50 ; 'P'
0000000000006a3d         db  0x08 ; '.'
0000000000006a3e         db  0x00 ; '.'
0000000000006a3f         db  0x00 ; '.'
0000000000006a40         db  0x74 ; 't'
0000000000006a41         db  0xdc ; '.'
0000000000006a42         db  0xff ; '.'
0000000000006a43         db  0xff ; '.'
0000000000006a44         db  0x6c ; 'l'
0000000000006a45         db  0x08 ; '.'
0000000000006a46         db  0x00 ; '.'
0000000000006a47         db  0x00 ; '.'
0000000000006a48         db  0x84 ; '.'
0000000000006a49         db  0xdc ; '.'
0000000000006a4a         db  0xff ; '.'
0000000000006a4b         db  0xff ; '.'
0000000000006a4c         db  0x80 ; '.'
0000000000006a4d         db  0x08 ; '.'
0000000000006a4e         db  0x00 ; '.'
0000000000006a4f         db  0x00 ; '.'
0000000000006a50         db  0xa4 ; '.'
0000000000006a51         db  0xdc ; '.'
0000000000006a52         db  0xff ; '.'
0000000000006a53         db  0xff ; '.'
0000000000006a54         db  0x94 ; '.'
0000000000006a55         db  0x08 ; '.'
0000000000006a56         db  0x00 ; '.'
0000000000006a57         db  0x00 ; '.'
0000000000006a58         db  0xc4 ; '.'
0000000000006a59         db  0xdc ; '.'
0000000000006a5a         db  0xff ; '.'
0000000000006a5b         db  0xff ; '.'
0000000000006a5c         db  0xa8 ; '.'
0000000000006a5d         db  0x08 ; '.'
0000000000006a5e         db  0x00 ; '.'
0000000000006a5f         db  0x00 ; '.'
0000000000006a60         db  0xd4 ; '.'
0000000000006a61         db  0xdc ; '.'
0000000000006a62         db  0xff ; '.'
0000000000006a63         db  0xff ; '.'
0000000000006a64         db  0xbc ; '.'
0000000000006a65         db  0x08 ; '.'
0000000000006a66         db  0x00 ; '.'
0000000000006a67         db  0x00 ; '.'
0000000000006a68         db  0xf4 ; '.'
0000000000006a69         db  0xdc ; '.'
0000000000006a6a         db  0xff ; '.'
0000000000006a6b         db  0xff ; '.'
0000000000006a6c         db  0xd0 ; '.'
0000000000006a6d         db  0x08 ; '.'
0000000000006a6e         db  0x00 ; '.'
0000000000006a6f         db  0x00 ; '.'
0000000000006a70         db  0x14 ; '.'
0000000000006a71         db  0xdd ; '.'
0000000000006a72         db  0xff ; '.'
0000000000006a73         db  0xff ; '.'
0000000000006a74         db  0xe4 ; '.'
0000000000006a75         db  0x08 ; '.'
0000000000006a76         db  0x00 ; '.'
0000000000006a77         db  0x00 ; '.'
0000000000006a78         db  0x34 ; '4'
0000000000006a79         db  0xdd ; '.'
0000000000006a7a         db  0xff ; '.'
0000000000006a7b         db  0xff ; '.'
0000000000006a7c         db  0xfc ; '.'
0000000000006a7d         db  0x08 ; '.'
0000000000006a7e         db  0x00 ; '.'
0000000000006a7f         db  0x00 ; '.'
0000000000006a80         db  0x54 ; 'T'
0000000000006a81         db  0xe1 ; '.'
0000000000006a82         db  0xff ; '.'
0000000000006a83         db  0xff ; '.'
0000000000006a84         db  0x10 ; '.'
0000000000006a85         db  0x0a ; '.'
0000000000006a86         db  0x00 ; '.'
0000000000006a87         db  0x00 ; '.'
0000000000006a88         db  0x74 ; 't'
0000000000006a89         db  0xe1 ; '.'
0000000000006a8a         db  0xff ; '.'
0000000000006a8b         db  0xff ; '.'
0000000000006a8c         db  0x24 ; '$'
0000000000006a8d         db  0x0a ; '.'
0000000000006a8e         db  0x00 ; '.'
0000000000006a8f         db  0x00 ; '.'
0000000000006a90         db  0xf4 ; '.'
0000000000006a91         db  0xe1 ; '.'
0000000000006a92         db  0xff ; '.'
0000000000006a93         db  0xff ; '.'
0000000000006a94         db  0x40 ; '@'
0000000000006a95         db  0x0a ; '.'
0000000000006a96         db  0x00 ; '.'
0000000000006a97         db  0x00 ; '.'
0000000000006a98         db  0xd4 ; '.'
0000000000006a99         db  0xe2 ; '.'
0000000000006a9a         db  0xff ; '.'
0000000000006a9b         db  0xff ; '.'
0000000000006a9c         db  0x6c ; 'l'
0000000000006a9d         db  0x0a ; '.'
0000000000006a9e         db  0x00 ; '.'
0000000000006a9f         db  0x00 ; '.'
0000000000006aa0         db  0x54 ; 'T'
0000000000006aa1         db  0xe3 ; '.'
0000000000006aa2         db  0xff ; '.'
0000000000006aa3         db  0xff ; '.'
0000000000006aa4         db  0x8c ; '.'
0000000000006aa5         db  0x0a ; '.'
0000000000006aa6         db  0x00 ; '.'
0000000000006aa7         db  0x00 ; '.'
0000000000006aa8         db  0x74 ; 't'
0000000000006aa9         db  0xe3 ; '.'
0000000000006aaa         db  0xff ; '.'
0000000000006aab         db  0xff ; '.'
0000000000006aac         db  0xa8 ; '.'
0000000000006aad         db  0x0a ; '.'
0000000000006aae         db  0x00 ; '.'
0000000000006aaf         db  0x00 ; '.'
0000000000006ab0         db  0xa4 ; '.'
0000000000006ab1         db  0xe3 ; '.'
0000000000006ab2         db  0xff ; '.'
0000000000006ab3         db  0xff ; '.'
0000000000006ab4         db  0xbc ; '.'
0000000000006ab5         db  0x0a ; '.'
0000000000006ab6         db  0x00 ; '.'
0000000000006ab7         db  0x00 ; '.'
0000000000006ab8         db  0xb4 ; '.'
0000000000006ab9         db  0xe3 ; '.'
0000000000006aba         db  0xff ; '.'
0000000000006abb         db  0xff ; '.'
0000000000006abc         db  0xd0 ; '.'
0000000000006abd         db  0x0a ; '.'
0000000000006abe         db  0x00 ; '.'
0000000000006abf         db  0x00 ; '.'
0000000000006ac0         db  0xf4 ; '.'
0000000000006ac1         db  0xe3 ; '.'
0000000000006ac2         db  0xff ; '.'
0000000000006ac3         db  0xff ; '.'
0000000000006ac4         db  0xf4 ; '.'
0000000000006ac5         db  0x0a ; '.'
0000000000006ac6         db  0x00 ; '.'
0000000000006ac7         db  0x00 ; '.'
0000000000006ac8         db  0x24 ; '$'
0000000000006ac9         db  0xe4 ; '.'
0000000000006aca         db  0xff ; '.'
0000000000006acb         db  0xff ; '.'
0000000000006acc         db  0x08 ; '.'
0000000000006acd         db  0x0b ; '.'
0000000000006ace         db  0x00 ; '.'
0000000000006acf         db  0x00 ; '.'
0000000000006ad0         db  0xb4 ; '.'
0000000000006ad1         db  0xe4 ; '.'
0000000000006ad2         db  0xff ; '.'
0000000000006ad3         db  0xff ; '.'
0000000000006ad4         db  0x20 ; ' '
0000000000006ad5         db  0x0b ; '.'
0000000000006ad6         db  0x00 ; '.'
0000000000006ad7         db  0x00 ; '.'
0000000000006ad8         db  0x04 ; '.'
0000000000006ad9         db  0xe5 ; '.'
0000000000006ada         db  0xff ; '.'
0000000000006adb         db  0xff ; '.'
0000000000006adc         db  0x38 ; '8'
0000000000006add         db  0x0b ; '.'
0000000000006ade         db  0x00 ; '.'
0000000000006adf         db  0x00 ; '.'
0000000000006ae0         db  0x24 ; '$'
0000000000006ae1         db  0xe5 ; '.'
0000000000006ae2         db  0xff ; '.'
0000000000006ae3         db  0xff ; '.'
0000000000006ae4         db  0x54 ; 'T'
0000000000006ae5         db  0x0b ; '.'
0000000000006ae6         db  0x00 ; '.'
0000000000006ae7         db  0x00 ; '.'
0000000000006ae8         db  0x54 ; 'T'
0000000000006ae9         db  0xe5 ; '.'
0000000000006aea         db  0xff ; '.'
0000000000006aeb         db  0xff ; '.'
0000000000006aec         db  0x70 ; 'p'
0000000000006aed         db  0x0b ; '.'
0000000000006aee         db  0x00 ; '.'
0000000000006aef         db  0x00 ; '.'
0000000000006af0         db  0x84 ; '.'
0000000000006af1         db  0xe5 ; '.'
0000000000006af2         db  0xff ; '.'
0000000000006af3         db  0xff ; '.'
0000000000006af4         db  0x98 ; '.'
0000000000006af5         db  0x0b ; '.'
0000000000006af6         db  0x00 ; '.'
0000000000006af7         db  0x00 ; '.'
0000000000006af8         db  0xa4 ; '.'
0000000000006af9         db  0xe5 ; '.'
0000000000006afa         db  0xff ; '.'
0000000000006afb         db  0xff ; '.'
0000000000006afc         db  0xb4 ; '.'
0000000000006afd         db  0x0b ; '.'
0000000000006afe         db  0x00 ; '.'
0000000000006aff         db  0x00 ; '.'
0000000000006b00         db  0xe4 ; '.'
0000000000006b01         db  0xe5 ; '.'
0000000000006b02         db  0xff ; '.'
0000000000006b03         db  0xff ; '.'
0000000000006b04         db  0xcc ; '.'
0000000000006b05         db  0x0b ; '.'
0000000000006b06         db  0x00 ; '.'
0000000000006b07         db  0x00 ; '.'
0000000000006b08         db  0x04 ; '.'
0000000000006b09         db  0xea ; '.'
0000000000006b0a         db  0xff ; '.'
0000000000006b0b         db  0xff ; '.'
0000000000006b0c         db  0x1c ; '.'
0000000000006b0d         db  0x0c ; '.'
0000000000006b0e         db  0x00 ; '.'
0000000000006b0f         db  0x00 ; '.'
0000000000006b10         db  0x94 ; '.'
0000000000006b11         db  0xea ; '.'
0000000000006b12         db  0xff ; '.'
0000000000006b13         db  0xff ; '.'
0000000000006b14         db  0x5c ; '\'
0000000000006b15         db  0x0c ; '.'
0000000000006b16         db  0x00 ; '.'
0000000000006b17         db  0x00 ; '.'
0000000000006b18         db  0x14 ; '.'
0000000000006b19         db  0xeb ; '.'
0000000000006b1a         db  0xff ; '.'
0000000000006b1b         db  0xff ; '.'
0000000000006b1c         db  0xac ; '.'
0000000000006b1d         db  0x0c ; '.'
0000000000006b1e         db  0x00 ; '.'
0000000000006b1f         db  0x00 ; '.'
0000000000006b20         db  0x74 ; 't'
0000000000006b21         db  0xeb ; '.'
0000000000006b22         db  0xff ; '.'
0000000000006b23         db  0xff ; '.'
0000000000006b24         db  0xcc ; '.'
0000000000006b25         db  0x0c ; '.'
0000000000006b26         db  0x00 ; '.'
0000000000006b27         db  0x00 ; '.'
0000000000006b28         db  0xb4 ; '.'
0000000000006b29         db  0xeb ; '.'
0000000000006b2a         db  0xff ; '.'
0000000000006b2b         db  0xff ; '.'
0000000000006b2c         db  0xec ; '.'
0000000000006b2d         db  0x0c ; '.'
0000000000006b2e         db  0x00 ; '.'
0000000000006b2f         db  0x00 ; '.'
0000000000006b30         db  0x34 ; '4'
0000000000006b31         db  0xec ; '.'
0000000000006b32         db  0xff ; '.'
0000000000006b33         db  0xff ; '.'
0000000000006b34         db  0x24 ; '$'
0000000000006b35         db  0x0d ; '.'
0000000000006b36         db  0x00 ; '.'
0000000000006b37         db  0x00 ; '.'
0000000000006b38         db  0x74 ; 't'
0000000000006b39         db  0xec ; '.'
0000000000006b3a         db  0xff ; '.'
0000000000006b3b         db  0xff ; '.'
0000000000006b3c         db  0x44 ; 'D'
0000000000006b3d         db  0x0d ; '.'
0000000000006b3e         db  0x00 ; '.'
0000000000006b3f         db  0x00 ; '.'
0000000000006b40         db  0xd4 ; '.'
0000000000006b41         db  0xec ; '.'
0000000000006b42         db  0xff ; '.'
0000000000006b43         db  0xff ; '.'
0000000000006b44         db  0x74 ; 't'
0000000000006b45         db  0x0d ; '.'
0000000000006b46         db  0x00 ; '.'
0000000000006b47         db  0x00 ; '.'
0000000000006b48         db  0x44 ; 'D'
0000000000006b49         db  0xed ; '.'
0000000000006b4a         db  0xff ; '.'
0000000000006b4b         db  0xff ; '.'
0000000000006b4c         db  0xbc ; '.'
0000000000006b4d         db  0x0d ; '.'
0000000000006b4e         db  0x00 ; '.'
0000000000006b4f         db  0x00 ; '.'
0000000000006b50         db  0x54 ; 'T'
0000000000006b51         db  0xed ; '.'
0000000000006b52         db  0xff ; '.'
0000000000006b53         db  0xff ; '.'
0000000000006b54         db  0xd4 ; '.'
0000000000006b55         db  0x0d ; '.'
0000000000006b56         db  0x00 ; '.'
0000000000006b57         db  0x00 ; '.'


        ; Section .eh_frame
        ; Range: [0x6b58; 0x76e8[ (2960 bytes)
        ; File offset : [27480; 30440[ (2960 bytes)
        ; Flags: 0x2
        ;   SHT_PROGBITS
        ;   SHF_ALLOC

0000000000006b58         dd         0x00000014                                  ; Length of the record
0000000000006b5c         dd         0x00000000                                  ; CIE ID
0000000000006b60         db         0x01                                        ; Version
0000000000006b61         db         "zR", 0                                     ; Augmentation String
0000000000006b64         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000006b65         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000006b66         db         0x10                                        ; Return address register
0000000000006b67         db         0x01                                        ; Augmentation data length
0000000000006b68         db         0x1b                                        ; FDE encoding
0000000000006b69         db  0x0c ; '.'
0000000000006b6a         db  0x07 ; '.'
0000000000006b6b         db  0x08 ; '.'
0000000000006b6c         db  0x90 ; '.'
0000000000006b6d         db  0x01 ; '.'
0000000000006b6e         db  0x07 ; '.'
0000000000006b6f         db  0x10 ; '.'
0000000000006b70         dd         0x00000014                                  ; Length of the record
0000000000006b74         dd         0x0000001c                                  ; FDE: parent CIE at 0x6b58 (FDE encoding = 0x1B)
0000000000006b78         db         0xc8, 0xb1, 2 dup (0xff)                    ; begin 0x1d40
0000000000006b7c         db         0x2b, 3 dup (0x00)                          ; length 0x2b (end at 0x1d6b)
0000000000006b80         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006b81         align      8
0000000000006b88         dd         0x00000014                                  ; Length of the record
0000000000006b8c         dd         0x00000000                                  ; CIE ID
0000000000006b90         db         0x01                                        ; Version
0000000000006b91         db         "zR", 0                                     ; Augmentation String
0000000000006b94         db         0x01                                        ; Code Alignment Factor (unsigned LEB128=1)
0000000000006b95         db         0x78                                        ; Data Alignment Factor (signed LEB128=-8)
0000000000006b96         db         0x10                                        ; Return address register
0000000000006b97         db         0x01                                        ; Augmentation data length
0000000000006b98         db         0x1b                                        ; FDE encoding
0000000000006b99         db  0x0c ; '.'
0000000000006b9a         db  0x07 ; '.'
0000000000006b9b         db  0x08 ; '.'
0000000000006b9c         db  0x90 ; '.'
0000000000006b9d         db  0x01 ; '.'
0000000000006b9e         db  0x00 ; '.'
0000000000006b9f         db  0x00 ; '.'
0000000000006ba0         dd         0x00000024                                  ; Length of the record
0000000000006ba4         dd         0x0000001c                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000006ba8         db         0x08, 0xa8, 2 dup (0xff)                    ; begin 0x13b0
0000000000006bac         db         0x00, 0x03, 2 dup (0x00)                    ; length 0x300 (end at 0x16b0)
0000000000006bb0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006bb1         db  0x0e ; '.'
0000000000006bb2         db  0x10 ; '.'
0000000000006bb3         db  0x46 ; 'F'
0000000000006bb4         db  0x0e ; '.'
0000000000006bb5         db  0x18 ; '.'
0000000000006bb6         db  0x4a ; 'J'
0000000000006bb7         db  0x0f ; '.'
0000000000006bb8         db  0x0b ; '.'
0000000000006bb9         db  0x77 ; 'w'
0000000000006bba         db  0x08 ; '.'
0000000000006bbb         db  0x80 ; '.'
0000000000006bbc         db  0x00 ; '.'
0000000000006bbd         db  0x3f ; '?'
0000000000006bbe         db  0x1a ; '.'
0000000000006bbf         db  0x3b ; ';'
0000000000006bc0         db  0x2a ; '*'
0000000000006bc1         db  0x33 ; '3'
0000000000006bc2         db  0x24 ; '$'
0000000000006bc3         db  0x22 ; '"'
0000000000006bc4         db  0x00 ; '.'
0000000000006bc5         db  0x00 ; '.'
0000000000006bc6         db  0x00 ; '.'
0000000000006bc7         db  0x00 ; '.'
0000000000006bc8         dd         0x00000014                                  ; Length of the record
0000000000006bcc         dd         0x00000044                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000006bd0         db         0xe0, 0xaa, 2 dup (0xff)                    ; begin 0x16b0
0000000000006bd4         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x16b8)
0000000000006bd8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006bd9         align      32
0000000000006be0         dd         0x00000028                                  ; Length of the record
0000000000006be4         dd         0x0000005c                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000006be8         db         0x68, 0xb2, 2 dup (0xff)                    ; begin 0x1e50
0000000000006bec         db         0x22, 0x04, 2 dup (0x00)                    ; length 0x422 (end at 0x2272)
0000000000006bf0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006bf1         db  0x42 ; 'B'
0000000000006bf2         db  0x0e ; '.'
0000000000006bf3         db  0x10 ; '.'
0000000000006bf4         db  0x8d ; '.'
0000000000006bf5         db  0x02 ; '.'
0000000000006bf6         db  0x42 ; 'B'
0000000000006bf7         db  0x0e ; '.'
0000000000006bf8         db  0x18 ; '.'
0000000000006bf9         db  0x8c ; '.'
0000000000006bfa         db  0x03 ; '.'
0000000000006bfb         db  0x46 ; 'F'
0000000000006bfc         db  0x0e ; '.'
0000000000006bfd         db  0x20 ; ' '
0000000000006bfe         db  0x86 ; '.'
0000000000006bff         db  0x04 ; '.'
0000000000006c00         db  0x41 ; 'A'
0000000000006c01         db  0x0e ; '.'
0000000000006c02         db  0x28 ; '('
0000000000006c03         db  0x83 ; '.'
0000000000006c04         db  0x05 ; '.'
0000000000006c05         db  0x49 ; 'I'
0000000000006c06         db  0x0e ; '.'
0000000000006c07         db  0xb0 ; '.'
0000000000006c08         db  0x01 ; '.'
0000000000006c09         db  0x00 ; '.'
0000000000006c0a         db  0x00 ; '.'
0000000000006c0b         db  0x00 ; '.'
0000000000006c0c         dd         0x00000048                                  ; Length of the record
0000000000006c10         dd         0x00000088                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000006c14         db         0xac, 0xaa, 2 dup (0xff)                    ; begin 0x16c0
0000000000006c18         db         0x7e, 0x06, 2 dup (0x00)                    ; length 0x67e (end at 0x1d3e)
0000000000006c1c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006c1d         db  0x42 ; 'B'
0000000000006c1e         db  0x0e ; '.'
0000000000006c1f         db  0x10 ; '.'
0000000000006c20         db  0x8f ; '.'
0000000000006c21         db  0x02 ; '.'
0000000000006c22         db  0x42 ; 'B'
0000000000006c23         db  0x0e ; '.'
0000000000006c24         db  0x18 ; '.'
0000000000006c25         db  0x8e ; '.'
0000000000006c26         db  0x03 ; '.'
0000000000006c27         db  0x42 ; 'B'
0000000000006c28         db  0x0e ; '.'
0000000000006c29         db  0x20 ; ' '
0000000000006c2a         db  0x8d ; '.'
0000000000006c2b         db  0x04 ; '.'
0000000000006c2c         db  0x42 ; 'B'
0000000000006c2d         db  0x0e ; '.'
0000000000006c2e         db  0x28 ; '('
0000000000006c2f         db  0x8c ; '.'
0000000000006c30         db  0x05 ; '.'
0000000000006c31         db  0x48 ; 'H'
0000000000006c32         db  0x0e ; '.'
0000000000006c33         db  0x30 ; '0'
0000000000006c34         db  0x86 ; '.'
0000000000006c35         db  0x06 ; '.'
0000000000006c36         db  0x41 ; 'A'
0000000000006c37         db  0x0e ; '.'
0000000000006c38         db  0x38 ; '8'
0000000000006c39         db  0x83 ; '.'
0000000000006c3a         db  0x07 ; '.'
0000000000006c3b         db  0x4d ; 'M'
0000000000006c3c         db  0x0e ; '.'
0000000000006c3d         db  0x60 ; '`'
0000000000006c3e         db  0x03 ; '.'
0000000000006c3f         db  0xbb ; '.'
0000000000006c40         db  0x02 ; '.'
0000000000006c41         db  0x0a ; '.'
0000000000006c42         db  0x0e ; '.'
0000000000006c43         db  0x38 ; '8'
0000000000006c44         db  0x41 ; 'A'
0000000000006c45         db  0x0e ; '.'
0000000000006c46         db  0x30 ; '0'
0000000000006c47         db  0x41 ; 'A'
0000000000006c48         db  0x0e ; '.'
0000000000006c49         db  0x28 ; '('
0000000000006c4a         db  0x42 ; 'B'
0000000000006c4b         db  0x0e ; '.'
0000000000006c4c         db  0x20 ; ' '
0000000000006c4d         db  0x42 ; 'B'
0000000000006c4e         db  0x0e ; '.'
0000000000006c4f         db  0x18 ; '.'
0000000000006c50         db  0x42 ; 'B'
0000000000006c51         db  0x0e ; '.'
0000000000006c52         db  0x10 ; '.'
0000000000006c53         db  0x42 ; 'B'
0000000000006c54         db  0x0e ; '.'
0000000000006c55         db  0x08 ; '.'
0000000000006c56         db  0x41 ; 'A'
0000000000006c57         db  0x0b ; '.'
0000000000006c58         dd         0x00000010                                  ; Length of the record
0000000000006c5c         dd         0x000000d4                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000006c60         db         0x20, 0xb6, 2 dup (0xff)                    ; begin 0x2280
0000000000006c64         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2288)
0000000000006c68         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006c69         align      4
0000000000006c6c         dd         0x00000010                                  ; Length of the record
0000000000006c70         dd         0x000000e8                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000006c74         db         0x1c, 0xb6, 2 dup (0xff)                    ; begin 0x2290
0000000000006c78         db         0x08, 3 dup (0x00)                          ; length 0x8 (end at 0x2298)
0000000000006c7c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006c7d         align      128
0000000000006c80         dd         0x0000002c                                  ; Length of the record
0000000000006c84         dd         0x000000fc                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000006c88         db         0x18, 0xb6, 2 dup (0xff)                    ; begin 0x22a0
0000000000006c8c         db         0xa4, 3 dup (0x00)                          ; length 0xa4 (end at 0x2344)
0000000000006c90         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006c91         db  0x41 ; 'A'
0000000000006c92         db  0x0e ; '.'
0000000000006c93         db  0x10 ; '.'
0000000000006c94         db  0x86 ; '.'
0000000000006c95         db  0x02 ; '.'
0000000000006c96         db  0x41 ; 'A'
0000000000006c97         db  0x0e ; '.'
0000000000006c98         db  0x18 ; '.'
0000000000006c99         db  0x83 ; '.'
0000000000006c9a         db  0x03 ; '.'
0000000000006c9b         db  0x44 ; 'D'
0000000000006c9c         db  0x0e ; '.'
0000000000006c9d         db  0x20 ; ' '
0000000000006c9e         db  0x7a ; 'z'
0000000000006c9f         db  0x0a ; '.'
0000000000006ca0         db  0x0e ; '.'
0000000000006ca1         db  0x18 ; '.'
0000000000006ca2         db  0x41 ; 'A'
0000000000006ca3         db  0x0e ; '.'
0000000000006ca4         db  0x10 ; '.'
0000000000006ca5         db  0x41 ; 'A'
0000000000006ca6         db  0x0e ; '.'
0000000000006ca7         db  0x08 ; '.'
0000000000006ca8         db  0x41 ; 'A'
0000000000006ca9         db  0x0b ; '.'
0000000000006caa         db  0x00 ; '.'
0000000000006cab         db  0x00 ; '.'
0000000000006cac         db  0x00 ; '.'
0000000000006cad         db  0x00 ; '.'
0000000000006cae         db  0x00 ; '.'
0000000000006caf         db  0x00 ; '.'
0000000000006cb0         dd         0x00000044                                  ; Length of the record
0000000000006cb4         dd         0x0000012c                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000006cb8         db         0x98, 0xb6, 2 dup (0xff)                    ; begin 0x2350
0000000000006cbc         db         0xa9, 0x03, 2 dup (0x00)                    ; length 0x3a9 (end at 0x26f9)
0000000000006cc0         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006cc1         db  0x41 ; 'A'
0000000000006cc2         db  0x0e ; '.'
0000000000006cc3         db  0x10 ; '.'
0000000000006cc4         db  0x86 ; '.'
0000000000006cc5         db  0x02 ; '.'
0000000000006cc6         db  0x41 ; 'A'
0000000000006cc7         db  0x0e ; '.'
0000000000006cc8         db  0x18 ; '.'
0000000000006cc9         db  0x83 ; '.'
0000000000006cca         db  0x03 ; '.'
0000000000006ccb         db  0x47 ; 'G'
0000000000006ccc         db  0x0e ; '.'
0000000000006ccd         db  0x20 ; ' '
0000000000006cce         db  0x02 ; '.'
0000000000006ccf         db  0xb8 ; '.'
0000000000006cd0         db  0x0a ; '.'
0000000000006cd1         db  0x0e ; '.'
0000000000006cd2         db  0x18 ; '.'
0000000000006cd3         db  0x41 ; 'A'
0000000000006cd4         db  0x0e ; '.'
0000000000006cd5         db  0x10 ; '.'
0000000000006cd6         db  0x41 ; 'A'
0000000000006cd7         db  0x0e ; '.'
0000000000006cd8         db  0x08 ; '.'
0000000000006cd9         db  0x45 ; 'E'
0000000000006cda         db  0x0b ; '.'
0000000000006cdb         db  0x6b ; 'k'
0000000000006cdc         db  0x0a ; '.'
0000000000006cdd         db  0x0e ; '.'
0000000000006cde         db  0x18 ; '.'
0000000000006cdf         db  0x43 ; 'C'
0000000000006ce0         db  0x0e ; '.'
0000000000006ce1         db  0x10 ; '.'
0000000000006ce2         db  0x41 ; 'A'
0000000000006ce3         db  0x0e ; '.'
0000000000006ce4         db  0x08 ; '.'
0000000000006ce5         db  0x49 ; 'I'
0000000000006ce6         db  0x0b ; '.'
0000000000006ce7         db  0x03 ; '.'
0000000000006ce8         db  0x6c ; 'l'
0000000000006ce9         db  0x02 ; '.'
0000000000006cea         db  0x0a ; '.'
0000000000006ceb         db  0x0e ; '.'
0000000000006cec         db  0x18 ; '.'
0000000000006ced         db  0x41 ; 'A'
0000000000006cee         db  0x0e ; '.'
0000000000006cef         db  0x10 ; '.'
0000000000006cf0         db  0x41 ; 'A'
0000000000006cf1         db  0x0e ; '.'
0000000000006cf2         db  0x08 ; '.'
0000000000006cf3         db  0x41 ; 'A'
0000000000006cf4         db  0x0b ; '.'
0000000000006cf5         db  0x00 ; '.'
0000000000006cf6         db  0x00 ; '.'
0000000000006cf7         db  0x00 ; '.'
0000000000006cf8         dd         0x00000020                                  ; Length of the record
0000000000006cfc         dd         0x00000174                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000006d00         db         0x00, 0xba, 2 dup (0xff)                    ; begin 0x2700
0000000000006d04         db         0x89, 3 dup (0x00)                          ; length 0x89 (end at 0x2789)
0000000000006d08         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d09         db  0x41 ; 'A'
0000000000006d0a         db  0x0e ; '.'
0000000000006d0b         db  0x10 ; '.'
0000000000006d0c         db  0x83 ; '.'
0000000000006d0d         db  0x02 ; '.'
0000000000006d0e         db  0x4f ; 'O'
0000000000006d0f         db  0x0e ; '.'
0000000000006d10         db  0xb0 ; '.'
0000000000006d11         db  0x01 ; '.'
0000000000006d12         db  0x02 ; '.'
0000000000006d13         db  0x64 ; 'd'
0000000000006d14         db  0x0a ; '.'
0000000000006d15         db  0x0e ; '.'
0000000000006d16         db  0x10 ; '.'
0000000000006d17         db  0x41 ; 'A'
0000000000006d18         db  0x0e ; '.'
0000000000006d19         db  0x08 ; '.'
0000000000006d1a         db  0x4b ; 'K'
0000000000006d1b         db  0x0b ; '.'
0000000000006d1c         dd         0x00000030                                  ; Length of the record
0000000000006d20         dd         0x00000198                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000006d24         db         0x6c, 0xba, 2 dup (0xff)                    ; begin 0x2790
0000000000006d28         db         0x6d, 0x01, 2 dup (0x00)                    ; length 0x16d (end at 0x28fd)
0000000000006d2c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d2d         db  0x5b ; '['
0000000000006d2e         db  0x0e ; '.'
0000000000006d2f         db  0x10 ; '.'
0000000000006d30         db  0x8c ; '.'
0000000000006d31         db  0x02 ; '.'
0000000000006d32         db  0x41 ; 'A'
0000000000006d33         db  0x0e ; '.'
0000000000006d34         db  0x18 ; '.'
0000000000006d35         db  0x86 ; '.'
0000000000006d36         db  0x03 ; '.'
0000000000006d37         db  0x41 ; 'A'
0000000000006d38         db  0x0e ; '.'
0000000000006d39         db  0x20 ; ' '
0000000000006d3a         db  0x83 ; '.'
0000000000006d3b         db  0x04 ; '.'
0000000000006d3c         db  0x03 ; '.'
0000000000006d3d         db  0x08 ; '.'
0000000000006d3e         db  0x01 ; '.'
0000000000006d3f         db  0x0a ; '.'
0000000000006d40         db  0x0e ; '.'
0000000000006d41         db  0x18 ; '.'
0000000000006d42         db  0x41 ; 'A'
0000000000006d43         db  0x0e ; '.'
0000000000006d44         db  0x10 ; '.'
0000000000006d45         db  0x42 ; 'B'
0000000000006d46         db  0x0e ; '.'
0000000000006d47         db  0x08 ; '.'
0000000000006d48         db  0x48 ; 'H'
0000000000006d49         db  0x0b ; '.'
0000000000006d4a         db  0x70 ; 'p'
0000000000006d4b         db  0x0e ; '.'
0000000000006d4c         db  0x08 ; '.'
0000000000006d4d         db  0xc3 ; '.'
0000000000006d4e         db  0xc6 ; '.'
0000000000006d4f         db  0xcc ; '.'
0000000000006d50         dd         0x0000001c                                  ; Length of the record
0000000000006d54         dd         0x000001cc                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000006d58         db         0xa8, 0xbb, 2 dup (0xff)                    ; begin 0x2900
0000000000006d5c         db         0x9f, 3 dup (0x00)                          ; length 0x9f (end at 0x299f)
0000000000006d60         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d61         db  0x44 ; 'D'
0000000000006d62         db  0x0e ; '.'
0000000000006d63         db  0x10 ; '.'
0000000000006d64         db  0x83 ; '.'
0000000000006d65         db  0x02 ; '.'
0000000000006d66         db  0x02 ; '.'
0000000000006d67         db  0x78 ; 'x'
0000000000006d68         db  0x0a ; '.'
0000000000006d69         db  0x0e ; '.'
0000000000006d6a         db  0x08 ; '.'
0000000000006d6b         db  0x41 ; 'A'
0000000000006d6c         db  0x0b ; '.'
0000000000006d6d         db  0x00 ; '.'
0000000000006d6e         db  0x00 ; '.'
0000000000006d6f         db  0x00 ; '.'
0000000000006d70         dd         0x00000040                                  ; Length of the record
0000000000006d74         dd         0x000001ec                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000006d78         db         0x28, 0xbc, 2 dup (0xff)                    ; begin 0x29a0
0000000000006d7c         db         0xe7, 3 dup (0x00)                          ; length 0xe7 (end at 0x2a87)
0000000000006d80         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006d81         db  0x41 ; 'A'
0000000000006d82         db  0x0e ; '.'
0000000000006d83         db  0x10 ; '.'
0000000000006d84         db  0x86 ; '.'
0000000000006d85         db  0x02 ; '.'
0000000000006d86         db  0x41 ; 'A'
0000000000006d87         db  0x0e ; '.'
0000000000006d88         db  0x18 ; '.'
0000000000006d89         db  0x83 ; '.'
0000000000006d8a         db  0x03 ; '.'
0000000000006d8b         db  0x49 ; 'I'
0000000000006d8c         db  0x0e ; '.'
0000000000006d8d         db  0x20 ; ' '
0000000000006d8e         db  0x6e ; 'n'
0000000000006d8f         db  0x0a ; '.'
0000000000006d90         db  0x0e ; '.'
0000000000006d91         db  0x18 ; '.'
0000000000006d92         db  0x41 ; 'A'
0000000000006d93         db  0x0e ; '.'
0000000000006d94         db  0x10 ; '.'
0000000000006d95         db  0x41 ; 'A'
0000000000006d96         db  0x0e ; '.'
0000000000006d97         db  0x08 ; '.'
0000000000006d98         db  0x45 ; 'E'
0000000000006d99         db  0x0b ; '.'
0000000000006d9a         db  0x02 ; '.'
0000000000006d9b         db  0x4a ; 'J'
0000000000006d9c         db  0x0a ; '.'
0000000000006d9d         db  0x0e ; '.'
0000000000006d9e         db  0x18 ; '.'
0000000000006d9f         db  0x41 ; 'A'
0000000000006da0         db  0x0e ; '.'
0000000000006da1         db  0x10 ; '.'
0000000000006da2         db  0x41 ; 'A'
0000000000006da3         db  0x0e ; '.'
0000000000006da4         db  0x08 ; '.'
0000000000006da5         db  0x44 ; 'D'
0000000000006da6         db  0x0b ; '.'
0000000000006da7         db  0x02 ; '.'
0000000000006da8         db  0x54 ; 'T'
0000000000006da9         db  0x0e ; '.'
0000000000006daa         db  0x18 ; '.'
0000000000006dab         db  0x41 ; 'A'
0000000000006dac         db  0x0e ; '.'
0000000000006dad         db  0x10 ; '.'
0000000000006dae         db  0x41 ; 'A'
0000000000006daf         db  0x0e ; '.'
0000000000006db0         db  0x08 ; '.'
0000000000006db1         db  0x00 ; '.'
0000000000006db2         db  0x00 ; '.'
0000000000006db3         db  0x00 ; '.'
0000000000006db4         dd         0x00000074                                  ; Length of the record
0000000000006db8         dd         0x00000230                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000006dbc         db         0xd4, 0xbc, 2 dup (0xff)                    ; begin 0x2a90
0000000000006dc0         db         0x34, 0x12, 2 dup (0x00)                    ; length 0x1234 (end at 0x3cc4)
0000000000006dc4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006dc5         db  0x42 ; 'B'
0000000000006dc6         db  0x0e ; '.'
0000000000006dc7         db  0x10 ; '.'
0000000000006dc8         db  0x8f ; '.'
0000000000006dc9         db  0x02 ; '.'
0000000000006dca         db  0x42 ; 'B'
0000000000006dcb         db  0x0e ; '.'
0000000000006dcc         db  0x18 ; '.'
0000000000006dcd         db  0x8e ; '.'
0000000000006dce         db  0x03 ; '.'
0000000000006dcf         db  0x45 ; 'E'
0000000000006dd0         db  0x0e ; '.'
0000000000006dd1         db  0x20 ; ' '
0000000000006dd2         db  0x8d ; '.'
0000000000006dd3         db  0x04 ; '.'
0000000000006dd4         db  0x42 ; 'B'
0000000000006dd5         db  0x0e ; '.'
0000000000006dd6         db  0x28 ; '('
0000000000006dd7         db  0x8c ; '.'
0000000000006dd8         db  0x05 ; '.'
0000000000006dd9         db  0x44 ; 'D'
0000000000006dda         db  0x0e ; '.'
0000000000006ddb         db  0x30 ; '0'
0000000000006ddc         db  0x86 ; '.'
0000000000006ddd         db  0x06 ; '.'
0000000000006dde         db  0x41 ; 'A'
0000000000006ddf         db  0x0e ; '.'
0000000000006de0         db  0x38 ; '8'
0000000000006de1         db  0x83 ; '.'
0000000000006de2         db  0x07 ; '.'
0000000000006de3         db  0x53 ; 'S'
0000000000006de4         db  0x0e ; '.'
0000000000006de5         db  0xf0 ; '.'
0000000000006de6         db  0x01 ; '.'
0000000000006de7         db  0x03 ; '.'
0000000000006de8         db  0x81 ; '.'
0000000000006de9         db  0x0b ; '.'
0000000000006dea         db  0x0e ; '.'
0000000000006deb         db  0xf8 ; '.'
0000000000006dec         db  0x01 ; '.'
0000000000006ded         db  0x4a ; 'J'
0000000000006dee         db  0x0e ; '.'
0000000000006def         db  0x80 ; '.'
0000000000006df0         db  0x02 ; '.'
0000000000006df1         db  0x44 ; 'D'
0000000000006df2         db  0x0e ; '.'
0000000000006df3         db  0x88 ; '.'
0000000000006df4         db  0x02 ; '.'
0000000000006df5         db  0x45 ; 'E'
0000000000006df6         db  0x0e ; '.'
0000000000006df7         db  0x90 ; '.'
0000000000006df8         db  0x02 ; '.'
0000000000006df9         db  0x5f ; '_'
0000000000006dfa         db  0x0e ; '.'
0000000000006dfb         db  0xf0 ; '.'
0000000000006dfc         db  0x01 ; '.'
0000000000006dfd         db  0x64 ; 'd'
0000000000006dfe         db  0x0a ; '.'
0000000000006dff         db  0x0e ; '.'
0000000000006e00         db  0x38 ; '8'
0000000000006e01         db  0x41 ; 'A'
0000000000006e02         db  0x0e ; '.'
0000000000006e03         db  0x30 ; '0'
0000000000006e04         db  0x41 ; 'A'
0000000000006e05         db  0x0e ; '.'
0000000000006e06         db  0x28 ; '('
0000000000006e07         db  0x42 ; 'B'
0000000000006e08         db  0x0e ; '.'
0000000000006e09         db  0x20 ; ' '
0000000000006e0a         db  0x42 ; 'B'
0000000000006e0b         db  0x0e ; '.'
0000000000006e0c         db  0x18 ; '.'
0000000000006e0d         db  0x42 ; 'B'
0000000000006e0e         db  0x0e ; '.'
0000000000006e0f         db  0x10 ; '.'
0000000000006e10         db  0x42 ; 'B'
0000000000006e11         db  0x0e ; '.'
0000000000006e12         db  0x08 ; '.'
0000000000006e13         db  0x44 ; 'D'
0000000000006e14         db  0x0b ; '.'
0000000000006e15         db  0x03 ; '.'
0000000000006e16         db  0x99 ; '.'
0000000000006e17         db  0x05 ; '.'
0000000000006e18         db  0x0e ; '.'
0000000000006e19         db  0xf8 ; '.'
0000000000006e1a         db  0x01 ; '.'
0000000000006e1b         db  0x4d ; 'M'
0000000000006e1c         db  0x0e ; '.'
0000000000006e1d         db  0x80 ; '.'
0000000000006e1e         db  0x02 ; '.'
0000000000006e1f         db  0x44 ; 'D'
0000000000006e20         db  0x0e ; '.'
0000000000006e21         db  0x88 ; '.'
0000000000006e22         db  0x02 ; '.'
0000000000006e23         db  0x47 ; 'G'
0000000000006e24         db  0x0e ; '.'
0000000000006e25         db  0x90 ; '.'
0000000000006e26         db  0x02 ; '.'
0000000000006e27         db  0x5b ; '['
0000000000006e28         db  0x0e ; '.'
0000000000006e29         db  0xf0 ; '.'
0000000000006e2a         db  0x01 ; '.'
0000000000006e2b         db  0x00 ; '.'
0000000000006e2c         dd         0x00000068                                  ; Length of the record
0000000000006e30         dd         0x000002a8                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000006e34         db         0x9c, 0xce, 2 dup (0xff)                    ; begin 0x3cd0
0000000000006e38         db         0xab, 0x01, 2 dup (0x00)                    ; length 0x1ab (end at 0x3e7b)
0000000000006e3c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006e3d         db  0x42 ; 'B'
0000000000006e3e         db  0x0e ; '.'
0000000000006e3f         db  0x10 ; '.'
0000000000006e40         db  0x8f ; '.'
0000000000006e41         db  0x02 ; '.'
0000000000006e42         db  0x42 ; 'B'
0000000000006e43         db  0x0e ; '.'
0000000000006e44         db  0x18 ; '.'
0000000000006e45         db  0x8e ; '.'
0000000000006e46         db  0x03 ; '.'
0000000000006e47         db  0x45 ; 'E'
0000000000006e48         db  0x0e ; '.'
0000000000006e49         db  0x20 ; ' '
0000000000006e4a         db  0x8d ; '.'
0000000000006e4b         db  0x04 ; '.'
0000000000006e4c         db  0x42 ; 'B'
0000000000006e4d         db  0x0e ; '.'
0000000000006e4e         db  0x28 ; '('
0000000000006e4f         db  0x8c ; '.'
0000000000006e50         db  0x05 ; '.'
0000000000006e51         db  0x44 ; 'D'
0000000000006e52         db  0x0e ; '.'
0000000000006e53         db  0x30 ; '0'
0000000000006e54         db  0x86 ; '.'
0000000000006e55         db  0x06 ; '.'
0000000000006e56         db  0x41 ; 'A'
0000000000006e57         db  0x0e ; '.'
0000000000006e58         db  0x38 ; '8'
0000000000006e59         db  0x83 ; '.'
0000000000006e5a         db  0x07 ; '.'
0000000000006e5b         db  0x47 ; 'G'
0000000000006e5c         db  0x0e ; '.'
0000000000006e5d         db  0x60 ; '`'
0000000000006e5e         db  0x02 ; '.'
0000000000006e5f         db  0x99 ; '.'
0000000000006e60         db  0x0e ; '.'
0000000000006e61         db  0x68 ; 'h'
0000000000006e62         db  0x5f ; '_'
0000000000006e63         db  0x0e ; '.'
0000000000006e64         db  0x70 ; 'p'
0000000000006e65         db  0x46 ; 'F'
0000000000006e66         db  0x0e ; '.'
0000000000006e67         db  0x78 ; 'x'
0000000000006e68         db  0x42 ; 'B'
0000000000006e69         db  0x0e ; '.'
0000000000006e6a         db  0x80 ; '.'
0000000000006e6b         db  0x01 ; '.'
0000000000006e6c         db  0x59 ; 'Y'
0000000000006e6d         db  0x0e ; '.'
0000000000006e6e         db  0x60 ; '`'
0000000000006e6f         db  0x02 ; '.'
0000000000006e70         db  0x40 ; '@'
0000000000006e71         db  0x0e ; '.'
0000000000006e72         db  0x68 ; 'h'
0000000000006e73         db  0x4b ; 'K'
0000000000006e74         db  0x0e ; '.'
0000000000006e75         db  0x70 ; 'p'
0000000000006e76         db  0x43 ; 'C'
0000000000006e77         db  0x0e ; '.'
0000000000006e78         db  0x78 ; 'x'
0000000000006e79         db  0x45 ; 'E'
0000000000006e7a         db  0x0e ; '.'
0000000000006e7b         db  0x80 ; '.'
0000000000006e7c         db  0x01 ; '.'
0000000000006e7d         db  0x5e ; '^'
0000000000006e7e         db  0x0e ; '.'
0000000000006e7f         db  0x60 ; '`'
0000000000006e80         db  0x4c ; 'L'
0000000000006e81         db  0x0a ; '.'
0000000000006e82         db  0x0e ; '.'
0000000000006e83         db  0x38 ; '8'
0000000000006e84         db  0x44 ; 'D'
0000000000006e85         db  0x0e ; '.'
0000000000006e86         db  0x30 ; '0'
0000000000006e87         db  0x41 ; 'A'
0000000000006e88         db  0x0e ; '.'
0000000000006e89         db  0x28 ; '('
0000000000006e8a         db  0x42 ; 'B'
0000000000006e8b         db  0x0e ; '.'
0000000000006e8c         db  0x20 ; ' '
0000000000006e8d         db  0x42 ; 'B'
0000000000006e8e         db  0x0e ; '.'
0000000000006e8f         db  0x18 ; '.'
0000000000006e90         db  0x42 ; 'B'
0000000000006e91         db  0x0e ; '.'
0000000000006e92         db  0x10 ; '.'
0000000000006e93         db  0x42 ; 'B'
0000000000006e94         db  0x0e ; '.'
0000000000006e95         db  0x08 ; '.'
0000000000006e96         db  0x46 ; 'F'
0000000000006e97         db  0x0b ; '.'
0000000000006e98         dd         0x00000028                                  ; Length of the record
0000000000006e9c         dd         0x00000314                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000006ea0         db         0xe0, 0xcf, 2 dup (0xff)                    ; begin 0x3e80
0000000000006ea4         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x3eb6)
0000000000006ea8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ea9         db  0x42 ; 'B'
0000000000006eaa         db  0x0e ; '.'
0000000000006eab         db  0x10 ; '.'
0000000000006eac         db  0x8c ; '.'
0000000000006ead         db  0x02 ; '.'
0000000000006eae         db  0x41 ; 'A'
0000000000006eaf         db  0x0e ; '.'
0000000000006eb0         db  0x18 ; '.'
0000000000006eb1         db  0x86 ; '.'
0000000000006eb2         db  0x03 ; '.'
0000000000006eb3         db  0x41 ; 'A'
0000000000006eb4         db  0x0e ; '.'
0000000000006eb5         db  0x20 ; ' '
0000000000006eb6         db  0x83 ; '.'
0000000000006eb7         db  0x04 ; '.'
0000000000006eb8         db  0x6e ; 'n'
0000000000006eb9         db  0x0e ; '.'
0000000000006eba         db  0x18 ; '.'
0000000000006ebb         db  0x41 ; 'A'
0000000000006ebc         db  0x0e ; '.'
0000000000006ebd         db  0x10 ; '.'
0000000000006ebe         db  0x42 ; 'B'
0000000000006ebf         db  0x0e ; '.'
0000000000006ec0         db  0x08 ; '.'
0000000000006ec1         db  0x00 ; '.'
0000000000006ec2         db  0x00 ; '.'
0000000000006ec3         db  0x00 ; '.'
0000000000006ec4         dd         0x00000010                                  ; Length of the record
0000000000006ec8         dd         0x00000340                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000006ecc         db         0xf4, 0xcf, 2 dup (0xff)                    ; begin 0x3ec0
0000000000006ed0         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x3ed1)
0000000000006ed4         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ed5         align      8
0000000000006ed8         dd         0x00000010                                  ; Length of the record
0000000000006edc         dd         0x00000354                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000006ee0         db         0x00, 0xd0, 2 dup (0xff)                    ; begin 0x3ee0
0000000000006ee4         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x3ef1)
0000000000006ee8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ee9         align      4
0000000000006eec         dd         0x00000010                                  ; Length of the record
0000000000006ef0         dd         0x00000368                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000006ef4         db         0x0c, 0xd0, 2 dup (0xff)                    ; begin 0x3f00
0000000000006ef8         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x3f35)
0000000000006efc         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006efd         align      256
0000000000006f00         dd         0x00000010                                  ; Length of the record
0000000000006f04         dd         0x0000037c                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000006f08         db         0x38, 0xd0, 2 dup (0xff)                    ; begin 0x3f40
0000000000006f0c         db         0x15, 3 dup (0x00)                          ; length 0x15 (end at 0x3f55)
0000000000006f10         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f11         align      4
0000000000006f14         dd         0x00000010                                  ; Length of the record
0000000000006f18         dd         0x00000390                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000006f1c         db         0x44, 0xd0, 2 dup (0xff)                    ; begin 0x3f60
0000000000006f20         db         0x30, 3 dup (0x00)                          ; length 0x30 (end at 0x3f90)
0000000000006f24         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f25         db  0x6b ; 'k'
0000000000006f26         db  0x0e ; '.'
0000000000006f27         db  0x10 ; '.'
0000000000006f28         dd         0x00000050                                  ; Length of the record
0000000000006f2c         dd         0x000003a4                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000006f30         db         0x60, 0xd0, 2 dup (0xff)                    ; begin 0x3f90
0000000000006f34         db         0x74, 3 dup (0x00)                          ; length 0x74 (end at 0x4004)
0000000000006f38         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f39         db  0x42 ; 'B'
0000000000006f3a         db  0x0e ; '.'
0000000000006f3b         db  0x10 ; '.'
0000000000006f3c         db  0x8f ; '.'
0000000000006f3d         db  0x02 ; '.'
0000000000006f3e         db  0x42 ; 'B'
0000000000006f3f         db  0x0e ; '.'
0000000000006f40         db  0x18 ; '.'
0000000000006f41         db  0x8e ; '.'
0000000000006f42         db  0x03 ; '.'
0000000000006f43         db  0x49 ; 'I'
0000000000006f44         db  0x0e ; '.'
0000000000006f45         db  0x20 ; ' '
0000000000006f46         db  0x8d ; '.'
0000000000006f47         db  0x04 ; '.'
0000000000006f48         db  0x42 ; 'B'
0000000000006f49         db  0x0e ; '.'
0000000000006f4a         db  0x28 ; '('
0000000000006f4b         db  0x8c ; '.'
0000000000006f4c         db  0x05 ; '.'
0000000000006f4d         db  0x44 ; 'D'
0000000000006f4e         db  0x0e ; '.'
0000000000006f4f         db  0x30 ; '0'
0000000000006f50         db  0x86 ; '.'
0000000000006f51         db  0x06 ; '.'
0000000000006f52         db  0x41 ; 'A'
0000000000006f53         db  0x0e ; '.'
0000000000006f54         db  0x38 ; '8'
0000000000006f55         db  0x83 ; '.'
0000000000006f56         db  0x07 ; '.'
0000000000006f57         db  0x4d ; 'M'
0000000000006f58         db  0x0e ; '.'
0000000000006f59         db  0x50 ; 'P'
0000000000006f5a         db  0x5f ; '_'
0000000000006f5b         db  0x0e ; '.'
0000000000006f5c         db  0x58 ; 'X'
0000000000006f5d         db  0x47 ; 'G'
0000000000006f5e         db  0x0e ; '.'
0000000000006f5f         db  0x60 ; '`'
0000000000006f60         db  0x46 ; 'F'
0000000000006f61         db  0x0e ; '.'
0000000000006f62         db  0x68 ; 'h'
0000000000006f63         db  0x44 ; 'D'
0000000000006f64         db  0x0e ; '.'
0000000000006f65         db  0x70 ; 'p'
0000000000006f66         db  0x58 ; 'X'
0000000000006f67         db  0x0e ; '.'
0000000000006f68         db  0x38 ; '8'
0000000000006f69         db  0x41 ; 'A'
0000000000006f6a         db  0x0e ; '.'
0000000000006f6b         db  0x30 ; '0'
0000000000006f6c         db  0x41 ; 'A'
0000000000006f6d         db  0x0e ; '.'
0000000000006f6e         db  0x28 ; '('
0000000000006f6f         db  0x42 ; 'B'
0000000000006f70         db  0x0e ; '.'
0000000000006f71         db  0x20 ; ' '
0000000000006f72         db  0x42 ; 'B'
0000000000006f73         db  0x0e ; '.'
0000000000006f74         db  0x18 ; '.'
0000000000006f75         db  0x42 ; 'B'
0000000000006f76         db  0x0e ; '.'
0000000000006f77         db  0x10 ; '.'
0000000000006f78         db  0x42 ; 'B'
0000000000006f79         db  0x0e ; '.'
0000000000006f7a         db  0x08 ; '.'
0000000000006f7b         db  0x00 ; '.'
0000000000006f7c         dd         0x00000068                                  ; Length of the record
0000000000006f80         dd         0x000003f8                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000006f84         db         0x8c, 0xd0, 2 dup (0xff)                    ; begin 0x4010
0000000000006f88         db         0xe3, 3 dup (0x00)                          ; length 0xe3 (end at 0x40f3)
0000000000006f8c         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006f8d         db  0x42 ; 'B'
0000000000006f8e         db  0x0e ; '.'
0000000000006f8f         db  0x10 ; '.'
0000000000006f90         db  0x8f ; '.'
0000000000006f91         db  0x02 ; '.'
0000000000006f92         db  0x42 ; 'B'
0000000000006f93         db  0x0e ; '.'
0000000000006f94         db  0x18 ; '.'
0000000000006f95         db  0x8e ; '.'
0000000000006f96         db  0x03 ; '.'
0000000000006f97         db  0x49 ; 'I'
0000000000006f98         db  0x0e ; '.'
0000000000006f99         db  0x20 ; ' '
0000000000006f9a         db  0x8d ; '.'
0000000000006f9b         db  0x04 ; '.'
0000000000006f9c         db  0x42 ; 'B'
0000000000006f9d         db  0x0e ; '.'
0000000000006f9e         db  0x28 ; '('
0000000000006f9f         db  0x8c ; '.'
0000000000006fa0         db  0x05 ; '.'
0000000000006fa1         db  0x44 ; 'D'
0000000000006fa2         db  0x0e ; '.'
0000000000006fa3         db  0x30 ; '0'
0000000000006fa4         db  0x86 ; '.'
0000000000006fa5         db  0x06 ; '.'
0000000000006fa6         db  0x41 ; 'A'
0000000000006fa7         db  0x0e ; '.'
0000000000006fa8         db  0x38 ; '8'
0000000000006fa9         db  0x83 ; '.'
0000000000006faa         db  0x07 ; '.'
0000000000006fab         db  0x4d ; 'M'
0000000000006fac         db  0x0e ; '.'
0000000000006fad         db  0x70 ; 'p'
0000000000006fae         db  0x65 ; 'e'
0000000000006faf         db  0x0e ; '.'
0000000000006fb0         db  0x78 ; 'x'
0000000000006fb1         db  0x4d ; 'M'
0000000000006fb2         db  0x0e ; '.'
0000000000006fb3         db  0x80 ; '.'
0000000000006fb4         db  0x01 ; '.'
0000000000006fb5         db  0x46 ; 'F'
0000000000006fb6         db  0x0e ; '.'
0000000000006fb7         db  0x88 ; '.'
0000000000006fb8         db  0x01 ; '.'
0000000000006fb9         db  0x42 ; 'B'
0000000000006fba         db  0x0e ; '.'
0000000000006fbb         db  0x90 ; '.'
0000000000006fbc         db  0x01 ; '.'
0000000000006fbd         db  0x5e ; '^'
0000000000006fbe         db  0x0e ; '.'
0000000000006fbf         db  0x70 ; 'p'
0000000000006fc0         db  0x56 ; 'V'
0000000000006fc1         db  0x0e ; '.'
0000000000006fc2         db  0x78 ; 'x'
0000000000006fc3         db  0x43 ; 'C'
0000000000006fc4         db  0x0e ; '.'
0000000000006fc5         db  0x80 ; '.'
0000000000006fc6         db  0x01 ; '.'
0000000000006fc7         db  0x43 ; 'C'
0000000000006fc8         db  0x0e ; '.'
0000000000006fc9         db  0x88 ; '.'
0000000000006fca         db  0x01 ; '.'
0000000000006fcb         db  0x56 ; 'V'
0000000000006fcc         db  0x0e ; '.'
0000000000006fcd         db  0x90 ; '.'
0000000000006fce         db  0x01 ; '.'
0000000000006fcf         db  0x52 ; 'R'
0000000000006fd0         db  0x0e ; '.'
0000000000006fd1         db  0x70 ; 'p'
0000000000006fd2         db  0x5b ; '['
0000000000006fd3         db  0x0e ; '.'
0000000000006fd4         db  0x38 ; '8'
0000000000006fd5         db  0x41 ; 'A'
0000000000006fd6         db  0x0e ; '.'
0000000000006fd7         db  0x30 ; '0'
0000000000006fd8         db  0x41 ; 'A'
0000000000006fd9         db  0x0e ; '.'
0000000000006fda         db  0x28 ; '('
0000000000006fdb         db  0x42 ; 'B'
0000000000006fdc         db  0x0e ; '.'
0000000000006fdd         db  0x20 ; ' '
0000000000006fde         db  0x42 ; 'B'
0000000000006fdf         db  0x0e ; '.'
0000000000006fe0         db  0x18 ; '.'
0000000000006fe1         db  0x42 ; 'B'
0000000000006fe2         db  0x0e ; '.'
0000000000006fe3         db  0x10 ; '.'
0000000000006fe4         db  0x42 ; 'B'
0000000000006fe5         db  0x0e ; '.'
0000000000006fe6         db  0x08 ; '.'
0000000000006fe7         db  0x00 ; '.'
0000000000006fe8         dd         0x00000010                                  ; Length of the record
0000000000006fec         dd         0x00000464                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000006ff0         db         0x10, 0xd1, 2 dup (0xff)                    ; begin 0x4100
0000000000006ff4         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x410a)
0000000000006ff8         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000006ff9         align      4
0000000000006ffc         dd         0x00000028                                  ; Length of the record
0000000000007000         dd         0x00000478                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000007004         db         0x0c, 0xd1, 2 dup (0xff)                    ; begin 0x4110
0000000000007008         db         0x93, 3 dup (0x00)                          ; length 0x93 (end at 0x41a3)
000000000000700c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000700d         db  0x48 ; 'H'
000000000000700e         db  0x0e ; '.'
000000000000700f         db  0x10 ; '.'
0000000000007010         db  0x8c ; '.'
0000000000007011         db  0x02 ; '.'
0000000000007012         db  0x48 ; 'H'
0000000000007013         db  0x0e ; '.'
0000000000007014         db  0x18 ; '.'
0000000000007015         db  0x86 ; '.'
0000000000007016         db  0x03 ; '.'
0000000000007017         db  0x41 ; 'A'
0000000000007018         db  0x0e ; '.'
0000000000007019         db  0x20 ; ' '
000000000000701a         db  0x83 ; '.'
000000000000701b         db  0x04 ; '.'
000000000000701c         db  0x02 ; '.'
000000000000701d         db  0x74 ; 't'
000000000000701e         db  0x0e ; '.'
000000000000701f         db  0x18 ; '.'
0000000000007020         db  0x4b ; 'K'
0000000000007021         db  0x0e ; '.'
0000000000007022         db  0x10 ; '.'
0000000000007023         db  0x42 ; 'B'
0000000000007024         db  0x0e ; '.'
0000000000007025         db  0x08 ; '.'
0000000000007026         db  0x00 ; '.'
0000000000007027         db  0x00 ; '.'
0000000000007028         dd         0x00000010                                  ; Length of the record
000000000000702c         dd         0x000004a4                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000007030         db         0x80, 0xd1, 2 dup (0xff)                    ; begin 0x41b0
0000000000007034         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x41c3)
0000000000007038         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007039         align      4
000000000000703c         dd         0x00000010                                  ; Length of the record
0000000000007040         dd         0x000004b8                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000007044         db         0x8c, 0xd1, 2 dup (0xff)                    ; begin 0x41d0
0000000000007048         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x41dc)
000000000000704c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000704d         align      16
0000000000007050         dd         0x00000010                                  ; Length of the record
0000000000007054         dd         0x000004cc                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000007058         db         0x88, 0xd1, 2 dup (0xff)                    ; begin 0x41e0
000000000000705c         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x41f8)
0000000000007060         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007061         align      4
0000000000007064         dd         0x00000010                                  ; Length of the record
0000000000007068         dd         0x000004e0                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
000000000000706c         db         0x94, 0xd1, 2 dup (0xff)                    ; begin 0x4200
0000000000007070         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x4214)
0000000000007074         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007075         align      8
0000000000007078         dd         0x00000018                                  ; Length of the record
000000000000707c         dd         0x000004f4                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000007080         db         0xa0, 0xd1, 2 dup (0xff)                    ; begin 0x4220
0000000000007084         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x42ae)
0000000000007088         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007089         db  0x44 ; 'D'
000000000000708a         db  0x0e ; '.'
000000000000708b         db  0x50 ; 'P'
000000000000708c         db  0x02 ; '.'
000000000000708d         db  0x7f ; '.'
000000000000708e         db  0x0a ; '.'
000000000000708f         db  0x0e ; '.'
0000000000007090         db  0x08 ; '.'
0000000000007091         db  0x41 ; 'A'
0000000000007092         db  0x0b ; '.'
0000000000007093         db  0x00 ; '.'
0000000000007094         dd         0x00000018                                  ; Length of the record
0000000000007098         dd         0x00000510                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
000000000000709c         db         0x14, 0xd2, 2 dup (0xff)                    ; begin 0x42b0
00000000000070a0         db         0x8a, 3 dup (0x00)                          ; length 0x8a (end at 0x433a)
00000000000070a4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000070a5         db  0x44 ; 'D'
00000000000070a6         db  0x0e ; '.'
00000000000070a7         db  0x50 ; 'P'
00000000000070a8         db  0x02 ; '.'
00000000000070a9         db  0x7b ; '{'
00000000000070aa         db  0x0a ; '.'
00000000000070ab         db  0x0e ; '.'
00000000000070ac         db  0x08 ; '.'
00000000000070ad         db  0x41 ; 'A'
00000000000070ae         db  0x0b ; '.'
00000000000070af         db  0x00 ; '.'
00000000000070b0         dd         0x00000010                                  ; Length of the record
00000000000070b4         dd         0x0000052c                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
00000000000070b8         db         0x88, 0xd2, 2 dup (0xff)                    ; begin 0x4340
00000000000070bc         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x434c)
00000000000070c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000070c1         align      4
00000000000070c4         dd         0x00000010                                  ; Length of the record
00000000000070c8         dd         0x00000540                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
00000000000070cc         db         0x84, 0xd2, 2 dup (0xff)                    ; begin 0x4350
00000000000070d0         db         0x0f, 3 dup (0x00)                          ; length 0xf (end at 0x435f)
00000000000070d4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000070d5         align      8
00000000000070d8         dd         0x00000018                                  ; Length of the record
00000000000070dc         dd         0x00000554                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
00000000000070e0         db         0x80, 0xd2, 2 dup (0xff)                    ; begin 0x4360
00000000000070e4         db         0x98, 3 dup (0x00)                          ; length 0x98 (end at 0x43f8)
00000000000070e8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000070e9         db  0x44 ; 'D'
00000000000070ea         db  0x0e ; '.'
00000000000070eb         db  0x50 ; 'P'
00000000000070ec         db  0x02 ; '.'
00000000000070ed         db  0x8e ; '.'
00000000000070ee         db  0x0a ; '.'
00000000000070ef         db  0x0e ; '.'
00000000000070f0         db  0x08 ; '.'
00000000000070f1         db  0x41 ; 'A'
00000000000070f2         db  0x0b ; '.'
00000000000070f3         db  0x00 ; '.'
00000000000070f4         dd         0x00000010                                  ; Length of the record
00000000000070f8         dd         0x00000570                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
00000000000070fc         db         0x04, 0xd3, 2 dup (0xff)                    ; begin 0x4400
0000000000007100         db         0x10, 3 dup (0x00)                          ; length 0x10 (end at 0x4410)
0000000000007104         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007105         align      8
0000000000007108         dd         0x00000010                                  ; Length of the record
000000000000710c         dd         0x00000584                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000007110         db         0x00, 0xd3, 2 dup (0xff)                    ; begin 0x4410
0000000000007114         db         0x11, 3 dup (0x00)                          ; length 0x11 (end at 0x4421)
0000000000007118         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007119         align      4
000000000000711c         dd         0x00000010                                  ; Length of the record
0000000000007120         dd         0x00000598                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000007124         db         0x0c, 0xd3, 2 dup (0xff)                    ; begin 0x4430
0000000000007128         db         0x0a, 3 dup (0x00)                          ; length 0xa (end at 0x443a)
000000000000712c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000712d         align      16
0000000000007130         dd         0x00000018                                  ; Length of the record
0000000000007134         dd         0x000005ac                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000007138         db         0x08, 0xd3, 2 dup (0xff)                    ; begin 0x4440
000000000000713c         db         0x8e, 3 dup (0x00)                          ; length 0x8e (end at 0x44ce)
0000000000007140         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007141         db  0x44 ; 'D'
0000000000007142         db  0x0e ; '.'
0000000000007143         db  0x50 ; 'P'
0000000000007144         db  0x02 ; '.'
0000000000007145         db  0x7f ; '.'
0000000000007146         db  0x0a ; '.'
0000000000007147         db  0x0e ; '.'
0000000000007148         db  0x08 ; '.'
0000000000007149         db  0x41 ; 'A'
000000000000714a         db  0x0b ; '.'
000000000000714b         db  0x00 ; '.'
000000000000714c         dd         0x00000018                                  ; Length of the record
0000000000007150         dd         0x000005c8                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000007154         db         0x7c, 0xd3, 2 dup (0xff)                    ; begin 0x44d0
0000000000007158         db         0x91, 3 dup (0x00)                          ; length 0x91 (end at 0x4561)
000000000000715c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000715d         db  0x44 ; 'D'
000000000000715e         db  0x0e ; '.'
000000000000715f         db  0x50 ; 'P'
0000000000007160         db  0x02 ; '.'
0000000000007161         db  0x82 ; '.'
0000000000007162         db  0x0a ; '.'
0000000000007163         db  0x0e ; '.'
0000000000007164         db  0x08 ; '.'
0000000000007165         db  0x41 ; 'A'
0000000000007166         db  0x0b ; '.'
0000000000007167         db  0x00 ; '.'
0000000000007168         dd         0x00000010                                  ; Length of the record
000000000000716c         dd         0x000005e4                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000007170         db         0x00, 0xd4, 2 dup (0xff)                    ; begin 0x4570
0000000000007174         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x457c)
0000000000007178         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007179         align      4
000000000000717c         dd         0x00000010                                  ; Length of the record
0000000000007180         dd         0x000005f8                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000007184         db         0xfc, 0xd3, 2 dup (0xff)                    ; begin 0x4580
0000000000007188         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x4597)
000000000000718c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000718d         align      16
0000000000007190         dd         0x00000010                                  ; Length of the record
0000000000007194         dd         0x0000060c                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000007198         db         0x08, 0xd4, 2 dup (0xff)                    ; begin 0x45a0
000000000000719c         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x45b3)
00000000000071a0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000071a1         align      4
00000000000071a4         dd         0x00000010                                  ; Length of the record
00000000000071a8         dd         0x00000620                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
00000000000071ac         db         0x14, 0xd4, 2 dup (0xff)                    ; begin 0x45c0
00000000000071b0         db         0x0c, 3 dup (0x00)                          ; length 0xc (end at 0x45cc)
00000000000071b4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000071b5         align      8
00000000000071b8         dd         0x00000010                                  ; Length of the record
00000000000071bc         dd         0x00000634                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
00000000000071c0         db         0x10, 0xd4, 2 dup (0xff)                    ; begin 0x45d0
00000000000071c4         db         0x14, 3 dup (0x00)                          ; length 0x14 (end at 0x45e4)
00000000000071c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000071c9         align      4
00000000000071cc         dd         0x00000010                                  ; Length of the record
00000000000071d0         dd         0x00000648                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
00000000000071d4         db         0x1c, 0xd4, 2 dup (0xff)                    ; begin 0x45f0
00000000000071d8         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4603)
00000000000071dc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000071dd         align      32
00000000000071e0         dd         0x00000014                                  ; Length of the record
00000000000071e4         dd         0x0000065c                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
00000000000071e8         db         0x28, 0xd4, 2 dup (0xff)                    ; begin 0x4610
00000000000071ec         db         0x18, 3 dup (0x00)                          ; length 0x18 (end at 0x4628)
00000000000071f0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000071f1         align      8
00000000000071f8         dd         0x00000110                                  ; Length of the record
00000000000071fc         dd         0x00000674                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000007200         db         0x30, 0xd4, 2 dup (0xff)                    ; begin 0x4630
0000000000007204         db         0x17, 0x04, 2 dup (0x00)                    ; length 0x417 (end at 0x4a47)
0000000000007208         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007209         db  0x42 ; 'B'
000000000000720a         db  0x0e ; '.'
000000000000720b         db  0x10 ; '.'
000000000000720c         db  0x8f ; '.'
000000000000720d         db  0x02 ; '.'
000000000000720e         db  0x42 ; 'B'
000000000000720f         db  0x0e ; '.'
0000000000007210         db  0x18 ; '.'
0000000000007211         db  0x8e ; '.'
0000000000007212         db  0x03 ; '.'
0000000000007213         db  0x42 ; 'B'
0000000000007214         db  0x0e ; '.'
0000000000007215         db  0x20 ; ' '
0000000000007216         db  0x8d ; '.'
0000000000007217         db  0x04 ; '.'
0000000000007218         db  0x42 ; 'B'
0000000000007219         db  0x0e ; '.'
000000000000721a         db  0x28 ; '('
000000000000721b         db  0x8c ; '.'
000000000000721c         db  0x05 ; '.'
000000000000721d         db  0x44 ; 'D'
000000000000721e         db  0x0e ; '.'
000000000000721f         db  0x30 ; '0'
0000000000007220         db  0x86 ; '.'
0000000000007221         db  0x06 ; '.'
0000000000007222         db  0x41 ; 'A'
0000000000007223         db  0x0e ; '.'
0000000000007224         db  0x38 ; '8'
0000000000007225         db  0x83 ; '.'
0000000000007226         db  0x07 ; '.'
0000000000007227         db  0x4a ; 'J'
0000000000007228         db  0x0e ; '.'
0000000000007229         db  0x60 ; '`'
000000000000722a         db  0x02 ; '.'
000000000000722b         db  0xdd ; '.'
000000000000722c         db  0x0e ; '.'
000000000000722d         db  0x68 ; 'h'
000000000000722e         db  0x57 ; 'W'
000000000000722f         db  0x0e ; '.'
0000000000007230         db  0x70 ; 'p'
0000000000007231         db  0x42 ; 'B'
0000000000007232         db  0x0e ; '.'
0000000000007233         db  0x78 ; 'x'
0000000000007234         db  0x42 ; 'B'
0000000000007235         db  0x0e ; '.'
0000000000007236         db  0x80 ; '.'
0000000000007237         db  0x01 ; '.'
0000000000007238         db  0x42 ; 'B'
0000000000007239         db  0x0e ; '.'
000000000000723a         db  0x88 ; '.'
000000000000723b         db  0x01 ; '.'
000000000000723c         db  0x42 ; 'B'
000000000000723d         db  0x0e ; '.'
000000000000723e         db  0x90 ; '.'
000000000000723f         db  0x01 ; '.'
0000000000007240         db  0x53 ; 'S'
0000000000007241         db  0x0e ; '.'
0000000000007242         db  0x60 ; '`'
0000000000007243         db  0x44 ; 'D'
0000000000007244         db  0x0a ; '.'
0000000000007245         db  0x0e ; '.'
0000000000007246         db  0x38 ; '8'
0000000000007247         db  0x41 ; 'A'
0000000000007248         db  0x0e ; '.'
0000000000007249         db  0x30 ; '0'
000000000000724a         db  0x41 ; 'A'
000000000000724b         db  0x0e ; '.'
000000000000724c         db  0x28 ; '('
000000000000724d         db  0x42 ; 'B'
000000000000724e         db  0x0e ; '.'
000000000000724f         db  0x20 ; ' '
0000000000007250         db  0x42 ; 'B'
0000000000007251         db  0x0e ; '.'
0000000000007252         db  0x18 ; '.'
0000000000007253         db  0x42 ; 'B'
0000000000007254         db  0x0e ; '.'
0000000000007255         db  0x10 ; '.'
0000000000007256         db  0x42 ; 'B'
0000000000007257         db  0x0e ; '.'
0000000000007258         db  0x08 ; '.'
0000000000007259         db  0x44 ; 'D'
000000000000725a         db  0x0b ; '.'
000000000000725b         db  0x02 ; '.'
000000000000725c         db  0x78 ; 'x'
000000000000725d         db  0x0a ; '.'
000000000000725e         db  0x0e ; '.'
000000000000725f         db  0x68 ; 'h'
0000000000007260         db  0x48 ; 'H'
0000000000007261         db  0x0b ; '.'
0000000000007262         db  0x5a ; 'Z'
0000000000007263         db  0x0a ; '.'
0000000000007264         db  0x0e ; '.'
0000000000007265         db  0x38 ; '8'
0000000000007266         db  0x47 ; 'G'
0000000000007267         db  0x0e ; '.'
0000000000007268         db  0x30 ; '0'
0000000000007269         db  0x41 ; 'A'
000000000000726a         db  0x0e ; '.'
000000000000726b         db  0x28 ; '('
000000000000726c         db  0x42 ; 'B'
000000000000726d         db  0x0e ; '.'
000000000000726e         db  0x20 ; ' '
000000000000726f         db  0x42 ; 'B'
0000000000007270         db  0x0e ; '.'
0000000000007271         db  0x18 ; '.'
0000000000007272         db  0x42 ; 'B'
0000000000007273         db  0x0e ; '.'
0000000000007274         db  0x10 ; '.'
0000000000007275         db  0x42 ; 'B'
0000000000007276         db  0x0e ; '.'
0000000000007277         db  0x08 ; '.'
0000000000007278         db  0x56 ; 'V'
0000000000007279         db  0x0b ; '.'
000000000000727a         db  0x5e ; '^'
000000000000727b         db  0x0a ; '.'
000000000000727c         db  0x0e ; '.'
000000000000727d         db  0x38 ; '8'
000000000000727e         db  0x52 ; 'R'
000000000000727f         db  0x0e ; '.'
0000000000007280         db  0x30 ; '0'
0000000000007281         db  0x41 ; 'A'
0000000000007282         db  0x0e ; '.'
0000000000007283         db  0x28 ; '('
0000000000007284         db  0x42 ; 'B'
0000000000007285         db  0x0e ; '.'
0000000000007286         db  0x20 ; ' '
0000000000007287         db  0x42 ; 'B'
0000000000007288         db  0x0e ; '.'
0000000000007289         db  0x18 ; '.'
000000000000728a         db  0x42 ; 'B'
000000000000728b         db  0x0e ; '.'
000000000000728c         db  0x10 ; '.'
000000000000728d         db  0x42 ; 'B'
000000000000728e         db  0x0e ; '.'
000000000000728f         db  0x08 ; '.'
0000000000007290         db  0x4f ; 'O'
0000000000007291         db  0x0b ; '.'
0000000000007292         db  0x62 ; 'b'
0000000000007293         db  0x0a ; '.'
0000000000007294         db  0x0e ; '.'
0000000000007295         db  0x38 ; '8'
0000000000007296         db  0x50 ; 'P'
0000000000007297         db  0x0e ; '.'
0000000000007298         db  0x30 ; '0'
0000000000007299         db  0x41 ; 'A'
000000000000729a         db  0x0e ; '.'
000000000000729b         db  0x28 ; '('
000000000000729c         db  0x42 ; 'B'
000000000000729d         db  0x0e ; '.'
000000000000729e         db  0x20 ; ' '
000000000000729f         db  0x42 ; 'B'
00000000000072a0         db  0x0e ; '.'
00000000000072a1         db  0x18 ; '.'
00000000000072a2         db  0x42 ; 'B'
00000000000072a3         db  0x0e ; '.'
00000000000072a4         db  0x10 ; '.'
00000000000072a5         db  0x42 ; 'B'
00000000000072a6         db  0x0e ; '.'
00000000000072a7         db  0x08 ; '.'
00000000000072a8         db  0x55 ; 'U'
00000000000072a9         db  0x0b ; '.'
00000000000072aa         db  0x66 ; 'f'
00000000000072ab         db  0x0e ; '.'
00000000000072ac         db  0x68 ; 'h'
00000000000072ad         db  0x42 ; 'B'
00000000000072ae         db  0x0e ; '.'
00000000000072af         db  0x70 ; 'p'
00000000000072b0         db  0x5c ; '\'
00000000000072b1         db  0x0e ; '.'
00000000000072b2         db  0x68 ; 'h'
00000000000072b3         db  0x41 ; 'A'
00000000000072b4         db  0x0e ; '.'
00000000000072b5         db  0x60 ; '`'
00000000000072b6         db  0x44 ; 'D'
00000000000072b7         db  0x0a ; '.'
00000000000072b8         db  0x0e ; '.'
00000000000072b9         db  0x38 ; '8'
00000000000072ba         db  0x41 ; 'A'
00000000000072bb         db  0x0e ; '.'
00000000000072bc         db  0x30 ; '0'
00000000000072bd         db  0x41 ; 'A'
00000000000072be         db  0x0e ; '.'
00000000000072bf         db  0x28 ; '('
00000000000072c0         db  0x42 ; 'B'
00000000000072c1         db  0x0e ; '.'
00000000000072c2         db  0x20 ; ' '
00000000000072c3         db  0x42 ; 'B'
00000000000072c4         db  0x0e ; '.'
00000000000072c5         db  0x18 ; '.'
00000000000072c6         db  0x42 ; 'B'
00000000000072c7         db  0x0e ; '.'
00000000000072c8         db  0x10 ; '.'
00000000000072c9         db  0x42 ; 'B'
00000000000072ca         db  0x0e ; '.'
00000000000072cb         db  0x08 ; '.'
00000000000072cc         db  0x45 ; 'E'
00000000000072cd         db  0x0b ; '.'
00000000000072ce         db  0x68 ; 'h'
00000000000072cf         db  0x0a ; '.'
00000000000072d0         db  0x0e ; '.'
00000000000072d1         db  0x68 ; 'h'
00000000000072d2         db  0x48 ; 'H'
00000000000072d3         db  0x0b ; '.'
00000000000072d4         db  0x72 ; 'r'
00000000000072d5         db  0x0e ; '.'
00000000000072d6         db  0x68 ; 'h'
00000000000072d7         db  0x45 ; 'E'
00000000000072d8         db  0x0e ; '.'
00000000000072d9         db  0x70 ; 'p'
00000000000072da         db  0x42 ; 'B'
00000000000072db         db  0x0e ; '.'
00000000000072dc         db  0x78 ; 'x'
00000000000072dd         db  0x42 ; 'B'
00000000000072de         db  0x0e ; '.'
00000000000072df         db  0x80 ; '.'
00000000000072e0         db  0x01 ; '.'
00000000000072e1         db  0x5e ; '^'
00000000000072e2         db  0x0e ; '.'
00000000000072e3         db  0x60 ; '`'
00000000000072e4         db  0x44 ; 'D'
00000000000072e5         db  0x0a ; '.'
00000000000072e6         db  0x0e ; '.'
00000000000072e7         db  0x38 ; '8'
00000000000072e8         db  0x41 ; 'A'
00000000000072e9         db  0x0e ; '.'
00000000000072ea         db  0x30 ; '0'
00000000000072eb         db  0x41 ; 'A'
00000000000072ec         db  0x0e ; '.'
00000000000072ed         db  0x28 ; '('
00000000000072ee         db  0x42 ; 'B'
00000000000072ef         db  0x0e ; '.'
00000000000072f0         db  0x20 ; ' '
00000000000072f1         db  0x42 ; 'B'
00000000000072f2         db  0x0e ; '.'
00000000000072f3         db  0x18 ; '.'
00000000000072f4         db  0x42 ; 'B'
00000000000072f5         db  0x0e ; '.'
00000000000072f6         db  0x10 ; '.'
00000000000072f7         db  0x42 ; 'B'
00000000000072f8         db  0x0e ; '.'
00000000000072f9         db  0x08 ; '.'
00000000000072fa         db  0x41 ; 'A'
00000000000072fb         db  0x0b ; '.'
00000000000072fc         db  0x79 ; 'y'
00000000000072fd         db  0x0a ; '.'
00000000000072fe         db  0x0e ; '.'
00000000000072ff         db  0x68 ; 'h'
0000000000007300         db  0x42 ; 'B'
0000000000007301         db  0x0e ; '.'
0000000000007302         db  0x70 ; 'p'
0000000000007303         db  0x42 ; 'B'
0000000000007304         db  0x0e ; '.'
0000000000007305         db  0x78 ; 'x'
0000000000007306         db  0x42 ; 'B'
0000000000007307         db  0x0e ; '.'
0000000000007308         db  0x80 ; '.'
0000000000007309         db  0x01 ; '.'
000000000000730a         db  0x51 ; 'Q'
000000000000730b         db  0x0b ; '.'
000000000000730c         dd         0x00000010                                  ; Length of the record
0000000000007310         dd         0x00000788                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000007314         db         0x3c, 0xd7, 2 dup (0xff)                    ; begin 0x4a50
0000000000007318         db         0x20, 3 dup (0x00)                          ; length 0x20 (end at 0x4a70)
000000000000731c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000731d         align      32
0000000000007320         dd         0x00000018                                  ; Length of the record
0000000000007324         dd         0x0000079c                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000007328         db         0x48, 0xd7, 2 dup (0xff)                    ; begin 0x4a70
000000000000732c         db         0x78, 3 dup (0x00)                          ; length 0x78 (end at 0x4ae8)
0000000000007330         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007331         db  0x44 ; 'D'
0000000000007332         db  0x0e ; '.'
0000000000007333         db  0x70 ; 'p'
0000000000007334         db  0x02 ; '.'
0000000000007335         db  0x60 ; '`'
0000000000007336         db  0x0a ; '.'
0000000000007337         db  0x0e ; '.'
0000000000007338         db  0x08 ; '.'
0000000000007339         db  0x41 ; 'A'
000000000000733a         db  0x0b ; '.'
000000000000733b         db  0x00 ; '.'
000000000000733c         dd         0x00000028                                  ; Length of the record
0000000000007340         dd         0x000007b8                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000007344         db         0xac, 0xd7, 2 dup (0xff)                    ; begin 0x4af0
0000000000007348         db         0xd5, 3 dup (0x00)                          ; length 0xd5 (end at 0x4bc5)
000000000000734c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000734d         db  0x41 ; 'A'
000000000000734e         db  0x0e ; '.'
000000000000734f         db  0x10 ; '.'
0000000000007350         db  0x86 ; '.'
0000000000007351         db  0x02 ; '.'
0000000000007352         db  0x41 ; 'A'
0000000000007353         db  0x0e ; '.'
0000000000007354         db  0x18 ; '.'
0000000000007355         db  0x83 ; '.'
0000000000007356         db  0x03 ; '.'
0000000000007357         db  0x50 ; 'P'
0000000000007358         db  0x0e ; '.'
0000000000007359         db  0xd0 ; '.'
000000000000735a         db  0x01 ; '.'
000000000000735b         db  0x02 ; '.'
000000000000735c         db  0xab ; '.'
000000000000735d         db  0x0a ; '.'
000000000000735e         db  0x0e ; '.'
000000000000735f         db  0x18 ; '.'
0000000000007360         db  0x41 ; 'A'
0000000000007361         db  0x0e ; '.'
0000000000007362         db  0x10 ; '.'
0000000000007363         db  0x41 ; 'A'
0000000000007364         db  0x0e ; '.'
0000000000007365         db  0x08 ; '.'
0000000000007366         db  0x41 ; 'A'
0000000000007367         db  0x0b ; '.'
0000000000007368         dd         0x0000001c                                  ; Length of the record
000000000000736c         dd         0x000007e4                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000007370         db         0x60, 0xd8, 2 dup (0xff)                    ; begin 0x4bd0
0000000000007374         db         0x80, 3 dup (0x00)                          ; length 0x80 (end at 0x4c50)
0000000000007378         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007379         db  0x41 ; 'A'
000000000000737a         db  0x0e ; '.'
000000000000737b         db  0x10 ; '.'
000000000000737c         db  0x83 ; '.'
000000000000737d         db  0x02 ; '.'
000000000000737e         db  0x02 ; '.'
000000000000737f         db  0x7a ; 'z'
0000000000007380         db  0x0e ; '.'
0000000000007381         db  0x08 ; '.'
0000000000007382         db  0x00 ; '.'
0000000000007383         db  0x00 ; '.'
0000000000007384         db  0x00 ; '.'
0000000000007385         db  0x00 ; '.'
0000000000007386         db  0x00 ; '.'
0000000000007387         db  0x00 ; '.'
0000000000007388         dd         0x00000018                                  ; Length of the record
000000000000738c         dd         0x00000804                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000007390         db         0xc0, 0xd8, 2 dup (0xff)                    ; begin 0x4c50
0000000000007394         db         0x1a, 3 dup (0x00)                          ; length 0x1a (end at 0x4c6a)
0000000000007398         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007399         db  0x41 ; 'A'
000000000000739a         db  0x0e ; '.'
000000000000739b         db  0x10 ; '.'
000000000000739c         db  0x83 ; '.'
000000000000739d         db  0x02 ; '.'
000000000000739e         db  0x53 ; 'S'
000000000000739f         db  0x0a ; '.'
00000000000073a0         db  0x0e ; '.'
00000000000073a1         db  0x08 ; '.'
00000000000073a2         db  0x41 ; 'A'
00000000000073a3         db  0x0b ; '.'
00000000000073a4         dd         0x00000010                                  ; Length of the record
00000000000073a8         dd         0x00000820                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
00000000000073ac         db         0xc4, 0xd8, 2 dup (0xff)                    ; begin 0x4c70
00000000000073b0         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x4c94)
00000000000073b4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000073b5         db  0x5f ; '_'
00000000000073b6         db  0x0e ; '.'
00000000000073b7         db  0x10 ; '.'
00000000000073b8         dd         0x00000010                                  ; Length of the record
00000000000073bc         dd         0x00000834                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
00000000000073c0         db         0xe0, 0xd8, 2 dup (0xff)                    ; begin 0x4ca0
00000000000073c4         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x4ca2)
00000000000073c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000073c9         align      4
00000000000073cc         dd         0x00000020                                  ; Length of the record
00000000000073d0         dd         0x00000848                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
00000000000073d4         db         0xdc, 0xd8, 2 dup (0xff)                    ; begin 0x4cb0
00000000000073d8         db         0x36, 3 dup (0x00)                          ; length 0x36 (end at 0x4ce6)
00000000000073dc         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000073dd         db  0x44 ; 'D'
00000000000073de         db  0x0e ; '.'
00000000000073df         db  0x10 ; '.'
00000000000073e0         db  0x83 ; '.'
00000000000073e1         db  0x02 ; '.'
00000000000073e2         db  0x5d ; ']'
00000000000073e3         db  0x0a ; '.'
00000000000073e4         db  0x0e ; '.'
00000000000073e5         db  0x08 ; '.'
00000000000073e6         db  0x47 ; 'G'
00000000000073e7         db  0x0b ; '.'
00000000000073e8         db  0x48 ; 'H'
00000000000073e9         db  0x0a ; '.'
00000000000073ea         db  0x0e ; '.'
00000000000073eb         db  0x08 ; '.'
00000000000073ec         db  0x41 ; 'A'
00000000000073ed         db  0x0b ; '.'
00000000000073ee         db  0x00 ; '.'
00000000000073ef         db  0x00 ; '.'
00000000000073f0         dd         0x00000010                                  ; Length of the record
00000000000073f4         dd         0x0000086c                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
00000000000073f8         db         0xf8, 0xd8, 2 dup (0xff)                    ; begin 0x4cf0
00000000000073fc         db         0x24, 3 dup (0x00)                          ; length 0x24 (end at 0x4d14)
0000000000007400         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007401         db  0x5f ; '_'
0000000000007402         db  0x0e ; '.'
0000000000007403         db  0x10 ; '.'
0000000000007404         dd         0x00000014                                  ; Length of the record
0000000000007408         dd         0x00000880                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
000000000000740c         db         0x14, 0xd9, 2 dup (0xff)                    ; begin 0x4d20
0000000000007410         db         0x82, 3 dup (0x00)                          ; length 0x82 (end at 0x4da2)
0000000000007414         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007415         db  0x02 ; '.'
0000000000007416         db  0x5f ; '_'
0000000000007417         db  0x0e ; '.'
0000000000007418         db  0x10 ; '.'
0000000000007419         db  0x49 ; 'I'
000000000000741a         db  0x0e ; '.'
000000000000741b         db  0x08 ; '.'
000000000000741c         dd         0x00000014                                  ; Length of the record
0000000000007420         dd         0x00000898                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000007424         db         0x8c, 0xd9, 2 dup (0xff)                    ; begin 0x4db0
0000000000007428         db         0x4a, 3 dup (0x00)                          ; length 0x4a (end at 0x4dfa)
000000000000742c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000742d         db  0x02 ; '.'
000000000000742e         db  0x45 ; 'E'
000000000000742f         db  0x0e ; '.'
0000000000007430         db  0x10 ; '.'
0000000000007431         db  0x00 ; '.'
0000000000007432         db  0x00 ; '.'
0000000000007433         db  0x00 ; '.'
0000000000007434         dd         0x00000018                                  ; Length of the record
0000000000007438         dd         0x000008b0                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
000000000000743c         db         0xc4, 0xd9, 2 dup (0xff)                    ; begin 0x4e00
0000000000007440         db         0x17, 3 dup (0x00)                          ; length 0x17 (end at 0x4e17)
0000000000007444         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007445         db  0x41 ; 'A'
0000000000007446         db  0x0e ; '.'
0000000000007447         db  0x10 ; '.'
0000000000007448         db  0x83 ; '.'
0000000000007449         db  0x02 ; '.'
000000000000744a         db  0x51 ; 'Q'
000000000000744b         db  0x0e ; '.'
000000000000744c         db  0x08 ; '.'
000000000000744d         db  0x00 ; '.'
000000000000744e         db  0x00 ; '.'
000000000000744f         db  0x00 ; '.'
0000000000007450         dd         0x00000018                                  ; Length of the record
0000000000007454         dd         0x000008cc                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000007458         db         0xc8, 0xd9, 2 dup (0xff)                    ; begin 0x4e20
000000000000745c         db         0x2e, 3 dup (0x00)                          ; length 0x2e (end at 0x4e4e)
0000000000007460         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007461         db  0x47 ; 'G'
0000000000007462         db  0x0e ; '.'
0000000000007463         db  0x10 ; '.'
0000000000007464         db  0x61 ; 'a'
0000000000007465         db  0x0a ; '.'
0000000000007466         db  0x0e ; '.'
0000000000007467         db  0x08 ; '.'
0000000000007468         db  0x41 ; 'A'
0000000000007469         db  0x0b ; '.'
000000000000746a         db  0x00 ; '.'
000000000000746b         db  0x00 ; '.'
000000000000746c         dd         0x00000024                                  ; Length of the record
0000000000007470         dd         0x000008e8                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000007474         db         0xdc, 0xd9, 2 dup (0xff)                    ; begin 0x4e50
0000000000007478         db         0x28, 3 dup (0x00)                          ; length 0x28 (end at 0x4e78)
000000000000747c         db         0x00                                        ; Augmentation length (LEB128=0)
000000000000747d         db  0x41 ; 'A'
000000000000747e         db  0x0e ; '.'
000000000000747f         db  0x10 ; '.'
0000000000007480         db  0x86 ; '.'
0000000000007481         db  0x02 ; '.'
0000000000007482         db  0x41 ; 'A'
0000000000007483         db  0x0e ; '.'
0000000000007484         db  0x18 ; '.'
0000000000007485         db  0x83 ; '.'
0000000000007486         db  0x03 ; '.'
0000000000007487         db  0x4d ; 'M'
0000000000007488         db  0x0e ; '.'
0000000000007489         db  0x20 ; ' '
000000000000748a         db  0x49 ; 'I'
000000000000748b         db  0x0e ; '.'
000000000000748c         db  0x18 ; '.'
000000000000748d         db  0x47 ; 'G'
000000000000748e         db  0x0e ; '.'
000000000000748f         db  0x10 ; '.'
0000000000007490         db  0x41 ; 'A'
0000000000007491         db  0x0e ; '.'
0000000000007492         db  0x08 ; '.'
0000000000007493         db  0x00 ; '.'
0000000000007494         dd         0x00000018                                  ; Length of the record
0000000000007498         dd         0x00000910                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
000000000000749c         db         0xe4, 0xd9, 2 dup (0xff)                    ; begin 0x4e80
00000000000074a0         db         0x13, 3 dup (0x00)                          ; length 0x13 (end at 0x4e93)
00000000000074a4         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000074a5         db  0x41 ; 'A'
00000000000074a6         db  0x0e ; '.'
00000000000074a7         db  0x10 ; '.'
00000000000074a8         db  0x83 ; '.'
00000000000074a9         db  0x02 ; '.'
00000000000074aa         db  0x50 ; 'P'
00000000000074ab         db  0x0e ; '.'
00000000000074ac         db  0x08 ; '.'
00000000000074ad         db  0x00 ; '.'
00000000000074ae         db  0x00 ; '.'
00000000000074af         db  0x00 ; '.'
00000000000074b0         dd         0x00000014                                  ; Length of the record
00000000000074b4         dd         0x0000092c                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
00000000000074b8         db         0xe8, 0xd9, 2 dup (0xff)                    ; begin 0x4ea0
00000000000074bc         db         0x35, 3 dup (0x00)                          ; length 0x35 (end at 0x4ed5)
00000000000074c0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000074c1         db  0x4b ; 'K'
00000000000074c2         db  0x0e ; '.'
00000000000074c3         db  0x10 ; '.'
00000000000074c4         db  0x00 ; '.'
00000000000074c5         db  0x00 ; '.'
00000000000074c6         db  0x00 ; '.'
00000000000074c7         db  0x00 ; '.'
00000000000074c8         dd         0x0000004c                                  ; Length of the record
00000000000074cc         dd         0x00000944                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
00000000000074d0         db         0x10, 0xda, 2 dup (0xff)                    ; begin 0x4ee0
00000000000074d4         db         0x1c, 0x04, 2 dup (0x00)                    ; length 0x41c (end at 0x52fc)
00000000000074d8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000074d9         db  0x42 ; 'B'
00000000000074da         db  0x0e ; '.'
00000000000074db         db  0x10 ; '.'
00000000000074dc         db  0x8f ; '.'
00000000000074dd         db  0x02 ; '.'
00000000000074de         db  0x42 ; 'B'
00000000000074df         db  0x0e ; '.'
00000000000074e0         db  0x18 ; '.'
00000000000074e1         db  0x8e ; '.'
00000000000074e2         db  0x03 ; '.'
00000000000074e3         db  0x42 ; 'B'
00000000000074e4         db  0x0e ; '.'
00000000000074e5         db  0x20 ; ' '
00000000000074e6         db  0x8d ; '.'
00000000000074e7         db  0x04 ; '.'
00000000000074e8         db  0x42 ; 'B'
00000000000074e9         db  0x0e ; '.'
00000000000074ea         db  0x28 ; '('
00000000000074eb         db  0x8c ; '.'
00000000000074ec         db  0x05 ; '.'
00000000000074ed         db  0x41 ; 'A'
00000000000074ee         db  0x0e ; '.'
00000000000074ef         db  0x30 ; '0'
00000000000074f0         db  0x86 ; '.'
00000000000074f1         db  0x06 ; '.'
00000000000074f2         db  0x41 ; 'A'
00000000000074f3         db  0x0e ; '.'
00000000000074f4         db  0x38 ; '8'
00000000000074f5         db  0x83 ; '.'
00000000000074f6         db  0x07 ; '.'
00000000000074f7         db  0x44 ; 'D'
00000000000074f8         db  0x0e ; '.'
00000000000074f9         db  0x60 ; '`'
00000000000074fa         db  0x02 ; '.'
00000000000074fb         db  0xe9 ; '.'
00000000000074fc         db  0x0a ; '.'
00000000000074fd         db  0x0e ; '.'
00000000000074fe         db  0x38 ; '8'
00000000000074ff         db  0x41 ; 'A'
0000000000007500         db  0x0e ; '.'
0000000000007501         db  0x30 ; '0'
0000000000007502         db  0x41 ; 'A'
0000000000007503         db  0x0e ; '.'
0000000000007504         db  0x28 ; '('
0000000000007505         db  0x42 ; 'B'
0000000000007506         db  0x0e ; '.'
0000000000007507         db  0x20 ; ' '
0000000000007508         db  0x42 ; 'B'
0000000000007509         db  0x0e ; '.'
000000000000750a         db  0x18 ; '.'
000000000000750b         db  0x42 ; 'B'
000000000000750c         db  0x0e ; '.'
000000000000750d         db  0x10 ; '.'
000000000000750e         db  0x42 ; 'B'
000000000000750f         db  0x0e ; '.'
0000000000007510         db  0x08 ; '.'
0000000000007511         db  0x47 ; 'G'
0000000000007512         db  0x0b ; '.'
0000000000007513         db  0x00 ; '.'
0000000000007514         db  0x00 ; '.'
0000000000007515         db  0x00 ; '.'
0000000000007516         db  0x00 ; '.'
0000000000007517         db  0x00 ; '.'
0000000000007518         dd         0x0000003c                                  ; Length of the record
000000000000751c         dd         0x00000994                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000007520         db         0xe0, 0xdd, 2 dup (0xff)                    ; begin 0x5300
0000000000007524         db         0x83, 3 dup (0x00)                          ; length 0x83 (end at 0x5383)
0000000000007528         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007529         db  0x42 ; 'B'
000000000000752a         db  0x0e ; '.'
000000000000752b         db  0x10 ; '.'
000000000000752c         db  0x8d ; '.'
000000000000752d         db  0x02 ; '.'
000000000000752e         db  0x42 ; 'B'
000000000000752f         db  0x0e ; '.'
0000000000007530         db  0x18 ; '.'
0000000000007531         db  0x8c ; '.'
0000000000007532         db  0x03 ; '.'
0000000000007533         db  0x44 ; 'D'
0000000000007534         db  0x0e ; '.'
0000000000007535         db  0x20 ; ' '
0000000000007536         db  0x86 ; '.'
0000000000007537         db  0x04 ; '.'
0000000000007538         db  0x41 ; 'A'
0000000000007539         db  0x0e ; '.'
000000000000753a         db  0x28 ; '('
000000000000753b         db  0x83 ; '.'
000000000000753c         db  0x05 ; '.'
000000000000753d         db  0x4a ; 'J'
000000000000753e         db  0x0e ; '.'
000000000000753f         db  0x40 ; '@'
0000000000007540         db  0x02 ; '.'
0000000000007541         db  0x64 ; 'd'
0000000000007542         db  0x0a ; '.'
0000000000007543         db  0x0e ; '.'
0000000000007544         db  0x28 ; '('
0000000000007545         db  0x41 ; 'A'
0000000000007546         db  0x0e ; '.'
0000000000007547         db  0x20 ; ' '
0000000000007548         db  0x41 ; 'A'
0000000000007549         db  0x0e ; '.'
000000000000754a         db  0x18 ; '.'
000000000000754b         db  0x42 ; 'B'
000000000000754c         db  0x0e ; '.'
000000000000754d         db  0x10 ; '.'
000000000000754e         db  0x42 ; 'B'
000000000000754f         db  0x0e ; '.'
0000000000007550         db  0x08 ; '.'
0000000000007551         db  0x41 ; 'A'
0000000000007552         db  0x0b ; '.'
0000000000007553         db  0x00 ; '.'
0000000000007554         db  0x00 ; '.'
0000000000007555         db  0x00 ; '.'
0000000000007556         db  0x00 ; '.'
0000000000007557         db  0x00 ; '.'
0000000000007558         dd         0x0000004c                                  ; Length of the record
000000000000755c         dd         0x000009d4                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000007560         db         0x30, 0xde, 2 dup (0xff)                    ; begin 0x5390
0000000000007564         db         0x7d, 3 dup (0x00)                          ; length 0x7d (end at 0x540d)
0000000000007568         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007569         db  0x42 ; 'B'
000000000000756a         db  0x0e ; '.'
000000000000756b         db  0x10 ; '.'
000000000000756c         db  0x8c ; '.'
000000000000756d         db  0x02 ; '.'
000000000000756e         db  0x41 ; 'A'
000000000000756f         db  0x0e ; '.'
0000000000007570         db  0x18 ; '.'
0000000000007571         db  0x86 ; '.'
0000000000007572         db  0x03 ; '.'
0000000000007573         db  0x44 ; 'D'
0000000000007574         db  0x0e ; '.'
0000000000007575         db  0x20 ; ' '
0000000000007576         db  0x83 ; '.'
0000000000007577         db  0x04 ; '.'
0000000000007578         db  0x69 ; 'i'
0000000000007579         db  0x0a ; '.'
000000000000757a         db  0x0e ; '.'
000000000000757b         db  0x18 ; '.'
000000000000757c         db  0x41 ; 'A'
000000000000757d         db  0x0e ; '.'
000000000000757e         db  0x10 ; '.'
000000000000757f         db  0x42 ; 'B'
0000000000007580         db  0x0e ; '.'
0000000000007581         db  0x08 ; '.'
0000000000007582         db  0x45 ; 'E'
0000000000007583         db  0x0b ; '.'
0000000000007584         db  0x55 ; 'U'
0000000000007585         db  0x0a ; '.'
0000000000007586         db  0x0e ; '.'
0000000000007587         db  0x18 ; '.'
0000000000007588         db  0x41 ; 'A'
0000000000007589         db  0x0e ; '.'
000000000000758a         db  0x10 ; '.'
000000000000758b         db  0x42 ; 'B'
000000000000758c         db  0x0e ; '.'
000000000000758d         db  0x08 ; '.'
000000000000758e         db  0x48 ; 'H'
000000000000758f         db  0x0b ; '.'
0000000000007590         db  0x41 ; 'A'
0000000000007591         db  0x0a ; '.'
0000000000007592         db  0x0e ; '.'
0000000000007593         db  0x18 ; '.'
0000000000007594         db  0x46 ; 'F'
0000000000007595         db  0x0e ; '.'
0000000000007596         db  0x10 ; '.'
0000000000007597         db  0x42 ; 'B'
0000000000007598         db  0x0e ; '.'
0000000000007599         db  0x08 ; '.'
000000000000759a         db  0x47 ; 'G'
000000000000759b         db  0x0b ; '.'
000000000000759c         db  0x49 ; 'I'
000000000000759d         db  0x0e ; '.'
000000000000759e         db  0x18 ; '.'
000000000000759f         db  0x41 ; 'A'
00000000000075a0         db  0x0e ; '.'
00000000000075a1         db  0x10 ; '.'
00000000000075a2         db  0x42 ; 'B'
00000000000075a3         db  0x0e ; '.'
00000000000075a4         db  0x08 ; '.'
00000000000075a5         db  0x00 ; '.'
00000000000075a6         db  0x00 ; '.'
00000000000075a7         db  0x00 ; '.'
00000000000075a8         dd         0x0000001c                                  ; Length of the record
00000000000075ac         dd         0x00000a24                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
00000000000075b0         db         0x60, 0xde, 2 dup (0xff)                    ; begin 0x5410
00000000000075b4         db         0x60, 3 dup (0x00)                          ; length 0x60 (end at 0x5470)
00000000000075b8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000075b9         db  0x44 ; 'D'
00000000000075ba         db  0x0e ; '.'
00000000000075bb         db  0x10 ; '.'
00000000000075bc         db  0x75 ; 'u'
00000000000075bd         db  0x0a ; '.'
00000000000075be         db  0x0e ; '.'
00000000000075bf         db  0x08 ; '.'
00000000000075c0         db  0x47 ; 'G'
00000000000075c1         db  0x0b ; '.'
00000000000075c2         db  0x5f ; '_'
00000000000075c3         db  0x0e ; '.'
00000000000075c4         db  0x08 ; '.'
00000000000075c5         db  0x00 ; '.'
00000000000075c6         db  0x00 ; '.'
00000000000075c7         db  0x00 ; '.'
00000000000075c8         dd         0x0000001c                                  ; Length of the record
00000000000075cc         dd         0x00000a44                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
00000000000075d0         db         0xa0, 0xde, 2 dup (0xff)                    ; begin 0x5470
00000000000075d4         db         0x3c, 3 dup (0x00)                          ; length 0x3c (end at 0x54ac)
00000000000075d8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000075d9         db  0x44 ; 'D'
00000000000075da         db  0x0e ; '.'
00000000000075db         db  0x10 ; '.'
00000000000075dc         db  0x61 ; 'a'
00000000000075dd         db  0x0a ; '.'
00000000000075de         db  0x0e ; '.'
00000000000075df         db  0x08 ; '.'
00000000000075e0         db  0x4b ; 'K'
00000000000075e1         db  0x0b ; '.'
00000000000075e2         db  0x4b ; 'K'
00000000000075e3         db  0x0e ; '.'
00000000000075e4         db  0x08 ; '.'
00000000000075e5         db  0x00 ; '.'
00000000000075e6         db  0x00 ; '.'
00000000000075e7         db  0x00 ; '.'
00000000000075e8         dd         0x00000034                                  ; Length of the record
00000000000075ec         dd         0x00000a64                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
00000000000075f0         db         0xc0, 0xde, 2 dup (0xff)                    ; begin 0x54b0
00000000000075f4         db         0x7b, 3 dup (0x00)                          ; length 0x7b (end at 0x552b)
00000000000075f8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000075f9         db  0x42 ; 'B'
00000000000075fa         db  0x0e ; '.'
00000000000075fb         db  0x10 ; '.'
00000000000075fc         db  0x8c ; '.'
00000000000075fd         db  0x02 ; '.'
00000000000075fe         db  0x41 ; 'A'
00000000000075ff         db  0x0e ; '.'
0000000000007600         db  0x18 ; '.'
0000000000007601         db  0x86 ; '.'
0000000000007602         db  0x03 ; '.'
0000000000007603         db  0x41 ; 'A'
0000000000007604         db  0x0e ; '.'
0000000000007605         db  0x20 ; ' '
0000000000007606         db  0x83 ; '.'
0000000000007607         db  0x04 ; '.'
0000000000007608         db  0x7d ; '}'
0000000000007609         db  0x0a ; '.'
000000000000760a         db  0x0e ; '.'
000000000000760b         db  0x18 ; '.'
000000000000760c         db  0x41 ; 'A'
000000000000760d         db  0x0e ; '.'
000000000000760e         db  0x10 ; '.'
000000000000760f         db  0x42 ; 'B'
0000000000007610         db  0x0e ; '.'
0000000000007611         db  0x08 ; '.'
0000000000007612         db  0x44 ; 'D'
0000000000007613         db  0x0b ; '.'
0000000000007614         db  0x60 ; '`'
0000000000007615         db  0x0a ; '.'
0000000000007616         db  0x0e ; '.'
0000000000007617         db  0x18 ; '.'
0000000000007618         db  0x41 ; 'A'
0000000000007619         db  0x0e ; '.'
000000000000761a         db  0x10 ; '.'
000000000000761b         db  0x42 ; 'B'
000000000000761c         db  0x0e ; '.'
000000000000761d         db  0x08 ; '.'
000000000000761e         db  0x45 ; 'E'
000000000000761f         db  0x0b ; '.'
0000000000007620         dd         0x0000001c                                  ; Length of the record
0000000000007624         dd         0x00000a9c                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000007628         db         0x08, 0xdf, 2 dup (0xff)                    ; begin 0x5530
000000000000762c         db         0x40, 3 dup (0x00)                          ; length 0x40 (end at 0x5570)
0000000000007630         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007631         db  0x44 ; 'D'
0000000000007632         db  0x0e ; '.'
0000000000007633         db  0x10 ; '.'
0000000000007634         db  0x83 ; '.'
0000000000007635         db  0x02 ; '.'
0000000000007636         db  0x5a ; 'Z'
0000000000007637         db  0x0a ; '.'
0000000000007638         db  0x0e ; '.'
0000000000007639         db  0x08 ; '.'
000000000000763a         db  0x4a ; 'J'
000000000000763b         db  0x0b ; '.'
000000000000763c         db  0x53 ; 'S'
000000000000763d         db  0x0e ; '.'
000000000000763e         db  0x08 ; '.'
000000000000763f         db  0x00 ; '.'
0000000000007640         dd         0x0000002c                                  ; Length of the record
0000000000007644         dd         0x00000abc                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000007648         db         0x28, 0xdf, 2 dup (0xff)                    ; begin 0x5570
000000000000764c         db         0x57, 3 dup (0x00)                          ; length 0x57 (end at 0x55c7)
0000000000007650         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007651         db  0x63 ; 'c'
0000000000007652         db  0x0e ; '.'
0000000000007653         db  0x10 ; '.'
0000000000007654         db  0x8c ; '.'
0000000000007655         db  0x02 ; '.'
0000000000007656         db  0x41 ; 'A'
0000000000007657         db  0x0e ; '.'
0000000000007658         db  0x18 ; '.'
0000000000007659         db  0x86 ; '.'
000000000000765a         db  0x03 ; '.'
000000000000765b         db  0x44 ; 'D'
000000000000765c         db  0x0e ; '.'
000000000000765d         db  0x20 ; ' '
000000000000765e         db  0x83 ; '.'
000000000000765f         db  0x04 ; '.'
0000000000007660         db  0x6b ; 'k'
0000000000007661         db  0x0e ; '.'
0000000000007662         db  0x18 ; '.'
0000000000007663         db  0x41 ; 'A'
0000000000007664         db  0x0e ; '.'
0000000000007665         db  0x10 ; '.'
0000000000007666         db  0x42 ; 'B'
0000000000007667         db  0x0e ; '.'
0000000000007668         db  0x08 ; '.'
0000000000007669         db  0x00 ; '.'
000000000000766a         db  0x00 ; '.'
000000000000766b         db  0x00 ; '.'
000000000000766c         db  0x00 ; '.'
000000000000766d         db  0x00 ; '.'
000000000000766e         db  0x00 ; '.'
000000000000766f         db  0x00 ; '.'
0000000000007670         dd         0x00000044                                  ; Length of the record
0000000000007674         dd         0x00000aec                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
0000000000007678         db         0x58, 0xdf, 2 dup (0xff)                    ; begin 0x55d0
000000000000767c         db         0x65, 3 dup (0x00)                          ; length 0x65 (end at 0x5635)
0000000000007680         db         0x00                                        ; Augmentation length (LEB128=0)
0000000000007681         db  0x42 ; 'B'
0000000000007682         db  0x0e ; '.'
0000000000007683         db  0x10 ; '.'
0000000000007684         db  0x8f ; '.'
0000000000007685         db  0x02 ; '.'
0000000000007686         db  0x42 ; 'B'
0000000000007687         db  0x0e ; '.'
0000000000007688         db  0x18 ; '.'
0000000000007689         db  0x8e ; '.'
000000000000768a         db  0x03 ; '.'
000000000000768b         db  0x45 ; 'E'
000000000000768c         db  0x0e ; '.'
000000000000768d         db  0x20 ; ' '
000000000000768e         db  0x8d ; '.'
000000000000768f         db  0x04 ; '.'
0000000000007690         db  0x42 ; 'B'
0000000000007691         db  0x0e ; '.'
0000000000007692         db  0x28 ; '('
0000000000007693         db  0x8c ; '.'
0000000000007694         db  0x05 ; '.'
0000000000007695         db  0x48 ; 'H'
0000000000007696         db  0x0e ; '.'
0000000000007697         db  0x30 ; '0'
0000000000007698         db  0x86 ; '.'
0000000000007699         db  0x06 ; '.'
000000000000769a         db  0x48 ; 'H'
000000000000769b         db  0x0e ; '.'
000000000000769c         db  0x38 ; '8'
000000000000769d         db  0x83 ; '.'
000000000000769e         db  0x07 ; '.'
000000000000769f         db  0x4d ; 'M'
00000000000076a0         db  0x0e ; '.'
00000000000076a1         db  0x40 ; '@'
00000000000076a2         db  0x72 ; 'r'
00000000000076a3         db  0x0e ; '.'
00000000000076a4         db  0x38 ; '8'
00000000000076a5         db  0x41 ; 'A'
00000000000076a6         db  0x0e ; '.'
00000000000076a7         db  0x30 ; '0'
00000000000076a8         db  0x41 ; 'A'
00000000000076a9         db  0x0e ; '.'
00000000000076aa         db  0x28 ; '('
00000000000076ab         db  0x42 ; 'B'
00000000000076ac         db  0x0e ; '.'
00000000000076ad         db  0x20 ; ' '
00000000000076ae         db  0x42 ; 'B'
00000000000076af         db  0x0e ; '.'
00000000000076b0         db  0x18 ; '.'
00000000000076b1         db  0x42 ; 'B'
00000000000076b2         db  0x0e ; '.'
00000000000076b3         db  0x10 ; '.'
00000000000076b4         db  0x42 ; 'B'
00000000000076b5         db  0x0e ; '.'
00000000000076b6         db  0x08 ; '.'
00000000000076b7         db  0x00 ; '.'
00000000000076b8         dd         0x00000014                                  ; Length of the record
00000000000076bc         dd         0x00000b34                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
00000000000076c0         db         0x80, 0xdf, 2 dup (0xff)                    ; begin 0x5640
00000000000076c4         db         0x02, 3 dup (0x00)                          ; length 0x2 (end at 0x5642)
00000000000076c8         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000076c9         align      16
00000000000076d0         dd         0x00000010                                  ; Length of the record
00000000000076d4         dd         0x00000b4c                                  ; FDE: parent CIE at 0x6b88 (FDE encoding = 0x1B)
00000000000076d8         db         0x78, 0xdf, 2 dup (0xff)                    ; begin 0x5650
00000000000076dc         db         0x0e, 3 dup (0x00)                          ; length 0xe (end at 0x565e)
00000000000076e0         db         0x00                                        ; Augmentation length (LEB128=0)
00000000000076e1         align      8


        ; Segment Segment 3
        ; Range: [0x207b50; 0x208238[ (1768 bytes)
        ; File offset : [31568; 32896[ (1328 bytes)
        ; Permissions: readable / writable
        ; Flags: 0x6



        ; Section .init_array
        ; Range: [0x207b50; 0x207b58[ (8 bytes)
        ; File offset : [31568; 31576[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_FINI_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __frame_dummy_init_array_entry:
0000000000207b50         dq         frame_dummy                                 ; DATA XREF=__libc_csu_init+11


        ; Section .fini_array
        ; Range: [0x207b58; 0x207b60[ (8 bytes)
        ; File offset : [31576; 31584[ (8 bytes)
        ; Flags: 0x3
        ;   SHT_PREINIT_ARRAY
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     __do_global_dtors_aux_fini_array_entry:
0000000000207b58         dq         __do_global_dtors_aux                       ; DATA XREF=__libc_csu_init+19


        ; Section .data.rel.ro
        ; Range: [0x207b60; 0x207c58[ (248 bytes)
        ; File offset : [31584; 31832[ (248 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     longopts:
0000000000207b60         db  0xe9 ; '.'                                         ; DATA XREF=main+8
0000000000207b61         db  0x57 ; 'W'
0000000000207b62         db  0x00 ; '.'
0000000000207b63         db  0x00 ; '.'
0000000000207b64         db  0x00 ; '.'
0000000000207b65         db  0x00 ; '.'
0000000000207b66         db  0x00 ; '.'
0000000000207b67         db  0x00 ; '.'
0000000000207b68         db  0x02 ; '.'
0000000000207b69         db  0x00 ; '.'
0000000000207b6a         db  0x00 ; '.'
0000000000207b6b         db  0x00 ; '.'
0000000000207b6c         db  0x00 ; '.'
0000000000207b6d         db  0x00 ; '.'
0000000000207b6e         db  0x00 ; '.'
0000000000207b6f         db  0x00 ; '.'
0000000000207b70         db  0x00 ; '.'
0000000000207b71         db  0x00 ; '.'
0000000000207b72         db  0x00 ; '.'
0000000000207b73         db  0x00 ; '.'
0000000000207b74         db  0x00 ; '.'
0000000000207b75         db  0x00 ; '.'
0000000000207b76         db  0x00 ; '.'
0000000000207b77         db  0x00 ; '.'
0000000000207b78         db  0x5a ; 'Z'
0000000000207b79         db  0x00 ; '.'
0000000000207b7a         db  0x00 ; '.'
0000000000207b7b         db  0x00 ; '.'
0000000000207b7c         db  0x00 ; '.'
0000000000207b7d         db  0x00 ; '.'
0000000000207b7e         db  0x00 ; '.'
0000000000207b7f         db  0x00 ; '.'
0000000000207b80         db  0x61 ; 'a'
0000000000207b81         db  0x57 ; 'W'
0000000000207b82         db  0x00 ; '.'
0000000000207b83         db  0x00 ; '.'
0000000000207b84         db  0x00 ; '.'
0000000000207b85         db  0x00 ; '.'
0000000000207b86         db  0x00 ; '.'
0000000000207b87         db  0x00 ; '.'
0000000000207b88         db  0x01 ; '.'
0000000000207b89         db  0x00 ; '.'
0000000000207b8a         db  0x00 ; '.'
0000000000207b8b         db  0x00 ; '.'
0000000000207b8c         db  0x00 ; '.'
0000000000207b8d         db  0x00 ; '.'
0000000000207b8e         db  0x00 ; '.'
0000000000207b8f         db  0x00 ; '.'
0000000000207b90         db  0x00 ; '.'
0000000000207b91         db  0x00 ; '.'
0000000000207b92         db  0x00 ; '.'
0000000000207b93         db  0x00 ; '.'
0000000000207b94         db  0x00 ; '.'
0000000000207b95         db  0x00 ; '.'
0000000000207b96         db  0x00 ; '.'
0000000000207b97         db  0x00 ; '.'
0000000000207b98         db  0x6d ; 'm'
0000000000207b99         db  0x00 ; '.'
0000000000207b9a         db  0x00 ; '.'
0000000000207b9b         db  0x00 ; '.'
0000000000207b9c         db  0x00 ; '.'
0000000000207b9d         db  0x00 ; '.'
0000000000207b9e         db  0x00 ; '.'
0000000000207b9f         db  0x00 ; '.'
0000000000207ba0         db  0xf1 ; '.'
0000000000207ba1         db  0x57 ; 'W'
0000000000207ba2         db  0x00 ; '.'
0000000000207ba3         db  0x00 ; '.'
0000000000207ba4         db  0x00 ; '.'
0000000000207ba5         db  0x00 ; '.'
0000000000207ba6         db  0x00 ; '.'
0000000000207ba7         db  0x00 ; '.'
0000000000207ba8         db  0x00 ; '.'
0000000000207ba9         db  0x00 ; '.'
0000000000207baa         db  0x00 ; '.'
0000000000207bab         db  0x00 ; '.'
0000000000207bac         db  0x00 ; '.'
0000000000207bad         db  0x00 ; '.'
0000000000207bae         db  0x00 ; '.'
0000000000207baf         db  0x00 ; '.'
0000000000207bb0         db  0x00 ; '.'
0000000000207bb1         db  0x00 ; '.'
0000000000207bb2         db  0x00 ; '.'
0000000000207bb3         db  0x00 ; '.'
0000000000207bb4         db  0x00 ; '.'
0000000000207bb5         db  0x00 ; '.'
0000000000207bb6         db  0x00 ; '.'
0000000000207bb7         db  0x00 ; '.'
0000000000207bb8         db  0x7e ; '~'
0000000000207bb9         db  0xff ; '.'
0000000000207bba         db  0xff ; '.'
0000000000207bbb         db  0xff ; '.'
0000000000207bbc         db  0x00 ; '.'
0000000000207bbd         db  0x00 ; '.'
0000000000207bbe         db  0x00 ; '.'
0000000000207bbf         db  0x00 ; '.'
0000000000207bc0         db  0xf6 ; '.'
0000000000207bc1         db  0x57 ; 'W'
0000000000207bc2         db  0x00 ; '.'
0000000000207bc3         db  0x00 ; '.'
0000000000207bc4         db  0x00 ; '.'
0000000000207bc5         db  0x00 ; '.'
0000000000207bc6         db  0x00 ; '.'
0000000000207bc7         db  0x00 ; '.'
0000000000207bc8         db  0x00 ; '.'
0000000000207bc9         db  0x00 ; '.'
0000000000207bca         db  0x00 ; '.'
0000000000207bcb         db  0x00 ; '.'
0000000000207bcc         db  0x00 ; '.'
0000000000207bcd         db  0x00 ; '.'
0000000000207bce         db  0x00 ; '.'
0000000000207bcf         db  0x00 ; '.'
0000000000207bd0         db  0x00 ; '.'
0000000000207bd1         db  0x00 ; '.'
0000000000207bd2         db  0x00 ; '.'
0000000000207bd3         db  0x00 ; '.'
0000000000207bd4         db  0x00 ; '.'
0000000000207bd5         db  0x00 ; '.'
0000000000207bd6         db  0x00 ; '.'
0000000000207bd7         db  0x00 ; '.'
0000000000207bd8         db  0x7d ; '}'
0000000000207bd9         db  0xff ; '.'
0000000000207bda         db  0xff ; '.'
0000000000207bdb         db  0xff ; '.'
0000000000207bdc         db  0x00 ; '.'
0000000000207bdd         db  0x00 ; '.'
0000000000207bde         db  0x00 ; '.'
0000000000207bdf         db  0x00 ; '.'
0000000000207be0         db  0x00 ; '.'
0000000000207be1         db  0x00 ; '.'
0000000000207be2         db  0x00 ; '.'
0000000000207be3         db  0x00 ; '.'
0000000000207be4         db  0x00 ; '.'
0000000000207be5         db  0x00 ; '.'
0000000000207be6         db  0x00 ; '.'
0000000000207be7         db  0x00 ; '.'
0000000000207be8         db  0x00 ; '.'
0000000000207be9         db  0x00 ; '.'
0000000000207bea         db  0x00 ; '.'
0000000000207beb         db  0x00 ; '.'
0000000000207bec         db  0x00 ; '.'
0000000000207bed         db  0x00 ; '.'
0000000000207bee         db  0x00 ; '.'
0000000000207bef         db  0x00 ; '.'
0000000000207bf0         db  0x00 ; '.'
0000000000207bf1         db  0x00 ; '.'
0000000000207bf2         db  0x00 ; '.'
0000000000207bf3         db  0x00 ; '.'
0000000000207bf4         db  0x00 ; '.'
0000000000207bf5         db  0x00 ; '.'
0000000000207bf6         db  0x00 ; '.'
0000000000207bf7         db  0x00 ; '.'
0000000000207bf8         db  0x00 ; '.'
0000000000207bf9         db  0x00 ; '.'
0000000000207bfa         db  0x00 ; '.'
0000000000207bfb         db  0x00 ; '.'
0000000000207bfc         db  0x00 ; '.'
0000000000207bfd         db  0x00 ; '.'
0000000000207bfe         db  0x00 ; '.'
0000000000207bff         db  0x00 ; '.'
                     quoting_style_args:
0000000000207c00         db  0x81 ; '.'
0000000000207c01         db  0x5f ; '_'
0000000000207c02         db  0x00 ; '.'
0000000000207c03         db  0x00 ; '.'
0000000000207c04         db  0x00 ; '.'
0000000000207c05         db  0x00 ; '.'
0000000000207c06         db  0x00 ; '.'
0000000000207c07         db  0x00 ; '.'
0000000000207c08         db  0x89 ; '.'
0000000000207c09         db  0x5f ; '_'
0000000000207c0a         db  0x00 ; '.'
0000000000207c0b         db  0x00 ; '.'
0000000000207c0c         db  0x00 ; '.'
0000000000207c0d         db  0x00 ; '.'
0000000000207c0e         db  0x00 ; '.'
0000000000207c0f         db  0x00 ; '.'
0000000000207c10         db  0x8f ; '.'
0000000000207c11         db  0x5f ; '_'
0000000000207c12         db  0x00 ; '.'
0000000000207c13         db  0x00 ; '.'
0000000000207c14         db  0x00 ; '.'
0000000000207c15         db  0x00 ; '.'
0000000000207c16         db  0x00 ; '.'
0000000000207c17         db  0x00 ; '.'
0000000000207c18         db  0x9c ; '.'
0000000000207c19         db  0x5f ; '_'
0000000000207c1a         db  0x00 ; '.'
0000000000207c1b         db  0x00 ; '.'
0000000000207c1c         db  0x00 ; '.'
0000000000207c1d         db  0x00 ; '.'
0000000000207c1e         db  0x00 ; '.'
0000000000207c1f         db  0x00 ; '.'
0000000000207c20         db  0xa9 ; '.'
0000000000207c21         db  0x5f ; '_'
0000000000207c22         db  0x00 ; '.'
0000000000207c23         db  0x00 ; '.'
0000000000207c24         db  0x00 ; '.'
0000000000207c25         db  0x00 ; '.'
0000000000207c26         db  0x00 ; '.'
0000000000207c27         db  0x00 ; '.'
0000000000207c28         db  0xbd ; '.'
0000000000207c29         db  0x5f ; '_'
0000000000207c2a         db  0x00 ; '.'
0000000000207c2b         db  0x00 ; '.'
0000000000207c2c         db  0x00 ; '.'
0000000000207c2d         db  0x00 ; '.'
0000000000207c2e         db  0x00 ; '.'
0000000000207c2f         db  0x00 ; '.'
0000000000207c30         db  0xbf ; '.'
0000000000207c31         db  0x5f ; '_'
0000000000207c32         db  0x00 ; '.'
0000000000207c33         db  0x00 ; '.'
0000000000207c34         db  0x00 ; '.'
0000000000207c35         db  0x00 ; '.'
0000000000207c36         db  0x00 ; '.'
0000000000207c37         db  0x00 ; '.'
0000000000207c38         db  0xa2 ; '.'
0000000000207c39         db  0x5f ; '_'
0000000000207c3a         db  0x00 ; '.'
0000000000207c3b         db  0x00 ; '.'
0000000000207c3c         db  0x00 ; '.'
0000000000207c3d         db  0x00 ; '.'
0000000000207c3e         db  0x00 ; '.'
0000000000207c3f         db  0x00 ; '.'
0000000000207c40         db  0x3e ; '>'
0000000000207c41         db  0x57 ; 'W'
0000000000207c42         db  0x00 ; '.'
0000000000207c43         db  0x00 ; '.'
0000000000207c44         db  0x00 ; '.'
0000000000207c45         db  0x00 ; '.'
0000000000207c46         db  0x00 ; '.'
0000000000207c47         db  0x00 ; '.'
0000000000207c48         db  0xc7 ; '.'
0000000000207c49         db  0x5f ; '_'
0000000000207c4a         db  0x00 ; '.'
0000000000207c4b         db  0x00 ; '.'
0000000000207c4c         db  0x00 ; '.'
0000000000207c4d         db  0x00 ; '.'
0000000000207c4e         db  0x00 ; '.'
0000000000207c4f         db  0x00 ; '.'
0000000000207c50         db  0x00 ; '.'
0000000000207c51         db  0x00 ; '.'
0000000000207c52         db  0x00 ; '.'
0000000000207c53         db  0x00 ; '.'
0000000000207c54         db  0x00 ; '.'
0000000000207c55         db  0x00 ; '.'
0000000000207c56         db  0x00 ; '.'
0000000000207c57         db  0x00 ; '.'


        ; Section .dynamic
        ; Range: [0x207c58; 0x207e48[ (496 bytes)
        ; File offset : [31832; 32328[ (496 bytes)
        ; Flags: 0x3
        ;   SHT_DYNAMIC
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _DYNAMIC:
0000000000207c58         db  0x01 ; '.'
0000000000207c59         db  0x00 ; '.'
0000000000207c5a         db  0x00 ; '.'
0000000000207c5b         db  0x00 ; '.'
0000000000207c5c         db  0x00 ; '.'
0000000000207c5d         db  0x00 ; '.'
0000000000207c5e         db  0x00 ; '.'
0000000000207c5f         db  0x00 ; '.'
0000000000207c60         db  0x01 ; '.'
0000000000207c61         db  0x00 ; '.'
0000000000207c62         db  0x00 ; '.'
0000000000207c63         db  0x00 ; '.'
0000000000207c64         db  0x00 ; '.'
0000000000207c65         db  0x00 ; '.'
0000000000207c66         db  0x00 ; '.'
0000000000207c67         db  0x00 ; '.'
0000000000207c68         db  0x0c ; '.'
0000000000207c69         db  0x00 ; '.'
0000000000207c6a         db  0x00 ; '.'
0000000000207c6b         db  0x00 ; '.'
0000000000207c6c         db  0x00 ; '.'
0000000000207c6d         db  0x00 ; '.'
0000000000207c6e         db  0x00 ; '.'
0000000000207c6f         db  0x00 ; '.'
0000000000207c70         db  0x90 ; '.'
0000000000207c71         db  0x13 ; '.'
0000000000207c72         db  0x00 ; '.'
0000000000207c73         db  0x00 ; '.'
0000000000207c74         db  0x00 ; '.'
0000000000207c75         db  0x00 ; '.'
0000000000207c76         db  0x00 ; '.'
0000000000207c77         db  0x00 ; '.'
0000000000207c78         db  0x0d ; '.'
0000000000207c79         db  0x00 ; '.'
0000000000207c7a         db  0x00 ; '.'
0000000000207c7b         db  0x00 ; '.'
0000000000207c7c         db  0x00 ; '.'
0000000000207c7d         db  0x00 ; '.'
0000000000207c7e         db  0x00 ; '.'
0000000000207c7f         db  0x00 ; '.'
0000000000207c80         db  0x60 ; '`'
0000000000207c81         db  0x56 ; 'V'
0000000000207c82         db  0x00 ; '.'
0000000000207c83         db  0x00 ; '.'
0000000000207c84         db  0x00 ; '.'
0000000000207c85         db  0x00 ; '.'
0000000000207c86         db  0x00 ; '.'
0000000000207c87         db  0x00 ; '.'
0000000000207c88         db  0x19 ; '.'
0000000000207c89         db  0x00 ; '.'
0000000000207c8a         db  0x00 ; '.'
0000000000207c8b         db  0x00 ; '.'
0000000000207c8c         db  0x00 ; '.'
0000000000207c8d         db  0x00 ; '.'
0000000000207c8e         db  0x00 ; '.'
0000000000207c8f         db  0x00 ; '.'
0000000000207c90         db  0x50 ; 'P'
0000000000207c91         db  0x7b ; '{'
0000000000207c92         db  0x20 ; ' '
0000000000207c93         db  0x00 ; '.'
0000000000207c94         db  0x00 ; '.'
0000000000207c95         db  0x00 ; '.'
0000000000207c96         db  0x00 ; '.'
0000000000207c97         db  0x00 ; '.'
0000000000207c98         db  0x1b ; '.'
0000000000207c99         db  0x00 ; '.'
0000000000207c9a         db  0x00 ; '.'
0000000000207c9b         db  0x00 ; '.'
0000000000207c9c         db  0x00 ; '.'
0000000000207c9d         db  0x00 ; '.'
0000000000207c9e         db  0x00 ; '.'
0000000000207c9f         db  0x00 ; '.'
0000000000207ca0         db  0x08 ; '.'
0000000000207ca1         db  0x00 ; '.'
0000000000207ca2         db  0x00 ; '.'
0000000000207ca3         db  0x00 ; '.'
0000000000207ca4         db  0x00 ; '.'
0000000000207ca5         db  0x00 ; '.'
0000000000207ca6         db  0x00 ; '.'
0000000000207ca7         db  0x00 ; '.'
0000000000207ca8         db  0x1a ; '.'
0000000000207ca9         db  0x00 ; '.'
0000000000207caa         db  0x00 ; '.'
0000000000207cab         db  0x00 ; '.'
0000000000207cac         db  0x00 ; '.'
0000000000207cad         db  0x00 ; '.'
0000000000207cae         db  0x00 ; '.'
0000000000207caf         db  0x00 ; '.'
0000000000207cb0         db  0x58 ; 'X'
0000000000207cb1         db  0x7b ; '{'
0000000000207cb2         db  0x20 ; ' '
0000000000207cb3         db  0x00 ; '.'
0000000000207cb4         db  0x00 ; '.'
0000000000207cb5         db  0x00 ; '.'
0000000000207cb6         db  0x00 ; '.'
0000000000207cb7         db  0x00 ; '.'
0000000000207cb8         db  0x1c ; '.'
0000000000207cb9         db  0x00 ; '.'
0000000000207cba         db  0x00 ; '.'
0000000000207cbb         db  0x00 ; '.'
0000000000207cbc         db  0x00 ; '.'
0000000000207cbd         db  0x00 ; '.'
0000000000207cbe         db  0x00 ; '.'
0000000000207cbf         db  0x00 ; '.'
0000000000207cc0         db  0x08 ; '.'
0000000000207cc1         db  0x00 ; '.'
0000000000207cc2         db  0x00 ; '.'
0000000000207cc3         db  0x00 ; '.'
0000000000207cc4         db  0x00 ; '.'
0000000000207cc5         db  0x00 ; '.'
0000000000207cc6         db  0x00 ; '.'
0000000000207cc7         db  0x00 ; '.'
0000000000207cc8         db  0xf5 ; '.'
0000000000207cc9         db  0xfe ; '.'
0000000000207cca         db  0xff ; '.'
0000000000207ccb         db  0x6f ; 'o'
0000000000207ccc         db  0x00 ; '.'
0000000000207ccd         db  0x00 ; '.'
0000000000207cce         db  0x00 ; '.'
0000000000207ccf         db  0x00 ; '.'
0000000000207cd0         db  0x98 ; '.'
0000000000207cd1         db  0x02 ; '.'
0000000000207cd2         db  0x00 ; '.'
0000000000207cd3         db  0x00 ; '.'
0000000000207cd4         db  0x00 ; '.'
0000000000207cd5         db  0x00 ; '.'
0000000000207cd6         db  0x00 ; '.'
0000000000207cd7         db  0x00 ; '.'
0000000000207cd8         db  0x05 ; '.'
0000000000207cd9         db  0x00 ; '.'
0000000000207cda         db  0x00 ; '.'
0000000000207cdb         db  0x00 ; '.'
0000000000207cdc         db  0x00 ; '.'
0000000000207cdd         db  0x00 ; '.'
0000000000207cde         db  0x00 ; '.'
0000000000207cdf         db  0x00 ; '.'
0000000000207ce0         db  0x98 ; '.'
0000000000207ce1         db  0x08 ; '.'
0000000000207ce2         db  0x00 ; '.'
0000000000207ce3         db  0x00 ; '.'
0000000000207ce4         db  0x00 ; '.'
0000000000207ce5         db  0x00 ; '.'
0000000000207ce6         db  0x00 ; '.'
0000000000207ce7         db  0x00 ; '.'
0000000000207ce8         db  0x06 ; '.'
0000000000207ce9         db  0x00 ; '.'
0000000000207cea         db  0x00 ; '.'
0000000000207ceb         db  0x00 ; '.'
0000000000207cec         db  0x00 ; '.'
0000000000207ced         db  0x00 ; '.'
0000000000207cee         db  0x00 ; '.'
0000000000207cef         db  0x00 ; '.'
0000000000207cf0         db  0xe0 ; '.'
0000000000207cf1         db  0x02 ; '.'
0000000000207cf2         db  0x00 ; '.'
0000000000207cf3         db  0x00 ; '.'
0000000000207cf4         db  0x00 ; '.'
0000000000207cf5         db  0x00 ; '.'
0000000000207cf6         db  0x00 ; '.'
0000000000207cf7         db  0x00 ; '.'
0000000000207cf8         db  0x0a ; '.'
0000000000207cf9         db  0x00 ; '.'
0000000000207cfa         db  0x00 ; '.'
0000000000207cfb         db  0x00 ; '.'
0000000000207cfc         db  0x00 ; '.'
0000000000207cfd         db  0x00 ; '.'
0000000000207cfe         db  0x00 ; '.'
0000000000207cff         db  0x00 ; '.'
0000000000207d00         db  0xcb ; '.'
0000000000207d01         db  0x02 ; '.'
0000000000207d02         db  0x00 ; '.'
0000000000207d03         db  0x00 ; '.'
0000000000207d04         db  0x00 ; '.'
0000000000207d05         db  0x00 ; '.'
0000000000207d06         db  0x00 ; '.'
0000000000207d07         db  0x00 ; '.'
0000000000207d08         db  0x0b ; '.'
0000000000207d09         db  0x00 ; '.'
0000000000207d0a         db  0x00 ; '.'
0000000000207d0b         db  0x00 ; '.'
0000000000207d0c         db  0x00 ; '.'
0000000000207d0d         db  0x00 ; '.'
0000000000207d0e         db  0x00 ; '.'
0000000000207d0f         db  0x00 ; '.'
0000000000207d10         db  0x18 ; '.'
0000000000207d11         db  0x00 ; '.'
0000000000207d12         db  0x00 ; '.'
0000000000207d13         db  0x00 ; '.'
0000000000207d14         db  0x00 ; '.'
0000000000207d15         db  0x00 ; '.'
0000000000207d16         db  0x00 ; '.'
0000000000207d17         db  0x00 ; '.'
0000000000207d18         db  0x15 ; '.'
0000000000207d19         db  0x00 ; '.'
0000000000207d1a         db  0x00 ; '.'
0000000000207d1b         db  0x00 ; '.'
0000000000207d1c         db  0x00 ; '.'
0000000000207d1d         db  0x00 ; '.'
0000000000207d1e         db  0x00 ; '.'
0000000000207d1f         db  0x00 ; '.'
0000000000207d20         db  0x00 ; '.'
0000000000207d21         db  0x00 ; '.'
0000000000207d22         db  0x00 ; '.'
0000000000207d23         db  0x00 ; '.'
0000000000207d24         db  0x00 ; '.'
0000000000207d25         db  0x00 ; '.'
0000000000207d26         db  0x00 ; '.'
0000000000207d27         db  0x00 ; '.'
0000000000207d28         db  0x03 ; '.'
0000000000207d29         db  0x00 ; '.'
0000000000207d2a         db  0x00 ; '.'
0000000000207d2b         db  0x00 ; '.'
0000000000207d2c         db  0x00 ; '.'
0000000000207d2d         db  0x00 ; '.'
0000000000207d2e         db  0x00 ; '.'
0000000000207d2f         db  0x00 ; '.'
0000000000207d30         db  0x48 ; 'H'
0000000000207d31         db  0x7e ; '~'
0000000000207d32         db  0x20 ; ' '
0000000000207d33         db  0x00 ; '.'
0000000000207d34         db  0x00 ; '.'
0000000000207d35         db  0x00 ; '.'
0000000000207d36         db  0x00 ; '.'
0000000000207d37         db  0x00 ; '.'
0000000000207d38         db  0x02 ; '.'
0000000000207d39         db  0x00 ; '.'
0000000000207d3a         db  0x00 ; '.'
0000000000207d3b         db  0x00 ; '.'
0000000000207d3c         db  0x00 ; '.'
0000000000207d3d         db  0x00 ; '.'
0000000000207d3e         db  0x00 ; '.'
0000000000207d3f         db  0x00 ; '.'
0000000000207d40         db  0x68 ; 'h'
0000000000207d41         db  0x04 ; '.'
0000000000207d42         db  0x00 ; '.'
0000000000207d43         db  0x00 ; '.'
0000000000207d44         db  0x00 ; '.'
0000000000207d45         db  0x00 ; '.'
0000000000207d46         db  0x00 ; '.'
0000000000207d47         db  0x00 ; '.'
0000000000207d48         db  0x14 ; '.'
0000000000207d49         db  0x00 ; '.'
0000000000207d4a         db  0x00 ; '.'
0000000000207d4b         db  0x00 ; '.'
0000000000207d4c         db  0x00 ; '.'
0000000000207d4d         db  0x00 ; '.'
0000000000207d4e         db  0x00 ; '.'
0000000000207d4f         db  0x00 ; '.'
0000000000207d50         db  0x07 ; '.'
0000000000207d51         db  0x00 ; '.'
0000000000207d52         db  0x00 ; '.'
0000000000207d53         db  0x00 ; '.'
0000000000207d54         db  0x00 ; '.'
0000000000207d55         db  0x00 ; '.'
0000000000207d56         db  0x00 ; '.'
0000000000207d57         db  0x00 ; '.'
0000000000207d58         db  0x17 ; '.'
0000000000207d59         db  0x00 ; '.'
0000000000207d5a         db  0x00 ; '.'
0000000000207d5b         db  0x00 ; '.'
0000000000207d5c         db  0x00 ; '.'
0000000000207d5d         db  0x00 ; '.'
0000000000207d5e         db  0x00 ; '.'
0000000000207d5f         db  0x00 ; '.'
0000000000207d60         db  0x28 ; '('
0000000000207d61         db  0x0f ; '.'
0000000000207d62         db  0x00 ; '.'
0000000000207d63         db  0x00 ; '.'
0000000000207d64         db  0x00 ; '.'
0000000000207d65         db  0x00 ; '.'
0000000000207d66         db  0x00 ; '.'
0000000000207d67         db  0x00 ; '.'
0000000000207d68         db  0x07 ; '.'
0000000000207d69         db  0x00 ; '.'
0000000000207d6a         db  0x00 ; '.'
0000000000207d6b         db  0x00 ; '.'
0000000000207d6c         db  0x00 ; '.'
0000000000207d6d         db  0x00 ; '.'
0000000000207d6e         db  0x00 ; '.'
0000000000207d6f         db  0x00 ; '.'
0000000000207d70         db  0x40 ; '@'
0000000000207d71         db  0x0c ; '.'
0000000000207d72         db  0x00 ; '.'
0000000000207d73         db  0x00 ; '.'
0000000000207d74         db  0x00 ; '.'
0000000000207d75         db  0x00 ; '.'
0000000000207d76         db  0x00 ; '.'
0000000000207d77         db  0x00 ; '.'
0000000000207d78         db  0x08 ; '.'
0000000000207d79         db  0x00 ; '.'
0000000000207d7a         db  0x00 ; '.'
0000000000207d7b         db  0x00 ; '.'
0000000000207d7c         db  0x00 ; '.'
0000000000207d7d         db  0x00 ; '.'
0000000000207d7e         db  0x00 ; '.'
0000000000207d7f         db  0x00 ; '.'
0000000000207d80         db  0xe8 ; '.'
0000000000207d81         db  0x02 ; '.'
0000000000207d82         db  0x00 ; '.'
0000000000207d83         db  0x00 ; '.'
0000000000207d84         db  0x00 ; '.'
0000000000207d85         db  0x00 ; '.'
0000000000207d86         db  0x00 ; '.'
0000000000207d87         db  0x00 ; '.'
0000000000207d88         db  0x09 ; '.'
0000000000207d89         db  0x00 ; '.'
0000000000207d8a         db  0x00 ; '.'
0000000000207d8b         db  0x00 ; '.'
0000000000207d8c         db  0x00 ; '.'
0000000000207d8d         db  0x00 ; '.'
0000000000207d8e         db  0x00 ; '.'
0000000000207d8f         db  0x00 ; '.'
0000000000207d90         db  0x18 ; '.'
0000000000207d91         db  0x00 ; '.'
0000000000207d92         db  0x00 ; '.'
0000000000207d93         db  0x00 ; '.'
0000000000207d94         db  0x00 ; '.'
0000000000207d95         db  0x00 ; '.'
0000000000207d96         db  0x00 ; '.'
0000000000207d97         db  0x00 ; '.'
0000000000207d98         db  0x1e ; '.'
0000000000207d99         db  0x00 ; '.'
0000000000207d9a         db  0x00 ; '.'
0000000000207d9b         db  0x00 ; '.'
0000000000207d9c         db  0x00 ; '.'
0000000000207d9d         db  0x00 ; '.'
0000000000207d9e         db  0x00 ; '.'
0000000000207d9f         db  0x00 ; '.'
0000000000207da0         db  0x08 ; '.'
0000000000207da1         db  0x00 ; '.'
0000000000207da2         db  0x00 ; '.'
0000000000207da3         db  0x00 ; '.'
0000000000207da4         db  0x00 ; '.'
0000000000207da5         db  0x00 ; '.'
0000000000207da6         db  0x00 ; '.'
0000000000207da7         db  0x00 ; '.'
0000000000207da8         db  0xfb ; '.'
0000000000207da9         db  0xff ; '.'
0000000000207daa         db  0xff ; '.'
0000000000207dab         db  0x6f ; 'o'
0000000000207dac         db  0x00 ; '.'
0000000000207dad         db  0x00 ; '.'
0000000000207dae         db  0x00 ; '.'
0000000000207daf         db  0x00 ; '.'
0000000000207db0         db  0x01 ; '.'
0000000000207db1         db  0x00 ; '.'
0000000000207db2         db  0x00 ; '.'
0000000000207db3         db  0x08 ; '.'
0000000000207db4         db  0x00 ; '.'
0000000000207db5         db  0x00 ; '.'
0000000000207db6         db  0x00 ; '.'
0000000000207db7         db  0x00 ; '.'
0000000000207db8         db  0xfe ; '.'
0000000000207db9         db  0xff ; '.'
0000000000207dba         db  0xff ; '.'
0000000000207dbb         db  0x6f ; 'o'
0000000000207dbc         db  0x00 ; '.'
0000000000207dbd         db  0x00 ; '.'
0000000000207dbe         db  0x00 ; '.'
0000000000207dbf         db  0x00 ; '.'
0000000000207dc0         db  0xe0 ; '.'
0000000000207dc1         db  0x0b ; '.'
0000000000207dc2         db  0x00 ; '.'
0000000000207dc3         db  0x00 ; '.'
0000000000207dc4         db  0x00 ; '.'
0000000000207dc5         db  0x00 ; '.'
0000000000207dc6         db  0x00 ; '.'
0000000000207dc7         db  0x00 ; '.'
0000000000207dc8         db  0xff ; '.'
0000000000207dc9         db  0xff ; '.'
0000000000207dca         db  0xff ; '.'
0000000000207dcb         db  0x6f ; 'o'
0000000000207dcc         db  0x00 ; '.'
0000000000207dcd         db  0x00 ; '.'
0000000000207dce         db  0x00 ; '.'
0000000000207dcf         db  0x00 ; '.'
0000000000207dd0         db  0x01 ; '.'
0000000000207dd1         db  0x00 ; '.'
0000000000207dd2         db  0x00 ; '.'
0000000000207dd3         db  0x00 ; '.'
0000000000207dd4         db  0x00 ; '.'
0000000000207dd5         db  0x00 ; '.'
0000000000207dd6         db  0x00 ; '.'
0000000000207dd7         db  0x00 ; '.'
0000000000207dd8         db  0xf0 ; '.'
0000000000207dd9         db  0xff ; '.'
0000000000207dda         db  0xff ; '.'
0000000000207ddb         db  0x6f ; 'o'
0000000000207ddc         db  0x00 ; '.'
0000000000207ddd         db  0x00 ; '.'
0000000000207dde         db  0x00 ; '.'
0000000000207ddf         db  0x00 ; '.'
0000000000207de0         db  0x64 ; 'd'
0000000000207de1         db  0x0b ; '.'
0000000000207de2         db  0x00 ; '.'
0000000000207de3         db  0x00 ; '.'
0000000000207de4         db  0x00 ; '.'
0000000000207de5         db  0x00 ; '.'
0000000000207de6         db  0x00 ; '.'
0000000000207de7         db  0x00 ; '.'
0000000000207de8         db  0xf9 ; '.'
0000000000207de9         db  0xff ; '.'
0000000000207dea         db  0xff ; '.'
0000000000207deb         db  0x6f ; 'o'
0000000000207dec         db  0x00 ; '.'
0000000000207ded         db  0x00 ; '.'
0000000000207dee         db  0x00 ; '.'
0000000000207def         db  0x00 ; '.'
0000000000207df0         db  0x14 ; '.'
0000000000207df1         db  0x00 ; '.'
0000000000207df2         db  0x00 ; '.'
0000000000207df3         db  0x00 ; '.'
0000000000207df4         db  0x00 ; '.'
0000000000207df5         db  0x00 ; '.'
0000000000207df6         db  0x00 ; '.'
0000000000207df7         db  0x00 ; '.'
0000000000207df8         db  0x00 ; '.'
0000000000207df9         db  0x00 ; '.'
0000000000207dfa         db  0x00 ; '.'
0000000000207dfb         db  0x00 ; '.'
0000000000207dfc         db  0x00 ; '.'
0000000000207dfd         db  0x00 ; '.'
0000000000207dfe         db  0x00 ; '.'
0000000000207dff         db  0x00 ; '.'
0000000000207e00         db  0x00 ; '.'
0000000000207e01         db  0x00 ; '.'
0000000000207e02         db  0x00 ; '.'
0000000000207e03         db  0x00 ; '.'
0000000000207e04         db  0x00 ; '.'
0000000000207e05         db  0x00 ; '.'
0000000000207e06         db  0x00 ; '.'
0000000000207e07         db  0x00 ; '.'
0000000000207e08         db  0x00 ; '.'
0000000000207e09         db  0x00 ; '.'
0000000000207e0a         db  0x00 ; '.'
0000000000207e0b         db  0x00 ; '.'
0000000000207e0c         db  0x00 ; '.'
0000000000207e0d         db  0x00 ; '.'
0000000000207e0e         db  0x00 ; '.'
0000000000207e0f         db  0x00 ; '.'
0000000000207e10         db  0x00 ; '.'
0000000000207e11         db  0x00 ; '.'
0000000000207e12         db  0x00 ; '.'
0000000000207e13         db  0x00 ; '.'
0000000000207e14         db  0x00 ; '.'
0000000000207e15         db  0x00 ; '.'
0000000000207e16         db  0x00 ; '.'
0000000000207e17         db  0x00 ; '.'
0000000000207e18         db  0x00 ; '.'
0000000000207e19         db  0x00 ; '.'
0000000000207e1a         db  0x00 ; '.'
0000000000207e1b         db  0x00 ; '.'
0000000000207e1c         db  0x00 ; '.'
0000000000207e1d         db  0x00 ; '.'
0000000000207e1e         db  0x00 ; '.'
0000000000207e1f         db  0x00 ; '.'
0000000000207e20         db  0x00 ; '.'
0000000000207e21         db  0x00 ; '.'
0000000000207e22         db  0x00 ; '.'
0000000000207e23         db  0x00 ; '.'
0000000000207e24         db  0x00 ; '.'
0000000000207e25         db  0x00 ; '.'
0000000000207e26         db  0x00 ; '.'
0000000000207e27         db  0x00 ; '.'
0000000000207e28         db  0x00 ; '.'
0000000000207e29         db  0x00 ; '.'
0000000000207e2a         db  0x00 ; '.'
0000000000207e2b         db  0x00 ; '.'
0000000000207e2c         db  0x00 ; '.'
0000000000207e2d         db  0x00 ; '.'
0000000000207e2e         db  0x00 ; '.'
0000000000207e2f         db  0x00 ; '.'
0000000000207e30         db  0x00 ; '.'
0000000000207e31         db  0x00 ; '.'
0000000000207e32         db  0x00 ; '.'
0000000000207e33         db  0x00 ; '.'
0000000000207e34         db  0x00 ; '.'
0000000000207e35         db  0x00 ; '.'
0000000000207e36         db  0x00 ; '.'
0000000000207e37         db  0x00 ; '.'
0000000000207e38         db  0x00 ; '.'
0000000000207e39         db  0x00 ; '.'
0000000000207e3a         db  0x00 ; '.'
0000000000207e3b         db  0x00 ; '.'
0000000000207e3c         db  0x00 ; '.'
0000000000207e3d         db  0x00 ; '.'
0000000000207e3e         db  0x00 ; '.'
0000000000207e3f         db  0x00 ; '.'
0000000000207e40         db  0x00 ; '.'
0000000000207e41         db  0x00 ; '.'
0000000000207e42         db  0x00 ; '.'
0000000000207e43         db  0x00 ; '.'
0000000000207e44         db  0x00 ; '.'
0000000000207e45         db  0x00 ; '.'
0000000000207e46         db  0x00 ; '.'
0000000000207e47         db  0x00 ; '.'


        ; Section .got
        ; Range: [0x207e48; 0x208000[ (440 bytes)
        ; File offset : [32328; 32768[ (440 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     _GLOBAL_OFFSET_TABLE_:
0000000000207e48         db  0x58 ; 'X'
0000000000207e49         db  0x7c ; '|'
0000000000207e4a         db  0x20 ; ' '
0000000000207e4b         db  0x00 ; '.'
0000000000207e4c         db  0x00 ; '.'
0000000000207e4d         db  0x00 ; '.'
0000000000207e4e         db  0x00 ; '.'
0000000000207e4f         db  0x00 ; '.'
                     qword_207e50:
0000000000207e50         dq         0x0000000000000000                          ; DATA XREF=0x13b0
0000000000207e58         db  0x00 ; '.'                                         ; DATA XREF=0x13b6
0000000000207e59         db  0x00 ; '.'
0000000000207e5a         db  0x00 ; '.'
0000000000207e5b         db  0x00 ; '.'
0000000000207e5c         db  0x00 ; '.'
0000000000207e5d         db  0x00 ; '.'
0000000000207e5e         db  0x00 ; '.'
0000000000207e5f         db  0x00 ; '.'
                     free@GOT:        // free
0000000000207e60         dq         0x0000000000208240                          ; DATA XREF=j_free
                     abort@GOT:        // abort
0000000000207e68         dq         0x0000000000208248                          ; DATA XREF=j_abort
                     __errno_location@GOT:        // __errno_location
0000000000207e70         dq         0x0000000000208250                          ; DATA XREF=j___errno_location
                     strncmp@GOT:        // strncmp
0000000000207e78         dq         0x0000000000208258                          ; DATA XREF=j_strncmp
                     _exit@GOT:        // _exit
0000000000207e80         dq         0x0000000000208268                          ; DATA XREF=j__exit
                     __fpending@GOT:        // __fpending
0000000000207e88         dq         0x0000000000208270                          ; DATA XREF=j___fpending
                     textdomain@GOT:        // textdomain
0000000000207e90         dq         0x0000000000208278                          ; DATA XREF=j_textdomain
                     fclose@GOT:        // fclose
0000000000207e98         dq         0x0000000000208280                          ; DATA XREF=j_fclose
                     bindtextdomain@GOT:        // bindtextdomain
0000000000207ea0         dq         0x0000000000208288                          ; DATA XREF=j_bindtextdomain
                     dcgettext@GOT:        // dcgettext
0000000000207ea8         dq         0x0000000000208290                          ; DATA XREF=j_dcgettext
                     __ctype_get_mb_cur_max@GOT:        // __ctype_get_mb_cur_max
0000000000207eb0         dq         0x0000000000208298                          ; DATA XREF=j___ctype_get_mb_cur_max
                     strlen@GOT:        // strlen
0000000000207eb8         dq         0x00000000002082a0                          ; DATA XREF=j_strlen
                     __stack_chk_fail@GOT:        // __stack_chk_fail
0000000000207ec0         dq         0x00000000002082a8                          ; DATA XREF=j___stack_chk_fail
                     getopt_long@GOT:        // getopt_long
0000000000207ec8         dq         0x00000000002082b0                          ; DATA XREF=j_getopt_long
                     mbrtowc@GOT:        // mbrtowc
0000000000207ed0         dq         0x00000000002082b8                          ; DATA XREF=j_mbrtowc
                     strchr@GOT:        // strchr
0000000000207ed8         dq         0x00000000002082c0                          ; DATA XREF=j_strchr
                     strrchr@GOT:        // strrchr
0000000000207ee0         dq         0x00000000002082c8                          ; DATA XREF=j_strrchr
                     lseek@GOT:        // lseek
0000000000207ee8         dq         0x00000000002082d0                          ; DATA XREF=j_lseek
                     __assert_fail@GOT:        // __assert_fail
0000000000207ef0         dq         0x00000000002082d8                          ; DATA XREF=j___assert_fail
                     __strtoul_internal@GOT:        // __strtoul_internal
0000000000207ef8         dq         0x00000000002082e0                          ; DATA XREF=j___strtoul_internal
                     memset@GOT:        // memset
0000000000207f00         dq         0x00000000002082e8                          ; DATA XREF=j_memset
                     memcmp@GOT:        // memcmp
0000000000207f08         dq         0x00000000002082f8                          ; DATA XREF=j_memcmp
                     fputs_unlocked@GOT:        // fputs_unlocked
0000000000207f10         dq         0x0000000000208300                          ; DATA XREF=j_fputs_unlocked
                     calloc@GOT:        // calloc
0000000000207f18         dq         0x0000000000208308                          ; DATA XREF=j_calloc
                     mkfifo@GOT:        // mkfifo
0000000000207f20         dq         0x0000000000208310                          ; DATA XREF=j_mkfifo
                     umask@GOT:        // umask
0000000000207f28         dq         0x0000000000208320                          ; DATA XREF=j_umask
                     memcpy@GOT:        // memcpy
0000000000207f30         dq         0x0000000000208328                          ; DATA XREF=j_memcpy
                     __xmknod@GOT:        // __xmknod
0000000000207f38         dq         0x0000000000208330                          ; DATA XREF=j___xmknod
                     fileno@GOT:        // fileno
0000000000207f40         dq         0x0000000000208338                          ; DATA XREF=j_fileno
                     __xstat@GOT:        // __xstat
0000000000207f48         dq         0x0000000000208340                          ; DATA XREF=j___xstat
                     malloc@GOT:        // malloc
0000000000207f50         dq         0x0000000000208348                          ; DATA XREF=j_malloc
                     fflush@GOT:        // fflush
0000000000207f58         dq         0x0000000000208350                          ; DATA XREF=j_fflush
                     nl_langinfo@GOT:        // nl_langinfo
0000000000207f60         dq         0x0000000000208358                          ; DATA XREF=j_nl_langinfo
                     __freading@GOT:        // __freading
0000000000207f68         dq         0x0000000000208360                          ; DATA XREF=j___freading
                     realloc@GOT:        // realloc
0000000000207f70         dq         0x0000000000208368                          ; DATA XREF=j_realloc
                     setlocale@GOT:        // setlocale
0000000000207f78         dq         0x0000000000208370                          ; DATA XREF=j_setlocale
                     __printf_chk@GOT:        // __printf_chk
0000000000207f80         dq         0x0000000000208378                          ; DATA XREF=j___printf_chk
                     chmod@GOT:        // chmod
0000000000207f88         dq         0x0000000000208380                          ; DATA XREF=j_chmod
                     error@GOT:        // error
0000000000207f90         dq         0x0000000000208388                          ; DATA XREF=j_error
                     fseeko@GOT:        // fseeko
0000000000207f98         dq         0x0000000000208390                          ; DATA XREF=j_fseeko
                     __cxa_atexit@GOT:        // __cxa_atexit
0000000000207fa0         dq         0x0000000000208398                          ; DATA XREF=j___cxa_atexit
                     exit@GOT:        // exit
0000000000207fa8         dq         0x00000000002083a0                          ; DATA XREF=j_exit
                     fwrite@GOT:        // fwrite
0000000000207fb0         dq         0x00000000002083a8                          ; DATA XREF=j_fwrite
                     __fprintf_chk@GOT:        // __fprintf_chk
0000000000207fb8         dq         0x00000000002083b0                          ; DATA XREF=j___fprintf_chk
                     mbsinit@GOT:        // mbsinit
0000000000207fc0         dq         0x00000000002083c0                          ; DATA XREF=j_mbsinit
                     iswprint@GOT:        // iswprint
0000000000207fc8         dq         0x00000000002083c8                          ; DATA XREF=j_iswprint
                     __ctype_b_loc@GOT:        // __ctype_b_loc
0000000000207fd0         dq         0x00000000002083d8                          ; DATA XREF=j___ctype_b_loc
                     qword_207fd8:
0000000000207fd8         dq         0x0000000000000000                          ; DATA XREF=deregister_tm_clones+23
0000000000207fe0         db  0x00 ; '.'                                         ; DATA XREF=_start+36
0000000000207fe1         db  0x00 ; '.'
0000000000207fe2         db  0x00 ; '.'
0000000000207fe3         db  0x00 ; '.'
0000000000207fe4         db  0x00 ; '.'
0000000000207fe5         db  0x00 ; '.'
0000000000207fe6         db  0x00 ; '.'
0000000000207fe7         db  0x00 ; '.'
                     qword_207fe8:
0000000000207fe8         dq         0x0000000000000000                          ; DATA XREF=_init+4
                     qword_207ff0:
0000000000207ff0         dq         0x0000000000000000                          ; DATA XREF=register_tm_clones+40
                     qword_207ff8:
0000000000207ff8         dq         0x0000000000000000                          ; DATA XREF=j_qword_207ff8, __do_global_dtors_aux+9


        ; Section .data
        ; Range: [0x208000; 0x208080[ (128 bytes)
        ; File offset : [32768; 32896[ (128 bytes)
        ; Flags: 0x3
        ;   SHT_PROGBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

0000000000208000         align      8
                     __dso_handle:
0000000000208008         dq         0x0000000000208008                          ; DATA XREF=__do_global_dtors_aux+23, atexit, __dso_handle
                     Version:
0000000000208010         dq         0x0000000000005e87                          ; "8.31", DATA XREF=main+210
                     exit_failure:
0000000000208018         dd         0x00000001                                  ; DATA XREF=close_stdout+130, xalloc_die+23
000000000020801c         db  0x00 ; '.'
000000000020801d         db  0x00 ; '.'
000000000020801e         db  0x00 ; '.'
000000000020801f         db  0x00 ; '.'
                     quote_quoting_options:
0000000000208020         db  0x08 ; '.'                                         ; DATA XREF=quote_n_mem, quote_mem, quote_n, quote
0000000000208021         db  0x00 ; '.'
0000000000208022         db  0x00 ; '.'
0000000000208023         db  0x00 ; '.'
0000000000208024         db  0x00 ; '.'
0000000000208025         db  0x00 ; '.'
0000000000208026         db  0x00 ; '.'
0000000000208027         db  0x00 ; '.'
0000000000208028         db  0x00 ; '.'
0000000000208029         db  0x00 ; '.'
000000000020802a         db  0x00 ; '.'
000000000020802b         db  0x00 ; '.'
000000000020802c         db  0x00 ; '.'
000000000020802d         db  0x00 ; '.'
000000000020802e         db  0x00 ; '.'
000000000020802f         db  0x00 ; '.'
0000000000208030         db  0x00 ; '.'
0000000000208031         db  0x00 ; '.'
0000000000208032         db  0x00 ; '.'
0000000000208033         db  0x00 ; '.'
0000000000208034         db  0x00 ; '.'
0000000000208035         db  0x00 ; '.'
0000000000208036         db  0x00 ; '.'
0000000000208037         db  0x00 ; '.'
0000000000208038         db  0x00 ; '.'
0000000000208039         db  0x00 ; '.'
000000000020803a         db  0x00 ; '.'
000000000020803b         db  0x00 ; '.'
000000000020803c         db  0x00 ; '.'
000000000020803d         db  0x00 ; '.'
000000000020803e         db  0x00 ; '.'
000000000020803f         db  0x00 ; '.'
0000000000208040         db  0x00 ; '.'
0000000000208041         db  0x00 ; '.'
0000000000208042         db  0x00 ; '.'
0000000000208043         db  0x00 ; '.'
0000000000208044         db  0x00 ; '.'
0000000000208045         db  0x00 ; '.'
0000000000208046         db  0x00 ; '.'
0000000000208047         db  0x00 ; '.'
0000000000208048         db  0x00 ; '.'
0000000000208049         db  0x00 ; '.'
000000000020804a         db  0x00 ; '.'
000000000020804b         db  0x00 ; '.'
000000000020804c         db  0x00 ; '.'
000000000020804d         db  0x00 ; '.'
000000000020804e         db  0x00 ; '.'
000000000020804f         db  0x00 ; '.'
0000000000208050         db  0x00 ; '.'
0000000000208051         db  0x00 ; '.'
0000000000208052         db  0x00 ; '.'
0000000000208053         db  0x00 ; '.'
0000000000208054         db  0x00 ; '.'
0000000000208055         db  0x00 ; '.'
0000000000208056         db  0x00 ; '.'
0000000000208057         db  0x00 ; '.'
                     nslots:
0000000000208058         dd         0x00000001                                  ; DATA XREF=quotearg_n_options+58, quotearg_n_options+125, quotearg_n_options+158, quotearg_free, quotearg_free+133
000000000020805c         align      32
                     slotvec:
0000000000208060         dq         0x0000000000208070                          ; DATA XREF=quotearg_n_options+41, quotearg_n_options+118, quotearg_n_options+402, quotearg_free+8, quotearg_free+125
0000000000208068         db  0x00 ; '.'
0000000000208069         db  0x00 ; '.'
000000000020806a         db  0x00 ; '.'
000000000020806b         db  0x00 ; '.'
000000000020806c         db  0x00 ; '.'
000000000020806d         db  0x00 ; '.'
000000000020806e         db  0x00 ; '.'
000000000020806f         db  0x00 ; '.'
                     slotvec0:
0000000000208070         dq         1.26481e-321, 1.05245e-317                  ; DATA XREF=quotearg_n_options+84, quotearg_n_options+391, quotearg_free+87, quotearg_free+105, slotvec


        ; Section .bss
        ; Range: [0x208080; 0x208238[ (440 bytes)
        ; No data on disk
        ; Flags: 0x3
        ;   SHT_NOBITS
        ;   SHF_WRITE
        ;   SHF_ALLOC

                     program_invocation_short_name@@GLIBC_2.2.5:
0000000000208080         db  0x00 ; '.'                                         ; DATA XREF=deregister_tm_clones, deregister_tm_clones+8, register_tm_clones, register_tm_clones+7, set_program_name+102
0000000000208081         db  0x00 ; '.'
0000000000208082         db  0x00 ; '.'
0000000000208083         db  0x00 ; '.'
0000000000208084         db  0x00 ; '.'
0000000000208085         db  0x00 ; '.'
0000000000208086         db  0x00 ; '.'
0000000000208087         db  0x00 ; '.'
                     stdout@@GLIBC_2.2.5:
0000000000208088         db  0x00 ; '.'                                         ; DATA XREF=main+203, usage+125, usage+162, usage+199, usage+236, usage+273, usage+310, usage+347, usage+384, usage+1016, close_stdout+6
0000000000208089         db  0x00 ; '.'
000000000020808a         db  0x00 ; '.'
000000000020808b         db  0x00 ; '.'
000000000020808c         db  0x00 ; '.'
000000000020808d         db  0x00 ; '.'
000000000020808e         db  0x00 ; '.'
000000000020808f         db  0x00 ; '.'
                     optind@@GLIBC_2.2.5:
0000000000208090         db  0x00 ; '.'                                         ; DATA XREF=main+399, main+518, main+676, main+1003, main+1044, main+1375, main+1430, main+1553
0000000000208091         db  0x00 ; '.'
0000000000208092         db  0x00 ; '.'
0000000000208093         db  0x00 ; '.'
0000000000208094         db  0x00 ; '.'
0000000000208095         db  0x00 ; '.'
0000000000208096         db  0x00 ; '.'
0000000000208097         db  0x00 ; '.'
                     optarg@@GLIBC_2.2.5:
0000000000208098         db  0x00 ; '.'                                         ; DATA XREF=main+173, main+256
0000000000208099         db  0x00 ; '.'
000000000020809a         db  0x00 ; '.'
000000000020809b         db  0x00 ; '.'
000000000020809c         db  0x00 ; '.'
000000000020809d         db  0x00 ; '.'
000000000020809e         db  0x00 ; '.'
000000000020809f         db  0x00 ; '.'
                     __progname_full@@GLIBC_2.2.5:
00000000002080a0         db  0x00 ; '.'                                         ; DATA XREF=set_program_name+116
00000000002080a1         db  0x00 ; '.'
00000000002080a2         db  0x00 ; '.'
00000000002080a3         db  0x00 ; '.'
00000000002080a4         db  0x00 ; '.'
00000000002080a5         db  0x00 ; '.'
00000000002080a6         db  0x00 ; '.'
00000000002080a7         db  0x00 ; '.'
00000000002080a8         db  0x00 ; '.'
00000000002080a9         db  0x00 ; '.'
00000000002080aa         db  0x00 ; '.'
00000000002080ab         db  0x00 ; '.'
00000000002080ac         db  0x00 ; '.'
00000000002080ad         db  0x00 ; '.'
00000000002080ae         db  0x00 ; '.'
00000000002080af         db  0x00 ; '.'
00000000002080b0         db  0x00 ; '.'
00000000002080b1         db  0x00 ; '.'
00000000002080b2         db  0x00 ; '.'
00000000002080b3         db  0x00 ; '.'
00000000002080b4         db  0x00 ; '.'
00000000002080b5         db  0x00 ; '.'
00000000002080b6         db  0x00 ; '.'
00000000002080b7         db  0x00 ; '.'
00000000002080b8         db  0x00 ; '.'
00000000002080b9         db  0x00 ; '.'
00000000002080ba         db  0x00 ; '.'
00000000002080bb         db  0x00 ; '.'
00000000002080bc         db  0x00 ; '.'
00000000002080bd         db  0x00 ; '.'
00000000002080be         db  0x00 ; '.'
00000000002080bf         db  0x00 ; '.'
                     stderr@@GLIBC_2.2.5:
00000000002080c0         db  0x00 ; '.'                                         ; DATA XREF=main+552, usage+61, close_stdout+44, set_program_name+125
00000000002080c1         db  0x00 ; '.'
00000000002080c2         db  0x00 ; '.'
00000000002080c3         db  0x00 ; '.'
00000000002080c4         db  0x00 ; '.'
00000000002080c5         db  0x00 ; '.'
00000000002080c6         db  0x00 ; '.'
00000000002080c7         db  0x00 ; '.'
                     completed.7697:
00000000002080c8         db  0x00 ; '.'                                         ; DATA XREF=__do_global_dtors_aux, __do_global_dtors_aux+40
00000000002080c9         db  0x00 ; '.'
00000000002080ca         db  0x00 ; '.'
00000000002080cb         db  0x00 ; '.'
00000000002080cc         db  0x00 ; '.'
00000000002080cd         db  0x00 ; '.'
00000000002080ce         db  0x00 ; '.'
00000000002080cf         db  0x00 ; '.'
                     ignore_EPIPE:
00000000002080d0         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_ignore_EPIPE, close_stdout+27
00000000002080d1         db  0x00 ; '.'
00000000002080d2         db  0x00 ; '.'
00000000002080d3         db  0x00 ; '.'
00000000002080d4         db  0x00 ; '.'
00000000002080d5         db  0x00 ; '.'
00000000002080d6         db  0x00 ; '.'
00000000002080d7         db  0x00 ; '.'
                     file_name:
00000000002080d8         db  0x00 ; '.'                                         ; DATA XREF=close_stdout_set_file_name, close_stdout+86
00000000002080d9         db  0x00 ; '.'
00000000002080da         db  0x00 ; '.'
00000000002080db         db  0x00 ; '.'
00000000002080dc         db  0x00 ; '.'
00000000002080dd         db  0x00 ; '.'
00000000002080de         db  0x00 ; '.'
00000000002080df         db  0x00 ; '.'
                     program_name:
00000000002080e0         db  0x00 ; '.'                                         ; DATA XREF=usage+20, set_program_name+109
00000000002080e1         db  0x00 ; '.'
00000000002080e2         db  0x00 ; '.'
00000000002080e3         db  0x00 ; '.'
00000000002080e4         db  0x00 ; '.'
00000000002080e5         db  0x00 ; '.'
00000000002080e6         db  0x00 ; '.'
00000000002080e7         db  0x00 ; '.'
00000000002080e8         db  0x00 ; '.'
00000000002080e9         db  0x00 ; '.'
00000000002080ea         db  0x00 ; '.'
00000000002080eb         db  0x00 ; '.'
00000000002080ec         db  0x00 ; '.'
00000000002080ed         db  0x00 ; '.'
00000000002080ee         db  0x00 ; '.'
00000000002080ef         db  0x00 ; '.'
00000000002080f0         db  0x00 ; '.'
00000000002080f1         db  0x00 ; '.'
00000000002080f2         db  0x00 ; '.'
00000000002080f3         db  0x00 ; '.'
00000000002080f4         db  0x00 ; '.'
00000000002080f5         db  0x00 ; '.'
00000000002080f6         db  0x00 ; '.'
00000000002080f7         db  0x00 ; '.'
00000000002080f8         db  0x00 ; '.'
00000000002080f9         db  0x00 ; '.'
00000000002080fa         db  0x00 ; '.'
00000000002080fb         db  0x00 ; '.'
00000000002080fc         db  0x00 ; '.'
00000000002080fd         db  0x00 ; '.'
00000000002080fe         db  0x00 ; '.'
00000000002080ff         db  0x00 ; '.'
                     slot0:
0000000000208100         db  0x00 ; '.'                                         ; DATA XREF=quotearg_n_options+254, quotearg_free+70, slotvec0
0000000000208101         db  0x00 ; '.'
0000000000208102         db  0x00 ; '.'
0000000000208103         db  0x00 ; '.'
0000000000208104         db  0x00 ; '.'
0000000000208105         db  0x00 ; '.'
0000000000208106         db  0x00 ; '.'
0000000000208107         db  0x00 ; '.'
0000000000208108         db  0x00 ; '.'
0000000000208109         db  0x00 ; '.'
000000000020810a         db  0x00 ; '.'
000000000020810b         db  0x00 ; '.'
000000000020810c         db  0x00 ; '.'
000000000020810d         db  0x00 ; '.'
000000000020810e         db  0x00 ; '.'
000000000020810f         db  0x00 ; '.'
0000000000208110         db  0x00 ; '.'
0000000000208111         db  0x00 ; '.'
0000000000208112         db  0x00 ; '.'
0000000000208113         db  0x00 ; '.'
0000000000208114         db  0x00 ; '.'
0000000000208115         db  0x00 ; '.'
0000000000208116         db  0x00 ; '.'
0000000000208117         db  0x00 ; '.'
0000000000208118         db  0x00 ; '.'
0000000000208119         db  0x00 ; '.'
000000000020811a         db  0x00 ; '.'
000000000020811b         db  0x00 ; '.'
000000000020811c         db  0x00 ; '.'
000000000020811d         db  0x00 ; '.'
000000000020811e         db  0x00 ; '.'
000000000020811f         db  0x00 ; '.'
0000000000208120         db  0x00 ; '.'
0000000000208121         db  0x00 ; '.'
0000000000208122         db  0x00 ; '.'
0000000000208123         db  0x00 ; '.'
0000000000208124         db  0x00 ; '.'
0000000000208125         db  0x00 ; '.'
0000000000208126         db  0x00 ; '.'
0000000000208127         db  0x00 ; '.'
0000000000208128         db  0x00 ; '.'
0000000000208129         db  0x00 ; '.'
000000000020812a         db  0x00 ; '.'
000000000020812b         db  0x00 ; '.'
000000000020812c         db  0x00 ; '.'
000000000020812d         db  0x00 ; '.'
000000000020812e         db  0x00 ; '.'
000000000020812f         db  0x00 ; '.'
0000000000208130         db  0x00 ; '.'
0000000000208131         db  0x00 ; '.'
0000000000208132         db  0x00 ; '.'
0000000000208133         db  0x00 ; '.'
0000000000208134         db  0x00 ; '.'
0000000000208135         db  0x00 ; '.'
0000000000208136         db  0x00 ; '.'
0000000000208137         db  0x00 ; '.'
0000000000208138         db  0x00 ; '.'
0000000000208139         db  0x00 ; '.'
000000000020813a         db  0x00 ; '.'
000000000020813b         db  0x00 ; '.'
000000000020813c         db  0x00 ; '.'
000000000020813d         db  0x00 ; '.'
000000000020813e         db  0x00 ; '.'
000000000020813f         db  0x00 ; '.'
0000000000208140         db  0x00 ; '.'
0000000000208141         db  0x00 ; '.'
0000000000208142         db  0x00 ; '.'
0000000000208143         db  0x00 ; '.'
0000000000208144         db  0x00 ; '.'
0000000000208145         db  0x00 ; '.'
0000000000208146         db  0x00 ; '.'
0000000000208147         db  0x00 ; '.'
0000000000208148         db  0x00 ; '.'
0000000000208149         db  0x00 ; '.'
000000000020814a         db  0x00 ; '.'
000000000020814b         db  0x00 ; '.'
000000000020814c         db  0x00 ; '.'
000000000020814d         db  0x00 ; '.'
000000000020814e         db  0x00 ; '.'
000000000020814f         db  0x00 ; '.'
0000000000208150         db  0x00 ; '.'
0000000000208151         db  0x00 ; '.'
0000000000208152         db  0x00 ; '.'
0000000000208153         db  0x00 ; '.'
0000000000208154         db  0x00 ; '.'
0000000000208155         db  0x00 ; '.'
0000000000208156         db  0x00 ; '.'
0000000000208157         db  0x00 ; '.'
0000000000208158         db  0x00 ; '.'
0000000000208159         db  0x00 ; '.'
000000000020815a         db  0x00 ; '.'
000000000020815b         db  0x00 ; '.'
000000000020815c         db  0x00 ; '.'
000000000020815d         db  0x00 ; '.'
000000000020815e         db  0x00 ; '.'
000000000020815f         db  0x00 ; '.'
0000000000208160         db  0x00 ; '.'
0000000000208161         db  0x00 ; '.'
0000000000208162         db  0x00 ; '.'
0000000000208163         db  0x00 ; '.'
0000000000208164         db  0x00 ; '.'
0000000000208165         db  0x00 ; '.'
0000000000208166         db  0x00 ; '.'
0000000000208167         db  0x00 ; '.'
0000000000208168         db  0x00 ; '.'
0000000000208169         db  0x00 ; '.'
000000000020816a         db  0x00 ; '.'
000000000020816b         db  0x00 ; '.'
000000000020816c         db  0x00 ; '.'
000000000020816d         db  0x00 ; '.'
000000000020816e         db  0x00 ; '.'
000000000020816f         db  0x00 ; '.'
0000000000208170         db  0x00 ; '.'
0000000000208171         db  0x00 ; '.'
0000000000208172         db  0x00 ; '.'
0000000000208173         db  0x00 ; '.'
0000000000208174         db  0x00 ; '.'
0000000000208175         db  0x00 ; '.'
0000000000208176         db  0x00 ; '.'
0000000000208177         db  0x00 ; '.'
0000000000208178         db  0x00 ; '.'
0000000000208179         db  0x00 ; '.'
000000000020817a         db  0x00 ; '.'
000000000020817b         db  0x00 ; '.'
000000000020817c         db  0x00 ; '.'
000000000020817d         db  0x00 ; '.'
000000000020817e         db  0x00 ; '.'
000000000020817f         db  0x00 ; '.'
0000000000208180         db  0x00 ; '.'
0000000000208181         db  0x00 ; '.'
0000000000208182         db  0x00 ; '.'
0000000000208183         db  0x00 ; '.'
0000000000208184         db  0x00 ; '.'
0000000000208185         db  0x00 ; '.'
0000000000208186         db  0x00 ; '.'
0000000000208187         db  0x00 ; '.'
0000000000208188         db  0x00 ; '.'
0000000000208189         db  0x00 ; '.'
000000000020818a         db  0x00 ; '.'
000000000020818b         db  0x00 ; '.'
000000000020818c         db  0x00 ; '.'
000000000020818d         db  0x00 ; '.'
000000000020818e         db  0x00 ; '.'
000000000020818f         db  0x00 ; '.'
0000000000208190         db  0x00 ; '.'
0000000000208191         db  0x00 ; '.'
0000000000208192         db  0x00 ; '.'
0000000000208193         db  0x00 ; '.'
0000000000208194         db  0x00 ; '.'
0000000000208195         db  0x00 ; '.'
0000000000208196         db  0x00 ; '.'
0000000000208197         db  0x00 ; '.'
0000000000208198         db  0x00 ; '.'
0000000000208199         db  0x00 ; '.'
000000000020819a         db  0x00 ; '.'
000000000020819b         db  0x00 ; '.'
000000000020819c         db  0x00 ; '.'
000000000020819d         db  0x00 ; '.'
000000000020819e         db  0x00 ; '.'
000000000020819f         db  0x00 ; '.'
00000000002081a0         db  0x00 ; '.'
00000000002081a1         db  0x00 ; '.'
00000000002081a2         db  0x00 ; '.'
00000000002081a3         db  0x00 ; '.'
00000000002081a4         db  0x00 ; '.'
00000000002081a5         db  0x00 ; '.'
00000000002081a6         db  0x00 ; '.'
00000000002081a7         db  0x00 ; '.'
00000000002081a8         db  0x00 ; '.'
00000000002081a9         db  0x00 ; '.'
00000000002081aa         db  0x00 ; '.'
00000000002081ab         db  0x00 ; '.'
00000000002081ac         db  0x00 ; '.'
00000000002081ad         db  0x00 ; '.'
00000000002081ae         db  0x00 ; '.'
00000000002081af         db  0x00 ; '.'
00000000002081b0         db  0x00 ; '.'
00000000002081b1         db  0x00 ; '.'
00000000002081b2         db  0x00 ; '.'
00000000002081b3         db  0x00 ; '.'
00000000002081b4         db  0x00 ; '.'
00000000002081b5         db  0x00 ; '.'
00000000002081b6         db  0x00 ; '.'
00000000002081b7         db  0x00 ; '.'
00000000002081b8         db  0x00 ; '.'
00000000002081b9         db  0x00 ; '.'
00000000002081ba         db  0x00 ; '.'
00000000002081bb         db  0x00 ; '.'
00000000002081bc         db  0x00 ; '.'
00000000002081bd         db  0x00 ; '.'
00000000002081be         db  0x00 ; '.'
00000000002081bf         db  0x00 ; '.'
00000000002081c0         db  0x00 ; '.'
00000000002081c1         db  0x00 ; '.'
00000000002081c2         db  0x00 ; '.'
00000000002081c3         db  0x00 ; '.'
00000000002081c4         db  0x00 ; '.'
00000000002081c5         db  0x00 ; '.'
00000000002081c6         db  0x00 ; '.'
00000000002081c7         db  0x00 ; '.'
00000000002081c8         db  0x00 ; '.'
00000000002081c9         db  0x00 ; '.'
00000000002081ca         db  0x00 ; '.'
00000000002081cb         db  0x00 ; '.'
00000000002081cc         db  0x00 ; '.'
00000000002081cd         db  0x00 ; '.'
00000000002081ce         db  0x00 ; '.'
00000000002081cf         db  0x00 ; '.'
00000000002081d0         db  0x00 ; '.'
00000000002081d1         db  0x00 ; '.'
00000000002081d2         db  0x00 ; '.'
00000000002081d3         db  0x00 ; '.'
00000000002081d4         db  0x00 ; '.'
00000000002081d5         db  0x00 ; '.'
00000000002081d6         db  0x00 ; '.'
00000000002081d7         db  0x00 ; '.'
00000000002081d8         db  0x00 ; '.'
00000000002081d9         db  0x00 ; '.'
00000000002081da         db  0x00 ; '.'
00000000002081db         db  0x00 ; '.'
00000000002081dc         db  0x00 ; '.'
00000000002081dd         db  0x00 ; '.'
00000000002081de         db  0x00 ; '.'
00000000002081df         db  0x00 ; '.'
00000000002081e0         db  0x00 ; '.'
00000000002081e1         db  0x00 ; '.'
00000000002081e2         db  0x00 ; '.'
00000000002081e3         db  0x00 ; '.'
00000000002081e4         db  0x00 ; '.'
00000000002081e5         db  0x00 ; '.'
00000000002081e6         db  0x00 ; '.'
00000000002081e7         db  0x00 ; '.'
00000000002081e8         db  0x00 ; '.'
00000000002081e9         db  0x00 ; '.'
00000000002081ea         db  0x00 ; '.'
00000000002081eb         db  0x00 ; '.'
00000000002081ec         db  0x00 ; '.'
00000000002081ed         db  0x00 ; '.'
00000000002081ee         db  0x00 ; '.'
00000000002081ef         db  0x00 ; '.'
00000000002081f0         db  0x00 ; '.'
00000000002081f1         db  0x00 ; '.'
00000000002081f2         db  0x00 ; '.'
00000000002081f3         db  0x00 ; '.'
00000000002081f4         db  0x00 ; '.'
00000000002081f5         db  0x00 ; '.'
00000000002081f6         db  0x00 ; '.'
00000000002081f7         db  0x00 ; '.'
00000000002081f8         db  0x00 ; '.'
00000000002081f9         db  0x00 ; '.'
00000000002081fa         db  0x00 ; '.'
00000000002081fb         db  0x00 ; '.'
00000000002081fc         db  0x00 ; '.'
00000000002081fd         db  0x00 ; '.'
00000000002081fe         db  0x00 ; '.'
00000000002081ff         db  0x00 ; '.'
                     default_quoting_options:
0000000000208200         db  0x00 ; '.'                                         ; DATA XREF=clone_quoting_options+18, get_quoting_style, set_quoting_style, set_char_quoting, set_quoting_flags, set_custom_quoting, quotearg_buffer+4, quotearg_alloc_mem+4, quotearg_n, quotearg_n_mem, quotearg
0000000000208201         db  0x00 ; '.'
0000000000208202         db  0x00 ; '.'
0000000000208203         db  0x00 ; '.'
0000000000208204         db  0x00 ; '.'
0000000000208205         db  0x00 ; '.'
0000000000208206         db  0x00 ; '.'
0000000000208207         db  0x00 ; '.'
0000000000208208         db  0x00 ; '.'
0000000000208209         db  0x00 ; '.'
000000000020820a         db  0x00 ; '.'
000000000020820b         db  0x00 ; '.'
000000000020820c         db  0x00 ; '.'
000000000020820d         db  0x00 ; '.'
000000000020820e         db  0x00 ; '.'
000000000020820f         db  0x00 ; '.'
0000000000208210         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+65, quotearg_n_custom_mem+57
0000000000208211         db  0x00 ; '.'
0000000000208212         db  0x00 ; '.'
0000000000208213         db  0x00 ; '.'
0000000000208214         db  0x00 ; '.'
0000000000208215         db  0x00 ; '.'
0000000000208216         db  0x00 ; '.'
0000000000208217         db  0x00 ; '.'
0000000000208218         db  0x00 ; '.'
0000000000208219         db  0x00 ; '.'
000000000020821a         db  0x00 ; '.'
000000000020821b         db  0x00 ; '.'
000000000020821c         db  0x00 ; '.'
000000000020821d         db  0x00 ; '.'
000000000020821e         db  0x00 ; '.'
000000000020821f         db  0x00 ; '.'
0000000000208220         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+78, quotearg_n_custom_mem+70
0000000000208221         db  0x00 ; '.'
0000000000208222         db  0x00 ; '.'
0000000000208223         db  0x00 ; '.'
0000000000208224         db  0x00 ; '.'
0000000000208225         db  0x00 ; '.'
0000000000208226         db  0x00 ; '.'
0000000000208227         db  0x00 ; '.'
0000000000208228         db  0x00 ; '.'
0000000000208229         db  0x00 ; '.'
000000000020822a         db  0x00 ; '.'
000000000020822b         db  0x00 ; '.'
000000000020822c         db  0x00 ; '.'
000000000020822d         db  0x00 ; '.'
000000000020822e         db  0x00 ; '.'
000000000020822f         db  0x00 ; '.'
                     qword_208230:
0000000000208230         db  0x00 ; '.'                                         ; DATA XREF=quotearg_char_mem+22, quotearg_n_custom_mem+7
0000000000208231         db  0x00 ; '.'
0000000000208232         db  0x00 ; '.'
0000000000208233         db  0x00 ; '.'
0000000000208234         db  0x00 ; '.'
0000000000208235         db  0x00 ; '.'
0000000000208236         db  0x00 ; '.'
0000000000208237         db  0x00 ; '.'


        ; Segment External Symbols
        ; Range: [0x208240; 0x208580[ (832 bytes)
        ; No data on disk
        ; Permissions:  - 



        ; Section External Symbols Section
        ; Range: [0x208240; 0x4107c0[ (2131328 bytes)
        ; No data on disk

                             ; External Symbols Segment
                     free:
0000000000208240         extern function code                                   ; DATA XREF=free@GOT
                     abort:
0000000000208248         extern function code                                   ; DATA XREF=abort@GOT
                     __errno_location:
0000000000208250         extern function code                                   ; DATA XREF=__errno_location@GOT
                     strncmp:
0000000000208258         extern function code                                   ; DATA XREF=strncmp@GOT
                     _ITM_deregisterTMCloneTable:
0000000000208260         extern function code
                     _exit:
0000000000208268         extern function code                                   ; DATA XREF=_exit@GOT
                     __fpending:
0000000000208270         extern function code                                   ; DATA XREF=__fpending@GOT
                     textdomain:
0000000000208278         extern function code                                   ; DATA XREF=textdomain@GOT
                     fclose:
0000000000208280         extern function code                                   ; DATA XREF=fclose@GOT
                     bindtextdomain:
0000000000208288         extern function code                                   ; DATA XREF=bindtextdomain@GOT
                     dcgettext:
0000000000208290         extern function code                                   ; DATA XREF=dcgettext@GOT
                     __ctype_get_mb_cur_max:
0000000000208298         extern function code                                   ; DATA XREF=__ctype_get_mb_cur_max@GOT
                     strlen:
00000000002082a0         extern function code                                   ; DATA XREF=strlen@GOT
                     __stack_chk_fail:
00000000002082a8         extern function code                                   ; DATA XREF=__stack_chk_fail@GOT
                     getopt_long:
00000000002082b0         extern function code                                   ; DATA XREF=getopt_long@GOT
                     mbrtowc:
00000000002082b8         extern function code                                   ; DATA XREF=mbrtowc@GOT
                     strchr:
00000000002082c0         extern function code                                   ; DATA XREF=strchr@GOT
                     strrchr:
00000000002082c8         extern function code                                   ; DATA XREF=strrchr@GOT
                     lseek:
00000000002082d0         extern function code                                   ; DATA XREF=lseek@GOT
                     __assert_fail:
00000000002082d8         extern function code                                   ; DATA XREF=__assert_fail@GOT
                     __strtoul_internal:
00000000002082e0         extern function code                                   ; DATA XREF=__strtoul_internal@GOT
                     memset:
00000000002082e8         extern function code                                   ; DATA XREF=memset@GOT
                     __libc_start_main:
00000000002082f0         extern function code
                     memcmp:
00000000002082f8         extern function code                                   ; DATA XREF=memcmp@GOT
                     fputs_unlocked:
0000000000208300         extern function code                                   ; DATA XREF=fputs_unlocked@GOT
                     calloc:
0000000000208308         extern function code                                   ; DATA XREF=calloc@GOT
                     mkfifo:
0000000000208310         extern function code                                   ; DATA XREF=mkfifo@GOT
                     __gmon_start__:
0000000000208318         extern function code
                     umask:
0000000000208320         extern function code                                   ; DATA XREF=umask@GOT
                     memcpy:
0000000000208328         extern function code                                   ; DATA XREF=memcpy@GOT
                     __xmknod:
0000000000208330         extern function code                                   ; DATA XREF=__xmknod@GOT
                     fileno:
0000000000208338         extern function code                                   ; DATA XREF=fileno@GOT
                     __xstat:
0000000000208340         extern function code                                   ; DATA XREF=__xstat@GOT
                     malloc:
0000000000208348         extern function code                                   ; DATA XREF=malloc@GOT
                     fflush:
0000000000208350         extern function code                                   ; DATA XREF=fflush@GOT
                     nl_langinfo:
0000000000208358         extern function code                                   ; DATA XREF=nl_langinfo@GOT
                     __freading:
0000000000208360         extern function code                                   ; DATA XREF=__freading@GOT
                     realloc:
0000000000208368         extern function code                                   ; DATA XREF=realloc@GOT
                     setlocale:
0000000000208370         extern function code                                   ; DATA XREF=setlocale@GOT
                     __printf_chk:
0000000000208378         extern function code                                   ; DATA XREF=__printf_chk@GOT
                     chmod:
0000000000208380         extern function code                                   ; DATA XREF=chmod@GOT
                     error:
0000000000208388         extern function code                                   ; DATA XREF=error@GOT
                     fseeko:
0000000000208390         extern function code                                   ; DATA XREF=fseeko@GOT
                     __cxa_atexit:
0000000000208398         extern function code                                   ; DATA XREF=__cxa_atexit@GOT
                     exit:
00000000002083a0         extern function code                                   ; DATA XREF=exit@GOT
                     fwrite:
00000000002083a8         extern function code                                   ; DATA XREF=fwrite@GOT
                     __fprintf_chk:
00000000002083b0         extern function code                                   ; DATA XREF=__fprintf_chk@GOT
                     _ITM_registerTMCloneTable:
00000000002083b8         extern function code
                     mbsinit:
00000000002083c0         extern function code                                   ; DATA XREF=mbsinit@GOT
                     iswprint:
00000000002083c8         extern function code                                   ; DATA XREF=iswprint@GOT
                     __cxa_finalize:
00000000002083d0         extern function code
                     __ctype_b_loc:
00000000002083d8         extern function code                                   ; DATA XREF=__ctype_b_loc@GOT
                     free@@GLIBC_2.2.5:
00000000002083e0         extern function code
                     abort@@GLIBC_2.2.5:
00000000002083e8         extern function code
                     __errno_location@@GLIBC_2.2.5:
00000000002083f0         extern function code
                     strncmp@@GLIBC_2.2.5:
00000000002083f8         extern function code
                     _ITM_deregisterTMCloneTable_208400:        // _ITM_deregisterTMCloneTable
0000000000208400         extern function code
                     _exit@@GLIBC_2.2.5:
0000000000208408         extern function code
                     __fpending@@GLIBC_2.2.5:
0000000000208410         extern function code
                     textdomain@@GLIBC_2.2.5:
0000000000208418         extern function code
                     fclose@@GLIBC_2.2.5:
0000000000208420         extern function code
                     bindtextdomain@@GLIBC_2.2.5:
0000000000208428         extern function code
                     dcgettext@@GLIBC_2.2.5:
0000000000208430         extern function code
                     __ctype_get_mb_cur_max@@GLIBC_2.2.5:
0000000000208438         extern function code
                     strlen@@GLIBC_2.2.5:
0000000000208440         extern function code
                     __stack_chk_fail@@GLIBC_2.4:
0000000000208448         extern function code
                     getopt_long@@GLIBC_2.2.5:
0000000000208450         extern function code
                     mbrtowc@@GLIBC_2.2.5:
0000000000208458         extern function code
                     strchr@@GLIBC_2.2.5:
0000000000208460         extern function code
                     strrchr@@GLIBC_2.2.5:
0000000000208468         extern function code
                     lseek@@GLIBC_2.2.5:
0000000000208470         extern function code
                     __assert_fail@@GLIBC_2.2.5:
0000000000208478         extern function code
                     __strtoul_internal@@GLIBC_2.2.5:
0000000000208480         extern function code
                     memset@@GLIBC_2.2.5:
0000000000208488         extern function code
                     __libc_start_main@@GLIBC_2.2.5:
0000000000208490         extern function code
                     memcmp@@GLIBC_2.2.5:
0000000000208498         extern function code
                     fputs_unlocked@@GLIBC_2.2.5:
00000000002084a0         extern function code
                     calloc@@GLIBC_2.2.5:
00000000002084a8         extern function code
                     mkfifo@@GLIBC_2.2.5:
00000000002084b0         extern function code
                     __gmon_start___2084b8:        // __gmon_start__
00000000002084b8         extern function code
                     umask@@GLIBC_2.2.5:
00000000002084c0         extern function code
                     memcpy@@GLIBC_2.14:
00000000002084c8         extern function code
                     __xmknod@@GLIBC_2.2.5:
00000000002084d0         extern function code
                     fileno@@GLIBC_2.2.5:
00000000002084d8         extern function code
                     __xstat@@GLIBC_2.2.5:
00000000002084e0         extern function code
                     malloc@@GLIBC_2.2.5:
00000000002084e8         extern function code
                     fflush@@GLIBC_2.2.5:
00000000002084f0         extern function code
                     nl_langinfo@@GLIBC_2.2.5:
00000000002084f8         extern function code
                     __freading@@GLIBC_2.2.5:
0000000000208500         extern function code
                     realloc@@GLIBC_2.2.5:
0000000000208508         extern function code
                     setlocale@@GLIBC_2.2.5:
0000000000208510         extern function code
                     __printf_chk@@GLIBC_2.3.4:
0000000000208518         extern function code
                     chmod@@GLIBC_2.2.5:
0000000000208520         extern function code
                     error@@GLIBC_2.2.5:
0000000000208528         extern function code
                     fseeko@@GLIBC_2.2.5:
0000000000208530         extern function code
                     __cxa_atexit@@GLIBC_2.2.5:
0000000000208538         extern function code
                     exit@@GLIBC_2.2.5:
0000000000208540         extern function code
                     fwrite@@GLIBC_2.2.5:
0000000000208548         extern function code
                     __fprintf_chk@@GLIBC_2.3.4:
0000000000208550         extern function code
                     _ITM_registerTMCloneTable_208558:        // _ITM_registerTMCloneTable
0000000000208558         extern function code
                     mbsinit@@GLIBC_2.2.5:
0000000000208560         extern function code
                     iswprint@@GLIBC_2.2.5:
0000000000208568         extern function code
                     __cxa_finalize@@GLIBC_2.2.5:
0000000000208570         extern function code
                     __ctype_b_loc@@GLIBC_2.3:
0000000000208578         extern function code
